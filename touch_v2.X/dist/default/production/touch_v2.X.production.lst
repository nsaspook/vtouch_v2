

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Jan 14 16:56:28 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	idataBIGRAM,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	idataBANK0,global,class=CODE,space=0,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,space=0,delta=1,noexec
     9                           	psect	idataBANK2,global,class=CODE,space=0,delta=1,noexec
    10                           	psect	idataBANK6,global,class=CODE,space=0,delta=1,noexec
    11                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    23                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    24                           	psect	dataBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    25                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    28                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    29                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    30                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=3
    47                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    75                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    76                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    77                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    78                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    79                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1,inline
    80                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1,inline
    81                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1,inline
    82                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    83                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    84                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    85                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    86                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    87                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    88                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    89                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1
    90                           	psect	text60,global,reloc=2,class=CODE,space=0,delta=1
    91                           	psect	text61,global,reloc=2,class=CODE,space=0,delta=1
    92                           	psect	text62,global,reloc=2,class=CODE,space=0,delta=1
    93                           	psect	text63,global,reloc=2,class=CODE,space=0,delta=1
    94                           	psect	text64,global,reloc=2,class=CODE,space=0,delta=1
    95                           	psect	text65,global,reloc=2,class=CODE,space=0,delta=1
    96                           	psect	text66,global,reloc=2,class=CODE,space=0,delta=1
    97                           	psect	text67,global,reloc=2,class=CODE,space=0,delta=1
    98                           	psect	text68,global,reloc=2,class=CODE,space=0,delta=1
    99                           	psect	text69,global,reloc=2,class=CODE,space=0,delta=1
   100                           	psect	text70,global,reloc=2,class=CODE,space=0,delta=1
   101                           	psect	text71,global,reloc=2,class=CODE,space=0,delta=1
   102                           	psect	text72,global,reloc=2,class=CODE,space=0,delta=1
   103                           	psect	text73,global,reloc=2,class=CODE,space=0,delta=1
   104                           	psect	text74,global,reloc=2,class=CODE,space=0,delta=1
   105                           	psect	text75,global,reloc=2,class=CODE,space=0,delta=1
   106                           	psect	text76,global,reloc=2,class=CODE,space=0,delta=1
   107                           	psect	text77,global,reloc=2,class=CODE,space=0,delta=1
   108                           	psect	text78,global,reloc=2,class=CODE,space=0,delta=1
   109                           	psect	text79,global,reloc=2,class=CODE,space=0,delta=1
   110                           	psect	text80,global,reloc=2,class=CODE,space=0,delta=1
   111                           	psect	text81,global,reloc=2,class=CODE,space=0,delta=1
   112                           	psect	text82,global,reloc=2,class=CODE,space=0,delta=1
   113                           	psect	text83,global,reloc=2,class=CODE,space=0,delta=1
   114                           	psect	text84,global,reloc=2,class=CODE,space=0,delta=1
   115                           	psect	text85,global,reloc=2,class=CODE,space=0,delta=1
   116                           	psect	text86,global,reloc=2,class=CODE,space=0,delta=1
   117                           	psect	text87,global,reloc=2,class=CODE,space=0,delta=1
   118                           	psect	text88,global,reloc=2,class=CODE,space=0,delta=1
   119                           	psect	text89,global,reloc=2,class=CODE,space=0,delta=1
   120                           	psect	text90,global,reloc=2,class=CODE,space=0,delta=1
   121                           	psect	text91,global,reloc=2,class=CODE,space=0,delta=1
   122                           	psect	text92,global,reloc=2,class=CODE,space=0,delta=1,group=3
   123                           	psect	text93,global,reloc=2,class=CODE,space=0,delta=1,group=3
   124                           	psect	text94,global,reloc=2,class=CODE,space=0,delta=1,group=3
   125                           	psect	text95,global,reloc=2,class=CODE,space=0,delta=1,group=1
   126                           	psect	text96,global,reloc=2,class=CODE,space=0,delta=1,group=1
   127                           	psect	text97,global,reloc=2,class=CODE,space=0,delta=1,group=1
   128                           	psect	text98,global,reloc=2,class=CODE,space=0,delta=1,group=1
   129                           	psect	text99,global,reloc=2,class=CODE,space=0,delta=1,group=2
   130                           	psect	text100,global,reloc=2,class=CODE,space=0,delta=1,group=2
   131                           	psect	text101,global,reloc=2,class=CODE,space=0,delta=1,group=1
   132                           	psect	text102,global,reloc=2,class=CODE,space=0,delta=1,group=1
   133                           	psect	text103,global,reloc=2,class=CODE,space=0,delta=1,group=1
   134                           	psect	text104,global,reloc=2,class=CODE,space=0,delta=1,group=1
   135                           	psect	text105,global,reloc=2,class=CODE,space=0,delta=1,group=1
   136                           	psect	text106,global,reloc=2,class=CODE,space=0,delta=1,group=3
   137                           	psect	text107,global,reloc=2,class=CODE,space=0,delta=1,group=3
   138                           	psect	text108,global,reloc=2,class=CODE,space=0,delta=1,group=3
   139                           	psect	text109,global,reloc=2,class=CODE,space=0,delta=1,group=2
   140                           	psect	text110,global,reloc=2,class=CODE,space=0,delta=1,group=2
   141                           	psect	text111,global,reloc=2,class=CODE,space=0,delta=1,group=1
   142                           	psect	text112,global,reloc=2,class=CODE,space=0,delta=1,group=3
   143                           	psect	text113,global,reloc=2,class=CODE,space=0,delta=1
   144                           	psect	text114,global,reloc=2,class=CODE,space=0,delta=1
   145                           	psect	text115,global,reloc=2,class=CODE,space=0,delta=1
   146                           	psect	text116,global,reloc=2,class=CODE,space=0,delta=1,inline
   147                           	psect	text117,global,reloc=4,class=CODE,space=0,delta=1
   148                           	psect	text118,global,reloc=2,class=CODE,space=0,delta=1
   149                           	psect	text119,global,reloc=2,class=CODE,space=0,delta=1
   150                           	psect	text120,global,reloc=4,class=CODE,space=0,delta=1
   151                           	psect	text121,global,reloc=2,class=CODE,space=0,delta=1
   152                           	psect	text122,global,reloc=2,class=CODE,space=0,delta=1
   153                           	psect	text123,global,reloc=4,class=CODE,space=0,delta=1
   154                           	psect	text124,global,reloc=2,class=CODE,space=0,delta=1
   155                           	psect	text125,global,reloc=2,class=CODE,space=0,delta=1
   156                           	psect	text126,global,reloc=4,class=CODE,space=0,delta=1
   157                           	psect	text127,global,reloc=4,class=CODE,space=0,delta=1
   158                           	psect	text128,global,reloc=2,class=CODE,space=0,delta=1
   159                           	psect	text129,global,reloc=4,class=CODE,space=0,delta=1
   160                           	psect	text130,global,reloc=2,class=CODE,space=0,delta=1
   161                           	psect	text131,global,reloc=4,class=CODE,space=0,delta=1
   162                           	psect	text132,global,reloc=2,class=CODE,space=0,delta=1
   163                           	psect	text133,global,reloc=4,class=CODE,space=0,delta=1
   164                           	psect	text134,global,reloc=2,class=CODE,space=0,delta=1
   165                           	psect	text135,global,reloc=4,class=CODE,space=0,delta=1
   166                           	psect	text136,global,reloc=2,class=CODE,space=0,delta=1
   167                           	psect	text137,global,reloc=4,class=CODE,space=0,delta=1
   168                           	psect	text138,global,reloc=2,class=CODE,space=0,delta=1
   169                           	psect	text139,global,reloc=2,class=CODE,space=0,delta=1
   170                           	psect	text140,global,reloc=4,class=CODE,space=0,delta=1
   171                           	psect	text141,global,reloc=4,class=CODE,space=0,delta=1
   172                           	psect	text142,global,reloc=4,class=CODE,space=0,delta=1
   173                           	psect	text143,global,reloc=4,class=CODE,space=0,delta=1
   174                           	psect	text144,global,reloc=4,class=CODE,space=0,delta=1
   175                           	psect	text145,global,reloc=2,class=CODE,space=0,delta=1
   176                           	psect	text146,global,reloc=2,class=CODE,space=0,delta=1
   177                           	psect	text147,global,reloc=2,class=CODE,space=0,delta=1
   178                           	psect	ivt0x8,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
   179                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   180                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   181                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
   182                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   183                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   184   000000                     
   185                           ; Generated 13/12/2024 GMT
   186                           ; 
   187                           ; Copyright © 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
   188                           ; All rights reserved.
   189                           ; 
   190                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   191                           ; 
   192                           ; Redistribution and use in source and binary forms, with or without modification, are
   193                           ; permitted provided that the following conditions are met:
   194                           ; 
   195                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   196                           ;        conditions and the following disclaimer.
   197                           ; 
   198                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   199                           ;        of conditions and the following disclaimer in the documentation and/or other
   200                           ;        materials provided with the distribution. Publication is not required when
   201                           ;        this file is used in an embedded application.
   202                           ; 
   203                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   204                           ;        software without specific prior written permission.
   205                           ; 
   206                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   207                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   208                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   209                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   210                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   211                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   212                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   213                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   214                           ; 
   215                           ; 
   216                           ; Code-generator required, PIC18F57K42 Definitions
   217                           ; 
   218                           ; SFR Addresses
   219   003FE0                     bsr             equ	16352
   220   003FE9                     fsr0            equ	16361
   221   003FEA                     fsr0h           equ	16362
   222   003FE9                     fsr0l           equ	16361
   223   003FE1                     fsr1            equ	16353
   224   003FE2                     fsr1h           equ	16354
   225   003FE1                     fsr1l           equ	16353
   226   003FD9                     fsr2            equ	16345
   227   003FDA                     fsr2h           equ	16346
   228   003FD9                     fsr2l           equ	16345
   229   003FEF                     indf0           equ	16367
   230   003FE7                     indf1           equ	16359
   231   003FDF                     indf2           equ	16351
   232   003FD2                     intcon          equ	16338
   233   0039E5                     nvmcon          equ	14821
   234   003FF9                     pcl             equ	16377
   235   003FFA                     pclath          equ	16378
   236   003FFB                     pclatu          equ	16379
   237   003FEB                     plusw0          equ	16363
   238   003FE3                     plusw1          equ	16355
   239   003FDB                     plusw2          equ	16347
   240   003FED                     postdec0        equ	16365
   241   003FE5                     postdec1        equ	16357
   242   003FDD                     postdec2        equ	16349
   243   003FEE                     postinc0        equ	16366
   244   003FE6                     postinc1        equ	16358
   245   003FDE                     postinc2        equ	16350
   246   003FEC                     preinc0         equ	16364
   247   003FE4                     preinc1         equ	16356
   248   003FDC                     preinc2         equ	16348
   249   003FF3                     prod            equ	16371
   250   003FF4                     prodh           equ	16372
   251   003FF3                     prodl           equ	16371
   252   003FD8                     status          equ	16344
   253   003FF5                     tablat          equ	16373
   254   003FF6                     tblptr          equ	16374
   255   003FF7                     tblptrh         equ	16375
   256   003FF6                     tblptrl         equ	16374
   257   003FF8                     tblptru         equ	16376
   258   003FFD                     tosl            equ	16381
   259   003FE8                     wreg            equ	16360
   260   003880                     STATUS_CSHAD    equ	14464	;# 
   261   003881                     WREG_CSHAD      equ	14465	;# 
   262   003882                     BSR_CSHAD       equ	14466	;# 
   263   003883                     SHADCON         equ	14467	;# 
   264   003884                     STATUS_SHAD     equ	14468	;# 
   265   003885                     WREG_SHAD       equ	14469	;# 
   266   003886                     BSR_SHAD        equ	14470	;# 
   267   003887                     PCLATH_SHAD     equ	14471	;# 
   268   003888                     PCLATU_SHAD     equ	14472	;# 
   269   003889                     FSR0SH          equ	14473	;# 
   270   003889                     FSR0L_SHAD      equ	14473	;# 
   271   00388A                     FSR0H_SHAD      equ	14474	;# 
   272   00388B                     FSR1SH          equ	14475	;# 
   273   00388B                     FSR1L_SHAD      equ	14475	;# 
   274   00388C                     FSR1H_SHAD      equ	14476	;# 
   275   00388D                     FSR2SH          equ	14477	;# 
   276   00388D                     FSR2L_SHAD      equ	14477	;# 
   277   00388E                     FSR2H_SHAD      equ	14478	;# 
   278   00388F                     PRODSH          equ	14479	;# 
   279   00388F                     PRODL_SHAD      equ	14479	;# 
   280   003890                     PRODH_SHAD      equ	14480	;# 
   281   00389D                     IVTADL          equ	14493	;# 
   282   00389E                     IVTADH          equ	14494	;# 
   283   00389F                     IVTADU          equ	14495	;# 
   284   00395B                     WDTCON0         equ	14683	;# 
   285   00395C                     WDTCON1         equ	14684	;# 
   286   00395D                     WDTPSL          equ	14685	;# 
   287   00395E                     WDTPSH          equ	14686	;# 
   288   00395F                     WDTTMR          equ	14687	;# 
   289   003960                     CRCDATA         equ	14688	;# 
   290   003960                     CRCDATL         equ	14688	;# 
   291   003961                     CRCDATH         equ	14689	;# 
   292   003962                     CRCACC          equ	14690	;# 
   293   003962                     CRCACCL         equ	14690	;# 
   294   003963                     CRCACCH         equ	14691	;# 
   295   003964                     CRCSHFT         equ	14692	;# 
   296   003964                     CRCSHIFTL       equ	14692	;# 
   297   003965                     CRCSHIFTH       equ	14693	;# 
   298   003966                     CRCXOR          equ	14694	;# 
   299   003966                     CRCXORL         equ	14694	;# 
   300   003967                     CRCXORH         equ	14695	;# 
   301   003968                     CRCCON0         equ	14696	;# 
   302   003969                     CRCCON1         equ	14697	;# 
   303   003976                     SCANLADR        equ	14710	;# 
   304   003976                     SCANLADRL       equ	14710	;# 
   305   003977                     SCANLADRH       equ	14711	;# 
   306   003978                     SCANLADRU       equ	14712	;# 
   307   003979                     SCANHADR        equ	14713	;# 
   308   003979                     SCANHADRL       equ	14713	;# 
   309   00397A                     SCANHADRH       equ	14714	;# 
   310   00397B                     SCANHADRU       equ	14715	;# 
   311   00397C                     SCANCON0        equ	14716	;# 
   312   00397D                     SCANTRIG        equ	14717	;# 
   313   003980                     IPR0            equ	14720	;# 
   314   003981                     IPR1            equ	14721	;# 
   315   003982                     IPR2            equ	14722	;# 
   316   003983                     IPR3            equ	14723	;# 
   317   003984                     IPR4            equ	14724	;# 
   318   003985                     IPR5            equ	14725	;# 
   319   003986                     IPR6            equ	14726	;# 
   320   003987                     IPR7            equ	14727	;# 
   321   003988                     IPR8            equ	14728	;# 
   322   003989                     IPR9            equ	14729	;# 
   323   00398A                     IPR10           equ	14730	;# 
   324   003990                     PIE0            equ	14736	;# 
   325   003991                     PIE1            equ	14737	;# 
   326   003992                     PIE2            equ	14738	;# 
   327   003993                     PIE3            equ	14739	;# 
   328   003994                     PIE4            equ	14740	;# 
   329   003995                     PIE5            equ	14741	;# 
   330   003996                     PIE6            equ	14742	;# 
   331   003997                     PIE7            equ	14743	;# 
   332   003998                     PIE8            equ	14744	;# 
   333   003999                     PIE9            equ	14745	;# 
   334   00399A                     PIE10           equ	14746	;# 
   335   0039A0                     PIR0            equ	14752	;# 
   336   0039A1                     PIR1            equ	14753	;# 
   337   0039A2                     PIR2            equ	14754	;# 
   338   0039A3                     PIR3            equ	14755	;# 
   339   0039A4                     PIR4            equ	14756	;# 
   340   0039A5                     PIR5            equ	14757	;# 
   341   0039A6                     PIR6            equ	14758	;# 
   342   0039A7                     PIR7            equ	14759	;# 
   343   0039A8                     PIR8            equ	14760	;# 
   344   0039A9                     PIR9            equ	14761	;# 
   345   0039AA                     PIR10           equ	14762	;# 
   346   0039C0                     PMD0            equ	14784	;# 
   347   0039C1                     PMD1            equ	14785	;# 
   348   0039C2                     PMD2            equ	14786	;# 
   349   0039C3                     PMD3            equ	14787	;# 
   350   0039C4                     PMD4            equ	14788	;# 
   351   0039C5                     PMD5            equ	14789	;# 
   352   0039C6                     PMD6            equ	14790	;# 
   353   0039C7                     PMD7            equ	14791	;# 
   354   0039D0                     BORCON          equ	14800	;# 
   355   0039D1                     VREGCON         equ	14801	;# 
   356   0039D8                     CPUDOZE         equ	14808	;# 
   357   0039D9                     OSCCON1         equ	14809	;# 
   358   0039DA                     OSCCON2         equ	14810	;# 
   359   0039DB                     OSCCON3         equ	14811	;# 
   360   0039DC                     OSCSTAT         equ	14812	;# 
   361   0039DC                     OSCSTAT1        equ	14812	;# 
   362   0039DD                     OSCEN           equ	14813	;# 
   363   0039DE                     OSCTUNE         equ	14814	;# 
   364   0039DF                     OSCFRQ          equ	14815	;# 
   365   0039E0                     NVMADRL         equ	14816	;# 
   366   0039E1                     NVMADRH         equ	14817	;# 
   367   0039E3                     NVMDAT          equ	14819	;# 
   368   0039E5                     NVMCON1         equ	14821	;# 
   369   0039E6                     NVMCON2         equ	14822	;# 
   370   0039EF                     PRLOCK          equ	14831	;# 
   371   0039F1                     ISRPR           equ	14833	;# 
   372   0039F2                     MAINPR          equ	14834	;# 
   373   0039F3                     DMA1PR          equ	14835	;# 
   374   0039F4                     DMA2PR          equ	14836	;# 
   375   0039F7                     SCANPR          equ	14839	;# 
   376   003A00                     RA0PPS          equ	14848	;# 
   377   003A01                     RA1PPS          equ	14849	;# 
   378   003A02                     RA2PPS          equ	14850	;# 
   379   003A03                     RA3PPS          equ	14851	;# 
   380   003A04                     RA4PPS          equ	14852	;# 
   381   003A05                     RA5PPS          equ	14853	;# 
   382   003A06                     RA6PPS          equ	14854	;# 
   383   003A07                     RA7PPS          equ	14855	;# 
   384   003A08                     RB0PPS          equ	14856	;# 
   385   003A09                     RB1PPS          equ	14857	;# 
   386   003A0A                     RB2PPS          equ	14858	;# 
   387   003A0B                     RB3PPS          equ	14859	;# 
   388   003A0C                     RB4PPS          equ	14860	;# 
   389   003A0D                     RB5PPS          equ	14861	;# 
   390   003A0E                     RB6PPS          equ	14862	;# 
   391   003A0F                     RB7PPS          equ	14863	;# 
   392   003A10                     RC0PPS          equ	14864	;# 
   393   003A11                     RC1PPS          equ	14865	;# 
   394   003A12                     RC2PPS          equ	14866	;# 
   395   003A13                     RC3PPS          equ	14867	;# 
   396   003A14                     RC4PPS          equ	14868	;# 
   397   003A15                     RC5PPS          equ	14869	;# 
   398   003A16                     RC6PPS          equ	14870	;# 
   399   003A17                     RC7PPS          equ	14871	;# 
   400   003A18                     RD0PPS          equ	14872	;# 
   401   003A19                     RD1PPS          equ	14873	;# 
   402   003A1A                     RD2PPS          equ	14874	;# 
   403   003A1B                     RD3PPS          equ	14875	;# 
   404   003A1C                     RD4PPS          equ	14876	;# 
   405   003A1D                     RD5PPS          equ	14877	;# 
   406   003A1E                     RD6PPS          equ	14878	;# 
   407   003A1F                     RD7PPS          equ	14879	;# 
   408   003A20                     RE0PPS          equ	14880	;# 
   409   003A21                     RE1PPS          equ	14881	;# 
   410   003A22                     RE2PPS          equ	14882	;# 
   411   003A28                     RF0PPS          equ	14888	;# 
   412   003A29                     RF1PPS          equ	14889	;# 
   413   003A2A                     RF2PPS          equ	14890	;# 
   414   003A2B                     RF3PPS          equ	14891	;# 
   415   003A2C                     RF4PPS          equ	14892	;# 
   416   003A2D                     RF5PPS          equ	14893	;# 
   417   003A2E                     RF6PPS          equ	14894	;# 
   418   003A2F                     RF7PPS          equ	14895	;# 
   419   003A40                     ANSELA          equ	14912	;# 
   420   003A41                     WPUA            equ	14913	;# 
   421   003A42                     ODCONA          equ	14914	;# 
   422   003A43                     SLRCONA         equ	14915	;# 
   423   003A44                     INLVLA          equ	14916	;# 
   424   003A45                     IOCAP           equ	14917	;# 
   425   003A46                     IOCAN           equ	14918	;# 
   426   003A47                     IOCAF           equ	14919	;# 
   427   003A50                     ANSELB          equ	14928	;# 
   428   003A51                     WPUB            equ	14929	;# 
   429   003A52                     ODCONB          equ	14930	;# 
   430   003A53                     SLRCONB         equ	14931	;# 
   431   003A54                     INLVLB          equ	14932	;# 
   432   003A55                     IOCBP           equ	14933	;# 
   433   003A56                     IOCBN           equ	14934	;# 
   434   003A57                     IOCBF           equ	14935	;# 
   435   003A5A                     RB1I2C          equ	14938	;# 
   436   003A5B                     RB2I2C          equ	14939	;# 
   437   003A60                     ANSELC          equ	14944	;# 
   438   003A61                     WPUC            equ	14945	;# 
   439   003A62                     ODCONC          equ	14946	;# 
   440   003A63                     SLRCONC         equ	14947	;# 
   441   003A64                     INLVLC          equ	14948	;# 
   442   003A65                     IOCCP           equ	14949	;# 
   443   003A66                     IOCCN           equ	14950	;# 
   444   003A67                     IOCCF           equ	14951	;# 
   445   003A6A                     RC3I2C          equ	14954	;# 
   446   003A6B                     RC4I2C          equ	14955	;# 
   447   003A70                     ANSELD          equ	14960	;# 
   448   003A71                     WPUD            equ	14961	;# 
   449   003A72                     ODCOND          equ	14962	;# 
   450   003A73                     SLRCOND         equ	14963	;# 
   451   003A74                     INLVLD          equ	14964	;# 
   452   003A7A                     RD0I2C          equ	14970	;# 
   453   003A7B                     RD1I2C          equ	14971	;# 
   454   003A80                     ANSELE          equ	14976	;# 
   455   003A81                     WPUE            equ	14977	;# 
   456   003A82                     ODCONE          equ	14978	;# 
   457   003A83                     SLRCONE         equ	14979	;# 
   458   003A84                     INLVLE          equ	14980	;# 
   459   003A85                     IOCEP           equ	14981	;# 
   460   003A86                     IOCEN           equ	14982	;# 
   461   003A87                     IOCEF           equ	14983	;# 
   462   003A90                     ANSELF          equ	14992	;# 
   463   003A91                     WPUF            equ	14993	;# 
   464   003A92                     ODCONF          equ	14994	;# 
   465   003A93                     SLRCONF         equ	14995	;# 
   466   003A94                     INLVLF          equ	14996	;# 
   467   003ABF                     PPSLOCK         equ	15039	;# 
   468   003AC0                     INT0PPS         equ	15040	;# 
   469   003AC1                     INT1PPS         equ	15041	;# 
   470   003AC2                     INT2PPS         equ	15042	;# 
   471   003AC3                     T0CKIPPS        equ	15043	;# 
   472   003AC4                     T1CKIPPS        equ	15044	;# 
   473   003AC5                     T1GPPS          equ	15045	;# 
   474   003AC6                     T3CKIPPS        equ	15046	;# 
   475   003AC7                     T3GPPS          equ	15047	;# 
   476   003AC8                     T5CKIPPS        equ	15048	;# 
   477   003AC9                     T5GPPS          equ	15049	;# 
   478   003ACA                     T2INPPS         equ	15050	;# 
   479   003ACB                     T4INPPS         equ	15051	;# 
   480   003ACC                     T6INPPS         equ	15052	;# 
   481   003ACD                     CCP1PPS         equ	15053	;# 
   482   003ACE                     CCP2PPS         equ	15054	;# 
   483   003ACF                     CCP3PPS         equ	15055	;# 
   484   003AD0                     CCP4PPS         equ	15056	;# 
   485   003AD1                     SMT1WINPPS      equ	15057	;# 
   486   003AD2                     SMT1SIGPPS      equ	15058	;# 
   487   003AD3                     CWG1INPPS       equ	15059	;# 
   488   003AD4                     CWG2INPPS       equ	15060	;# 
   489   003AD5                     CWG3INPPS       equ	15061	;# 
   490   003AD6                     MD1CARLPPS      equ	15062	;# 
   491   003AD7                     MD1CARHPPS      equ	15063	;# 
   492   003AD8                     MD1SRCPPS       equ	15064	;# 
   493   003AD9                     CLCIN0PPS       equ	15065	;# 
   494   003ADA                     CLCIN1PPS       equ	15066	;# 
   495   003ADB                     CLCIN2PPS       equ	15067	;# 
   496   003ADC                     CLCIN3PPS       equ	15068	;# 
   497   003ADD                     ADACTPPS        equ	15069	;# 
   498   003ADE                     SPI1SCKPPS      equ	15070	;# 
   499   003ADF                     SPI1SDIPPS      equ	15071	;# 
   500   003AE0                     SPI1SSPPS       equ	15072	;# 
   501   003AE1                     I2C1SCLPPS      equ	15073	;# 
   502   003AE2                     I2C1SDAPPS      equ	15074	;# 
   503   003AE3                     I2C2SCLPPS      equ	15075	;# 
   504   003AE4                     I2C2SDAPPS      equ	15076	;# 
   505   003AE5                     U1RXPPS         equ	15077	;# 
   506   003AE6                     U1CTSPPS        equ	15078	;# 
   507   003AE8                     U2RXPPS         equ	15080	;# 
   508   003AE9                     U2CTSPPS        equ	15081	;# 
   509   003BC9                     DMA2BUF         equ	15305	;# 
   510   003BCA                     DMA2DCNT        equ	15306	;# 
   511   003BCA                     DMA2DCNTL       equ	15306	;# 
   512   003BCB                     DMA2DCNTH       equ	15307	;# 
   513   003BCC                     DMA2DPTR        equ	15308	;# 
   514   003BCC                     DMA2DPTRL       equ	15308	;# 
   515   003BCD                     DMA2DPTRH       equ	15309	;# 
   516   003BCE                     DMA2DSZ         equ	15310	;# 
   517   003BCE                     DMA2DSZL        equ	15310	;# 
   518   003BCF                     DMA2DSZH        equ	15311	;# 
   519   003BD0                     DMA2DSA         equ	15312	;# 
   520   003BD0                     DMA2DSAL        equ	15312	;# 
   521   003BD1                     DMA2DSAH        equ	15313	;# 
   522   003BD2                     DMA2SCNT        equ	15314	;# 
   523   003BD2                     DMA2SCNTL       equ	15314	;# 
   524   003BD3                     DMA2SCNTH       equ	15315	;# 
   525   003BD4                     DMA2SPTR        equ	15316	;# 
   526   003BD4                     DMA2SPTRL       equ	15316	;# 
   527   003BD5                     DMA2SPTRH       equ	15317	;# 
   528   003BD6                     DMA2SPTRU       equ	15318	;# 
   529   003BD7                     DMA2SSZ         equ	15319	;# 
   530   003BD7                     DMA2SSZL        equ	15319	;# 
   531   003BD8                     DMA2SSZH        equ	15320	;# 
   532   003BD9                     DMA2SSA         equ	15321	;# 
   533   003BD9                     DMA2SSAL        equ	15321	;# 
   534   003BDA                     DMA2SSAH        equ	15322	;# 
   535   003BDB                     DMA2SSAU        equ	15323	;# 
   536   003BDC                     DMA2CON0        equ	15324	;# 
   537   003BDD                     DMA2CON1        equ	15325	;# 
   538   003BDE                     DMA2AIRQ        equ	15326	;# 
   539   003BDF                     DMA2SIRQ        equ	15327	;# 
   540   003BE9                     DMA1BUF         equ	15337	;# 
   541   003BEA                     DMA1DCNT        equ	15338	;# 
   542   003BEA                     DMA1DCNTL       equ	15338	;# 
   543   003BEB                     DMA1DCNTH       equ	15339	;# 
   544   003BEC                     DMA1DPTR        equ	15340	;# 
   545   003BEC                     DMA1DPTRL       equ	15340	;# 
   546   003BED                     DMA1DPTRH       equ	15341	;# 
   547   003BEE                     DMA1DSZ         equ	15342	;# 
   548   003BEE                     DMA1DSZL        equ	15342	;# 
   549   003BEF                     DMA1DSZH        equ	15343	;# 
   550   003BF0                     DMA1DSA         equ	15344	;# 
   551   003BF0                     DMA1DSAL        equ	15344	;# 
   552   003BF1                     DMA1DSAH        equ	15345	;# 
   553   003BF2                     DMA1SCNT        equ	15346	;# 
   554   003BF2                     DMA1SCNTL       equ	15346	;# 
   555   003BF3                     DMA1SCNTH       equ	15347	;# 
   556   003BF4                     DMA1SPTR        equ	15348	;# 
   557   003BF4                     DMA1SPTRL       equ	15348	;# 
   558   003BF5                     DMA1SPTRH       equ	15349	;# 
   559   003BF6                     DMA1SPTRU       equ	15350	;# 
   560   003BF7                     DMA1SSZ         equ	15351	;# 
   561   003BF7                     DMA1SSZL        equ	15351	;# 
   562   003BF8                     DMA1SSZH        equ	15352	;# 
   563   003BF9                     DMA1SSA         equ	15353	;# 
   564   003BF9                     DMA1SSAL        equ	15353	;# 
   565   003BFA                     DMA1SSAH        equ	15354	;# 
   566   003BFB                     DMA1SSAU        equ	15355	;# 
   567   003BFC                     DMA1CON0        equ	15356	;# 
   568   003BFD                     DMA1CON1        equ	15357	;# 
   569   003BFE                     DMA1AIRQ        equ	15358	;# 
   570   003BFF                     DMA1SIRQ        equ	15359	;# 
   571   003C56                     CLC4CON         equ	15446	;# 
   572   003C57                     CLC4POL         equ	15447	;# 
   573   003C58                     CLC4SEL0        equ	15448	;# 
   574   003C59                     CLC4SEL1        equ	15449	;# 
   575   003C5A                     CLC4SEL2        equ	15450	;# 
   576   003C5B                     CLC4SEL3        equ	15451	;# 
   577   003C5C                     CLC4GLS0        equ	15452	;# 
   578   003C5D                     CLC4GLS1        equ	15453	;# 
   579   003C5E                     CLC4GLS2        equ	15454	;# 
   580   003C5F                     CLC4GLS3        equ	15455	;# 
   581   003C60                     CLC3CON         equ	15456	;# 
   582   003C61                     CLC3POL         equ	15457	;# 
   583   003C62                     CLC3SEL0        equ	15458	;# 
   584   003C63                     CLC3SEL1        equ	15459	;# 
   585   003C64                     CLC3SEL2        equ	15460	;# 
   586   003C65                     CLC3SEL3        equ	15461	;# 
   587   003C66                     CLC3GLS0        equ	15462	;# 
   588   003C67                     CLC3GLS1        equ	15463	;# 
   589   003C68                     CLC3GLS2        equ	15464	;# 
   590   003C69                     CLC3GLS3        equ	15465	;# 
   591   003C6A                     CLC2CON         equ	15466	;# 
   592   003C6B                     CLC2POL         equ	15467	;# 
   593   003C6C                     CLC2SEL0        equ	15468	;# 
   594   003C6D                     CLC2SEL1        equ	15469	;# 
   595   003C6E                     CLC2SEL2        equ	15470	;# 
   596   003C6F                     CLC2SEL3        equ	15471	;# 
   597   003C70                     CLC2GLS0        equ	15472	;# 
   598   003C71                     CLC2GLS1        equ	15473	;# 
   599   003C72                     CLC2GLS2        equ	15474	;# 
   600   003C73                     CLC2GLS3        equ	15475	;# 
   601   003C74                     CLC1CON         equ	15476	;# 
   602   003C75                     CLC1POL         equ	15477	;# 
   603   003C76                     CLC1SEL0        equ	15478	;# 
   604   003C77                     CLC1SEL1        equ	15479	;# 
   605   003C78                     CLC1SEL2        equ	15480	;# 
   606   003C79                     CLC1SEL3        equ	15481	;# 
   607   003C7A                     CLC1GLS0        equ	15482	;# 
   608   003C7B                     CLC1GLS1        equ	15483	;# 
   609   003C7C                     CLC1GLS2        equ	15484	;# 
   610   003C7D                     CLC1GLS3        equ	15485	;# 
   611   003C7E                     CLCDATA0        equ	15486	;# 
   612   003CE5                     CLKRCON         equ	15589	;# 
   613   003CE6                     CLKRCLK         equ	15590	;# 
   614   003CFA                     MD1CON0         equ	15610	;# 
   615   003CFB                     MD1CON1         equ	15611	;# 
   616   003CFC                     MD1SRC          equ	15612	;# 
   617   003CFD                     MD1CARL         equ	15613	;# 
   618   003CFE                     MD1CARH         equ	15614	;# 
   619   003D10                     SPI1RXB         equ	15632	;# 
   620   003D11                     SPI1TXB         equ	15633	;# 
   621   003D12                     SPI1TCNT        equ	15634	;# 
   622   003D12                     SPI1TCNTL       equ	15634	;# 
   623   003D13                     SPI1TCNTH       equ	15635	;# 
   624   003D14                     SPI1CON0        equ	15636	;# 
   625   003D15                     SPI1CON1        equ	15637	;# 
   626   003D16                     SPI1CON2        equ	15638	;# 
   627   003D17                     SPI1STATUS      equ	15639	;# 
   628   003D18                     SPI1TWIDTH      equ	15640	;# 
   629   003D19                     SPI1BAUD        equ	15641	;# 
   630   003D1A                     SPI1INTF        equ	15642	;# 
   631   003D1B                     SPI1INTE        equ	15643	;# 
   632   003D1C                     SPI1CLK         equ	15644	;# 
   633   003D54                     I2C2RXB         equ	15700	;# 
   634   003D55                     I2C2TXB         equ	15701	;# 
   635   003D56                     I2C2CNT         equ	15702	;# 
   636   003D57                     I2C2ADB0        equ	15703	;# 
   637   003D58                     I2C2ADB1        equ	15704	;# 
   638   003D59                     I2C2ADR0        equ	15705	;# 
   639   003D5A                     I2C2ADR1        equ	15706	;# 
   640   003D5B                     I2C2ADR2        equ	15707	;# 
   641   003D5C                     I2C2ADR3        equ	15708	;# 
   642   003D5D                     I2C2CON0        equ	15709	;# 
   643   003D5E                     I2C2CON1        equ	15710	;# 
   644   003D5F                     I2C2CON2        equ	15711	;# 
   645   003D60                     I2C2ERR         equ	15712	;# 
   646   003D61                     I2C2STAT0       equ	15713	;# 
   647   003D62                     I2C2STAT1       equ	15714	;# 
   648   003D63                     I2C2PIR         equ	15715	;# 
   649   003D64                     I2C2PIE         equ	15716	;# 
   650   003D65                     I2C2CLK         equ	15717	;# 
   651   003D66                     I2C2BTO         equ	15718	;# 
   652   003D6A                     I2C1RXB         equ	15722	;# 
   653   003D6B                     I2C1TXB         equ	15723	;# 
   654   003D6C                     I2C1CNT         equ	15724	;# 
   655   003D6D                     I2C1ADB0        equ	15725	;# 
   656   003D6E                     I2C1ADB1        equ	15726	;# 
   657   003D6F                     I2C1ADR0        equ	15727	;# 
   658   003D70                     I2C1ADR1        equ	15728	;# 
   659   003D71                     I2C1ADR2        equ	15729	;# 
   660   003D72                     I2C1ADR3        equ	15730	;# 
   661   003D73                     I2C1CON0        equ	15731	;# 
   662   003D74                     I2C1CON1        equ	15732	;# 
   663   003D75                     I2C1CON2        equ	15733	;# 
   664   003D76                     I2C1ERR         equ	15734	;# 
   665   003D77                     I2C1STAT0       equ	15735	;# 
   666   003D78                     I2C1STAT1       equ	15736	;# 
   667   003D79                     I2C1PIR         equ	15737	;# 
   668   003D7A                     I2C1PIE         equ	15738	;# 
   669   003D7B                     I2C1CLK         equ	15739	;# 
   670   003D7C                     I2C1BTO         equ	15740	;# 
   671   003DD0                     U2RXB           equ	15824	;# 
   672   003DD0                     U2RXBL          equ	15824	;# 
   673   003DD2                     U2TXB           equ	15826	;# 
   674   003DD2                     U2TXBL          equ	15826	;# 
   675   003DD4                     U2P1            equ	15828	;# 
   676   003DD4                     U2P1L           equ	15828	;# 
   677   003DD6                     U2P2            equ	15830	;# 
   678   003DD6                     U2P2L           equ	15830	;# 
   679   003DD8                     U2P3            equ	15832	;# 
   680   003DD8                     U2P3L           equ	15832	;# 
   681   003DDA                     U2CON0          equ	15834	;# 
   682   003DDB                     U2CON1          equ	15835	;# 
   683   003DDC                     U2CON2          equ	15836	;# 
   684   003DDD                     U2BRG           equ	15837	;# 
   685   003DDD                     U2BRGL          equ	15837	;# 
   686   003DDE                     U2BRGH          equ	15838	;# 
   687   003DDF                     U2FIFO          equ	15839	;# 
   688   003DE0                     U2UIR           equ	15840	;# 
   689   003DE1                     U2ERRIR         equ	15841	;# 
   690   003DE2                     U2ERRIE         equ	15842	;# 
   691   003DE8                     U1RXB           equ	15848	;# 
   692   003DE8                     U1RXBL          equ	15848	;# 
   693   003DE9                     U1RXCHK         equ	15849	;# 
   694   003DEA                     U1TXB           equ	15850	;# 
   695   003DEA                     U1TXBL          equ	15850	;# 
   696   003DEB                     U1TXCHK         equ	15851	;# 
   697   003DEC                     U1P1            equ	15852	;# 
   698   003DEC                     U1P1L           equ	15852	;# 
   699   003DED                     U1P1H           equ	15853	;# 
   700   003DEE                     U1P2            equ	15854	;# 
   701   003DEE                     U1P2L           equ	15854	;# 
   702   003DEF                     U1P2H           equ	15855	;# 
   703   003DF0                     U1P3            equ	15856	;# 
   704   003DF0                     U1P3L           equ	15856	;# 
   705   003DF1                     U1P3H           equ	15857	;# 
   706   003DF2                     U1CON0          equ	15858	;# 
   707   003DF3                     U1CON1          equ	15859	;# 
   708   003DF4                     U1CON2          equ	15860	;# 
   709   003DF5                     U1BRG           equ	15861	;# 
   710   003DF5                     U1BRGL          equ	15861	;# 
   711   003DF6                     U1BRGH          equ	15862	;# 
   712   003DF7                     U1FIFO          equ	15863	;# 
   713   003DF8                     U1UIR           equ	15864	;# 
   714   003DF9                     U1ERRIR         equ	15865	;# 
   715   003DFA                     U1ERRIE         equ	15866	;# 
   716   003E9C                     DAC1CON1        equ	16028	;# 
   717   003E9E                     DAC1CON0        equ	16030	;# 
   718   003EB8                     CM2CON0         equ	16056	;# 
   719   003EB9                     CM2CON1         equ	16057	;# 
   720   003EBA                     CM2NCH          equ	16058	;# 
   721   003EBB                     CM2PCH          equ	16059	;# 
   722   003EBC                     CM1CON0         equ	16060	;# 
   723   003EBD                     CM1CON1         equ	16061	;# 
   724   003EBE                     CM1NCH          equ	16062	;# 
   725   003EBF                     CM1PCH          equ	16063	;# 
   726   003EC0                     CMOUT           equ	16064	;# 
   727   003EC1                     FVRCON          equ	16065	;# 
   728   003EC3                     ZCDCON          equ	16067	;# 
   729   003EC9                     HLVDCON0        equ	16073	;# 
   730   003ECA                     HLVDCON1        equ	16074	;# 
   731   003ED7                     ADCP            equ	16087	;# 
   732   003EDE                     ADLTH           equ	16094	;# 
   733   003EDE                     ADLTHL          equ	16094	;# 
   734   003EDF                     ADLTHH          equ	16095	;# 
   735   003EE0                     ADUTH           equ	16096	;# 
   736   003EE0                     ADUTHL          equ	16096	;# 
   737   003EE1                     ADUTHH          equ	16097	;# 
   738   003EE2                     ADERR           equ	16098	;# 
   739   003EE2                     ADERRL          equ	16098	;# 
   740   003EE3                     ADERRH          equ	16099	;# 
   741   003EE4                     ADSTPT          equ	16100	;# 
   742   003EE4                     ADSTPTL         equ	16100	;# 
   743   003EE5                     ADSTPTH         equ	16101	;# 
   744   003EE6                     ADFLTR          equ	16102	;# 
   745   003EE6                     ADFLTRL         equ	16102	;# 
   746   003EE7                     ADFLTRH         equ	16103	;# 
   747   003EE8                     ADACC           equ	16104	;# 
   748   003EE8                     ADACCL          equ	16104	;# 
   749   003EE9                     ADACCH          equ	16105	;# 
   750   003EEA                     ADACCU          equ	16106	;# 
   751   003EEB                     ADCNT           equ	16107	;# 
   752   003EEC                     ADRPT           equ	16108	;# 
   753   003EED                     ADPREV          equ	16109	;# 
   754   003EED                     ADPREVL         equ	16109	;# 
   755   003EEE                     ADPREVH         equ	16110	;# 
   756   003EEF                     ADRES           equ	16111	;# 
   757   003EEF                     ADRESL          equ	16111	;# 
   758   003EF0                     ADRESH          equ	16112	;# 
   759   003EF1                     ADPCH           equ	16113	;# 
   760   003EF3                     ADACQ           equ	16115	;# 
   761   003EF3                     ADACQL          equ	16115	;# 
   762   003EF4                     ADACQH          equ	16116	;# 
   763   003EF5                     ADCAP           equ	16117	;# 
   764   003EF6                     ADPRE           equ	16118	;# 
   765   003EF6                     ADPREL          equ	16118	;# 
   766   003EF7                     ADPREH          equ	16119	;# 
   767   003EF8                     ADCON0          equ	16120	;# 
   768   003EF9                     ADCON1          equ	16121	;# 
   769   003EFA                     ADCON2          equ	16122	;# 
   770   003EFB                     ADCON3          equ	16123	;# 
   771   003EFC                     ADSTAT          equ	16124	;# 
   772   003EFD                     ADREF           equ	16125	;# 
   773   003EFE                     ADACT           equ	16126	;# 
   774   003EFF                     ADCLK           equ	16127	;# 
   775   003F12                     SMT1TMR         equ	16146	;# 
   776   003F12                     SMT1TMRL        equ	16146	;# 
   777   003F13                     SMT1TMRH        equ	16147	;# 
   778   003F14                     SMT1TMRU        equ	16148	;# 
   779   003F15                     SMT1CPR         equ	16149	;# 
   780   003F15                     SMT1CPRL        equ	16149	;# 
   781   003F16                     SMT1CPRH        equ	16150	;# 
   782   003F17                     SMT1CPRU        equ	16151	;# 
   783   003F18                     SMT1CPW         equ	16152	;# 
   784   003F18                     SMT1CPWL        equ	16152	;# 
   785   003F19                     SMT1CPWH        equ	16153	;# 
   786   003F1A                     SMT1CPWU        equ	16154	;# 
   787   003F1B                     SMT1PR          equ	16155	;# 
   788   003F1B                     SMT1PRL         equ	16155	;# 
   789   003F1C                     SMT1PRH         equ	16156	;# 
   790   003F1D                     SMT1PRU         equ	16157	;# 
   791   003F1E                     SMT1CON0        equ	16158	;# 
   792   003F1F                     SMT1CON1        equ	16159	;# 
   793   003F20                     SMT1STAT        equ	16160	;# 
   794   003F21                     SMT1CLK         equ	16161	;# 
   795   003F22                     SMT1SIG         equ	16162	;# 
   796   003F23                     SMT1WIN         equ	16163	;# 
   797   003F38                     NCO1ACC         equ	16184	;# 
   798   003F38                     NCO1ACCL        equ	16184	;# 
   799   003F39                     NCO1ACCH        equ	16185	;# 
   800   003F3A                     NCO1ACCU        equ	16186	;# 
   801   003F3B                     NCO1INC         equ	16187	;# 
   802   003F3B                     NCO1INCL        equ	16187	;# 
   803   003F3C                     NCO1INCH        equ	16188	;# 
   804   003F3D                     NCO1INCU        equ	16189	;# 
   805   003F3E                     NCO1CON         equ	16190	;# 
   806   003F3F                     NCO1CLK         equ	16191	;# 
   807   003F40                     CWG3CLK         equ	16192	;# 
   808   003F40                     CWG3CLKCON      equ	16192	;# 
   809   003F41                     CWG3ISM         equ	16193	;# 
   810   003F41                     CWG3DAT         equ	16193	;# 
   811   003F42                     CWG3DBR         equ	16194	;# 
   812   003F43                     CWG3DBF         equ	16195	;# 
   813   003F44                     CWG3CON0        equ	16196	;# 
   814   003F45                     CWG3CON1        equ	16197	;# 
   815   003F46                     CWG3AS0         equ	16198	;# 
   816   003F47                     CWG3AS1         equ	16199	;# 
   817   003F48                     CWG3STR         equ	16200	;# 
   818   003F49                     CWG2CLK         equ	16201	;# 
   819   003F49                     CWG2CLKCON      equ	16201	;# 
   820   003F4A                     CWG2ISM         equ	16202	;# 
   821   003F4A                     CWG2DAT         equ	16202	;# 
   822   003F4B                     CWG2DBR         equ	16203	;# 
   823   003F4C                     CWG2DBF         equ	16204	;# 
   824   003F4D                     CWG2CON0        equ	16205	;# 
   825   003F4E                     CWG2CON1        equ	16206	;# 
   826   003F4F                     CWG2AS0         equ	16207	;# 
   827   003F50                     CWG2AS1         equ	16208	;# 
   828   003F51                     CWG2STR         equ	16209	;# 
   829   003F52                     CWG1CLK         equ	16210	;# 
   830   003F52                     CWG1CLKCON      equ	16210	;# 
   831   003F53                     CWG1ISM         equ	16211	;# 
   832   003F53                     CWG1DAT         equ	16211	;# 
   833   003F54                     CWG1DBR         equ	16212	;# 
   834   003F55                     CWG1DBF         equ	16213	;# 
   835   003F56                     CWG1CON0        equ	16214	;# 
   836   003F57                     CWG1CON1        equ	16215	;# 
   837   003F58                     CWG1AS0         equ	16216	;# 
   838   003F59                     CWG1AS1         equ	16217	;# 
   839   003F5A                     CWG1STR         equ	16218	;# 
   840   003F5E                     CCPTMRS0        equ	16222	;# 
   841   003F5F                     CCPTMRS1        equ	16223	;# 
   842   003F60                     PWM8DC          equ	16224	;# 
   843   003F60                     PWM8DCL         equ	16224	;# 
   844   003F61                     PWM8DCH         equ	16225	;# 
   845   003F62                     PWM8CON         equ	16226	;# 
   846   003F64                     PWM7DC          equ	16228	;# 
   847   003F64                     PWM7DCL         equ	16228	;# 
   848   003F65                     PWM7DCH         equ	16229	;# 
   849   003F66                     PWM7CON         equ	16230	;# 
   850   003F68                     PWM6DC          equ	16232	;# 
   851   003F68                     PWM6DCL         equ	16232	;# 
   852   003F69                     PWM6DCH         equ	16233	;# 
   853   003F6A                     PWM6CON         equ	16234	;# 
   854   003F6C                     PWM5DC          equ	16236	;# 
   855   003F6C                     PWM5DCL         equ	16236	;# 
   856   003F6D                     PWM5DCH         equ	16237	;# 
   857   003F6E                     PWM5CON         equ	16238	;# 
   858   003F70                     CCPR4           equ	16240	;# 
   859   003F70                     CCPR4L          equ	16240	;# 
   860   003F71                     CCPR4H          equ	16241	;# 
   861   003F72                     CCP4CON         equ	16242	;# 
   862   003F73                     CCP4CAP         equ	16243	;# 
   863   003F74                     CCPR3           equ	16244	;# 
   864   003F74                     CCPR3L          equ	16244	;# 
   865   003F75                     CCPR3H          equ	16245	;# 
   866   003F76                     CCP3CON         equ	16246	;# 
   867   003F77                     CCP3CAP         equ	16247	;# 
   868   003F78                     CCPR2           equ	16248	;# 
   869   003F78                     CCPR2L          equ	16248	;# 
   870   003F79                     CCPR2H          equ	16249	;# 
   871   003F7A                     CCP2CON         equ	16250	;# 
   872   003F7B                     CCP2CAP         equ	16251	;# 
   873   003F7C                     CCPR1           equ	16252	;# 
   874   003F7C                     CCPR1L          equ	16252	;# 
   875   003F7D                     CCPR1H          equ	16253	;# 
   876   003F7E                     CCP1CON         equ	16254	;# 
   877   003F7F                     CCP1CAP         equ	16255	;# 
   878   003F92                     T6TMR           equ	16274	;# 
   879   003F92                     TMR6            equ	16274	;# 
   880   003F93                     T6PR            equ	16275	;# 
   881   003F93                     PR6             equ	16275	;# 
   882   003F94                     T6CON           equ	16276	;# 
   883   003F95                     T6HLT           equ	16277	;# 
   884   003F96                     T6CLKCON        equ	16278	;# 
   885   003F96                     T6CLK           equ	16278	;# 
   886   003F97                     T6RST           equ	16279	;# 
   887   003F98                     TMR5            equ	16280	;# 
   888   003F98                     TMR5L           equ	16280	;# 
   889   003F99                     TMR5H           equ	16281	;# 
   890   003F9A                     T5CON           equ	16282	;# 
   891   003F9A                     TMR5CON         equ	16282	;# 
   892   003F9B                     T5GCON          equ	16283	;# 
   893   003F9B                     TMR5GCON        equ	16283	;# 
   894   003F9C                     T5GATE          equ	16284	;# 
   895   003F9C                     TMR5GATE        equ	16284	;# 
   896   003F9D                     T5CLK           equ	16285	;# 
   897   003F9D                     TMR5CLK         equ	16285	;# 
   898   003F9D                     PR5             equ	16285	;# 
   899   003F9E                     T4TMR           equ	16286	;# 
   900   003F9E                     TMR4            equ	16286	;# 
   901   003F9F                     T4PR            equ	16287	;# 
   902   003F9F                     PR4             equ	16287	;# 
   903   003FA0                     T4CON           equ	16288	;# 
   904   003FA1                     T4HLT           equ	16289	;# 
   905   003FA2                     T4CLKCON        equ	16290	;# 
   906   003FA2                     T4CLK           equ	16290	;# 
   907   003FA3                     T4RST           equ	16291	;# 
   908   003FA4                     TMR3            equ	16292	;# 
   909   003FA4                     TMR3L           equ	16292	;# 
   910   003FA5                     TMR3H           equ	16293	;# 
   911   003FA6                     T3CON           equ	16294	;# 
   912   003FA6                     TMR3CON         equ	16294	;# 
   913   003FA7                     T3GCON          equ	16295	;# 
   914   003FA7                     TMR3GCON        equ	16295	;# 
   915   003FA8                     T3GATE          equ	16296	;# 
   916   003FA8                     TMR3GATE        equ	16296	;# 
   917   003FA9                     T3CLK           equ	16297	;# 
   918   003FA9                     TMR3CLK         equ	16297	;# 
   919   003FA9                     PR3             equ	16297	;# 
   920   003FAA                     T2TMR           equ	16298	;# 
   921   003FAA                     TMR2            equ	16298	;# 
   922   003FAB                     T2PR            equ	16299	;# 
   923   003FAB                     PR2             equ	16299	;# 
   924   003FAC                     T2CON           equ	16300	;# 
   925   003FAD                     T2HLT           equ	16301	;# 
   926   003FAE                     T2CLKCON        equ	16302	;# 
   927   003FAE                     T2CLK           equ	16302	;# 
   928   003FAF                     T2RST           equ	16303	;# 
   929   003FB0                     TMR1            equ	16304	;# 
   930   003FB0                     TMR1L           equ	16304	;# 
   931   003FB1                     TMR1H           equ	16305	;# 
   932   003FB2                     T1CON           equ	16306	;# 
   933   003FB2                     TMR1CON         equ	16306	;# 
   934   003FB3                     T1GCON          equ	16307	;# 
   935   003FB3                     TMR1GCON        equ	16307	;# 
   936   003FB4                     T1GATE          equ	16308	;# 
   937   003FB4                     TMR1GATE        equ	16308	;# 
   938   003FB5                     T1CLK           equ	16309	;# 
   939   003FB5                     TMR1CLK         equ	16309	;# 
   940   003FB5                     PR1             equ	16309	;# 
   941   003FB6                     TMR0L           equ	16310	;# 
   942   003FB6                     TMR0            equ	16310	;# 
   943   003FB7                     TMR0H           equ	16311	;# 
   944   003FB7                     PR0             equ	16311	;# 
   945   003FB8                     T0CON0          equ	16312	;# 
   946   003FB9                     T0CON1          equ	16313	;# 
   947   003FBA                     LATA            equ	16314	;# 
   948   003FBB                     LATB            equ	16315	;# 
   949   003FBC                     LATC            equ	16316	;# 
   950   003FBD                     LATD            equ	16317	;# 
   951   003FBE                     LATE            equ	16318	;# 
   952   003FBF                     LATF            equ	16319	;# 
   953   003FC2                     TRISA           equ	16322	;# 
   954   003FC3                     TRISB           equ	16323	;# 
   955   003FC4                     TRISC           equ	16324	;# 
   956   003FC5                     TRISD           equ	16325	;# 
   957   003FC6                     TRISE           equ	16326	;# 
   958   003FC7                     TRISF           equ	16327	;# 
   959   003FCA                     PORTA           equ	16330	;# 
   960   003FCB                     PORTB           equ	16331	;# 
   961   003FCC                     PORTC           equ	16332	;# 
   962   003FCD                     PORTD           equ	16333	;# 
   963   003FCE                     PORTE           equ	16334	;# 
   964   003FCF                     PORTF           equ	16335	;# 
   965   003FD2                     INTCON0         equ	16338	;# 
   966   003FD3                     INTCON1         equ	16339	;# 
   967   003FD4                     IVTLOCK         equ	16340	;# 
   968   003FD5                     IVTBASE         equ	16341	;# 
   969   003FD5                     IVTBASEL        equ	16341	;# 
   970   003FD6                     IVTBASEH        equ	16342	;# 
   971   003FD7                     IVTBASEU        equ	16343	;# 
   972   003FD8                     STATUS          equ	16344	;# 
   973   003FD9                     FSR2            equ	16345	;# 
   974   003FD9                     FSR2L           equ	16345	;# 
   975   003FDA                     FSR2H           equ	16346	;# 
   976   003FDB                     PLUSW2          equ	16347	;# 
   977   003FDC                     PREINC2         equ	16348	;# 
   978   003FDD                     POSTDEC2        equ	16349	;# 
   979   003FDE                     POSTINC2        equ	16350	;# 
   980   003FDF                     INDF2           equ	16351	;# 
   981   003FE0                     BSR             equ	16352	;# 
   982   003FE1                     FSR1            equ	16353	;# 
   983   003FE1                     FSR1L           equ	16353	;# 
   984   003FE2                     FSR1H           equ	16354	;# 
   985   003FE3                     PLUSW1          equ	16355	;# 
   986   003FE4                     PREINC1         equ	16356	;# 
   987   003FE5                     POSTDEC1        equ	16357	;# 
   988   003FE6                     POSTINC1        equ	16358	;# 
   989   003FE7                     INDF1           equ	16359	;# 
   990   003FE8                     WREG            equ	16360	;# 
   991   003FE9                     FSR0            equ	16361	;# 
   992   003FE9                     FSR0L           equ	16361	;# 
   993   003FEA                     FSR0H           equ	16362	;# 
   994   003FEB                     PLUSW0          equ	16363	;# 
   995   003FEC                     PREINC0         equ	16364	;# 
   996   003FED                     POSTDEC0        equ	16365	;# 
   997   003FEE                     POSTINC0        equ	16366	;# 
   998   003FEF                     INDF0           equ	16367	;# 
   999   003FF0                     PCON0           equ	16368	;# 
  1000   003FF1                     PCON1           equ	16369	;# 
  1001   003FF3                     PROD            equ	16371	;# 
  1002   003FF3                     PRODL           equ	16371	;# 
  1003   003FF4                     PRODH           equ	16372	;# 
  1004   003FF5                     TABLAT          equ	16373	;# 
  1005   003FF6                     TBLPTR          equ	16374	;# 
  1006   003FF6                     TBLPTRL         equ	16374	;# 
  1007   003FF7                     TBLPTRH         equ	16375	;# 
  1008   003FF8                     TBLPTRU         equ	16376	;# 
  1009   003FF9                     PCLAT           equ	16377	;# 
  1010   003FF9                     PCL             equ	16377	;# 
  1011   003FFA                     PCLATH          equ	16378	;# 
  1012   003FFB                     PCLATU          equ	16379	;# 
  1013   003FFC                     STKPTR          equ	16380	;# 
  1014   003FFD                     TOS             equ	16381	;# 
  1015   003FFD                     TOSL            equ	16381	;# 
  1016   003FFE                     TOSH            equ	16382	;# 
  1017   003FFF                     TOSU            equ	16383	;# 
  1018   003880                     STATUS_CSHAD    equ	14464	;# 
  1019   003881                     WREG_CSHAD      equ	14465	;# 
  1020   003882                     BSR_CSHAD       equ	14466	;# 
  1021   003883                     SHADCON         equ	14467	;# 
  1022   003884                     STATUS_SHAD     equ	14468	;# 
  1023   003885                     WREG_SHAD       equ	14469	;# 
  1024   003886                     BSR_SHAD        equ	14470	;# 
  1025   003887                     PCLATH_SHAD     equ	14471	;# 
  1026   003888                     PCLATU_SHAD     equ	14472	;# 
  1027   003889                     FSR0SH          equ	14473	;# 
  1028   003889                     FSR0L_SHAD      equ	14473	;# 
  1029   00388A                     FSR0H_SHAD      equ	14474	;# 
  1030   00388B                     FSR1SH          equ	14475	;# 
  1031   00388B                     FSR1L_SHAD      equ	14475	;# 
  1032   00388C                     FSR1H_SHAD      equ	14476	;# 
  1033   00388D                     FSR2SH          equ	14477	;# 
  1034   00388D                     FSR2L_SHAD      equ	14477	;# 
  1035   00388E                     FSR2H_SHAD      equ	14478	;# 
  1036   00388F                     PRODSH          equ	14479	;# 
  1037   00388F                     PRODL_SHAD      equ	14479	;# 
  1038   003890                     PRODH_SHAD      equ	14480	;# 
  1039   00389D                     IVTADL          equ	14493	;# 
  1040   00389E                     IVTADH          equ	14494	;# 
  1041   00389F                     IVTADU          equ	14495	;# 
  1042   00395B                     WDTCON0         equ	14683	;# 
  1043   00395C                     WDTCON1         equ	14684	;# 
  1044   00395D                     WDTPSL          equ	14685	;# 
  1045   00395E                     WDTPSH          equ	14686	;# 
  1046   00395F                     WDTTMR          equ	14687	;# 
  1047   003960                     CRCDATA         equ	14688	;# 
  1048   003960                     CRCDATL         equ	14688	;# 
  1049   003961                     CRCDATH         equ	14689	;# 
  1050   003962                     CRCACC          equ	14690	;# 
  1051   003962                     CRCACCL         equ	14690	;# 
  1052   003963                     CRCACCH         equ	14691	;# 
  1053   003964                     CRCSHFT         equ	14692	;# 
  1054   003964                     CRCSHIFTL       equ	14692	;# 
  1055   003965                     CRCSHIFTH       equ	14693	;# 
  1056   003966                     CRCXOR          equ	14694	;# 
  1057   003966                     CRCXORL         equ	14694	;# 
  1058   003967                     CRCXORH         equ	14695	;# 
  1059   003968                     CRCCON0         equ	14696	;# 
  1060   003969                     CRCCON1         equ	14697	;# 
  1061   003976                     SCANLADR        equ	14710	;# 
  1062   003976                     SCANLADRL       equ	14710	;# 
  1063   003977                     SCANLADRH       equ	14711	;# 
  1064   003978                     SCANLADRU       equ	14712	;# 
  1065   003979                     SCANHADR        equ	14713	;# 
  1066   003979                     SCANHADRL       equ	14713	;# 
  1067   00397A                     SCANHADRH       equ	14714	;# 
  1068   00397B                     SCANHADRU       equ	14715	;# 
  1069   00397C                     SCANCON0        equ	14716	;# 
  1070   00397D                     SCANTRIG        equ	14717	;# 
  1071   003980                     IPR0            equ	14720	;# 
  1072   003981                     IPR1            equ	14721	;# 
  1073   003982                     IPR2            equ	14722	;# 
  1074   003983                     IPR3            equ	14723	;# 
  1075   003984                     IPR4            equ	14724	;# 
  1076   003985                     IPR5            equ	14725	;# 
  1077   003986                     IPR6            equ	14726	;# 
  1078   003987                     IPR7            equ	14727	;# 
  1079   003988                     IPR8            equ	14728	;# 
  1080   003989                     IPR9            equ	14729	;# 
  1081   00398A                     IPR10           equ	14730	;# 
  1082   003990                     PIE0            equ	14736	;# 
  1083   003991                     PIE1            equ	14737	;# 
  1084   003992                     PIE2            equ	14738	;# 
  1085   003993                     PIE3            equ	14739	;# 
  1086   003994                     PIE4            equ	14740	;# 
  1087   003995                     PIE5            equ	14741	;# 
  1088   003996                     PIE6            equ	14742	;# 
  1089   003997                     PIE7            equ	14743	;# 
  1090   003998                     PIE8            equ	14744	;# 
  1091   003999                     PIE9            equ	14745	;# 
  1092   00399A                     PIE10           equ	14746	;# 
  1093   0039A0                     PIR0            equ	14752	;# 
  1094   0039A1                     PIR1            equ	14753	;# 
  1095   0039A2                     PIR2            equ	14754	;# 
  1096   0039A3                     PIR3            equ	14755	;# 
  1097   0039A4                     PIR4            equ	14756	;# 
  1098   0039A5                     PIR5            equ	14757	;# 
  1099   0039A6                     PIR6            equ	14758	;# 
  1100   0039A7                     PIR7            equ	14759	;# 
  1101   0039A8                     PIR8            equ	14760	;# 
  1102   0039A9                     PIR9            equ	14761	;# 
  1103   0039AA                     PIR10           equ	14762	;# 
  1104   0039C0                     PMD0            equ	14784	;# 
  1105   0039C1                     PMD1            equ	14785	;# 
  1106   0039C2                     PMD2            equ	14786	;# 
  1107   0039C3                     PMD3            equ	14787	;# 
  1108   0039C4                     PMD4            equ	14788	;# 
  1109   0039C5                     PMD5            equ	14789	;# 
  1110   0039C6                     PMD6            equ	14790	;# 
  1111   0039C7                     PMD7            equ	14791	;# 
  1112   0039D0                     BORCON          equ	14800	;# 
  1113   0039D1                     VREGCON         equ	14801	;# 
  1114   0039D8                     CPUDOZE         equ	14808	;# 
  1115   0039D9                     OSCCON1         equ	14809	;# 
  1116   0039DA                     OSCCON2         equ	14810	;# 
  1117   0039DB                     OSCCON3         equ	14811	;# 
  1118   0039DC                     OSCSTAT         equ	14812	;# 
  1119   0039DC                     OSCSTAT1        equ	14812	;# 
  1120   0039DD                     OSCEN           equ	14813	;# 
  1121   0039DE                     OSCTUNE         equ	14814	;# 
  1122   0039DF                     OSCFRQ          equ	14815	;# 
  1123   0039E0                     NVMADRL         equ	14816	;# 
  1124   0039E1                     NVMADRH         equ	14817	;# 
  1125   0039E3                     NVMDAT          equ	14819	;# 
  1126   0039E5                     NVMCON1         equ	14821	;# 
  1127   0039E6                     NVMCON2         equ	14822	;# 
  1128   0039EF                     PRLOCK          equ	14831	;# 
  1129   0039F1                     ISRPR           equ	14833	;# 
  1130   0039F2                     MAINPR          equ	14834	;# 
  1131   0039F3                     DMA1PR          equ	14835	;# 
  1132   0039F4                     DMA2PR          equ	14836	;# 
  1133   0039F7                     SCANPR          equ	14839	;# 
  1134   003A00                     RA0PPS          equ	14848	;# 
  1135   003A01                     RA1PPS          equ	14849	;# 
  1136   003A02                     RA2PPS          equ	14850	;# 
  1137   003A03                     RA3PPS          equ	14851	;# 
  1138   003A04                     RA4PPS          equ	14852	;# 
  1139   003A05                     RA5PPS          equ	14853	;# 
  1140   003A06                     RA6PPS          equ	14854	;# 
  1141   003A07                     RA7PPS          equ	14855	;# 
  1142   003A08                     RB0PPS          equ	14856	;# 
  1143   003A09                     RB1PPS          equ	14857	;# 
  1144   003A0A                     RB2PPS          equ	14858	;# 
  1145   003A0B                     RB3PPS          equ	14859	;# 
  1146   003A0C                     RB4PPS          equ	14860	;# 
  1147   003A0D                     RB5PPS          equ	14861	;# 
  1148   003A0E                     RB6PPS          equ	14862	;# 
  1149   003A0F                     RB7PPS          equ	14863	;# 
  1150   003A10                     RC0PPS          equ	14864	;# 
  1151   003A11                     RC1PPS          equ	14865	;# 
  1152   003A12                     RC2PPS          equ	14866	;# 
  1153   003A13                     RC3PPS          equ	14867	;# 
  1154   003A14                     RC4PPS          equ	14868	;# 
  1155   003A15                     RC5PPS          equ	14869	;# 
  1156   003A16                     RC6PPS          equ	14870	;# 
  1157   003A17                     RC7PPS          equ	14871	;# 
  1158   003A18                     RD0PPS          equ	14872	;# 
  1159   003A19                     RD1PPS          equ	14873	;# 
  1160   003A1A                     RD2PPS          equ	14874	;# 
  1161   003A1B                     RD3PPS          equ	14875	;# 
  1162   003A1C                     RD4PPS          equ	14876	;# 
  1163   003A1D                     RD5PPS          equ	14877	;# 
  1164   003A1E                     RD6PPS          equ	14878	;# 
  1165   003A1F                     RD7PPS          equ	14879	;# 
  1166   003A20                     RE0PPS          equ	14880	;# 
  1167   003A21                     RE1PPS          equ	14881	;# 
  1168   003A22                     RE2PPS          equ	14882	;# 
  1169   003A28                     RF0PPS          equ	14888	;# 
  1170   003A29                     RF1PPS          equ	14889	;# 
  1171   003A2A                     RF2PPS          equ	14890	;# 
  1172   003A2B                     RF3PPS          equ	14891	;# 
  1173   003A2C                     RF4PPS          equ	14892	;# 
  1174   003A2D                     RF5PPS          equ	14893	;# 
  1175   003A2E                     RF6PPS          equ	14894	;# 
  1176   003A2F                     RF7PPS          equ	14895	;# 
  1177   003A40                     ANSELA          equ	14912	;# 
  1178   003A41                     WPUA            equ	14913	;# 
  1179   003A42                     ODCONA          equ	14914	;# 
  1180   003A43                     SLRCONA         equ	14915	;# 
  1181   003A44                     INLVLA          equ	14916	;# 
  1182   003A45                     IOCAP           equ	14917	;# 
  1183   003A46                     IOCAN           equ	14918	;# 
  1184   003A47                     IOCAF           equ	14919	;# 
  1185   003A50                     ANSELB          equ	14928	;# 
  1186   003A51                     WPUB            equ	14929	;# 
  1187   003A52                     ODCONB          equ	14930	;# 
  1188   003A53                     SLRCONB         equ	14931	;# 
  1189   003A54                     INLVLB          equ	14932	;# 
  1190   003A55                     IOCBP           equ	14933	;# 
  1191   003A56                     IOCBN           equ	14934	;# 
  1192   003A57                     IOCBF           equ	14935	;# 
  1193   003A5A                     RB1I2C          equ	14938	;# 
  1194   003A5B                     RB2I2C          equ	14939	;# 
  1195   003A60                     ANSELC          equ	14944	;# 
  1196   003A61                     WPUC            equ	14945	;# 
  1197   003A62                     ODCONC          equ	14946	;# 
  1198   003A63                     SLRCONC         equ	14947	;# 
  1199   003A64                     INLVLC          equ	14948	;# 
  1200   003A65                     IOCCP           equ	14949	;# 
  1201   003A66                     IOCCN           equ	14950	;# 
  1202   003A67                     IOCCF           equ	14951	;# 
  1203   003A6A                     RC3I2C          equ	14954	;# 
  1204   003A6B                     RC4I2C          equ	14955	;# 
  1205   003A70                     ANSELD          equ	14960	;# 
  1206   003A71                     WPUD            equ	14961	;# 
  1207   003A72                     ODCOND          equ	14962	;# 
  1208   003A73                     SLRCOND         equ	14963	;# 
  1209   003A74                     INLVLD          equ	14964	;# 
  1210   003A7A                     RD0I2C          equ	14970	;# 
  1211   003A7B                     RD1I2C          equ	14971	;# 
  1212   003A80                     ANSELE          equ	14976	;# 
  1213   003A81                     WPUE            equ	14977	;# 
  1214   003A82                     ODCONE          equ	14978	;# 
  1215   003A83                     SLRCONE         equ	14979	;# 
  1216   003A84                     INLVLE          equ	14980	;# 
  1217   003A85                     IOCEP           equ	14981	;# 
  1218   003A86                     IOCEN           equ	14982	;# 
  1219   003A87                     IOCEF           equ	14983	;# 
  1220   003A90                     ANSELF          equ	14992	;# 
  1221   003A91                     WPUF            equ	14993	;# 
  1222   003A92                     ODCONF          equ	14994	;# 
  1223   003A93                     SLRCONF         equ	14995	;# 
  1224   003A94                     INLVLF          equ	14996	;# 
  1225   003ABF                     PPSLOCK         equ	15039	;# 
  1226   003AC0                     INT0PPS         equ	15040	;# 
  1227   003AC1                     INT1PPS         equ	15041	;# 
  1228   003AC2                     INT2PPS         equ	15042	;# 
  1229   003AC3                     T0CKIPPS        equ	15043	;# 
  1230   003AC4                     T1CKIPPS        equ	15044	;# 
  1231   003AC5                     T1GPPS          equ	15045	;# 
  1232   003AC6                     T3CKIPPS        equ	15046	;# 
  1233   003AC7                     T3GPPS          equ	15047	;# 
  1234   003AC8                     T5CKIPPS        equ	15048	;# 
  1235   003AC9                     T5GPPS          equ	15049	;# 
  1236   003ACA                     T2INPPS         equ	15050	;# 
  1237   003ACB                     T4INPPS         equ	15051	;# 
  1238   003ACC                     T6INPPS         equ	15052	;# 
  1239   003ACD                     CCP1PPS         equ	15053	;# 
  1240   003ACE                     CCP2PPS         equ	15054	;# 
  1241   003ACF                     CCP3PPS         equ	15055	;# 
  1242   003AD0                     CCP4PPS         equ	15056	;# 
  1243   003AD1                     SMT1WINPPS      equ	15057	;# 
  1244   003AD2                     SMT1SIGPPS      equ	15058	;# 
  1245   003AD3                     CWG1INPPS       equ	15059	;# 
  1246   003AD4                     CWG2INPPS       equ	15060	;# 
  1247   003AD5                     CWG3INPPS       equ	15061	;# 
  1248   003AD6                     MD1CARLPPS      equ	15062	;# 
  1249   003AD7                     MD1CARHPPS      equ	15063	;# 
  1250   003AD8                     MD1SRCPPS       equ	15064	;# 
  1251   003AD9                     CLCIN0PPS       equ	15065	;# 
  1252   003ADA                     CLCIN1PPS       equ	15066	;# 
  1253   003ADB                     CLCIN2PPS       equ	15067	;# 
  1254   003ADC                     CLCIN3PPS       equ	15068	;# 
  1255   003ADD                     ADACTPPS        equ	15069	;# 
  1256   003ADE                     SPI1SCKPPS      equ	15070	;# 
  1257   003ADF                     SPI1SDIPPS      equ	15071	;# 
  1258   003AE0                     SPI1SSPPS       equ	15072	;# 
  1259   003AE1                     I2C1SCLPPS      equ	15073	;# 
  1260   003AE2                     I2C1SDAPPS      equ	15074	;# 
  1261   003AE3                     I2C2SCLPPS      equ	15075	;# 
  1262   003AE4                     I2C2SDAPPS      equ	15076	;# 
  1263   003AE5                     U1RXPPS         equ	15077	;# 
  1264   003AE6                     U1CTSPPS        equ	15078	;# 
  1265   003AE8                     U2RXPPS         equ	15080	;# 
  1266   003AE9                     U2CTSPPS        equ	15081	;# 
  1267   003BC9                     DMA2BUF         equ	15305	;# 
  1268   003BCA                     DMA2DCNT        equ	15306	;# 
  1269   003BCA                     DMA2DCNTL       equ	15306	;# 
  1270   003BCB                     DMA2DCNTH       equ	15307	;# 
  1271   003BCC                     DMA2DPTR        equ	15308	;# 
  1272   003BCC                     DMA2DPTRL       equ	15308	;# 
  1273   003BCD                     DMA2DPTRH       equ	15309	;# 
  1274   003BCE                     DMA2DSZ         equ	15310	;# 
  1275   003BCE                     DMA2DSZL        equ	15310	;# 
  1276   003BCF                     DMA2DSZH        equ	15311	;# 
  1277   003BD0                     DMA2DSA         equ	15312	;# 
  1278   003BD0                     DMA2DSAL        equ	15312	;# 
  1279   003BD1                     DMA2DSAH        equ	15313	;# 
  1280   003BD2                     DMA2SCNT        equ	15314	;# 
  1281   003BD2                     DMA2SCNTL       equ	15314	;# 
  1282   003BD3                     DMA2SCNTH       equ	15315	;# 
  1283   003BD4                     DMA2SPTR        equ	15316	;# 
  1284   003BD4                     DMA2SPTRL       equ	15316	;# 
  1285   003BD5                     DMA2SPTRH       equ	15317	;# 
  1286   003BD6                     DMA2SPTRU       equ	15318	;# 
  1287   003BD7                     DMA2SSZ         equ	15319	;# 
  1288   003BD7                     DMA2SSZL        equ	15319	;# 
  1289   003BD8                     DMA2SSZH        equ	15320	;# 
  1290   003BD9                     DMA2SSA         equ	15321	;# 
  1291   003BD9                     DMA2SSAL        equ	15321	;# 
  1292   003BDA                     DMA2SSAH        equ	15322	;# 
  1293   003BDB                     DMA2SSAU        equ	15323	;# 
  1294   003BDC                     DMA2CON0        equ	15324	;# 
  1295   003BDD                     DMA2CON1        equ	15325	;# 
  1296   003BDE                     DMA2AIRQ        equ	15326	;# 
  1297   003BDF                     DMA2SIRQ        equ	15327	;# 
  1298   003BE9                     DMA1BUF         equ	15337	;# 
  1299   003BEA                     DMA1DCNT        equ	15338	;# 
  1300   003BEA                     DMA1DCNTL       equ	15338	;# 
  1301   003BEB                     DMA1DCNTH       equ	15339	;# 
  1302   003BEC                     DMA1DPTR        equ	15340	;# 
  1303   003BEC                     DMA1DPTRL       equ	15340	;# 
  1304   003BED                     DMA1DPTRH       equ	15341	;# 
  1305   003BEE                     DMA1DSZ         equ	15342	;# 
  1306   003BEE                     DMA1DSZL        equ	15342	;# 
  1307   003BEF                     DMA1DSZH        equ	15343	;# 
  1308   003BF0                     DMA1DSA         equ	15344	;# 
  1309   003BF0                     DMA1DSAL        equ	15344	;# 
  1310   003BF1                     DMA1DSAH        equ	15345	;# 
  1311   003BF2                     DMA1SCNT        equ	15346	;# 
  1312   003BF2                     DMA1SCNTL       equ	15346	;# 
  1313   003BF3                     DMA1SCNTH       equ	15347	;# 
  1314   003BF4                     DMA1SPTR        equ	15348	;# 
  1315   003BF4                     DMA1SPTRL       equ	15348	;# 
  1316   003BF5                     DMA1SPTRH       equ	15349	;# 
  1317   003BF6                     DMA1SPTRU       equ	15350	;# 
  1318   003BF7                     DMA1SSZ         equ	15351	;# 
  1319   003BF7                     DMA1SSZL        equ	15351	;# 
  1320   003BF8                     DMA1SSZH        equ	15352	;# 
  1321   003BF9                     DMA1SSA         equ	15353	;# 
  1322   003BF9                     DMA1SSAL        equ	15353	;# 
  1323   003BFA                     DMA1SSAH        equ	15354	;# 
  1324   003BFB                     DMA1SSAU        equ	15355	;# 
  1325   003BFC                     DMA1CON0        equ	15356	;# 
  1326   003BFD                     DMA1CON1        equ	15357	;# 
  1327   003BFE                     DMA1AIRQ        equ	15358	;# 
  1328   003BFF                     DMA1SIRQ        equ	15359	;# 
  1329   003C56                     CLC4CON         equ	15446	;# 
  1330   003C57                     CLC4POL         equ	15447	;# 
  1331   003C58                     CLC4SEL0        equ	15448	;# 
  1332   003C59                     CLC4SEL1        equ	15449	;# 
  1333   003C5A                     CLC4SEL2        equ	15450	;# 
  1334   003C5B                     CLC4SEL3        equ	15451	;# 
  1335   003C5C                     CLC4GLS0        equ	15452	;# 
  1336   003C5D                     CLC4GLS1        equ	15453	;# 
  1337   003C5E                     CLC4GLS2        equ	15454	;# 
  1338   003C5F                     CLC4GLS3        equ	15455	;# 
  1339   003C60                     CLC3CON         equ	15456	;# 
  1340   003C61                     CLC3POL         equ	15457	;# 
  1341   003C62                     CLC3SEL0        equ	15458	;# 
  1342   003C63                     CLC3SEL1        equ	15459	;# 
  1343   003C64                     CLC3SEL2        equ	15460	;# 
  1344   003C65                     CLC3SEL3        equ	15461	;# 
  1345   003C66                     CLC3GLS0        equ	15462	;# 
  1346   003C67                     CLC3GLS1        equ	15463	;# 
  1347   003C68                     CLC3GLS2        equ	15464	;# 
  1348   003C69                     CLC3GLS3        equ	15465	;# 
  1349   003C6A                     CLC2CON         equ	15466	;# 
  1350   003C6B                     CLC2POL         equ	15467	;# 
  1351   003C6C                     CLC2SEL0        equ	15468	;# 
  1352   003C6D                     CLC2SEL1        equ	15469	;# 
  1353   003C6E                     CLC2SEL2        equ	15470	;# 
  1354   003C6F                     CLC2SEL3        equ	15471	;# 
  1355   003C70                     CLC2GLS0        equ	15472	;# 
  1356   003C71                     CLC2GLS1        equ	15473	;# 
  1357   003C72                     CLC2GLS2        equ	15474	;# 
  1358   003C73                     CLC2GLS3        equ	15475	;# 
  1359   003C74                     CLC1CON         equ	15476	;# 
  1360   003C75                     CLC1POL         equ	15477	;# 
  1361   003C76                     CLC1SEL0        equ	15478	;# 
  1362   003C77                     CLC1SEL1        equ	15479	;# 
  1363   003C78                     CLC1SEL2        equ	15480	;# 
  1364   003C79                     CLC1SEL3        equ	15481	;# 
  1365   003C7A                     CLC1GLS0        equ	15482	;# 
  1366   003C7B                     CLC1GLS1        equ	15483	;# 
  1367   003C7C                     CLC1GLS2        equ	15484	;# 
  1368   003C7D                     CLC1GLS3        equ	15485	;# 
  1369   003C7E                     CLCDATA0        equ	15486	;# 
  1370   003CE5                     CLKRCON         equ	15589	;# 
  1371   003CE6                     CLKRCLK         equ	15590	;# 
  1372   003CFA                     MD1CON0         equ	15610	;# 
  1373   003CFB                     MD1CON1         equ	15611	;# 
  1374   003CFC                     MD1SRC          equ	15612	;# 
  1375   003CFD                     MD1CARL         equ	15613	;# 
  1376   003CFE                     MD1CARH         equ	15614	;# 
  1377   003D10                     SPI1RXB         equ	15632	;# 
  1378   003D11                     SPI1TXB         equ	15633	;# 
  1379   003D12                     SPI1TCNT        equ	15634	;# 
  1380   003D12                     SPI1TCNTL       equ	15634	;# 
  1381   003D13                     SPI1TCNTH       equ	15635	;# 
  1382   003D14                     SPI1CON0        equ	15636	;# 
  1383   003D15                     SPI1CON1        equ	15637	;# 
  1384   003D16                     SPI1CON2        equ	15638	;# 
  1385   003D17                     SPI1STATUS      equ	15639	;# 
  1386   003D18                     SPI1TWIDTH      equ	15640	;# 
  1387   003D19                     SPI1BAUD        equ	15641	;# 
  1388   003D1A                     SPI1INTF        equ	15642	;# 
  1389   003D1B                     SPI1INTE        equ	15643	;# 
  1390   003D1C                     SPI1CLK         equ	15644	;# 
  1391   003D54                     I2C2RXB         equ	15700	;# 
  1392   003D55                     I2C2TXB         equ	15701	;# 
  1393   003D56                     I2C2CNT         equ	15702	;# 
  1394   003D57                     I2C2ADB0        equ	15703	;# 
  1395   003D58                     I2C2ADB1        equ	15704	;# 
  1396   003D59                     I2C2ADR0        equ	15705	;# 
  1397   003D5A                     I2C2ADR1        equ	15706	;# 
  1398   003D5B                     I2C2ADR2        equ	15707	;# 
  1399   003D5C                     I2C2ADR3        equ	15708	;# 
  1400   003D5D                     I2C2CON0        equ	15709	;# 
  1401   003D5E                     I2C2CON1        equ	15710	;# 
  1402   003D5F                     I2C2CON2        equ	15711	;# 
  1403   003D60                     I2C2ERR         equ	15712	;# 
  1404   003D61                     I2C2STAT0       equ	15713	;# 
  1405   003D62                     I2C2STAT1       equ	15714	;# 
  1406   003D63                     I2C2PIR         equ	15715	;# 
  1407   003D64                     I2C2PIE         equ	15716	;# 
  1408   003D65                     I2C2CLK         equ	15717	;# 
  1409   003D66                     I2C2BTO         equ	15718	;# 
  1410   003D6A                     I2C1RXB         equ	15722	;# 
  1411   003D6B                     I2C1TXB         equ	15723	;# 
  1412   003D6C                     I2C1CNT         equ	15724	;# 
  1413   003D6D                     I2C1ADB0        equ	15725	;# 
  1414   003D6E                     I2C1ADB1        equ	15726	;# 
  1415   003D6F                     I2C1ADR0        equ	15727	;# 
  1416   003D70                     I2C1ADR1        equ	15728	;# 
  1417   003D71                     I2C1ADR2        equ	15729	;# 
  1418   003D72                     I2C1ADR3        equ	15730	;# 
  1419   003D73                     I2C1CON0        equ	15731	;# 
  1420   003D74                     I2C1CON1        equ	15732	;# 
  1421   003D75                     I2C1CON2        equ	15733	;# 
  1422   003D76                     I2C1ERR         equ	15734	;# 
  1423   003D77                     I2C1STAT0       equ	15735	;# 
  1424   003D78                     I2C1STAT1       equ	15736	;# 
  1425   003D79                     I2C1PIR         equ	15737	;# 
  1426   003D7A                     I2C1PIE         equ	15738	;# 
  1427   003D7B                     I2C1CLK         equ	15739	;# 
  1428   003D7C                     I2C1BTO         equ	15740	;# 
  1429   003DD0                     U2RXB           equ	15824	;# 
  1430   003DD0                     U2RXBL          equ	15824	;# 
  1431   003DD2                     U2TXB           equ	15826	;# 
  1432   003DD2                     U2TXBL          equ	15826	;# 
  1433   003DD4                     U2P1            equ	15828	;# 
  1434   003DD4                     U2P1L           equ	15828	;# 
  1435   003DD6                     U2P2            equ	15830	;# 
  1436   003DD6                     U2P2L           equ	15830	;# 
  1437   003DD8                     U2P3            equ	15832	;# 
  1438   003DD8                     U2P3L           equ	15832	;# 
  1439   003DDA                     U2CON0          equ	15834	;# 
  1440   003DDB                     U2CON1          equ	15835	;# 
  1441   003DDC                     U2CON2          equ	15836	;# 
  1442   003DDD                     U2BRG           equ	15837	;# 
  1443   003DDD                     U2BRGL          equ	15837	;# 
  1444   003DDE                     U2BRGH          equ	15838	;# 
  1445   003DDF                     U2FIFO          equ	15839	;# 
  1446   003DE0                     U2UIR           equ	15840	;# 
  1447   003DE1                     U2ERRIR         equ	15841	;# 
  1448   003DE2                     U2ERRIE         equ	15842	;# 
  1449   003DE8                     U1RXB           equ	15848	;# 
  1450   003DE8                     U1RXBL          equ	15848	;# 
  1451   003DE9                     U1RXCHK         equ	15849	;# 
  1452   003DEA                     U1TXB           equ	15850	;# 
  1453   003DEA                     U1TXBL          equ	15850	;# 
  1454   003DEB                     U1TXCHK         equ	15851	;# 
  1455   003DEC                     U1P1            equ	15852	;# 
  1456   003DEC                     U1P1L           equ	15852	;# 
  1457   003DED                     U1P1H           equ	15853	;# 
  1458   003DEE                     U1P2            equ	15854	;# 
  1459   003DEE                     U1P2L           equ	15854	;# 
  1460   003DEF                     U1P2H           equ	15855	;# 
  1461   003DF0                     U1P3            equ	15856	;# 
  1462   003DF0                     U1P3L           equ	15856	;# 
  1463   003DF1                     U1P3H           equ	15857	;# 
  1464   003DF2                     U1CON0          equ	15858	;# 
  1465   003DF3                     U1CON1          equ	15859	;# 
  1466   003DF4                     U1CON2          equ	15860	;# 
  1467   003DF5                     U1BRG           equ	15861	;# 
  1468   003DF5                     U1BRGL          equ	15861	;# 
  1469   003DF6                     U1BRGH          equ	15862	;# 
  1470   003DF7                     U1FIFO          equ	15863	;# 
  1471   003DF8                     U1UIR           equ	15864	;# 
  1472   003DF9                     U1ERRIR         equ	15865	;# 
  1473   003DFA                     U1ERRIE         equ	15866	;# 
  1474   003E9C                     DAC1CON1        equ	16028	;# 
  1475   003E9E                     DAC1CON0        equ	16030	;# 
  1476   003EB8                     CM2CON0         equ	16056	;# 
  1477   003EB9                     CM2CON1         equ	16057	;# 
  1478   003EBA                     CM2NCH          equ	16058	;# 
  1479   003EBB                     CM2PCH          equ	16059	;# 
  1480   003EBC                     CM1CON0         equ	16060	;# 
  1481   003EBD                     CM1CON1         equ	16061	;# 
  1482   003EBE                     CM1NCH          equ	16062	;# 
  1483   003EBF                     CM1PCH          equ	16063	;# 
  1484   003EC0                     CMOUT           equ	16064	;# 
  1485   003EC1                     FVRCON          equ	16065	;# 
  1486   003EC3                     ZCDCON          equ	16067	;# 
  1487   003EC9                     HLVDCON0        equ	16073	;# 
  1488   003ECA                     HLVDCON1        equ	16074	;# 
  1489   003ED7                     ADCP            equ	16087	;# 
  1490   003EDE                     ADLTH           equ	16094	;# 
  1491   003EDE                     ADLTHL          equ	16094	;# 
  1492   003EDF                     ADLTHH          equ	16095	;# 
  1493   003EE0                     ADUTH           equ	16096	;# 
  1494   003EE0                     ADUTHL          equ	16096	;# 
  1495   003EE1                     ADUTHH          equ	16097	;# 
  1496   003EE2                     ADERR           equ	16098	;# 
  1497   003EE2                     ADERRL          equ	16098	;# 
  1498   003EE3                     ADERRH          equ	16099	;# 
  1499   003EE4                     ADSTPT          equ	16100	;# 
  1500   003EE4                     ADSTPTL         equ	16100	;# 
  1501   003EE5                     ADSTPTH         equ	16101	;# 
  1502   003EE6                     ADFLTR          equ	16102	;# 
  1503   003EE6                     ADFLTRL         equ	16102	;# 
  1504   003EE7                     ADFLTRH         equ	16103	;# 
  1505   003EE8                     ADACC           equ	16104	;# 
  1506   003EE8                     ADACCL          equ	16104	;# 
  1507   003EE9                     ADACCH          equ	16105	;# 
  1508   003EEA                     ADACCU          equ	16106	;# 
  1509   003EEB                     ADCNT           equ	16107	;# 
  1510   003EEC                     ADRPT           equ	16108	;# 
  1511   003EED                     ADPREV          equ	16109	;# 
  1512   003EED                     ADPREVL         equ	16109	;# 
  1513   003EEE                     ADPREVH         equ	16110	;# 
  1514   003EEF                     ADRES           equ	16111	;# 
  1515   003EEF                     ADRESL          equ	16111	;# 
  1516   003EF0                     ADRESH          equ	16112	;# 
  1517   003EF1                     ADPCH           equ	16113	;# 
  1518   003EF3                     ADACQ           equ	16115	;# 
  1519   003EF3                     ADACQL          equ	16115	;# 
  1520   003EF4                     ADACQH          equ	16116	;# 
  1521   003EF5                     ADCAP           equ	16117	;# 
  1522   003EF6                     ADPRE           equ	16118	;# 
  1523   003EF6                     ADPREL          equ	16118	;# 
  1524   003EF7                     ADPREH          equ	16119	;# 
  1525   003EF8                     ADCON0          equ	16120	;# 
  1526   003EF9                     ADCON1          equ	16121	;# 
  1527   003EFA                     ADCON2          equ	16122	;# 
  1528   003EFB                     ADCON3          equ	16123	;# 
  1529   003EFC                     ADSTAT          equ	16124	;# 
  1530   003EFD                     ADREF           equ	16125	;# 
  1531   003EFE                     ADACT           equ	16126	;# 
  1532   003EFF                     ADCLK           equ	16127	;# 
  1533   003F12                     SMT1TMR         equ	16146	;# 
  1534   003F12                     SMT1TMRL        equ	16146	;# 
  1535   003F13                     SMT1TMRH        equ	16147	;# 
  1536   003F14                     SMT1TMRU        equ	16148	;# 
  1537   003F15                     SMT1CPR         equ	16149	;# 
  1538   003F15                     SMT1CPRL        equ	16149	;# 
  1539   003F16                     SMT1CPRH        equ	16150	;# 
  1540   003F17                     SMT1CPRU        equ	16151	;# 
  1541   003F18                     SMT1CPW         equ	16152	;# 
  1542   003F18                     SMT1CPWL        equ	16152	;# 
  1543   003F19                     SMT1CPWH        equ	16153	;# 
  1544   003F1A                     SMT1CPWU        equ	16154	;# 
  1545   003F1B                     SMT1PR          equ	16155	;# 
  1546   003F1B                     SMT1PRL         equ	16155	;# 
  1547   003F1C                     SMT1PRH         equ	16156	;# 
  1548   003F1D                     SMT1PRU         equ	16157	;# 
  1549   003F1E                     SMT1CON0        equ	16158	;# 
  1550   003F1F                     SMT1CON1        equ	16159	;# 
  1551   003F20                     SMT1STAT        equ	16160	;# 
  1552   003F21                     SMT1CLK         equ	16161	;# 
  1553   003F22                     SMT1SIG         equ	16162	;# 
  1554   003F23                     SMT1WIN         equ	16163	;# 
  1555   003F38                     NCO1ACC         equ	16184	;# 
  1556   003F38                     NCO1ACCL        equ	16184	;# 
  1557   003F39                     NCO1ACCH        equ	16185	;# 
  1558   003F3A                     NCO1ACCU        equ	16186	;# 
  1559   003F3B                     NCO1INC         equ	16187	;# 
  1560   003F3B                     NCO1INCL        equ	16187	;# 
  1561   003F3C                     NCO1INCH        equ	16188	;# 
  1562   003F3D                     NCO1INCU        equ	16189	;# 
  1563   003F3E                     NCO1CON         equ	16190	;# 
  1564   003F3F                     NCO1CLK         equ	16191	;# 
  1565   003F40                     CWG3CLK         equ	16192	;# 
  1566   003F40                     CWG3CLKCON      equ	16192	;# 
  1567   003F41                     CWG3ISM         equ	16193	;# 
  1568   003F41                     CWG3DAT         equ	16193	;# 
  1569   003F42                     CWG3DBR         equ	16194	;# 
  1570   003F43                     CWG3DBF         equ	16195	;# 
  1571   003F44                     CWG3CON0        equ	16196	;# 
  1572   003F45                     CWG3CON1        equ	16197	;# 
  1573   003F46                     CWG3AS0         equ	16198	;# 
  1574   003F47                     CWG3AS1         equ	16199	;# 
  1575   003F48                     CWG3STR         equ	16200	;# 
  1576   003F49                     CWG2CLK         equ	16201	;# 
  1577   003F49                     CWG2CLKCON      equ	16201	;# 
  1578   003F4A                     CWG2ISM         equ	16202	;# 
  1579   003F4A                     CWG2DAT         equ	16202	;# 
  1580   003F4B                     CWG2DBR         equ	16203	;# 
  1581   003F4C                     CWG2DBF         equ	16204	;# 
  1582   003F4D                     CWG2CON0        equ	16205	;# 
  1583   003F4E                     CWG2CON1        equ	16206	;# 
  1584   003F4F                     CWG2AS0         equ	16207	;# 
  1585   003F50                     CWG2AS1         equ	16208	;# 
  1586   003F51                     CWG2STR         equ	16209	;# 
  1587   003F52                     CWG1CLK         equ	16210	;# 
  1588   003F52                     CWG1CLKCON      equ	16210	;# 
  1589   003F53                     CWG1ISM         equ	16211	;# 
  1590   003F53                     CWG1DAT         equ	16211	;# 
  1591   003F54                     CWG1DBR         equ	16212	;# 
  1592   003F55                     CWG1DBF         equ	16213	;# 
  1593   003F56                     CWG1CON0        equ	16214	;# 
  1594   003F57                     CWG1CON1        equ	16215	;# 
  1595   003F58                     CWG1AS0         equ	16216	;# 
  1596   003F59                     CWG1AS1         equ	16217	;# 
  1597   003F5A                     CWG1STR         equ	16218	;# 
  1598   003F5E                     CCPTMRS0        equ	16222	;# 
  1599   003F5F                     CCPTMRS1        equ	16223	;# 
  1600   003F60                     PWM8DC          equ	16224	;# 
  1601   003F60                     PWM8DCL         equ	16224	;# 
  1602   003F61                     PWM8DCH         equ	16225	;# 
  1603   003F62                     PWM8CON         equ	16226	;# 
  1604   003F64                     PWM7DC          equ	16228	;# 
  1605   003F64                     PWM7DCL         equ	16228	;# 
  1606   003F65                     PWM7DCH         equ	16229	;# 
  1607   003F66                     PWM7CON         equ	16230	;# 
  1608   003F68                     PWM6DC          equ	16232	;# 
  1609   003F68                     PWM6DCL         equ	16232	;# 
  1610   003F69                     PWM6DCH         equ	16233	;# 
  1611   003F6A                     PWM6CON         equ	16234	;# 
  1612   003F6C                     PWM5DC          equ	16236	;# 
  1613   003F6C                     PWM5DCL         equ	16236	;# 
  1614   003F6D                     PWM5DCH         equ	16237	;# 
  1615   003F6E                     PWM5CON         equ	16238	;# 
  1616   003F70                     CCPR4           equ	16240	;# 
  1617   003F70                     CCPR4L          equ	16240	;# 
  1618   003F71                     CCPR4H          equ	16241	;# 
  1619   003F72                     CCP4CON         equ	16242	;# 
  1620   003F73                     CCP4CAP         equ	16243	;# 
  1621   003F74                     CCPR3           equ	16244	;# 
  1622   003F74                     CCPR3L          equ	16244	;# 
  1623   003F75                     CCPR3H          equ	16245	;# 
  1624   003F76                     CCP3CON         equ	16246	;# 
  1625   003F77                     CCP3CAP         equ	16247	;# 
  1626   003F78                     CCPR2           equ	16248	;# 
  1627   003F78                     CCPR2L          equ	16248	;# 
  1628   003F79                     CCPR2H          equ	16249	;# 
  1629   003F7A                     CCP2CON         equ	16250	;# 
  1630   003F7B                     CCP2CAP         equ	16251	;# 
  1631   003F7C                     CCPR1           equ	16252	;# 
  1632   003F7C                     CCPR1L          equ	16252	;# 
  1633   003F7D                     CCPR1H          equ	16253	;# 
  1634   003F7E                     CCP1CON         equ	16254	;# 
  1635   003F7F                     CCP1CAP         equ	16255	;# 
  1636   003F92                     T6TMR           equ	16274	;# 
  1637   003F92                     TMR6            equ	16274	;# 
  1638   003F93                     T6PR            equ	16275	;# 
  1639   003F93                     PR6             equ	16275	;# 
  1640   003F94                     T6CON           equ	16276	;# 
  1641   003F95                     T6HLT           equ	16277	;# 
  1642   003F96                     T6CLKCON        equ	16278	;# 
  1643   003F96                     T6CLK           equ	16278	;# 
  1644   003F97                     T6RST           equ	16279	;# 
  1645   003F98                     TMR5            equ	16280	;# 
  1646   003F98                     TMR5L           equ	16280	;# 
  1647   003F99                     TMR5H           equ	16281	;# 
  1648   003F9A                     T5CON           equ	16282	;# 
  1649   003F9A                     TMR5CON         equ	16282	;# 
  1650   003F9B                     T5GCON          equ	16283	;# 
  1651   003F9B                     TMR5GCON        equ	16283	;# 
  1652   003F9C                     T5GATE          equ	16284	;# 
  1653   003F9C                     TMR5GATE        equ	16284	;# 
  1654   003F9D                     T5CLK           equ	16285	;# 
  1655   003F9D                     TMR5CLK         equ	16285	;# 
  1656   003F9D                     PR5             equ	16285	;# 
  1657   003F9E                     T4TMR           equ	16286	;# 
  1658   003F9E                     TMR4            equ	16286	;# 
  1659   003F9F                     T4PR            equ	16287	;# 
  1660   003F9F                     PR4             equ	16287	;# 
  1661   003FA0                     T4CON           equ	16288	;# 
  1662   003FA1                     T4HLT           equ	16289	;# 
  1663   003FA2                     T4CLKCON        equ	16290	;# 
  1664   003FA2                     T4CLK           equ	16290	;# 
  1665   003FA3                     T4RST           equ	16291	;# 
  1666   003FA4                     TMR3            equ	16292	;# 
  1667   003FA4                     TMR3L           equ	16292	;# 
  1668   003FA5                     TMR3H           equ	16293	;# 
  1669   003FA6                     T3CON           equ	16294	;# 
  1670   003FA6                     TMR3CON         equ	16294	;# 
  1671   003FA7                     T3GCON          equ	16295	;# 
  1672   003FA7                     TMR3GCON        equ	16295	;# 
  1673   003FA8                     T3GATE          equ	16296	;# 
  1674   003FA8                     TMR3GATE        equ	16296	;# 
  1675   003FA9                     T3CLK           equ	16297	;# 
  1676   003FA9                     TMR3CLK         equ	16297	;# 
  1677   003FA9                     PR3             equ	16297	;# 
  1678   003FAA                     T2TMR           equ	16298	;# 
  1679   003FAA                     TMR2            equ	16298	;# 
  1680   003FAB                     T2PR            equ	16299	;# 
  1681   003FAB                     PR2             equ	16299	;# 
  1682   003FAC                     T2CON           equ	16300	;# 
  1683   003FAD                     T2HLT           equ	16301	;# 
  1684   003FAE                     T2CLKCON        equ	16302	;# 
  1685   003FAE                     T2CLK           equ	16302	;# 
  1686   003FAF                     T2RST           equ	16303	;# 
  1687   003FB0                     TMR1            equ	16304	;# 
  1688   003FB0                     TMR1L           equ	16304	;# 
  1689   003FB1                     TMR1H           equ	16305	;# 
  1690   003FB2                     T1CON           equ	16306	;# 
  1691   003FB2                     TMR1CON         equ	16306	;# 
  1692   003FB3                     T1GCON          equ	16307	;# 
  1693   003FB3                     TMR1GCON        equ	16307	;# 
  1694   003FB4                     T1GATE          equ	16308	;# 
  1695   003FB4                     TMR1GATE        equ	16308	;# 
  1696   003FB5                     T1CLK           equ	16309	;# 
  1697   003FB5                     TMR1CLK         equ	16309	;# 
  1698   003FB5                     PR1             equ	16309	;# 
  1699   003FB6                     TMR0L           equ	16310	;# 
  1700   003FB6                     TMR0            equ	16310	;# 
  1701   003FB7                     TMR0H           equ	16311	;# 
  1702   003FB7                     PR0             equ	16311	;# 
  1703   003FB8                     T0CON0          equ	16312	;# 
  1704   003FB9                     T0CON1          equ	16313	;# 
  1705   003FBA                     LATA            equ	16314	;# 
  1706   003FBB                     LATB            equ	16315	;# 
  1707   003FBC                     LATC            equ	16316	;# 
  1708   003FBD                     LATD            equ	16317	;# 
  1709   003FBE                     LATE            equ	16318	;# 
  1710   003FBF                     LATF            equ	16319	;# 
  1711   003FC2                     TRISA           equ	16322	;# 
  1712   003FC3                     TRISB           equ	16323	;# 
  1713   003FC4                     TRISC           equ	16324	;# 
  1714   003FC5                     TRISD           equ	16325	;# 
  1715   003FC6                     TRISE           equ	16326	;# 
  1716   003FC7                     TRISF           equ	16327	;# 
  1717   003FCA                     PORTA           equ	16330	;# 
  1718   003FCB                     PORTB           equ	16331	;# 
  1719   003FCC                     PORTC           equ	16332	;# 
  1720   003FCD                     PORTD           equ	16333	;# 
  1721   003FCE                     PORTE           equ	16334	;# 
  1722   003FCF                     PORTF           equ	16335	;# 
  1723   003FD2                     INTCON0         equ	16338	;# 
  1724   003FD3                     INTCON1         equ	16339	;# 
  1725   003FD4                     IVTLOCK         equ	16340	;# 
  1726   003FD5                     IVTBASE         equ	16341	;# 
  1727   003FD5                     IVTBASEL        equ	16341	;# 
  1728   003FD6                     IVTBASEH        equ	16342	;# 
  1729   003FD7                     IVTBASEU        equ	16343	;# 
  1730   003FD8                     STATUS          equ	16344	;# 
  1731   003FD9                     FSR2            equ	16345	;# 
  1732   003FD9                     FSR2L           equ	16345	;# 
  1733   003FDA                     FSR2H           equ	16346	;# 
  1734   003FDB                     PLUSW2          equ	16347	;# 
  1735   003FDC                     PREINC2         equ	16348	;# 
  1736   003FDD                     POSTDEC2        equ	16349	;# 
  1737   003FDE                     POSTINC2        equ	16350	;# 
  1738   003FDF                     INDF2           equ	16351	;# 
  1739   003FE0                     BSR             equ	16352	;# 
  1740   003FE1                     FSR1            equ	16353	;# 
  1741   003FE1                     FSR1L           equ	16353	;# 
  1742   003FE2                     FSR1H           equ	16354	;# 
  1743   003FE3                     PLUSW1          equ	16355	;# 
  1744   003FE4                     PREINC1         equ	16356	;# 
  1745   003FE5                     POSTDEC1        equ	16357	;# 
  1746   003FE6                     POSTINC1        equ	16358	;# 
  1747   003FE7                     INDF1           equ	16359	;# 
  1748   003FE8                     WREG            equ	16360	;# 
  1749   003FE9                     FSR0            equ	16361	;# 
  1750   003FE9                     FSR0L           equ	16361	;# 
  1751   003FEA                     FSR0H           equ	16362	;# 
  1752   003FEB                     PLUSW0          equ	16363	;# 
  1753   003FEC                     PREINC0         equ	16364	;# 
  1754   003FED                     POSTDEC0        equ	16365	;# 
  1755   003FEE                     POSTINC0        equ	16366	;# 
  1756   003FEF                     INDF0           equ	16367	;# 
  1757   003FF0                     PCON0           equ	16368	;# 
  1758   003FF1                     PCON1           equ	16369	;# 
  1759   003FF3                     PROD            equ	16371	;# 
  1760   003FF3                     PRODL           equ	16371	;# 
  1761   003FF4                     PRODH           equ	16372	;# 
  1762   003FF5                     TABLAT          equ	16373	;# 
  1763   003FF6                     TBLPTR          equ	16374	;# 
  1764   003FF6                     TBLPTRL         equ	16374	;# 
  1765   003FF7                     TBLPTRH         equ	16375	;# 
  1766   003FF8                     TBLPTRU         equ	16376	;# 
  1767   003FF9                     PCLAT           equ	16377	;# 
  1768   003FF9                     PCL             equ	16377	;# 
  1769   003FFA                     PCLATH          equ	16378	;# 
  1770   003FFB                     PCLATU          equ	16379	;# 
  1771   003FFC                     STKPTR          equ	16380	;# 
  1772   003FFD                     TOS             equ	16381	;# 
  1773   003FFD                     TOSL            equ	16381	;# 
  1774   003FFE                     TOSH            equ	16382	;# 
  1775   003FFF                     TOSU            equ	16383	;# 
  1776   003880                     STATUS_CSHAD    equ	14464	;# 
  1777   003881                     WREG_CSHAD      equ	14465	;# 
  1778   003882                     BSR_CSHAD       equ	14466	;# 
  1779   003883                     SHADCON         equ	14467	;# 
  1780   003884                     STATUS_SHAD     equ	14468	;# 
  1781   003885                     WREG_SHAD       equ	14469	;# 
  1782   003886                     BSR_SHAD        equ	14470	;# 
  1783   003887                     PCLATH_SHAD     equ	14471	;# 
  1784   003888                     PCLATU_SHAD     equ	14472	;# 
  1785   003889                     FSR0SH          equ	14473	;# 
  1786   003889                     FSR0L_SHAD      equ	14473	;# 
  1787   00388A                     FSR0H_SHAD      equ	14474	;# 
  1788   00388B                     FSR1SH          equ	14475	;# 
  1789   00388B                     FSR1L_SHAD      equ	14475	;# 
  1790   00388C                     FSR1H_SHAD      equ	14476	;# 
  1791   00388D                     FSR2SH          equ	14477	;# 
  1792   00388D                     FSR2L_SHAD      equ	14477	;# 
  1793   00388E                     FSR2H_SHAD      equ	14478	;# 
  1794   00388F                     PRODSH          equ	14479	;# 
  1795   00388F                     PRODL_SHAD      equ	14479	;# 
  1796   003890                     PRODH_SHAD      equ	14480	;# 
  1797   00389D                     IVTADL          equ	14493	;# 
  1798   00389E                     IVTADH          equ	14494	;# 
  1799   00389F                     IVTADU          equ	14495	;# 
  1800   00395B                     WDTCON0         equ	14683	;# 
  1801   00395C                     WDTCON1         equ	14684	;# 
  1802   00395D                     WDTPSL          equ	14685	;# 
  1803   00395E                     WDTPSH          equ	14686	;# 
  1804   00395F                     WDTTMR          equ	14687	;# 
  1805   003960                     CRCDATA         equ	14688	;# 
  1806   003960                     CRCDATL         equ	14688	;# 
  1807   003961                     CRCDATH         equ	14689	;# 
  1808   003962                     CRCACC          equ	14690	;# 
  1809   003962                     CRCACCL         equ	14690	;# 
  1810   003963                     CRCACCH         equ	14691	;# 
  1811   003964                     CRCSHFT         equ	14692	;# 
  1812   003964                     CRCSHIFTL       equ	14692	;# 
  1813   003965                     CRCSHIFTH       equ	14693	;# 
  1814   003966                     CRCXOR          equ	14694	;# 
  1815   003966                     CRCXORL         equ	14694	;# 
  1816   003967                     CRCXORH         equ	14695	;# 
  1817   003968                     CRCCON0         equ	14696	;# 
  1818   003969                     CRCCON1         equ	14697	;# 
  1819   003976                     SCANLADR        equ	14710	;# 
  1820   003976                     SCANLADRL       equ	14710	;# 
  1821   003977                     SCANLADRH       equ	14711	;# 
  1822   003978                     SCANLADRU       equ	14712	;# 
  1823   003979                     SCANHADR        equ	14713	;# 
  1824   003979                     SCANHADRL       equ	14713	;# 
  1825   00397A                     SCANHADRH       equ	14714	;# 
  1826   00397B                     SCANHADRU       equ	14715	;# 
  1827   00397C                     SCANCON0        equ	14716	;# 
  1828   00397D                     SCANTRIG        equ	14717	;# 
  1829   003980                     IPR0            equ	14720	;# 
  1830   003981                     IPR1            equ	14721	;# 
  1831   003982                     IPR2            equ	14722	;# 
  1832   003983                     IPR3            equ	14723	;# 
  1833   003984                     IPR4            equ	14724	;# 
  1834   003985                     IPR5            equ	14725	;# 
  1835   003986                     IPR6            equ	14726	;# 
  1836   003987                     IPR7            equ	14727	;# 
  1837   003988                     IPR8            equ	14728	;# 
  1838   003989                     IPR9            equ	14729	;# 
  1839   00398A                     IPR10           equ	14730	;# 
  1840   003990                     PIE0            equ	14736	;# 
  1841   003991                     PIE1            equ	14737	;# 
  1842   003992                     PIE2            equ	14738	;# 
  1843   003993                     PIE3            equ	14739	;# 
  1844   003994                     PIE4            equ	14740	;# 
  1845   003995                     PIE5            equ	14741	;# 
  1846   003996                     PIE6            equ	14742	;# 
  1847   003997                     PIE7            equ	14743	;# 
  1848   003998                     PIE8            equ	14744	;# 
  1849   003999                     PIE9            equ	14745	;# 
  1850   00399A                     PIE10           equ	14746	;# 
  1851   0039A0                     PIR0            equ	14752	;# 
  1852   0039A1                     PIR1            equ	14753	;# 
  1853   0039A2                     PIR2            equ	14754	;# 
  1854   0039A3                     PIR3            equ	14755	;# 
  1855   0039A4                     PIR4            equ	14756	;# 
  1856   0039A5                     PIR5            equ	14757	;# 
  1857   0039A6                     PIR6            equ	14758	;# 
  1858   0039A7                     PIR7            equ	14759	;# 
  1859   0039A8                     PIR8            equ	14760	;# 
  1860   0039A9                     PIR9            equ	14761	;# 
  1861   0039AA                     PIR10           equ	14762	;# 
  1862   0039C0                     PMD0            equ	14784	;# 
  1863   0039C1                     PMD1            equ	14785	;# 
  1864   0039C2                     PMD2            equ	14786	;# 
  1865   0039C3                     PMD3            equ	14787	;# 
  1866   0039C4                     PMD4            equ	14788	;# 
  1867   0039C5                     PMD5            equ	14789	;# 
  1868   0039C6                     PMD6            equ	14790	;# 
  1869   0039C7                     PMD7            equ	14791	;# 
  1870   0039D0                     BORCON          equ	14800	;# 
  1871   0039D1                     VREGCON         equ	14801	;# 
  1872   0039D8                     CPUDOZE         equ	14808	;# 
  1873   0039D9                     OSCCON1         equ	14809	;# 
  1874   0039DA                     OSCCON2         equ	14810	;# 
  1875   0039DB                     OSCCON3         equ	14811	;# 
  1876   0039DC                     OSCSTAT         equ	14812	;# 
  1877   0039DC                     OSCSTAT1        equ	14812	;# 
  1878   0039DD                     OSCEN           equ	14813	;# 
  1879   0039DE                     OSCTUNE         equ	14814	;# 
  1880   0039DF                     OSCFRQ          equ	14815	;# 
  1881   0039E0                     NVMADRL         equ	14816	;# 
  1882   0039E1                     NVMADRH         equ	14817	;# 
  1883   0039E3                     NVMDAT          equ	14819	;# 
  1884   0039E5                     NVMCON1         equ	14821	;# 
  1885   0039E6                     NVMCON2         equ	14822	;# 
  1886   0039EF                     PRLOCK          equ	14831	;# 
  1887   0039F1                     ISRPR           equ	14833	;# 
  1888   0039F2                     MAINPR          equ	14834	;# 
  1889   0039F3                     DMA1PR          equ	14835	;# 
  1890   0039F4                     DMA2PR          equ	14836	;# 
  1891   0039F7                     SCANPR          equ	14839	;# 
  1892   003A00                     RA0PPS          equ	14848	;# 
  1893   003A01                     RA1PPS          equ	14849	;# 
  1894   003A02                     RA2PPS          equ	14850	;# 
  1895   003A03                     RA3PPS          equ	14851	;# 
  1896   003A04                     RA4PPS          equ	14852	;# 
  1897   003A05                     RA5PPS          equ	14853	;# 
  1898   003A06                     RA6PPS          equ	14854	;# 
  1899   003A07                     RA7PPS          equ	14855	;# 
  1900   003A08                     RB0PPS          equ	14856	;# 
  1901   003A09                     RB1PPS          equ	14857	;# 
  1902   003A0A                     RB2PPS          equ	14858	;# 
  1903   003A0B                     RB3PPS          equ	14859	;# 
  1904   003A0C                     RB4PPS          equ	14860	;# 
  1905   003A0D                     RB5PPS          equ	14861	;# 
  1906   003A0E                     RB6PPS          equ	14862	;# 
  1907   003A0F                     RB7PPS          equ	14863	;# 
  1908   003A10                     RC0PPS          equ	14864	;# 
  1909   003A11                     RC1PPS          equ	14865	;# 
  1910   003A12                     RC2PPS          equ	14866	;# 
  1911   003A13                     RC3PPS          equ	14867	;# 
  1912   003A14                     RC4PPS          equ	14868	;# 
  1913   003A15                     RC5PPS          equ	14869	;# 
  1914   003A16                     RC6PPS          equ	14870	;# 
  1915   003A17                     RC7PPS          equ	14871	;# 
  1916   003A18                     RD0PPS          equ	14872	;# 
  1917   003A19                     RD1PPS          equ	14873	;# 
  1918   003A1A                     RD2PPS          equ	14874	;# 
  1919   003A1B                     RD3PPS          equ	14875	;# 
  1920   003A1C                     RD4PPS          equ	14876	;# 
  1921   003A1D                     RD5PPS          equ	14877	;# 
  1922   003A1E                     RD6PPS          equ	14878	;# 
  1923   003A1F                     RD7PPS          equ	14879	;# 
  1924   003A20                     RE0PPS          equ	14880	;# 
  1925   003A21                     RE1PPS          equ	14881	;# 
  1926   003A22                     RE2PPS          equ	14882	;# 
  1927   003A28                     RF0PPS          equ	14888	;# 
  1928   003A29                     RF1PPS          equ	14889	;# 
  1929   003A2A                     RF2PPS          equ	14890	;# 
  1930   003A2B                     RF3PPS          equ	14891	;# 
  1931   003A2C                     RF4PPS          equ	14892	;# 
  1932   003A2D                     RF5PPS          equ	14893	;# 
  1933   003A2E                     RF6PPS          equ	14894	;# 
  1934   003A2F                     RF7PPS          equ	14895	;# 
  1935   003A40                     ANSELA          equ	14912	;# 
  1936   003A41                     WPUA            equ	14913	;# 
  1937   003A42                     ODCONA          equ	14914	;# 
  1938   003A43                     SLRCONA         equ	14915	;# 
  1939   003A44                     INLVLA          equ	14916	;# 
  1940   003A45                     IOCAP           equ	14917	;# 
  1941   003A46                     IOCAN           equ	14918	;# 
  1942   003A47                     IOCAF           equ	14919	;# 
  1943   003A50                     ANSELB          equ	14928	;# 
  1944   003A51                     WPUB            equ	14929	;# 
  1945   003A52                     ODCONB          equ	14930	;# 
  1946   003A53                     SLRCONB         equ	14931	;# 
  1947   003A54                     INLVLB          equ	14932	;# 
  1948   003A55                     IOCBP           equ	14933	;# 
  1949   003A56                     IOCBN           equ	14934	;# 
  1950   003A57                     IOCBF           equ	14935	;# 
  1951   003A5A                     RB1I2C          equ	14938	;# 
  1952   003A5B                     RB2I2C          equ	14939	;# 
  1953   003A60                     ANSELC          equ	14944	;# 
  1954   003A61                     WPUC            equ	14945	;# 
  1955   003A62                     ODCONC          equ	14946	;# 
  1956   003A63                     SLRCONC         equ	14947	;# 
  1957   003A64                     INLVLC          equ	14948	;# 
  1958   003A65                     IOCCP           equ	14949	;# 
  1959   003A66                     IOCCN           equ	14950	;# 
  1960   003A67                     IOCCF           equ	14951	;# 
  1961   003A6A                     RC3I2C          equ	14954	;# 
  1962   003A6B                     RC4I2C          equ	14955	;# 
  1963   003A70                     ANSELD          equ	14960	;# 
  1964   003A71                     WPUD            equ	14961	;# 
  1965   003A72                     ODCOND          equ	14962	;# 
  1966   003A73                     SLRCOND         equ	14963	;# 
  1967   003A74                     INLVLD          equ	14964	;# 
  1968   003A7A                     RD0I2C          equ	14970	;# 
  1969   003A7B                     RD1I2C          equ	14971	;# 
  1970   003A80                     ANSELE          equ	14976	;# 
  1971   003A81                     WPUE            equ	14977	;# 
  1972   003A82                     ODCONE          equ	14978	;# 
  1973   003A83                     SLRCONE         equ	14979	;# 
  1974   003A84                     INLVLE          equ	14980	;# 
  1975   003A85                     IOCEP           equ	14981	;# 
  1976   003A86                     IOCEN           equ	14982	;# 
  1977   003A87                     IOCEF           equ	14983	;# 
  1978   003A90                     ANSELF          equ	14992	;# 
  1979   003A91                     WPUF            equ	14993	;# 
  1980   003A92                     ODCONF          equ	14994	;# 
  1981   003A93                     SLRCONF         equ	14995	;# 
  1982   003A94                     INLVLF          equ	14996	;# 
  1983   003ABF                     PPSLOCK         equ	15039	;# 
  1984   003AC0                     INT0PPS         equ	15040	;# 
  1985   003AC1                     INT1PPS         equ	15041	;# 
  1986   003AC2                     INT2PPS         equ	15042	;# 
  1987   003AC3                     T0CKIPPS        equ	15043	;# 
  1988   003AC4                     T1CKIPPS        equ	15044	;# 
  1989   003AC5                     T1GPPS          equ	15045	;# 
  1990   003AC6                     T3CKIPPS        equ	15046	;# 
  1991   003AC7                     T3GPPS          equ	15047	;# 
  1992   003AC8                     T5CKIPPS        equ	15048	;# 
  1993   003AC9                     T5GPPS          equ	15049	;# 
  1994   003ACA                     T2INPPS         equ	15050	;# 
  1995   003ACB                     T4INPPS         equ	15051	;# 
  1996   003ACC                     T6INPPS         equ	15052	;# 
  1997   003ACD                     CCP1PPS         equ	15053	;# 
  1998   003ACE                     CCP2PPS         equ	15054	;# 
  1999   003ACF                     CCP3PPS         equ	15055	;# 
  2000   003AD0                     CCP4PPS         equ	15056	;# 
  2001   003AD1                     SMT1WINPPS      equ	15057	;# 
  2002   003AD2                     SMT1SIGPPS      equ	15058	;# 
  2003   003AD3                     CWG1INPPS       equ	15059	;# 
  2004   003AD4                     CWG2INPPS       equ	15060	;# 
  2005   003AD5                     CWG3INPPS       equ	15061	;# 
  2006   003AD6                     MD1CARLPPS      equ	15062	;# 
  2007   003AD7                     MD1CARHPPS      equ	15063	;# 
  2008   003AD8                     MD1SRCPPS       equ	15064	;# 
  2009   003AD9                     CLCIN0PPS       equ	15065	;# 
  2010   003ADA                     CLCIN1PPS       equ	15066	;# 
  2011   003ADB                     CLCIN2PPS       equ	15067	;# 
  2012   003ADC                     CLCIN3PPS       equ	15068	;# 
  2013   003ADD                     ADACTPPS        equ	15069	;# 
  2014   003ADE                     SPI1SCKPPS      equ	15070	;# 
  2015   003ADF                     SPI1SDIPPS      equ	15071	;# 
  2016   003AE0                     SPI1SSPPS       equ	15072	;# 
  2017   003AE1                     I2C1SCLPPS      equ	15073	;# 
  2018   003AE2                     I2C1SDAPPS      equ	15074	;# 
  2019   003AE3                     I2C2SCLPPS      equ	15075	;# 
  2020   003AE4                     I2C2SDAPPS      equ	15076	;# 
  2021   003AE5                     U1RXPPS         equ	15077	;# 
  2022   003AE6                     U1CTSPPS        equ	15078	;# 
  2023   003AE8                     U2RXPPS         equ	15080	;# 
  2024   003AE9                     U2CTSPPS        equ	15081	;# 
  2025   003BC9                     DMA2BUF         equ	15305	;# 
  2026   003BCA                     DMA2DCNT        equ	15306	;# 
  2027   003BCA                     DMA2DCNTL       equ	15306	;# 
  2028   003BCB                     DMA2DCNTH       equ	15307	;# 
  2029   003BCC                     DMA2DPTR        equ	15308	;# 
  2030   003BCC                     DMA2DPTRL       equ	15308	;# 
  2031   003BCD                     DMA2DPTRH       equ	15309	;# 
  2032   003BCE                     DMA2DSZ         equ	15310	;# 
  2033   003BCE                     DMA2DSZL        equ	15310	;# 
  2034   003BCF                     DMA2DSZH        equ	15311	;# 
  2035   003BD0                     DMA2DSA         equ	15312	;# 
  2036   003BD0                     DMA2DSAL        equ	15312	;# 
  2037   003BD1                     DMA2DSAH        equ	15313	;# 
  2038   003BD2                     DMA2SCNT        equ	15314	;# 
  2039   003BD2                     DMA2SCNTL       equ	15314	;# 
  2040   003BD3                     DMA2SCNTH       equ	15315	;# 
  2041   003BD4                     DMA2SPTR        equ	15316	;# 
  2042   003BD4                     DMA2SPTRL       equ	15316	;# 
  2043   003BD5                     DMA2SPTRH       equ	15317	;# 
  2044   003BD6                     DMA2SPTRU       equ	15318	;# 
  2045   003BD7                     DMA2SSZ         equ	15319	;# 
  2046   003BD7                     DMA2SSZL        equ	15319	;# 
  2047   003BD8                     DMA2SSZH        equ	15320	;# 
  2048   003BD9                     DMA2SSA         equ	15321	;# 
  2049   003BD9                     DMA2SSAL        equ	15321	;# 
  2050   003BDA                     DMA2SSAH        equ	15322	;# 
  2051   003BDB                     DMA2SSAU        equ	15323	;# 
  2052   003BDC                     DMA2CON0        equ	15324	;# 
  2053   003BDD                     DMA2CON1        equ	15325	;# 
  2054   003BDE                     DMA2AIRQ        equ	15326	;# 
  2055   003BDF                     DMA2SIRQ        equ	15327	;# 
  2056   003BE9                     DMA1BUF         equ	15337	;# 
  2057   003BEA                     DMA1DCNT        equ	15338	;# 
  2058   003BEA                     DMA1DCNTL       equ	15338	;# 
  2059   003BEB                     DMA1DCNTH       equ	15339	;# 
  2060   003BEC                     DMA1DPTR        equ	15340	;# 
  2061   003BEC                     DMA1DPTRL       equ	15340	;# 
  2062   003BED                     DMA1DPTRH       equ	15341	;# 
  2063   003BEE                     DMA1DSZ         equ	15342	;# 
  2064   003BEE                     DMA1DSZL        equ	15342	;# 
  2065   003BEF                     DMA1DSZH        equ	15343	;# 
  2066   003BF0                     DMA1DSA         equ	15344	;# 
  2067   003BF0                     DMA1DSAL        equ	15344	;# 
  2068   003BF1                     DMA1DSAH        equ	15345	;# 
  2069   003BF2                     DMA1SCNT        equ	15346	;# 
  2070   003BF2                     DMA1SCNTL       equ	15346	;# 
  2071   003BF3                     DMA1SCNTH       equ	15347	;# 
  2072   003BF4                     DMA1SPTR        equ	15348	;# 
  2073   003BF4                     DMA1SPTRL       equ	15348	;# 
  2074   003BF5                     DMA1SPTRH       equ	15349	;# 
  2075   003BF6                     DMA1SPTRU       equ	15350	;# 
  2076   003BF7                     DMA1SSZ         equ	15351	;# 
  2077   003BF7                     DMA1SSZL        equ	15351	;# 
  2078   003BF8                     DMA1SSZH        equ	15352	;# 
  2079   003BF9                     DMA1SSA         equ	15353	;# 
  2080   003BF9                     DMA1SSAL        equ	15353	;# 
  2081   003BFA                     DMA1SSAH        equ	15354	;# 
  2082   003BFB                     DMA1SSAU        equ	15355	;# 
  2083   003BFC                     DMA1CON0        equ	15356	;# 
  2084   003BFD                     DMA1CON1        equ	15357	;# 
  2085   003BFE                     DMA1AIRQ        equ	15358	;# 
  2086   003BFF                     DMA1SIRQ        equ	15359	;# 
  2087   003C56                     CLC4CON         equ	15446	;# 
  2088   003C57                     CLC4POL         equ	15447	;# 
  2089   003C58                     CLC4SEL0        equ	15448	;# 
  2090   003C59                     CLC4SEL1        equ	15449	;# 
  2091   003C5A                     CLC4SEL2        equ	15450	;# 
  2092   003C5B                     CLC4SEL3        equ	15451	;# 
  2093   003C5C                     CLC4GLS0        equ	15452	;# 
  2094   003C5D                     CLC4GLS1        equ	15453	;# 
  2095   003C5E                     CLC4GLS2        equ	15454	;# 
  2096   003C5F                     CLC4GLS3        equ	15455	;# 
  2097   003C60                     CLC3CON         equ	15456	;# 
  2098   003C61                     CLC3POL         equ	15457	;# 
  2099   003C62                     CLC3SEL0        equ	15458	;# 
  2100   003C63                     CLC3SEL1        equ	15459	;# 
  2101   003C64                     CLC3SEL2        equ	15460	;# 
  2102   003C65                     CLC3SEL3        equ	15461	;# 
  2103   003C66                     CLC3GLS0        equ	15462	;# 
  2104   003C67                     CLC3GLS1        equ	15463	;# 
  2105   003C68                     CLC3GLS2        equ	15464	;# 
  2106   003C69                     CLC3GLS3        equ	15465	;# 
  2107   003C6A                     CLC2CON         equ	15466	;# 
  2108   003C6B                     CLC2POL         equ	15467	;# 
  2109   003C6C                     CLC2SEL0        equ	15468	;# 
  2110   003C6D                     CLC2SEL1        equ	15469	;# 
  2111   003C6E                     CLC2SEL2        equ	15470	;# 
  2112   003C6F                     CLC2SEL3        equ	15471	;# 
  2113   003C70                     CLC2GLS0        equ	15472	;# 
  2114   003C71                     CLC2GLS1        equ	15473	;# 
  2115   003C72                     CLC2GLS2        equ	15474	;# 
  2116   003C73                     CLC2GLS3        equ	15475	;# 
  2117   003C74                     CLC1CON         equ	15476	;# 
  2118   003C75                     CLC1POL         equ	15477	;# 
  2119   003C76                     CLC1SEL0        equ	15478	;# 
  2120   003C77                     CLC1SEL1        equ	15479	;# 
  2121   003C78                     CLC1SEL2        equ	15480	;# 
  2122   003C79                     CLC1SEL3        equ	15481	;# 
  2123   003C7A                     CLC1GLS0        equ	15482	;# 
  2124   003C7B                     CLC1GLS1        equ	15483	;# 
  2125   003C7C                     CLC1GLS2        equ	15484	;# 
  2126   003C7D                     CLC1GLS3        equ	15485	;# 
  2127   003C7E                     CLCDATA0        equ	15486	;# 
  2128   003CE5                     CLKRCON         equ	15589	;# 
  2129   003CE6                     CLKRCLK         equ	15590	;# 
  2130   003CFA                     MD1CON0         equ	15610	;# 
  2131   003CFB                     MD1CON1         equ	15611	;# 
  2132   003CFC                     MD1SRC          equ	15612	;# 
  2133   003CFD                     MD1CARL         equ	15613	;# 
  2134   003CFE                     MD1CARH         equ	15614	;# 
  2135   003D10                     SPI1RXB         equ	15632	;# 
  2136   003D11                     SPI1TXB         equ	15633	;# 
  2137   003D12                     SPI1TCNT        equ	15634	;# 
  2138   003D12                     SPI1TCNTL       equ	15634	;# 
  2139   003D13                     SPI1TCNTH       equ	15635	;# 
  2140   003D14                     SPI1CON0        equ	15636	;# 
  2141   003D15                     SPI1CON1        equ	15637	;# 
  2142   003D16                     SPI1CON2        equ	15638	;# 
  2143   003D17                     SPI1STATUS      equ	15639	;# 
  2144   003D18                     SPI1TWIDTH      equ	15640	;# 
  2145   003D19                     SPI1BAUD        equ	15641	;# 
  2146   003D1A                     SPI1INTF        equ	15642	;# 
  2147   003D1B                     SPI1INTE        equ	15643	;# 
  2148   003D1C                     SPI1CLK         equ	15644	;# 
  2149   003D54                     I2C2RXB         equ	15700	;# 
  2150   003D55                     I2C2TXB         equ	15701	;# 
  2151   003D56                     I2C2CNT         equ	15702	;# 
  2152   003D57                     I2C2ADB0        equ	15703	;# 
  2153   003D58                     I2C2ADB1        equ	15704	;# 
  2154   003D59                     I2C2ADR0        equ	15705	;# 
  2155   003D5A                     I2C2ADR1        equ	15706	;# 
  2156   003D5B                     I2C2ADR2        equ	15707	;# 
  2157   003D5C                     I2C2ADR3        equ	15708	;# 
  2158   003D5D                     I2C2CON0        equ	15709	;# 
  2159   003D5E                     I2C2CON1        equ	15710	;# 
  2160   003D5F                     I2C2CON2        equ	15711	;# 
  2161   003D60                     I2C2ERR         equ	15712	;# 
  2162   003D61                     I2C2STAT0       equ	15713	;# 
  2163   003D62                     I2C2STAT1       equ	15714	;# 
  2164   003D63                     I2C2PIR         equ	15715	;# 
  2165   003D64                     I2C2PIE         equ	15716	;# 
  2166   003D65                     I2C2CLK         equ	15717	;# 
  2167   003D66                     I2C2BTO         equ	15718	;# 
  2168   003D6A                     I2C1RXB         equ	15722	;# 
  2169   003D6B                     I2C1TXB         equ	15723	;# 
  2170   003D6C                     I2C1CNT         equ	15724	;# 
  2171   003D6D                     I2C1ADB0        equ	15725	;# 
  2172   003D6E                     I2C1ADB1        equ	15726	;# 
  2173   003D6F                     I2C1ADR0        equ	15727	;# 
  2174   003D70                     I2C1ADR1        equ	15728	;# 
  2175   003D71                     I2C1ADR2        equ	15729	;# 
  2176   003D72                     I2C1ADR3        equ	15730	;# 
  2177   003D73                     I2C1CON0        equ	15731	;# 
  2178   003D74                     I2C1CON1        equ	15732	;# 
  2179   003D75                     I2C1CON2        equ	15733	;# 
  2180   003D76                     I2C1ERR         equ	15734	;# 
  2181   003D77                     I2C1STAT0       equ	15735	;# 
  2182   003D78                     I2C1STAT1       equ	15736	;# 
  2183   003D79                     I2C1PIR         equ	15737	;# 
  2184   003D7A                     I2C1PIE         equ	15738	;# 
  2185   003D7B                     I2C1CLK         equ	15739	;# 
  2186   003D7C                     I2C1BTO         equ	15740	;# 
  2187   003DD0                     U2RXB           equ	15824	;# 
  2188   003DD0                     U2RXBL          equ	15824	;# 
  2189   003DD2                     U2TXB           equ	15826	;# 
  2190   003DD2                     U2TXBL          equ	15826	;# 
  2191   003DD4                     U2P1            equ	15828	;# 
  2192   003DD4                     U2P1L           equ	15828	;# 
  2193   003DD6                     U2P2            equ	15830	;# 
  2194   003DD6                     U2P2L           equ	15830	;# 
  2195   003DD8                     U2P3            equ	15832	;# 
  2196   003DD8                     U2P3L           equ	15832	;# 
  2197   003DDA                     U2CON0          equ	15834	;# 
  2198   003DDB                     U2CON1          equ	15835	;# 
  2199   003DDC                     U2CON2          equ	15836	;# 
  2200   003DDD                     U2BRG           equ	15837	;# 
  2201   003DDD                     U2BRGL          equ	15837	;# 
  2202   003DDE                     U2BRGH          equ	15838	;# 
  2203   003DDF                     U2FIFO          equ	15839	;# 
  2204   003DE0                     U2UIR           equ	15840	;# 
  2205   003DE1                     U2ERRIR         equ	15841	;# 
  2206   003DE2                     U2ERRIE         equ	15842	;# 
  2207   003DE8                     U1RXB           equ	15848	;# 
  2208   003DE8                     U1RXBL          equ	15848	;# 
  2209   003DE9                     U1RXCHK         equ	15849	;# 
  2210   003DEA                     U1TXB           equ	15850	;# 
  2211   003DEA                     U1TXBL          equ	15850	;# 
  2212   003DEB                     U1TXCHK         equ	15851	;# 
  2213   003DEC                     U1P1            equ	15852	;# 
  2214   003DEC                     U1P1L           equ	15852	;# 
  2215   003DED                     U1P1H           equ	15853	;# 
  2216   003DEE                     U1P2            equ	15854	;# 
  2217   003DEE                     U1P2L           equ	15854	;# 
  2218   003DEF                     U1P2H           equ	15855	;# 
  2219   003DF0                     U1P3            equ	15856	;# 
  2220   003DF0                     U1P3L           equ	15856	;# 
  2221   003DF1                     U1P3H           equ	15857	;# 
  2222   003DF2                     U1CON0          equ	15858	;# 
  2223   003DF3                     U1CON1          equ	15859	;# 
  2224   003DF4                     U1CON2          equ	15860	;# 
  2225   003DF5                     U1BRG           equ	15861	;# 
  2226   003DF5                     U1BRGL          equ	15861	;# 
  2227   003DF6                     U1BRGH          equ	15862	;# 
  2228   003DF7                     U1FIFO          equ	15863	;# 
  2229   003DF8                     U1UIR           equ	15864	;# 
  2230   003DF9                     U1ERRIR         equ	15865	;# 
  2231   003DFA                     U1ERRIE         equ	15866	;# 
  2232   003E9C                     DAC1CON1        equ	16028	;# 
  2233   003E9E                     DAC1CON0        equ	16030	;# 
  2234   003EB8                     CM2CON0         equ	16056	;# 
  2235   003EB9                     CM2CON1         equ	16057	;# 
  2236   003EBA                     CM2NCH          equ	16058	;# 
  2237   003EBB                     CM2PCH          equ	16059	;# 
  2238   003EBC                     CM1CON0         equ	16060	;# 
  2239   003EBD                     CM1CON1         equ	16061	;# 
  2240   003EBE                     CM1NCH          equ	16062	;# 
  2241   003EBF                     CM1PCH          equ	16063	;# 
  2242   003EC0                     CMOUT           equ	16064	;# 
  2243   003EC1                     FVRCON          equ	16065	;# 
  2244   003EC3                     ZCDCON          equ	16067	;# 
  2245   003EC9                     HLVDCON0        equ	16073	;# 
  2246   003ECA                     HLVDCON1        equ	16074	;# 
  2247   003ED7                     ADCP            equ	16087	;# 
  2248   003EDE                     ADLTH           equ	16094	;# 
  2249   003EDE                     ADLTHL          equ	16094	;# 
  2250   003EDF                     ADLTHH          equ	16095	;# 
  2251   003EE0                     ADUTH           equ	16096	;# 
  2252   003EE0                     ADUTHL          equ	16096	;# 
  2253   003EE1                     ADUTHH          equ	16097	;# 
  2254   003EE2                     ADERR           equ	16098	;# 
  2255   003EE2                     ADERRL          equ	16098	;# 
  2256   003EE3                     ADERRH          equ	16099	;# 
  2257   003EE4                     ADSTPT          equ	16100	;# 
  2258   003EE4                     ADSTPTL         equ	16100	;# 
  2259   003EE5                     ADSTPTH         equ	16101	;# 
  2260   003EE6                     ADFLTR          equ	16102	;# 
  2261   003EE6                     ADFLTRL         equ	16102	;# 
  2262   003EE7                     ADFLTRH         equ	16103	;# 
  2263   003EE8                     ADACC           equ	16104	;# 
  2264   003EE8                     ADACCL          equ	16104	;# 
  2265   003EE9                     ADACCH          equ	16105	;# 
  2266   003EEA                     ADACCU          equ	16106	;# 
  2267   003EEB                     ADCNT           equ	16107	;# 
  2268   003EEC                     ADRPT           equ	16108	;# 
  2269   003EED                     ADPREV          equ	16109	;# 
  2270   003EED                     ADPREVL         equ	16109	;# 
  2271   003EEE                     ADPREVH         equ	16110	;# 
  2272   003EEF                     ADRES           equ	16111	;# 
  2273   003EEF                     ADRESL          equ	16111	;# 
  2274   003EF0                     ADRESH          equ	16112	;# 
  2275   003EF1                     ADPCH           equ	16113	;# 
  2276   003EF3                     ADACQ           equ	16115	;# 
  2277   003EF3                     ADACQL          equ	16115	;# 
  2278   003EF4                     ADACQH          equ	16116	;# 
  2279   003EF5                     ADCAP           equ	16117	;# 
  2280   003EF6                     ADPRE           equ	16118	;# 
  2281   003EF6                     ADPREL          equ	16118	;# 
  2282   003EF7                     ADPREH          equ	16119	;# 
  2283   003EF8                     ADCON0          equ	16120	;# 
  2284   003EF9                     ADCON1          equ	16121	;# 
  2285   003EFA                     ADCON2          equ	16122	;# 
  2286   003EFB                     ADCON3          equ	16123	;# 
  2287   003EFC                     ADSTAT          equ	16124	;# 
  2288   003EFD                     ADREF           equ	16125	;# 
  2289   003EFE                     ADACT           equ	16126	;# 
  2290   003EFF                     ADCLK           equ	16127	;# 
  2291   003F12                     SMT1TMR         equ	16146	;# 
  2292   003F12                     SMT1TMRL        equ	16146	;# 
  2293   003F13                     SMT1TMRH        equ	16147	;# 
  2294   003F14                     SMT1TMRU        equ	16148	;# 
  2295   003F15                     SMT1CPR         equ	16149	;# 
  2296   003F15                     SMT1CPRL        equ	16149	;# 
  2297   003F16                     SMT1CPRH        equ	16150	;# 
  2298   003F17                     SMT1CPRU        equ	16151	;# 
  2299   003F18                     SMT1CPW         equ	16152	;# 
  2300   003F18                     SMT1CPWL        equ	16152	;# 
  2301   003F19                     SMT1CPWH        equ	16153	;# 
  2302   003F1A                     SMT1CPWU        equ	16154	;# 
  2303   003F1B                     SMT1PR          equ	16155	;# 
  2304   003F1B                     SMT1PRL         equ	16155	;# 
  2305   003F1C                     SMT1PRH         equ	16156	;# 
  2306   003F1D                     SMT1PRU         equ	16157	;# 
  2307   003F1E                     SMT1CON0        equ	16158	;# 
  2308   003F1F                     SMT1CON1        equ	16159	;# 
  2309   003F20                     SMT1STAT        equ	16160	;# 
  2310   003F21                     SMT1CLK         equ	16161	;# 
  2311   003F22                     SMT1SIG         equ	16162	;# 
  2312   003F23                     SMT1WIN         equ	16163	;# 
  2313   003F38                     NCO1ACC         equ	16184	;# 
  2314   003F38                     NCO1ACCL        equ	16184	;# 
  2315   003F39                     NCO1ACCH        equ	16185	;# 
  2316   003F3A                     NCO1ACCU        equ	16186	;# 
  2317   003F3B                     NCO1INC         equ	16187	;# 
  2318   003F3B                     NCO1INCL        equ	16187	;# 
  2319   003F3C                     NCO1INCH        equ	16188	;# 
  2320   003F3D                     NCO1INCU        equ	16189	;# 
  2321   003F3E                     NCO1CON         equ	16190	;# 
  2322   003F3F                     NCO1CLK         equ	16191	;# 
  2323   003F40                     CWG3CLK         equ	16192	;# 
  2324   003F40                     CWG3CLKCON      equ	16192	;# 
  2325   003F41                     CWG3ISM         equ	16193	;# 
  2326   003F41                     CWG3DAT         equ	16193	;# 
  2327   003F42                     CWG3DBR         equ	16194	;# 
  2328   003F43                     CWG3DBF         equ	16195	;# 
  2329   003F44                     CWG3CON0        equ	16196	;# 
  2330   003F45                     CWG3CON1        equ	16197	;# 
  2331   003F46                     CWG3AS0         equ	16198	;# 
  2332   003F47                     CWG3AS1         equ	16199	;# 
  2333   003F48                     CWG3STR         equ	16200	;# 
  2334   003F49                     CWG2CLK         equ	16201	;# 
  2335   003F49                     CWG2CLKCON      equ	16201	;# 
  2336   003F4A                     CWG2ISM         equ	16202	;# 
  2337   003F4A                     CWG2DAT         equ	16202	;# 
  2338   003F4B                     CWG2DBR         equ	16203	;# 
  2339   003F4C                     CWG2DBF         equ	16204	;# 
  2340   003F4D                     CWG2CON0        equ	16205	;# 
  2341   003F4E                     CWG2CON1        equ	16206	;# 
  2342   003F4F                     CWG2AS0         equ	16207	;# 
  2343   003F50                     CWG2AS1         equ	16208	;# 
  2344   003F51                     CWG2STR         equ	16209	;# 
  2345   003F52                     CWG1CLK         equ	16210	;# 
  2346   003F52                     CWG1CLKCON      equ	16210	;# 
  2347   003F53                     CWG1ISM         equ	16211	;# 
  2348   003F53                     CWG1DAT         equ	16211	;# 
  2349   003F54                     CWG1DBR         equ	16212	;# 
  2350   003F55                     CWG1DBF         equ	16213	;# 
  2351   003F56                     CWG1CON0        equ	16214	;# 
  2352   003F57                     CWG1CON1        equ	16215	;# 
  2353   003F58                     CWG1AS0         equ	16216	;# 
  2354   003F59                     CWG1AS1         equ	16217	;# 
  2355   003F5A                     CWG1STR         equ	16218	;# 
  2356   003F5E                     CCPTMRS0        equ	16222	;# 
  2357   003F5F                     CCPTMRS1        equ	16223	;# 
  2358   003F60                     PWM8DC          equ	16224	;# 
  2359   003F60                     PWM8DCL         equ	16224	;# 
  2360   003F61                     PWM8DCH         equ	16225	;# 
  2361   003F62                     PWM8CON         equ	16226	;# 
  2362   003F64                     PWM7DC          equ	16228	;# 
  2363   003F64                     PWM7DCL         equ	16228	;# 
  2364   003F65                     PWM7DCH         equ	16229	;# 
  2365   003F66                     PWM7CON         equ	16230	;# 
  2366   003F68                     PWM6DC          equ	16232	;# 
  2367   003F68                     PWM6DCL         equ	16232	;# 
  2368   003F69                     PWM6DCH         equ	16233	;# 
  2369   003F6A                     PWM6CON         equ	16234	;# 
  2370   003F6C                     PWM5DC          equ	16236	;# 
  2371   003F6C                     PWM5DCL         equ	16236	;# 
  2372   003F6D                     PWM5DCH         equ	16237	;# 
  2373   003F6E                     PWM5CON         equ	16238	;# 
  2374   003F70                     CCPR4           equ	16240	;# 
  2375   003F70                     CCPR4L          equ	16240	;# 
  2376   003F71                     CCPR4H          equ	16241	;# 
  2377   003F72                     CCP4CON         equ	16242	;# 
  2378   003F73                     CCP4CAP         equ	16243	;# 
  2379   003F74                     CCPR3           equ	16244	;# 
  2380   003F74                     CCPR3L          equ	16244	;# 
  2381   003F75                     CCPR3H          equ	16245	;# 
  2382   003F76                     CCP3CON         equ	16246	;# 
  2383   003F77                     CCP3CAP         equ	16247	;# 
  2384   003F78                     CCPR2           equ	16248	;# 
  2385   003F78                     CCPR2L          equ	16248	;# 
  2386   003F79                     CCPR2H          equ	16249	;# 
  2387   003F7A                     CCP2CON         equ	16250	;# 
  2388   003F7B                     CCP2CAP         equ	16251	;# 
  2389   003F7C                     CCPR1           equ	16252	;# 
  2390   003F7C                     CCPR1L          equ	16252	;# 
  2391   003F7D                     CCPR1H          equ	16253	;# 
  2392   003F7E                     CCP1CON         equ	16254	;# 
  2393   003F7F                     CCP1CAP         equ	16255	;# 
  2394   003F92                     T6TMR           equ	16274	;# 
  2395   003F92                     TMR6            equ	16274	;# 
  2396   003F93                     T6PR            equ	16275	;# 
  2397   003F93                     PR6             equ	16275	;# 
  2398   003F94                     T6CON           equ	16276	;# 
  2399   003F95                     T6HLT           equ	16277	;# 
  2400   003F96                     T6CLKCON        equ	16278	;# 
  2401   003F96                     T6CLK           equ	16278	;# 
  2402   003F97                     T6RST           equ	16279	;# 
  2403   003F98                     TMR5            equ	16280	;# 
  2404   003F98                     TMR5L           equ	16280	;# 
  2405   003F99                     TMR5H           equ	16281	;# 
  2406   003F9A                     T5CON           equ	16282	;# 
  2407   003F9A                     TMR5CON         equ	16282	;# 
  2408   003F9B                     T5GCON          equ	16283	;# 
  2409   003F9B                     TMR5GCON        equ	16283	;# 
  2410   003F9C                     T5GATE          equ	16284	;# 
  2411   003F9C                     TMR5GATE        equ	16284	;# 
  2412   003F9D                     T5CLK           equ	16285	;# 
  2413   003F9D                     TMR5CLK         equ	16285	;# 
  2414   003F9D                     PR5             equ	16285	;# 
  2415   003F9E                     T4TMR           equ	16286	;# 
  2416   003F9E                     TMR4            equ	16286	;# 
  2417   003F9F                     T4PR            equ	16287	;# 
  2418   003F9F                     PR4             equ	16287	;# 
  2419   003FA0                     T4CON           equ	16288	;# 
  2420   003FA1                     T4HLT           equ	16289	;# 
  2421   003FA2                     T4CLKCON        equ	16290	;# 
  2422   003FA2                     T4CLK           equ	16290	;# 
  2423   003FA3                     T4RST           equ	16291	;# 
  2424   003FA4                     TMR3            equ	16292	;# 
  2425   003FA4                     TMR3L           equ	16292	;# 
  2426   003FA5                     TMR3H           equ	16293	;# 
  2427   003FA6                     T3CON           equ	16294	;# 
  2428   003FA6                     TMR3CON         equ	16294	;# 
  2429   003FA7                     T3GCON          equ	16295	;# 
  2430   003FA7                     TMR3GCON        equ	16295	;# 
  2431   003FA8                     T3GATE          equ	16296	;# 
  2432   003FA8                     TMR3GATE        equ	16296	;# 
  2433   003FA9                     T3CLK           equ	16297	;# 
  2434   003FA9                     TMR3CLK         equ	16297	;# 
  2435   003FA9                     PR3             equ	16297	;# 
  2436   003FAA                     T2TMR           equ	16298	;# 
  2437   003FAA                     TMR2            equ	16298	;# 
  2438   003FAB                     T2PR            equ	16299	;# 
  2439   003FAB                     PR2             equ	16299	;# 
  2440   003FAC                     T2CON           equ	16300	;# 
  2441   003FAD                     T2HLT           equ	16301	;# 
  2442   003FAE                     T2CLKCON        equ	16302	;# 
  2443   003FAE                     T2CLK           equ	16302	;# 
  2444   003FAF                     T2RST           equ	16303	;# 
  2445   003FB0                     TMR1            equ	16304	;# 
  2446   003FB0                     TMR1L           equ	16304	;# 
  2447   003FB1                     TMR1H           equ	16305	;# 
  2448   003FB2                     T1CON           equ	16306	;# 
  2449   003FB2                     TMR1CON         equ	16306	;# 
  2450   003FB3                     T1GCON          equ	16307	;# 
  2451   003FB3                     TMR1GCON        equ	16307	;# 
  2452   003FB4                     T1GATE          equ	16308	;# 
  2453   003FB4                     TMR1GATE        equ	16308	;# 
  2454   003FB5                     T1CLK           equ	16309	;# 
  2455   003FB5                     TMR1CLK         equ	16309	;# 
  2456   003FB5                     PR1             equ	16309	;# 
  2457   003FB6                     TMR0L           equ	16310	;# 
  2458   003FB6                     TMR0            equ	16310	;# 
  2459   003FB7                     TMR0H           equ	16311	;# 
  2460   003FB7                     PR0             equ	16311	;# 
  2461   003FB8                     T0CON0          equ	16312	;# 
  2462   003FB9                     T0CON1          equ	16313	;# 
  2463   003FBA                     LATA            equ	16314	;# 
  2464   003FBB                     LATB            equ	16315	;# 
  2465   003FBC                     LATC            equ	16316	;# 
  2466   003FBD                     LATD            equ	16317	;# 
  2467   003FBE                     LATE            equ	16318	;# 
  2468   003FBF                     LATF            equ	16319	;# 
  2469   003FC2                     TRISA           equ	16322	;# 
  2470   003FC3                     TRISB           equ	16323	;# 
  2471   003FC4                     TRISC           equ	16324	;# 
  2472   003FC5                     TRISD           equ	16325	;# 
  2473   003FC6                     TRISE           equ	16326	;# 
  2474   003FC7                     TRISF           equ	16327	;# 
  2475   003FCA                     PORTA           equ	16330	;# 
  2476   003FCB                     PORTB           equ	16331	;# 
  2477   003FCC                     PORTC           equ	16332	;# 
  2478   003FCD                     PORTD           equ	16333	;# 
  2479   003FCE                     PORTE           equ	16334	;# 
  2480   003FCF                     PORTF           equ	16335	;# 
  2481   003FD2                     INTCON0         equ	16338	;# 
  2482   003FD3                     INTCON1         equ	16339	;# 
  2483   003FD4                     IVTLOCK         equ	16340	;# 
  2484   003FD5                     IVTBASE         equ	16341	;# 
  2485   003FD5                     IVTBASEL        equ	16341	;# 
  2486   003FD6                     IVTBASEH        equ	16342	;# 
  2487   003FD7                     IVTBASEU        equ	16343	;# 
  2488   003FD8                     STATUS          equ	16344	;# 
  2489   003FD9                     FSR2            equ	16345	;# 
  2490   003FD9                     FSR2L           equ	16345	;# 
  2491   003FDA                     FSR2H           equ	16346	;# 
  2492   003FDB                     PLUSW2          equ	16347	;# 
  2493   003FDC                     PREINC2         equ	16348	;# 
  2494   003FDD                     POSTDEC2        equ	16349	;# 
  2495   003FDE                     POSTINC2        equ	16350	;# 
  2496   003FDF                     INDF2           equ	16351	;# 
  2497   003FE0                     BSR             equ	16352	;# 
  2498   003FE1                     FSR1            equ	16353	;# 
  2499   003FE1                     FSR1L           equ	16353	;# 
  2500   003FE2                     FSR1H           equ	16354	;# 
  2501   003FE3                     PLUSW1          equ	16355	;# 
  2502   003FE4                     PREINC1         equ	16356	;# 
  2503   003FE5                     POSTDEC1        equ	16357	;# 
  2504   003FE6                     POSTINC1        equ	16358	;# 
  2505   003FE7                     INDF1           equ	16359	;# 
  2506   003FE8                     WREG            equ	16360	;# 
  2507   003FE9                     FSR0            equ	16361	;# 
  2508   003FE9                     FSR0L           equ	16361	;# 
  2509   003FEA                     FSR0H           equ	16362	;# 
  2510   003FEB                     PLUSW0          equ	16363	;# 
  2511   003FEC                     PREINC0         equ	16364	;# 
  2512   003FED                     POSTDEC0        equ	16365	;# 
  2513   003FEE                     POSTINC0        equ	16366	;# 
  2514   003FEF                     INDF0           equ	16367	;# 
  2515   003FF0                     PCON0           equ	16368	;# 
  2516   003FF1                     PCON1           equ	16369	;# 
  2517   003FF3                     PROD            equ	16371	;# 
  2518   003FF3                     PRODL           equ	16371	;# 
  2519   003FF4                     PRODH           equ	16372	;# 
  2520   003FF5                     TABLAT          equ	16373	;# 
  2521   003FF6                     TBLPTR          equ	16374	;# 
  2522   003FF6                     TBLPTRL         equ	16374	;# 
  2523   003FF7                     TBLPTRH         equ	16375	;# 
  2524   003FF8                     TBLPTRU         equ	16376	;# 
  2525   003FF9                     PCLAT           equ	16377	;# 
  2526   003FF9                     PCL             equ	16377	;# 
  2527   003FFA                     PCLATH          equ	16378	;# 
  2528   003FFB                     PCLATU          equ	16379	;# 
  2529   003FFC                     STKPTR          equ	16380	;# 
  2530   003FFD                     TOS             equ	16381	;# 
  2531   003FFD                     TOSL            equ	16381	;# 
  2532   003FFE                     TOSH            equ	16382	;# 
  2533   003FFF                     TOSU            equ	16383	;# 
  2534   003880                     STATUS_CSHAD    equ	14464	;# 
  2535   003881                     WREG_CSHAD      equ	14465	;# 
  2536   003882                     BSR_CSHAD       equ	14466	;# 
  2537   003883                     SHADCON         equ	14467	;# 
  2538   003884                     STATUS_SHAD     equ	14468	;# 
  2539   003885                     WREG_SHAD       equ	14469	;# 
  2540   003886                     BSR_SHAD        equ	14470	;# 
  2541   003887                     PCLATH_SHAD     equ	14471	;# 
  2542   003888                     PCLATU_SHAD     equ	14472	;# 
  2543   003889                     FSR0SH          equ	14473	;# 
  2544   003889                     FSR0L_SHAD      equ	14473	;# 
  2545   00388A                     FSR0H_SHAD      equ	14474	;# 
  2546   00388B                     FSR1SH          equ	14475	;# 
  2547   00388B                     FSR1L_SHAD      equ	14475	;# 
  2548   00388C                     FSR1H_SHAD      equ	14476	;# 
  2549   00388D                     FSR2SH          equ	14477	;# 
  2550   00388D                     FSR2L_SHAD      equ	14477	;# 
  2551   00388E                     FSR2H_SHAD      equ	14478	;# 
  2552   00388F                     PRODSH          equ	14479	;# 
  2553   00388F                     PRODL_SHAD      equ	14479	;# 
  2554   003890                     PRODH_SHAD      equ	14480	;# 
  2555   00389D                     IVTADL          equ	14493	;# 
  2556   00389E                     IVTADH          equ	14494	;# 
  2557   00389F                     IVTADU          equ	14495	;# 
  2558   00395B                     WDTCON0         equ	14683	;# 
  2559   00395C                     WDTCON1         equ	14684	;# 
  2560   00395D                     WDTPSL          equ	14685	;# 
  2561   00395E                     WDTPSH          equ	14686	;# 
  2562   00395F                     WDTTMR          equ	14687	;# 
  2563   003960                     CRCDATA         equ	14688	;# 
  2564   003960                     CRCDATL         equ	14688	;# 
  2565   003961                     CRCDATH         equ	14689	;# 
  2566   003962                     CRCACC          equ	14690	;# 
  2567   003962                     CRCACCL         equ	14690	;# 
  2568   003963                     CRCACCH         equ	14691	;# 
  2569   003964                     CRCSHFT         equ	14692	;# 
  2570   003964                     CRCSHIFTL       equ	14692	;# 
  2571   003965                     CRCSHIFTH       equ	14693	;# 
  2572   003966                     CRCXOR          equ	14694	;# 
  2573   003966                     CRCXORL         equ	14694	;# 
  2574   003967                     CRCXORH         equ	14695	;# 
  2575   003968                     CRCCON0         equ	14696	;# 
  2576   003969                     CRCCON1         equ	14697	;# 
  2577   003976                     SCANLADR        equ	14710	;# 
  2578   003976                     SCANLADRL       equ	14710	;# 
  2579   003977                     SCANLADRH       equ	14711	;# 
  2580   003978                     SCANLADRU       equ	14712	;# 
  2581   003979                     SCANHADR        equ	14713	;# 
  2582   003979                     SCANHADRL       equ	14713	;# 
  2583   00397A                     SCANHADRH       equ	14714	;# 
  2584   00397B                     SCANHADRU       equ	14715	;# 
  2585   00397C                     SCANCON0        equ	14716	;# 
  2586   00397D                     SCANTRIG        equ	14717	;# 
  2587   003980                     IPR0            equ	14720	;# 
  2588   003981                     IPR1            equ	14721	;# 
  2589   003982                     IPR2            equ	14722	;# 
  2590   003983                     IPR3            equ	14723	;# 
  2591   003984                     IPR4            equ	14724	;# 
  2592   003985                     IPR5            equ	14725	;# 
  2593   003986                     IPR6            equ	14726	;# 
  2594   003987                     IPR7            equ	14727	;# 
  2595   003988                     IPR8            equ	14728	;# 
  2596   003989                     IPR9            equ	14729	;# 
  2597   00398A                     IPR10           equ	14730	;# 
  2598   003990                     PIE0            equ	14736	;# 
  2599   003991                     PIE1            equ	14737	;# 
  2600   003992                     PIE2            equ	14738	;# 
  2601   003993                     PIE3            equ	14739	;# 
  2602   003994                     PIE4            equ	14740	;# 
  2603   003995                     PIE5            equ	14741	;# 
  2604   003996                     PIE6            equ	14742	;# 
  2605   003997                     PIE7            equ	14743	;# 
  2606   003998                     PIE8            equ	14744	;# 
  2607   003999                     PIE9            equ	14745	;# 
  2608   00399A                     PIE10           equ	14746	;# 
  2609   0039A0                     PIR0            equ	14752	;# 
  2610   0039A1                     PIR1            equ	14753	;# 
  2611   0039A2                     PIR2            equ	14754	;# 
  2612   0039A3                     PIR3            equ	14755	;# 
  2613   0039A4                     PIR4            equ	14756	;# 
  2614   0039A5                     PIR5            equ	14757	;# 
  2615   0039A6                     PIR6            equ	14758	;# 
  2616   0039A7                     PIR7            equ	14759	;# 
  2617   0039A8                     PIR8            equ	14760	;# 
  2618   0039A9                     PIR9            equ	14761	;# 
  2619   0039AA                     PIR10           equ	14762	;# 
  2620   0039C0                     PMD0            equ	14784	;# 
  2621   0039C1                     PMD1            equ	14785	;# 
  2622   0039C2                     PMD2            equ	14786	;# 
  2623   0039C3                     PMD3            equ	14787	;# 
  2624   0039C4                     PMD4            equ	14788	;# 
  2625   0039C5                     PMD5            equ	14789	;# 
  2626   0039C6                     PMD6            equ	14790	;# 
  2627   0039C7                     PMD7            equ	14791	;# 
  2628   0039D0                     BORCON          equ	14800	;# 
  2629   0039D1                     VREGCON         equ	14801	;# 
  2630   0039D8                     CPUDOZE         equ	14808	;# 
  2631   0039D9                     OSCCON1         equ	14809	;# 
  2632   0039DA                     OSCCON2         equ	14810	;# 
  2633   0039DB                     OSCCON3         equ	14811	;# 
  2634   0039DC                     OSCSTAT         equ	14812	;# 
  2635   0039DC                     OSCSTAT1        equ	14812	;# 
  2636   0039DD                     OSCEN           equ	14813	;# 
  2637   0039DE                     OSCTUNE         equ	14814	;# 
  2638   0039DF                     OSCFRQ          equ	14815	;# 
  2639   0039E0                     NVMADRL         equ	14816	;# 
  2640   0039E1                     NVMADRH         equ	14817	;# 
  2641   0039E3                     NVMDAT          equ	14819	;# 
  2642   0039E5                     NVMCON1         equ	14821	;# 
  2643   0039E6                     NVMCON2         equ	14822	;# 
  2644   0039EF                     PRLOCK          equ	14831	;# 
  2645   0039F1                     ISRPR           equ	14833	;# 
  2646   0039F2                     MAINPR          equ	14834	;# 
  2647   0039F3                     DMA1PR          equ	14835	;# 
  2648   0039F4                     DMA2PR          equ	14836	;# 
  2649   0039F7                     SCANPR          equ	14839	;# 
  2650   003A00                     RA0PPS          equ	14848	;# 
  2651   003A01                     RA1PPS          equ	14849	;# 
  2652   003A02                     RA2PPS          equ	14850	;# 
  2653   003A03                     RA3PPS          equ	14851	;# 
  2654   003A04                     RA4PPS          equ	14852	;# 
  2655   003A05                     RA5PPS          equ	14853	;# 
  2656   003A06                     RA6PPS          equ	14854	;# 
  2657   003A07                     RA7PPS          equ	14855	;# 
  2658   003A08                     RB0PPS          equ	14856	;# 
  2659   003A09                     RB1PPS          equ	14857	;# 
  2660   003A0A                     RB2PPS          equ	14858	;# 
  2661   003A0B                     RB3PPS          equ	14859	;# 
  2662   003A0C                     RB4PPS          equ	14860	;# 
  2663   003A0D                     RB5PPS          equ	14861	;# 
  2664   003A0E                     RB6PPS          equ	14862	;# 
  2665   003A0F                     RB7PPS          equ	14863	;# 
  2666   003A10                     RC0PPS          equ	14864	;# 
  2667   003A11                     RC1PPS          equ	14865	;# 
  2668   003A12                     RC2PPS          equ	14866	;# 
  2669   003A13                     RC3PPS          equ	14867	;# 
  2670   003A14                     RC4PPS          equ	14868	;# 
  2671   003A15                     RC5PPS          equ	14869	;# 
  2672   003A16                     RC6PPS          equ	14870	;# 
  2673   003A17                     RC7PPS          equ	14871	;# 
  2674   003A18                     RD0PPS          equ	14872	;# 
  2675   003A19                     RD1PPS          equ	14873	;# 
  2676   003A1A                     RD2PPS          equ	14874	;# 
  2677   003A1B                     RD3PPS          equ	14875	;# 
  2678   003A1C                     RD4PPS          equ	14876	;# 
  2679   003A1D                     RD5PPS          equ	14877	;# 
  2680   003A1E                     RD6PPS          equ	14878	;# 
  2681   003A1F                     RD7PPS          equ	14879	;# 
  2682   003A20                     RE0PPS          equ	14880	;# 
  2683   003A21                     RE1PPS          equ	14881	;# 
  2684   003A22                     RE2PPS          equ	14882	;# 
  2685   003A28                     RF0PPS          equ	14888	;# 
  2686   003A29                     RF1PPS          equ	14889	;# 
  2687   003A2A                     RF2PPS          equ	14890	;# 
  2688   003A2B                     RF3PPS          equ	14891	;# 
  2689   003A2C                     RF4PPS          equ	14892	;# 
  2690   003A2D                     RF5PPS          equ	14893	;# 
  2691   003A2E                     RF6PPS          equ	14894	;# 
  2692   003A2F                     RF7PPS          equ	14895	;# 
  2693   003A40                     ANSELA          equ	14912	;# 
  2694   003A41                     WPUA            equ	14913	;# 
  2695   003A42                     ODCONA          equ	14914	;# 
  2696   003A43                     SLRCONA         equ	14915	;# 
  2697   003A44                     INLVLA          equ	14916	;# 
  2698   003A45                     IOCAP           equ	14917	;# 
  2699   003A46                     IOCAN           equ	14918	;# 
  2700   003A47                     IOCAF           equ	14919	;# 
  2701   003A50                     ANSELB          equ	14928	;# 
  2702   003A51                     WPUB            equ	14929	;# 
  2703   003A52                     ODCONB          equ	14930	;# 
  2704   003A53                     SLRCONB         equ	14931	;# 
  2705   003A54                     INLVLB          equ	14932	;# 
  2706   003A55                     IOCBP           equ	14933	;# 
  2707   003A56                     IOCBN           equ	14934	;# 
  2708   003A57                     IOCBF           equ	14935	;# 
  2709   003A5A                     RB1I2C          equ	14938	;# 
  2710   003A5B                     RB2I2C          equ	14939	;# 
  2711   003A60                     ANSELC          equ	14944	;# 
  2712   003A61                     WPUC            equ	14945	;# 
  2713   003A62                     ODCONC          equ	14946	;# 
  2714   003A63                     SLRCONC         equ	14947	;# 
  2715   003A64                     INLVLC          equ	14948	;# 
  2716   003A65                     IOCCP           equ	14949	;# 
  2717   003A66                     IOCCN           equ	14950	;# 
  2718   003A67                     IOCCF           equ	14951	;# 
  2719   003A6A                     RC3I2C          equ	14954	;# 
  2720   003A6B                     RC4I2C          equ	14955	;# 
  2721   003A70                     ANSELD          equ	14960	;# 
  2722   003A71                     WPUD            equ	14961	;# 
  2723   003A72                     ODCOND          equ	14962	;# 
  2724   003A73                     SLRCOND         equ	14963	;# 
  2725   003A74                     INLVLD          equ	14964	;# 
  2726   003A7A                     RD0I2C          equ	14970	;# 
  2727   003A7B                     RD1I2C          equ	14971	;# 
  2728   003A80                     ANSELE          equ	14976	;# 
  2729   003A81                     WPUE            equ	14977	;# 
  2730   003A82                     ODCONE          equ	14978	;# 
  2731   003A83                     SLRCONE         equ	14979	;# 
  2732   003A84                     INLVLE          equ	14980	;# 
  2733   003A85                     IOCEP           equ	14981	;# 
  2734   003A86                     IOCEN           equ	14982	;# 
  2735   003A87                     IOCEF           equ	14983	;# 
  2736   003A90                     ANSELF          equ	14992	;# 
  2737   003A91                     WPUF            equ	14993	;# 
  2738   003A92                     ODCONF          equ	14994	;# 
  2739   003A93                     SLRCONF         equ	14995	;# 
  2740   003A94                     INLVLF          equ	14996	;# 
  2741   003ABF                     PPSLOCK         equ	15039	;# 
  2742   003AC0                     INT0PPS         equ	15040	;# 
  2743   003AC1                     INT1PPS         equ	15041	;# 
  2744   003AC2                     INT2PPS         equ	15042	;# 
  2745   003AC3                     T0CKIPPS        equ	15043	;# 
  2746   003AC4                     T1CKIPPS        equ	15044	;# 
  2747   003AC5                     T1GPPS          equ	15045	;# 
  2748   003AC6                     T3CKIPPS        equ	15046	;# 
  2749   003AC7                     T3GPPS          equ	15047	;# 
  2750   003AC8                     T5CKIPPS        equ	15048	;# 
  2751   003AC9                     T5GPPS          equ	15049	;# 
  2752   003ACA                     T2INPPS         equ	15050	;# 
  2753   003ACB                     T4INPPS         equ	15051	;# 
  2754   003ACC                     T6INPPS         equ	15052	;# 
  2755   003ACD                     CCP1PPS         equ	15053	;# 
  2756   003ACE                     CCP2PPS         equ	15054	;# 
  2757   003ACF                     CCP3PPS         equ	15055	;# 
  2758   003AD0                     CCP4PPS         equ	15056	;# 
  2759   003AD1                     SMT1WINPPS      equ	15057	;# 
  2760   003AD2                     SMT1SIGPPS      equ	15058	;# 
  2761   003AD3                     CWG1INPPS       equ	15059	;# 
  2762   003AD4                     CWG2INPPS       equ	15060	;# 
  2763   003AD5                     CWG3INPPS       equ	15061	;# 
  2764   003AD6                     MD1CARLPPS      equ	15062	;# 
  2765   003AD7                     MD1CARHPPS      equ	15063	;# 
  2766   003AD8                     MD1SRCPPS       equ	15064	;# 
  2767   003AD9                     CLCIN0PPS       equ	15065	;# 
  2768   003ADA                     CLCIN1PPS       equ	15066	;# 
  2769   003ADB                     CLCIN2PPS       equ	15067	;# 
  2770   003ADC                     CLCIN3PPS       equ	15068	;# 
  2771   003ADD                     ADACTPPS        equ	15069	;# 
  2772   003ADE                     SPI1SCKPPS      equ	15070	;# 
  2773   003ADF                     SPI1SDIPPS      equ	15071	;# 
  2774   003AE0                     SPI1SSPPS       equ	15072	;# 
  2775   003AE1                     I2C1SCLPPS      equ	15073	;# 
  2776   003AE2                     I2C1SDAPPS      equ	15074	;# 
  2777   003AE3                     I2C2SCLPPS      equ	15075	;# 
  2778   003AE4                     I2C2SDAPPS      equ	15076	;# 
  2779   003AE5                     U1RXPPS         equ	15077	;# 
  2780   003AE6                     U1CTSPPS        equ	15078	;# 
  2781   003AE8                     U2RXPPS         equ	15080	;# 
  2782   003AE9                     U2CTSPPS        equ	15081	;# 
  2783   003BC9                     DMA2BUF         equ	15305	;# 
  2784   003BCA                     DMA2DCNT        equ	15306	;# 
  2785   003BCA                     DMA2DCNTL       equ	15306	;# 
  2786   003BCB                     DMA2DCNTH       equ	15307	;# 
  2787   003BCC                     DMA2DPTR        equ	15308	;# 
  2788   003BCC                     DMA2DPTRL       equ	15308	;# 
  2789   003BCD                     DMA2DPTRH       equ	15309	;# 
  2790   003BCE                     DMA2DSZ         equ	15310	;# 
  2791   003BCE                     DMA2DSZL        equ	15310	;# 
  2792   003BCF                     DMA2DSZH        equ	15311	;# 
  2793   003BD0                     DMA2DSA         equ	15312	;# 
  2794   003BD0                     DMA2DSAL        equ	15312	;# 
  2795   003BD1                     DMA2DSAH        equ	15313	;# 
  2796   003BD2                     DMA2SCNT        equ	15314	;# 
  2797   003BD2                     DMA2SCNTL       equ	15314	;# 
  2798   003BD3                     DMA2SCNTH       equ	15315	;# 
  2799   003BD4                     DMA2SPTR        equ	15316	;# 
  2800   003BD4                     DMA2SPTRL       equ	15316	;# 
  2801   003BD5                     DMA2SPTRH       equ	15317	;# 
  2802   003BD6                     DMA2SPTRU       equ	15318	;# 
  2803   003BD7                     DMA2SSZ         equ	15319	;# 
  2804   003BD7                     DMA2SSZL        equ	15319	;# 
  2805   003BD8                     DMA2SSZH        equ	15320	;# 
  2806   003BD9                     DMA2SSA         equ	15321	;# 
  2807   003BD9                     DMA2SSAL        equ	15321	;# 
  2808   003BDA                     DMA2SSAH        equ	15322	;# 
  2809   003BDB                     DMA2SSAU        equ	15323	;# 
  2810   003BDC                     DMA2CON0        equ	15324	;# 
  2811   003BDD                     DMA2CON1        equ	15325	;# 
  2812   003BDE                     DMA2AIRQ        equ	15326	;# 
  2813   003BDF                     DMA2SIRQ        equ	15327	;# 
  2814   003BE9                     DMA1BUF         equ	15337	;# 
  2815   003BEA                     DMA1DCNT        equ	15338	;# 
  2816   003BEA                     DMA1DCNTL       equ	15338	;# 
  2817   003BEB                     DMA1DCNTH       equ	15339	;# 
  2818   003BEC                     DMA1DPTR        equ	15340	;# 
  2819   003BEC                     DMA1DPTRL       equ	15340	;# 
  2820   003BED                     DMA1DPTRH       equ	15341	;# 
  2821   003BEE                     DMA1DSZ         equ	15342	;# 
  2822   003BEE                     DMA1DSZL        equ	15342	;# 
  2823   003BEF                     DMA1DSZH        equ	15343	;# 
  2824   003BF0                     DMA1DSA         equ	15344	;# 
  2825   003BF0                     DMA1DSAL        equ	15344	;# 
  2826   003BF1                     DMA1DSAH        equ	15345	;# 
  2827   003BF2                     DMA1SCNT        equ	15346	;# 
  2828   003BF2                     DMA1SCNTL       equ	15346	;# 
  2829   003BF3                     DMA1SCNTH       equ	15347	;# 
  2830   003BF4                     DMA1SPTR        equ	15348	;# 
  2831   003BF4                     DMA1SPTRL       equ	15348	;# 
  2832   003BF5                     DMA1SPTRH       equ	15349	;# 
  2833   003BF6                     DMA1SPTRU       equ	15350	;# 
  2834   003BF7                     DMA1SSZ         equ	15351	;# 
  2835   003BF7                     DMA1SSZL        equ	15351	;# 
  2836   003BF8                     DMA1SSZH        equ	15352	;# 
  2837   003BF9                     DMA1SSA         equ	15353	;# 
  2838   003BF9                     DMA1SSAL        equ	15353	;# 
  2839   003BFA                     DMA1SSAH        equ	15354	;# 
  2840   003BFB                     DMA1SSAU        equ	15355	;# 
  2841   003BFC                     DMA1CON0        equ	15356	;# 
  2842   003BFD                     DMA1CON1        equ	15357	;# 
  2843   003BFE                     DMA1AIRQ        equ	15358	;# 
  2844   003BFF                     DMA1SIRQ        equ	15359	;# 
  2845   003C56                     CLC4CON         equ	15446	;# 
  2846   003C57                     CLC4POL         equ	15447	;# 
  2847   003C58                     CLC4SEL0        equ	15448	;# 
  2848   003C59                     CLC4SEL1        equ	15449	;# 
  2849   003C5A                     CLC4SEL2        equ	15450	;# 
  2850   003C5B                     CLC4SEL3        equ	15451	;# 
  2851   003C5C                     CLC4GLS0        equ	15452	;# 
  2852   003C5D                     CLC4GLS1        equ	15453	;# 
  2853   003C5E                     CLC4GLS2        equ	15454	;# 
  2854   003C5F                     CLC4GLS3        equ	15455	;# 
  2855   003C60                     CLC3CON         equ	15456	;# 
  2856   003C61                     CLC3POL         equ	15457	;# 
  2857   003C62                     CLC3SEL0        equ	15458	;# 
  2858   003C63                     CLC3SEL1        equ	15459	;# 
  2859   003C64                     CLC3SEL2        equ	15460	;# 
  2860   003C65                     CLC3SEL3        equ	15461	;# 
  2861   003C66                     CLC3GLS0        equ	15462	;# 
  2862   003C67                     CLC3GLS1        equ	15463	;# 
  2863   003C68                     CLC3GLS2        equ	15464	;# 
  2864   003C69                     CLC3GLS3        equ	15465	;# 
  2865   003C6A                     CLC2CON         equ	15466	;# 
  2866   003C6B                     CLC2POL         equ	15467	;# 
  2867   003C6C                     CLC2SEL0        equ	15468	;# 
  2868   003C6D                     CLC2SEL1        equ	15469	;# 
  2869   003C6E                     CLC2SEL2        equ	15470	;# 
  2870   003C6F                     CLC2SEL3        equ	15471	;# 
  2871   003C70                     CLC2GLS0        equ	15472	;# 
  2872   003C71                     CLC2GLS1        equ	15473	;# 
  2873   003C72                     CLC2GLS2        equ	15474	;# 
  2874   003C73                     CLC2GLS3        equ	15475	;# 
  2875   003C74                     CLC1CON         equ	15476	;# 
  2876   003C75                     CLC1POL         equ	15477	;# 
  2877   003C76                     CLC1SEL0        equ	15478	;# 
  2878   003C77                     CLC1SEL1        equ	15479	;# 
  2879   003C78                     CLC1SEL2        equ	15480	;# 
  2880   003C79                     CLC1SEL3        equ	15481	;# 
  2881   003C7A                     CLC1GLS0        equ	15482	;# 
  2882   003C7B                     CLC1GLS1        equ	15483	;# 
  2883   003C7C                     CLC1GLS2        equ	15484	;# 
  2884   003C7D                     CLC1GLS3        equ	15485	;# 
  2885   003C7E                     CLCDATA0        equ	15486	;# 
  2886   003CE5                     CLKRCON         equ	15589	;# 
  2887   003CE6                     CLKRCLK         equ	15590	;# 
  2888   003CFA                     MD1CON0         equ	15610	;# 
  2889   003CFB                     MD1CON1         equ	15611	;# 
  2890   003CFC                     MD1SRC          equ	15612	;# 
  2891   003CFD                     MD1CARL         equ	15613	;# 
  2892   003CFE                     MD1CARH         equ	15614	;# 
  2893   003D10                     SPI1RXB         equ	15632	;# 
  2894   003D11                     SPI1TXB         equ	15633	;# 
  2895   003D12                     SPI1TCNT        equ	15634	;# 
  2896   003D12                     SPI1TCNTL       equ	15634	;# 
  2897   003D13                     SPI1TCNTH       equ	15635	;# 
  2898   003D14                     SPI1CON0        equ	15636	;# 
  2899   003D15                     SPI1CON1        equ	15637	;# 
  2900   003D16                     SPI1CON2        equ	15638	;# 
  2901   003D17                     SPI1STATUS      equ	15639	;# 
  2902   003D18                     SPI1TWIDTH      equ	15640	;# 
  2903   003D19                     SPI1BAUD        equ	15641	;# 
  2904   003D1A                     SPI1INTF        equ	15642	;# 
  2905   003D1B                     SPI1INTE        equ	15643	;# 
  2906   003D1C                     SPI1CLK         equ	15644	;# 
  2907   003D54                     I2C2RXB         equ	15700	;# 
  2908   003D55                     I2C2TXB         equ	15701	;# 
  2909   003D56                     I2C2CNT         equ	15702	;# 
  2910   003D57                     I2C2ADB0        equ	15703	;# 
  2911   003D58                     I2C2ADB1        equ	15704	;# 
  2912   003D59                     I2C2ADR0        equ	15705	;# 
  2913   003D5A                     I2C2ADR1        equ	15706	;# 
  2914   003D5B                     I2C2ADR2        equ	15707	;# 
  2915   003D5C                     I2C2ADR3        equ	15708	;# 
  2916   003D5D                     I2C2CON0        equ	15709	;# 
  2917   003D5E                     I2C2CON1        equ	15710	;# 
  2918   003D5F                     I2C2CON2        equ	15711	;# 
  2919   003D60                     I2C2ERR         equ	15712	;# 
  2920   003D61                     I2C2STAT0       equ	15713	;# 
  2921   003D62                     I2C2STAT1       equ	15714	;# 
  2922   003D63                     I2C2PIR         equ	15715	;# 
  2923   003D64                     I2C2PIE         equ	15716	;# 
  2924   003D65                     I2C2CLK         equ	15717	;# 
  2925   003D66                     I2C2BTO         equ	15718	;# 
  2926   003D6A                     I2C1RXB         equ	15722	;# 
  2927   003D6B                     I2C1TXB         equ	15723	;# 
  2928   003D6C                     I2C1CNT         equ	15724	;# 
  2929   003D6D                     I2C1ADB0        equ	15725	;# 
  2930   003D6E                     I2C1ADB1        equ	15726	;# 
  2931   003D6F                     I2C1ADR0        equ	15727	;# 
  2932   003D70                     I2C1ADR1        equ	15728	;# 
  2933   003D71                     I2C1ADR2        equ	15729	;# 
  2934   003D72                     I2C1ADR3        equ	15730	;# 
  2935   003D73                     I2C1CON0        equ	15731	;# 
  2936   003D74                     I2C1CON1        equ	15732	;# 
  2937   003D75                     I2C1CON2        equ	15733	;# 
  2938   003D76                     I2C1ERR         equ	15734	;# 
  2939   003D77                     I2C1STAT0       equ	15735	;# 
  2940   003D78                     I2C1STAT1       equ	15736	;# 
  2941   003D79                     I2C1PIR         equ	15737	;# 
  2942   003D7A                     I2C1PIE         equ	15738	;# 
  2943   003D7B                     I2C1CLK         equ	15739	;# 
  2944   003D7C                     I2C1BTO         equ	15740	;# 
  2945   003DD0                     U2RXB           equ	15824	;# 
  2946   003DD0                     U2RXBL          equ	15824	;# 
  2947   003DD2                     U2TXB           equ	15826	;# 
  2948   003DD2                     U2TXBL          equ	15826	;# 
  2949   003DD4                     U2P1            equ	15828	;# 
  2950   003DD4                     U2P1L           equ	15828	;# 
  2951   003DD6                     U2P2            equ	15830	;# 
  2952   003DD6                     U2P2L           equ	15830	;# 
  2953   003DD8                     U2P3            equ	15832	;# 
  2954   003DD8                     U2P3L           equ	15832	;# 
  2955   003DDA                     U2CON0          equ	15834	;# 
  2956   003DDB                     U2CON1          equ	15835	;# 
  2957   003DDC                     U2CON2          equ	15836	;# 
  2958   003DDD                     U2BRG           equ	15837	;# 
  2959   003DDD                     U2BRGL          equ	15837	;# 
  2960   003DDE                     U2BRGH          equ	15838	;# 
  2961   003DDF                     U2FIFO          equ	15839	;# 
  2962   003DE0                     U2UIR           equ	15840	;# 
  2963   003DE1                     U2ERRIR         equ	15841	;# 
  2964   003DE2                     U2ERRIE         equ	15842	;# 
  2965   003DE8                     U1RXB           equ	15848	;# 
  2966   003DE8                     U1RXBL          equ	15848	;# 
  2967   003DE9                     U1RXCHK         equ	15849	;# 
  2968   003DEA                     U1TXB           equ	15850	;# 
  2969   003DEA                     U1TXBL          equ	15850	;# 
  2970   003DEB                     U1TXCHK         equ	15851	;# 
  2971   003DEC                     U1P1            equ	15852	;# 
  2972   003DEC                     U1P1L           equ	15852	;# 
  2973   003DED                     U1P1H           equ	15853	;# 
  2974   003DEE                     U1P2            equ	15854	;# 
  2975   003DEE                     U1P2L           equ	15854	;# 
  2976   003DEF                     U1P2H           equ	15855	;# 
  2977   003DF0                     U1P3            equ	15856	;# 
  2978   003DF0                     U1P3L           equ	15856	;# 
  2979   003DF1                     U1P3H           equ	15857	;# 
  2980   003DF2                     U1CON0          equ	15858	;# 
  2981   003DF3                     U1CON1          equ	15859	;# 
  2982   003DF4                     U1CON2          equ	15860	;# 
  2983   003DF5                     U1BRG           equ	15861	;# 
  2984   003DF5                     U1BRGL          equ	15861	;# 
  2985   003DF6                     U1BRGH          equ	15862	;# 
  2986   003DF7                     U1FIFO          equ	15863	;# 
  2987   003DF8                     U1UIR           equ	15864	;# 
  2988   003DF9                     U1ERRIR         equ	15865	;# 
  2989   003DFA                     U1ERRIE         equ	15866	;# 
  2990   003E9C                     DAC1CON1        equ	16028	;# 
  2991   003E9E                     DAC1CON0        equ	16030	;# 
  2992   003EB8                     CM2CON0         equ	16056	;# 
  2993   003EB9                     CM2CON1         equ	16057	;# 
  2994   003EBA                     CM2NCH          equ	16058	;# 
  2995   003EBB                     CM2PCH          equ	16059	;# 
  2996   003EBC                     CM1CON0         equ	16060	;# 
  2997   003EBD                     CM1CON1         equ	16061	;# 
  2998   003EBE                     CM1NCH          equ	16062	;# 
  2999   003EBF                     CM1PCH          equ	16063	;# 
  3000   003EC0                     CMOUT           equ	16064	;# 
  3001   003EC1                     FVRCON          equ	16065	;# 
  3002   003EC3                     ZCDCON          equ	16067	;# 
  3003   003EC9                     HLVDCON0        equ	16073	;# 
  3004   003ECA                     HLVDCON1        equ	16074	;# 
  3005   003ED7                     ADCP            equ	16087	;# 
  3006   003EDE                     ADLTH           equ	16094	;# 
  3007   003EDE                     ADLTHL          equ	16094	;# 
  3008   003EDF                     ADLTHH          equ	16095	;# 
  3009   003EE0                     ADUTH           equ	16096	;# 
  3010   003EE0                     ADUTHL          equ	16096	;# 
  3011   003EE1                     ADUTHH          equ	16097	;# 
  3012   003EE2                     ADERR           equ	16098	;# 
  3013   003EE2                     ADERRL          equ	16098	;# 
  3014   003EE3                     ADERRH          equ	16099	;# 
  3015   003EE4                     ADSTPT          equ	16100	;# 
  3016   003EE4                     ADSTPTL         equ	16100	;# 
  3017   003EE5                     ADSTPTH         equ	16101	;# 
  3018   003EE6                     ADFLTR          equ	16102	;# 
  3019   003EE6                     ADFLTRL         equ	16102	;# 
  3020   003EE7                     ADFLTRH         equ	16103	;# 
  3021   003EE8                     ADACC           equ	16104	;# 
  3022   003EE8                     ADACCL          equ	16104	;# 
  3023   003EE9                     ADACCH          equ	16105	;# 
  3024   003EEA                     ADACCU          equ	16106	;# 
  3025   003EEB                     ADCNT           equ	16107	;# 
  3026   003EEC                     ADRPT           equ	16108	;# 
  3027   003EED                     ADPREV          equ	16109	;# 
  3028   003EED                     ADPREVL         equ	16109	;# 
  3029   003EEE                     ADPREVH         equ	16110	;# 
  3030   003EEF                     ADRES           equ	16111	;# 
  3031   003EEF                     ADRESL          equ	16111	;# 
  3032   003EF0                     ADRESH          equ	16112	;# 
  3033   003EF1                     ADPCH           equ	16113	;# 
  3034   003EF3                     ADACQ           equ	16115	;# 
  3035   003EF3                     ADACQL          equ	16115	;# 
  3036   003EF4                     ADACQH          equ	16116	;# 
  3037   003EF5                     ADCAP           equ	16117	;# 
  3038   003EF6                     ADPRE           equ	16118	;# 
  3039   003EF6                     ADPREL          equ	16118	;# 
  3040   003EF7                     ADPREH          equ	16119	;# 
  3041   003EF8                     ADCON0          equ	16120	;# 
  3042   003EF9                     ADCON1          equ	16121	;# 
  3043   003EFA                     ADCON2          equ	16122	;# 
  3044   003EFB                     ADCON3          equ	16123	;# 
  3045   003EFC                     ADSTAT          equ	16124	;# 
  3046   003EFD                     ADREF           equ	16125	;# 
  3047   003EFE                     ADACT           equ	16126	;# 
  3048   003EFF                     ADCLK           equ	16127	;# 
  3049   003F12                     SMT1TMR         equ	16146	;# 
  3050   003F12                     SMT1TMRL        equ	16146	;# 
  3051   003F13                     SMT1TMRH        equ	16147	;# 
  3052   003F14                     SMT1TMRU        equ	16148	;# 
  3053   003F15                     SMT1CPR         equ	16149	;# 
  3054   003F15                     SMT1CPRL        equ	16149	;# 
  3055   003F16                     SMT1CPRH        equ	16150	;# 
  3056   003F17                     SMT1CPRU        equ	16151	;# 
  3057   003F18                     SMT1CPW         equ	16152	;# 
  3058   003F18                     SMT1CPWL        equ	16152	;# 
  3059   003F19                     SMT1CPWH        equ	16153	;# 
  3060   003F1A                     SMT1CPWU        equ	16154	;# 
  3061   003F1B                     SMT1PR          equ	16155	;# 
  3062   003F1B                     SMT1PRL         equ	16155	;# 
  3063   003F1C                     SMT1PRH         equ	16156	;# 
  3064   003F1D                     SMT1PRU         equ	16157	;# 
  3065   003F1E                     SMT1CON0        equ	16158	;# 
  3066   003F1F                     SMT1CON1        equ	16159	;# 
  3067   003F20                     SMT1STAT        equ	16160	;# 
  3068   003F21                     SMT1CLK         equ	16161	;# 
  3069   003F22                     SMT1SIG         equ	16162	;# 
  3070   003F23                     SMT1WIN         equ	16163	;# 
  3071   003F38                     NCO1ACC         equ	16184	;# 
  3072   003F38                     NCO1ACCL        equ	16184	;# 
  3073   003F39                     NCO1ACCH        equ	16185	;# 
  3074   003F3A                     NCO1ACCU        equ	16186	;# 
  3075   003F3B                     NCO1INC         equ	16187	;# 
  3076   003F3B                     NCO1INCL        equ	16187	;# 
  3077   003F3C                     NCO1INCH        equ	16188	;# 
  3078   003F3D                     NCO1INCU        equ	16189	;# 
  3079   003F3E                     NCO1CON         equ	16190	;# 
  3080   003F3F                     NCO1CLK         equ	16191	;# 
  3081   003F40                     CWG3CLK         equ	16192	;# 
  3082   003F40                     CWG3CLKCON      equ	16192	;# 
  3083   003F41                     CWG3ISM         equ	16193	;# 
  3084   003F41                     CWG3DAT         equ	16193	;# 
  3085   003F42                     CWG3DBR         equ	16194	;# 
  3086   003F43                     CWG3DBF         equ	16195	;# 
  3087   003F44                     CWG3CON0        equ	16196	;# 
  3088   003F45                     CWG3CON1        equ	16197	;# 
  3089   003F46                     CWG3AS0         equ	16198	;# 
  3090   003F47                     CWG3AS1         equ	16199	;# 
  3091   003F48                     CWG3STR         equ	16200	;# 
  3092   003F49                     CWG2CLK         equ	16201	;# 
  3093   003F49                     CWG2CLKCON      equ	16201	;# 
  3094   003F4A                     CWG2ISM         equ	16202	;# 
  3095   003F4A                     CWG2DAT         equ	16202	;# 
  3096   003F4B                     CWG2DBR         equ	16203	;# 
  3097   003F4C                     CWG2DBF         equ	16204	;# 
  3098   003F4D                     CWG2CON0        equ	16205	;# 
  3099   003F4E                     CWG2CON1        equ	16206	;# 
  3100   003F4F                     CWG2AS0         equ	16207	;# 
  3101   003F50                     CWG2AS1         equ	16208	;# 
  3102   003F51                     CWG2STR         equ	16209	;# 
  3103   003F52                     CWG1CLK         equ	16210	;# 
  3104   003F52                     CWG1CLKCON      equ	16210	;# 
  3105   003F53                     CWG1ISM         equ	16211	;# 
  3106   003F53                     CWG1DAT         equ	16211	;# 
  3107   003F54                     CWG1DBR         equ	16212	;# 
  3108   003F55                     CWG1DBF         equ	16213	;# 
  3109   003F56                     CWG1CON0        equ	16214	;# 
  3110   003F57                     CWG1CON1        equ	16215	;# 
  3111   003F58                     CWG1AS0         equ	16216	;# 
  3112   003F59                     CWG1AS1         equ	16217	;# 
  3113   003F5A                     CWG1STR         equ	16218	;# 
  3114   003F5E                     CCPTMRS0        equ	16222	;# 
  3115   003F5F                     CCPTMRS1        equ	16223	;# 
  3116   003F60                     PWM8DC          equ	16224	;# 
  3117   003F60                     PWM8DCL         equ	16224	;# 
  3118   003F61                     PWM8DCH         equ	16225	;# 
  3119   003F62                     PWM8CON         equ	16226	;# 
  3120   003F64                     PWM7DC          equ	16228	;# 
  3121   003F64                     PWM7DCL         equ	16228	;# 
  3122   003F65                     PWM7DCH         equ	16229	;# 
  3123   003F66                     PWM7CON         equ	16230	;# 
  3124   003F68                     PWM6DC          equ	16232	;# 
  3125   003F68                     PWM6DCL         equ	16232	;# 
  3126   003F69                     PWM6DCH         equ	16233	;# 
  3127   003F6A                     PWM6CON         equ	16234	;# 
  3128   003F6C                     PWM5DC          equ	16236	;# 
  3129   003F6C                     PWM5DCL         equ	16236	;# 
  3130   003F6D                     PWM5DCH         equ	16237	;# 
  3131   003F6E                     PWM5CON         equ	16238	;# 
  3132   003F70                     CCPR4           equ	16240	;# 
  3133   003F70                     CCPR4L          equ	16240	;# 
  3134   003F71                     CCPR4H          equ	16241	;# 
  3135   003F72                     CCP4CON         equ	16242	;# 
  3136   003F73                     CCP4CAP         equ	16243	;# 
  3137   003F74                     CCPR3           equ	16244	;# 
  3138   003F74                     CCPR3L          equ	16244	;# 
  3139   003F75                     CCPR3H          equ	16245	;# 
  3140   003F76                     CCP3CON         equ	16246	;# 
  3141   003F77                     CCP3CAP         equ	16247	;# 
  3142   003F78                     CCPR2           equ	16248	;# 
  3143   003F78                     CCPR2L          equ	16248	;# 
  3144   003F79                     CCPR2H          equ	16249	;# 
  3145   003F7A                     CCP2CON         equ	16250	;# 
  3146   003F7B                     CCP2CAP         equ	16251	;# 
  3147   003F7C                     CCPR1           equ	16252	;# 
  3148   003F7C                     CCPR1L          equ	16252	;# 
  3149   003F7D                     CCPR1H          equ	16253	;# 
  3150   003F7E                     CCP1CON         equ	16254	;# 
  3151   003F7F                     CCP1CAP         equ	16255	;# 
  3152   003F92                     T6TMR           equ	16274	;# 
  3153   003F92                     TMR6            equ	16274	;# 
  3154   003F93                     T6PR            equ	16275	;# 
  3155   003F93                     PR6             equ	16275	;# 
  3156   003F94                     T6CON           equ	16276	;# 
  3157   003F95                     T6HLT           equ	16277	;# 
  3158   003F96                     T6CLKCON        equ	16278	;# 
  3159   003F96                     T6CLK           equ	16278	;# 
  3160   003F97                     T6RST           equ	16279	;# 
  3161   003F98                     TMR5            equ	16280	;# 
  3162   003F98                     TMR5L           equ	16280	;# 
  3163   003F99                     TMR5H           equ	16281	;# 
  3164   003F9A                     T5CON           equ	16282	;# 
  3165   003F9A                     TMR5CON         equ	16282	;# 
  3166   003F9B                     T5GCON          equ	16283	;# 
  3167   003F9B                     TMR5GCON        equ	16283	;# 
  3168   003F9C                     T5GATE          equ	16284	;# 
  3169   003F9C                     TMR5GATE        equ	16284	;# 
  3170   003F9D                     T5CLK           equ	16285	;# 
  3171   003F9D                     TMR5CLK         equ	16285	;# 
  3172   003F9D                     PR5             equ	16285	;# 
  3173   003F9E                     T4TMR           equ	16286	;# 
  3174   003F9E                     TMR4            equ	16286	;# 
  3175   003F9F                     T4PR            equ	16287	;# 
  3176   003F9F                     PR4             equ	16287	;# 
  3177   003FA0                     T4CON           equ	16288	;# 
  3178   003FA1                     T4HLT           equ	16289	;# 
  3179   003FA2                     T4CLKCON        equ	16290	;# 
  3180   003FA2                     T4CLK           equ	16290	;# 
  3181   003FA3                     T4RST           equ	16291	;# 
  3182   003FA4                     TMR3            equ	16292	;# 
  3183   003FA4                     TMR3L           equ	16292	;# 
  3184   003FA5                     TMR3H           equ	16293	;# 
  3185   003FA6                     T3CON           equ	16294	;# 
  3186   003FA6                     TMR3CON         equ	16294	;# 
  3187   003FA7                     T3GCON          equ	16295	;# 
  3188   003FA7                     TMR3GCON        equ	16295	;# 
  3189   003FA8                     T3GATE          equ	16296	;# 
  3190   003FA8                     TMR3GATE        equ	16296	;# 
  3191   003FA9                     T3CLK           equ	16297	;# 
  3192   003FA9                     TMR3CLK         equ	16297	;# 
  3193   003FA9                     PR3             equ	16297	;# 
  3194   003FAA                     T2TMR           equ	16298	;# 
  3195   003FAA                     TMR2            equ	16298	;# 
  3196   003FAB                     T2PR            equ	16299	;# 
  3197   003FAB                     PR2             equ	16299	;# 
  3198   003FAC                     T2CON           equ	16300	;# 
  3199   003FAD                     T2HLT           equ	16301	;# 
  3200   003FAE                     T2CLKCON        equ	16302	;# 
  3201   003FAE                     T2CLK           equ	16302	;# 
  3202   003FAF                     T2RST           equ	16303	;# 
  3203   003FB0                     TMR1            equ	16304	;# 
  3204   003FB0                     TMR1L           equ	16304	;# 
  3205   003FB1                     TMR1H           equ	16305	;# 
  3206   003FB2                     T1CON           equ	16306	;# 
  3207   003FB2                     TMR1CON         equ	16306	;# 
  3208   003FB3                     T1GCON          equ	16307	;# 
  3209   003FB3                     TMR1GCON        equ	16307	;# 
  3210   003FB4                     T1GATE          equ	16308	;# 
  3211   003FB4                     TMR1GATE        equ	16308	;# 
  3212   003FB5                     T1CLK           equ	16309	;# 
  3213   003FB5                     TMR1CLK         equ	16309	;# 
  3214   003FB5                     PR1             equ	16309	;# 
  3215   003FB6                     TMR0L           equ	16310	;# 
  3216   003FB6                     TMR0            equ	16310	;# 
  3217   003FB7                     TMR0H           equ	16311	;# 
  3218   003FB7                     PR0             equ	16311	;# 
  3219   003FB8                     T0CON0          equ	16312	;# 
  3220   003FB9                     T0CON1          equ	16313	;# 
  3221   003FBA                     LATA            equ	16314	;# 
  3222   003FBB                     LATB            equ	16315	;# 
  3223   003FBC                     LATC            equ	16316	;# 
  3224   003FBD                     LATD            equ	16317	;# 
  3225   003FBE                     LATE            equ	16318	;# 
  3226   003FBF                     LATF            equ	16319	;# 
  3227   003FC2                     TRISA           equ	16322	;# 
  3228   003FC3                     TRISB           equ	16323	;# 
  3229   003FC4                     TRISC           equ	16324	;# 
  3230   003FC5                     TRISD           equ	16325	;# 
  3231   003FC6                     TRISE           equ	16326	;# 
  3232   003FC7                     TRISF           equ	16327	;# 
  3233   003FCA                     PORTA           equ	16330	;# 
  3234   003FCB                     PORTB           equ	16331	;# 
  3235   003FCC                     PORTC           equ	16332	;# 
  3236   003FCD                     PORTD           equ	16333	;# 
  3237   003FCE                     PORTE           equ	16334	;# 
  3238   003FCF                     PORTF           equ	16335	;# 
  3239   003FD2                     INTCON0         equ	16338	;# 
  3240   003FD3                     INTCON1         equ	16339	;# 
  3241   003FD4                     IVTLOCK         equ	16340	;# 
  3242   003FD5                     IVTBASE         equ	16341	;# 
  3243   003FD5                     IVTBASEL        equ	16341	;# 
  3244   003FD6                     IVTBASEH        equ	16342	;# 
  3245   003FD7                     IVTBASEU        equ	16343	;# 
  3246   003FD8                     STATUS          equ	16344	;# 
  3247   003FD9                     FSR2            equ	16345	;# 
  3248   003FD9                     FSR2L           equ	16345	;# 
  3249   003FDA                     FSR2H           equ	16346	;# 
  3250   003FDB                     PLUSW2          equ	16347	;# 
  3251   003FDC                     PREINC2         equ	16348	;# 
  3252   003FDD                     POSTDEC2        equ	16349	;# 
  3253   003FDE                     POSTINC2        equ	16350	;# 
  3254   003FDF                     INDF2           equ	16351	;# 
  3255   003FE0                     BSR             equ	16352	;# 
  3256   003FE1                     FSR1            equ	16353	;# 
  3257   003FE1                     FSR1L           equ	16353	;# 
  3258   003FE2                     FSR1H           equ	16354	;# 
  3259   003FE3                     PLUSW1          equ	16355	;# 
  3260   003FE4                     PREINC1         equ	16356	;# 
  3261   003FE5                     POSTDEC1        equ	16357	;# 
  3262   003FE6                     POSTINC1        equ	16358	;# 
  3263   003FE7                     INDF1           equ	16359	;# 
  3264   003FE8                     WREG            equ	16360	;# 
  3265   003FE9                     FSR0            equ	16361	;# 
  3266   003FE9                     FSR0L           equ	16361	;# 
  3267   003FEA                     FSR0H           equ	16362	;# 
  3268   003FEB                     PLUSW0          equ	16363	;# 
  3269   003FEC                     PREINC0         equ	16364	;# 
  3270   003FED                     POSTDEC0        equ	16365	;# 
  3271   003FEE                     POSTINC0        equ	16366	;# 
  3272   003FEF                     INDF0           equ	16367	;# 
  3273   003FF0                     PCON0           equ	16368	;# 
  3274   003FF1                     PCON1           equ	16369	;# 
  3275   003FF3                     PROD            equ	16371	;# 
  3276   003FF3                     PRODL           equ	16371	;# 
  3277   003FF4                     PRODH           equ	16372	;# 
  3278   003FF5                     TABLAT          equ	16373	;# 
  3279   003FF6                     TBLPTR          equ	16374	;# 
  3280   003FF6                     TBLPTRL         equ	16374	;# 
  3281   003FF7                     TBLPTRH         equ	16375	;# 
  3282   003FF8                     TBLPTRU         equ	16376	;# 
  3283   003FF9                     PCLAT           equ	16377	;# 
  3284   003FF9                     PCL             equ	16377	;# 
  3285   003FFA                     PCLATH          equ	16378	;# 
  3286   003FFB                     PCLATU          equ	16379	;# 
  3287   003FFC                     STKPTR          equ	16380	;# 
  3288   003FFD                     TOS             equ	16381	;# 
  3289   003FFD                     TOSL            equ	16381	;# 
  3290   003FFE                     TOSH            equ	16382	;# 
  3291   003FFF                     TOSU            equ	16383	;# 
  3292   003880                     STATUS_CSHAD    equ	14464	;# 
  3293   003881                     WREG_CSHAD      equ	14465	;# 
  3294   003882                     BSR_CSHAD       equ	14466	;# 
  3295   003883                     SHADCON         equ	14467	;# 
  3296   003884                     STATUS_SHAD     equ	14468	;# 
  3297   003885                     WREG_SHAD       equ	14469	;# 
  3298   003886                     BSR_SHAD        equ	14470	;# 
  3299   003887                     PCLATH_SHAD     equ	14471	;# 
  3300   003888                     PCLATU_SHAD     equ	14472	;# 
  3301   003889                     FSR0SH          equ	14473	;# 
  3302   003889                     FSR0L_SHAD      equ	14473	;# 
  3303   00388A                     FSR0H_SHAD      equ	14474	;# 
  3304   00388B                     FSR1SH          equ	14475	;# 
  3305   00388B                     FSR1L_SHAD      equ	14475	;# 
  3306   00388C                     FSR1H_SHAD      equ	14476	;# 
  3307   00388D                     FSR2SH          equ	14477	;# 
  3308   00388D                     FSR2L_SHAD      equ	14477	;# 
  3309   00388E                     FSR2H_SHAD      equ	14478	;# 
  3310   00388F                     PRODSH          equ	14479	;# 
  3311   00388F                     PRODL_SHAD      equ	14479	;# 
  3312   003890                     PRODH_SHAD      equ	14480	;# 
  3313   00389D                     IVTADL          equ	14493	;# 
  3314   00389E                     IVTADH          equ	14494	;# 
  3315   00389F                     IVTADU          equ	14495	;# 
  3316   00395B                     WDTCON0         equ	14683	;# 
  3317   00395C                     WDTCON1         equ	14684	;# 
  3318   00395D                     WDTPSL          equ	14685	;# 
  3319   00395E                     WDTPSH          equ	14686	;# 
  3320   00395F                     WDTTMR          equ	14687	;# 
  3321   003960                     CRCDATA         equ	14688	;# 
  3322   003960                     CRCDATL         equ	14688	;# 
  3323   003961                     CRCDATH         equ	14689	;# 
  3324   003962                     CRCACC          equ	14690	;# 
  3325   003962                     CRCACCL         equ	14690	;# 
  3326   003963                     CRCACCH         equ	14691	;# 
  3327   003964                     CRCSHFT         equ	14692	;# 
  3328   003964                     CRCSHIFTL       equ	14692	;# 
  3329   003965                     CRCSHIFTH       equ	14693	;# 
  3330   003966                     CRCXOR          equ	14694	;# 
  3331   003966                     CRCXORL         equ	14694	;# 
  3332   003967                     CRCXORH         equ	14695	;# 
  3333   003968                     CRCCON0         equ	14696	;# 
  3334   003969                     CRCCON1         equ	14697	;# 
  3335   003976                     SCANLADR        equ	14710	;# 
  3336   003976                     SCANLADRL       equ	14710	;# 
  3337   003977                     SCANLADRH       equ	14711	;# 
  3338   003978                     SCANLADRU       equ	14712	;# 
  3339   003979                     SCANHADR        equ	14713	;# 
  3340   003979                     SCANHADRL       equ	14713	;# 
  3341   00397A                     SCANHADRH       equ	14714	;# 
  3342   00397B                     SCANHADRU       equ	14715	;# 
  3343   00397C                     SCANCON0        equ	14716	;# 
  3344   00397D                     SCANTRIG        equ	14717	;# 
  3345   003980                     IPR0            equ	14720	;# 
  3346   003981                     IPR1            equ	14721	;# 
  3347   003982                     IPR2            equ	14722	;# 
  3348   003983                     IPR3            equ	14723	;# 
  3349   003984                     IPR4            equ	14724	;# 
  3350   003985                     IPR5            equ	14725	;# 
  3351   003986                     IPR6            equ	14726	;# 
  3352   003987                     IPR7            equ	14727	;# 
  3353   003988                     IPR8            equ	14728	;# 
  3354   003989                     IPR9            equ	14729	;# 
  3355   00398A                     IPR10           equ	14730	;# 
  3356   003990                     PIE0            equ	14736	;# 
  3357   003991                     PIE1            equ	14737	;# 
  3358   003992                     PIE2            equ	14738	;# 
  3359   003993                     PIE3            equ	14739	;# 
  3360   003994                     PIE4            equ	14740	;# 
  3361   003995                     PIE5            equ	14741	;# 
  3362   003996                     PIE6            equ	14742	;# 
  3363   003997                     PIE7            equ	14743	;# 
  3364   003998                     PIE8            equ	14744	;# 
  3365   003999                     PIE9            equ	14745	;# 
  3366   00399A                     PIE10           equ	14746	;# 
  3367   0039A0                     PIR0            equ	14752	;# 
  3368   0039A1                     PIR1            equ	14753	;# 
  3369   0039A2                     PIR2            equ	14754	;# 
  3370   0039A3                     PIR3            equ	14755	;# 
  3371   0039A4                     PIR4            equ	14756	;# 
  3372   0039A5                     PIR5            equ	14757	;# 
  3373   0039A6                     PIR6            equ	14758	;# 
  3374   0039A7                     PIR7            equ	14759	;# 
  3375   0039A8                     PIR8            equ	14760	;# 
  3376   0039A9                     PIR9            equ	14761	;# 
  3377   0039AA                     PIR10           equ	14762	;# 
  3378   0039C0                     PMD0            equ	14784	;# 
  3379   0039C1                     PMD1            equ	14785	;# 
  3380   0039C2                     PMD2            equ	14786	;# 
  3381   0039C3                     PMD3            equ	14787	;# 
  3382   0039C4                     PMD4            equ	14788	;# 
  3383   0039C5                     PMD5            equ	14789	;# 
  3384   0039C6                     PMD6            equ	14790	;# 
  3385   0039C7                     PMD7            equ	14791	;# 
  3386   0039D0                     BORCON          equ	14800	;# 
  3387   0039D1                     VREGCON         equ	14801	;# 
  3388   0039D8                     CPUDOZE         equ	14808	;# 
  3389   0039D9                     OSCCON1         equ	14809	;# 
  3390   0039DA                     OSCCON2         equ	14810	;# 
  3391   0039DB                     OSCCON3         equ	14811	;# 
  3392   0039DC                     OSCSTAT         equ	14812	;# 
  3393   0039DC                     OSCSTAT1        equ	14812	;# 
  3394   0039DD                     OSCEN           equ	14813	;# 
  3395   0039DE                     OSCTUNE         equ	14814	;# 
  3396   0039DF                     OSCFRQ          equ	14815	;# 
  3397   0039E0                     NVMADRL         equ	14816	;# 
  3398   0039E1                     NVMADRH         equ	14817	;# 
  3399   0039E3                     NVMDAT          equ	14819	;# 
  3400   0039E5                     NVMCON1         equ	14821	;# 
  3401   0039E6                     NVMCON2         equ	14822	;# 
  3402   0039EF                     PRLOCK          equ	14831	;# 
  3403   0039F1                     ISRPR           equ	14833	;# 
  3404   0039F2                     MAINPR          equ	14834	;# 
  3405   0039F3                     DMA1PR          equ	14835	;# 
  3406   0039F4                     DMA2PR          equ	14836	;# 
  3407   0039F7                     SCANPR          equ	14839	;# 
  3408   003A00                     RA0PPS          equ	14848	;# 
  3409   003A01                     RA1PPS          equ	14849	;# 
  3410   003A02                     RA2PPS          equ	14850	;# 
  3411   003A03                     RA3PPS          equ	14851	;# 
  3412   003A04                     RA4PPS          equ	14852	;# 
  3413   003A05                     RA5PPS          equ	14853	;# 
  3414   003A06                     RA6PPS          equ	14854	;# 
  3415   003A07                     RA7PPS          equ	14855	;# 
  3416   003A08                     RB0PPS          equ	14856	;# 
  3417   003A09                     RB1PPS          equ	14857	;# 
  3418   003A0A                     RB2PPS          equ	14858	;# 
  3419   003A0B                     RB3PPS          equ	14859	;# 
  3420   003A0C                     RB4PPS          equ	14860	;# 
  3421   003A0D                     RB5PPS          equ	14861	;# 
  3422   003A0E                     RB6PPS          equ	14862	;# 
  3423   003A0F                     RB7PPS          equ	14863	;# 
  3424   003A10                     RC0PPS          equ	14864	;# 
  3425   003A11                     RC1PPS          equ	14865	;# 
  3426   003A12                     RC2PPS          equ	14866	;# 
  3427   003A13                     RC3PPS          equ	14867	;# 
  3428   003A14                     RC4PPS          equ	14868	;# 
  3429   003A15                     RC5PPS          equ	14869	;# 
  3430   003A16                     RC6PPS          equ	14870	;# 
  3431   003A17                     RC7PPS          equ	14871	;# 
  3432   003A18                     RD0PPS          equ	14872	;# 
  3433   003A19                     RD1PPS          equ	14873	;# 
  3434   003A1A                     RD2PPS          equ	14874	;# 
  3435   003A1B                     RD3PPS          equ	14875	;# 
  3436   003A1C                     RD4PPS          equ	14876	;# 
  3437   003A1D                     RD5PPS          equ	14877	;# 
  3438   003A1E                     RD6PPS          equ	14878	;# 
  3439   003A1F                     RD7PPS          equ	14879	;# 
  3440   003A20                     RE0PPS          equ	14880	;# 
  3441   003A21                     RE1PPS          equ	14881	;# 
  3442   003A22                     RE2PPS          equ	14882	;# 
  3443   003A28                     RF0PPS          equ	14888	;# 
  3444   003A29                     RF1PPS          equ	14889	;# 
  3445   003A2A                     RF2PPS          equ	14890	;# 
  3446   003A2B                     RF3PPS          equ	14891	;# 
  3447   003A2C                     RF4PPS          equ	14892	;# 
  3448   003A2D                     RF5PPS          equ	14893	;# 
  3449   003A2E                     RF6PPS          equ	14894	;# 
  3450   003A2F                     RF7PPS          equ	14895	;# 
  3451   003A40                     ANSELA          equ	14912	;# 
  3452   003A41                     WPUA            equ	14913	;# 
  3453   003A42                     ODCONA          equ	14914	;# 
  3454   003A43                     SLRCONA         equ	14915	;# 
  3455   003A44                     INLVLA          equ	14916	;# 
  3456   003A45                     IOCAP           equ	14917	;# 
  3457   003A46                     IOCAN           equ	14918	;# 
  3458   003A47                     IOCAF           equ	14919	;# 
  3459   003A50                     ANSELB          equ	14928	;# 
  3460   003A51                     WPUB            equ	14929	;# 
  3461   003A52                     ODCONB          equ	14930	;# 
  3462   003A53                     SLRCONB         equ	14931	;# 
  3463   003A54                     INLVLB          equ	14932	;# 
  3464   003A55                     IOCBP           equ	14933	;# 
  3465   003A56                     IOCBN           equ	14934	;# 
  3466   003A57                     IOCBF           equ	14935	;# 
  3467   003A5A                     RB1I2C          equ	14938	;# 
  3468   003A5B                     RB2I2C          equ	14939	;# 
  3469   003A60                     ANSELC          equ	14944	;# 
  3470   003A61                     WPUC            equ	14945	;# 
  3471   003A62                     ODCONC          equ	14946	;# 
  3472   003A63                     SLRCONC         equ	14947	;# 
  3473   003A64                     INLVLC          equ	14948	;# 
  3474   003A65                     IOCCP           equ	14949	;# 
  3475   003A66                     IOCCN           equ	14950	;# 
  3476   003A67                     IOCCF           equ	14951	;# 
  3477   003A6A                     RC3I2C          equ	14954	;# 
  3478   003A6B                     RC4I2C          equ	14955	;# 
  3479   003A70                     ANSELD          equ	14960	;# 
  3480   003A71                     WPUD            equ	14961	;# 
  3481   003A72                     ODCOND          equ	14962	;# 
  3482   003A73                     SLRCOND         equ	14963	;# 
  3483   003A74                     INLVLD          equ	14964	;# 
  3484   003A7A                     RD0I2C          equ	14970	;# 
  3485   003A7B                     RD1I2C          equ	14971	;# 
  3486   003A80                     ANSELE          equ	14976	;# 
  3487   003A81                     WPUE            equ	14977	;# 
  3488   003A82                     ODCONE          equ	14978	;# 
  3489   003A83                     SLRCONE         equ	14979	;# 
  3490   003A84                     INLVLE          equ	14980	;# 
  3491   003A85                     IOCEP           equ	14981	;# 
  3492   003A86                     IOCEN           equ	14982	;# 
  3493   003A87                     IOCEF           equ	14983	;# 
  3494   003A90                     ANSELF          equ	14992	;# 
  3495   003A91                     WPUF            equ	14993	;# 
  3496   003A92                     ODCONF          equ	14994	;# 
  3497   003A93                     SLRCONF         equ	14995	;# 
  3498   003A94                     INLVLF          equ	14996	;# 
  3499   003ABF                     PPSLOCK         equ	15039	;# 
  3500   003AC0                     INT0PPS         equ	15040	;# 
  3501   003AC1                     INT1PPS         equ	15041	;# 
  3502   003AC2                     INT2PPS         equ	15042	;# 
  3503   003AC3                     T0CKIPPS        equ	15043	;# 
  3504   003AC4                     T1CKIPPS        equ	15044	;# 
  3505   003AC5                     T1GPPS          equ	15045	;# 
  3506   003AC6                     T3CKIPPS        equ	15046	;# 
  3507   003AC7                     T3GPPS          equ	15047	;# 
  3508   003AC8                     T5CKIPPS        equ	15048	;# 
  3509   003AC9                     T5GPPS          equ	15049	;# 
  3510   003ACA                     T2INPPS         equ	15050	;# 
  3511   003ACB                     T4INPPS         equ	15051	;# 
  3512   003ACC                     T6INPPS         equ	15052	;# 
  3513   003ACD                     CCP1PPS         equ	15053	;# 
  3514   003ACE                     CCP2PPS         equ	15054	;# 
  3515   003ACF                     CCP3PPS         equ	15055	;# 
  3516   003AD0                     CCP4PPS         equ	15056	;# 
  3517   003AD1                     SMT1WINPPS      equ	15057	;# 
  3518   003AD2                     SMT1SIGPPS      equ	15058	;# 
  3519   003AD3                     CWG1INPPS       equ	15059	;# 
  3520   003AD4                     CWG2INPPS       equ	15060	;# 
  3521   003AD5                     CWG3INPPS       equ	15061	;# 
  3522   003AD6                     MD1CARLPPS      equ	15062	;# 
  3523   003AD7                     MD1CARHPPS      equ	15063	;# 
  3524   003AD8                     MD1SRCPPS       equ	15064	;# 
  3525   003AD9                     CLCIN0PPS       equ	15065	;# 
  3526   003ADA                     CLCIN1PPS       equ	15066	;# 
  3527   003ADB                     CLCIN2PPS       equ	15067	;# 
  3528   003ADC                     CLCIN3PPS       equ	15068	;# 
  3529   003ADD                     ADACTPPS        equ	15069	;# 
  3530   003ADE                     SPI1SCKPPS      equ	15070	;# 
  3531   003ADF                     SPI1SDIPPS      equ	15071	;# 
  3532   003AE0                     SPI1SSPPS       equ	15072	;# 
  3533   003AE1                     I2C1SCLPPS      equ	15073	;# 
  3534   003AE2                     I2C1SDAPPS      equ	15074	;# 
  3535   003AE3                     I2C2SCLPPS      equ	15075	;# 
  3536   003AE4                     I2C2SDAPPS      equ	15076	;# 
  3537   003AE5                     U1RXPPS         equ	15077	;# 
  3538   003AE6                     U1CTSPPS        equ	15078	;# 
  3539   003AE8                     U2RXPPS         equ	15080	;# 
  3540   003AE9                     U2CTSPPS        equ	15081	;# 
  3541   003BC9                     DMA2BUF         equ	15305	;# 
  3542   003BCA                     DMA2DCNT        equ	15306	;# 
  3543   003BCA                     DMA2DCNTL       equ	15306	;# 
  3544   003BCB                     DMA2DCNTH       equ	15307	;# 
  3545   003BCC                     DMA2DPTR        equ	15308	;# 
  3546   003BCC                     DMA2DPTRL       equ	15308	;# 
  3547   003BCD                     DMA2DPTRH       equ	15309	;# 
  3548   003BCE                     DMA2DSZ         equ	15310	;# 
  3549   003BCE                     DMA2DSZL        equ	15310	;# 
  3550   003BCF                     DMA2DSZH        equ	15311	;# 
  3551   003BD0                     DMA2DSA         equ	15312	;# 
  3552   003BD0                     DMA2DSAL        equ	15312	;# 
  3553   003BD1                     DMA2DSAH        equ	15313	;# 
  3554   003BD2                     DMA2SCNT        equ	15314	;# 
  3555   003BD2                     DMA2SCNTL       equ	15314	;# 
  3556   003BD3                     DMA2SCNTH       equ	15315	;# 
  3557   003BD4                     DMA2SPTR        equ	15316	;# 
  3558   003BD4                     DMA2SPTRL       equ	15316	;# 
  3559   003BD5                     DMA2SPTRH       equ	15317	;# 
  3560   003BD6                     DMA2SPTRU       equ	15318	;# 
  3561   003BD7                     DMA2SSZ         equ	15319	;# 
  3562   003BD7                     DMA2SSZL        equ	15319	;# 
  3563   003BD8                     DMA2SSZH        equ	15320	;# 
  3564   003BD9                     DMA2SSA         equ	15321	;# 
  3565   003BD9                     DMA2SSAL        equ	15321	;# 
  3566   003BDA                     DMA2SSAH        equ	15322	;# 
  3567   003BDB                     DMA2SSAU        equ	15323	;# 
  3568   003BDC                     DMA2CON0        equ	15324	;# 
  3569   003BDD                     DMA2CON1        equ	15325	;# 
  3570   003BDE                     DMA2AIRQ        equ	15326	;# 
  3571   003BDF                     DMA2SIRQ        equ	15327	;# 
  3572   003BE9                     DMA1BUF         equ	15337	;# 
  3573   003BEA                     DMA1DCNT        equ	15338	;# 
  3574   003BEA                     DMA1DCNTL       equ	15338	;# 
  3575   003BEB                     DMA1DCNTH       equ	15339	;# 
  3576   003BEC                     DMA1DPTR        equ	15340	;# 
  3577   003BEC                     DMA1DPTRL       equ	15340	;# 
  3578   003BED                     DMA1DPTRH       equ	15341	;# 
  3579   003BEE                     DMA1DSZ         equ	15342	;# 
  3580   003BEE                     DMA1DSZL        equ	15342	;# 
  3581   003BEF                     DMA1DSZH        equ	15343	;# 
  3582   003BF0                     DMA1DSA         equ	15344	;# 
  3583   003BF0                     DMA1DSAL        equ	15344	;# 
  3584   003BF1                     DMA1DSAH        equ	15345	;# 
  3585   003BF2                     DMA1SCNT        equ	15346	;# 
  3586   003BF2                     DMA1SCNTL       equ	15346	;# 
  3587   003BF3                     DMA1SCNTH       equ	15347	;# 
  3588   003BF4                     DMA1SPTR        equ	15348	;# 
  3589   003BF4                     DMA1SPTRL       equ	15348	;# 
  3590   003BF5                     DMA1SPTRH       equ	15349	;# 
  3591   003BF6                     DMA1SPTRU       equ	15350	;# 
  3592   003BF7                     DMA1SSZ         equ	15351	;# 
  3593   003BF7                     DMA1SSZL        equ	15351	;# 
  3594   003BF8                     DMA1SSZH        equ	15352	;# 
  3595   003BF9                     DMA1SSA         equ	15353	;# 
  3596   003BF9                     DMA1SSAL        equ	15353	;# 
  3597   003BFA                     DMA1SSAH        equ	15354	;# 
  3598   003BFB                     DMA1SSAU        equ	15355	;# 
  3599   003BFC                     DMA1CON0        equ	15356	;# 
  3600   003BFD                     DMA1CON1        equ	15357	;# 
  3601   003BFE                     DMA1AIRQ        equ	15358	;# 
  3602   003BFF                     DMA1SIRQ        equ	15359	;# 
  3603   003C56                     CLC4CON         equ	15446	;# 
  3604   003C57                     CLC4POL         equ	15447	;# 
  3605   003C58                     CLC4SEL0        equ	15448	;# 
  3606   003C59                     CLC4SEL1        equ	15449	;# 
  3607   003C5A                     CLC4SEL2        equ	15450	;# 
  3608   003C5B                     CLC4SEL3        equ	15451	;# 
  3609   003C5C                     CLC4GLS0        equ	15452	;# 
  3610   003C5D                     CLC4GLS1        equ	15453	;# 
  3611   003C5E                     CLC4GLS2        equ	15454	;# 
  3612   003C5F                     CLC4GLS3        equ	15455	;# 
  3613   003C60                     CLC3CON         equ	15456	;# 
  3614   003C61                     CLC3POL         equ	15457	;# 
  3615   003C62                     CLC3SEL0        equ	15458	;# 
  3616   003C63                     CLC3SEL1        equ	15459	;# 
  3617   003C64                     CLC3SEL2        equ	15460	;# 
  3618   003C65                     CLC3SEL3        equ	15461	;# 
  3619   003C66                     CLC3GLS0        equ	15462	;# 
  3620   003C67                     CLC3GLS1        equ	15463	;# 
  3621   003C68                     CLC3GLS2        equ	15464	;# 
  3622   003C69                     CLC3GLS3        equ	15465	;# 
  3623   003C6A                     CLC2CON         equ	15466	;# 
  3624   003C6B                     CLC2POL         equ	15467	;# 
  3625   003C6C                     CLC2SEL0        equ	15468	;# 
  3626   003C6D                     CLC2SEL1        equ	15469	;# 
  3627   003C6E                     CLC2SEL2        equ	15470	;# 
  3628   003C6F                     CLC2SEL3        equ	15471	;# 
  3629   003C70                     CLC2GLS0        equ	15472	;# 
  3630   003C71                     CLC2GLS1        equ	15473	;# 
  3631   003C72                     CLC2GLS2        equ	15474	;# 
  3632   003C73                     CLC2GLS3        equ	15475	;# 
  3633   003C74                     CLC1CON         equ	15476	;# 
  3634   003C75                     CLC1POL         equ	15477	;# 
  3635   003C76                     CLC1SEL0        equ	15478	;# 
  3636   003C77                     CLC1SEL1        equ	15479	;# 
  3637   003C78                     CLC1SEL2        equ	15480	;# 
  3638   003C79                     CLC1SEL3        equ	15481	;# 
  3639   003C7A                     CLC1GLS0        equ	15482	;# 
  3640   003C7B                     CLC1GLS1        equ	15483	;# 
  3641   003C7C                     CLC1GLS2        equ	15484	;# 
  3642   003C7D                     CLC1GLS3        equ	15485	;# 
  3643   003C7E                     CLCDATA0        equ	15486	;# 
  3644   003CE5                     CLKRCON         equ	15589	;# 
  3645   003CE6                     CLKRCLK         equ	15590	;# 
  3646   003CFA                     MD1CON0         equ	15610	;# 
  3647   003CFB                     MD1CON1         equ	15611	;# 
  3648   003CFC                     MD1SRC          equ	15612	;# 
  3649   003CFD                     MD1CARL         equ	15613	;# 
  3650   003CFE                     MD1CARH         equ	15614	;# 
  3651   003D10                     SPI1RXB         equ	15632	;# 
  3652   003D11                     SPI1TXB         equ	15633	;# 
  3653   003D12                     SPI1TCNT        equ	15634	;# 
  3654   003D12                     SPI1TCNTL       equ	15634	;# 
  3655   003D13                     SPI1TCNTH       equ	15635	;# 
  3656   003D14                     SPI1CON0        equ	15636	;# 
  3657   003D15                     SPI1CON1        equ	15637	;# 
  3658   003D16                     SPI1CON2        equ	15638	;# 
  3659   003D17                     SPI1STATUS      equ	15639	;# 
  3660   003D18                     SPI1TWIDTH      equ	15640	;# 
  3661   003D19                     SPI1BAUD        equ	15641	;# 
  3662   003D1A                     SPI1INTF        equ	15642	;# 
  3663   003D1B                     SPI1INTE        equ	15643	;# 
  3664   003D1C                     SPI1CLK         equ	15644	;# 
  3665   003D54                     I2C2RXB         equ	15700	;# 
  3666   003D55                     I2C2TXB         equ	15701	;# 
  3667   003D56                     I2C2CNT         equ	15702	;# 
  3668   003D57                     I2C2ADB0        equ	15703	;# 
  3669   003D58                     I2C2ADB1        equ	15704	;# 
  3670   003D59                     I2C2ADR0        equ	15705	;# 
  3671   003D5A                     I2C2ADR1        equ	15706	;# 
  3672   003D5B                     I2C2ADR2        equ	15707	;# 
  3673   003D5C                     I2C2ADR3        equ	15708	;# 
  3674   003D5D                     I2C2CON0        equ	15709	;# 
  3675   003D5E                     I2C2CON1        equ	15710	;# 
  3676   003D5F                     I2C2CON2        equ	15711	;# 
  3677   003D60                     I2C2ERR         equ	15712	;# 
  3678   003D61                     I2C2STAT0       equ	15713	;# 
  3679   003D62                     I2C2STAT1       equ	15714	;# 
  3680   003D63                     I2C2PIR         equ	15715	;# 
  3681   003D64                     I2C2PIE         equ	15716	;# 
  3682   003D65                     I2C2CLK         equ	15717	;# 
  3683   003D66                     I2C2BTO         equ	15718	;# 
  3684   003D6A                     I2C1RXB         equ	15722	;# 
  3685   003D6B                     I2C1TXB         equ	15723	;# 
  3686   003D6C                     I2C1CNT         equ	15724	;# 
  3687   003D6D                     I2C1ADB0        equ	15725	;# 
  3688   003D6E                     I2C1ADB1        equ	15726	;# 
  3689   003D6F                     I2C1ADR0        equ	15727	;# 
  3690   003D70                     I2C1ADR1        equ	15728	;# 
  3691   003D71                     I2C1ADR2        equ	15729	;# 
  3692   003D72                     I2C1ADR3        equ	15730	;# 
  3693   003D73                     I2C1CON0        equ	15731	;# 
  3694   003D74                     I2C1CON1        equ	15732	;# 
  3695   003D75                     I2C1CON2        equ	15733	;# 
  3696   003D76                     I2C1ERR         equ	15734	;# 
  3697   003D77                     I2C1STAT0       equ	15735	;# 
  3698   003D78                     I2C1STAT1       equ	15736	;# 
  3699   003D79                     I2C1PIR         equ	15737	;# 
  3700   003D7A                     I2C1PIE         equ	15738	;# 
  3701   003D7B                     I2C1CLK         equ	15739	;# 
  3702   003D7C                     I2C1BTO         equ	15740	;# 
  3703   003DD0                     U2RXB           equ	15824	;# 
  3704   003DD0                     U2RXBL          equ	15824	;# 
  3705   003DD2                     U2TXB           equ	15826	;# 
  3706   003DD2                     U2TXBL          equ	15826	;# 
  3707   003DD4                     U2P1            equ	15828	;# 
  3708   003DD4                     U2P1L           equ	15828	;# 
  3709   003DD6                     U2P2            equ	15830	;# 
  3710   003DD6                     U2P2L           equ	15830	;# 
  3711   003DD8                     U2P3            equ	15832	;# 
  3712   003DD8                     U2P3L           equ	15832	;# 
  3713   003DDA                     U2CON0          equ	15834	;# 
  3714   003DDB                     U2CON1          equ	15835	;# 
  3715   003DDC                     U2CON2          equ	15836	;# 
  3716   003DDD                     U2BRG           equ	15837	;# 
  3717   003DDD                     U2BRGL          equ	15837	;# 
  3718   003DDE                     U2BRGH          equ	15838	;# 
  3719   003DDF                     U2FIFO          equ	15839	;# 
  3720   003DE0                     U2UIR           equ	15840	;# 
  3721   003DE1                     U2ERRIR         equ	15841	;# 
  3722   003DE2                     U2ERRIE         equ	15842	;# 
  3723   003DE8                     U1RXB           equ	15848	;# 
  3724   003DE8                     U1RXBL          equ	15848	;# 
  3725   003DE9                     U1RXCHK         equ	15849	;# 
  3726   003DEA                     U1TXB           equ	15850	;# 
  3727   003DEA                     U1TXBL          equ	15850	;# 
  3728   003DEB                     U1TXCHK         equ	15851	;# 
  3729   003DEC                     U1P1            equ	15852	;# 
  3730   003DEC                     U1P1L           equ	15852	;# 
  3731   003DED                     U1P1H           equ	15853	;# 
  3732   003DEE                     U1P2            equ	15854	;# 
  3733   003DEE                     U1P2L           equ	15854	;# 
  3734   003DEF                     U1P2H           equ	15855	;# 
  3735   003DF0                     U1P3            equ	15856	;# 
  3736   003DF0                     U1P3L           equ	15856	;# 
  3737   003DF1                     U1P3H           equ	15857	;# 
  3738   003DF2                     U1CON0          equ	15858	;# 
  3739   003DF3                     U1CON1          equ	15859	;# 
  3740   003DF4                     U1CON2          equ	15860	;# 
  3741   003DF5                     U1BRG           equ	15861	;# 
  3742   003DF5                     U1BRGL          equ	15861	;# 
  3743   003DF6                     U1BRGH          equ	15862	;# 
  3744   003DF7                     U1FIFO          equ	15863	;# 
  3745   003DF8                     U1UIR           equ	15864	;# 
  3746   003DF9                     U1ERRIR         equ	15865	;# 
  3747   003DFA                     U1ERRIE         equ	15866	;# 
  3748   003E9C                     DAC1CON1        equ	16028	;# 
  3749   003E9E                     DAC1CON0        equ	16030	;# 
  3750   003EB8                     CM2CON0         equ	16056	;# 
  3751   003EB9                     CM2CON1         equ	16057	;# 
  3752   003EBA                     CM2NCH          equ	16058	;# 
  3753   003EBB                     CM2PCH          equ	16059	;# 
  3754   003EBC                     CM1CON0         equ	16060	;# 
  3755   003EBD                     CM1CON1         equ	16061	;# 
  3756   003EBE                     CM1NCH          equ	16062	;# 
  3757   003EBF                     CM1PCH          equ	16063	;# 
  3758   003EC0                     CMOUT           equ	16064	;# 
  3759   003EC1                     FVRCON          equ	16065	;# 
  3760   003EC3                     ZCDCON          equ	16067	;# 
  3761   003EC9                     HLVDCON0        equ	16073	;# 
  3762   003ECA                     HLVDCON1        equ	16074	;# 
  3763   003ED7                     ADCP            equ	16087	;# 
  3764   003EDE                     ADLTH           equ	16094	;# 
  3765   003EDE                     ADLTHL          equ	16094	;# 
  3766   003EDF                     ADLTHH          equ	16095	;# 
  3767   003EE0                     ADUTH           equ	16096	;# 
  3768   003EE0                     ADUTHL          equ	16096	;# 
  3769   003EE1                     ADUTHH          equ	16097	;# 
  3770   003EE2                     ADERR           equ	16098	;# 
  3771   003EE2                     ADERRL          equ	16098	;# 
  3772   003EE3                     ADERRH          equ	16099	;# 
  3773   003EE4                     ADSTPT          equ	16100	;# 
  3774   003EE4                     ADSTPTL         equ	16100	;# 
  3775   003EE5                     ADSTPTH         equ	16101	;# 
  3776   003EE6                     ADFLTR          equ	16102	;# 
  3777   003EE6                     ADFLTRL         equ	16102	;# 
  3778   003EE7                     ADFLTRH         equ	16103	;# 
  3779   003EE8                     ADACC           equ	16104	;# 
  3780   003EE8                     ADACCL          equ	16104	;# 
  3781   003EE9                     ADACCH          equ	16105	;# 
  3782   003EEA                     ADACCU          equ	16106	;# 
  3783   003EEB                     ADCNT           equ	16107	;# 
  3784   003EEC                     ADRPT           equ	16108	;# 
  3785   003EED                     ADPREV          equ	16109	;# 
  3786   003EED                     ADPREVL         equ	16109	;# 
  3787   003EEE                     ADPREVH         equ	16110	;# 
  3788   003EEF                     ADRES           equ	16111	;# 
  3789   003EEF                     ADRESL          equ	16111	;# 
  3790   003EF0                     ADRESH          equ	16112	;# 
  3791   003EF1                     ADPCH           equ	16113	;# 
  3792   003EF3                     ADACQ           equ	16115	;# 
  3793   003EF3                     ADACQL          equ	16115	;# 
  3794   003EF4                     ADACQH          equ	16116	;# 
  3795   003EF5                     ADCAP           equ	16117	;# 
  3796   003EF6                     ADPRE           equ	16118	;# 
  3797   003EF6                     ADPREL          equ	16118	;# 
  3798   003EF7                     ADPREH          equ	16119	;# 
  3799   003EF8                     ADCON0          equ	16120	;# 
  3800   003EF9                     ADCON1          equ	16121	;# 
  3801   003EFA                     ADCON2          equ	16122	;# 
  3802   003EFB                     ADCON3          equ	16123	;# 
  3803   003EFC                     ADSTAT          equ	16124	;# 
  3804   003EFD                     ADREF           equ	16125	;# 
  3805   003EFE                     ADACT           equ	16126	;# 
  3806   003EFF                     ADCLK           equ	16127	;# 
  3807   003F12                     SMT1TMR         equ	16146	;# 
  3808   003F12                     SMT1TMRL        equ	16146	;# 
  3809   003F13                     SMT1TMRH        equ	16147	;# 
  3810   003F14                     SMT1TMRU        equ	16148	;# 
  3811   003F15                     SMT1CPR         equ	16149	;# 
  3812   003F15                     SMT1CPRL        equ	16149	;# 
  3813   003F16                     SMT1CPRH        equ	16150	;# 
  3814   003F17                     SMT1CPRU        equ	16151	;# 
  3815   003F18                     SMT1CPW         equ	16152	;# 
  3816   003F18                     SMT1CPWL        equ	16152	;# 
  3817   003F19                     SMT1CPWH        equ	16153	;# 
  3818   003F1A                     SMT1CPWU        equ	16154	;# 
  3819   003F1B                     SMT1PR          equ	16155	;# 
  3820   003F1B                     SMT1PRL         equ	16155	;# 
  3821   003F1C                     SMT1PRH         equ	16156	;# 
  3822   003F1D                     SMT1PRU         equ	16157	;# 
  3823   003F1E                     SMT1CON0        equ	16158	;# 
  3824   003F1F                     SMT1CON1        equ	16159	;# 
  3825   003F20                     SMT1STAT        equ	16160	;# 
  3826   003F21                     SMT1CLK         equ	16161	;# 
  3827   003F22                     SMT1SIG         equ	16162	;# 
  3828   003F23                     SMT1WIN         equ	16163	;# 
  3829   003F38                     NCO1ACC         equ	16184	;# 
  3830   003F38                     NCO1ACCL        equ	16184	;# 
  3831   003F39                     NCO1ACCH        equ	16185	;# 
  3832   003F3A                     NCO1ACCU        equ	16186	;# 
  3833   003F3B                     NCO1INC         equ	16187	;# 
  3834   003F3B                     NCO1INCL        equ	16187	;# 
  3835   003F3C                     NCO1INCH        equ	16188	;# 
  3836   003F3D                     NCO1INCU        equ	16189	;# 
  3837   003F3E                     NCO1CON         equ	16190	;# 
  3838   003F3F                     NCO1CLK         equ	16191	;# 
  3839   003F40                     CWG3CLK         equ	16192	;# 
  3840   003F40                     CWG3CLKCON      equ	16192	;# 
  3841   003F41                     CWG3ISM         equ	16193	;# 
  3842   003F41                     CWG3DAT         equ	16193	;# 
  3843   003F42                     CWG3DBR         equ	16194	;# 
  3844   003F43                     CWG3DBF         equ	16195	;# 
  3845   003F44                     CWG3CON0        equ	16196	;# 
  3846   003F45                     CWG3CON1        equ	16197	;# 
  3847   003F46                     CWG3AS0         equ	16198	;# 
  3848   003F47                     CWG3AS1         equ	16199	;# 
  3849   003F48                     CWG3STR         equ	16200	;# 
  3850   003F49                     CWG2CLK         equ	16201	;# 
  3851   003F49                     CWG2CLKCON      equ	16201	;# 
  3852   003F4A                     CWG2ISM         equ	16202	;# 
  3853   003F4A                     CWG2DAT         equ	16202	;# 
  3854   003F4B                     CWG2DBR         equ	16203	;# 
  3855   003F4C                     CWG2DBF         equ	16204	;# 
  3856   003F4D                     CWG2CON0        equ	16205	;# 
  3857   003F4E                     CWG2CON1        equ	16206	;# 
  3858   003F4F                     CWG2AS0         equ	16207	;# 
  3859   003F50                     CWG2AS1         equ	16208	;# 
  3860   003F51                     CWG2STR         equ	16209	;# 
  3861   003F52                     CWG1CLK         equ	16210	;# 
  3862   003F52                     CWG1CLKCON      equ	16210	;# 
  3863   003F53                     CWG1ISM         equ	16211	;# 
  3864   003F53                     CWG1DAT         equ	16211	;# 
  3865   003F54                     CWG1DBR         equ	16212	;# 
  3866   003F55                     CWG1DBF         equ	16213	;# 
  3867   003F56                     CWG1CON0        equ	16214	;# 
  3868   003F57                     CWG1CON1        equ	16215	;# 
  3869   003F58                     CWG1AS0         equ	16216	;# 
  3870   003F59                     CWG1AS1         equ	16217	;# 
  3871   003F5A                     CWG1STR         equ	16218	;# 
  3872   003F5E                     CCPTMRS0        equ	16222	;# 
  3873   003F5F                     CCPTMRS1        equ	16223	;# 
  3874   003F60                     PWM8DC          equ	16224	;# 
  3875   003F60                     PWM8DCL         equ	16224	;# 
  3876   003F61                     PWM8DCH         equ	16225	;# 
  3877   003F62                     PWM8CON         equ	16226	;# 
  3878   003F64                     PWM7DC          equ	16228	;# 
  3879   003F64                     PWM7DCL         equ	16228	;# 
  3880   003F65                     PWM7DCH         equ	16229	;# 
  3881   003F66                     PWM7CON         equ	16230	;# 
  3882   003F68                     PWM6DC          equ	16232	;# 
  3883   003F68                     PWM6DCL         equ	16232	;# 
  3884   003F69                     PWM6DCH         equ	16233	;# 
  3885   003F6A                     PWM6CON         equ	16234	;# 
  3886   003F6C                     PWM5DC          equ	16236	;# 
  3887   003F6C                     PWM5DCL         equ	16236	;# 
  3888   003F6D                     PWM5DCH         equ	16237	;# 
  3889   003F6E                     PWM5CON         equ	16238	;# 
  3890   003F70                     CCPR4           equ	16240	;# 
  3891   003F70                     CCPR4L          equ	16240	;# 
  3892   003F71                     CCPR4H          equ	16241	;# 
  3893   003F72                     CCP4CON         equ	16242	;# 
  3894   003F73                     CCP4CAP         equ	16243	;# 
  3895   003F74                     CCPR3           equ	16244	;# 
  3896   003F74                     CCPR3L          equ	16244	;# 
  3897   003F75                     CCPR3H          equ	16245	;# 
  3898   003F76                     CCP3CON         equ	16246	;# 
  3899   003F77                     CCP3CAP         equ	16247	;# 
  3900   003F78                     CCPR2           equ	16248	;# 
  3901   003F78                     CCPR2L          equ	16248	;# 
  3902   003F79                     CCPR2H          equ	16249	;# 
  3903   003F7A                     CCP2CON         equ	16250	;# 
  3904   003F7B                     CCP2CAP         equ	16251	;# 
  3905   003F7C                     CCPR1           equ	16252	;# 
  3906   003F7C                     CCPR1L          equ	16252	;# 
  3907   003F7D                     CCPR1H          equ	16253	;# 
  3908   003F7E                     CCP1CON         equ	16254	;# 
  3909   003F7F                     CCP1CAP         equ	16255	;# 
  3910   003F92                     T6TMR           equ	16274	;# 
  3911   003F92                     TMR6            equ	16274	;# 
  3912   003F93                     T6PR            equ	16275	;# 
  3913   003F93                     PR6             equ	16275	;# 
  3914   003F94                     T6CON           equ	16276	;# 
  3915   003F95                     T6HLT           equ	16277	;# 
  3916   003F96                     T6CLKCON        equ	16278	;# 
  3917   003F96                     T6CLK           equ	16278	;# 
  3918   003F97                     T6RST           equ	16279	;# 
  3919   003F98                     TMR5            equ	16280	;# 
  3920   003F98                     TMR5L           equ	16280	;# 
  3921   003F99                     TMR5H           equ	16281	;# 
  3922   003F9A                     T5CON           equ	16282	;# 
  3923   003F9A                     TMR5CON         equ	16282	;# 
  3924   003F9B                     T5GCON          equ	16283	;# 
  3925   003F9B                     TMR5GCON        equ	16283	;# 
  3926   003F9C                     T5GATE          equ	16284	;# 
  3927   003F9C                     TMR5GATE        equ	16284	;# 
  3928   003F9D                     T5CLK           equ	16285	;# 
  3929   003F9D                     TMR5CLK         equ	16285	;# 
  3930   003F9D                     PR5             equ	16285	;# 
  3931   003F9E                     T4TMR           equ	16286	;# 
  3932   003F9E                     TMR4            equ	16286	;# 
  3933   003F9F                     T4PR            equ	16287	;# 
  3934   003F9F                     PR4             equ	16287	;# 
  3935   003FA0                     T4CON           equ	16288	;# 
  3936   003FA1                     T4HLT           equ	16289	;# 
  3937   003FA2                     T4CLKCON        equ	16290	;# 
  3938   003FA2                     T4CLK           equ	16290	;# 
  3939   003FA3                     T4RST           equ	16291	;# 
  3940   003FA4                     TMR3            equ	16292	;# 
  3941   003FA4                     TMR3L           equ	16292	;# 
  3942   003FA5                     TMR3H           equ	16293	;# 
  3943   003FA6                     T3CON           equ	16294	;# 
  3944   003FA6                     TMR3CON         equ	16294	;# 
  3945   003FA7                     T3GCON          equ	16295	;# 
  3946   003FA7                     TMR3GCON        equ	16295	;# 
  3947   003FA8                     T3GATE          equ	16296	;# 
  3948   003FA8                     TMR3GATE        equ	16296	;# 
  3949   003FA9                     T3CLK           equ	16297	;# 
  3950   003FA9                     TMR3CLK         equ	16297	;# 
  3951   003FA9                     PR3             equ	16297	;# 
  3952   003FAA                     T2TMR           equ	16298	;# 
  3953   003FAA                     TMR2            equ	16298	;# 
  3954   003FAB                     T2PR            equ	16299	;# 
  3955   003FAB                     PR2             equ	16299	;# 
  3956   003FAC                     T2CON           equ	16300	;# 
  3957   003FAD                     T2HLT           equ	16301	;# 
  3958   003FAE                     T2CLKCON        equ	16302	;# 
  3959   003FAE                     T2CLK           equ	16302	;# 
  3960   003FAF                     T2RST           equ	16303	;# 
  3961   003FB0                     TMR1            equ	16304	;# 
  3962   003FB0                     TMR1L           equ	16304	;# 
  3963   003FB1                     TMR1H           equ	16305	;# 
  3964   003FB2                     T1CON           equ	16306	;# 
  3965   003FB2                     TMR1CON         equ	16306	;# 
  3966   003FB3                     T1GCON          equ	16307	;# 
  3967   003FB3                     TMR1GCON        equ	16307	;# 
  3968   003FB4                     T1GATE          equ	16308	;# 
  3969   003FB4                     TMR1GATE        equ	16308	;# 
  3970   003FB5                     T1CLK           equ	16309	;# 
  3971   003FB5                     TMR1CLK         equ	16309	;# 
  3972   003FB5                     PR1             equ	16309	;# 
  3973   003FB6                     TMR0L           equ	16310	;# 
  3974   003FB6                     TMR0            equ	16310	;# 
  3975   003FB7                     TMR0H           equ	16311	;# 
  3976   003FB7                     PR0             equ	16311	;# 
  3977   003FB8                     T0CON0          equ	16312	;# 
  3978   003FB9                     T0CON1          equ	16313	;# 
  3979   003FBA                     LATA            equ	16314	;# 
  3980   003FBB                     LATB            equ	16315	;# 
  3981   003FBC                     LATC            equ	16316	;# 
  3982   003FBD                     LATD            equ	16317	;# 
  3983   003FBE                     LATE            equ	16318	;# 
  3984   003FBF                     LATF            equ	16319	;# 
  3985   003FC2                     TRISA           equ	16322	;# 
  3986   003FC3                     TRISB           equ	16323	;# 
  3987   003FC4                     TRISC           equ	16324	;# 
  3988   003FC5                     TRISD           equ	16325	;# 
  3989   003FC6                     TRISE           equ	16326	;# 
  3990   003FC7                     TRISF           equ	16327	;# 
  3991   003FCA                     PORTA           equ	16330	;# 
  3992   003FCB                     PORTB           equ	16331	;# 
  3993   003FCC                     PORTC           equ	16332	;# 
  3994   003FCD                     PORTD           equ	16333	;# 
  3995   003FCE                     PORTE           equ	16334	;# 
  3996   003FCF                     PORTF           equ	16335	;# 
  3997   003FD2                     INTCON0         equ	16338	;# 
  3998   003FD3                     INTCON1         equ	16339	;# 
  3999   003FD4                     IVTLOCK         equ	16340	;# 
  4000   003FD5                     IVTBASE         equ	16341	;# 
  4001   003FD5                     IVTBASEL        equ	16341	;# 
  4002   003FD6                     IVTBASEH        equ	16342	;# 
  4003   003FD7                     IVTBASEU        equ	16343	;# 
  4004   003FD8                     STATUS          equ	16344	;# 
  4005   003FD9                     FSR2            equ	16345	;# 
  4006   003FD9                     FSR2L           equ	16345	;# 
  4007   003FDA                     FSR2H           equ	16346	;# 
  4008   003FDB                     PLUSW2          equ	16347	;# 
  4009   003FDC                     PREINC2         equ	16348	;# 
  4010   003FDD                     POSTDEC2        equ	16349	;# 
  4011   003FDE                     POSTINC2        equ	16350	;# 
  4012   003FDF                     INDF2           equ	16351	;# 
  4013   003FE0                     BSR             equ	16352	;# 
  4014   003FE1                     FSR1            equ	16353	;# 
  4015   003FE1                     FSR1L           equ	16353	;# 
  4016   003FE2                     FSR1H           equ	16354	;# 
  4017   003FE3                     PLUSW1          equ	16355	;# 
  4018   003FE4                     PREINC1         equ	16356	;# 
  4019   003FE5                     POSTDEC1        equ	16357	;# 
  4020   003FE6                     POSTINC1        equ	16358	;# 
  4021   003FE7                     INDF1           equ	16359	;# 
  4022   003FE8                     WREG            equ	16360	;# 
  4023   003FE9                     FSR0            equ	16361	;# 
  4024   003FE9                     FSR0L           equ	16361	;# 
  4025   003FEA                     FSR0H           equ	16362	;# 
  4026   003FEB                     PLUSW0          equ	16363	;# 
  4027   003FEC                     PREINC0         equ	16364	;# 
  4028   003FED                     POSTDEC0        equ	16365	;# 
  4029   003FEE                     POSTINC0        equ	16366	;# 
  4030   003FEF                     INDF0           equ	16367	;# 
  4031   003FF0                     PCON0           equ	16368	;# 
  4032   003FF1                     PCON1           equ	16369	;# 
  4033   003FF3                     PROD            equ	16371	;# 
  4034   003FF3                     PRODL           equ	16371	;# 
  4035   003FF4                     PRODH           equ	16372	;# 
  4036   003FF5                     TABLAT          equ	16373	;# 
  4037   003FF6                     TBLPTR          equ	16374	;# 
  4038   003FF6                     TBLPTRL         equ	16374	;# 
  4039   003FF7                     TBLPTRH         equ	16375	;# 
  4040   003FF8                     TBLPTRU         equ	16376	;# 
  4041   003FF9                     PCLAT           equ	16377	;# 
  4042   003FF9                     PCL             equ	16377	;# 
  4043   003FFA                     PCLATH          equ	16378	;# 
  4044   003FFB                     PCLATU          equ	16379	;# 
  4045   003FFC                     STKPTR          equ	16380	;# 
  4046   003FFD                     TOS             equ	16381	;# 
  4047   003FFD                     TOSL            equ	16381	;# 
  4048   003FFE                     TOSH            equ	16382	;# 
  4049   003FFF                     TOSU            equ	16383	;# 
  4050   003880                     STATUS_CSHAD    equ	14464	;# 
  4051   003881                     WREG_CSHAD      equ	14465	;# 
  4052   003882                     BSR_CSHAD       equ	14466	;# 
  4053   003883                     SHADCON         equ	14467	;# 
  4054   003884                     STATUS_SHAD     equ	14468	;# 
  4055   003885                     WREG_SHAD       equ	14469	;# 
  4056   003886                     BSR_SHAD        equ	14470	;# 
  4057   003887                     PCLATH_SHAD     equ	14471	;# 
  4058   003888                     PCLATU_SHAD     equ	14472	;# 
  4059   003889                     FSR0SH          equ	14473	;# 
  4060   003889                     FSR0L_SHAD      equ	14473	;# 
  4061   00388A                     FSR0H_SHAD      equ	14474	;# 
  4062   00388B                     FSR1SH          equ	14475	;# 
  4063   00388B                     FSR1L_SHAD      equ	14475	;# 
  4064   00388C                     FSR1H_SHAD      equ	14476	;# 
  4065   00388D                     FSR2SH          equ	14477	;# 
  4066   00388D                     FSR2L_SHAD      equ	14477	;# 
  4067   00388E                     FSR2H_SHAD      equ	14478	;# 
  4068   00388F                     PRODSH          equ	14479	;# 
  4069   00388F                     PRODL_SHAD      equ	14479	;# 
  4070   003890                     PRODH_SHAD      equ	14480	;# 
  4071   00389D                     IVTADL          equ	14493	;# 
  4072   00389E                     IVTADH          equ	14494	;# 
  4073   00389F                     IVTADU          equ	14495	;# 
  4074   00395B                     WDTCON0         equ	14683	;# 
  4075   00395C                     WDTCON1         equ	14684	;# 
  4076   00395D                     WDTPSL          equ	14685	;# 
  4077   00395E                     WDTPSH          equ	14686	;# 
  4078   00395F                     WDTTMR          equ	14687	;# 
  4079   003960                     CRCDATA         equ	14688	;# 
  4080   003960                     CRCDATL         equ	14688	;# 
  4081   003961                     CRCDATH         equ	14689	;# 
  4082   003962                     CRCACC          equ	14690	;# 
  4083   003962                     CRCACCL         equ	14690	;# 
  4084   003963                     CRCACCH         equ	14691	;# 
  4085   003964                     CRCSHFT         equ	14692	;# 
  4086   003964                     CRCSHIFTL       equ	14692	;# 
  4087   003965                     CRCSHIFTH       equ	14693	;# 
  4088   003966                     CRCXOR          equ	14694	;# 
  4089   003966                     CRCXORL         equ	14694	;# 
  4090   003967                     CRCXORH         equ	14695	;# 
  4091   003968                     CRCCON0         equ	14696	;# 
  4092   003969                     CRCCON1         equ	14697	;# 
  4093   003976                     SCANLADR        equ	14710	;# 
  4094   003976                     SCANLADRL       equ	14710	;# 
  4095   003977                     SCANLADRH       equ	14711	;# 
  4096   003978                     SCANLADRU       equ	14712	;# 
  4097   003979                     SCANHADR        equ	14713	;# 
  4098   003979                     SCANHADRL       equ	14713	;# 
  4099   00397A                     SCANHADRH       equ	14714	;# 
  4100   00397B                     SCANHADRU       equ	14715	;# 
  4101   00397C                     SCANCON0        equ	14716	;# 
  4102   00397D                     SCANTRIG        equ	14717	;# 
  4103   003980                     IPR0            equ	14720	;# 
  4104   003981                     IPR1            equ	14721	;# 
  4105   003982                     IPR2            equ	14722	;# 
  4106   003983                     IPR3            equ	14723	;# 
  4107   003984                     IPR4            equ	14724	;# 
  4108   003985                     IPR5            equ	14725	;# 
  4109   003986                     IPR6            equ	14726	;# 
  4110   003987                     IPR7            equ	14727	;# 
  4111   003988                     IPR8            equ	14728	;# 
  4112   003989                     IPR9            equ	14729	;# 
  4113   00398A                     IPR10           equ	14730	;# 
  4114   003990                     PIE0            equ	14736	;# 
  4115   003991                     PIE1            equ	14737	;# 
  4116   003992                     PIE2            equ	14738	;# 
  4117   003993                     PIE3            equ	14739	;# 
  4118   003994                     PIE4            equ	14740	;# 
  4119   003995                     PIE5            equ	14741	;# 
  4120   003996                     PIE6            equ	14742	;# 
  4121   003997                     PIE7            equ	14743	;# 
  4122   003998                     PIE8            equ	14744	;# 
  4123   003999                     PIE9            equ	14745	;# 
  4124   00399A                     PIE10           equ	14746	;# 
  4125   0039A0                     PIR0            equ	14752	;# 
  4126   0039A1                     PIR1            equ	14753	;# 
  4127   0039A2                     PIR2            equ	14754	;# 
  4128   0039A3                     PIR3            equ	14755	;# 
  4129   0039A4                     PIR4            equ	14756	;# 
  4130   0039A5                     PIR5            equ	14757	;# 
  4131   0039A6                     PIR6            equ	14758	;# 
  4132   0039A7                     PIR7            equ	14759	;# 
  4133   0039A8                     PIR8            equ	14760	;# 
  4134   0039A9                     PIR9            equ	14761	;# 
  4135   0039AA                     PIR10           equ	14762	;# 
  4136   0039C0                     PMD0            equ	14784	;# 
  4137   0039C1                     PMD1            equ	14785	;# 
  4138   0039C2                     PMD2            equ	14786	;# 
  4139   0039C3                     PMD3            equ	14787	;# 
  4140   0039C4                     PMD4            equ	14788	;# 
  4141   0039C5                     PMD5            equ	14789	;# 
  4142   0039C6                     PMD6            equ	14790	;# 
  4143   0039C7                     PMD7            equ	14791	;# 
  4144   0039D0                     BORCON          equ	14800	;# 
  4145   0039D1                     VREGCON         equ	14801	;# 
  4146   0039D8                     CPUDOZE         equ	14808	;# 
  4147   0039D9                     OSCCON1         equ	14809	;# 
  4148   0039DA                     OSCCON2         equ	14810	;# 
  4149   0039DB                     OSCCON3         equ	14811	;# 
  4150   0039DC                     OSCSTAT         equ	14812	;# 
  4151   0039DC                     OSCSTAT1        equ	14812	;# 
  4152   0039DD                     OSCEN           equ	14813	;# 
  4153   0039DE                     OSCTUNE         equ	14814	;# 
  4154   0039DF                     OSCFRQ          equ	14815	;# 
  4155   0039E0                     NVMADRL         equ	14816	;# 
  4156   0039E1                     NVMADRH         equ	14817	;# 
  4157   0039E3                     NVMDAT          equ	14819	;# 
  4158   0039E5                     NVMCON1         equ	14821	;# 
  4159   0039E6                     NVMCON2         equ	14822	;# 
  4160   0039EF                     PRLOCK          equ	14831	;# 
  4161   0039F1                     ISRPR           equ	14833	;# 
  4162   0039F2                     MAINPR          equ	14834	;# 
  4163   0039F3                     DMA1PR          equ	14835	;# 
  4164   0039F4                     DMA2PR          equ	14836	;# 
  4165   0039F7                     SCANPR          equ	14839	;# 
  4166   003A00                     RA0PPS          equ	14848	;# 
  4167   003A01                     RA1PPS          equ	14849	;# 
  4168   003A02                     RA2PPS          equ	14850	;# 
  4169   003A03                     RA3PPS          equ	14851	;# 
  4170   003A04                     RA4PPS          equ	14852	;# 
  4171   003A05                     RA5PPS          equ	14853	;# 
  4172   003A06                     RA6PPS          equ	14854	;# 
  4173   003A07                     RA7PPS          equ	14855	;# 
  4174   003A08                     RB0PPS          equ	14856	;# 
  4175   003A09                     RB1PPS          equ	14857	;# 
  4176   003A0A                     RB2PPS          equ	14858	;# 
  4177   003A0B                     RB3PPS          equ	14859	;# 
  4178   003A0C                     RB4PPS          equ	14860	;# 
  4179   003A0D                     RB5PPS          equ	14861	;# 
  4180   003A0E                     RB6PPS          equ	14862	;# 
  4181   003A0F                     RB7PPS          equ	14863	;# 
  4182   003A10                     RC0PPS          equ	14864	;# 
  4183   003A11                     RC1PPS          equ	14865	;# 
  4184   003A12                     RC2PPS          equ	14866	;# 
  4185   003A13                     RC3PPS          equ	14867	;# 
  4186   003A14                     RC4PPS          equ	14868	;# 
  4187   003A15                     RC5PPS          equ	14869	;# 
  4188   003A16                     RC6PPS          equ	14870	;# 
  4189   003A17                     RC7PPS          equ	14871	;# 
  4190   003A18                     RD0PPS          equ	14872	;# 
  4191   003A19                     RD1PPS          equ	14873	;# 
  4192   003A1A                     RD2PPS          equ	14874	;# 
  4193   003A1B                     RD3PPS          equ	14875	;# 
  4194   003A1C                     RD4PPS          equ	14876	;# 
  4195   003A1D                     RD5PPS          equ	14877	;# 
  4196   003A1E                     RD6PPS          equ	14878	;# 
  4197   003A1F                     RD7PPS          equ	14879	;# 
  4198   003A20                     RE0PPS          equ	14880	;# 
  4199   003A21                     RE1PPS          equ	14881	;# 
  4200   003A22                     RE2PPS          equ	14882	;# 
  4201   003A28                     RF0PPS          equ	14888	;# 
  4202   003A29                     RF1PPS          equ	14889	;# 
  4203   003A2A                     RF2PPS          equ	14890	;# 
  4204   003A2B                     RF3PPS          equ	14891	;# 
  4205   003A2C                     RF4PPS          equ	14892	;# 
  4206   003A2D                     RF5PPS          equ	14893	;# 
  4207   003A2E                     RF6PPS          equ	14894	;# 
  4208   003A2F                     RF7PPS          equ	14895	;# 
  4209   003A40                     ANSELA          equ	14912	;# 
  4210   003A41                     WPUA            equ	14913	;# 
  4211   003A42                     ODCONA          equ	14914	;# 
  4212   003A43                     SLRCONA         equ	14915	;# 
  4213   003A44                     INLVLA          equ	14916	;# 
  4214   003A45                     IOCAP           equ	14917	;# 
  4215   003A46                     IOCAN           equ	14918	;# 
  4216   003A47                     IOCAF           equ	14919	;# 
  4217   003A50                     ANSELB          equ	14928	;# 
  4218   003A51                     WPUB            equ	14929	;# 
  4219   003A52                     ODCONB          equ	14930	;# 
  4220   003A53                     SLRCONB         equ	14931	;# 
  4221   003A54                     INLVLB          equ	14932	;# 
  4222   003A55                     IOCBP           equ	14933	;# 
  4223   003A56                     IOCBN           equ	14934	;# 
  4224   003A57                     IOCBF           equ	14935	;# 
  4225   003A5A                     RB1I2C          equ	14938	;# 
  4226   003A5B                     RB2I2C          equ	14939	;# 
  4227   003A60                     ANSELC          equ	14944	;# 
  4228   003A61                     WPUC            equ	14945	;# 
  4229   003A62                     ODCONC          equ	14946	;# 
  4230   003A63                     SLRCONC         equ	14947	;# 
  4231   003A64                     INLVLC          equ	14948	;# 
  4232   003A65                     IOCCP           equ	14949	;# 
  4233   003A66                     IOCCN           equ	14950	;# 
  4234   003A67                     IOCCF           equ	14951	;# 
  4235   003A6A                     RC3I2C          equ	14954	;# 
  4236   003A6B                     RC4I2C          equ	14955	;# 
  4237   003A70                     ANSELD          equ	14960	;# 
  4238   003A71                     WPUD            equ	14961	;# 
  4239   003A72                     ODCOND          equ	14962	;# 
  4240   003A73                     SLRCOND         equ	14963	;# 
  4241   003A74                     INLVLD          equ	14964	;# 
  4242   003A7A                     RD0I2C          equ	14970	;# 
  4243   003A7B                     RD1I2C          equ	14971	;# 
  4244   003A80                     ANSELE          equ	14976	;# 
  4245   003A81                     WPUE            equ	14977	;# 
  4246   003A82                     ODCONE          equ	14978	;# 
  4247   003A83                     SLRCONE         equ	14979	;# 
  4248   003A84                     INLVLE          equ	14980	;# 
  4249   003A85                     IOCEP           equ	14981	;# 
  4250   003A86                     IOCEN           equ	14982	;# 
  4251   003A87                     IOCEF           equ	14983	;# 
  4252   003A90                     ANSELF          equ	14992	;# 
  4253   003A91                     WPUF            equ	14993	;# 
  4254   003A92                     ODCONF          equ	14994	;# 
  4255   003A93                     SLRCONF         equ	14995	;# 
  4256   003A94                     INLVLF          equ	14996	;# 
  4257   003ABF                     PPSLOCK         equ	15039	;# 
  4258   003AC0                     INT0PPS         equ	15040	;# 
  4259   003AC1                     INT1PPS         equ	15041	;# 
  4260   003AC2                     INT2PPS         equ	15042	;# 
  4261   003AC3                     T0CKIPPS        equ	15043	;# 
  4262   003AC4                     T1CKIPPS        equ	15044	;# 
  4263   003AC5                     T1GPPS          equ	15045	;# 
  4264   003AC6                     T3CKIPPS        equ	15046	;# 
  4265   003AC7                     T3GPPS          equ	15047	;# 
  4266   003AC8                     T5CKIPPS        equ	15048	;# 
  4267   003AC9                     T5GPPS          equ	15049	;# 
  4268   003ACA                     T2INPPS         equ	15050	;# 
  4269   003ACB                     T4INPPS         equ	15051	;# 
  4270   003ACC                     T6INPPS         equ	15052	;# 
  4271   003ACD                     CCP1PPS         equ	15053	;# 
  4272   003ACE                     CCP2PPS         equ	15054	;# 
  4273   003ACF                     CCP3PPS         equ	15055	;# 
  4274   003AD0                     CCP4PPS         equ	15056	;# 
  4275   003AD1                     SMT1WINPPS      equ	15057	;# 
  4276   003AD2                     SMT1SIGPPS      equ	15058	;# 
  4277   003AD3                     CWG1INPPS       equ	15059	;# 
  4278   003AD4                     CWG2INPPS       equ	15060	;# 
  4279   003AD5                     CWG3INPPS       equ	15061	;# 
  4280   003AD6                     MD1CARLPPS      equ	15062	;# 
  4281   003AD7                     MD1CARHPPS      equ	15063	;# 
  4282   003AD8                     MD1SRCPPS       equ	15064	;# 
  4283   003AD9                     CLCIN0PPS       equ	15065	;# 
  4284   003ADA                     CLCIN1PPS       equ	15066	;# 
  4285   003ADB                     CLCIN2PPS       equ	15067	;# 
  4286   003ADC                     CLCIN3PPS       equ	15068	;# 
  4287   003ADD                     ADACTPPS        equ	15069	;# 
  4288   003ADE                     SPI1SCKPPS      equ	15070	;# 
  4289   003ADF                     SPI1SDIPPS      equ	15071	;# 
  4290   003AE0                     SPI1SSPPS       equ	15072	;# 
  4291   003AE1                     I2C1SCLPPS      equ	15073	;# 
  4292   003AE2                     I2C1SDAPPS      equ	15074	;# 
  4293   003AE3                     I2C2SCLPPS      equ	15075	;# 
  4294   003AE4                     I2C2SDAPPS      equ	15076	;# 
  4295   003AE5                     U1RXPPS         equ	15077	;# 
  4296   003AE6                     U1CTSPPS        equ	15078	;# 
  4297   003AE8                     U2RXPPS         equ	15080	;# 
  4298   003AE9                     U2CTSPPS        equ	15081	;# 
  4299   003BC9                     DMA2BUF         equ	15305	;# 
  4300   003BCA                     DMA2DCNT        equ	15306	;# 
  4301   003BCA                     DMA2DCNTL       equ	15306	;# 
  4302   003BCB                     DMA2DCNTH       equ	15307	;# 
  4303   003BCC                     DMA2DPTR        equ	15308	;# 
  4304   003BCC                     DMA2DPTRL       equ	15308	;# 
  4305   003BCD                     DMA2DPTRH       equ	15309	;# 
  4306   003BCE                     DMA2DSZ         equ	15310	;# 
  4307   003BCE                     DMA2DSZL        equ	15310	;# 
  4308   003BCF                     DMA2DSZH        equ	15311	;# 
  4309   003BD0                     DMA2DSA         equ	15312	;# 
  4310   003BD0                     DMA2DSAL        equ	15312	;# 
  4311   003BD1                     DMA2DSAH        equ	15313	;# 
  4312   003BD2                     DMA2SCNT        equ	15314	;# 
  4313   003BD2                     DMA2SCNTL       equ	15314	;# 
  4314   003BD3                     DMA2SCNTH       equ	15315	;# 
  4315   003BD4                     DMA2SPTR        equ	15316	;# 
  4316   003BD4                     DMA2SPTRL       equ	15316	;# 
  4317   003BD5                     DMA2SPTRH       equ	15317	;# 
  4318   003BD6                     DMA2SPTRU       equ	15318	;# 
  4319   003BD7                     DMA2SSZ         equ	15319	;# 
  4320   003BD7                     DMA2SSZL        equ	15319	;# 
  4321   003BD8                     DMA2SSZH        equ	15320	;# 
  4322   003BD9                     DMA2SSA         equ	15321	;# 
  4323   003BD9                     DMA2SSAL        equ	15321	;# 
  4324   003BDA                     DMA2SSAH        equ	15322	;# 
  4325   003BDB                     DMA2SSAU        equ	15323	;# 
  4326   003BDC                     DMA2CON0        equ	15324	;# 
  4327   003BDD                     DMA2CON1        equ	15325	;# 
  4328   003BDE                     DMA2AIRQ        equ	15326	;# 
  4329   003BDF                     DMA2SIRQ        equ	15327	;# 
  4330   003BE9                     DMA1BUF         equ	15337	;# 
  4331   003BEA                     DMA1DCNT        equ	15338	;# 
  4332   003BEA                     DMA1DCNTL       equ	15338	;# 
  4333   003BEB                     DMA1DCNTH       equ	15339	;# 
  4334   003BEC                     DMA1DPTR        equ	15340	;# 
  4335   003BEC                     DMA1DPTRL       equ	15340	;# 
  4336   003BED                     DMA1DPTRH       equ	15341	;# 
  4337   003BEE                     DMA1DSZ         equ	15342	;# 
  4338   003BEE                     DMA1DSZL        equ	15342	;# 
  4339   003BEF                     DMA1DSZH        equ	15343	;# 
  4340   003BF0                     DMA1DSA         equ	15344	;# 
  4341   003BF0                     DMA1DSAL        equ	15344	;# 
  4342   003BF1                     DMA1DSAH        equ	15345	;# 
  4343   003BF2                     DMA1SCNT        equ	15346	;# 
  4344   003BF2                     DMA1SCNTL       equ	15346	;# 
  4345   003BF3                     DMA1SCNTH       equ	15347	;# 
  4346   003BF4                     DMA1SPTR        equ	15348	;# 
  4347   003BF4                     DMA1SPTRL       equ	15348	;# 
  4348   003BF5                     DMA1SPTRH       equ	15349	;# 
  4349   003BF6                     DMA1SPTRU       equ	15350	;# 
  4350   003BF7                     DMA1SSZ         equ	15351	;# 
  4351   003BF7                     DMA1SSZL        equ	15351	;# 
  4352   003BF8                     DMA1SSZH        equ	15352	;# 
  4353   003BF9                     DMA1SSA         equ	15353	;# 
  4354   003BF9                     DMA1SSAL        equ	15353	;# 
  4355   003BFA                     DMA1SSAH        equ	15354	;# 
  4356   003BFB                     DMA1SSAU        equ	15355	;# 
  4357   003BFC                     DMA1CON0        equ	15356	;# 
  4358   003BFD                     DMA1CON1        equ	15357	;# 
  4359   003BFE                     DMA1AIRQ        equ	15358	;# 
  4360   003BFF                     DMA1SIRQ        equ	15359	;# 
  4361   003C56                     CLC4CON         equ	15446	;# 
  4362   003C57                     CLC4POL         equ	15447	;# 
  4363   003C58                     CLC4SEL0        equ	15448	;# 
  4364   003C59                     CLC4SEL1        equ	15449	;# 
  4365   003C5A                     CLC4SEL2        equ	15450	;# 
  4366   003C5B                     CLC4SEL3        equ	15451	;# 
  4367   003C5C                     CLC4GLS0        equ	15452	;# 
  4368   003C5D                     CLC4GLS1        equ	15453	;# 
  4369   003C5E                     CLC4GLS2        equ	15454	;# 
  4370   003C5F                     CLC4GLS3        equ	15455	;# 
  4371   003C60                     CLC3CON         equ	15456	;# 
  4372   003C61                     CLC3POL         equ	15457	;# 
  4373   003C62                     CLC3SEL0        equ	15458	;# 
  4374   003C63                     CLC3SEL1        equ	15459	;# 
  4375   003C64                     CLC3SEL2        equ	15460	;# 
  4376   003C65                     CLC3SEL3        equ	15461	;# 
  4377   003C66                     CLC3GLS0        equ	15462	;# 
  4378   003C67                     CLC3GLS1        equ	15463	;# 
  4379   003C68                     CLC3GLS2        equ	15464	;# 
  4380   003C69                     CLC3GLS3        equ	15465	;# 
  4381   003C6A                     CLC2CON         equ	15466	;# 
  4382   003C6B                     CLC2POL         equ	15467	;# 
  4383   003C6C                     CLC2SEL0        equ	15468	;# 
  4384   003C6D                     CLC2SEL1        equ	15469	;# 
  4385   003C6E                     CLC2SEL2        equ	15470	;# 
  4386   003C6F                     CLC2SEL3        equ	15471	;# 
  4387   003C70                     CLC2GLS0        equ	15472	;# 
  4388   003C71                     CLC2GLS1        equ	15473	;# 
  4389   003C72                     CLC2GLS2        equ	15474	;# 
  4390   003C73                     CLC2GLS3        equ	15475	;# 
  4391   003C74                     CLC1CON         equ	15476	;# 
  4392   003C75                     CLC1POL         equ	15477	;# 
  4393   003C76                     CLC1SEL0        equ	15478	;# 
  4394   003C77                     CLC1SEL1        equ	15479	;# 
  4395   003C78                     CLC1SEL2        equ	15480	;# 
  4396   003C79                     CLC1SEL3        equ	15481	;# 
  4397   003C7A                     CLC1GLS0        equ	15482	;# 
  4398   003C7B                     CLC1GLS1        equ	15483	;# 
  4399   003C7C                     CLC1GLS2        equ	15484	;# 
  4400   003C7D                     CLC1GLS3        equ	15485	;# 
  4401   003C7E                     CLCDATA0        equ	15486	;# 
  4402   003CE5                     CLKRCON         equ	15589	;# 
  4403   003CE6                     CLKRCLK         equ	15590	;# 
  4404   003CFA                     MD1CON0         equ	15610	;# 
  4405   003CFB                     MD1CON1         equ	15611	;# 
  4406   003CFC                     MD1SRC          equ	15612	;# 
  4407   003CFD                     MD1CARL         equ	15613	;# 
  4408   003CFE                     MD1CARH         equ	15614	;# 
  4409   003D10                     SPI1RXB         equ	15632	;# 
  4410   003D11                     SPI1TXB         equ	15633	;# 
  4411   003D12                     SPI1TCNT        equ	15634	;# 
  4412   003D12                     SPI1TCNTL       equ	15634	;# 
  4413   003D13                     SPI1TCNTH       equ	15635	;# 
  4414   003D14                     SPI1CON0        equ	15636	;# 
  4415   003D15                     SPI1CON1        equ	15637	;# 
  4416   003D16                     SPI1CON2        equ	15638	;# 
  4417   003D17                     SPI1STATUS      equ	15639	;# 
  4418   003D18                     SPI1TWIDTH      equ	15640	;# 
  4419   003D19                     SPI1BAUD        equ	15641	;# 
  4420   003D1A                     SPI1INTF        equ	15642	;# 
  4421   003D1B                     SPI1INTE        equ	15643	;# 
  4422   003D1C                     SPI1CLK         equ	15644	;# 
  4423   003D54                     I2C2RXB         equ	15700	;# 
  4424   003D55                     I2C2TXB         equ	15701	;# 
  4425   003D56                     I2C2CNT         equ	15702	;# 
  4426   003D57                     I2C2ADB0        equ	15703	;# 
  4427   003D58                     I2C2ADB1        equ	15704	;# 
  4428   003D59                     I2C2ADR0        equ	15705	;# 
  4429   003D5A                     I2C2ADR1        equ	15706	;# 
  4430   003D5B                     I2C2ADR2        equ	15707	;# 
  4431   003D5C                     I2C2ADR3        equ	15708	;# 
  4432   003D5D                     I2C2CON0        equ	15709	;# 
  4433   003D5E                     I2C2CON1        equ	15710	;# 
  4434   003D5F                     I2C2CON2        equ	15711	;# 
  4435   003D60                     I2C2ERR         equ	15712	;# 
  4436   003D61                     I2C2STAT0       equ	15713	;# 
  4437   003D62                     I2C2STAT1       equ	15714	;# 
  4438   003D63                     I2C2PIR         equ	15715	;# 
  4439   003D64                     I2C2PIE         equ	15716	;# 
  4440   003D65                     I2C2CLK         equ	15717	;# 
  4441   003D66                     I2C2BTO         equ	15718	;# 
  4442   003D6A                     I2C1RXB         equ	15722	;# 
  4443   003D6B                     I2C1TXB         equ	15723	;# 
  4444   003D6C                     I2C1CNT         equ	15724	;# 
  4445   003D6D                     I2C1ADB0        equ	15725	;# 
  4446   003D6E                     I2C1ADB1        equ	15726	;# 
  4447   003D6F                     I2C1ADR0        equ	15727	;# 
  4448   003D70                     I2C1ADR1        equ	15728	;# 
  4449   003D71                     I2C1ADR2        equ	15729	;# 
  4450   003D72                     I2C1ADR3        equ	15730	;# 
  4451   003D73                     I2C1CON0        equ	15731	;# 
  4452   003D74                     I2C1CON1        equ	15732	;# 
  4453   003D75                     I2C1CON2        equ	15733	;# 
  4454   003D76                     I2C1ERR         equ	15734	;# 
  4455   003D77                     I2C1STAT0       equ	15735	;# 
  4456   003D78                     I2C1STAT1       equ	15736	;# 
  4457   003D79                     I2C1PIR         equ	15737	;# 
  4458   003D7A                     I2C1PIE         equ	15738	;# 
  4459   003D7B                     I2C1CLK         equ	15739	;# 
  4460   003D7C                     I2C1BTO         equ	15740	;# 
  4461   003DD0                     U2RXB           equ	15824	;# 
  4462   003DD0                     U2RXBL          equ	15824	;# 
  4463   003DD2                     U2TXB           equ	15826	;# 
  4464   003DD2                     U2TXBL          equ	15826	;# 
  4465   003DD4                     U2P1            equ	15828	;# 
  4466   003DD4                     U2P1L           equ	15828	;# 
  4467   003DD6                     U2P2            equ	15830	;# 
  4468   003DD6                     U2P2L           equ	15830	;# 
  4469   003DD8                     U2P3            equ	15832	;# 
  4470   003DD8                     U2P3L           equ	15832	;# 
  4471   003DDA                     U2CON0          equ	15834	;# 
  4472   003DDB                     U2CON1          equ	15835	;# 
  4473   003DDC                     U2CON2          equ	15836	;# 
  4474   003DDD                     U2BRG           equ	15837	;# 
  4475   003DDD                     U2BRGL          equ	15837	;# 
  4476   003DDE                     U2BRGH          equ	15838	;# 
  4477   003DDF                     U2FIFO          equ	15839	;# 
  4478   003DE0                     U2UIR           equ	15840	;# 
  4479   003DE1                     U2ERRIR         equ	15841	;# 
  4480   003DE2                     U2ERRIE         equ	15842	;# 
  4481   003DE8                     U1RXB           equ	15848	;# 
  4482   003DE8                     U1RXBL          equ	15848	;# 
  4483   003DE9                     U1RXCHK         equ	15849	;# 
  4484   003DEA                     U1TXB           equ	15850	;# 
  4485   003DEA                     U1TXBL          equ	15850	;# 
  4486   003DEB                     U1TXCHK         equ	15851	;# 
  4487   003DEC                     U1P1            equ	15852	;# 
  4488   003DEC                     U1P1L           equ	15852	;# 
  4489   003DED                     U1P1H           equ	15853	;# 
  4490   003DEE                     U1P2            equ	15854	;# 
  4491   003DEE                     U1P2L           equ	15854	;# 
  4492   003DEF                     U1P2H           equ	15855	;# 
  4493   003DF0                     U1P3            equ	15856	;# 
  4494   003DF0                     U1P3L           equ	15856	;# 
  4495   003DF1                     U1P3H           equ	15857	;# 
  4496   003DF2                     U1CON0          equ	15858	;# 
  4497   003DF3                     U1CON1          equ	15859	;# 
  4498   003DF4                     U1CON2          equ	15860	;# 
  4499   003DF5                     U1BRG           equ	15861	;# 
  4500   003DF5                     U1BRGL          equ	15861	;# 
  4501   003DF6                     U1BRGH          equ	15862	;# 
  4502   003DF7                     U1FIFO          equ	15863	;# 
  4503   003DF8                     U1UIR           equ	15864	;# 
  4504   003DF9                     U1ERRIR         equ	15865	;# 
  4505   003DFA                     U1ERRIE         equ	15866	;# 
  4506   003E9C                     DAC1CON1        equ	16028	;# 
  4507   003E9E                     DAC1CON0        equ	16030	;# 
  4508   003EB8                     CM2CON0         equ	16056	;# 
  4509   003EB9                     CM2CON1         equ	16057	;# 
  4510   003EBA                     CM2NCH          equ	16058	;# 
  4511   003EBB                     CM2PCH          equ	16059	;# 
  4512   003EBC                     CM1CON0         equ	16060	;# 
  4513   003EBD                     CM1CON1         equ	16061	;# 
  4514   003EBE                     CM1NCH          equ	16062	;# 
  4515   003EBF                     CM1PCH          equ	16063	;# 
  4516   003EC0                     CMOUT           equ	16064	;# 
  4517   003EC1                     FVRCON          equ	16065	;# 
  4518   003EC3                     ZCDCON          equ	16067	;# 
  4519   003EC9                     HLVDCON0        equ	16073	;# 
  4520   003ECA                     HLVDCON1        equ	16074	;# 
  4521   003ED7                     ADCP            equ	16087	;# 
  4522   003EDE                     ADLTH           equ	16094	;# 
  4523   003EDE                     ADLTHL          equ	16094	;# 
  4524   003EDF                     ADLTHH          equ	16095	;# 
  4525   003EE0                     ADUTH           equ	16096	;# 
  4526   003EE0                     ADUTHL          equ	16096	;# 
  4527   003EE1                     ADUTHH          equ	16097	;# 
  4528   003EE2                     ADERR           equ	16098	;# 
  4529   003EE2                     ADERRL          equ	16098	;# 
  4530   003EE3                     ADERRH          equ	16099	;# 
  4531   003EE4                     ADSTPT          equ	16100	;# 
  4532   003EE4                     ADSTPTL         equ	16100	;# 
  4533   003EE5                     ADSTPTH         equ	16101	;# 
  4534   003EE6                     ADFLTR          equ	16102	;# 
  4535   003EE6                     ADFLTRL         equ	16102	;# 
  4536   003EE7                     ADFLTRH         equ	16103	;# 
  4537   003EE8                     ADACC           equ	16104	;# 
  4538   003EE8                     ADACCL          equ	16104	;# 
  4539   003EE9                     ADACCH          equ	16105	;# 
  4540   003EEA                     ADACCU          equ	16106	;# 
  4541   003EEB                     ADCNT           equ	16107	;# 
  4542   003EEC                     ADRPT           equ	16108	;# 
  4543   003EED                     ADPREV          equ	16109	;# 
  4544   003EED                     ADPREVL         equ	16109	;# 
  4545   003EEE                     ADPREVH         equ	16110	;# 
  4546   003EEF                     ADRES           equ	16111	;# 
  4547   003EEF                     ADRESL          equ	16111	;# 
  4548   003EF0                     ADRESH          equ	16112	;# 
  4549   003EF1                     ADPCH           equ	16113	;# 
  4550   003EF3                     ADACQ           equ	16115	;# 
  4551   003EF3                     ADACQL          equ	16115	;# 
  4552   003EF4                     ADACQH          equ	16116	;# 
  4553   003EF5                     ADCAP           equ	16117	;# 
  4554   003EF6                     ADPRE           equ	16118	;# 
  4555   003EF6                     ADPREL          equ	16118	;# 
  4556   003EF7                     ADPREH          equ	16119	;# 
  4557   003EF8                     ADCON0          equ	16120	;# 
  4558   003EF9                     ADCON1          equ	16121	;# 
  4559   003EFA                     ADCON2          equ	16122	;# 
  4560   003EFB                     ADCON3          equ	16123	;# 
  4561   003EFC                     ADSTAT          equ	16124	;# 
  4562   003EFD                     ADREF           equ	16125	;# 
  4563   003EFE                     ADACT           equ	16126	;# 
  4564   003EFF                     ADCLK           equ	16127	;# 
  4565   003F12                     SMT1TMR         equ	16146	;# 
  4566   003F12                     SMT1TMRL        equ	16146	;# 
  4567   003F13                     SMT1TMRH        equ	16147	;# 
  4568   003F14                     SMT1TMRU        equ	16148	;# 
  4569   003F15                     SMT1CPR         equ	16149	;# 
  4570   003F15                     SMT1CPRL        equ	16149	;# 
  4571   003F16                     SMT1CPRH        equ	16150	;# 
  4572   003F17                     SMT1CPRU        equ	16151	;# 
  4573   003F18                     SMT1CPW         equ	16152	;# 
  4574   003F18                     SMT1CPWL        equ	16152	;# 
  4575   003F19                     SMT1CPWH        equ	16153	;# 
  4576   003F1A                     SMT1CPWU        equ	16154	;# 
  4577   003F1B                     SMT1PR          equ	16155	;# 
  4578   003F1B                     SMT1PRL         equ	16155	;# 
  4579   003F1C                     SMT1PRH         equ	16156	;# 
  4580   003F1D                     SMT1PRU         equ	16157	;# 
  4581   003F1E                     SMT1CON0        equ	16158	;# 
  4582   003F1F                     SMT1CON1        equ	16159	;# 
  4583   003F20                     SMT1STAT        equ	16160	;# 
  4584   003F21                     SMT1CLK         equ	16161	;# 
  4585   003F22                     SMT1SIG         equ	16162	;# 
  4586   003F23                     SMT1WIN         equ	16163	;# 
  4587   003F38                     NCO1ACC         equ	16184	;# 
  4588   003F38                     NCO1ACCL        equ	16184	;# 
  4589   003F39                     NCO1ACCH        equ	16185	;# 
  4590   003F3A                     NCO1ACCU        equ	16186	;# 
  4591   003F3B                     NCO1INC         equ	16187	;# 
  4592   003F3B                     NCO1INCL        equ	16187	;# 
  4593   003F3C                     NCO1INCH        equ	16188	;# 
  4594   003F3D                     NCO1INCU        equ	16189	;# 
  4595   003F3E                     NCO1CON         equ	16190	;# 
  4596   003F3F                     NCO1CLK         equ	16191	;# 
  4597   003F40                     CWG3CLK         equ	16192	;# 
  4598   003F40                     CWG3CLKCON      equ	16192	;# 
  4599   003F41                     CWG3ISM         equ	16193	;# 
  4600   003F41                     CWG3DAT         equ	16193	;# 
  4601   003F42                     CWG3DBR         equ	16194	;# 
  4602   003F43                     CWG3DBF         equ	16195	;# 
  4603   003F44                     CWG3CON0        equ	16196	;# 
  4604   003F45                     CWG3CON1        equ	16197	;# 
  4605   003F46                     CWG3AS0         equ	16198	;# 
  4606   003F47                     CWG3AS1         equ	16199	;# 
  4607   003F48                     CWG3STR         equ	16200	;# 
  4608   003F49                     CWG2CLK         equ	16201	;# 
  4609   003F49                     CWG2CLKCON      equ	16201	;# 
  4610   003F4A                     CWG2ISM         equ	16202	;# 
  4611   003F4A                     CWG2DAT         equ	16202	;# 
  4612   003F4B                     CWG2DBR         equ	16203	;# 
  4613   003F4C                     CWG2DBF         equ	16204	;# 
  4614   003F4D                     CWG2CON0        equ	16205	;# 
  4615   003F4E                     CWG2CON1        equ	16206	;# 
  4616   003F4F                     CWG2AS0         equ	16207	;# 
  4617   003F50                     CWG2AS1         equ	16208	;# 
  4618   003F51                     CWG2STR         equ	16209	;# 
  4619   003F52                     CWG1CLK         equ	16210	;# 
  4620   003F52                     CWG1CLKCON      equ	16210	;# 
  4621   003F53                     CWG1ISM         equ	16211	;# 
  4622   003F53                     CWG1DAT         equ	16211	;# 
  4623   003F54                     CWG1DBR         equ	16212	;# 
  4624   003F55                     CWG1DBF         equ	16213	;# 
  4625   003F56                     CWG1CON0        equ	16214	;# 
  4626   003F57                     CWG1CON1        equ	16215	;# 
  4627   003F58                     CWG1AS0         equ	16216	;# 
  4628   003F59                     CWG1AS1         equ	16217	;# 
  4629   003F5A                     CWG1STR         equ	16218	;# 
  4630   003F5E                     CCPTMRS0        equ	16222	;# 
  4631   003F5F                     CCPTMRS1        equ	16223	;# 
  4632   003F60                     PWM8DC          equ	16224	;# 
  4633   003F60                     PWM8DCL         equ	16224	;# 
  4634   003F61                     PWM8DCH         equ	16225	;# 
  4635   003F62                     PWM8CON         equ	16226	;# 
  4636   003F64                     PWM7DC          equ	16228	;# 
  4637   003F64                     PWM7DCL         equ	16228	;# 
  4638   003F65                     PWM7DCH         equ	16229	;# 
  4639   003F66                     PWM7CON         equ	16230	;# 
  4640   003F68                     PWM6DC          equ	16232	;# 
  4641   003F68                     PWM6DCL         equ	16232	;# 
  4642   003F69                     PWM6DCH         equ	16233	;# 
  4643   003F6A                     PWM6CON         equ	16234	;# 
  4644   003F6C                     PWM5DC          equ	16236	;# 
  4645   003F6C                     PWM5DCL         equ	16236	;# 
  4646   003F6D                     PWM5DCH         equ	16237	;# 
  4647   003F6E                     PWM5CON         equ	16238	;# 
  4648   003F70                     CCPR4           equ	16240	;# 
  4649   003F70                     CCPR4L          equ	16240	;# 
  4650   003F71                     CCPR4H          equ	16241	;# 
  4651   003F72                     CCP4CON         equ	16242	;# 
  4652   003F73                     CCP4CAP         equ	16243	;# 
  4653   003F74                     CCPR3           equ	16244	;# 
  4654   003F74                     CCPR3L          equ	16244	;# 
  4655   003F75                     CCPR3H          equ	16245	;# 
  4656   003F76                     CCP3CON         equ	16246	;# 
  4657   003F77                     CCP3CAP         equ	16247	;# 
  4658   003F78                     CCPR2           equ	16248	;# 
  4659   003F78                     CCPR2L          equ	16248	;# 
  4660   003F79                     CCPR2H          equ	16249	;# 
  4661   003F7A                     CCP2CON         equ	16250	;# 
  4662   003F7B                     CCP2CAP         equ	16251	;# 
  4663   003F7C                     CCPR1           equ	16252	;# 
  4664   003F7C                     CCPR1L          equ	16252	;# 
  4665   003F7D                     CCPR1H          equ	16253	;# 
  4666   003F7E                     CCP1CON         equ	16254	;# 
  4667   003F7F                     CCP1CAP         equ	16255	;# 
  4668   003F92                     T6TMR           equ	16274	;# 
  4669   003F92                     TMR6            equ	16274	;# 
  4670   003F93                     T6PR            equ	16275	;# 
  4671   003F93                     PR6             equ	16275	;# 
  4672   003F94                     T6CON           equ	16276	;# 
  4673   003F95                     T6HLT           equ	16277	;# 
  4674   003F96                     T6CLKCON        equ	16278	;# 
  4675   003F96                     T6CLK           equ	16278	;# 
  4676   003F97                     T6RST           equ	16279	;# 
  4677   003F98                     TMR5            equ	16280	;# 
  4678   003F98                     TMR5L           equ	16280	;# 
  4679   003F99                     TMR5H           equ	16281	;# 
  4680   003F9A                     T5CON           equ	16282	;# 
  4681   003F9A                     TMR5CON         equ	16282	;# 
  4682   003F9B                     T5GCON          equ	16283	;# 
  4683   003F9B                     TMR5GCON        equ	16283	;# 
  4684   003F9C                     T5GATE          equ	16284	;# 
  4685   003F9C                     TMR5GATE        equ	16284	;# 
  4686   003F9D                     T5CLK           equ	16285	;# 
  4687   003F9D                     TMR5CLK         equ	16285	;# 
  4688   003F9D                     PR5             equ	16285	;# 
  4689   003F9E                     T4TMR           equ	16286	;# 
  4690   003F9E                     TMR4            equ	16286	;# 
  4691   003F9F                     T4PR            equ	16287	;# 
  4692   003F9F                     PR4             equ	16287	;# 
  4693   003FA0                     T4CON           equ	16288	;# 
  4694   003FA1                     T4HLT           equ	16289	;# 
  4695   003FA2                     T4CLKCON        equ	16290	;# 
  4696   003FA2                     T4CLK           equ	16290	;# 
  4697   003FA3                     T4RST           equ	16291	;# 
  4698   003FA4                     TMR3            equ	16292	;# 
  4699   003FA4                     TMR3L           equ	16292	;# 
  4700   003FA5                     TMR3H           equ	16293	;# 
  4701   003FA6                     T3CON           equ	16294	;# 
  4702   003FA6                     TMR3CON         equ	16294	;# 
  4703   003FA7                     T3GCON          equ	16295	;# 
  4704   003FA7                     TMR3GCON        equ	16295	;# 
  4705   003FA8                     T3GATE          equ	16296	;# 
  4706   003FA8                     TMR3GATE        equ	16296	;# 
  4707   003FA9                     T3CLK           equ	16297	;# 
  4708   003FA9                     TMR3CLK         equ	16297	;# 
  4709   003FA9                     PR3             equ	16297	;# 
  4710   003FAA                     T2TMR           equ	16298	;# 
  4711   003FAA                     TMR2            equ	16298	;# 
  4712   003FAB                     T2PR            equ	16299	;# 
  4713   003FAB                     PR2             equ	16299	;# 
  4714   003FAC                     T2CON           equ	16300	;# 
  4715   003FAD                     T2HLT           equ	16301	;# 
  4716   003FAE                     T2CLKCON        equ	16302	;# 
  4717   003FAE                     T2CLK           equ	16302	;# 
  4718   003FAF                     T2RST           equ	16303	;# 
  4719   003FB0                     TMR1            equ	16304	;# 
  4720   003FB0                     TMR1L           equ	16304	;# 
  4721   003FB1                     TMR1H           equ	16305	;# 
  4722   003FB2                     T1CON           equ	16306	;# 
  4723   003FB2                     TMR1CON         equ	16306	;# 
  4724   003FB3                     T1GCON          equ	16307	;# 
  4725   003FB3                     TMR1GCON        equ	16307	;# 
  4726   003FB4                     T1GATE          equ	16308	;# 
  4727   003FB4                     TMR1GATE        equ	16308	;# 
  4728   003FB5                     T1CLK           equ	16309	;# 
  4729   003FB5                     TMR1CLK         equ	16309	;# 
  4730   003FB5                     PR1             equ	16309	;# 
  4731   003FB6                     TMR0L           equ	16310	;# 
  4732   003FB6                     TMR0            equ	16310	;# 
  4733   003FB7                     TMR0H           equ	16311	;# 
  4734   003FB7                     PR0             equ	16311	;# 
  4735   003FB8                     T0CON0          equ	16312	;# 
  4736   003FB9                     T0CON1          equ	16313	;# 
  4737   003FBA                     LATA            equ	16314	;# 
  4738   003FBB                     LATB            equ	16315	;# 
  4739   003FBC                     LATC            equ	16316	;# 
  4740   003FBD                     LATD            equ	16317	;# 
  4741   003FBE                     LATE            equ	16318	;# 
  4742   003FBF                     LATF            equ	16319	;# 
  4743   003FC2                     TRISA           equ	16322	;# 
  4744   003FC3                     TRISB           equ	16323	;# 
  4745   003FC4                     TRISC           equ	16324	;# 
  4746   003FC5                     TRISD           equ	16325	;# 
  4747   003FC6                     TRISE           equ	16326	;# 
  4748   003FC7                     TRISF           equ	16327	;# 
  4749   003FCA                     PORTA           equ	16330	;# 
  4750   003FCB                     PORTB           equ	16331	;# 
  4751   003FCC                     PORTC           equ	16332	;# 
  4752   003FCD                     PORTD           equ	16333	;# 
  4753   003FCE                     PORTE           equ	16334	;# 
  4754   003FCF                     PORTF           equ	16335	;# 
  4755   003FD2                     INTCON0         equ	16338	;# 
  4756   003FD3                     INTCON1         equ	16339	;# 
  4757   003FD4                     IVTLOCK         equ	16340	;# 
  4758   003FD5                     IVTBASE         equ	16341	;# 
  4759   003FD5                     IVTBASEL        equ	16341	;# 
  4760   003FD6                     IVTBASEH        equ	16342	;# 
  4761   003FD7                     IVTBASEU        equ	16343	;# 
  4762   003FD8                     STATUS          equ	16344	;# 
  4763   003FD9                     FSR2            equ	16345	;# 
  4764   003FD9                     FSR2L           equ	16345	;# 
  4765   003FDA                     FSR2H           equ	16346	;# 
  4766   003FDB                     PLUSW2          equ	16347	;# 
  4767   003FDC                     PREINC2         equ	16348	;# 
  4768   003FDD                     POSTDEC2        equ	16349	;# 
  4769   003FDE                     POSTINC2        equ	16350	;# 
  4770   003FDF                     INDF2           equ	16351	;# 
  4771   003FE0                     BSR             equ	16352	;# 
  4772   003FE1                     FSR1            equ	16353	;# 
  4773   003FE1                     FSR1L           equ	16353	;# 
  4774   003FE2                     FSR1H           equ	16354	;# 
  4775   003FE3                     PLUSW1          equ	16355	;# 
  4776   003FE4                     PREINC1         equ	16356	;# 
  4777   003FE5                     POSTDEC1        equ	16357	;# 
  4778   003FE6                     POSTINC1        equ	16358	;# 
  4779   003FE7                     INDF1           equ	16359	;# 
  4780   003FE8                     WREG            equ	16360	;# 
  4781   003FE9                     FSR0            equ	16361	;# 
  4782   003FE9                     FSR0L           equ	16361	;# 
  4783   003FEA                     FSR0H           equ	16362	;# 
  4784   003FEB                     PLUSW0          equ	16363	;# 
  4785   003FEC                     PREINC0         equ	16364	;# 
  4786   003FED                     POSTDEC0        equ	16365	;# 
  4787   003FEE                     POSTINC0        equ	16366	;# 
  4788   003FEF                     INDF0           equ	16367	;# 
  4789   003FF0                     PCON0           equ	16368	;# 
  4790   003FF1                     PCON1           equ	16369	;# 
  4791   003FF3                     PROD            equ	16371	;# 
  4792   003FF3                     PRODL           equ	16371	;# 
  4793   003FF4                     PRODH           equ	16372	;# 
  4794   003FF5                     TABLAT          equ	16373	;# 
  4795   003FF6                     TBLPTR          equ	16374	;# 
  4796   003FF6                     TBLPTRL         equ	16374	;# 
  4797   003FF7                     TBLPTRH         equ	16375	;# 
  4798   003FF8                     TBLPTRU         equ	16376	;# 
  4799   003FF9                     PCLAT           equ	16377	;# 
  4800   003FF9                     PCL             equ	16377	;# 
  4801   003FFA                     PCLATH          equ	16378	;# 
  4802   003FFB                     PCLATU          equ	16379	;# 
  4803   003FFC                     STKPTR          equ	16380	;# 
  4804   003FFD                     TOS             equ	16381	;# 
  4805   003FFD                     TOSL            equ	16381	;# 
  4806   003FFE                     TOSH            equ	16382	;# 
  4807   003FFF                     TOSU            equ	16383	;# 
  4808   003880                     STATUS_CSHAD    equ	14464	;# 
  4809   003881                     WREG_CSHAD      equ	14465	;# 
  4810   003882                     BSR_CSHAD       equ	14466	;# 
  4811   003883                     SHADCON         equ	14467	;# 
  4812   003884                     STATUS_SHAD     equ	14468	;# 
  4813   003885                     WREG_SHAD       equ	14469	;# 
  4814   003886                     BSR_SHAD        equ	14470	;# 
  4815   003887                     PCLATH_SHAD     equ	14471	;# 
  4816   003888                     PCLATU_SHAD     equ	14472	;# 
  4817   003889                     FSR0SH          equ	14473	;# 
  4818   003889                     FSR0L_SHAD      equ	14473	;# 
  4819   00388A                     FSR0H_SHAD      equ	14474	;# 
  4820   00388B                     FSR1SH          equ	14475	;# 
  4821   00388B                     FSR1L_SHAD      equ	14475	;# 
  4822   00388C                     FSR1H_SHAD      equ	14476	;# 
  4823   00388D                     FSR2SH          equ	14477	;# 
  4824   00388D                     FSR2L_SHAD      equ	14477	;# 
  4825   00388E                     FSR2H_SHAD      equ	14478	;# 
  4826   00388F                     PRODSH          equ	14479	;# 
  4827   00388F                     PRODL_SHAD      equ	14479	;# 
  4828   003890                     PRODH_SHAD      equ	14480	;# 
  4829   00389D                     IVTADL          equ	14493	;# 
  4830   00389E                     IVTADH          equ	14494	;# 
  4831   00389F                     IVTADU          equ	14495	;# 
  4832   00395B                     WDTCON0         equ	14683	;# 
  4833   00395C                     WDTCON1         equ	14684	;# 
  4834   00395D                     WDTPSL          equ	14685	;# 
  4835   00395E                     WDTPSH          equ	14686	;# 
  4836   00395F                     WDTTMR          equ	14687	;# 
  4837   003960                     CRCDATA         equ	14688	;# 
  4838   003960                     CRCDATL         equ	14688	;# 
  4839   003961                     CRCDATH         equ	14689	;# 
  4840   003962                     CRCACC          equ	14690	;# 
  4841   003962                     CRCACCL         equ	14690	;# 
  4842   003963                     CRCACCH         equ	14691	;# 
  4843   003964                     CRCSHFT         equ	14692	;# 
  4844   003964                     CRCSHIFTL       equ	14692	;# 
  4845   003965                     CRCSHIFTH       equ	14693	;# 
  4846   003966                     CRCXOR          equ	14694	;# 
  4847   003966                     CRCXORL         equ	14694	;# 
  4848   003967                     CRCXORH         equ	14695	;# 
  4849   003968                     CRCCON0         equ	14696	;# 
  4850   003969                     CRCCON1         equ	14697	;# 
  4851   003976                     SCANLADR        equ	14710	;# 
  4852   003976                     SCANLADRL       equ	14710	;# 
  4853   003977                     SCANLADRH       equ	14711	;# 
  4854   003978                     SCANLADRU       equ	14712	;# 
  4855   003979                     SCANHADR        equ	14713	;# 
  4856   003979                     SCANHADRL       equ	14713	;# 
  4857   00397A                     SCANHADRH       equ	14714	;# 
  4858   00397B                     SCANHADRU       equ	14715	;# 
  4859   00397C                     SCANCON0        equ	14716	;# 
  4860   00397D                     SCANTRIG        equ	14717	;# 
  4861   003980                     IPR0            equ	14720	;# 
  4862   003981                     IPR1            equ	14721	;# 
  4863   003982                     IPR2            equ	14722	;# 
  4864   003983                     IPR3            equ	14723	;# 
  4865   003984                     IPR4            equ	14724	;# 
  4866   003985                     IPR5            equ	14725	;# 
  4867   003986                     IPR6            equ	14726	;# 
  4868   003987                     IPR7            equ	14727	;# 
  4869   003988                     IPR8            equ	14728	;# 
  4870   003989                     IPR9            equ	14729	;# 
  4871   00398A                     IPR10           equ	14730	;# 
  4872   003990                     PIE0            equ	14736	;# 
  4873   003991                     PIE1            equ	14737	;# 
  4874   003992                     PIE2            equ	14738	;# 
  4875   003993                     PIE3            equ	14739	;# 
  4876   003994                     PIE4            equ	14740	;# 
  4877   003995                     PIE5            equ	14741	;# 
  4878   003996                     PIE6            equ	14742	;# 
  4879   003997                     PIE7            equ	14743	;# 
  4880   003998                     PIE8            equ	14744	;# 
  4881   003999                     PIE9            equ	14745	;# 
  4882   00399A                     PIE10           equ	14746	;# 
  4883   0039A0                     PIR0            equ	14752	;# 
  4884   0039A1                     PIR1            equ	14753	;# 
  4885   0039A2                     PIR2            equ	14754	;# 
  4886   0039A3                     PIR3            equ	14755	;# 
  4887   0039A4                     PIR4            equ	14756	;# 
  4888   0039A5                     PIR5            equ	14757	;# 
  4889   0039A6                     PIR6            equ	14758	;# 
  4890   0039A7                     PIR7            equ	14759	;# 
  4891   0039A8                     PIR8            equ	14760	;# 
  4892   0039A9                     PIR9            equ	14761	;# 
  4893   0039AA                     PIR10           equ	14762	;# 
  4894   0039C0                     PMD0            equ	14784	;# 
  4895   0039C1                     PMD1            equ	14785	;# 
  4896   0039C2                     PMD2            equ	14786	;# 
  4897   0039C3                     PMD3            equ	14787	;# 
  4898   0039C4                     PMD4            equ	14788	;# 
  4899   0039C5                     PMD5            equ	14789	;# 
  4900   0039C6                     PMD6            equ	14790	;# 
  4901   0039C7                     PMD7            equ	14791	;# 
  4902   0039D0                     BORCON          equ	14800	;# 
  4903   0039D1                     VREGCON         equ	14801	;# 
  4904   0039D8                     CPUDOZE         equ	14808	;# 
  4905   0039D9                     OSCCON1         equ	14809	;# 
  4906   0039DA                     OSCCON2         equ	14810	;# 
  4907   0039DB                     OSCCON3         equ	14811	;# 
  4908   0039DC                     OSCSTAT         equ	14812	;# 
  4909   0039DC                     OSCSTAT1        equ	14812	;# 
  4910   0039DD                     OSCEN           equ	14813	;# 
  4911   0039DE                     OSCTUNE         equ	14814	;# 
  4912   0039DF                     OSCFRQ          equ	14815	;# 
  4913   0039E0                     NVMADRL         equ	14816	;# 
  4914   0039E1                     NVMADRH         equ	14817	;# 
  4915   0039E3                     NVMDAT          equ	14819	;# 
  4916   0039E5                     NVMCON1         equ	14821	;# 
  4917   0039E6                     NVMCON2         equ	14822	;# 
  4918   0039EF                     PRLOCK          equ	14831	;# 
  4919   0039F1                     ISRPR           equ	14833	;# 
  4920   0039F2                     MAINPR          equ	14834	;# 
  4921   0039F3                     DMA1PR          equ	14835	;# 
  4922   0039F4                     DMA2PR          equ	14836	;# 
  4923   0039F7                     SCANPR          equ	14839	;# 
  4924   003A00                     RA0PPS          equ	14848	;# 
  4925   003A01                     RA1PPS          equ	14849	;# 
  4926   003A02                     RA2PPS          equ	14850	;# 
  4927   003A03                     RA3PPS          equ	14851	;# 
  4928   003A04                     RA4PPS          equ	14852	;# 
  4929   003A05                     RA5PPS          equ	14853	;# 
  4930   003A06                     RA6PPS          equ	14854	;# 
  4931   003A07                     RA7PPS          equ	14855	;# 
  4932   003A08                     RB0PPS          equ	14856	;# 
  4933   003A09                     RB1PPS          equ	14857	;# 
  4934   003A0A                     RB2PPS          equ	14858	;# 
  4935   003A0B                     RB3PPS          equ	14859	;# 
  4936   003A0C                     RB4PPS          equ	14860	;# 
  4937   003A0D                     RB5PPS          equ	14861	;# 
  4938   003A0E                     RB6PPS          equ	14862	;# 
  4939   003A0F                     RB7PPS          equ	14863	;# 
  4940   003A10                     RC0PPS          equ	14864	;# 
  4941   003A11                     RC1PPS          equ	14865	;# 
  4942   003A12                     RC2PPS          equ	14866	;# 
  4943   003A13                     RC3PPS          equ	14867	;# 
  4944   003A14                     RC4PPS          equ	14868	;# 
  4945   003A15                     RC5PPS          equ	14869	;# 
  4946   003A16                     RC6PPS          equ	14870	;# 
  4947   003A17                     RC7PPS          equ	14871	;# 
  4948   003A18                     RD0PPS          equ	14872	;# 
  4949   003A19                     RD1PPS          equ	14873	;# 
  4950   003A1A                     RD2PPS          equ	14874	;# 
  4951   003A1B                     RD3PPS          equ	14875	;# 
  4952   003A1C                     RD4PPS          equ	14876	;# 
  4953   003A1D                     RD5PPS          equ	14877	;# 
  4954   003A1E                     RD6PPS          equ	14878	;# 
  4955   003A1F                     RD7PPS          equ	14879	;# 
  4956   003A20                     RE0PPS          equ	14880	;# 
  4957   003A21                     RE1PPS          equ	14881	;# 
  4958   003A22                     RE2PPS          equ	14882	;# 
  4959   003A28                     RF0PPS          equ	14888	;# 
  4960   003A29                     RF1PPS          equ	14889	;# 
  4961   003A2A                     RF2PPS          equ	14890	;# 
  4962   003A2B                     RF3PPS          equ	14891	;# 
  4963   003A2C                     RF4PPS          equ	14892	;# 
  4964   003A2D                     RF5PPS          equ	14893	;# 
  4965   003A2E                     RF6PPS          equ	14894	;# 
  4966   003A2F                     RF7PPS          equ	14895	;# 
  4967   003A40                     ANSELA          equ	14912	;# 
  4968   003A41                     WPUA            equ	14913	;# 
  4969   003A42                     ODCONA          equ	14914	;# 
  4970   003A43                     SLRCONA         equ	14915	;# 
  4971   003A44                     INLVLA          equ	14916	;# 
  4972   003A45                     IOCAP           equ	14917	;# 
  4973   003A46                     IOCAN           equ	14918	;# 
  4974   003A47                     IOCAF           equ	14919	;# 
  4975   003A50                     ANSELB          equ	14928	;# 
  4976   003A51                     WPUB            equ	14929	;# 
  4977   003A52                     ODCONB          equ	14930	;# 
  4978   003A53                     SLRCONB         equ	14931	;# 
  4979   003A54                     INLVLB          equ	14932	;# 
  4980   003A55                     IOCBP           equ	14933	;# 
  4981   003A56                     IOCBN           equ	14934	;# 
  4982   003A57                     IOCBF           equ	14935	;# 
  4983   003A5A                     RB1I2C          equ	14938	;# 
  4984   003A5B                     RB2I2C          equ	14939	;# 
  4985   003A60                     ANSELC          equ	14944	;# 
  4986   003A61                     WPUC            equ	14945	;# 
  4987   003A62                     ODCONC          equ	14946	;# 
  4988   003A63                     SLRCONC         equ	14947	;# 
  4989   003A64                     INLVLC          equ	14948	;# 
  4990   003A65                     IOCCP           equ	14949	;# 
  4991   003A66                     IOCCN           equ	14950	;# 
  4992   003A67                     IOCCF           equ	14951	;# 
  4993   003A6A                     RC3I2C          equ	14954	;# 
  4994   003A6B                     RC4I2C          equ	14955	;# 
  4995   003A70                     ANSELD          equ	14960	;# 
  4996   003A71                     WPUD            equ	14961	;# 
  4997   003A72                     ODCOND          equ	14962	;# 
  4998   003A73                     SLRCOND         equ	14963	;# 
  4999   003A74                     INLVLD          equ	14964	;# 
  5000   003A7A                     RD0I2C          equ	14970	;# 
  5001   003A7B                     RD1I2C          equ	14971	;# 
  5002   003A80                     ANSELE          equ	14976	;# 
  5003   003A81                     WPUE            equ	14977	;# 
  5004   003A82                     ODCONE          equ	14978	;# 
  5005   003A83                     SLRCONE         equ	14979	;# 
  5006   003A84                     INLVLE          equ	14980	;# 
  5007   003A85                     IOCEP           equ	14981	;# 
  5008   003A86                     IOCEN           equ	14982	;# 
  5009   003A87                     IOCEF           equ	14983	;# 
  5010   003A90                     ANSELF          equ	14992	;# 
  5011   003A91                     WPUF            equ	14993	;# 
  5012   003A92                     ODCONF          equ	14994	;# 
  5013   003A93                     SLRCONF         equ	14995	;# 
  5014   003A94                     INLVLF          equ	14996	;# 
  5015   003ABF                     PPSLOCK         equ	15039	;# 
  5016   003AC0                     INT0PPS         equ	15040	;# 
  5017   003AC1                     INT1PPS         equ	15041	;# 
  5018   003AC2                     INT2PPS         equ	15042	;# 
  5019   003AC3                     T0CKIPPS        equ	15043	;# 
  5020   003AC4                     T1CKIPPS        equ	15044	;# 
  5021   003AC5                     T1GPPS          equ	15045	;# 
  5022   003AC6                     T3CKIPPS        equ	15046	;# 
  5023   003AC7                     T3GPPS          equ	15047	;# 
  5024   003AC8                     T5CKIPPS        equ	15048	;# 
  5025   003AC9                     T5GPPS          equ	15049	;# 
  5026   003ACA                     T2INPPS         equ	15050	;# 
  5027   003ACB                     T4INPPS         equ	15051	;# 
  5028   003ACC                     T6INPPS         equ	15052	;# 
  5029   003ACD                     CCP1PPS         equ	15053	;# 
  5030   003ACE                     CCP2PPS         equ	15054	;# 
  5031   003ACF                     CCP3PPS         equ	15055	;# 
  5032   003AD0                     CCP4PPS         equ	15056	;# 
  5033   003AD1                     SMT1WINPPS      equ	15057	;# 
  5034   003AD2                     SMT1SIGPPS      equ	15058	;# 
  5035   003AD3                     CWG1INPPS       equ	15059	;# 
  5036   003AD4                     CWG2INPPS       equ	15060	;# 
  5037   003AD5                     CWG3INPPS       equ	15061	;# 
  5038   003AD6                     MD1CARLPPS      equ	15062	;# 
  5039   003AD7                     MD1CARHPPS      equ	15063	;# 
  5040   003AD8                     MD1SRCPPS       equ	15064	;# 
  5041   003AD9                     CLCIN0PPS       equ	15065	;# 
  5042   003ADA                     CLCIN1PPS       equ	15066	;# 
  5043   003ADB                     CLCIN2PPS       equ	15067	;# 
  5044   003ADC                     CLCIN3PPS       equ	15068	;# 
  5045   003ADD                     ADACTPPS        equ	15069	;# 
  5046   003ADE                     SPI1SCKPPS      equ	15070	;# 
  5047   003ADF                     SPI1SDIPPS      equ	15071	;# 
  5048   003AE0                     SPI1SSPPS       equ	15072	;# 
  5049   003AE1                     I2C1SCLPPS      equ	15073	;# 
  5050   003AE2                     I2C1SDAPPS      equ	15074	;# 
  5051   003AE3                     I2C2SCLPPS      equ	15075	;# 
  5052   003AE4                     I2C2SDAPPS      equ	15076	;# 
  5053   003AE5                     U1RXPPS         equ	15077	;# 
  5054   003AE6                     U1CTSPPS        equ	15078	;# 
  5055   003AE8                     U2RXPPS         equ	15080	;# 
  5056   003AE9                     U2CTSPPS        equ	15081	;# 
  5057   003BC9                     DMA2BUF         equ	15305	;# 
  5058   003BCA                     DMA2DCNT        equ	15306	;# 
  5059   003BCA                     DMA2DCNTL       equ	15306	;# 
  5060   003BCB                     DMA2DCNTH       equ	15307	;# 
  5061   003BCC                     DMA2DPTR        equ	15308	;# 
  5062   003BCC                     DMA2DPTRL       equ	15308	;# 
  5063   003BCD                     DMA2DPTRH       equ	15309	;# 
  5064   003BCE                     DMA2DSZ         equ	15310	;# 
  5065   003BCE                     DMA2DSZL        equ	15310	;# 
  5066   003BCF                     DMA2DSZH        equ	15311	;# 
  5067   003BD0                     DMA2DSA         equ	15312	;# 
  5068   003BD0                     DMA2DSAL        equ	15312	;# 
  5069   003BD1                     DMA2DSAH        equ	15313	;# 
  5070   003BD2                     DMA2SCNT        equ	15314	;# 
  5071   003BD2                     DMA2SCNTL       equ	15314	;# 
  5072   003BD3                     DMA2SCNTH       equ	15315	;# 
  5073   003BD4                     DMA2SPTR        equ	15316	;# 
  5074   003BD4                     DMA2SPTRL       equ	15316	;# 
  5075   003BD5                     DMA2SPTRH       equ	15317	;# 
  5076   003BD6                     DMA2SPTRU       equ	15318	;# 
  5077   003BD7                     DMA2SSZ         equ	15319	;# 
  5078   003BD7                     DMA2SSZL        equ	15319	;# 
  5079   003BD8                     DMA2SSZH        equ	15320	;# 
  5080   003BD9                     DMA2SSA         equ	15321	;# 
  5081   003BD9                     DMA2SSAL        equ	15321	;# 
  5082   003BDA                     DMA2SSAH        equ	15322	;# 
  5083   003BDB                     DMA2SSAU        equ	15323	;# 
  5084   003BDC                     DMA2CON0        equ	15324	;# 
  5085   003BDD                     DMA2CON1        equ	15325	;# 
  5086   003BDE                     DMA2AIRQ        equ	15326	;# 
  5087   003BDF                     DMA2SIRQ        equ	15327	;# 
  5088   003BE9                     DMA1BUF         equ	15337	;# 
  5089   003BEA                     DMA1DCNT        equ	15338	;# 
  5090   003BEA                     DMA1DCNTL       equ	15338	;# 
  5091   003BEB                     DMA1DCNTH       equ	15339	;# 
  5092   003BEC                     DMA1DPTR        equ	15340	;# 
  5093   003BEC                     DMA1DPTRL       equ	15340	;# 
  5094   003BED                     DMA1DPTRH       equ	15341	;# 
  5095   003BEE                     DMA1DSZ         equ	15342	;# 
  5096   003BEE                     DMA1DSZL        equ	15342	;# 
  5097   003BEF                     DMA1DSZH        equ	15343	;# 
  5098   003BF0                     DMA1DSA         equ	15344	;# 
  5099   003BF0                     DMA1DSAL        equ	15344	;# 
  5100   003BF1                     DMA1DSAH        equ	15345	;# 
  5101   003BF2                     DMA1SCNT        equ	15346	;# 
  5102   003BF2                     DMA1SCNTL       equ	15346	;# 
  5103   003BF3                     DMA1SCNTH       equ	15347	;# 
  5104   003BF4                     DMA1SPTR        equ	15348	;# 
  5105   003BF4                     DMA1SPTRL       equ	15348	;# 
  5106   003BF5                     DMA1SPTRH       equ	15349	;# 
  5107   003BF6                     DMA1SPTRU       equ	15350	;# 
  5108   003BF7                     DMA1SSZ         equ	15351	;# 
  5109   003BF7                     DMA1SSZL        equ	15351	;# 
  5110   003BF8                     DMA1SSZH        equ	15352	;# 
  5111   003BF9                     DMA1SSA         equ	15353	;# 
  5112   003BF9                     DMA1SSAL        equ	15353	;# 
  5113   003BFA                     DMA1SSAH        equ	15354	;# 
  5114   003BFB                     DMA1SSAU        equ	15355	;# 
  5115   003BFC                     DMA1CON0        equ	15356	;# 
  5116   003BFD                     DMA1CON1        equ	15357	;# 
  5117   003BFE                     DMA1AIRQ        equ	15358	;# 
  5118   003BFF                     DMA1SIRQ        equ	15359	;# 
  5119   003C56                     CLC4CON         equ	15446	;# 
  5120   003C57                     CLC4POL         equ	15447	;# 
  5121   003C58                     CLC4SEL0        equ	15448	;# 
  5122   003C59                     CLC4SEL1        equ	15449	;# 
  5123   003C5A                     CLC4SEL2        equ	15450	;# 
  5124   003C5B                     CLC4SEL3        equ	15451	;# 
  5125   003C5C                     CLC4GLS0        equ	15452	;# 
  5126   003C5D                     CLC4GLS1        equ	15453	;# 
  5127   003C5E                     CLC4GLS2        equ	15454	;# 
  5128   003C5F                     CLC4GLS3        equ	15455	;# 
  5129   003C60                     CLC3CON         equ	15456	;# 
  5130   003C61                     CLC3POL         equ	15457	;# 
  5131   003C62                     CLC3SEL0        equ	15458	;# 
  5132   003C63                     CLC3SEL1        equ	15459	;# 
  5133   003C64                     CLC3SEL2        equ	15460	;# 
  5134   003C65                     CLC3SEL3        equ	15461	;# 
  5135   003C66                     CLC3GLS0        equ	15462	;# 
  5136   003C67                     CLC3GLS1        equ	15463	;# 
  5137   003C68                     CLC3GLS2        equ	15464	;# 
  5138   003C69                     CLC3GLS3        equ	15465	;# 
  5139   003C6A                     CLC2CON         equ	15466	;# 
  5140   003C6B                     CLC2POL         equ	15467	;# 
  5141   003C6C                     CLC2SEL0        equ	15468	;# 
  5142   003C6D                     CLC2SEL1        equ	15469	;# 
  5143   003C6E                     CLC2SEL2        equ	15470	;# 
  5144   003C6F                     CLC2SEL3        equ	15471	;# 
  5145   003C70                     CLC2GLS0        equ	15472	;# 
  5146   003C71                     CLC2GLS1        equ	15473	;# 
  5147   003C72                     CLC2GLS2        equ	15474	;# 
  5148   003C73                     CLC2GLS3        equ	15475	;# 
  5149   003C74                     CLC1CON         equ	15476	;# 
  5150   003C75                     CLC1POL         equ	15477	;# 
  5151   003C76                     CLC1SEL0        equ	15478	;# 
  5152   003C77                     CLC1SEL1        equ	15479	;# 
  5153   003C78                     CLC1SEL2        equ	15480	;# 
  5154   003C79                     CLC1SEL3        equ	15481	;# 
  5155   003C7A                     CLC1GLS0        equ	15482	;# 
  5156   003C7B                     CLC1GLS1        equ	15483	;# 
  5157   003C7C                     CLC1GLS2        equ	15484	;# 
  5158   003C7D                     CLC1GLS3        equ	15485	;# 
  5159   003C7E                     CLCDATA0        equ	15486	;# 
  5160   003CE5                     CLKRCON         equ	15589	;# 
  5161   003CE6                     CLKRCLK         equ	15590	;# 
  5162   003CFA                     MD1CON0         equ	15610	;# 
  5163   003CFB                     MD1CON1         equ	15611	;# 
  5164   003CFC                     MD1SRC          equ	15612	;# 
  5165   003CFD                     MD1CARL         equ	15613	;# 
  5166   003CFE                     MD1CARH         equ	15614	;# 
  5167   003D10                     SPI1RXB         equ	15632	;# 
  5168   003D11                     SPI1TXB         equ	15633	;# 
  5169   003D12                     SPI1TCNT        equ	15634	;# 
  5170   003D12                     SPI1TCNTL       equ	15634	;# 
  5171   003D13                     SPI1TCNTH       equ	15635	;# 
  5172   003D14                     SPI1CON0        equ	15636	;# 
  5173   003D15                     SPI1CON1        equ	15637	;# 
  5174   003D16                     SPI1CON2        equ	15638	;# 
  5175   003D17                     SPI1STATUS      equ	15639	;# 
  5176   003D18                     SPI1TWIDTH      equ	15640	;# 
  5177   003D19                     SPI1BAUD        equ	15641	;# 
  5178   003D1A                     SPI1INTF        equ	15642	;# 
  5179   003D1B                     SPI1INTE        equ	15643	;# 
  5180   003D1C                     SPI1CLK         equ	15644	;# 
  5181   003D54                     I2C2RXB         equ	15700	;# 
  5182   003D55                     I2C2TXB         equ	15701	;# 
  5183   003D56                     I2C2CNT         equ	15702	;# 
  5184   003D57                     I2C2ADB0        equ	15703	;# 
  5185   003D58                     I2C2ADB1        equ	15704	;# 
  5186   003D59                     I2C2ADR0        equ	15705	;# 
  5187   003D5A                     I2C2ADR1        equ	15706	;# 
  5188   003D5B                     I2C2ADR2        equ	15707	;# 
  5189   003D5C                     I2C2ADR3        equ	15708	;# 
  5190   003D5D                     I2C2CON0        equ	15709	;# 
  5191   003D5E                     I2C2CON1        equ	15710	;# 
  5192   003D5F                     I2C2CON2        equ	15711	;# 
  5193   003D60                     I2C2ERR         equ	15712	;# 
  5194   003D61                     I2C2STAT0       equ	15713	;# 
  5195   003D62                     I2C2STAT1       equ	15714	;# 
  5196   003D63                     I2C2PIR         equ	15715	;# 
  5197   003D64                     I2C2PIE         equ	15716	;# 
  5198   003D65                     I2C2CLK         equ	15717	;# 
  5199   003D66                     I2C2BTO         equ	15718	;# 
  5200   003D6A                     I2C1RXB         equ	15722	;# 
  5201   003D6B                     I2C1TXB         equ	15723	;# 
  5202   003D6C                     I2C1CNT         equ	15724	;# 
  5203   003D6D                     I2C1ADB0        equ	15725	;# 
  5204   003D6E                     I2C1ADB1        equ	15726	;# 
  5205   003D6F                     I2C1ADR0        equ	15727	;# 
  5206   003D70                     I2C1ADR1        equ	15728	;# 
  5207   003D71                     I2C1ADR2        equ	15729	;# 
  5208   003D72                     I2C1ADR3        equ	15730	;# 
  5209   003D73                     I2C1CON0        equ	15731	;# 
  5210   003D74                     I2C1CON1        equ	15732	;# 
  5211   003D75                     I2C1CON2        equ	15733	;# 
  5212   003D76                     I2C1ERR         equ	15734	;# 
  5213   003D77                     I2C1STAT0       equ	15735	;# 
  5214   003D78                     I2C1STAT1       equ	15736	;# 
  5215   003D79                     I2C1PIR         equ	15737	;# 
  5216   003D7A                     I2C1PIE         equ	15738	;# 
  5217   003D7B                     I2C1CLK         equ	15739	;# 
  5218   003D7C                     I2C1BTO         equ	15740	;# 
  5219   003DD0                     U2RXB           equ	15824	;# 
  5220   003DD0                     U2RXBL          equ	15824	;# 
  5221   003DD2                     U2TXB           equ	15826	;# 
  5222   003DD2                     U2TXBL          equ	15826	;# 
  5223   003DD4                     U2P1            equ	15828	;# 
  5224   003DD4                     U2P1L           equ	15828	;# 
  5225   003DD6                     U2P2            equ	15830	;# 
  5226   003DD6                     U2P2L           equ	15830	;# 
  5227   003DD8                     U2P3            equ	15832	;# 
  5228   003DD8                     U2P3L           equ	15832	;# 
  5229   003DDA                     U2CON0          equ	15834	;# 
  5230   003DDB                     U2CON1          equ	15835	;# 
  5231   003DDC                     U2CON2          equ	15836	;# 
  5232   003DDD                     U2BRG           equ	15837	;# 
  5233   003DDD                     U2BRGL          equ	15837	;# 
  5234   003DDE                     U2BRGH          equ	15838	;# 
  5235   003DDF                     U2FIFO          equ	15839	;# 
  5236   003DE0                     U2UIR           equ	15840	;# 
  5237   003DE1                     U2ERRIR         equ	15841	;# 
  5238   003DE2                     U2ERRIE         equ	15842	;# 
  5239   003DE8                     U1RXB           equ	15848	;# 
  5240   003DE8                     U1RXBL          equ	15848	;# 
  5241   003DE9                     U1RXCHK         equ	15849	;# 
  5242   003DEA                     U1TXB           equ	15850	;# 
  5243   003DEA                     U1TXBL          equ	15850	;# 
  5244   003DEB                     U1TXCHK         equ	15851	;# 
  5245   003DEC                     U1P1            equ	15852	;# 
  5246   003DEC                     U1P1L           equ	15852	;# 
  5247   003DED                     U1P1H           equ	15853	;# 
  5248   003DEE                     U1P2            equ	15854	;# 
  5249   003DEE                     U1P2L           equ	15854	;# 
  5250   003DEF                     U1P2H           equ	15855	;# 
  5251   003DF0                     U1P3            equ	15856	;# 
  5252   003DF0                     U1P3L           equ	15856	;# 
  5253   003DF1                     U1P3H           equ	15857	;# 
  5254   003DF2                     U1CON0          equ	15858	;# 
  5255   003DF3                     U1CON1          equ	15859	;# 
  5256   003DF4                     U1CON2          equ	15860	;# 
  5257   003DF5                     U1BRG           equ	15861	;# 
  5258   003DF5                     U1BRGL          equ	15861	;# 
  5259   003DF6                     U1BRGH          equ	15862	;# 
  5260   003DF7                     U1FIFO          equ	15863	;# 
  5261   003DF8                     U1UIR           equ	15864	;# 
  5262   003DF9                     U1ERRIR         equ	15865	;# 
  5263   003DFA                     U1ERRIE         equ	15866	;# 
  5264   003E9C                     DAC1CON1        equ	16028	;# 
  5265   003E9E                     DAC1CON0        equ	16030	;# 
  5266   003EB8                     CM2CON0         equ	16056	;# 
  5267   003EB9                     CM2CON1         equ	16057	;# 
  5268   003EBA                     CM2NCH          equ	16058	;# 
  5269   003EBB                     CM2PCH          equ	16059	;# 
  5270   003EBC                     CM1CON0         equ	16060	;# 
  5271   003EBD                     CM1CON1         equ	16061	;# 
  5272   003EBE                     CM1NCH          equ	16062	;# 
  5273   003EBF                     CM1PCH          equ	16063	;# 
  5274   003EC0                     CMOUT           equ	16064	;# 
  5275   003EC1                     FVRCON          equ	16065	;# 
  5276   003EC3                     ZCDCON          equ	16067	;# 
  5277   003EC9                     HLVDCON0        equ	16073	;# 
  5278   003ECA                     HLVDCON1        equ	16074	;# 
  5279   003ED7                     ADCP            equ	16087	;# 
  5280   003EDE                     ADLTH           equ	16094	;# 
  5281   003EDE                     ADLTHL          equ	16094	;# 
  5282   003EDF                     ADLTHH          equ	16095	;# 
  5283   003EE0                     ADUTH           equ	16096	;# 
  5284   003EE0                     ADUTHL          equ	16096	;# 
  5285   003EE1                     ADUTHH          equ	16097	;# 
  5286   003EE2                     ADERR           equ	16098	;# 
  5287   003EE2                     ADERRL          equ	16098	;# 
  5288   003EE3                     ADERRH          equ	16099	;# 
  5289   003EE4                     ADSTPT          equ	16100	;# 
  5290   003EE4                     ADSTPTL         equ	16100	;# 
  5291   003EE5                     ADSTPTH         equ	16101	;# 
  5292   003EE6                     ADFLTR          equ	16102	;# 
  5293   003EE6                     ADFLTRL         equ	16102	;# 
  5294   003EE7                     ADFLTRH         equ	16103	;# 
  5295   003EE8                     ADACC           equ	16104	;# 
  5296   003EE8                     ADACCL          equ	16104	;# 
  5297   003EE9                     ADACCH          equ	16105	;# 
  5298   003EEA                     ADACCU          equ	16106	;# 
  5299   003EEB                     ADCNT           equ	16107	;# 
  5300   003EEC                     ADRPT           equ	16108	;# 
  5301   003EED                     ADPREV          equ	16109	;# 
  5302   003EED                     ADPREVL         equ	16109	;# 
  5303   003EEE                     ADPREVH         equ	16110	;# 
  5304   003EEF                     ADRES           equ	16111	;# 
  5305   003EEF                     ADRESL          equ	16111	;# 
  5306   003EF0                     ADRESH          equ	16112	;# 
  5307   003EF1                     ADPCH           equ	16113	;# 
  5308   003EF3                     ADACQ           equ	16115	;# 
  5309   003EF3                     ADACQL          equ	16115	;# 
  5310   003EF4                     ADACQH          equ	16116	;# 
  5311   003EF5                     ADCAP           equ	16117	;# 
  5312   003EF6                     ADPRE           equ	16118	;# 
  5313   003EF6                     ADPREL          equ	16118	;# 
  5314   003EF7                     ADPREH          equ	16119	;# 
  5315   003EF8                     ADCON0          equ	16120	;# 
  5316   003EF9                     ADCON1          equ	16121	;# 
  5317   003EFA                     ADCON2          equ	16122	;# 
  5318   003EFB                     ADCON3          equ	16123	;# 
  5319   003EFC                     ADSTAT          equ	16124	;# 
  5320   003EFD                     ADREF           equ	16125	;# 
  5321   003EFE                     ADACT           equ	16126	;# 
  5322   003EFF                     ADCLK           equ	16127	;# 
  5323   003F12                     SMT1TMR         equ	16146	;# 
  5324   003F12                     SMT1TMRL        equ	16146	;# 
  5325   003F13                     SMT1TMRH        equ	16147	;# 
  5326   003F14                     SMT1TMRU        equ	16148	;# 
  5327   003F15                     SMT1CPR         equ	16149	;# 
  5328   003F15                     SMT1CPRL        equ	16149	;# 
  5329   003F16                     SMT1CPRH        equ	16150	;# 
  5330   003F17                     SMT1CPRU        equ	16151	;# 
  5331   003F18                     SMT1CPW         equ	16152	;# 
  5332   003F18                     SMT1CPWL        equ	16152	;# 
  5333   003F19                     SMT1CPWH        equ	16153	;# 
  5334   003F1A                     SMT1CPWU        equ	16154	;# 
  5335   003F1B                     SMT1PR          equ	16155	;# 
  5336   003F1B                     SMT1PRL         equ	16155	;# 
  5337   003F1C                     SMT1PRH         equ	16156	;# 
  5338   003F1D                     SMT1PRU         equ	16157	;# 
  5339   003F1E                     SMT1CON0        equ	16158	;# 
  5340   003F1F                     SMT1CON1        equ	16159	;# 
  5341   003F20                     SMT1STAT        equ	16160	;# 
  5342   003F21                     SMT1CLK         equ	16161	;# 
  5343   003F22                     SMT1SIG         equ	16162	;# 
  5344   003F23                     SMT1WIN         equ	16163	;# 
  5345   003F38                     NCO1ACC         equ	16184	;# 
  5346   003F38                     NCO1ACCL        equ	16184	;# 
  5347   003F39                     NCO1ACCH        equ	16185	;# 
  5348   003F3A                     NCO1ACCU        equ	16186	;# 
  5349   003F3B                     NCO1INC         equ	16187	;# 
  5350   003F3B                     NCO1INCL        equ	16187	;# 
  5351   003F3C                     NCO1INCH        equ	16188	;# 
  5352   003F3D                     NCO1INCU        equ	16189	;# 
  5353   003F3E                     NCO1CON         equ	16190	;# 
  5354   003F3F                     NCO1CLK         equ	16191	;# 
  5355   003F40                     CWG3CLK         equ	16192	;# 
  5356   003F40                     CWG3CLKCON      equ	16192	;# 
  5357   003F41                     CWG3ISM         equ	16193	;# 
  5358   003F41                     CWG3DAT         equ	16193	;# 
  5359   003F42                     CWG3DBR         equ	16194	;# 
  5360   003F43                     CWG3DBF         equ	16195	;# 
  5361   003F44                     CWG3CON0        equ	16196	;# 
  5362   003F45                     CWG3CON1        equ	16197	;# 
  5363   003F46                     CWG3AS0         equ	16198	;# 
  5364   003F47                     CWG3AS1         equ	16199	;# 
  5365   003F48                     CWG3STR         equ	16200	;# 
  5366   003F49                     CWG2CLK         equ	16201	;# 
  5367   003F49                     CWG2CLKCON      equ	16201	;# 
  5368   003F4A                     CWG2ISM         equ	16202	;# 
  5369   003F4A                     CWG2DAT         equ	16202	;# 
  5370   003F4B                     CWG2DBR         equ	16203	;# 
  5371   003F4C                     CWG2DBF         equ	16204	;# 
  5372   003F4D                     CWG2CON0        equ	16205	;# 
  5373   003F4E                     CWG2CON1        equ	16206	;# 
  5374   003F4F                     CWG2AS0         equ	16207	;# 
  5375   003F50                     CWG2AS1         equ	16208	;# 
  5376   003F51                     CWG2STR         equ	16209	;# 
  5377   003F52                     CWG1CLK         equ	16210	;# 
  5378   003F52                     CWG1CLKCON      equ	16210	;# 
  5379   003F53                     CWG1ISM         equ	16211	;# 
  5380   003F53                     CWG1DAT         equ	16211	;# 
  5381   003F54                     CWG1DBR         equ	16212	;# 
  5382   003F55                     CWG1DBF         equ	16213	;# 
  5383   003F56                     CWG1CON0        equ	16214	;# 
  5384   003F57                     CWG1CON1        equ	16215	;# 
  5385   003F58                     CWG1AS0         equ	16216	;# 
  5386   003F59                     CWG1AS1         equ	16217	;# 
  5387   003F5A                     CWG1STR         equ	16218	;# 
  5388   003F5E                     CCPTMRS0        equ	16222	;# 
  5389   003F5F                     CCPTMRS1        equ	16223	;# 
  5390   003F60                     PWM8DC          equ	16224	;# 
  5391   003F60                     PWM8DCL         equ	16224	;# 
  5392   003F61                     PWM8DCH         equ	16225	;# 
  5393   003F62                     PWM8CON         equ	16226	;# 
  5394   003F64                     PWM7DC          equ	16228	;# 
  5395   003F64                     PWM7DCL         equ	16228	;# 
  5396   003F65                     PWM7DCH         equ	16229	;# 
  5397   003F66                     PWM7CON         equ	16230	;# 
  5398   003F68                     PWM6DC          equ	16232	;# 
  5399   003F68                     PWM6DCL         equ	16232	;# 
  5400   003F69                     PWM6DCH         equ	16233	;# 
  5401   003F6A                     PWM6CON         equ	16234	;# 
  5402   003F6C                     PWM5DC          equ	16236	;# 
  5403   003F6C                     PWM5DCL         equ	16236	;# 
  5404   003F6D                     PWM5DCH         equ	16237	;# 
  5405   003F6E                     PWM5CON         equ	16238	;# 
  5406   003F70                     CCPR4           equ	16240	;# 
  5407   003F70                     CCPR4L          equ	16240	;# 
  5408   003F71                     CCPR4H          equ	16241	;# 
  5409   003F72                     CCP4CON         equ	16242	;# 
  5410   003F73                     CCP4CAP         equ	16243	;# 
  5411   003F74                     CCPR3           equ	16244	;# 
  5412   003F74                     CCPR3L          equ	16244	;# 
  5413   003F75                     CCPR3H          equ	16245	;# 
  5414   003F76                     CCP3CON         equ	16246	;# 
  5415   003F77                     CCP3CAP         equ	16247	;# 
  5416   003F78                     CCPR2           equ	16248	;# 
  5417   003F78                     CCPR2L          equ	16248	;# 
  5418   003F79                     CCPR2H          equ	16249	;# 
  5419   003F7A                     CCP2CON         equ	16250	;# 
  5420   003F7B                     CCP2CAP         equ	16251	;# 
  5421   003F7C                     CCPR1           equ	16252	;# 
  5422   003F7C                     CCPR1L          equ	16252	;# 
  5423   003F7D                     CCPR1H          equ	16253	;# 
  5424   003F7E                     CCP1CON         equ	16254	;# 
  5425   003F7F                     CCP1CAP         equ	16255	;# 
  5426   003F92                     T6TMR           equ	16274	;# 
  5427   003F92                     TMR6            equ	16274	;# 
  5428   003F93                     T6PR            equ	16275	;# 
  5429   003F93                     PR6             equ	16275	;# 
  5430   003F94                     T6CON           equ	16276	;# 
  5431   003F95                     T6HLT           equ	16277	;# 
  5432   003F96                     T6CLKCON        equ	16278	;# 
  5433   003F96                     T6CLK           equ	16278	;# 
  5434   003F97                     T6RST           equ	16279	;# 
  5435   003F98                     TMR5            equ	16280	;# 
  5436   003F98                     TMR5L           equ	16280	;# 
  5437   003F99                     TMR5H           equ	16281	;# 
  5438   003F9A                     T5CON           equ	16282	;# 
  5439   003F9A                     TMR5CON         equ	16282	;# 
  5440   003F9B                     T5GCON          equ	16283	;# 
  5441   003F9B                     TMR5GCON        equ	16283	;# 
  5442   003F9C                     T5GATE          equ	16284	;# 
  5443   003F9C                     TMR5GATE        equ	16284	;# 
  5444   003F9D                     T5CLK           equ	16285	;# 
  5445   003F9D                     TMR5CLK         equ	16285	;# 
  5446   003F9D                     PR5             equ	16285	;# 
  5447   003F9E                     T4TMR           equ	16286	;# 
  5448   003F9E                     TMR4            equ	16286	;# 
  5449   003F9F                     T4PR            equ	16287	;# 
  5450   003F9F                     PR4             equ	16287	;# 
  5451   003FA0                     T4CON           equ	16288	;# 
  5452   003FA1                     T4HLT           equ	16289	;# 
  5453   003FA2                     T4CLKCON        equ	16290	;# 
  5454   003FA2                     T4CLK           equ	16290	;# 
  5455   003FA3                     T4RST           equ	16291	;# 
  5456   003FA4                     TMR3            equ	16292	;# 
  5457   003FA4                     TMR3L           equ	16292	;# 
  5458   003FA5                     TMR3H           equ	16293	;# 
  5459   003FA6                     T3CON           equ	16294	;# 
  5460   003FA6                     TMR3CON         equ	16294	;# 
  5461   003FA7                     T3GCON          equ	16295	;# 
  5462   003FA7                     TMR3GCON        equ	16295	;# 
  5463   003FA8                     T3GATE          equ	16296	;# 
  5464   003FA8                     TMR3GATE        equ	16296	;# 
  5465   003FA9                     T3CLK           equ	16297	;# 
  5466   003FA9                     TMR3CLK         equ	16297	;# 
  5467   003FA9                     PR3             equ	16297	;# 
  5468   003FAA                     T2TMR           equ	16298	;# 
  5469   003FAA                     TMR2            equ	16298	;# 
  5470   003FAB                     T2PR            equ	16299	;# 
  5471   003FAB                     PR2             equ	16299	;# 
  5472   003FAC                     T2CON           equ	16300	;# 
  5473   003FAD                     T2HLT           equ	16301	;# 
  5474   003FAE                     T2CLKCON        equ	16302	;# 
  5475   003FAE                     T2CLK           equ	16302	;# 
  5476   003FAF                     T2RST           equ	16303	;# 
  5477   003FB0                     TMR1            equ	16304	;# 
  5478   003FB0                     TMR1L           equ	16304	;# 
  5479   003FB1                     TMR1H           equ	16305	;# 
  5480   003FB2                     T1CON           equ	16306	;# 
  5481   003FB2                     TMR1CON         equ	16306	;# 
  5482   003FB3                     T1GCON          equ	16307	;# 
  5483   003FB3                     TMR1GCON        equ	16307	;# 
  5484   003FB4                     T1GATE          equ	16308	;# 
  5485   003FB4                     TMR1GATE        equ	16308	;# 
  5486   003FB5                     T1CLK           equ	16309	;# 
  5487   003FB5                     TMR1CLK         equ	16309	;# 
  5488   003FB5                     PR1             equ	16309	;# 
  5489   003FB6                     TMR0L           equ	16310	;# 
  5490   003FB6                     TMR0            equ	16310	;# 
  5491   003FB7                     TMR0H           equ	16311	;# 
  5492   003FB7                     PR0             equ	16311	;# 
  5493   003FB8                     T0CON0          equ	16312	;# 
  5494   003FB9                     T0CON1          equ	16313	;# 
  5495   003FBA                     LATA            equ	16314	;# 
  5496   003FBB                     LATB            equ	16315	;# 
  5497   003FBC                     LATC            equ	16316	;# 
  5498   003FBD                     LATD            equ	16317	;# 
  5499   003FBE                     LATE            equ	16318	;# 
  5500   003FBF                     LATF            equ	16319	;# 
  5501   003FC2                     TRISA           equ	16322	;# 
  5502   003FC3                     TRISB           equ	16323	;# 
  5503   003FC4                     TRISC           equ	16324	;# 
  5504   003FC5                     TRISD           equ	16325	;# 
  5505   003FC6                     TRISE           equ	16326	;# 
  5506   003FC7                     TRISF           equ	16327	;# 
  5507   003FCA                     PORTA           equ	16330	;# 
  5508   003FCB                     PORTB           equ	16331	;# 
  5509   003FCC                     PORTC           equ	16332	;# 
  5510   003FCD                     PORTD           equ	16333	;# 
  5511   003FCE                     PORTE           equ	16334	;# 
  5512   003FCF                     PORTF           equ	16335	;# 
  5513   003FD2                     INTCON0         equ	16338	;# 
  5514   003FD3                     INTCON1         equ	16339	;# 
  5515   003FD4                     IVTLOCK         equ	16340	;# 
  5516   003FD5                     IVTBASE         equ	16341	;# 
  5517   003FD5                     IVTBASEL        equ	16341	;# 
  5518   003FD6                     IVTBASEH        equ	16342	;# 
  5519   003FD7                     IVTBASEU        equ	16343	;# 
  5520   003FD8                     STATUS          equ	16344	;# 
  5521   003FD9                     FSR2            equ	16345	;# 
  5522   003FD9                     FSR2L           equ	16345	;# 
  5523   003FDA                     FSR2H           equ	16346	;# 
  5524   003FDB                     PLUSW2          equ	16347	;# 
  5525   003FDC                     PREINC2         equ	16348	;# 
  5526   003FDD                     POSTDEC2        equ	16349	;# 
  5527   003FDE                     POSTINC2        equ	16350	;# 
  5528   003FDF                     INDF2           equ	16351	;# 
  5529   003FE0                     BSR             equ	16352	;# 
  5530   003FE1                     FSR1            equ	16353	;# 
  5531   003FE1                     FSR1L           equ	16353	;# 
  5532   003FE2                     FSR1H           equ	16354	;# 
  5533   003FE3                     PLUSW1          equ	16355	;# 
  5534   003FE4                     PREINC1         equ	16356	;# 
  5535   003FE5                     POSTDEC1        equ	16357	;# 
  5536   003FE6                     POSTINC1        equ	16358	;# 
  5537   003FE7                     INDF1           equ	16359	;# 
  5538   003FE8                     WREG            equ	16360	;# 
  5539   003FE9                     FSR0            equ	16361	;# 
  5540   003FE9                     FSR0L           equ	16361	;# 
  5541   003FEA                     FSR0H           equ	16362	;# 
  5542   003FEB                     PLUSW0          equ	16363	;# 
  5543   003FEC                     PREINC0         equ	16364	;# 
  5544   003FED                     POSTDEC0        equ	16365	;# 
  5545   003FEE                     POSTINC0        equ	16366	;# 
  5546   003FEF                     INDF0           equ	16367	;# 
  5547   003FF0                     PCON0           equ	16368	;# 
  5548   003FF1                     PCON1           equ	16369	;# 
  5549   003FF3                     PROD            equ	16371	;# 
  5550   003FF3                     PRODL           equ	16371	;# 
  5551   003FF4                     PRODH           equ	16372	;# 
  5552   003FF5                     TABLAT          equ	16373	;# 
  5553   003FF6                     TBLPTR          equ	16374	;# 
  5554   003FF6                     TBLPTRL         equ	16374	;# 
  5555   003FF7                     TBLPTRH         equ	16375	;# 
  5556   003FF8                     TBLPTRU         equ	16376	;# 
  5557   003FF9                     PCLAT           equ	16377	;# 
  5558   003FF9                     PCL             equ	16377	;# 
  5559   003FFA                     PCLATH          equ	16378	;# 
  5560   003FFB                     PCLATU          equ	16379	;# 
  5561   003FFC                     STKPTR          equ	16380	;# 
  5562   003FFD                     TOS             equ	16381	;# 
  5563   003FFD                     TOSL            equ	16381	;# 
  5564   003FFE                     TOSH            equ	16382	;# 
  5565   003FFF                     TOSU            equ	16383	;# 
  5566   003880                     STATUS_CSHAD    equ	14464	;# 
  5567   003881                     WREG_CSHAD      equ	14465	;# 
  5568   003882                     BSR_CSHAD       equ	14466	;# 
  5569   003883                     SHADCON         equ	14467	;# 
  5570   003884                     STATUS_SHAD     equ	14468	;# 
  5571   003885                     WREG_SHAD       equ	14469	;# 
  5572   003886                     BSR_SHAD        equ	14470	;# 
  5573   003887                     PCLATH_SHAD     equ	14471	;# 
  5574   003888                     PCLATU_SHAD     equ	14472	;# 
  5575   003889                     FSR0SH          equ	14473	;# 
  5576   003889                     FSR0L_SHAD      equ	14473	;# 
  5577   00388A                     FSR0H_SHAD      equ	14474	;# 
  5578   00388B                     FSR1SH          equ	14475	;# 
  5579   00388B                     FSR1L_SHAD      equ	14475	;# 
  5580   00388C                     FSR1H_SHAD      equ	14476	;# 
  5581   00388D                     FSR2SH          equ	14477	;# 
  5582   00388D                     FSR2L_SHAD      equ	14477	;# 
  5583   00388E                     FSR2H_SHAD      equ	14478	;# 
  5584   00388F                     PRODSH          equ	14479	;# 
  5585   00388F                     PRODL_SHAD      equ	14479	;# 
  5586   003890                     PRODH_SHAD      equ	14480	;# 
  5587   00389D                     IVTADL          equ	14493	;# 
  5588   00389E                     IVTADH          equ	14494	;# 
  5589   00389F                     IVTADU          equ	14495	;# 
  5590   00395B                     WDTCON0         equ	14683	;# 
  5591   00395C                     WDTCON1         equ	14684	;# 
  5592   00395D                     WDTPSL          equ	14685	;# 
  5593   00395E                     WDTPSH          equ	14686	;# 
  5594   00395F                     WDTTMR          equ	14687	;# 
  5595   003960                     CRCDATA         equ	14688	;# 
  5596   003960                     CRCDATL         equ	14688	;# 
  5597   003961                     CRCDATH         equ	14689	;# 
  5598   003962                     CRCACC          equ	14690	;# 
  5599   003962                     CRCACCL         equ	14690	;# 
  5600   003963                     CRCACCH         equ	14691	;# 
  5601   003964                     CRCSHFT         equ	14692	;# 
  5602   003964                     CRCSHIFTL       equ	14692	;# 
  5603   003965                     CRCSHIFTH       equ	14693	;# 
  5604   003966                     CRCXOR          equ	14694	;# 
  5605   003966                     CRCXORL         equ	14694	;# 
  5606   003967                     CRCXORH         equ	14695	;# 
  5607   003968                     CRCCON0         equ	14696	;# 
  5608   003969                     CRCCON1         equ	14697	;# 
  5609   003976                     SCANLADR        equ	14710	;# 
  5610   003976                     SCANLADRL       equ	14710	;# 
  5611   003977                     SCANLADRH       equ	14711	;# 
  5612   003978                     SCANLADRU       equ	14712	;# 
  5613   003979                     SCANHADR        equ	14713	;# 
  5614   003979                     SCANHADRL       equ	14713	;# 
  5615   00397A                     SCANHADRH       equ	14714	;# 
  5616   00397B                     SCANHADRU       equ	14715	;# 
  5617   00397C                     SCANCON0        equ	14716	;# 
  5618   00397D                     SCANTRIG        equ	14717	;# 
  5619   003980                     IPR0            equ	14720	;# 
  5620   003981                     IPR1            equ	14721	;# 
  5621   003982                     IPR2            equ	14722	;# 
  5622   003983                     IPR3            equ	14723	;# 
  5623   003984                     IPR4            equ	14724	;# 
  5624   003985                     IPR5            equ	14725	;# 
  5625   003986                     IPR6            equ	14726	;# 
  5626   003987                     IPR7            equ	14727	;# 
  5627   003988                     IPR8            equ	14728	;# 
  5628   003989                     IPR9            equ	14729	;# 
  5629   00398A                     IPR10           equ	14730	;# 
  5630   003990                     PIE0            equ	14736	;# 
  5631   003991                     PIE1            equ	14737	;# 
  5632   003992                     PIE2            equ	14738	;# 
  5633   003993                     PIE3            equ	14739	;# 
  5634   003994                     PIE4            equ	14740	;# 
  5635   003995                     PIE5            equ	14741	;# 
  5636   003996                     PIE6            equ	14742	;# 
  5637   003997                     PIE7            equ	14743	;# 
  5638   003998                     PIE8            equ	14744	;# 
  5639   003999                     PIE9            equ	14745	;# 
  5640   00399A                     PIE10           equ	14746	;# 
  5641   0039A0                     PIR0            equ	14752	;# 
  5642   0039A1                     PIR1            equ	14753	;# 
  5643   0039A2                     PIR2            equ	14754	;# 
  5644   0039A3                     PIR3            equ	14755	;# 
  5645   0039A4                     PIR4            equ	14756	;# 
  5646   0039A5                     PIR5            equ	14757	;# 
  5647   0039A6                     PIR6            equ	14758	;# 
  5648   0039A7                     PIR7            equ	14759	;# 
  5649   0039A8                     PIR8            equ	14760	;# 
  5650   0039A9                     PIR9            equ	14761	;# 
  5651   0039AA                     PIR10           equ	14762	;# 
  5652   0039C0                     PMD0            equ	14784	;# 
  5653   0039C1                     PMD1            equ	14785	;# 
  5654   0039C2                     PMD2            equ	14786	;# 
  5655   0039C3                     PMD3            equ	14787	;# 
  5656   0039C4                     PMD4            equ	14788	;# 
  5657   0039C5                     PMD5            equ	14789	;# 
  5658   0039C6                     PMD6            equ	14790	;# 
  5659   0039C7                     PMD7            equ	14791	;# 
  5660   0039D0                     BORCON          equ	14800	;# 
  5661   0039D1                     VREGCON         equ	14801	;# 
  5662   0039D8                     CPUDOZE         equ	14808	;# 
  5663   0039D9                     OSCCON1         equ	14809	;# 
  5664   0039DA                     OSCCON2         equ	14810	;# 
  5665   0039DB                     OSCCON3         equ	14811	;# 
  5666   0039DC                     OSCSTAT         equ	14812	;# 
  5667   0039DC                     OSCSTAT1        equ	14812	;# 
  5668   0039DD                     OSCEN           equ	14813	;# 
  5669   0039DE                     OSCTUNE         equ	14814	;# 
  5670   0039DF                     OSCFRQ          equ	14815	;# 
  5671   0039E0                     NVMADRL         equ	14816	;# 
  5672   0039E1                     NVMADRH         equ	14817	;# 
  5673   0039E3                     NVMDAT          equ	14819	;# 
  5674   0039E5                     NVMCON1         equ	14821	;# 
  5675   0039E6                     NVMCON2         equ	14822	;# 
  5676   0039EF                     PRLOCK          equ	14831	;# 
  5677   0039F1                     ISRPR           equ	14833	;# 
  5678   0039F2                     MAINPR          equ	14834	;# 
  5679   0039F3                     DMA1PR          equ	14835	;# 
  5680   0039F4                     DMA2PR          equ	14836	;# 
  5681   0039F7                     SCANPR          equ	14839	;# 
  5682   003A00                     RA0PPS          equ	14848	;# 
  5683   003A01                     RA1PPS          equ	14849	;# 
  5684   003A02                     RA2PPS          equ	14850	;# 
  5685   003A03                     RA3PPS          equ	14851	;# 
  5686   003A04                     RA4PPS          equ	14852	;# 
  5687   003A05                     RA5PPS          equ	14853	;# 
  5688   003A06                     RA6PPS          equ	14854	;# 
  5689   003A07                     RA7PPS          equ	14855	;# 
  5690   003A08                     RB0PPS          equ	14856	;# 
  5691   003A09                     RB1PPS          equ	14857	;# 
  5692   003A0A                     RB2PPS          equ	14858	;# 
  5693   003A0B                     RB3PPS          equ	14859	;# 
  5694   003A0C                     RB4PPS          equ	14860	;# 
  5695   003A0D                     RB5PPS          equ	14861	;# 
  5696   003A0E                     RB6PPS          equ	14862	;# 
  5697   003A0F                     RB7PPS          equ	14863	;# 
  5698   003A10                     RC0PPS          equ	14864	;# 
  5699   003A11                     RC1PPS          equ	14865	;# 
  5700   003A12                     RC2PPS          equ	14866	;# 
  5701   003A13                     RC3PPS          equ	14867	;# 
  5702   003A14                     RC4PPS          equ	14868	;# 
  5703   003A15                     RC5PPS          equ	14869	;# 
  5704   003A16                     RC6PPS          equ	14870	;# 
  5705   003A17                     RC7PPS          equ	14871	;# 
  5706   003A18                     RD0PPS          equ	14872	;# 
  5707   003A19                     RD1PPS          equ	14873	;# 
  5708   003A1A                     RD2PPS          equ	14874	;# 
  5709   003A1B                     RD3PPS          equ	14875	;# 
  5710   003A1C                     RD4PPS          equ	14876	;# 
  5711   003A1D                     RD5PPS          equ	14877	;# 
  5712   003A1E                     RD6PPS          equ	14878	;# 
  5713   003A1F                     RD7PPS          equ	14879	;# 
  5714   003A20                     RE0PPS          equ	14880	;# 
  5715   003A21                     RE1PPS          equ	14881	;# 
  5716   003A22                     RE2PPS          equ	14882	;# 
  5717   003A28                     RF0PPS          equ	14888	;# 
  5718   003A29                     RF1PPS          equ	14889	;# 
  5719   003A2A                     RF2PPS          equ	14890	;# 
  5720   003A2B                     RF3PPS          equ	14891	;# 
  5721   003A2C                     RF4PPS          equ	14892	;# 
  5722   003A2D                     RF5PPS          equ	14893	;# 
  5723   003A2E                     RF6PPS          equ	14894	;# 
  5724   003A2F                     RF7PPS          equ	14895	;# 
  5725   003A40                     ANSELA          equ	14912	;# 
  5726   003A41                     WPUA            equ	14913	;# 
  5727   003A42                     ODCONA          equ	14914	;# 
  5728   003A43                     SLRCONA         equ	14915	;# 
  5729   003A44                     INLVLA          equ	14916	;# 
  5730   003A45                     IOCAP           equ	14917	;# 
  5731   003A46                     IOCAN           equ	14918	;# 
  5732   003A47                     IOCAF           equ	14919	;# 
  5733   003A50                     ANSELB          equ	14928	;# 
  5734   003A51                     WPUB            equ	14929	;# 
  5735   003A52                     ODCONB          equ	14930	;# 
  5736   003A53                     SLRCONB         equ	14931	;# 
  5737   003A54                     INLVLB          equ	14932	;# 
  5738   003A55                     IOCBP           equ	14933	;# 
  5739   003A56                     IOCBN           equ	14934	;# 
  5740   003A57                     IOCBF           equ	14935	;# 
  5741   003A5A                     RB1I2C          equ	14938	;# 
  5742   003A5B                     RB2I2C          equ	14939	;# 
  5743   003A60                     ANSELC          equ	14944	;# 
  5744   003A61                     WPUC            equ	14945	;# 
  5745   003A62                     ODCONC          equ	14946	;# 
  5746   003A63                     SLRCONC         equ	14947	;# 
  5747   003A64                     INLVLC          equ	14948	;# 
  5748   003A65                     IOCCP           equ	14949	;# 
  5749   003A66                     IOCCN           equ	14950	;# 
  5750   003A67                     IOCCF           equ	14951	;# 
  5751   003A6A                     RC3I2C          equ	14954	;# 
  5752   003A6B                     RC4I2C          equ	14955	;# 
  5753   003A70                     ANSELD          equ	14960	;# 
  5754   003A71                     WPUD            equ	14961	;# 
  5755   003A72                     ODCOND          equ	14962	;# 
  5756   003A73                     SLRCOND         equ	14963	;# 
  5757   003A74                     INLVLD          equ	14964	;# 
  5758   003A7A                     RD0I2C          equ	14970	;# 
  5759   003A7B                     RD1I2C          equ	14971	;# 
  5760   003A80                     ANSELE          equ	14976	;# 
  5761   003A81                     WPUE            equ	14977	;# 
  5762   003A82                     ODCONE          equ	14978	;# 
  5763   003A83                     SLRCONE         equ	14979	;# 
  5764   003A84                     INLVLE          equ	14980	;# 
  5765   003A85                     IOCEP           equ	14981	;# 
  5766   003A86                     IOCEN           equ	14982	;# 
  5767   003A87                     IOCEF           equ	14983	;# 
  5768   003A90                     ANSELF          equ	14992	;# 
  5769   003A91                     WPUF            equ	14993	;# 
  5770   003A92                     ODCONF          equ	14994	;# 
  5771   003A93                     SLRCONF         equ	14995	;# 
  5772   003A94                     INLVLF          equ	14996	;# 
  5773   003ABF                     PPSLOCK         equ	15039	;# 
  5774   003AC0                     INT0PPS         equ	15040	;# 
  5775   003AC1                     INT1PPS         equ	15041	;# 
  5776   003AC2                     INT2PPS         equ	15042	;# 
  5777   003AC3                     T0CKIPPS        equ	15043	;# 
  5778   003AC4                     T1CKIPPS        equ	15044	;# 
  5779   003AC5                     T1GPPS          equ	15045	;# 
  5780   003AC6                     T3CKIPPS        equ	15046	;# 
  5781   003AC7                     T3GPPS          equ	15047	;# 
  5782   003AC8                     T5CKIPPS        equ	15048	;# 
  5783   003AC9                     T5GPPS          equ	15049	;# 
  5784   003ACA                     T2INPPS         equ	15050	;# 
  5785   003ACB                     T4INPPS         equ	15051	;# 
  5786   003ACC                     T6INPPS         equ	15052	;# 
  5787   003ACD                     CCP1PPS         equ	15053	;# 
  5788   003ACE                     CCP2PPS         equ	15054	;# 
  5789   003ACF                     CCP3PPS         equ	15055	;# 
  5790   003AD0                     CCP4PPS         equ	15056	;# 
  5791   003AD1                     SMT1WINPPS      equ	15057	;# 
  5792   003AD2                     SMT1SIGPPS      equ	15058	;# 
  5793   003AD3                     CWG1INPPS       equ	15059	;# 
  5794   003AD4                     CWG2INPPS       equ	15060	;# 
  5795   003AD5                     CWG3INPPS       equ	15061	;# 
  5796   003AD6                     MD1CARLPPS      equ	15062	;# 
  5797   003AD7                     MD1CARHPPS      equ	15063	;# 
  5798   003AD8                     MD1SRCPPS       equ	15064	;# 
  5799   003AD9                     CLCIN0PPS       equ	15065	;# 
  5800   003ADA                     CLCIN1PPS       equ	15066	;# 
  5801   003ADB                     CLCIN2PPS       equ	15067	;# 
  5802   003ADC                     CLCIN3PPS       equ	15068	;# 
  5803   003ADD                     ADACTPPS        equ	15069	;# 
  5804   003ADE                     SPI1SCKPPS      equ	15070	;# 
  5805   003ADF                     SPI1SDIPPS      equ	15071	;# 
  5806   003AE0                     SPI1SSPPS       equ	15072	;# 
  5807   003AE1                     I2C1SCLPPS      equ	15073	;# 
  5808   003AE2                     I2C1SDAPPS      equ	15074	;# 
  5809   003AE3                     I2C2SCLPPS      equ	15075	;# 
  5810   003AE4                     I2C2SDAPPS      equ	15076	;# 
  5811   003AE5                     U1RXPPS         equ	15077	;# 
  5812   003AE6                     U1CTSPPS        equ	15078	;# 
  5813   003AE8                     U2RXPPS         equ	15080	;# 
  5814   003AE9                     U2CTSPPS        equ	15081	;# 
  5815   003BC9                     DMA2BUF         equ	15305	;# 
  5816   003BCA                     DMA2DCNT        equ	15306	;# 
  5817   003BCA                     DMA2DCNTL       equ	15306	;# 
  5818   003BCB                     DMA2DCNTH       equ	15307	;# 
  5819   003BCC                     DMA2DPTR        equ	15308	;# 
  5820   003BCC                     DMA2DPTRL       equ	15308	;# 
  5821   003BCD                     DMA2DPTRH       equ	15309	;# 
  5822   003BCE                     DMA2DSZ         equ	15310	;# 
  5823   003BCE                     DMA2DSZL        equ	15310	;# 
  5824   003BCF                     DMA2DSZH        equ	15311	;# 
  5825   003BD0                     DMA2DSA         equ	15312	;# 
  5826   003BD0                     DMA2DSAL        equ	15312	;# 
  5827   003BD1                     DMA2DSAH        equ	15313	;# 
  5828   003BD2                     DMA2SCNT        equ	15314	;# 
  5829   003BD2                     DMA2SCNTL       equ	15314	;# 
  5830   003BD3                     DMA2SCNTH       equ	15315	;# 
  5831   003BD4                     DMA2SPTR        equ	15316	;# 
  5832   003BD4                     DMA2SPTRL       equ	15316	;# 
  5833   003BD5                     DMA2SPTRH       equ	15317	;# 
  5834   003BD6                     DMA2SPTRU       equ	15318	;# 
  5835   003BD7                     DMA2SSZ         equ	15319	;# 
  5836   003BD7                     DMA2SSZL        equ	15319	;# 
  5837   003BD8                     DMA2SSZH        equ	15320	;# 
  5838   003BD9                     DMA2SSA         equ	15321	;# 
  5839   003BD9                     DMA2SSAL        equ	15321	;# 
  5840   003BDA                     DMA2SSAH        equ	15322	;# 
  5841   003BDB                     DMA2SSAU        equ	15323	;# 
  5842   003BDC                     DMA2CON0        equ	15324	;# 
  5843   003BDD                     DMA2CON1        equ	15325	;# 
  5844   003BDE                     DMA2AIRQ        equ	15326	;# 
  5845   003BDF                     DMA2SIRQ        equ	15327	;# 
  5846   003BE9                     DMA1BUF         equ	15337	;# 
  5847   003BEA                     DMA1DCNT        equ	15338	;# 
  5848   003BEA                     DMA1DCNTL       equ	15338	;# 
  5849   003BEB                     DMA1DCNTH       equ	15339	;# 
  5850   003BEC                     DMA1DPTR        equ	15340	;# 
  5851   003BEC                     DMA1DPTRL       equ	15340	;# 
  5852   003BED                     DMA1DPTRH       equ	15341	;# 
  5853   003BEE                     DMA1DSZ         equ	15342	;# 
  5854   003BEE                     DMA1DSZL        equ	15342	;# 
  5855   003BEF                     DMA1DSZH        equ	15343	;# 
  5856   003BF0                     DMA1DSA         equ	15344	;# 
  5857   003BF0                     DMA1DSAL        equ	15344	;# 
  5858   003BF1                     DMA1DSAH        equ	15345	;# 
  5859   003BF2                     DMA1SCNT        equ	15346	;# 
  5860   003BF2                     DMA1SCNTL       equ	15346	;# 
  5861   003BF3                     DMA1SCNTH       equ	15347	;# 
  5862   003BF4                     DMA1SPTR        equ	15348	;# 
  5863   003BF4                     DMA1SPTRL       equ	15348	;# 
  5864   003BF5                     DMA1SPTRH       equ	15349	;# 
  5865   003BF6                     DMA1SPTRU       equ	15350	;# 
  5866   003BF7                     DMA1SSZ         equ	15351	;# 
  5867   003BF7                     DMA1SSZL        equ	15351	;# 
  5868   003BF8                     DMA1SSZH        equ	15352	;# 
  5869   003BF9                     DMA1SSA         equ	15353	;# 
  5870   003BF9                     DMA1SSAL        equ	15353	;# 
  5871   003BFA                     DMA1SSAH        equ	15354	;# 
  5872   003BFB                     DMA1SSAU        equ	15355	;# 
  5873   003BFC                     DMA1CON0        equ	15356	;# 
  5874   003BFD                     DMA1CON1        equ	15357	;# 
  5875   003BFE                     DMA1AIRQ        equ	15358	;# 
  5876   003BFF                     DMA1SIRQ        equ	15359	;# 
  5877   003C56                     CLC4CON         equ	15446	;# 
  5878   003C57                     CLC4POL         equ	15447	;# 
  5879   003C58                     CLC4SEL0        equ	15448	;# 
  5880   003C59                     CLC4SEL1        equ	15449	;# 
  5881   003C5A                     CLC4SEL2        equ	15450	;# 
  5882   003C5B                     CLC4SEL3        equ	15451	;# 
  5883   003C5C                     CLC4GLS0        equ	15452	;# 
  5884   003C5D                     CLC4GLS1        equ	15453	;# 
  5885   003C5E                     CLC4GLS2        equ	15454	;# 
  5886   003C5F                     CLC4GLS3        equ	15455	;# 
  5887   003C60                     CLC3CON         equ	15456	;# 
  5888   003C61                     CLC3POL         equ	15457	;# 
  5889   003C62                     CLC3SEL0        equ	15458	;# 
  5890   003C63                     CLC3SEL1        equ	15459	;# 
  5891   003C64                     CLC3SEL2        equ	15460	;# 
  5892   003C65                     CLC3SEL3        equ	15461	;# 
  5893   003C66                     CLC3GLS0        equ	15462	;# 
  5894   003C67                     CLC3GLS1        equ	15463	;# 
  5895   003C68                     CLC3GLS2        equ	15464	;# 
  5896   003C69                     CLC3GLS3        equ	15465	;# 
  5897   003C6A                     CLC2CON         equ	15466	;# 
  5898   003C6B                     CLC2POL         equ	15467	;# 
  5899   003C6C                     CLC2SEL0        equ	15468	;# 
  5900   003C6D                     CLC2SEL1        equ	15469	;# 
  5901   003C6E                     CLC2SEL2        equ	15470	;# 
  5902   003C6F                     CLC2SEL3        equ	15471	;# 
  5903   003C70                     CLC2GLS0        equ	15472	;# 
  5904   003C71                     CLC2GLS1        equ	15473	;# 
  5905   003C72                     CLC2GLS2        equ	15474	;# 
  5906   003C73                     CLC2GLS3        equ	15475	;# 
  5907   003C74                     CLC1CON         equ	15476	;# 
  5908   003C75                     CLC1POL         equ	15477	;# 
  5909   003C76                     CLC1SEL0        equ	15478	;# 
  5910   003C77                     CLC1SEL1        equ	15479	;# 
  5911   003C78                     CLC1SEL2        equ	15480	;# 
  5912   003C79                     CLC1SEL3        equ	15481	;# 
  5913   003C7A                     CLC1GLS0        equ	15482	;# 
  5914   003C7B                     CLC1GLS1        equ	15483	;# 
  5915   003C7C                     CLC1GLS2        equ	15484	;# 
  5916   003C7D                     CLC1GLS3        equ	15485	;# 
  5917   003C7E                     CLCDATA0        equ	15486	;# 
  5918   003CE5                     CLKRCON         equ	15589	;# 
  5919   003CE6                     CLKRCLK         equ	15590	;# 
  5920   003CFA                     MD1CON0         equ	15610	;# 
  5921   003CFB                     MD1CON1         equ	15611	;# 
  5922   003CFC                     MD1SRC          equ	15612	;# 
  5923   003CFD                     MD1CARL         equ	15613	;# 
  5924   003CFE                     MD1CARH         equ	15614	;# 
  5925   003D10                     SPI1RXB         equ	15632	;# 
  5926   003D11                     SPI1TXB         equ	15633	;# 
  5927   003D12                     SPI1TCNT        equ	15634	;# 
  5928   003D12                     SPI1TCNTL       equ	15634	;# 
  5929   003D13                     SPI1TCNTH       equ	15635	;# 
  5930   003D14                     SPI1CON0        equ	15636	;# 
  5931   003D15                     SPI1CON1        equ	15637	;# 
  5932   003D16                     SPI1CON2        equ	15638	;# 
  5933   003D17                     SPI1STATUS      equ	15639	;# 
  5934   003D18                     SPI1TWIDTH      equ	15640	;# 
  5935   003D19                     SPI1BAUD        equ	15641	;# 
  5936   003D1A                     SPI1INTF        equ	15642	;# 
  5937   003D1B                     SPI1INTE        equ	15643	;# 
  5938   003D1C                     SPI1CLK         equ	15644	;# 
  5939   003D54                     I2C2RXB         equ	15700	;# 
  5940   003D55                     I2C2TXB         equ	15701	;# 
  5941   003D56                     I2C2CNT         equ	15702	;# 
  5942   003D57                     I2C2ADB0        equ	15703	;# 
  5943   003D58                     I2C2ADB1        equ	15704	;# 
  5944   003D59                     I2C2ADR0        equ	15705	;# 
  5945   003D5A                     I2C2ADR1        equ	15706	;# 
  5946   003D5B                     I2C2ADR2        equ	15707	;# 
  5947   003D5C                     I2C2ADR3        equ	15708	;# 
  5948   003D5D                     I2C2CON0        equ	15709	;# 
  5949   003D5E                     I2C2CON1        equ	15710	;# 
  5950   003D5F                     I2C2CON2        equ	15711	;# 
  5951   003D60                     I2C2ERR         equ	15712	;# 
  5952   003D61                     I2C2STAT0       equ	15713	;# 
  5953   003D62                     I2C2STAT1       equ	15714	;# 
  5954   003D63                     I2C2PIR         equ	15715	;# 
  5955   003D64                     I2C2PIE         equ	15716	;# 
  5956   003D65                     I2C2CLK         equ	15717	;# 
  5957   003D66                     I2C2BTO         equ	15718	;# 
  5958   003D6A                     I2C1RXB         equ	15722	;# 
  5959   003D6B                     I2C1TXB         equ	15723	;# 
  5960   003D6C                     I2C1CNT         equ	15724	;# 
  5961   003D6D                     I2C1ADB0        equ	15725	;# 
  5962   003D6E                     I2C1ADB1        equ	15726	;# 
  5963   003D6F                     I2C1ADR0        equ	15727	;# 
  5964   003D70                     I2C1ADR1        equ	15728	;# 
  5965   003D71                     I2C1ADR2        equ	15729	;# 
  5966   003D72                     I2C1ADR3        equ	15730	;# 
  5967   003D73                     I2C1CON0        equ	15731	;# 
  5968   003D74                     I2C1CON1        equ	15732	;# 
  5969   003D75                     I2C1CON2        equ	15733	;# 
  5970   003D76                     I2C1ERR         equ	15734	;# 
  5971   003D77                     I2C1STAT0       equ	15735	;# 
  5972   003D78                     I2C1STAT1       equ	15736	;# 
  5973   003D79                     I2C1PIR         equ	15737	;# 
  5974   003D7A                     I2C1PIE         equ	15738	;# 
  5975   003D7B                     I2C1CLK         equ	15739	;# 
  5976   003D7C                     I2C1BTO         equ	15740	;# 
  5977   003DD0                     U2RXB           equ	15824	;# 
  5978   003DD0                     U2RXBL          equ	15824	;# 
  5979   003DD2                     U2TXB           equ	15826	;# 
  5980   003DD2                     U2TXBL          equ	15826	;# 
  5981   003DD4                     U2P1            equ	15828	;# 
  5982   003DD4                     U2P1L           equ	15828	;# 
  5983   003DD6                     U2P2            equ	15830	;# 
  5984   003DD6                     U2P2L           equ	15830	;# 
  5985   003DD8                     U2P3            equ	15832	;# 
  5986   003DD8                     U2P3L           equ	15832	;# 
  5987   003DDA                     U2CON0          equ	15834	;# 
  5988   003DDB                     U2CON1          equ	15835	;# 
  5989   003DDC                     U2CON2          equ	15836	;# 
  5990   003DDD                     U2BRG           equ	15837	;# 
  5991   003DDD                     U2BRGL          equ	15837	;# 
  5992   003DDE                     U2BRGH          equ	15838	;# 
  5993   003DDF                     U2FIFO          equ	15839	;# 
  5994   003DE0                     U2UIR           equ	15840	;# 
  5995   003DE1                     U2ERRIR         equ	15841	;# 
  5996   003DE2                     U2ERRIE         equ	15842	;# 
  5997   003DE8                     U1RXB           equ	15848	;# 
  5998   003DE8                     U1RXBL          equ	15848	;# 
  5999   003DE9                     U1RXCHK         equ	15849	;# 
  6000   003DEA                     U1TXB           equ	15850	;# 
  6001   003DEA                     U1TXBL          equ	15850	;# 
  6002   003DEB                     U1TXCHK         equ	15851	;# 
  6003   003DEC                     U1P1            equ	15852	;# 
  6004   003DEC                     U1P1L           equ	15852	;# 
  6005   003DED                     U1P1H           equ	15853	;# 
  6006   003DEE                     U1P2            equ	15854	;# 
  6007   003DEE                     U1P2L           equ	15854	;# 
  6008   003DEF                     U1P2H           equ	15855	;# 
  6009   003DF0                     U1P3            equ	15856	;# 
  6010   003DF0                     U1P3L           equ	15856	;# 
  6011   003DF1                     U1P3H           equ	15857	;# 
  6012   003DF2                     U1CON0          equ	15858	;# 
  6013   003DF3                     U1CON1          equ	15859	;# 
  6014   003DF4                     U1CON2          equ	15860	;# 
  6015   003DF5                     U1BRG           equ	15861	;# 
  6016   003DF5                     U1BRGL          equ	15861	;# 
  6017   003DF6                     U1BRGH          equ	15862	;# 
  6018   003DF7                     U1FIFO          equ	15863	;# 
  6019   003DF8                     U1UIR           equ	15864	;# 
  6020   003DF9                     U1ERRIR         equ	15865	;# 
  6021   003DFA                     U1ERRIE         equ	15866	;# 
  6022   003E9C                     DAC1CON1        equ	16028	;# 
  6023   003E9E                     DAC1CON0        equ	16030	;# 
  6024   003EB8                     CM2CON0         equ	16056	;# 
  6025   003EB9                     CM2CON1         equ	16057	;# 
  6026   003EBA                     CM2NCH          equ	16058	;# 
  6027   003EBB                     CM2PCH          equ	16059	;# 
  6028   003EBC                     CM1CON0         equ	16060	;# 
  6029   003EBD                     CM1CON1         equ	16061	;# 
  6030   003EBE                     CM1NCH          equ	16062	;# 
  6031   003EBF                     CM1PCH          equ	16063	;# 
  6032   003EC0                     CMOUT           equ	16064	;# 
  6033   003EC1                     FVRCON          equ	16065	;# 
  6034   003EC3                     ZCDCON          equ	16067	;# 
  6035   003EC9                     HLVDCON0        equ	16073	;# 
  6036   003ECA                     HLVDCON1        equ	16074	;# 
  6037   003ED7                     ADCP            equ	16087	;# 
  6038   003EDE                     ADLTH           equ	16094	;# 
  6039   003EDE                     ADLTHL          equ	16094	;# 
  6040   003EDF                     ADLTHH          equ	16095	;# 
  6041   003EE0                     ADUTH           equ	16096	;# 
  6042   003EE0                     ADUTHL          equ	16096	;# 
  6043   003EE1                     ADUTHH          equ	16097	;# 
  6044   003EE2                     ADERR           equ	16098	;# 
  6045   003EE2                     ADERRL          equ	16098	;# 
  6046   003EE3                     ADERRH          equ	16099	;# 
  6047   003EE4                     ADSTPT          equ	16100	;# 
  6048   003EE4                     ADSTPTL         equ	16100	;# 
  6049   003EE5                     ADSTPTH         equ	16101	;# 
  6050   003EE6                     ADFLTR          equ	16102	;# 
  6051   003EE6                     ADFLTRL         equ	16102	;# 
  6052   003EE7                     ADFLTRH         equ	16103	;# 
  6053   003EE8                     ADACC           equ	16104	;# 
  6054   003EE8                     ADACCL          equ	16104	;# 
  6055   003EE9                     ADACCH          equ	16105	;# 
  6056   003EEA                     ADACCU          equ	16106	;# 
  6057   003EEB                     ADCNT           equ	16107	;# 
  6058   003EEC                     ADRPT           equ	16108	;# 
  6059   003EED                     ADPREV          equ	16109	;# 
  6060   003EED                     ADPREVL         equ	16109	;# 
  6061   003EEE                     ADPREVH         equ	16110	;# 
  6062   003EEF                     ADRES           equ	16111	;# 
  6063   003EEF                     ADRESL          equ	16111	;# 
  6064   003EF0                     ADRESH          equ	16112	;# 
  6065   003EF1                     ADPCH           equ	16113	;# 
  6066   003EF3                     ADACQ           equ	16115	;# 
  6067   003EF3                     ADACQL          equ	16115	;# 
  6068   003EF4                     ADACQH          equ	16116	;# 
  6069   003EF5                     ADCAP           equ	16117	;# 
  6070   003EF6                     ADPRE           equ	16118	;# 
  6071   003EF6                     ADPREL          equ	16118	;# 
  6072   003EF7                     ADPREH          equ	16119	;# 
  6073   003EF8                     ADCON0          equ	16120	;# 
  6074   003EF9                     ADCON1          equ	16121	;# 
  6075   003EFA                     ADCON2          equ	16122	;# 
  6076   003EFB                     ADCON3          equ	16123	;# 
  6077   003EFC                     ADSTAT          equ	16124	;# 
  6078   003EFD                     ADREF           equ	16125	;# 
  6079   003EFE                     ADACT           equ	16126	;# 
  6080   003EFF                     ADCLK           equ	16127	;# 
  6081   003F12                     SMT1TMR         equ	16146	;# 
  6082   003F12                     SMT1TMRL        equ	16146	;# 
  6083   003F13                     SMT1TMRH        equ	16147	;# 
  6084   003F14                     SMT1TMRU        equ	16148	;# 
  6085   003F15                     SMT1CPR         equ	16149	;# 
  6086   003F15                     SMT1CPRL        equ	16149	;# 
  6087   003F16                     SMT1CPRH        equ	16150	;# 
  6088   003F17                     SMT1CPRU        equ	16151	;# 
  6089   003F18                     SMT1CPW         equ	16152	;# 
  6090   003F18                     SMT1CPWL        equ	16152	;# 
  6091   003F19                     SMT1CPWH        equ	16153	;# 
  6092   003F1A                     SMT1CPWU        equ	16154	;# 
  6093   003F1B                     SMT1PR          equ	16155	;# 
  6094   003F1B                     SMT1PRL         equ	16155	;# 
  6095   003F1C                     SMT1PRH         equ	16156	;# 
  6096   003F1D                     SMT1PRU         equ	16157	;# 
  6097   003F1E                     SMT1CON0        equ	16158	;# 
  6098   003F1F                     SMT1CON1        equ	16159	;# 
  6099   003F20                     SMT1STAT        equ	16160	;# 
  6100   003F21                     SMT1CLK         equ	16161	;# 
  6101   003F22                     SMT1SIG         equ	16162	;# 
  6102   003F23                     SMT1WIN         equ	16163	;# 
  6103   003F38                     NCO1ACC         equ	16184	;# 
  6104   003F38                     NCO1ACCL        equ	16184	;# 
  6105   003F39                     NCO1ACCH        equ	16185	;# 
  6106   003F3A                     NCO1ACCU        equ	16186	;# 
  6107   003F3B                     NCO1INC         equ	16187	;# 
  6108   003F3B                     NCO1INCL        equ	16187	;# 
  6109   003F3C                     NCO1INCH        equ	16188	;# 
  6110   003F3D                     NCO1INCU        equ	16189	;# 
  6111   003F3E                     NCO1CON         equ	16190	;# 
  6112   003F3F                     NCO1CLK         equ	16191	;# 
  6113   003F40                     CWG3CLK         equ	16192	;# 
  6114   003F40                     CWG3CLKCON      equ	16192	;# 
  6115   003F41                     CWG3ISM         equ	16193	;# 
  6116   003F41                     CWG3DAT         equ	16193	;# 
  6117   003F42                     CWG3DBR         equ	16194	;# 
  6118   003F43                     CWG3DBF         equ	16195	;# 
  6119   003F44                     CWG3CON0        equ	16196	;# 
  6120   003F45                     CWG3CON1        equ	16197	;# 
  6121   003F46                     CWG3AS0         equ	16198	;# 
  6122   003F47                     CWG3AS1         equ	16199	;# 
  6123   003F48                     CWG3STR         equ	16200	;# 
  6124   003F49                     CWG2CLK         equ	16201	;# 
  6125   003F49                     CWG2CLKCON      equ	16201	;# 
  6126   003F4A                     CWG2ISM         equ	16202	;# 
  6127   003F4A                     CWG2DAT         equ	16202	;# 
  6128   003F4B                     CWG2DBR         equ	16203	;# 
  6129   003F4C                     CWG2DBF         equ	16204	;# 
  6130   003F4D                     CWG2CON0        equ	16205	;# 
  6131   003F4E                     CWG2CON1        equ	16206	;# 
  6132   003F4F                     CWG2AS0         equ	16207	;# 
  6133   003F50                     CWG2AS1         equ	16208	;# 
  6134   003F51                     CWG2STR         equ	16209	;# 
  6135   003F52                     CWG1CLK         equ	16210	;# 
  6136   003F52                     CWG1CLKCON      equ	16210	;# 
  6137   003F53                     CWG1ISM         equ	16211	;# 
  6138   003F53                     CWG1DAT         equ	16211	;# 
  6139   003F54                     CWG1DBR         equ	16212	;# 
  6140   003F55                     CWG1DBF         equ	16213	;# 
  6141   003F56                     CWG1CON0        equ	16214	;# 
  6142   003F57                     CWG1CON1        equ	16215	;# 
  6143   003F58                     CWG1AS0         equ	16216	;# 
  6144   003F59                     CWG1AS1         equ	16217	;# 
  6145   003F5A                     CWG1STR         equ	16218	;# 
  6146   003F5E                     CCPTMRS0        equ	16222	;# 
  6147   003F5F                     CCPTMRS1        equ	16223	;# 
  6148   003F60                     PWM8DC          equ	16224	;# 
  6149   003F60                     PWM8DCL         equ	16224	;# 
  6150   003F61                     PWM8DCH         equ	16225	;# 
  6151   003F62                     PWM8CON         equ	16226	;# 
  6152   003F64                     PWM7DC          equ	16228	;# 
  6153   003F64                     PWM7DCL         equ	16228	;# 
  6154   003F65                     PWM7DCH         equ	16229	;# 
  6155   003F66                     PWM7CON         equ	16230	;# 
  6156   003F68                     PWM6DC          equ	16232	;# 
  6157   003F68                     PWM6DCL         equ	16232	;# 
  6158   003F69                     PWM6DCH         equ	16233	;# 
  6159   003F6A                     PWM6CON         equ	16234	;# 
  6160   003F6C                     PWM5DC          equ	16236	;# 
  6161   003F6C                     PWM5DCL         equ	16236	;# 
  6162   003F6D                     PWM5DCH         equ	16237	;# 
  6163   003F6E                     PWM5CON         equ	16238	;# 
  6164   003F70                     CCPR4           equ	16240	;# 
  6165   003F70                     CCPR4L          equ	16240	;# 
  6166   003F71                     CCPR4H          equ	16241	;# 
  6167   003F72                     CCP4CON         equ	16242	;# 
  6168   003F73                     CCP4CAP         equ	16243	;# 
  6169   003F74                     CCPR3           equ	16244	;# 
  6170   003F74                     CCPR3L          equ	16244	;# 
  6171   003F75                     CCPR3H          equ	16245	;# 
  6172   003F76                     CCP3CON         equ	16246	;# 
  6173   003F77                     CCP3CAP         equ	16247	;# 
  6174   003F78                     CCPR2           equ	16248	;# 
  6175   003F78                     CCPR2L          equ	16248	;# 
  6176   003F79                     CCPR2H          equ	16249	;# 
  6177   003F7A                     CCP2CON         equ	16250	;# 
  6178   003F7B                     CCP2CAP         equ	16251	;# 
  6179   003F7C                     CCPR1           equ	16252	;# 
  6180   003F7C                     CCPR1L          equ	16252	;# 
  6181   003F7D                     CCPR1H          equ	16253	;# 
  6182   003F7E                     CCP1CON         equ	16254	;# 
  6183   003F7F                     CCP1CAP         equ	16255	;# 
  6184   003F92                     T6TMR           equ	16274	;# 
  6185   003F92                     TMR6            equ	16274	;# 
  6186   003F93                     T6PR            equ	16275	;# 
  6187   003F93                     PR6             equ	16275	;# 
  6188   003F94                     T6CON           equ	16276	;# 
  6189   003F95                     T6HLT           equ	16277	;# 
  6190   003F96                     T6CLKCON        equ	16278	;# 
  6191   003F96                     T6CLK           equ	16278	;# 
  6192   003F97                     T6RST           equ	16279	;# 
  6193   003F98                     TMR5            equ	16280	;# 
  6194   003F98                     TMR5L           equ	16280	;# 
  6195   003F99                     TMR5H           equ	16281	;# 
  6196   003F9A                     T5CON           equ	16282	;# 
  6197   003F9A                     TMR5CON         equ	16282	;# 
  6198   003F9B                     T5GCON          equ	16283	;# 
  6199   003F9B                     TMR5GCON        equ	16283	;# 
  6200   003F9C                     T5GATE          equ	16284	;# 
  6201   003F9C                     TMR5GATE        equ	16284	;# 
  6202   003F9D                     T5CLK           equ	16285	;# 
  6203   003F9D                     TMR5CLK         equ	16285	;# 
  6204   003F9D                     PR5             equ	16285	;# 
  6205   003F9E                     T4TMR           equ	16286	;# 
  6206   003F9E                     TMR4            equ	16286	;# 
  6207   003F9F                     T4PR            equ	16287	;# 
  6208   003F9F                     PR4             equ	16287	;# 
  6209   003FA0                     T4CON           equ	16288	;# 
  6210   003FA1                     T4HLT           equ	16289	;# 
  6211   003FA2                     T4CLKCON        equ	16290	;# 
  6212   003FA2                     T4CLK           equ	16290	;# 
  6213   003FA3                     T4RST           equ	16291	;# 
  6214   003FA4                     TMR3            equ	16292	;# 
  6215   003FA4                     TMR3L           equ	16292	;# 
  6216   003FA5                     TMR3H           equ	16293	;# 
  6217   003FA6                     T3CON           equ	16294	;# 
  6218   003FA6                     TMR3CON         equ	16294	;# 
  6219   003FA7                     T3GCON          equ	16295	;# 
  6220   003FA7                     TMR3GCON        equ	16295	;# 
  6221   003FA8                     T3GATE          equ	16296	;# 
  6222   003FA8                     TMR3GATE        equ	16296	;# 
  6223   003FA9                     T3CLK           equ	16297	;# 
  6224   003FA9                     TMR3CLK         equ	16297	;# 
  6225   003FA9                     PR3             equ	16297	;# 
  6226   003FAA                     T2TMR           equ	16298	;# 
  6227   003FAA                     TMR2            equ	16298	;# 
  6228   003FAB                     T2PR            equ	16299	;# 
  6229   003FAB                     PR2             equ	16299	;# 
  6230   003FAC                     T2CON           equ	16300	;# 
  6231   003FAD                     T2HLT           equ	16301	;# 
  6232   003FAE                     T2CLKCON        equ	16302	;# 
  6233   003FAE                     T2CLK           equ	16302	;# 
  6234   003FAF                     T2RST           equ	16303	;# 
  6235   003FB0                     TMR1            equ	16304	;# 
  6236   003FB0                     TMR1L           equ	16304	;# 
  6237   003FB1                     TMR1H           equ	16305	;# 
  6238   003FB2                     T1CON           equ	16306	;# 
  6239   003FB2                     TMR1CON         equ	16306	;# 
  6240   003FB3                     T1GCON          equ	16307	;# 
  6241   003FB3                     TMR1GCON        equ	16307	;# 
  6242   003FB4                     T1GATE          equ	16308	;# 
  6243   003FB4                     TMR1GATE        equ	16308	;# 
  6244   003FB5                     T1CLK           equ	16309	;# 
  6245   003FB5                     TMR1CLK         equ	16309	;# 
  6246   003FB5                     PR1             equ	16309	;# 
  6247   003FB6                     TMR0L           equ	16310	;# 
  6248   003FB6                     TMR0            equ	16310	;# 
  6249   003FB7                     TMR0H           equ	16311	;# 
  6250   003FB7                     PR0             equ	16311	;# 
  6251   003FB8                     T0CON0          equ	16312	;# 
  6252   003FB9                     T0CON1          equ	16313	;# 
  6253   003FBA                     LATA            equ	16314	;# 
  6254   003FBB                     LATB            equ	16315	;# 
  6255   003FBC                     LATC            equ	16316	;# 
  6256   003FBD                     LATD            equ	16317	;# 
  6257   003FBE                     LATE            equ	16318	;# 
  6258   003FBF                     LATF            equ	16319	;# 
  6259   003FC2                     TRISA           equ	16322	;# 
  6260   003FC3                     TRISB           equ	16323	;# 
  6261   003FC4                     TRISC           equ	16324	;# 
  6262   003FC5                     TRISD           equ	16325	;# 
  6263   003FC6                     TRISE           equ	16326	;# 
  6264   003FC7                     TRISF           equ	16327	;# 
  6265   003FCA                     PORTA           equ	16330	;# 
  6266   003FCB                     PORTB           equ	16331	;# 
  6267   003FCC                     PORTC           equ	16332	;# 
  6268   003FCD                     PORTD           equ	16333	;# 
  6269   003FCE                     PORTE           equ	16334	;# 
  6270   003FCF                     PORTF           equ	16335	;# 
  6271   003FD2                     INTCON0         equ	16338	;# 
  6272   003FD3                     INTCON1         equ	16339	;# 
  6273   003FD4                     IVTLOCK         equ	16340	;# 
  6274   003FD5                     IVTBASE         equ	16341	;# 
  6275   003FD5                     IVTBASEL        equ	16341	;# 
  6276   003FD6                     IVTBASEH        equ	16342	;# 
  6277   003FD7                     IVTBASEU        equ	16343	;# 
  6278   003FD8                     STATUS          equ	16344	;# 
  6279   003FD9                     FSR2            equ	16345	;# 
  6280   003FD9                     FSR2L           equ	16345	;# 
  6281   003FDA                     FSR2H           equ	16346	;# 
  6282   003FDB                     PLUSW2          equ	16347	;# 
  6283   003FDC                     PREINC2         equ	16348	;# 
  6284   003FDD                     POSTDEC2        equ	16349	;# 
  6285   003FDE                     POSTINC2        equ	16350	;# 
  6286   003FDF                     INDF2           equ	16351	;# 
  6287   003FE0                     BSR             equ	16352	;# 
  6288   003FE1                     FSR1            equ	16353	;# 
  6289   003FE1                     FSR1L           equ	16353	;# 
  6290   003FE2                     FSR1H           equ	16354	;# 
  6291   003FE3                     PLUSW1          equ	16355	;# 
  6292   003FE4                     PREINC1         equ	16356	;# 
  6293   003FE5                     POSTDEC1        equ	16357	;# 
  6294   003FE6                     POSTINC1        equ	16358	;# 
  6295   003FE7                     INDF1           equ	16359	;# 
  6296   003FE8                     WREG            equ	16360	;# 
  6297   003FE9                     FSR0            equ	16361	;# 
  6298   003FE9                     FSR0L           equ	16361	;# 
  6299   003FEA                     FSR0H           equ	16362	;# 
  6300   003FEB                     PLUSW0          equ	16363	;# 
  6301   003FEC                     PREINC0         equ	16364	;# 
  6302   003FED                     POSTDEC0        equ	16365	;# 
  6303   003FEE                     POSTINC0        equ	16366	;# 
  6304   003FEF                     INDF0           equ	16367	;# 
  6305   003FF0                     PCON0           equ	16368	;# 
  6306   003FF1                     PCON1           equ	16369	;# 
  6307   003FF3                     PROD            equ	16371	;# 
  6308   003FF3                     PRODL           equ	16371	;# 
  6309   003FF4                     PRODH           equ	16372	;# 
  6310   003FF5                     TABLAT          equ	16373	;# 
  6311   003FF6                     TBLPTR          equ	16374	;# 
  6312   003FF6                     TBLPTRL         equ	16374	;# 
  6313   003FF7                     TBLPTRH         equ	16375	;# 
  6314   003FF8                     TBLPTRU         equ	16376	;# 
  6315   003FF9                     PCLAT           equ	16377	;# 
  6316   003FF9                     PCL             equ	16377	;# 
  6317   003FFA                     PCLATH          equ	16378	;# 
  6318   003FFB                     PCLATU          equ	16379	;# 
  6319   003FFC                     STKPTR          equ	16380	;# 
  6320   003FFD                     TOS             equ	16381	;# 
  6321   003FFD                     TOSL            equ	16381	;# 
  6322   003FFE                     TOSH            equ	16382	;# 
  6323   003FFF                     TOSU            equ	16383	;# 
  6324   003880                     STATUS_CSHAD    equ	14464	;# 
  6325   003881                     WREG_CSHAD      equ	14465	;# 
  6326   003882                     BSR_CSHAD       equ	14466	;# 
  6327   003883                     SHADCON         equ	14467	;# 
  6328   003884                     STATUS_SHAD     equ	14468	;# 
  6329   003885                     WREG_SHAD       equ	14469	;# 
  6330   003886                     BSR_SHAD        equ	14470	;# 
  6331   003887                     PCLATH_SHAD     equ	14471	;# 
  6332   003888                     PCLATU_SHAD     equ	14472	;# 
  6333   003889                     FSR0SH          equ	14473	;# 
  6334   003889                     FSR0L_SHAD      equ	14473	;# 
  6335   00388A                     FSR0H_SHAD      equ	14474	;# 
  6336   00388B                     FSR1SH          equ	14475	;# 
  6337   00388B                     FSR1L_SHAD      equ	14475	;# 
  6338   00388C                     FSR1H_SHAD      equ	14476	;# 
  6339   00388D                     FSR2SH          equ	14477	;# 
  6340   00388D                     FSR2L_SHAD      equ	14477	;# 
  6341   00388E                     FSR2H_SHAD      equ	14478	;# 
  6342   00388F                     PRODSH          equ	14479	;# 
  6343   00388F                     PRODL_SHAD      equ	14479	;# 
  6344   003890                     PRODH_SHAD      equ	14480	;# 
  6345   00389D                     IVTADL          equ	14493	;# 
  6346   00389E                     IVTADH          equ	14494	;# 
  6347   00389F                     IVTADU          equ	14495	;# 
  6348   00395B                     WDTCON0         equ	14683	;# 
  6349   00395C                     WDTCON1         equ	14684	;# 
  6350   00395D                     WDTPSL          equ	14685	;# 
  6351   00395E                     WDTPSH          equ	14686	;# 
  6352   00395F                     WDTTMR          equ	14687	;# 
  6353   003960                     CRCDATA         equ	14688	;# 
  6354   003960                     CRCDATL         equ	14688	;# 
  6355   003961                     CRCDATH         equ	14689	;# 
  6356   003962                     CRCACC          equ	14690	;# 
  6357   003962                     CRCACCL         equ	14690	;# 
  6358   003963                     CRCACCH         equ	14691	;# 
  6359   003964                     CRCSHFT         equ	14692	;# 
  6360   003964                     CRCSHIFTL       equ	14692	;# 
  6361   003965                     CRCSHIFTH       equ	14693	;# 
  6362   003966                     CRCXOR          equ	14694	;# 
  6363   003966                     CRCXORL         equ	14694	;# 
  6364   003967                     CRCXORH         equ	14695	;# 
  6365   003968                     CRCCON0         equ	14696	;# 
  6366   003969                     CRCCON1         equ	14697	;# 
  6367   003976                     SCANLADR        equ	14710	;# 
  6368   003976                     SCANLADRL       equ	14710	;# 
  6369   003977                     SCANLADRH       equ	14711	;# 
  6370   003978                     SCANLADRU       equ	14712	;# 
  6371   003979                     SCANHADR        equ	14713	;# 
  6372   003979                     SCANHADRL       equ	14713	;# 
  6373   00397A                     SCANHADRH       equ	14714	;# 
  6374   00397B                     SCANHADRU       equ	14715	;# 
  6375   00397C                     SCANCON0        equ	14716	;# 
  6376   00397D                     SCANTRIG        equ	14717	;# 
  6377   003980                     IPR0            equ	14720	;# 
  6378   003981                     IPR1            equ	14721	;# 
  6379   003982                     IPR2            equ	14722	;# 
  6380   003983                     IPR3            equ	14723	;# 
  6381   003984                     IPR4            equ	14724	;# 
  6382   003985                     IPR5            equ	14725	;# 
  6383   003986                     IPR6            equ	14726	;# 
  6384   003987                     IPR7            equ	14727	;# 
  6385   003988                     IPR8            equ	14728	;# 
  6386   003989                     IPR9            equ	14729	;# 
  6387   00398A                     IPR10           equ	14730	;# 
  6388   003990                     PIE0            equ	14736	;# 
  6389   003991                     PIE1            equ	14737	;# 
  6390   003992                     PIE2            equ	14738	;# 
  6391   003993                     PIE3            equ	14739	;# 
  6392   003994                     PIE4            equ	14740	;# 
  6393   003995                     PIE5            equ	14741	;# 
  6394   003996                     PIE6            equ	14742	;# 
  6395   003997                     PIE7            equ	14743	;# 
  6396   003998                     PIE8            equ	14744	;# 
  6397   003999                     PIE9            equ	14745	;# 
  6398   00399A                     PIE10           equ	14746	;# 
  6399   0039A0                     PIR0            equ	14752	;# 
  6400   0039A1                     PIR1            equ	14753	;# 
  6401   0039A2                     PIR2            equ	14754	;# 
  6402   0039A3                     PIR3            equ	14755	;# 
  6403   0039A4                     PIR4            equ	14756	;# 
  6404   0039A5                     PIR5            equ	14757	;# 
  6405   0039A6                     PIR6            equ	14758	;# 
  6406   0039A7                     PIR7            equ	14759	;# 
  6407   0039A8                     PIR8            equ	14760	;# 
  6408   0039A9                     PIR9            equ	14761	;# 
  6409   0039AA                     PIR10           equ	14762	;# 
  6410   0039C0                     PMD0            equ	14784	;# 
  6411   0039C1                     PMD1            equ	14785	;# 
  6412   0039C2                     PMD2            equ	14786	;# 
  6413   0039C3                     PMD3            equ	14787	;# 
  6414   0039C4                     PMD4            equ	14788	;# 
  6415   0039C5                     PMD5            equ	14789	;# 
  6416   0039C6                     PMD6            equ	14790	;# 
  6417   0039C7                     PMD7            equ	14791	;# 
  6418   0039D0                     BORCON          equ	14800	;# 
  6419   0039D1                     VREGCON         equ	14801	;# 
  6420   0039D8                     CPUDOZE         equ	14808	;# 
  6421   0039D9                     OSCCON1         equ	14809	;# 
  6422   0039DA                     OSCCON2         equ	14810	;# 
  6423   0039DB                     OSCCON3         equ	14811	;# 
  6424   0039DC                     OSCSTAT         equ	14812	;# 
  6425   0039DC                     OSCSTAT1        equ	14812	;# 
  6426   0039DD                     OSCEN           equ	14813	;# 
  6427   0039DE                     OSCTUNE         equ	14814	;# 
  6428   0039DF                     OSCFRQ          equ	14815	;# 
  6429   0039E0                     NVMADRL         equ	14816	;# 
  6430   0039E1                     NVMADRH         equ	14817	;# 
  6431   0039E3                     NVMDAT          equ	14819	;# 
  6432   0039E5                     NVMCON1         equ	14821	;# 
  6433   0039E6                     NVMCON2         equ	14822	;# 
  6434   0039EF                     PRLOCK          equ	14831	;# 
  6435   0039F1                     ISRPR           equ	14833	;# 
  6436   0039F2                     MAINPR          equ	14834	;# 
  6437   0039F3                     DMA1PR          equ	14835	;# 
  6438   0039F4                     DMA2PR          equ	14836	;# 
  6439   0039F7                     SCANPR          equ	14839	;# 
  6440   003A00                     RA0PPS          equ	14848	;# 
  6441   003A01                     RA1PPS          equ	14849	;# 
  6442   003A02                     RA2PPS          equ	14850	;# 
  6443   003A03                     RA3PPS          equ	14851	;# 
  6444   003A04                     RA4PPS          equ	14852	;# 
  6445   003A05                     RA5PPS          equ	14853	;# 
  6446   003A06                     RA6PPS          equ	14854	;# 
  6447   003A07                     RA7PPS          equ	14855	;# 
  6448   003A08                     RB0PPS          equ	14856	;# 
  6449   003A09                     RB1PPS          equ	14857	;# 
  6450   003A0A                     RB2PPS          equ	14858	;# 
  6451   003A0B                     RB3PPS          equ	14859	;# 
  6452   003A0C                     RB4PPS          equ	14860	;# 
  6453   003A0D                     RB5PPS          equ	14861	;# 
  6454   003A0E                     RB6PPS          equ	14862	;# 
  6455   003A0F                     RB7PPS          equ	14863	;# 
  6456   003A10                     RC0PPS          equ	14864	;# 
  6457   003A11                     RC1PPS          equ	14865	;# 
  6458   003A12                     RC2PPS          equ	14866	;# 
  6459   003A13                     RC3PPS          equ	14867	;# 
  6460   003A14                     RC4PPS          equ	14868	;# 
  6461   003A15                     RC5PPS          equ	14869	;# 
  6462   003A16                     RC6PPS          equ	14870	;# 
  6463   003A17                     RC7PPS          equ	14871	;# 
  6464   003A18                     RD0PPS          equ	14872	;# 
  6465   003A19                     RD1PPS          equ	14873	;# 
  6466   003A1A                     RD2PPS          equ	14874	;# 
  6467   003A1B                     RD3PPS          equ	14875	;# 
  6468   003A1C                     RD4PPS          equ	14876	;# 
  6469   003A1D                     RD5PPS          equ	14877	;# 
  6470   003A1E                     RD6PPS          equ	14878	;# 
  6471   003A1F                     RD7PPS          equ	14879	;# 
  6472   003A20                     RE0PPS          equ	14880	;# 
  6473   003A21                     RE1PPS          equ	14881	;# 
  6474   003A22                     RE2PPS          equ	14882	;# 
  6475   003A28                     RF0PPS          equ	14888	;# 
  6476   003A29                     RF1PPS          equ	14889	;# 
  6477   003A2A                     RF2PPS          equ	14890	;# 
  6478   003A2B                     RF3PPS          equ	14891	;# 
  6479   003A2C                     RF4PPS          equ	14892	;# 
  6480   003A2D                     RF5PPS          equ	14893	;# 
  6481   003A2E                     RF6PPS          equ	14894	;# 
  6482   003A2F                     RF7PPS          equ	14895	;# 
  6483   003A40                     ANSELA          equ	14912	;# 
  6484   003A41                     WPUA            equ	14913	;# 
  6485   003A42                     ODCONA          equ	14914	;# 
  6486   003A43                     SLRCONA         equ	14915	;# 
  6487   003A44                     INLVLA          equ	14916	;# 
  6488   003A45                     IOCAP           equ	14917	;# 
  6489   003A46                     IOCAN           equ	14918	;# 
  6490   003A47                     IOCAF           equ	14919	;# 
  6491   003A50                     ANSELB          equ	14928	;# 
  6492   003A51                     WPUB            equ	14929	;# 
  6493   003A52                     ODCONB          equ	14930	;# 
  6494   003A53                     SLRCONB         equ	14931	;# 
  6495   003A54                     INLVLB          equ	14932	;# 
  6496   003A55                     IOCBP           equ	14933	;# 
  6497   003A56                     IOCBN           equ	14934	;# 
  6498   003A57                     IOCBF           equ	14935	;# 
  6499   003A5A                     RB1I2C          equ	14938	;# 
  6500   003A5B                     RB2I2C          equ	14939	;# 
  6501   003A60                     ANSELC          equ	14944	;# 
  6502   003A61                     WPUC            equ	14945	;# 
  6503   003A62                     ODCONC          equ	14946	;# 
  6504   003A63                     SLRCONC         equ	14947	;# 
  6505   003A64                     INLVLC          equ	14948	;# 
  6506   003A65                     IOCCP           equ	14949	;# 
  6507   003A66                     IOCCN           equ	14950	;# 
  6508   003A67                     IOCCF           equ	14951	;# 
  6509   003A6A                     RC3I2C          equ	14954	;# 
  6510   003A6B                     RC4I2C          equ	14955	;# 
  6511   003A70                     ANSELD          equ	14960	;# 
  6512   003A71                     WPUD            equ	14961	;# 
  6513   003A72                     ODCOND          equ	14962	;# 
  6514   003A73                     SLRCOND         equ	14963	;# 
  6515   003A74                     INLVLD          equ	14964	;# 
  6516   003A7A                     RD0I2C          equ	14970	;# 
  6517   003A7B                     RD1I2C          equ	14971	;# 
  6518   003A80                     ANSELE          equ	14976	;# 
  6519   003A81                     WPUE            equ	14977	;# 
  6520   003A82                     ODCONE          equ	14978	;# 
  6521   003A83                     SLRCONE         equ	14979	;# 
  6522   003A84                     INLVLE          equ	14980	;# 
  6523   003A85                     IOCEP           equ	14981	;# 
  6524   003A86                     IOCEN           equ	14982	;# 
  6525   003A87                     IOCEF           equ	14983	;# 
  6526   003A90                     ANSELF          equ	14992	;# 
  6527   003A91                     WPUF            equ	14993	;# 
  6528   003A92                     ODCONF          equ	14994	;# 
  6529   003A93                     SLRCONF         equ	14995	;# 
  6530   003A94                     INLVLF          equ	14996	;# 
  6531   003ABF                     PPSLOCK         equ	15039	;# 
  6532   003AC0                     INT0PPS         equ	15040	;# 
  6533   003AC1                     INT1PPS         equ	15041	;# 
  6534   003AC2                     INT2PPS         equ	15042	;# 
  6535   003AC3                     T0CKIPPS        equ	15043	;# 
  6536   003AC4                     T1CKIPPS        equ	15044	;# 
  6537   003AC5                     T1GPPS          equ	15045	;# 
  6538   003AC6                     T3CKIPPS        equ	15046	;# 
  6539   003AC7                     T3GPPS          equ	15047	;# 
  6540   003AC8                     T5CKIPPS        equ	15048	;# 
  6541   003AC9                     T5GPPS          equ	15049	;# 
  6542   003ACA                     T2INPPS         equ	15050	;# 
  6543   003ACB                     T4INPPS         equ	15051	;# 
  6544   003ACC                     T6INPPS         equ	15052	;# 
  6545   003ACD                     CCP1PPS         equ	15053	;# 
  6546   003ACE                     CCP2PPS         equ	15054	;# 
  6547   003ACF                     CCP3PPS         equ	15055	;# 
  6548   003AD0                     CCP4PPS         equ	15056	;# 
  6549   003AD1                     SMT1WINPPS      equ	15057	;# 
  6550   003AD2                     SMT1SIGPPS      equ	15058	;# 
  6551   003AD3                     CWG1INPPS       equ	15059	;# 
  6552   003AD4                     CWG2INPPS       equ	15060	;# 
  6553   003AD5                     CWG3INPPS       equ	15061	;# 
  6554   003AD6                     MD1CARLPPS      equ	15062	;# 
  6555   003AD7                     MD1CARHPPS      equ	15063	;# 
  6556   003AD8                     MD1SRCPPS       equ	15064	;# 
  6557   003AD9                     CLCIN0PPS       equ	15065	;# 
  6558   003ADA                     CLCIN1PPS       equ	15066	;# 
  6559   003ADB                     CLCIN2PPS       equ	15067	;# 
  6560   003ADC                     CLCIN3PPS       equ	15068	;# 
  6561   003ADD                     ADACTPPS        equ	15069	;# 
  6562   003ADE                     SPI1SCKPPS      equ	15070	;# 
  6563   003ADF                     SPI1SDIPPS      equ	15071	;# 
  6564   003AE0                     SPI1SSPPS       equ	15072	;# 
  6565   003AE1                     I2C1SCLPPS      equ	15073	;# 
  6566   003AE2                     I2C1SDAPPS      equ	15074	;# 
  6567   003AE3                     I2C2SCLPPS      equ	15075	;# 
  6568   003AE4                     I2C2SDAPPS      equ	15076	;# 
  6569   003AE5                     U1RXPPS         equ	15077	;# 
  6570   003AE6                     U1CTSPPS        equ	15078	;# 
  6571   003AE8                     U2RXPPS         equ	15080	;# 
  6572   003AE9                     U2CTSPPS        equ	15081	;# 
  6573   003BC9                     DMA2BUF         equ	15305	;# 
  6574   003BCA                     DMA2DCNT        equ	15306	;# 
  6575   003BCA                     DMA2DCNTL       equ	15306	;# 
  6576   003BCB                     DMA2DCNTH       equ	15307	;# 
  6577   003BCC                     DMA2DPTR        equ	15308	;# 
  6578   003BCC                     DMA2DPTRL       equ	15308	;# 
  6579   003BCD                     DMA2DPTRH       equ	15309	;# 
  6580   003BCE                     DMA2DSZ         equ	15310	;# 
  6581   003BCE                     DMA2DSZL        equ	15310	;# 
  6582   003BCF                     DMA2DSZH        equ	15311	;# 
  6583   003BD0                     DMA2DSA         equ	15312	;# 
  6584   003BD0                     DMA2DSAL        equ	15312	;# 
  6585   003BD1                     DMA2DSAH        equ	15313	;# 
  6586   003BD2                     DMA2SCNT        equ	15314	;# 
  6587   003BD2                     DMA2SCNTL       equ	15314	;# 
  6588   003BD3                     DMA2SCNTH       equ	15315	;# 
  6589   003BD4                     DMA2SPTR        equ	15316	;# 
  6590   003BD4                     DMA2SPTRL       equ	15316	;# 
  6591   003BD5                     DMA2SPTRH       equ	15317	;# 
  6592   003BD6                     DMA2SPTRU       equ	15318	;# 
  6593   003BD7                     DMA2SSZ         equ	15319	;# 
  6594   003BD7                     DMA2SSZL        equ	15319	;# 
  6595   003BD8                     DMA2SSZH        equ	15320	;# 
  6596   003BD9                     DMA2SSA         equ	15321	;# 
  6597   003BD9                     DMA2SSAL        equ	15321	;# 
  6598   003BDA                     DMA2SSAH        equ	15322	;# 
  6599   003BDB                     DMA2SSAU        equ	15323	;# 
  6600   003BDC                     DMA2CON0        equ	15324	;# 
  6601   003BDD                     DMA2CON1        equ	15325	;# 
  6602   003BDE                     DMA2AIRQ        equ	15326	;# 
  6603   003BDF                     DMA2SIRQ        equ	15327	;# 
  6604   003BE9                     DMA1BUF         equ	15337	;# 
  6605   003BEA                     DMA1DCNT        equ	15338	;# 
  6606   003BEA                     DMA1DCNTL       equ	15338	;# 
  6607   003BEB                     DMA1DCNTH       equ	15339	;# 
  6608   003BEC                     DMA1DPTR        equ	15340	;# 
  6609   003BEC                     DMA1DPTRL       equ	15340	;# 
  6610   003BED                     DMA1DPTRH       equ	15341	;# 
  6611   003BEE                     DMA1DSZ         equ	15342	;# 
  6612   003BEE                     DMA1DSZL        equ	15342	;# 
  6613   003BEF                     DMA1DSZH        equ	15343	;# 
  6614   003BF0                     DMA1DSA         equ	15344	;# 
  6615   003BF0                     DMA1DSAL        equ	15344	;# 
  6616   003BF1                     DMA1DSAH        equ	15345	;# 
  6617   003BF2                     DMA1SCNT        equ	15346	;# 
  6618   003BF2                     DMA1SCNTL       equ	15346	;# 
  6619   003BF3                     DMA1SCNTH       equ	15347	;# 
  6620   003BF4                     DMA1SPTR        equ	15348	;# 
  6621   003BF4                     DMA1SPTRL       equ	15348	;# 
  6622   003BF5                     DMA1SPTRH       equ	15349	;# 
  6623   003BF6                     DMA1SPTRU       equ	15350	;# 
  6624   003BF7                     DMA1SSZ         equ	15351	;# 
  6625   003BF7                     DMA1SSZL        equ	15351	;# 
  6626   003BF8                     DMA1SSZH        equ	15352	;# 
  6627   003BF9                     DMA1SSA         equ	15353	;# 
  6628   003BF9                     DMA1SSAL        equ	15353	;# 
  6629   003BFA                     DMA1SSAH        equ	15354	;# 
  6630   003BFB                     DMA1SSAU        equ	15355	;# 
  6631   003BFC                     DMA1CON0        equ	15356	;# 
  6632   003BFD                     DMA1CON1        equ	15357	;# 
  6633   003BFE                     DMA1AIRQ        equ	15358	;# 
  6634   003BFF                     DMA1SIRQ        equ	15359	;# 
  6635   003C56                     CLC4CON         equ	15446	;# 
  6636   003C57                     CLC4POL         equ	15447	;# 
  6637   003C58                     CLC4SEL0        equ	15448	;# 
  6638   003C59                     CLC4SEL1        equ	15449	;# 
  6639   003C5A                     CLC4SEL2        equ	15450	;# 
  6640   003C5B                     CLC4SEL3        equ	15451	;# 
  6641   003C5C                     CLC4GLS0        equ	15452	;# 
  6642   003C5D                     CLC4GLS1        equ	15453	;# 
  6643   003C5E                     CLC4GLS2        equ	15454	;# 
  6644   003C5F                     CLC4GLS3        equ	15455	;# 
  6645   003C60                     CLC3CON         equ	15456	;# 
  6646   003C61                     CLC3POL         equ	15457	;# 
  6647   003C62                     CLC3SEL0        equ	15458	;# 
  6648   003C63                     CLC3SEL1        equ	15459	;# 
  6649   003C64                     CLC3SEL2        equ	15460	;# 
  6650   003C65                     CLC3SEL3        equ	15461	;# 
  6651   003C66                     CLC3GLS0        equ	15462	;# 
  6652   003C67                     CLC3GLS1        equ	15463	;# 
  6653   003C68                     CLC3GLS2        equ	15464	;# 
  6654   003C69                     CLC3GLS3        equ	15465	;# 
  6655   003C6A                     CLC2CON         equ	15466	;# 
  6656   003C6B                     CLC2POL         equ	15467	;# 
  6657   003C6C                     CLC2SEL0        equ	15468	;# 
  6658   003C6D                     CLC2SEL1        equ	15469	;# 
  6659   003C6E                     CLC2SEL2        equ	15470	;# 
  6660   003C6F                     CLC2SEL3        equ	15471	;# 
  6661   003C70                     CLC2GLS0        equ	15472	;# 
  6662   003C71                     CLC2GLS1        equ	15473	;# 
  6663   003C72                     CLC2GLS2        equ	15474	;# 
  6664   003C73                     CLC2GLS3        equ	15475	;# 
  6665   003C74                     CLC1CON         equ	15476	;# 
  6666   003C75                     CLC1POL         equ	15477	;# 
  6667   003C76                     CLC1SEL0        equ	15478	;# 
  6668   003C77                     CLC1SEL1        equ	15479	;# 
  6669   003C78                     CLC1SEL2        equ	15480	;# 
  6670   003C79                     CLC1SEL3        equ	15481	;# 
  6671   003C7A                     CLC1GLS0        equ	15482	;# 
  6672   003C7B                     CLC1GLS1        equ	15483	;# 
  6673   003C7C                     CLC1GLS2        equ	15484	;# 
  6674   003C7D                     CLC1GLS3        equ	15485	;# 
  6675   003C7E                     CLCDATA0        equ	15486	;# 
  6676   003CE5                     CLKRCON         equ	15589	;# 
  6677   003CE6                     CLKRCLK         equ	15590	;# 
  6678   003CFA                     MD1CON0         equ	15610	;# 
  6679   003CFB                     MD1CON1         equ	15611	;# 
  6680   003CFC                     MD1SRC          equ	15612	;# 
  6681   003CFD                     MD1CARL         equ	15613	;# 
  6682   003CFE                     MD1CARH         equ	15614	;# 
  6683   003D10                     SPI1RXB         equ	15632	;# 
  6684   003D11                     SPI1TXB         equ	15633	;# 
  6685   003D12                     SPI1TCNT        equ	15634	;# 
  6686   003D12                     SPI1TCNTL       equ	15634	;# 
  6687   003D13                     SPI1TCNTH       equ	15635	;# 
  6688   003D14                     SPI1CON0        equ	15636	;# 
  6689   003D15                     SPI1CON1        equ	15637	;# 
  6690   003D16                     SPI1CON2        equ	15638	;# 
  6691   003D17                     SPI1STATUS      equ	15639	;# 
  6692   003D18                     SPI1TWIDTH      equ	15640	;# 
  6693   003D19                     SPI1BAUD        equ	15641	;# 
  6694   003D1A                     SPI1INTF        equ	15642	;# 
  6695   003D1B                     SPI1INTE        equ	15643	;# 
  6696   003D1C                     SPI1CLK         equ	15644	;# 
  6697   003D54                     I2C2RXB         equ	15700	;# 
  6698   003D55                     I2C2TXB         equ	15701	;# 
  6699   003D56                     I2C2CNT         equ	15702	;# 
  6700   003D57                     I2C2ADB0        equ	15703	;# 
  6701   003D58                     I2C2ADB1        equ	15704	;# 
  6702   003D59                     I2C2ADR0        equ	15705	;# 
  6703   003D5A                     I2C2ADR1        equ	15706	;# 
  6704   003D5B                     I2C2ADR2        equ	15707	;# 
  6705   003D5C                     I2C2ADR3        equ	15708	;# 
  6706   003D5D                     I2C2CON0        equ	15709	;# 
  6707   003D5E                     I2C2CON1        equ	15710	;# 
  6708   003D5F                     I2C2CON2        equ	15711	;# 
  6709   003D60                     I2C2ERR         equ	15712	;# 
  6710   003D61                     I2C2STAT0       equ	15713	;# 
  6711   003D62                     I2C2STAT1       equ	15714	;# 
  6712   003D63                     I2C2PIR         equ	15715	;# 
  6713   003D64                     I2C2PIE         equ	15716	;# 
  6714   003D65                     I2C2CLK         equ	15717	;# 
  6715   003D66                     I2C2BTO         equ	15718	;# 
  6716   003D6A                     I2C1RXB         equ	15722	;# 
  6717   003D6B                     I2C1TXB         equ	15723	;# 
  6718   003D6C                     I2C1CNT         equ	15724	;# 
  6719   003D6D                     I2C1ADB0        equ	15725	;# 
  6720   003D6E                     I2C1ADB1        equ	15726	;# 
  6721   003D6F                     I2C1ADR0        equ	15727	;# 
  6722   003D70                     I2C1ADR1        equ	15728	;# 
  6723   003D71                     I2C1ADR2        equ	15729	;# 
  6724   003D72                     I2C1ADR3        equ	15730	;# 
  6725   003D73                     I2C1CON0        equ	15731	;# 
  6726   003D74                     I2C1CON1        equ	15732	;# 
  6727   003D75                     I2C1CON2        equ	15733	;# 
  6728   003D76                     I2C1ERR         equ	15734	;# 
  6729   003D77                     I2C1STAT0       equ	15735	;# 
  6730   003D78                     I2C1STAT1       equ	15736	;# 
  6731   003D79                     I2C1PIR         equ	15737	;# 
  6732   003D7A                     I2C1PIE         equ	15738	;# 
  6733   003D7B                     I2C1CLK         equ	15739	;# 
  6734   003D7C                     I2C1BTO         equ	15740	;# 
  6735   003DD0                     U2RXB           equ	15824	;# 
  6736   003DD0                     U2RXBL          equ	15824	;# 
  6737   003DD2                     U2TXB           equ	15826	;# 
  6738   003DD2                     U2TXBL          equ	15826	;# 
  6739   003DD4                     U2P1            equ	15828	;# 
  6740   003DD4                     U2P1L           equ	15828	;# 
  6741   003DD6                     U2P2            equ	15830	;# 
  6742   003DD6                     U2P2L           equ	15830	;# 
  6743   003DD8                     U2P3            equ	15832	;# 
  6744   003DD8                     U2P3L           equ	15832	;# 
  6745   003DDA                     U2CON0          equ	15834	;# 
  6746   003DDB                     U2CON1          equ	15835	;# 
  6747   003DDC                     U2CON2          equ	15836	;# 
  6748   003DDD                     U2BRG           equ	15837	;# 
  6749   003DDD                     U2BRGL          equ	15837	;# 
  6750   003DDE                     U2BRGH          equ	15838	;# 
  6751   003DDF                     U2FIFO          equ	15839	;# 
  6752   003DE0                     U2UIR           equ	15840	;# 
  6753   003DE1                     U2ERRIR         equ	15841	;# 
  6754   003DE2                     U2ERRIE         equ	15842	;# 
  6755   003DE8                     U1RXB           equ	15848	;# 
  6756   003DE8                     U1RXBL          equ	15848	;# 
  6757   003DE9                     U1RXCHK         equ	15849	;# 
  6758   003DEA                     U1TXB           equ	15850	;# 
  6759   003DEA                     U1TXBL          equ	15850	;# 
  6760   003DEB                     U1TXCHK         equ	15851	;# 
  6761   003DEC                     U1P1            equ	15852	;# 
  6762   003DEC                     U1P1L           equ	15852	;# 
  6763   003DED                     U1P1H           equ	15853	;# 
  6764   003DEE                     U1P2            equ	15854	;# 
  6765   003DEE                     U1P2L           equ	15854	;# 
  6766   003DEF                     U1P2H           equ	15855	;# 
  6767   003DF0                     U1P3            equ	15856	;# 
  6768   003DF0                     U1P3L           equ	15856	;# 
  6769   003DF1                     U1P3H           equ	15857	;# 
  6770   003DF2                     U1CON0          equ	15858	;# 
  6771   003DF3                     U1CON1          equ	15859	;# 
  6772   003DF4                     U1CON2          equ	15860	;# 
  6773   003DF5                     U1BRG           equ	15861	;# 
  6774   003DF5                     U1BRGL          equ	15861	;# 
  6775   003DF6                     U1BRGH          equ	15862	;# 
  6776   003DF7                     U1FIFO          equ	15863	;# 
  6777   003DF8                     U1UIR           equ	15864	;# 
  6778   003DF9                     U1ERRIR         equ	15865	;# 
  6779   003DFA                     U1ERRIE         equ	15866	;# 
  6780   003E9C                     DAC1CON1        equ	16028	;# 
  6781   003E9E                     DAC1CON0        equ	16030	;# 
  6782   003EB8                     CM2CON0         equ	16056	;# 
  6783   003EB9                     CM2CON1         equ	16057	;# 
  6784   003EBA                     CM2NCH          equ	16058	;# 
  6785   003EBB                     CM2PCH          equ	16059	;# 
  6786   003EBC                     CM1CON0         equ	16060	;# 
  6787   003EBD                     CM1CON1         equ	16061	;# 
  6788   003EBE                     CM1NCH          equ	16062	;# 
  6789   003EBF                     CM1PCH          equ	16063	;# 
  6790   003EC0                     CMOUT           equ	16064	;# 
  6791   003EC1                     FVRCON          equ	16065	;# 
  6792   003EC3                     ZCDCON          equ	16067	;# 
  6793   003EC9                     HLVDCON0        equ	16073	;# 
  6794   003ECA                     HLVDCON1        equ	16074	;# 
  6795   003ED7                     ADCP            equ	16087	;# 
  6796   003EDE                     ADLTH           equ	16094	;# 
  6797   003EDE                     ADLTHL          equ	16094	;# 
  6798   003EDF                     ADLTHH          equ	16095	;# 
  6799   003EE0                     ADUTH           equ	16096	;# 
  6800   003EE0                     ADUTHL          equ	16096	;# 
  6801   003EE1                     ADUTHH          equ	16097	;# 
  6802   003EE2                     ADERR           equ	16098	;# 
  6803   003EE2                     ADERRL          equ	16098	;# 
  6804   003EE3                     ADERRH          equ	16099	;# 
  6805   003EE4                     ADSTPT          equ	16100	;# 
  6806   003EE4                     ADSTPTL         equ	16100	;# 
  6807   003EE5                     ADSTPTH         equ	16101	;# 
  6808   003EE6                     ADFLTR          equ	16102	;# 
  6809   003EE6                     ADFLTRL         equ	16102	;# 
  6810   003EE7                     ADFLTRH         equ	16103	;# 
  6811   003EE8                     ADACC           equ	16104	;# 
  6812   003EE8                     ADACCL          equ	16104	;# 
  6813   003EE9                     ADACCH          equ	16105	;# 
  6814   003EEA                     ADACCU          equ	16106	;# 
  6815   003EEB                     ADCNT           equ	16107	;# 
  6816   003EEC                     ADRPT           equ	16108	;# 
  6817   003EED                     ADPREV          equ	16109	;# 
  6818   003EED                     ADPREVL         equ	16109	;# 
  6819   003EEE                     ADPREVH         equ	16110	;# 
  6820   003EEF                     ADRES           equ	16111	;# 
  6821   003EEF                     ADRESL          equ	16111	;# 
  6822   003EF0                     ADRESH          equ	16112	;# 
  6823   003EF1                     ADPCH           equ	16113	;# 
  6824   003EF3                     ADACQ           equ	16115	;# 
  6825   003EF3                     ADACQL          equ	16115	;# 
  6826   003EF4                     ADACQH          equ	16116	;# 
  6827   003EF5                     ADCAP           equ	16117	;# 
  6828   003EF6                     ADPRE           equ	16118	;# 
  6829   003EF6                     ADPREL          equ	16118	;# 
  6830   003EF7                     ADPREH          equ	16119	;# 
  6831   003EF8                     ADCON0          equ	16120	;# 
  6832   003EF9                     ADCON1          equ	16121	;# 
  6833   003EFA                     ADCON2          equ	16122	;# 
  6834   003EFB                     ADCON3          equ	16123	;# 
  6835   003EFC                     ADSTAT          equ	16124	;# 
  6836   003EFD                     ADREF           equ	16125	;# 
  6837   003EFE                     ADACT           equ	16126	;# 
  6838   003EFF                     ADCLK           equ	16127	;# 
  6839   003F12                     SMT1TMR         equ	16146	;# 
  6840   003F12                     SMT1TMRL        equ	16146	;# 
  6841   003F13                     SMT1TMRH        equ	16147	;# 
  6842   003F14                     SMT1TMRU        equ	16148	;# 
  6843   003F15                     SMT1CPR         equ	16149	;# 
  6844   003F15                     SMT1CPRL        equ	16149	;# 
  6845   003F16                     SMT1CPRH        equ	16150	;# 
  6846   003F17                     SMT1CPRU        equ	16151	;# 
  6847   003F18                     SMT1CPW         equ	16152	;# 
  6848   003F18                     SMT1CPWL        equ	16152	;# 
  6849   003F19                     SMT1CPWH        equ	16153	;# 
  6850   003F1A                     SMT1CPWU        equ	16154	;# 
  6851   003F1B                     SMT1PR          equ	16155	;# 
  6852   003F1B                     SMT1PRL         equ	16155	;# 
  6853   003F1C                     SMT1PRH         equ	16156	;# 
  6854   003F1D                     SMT1PRU         equ	16157	;# 
  6855   003F1E                     SMT1CON0        equ	16158	;# 
  6856   003F1F                     SMT1CON1        equ	16159	;# 
  6857   003F20                     SMT1STAT        equ	16160	;# 
  6858   003F21                     SMT1CLK         equ	16161	;# 
  6859   003F22                     SMT1SIG         equ	16162	;# 
  6860   003F23                     SMT1WIN         equ	16163	;# 
  6861   003F38                     NCO1ACC         equ	16184	;# 
  6862   003F38                     NCO1ACCL        equ	16184	;# 
  6863   003F39                     NCO1ACCH        equ	16185	;# 
  6864   003F3A                     NCO1ACCU        equ	16186	;# 
  6865   003F3B                     NCO1INC         equ	16187	;# 
  6866   003F3B                     NCO1INCL        equ	16187	;# 
  6867   003F3C                     NCO1INCH        equ	16188	;# 
  6868   003F3D                     NCO1INCU        equ	16189	;# 
  6869   003F3E                     NCO1CON         equ	16190	;# 
  6870   003F3F                     NCO1CLK         equ	16191	;# 
  6871   003F40                     CWG3CLK         equ	16192	;# 
  6872   003F40                     CWG3CLKCON      equ	16192	;# 
  6873   003F41                     CWG3ISM         equ	16193	;# 
  6874   003F41                     CWG3DAT         equ	16193	;# 
  6875   003F42                     CWG3DBR         equ	16194	;# 
  6876   003F43                     CWG3DBF         equ	16195	;# 
  6877   003F44                     CWG3CON0        equ	16196	;# 
  6878   003F45                     CWG3CON1        equ	16197	;# 
  6879   003F46                     CWG3AS0         equ	16198	;# 
  6880   003F47                     CWG3AS1         equ	16199	;# 
  6881   003F48                     CWG3STR         equ	16200	;# 
  6882   003F49                     CWG2CLK         equ	16201	;# 
  6883   003F49                     CWG2CLKCON      equ	16201	;# 
  6884   003F4A                     CWG2ISM         equ	16202	;# 
  6885   003F4A                     CWG2DAT         equ	16202	;# 
  6886   003F4B                     CWG2DBR         equ	16203	;# 
  6887   003F4C                     CWG2DBF         equ	16204	;# 
  6888   003F4D                     CWG2CON0        equ	16205	;# 
  6889   003F4E                     CWG2CON1        equ	16206	;# 
  6890   003F4F                     CWG2AS0         equ	16207	;# 
  6891   003F50                     CWG2AS1         equ	16208	;# 
  6892   003F51                     CWG2STR         equ	16209	;# 
  6893   003F52                     CWG1CLK         equ	16210	;# 
  6894   003F52                     CWG1CLKCON      equ	16210	;# 
  6895   003F53                     CWG1ISM         equ	16211	;# 
  6896   003F53                     CWG1DAT         equ	16211	;# 
  6897   003F54                     CWG1DBR         equ	16212	;# 
  6898   003F55                     CWG1DBF         equ	16213	;# 
  6899   003F56                     CWG1CON0        equ	16214	;# 
  6900   003F57                     CWG1CON1        equ	16215	;# 
  6901   003F58                     CWG1AS0         equ	16216	;# 
  6902   003F59                     CWG1AS1         equ	16217	;# 
  6903   003F5A                     CWG1STR         equ	16218	;# 
  6904   003F5E                     CCPTMRS0        equ	16222	;# 
  6905   003F5F                     CCPTMRS1        equ	16223	;# 
  6906   003F60                     PWM8DC          equ	16224	;# 
  6907   003F60                     PWM8DCL         equ	16224	;# 
  6908   003F61                     PWM8DCH         equ	16225	;# 
  6909   003F62                     PWM8CON         equ	16226	;# 
  6910   003F64                     PWM7DC          equ	16228	;# 
  6911   003F64                     PWM7DCL         equ	16228	;# 
  6912   003F65                     PWM7DCH         equ	16229	;# 
  6913   003F66                     PWM7CON         equ	16230	;# 
  6914   003F68                     PWM6DC          equ	16232	;# 
  6915   003F68                     PWM6DCL         equ	16232	;# 
  6916   003F69                     PWM6DCH         equ	16233	;# 
  6917   003F6A                     PWM6CON         equ	16234	;# 
  6918   003F6C                     PWM5DC          equ	16236	;# 
  6919   003F6C                     PWM5DCL         equ	16236	;# 
  6920   003F6D                     PWM5DCH         equ	16237	;# 
  6921   003F6E                     PWM5CON         equ	16238	;# 
  6922   003F70                     CCPR4           equ	16240	;# 
  6923   003F70                     CCPR4L          equ	16240	;# 
  6924   003F71                     CCPR4H          equ	16241	;# 
  6925   003F72                     CCP4CON         equ	16242	;# 
  6926   003F73                     CCP4CAP         equ	16243	;# 
  6927   003F74                     CCPR3           equ	16244	;# 
  6928   003F74                     CCPR3L          equ	16244	;# 
  6929   003F75                     CCPR3H          equ	16245	;# 
  6930   003F76                     CCP3CON         equ	16246	;# 
  6931   003F77                     CCP3CAP         equ	16247	;# 
  6932   003F78                     CCPR2           equ	16248	;# 
  6933   003F78                     CCPR2L          equ	16248	;# 
  6934   003F79                     CCPR2H          equ	16249	;# 
  6935   003F7A                     CCP2CON         equ	16250	;# 
  6936   003F7B                     CCP2CAP         equ	16251	;# 
  6937   003F7C                     CCPR1           equ	16252	;# 
  6938   003F7C                     CCPR1L          equ	16252	;# 
  6939   003F7D                     CCPR1H          equ	16253	;# 
  6940   003F7E                     CCP1CON         equ	16254	;# 
  6941   003F7F                     CCP1CAP         equ	16255	;# 
  6942   003F92                     T6TMR           equ	16274	;# 
  6943   003F92                     TMR6            equ	16274	;# 
  6944   003F93                     T6PR            equ	16275	;# 
  6945   003F93                     PR6             equ	16275	;# 
  6946   003F94                     T6CON           equ	16276	;# 
  6947   003F95                     T6HLT           equ	16277	;# 
  6948   003F96                     T6CLKCON        equ	16278	;# 
  6949   003F96                     T6CLK           equ	16278	;# 
  6950   003F97                     T6RST           equ	16279	;# 
  6951   003F98                     TMR5            equ	16280	;# 
  6952   003F98                     TMR5L           equ	16280	;# 
  6953   003F99                     TMR5H           equ	16281	;# 
  6954   003F9A                     T5CON           equ	16282	;# 
  6955   003F9A                     TMR5CON         equ	16282	;# 
  6956   003F9B                     T5GCON          equ	16283	;# 
  6957   003F9B                     TMR5GCON        equ	16283	;# 
  6958   003F9C                     T5GATE          equ	16284	;# 
  6959   003F9C                     TMR5GATE        equ	16284	;# 
  6960   003F9D                     T5CLK           equ	16285	;# 
  6961   003F9D                     TMR5CLK         equ	16285	;# 
  6962   003F9D                     PR5             equ	16285	;# 
  6963   003F9E                     T4TMR           equ	16286	;# 
  6964   003F9E                     TMR4            equ	16286	;# 
  6965   003F9F                     T4PR            equ	16287	;# 
  6966   003F9F                     PR4             equ	16287	;# 
  6967   003FA0                     T4CON           equ	16288	;# 
  6968   003FA1                     T4HLT           equ	16289	;# 
  6969   003FA2                     T4CLKCON        equ	16290	;# 
  6970   003FA2                     T4CLK           equ	16290	;# 
  6971   003FA3                     T4RST           equ	16291	;# 
  6972   003FA4                     TMR3            equ	16292	;# 
  6973   003FA4                     TMR3L           equ	16292	;# 
  6974   003FA5                     TMR3H           equ	16293	;# 
  6975   003FA6                     T3CON           equ	16294	;# 
  6976   003FA6                     TMR3CON         equ	16294	;# 
  6977   003FA7                     T3GCON          equ	16295	;# 
  6978   003FA7                     TMR3GCON        equ	16295	;# 
  6979   003FA8                     T3GATE          equ	16296	;# 
  6980   003FA8                     TMR3GATE        equ	16296	;# 
  6981   003FA9                     T3CLK           equ	16297	;# 
  6982   003FA9                     TMR3CLK         equ	16297	;# 
  6983   003FA9                     PR3             equ	16297	;# 
  6984   003FAA                     T2TMR           equ	16298	;# 
  6985   003FAA                     TMR2            equ	16298	;# 
  6986   003FAB                     T2PR            equ	16299	;# 
  6987   003FAB                     PR2             equ	16299	;# 
  6988   003FAC                     T2CON           equ	16300	;# 
  6989   003FAD                     T2HLT           equ	16301	;# 
  6990   003FAE                     T2CLKCON        equ	16302	;# 
  6991   003FAE                     T2CLK           equ	16302	;# 
  6992   003FAF                     T2RST           equ	16303	;# 
  6993   003FB0                     TMR1            equ	16304	;# 
  6994   003FB0                     TMR1L           equ	16304	;# 
  6995   003FB1                     TMR1H           equ	16305	;# 
  6996   003FB2                     T1CON           equ	16306	;# 
  6997   003FB2                     TMR1CON         equ	16306	;# 
  6998   003FB3                     T1GCON          equ	16307	;# 
  6999   003FB3                     TMR1GCON        equ	16307	;# 
  7000   003FB4                     T1GATE          equ	16308	;# 
  7001   003FB4                     TMR1GATE        equ	16308	;# 
  7002   003FB5                     T1CLK           equ	16309	;# 
  7003   003FB5                     TMR1CLK         equ	16309	;# 
  7004   003FB5                     PR1             equ	16309	;# 
  7005   003FB6                     TMR0L           equ	16310	;# 
  7006   003FB6                     TMR0            equ	16310	;# 
  7007   003FB7                     TMR0H           equ	16311	;# 
  7008   003FB7                     PR0             equ	16311	;# 
  7009   003FB8                     T0CON0          equ	16312	;# 
  7010   003FB9                     T0CON1          equ	16313	;# 
  7011   003FBA                     LATA            equ	16314	;# 
  7012   003FBB                     LATB            equ	16315	;# 
  7013   003FBC                     LATC            equ	16316	;# 
  7014   003FBD                     LATD            equ	16317	;# 
  7015   003FBE                     LATE            equ	16318	;# 
  7016   003FBF                     LATF            equ	16319	;# 
  7017   003FC2                     TRISA           equ	16322	;# 
  7018   003FC3                     TRISB           equ	16323	;# 
  7019   003FC4                     TRISC           equ	16324	;# 
  7020   003FC5                     TRISD           equ	16325	;# 
  7021   003FC6                     TRISE           equ	16326	;# 
  7022   003FC7                     TRISF           equ	16327	;# 
  7023   003FCA                     PORTA           equ	16330	;# 
  7024   003FCB                     PORTB           equ	16331	;# 
  7025   003FCC                     PORTC           equ	16332	;# 
  7026   003FCD                     PORTD           equ	16333	;# 
  7027   003FCE                     PORTE           equ	16334	;# 
  7028   003FCF                     PORTF           equ	16335	;# 
  7029   003FD2                     INTCON0         equ	16338	;# 
  7030   003FD3                     INTCON1         equ	16339	;# 
  7031   003FD4                     IVTLOCK         equ	16340	;# 
  7032   003FD5                     IVTBASE         equ	16341	;# 
  7033   003FD5                     IVTBASEL        equ	16341	;# 
  7034   003FD6                     IVTBASEH        equ	16342	;# 
  7035   003FD7                     IVTBASEU        equ	16343	;# 
  7036   003FD8                     STATUS          equ	16344	;# 
  7037   003FD9                     FSR2            equ	16345	;# 
  7038   003FD9                     FSR2L           equ	16345	;# 
  7039   003FDA                     FSR2H           equ	16346	;# 
  7040   003FDB                     PLUSW2          equ	16347	;# 
  7041   003FDC                     PREINC2         equ	16348	;# 
  7042   003FDD                     POSTDEC2        equ	16349	;# 
  7043   003FDE                     POSTINC2        equ	16350	;# 
  7044   003FDF                     INDF2           equ	16351	;# 
  7045   003FE0                     BSR             equ	16352	;# 
  7046   003FE1                     FSR1            equ	16353	;# 
  7047   003FE1                     FSR1L           equ	16353	;# 
  7048   003FE2                     FSR1H           equ	16354	;# 
  7049   003FE3                     PLUSW1          equ	16355	;# 
  7050   003FE4                     PREINC1         equ	16356	;# 
  7051   003FE5                     POSTDEC1        equ	16357	;# 
  7052   003FE6                     POSTINC1        equ	16358	;# 
  7053   003FE7                     INDF1           equ	16359	;# 
  7054   003FE8                     WREG            equ	16360	;# 
  7055   003FE9                     FSR0            equ	16361	;# 
  7056   003FE9                     FSR0L           equ	16361	;# 
  7057   003FEA                     FSR0H           equ	16362	;# 
  7058   003FEB                     PLUSW0          equ	16363	;# 
  7059   003FEC                     PREINC0         equ	16364	;# 
  7060   003FED                     POSTDEC0        equ	16365	;# 
  7061   003FEE                     POSTINC0        equ	16366	;# 
  7062   003FEF                     INDF0           equ	16367	;# 
  7063   003FF0                     PCON0           equ	16368	;# 
  7064   003FF1                     PCON1           equ	16369	;# 
  7065   003FF3                     PROD            equ	16371	;# 
  7066   003FF3                     PRODL           equ	16371	;# 
  7067   003FF4                     PRODH           equ	16372	;# 
  7068   003FF5                     TABLAT          equ	16373	;# 
  7069   003FF6                     TBLPTR          equ	16374	;# 
  7070   003FF6                     TBLPTRL         equ	16374	;# 
  7071   003FF7                     TBLPTRH         equ	16375	;# 
  7072   003FF8                     TBLPTRU         equ	16376	;# 
  7073   003FF9                     PCLAT           equ	16377	;# 
  7074   003FF9                     PCL             equ	16377	;# 
  7075   003FFA                     PCLATH          equ	16378	;# 
  7076   003FFB                     PCLATU          equ	16379	;# 
  7077   003FFC                     STKPTR          equ	16380	;# 
  7078   003FFD                     TOS             equ	16381	;# 
  7079   003FFD                     TOSL            equ	16381	;# 
  7080   003FFE                     TOSH            equ	16382	;# 
  7081   003FFF                     TOSU            equ	16383	;# 
  7082   003880                     STATUS_CSHAD    equ	14464	;# 
  7083   003881                     WREG_CSHAD      equ	14465	;# 
  7084   003882                     BSR_CSHAD       equ	14466	;# 
  7085   003883                     SHADCON         equ	14467	;# 
  7086   003884                     STATUS_SHAD     equ	14468	;# 
  7087   003885                     WREG_SHAD       equ	14469	;# 
  7088   003886                     BSR_SHAD        equ	14470	;# 
  7089   003887                     PCLATH_SHAD     equ	14471	;# 
  7090   003888                     PCLATU_SHAD     equ	14472	;# 
  7091   003889                     FSR0SH          equ	14473	;# 
  7092   003889                     FSR0L_SHAD      equ	14473	;# 
  7093   00388A                     FSR0H_SHAD      equ	14474	;# 
  7094   00388B                     FSR1SH          equ	14475	;# 
  7095   00388B                     FSR1L_SHAD      equ	14475	;# 
  7096   00388C                     FSR1H_SHAD      equ	14476	;# 
  7097   00388D                     FSR2SH          equ	14477	;# 
  7098   00388D                     FSR2L_SHAD      equ	14477	;# 
  7099   00388E                     FSR2H_SHAD      equ	14478	;# 
  7100   00388F                     PRODSH          equ	14479	;# 
  7101   00388F                     PRODL_SHAD      equ	14479	;# 
  7102   003890                     PRODH_SHAD      equ	14480	;# 
  7103   00389D                     IVTADL          equ	14493	;# 
  7104   00389E                     IVTADH          equ	14494	;# 
  7105   00389F                     IVTADU          equ	14495	;# 
  7106   00395B                     WDTCON0         equ	14683	;# 
  7107   00395C                     WDTCON1         equ	14684	;# 
  7108   00395D                     WDTPSL          equ	14685	;# 
  7109   00395E                     WDTPSH          equ	14686	;# 
  7110   00395F                     WDTTMR          equ	14687	;# 
  7111   003960                     CRCDATA         equ	14688	;# 
  7112   003960                     CRCDATL         equ	14688	;# 
  7113   003961                     CRCDATH         equ	14689	;# 
  7114   003962                     CRCACC          equ	14690	;# 
  7115   003962                     CRCACCL         equ	14690	;# 
  7116   003963                     CRCACCH         equ	14691	;# 
  7117   003964                     CRCSHFT         equ	14692	;# 
  7118   003964                     CRCSHIFTL       equ	14692	;# 
  7119   003965                     CRCSHIFTH       equ	14693	;# 
  7120   003966                     CRCXOR          equ	14694	;# 
  7121   003966                     CRCXORL         equ	14694	;# 
  7122   003967                     CRCXORH         equ	14695	;# 
  7123   003968                     CRCCON0         equ	14696	;# 
  7124   003969                     CRCCON1         equ	14697	;# 
  7125   003976                     SCANLADR        equ	14710	;# 
  7126   003976                     SCANLADRL       equ	14710	;# 
  7127   003977                     SCANLADRH       equ	14711	;# 
  7128   003978                     SCANLADRU       equ	14712	;# 
  7129   003979                     SCANHADR        equ	14713	;# 
  7130   003979                     SCANHADRL       equ	14713	;# 
  7131   00397A                     SCANHADRH       equ	14714	;# 
  7132   00397B                     SCANHADRU       equ	14715	;# 
  7133   00397C                     SCANCON0        equ	14716	;# 
  7134   00397D                     SCANTRIG        equ	14717	;# 
  7135   003980                     IPR0            equ	14720	;# 
  7136   003981                     IPR1            equ	14721	;# 
  7137   003982                     IPR2            equ	14722	;# 
  7138   003983                     IPR3            equ	14723	;# 
  7139   003984                     IPR4            equ	14724	;# 
  7140   003985                     IPR5            equ	14725	;# 
  7141   003986                     IPR6            equ	14726	;# 
  7142   003987                     IPR7            equ	14727	;# 
  7143   003988                     IPR8            equ	14728	;# 
  7144   003989                     IPR9            equ	14729	;# 
  7145   00398A                     IPR10           equ	14730	;# 
  7146   003990                     PIE0            equ	14736	;# 
  7147   003991                     PIE1            equ	14737	;# 
  7148   003992                     PIE2            equ	14738	;# 
  7149   003993                     PIE3            equ	14739	;# 
  7150   003994                     PIE4            equ	14740	;# 
  7151   003995                     PIE5            equ	14741	;# 
  7152   003996                     PIE6            equ	14742	;# 
  7153   003997                     PIE7            equ	14743	;# 
  7154   003998                     PIE8            equ	14744	;# 
  7155   003999                     PIE9            equ	14745	;# 
  7156   00399A                     PIE10           equ	14746	;# 
  7157   0039A0                     PIR0            equ	14752	;# 
  7158   0039A1                     PIR1            equ	14753	;# 
  7159   0039A2                     PIR2            equ	14754	;# 
  7160   0039A3                     PIR3            equ	14755	;# 
  7161   0039A4                     PIR4            equ	14756	;# 
  7162   0039A5                     PIR5            equ	14757	;# 
  7163   0039A6                     PIR6            equ	14758	;# 
  7164   0039A7                     PIR7            equ	14759	;# 
  7165   0039A8                     PIR8            equ	14760	;# 
  7166   0039A9                     PIR9            equ	14761	;# 
  7167   0039AA                     PIR10           equ	14762	;# 
  7168   0039C0                     PMD0            equ	14784	;# 
  7169   0039C1                     PMD1            equ	14785	;# 
  7170   0039C2                     PMD2            equ	14786	;# 
  7171   0039C3                     PMD3            equ	14787	;# 
  7172   0039C4                     PMD4            equ	14788	;# 
  7173   0039C5                     PMD5            equ	14789	;# 
  7174   0039C6                     PMD6            equ	14790	;# 
  7175   0039C7                     PMD7            equ	14791	;# 
  7176   0039D0                     BORCON          equ	14800	;# 
  7177   0039D1                     VREGCON         equ	14801	;# 
  7178   0039D8                     CPUDOZE         equ	14808	;# 
  7179   0039D9                     OSCCON1         equ	14809	;# 
  7180   0039DA                     OSCCON2         equ	14810	;# 
  7181   0039DB                     OSCCON3         equ	14811	;# 
  7182   0039DC                     OSCSTAT         equ	14812	;# 
  7183   0039DC                     OSCSTAT1        equ	14812	;# 
  7184   0039DD                     OSCEN           equ	14813	;# 
  7185   0039DE                     OSCTUNE         equ	14814	;# 
  7186   0039DF                     OSCFRQ          equ	14815	;# 
  7187   0039E0                     NVMADRL         equ	14816	;# 
  7188   0039E1                     NVMADRH         equ	14817	;# 
  7189   0039E3                     NVMDAT          equ	14819	;# 
  7190   0039E5                     NVMCON1         equ	14821	;# 
  7191   0039E6                     NVMCON2         equ	14822	;# 
  7192   0039EF                     PRLOCK          equ	14831	;# 
  7193   0039F1                     ISRPR           equ	14833	;# 
  7194   0039F2                     MAINPR          equ	14834	;# 
  7195   0039F3                     DMA1PR          equ	14835	;# 
  7196   0039F4                     DMA2PR          equ	14836	;# 
  7197   0039F7                     SCANPR          equ	14839	;# 
  7198   003A00                     RA0PPS          equ	14848	;# 
  7199   003A01                     RA1PPS          equ	14849	;# 
  7200   003A02                     RA2PPS          equ	14850	;# 
  7201   003A03                     RA3PPS          equ	14851	;# 
  7202   003A04                     RA4PPS          equ	14852	;# 
  7203   003A05                     RA5PPS          equ	14853	;# 
  7204   003A06                     RA6PPS          equ	14854	;# 
  7205   003A07                     RA7PPS          equ	14855	;# 
  7206   003A08                     RB0PPS          equ	14856	;# 
  7207   003A09                     RB1PPS          equ	14857	;# 
  7208   003A0A                     RB2PPS          equ	14858	;# 
  7209   003A0B                     RB3PPS          equ	14859	;# 
  7210   003A0C                     RB4PPS          equ	14860	;# 
  7211   003A0D                     RB5PPS          equ	14861	;# 
  7212   003A0E                     RB6PPS          equ	14862	;# 
  7213   003A0F                     RB7PPS          equ	14863	;# 
  7214   003A10                     RC0PPS          equ	14864	;# 
  7215   003A11                     RC1PPS          equ	14865	;# 
  7216   003A12                     RC2PPS          equ	14866	;# 
  7217   003A13                     RC3PPS          equ	14867	;# 
  7218   003A14                     RC4PPS          equ	14868	;# 
  7219   003A15                     RC5PPS          equ	14869	;# 
  7220   003A16                     RC6PPS          equ	14870	;# 
  7221   003A17                     RC7PPS          equ	14871	;# 
  7222   003A18                     RD0PPS          equ	14872	;# 
  7223   003A19                     RD1PPS          equ	14873	;# 
  7224   003A1A                     RD2PPS          equ	14874	;# 
  7225   003A1B                     RD3PPS          equ	14875	;# 
  7226   003A1C                     RD4PPS          equ	14876	;# 
  7227   003A1D                     RD5PPS          equ	14877	;# 
  7228   003A1E                     RD6PPS          equ	14878	;# 
  7229   003A1F                     RD7PPS          equ	14879	;# 
  7230   003A20                     RE0PPS          equ	14880	;# 
  7231   003A21                     RE1PPS          equ	14881	;# 
  7232   003A22                     RE2PPS          equ	14882	;# 
  7233   003A28                     RF0PPS          equ	14888	;# 
  7234   003A29                     RF1PPS          equ	14889	;# 
  7235   003A2A                     RF2PPS          equ	14890	;# 
  7236   003A2B                     RF3PPS          equ	14891	;# 
  7237   003A2C                     RF4PPS          equ	14892	;# 
  7238   003A2D                     RF5PPS          equ	14893	;# 
  7239   003A2E                     RF6PPS          equ	14894	;# 
  7240   003A2F                     RF7PPS          equ	14895	;# 
  7241   003A40                     ANSELA          equ	14912	;# 
  7242   003A41                     WPUA            equ	14913	;# 
  7243   003A42                     ODCONA          equ	14914	;# 
  7244   003A43                     SLRCONA         equ	14915	;# 
  7245   003A44                     INLVLA          equ	14916	;# 
  7246   003A45                     IOCAP           equ	14917	;# 
  7247   003A46                     IOCAN           equ	14918	;# 
  7248   003A47                     IOCAF           equ	14919	;# 
  7249   003A50                     ANSELB          equ	14928	;# 
  7250   003A51                     WPUB            equ	14929	;# 
  7251   003A52                     ODCONB          equ	14930	;# 
  7252   003A53                     SLRCONB         equ	14931	;# 
  7253   003A54                     INLVLB          equ	14932	;# 
  7254   003A55                     IOCBP           equ	14933	;# 
  7255   003A56                     IOCBN           equ	14934	;# 
  7256   003A57                     IOCBF           equ	14935	;# 
  7257   003A5A                     RB1I2C          equ	14938	;# 
  7258   003A5B                     RB2I2C          equ	14939	;# 
  7259   003A60                     ANSELC          equ	14944	;# 
  7260   003A61                     WPUC            equ	14945	;# 
  7261   003A62                     ODCONC          equ	14946	;# 
  7262   003A63                     SLRCONC         equ	14947	;# 
  7263   003A64                     INLVLC          equ	14948	;# 
  7264   003A65                     IOCCP           equ	14949	;# 
  7265   003A66                     IOCCN           equ	14950	;# 
  7266   003A67                     IOCCF           equ	14951	;# 
  7267   003A6A                     RC3I2C          equ	14954	;# 
  7268   003A6B                     RC4I2C          equ	14955	;# 
  7269   003A70                     ANSELD          equ	14960	;# 
  7270   003A71                     WPUD            equ	14961	;# 
  7271   003A72                     ODCOND          equ	14962	;# 
  7272   003A73                     SLRCOND         equ	14963	;# 
  7273   003A74                     INLVLD          equ	14964	;# 
  7274   003A7A                     RD0I2C          equ	14970	;# 
  7275   003A7B                     RD1I2C          equ	14971	;# 
  7276   003A80                     ANSELE          equ	14976	;# 
  7277   003A81                     WPUE            equ	14977	;# 
  7278   003A82                     ODCONE          equ	14978	;# 
  7279   003A83                     SLRCONE         equ	14979	;# 
  7280   003A84                     INLVLE          equ	14980	;# 
  7281   003A85                     IOCEP           equ	14981	;# 
  7282   003A86                     IOCEN           equ	14982	;# 
  7283   003A87                     IOCEF           equ	14983	;# 
  7284   003A90                     ANSELF          equ	14992	;# 
  7285   003A91                     WPUF            equ	14993	;# 
  7286   003A92                     ODCONF          equ	14994	;# 
  7287   003A93                     SLRCONF         equ	14995	;# 
  7288   003A94                     INLVLF          equ	14996	;# 
  7289   003ABF                     PPSLOCK         equ	15039	;# 
  7290   003AC0                     INT0PPS         equ	15040	;# 
  7291   003AC1                     INT1PPS         equ	15041	;# 
  7292   003AC2                     INT2PPS         equ	15042	;# 
  7293   003AC3                     T0CKIPPS        equ	15043	;# 
  7294   003AC4                     T1CKIPPS        equ	15044	;# 
  7295   003AC5                     T1GPPS          equ	15045	;# 
  7296   003AC6                     T3CKIPPS        equ	15046	;# 
  7297   003AC7                     T3GPPS          equ	15047	;# 
  7298   003AC8                     T5CKIPPS        equ	15048	;# 
  7299   003AC9                     T5GPPS          equ	15049	;# 
  7300   003ACA                     T2INPPS         equ	15050	;# 
  7301   003ACB                     T4INPPS         equ	15051	;# 
  7302   003ACC                     T6INPPS         equ	15052	;# 
  7303   003ACD                     CCP1PPS         equ	15053	;# 
  7304   003ACE                     CCP2PPS         equ	15054	;# 
  7305   003ACF                     CCP3PPS         equ	15055	;# 
  7306   003AD0                     CCP4PPS         equ	15056	;# 
  7307   003AD1                     SMT1WINPPS      equ	15057	;# 
  7308   003AD2                     SMT1SIGPPS      equ	15058	;# 
  7309   003AD3                     CWG1INPPS       equ	15059	;# 
  7310   003AD4                     CWG2INPPS       equ	15060	;# 
  7311   003AD5                     CWG3INPPS       equ	15061	;# 
  7312   003AD6                     MD1CARLPPS      equ	15062	;# 
  7313   003AD7                     MD1CARHPPS      equ	15063	;# 
  7314   003AD8                     MD1SRCPPS       equ	15064	;# 
  7315   003AD9                     CLCIN0PPS       equ	15065	;# 
  7316   003ADA                     CLCIN1PPS       equ	15066	;# 
  7317   003ADB                     CLCIN2PPS       equ	15067	;# 
  7318   003ADC                     CLCIN3PPS       equ	15068	;# 
  7319   003ADD                     ADACTPPS        equ	15069	;# 
  7320   003ADE                     SPI1SCKPPS      equ	15070	;# 
  7321   003ADF                     SPI1SDIPPS      equ	15071	;# 
  7322   003AE0                     SPI1SSPPS       equ	15072	;# 
  7323   003AE1                     I2C1SCLPPS      equ	15073	;# 
  7324   003AE2                     I2C1SDAPPS      equ	15074	;# 
  7325   003AE3                     I2C2SCLPPS      equ	15075	;# 
  7326   003AE4                     I2C2SDAPPS      equ	15076	;# 
  7327   003AE5                     U1RXPPS         equ	15077	;# 
  7328   003AE6                     U1CTSPPS        equ	15078	;# 
  7329   003AE8                     U2RXPPS         equ	15080	;# 
  7330   003AE9                     U2CTSPPS        equ	15081	;# 
  7331   003BC9                     DMA2BUF         equ	15305	;# 
  7332   003BCA                     DMA2DCNT        equ	15306	;# 
  7333   003BCA                     DMA2DCNTL       equ	15306	;# 
  7334   003BCB                     DMA2DCNTH       equ	15307	;# 
  7335   003BCC                     DMA2DPTR        equ	15308	;# 
  7336   003BCC                     DMA2DPTRL       equ	15308	;# 
  7337   003BCD                     DMA2DPTRH       equ	15309	;# 
  7338   003BCE                     DMA2DSZ         equ	15310	;# 
  7339   003BCE                     DMA2DSZL        equ	15310	;# 
  7340   003BCF                     DMA2DSZH        equ	15311	;# 
  7341   003BD0                     DMA2DSA         equ	15312	;# 
  7342   003BD0                     DMA2DSAL        equ	15312	;# 
  7343   003BD1                     DMA2DSAH        equ	15313	;# 
  7344   003BD2                     DMA2SCNT        equ	15314	;# 
  7345   003BD2                     DMA2SCNTL       equ	15314	;# 
  7346   003BD3                     DMA2SCNTH       equ	15315	;# 
  7347   003BD4                     DMA2SPTR        equ	15316	;# 
  7348   003BD4                     DMA2SPTRL       equ	15316	;# 
  7349   003BD5                     DMA2SPTRH       equ	15317	;# 
  7350   003BD6                     DMA2SPTRU       equ	15318	;# 
  7351   003BD7                     DMA2SSZ         equ	15319	;# 
  7352   003BD7                     DMA2SSZL        equ	15319	;# 
  7353   003BD8                     DMA2SSZH        equ	15320	;# 
  7354   003BD9                     DMA2SSA         equ	15321	;# 
  7355   003BD9                     DMA2SSAL        equ	15321	;# 
  7356   003BDA                     DMA2SSAH        equ	15322	;# 
  7357   003BDB                     DMA2SSAU        equ	15323	;# 
  7358   003BDC                     DMA2CON0        equ	15324	;# 
  7359   003BDD                     DMA2CON1        equ	15325	;# 
  7360   003BDE                     DMA2AIRQ        equ	15326	;# 
  7361   003BDF                     DMA2SIRQ        equ	15327	;# 
  7362   003BE9                     DMA1BUF         equ	15337	;# 
  7363   003BEA                     DMA1DCNT        equ	15338	;# 
  7364   003BEA                     DMA1DCNTL       equ	15338	;# 
  7365   003BEB                     DMA1DCNTH       equ	15339	;# 
  7366   003BEC                     DMA1DPTR        equ	15340	;# 
  7367   003BEC                     DMA1DPTRL       equ	15340	;# 
  7368   003BED                     DMA1DPTRH       equ	15341	;# 
  7369   003BEE                     DMA1DSZ         equ	15342	;# 
  7370   003BEE                     DMA1DSZL        equ	15342	;# 
  7371   003BEF                     DMA1DSZH        equ	15343	;# 
  7372   003BF0                     DMA1DSA         equ	15344	;# 
  7373   003BF0                     DMA1DSAL        equ	15344	;# 
  7374   003BF1                     DMA1DSAH        equ	15345	;# 
  7375   003BF2                     DMA1SCNT        equ	15346	;# 
  7376   003BF2                     DMA1SCNTL       equ	15346	;# 
  7377   003BF3                     DMA1SCNTH       equ	15347	;# 
  7378   003BF4                     DMA1SPTR        equ	15348	;# 
  7379   003BF4                     DMA1SPTRL       equ	15348	;# 
  7380   003BF5                     DMA1SPTRH       equ	15349	;# 
  7381   003BF6                     DMA1SPTRU       equ	15350	;# 
  7382   003BF7                     DMA1SSZ         equ	15351	;# 
  7383   003BF7                     DMA1SSZL        equ	15351	;# 
  7384   003BF8                     DMA1SSZH        equ	15352	;# 
  7385   003BF9                     DMA1SSA         equ	15353	;# 
  7386   003BF9                     DMA1SSAL        equ	15353	;# 
  7387   003BFA                     DMA1SSAH        equ	15354	;# 
  7388   003BFB                     DMA1SSAU        equ	15355	;# 
  7389   003BFC                     DMA1CON0        equ	15356	;# 
  7390   003BFD                     DMA1CON1        equ	15357	;# 
  7391   003BFE                     DMA1AIRQ        equ	15358	;# 
  7392   003BFF                     DMA1SIRQ        equ	15359	;# 
  7393   003C56                     CLC4CON         equ	15446	;# 
  7394   003C57                     CLC4POL         equ	15447	;# 
  7395   003C58                     CLC4SEL0        equ	15448	;# 
  7396   003C59                     CLC4SEL1        equ	15449	;# 
  7397   003C5A                     CLC4SEL2        equ	15450	;# 
  7398   003C5B                     CLC4SEL3        equ	15451	;# 
  7399   003C5C                     CLC4GLS0        equ	15452	;# 
  7400   003C5D                     CLC4GLS1        equ	15453	;# 
  7401   003C5E                     CLC4GLS2        equ	15454	;# 
  7402   003C5F                     CLC4GLS3        equ	15455	;# 
  7403   003C60                     CLC3CON         equ	15456	;# 
  7404   003C61                     CLC3POL         equ	15457	;# 
  7405   003C62                     CLC3SEL0        equ	15458	;# 
  7406   003C63                     CLC3SEL1        equ	15459	;# 
  7407   003C64                     CLC3SEL2        equ	15460	;# 
  7408   003C65                     CLC3SEL3        equ	15461	;# 
  7409   003C66                     CLC3GLS0        equ	15462	;# 
  7410   003C67                     CLC3GLS1        equ	15463	;# 
  7411   003C68                     CLC3GLS2        equ	15464	;# 
  7412   003C69                     CLC3GLS3        equ	15465	;# 
  7413   003C6A                     CLC2CON         equ	15466	;# 
  7414   003C6B                     CLC2POL         equ	15467	;# 
  7415   003C6C                     CLC2SEL0        equ	15468	;# 
  7416   003C6D                     CLC2SEL1        equ	15469	;# 
  7417   003C6E                     CLC2SEL2        equ	15470	;# 
  7418   003C6F                     CLC2SEL3        equ	15471	;# 
  7419   003C70                     CLC2GLS0        equ	15472	;# 
  7420   003C71                     CLC2GLS1        equ	15473	;# 
  7421   003C72                     CLC2GLS2        equ	15474	;# 
  7422   003C73                     CLC2GLS3        equ	15475	;# 
  7423   003C74                     CLC1CON         equ	15476	;# 
  7424   003C75                     CLC1POL         equ	15477	;# 
  7425   003C76                     CLC1SEL0        equ	15478	;# 
  7426   003C77                     CLC1SEL1        equ	15479	;# 
  7427   003C78                     CLC1SEL2        equ	15480	;# 
  7428   003C79                     CLC1SEL3        equ	15481	;# 
  7429   003C7A                     CLC1GLS0        equ	15482	;# 
  7430   003C7B                     CLC1GLS1        equ	15483	;# 
  7431   003C7C                     CLC1GLS2        equ	15484	;# 
  7432   003C7D                     CLC1GLS3        equ	15485	;# 
  7433   003C7E                     CLCDATA0        equ	15486	;# 
  7434   003CE5                     CLKRCON         equ	15589	;# 
  7435   003CE6                     CLKRCLK         equ	15590	;# 
  7436   003CFA                     MD1CON0         equ	15610	;# 
  7437   003CFB                     MD1CON1         equ	15611	;# 
  7438   003CFC                     MD1SRC          equ	15612	;# 
  7439   003CFD                     MD1CARL         equ	15613	;# 
  7440   003CFE                     MD1CARH         equ	15614	;# 
  7441   003D10                     SPI1RXB         equ	15632	;# 
  7442   003D11                     SPI1TXB         equ	15633	;# 
  7443   003D12                     SPI1TCNT        equ	15634	;# 
  7444   003D12                     SPI1TCNTL       equ	15634	;# 
  7445   003D13                     SPI1TCNTH       equ	15635	;# 
  7446   003D14                     SPI1CON0        equ	15636	;# 
  7447   003D15                     SPI1CON1        equ	15637	;# 
  7448   003D16                     SPI1CON2        equ	15638	;# 
  7449   003D17                     SPI1STATUS      equ	15639	;# 
  7450   003D18                     SPI1TWIDTH      equ	15640	;# 
  7451   003D19                     SPI1BAUD        equ	15641	;# 
  7452   003D1A                     SPI1INTF        equ	15642	;# 
  7453   003D1B                     SPI1INTE        equ	15643	;# 
  7454   003D1C                     SPI1CLK         equ	15644	;# 
  7455   003D54                     I2C2RXB         equ	15700	;# 
  7456   003D55                     I2C2TXB         equ	15701	;# 
  7457   003D56                     I2C2CNT         equ	15702	;# 
  7458   003D57                     I2C2ADB0        equ	15703	;# 
  7459   003D58                     I2C2ADB1        equ	15704	;# 
  7460   003D59                     I2C2ADR0        equ	15705	;# 
  7461   003D5A                     I2C2ADR1        equ	15706	;# 
  7462   003D5B                     I2C2ADR2        equ	15707	;# 
  7463   003D5C                     I2C2ADR3        equ	15708	;# 
  7464   003D5D                     I2C2CON0        equ	15709	;# 
  7465   003D5E                     I2C2CON1        equ	15710	;# 
  7466   003D5F                     I2C2CON2        equ	15711	;# 
  7467   003D60                     I2C2ERR         equ	15712	;# 
  7468   003D61                     I2C2STAT0       equ	15713	;# 
  7469   003D62                     I2C2STAT1       equ	15714	;# 
  7470   003D63                     I2C2PIR         equ	15715	;# 
  7471   003D64                     I2C2PIE         equ	15716	;# 
  7472   003D65                     I2C2CLK         equ	15717	;# 
  7473   003D66                     I2C2BTO         equ	15718	;# 
  7474   003D6A                     I2C1RXB         equ	15722	;# 
  7475   003D6B                     I2C1TXB         equ	15723	;# 
  7476   003D6C                     I2C1CNT         equ	15724	;# 
  7477   003D6D                     I2C1ADB0        equ	15725	;# 
  7478   003D6E                     I2C1ADB1        equ	15726	;# 
  7479   003D6F                     I2C1ADR0        equ	15727	;# 
  7480   003D70                     I2C1ADR1        equ	15728	;# 
  7481   003D71                     I2C1ADR2        equ	15729	;# 
  7482   003D72                     I2C1ADR3        equ	15730	;# 
  7483   003D73                     I2C1CON0        equ	15731	;# 
  7484   003D74                     I2C1CON1        equ	15732	;# 
  7485   003D75                     I2C1CON2        equ	15733	;# 
  7486   003D76                     I2C1ERR         equ	15734	;# 
  7487   003D77                     I2C1STAT0       equ	15735	;# 
  7488   003D78                     I2C1STAT1       equ	15736	;# 
  7489   003D79                     I2C1PIR         equ	15737	;# 
  7490   003D7A                     I2C1PIE         equ	15738	;# 
  7491   003D7B                     I2C1CLK         equ	15739	;# 
  7492   003D7C                     I2C1BTO         equ	15740	;# 
  7493   003DD0                     U2RXB           equ	15824	;# 
  7494   003DD0                     U2RXBL          equ	15824	;# 
  7495   003DD2                     U2TXB           equ	15826	;# 
  7496   003DD2                     U2TXBL          equ	15826	;# 
  7497   003DD4                     U2P1            equ	15828	;# 
  7498   003DD4                     U2P1L           equ	15828	;# 
  7499   003DD6                     U2P2            equ	15830	;# 
  7500   003DD6                     U2P2L           equ	15830	;# 
  7501   003DD8                     U2P3            equ	15832	;# 
  7502   003DD8                     U2P3L           equ	15832	;# 
  7503   003DDA                     U2CON0          equ	15834	;# 
  7504   003DDB                     U2CON1          equ	15835	;# 
  7505   003DDC                     U2CON2          equ	15836	;# 
  7506   003DDD                     U2BRG           equ	15837	;# 
  7507   003DDD                     U2BRGL          equ	15837	;# 
  7508   003DDE                     U2BRGH          equ	15838	;# 
  7509   003DDF                     U2FIFO          equ	15839	;# 
  7510   003DE0                     U2UIR           equ	15840	;# 
  7511   003DE1                     U2ERRIR         equ	15841	;# 
  7512   003DE2                     U2ERRIE         equ	15842	;# 
  7513   003DE8                     U1RXB           equ	15848	;# 
  7514   003DE8                     U1RXBL          equ	15848	;# 
  7515   003DE9                     U1RXCHK         equ	15849	;# 
  7516   003DEA                     U1TXB           equ	15850	;# 
  7517   003DEA                     U1TXBL          equ	15850	;# 
  7518   003DEB                     U1TXCHK         equ	15851	;# 
  7519   003DEC                     U1P1            equ	15852	;# 
  7520   003DEC                     U1P1L           equ	15852	;# 
  7521   003DED                     U1P1H           equ	15853	;# 
  7522   003DEE                     U1P2            equ	15854	;# 
  7523   003DEE                     U1P2L           equ	15854	;# 
  7524   003DEF                     U1P2H           equ	15855	;# 
  7525   003DF0                     U1P3            equ	15856	;# 
  7526   003DF0                     U1P3L           equ	15856	;# 
  7527   003DF1                     U1P3H           equ	15857	;# 
  7528   003DF2                     U1CON0          equ	15858	;# 
  7529   003DF3                     U1CON1          equ	15859	;# 
  7530   003DF4                     U1CON2          equ	15860	;# 
  7531   003DF5                     U1BRG           equ	15861	;# 
  7532   003DF5                     U1BRGL          equ	15861	;# 
  7533   003DF6                     U1BRGH          equ	15862	;# 
  7534   003DF7                     U1FIFO          equ	15863	;# 
  7535   003DF8                     U1UIR           equ	15864	;# 
  7536   003DF9                     U1ERRIR         equ	15865	;# 
  7537   003DFA                     U1ERRIE         equ	15866	;# 
  7538   003E9C                     DAC1CON1        equ	16028	;# 
  7539   003E9E                     DAC1CON0        equ	16030	;# 
  7540   003EB8                     CM2CON0         equ	16056	;# 
  7541   003EB9                     CM2CON1         equ	16057	;# 
  7542   003EBA                     CM2NCH          equ	16058	;# 
  7543   003EBB                     CM2PCH          equ	16059	;# 
  7544   003EBC                     CM1CON0         equ	16060	;# 
  7545   003EBD                     CM1CON1         equ	16061	;# 
  7546   003EBE                     CM1NCH          equ	16062	;# 
  7547   003EBF                     CM1PCH          equ	16063	;# 
  7548   003EC0                     CMOUT           equ	16064	;# 
  7549   003EC1                     FVRCON          equ	16065	;# 
  7550   003EC3                     ZCDCON          equ	16067	;# 
  7551   003EC9                     HLVDCON0        equ	16073	;# 
  7552   003ECA                     HLVDCON1        equ	16074	;# 
  7553   003ED7                     ADCP            equ	16087	;# 
  7554   003EDE                     ADLTH           equ	16094	;# 
  7555   003EDE                     ADLTHL          equ	16094	;# 
  7556   003EDF                     ADLTHH          equ	16095	;# 
  7557   003EE0                     ADUTH           equ	16096	;# 
  7558   003EE0                     ADUTHL          equ	16096	;# 
  7559   003EE1                     ADUTHH          equ	16097	;# 
  7560   003EE2                     ADERR           equ	16098	;# 
  7561   003EE2                     ADERRL          equ	16098	;# 
  7562   003EE3                     ADERRH          equ	16099	;# 
  7563   003EE4                     ADSTPT          equ	16100	;# 
  7564   003EE4                     ADSTPTL         equ	16100	;# 
  7565   003EE5                     ADSTPTH         equ	16101	;# 
  7566   003EE6                     ADFLTR          equ	16102	;# 
  7567   003EE6                     ADFLTRL         equ	16102	;# 
  7568   003EE7                     ADFLTRH         equ	16103	;# 
  7569   003EE8                     ADACC           equ	16104	;# 
  7570   003EE8                     ADACCL          equ	16104	;# 
  7571   003EE9                     ADACCH          equ	16105	;# 
  7572   003EEA                     ADACCU          equ	16106	;# 
  7573   003EEB                     ADCNT           equ	16107	;# 
  7574   003EEC                     ADRPT           equ	16108	;# 
  7575   003EED                     ADPREV          equ	16109	;# 
  7576   003EED                     ADPREVL         equ	16109	;# 
  7577   003EEE                     ADPREVH         equ	16110	;# 
  7578   003EEF                     ADRES           equ	16111	;# 
  7579   003EEF                     ADRESL          equ	16111	;# 
  7580   003EF0                     ADRESH          equ	16112	;# 
  7581   003EF1                     ADPCH           equ	16113	;# 
  7582   003EF3                     ADACQ           equ	16115	;# 
  7583   003EF3                     ADACQL          equ	16115	;# 
  7584   003EF4                     ADACQH          equ	16116	;# 
  7585   003EF5                     ADCAP           equ	16117	;# 
  7586   003EF6                     ADPRE           equ	16118	;# 
  7587   003EF6                     ADPREL          equ	16118	;# 
  7588   003EF7                     ADPREH          equ	16119	;# 
  7589   003EF8                     ADCON0          equ	16120	;# 
  7590   003EF9                     ADCON1          equ	16121	;# 
  7591   003EFA                     ADCON2          equ	16122	;# 
  7592   003EFB                     ADCON3          equ	16123	;# 
  7593   003EFC                     ADSTAT          equ	16124	;# 
  7594   003EFD                     ADREF           equ	16125	;# 
  7595   003EFE                     ADACT           equ	16126	;# 
  7596   003EFF                     ADCLK           equ	16127	;# 
  7597   003F12                     SMT1TMR         equ	16146	;# 
  7598   003F12                     SMT1TMRL        equ	16146	;# 
  7599   003F13                     SMT1TMRH        equ	16147	;# 
  7600   003F14                     SMT1TMRU        equ	16148	;# 
  7601   003F15                     SMT1CPR         equ	16149	;# 
  7602   003F15                     SMT1CPRL        equ	16149	;# 
  7603   003F16                     SMT1CPRH        equ	16150	;# 
  7604   003F17                     SMT1CPRU        equ	16151	;# 
  7605   003F18                     SMT1CPW         equ	16152	;# 
  7606   003F18                     SMT1CPWL        equ	16152	;# 
  7607   003F19                     SMT1CPWH        equ	16153	;# 
  7608   003F1A                     SMT1CPWU        equ	16154	;# 
  7609   003F1B                     SMT1PR          equ	16155	;# 
  7610   003F1B                     SMT1PRL         equ	16155	;# 
  7611   003F1C                     SMT1PRH         equ	16156	;# 
  7612   003F1D                     SMT1PRU         equ	16157	;# 
  7613   003F1E                     SMT1CON0        equ	16158	;# 
  7614   003F1F                     SMT1CON1        equ	16159	;# 
  7615   003F20                     SMT1STAT        equ	16160	;# 
  7616   003F21                     SMT1CLK         equ	16161	;# 
  7617   003F22                     SMT1SIG         equ	16162	;# 
  7618   003F23                     SMT1WIN         equ	16163	;# 
  7619   003F38                     NCO1ACC         equ	16184	;# 
  7620   003F38                     NCO1ACCL        equ	16184	;# 
  7621   003F39                     NCO1ACCH        equ	16185	;# 
  7622   003F3A                     NCO1ACCU        equ	16186	;# 
  7623   003F3B                     NCO1INC         equ	16187	;# 
  7624   003F3B                     NCO1INCL        equ	16187	;# 
  7625   003F3C                     NCO1INCH        equ	16188	;# 
  7626   003F3D                     NCO1INCU        equ	16189	;# 
  7627   003F3E                     NCO1CON         equ	16190	;# 
  7628   003F3F                     NCO1CLK         equ	16191	;# 
  7629   003F40                     CWG3CLK         equ	16192	;# 
  7630   003F40                     CWG3CLKCON      equ	16192	;# 
  7631   003F41                     CWG3ISM         equ	16193	;# 
  7632   003F41                     CWG3DAT         equ	16193	;# 
  7633   003F42                     CWG3DBR         equ	16194	;# 
  7634   003F43                     CWG3DBF         equ	16195	;# 
  7635   003F44                     CWG3CON0        equ	16196	;# 
  7636   003F45                     CWG3CON1        equ	16197	;# 
  7637   003F46                     CWG3AS0         equ	16198	;# 
  7638   003F47                     CWG3AS1         equ	16199	;# 
  7639   003F48                     CWG3STR         equ	16200	;# 
  7640   003F49                     CWG2CLK         equ	16201	;# 
  7641   003F49                     CWG2CLKCON      equ	16201	;# 
  7642   003F4A                     CWG2ISM         equ	16202	;# 
  7643   003F4A                     CWG2DAT         equ	16202	;# 
  7644   003F4B                     CWG2DBR         equ	16203	;# 
  7645   003F4C                     CWG2DBF         equ	16204	;# 
  7646   003F4D                     CWG2CON0        equ	16205	;# 
  7647   003F4E                     CWG2CON1        equ	16206	;# 
  7648   003F4F                     CWG2AS0         equ	16207	;# 
  7649   003F50                     CWG2AS1         equ	16208	;# 
  7650   003F51                     CWG2STR         equ	16209	;# 
  7651   003F52                     CWG1CLK         equ	16210	;# 
  7652   003F52                     CWG1CLKCON      equ	16210	;# 
  7653   003F53                     CWG1ISM         equ	16211	;# 
  7654   003F53                     CWG1DAT         equ	16211	;# 
  7655   003F54                     CWG1DBR         equ	16212	;# 
  7656   003F55                     CWG1DBF         equ	16213	;# 
  7657   003F56                     CWG1CON0        equ	16214	;# 
  7658   003F57                     CWG1CON1        equ	16215	;# 
  7659   003F58                     CWG1AS0         equ	16216	;# 
  7660   003F59                     CWG1AS1         equ	16217	;# 
  7661   003F5A                     CWG1STR         equ	16218	;# 
  7662   003F5E                     CCPTMRS0        equ	16222	;# 
  7663   003F5F                     CCPTMRS1        equ	16223	;# 
  7664   003F60                     PWM8DC          equ	16224	;# 
  7665   003F60                     PWM8DCL         equ	16224	;# 
  7666   003F61                     PWM8DCH         equ	16225	;# 
  7667   003F62                     PWM8CON         equ	16226	;# 
  7668   003F64                     PWM7DC          equ	16228	;# 
  7669   003F64                     PWM7DCL         equ	16228	;# 
  7670   003F65                     PWM7DCH         equ	16229	;# 
  7671   003F66                     PWM7CON         equ	16230	;# 
  7672   003F68                     PWM6DC          equ	16232	;# 
  7673   003F68                     PWM6DCL         equ	16232	;# 
  7674   003F69                     PWM6DCH         equ	16233	;# 
  7675   003F6A                     PWM6CON         equ	16234	;# 
  7676   003F6C                     PWM5DC          equ	16236	;# 
  7677   003F6C                     PWM5DCL         equ	16236	;# 
  7678   003F6D                     PWM5DCH         equ	16237	;# 
  7679   003F6E                     PWM5CON         equ	16238	;# 
  7680   003F70                     CCPR4           equ	16240	;# 
  7681   003F70                     CCPR4L          equ	16240	;# 
  7682   003F71                     CCPR4H          equ	16241	;# 
  7683   003F72                     CCP4CON         equ	16242	;# 
  7684   003F73                     CCP4CAP         equ	16243	;# 
  7685   003F74                     CCPR3           equ	16244	;# 
  7686   003F74                     CCPR3L          equ	16244	;# 
  7687   003F75                     CCPR3H          equ	16245	;# 
  7688   003F76                     CCP3CON         equ	16246	;# 
  7689   003F77                     CCP3CAP         equ	16247	;# 
  7690   003F78                     CCPR2           equ	16248	;# 
  7691   003F78                     CCPR2L          equ	16248	;# 
  7692   003F79                     CCPR2H          equ	16249	;# 
  7693   003F7A                     CCP2CON         equ	16250	;# 
  7694   003F7B                     CCP2CAP         equ	16251	;# 
  7695   003F7C                     CCPR1           equ	16252	;# 
  7696   003F7C                     CCPR1L          equ	16252	;# 
  7697   003F7D                     CCPR1H          equ	16253	;# 
  7698   003F7E                     CCP1CON         equ	16254	;# 
  7699   003F7F                     CCP1CAP         equ	16255	;# 
  7700   003F92                     T6TMR           equ	16274	;# 
  7701   003F92                     TMR6            equ	16274	;# 
  7702   003F93                     T6PR            equ	16275	;# 
  7703   003F93                     PR6             equ	16275	;# 
  7704   003F94                     T6CON           equ	16276	;# 
  7705   003F95                     T6HLT           equ	16277	;# 
  7706   003F96                     T6CLKCON        equ	16278	;# 
  7707   003F96                     T6CLK           equ	16278	;# 
  7708   003F97                     T6RST           equ	16279	;# 
  7709   003F98                     TMR5            equ	16280	;# 
  7710   003F98                     TMR5L           equ	16280	;# 
  7711   003F99                     TMR5H           equ	16281	;# 
  7712   003F9A                     T5CON           equ	16282	;# 
  7713   003F9A                     TMR5CON         equ	16282	;# 
  7714   003F9B                     T5GCON          equ	16283	;# 
  7715   003F9B                     TMR5GCON        equ	16283	;# 
  7716   003F9C                     T5GATE          equ	16284	;# 
  7717   003F9C                     TMR5GATE        equ	16284	;# 
  7718   003F9D                     T5CLK           equ	16285	;# 
  7719   003F9D                     TMR5CLK         equ	16285	;# 
  7720   003F9D                     PR5             equ	16285	;# 
  7721   003F9E                     T4TMR           equ	16286	;# 
  7722   003F9E                     TMR4            equ	16286	;# 
  7723   003F9F                     T4PR            equ	16287	;# 
  7724   003F9F                     PR4             equ	16287	;# 
  7725   003FA0                     T4CON           equ	16288	;# 
  7726   003FA1                     T4HLT           equ	16289	;# 
  7727   003FA2                     T4CLKCON        equ	16290	;# 
  7728   003FA2                     T4CLK           equ	16290	;# 
  7729   003FA3                     T4RST           equ	16291	;# 
  7730   003FA4                     TMR3            equ	16292	;# 
  7731   003FA4                     TMR3L           equ	16292	;# 
  7732   003FA5                     TMR3H           equ	16293	;# 
  7733   003FA6                     T3CON           equ	16294	;# 
  7734   003FA6                     TMR3CON         equ	16294	;# 
  7735   003FA7                     T3GCON          equ	16295	;# 
  7736   003FA7                     TMR3GCON        equ	16295	;# 
  7737   003FA8                     T3GATE          equ	16296	;# 
  7738   003FA8                     TMR3GATE        equ	16296	;# 
  7739   003FA9                     T3CLK           equ	16297	;# 
  7740   003FA9                     TMR3CLK         equ	16297	;# 
  7741   003FA9                     PR3             equ	16297	;# 
  7742   003FAA                     T2TMR           equ	16298	;# 
  7743   003FAA                     TMR2            equ	16298	;# 
  7744   003FAB                     T2PR            equ	16299	;# 
  7745   003FAB                     PR2             equ	16299	;# 
  7746   003FAC                     T2CON           equ	16300	;# 
  7747   003FAD                     T2HLT           equ	16301	;# 
  7748   003FAE                     T2CLKCON        equ	16302	;# 
  7749   003FAE                     T2CLK           equ	16302	;# 
  7750   003FAF                     T2RST           equ	16303	;# 
  7751   003FB0                     TMR1            equ	16304	;# 
  7752   003FB0                     TMR1L           equ	16304	;# 
  7753   003FB1                     TMR1H           equ	16305	;# 
  7754   003FB2                     T1CON           equ	16306	;# 
  7755   003FB2                     TMR1CON         equ	16306	;# 
  7756   003FB3                     T1GCON          equ	16307	;# 
  7757   003FB3                     TMR1GCON        equ	16307	;# 
  7758   003FB4                     T1GATE          equ	16308	;# 
  7759   003FB4                     TMR1GATE        equ	16308	;# 
  7760   003FB5                     T1CLK           equ	16309	;# 
  7761   003FB5                     TMR1CLK         equ	16309	;# 
  7762   003FB5                     PR1             equ	16309	;# 
  7763   003FB6                     TMR0L           equ	16310	;# 
  7764   003FB6                     TMR0            equ	16310	;# 
  7765   003FB7                     TMR0H           equ	16311	;# 
  7766   003FB7                     PR0             equ	16311	;# 
  7767   003FB8                     T0CON0          equ	16312	;# 
  7768   003FB9                     T0CON1          equ	16313	;# 
  7769   003FBA                     LATA            equ	16314	;# 
  7770   003FBB                     LATB            equ	16315	;# 
  7771   003FBC                     LATC            equ	16316	;# 
  7772   003FBD                     LATD            equ	16317	;# 
  7773   003FBE                     LATE            equ	16318	;# 
  7774   003FBF                     LATF            equ	16319	;# 
  7775   003FC2                     TRISA           equ	16322	;# 
  7776   003FC3                     TRISB           equ	16323	;# 
  7777   003FC4                     TRISC           equ	16324	;# 
  7778   003FC5                     TRISD           equ	16325	;# 
  7779   003FC6                     TRISE           equ	16326	;# 
  7780   003FC7                     TRISF           equ	16327	;# 
  7781   003FCA                     PORTA           equ	16330	;# 
  7782   003FCB                     PORTB           equ	16331	;# 
  7783   003FCC                     PORTC           equ	16332	;# 
  7784   003FCD                     PORTD           equ	16333	;# 
  7785   003FCE                     PORTE           equ	16334	;# 
  7786   003FCF                     PORTF           equ	16335	;# 
  7787   003FD2                     INTCON0         equ	16338	;# 
  7788   003FD3                     INTCON1         equ	16339	;# 
  7789   003FD4                     IVTLOCK         equ	16340	;# 
  7790   003FD5                     IVTBASE         equ	16341	;# 
  7791   003FD5                     IVTBASEL        equ	16341	;# 
  7792   003FD6                     IVTBASEH        equ	16342	;# 
  7793   003FD7                     IVTBASEU        equ	16343	;# 
  7794   003FD8                     STATUS          equ	16344	;# 
  7795   003FD9                     FSR2            equ	16345	;# 
  7796   003FD9                     FSR2L           equ	16345	;# 
  7797   003FDA                     FSR2H           equ	16346	;# 
  7798   003FDB                     PLUSW2          equ	16347	;# 
  7799   003FDC                     PREINC2         equ	16348	;# 
  7800   003FDD                     POSTDEC2        equ	16349	;# 
  7801   003FDE                     POSTINC2        equ	16350	;# 
  7802   003FDF                     INDF2           equ	16351	;# 
  7803   003FE0                     BSR             equ	16352	;# 
  7804   003FE1                     FSR1            equ	16353	;# 
  7805   003FE1                     FSR1L           equ	16353	;# 
  7806   003FE2                     FSR1H           equ	16354	;# 
  7807   003FE3                     PLUSW1          equ	16355	;# 
  7808   003FE4                     PREINC1         equ	16356	;# 
  7809   003FE5                     POSTDEC1        equ	16357	;# 
  7810   003FE6                     POSTINC1        equ	16358	;# 
  7811   003FE7                     INDF1           equ	16359	;# 
  7812   003FE8                     WREG            equ	16360	;# 
  7813   003FE9                     FSR0            equ	16361	;# 
  7814   003FE9                     FSR0L           equ	16361	;# 
  7815   003FEA                     FSR0H           equ	16362	;# 
  7816   003FEB                     PLUSW0          equ	16363	;# 
  7817   003FEC                     PREINC0         equ	16364	;# 
  7818   003FED                     POSTDEC0        equ	16365	;# 
  7819   003FEE                     POSTINC0        equ	16366	;# 
  7820   003FEF                     INDF0           equ	16367	;# 
  7821   003FF0                     PCON0           equ	16368	;# 
  7822   003FF1                     PCON1           equ	16369	;# 
  7823   003FF3                     PROD            equ	16371	;# 
  7824   003FF3                     PRODL           equ	16371	;# 
  7825   003FF4                     PRODH           equ	16372	;# 
  7826   003FF5                     TABLAT          equ	16373	;# 
  7827   003FF6                     TBLPTR          equ	16374	;# 
  7828   003FF6                     TBLPTRL         equ	16374	;# 
  7829   003FF7                     TBLPTRH         equ	16375	;# 
  7830   003FF8                     TBLPTRU         equ	16376	;# 
  7831   003FF9                     PCLAT           equ	16377	;# 
  7832   003FF9                     PCL             equ	16377	;# 
  7833   003FFA                     PCLATH          equ	16378	;# 
  7834   003FFB                     PCLATU          equ	16379	;# 
  7835   003FFC                     STKPTR          equ	16380	;# 
  7836   003FFD                     TOS             equ	16381	;# 
  7837   003FFD                     TOSL            equ	16381	;# 
  7838   003FFE                     TOSH            equ	16382	;# 
  7839   003FFF                     TOSU            equ	16383	;# 
  7840   003880                     STATUS_CSHAD    equ	14464	;# 
  7841   003881                     WREG_CSHAD      equ	14465	;# 
  7842   003882                     BSR_CSHAD       equ	14466	;# 
  7843   003883                     SHADCON         equ	14467	;# 
  7844   003884                     STATUS_SHAD     equ	14468	;# 
  7845   003885                     WREG_SHAD       equ	14469	;# 
  7846   003886                     BSR_SHAD        equ	14470	;# 
  7847   003887                     PCLATH_SHAD     equ	14471	;# 
  7848   003888                     PCLATU_SHAD     equ	14472	;# 
  7849   003889                     FSR0SH          equ	14473	;# 
  7850   003889                     FSR0L_SHAD      equ	14473	;# 
  7851   00388A                     FSR0H_SHAD      equ	14474	;# 
  7852   00388B                     FSR1SH          equ	14475	;# 
  7853   00388B                     FSR1L_SHAD      equ	14475	;# 
  7854   00388C                     FSR1H_SHAD      equ	14476	;# 
  7855   00388D                     FSR2SH          equ	14477	;# 
  7856   00388D                     FSR2L_SHAD      equ	14477	;# 
  7857   00388E                     FSR2H_SHAD      equ	14478	;# 
  7858   00388F                     PRODSH          equ	14479	;# 
  7859   00388F                     PRODL_SHAD      equ	14479	;# 
  7860   003890                     PRODH_SHAD      equ	14480	;# 
  7861   00389D                     IVTADL          equ	14493	;# 
  7862   00389E                     IVTADH          equ	14494	;# 
  7863   00389F                     IVTADU          equ	14495	;# 
  7864   00395B                     WDTCON0         equ	14683	;# 
  7865   00395C                     WDTCON1         equ	14684	;# 
  7866   00395D                     WDTPSL          equ	14685	;# 
  7867   00395E                     WDTPSH          equ	14686	;# 
  7868   00395F                     WDTTMR          equ	14687	;# 
  7869   003960                     CRCDATA         equ	14688	;# 
  7870   003960                     CRCDATL         equ	14688	;# 
  7871   003961                     CRCDATH         equ	14689	;# 
  7872   003962                     CRCACC          equ	14690	;# 
  7873   003962                     CRCACCL         equ	14690	;# 
  7874   003963                     CRCACCH         equ	14691	;# 
  7875   003964                     CRCSHFT         equ	14692	;# 
  7876   003964                     CRCSHIFTL       equ	14692	;# 
  7877   003965                     CRCSHIFTH       equ	14693	;# 
  7878   003966                     CRCXOR          equ	14694	;# 
  7879   003966                     CRCXORL         equ	14694	;# 
  7880   003967                     CRCXORH         equ	14695	;# 
  7881   003968                     CRCCON0         equ	14696	;# 
  7882   003969                     CRCCON1         equ	14697	;# 
  7883   003976                     SCANLADR        equ	14710	;# 
  7884   003976                     SCANLADRL       equ	14710	;# 
  7885   003977                     SCANLADRH       equ	14711	;# 
  7886   003978                     SCANLADRU       equ	14712	;# 
  7887   003979                     SCANHADR        equ	14713	;# 
  7888   003979                     SCANHADRL       equ	14713	;# 
  7889   00397A                     SCANHADRH       equ	14714	;# 
  7890   00397B                     SCANHADRU       equ	14715	;# 
  7891   00397C                     SCANCON0        equ	14716	;# 
  7892   00397D                     SCANTRIG        equ	14717	;# 
  7893   003980                     IPR0            equ	14720	;# 
  7894   003981                     IPR1            equ	14721	;# 
  7895   003982                     IPR2            equ	14722	;# 
  7896   003983                     IPR3            equ	14723	;# 
  7897   003984                     IPR4            equ	14724	;# 
  7898   003985                     IPR5            equ	14725	;# 
  7899   003986                     IPR6            equ	14726	;# 
  7900   003987                     IPR7            equ	14727	;# 
  7901   003988                     IPR8            equ	14728	;# 
  7902   003989                     IPR9            equ	14729	;# 
  7903   00398A                     IPR10           equ	14730	;# 
  7904   003990                     PIE0            equ	14736	;# 
  7905   003991                     PIE1            equ	14737	;# 
  7906   003992                     PIE2            equ	14738	;# 
  7907   003993                     PIE3            equ	14739	;# 
  7908   003994                     PIE4            equ	14740	;# 
  7909   003995                     PIE5            equ	14741	;# 
  7910   003996                     PIE6            equ	14742	;# 
  7911   003997                     PIE7            equ	14743	;# 
  7912   003998                     PIE8            equ	14744	;# 
  7913   003999                     PIE9            equ	14745	;# 
  7914   00399A                     PIE10           equ	14746	;# 
  7915   0039A0                     PIR0            equ	14752	;# 
  7916   0039A1                     PIR1            equ	14753	;# 
  7917   0039A2                     PIR2            equ	14754	;# 
  7918   0039A3                     PIR3            equ	14755	;# 
  7919   0039A4                     PIR4            equ	14756	;# 
  7920   0039A5                     PIR5            equ	14757	;# 
  7921   0039A6                     PIR6            equ	14758	;# 
  7922   0039A7                     PIR7            equ	14759	;# 
  7923   0039A8                     PIR8            equ	14760	;# 
  7924   0039A9                     PIR9            equ	14761	;# 
  7925   0039AA                     PIR10           equ	14762	;# 
  7926   0039C0                     PMD0            equ	14784	;# 
  7927   0039C1                     PMD1            equ	14785	;# 
  7928   0039C2                     PMD2            equ	14786	;# 
  7929   0039C3                     PMD3            equ	14787	;# 
  7930   0039C4                     PMD4            equ	14788	;# 
  7931   0039C5                     PMD5            equ	14789	;# 
  7932   0039C6                     PMD6            equ	14790	;# 
  7933   0039C7                     PMD7            equ	14791	;# 
  7934   0039D0                     BORCON          equ	14800	;# 
  7935   0039D1                     VREGCON         equ	14801	;# 
  7936   0039D8                     CPUDOZE         equ	14808	;# 
  7937   0039D9                     OSCCON1         equ	14809	;# 
  7938   0039DA                     OSCCON2         equ	14810	;# 
  7939   0039DB                     OSCCON3         equ	14811	;# 
  7940   0039DC                     OSCSTAT         equ	14812	;# 
  7941   0039DC                     OSCSTAT1        equ	14812	;# 
  7942   0039DD                     OSCEN           equ	14813	;# 
  7943   0039DE                     OSCTUNE         equ	14814	;# 
  7944   0039DF                     OSCFRQ          equ	14815	;# 
  7945   0039E0                     NVMADRL         equ	14816	;# 
  7946   0039E1                     NVMADRH         equ	14817	;# 
  7947   0039E3                     NVMDAT          equ	14819	;# 
  7948   0039E5                     NVMCON1         equ	14821	;# 
  7949   0039E6                     NVMCON2         equ	14822	;# 
  7950   0039EF                     PRLOCK          equ	14831	;# 
  7951   0039F1                     ISRPR           equ	14833	;# 
  7952   0039F2                     MAINPR          equ	14834	;# 
  7953   0039F3                     DMA1PR          equ	14835	;# 
  7954   0039F4                     DMA2PR          equ	14836	;# 
  7955   0039F7                     SCANPR          equ	14839	;# 
  7956   003A00                     RA0PPS          equ	14848	;# 
  7957   003A01                     RA1PPS          equ	14849	;# 
  7958   003A02                     RA2PPS          equ	14850	;# 
  7959   003A03                     RA3PPS          equ	14851	;# 
  7960   003A04                     RA4PPS          equ	14852	;# 
  7961   003A05                     RA5PPS          equ	14853	;# 
  7962   003A06                     RA6PPS          equ	14854	;# 
  7963   003A07                     RA7PPS          equ	14855	;# 
  7964   003A08                     RB0PPS          equ	14856	;# 
  7965   003A09                     RB1PPS          equ	14857	;# 
  7966   003A0A                     RB2PPS          equ	14858	;# 
  7967   003A0B                     RB3PPS          equ	14859	;# 
  7968   003A0C                     RB4PPS          equ	14860	;# 
  7969   003A0D                     RB5PPS          equ	14861	;# 
  7970   003A0E                     RB6PPS          equ	14862	;# 
  7971   003A0F                     RB7PPS          equ	14863	;# 
  7972   003A10                     RC0PPS          equ	14864	;# 
  7973   003A11                     RC1PPS          equ	14865	;# 
  7974   003A12                     RC2PPS          equ	14866	;# 
  7975   003A13                     RC3PPS          equ	14867	;# 
  7976   003A14                     RC4PPS          equ	14868	;# 
  7977   003A15                     RC5PPS          equ	14869	;# 
  7978   003A16                     RC6PPS          equ	14870	;# 
  7979   003A17                     RC7PPS          equ	14871	;# 
  7980   003A18                     RD0PPS          equ	14872	;# 
  7981   003A19                     RD1PPS          equ	14873	;# 
  7982   003A1A                     RD2PPS          equ	14874	;# 
  7983   003A1B                     RD3PPS          equ	14875	;# 
  7984   003A1C                     RD4PPS          equ	14876	;# 
  7985   003A1D                     RD5PPS          equ	14877	;# 
  7986   003A1E                     RD6PPS          equ	14878	;# 
  7987   003A1F                     RD7PPS          equ	14879	;# 
  7988   003A20                     RE0PPS          equ	14880	;# 
  7989   003A21                     RE1PPS          equ	14881	;# 
  7990   003A22                     RE2PPS          equ	14882	;# 
  7991   003A28                     RF0PPS          equ	14888	;# 
  7992   003A29                     RF1PPS          equ	14889	;# 
  7993   003A2A                     RF2PPS          equ	14890	;# 
  7994   003A2B                     RF3PPS          equ	14891	;# 
  7995   003A2C                     RF4PPS          equ	14892	;# 
  7996   003A2D                     RF5PPS          equ	14893	;# 
  7997   003A2E                     RF6PPS          equ	14894	;# 
  7998   003A2F                     RF7PPS          equ	14895	;# 
  7999   003A40                     ANSELA          equ	14912	;# 
  8000   003A41                     WPUA            equ	14913	;# 
  8001   003A42                     ODCONA          equ	14914	;# 
  8002   003A43                     SLRCONA         equ	14915	;# 
  8003   003A44                     INLVLA          equ	14916	;# 
  8004   003A45                     IOCAP           equ	14917	;# 
  8005   003A46                     IOCAN           equ	14918	;# 
  8006   003A47                     IOCAF           equ	14919	;# 
  8007   003A50                     ANSELB          equ	14928	;# 
  8008   003A51                     WPUB            equ	14929	;# 
  8009   003A52                     ODCONB          equ	14930	;# 
  8010   003A53                     SLRCONB         equ	14931	;# 
  8011   003A54                     INLVLB          equ	14932	;# 
  8012   003A55                     IOCBP           equ	14933	;# 
  8013   003A56                     IOCBN           equ	14934	;# 
  8014   003A57                     IOCBF           equ	14935	;# 
  8015   003A5A                     RB1I2C          equ	14938	;# 
  8016   003A5B                     RB2I2C          equ	14939	;# 
  8017   003A60                     ANSELC          equ	14944	;# 
  8018   003A61                     WPUC            equ	14945	;# 
  8019   003A62                     ODCONC          equ	14946	;# 
  8020   003A63                     SLRCONC         equ	14947	;# 
  8021   003A64                     INLVLC          equ	14948	;# 
  8022   003A65                     IOCCP           equ	14949	;# 
  8023   003A66                     IOCCN           equ	14950	;# 
  8024   003A67                     IOCCF           equ	14951	;# 
  8025   003A6A                     RC3I2C          equ	14954	;# 
  8026   003A6B                     RC4I2C          equ	14955	;# 
  8027   003A70                     ANSELD          equ	14960	;# 
  8028   003A71                     WPUD            equ	14961	;# 
  8029   003A72                     ODCOND          equ	14962	;# 
  8030   003A73                     SLRCOND         equ	14963	;# 
  8031   003A74                     INLVLD          equ	14964	;# 
  8032   003A7A                     RD0I2C          equ	14970	;# 
  8033   003A7B                     RD1I2C          equ	14971	;# 
  8034   003A80                     ANSELE          equ	14976	;# 
  8035   003A81                     WPUE            equ	14977	;# 
  8036   003A82                     ODCONE          equ	14978	;# 
  8037   003A83                     SLRCONE         equ	14979	;# 
  8038   003A84                     INLVLE          equ	14980	;# 
  8039   003A85                     IOCEP           equ	14981	;# 
  8040   003A86                     IOCEN           equ	14982	;# 
  8041   003A87                     IOCEF           equ	14983	;# 
  8042   003A90                     ANSELF          equ	14992	;# 
  8043   003A91                     WPUF            equ	14993	;# 
  8044   003A92                     ODCONF          equ	14994	;# 
  8045   003A93                     SLRCONF         equ	14995	;# 
  8046   003A94                     INLVLF          equ	14996	;# 
  8047   003ABF                     PPSLOCK         equ	15039	;# 
  8048   003AC0                     INT0PPS         equ	15040	;# 
  8049   003AC1                     INT1PPS         equ	15041	;# 
  8050   003AC2                     INT2PPS         equ	15042	;# 
  8051   003AC3                     T0CKIPPS        equ	15043	;# 
  8052   003AC4                     T1CKIPPS        equ	15044	;# 
  8053   003AC5                     T1GPPS          equ	15045	;# 
  8054   003AC6                     T3CKIPPS        equ	15046	;# 
  8055   003AC7                     T3GPPS          equ	15047	;# 
  8056   003AC8                     T5CKIPPS        equ	15048	;# 
  8057   003AC9                     T5GPPS          equ	15049	;# 
  8058   003ACA                     T2INPPS         equ	15050	;# 
  8059   003ACB                     T4INPPS         equ	15051	;# 
  8060   003ACC                     T6INPPS         equ	15052	;# 
  8061   003ACD                     CCP1PPS         equ	15053	;# 
  8062   003ACE                     CCP2PPS         equ	15054	;# 
  8063   003ACF                     CCP3PPS         equ	15055	;# 
  8064   003AD0                     CCP4PPS         equ	15056	;# 
  8065   003AD1                     SMT1WINPPS      equ	15057	;# 
  8066   003AD2                     SMT1SIGPPS      equ	15058	;# 
  8067   003AD3                     CWG1INPPS       equ	15059	;# 
  8068   003AD4                     CWG2INPPS       equ	15060	;# 
  8069   003AD5                     CWG3INPPS       equ	15061	;# 
  8070   003AD6                     MD1CARLPPS      equ	15062	;# 
  8071   003AD7                     MD1CARHPPS      equ	15063	;# 
  8072   003AD8                     MD1SRCPPS       equ	15064	;# 
  8073   003AD9                     CLCIN0PPS       equ	15065	;# 
  8074   003ADA                     CLCIN1PPS       equ	15066	;# 
  8075   003ADB                     CLCIN2PPS       equ	15067	;# 
  8076   003ADC                     CLCIN3PPS       equ	15068	;# 
  8077   003ADD                     ADACTPPS        equ	15069	;# 
  8078   003ADE                     SPI1SCKPPS      equ	15070	;# 
  8079   003ADF                     SPI1SDIPPS      equ	15071	;# 
  8080   003AE0                     SPI1SSPPS       equ	15072	;# 
  8081   003AE1                     I2C1SCLPPS      equ	15073	;# 
  8082   003AE2                     I2C1SDAPPS      equ	15074	;# 
  8083   003AE3                     I2C2SCLPPS      equ	15075	;# 
  8084   003AE4                     I2C2SDAPPS      equ	15076	;# 
  8085   003AE5                     U1RXPPS         equ	15077	;# 
  8086   003AE6                     U1CTSPPS        equ	15078	;# 
  8087   003AE8                     U2RXPPS         equ	15080	;# 
  8088   003AE9                     U2CTSPPS        equ	15081	;# 
  8089   003BC9                     DMA2BUF         equ	15305	;# 
  8090   003BCA                     DMA2DCNT        equ	15306	;# 
  8091   003BCA                     DMA2DCNTL       equ	15306	;# 
  8092   003BCB                     DMA2DCNTH       equ	15307	;# 
  8093   003BCC                     DMA2DPTR        equ	15308	;# 
  8094   003BCC                     DMA2DPTRL       equ	15308	;# 
  8095   003BCD                     DMA2DPTRH       equ	15309	;# 
  8096   003BCE                     DMA2DSZ         equ	15310	;# 
  8097   003BCE                     DMA2DSZL        equ	15310	;# 
  8098   003BCF                     DMA2DSZH        equ	15311	;# 
  8099   003BD0                     DMA2DSA         equ	15312	;# 
  8100   003BD0                     DMA2DSAL        equ	15312	;# 
  8101   003BD1                     DMA2DSAH        equ	15313	;# 
  8102   003BD2                     DMA2SCNT        equ	15314	;# 
  8103   003BD2                     DMA2SCNTL       equ	15314	;# 
  8104   003BD3                     DMA2SCNTH       equ	15315	;# 
  8105   003BD4                     DMA2SPTR        equ	15316	;# 
  8106   003BD4                     DMA2SPTRL       equ	15316	;# 
  8107   003BD5                     DMA2SPTRH       equ	15317	;# 
  8108   003BD6                     DMA2SPTRU       equ	15318	;# 
  8109   003BD7                     DMA2SSZ         equ	15319	;# 
  8110   003BD7                     DMA2SSZL        equ	15319	;# 
  8111   003BD8                     DMA2SSZH        equ	15320	;# 
  8112   003BD9                     DMA2SSA         equ	15321	;# 
  8113   003BD9                     DMA2SSAL        equ	15321	;# 
  8114   003BDA                     DMA2SSAH        equ	15322	;# 
  8115   003BDB                     DMA2SSAU        equ	15323	;# 
  8116   003BDC                     DMA2CON0        equ	15324	;# 
  8117   003BDD                     DMA2CON1        equ	15325	;# 
  8118   003BDE                     DMA2AIRQ        equ	15326	;# 
  8119   003BDF                     DMA2SIRQ        equ	15327	;# 
  8120   003BE9                     DMA1BUF         equ	15337	;# 
  8121   003BEA                     DMA1DCNT        equ	15338	;# 
  8122   003BEA                     DMA1DCNTL       equ	15338	;# 
  8123   003BEB                     DMA1DCNTH       equ	15339	;# 
  8124   003BEC                     DMA1DPTR        equ	15340	;# 
  8125   003BEC                     DMA1DPTRL       equ	15340	;# 
  8126   003BED                     DMA1DPTRH       equ	15341	;# 
  8127   003BEE                     DMA1DSZ         equ	15342	;# 
  8128   003BEE                     DMA1DSZL        equ	15342	;# 
  8129   003BEF                     DMA1DSZH        equ	15343	;# 
  8130   003BF0                     DMA1DSA         equ	15344	;# 
  8131   003BF0                     DMA1DSAL        equ	15344	;# 
  8132   003BF1                     DMA1DSAH        equ	15345	;# 
  8133   003BF2                     DMA1SCNT        equ	15346	;# 
  8134   003BF2                     DMA1SCNTL       equ	15346	;# 
  8135   003BF3                     DMA1SCNTH       equ	15347	;# 
  8136   003BF4                     DMA1SPTR        equ	15348	;# 
  8137   003BF4                     DMA1SPTRL       equ	15348	;# 
  8138   003BF5                     DMA1SPTRH       equ	15349	;# 
  8139   003BF6                     DMA1SPTRU       equ	15350	;# 
  8140   003BF7                     DMA1SSZ         equ	15351	;# 
  8141   003BF7                     DMA1SSZL        equ	15351	;# 
  8142   003BF8                     DMA1SSZH        equ	15352	;# 
  8143   003BF9                     DMA1SSA         equ	15353	;# 
  8144   003BF9                     DMA1SSAL        equ	15353	;# 
  8145   003BFA                     DMA1SSAH        equ	15354	;# 
  8146   003BFB                     DMA1SSAU        equ	15355	;# 
  8147   003BFC                     DMA1CON0        equ	15356	;# 
  8148   003BFD                     DMA1CON1        equ	15357	;# 
  8149   003BFE                     DMA1AIRQ        equ	15358	;# 
  8150   003BFF                     DMA1SIRQ        equ	15359	;# 
  8151   003C56                     CLC4CON         equ	15446	;# 
  8152   003C57                     CLC4POL         equ	15447	;# 
  8153   003C58                     CLC4SEL0        equ	15448	;# 
  8154   003C59                     CLC4SEL1        equ	15449	;# 
  8155   003C5A                     CLC4SEL2        equ	15450	;# 
  8156   003C5B                     CLC4SEL3        equ	15451	;# 
  8157   003C5C                     CLC4GLS0        equ	15452	;# 
  8158   003C5D                     CLC4GLS1        equ	15453	;# 
  8159   003C5E                     CLC4GLS2        equ	15454	;# 
  8160   003C5F                     CLC4GLS3        equ	15455	;# 
  8161   003C60                     CLC3CON         equ	15456	;# 
  8162   003C61                     CLC3POL         equ	15457	;# 
  8163   003C62                     CLC3SEL0        equ	15458	;# 
  8164   003C63                     CLC3SEL1        equ	15459	;# 
  8165   003C64                     CLC3SEL2        equ	15460	;# 
  8166   003C65                     CLC3SEL3        equ	15461	;# 
  8167   003C66                     CLC3GLS0        equ	15462	;# 
  8168   003C67                     CLC3GLS1        equ	15463	;# 
  8169   003C68                     CLC3GLS2        equ	15464	;# 
  8170   003C69                     CLC3GLS3        equ	15465	;# 
  8171   003C6A                     CLC2CON         equ	15466	;# 
  8172   003C6B                     CLC2POL         equ	15467	;# 
  8173   003C6C                     CLC2SEL0        equ	15468	;# 
  8174   003C6D                     CLC2SEL1        equ	15469	;# 
  8175   003C6E                     CLC2SEL2        equ	15470	;# 
  8176   003C6F                     CLC2SEL3        equ	15471	;# 
  8177   003C70                     CLC2GLS0        equ	15472	;# 
  8178   003C71                     CLC2GLS1        equ	15473	;# 
  8179   003C72                     CLC2GLS2        equ	15474	;# 
  8180   003C73                     CLC2GLS3        equ	15475	;# 
  8181   003C74                     CLC1CON         equ	15476	;# 
  8182   003C75                     CLC1POL         equ	15477	;# 
  8183   003C76                     CLC1SEL0        equ	15478	;# 
  8184   003C77                     CLC1SEL1        equ	15479	;# 
  8185   003C78                     CLC1SEL2        equ	15480	;# 
  8186   003C79                     CLC1SEL3        equ	15481	;# 
  8187   003C7A                     CLC1GLS0        equ	15482	;# 
  8188   003C7B                     CLC1GLS1        equ	15483	;# 
  8189   003C7C                     CLC1GLS2        equ	15484	;# 
  8190   003C7D                     CLC1GLS3        equ	15485	;# 
  8191   003C7E                     CLCDATA0        equ	15486	;# 
  8192   003CE5                     CLKRCON         equ	15589	;# 
  8193   003CE6                     CLKRCLK         equ	15590	;# 
  8194   003CFA                     MD1CON0         equ	15610	;# 
  8195   003CFB                     MD1CON1         equ	15611	;# 
  8196   003CFC                     MD1SRC          equ	15612	;# 
  8197   003CFD                     MD1CARL         equ	15613	;# 
  8198   003CFE                     MD1CARH         equ	15614	;# 
  8199   003D10                     SPI1RXB         equ	15632	;# 
  8200   003D11                     SPI1TXB         equ	15633	;# 
  8201   003D12                     SPI1TCNT        equ	15634	;# 
  8202   003D12                     SPI1TCNTL       equ	15634	;# 
  8203   003D13                     SPI1TCNTH       equ	15635	;# 
  8204   003D14                     SPI1CON0        equ	15636	;# 
  8205   003D15                     SPI1CON1        equ	15637	;# 
  8206   003D16                     SPI1CON2        equ	15638	;# 
  8207   003D17                     SPI1STATUS      equ	15639	;# 
  8208   003D18                     SPI1TWIDTH      equ	15640	;# 
  8209   003D19                     SPI1BAUD        equ	15641	;# 
  8210   003D1A                     SPI1INTF        equ	15642	;# 
  8211   003D1B                     SPI1INTE        equ	15643	;# 
  8212   003D1C                     SPI1CLK         equ	15644	;# 
  8213   003D54                     I2C2RXB         equ	15700	;# 
  8214   003D55                     I2C2TXB         equ	15701	;# 
  8215   003D56                     I2C2CNT         equ	15702	;# 
  8216   003D57                     I2C2ADB0        equ	15703	;# 
  8217   003D58                     I2C2ADB1        equ	15704	;# 
  8218   003D59                     I2C2ADR0        equ	15705	;# 
  8219   003D5A                     I2C2ADR1        equ	15706	;# 
  8220   003D5B                     I2C2ADR2        equ	15707	;# 
  8221   003D5C                     I2C2ADR3        equ	15708	;# 
  8222   003D5D                     I2C2CON0        equ	15709	;# 
  8223   003D5E                     I2C2CON1        equ	15710	;# 
  8224   003D5F                     I2C2CON2        equ	15711	;# 
  8225   003D60                     I2C2ERR         equ	15712	;# 
  8226   003D61                     I2C2STAT0       equ	15713	;# 
  8227   003D62                     I2C2STAT1       equ	15714	;# 
  8228   003D63                     I2C2PIR         equ	15715	;# 
  8229   003D64                     I2C2PIE         equ	15716	;# 
  8230   003D65                     I2C2CLK         equ	15717	;# 
  8231   003D66                     I2C2BTO         equ	15718	;# 
  8232   003D6A                     I2C1RXB         equ	15722	;# 
  8233   003D6B                     I2C1TXB         equ	15723	;# 
  8234   003D6C                     I2C1CNT         equ	15724	;# 
  8235   003D6D                     I2C1ADB0        equ	15725	;# 
  8236   003D6E                     I2C1ADB1        equ	15726	;# 
  8237   003D6F                     I2C1ADR0        equ	15727	;# 
  8238   003D70                     I2C1ADR1        equ	15728	;# 
  8239   003D71                     I2C1ADR2        equ	15729	;# 
  8240   003D72                     I2C1ADR3        equ	15730	;# 
  8241   003D73                     I2C1CON0        equ	15731	;# 
  8242   003D74                     I2C1CON1        equ	15732	;# 
  8243   003D75                     I2C1CON2        equ	15733	;# 
  8244   003D76                     I2C1ERR         equ	15734	;# 
  8245   003D77                     I2C1STAT0       equ	15735	;# 
  8246   003D78                     I2C1STAT1       equ	15736	;# 
  8247   003D79                     I2C1PIR         equ	15737	;# 
  8248   003D7A                     I2C1PIE         equ	15738	;# 
  8249   003D7B                     I2C1CLK         equ	15739	;# 
  8250   003D7C                     I2C1BTO         equ	15740	;# 
  8251   003DD0                     U2RXB           equ	15824	;# 
  8252   003DD0                     U2RXBL          equ	15824	;# 
  8253   003DD2                     U2TXB           equ	15826	;# 
  8254   003DD2                     U2TXBL          equ	15826	;# 
  8255   003DD4                     U2P1            equ	15828	;# 
  8256   003DD4                     U2P1L           equ	15828	;# 
  8257   003DD6                     U2P2            equ	15830	;# 
  8258   003DD6                     U2P2L           equ	15830	;# 
  8259   003DD8                     U2P3            equ	15832	;# 
  8260   003DD8                     U2P3L           equ	15832	;# 
  8261   003DDA                     U2CON0          equ	15834	;# 
  8262   003DDB                     U2CON1          equ	15835	;# 
  8263   003DDC                     U2CON2          equ	15836	;# 
  8264   003DDD                     U2BRG           equ	15837	;# 
  8265   003DDD                     U2BRGL          equ	15837	;# 
  8266   003DDE                     U2BRGH          equ	15838	;# 
  8267   003DDF                     U2FIFO          equ	15839	;# 
  8268   003DE0                     U2UIR           equ	15840	;# 
  8269   003DE1                     U2ERRIR         equ	15841	;# 
  8270   003DE2                     U2ERRIE         equ	15842	;# 
  8271   003DE8                     U1RXB           equ	15848	;# 
  8272   003DE8                     U1RXBL          equ	15848	;# 
  8273   003DE9                     U1RXCHK         equ	15849	;# 
  8274   003DEA                     U1TXB           equ	15850	;# 
  8275   003DEA                     U1TXBL          equ	15850	;# 
  8276   003DEB                     U1TXCHK         equ	15851	;# 
  8277   003DEC                     U1P1            equ	15852	;# 
  8278   003DEC                     U1P1L           equ	15852	;# 
  8279   003DED                     U1P1H           equ	15853	;# 
  8280   003DEE                     U1P2            equ	15854	;# 
  8281   003DEE                     U1P2L           equ	15854	;# 
  8282   003DEF                     U1P2H           equ	15855	;# 
  8283   003DF0                     U1P3            equ	15856	;# 
  8284   003DF0                     U1P3L           equ	15856	;# 
  8285   003DF1                     U1P3H           equ	15857	;# 
  8286   003DF2                     U1CON0          equ	15858	;# 
  8287   003DF3                     U1CON1          equ	15859	;# 
  8288   003DF4                     U1CON2          equ	15860	;# 
  8289   003DF5                     U1BRG           equ	15861	;# 
  8290   003DF5                     U1BRGL          equ	15861	;# 
  8291   003DF6                     U1BRGH          equ	15862	;# 
  8292   003DF7                     U1FIFO          equ	15863	;# 
  8293   003DF8                     U1UIR           equ	15864	;# 
  8294   003DF9                     U1ERRIR         equ	15865	;# 
  8295   003DFA                     U1ERRIE         equ	15866	;# 
  8296   003E9C                     DAC1CON1        equ	16028	;# 
  8297   003E9E                     DAC1CON0        equ	16030	;# 
  8298   003EB8                     CM2CON0         equ	16056	;# 
  8299   003EB9                     CM2CON1         equ	16057	;# 
  8300   003EBA                     CM2NCH          equ	16058	;# 
  8301   003EBB                     CM2PCH          equ	16059	;# 
  8302   003EBC                     CM1CON0         equ	16060	;# 
  8303   003EBD                     CM1CON1         equ	16061	;# 
  8304   003EBE                     CM1NCH          equ	16062	;# 
  8305   003EBF                     CM1PCH          equ	16063	;# 
  8306   003EC0                     CMOUT           equ	16064	;# 
  8307   003EC1                     FVRCON          equ	16065	;# 
  8308   003EC3                     ZCDCON          equ	16067	;# 
  8309   003EC9                     HLVDCON0        equ	16073	;# 
  8310   003ECA                     HLVDCON1        equ	16074	;# 
  8311   003ED7                     ADCP            equ	16087	;# 
  8312   003EDE                     ADLTH           equ	16094	;# 
  8313   003EDE                     ADLTHL          equ	16094	;# 
  8314   003EDF                     ADLTHH          equ	16095	;# 
  8315   003EE0                     ADUTH           equ	16096	;# 
  8316   003EE0                     ADUTHL          equ	16096	;# 
  8317   003EE1                     ADUTHH          equ	16097	;# 
  8318   003EE2                     ADERR           equ	16098	;# 
  8319   003EE2                     ADERRL          equ	16098	;# 
  8320   003EE3                     ADERRH          equ	16099	;# 
  8321   003EE4                     ADSTPT          equ	16100	;# 
  8322   003EE4                     ADSTPTL         equ	16100	;# 
  8323   003EE5                     ADSTPTH         equ	16101	;# 
  8324   003EE6                     ADFLTR          equ	16102	;# 
  8325   003EE6                     ADFLTRL         equ	16102	;# 
  8326   003EE7                     ADFLTRH         equ	16103	;# 
  8327   003EE8                     ADACC           equ	16104	;# 
  8328   003EE8                     ADACCL          equ	16104	;# 
  8329   003EE9                     ADACCH          equ	16105	;# 
  8330   003EEA                     ADACCU          equ	16106	;# 
  8331   003EEB                     ADCNT           equ	16107	;# 
  8332   003EEC                     ADRPT           equ	16108	;# 
  8333   003EED                     ADPREV          equ	16109	;# 
  8334   003EED                     ADPREVL         equ	16109	;# 
  8335   003EEE                     ADPREVH         equ	16110	;# 
  8336   003EEF                     ADRES           equ	16111	;# 
  8337   003EEF                     ADRESL          equ	16111	;# 
  8338   003EF0                     ADRESH          equ	16112	;# 
  8339   003EF1                     ADPCH           equ	16113	;# 
  8340   003EF3                     ADACQ           equ	16115	;# 
  8341   003EF3                     ADACQL          equ	16115	;# 
  8342   003EF4                     ADACQH          equ	16116	;# 
  8343   003EF5                     ADCAP           equ	16117	;# 
  8344   003EF6                     ADPRE           equ	16118	;# 
  8345   003EF6                     ADPREL          equ	16118	;# 
  8346   003EF7                     ADPREH          equ	16119	;# 
  8347   003EF8                     ADCON0          equ	16120	;# 
  8348   003EF9                     ADCON1          equ	16121	;# 
  8349   003EFA                     ADCON2          equ	16122	;# 
  8350   003EFB                     ADCON3          equ	16123	;# 
  8351   003EFC                     ADSTAT          equ	16124	;# 
  8352   003EFD                     ADREF           equ	16125	;# 
  8353   003EFE                     ADACT           equ	16126	;# 
  8354   003EFF                     ADCLK           equ	16127	;# 
  8355   003F12                     SMT1TMR         equ	16146	;# 
  8356   003F12                     SMT1TMRL        equ	16146	;# 
  8357   003F13                     SMT1TMRH        equ	16147	;# 
  8358   003F14                     SMT1TMRU        equ	16148	;# 
  8359   003F15                     SMT1CPR         equ	16149	;# 
  8360   003F15                     SMT1CPRL        equ	16149	;# 
  8361   003F16                     SMT1CPRH        equ	16150	;# 
  8362   003F17                     SMT1CPRU        equ	16151	;# 
  8363   003F18                     SMT1CPW         equ	16152	;# 
  8364   003F18                     SMT1CPWL        equ	16152	;# 
  8365   003F19                     SMT1CPWH        equ	16153	;# 
  8366   003F1A                     SMT1CPWU        equ	16154	;# 
  8367   003F1B                     SMT1PR          equ	16155	;# 
  8368   003F1B                     SMT1PRL         equ	16155	;# 
  8369   003F1C                     SMT1PRH         equ	16156	;# 
  8370   003F1D                     SMT1PRU         equ	16157	;# 
  8371   003F1E                     SMT1CON0        equ	16158	;# 
  8372   003F1F                     SMT1CON1        equ	16159	;# 
  8373   003F20                     SMT1STAT        equ	16160	;# 
  8374   003F21                     SMT1CLK         equ	16161	;# 
  8375   003F22                     SMT1SIG         equ	16162	;# 
  8376   003F23                     SMT1WIN         equ	16163	;# 
  8377   003F38                     NCO1ACC         equ	16184	;# 
  8378   003F38                     NCO1ACCL        equ	16184	;# 
  8379   003F39                     NCO1ACCH        equ	16185	;# 
  8380   003F3A                     NCO1ACCU        equ	16186	;# 
  8381   003F3B                     NCO1INC         equ	16187	;# 
  8382   003F3B                     NCO1INCL        equ	16187	;# 
  8383   003F3C                     NCO1INCH        equ	16188	;# 
  8384   003F3D                     NCO1INCU        equ	16189	;# 
  8385   003F3E                     NCO1CON         equ	16190	;# 
  8386   003F3F                     NCO1CLK         equ	16191	;# 
  8387   003F40                     CWG3CLK         equ	16192	;# 
  8388   003F40                     CWG3CLKCON      equ	16192	;# 
  8389   003F41                     CWG3ISM         equ	16193	;# 
  8390   003F41                     CWG3DAT         equ	16193	;# 
  8391   003F42                     CWG3DBR         equ	16194	;# 
  8392   003F43                     CWG3DBF         equ	16195	;# 
  8393   003F44                     CWG3CON0        equ	16196	;# 
  8394   003F45                     CWG3CON1        equ	16197	;# 
  8395   003F46                     CWG3AS0         equ	16198	;# 
  8396   003F47                     CWG3AS1         equ	16199	;# 
  8397   003F48                     CWG3STR         equ	16200	;# 
  8398   003F49                     CWG2CLK         equ	16201	;# 
  8399   003F49                     CWG2CLKCON      equ	16201	;# 
  8400   003F4A                     CWG2ISM         equ	16202	;# 
  8401   003F4A                     CWG2DAT         equ	16202	;# 
  8402   003F4B                     CWG2DBR         equ	16203	;# 
  8403   003F4C                     CWG2DBF         equ	16204	;# 
  8404   003F4D                     CWG2CON0        equ	16205	;# 
  8405   003F4E                     CWG2CON1        equ	16206	;# 
  8406   003F4F                     CWG2AS0         equ	16207	;# 
  8407   003F50                     CWG2AS1         equ	16208	;# 
  8408   003F51                     CWG2STR         equ	16209	;# 
  8409   003F52                     CWG1CLK         equ	16210	;# 
  8410   003F52                     CWG1CLKCON      equ	16210	;# 
  8411   003F53                     CWG1ISM         equ	16211	;# 
  8412   003F53                     CWG1DAT         equ	16211	;# 
  8413   003F54                     CWG1DBR         equ	16212	;# 
  8414   003F55                     CWG1DBF         equ	16213	;# 
  8415   003F56                     CWG1CON0        equ	16214	;# 
  8416   003F57                     CWG1CON1        equ	16215	;# 
  8417   003F58                     CWG1AS0         equ	16216	;# 
  8418   003F59                     CWG1AS1         equ	16217	;# 
  8419   003F5A                     CWG1STR         equ	16218	;# 
  8420   003F5E                     CCPTMRS0        equ	16222	;# 
  8421   003F5F                     CCPTMRS1        equ	16223	;# 
  8422   003F60                     PWM8DC          equ	16224	;# 
  8423   003F60                     PWM8DCL         equ	16224	;# 
  8424   003F61                     PWM8DCH         equ	16225	;# 
  8425   003F62                     PWM8CON         equ	16226	;# 
  8426   003F64                     PWM7DC          equ	16228	;# 
  8427   003F64                     PWM7DCL         equ	16228	;# 
  8428   003F65                     PWM7DCH         equ	16229	;# 
  8429   003F66                     PWM7CON         equ	16230	;# 
  8430   003F68                     PWM6DC          equ	16232	;# 
  8431   003F68                     PWM6DCL         equ	16232	;# 
  8432   003F69                     PWM6DCH         equ	16233	;# 
  8433   003F6A                     PWM6CON         equ	16234	;# 
  8434   003F6C                     PWM5DC          equ	16236	;# 
  8435   003F6C                     PWM5DCL         equ	16236	;# 
  8436   003F6D                     PWM5DCH         equ	16237	;# 
  8437   003F6E                     PWM5CON         equ	16238	;# 
  8438   003F70                     CCPR4           equ	16240	;# 
  8439   003F70                     CCPR4L          equ	16240	;# 
  8440   003F71                     CCPR4H          equ	16241	;# 
  8441   003F72                     CCP4CON         equ	16242	;# 
  8442   003F73                     CCP4CAP         equ	16243	;# 
  8443   003F74                     CCPR3           equ	16244	;# 
  8444   003F74                     CCPR3L          equ	16244	;# 
  8445   003F75                     CCPR3H          equ	16245	;# 
  8446   003F76                     CCP3CON         equ	16246	;# 
  8447   003F77                     CCP3CAP         equ	16247	;# 
  8448   003F78                     CCPR2           equ	16248	;# 
  8449   003F78                     CCPR2L          equ	16248	;# 
  8450   003F79                     CCPR2H          equ	16249	;# 
  8451   003F7A                     CCP2CON         equ	16250	;# 
  8452   003F7B                     CCP2CAP         equ	16251	;# 
  8453   003F7C                     CCPR1           equ	16252	;# 
  8454   003F7C                     CCPR1L          equ	16252	;# 
  8455   003F7D                     CCPR1H          equ	16253	;# 
  8456   003F7E                     CCP1CON         equ	16254	;# 
  8457   003F7F                     CCP1CAP         equ	16255	;# 
  8458   003F92                     T6TMR           equ	16274	;# 
  8459   003F92                     TMR6            equ	16274	;# 
  8460   003F93                     T6PR            equ	16275	;# 
  8461   003F93                     PR6             equ	16275	;# 
  8462   003F94                     T6CON           equ	16276	;# 
  8463   003F95                     T6HLT           equ	16277	;# 
  8464   003F96                     T6CLKCON        equ	16278	;# 
  8465   003F96                     T6CLK           equ	16278	;# 
  8466   003F97                     T6RST           equ	16279	;# 
  8467   003F98                     TMR5            equ	16280	;# 
  8468   003F98                     TMR5L           equ	16280	;# 
  8469   003F99                     TMR5H           equ	16281	;# 
  8470   003F9A                     T5CON           equ	16282	;# 
  8471   003F9A                     TMR5CON         equ	16282	;# 
  8472   003F9B                     T5GCON          equ	16283	;# 
  8473   003F9B                     TMR5GCON        equ	16283	;# 
  8474   003F9C                     T5GATE          equ	16284	;# 
  8475   003F9C                     TMR5GATE        equ	16284	;# 
  8476   003F9D                     T5CLK           equ	16285	;# 
  8477   003F9D                     TMR5CLK         equ	16285	;# 
  8478   003F9D                     PR5             equ	16285	;# 
  8479   003F9E                     T4TMR           equ	16286	;# 
  8480   003F9E                     TMR4            equ	16286	;# 
  8481   003F9F                     T4PR            equ	16287	;# 
  8482   003F9F                     PR4             equ	16287	;# 
  8483   003FA0                     T4CON           equ	16288	;# 
  8484   003FA1                     T4HLT           equ	16289	;# 
  8485   003FA2                     T4CLKCON        equ	16290	;# 
  8486   003FA2                     T4CLK           equ	16290	;# 
  8487   003FA3                     T4RST           equ	16291	;# 
  8488   003FA4                     TMR3            equ	16292	;# 
  8489   003FA4                     TMR3L           equ	16292	;# 
  8490   003FA5                     TMR3H           equ	16293	;# 
  8491   003FA6                     T3CON           equ	16294	;# 
  8492   003FA6                     TMR3CON         equ	16294	;# 
  8493   003FA7                     T3GCON          equ	16295	;# 
  8494   003FA7                     TMR3GCON        equ	16295	;# 
  8495   003FA8                     T3GATE          equ	16296	;# 
  8496   003FA8                     TMR3GATE        equ	16296	;# 
  8497   003FA9                     T3CLK           equ	16297	;# 
  8498   003FA9                     TMR3CLK         equ	16297	;# 
  8499   003FA9                     PR3             equ	16297	;# 
  8500   003FAA                     T2TMR           equ	16298	;# 
  8501   003FAA                     TMR2            equ	16298	;# 
  8502   003FAB                     T2PR            equ	16299	;# 
  8503   003FAB                     PR2             equ	16299	;# 
  8504   003FAC                     T2CON           equ	16300	;# 
  8505   003FAD                     T2HLT           equ	16301	;# 
  8506   003FAE                     T2CLKCON        equ	16302	;# 
  8507   003FAE                     T2CLK           equ	16302	;# 
  8508   003FAF                     T2RST           equ	16303	;# 
  8509   003FB0                     TMR1            equ	16304	;# 
  8510   003FB0                     TMR1L           equ	16304	;# 
  8511   003FB1                     TMR1H           equ	16305	;# 
  8512   003FB2                     T1CON           equ	16306	;# 
  8513   003FB2                     TMR1CON         equ	16306	;# 
  8514   003FB3                     T1GCON          equ	16307	;# 
  8515   003FB3                     TMR1GCON        equ	16307	;# 
  8516   003FB4                     T1GATE          equ	16308	;# 
  8517   003FB4                     TMR1GATE        equ	16308	;# 
  8518   003FB5                     T1CLK           equ	16309	;# 
  8519   003FB5                     TMR1CLK         equ	16309	;# 
  8520   003FB5                     PR1             equ	16309	;# 
  8521   003FB6                     TMR0L           equ	16310	;# 
  8522   003FB6                     TMR0            equ	16310	;# 
  8523   003FB7                     TMR0H           equ	16311	;# 
  8524   003FB7                     PR0             equ	16311	;# 
  8525   003FB8                     T0CON0          equ	16312	;# 
  8526   003FB9                     T0CON1          equ	16313	;# 
  8527   003FBA                     LATA            equ	16314	;# 
  8528   003FBB                     LATB            equ	16315	;# 
  8529   003FBC                     LATC            equ	16316	;# 
  8530   003FBD                     LATD            equ	16317	;# 
  8531   003FBE                     LATE            equ	16318	;# 
  8532   003FBF                     LATF            equ	16319	;# 
  8533   003FC2                     TRISA           equ	16322	;# 
  8534   003FC3                     TRISB           equ	16323	;# 
  8535   003FC4                     TRISC           equ	16324	;# 
  8536   003FC5                     TRISD           equ	16325	;# 
  8537   003FC6                     TRISE           equ	16326	;# 
  8538   003FC7                     TRISF           equ	16327	;# 
  8539   003FCA                     PORTA           equ	16330	;# 
  8540   003FCB                     PORTB           equ	16331	;# 
  8541   003FCC                     PORTC           equ	16332	;# 
  8542   003FCD                     PORTD           equ	16333	;# 
  8543   003FCE                     PORTE           equ	16334	;# 
  8544   003FCF                     PORTF           equ	16335	;# 
  8545   003FD2                     INTCON0         equ	16338	;# 
  8546   003FD3                     INTCON1         equ	16339	;# 
  8547   003FD4                     IVTLOCK         equ	16340	;# 
  8548   003FD5                     IVTBASE         equ	16341	;# 
  8549   003FD5                     IVTBASEL        equ	16341	;# 
  8550   003FD6                     IVTBASEH        equ	16342	;# 
  8551   003FD7                     IVTBASEU        equ	16343	;# 
  8552   003FD8                     STATUS          equ	16344	;# 
  8553   003FD9                     FSR2            equ	16345	;# 
  8554   003FD9                     FSR2L           equ	16345	;# 
  8555   003FDA                     FSR2H           equ	16346	;# 
  8556   003FDB                     PLUSW2          equ	16347	;# 
  8557   003FDC                     PREINC2         equ	16348	;# 
  8558   003FDD                     POSTDEC2        equ	16349	;# 
  8559   003FDE                     POSTINC2        equ	16350	;# 
  8560   003FDF                     INDF2           equ	16351	;# 
  8561   003FE0                     BSR             equ	16352	;# 
  8562   003FE1                     FSR1            equ	16353	;# 
  8563   003FE1                     FSR1L           equ	16353	;# 
  8564   003FE2                     FSR1H           equ	16354	;# 
  8565   003FE3                     PLUSW1          equ	16355	;# 
  8566   003FE4                     PREINC1         equ	16356	;# 
  8567   003FE5                     POSTDEC1        equ	16357	;# 
  8568   003FE6                     POSTINC1        equ	16358	;# 
  8569   003FE7                     INDF1           equ	16359	;# 
  8570   003FE8                     WREG            equ	16360	;# 
  8571   003FE9                     FSR0            equ	16361	;# 
  8572   003FE9                     FSR0L           equ	16361	;# 
  8573   003FEA                     FSR0H           equ	16362	;# 
  8574   003FEB                     PLUSW0          equ	16363	;# 
  8575   003FEC                     PREINC0         equ	16364	;# 
  8576   003FED                     POSTDEC0        equ	16365	;# 
  8577   003FEE                     POSTINC0        equ	16366	;# 
  8578   003FEF                     INDF0           equ	16367	;# 
  8579   003FF0                     PCON0           equ	16368	;# 
  8580   003FF1                     PCON1           equ	16369	;# 
  8581   003FF3                     PROD            equ	16371	;# 
  8582   003FF3                     PRODL           equ	16371	;# 
  8583   003FF4                     PRODH           equ	16372	;# 
  8584   003FF5                     TABLAT          equ	16373	;# 
  8585   003FF6                     TBLPTR          equ	16374	;# 
  8586   003FF6                     TBLPTRL         equ	16374	;# 
  8587   003FF7                     TBLPTRH         equ	16375	;# 
  8588   003FF8                     TBLPTRU         equ	16376	;# 
  8589   003FF9                     PCLAT           equ	16377	;# 
  8590   003FF9                     PCL             equ	16377	;# 
  8591   003FFA                     PCLATH          equ	16378	;# 
  8592   003FFB                     PCLATU          equ	16379	;# 
  8593   003FFC                     STKPTR          equ	16380	;# 
  8594   003FFD                     TOS             equ	16381	;# 
  8595   003FFD                     TOSL            equ	16381	;# 
  8596   003FFE                     TOSH            equ	16382	;# 
  8597   003FFF                     TOSU            equ	16383	;# 
  8598   003880                     STATUS_CSHAD    equ	14464	;# 
  8599   003881                     WREG_CSHAD      equ	14465	;# 
  8600   003882                     BSR_CSHAD       equ	14466	;# 
  8601   003883                     SHADCON         equ	14467	;# 
  8602   003884                     STATUS_SHAD     equ	14468	;# 
  8603   003885                     WREG_SHAD       equ	14469	;# 
  8604   003886                     BSR_SHAD        equ	14470	;# 
  8605   003887                     PCLATH_SHAD     equ	14471	;# 
  8606   003888                     PCLATU_SHAD     equ	14472	;# 
  8607   003889                     FSR0SH          equ	14473	;# 
  8608   003889                     FSR0L_SHAD      equ	14473	;# 
  8609   00388A                     FSR0H_SHAD      equ	14474	;# 
  8610   00388B                     FSR1SH          equ	14475	;# 
  8611   00388B                     FSR1L_SHAD      equ	14475	;# 
  8612   00388C                     FSR1H_SHAD      equ	14476	;# 
  8613   00388D                     FSR2SH          equ	14477	;# 
  8614   00388D                     FSR2L_SHAD      equ	14477	;# 
  8615   00388E                     FSR2H_SHAD      equ	14478	;# 
  8616   00388F                     PRODSH          equ	14479	;# 
  8617   00388F                     PRODL_SHAD      equ	14479	;# 
  8618   003890                     PRODH_SHAD      equ	14480	;# 
  8619   00389D                     IVTADL          equ	14493	;# 
  8620   00389E                     IVTADH          equ	14494	;# 
  8621   00389F                     IVTADU          equ	14495	;# 
  8622   00395B                     WDTCON0         equ	14683	;# 
  8623   00395C                     WDTCON1         equ	14684	;# 
  8624   00395D                     WDTPSL          equ	14685	;# 
  8625   00395E                     WDTPSH          equ	14686	;# 
  8626   00395F                     WDTTMR          equ	14687	;# 
  8627   003960                     CRCDATA         equ	14688	;# 
  8628   003960                     CRCDATL         equ	14688	;# 
  8629   003961                     CRCDATH         equ	14689	;# 
  8630   003962                     CRCACC          equ	14690	;# 
  8631   003962                     CRCACCL         equ	14690	;# 
  8632   003963                     CRCACCH         equ	14691	;# 
  8633   003964                     CRCSHFT         equ	14692	;# 
  8634   003964                     CRCSHIFTL       equ	14692	;# 
  8635   003965                     CRCSHIFTH       equ	14693	;# 
  8636   003966                     CRCXOR          equ	14694	;# 
  8637   003966                     CRCXORL         equ	14694	;# 
  8638   003967                     CRCXORH         equ	14695	;# 
  8639   003968                     CRCCON0         equ	14696	;# 
  8640   003969                     CRCCON1         equ	14697	;# 
  8641   003976                     SCANLADR        equ	14710	;# 
  8642   003976                     SCANLADRL       equ	14710	;# 
  8643   003977                     SCANLADRH       equ	14711	;# 
  8644   003978                     SCANLADRU       equ	14712	;# 
  8645   003979                     SCANHADR        equ	14713	;# 
  8646   003979                     SCANHADRL       equ	14713	;# 
  8647   00397A                     SCANHADRH       equ	14714	;# 
  8648   00397B                     SCANHADRU       equ	14715	;# 
  8649   00397C                     SCANCON0        equ	14716	;# 
  8650   00397D                     SCANTRIG        equ	14717	;# 
  8651   003980                     IPR0            equ	14720	;# 
  8652   003981                     IPR1            equ	14721	;# 
  8653   003982                     IPR2            equ	14722	;# 
  8654   003983                     IPR3            equ	14723	;# 
  8655   003984                     IPR4            equ	14724	;# 
  8656   003985                     IPR5            equ	14725	;# 
  8657   003986                     IPR6            equ	14726	;# 
  8658   003987                     IPR7            equ	14727	;# 
  8659   003988                     IPR8            equ	14728	;# 
  8660   003989                     IPR9            equ	14729	;# 
  8661   00398A                     IPR10           equ	14730	;# 
  8662   003990                     PIE0            equ	14736	;# 
  8663   003991                     PIE1            equ	14737	;# 
  8664   003992                     PIE2            equ	14738	;# 
  8665   003993                     PIE3            equ	14739	;# 
  8666   003994                     PIE4            equ	14740	;# 
  8667   003995                     PIE5            equ	14741	;# 
  8668   003996                     PIE6            equ	14742	;# 
  8669   003997                     PIE7            equ	14743	;# 
  8670   003998                     PIE8            equ	14744	;# 
  8671   003999                     PIE9            equ	14745	;# 
  8672   00399A                     PIE10           equ	14746	;# 
  8673   0039A0                     PIR0            equ	14752	;# 
  8674   0039A1                     PIR1            equ	14753	;# 
  8675   0039A2                     PIR2            equ	14754	;# 
  8676   0039A3                     PIR3            equ	14755	;# 
  8677   0039A4                     PIR4            equ	14756	;# 
  8678   0039A5                     PIR5            equ	14757	;# 
  8679   0039A6                     PIR6            equ	14758	;# 
  8680   0039A7                     PIR7            equ	14759	;# 
  8681   0039A8                     PIR8            equ	14760	;# 
  8682   0039A9                     PIR9            equ	14761	;# 
  8683   0039AA                     PIR10           equ	14762	;# 
  8684   0039C0                     PMD0            equ	14784	;# 
  8685   0039C1                     PMD1            equ	14785	;# 
  8686   0039C2                     PMD2            equ	14786	;# 
  8687   0039C3                     PMD3            equ	14787	;# 
  8688   0039C4                     PMD4            equ	14788	;# 
  8689   0039C5                     PMD5            equ	14789	;# 
  8690   0039C6                     PMD6            equ	14790	;# 
  8691   0039C7                     PMD7            equ	14791	;# 
  8692   0039D0                     BORCON          equ	14800	;# 
  8693   0039D1                     VREGCON         equ	14801	;# 
  8694   0039D8                     CPUDOZE         equ	14808	;# 
  8695   0039D9                     OSCCON1         equ	14809	;# 
  8696   0039DA                     OSCCON2         equ	14810	;# 
  8697   0039DB                     OSCCON3         equ	14811	;# 
  8698   0039DC                     OSCSTAT         equ	14812	;# 
  8699   0039DC                     OSCSTAT1        equ	14812	;# 
  8700   0039DD                     OSCEN           equ	14813	;# 
  8701   0039DE                     OSCTUNE         equ	14814	;# 
  8702   0039DF                     OSCFRQ          equ	14815	;# 
  8703   0039E0                     NVMADRL         equ	14816	;# 
  8704   0039E1                     NVMADRH         equ	14817	;# 
  8705   0039E3                     NVMDAT          equ	14819	;# 
  8706   0039E5                     NVMCON1         equ	14821	;# 
  8707   0039E6                     NVMCON2         equ	14822	;# 
  8708   0039EF                     PRLOCK          equ	14831	;# 
  8709   0039F1                     ISRPR           equ	14833	;# 
  8710   0039F2                     MAINPR          equ	14834	;# 
  8711   0039F3                     DMA1PR          equ	14835	;# 
  8712   0039F4                     DMA2PR          equ	14836	;# 
  8713   0039F7                     SCANPR          equ	14839	;# 
  8714   003A00                     RA0PPS          equ	14848	;# 
  8715   003A01                     RA1PPS          equ	14849	;# 
  8716   003A02                     RA2PPS          equ	14850	;# 
  8717   003A03                     RA3PPS          equ	14851	;# 
  8718   003A04                     RA4PPS          equ	14852	;# 
  8719   003A05                     RA5PPS          equ	14853	;# 
  8720   003A06                     RA6PPS          equ	14854	;# 
  8721   003A07                     RA7PPS          equ	14855	;# 
  8722   003A08                     RB0PPS          equ	14856	;# 
  8723   003A09                     RB1PPS          equ	14857	;# 
  8724   003A0A                     RB2PPS          equ	14858	;# 
  8725   003A0B                     RB3PPS          equ	14859	;# 
  8726   003A0C                     RB4PPS          equ	14860	;# 
  8727   003A0D                     RB5PPS          equ	14861	;# 
  8728   003A0E                     RB6PPS          equ	14862	;# 
  8729   003A0F                     RB7PPS          equ	14863	;# 
  8730   003A10                     RC0PPS          equ	14864	;# 
  8731   003A11                     RC1PPS          equ	14865	;# 
  8732   003A12                     RC2PPS          equ	14866	;# 
  8733   003A13                     RC3PPS          equ	14867	;# 
  8734   003A14                     RC4PPS          equ	14868	;# 
  8735   003A15                     RC5PPS          equ	14869	;# 
  8736   003A16                     RC6PPS          equ	14870	;# 
  8737   003A17                     RC7PPS          equ	14871	;# 
  8738   003A18                     RD0PPS          equ	14872	;# 
  8739   003A19                     RD1PPS          equ	14873	;# 
  8740   003A1A                     RD2PPS          equ	14874	;# 
  8741   003A1B                     RD3PPS          equ	14875	;# 
  8742   003A1C                     RD4PPS          equ	14876	;# 
  8743   003A1D                     RD5PPS          equ	14877	;# 
  8744   003A1E                     RD6PPS          equ	14878	;# 
  8745   003A1F                     RD7PPS          equ	14879	;# 
  8746   003A20                     RE0PPS          equ	14880	;# 
  8747   003A21                     RE1PPS          equ	14881	;# 
  8748   003A22                     RE2PPS          equ	14882	;# 
  8749   003A28                     RF0PPS          equ	14888	;# 
  8750   003A29                     RF1PPS          equ	14889	;# 
  8751   003A2A                     RF2PPS          equ	14890	;# 
  8752   003A2B                     RF3PPS          equ	14891	;# 
  8753   003A2C                     RF4PPS          equ	14892	;# 
  8754   003A2D                     RF5PPS          equ	14893	;# 
  8755   003A2E                     RF6PPS          equ	14894	;# 
  8756   003A2F                     RF7PPS          equ	14895	;# 
  8757   003A40                     ANSELA          equ	14912	;# 
  8758   003A41                     WPUA            equ	14913	;# 
  8759   003A42                     ODCONA          equ	14914	;# 
  8760   003A43                     SLRCONA         equ	14915	;# 
  8761   003A44                     INLVLA          equ	14916	;# 
  8762   003A45                     IOCAP           equ	14917	;# 
  8763   003A46                     IOCAN           equ	14918	;# 
  8764   003A47                     IOCAF           equ	14919	;# 
  8765   003A50                     ANSELB          equ	14928	;# 
  8766   003A51                     WPUB            equ	14929	;# 
  8767   003A52                     ODCONB          equ	14930	;# 
  8768   003A53                     SLRCONB         equ	14931	;# 
  8769   003A54                     INLVLB          equ	14932	;# 
  8770   003A55                     IOCBP           equ	14933	;# 
  8771   003A56                     IOCBN           equ	14934	;# 
  8772   003A57                     IOCBF           equ	14935	;# 
  8773   003A5A                     RB1I2C          equ	14938	;# 
  8774   003A5B                     RB2I2C          equ	14939	;# 
  8775   003A60                     ANSELC          equ	14944	;# 
  8776   003A61                     WPUC            equ	14945	;# 
  8777   003A62                     ODCONC          equ	14946	;# 
  8778   003A63                     SLRCONC         equ	14947	;# 
  8779   003A64                     INLVLC          equ	14948	;# 
  8780   003A65                     IOCCP           equ	14949	;# 
  8781   003A66                     IOCCN           equ	14950	;# 
  8782   003A67                     IOCCF           equ	14951	;# 
  8783   003A6A                     RC3I2C          equ	14954	;# 
  8784   003A6B                     RC4I2C          equ	14955	;# 
  8785   003A70                     ANSELD          equ	14960	;# 
  8786   003A71                     WPUD            equ	14961	;# 
  8787   003A72                     ODCOND          equ	14962	;# 
  8788   003A73                     SLRCOND         equ	14963	;# 
  8789   003A74                     INLVLD          equ	14964	;# 
  8790   003A7A                     RD0I2C          equ	14970	;# 
  8791   003A7B                     RD1I2C          equ	14971	;# 
  8792   003A80                     ANSELE          equ	14976	;# 
  8793   003A81                     WPUE            equ	14977	;# 
  8794   003A82                     ODCONE          equ	14978	;# 
  8795   003A83                     SLRCONE         equ	14979	;# 
  8796   003A84                     INLVLE          equ	14980	;# 
  8797   003A85                     IOCEP           equ	14981	;# 
  8798   003A86                     IOCEN           equ	14982	;# 
  8799   003A87                     IOCEF           equ	14983	;# 
  8800   003A90                     ANSELF          equ	14992	;# 
  8801   003A91                     WPUF            equ	14993	;# 
  8802   003A92                     ODCONF          equ	14994	;# 
  8803   003A93                     SLRCONF         equ	14995	;# 
  8804   003A94                     INLVLF          equ	14996	;# 
  8805   003ABF                     PPSLOCK         equ	15039	;# 
  8806   003AC0                     INT0PPS         equ	15040	;# 
  8807   003AC1                     INT1PPS         equ	15041	;# 
  8808   003AC2                     INT2PPS         equ	15042	;# 
  8809   003AC3                     T0CKIPPS        equ	15043	;# 
  8810   003AC4                     T1CKIPPS        equ	15044	;# 
  8811   003AC5                     T1GPPS          equ	15045	;# 
  8812   003AC6                     T3CKIPPS        equ	15046	;# 
  8813   003AC7                     T3GPPS          equ	15047	;# 
  8814   003AC8                     T5CKIPPS        equ	15048	;# 
  8815   003AC9                     T5GPPS          equ	15049	;# 
  8816   003ACA                     T2INPPS         equ	15050	;# 
  8817   003ACB                     T4INPPS         equ	15051	;# 
  8818   003ACC                     T6INPPS         equ	15052	;# 
  8819   003ACD                     CCP1PPS         equ	15053	;# 
  8820   003ACE                     CCP2PPS         equ	15054	;# 
  8821   003ACF                     CCP3PPS         equ	15055	;# 
  8822   003AD0                     CCP4PPS         equ	15056	;# 
  8823   003AD1                     SMT1WINPPS      equ	15057	;# 
  8824   003AD2                     SMT1SIGPPS      equ	15058	;# 
  8825   003AD3                     CWG1INPPS       equ	15059	;# 
  8826   003AD4                     CWG2INPPS       equ	15060	;# 
  8827   003AD5                     CWG3INPPS       equ	15061	;# 
  8828   003AD6                     MD1CARLPPS      equ	15062	;# 
  8829   003AD7                     MD1CARHPPS      equ	15063	;# 
  8830   003AD8                     MD1SRCPPS       equ	15064	;# 
  8831   003AD9                     CLCIN0PPS       equ	15065	;# 
  8832   003ADA                     CLCIN1PPS       equ	15066	;# 
  8833   003ADB                     CLCIN2PPS       equ	15067	;# 
  8834   003ADC                     CLCIN3PPS       equ	15068	;# 
  8835   003ADD                     ADACTPPS        equ	15069	;# 
  8836   003ADE                     SPI1SCKPPS      equ	15070	;# 
  8837   003ADF                     SPI1SDIPPS      equ	15071	;# 
  8838   003AE0                     SPI1SSPPS       equ	15072	;# 
  8839   003AE1                     I2C1SCLPPS      equ	15073	;# 
  8840   003AE2                     I2C1SDAPPS      equ	15074	;# 
  8841   003AE3                     I2C2SCLPPS      equ	15075	;# 
  8842   003AE4                     I2C2SDAPPS      equ	15076	;# 
  8843   003AE5                     U1RXPPS         equ	15077	;# 
  8844   003AE6                     U1CTSPPS        equ	15078	;# 
  8845   003AE8                     U2RXPPS         equ	15080	;# 
  8846   003AE9                     U2CTSPPS        equ	15081	;# 
  8847   003BC9                     DMA2BUF         equ	15305	;# 
  8848   003BCA                     DMA2DCNT        equ	15306	;# 
  8849   003BCA                     DMA2DCNTL       equ	15306	;# 
  8850   003BCB                     DMA2DCNTH       equ	15307	;# 
  8851   003BCC                     DMA2DPTR        equ	15308	;# 
  8852   003BCC                     DMA2DPTRL       equ	15308	;# 
  8853   003BCD                     DMA2DPTRH       equ	15309	;# 
  8854   003BCE                     DMA2DSZ         equ	15310	;# 
  8855   003BCE                     DMA2DSZL        equ	15310	;# 
  8856   003BCF                     DMA2DSZH        equ	15311	;# 
  8857   003BD0                     DMA2DSA         equ	15312	;# 
  8858   003BD0                     DMA2DSAL        equ	15312	;# 
  8859   003BD1                     DMA2DSAH        equ	15313	;# 
  8860   003BD2                     DMA2SCNT        equ	15314	;# 
  8861   003BD2                     DMA2SCNTL       equ	15314	;# 
  8862   003BD3                     DMA2SCNTH       equ	15315	;# 
  8863   003BD4                     DMA2SPTR        equ	15316	;# 
  8864   003BD4                     DMA2SPTRL       equ	15316	;# 
  8865   003BD5                     DMA2SPTRH       equ	15317	;# 
  8866   003BD6                     DMA2SPTRU       equ	15318	;# 
  8867   003BD7                     DMA2SSZ         equ	15319	;# 
  8868   003BD7                     DMA2SSZL        equ	15319	;# 
  8869   003BD8                     DMA2SSZH        equ	15320	;# 
  8870   003BD9                     DMA2SSA         equ	15321	;# 
  8871   003BD9                     DMA2SSAL        equ	15321	;# 
  8872   003BDA                     DMA2SSAH        equ	15322	;# 
  8873   003BDB                     DMA2SSAU        equ	15323	;# 
  8874   003BDC                     DMA2CON0        equ	15324	;# 
  8875   003BDD                     DMA2CON1        equ	15325	;# 
  8876   003BDE                     DMA2AIRQ        equ	15326	;# 
  8877   003BDF                     DMA2SIRQ        equ	15327	;# 
  8878   003BE9                     DMA1BUF         equ	15337	;# 
  8879   003BEA                     DMA1DCNT        equ	15338	;# 
  8880   003BEA                     DMA1DCNTL       equ	15338	;# 
  8881   003BEB                     DMA1DCNTH       equ	15339	;# 
  8882   003BEC                     DMA1DPTR        equ	15340	;# 
  8883   003BEC                     DMA1DPTRL       equ	15340	;# 
  8884   003BED                     DMA1DPTRH       equ	15341	;# 
  8885   003BEE                     DMA1DSZ         equ	15342	;# 
  8886   003BEE                     DMA1DSZL        equ	15342	;# 
  8887   003BEF                     DMA1DSZH        equ	15343	;# 
  8888   003BF0                     DMA1DSA         equ	15344	;# 
  8889   003BF0                     DMA1DSAL        equ	15344	;# 
  8890   003BF1                     DMA1DSAH        equ	15345	;# 
  8891   003BF2                     DMA1SCNT        equ	15346	;# 
  8892   003BF2                     DMA1SCNTL       equ	15346	;# 
  8893   003BF3                     DMA1SCNTH       equ	15347	;# 
  8894   003BF4                     DMA1SPTR        equ	15348	;# 
  8895   003BF4                     DMA1SPTRL       equ	15348	;# 
  8896   003BF5                     DMA1SPTRH       equ	15349	;# 
  8897   003BF6                     DMA1SPTRU       equ	15350	;# 
  8898   003BF7                     DMA1SSZ         equ	15351	;# 
  8899   003BF7                     DMA1SSZL        equ	15351	;# 
  8900   003BF8                     DMA1SSZH        equ	15352	;# 
  8901   003BF9                     DMA1SSA         equ	15353	;# 
  8902   003BF9                     DMA1SSAL        equ	15353	;# 
  8903   003BFA                     DMA1SSAH        equ	15354	;# 
  8904   003BFB                     DMA1SSAU        equ	15355	;# 
  8905   003BFC                     DMA1CON0        equ	15356	;# 
  8906   003BFD                     DMA1CON1        equ	15357	;# 
  8907   003BFE                     DMA1AIRQ        equ	15358	;# 
  8908   003BFF                     DMA1SIRQ        equ	15359	;# 
  8909   003C56                     CLC4CON         equ	15446	;# 
  8910   003C57                     CLC4POL         equ	15447	;# 
  8911   003C58                     CLC4SEL0        equ	15448	;# 
  8912   003C59                     CLC4SEL1        equ	15449	;# 
  8913   003C5A                     CLC4SEL2        equ	15450	;# 
  8914   003C5B                     CLC4SEL3        equ	15451	;# 
  8915   003C5C                     CLC4GLS0        equ	15452	;# 
  8916   003C5D                     CLC4GLS1        equ	15453	;# 
  8917   003C5E                     CLC4GLS2        equ	15454	;# 
  8918   003C5F                     CLC4GLS3        equ	15455	;# 
  8919   003C60                     CLC3CON         equ	15456	;# 
  8920   003C61                     CLC3POL         equ	15457	;# 
  8921   003C62                     CLC3SEL0        equ	15458	;# 
  8922   003C63                     CLC3SEL1        equ	15459	;# 
  8923   003C64                     CLC3SEL2        equ	15460	;# 
  8924   003C65                     CLC3SEL3        equ	15461	;# 
  8925   003C66                     CLC3GLS0        equ	15462	;# 
  8926   003C67                     CLC3GLS1        equ	15463	;# 
  8927   003C68                     CLC3GLS2        equ	15464	;# 
  8928   003C69                     CLC3GLS3        equ	15465	;# 
  8929   003C6A                     CLC2CON         equ	15466	;# 
  8930   003C6B                     CLC2POL         equ	15467	;# 
  8931   003C6C                     CLC2SEL0        equ	15468	;# 
  8932   003C6D                     CLC2SEL1        equ	15469	;# 
  8933   003C6E                     CLC2SEL2        equ	15470	;# 
  8934   003C6F                     CLC2SEL3        equ	15471	;# 
  8935   003C70                     CLC2GLS0        equ	15472	;# 
  8936   003C71                     CLC2GLS1        equ	15473	;# 
  8937   003C72                     CLC2GLS2        equ	15474	;# 
  8938   003C73                     CLC2GLS3        equ	15475	;# 
  8939   003C74                     CLC1CON         equ	15476	;# 
  8940   003C75                     CLC1POL         equ	15477	;# 
  8941   003C76                     CLC1SEL0        equ	15478	;# 
  8942   003C77                     CLC1SEL1        equ	15479	;# 
  8943   003C78                     CLC1SEL2        equ	15480	;# 
  8944   003C79                     CLC1SEL3        equ	15481	;# 
  8945   003C7A                     CLC1GLS0        equ	15482	;# 
  8946   003C7B                     CLC1GLS1        equ	15483	;# 
  8947   003C7C                     CLC1GLS2        equ	15484	;# 
  8948   003C7D                     CLC1GLS3        equ	15485	;# 
  8949   003C7E                     CLCDATA0        equ	15486	;# 
  8950   003CE5                     CLKRCON         equ	15589	;# 
  8951   003CE6                     CLKRCLK         equ	15590	;# 
  8952   003CFA                     MD1CON0         equ	15610	;# 
  8953   003CFB                     MD1CON1         equ	15611	;# 
  8954   003CFC                     MD1SRC          equ	15612	;# 
  8955   003CFD                     MD1CARL         equ	15613	;# 
  8956   003CFE                     MD1CARH         equ	15614	;# 
  8957   003D10                     SPI1RXB         equ	15632	;# 
  8958   003D11                     SPI1TXB         equ	15633	;# 
  8959   003D12                     SPI1TCNT        equ	15634	;# 
  8960   003D12                     SPI1TCNTL       equ	15634	;# 
  8961   003D13                     SPI1TCNTH       equ	15635	;# 
  8962   003D14                     SPI1CON0        equ	15636	;# 
  8963   003D15                     SPI1CON1        equ	15637	;# 
  8964   003D16                     SPI1CON2        equ	15638	;# 
  8965   003D17                     SPI1STATUS      equ	15639	;# 
  8966   003D18                     SPI1TWIDTH      equ	15640	;# 
  8967   003D19                     SPI1BAUD        equ	15641	;# 
  8968   003D1A                     SPI1INTF        equ	15642	;# 
  8969   003D1B                     SPI1INTE        equ	15643	;# 
  8970   003D1C                     SPI1CLK         equ	15644	;# 
  8971   003D54                     I2C2RXB         equ	15700	;# 
  8972   003D55                     I2C2TXB         equ	15701	;# 
  8973   003D56                     I2C2CNT         equ	15702	;# 
  8974   003D57                     I2C2ADB0        equ	15703	;# 
  8975   003D58                     I2C2ADB1        equ	15704	;# 
  8976   003D59                     I2C2ADR0        equ	15705	;# 
  8977   003D5A                     I2C2ADR1        equ	15706	;# 
  8978   003D5B                     I2C2ADR2        equ	15707	;# 
  8979   003D5C                     I2C2ADR3        equ	15708	;# 
  8980   003D5D                     I2C2CON0        equ	15709	;# 
  8981   003D5E                     I2C2CON1        equ	15710	;# 
  8982   003D5F                     I2C2CON2        equ	15711	;# 
  8983   003D60                     I2C2ERR         equ	15712	;# 
  8984   003D61                     I2C2STAT0       equ	15713	;# 
  8985   003D62                     I2C2STAT1       equ	15714	;# 
  8986   003D63                     I2C2PIR         equ	15715	;# 
  8987   003D64                     I2C2PIE         equ	15716	;# 
  8988   003D65                     I2C2CLK         equ	15717	;# 
  8989   003D66                     I2C2BTO         equ	15718	;# 
  8990   003D6A                     I2C1RXB         equ	15722	;# 
  8991   003D6B                     I2C1TXB         equ	15723	;# 
  8992   003D6C                     I2C1CNT         equ	15724	;# 
  8993   003D6D                     I2C1ADB0        equ	15725	;# 
  8994   003D6E                     I2C1ADB1        equ	15726	;# 
  8995   003D6F                     I2C1ADR0        equ	15727	;# 
  8996   003D70                     I2C1ADR1        equ	15728	;# 
  8997   003D71                     I2C1ADR2        equ	15729	;# 
  8998   003D72                     I2C1ADR3        equ	15730	;# 
  8999   003D73                     I2C1CON0        equ	15731	;# 
  9000   003D74                     I2C1CON1        equ	15732	;# 
  9001   003D75                     I2C1CON2        equ	15733	;# 
  9002   003D76                     I2C1ERR         equ	15734	;# 
  9003   003D77                     I2C1STAT0       equ	15735	;# 
  9004   003D78                     I2C1STAT1       equ	15736	;# 
  9005   003D79                     I2C1PIR         equ	15737	;# 
  9006   003D7A                     I2C1PIE         equ	15738	;# 
  9007   003D7B                     I2C1CLK         equ	15739	;# 
  9008   003D7C                     I2C1BTO         equ	15740	;# 
  9009   003DD0                     U2RXB           equ	15824	;# 
  9010   003DD0                     U2RXBL          equ	15824	;# 
  9011   003DD2                     U2TXB           equ	15826	;# 
  9012   003DD2                     U2TXBL          equ	15826	;# 
  9013   003DD4                     U2P1            equ	15828	;# 
  9014   003DD4                     U2P1L           equ	15828	;# 
  9015   003DD6                     U2P2            equ	15830	;# 
  9016   003DD6                     U2P2L           equ	15830	;# 
  9017   003DD8                     U2P3            equ	15832	;# 
  9018   003DD8                     U2P3L           equ	15832	;# 
  9019   003DDA                     U2CON0          equ	15834	;# 
  9020   003DDB                     U2CON1          equ	15835	;# 
  9021   003DDC                     U2CON2          equ	15836	;# 
  9022   003DDD                     U2BRG           equ	15837	;# 
  9023   003DDD                     U2BRGL          equ	15837	;# 
  9024   003DDE                     U2BRGH          equ	15838	;# 
  9025   003DDF                     U2FIFO          equ	15839	;# 
  9026   003DE0                     U2UIR           equ	15840	;# 
  9027   003DE1                     U2ERRIR         equ	15841	;# 
  9028   003DE2                     U2ERRIE         equ	15842	;# 
  9029   003DE8                     U1RXB           equ	15848	;# 
  9030   003DE8                     U1RXBL          equ	15848	;# 
  9031   003DE9                     U1RXCHK         equ	15849	;# 
  9032   003DEA                     U1TXB           equ	15850	;# 
  9033   003DEA                     U1TXBL          equ	15850	;# 
  9034   003DEB                     U1TXCHK         equ	15851	;# 
  9035   003DEC                     U1P1            equ	15852	;# 
  9036   003DEC                     U1P1L           equ	15852	;# 
  9037   003DED                     U1P1H           equ	15853	;# 
  9038   003DEE                     U1P2            equ	15854	;# 
  9039   003DEE                     U1P2L           equ	15854	;# 
  9040   003DEF                     U1P2H           equ	15855	;# 
  9041   003DF0                     U1P3            equ	15856	;# 
  9042   003DF0                     U1P3L           equ	15856	;# 
  9043   003DF1                     U1P3H           equ	15857	;# 
  9044   003DF2                     U1CON0          equ	15858	;# 
  9045   003DF3                     U1CON1          equ	15859	;# 
  9046   003DF4                     U1CON2          equ	15860	;# 
  9047   003DF5                     U1BRG           equ	15861	;# 
  9048   003DF5                     U1BRGL          equ	15861	;# 
  9049   003DF6                     U1BRGH          equ	15862	;# 
  9050   003DF7                     U1FIFO          equ	15863	;# 
  9051   003DF8                     U1UIR           equ	15864	;# 
  9052   003DF9                     U1ERRIR         equ	15865	;# 
  9053   003DFA                     U1ERRIE         equ	15866	;# 
  9054   003E9C                     DAC1CON1        equ	16028	;# 
  9055   003E9E                     DAC1CON0        equ	16030	;# 
  9056   003EB8                     CM2CON0         equ	16056	;# 
  9057   003EB9                     CM2CON1         equ	16057	;# 
  9058   003EBA                     CM2NCH          equ	16058	;# 
  9059   003EBB                     CM2PCH          equ	16059	;# 
  9060   003EBC                     CM1CON0         equ	16060	;# 
  9061   003EBD                     CM1CON1         equ	16061	;# 
  9062   003EBE                     CM1NCH          equ	16062	;# 
  9063   003EBF                     CM1PCH          equ	16063	;# 
  9064   003EC0                     CMOUT           equ	16064	;# 
  9065   003EC1                     FVRCON          equ	16065	;# 
  9066   003EC3                     ZCDCON          equ	16067	;# 
  9067   003EC9                     HLVDCON0        equ	16073	;# 
  9068   003ECA                     HLVDCON1        equ	16074	;# 
  9069   003ED7                     ADCP            equ	16087	;# 
  9070   003EDE                     ADLTH           equ	16094	;# 
  9071   003EDE                     ADLTHL          equ	16094	;# 
  9072   003EDF                     ADLTHH          equ	16095	;# 
  9073   003EE0                     ADUTH           equ	16096	;# 
  9074   003EE0                     ADUTHL          equ	16096	;# 
  9075   003EE1                     ADUTHH          equ	16097	;# 
  9076   003EE2                     ADERR           equ	16098	;# 
  9077   003EE2                     ADERRL          equ	16098	;# 
  9078   003EE3                     ADERRH          equ	16099	;# 
  9079   003EE4                     ADSTPT          equ	16100	;# 
  9080   003EE4                     ADSTPTL         equ	16100	;# 
  9081   003EE5                     ADSTPTH         equ	16101	;# 
  9082   003EE6                     ADFLTR          equ	16102	;# 
  9083   003EE6                     ADFLTRL         equ	16102	;# 
  9084   003EE7                     ADFLTRH         equ	16103	;# 
  9085   003EE8                     ADACC           equ	16104	;# 
  9086   003EE8                     ADACCL          equ	16104	;# 
  9087   003EE9                     ADACCH          equ	16105	;# 
  9088   003EEA                     ADACCU          equ	16106	;# 
  9089   003EEB                     ADCNT           equ	16107	;# 
  9090   003EEC                     ADRPT           equ	16108	;# 
  9091   003EED                     ADPREV          equ	16109	;# 
  9092   003EED                     ADPREVL         equ	16109	;# 
  9093   003EEE                     ADPREVH         equ	16110	;# 
  9094   003EEF                     ADRES           equ	16111	;# 
  9095   003EEF                     ADRESL          equ	16111	;# 
  9096   003EF0                     ADRESH          equ	16112	;# 
  9097   003EF1                     ADPCH           equ	16113	;# 
  9098   003EF3                     ADACQ           equ	16115	;# 
  9099   003EF3                     ADACQL          equ	16115	;# 
  9100   003EF4                     ADACQH          equ	16116	;# 
  9101   003EF5                     ADCAP           equ	16117	;# 
  9102   003EF6                     ADPRE           equ	16118	;# 
  9103   003EF6                     ADPREL          equ	16118	;# 
  9104   003EF7                     ADPREH          equ	16119	;# 
  9105   003EF8                     ADCON0          equ	16120	;# 
  9106   003EF9                     ADCON1          equ	16121	;# 
  9107   003EFA                     ADCON2          equ	16122	;# 
  9108   003EFB                     ADCON3          equ	16123	;# 
  9109   003EFC                     ADSTAT          equ	16124	;# 
  9110   003EFD                     ADREF           equ	16125	;# 
  9111   003EFE                     ADACT           equ	16126	;# 
  9112   003EFF                     ADCLK           equ	16127	;# 
  9113   003F12                     SMT1TMR         equ	16146	;# 
  9114   003F12                     SMT1TMRL        equ	16146	;# 
  9115   003F13                     SMT1TMRH        equ	16147	;# 
  9116   003F14                     SMT1TMRU        equ	16148	;# 
  9117   003F15                     SMT1CPR         equ	16149	;# 
  9118   003F15                     SMT1CPRL        equ	16149	;# 
  9119   003F16                     SMT1CPRH        equ	16150	;# 
  9120   003F17                     SMT1CPRU        equ	16151	;# 
  9121   003F18                     SMT1CPW         equ	16152	;# 
  9122   003F18                     SMT1CPWL        equ	16152	;# 
  9123   003F19                     SMT1CPWH        equ	16153	;# 
  9124   003F1A                     SMT1CPWU        equ	16154	;# 
  9125   003F1B                     SMT1PR          equ	16155	;# 
  9126   003F1B                     SMT1PRL         equ	16155	;# 
  9127   003F1C                     SMT1PRH         equ	16156	;# 
  9128   003F1D                     SMT1PRU         equ	16157	;# 
  9129   003F1E                     SMT1CON0        equ	16158	;# 
  9130   003F1F                     SMT1CON1        equ	16159	;# 
  9131   003F20                     SMT1STAT        equ	16160	;# 
  9132   003F21                     SMT1CLK         equ	16161	;# 
  9133   003F22                     SMT1SIG         equ	16162	;# 
  9134   003F23                     SMT1WIN         equ	16163	;# 
  9135   003F38                     NCO1ACC         equ	16184	;# 
  9136   003F38                     NCO1ACCL        equ	16184	;# 
  9137   003F39                     NCO1ACCH        equ	16185	;# 
  9138   003F3A                     NCO1ACCU        equ	16186	;# 
  9139   003F3B                     NCO1INC         equ	16187	;# 
  9140   003F3B                     NCO1INCL        equ	16187	;# 
  9141   003F3C                     NCO1INCH        equ	16188	;# 
  9142   003F3D                     NCO1INCU        equ	16189	;# 
  9143   003F3E                     NCO1CON         equ	16190	;# 
  9144   003F3F                     NCO1CLK         equ	16191	;# 
  9145   003F40                     CWG3CLK         equ	16192	;# 
  9146   003F40                     CWG3CLKCON      equ	16192	;# 
  9147   003F41                     CWG3ISM         equ	16193	;# 
  9148   003F41                     CWG3DAT         equ	16193	;# 
  9149   003F42                     CWG3DBR         equ	16194	;# 
  9150   003F43                     CWG3DBF         equ	16195	;# 
  9151   003F44                     CWG3CON0        equ	16196	;# 
  9152   003F45                     CWG3CON1        equ	16197	;# 
  9153   003F46                     CWG3AS0         equ	16198	;# 
  9154   003F47                     CWG3AS1         equ	16199	;# 
  9155   003F48                     CWG3STR         equ	16200	;# 
  9156   003F49                     CWG2CLK         equ	16201	;# 
  9157   003F49                     CWG2CLKCON      equ	16201	;# 
  9158   003F4A                     CWG2ISM         equ	16202	;# 
  9159   003F4A                     CWG2DAT         equ	16202	;# 
  9160   003F4B                     CWG2DBR         equ	16203	;# 
  9161   003F4C                     CWG2DBF         equ	16204	;# 
  9162   003F4D                     CWG2CON0        equ	16205	;# 
  9163   003F4E                     CWG2CON1        equ	16206	;# 
  9164   003F4F                     CWG2AS0         equ	16207	;# 
  9165   003F50                     CWG2AS1         equ	16208	;# 
  9166   003F51                     CWG2STR         equ	16209	;# 
  9167   003F52                     CWG1CLK         equ	16210	;# 
  9168   003F52                     CWG1CLKCON      equ	16210	;# 
  9169   003F53                     CWG1ISM         equ	16211	;# 
  9170   003F53                     CWG1DAT         equ	16211	;# 
  9171   003F54                     CWG1DBR         equ	16212	;# 
  9172   003F55                     CWG1DBF         equ	16213	;# 
  9173   003F56                     CWG1CON0        equ	16214	;# 
  9174   003F57                     CWG1CON1        equ	16215	;# 
  9175   003F58                     CWG1AS0         equ	16216	;# 
  9176   003F59                     CWG1AS1         equ	16217	;# 
  9177   003F5A                     CWG1STR         equ	16218	;# 
  9178   003F5E                     CCPTMRS0        equ	16222	;# 
  9179   003F5F                     CCPTMRS1        equ	16223	;# 
  9180   003F60                     PWM8DC          equ	16224	;# 
  9181   003F60                     PWM8DCL         equ	16224	;# 
  9182   003F61                     PWM8DCH         equ	16225	;# 
  9183   003F62                     PWM8CON         equ	16226	;# 
  9184   003F64                     PWM7DC          equ	16228	;# 
  9185   003F64                     PWM7DCL         equ	16228	;# 
  9186   003F65                     PWM7DCH         equ	16229	;# 
  9187   003F66                     PWM7CON         equ	16230	;# 
  9188   003F68                     PWM6DC          equ	16232	;# 
  9189   003F68                     PWM6DCL         equ	16232	;# 
  9190   003F69                     PWM6DCH         equ	16233	;# 
  9191   003F6A                     PWM6CON         equ	16234	;# 
  9192   003F6C                     PWM5DC          equ	16236	;# 
  9193   003F6C                     PWM5DCL         equ	16236	;# 
  9194   003F6D                     PWM5DCH         equ	16237	;# 
  9195   003F6E                     PWM5CON         equ	16238	;# 
  9196   003F70                     CCPR4           equ	16240	;# 
  9197   003F70                     CCPR4L          equ	16240	;# 
  9198   003F71                     CCPR4H          equ	16241	;# 
  9199   003F72                     CCP4CON         equ	16242	;# 
  9200   003F73                     CCP4CAP         equ	16243	;# 
  9201   003F74                     CCPR3           equ	16244	;# 
  9202   003F74                     CCPR3L          equ	16244	;# 
  9203   003F75                     CCPR3H          equ	16245	;# 
  9204   003F76                     CCP3CON         equ	16246	;# 
  9205   003F77                     CCP3CAP         equ	16247	;# 
  9206   003F78                     CCPR2           equ	16248	;# 
  9207   003F78                     CCPR2L          equ	16248	;# 
  9208   003F79                     CCPR2H          equ	16249	;# 
  9209   003F7A                     CCP2CON         equ	16250	;# 
  9210   003F7B                     CCP2CAP         equ	16251	;# 
  9211   003F7C                     CCPR1           equ	16252	;# 
  9212   003F7C                     CCPR1L          equ	16252	;# 
  9213   003F7D                     CCPR1H          equ	16253	;# 
  9214   003F7E                     CCP1CON         equ	16254	;# 
  9215   003F7F                     CCP1CAP         equ	16255	;# 
  9216   003F92                     T6TMR           equ	16274	;# 
  9217   003F92                     TMR6            equ	16274	;# 
  9218   003F93                     T6PR            equ	16275	;# 
  9219   003F93                     PR6             equ	16275	;# 
  9220   003F94                     T6CON           equ	16276	;# 
  9221   003F95                     T6HLT           equ	16277	;# 
  9222   003F96                     T6CLKCON        equ	16278	;# 
  9223   003F96                     T6CLK           equ	16278	;# 
  9224   003F97                     T6RST           equ	16279	;# 
  9225   003F98                     TMR5            equ	16280	;# 
  9226   003F98                     TMR5L           equ	16280	;# 
  9227   003F99                     TMR5H           equ	16281	;# 
  9228   003F9A                     T5CON           equ	16282	;# 
  9229   003F9A                     TMR5CON         equ	16282	;# 
  9230   003F9B                     T5GCON          equ	16283	;# 
  9231   003F9B                     TMR5GCON        equ	16283	;# 
  9232   003F9C                     T5GATE          equ	16284	;# 
  9233   003F9C                     TMR5GATE        equ	16284	;# 
  9234   003F9D                     T5CLK           equ	16285	;# 
  9235   003F9D                     TMR5CLK         equ	16285	;# 
  9236   003F9D                     PR5             equ	16285	;# 
  9237   003F9E                     T4TMR           equ	16286	;# 
  9238   003F9E                     TMR4            equ	16286	;# 
  9239   003F9F                     T4PR            equ	16287	;# 
  9240   003F9F                     PR4             equ	16287	;# 
  9241   003FA0                     T4CON           equ	16288	;# 
  9242   003FA1                     T4HLT           equ	16289	;# 
  9243   003FA2                     T4CLKCON        equ	16290	;# 
  9244   003FA2                     T4CLK           equ	16290	;# 
  9245   003FA3                     T4RST           equ	16291	;# 
  9246   003FA4                     TMR3            equ	16292	;# 
  9247   003FA4                     TMR3L           equ	16292	;# 
  9248   003FA5                     TMR3H           equ	16293	;# 
  9249   003FA6                     T3CON           equ	16294	;# 
  9250   003FA6                     TMR3CON         equ	16294	;# 
  9251   003FA7                     T3GCON          equ	16295	;# 
  9252   003FA7                     TMR3GCON        equ	16295	;# 
  9253   003FA8                     T3GATE          equ	16296	;# 
  9254   003FA8                     TMR3GATE        equ	16296	;# 
  9255   003FA9                     T3CLK           equ	16297	;# 
  9256   003FA9                     TMR3CLK         equ	16297	;# 
  9257   003FA9                     PR3             equ	16297	;# 
  9258   003FAA                     T2TMR           equ	16298	;# 
  9259   003FAA                     TMR2            equ	16298	;# 
  9260   003FAB                     T2PR            equ	16299	;# 
  9261   003FAB                     PR2             equ	16299	;# 
  9262   003FAC                     T2CON           equ	16300	;# 
  9263   003FAD                     T2HLT           equ	16301	;# 
  9264   003FAE                     T2CLKCON        equ	16302	;# 
  9265   003FAE                     T2CLK           equ	16302	;# 
  9266   003FAF                     T2RST           equ	16303	;# 
  9267   003FB0                     TMR1            equ	16304	;# 
  9268   003FB0                     TMR1L           equ	16304	;# 
  9269   003FB1                     TMR1H           equ	16305	;# 
  9270   003FB2                     T1CON           equ	16306	;# 
  9271   003FB2                     TMR1CON         equ	16306	;# 
  9272   003FB3                     T1GCON          equ	16307	;# 
  9273   003FB3                     TMR1GCON        equ	16307	;# 
  9274   003FB4                     T1GATE          equ	16308	;# 
  9275   003FB4                     TMR1GATE        equ	16308	;# 
  9276   003FB5                     T1CLK           equ	16309	;# 
  9277   003FB5                     TMR1CLK         equ	16309	;# 
  9278   003FB5                     PR1             equ	16309	;# 
  9279   003FB6                     TMR0L           equ	16310	;# 
  9280   003FB6                     TMR0            equ	16310	;# 
  9281   003FB7                     TMR0H           equ	16311	;# 
  9282   003FB7                     PR0             equ	16311	;# 
  9283   003FB8                     T0CON0          equ	16312	;# 
  9284   003FB9                     T0CON1          equ	16313	;# 
  9285   003FBA                     LATA            equ	16314	;# 
  9286   003FBB                     LATB            equ	16315	;# 
  9287   003FBC                     LATC            equ	16316	;# 
  9288   003FBD                     LATD            equ	16317	;# 
  9289   003FBE                     LATE            equ	16318	;# 
  9290   003FBF                     LATF            equ	16319	;# 
  9291   003FC2                     TRISA           equ	16322	;# 
  9292   003FC3                     TRISB           equ	16323	;# 
  9293   003FC4                     TRISC           equ	16324	;# 
  9294   003FC5                     TRISD           equ	16325	;# 
  9295   003FC6                     TRISE           equ	16326	;# 
  9296   003FC7                     TRISF           equ	16327	;# 
  9297   003FCA                     PORTA           equ	16330	;# 
  9298   003FCB                     PORTB           equ	16331	;# 
  9299   003FCC                     PORTC           equ	16332	;# 
  9300   003FCD                     PORTD           equ	16333	;# 
  9301   003FCE                     PORTE           equ	16334	;# 
  9302   003FCF                     PORTF           equ	16335	;# 
  9303   003FD2                     INTCON0         equ	16338	;# 
  9304   003FD3                     INTCON1         equ	16339	;# 
  9305   003FD4                     IVTLOCK         equ	16340	;# 
  9306   003FD5                     IVTBASE         equ	16341	;# 
  9307   003FD5                     IVTBASEL        equ	16341	;# 
  9308   003FD6                     IVTBASEH        equ	16342	;# 
  9309   003FD7                     IVTBASEU        equ	16343	;# 
  9310   003FD8                     STATUS          equ	16344	;# 
  9311   003FD9                     FSR2            equ	16345	;# 
  9312   003FD9                     FSR2L           equ	16345	;# 
  9313   003FDA                     FSR2H           equ	16346	;# 
  9314   003FDB                     PLUSW2          equ	16347	;# 
  9315   003FDC                     PREINC2         equ	16348	;# 
  9316   003FDD                     POSTDEC2        equ	16349	;# 
  9317   003FDE                     POSTINC2        equ	16350	;# 
  9318   003FDF                     INDF2           equ	16351	;# 
  9319   003FE0                     BSR             equ	16352	;# 
  9320   003FE1                     FSR1            equ	16353	;# 
  9321   003FE1                     FSR1L           equ	16353	;# 
  9322   003FE2                     FSR1H           equ	16354	;# 
  9323   003FE3                     PLUSW1          equ	16355	;# 
  9324   003FE4                     PREINC1         equ	16356	;# 
  9325   003FE5                     POSTDEC1        equ	16357	;# 
  9326   003FE6                     POSTINC1        equ	16358	;# 
  9327   003FE7                     INDF1           equ	16359	;# 
  9328   003FE8                     WREG            equ	16360	;# 
  9329   003FE9                     FSR0            equ	16361	;# 
  9330   003FE9                     FSR0L           equ	16361	;# 
  9331   003FEA                     FSR0H           equ	16362	;# 
  9332   003FEB                     PLUSW0          equ	16363	;# 
  9333   003FEC                     PREINC0         equ	16364	;# 
  9334   003FED                     POSTDEC0        equ	16365	;# 
  9335   003FEE                     POSTINC0        equ	16366	;# 
  9336   003FEF                     INDF0           equ	16367	;# 
  9337   003FF0                     PCON0           equ	16368	;# 
  9338   003FF1                     PCON1           equ	16369	;# 
  9339   003FF3                     PROD            equ	16371	;# 
  9340   003FF3                     PRODL           equ	16371	;# 
  9341   003FF4                     PRODH           equ	16372	;# 
  9342   003FF5                     TABLAT          equ	16373	;# 
  9343   003FF6                     TBLPTR          equ	16374	;# 
  9344   003FF6                     TBLPTRL         equ	16374	;# 
  9345   003FF7                     TBLPTRH         equ	16375	;# 
  9346   003FF8                     TBLPTRU         equ	16376	;# 
  9347   003FF9                     PCLAT           equ	16377	;# 
  9348   003FF9                     PCL             equ	16377	;# 
  9349   003FFA                     PCLATH          equ	16378	;# 
  9350   003FFB                     PCLATU          equ	16379	;# 
  9351   003FFC                     STKPTR          equ	16380	;# 
  9352   003FFD                     TOS             equ	16381	;# 
  9353   003FFD                     TOSL            equ	16381	;# 
  9354   003FFE                     TOSH            equ	16382	;# 
  9355   003FFF                     TOSU            equ	16383	;# 
  9356   003880                     STATUS_CSHAD    equ	14464	;# 
  9357   003881                     WREG_CSHAD      equ	14465	;# 
  9358   003882                     BSR_CSHAD       equ	14466	;# 
  9359   003883                     SHADCON         equ	14467	;# 
  9360   003884                     STATUS_SHAD     equ	14468	;# 
  9361   003885                     WREG_SHAD       equ	14469	;# 
  9362   003886                     BSR_SHAD        equ	14470	;# 
  9363   003887                     PCLATH_SHAD     equ	14471	;# 
  9364   003888                     PCLATU_SHAD     equ	14472	;# 
  9365   003889                     FSR0SH          equ	14473	;# 
  9366   003889                     FSR0L_SHAD      equ	14473	;# 
  9367   00388A                     FSR0H_SHAD      equ	14474	;# 
  9368   00388B                     FSR1SH          equ	14475	;# 
  9369   00388B                     FSR1L_SHAD      equ	14475	;# 
  9370   00388C                     FSR1H_SHAD      equ	14476	;# 
  9371   00388D                     FSR2SH          equ	14477	;# 
  9372   00388D                     FSR2L_SHAD      equ	14477	;# 
  9373   00388E                     FSR2H_SHAD      equ	14478	;# 
  9374   00388F                     PRODSH          equ	14479	;# 
  9375   00388F                     PRODL_SHAD      equ	14479	;# 
  9376   003890                     PRODH_SHAD      equ	14480	;# 
  9377   00389D                     IVTADL          equ	14493	;# 
  9378   00389E                     IVTADH          equ	14494	;# 
  9379   00389F                     IVTADU          equ	14495	;# 
  9380   00395B                     WDTCON0         equ	14683	;# 
  9381   00395C                     WDTCON1         equ	14684	;# 
  9382   00395D                     WDTPSL          equ	14685	;# 
  9383   00395E                     WDTPSH          equ	14686	;# 
  9384   00395F                     WDTTMR          equ	14687	;# 
  9385   003960                     CRCDATA         equ	14688	;# 
  9386   003960                     CRCDATL         equ	14688	;# 
  9387   003961                     CRCDATH         equ	14689	;# 
  9388   003962                     CRCACC          equ	14690	;# 
  9389   003962                     CRCACCL         equ	14690	;# 
  9390   003963                     CRCACCH         equ	14691	;# 
  9391   003964                     CRCSHFT         equ	14692	;# 
  9392   003964                     CRCSHIFTL       equ	14692	;# 
  9393   003965                     CRCSHIFTH       equ	14693	;# 
  9394   003966                     CRCXOR          equ	14694	;# 
  9395   003966                     CRCXORL         equ	14694	;# 
  9396   003967                     CRCXORH         equ	14695	;# 
  9397   003968                     CRCCON0         equ	14696	;# 
  9398   003969                     CRCCON1         equ	14697	;# 
  9399   003976                     SCANLADR        equ	14710	;# 
  9400   003976                     SCANLADRL       equ	14710	;# 
  9401   003977                     SCANLADRH       equ	14711	;# 
  9402   003978                     SCANLADRU       equ	14712	;# 
  9403   003979                     SCANHADR        equ	14713	;# 
  9404   003979                     SCANHADRL       equ	14713	;# 
  9405   00397A                     SCANHADRH       equ	14714	;# 
  9406   00397B                     SCANHADRU       equ	14715	;# 
  9407   00397C                     SCANCON0        equ	14716	;# 
  9408   00397D                     SCANTRIG        equ	14717	;# 
  9409   003980                     IPR0            equ	14720	;# 
  9410   003981                     IPR1            equ	14721	;# 
  9411   003982                     IPR2            equ	14722	;# 
  9412   003983                     IPR3            equ	14723	;# 
  9413   003984                     IPR4            equ	14724	;# 
  9414   003985                     IPR5            equ	14725	;# 
  9415   003986                     IPR6            equ	14726	;# 
  9416   003987                     IPR7            equ	14727	;# 
  9417   003988                     IPR8            equ	14728	;# 
  9418   003989                     IPR9            equ	14729	;# 
  9419   00398A                     IPR10           equ	14730	;# 
  9420   003990                     PIE0            equ	14736	;# 
  9421   003991                     PIE1            equ	14737	;# 
  9422   003992                     PIE2            equ	14738	;# 
  9423   003993                     PIE3            equ	14739	;# 
  9424   003994                     PIE4            equ	14740	;# 
  9425   003995                     PIE5            equ	14741	;# 
  9426   003996                     PIE6            equ	14742	;# 
  9427   003997                     PIE7            equ	14743	;# 
  9428   003998                     PIE8            equ	14744	;# 
  9429   003999                     PIE9            equ	14745	;# 
  9430   00399A                     PIE10           equ	14746	;# 
  9431   0039A0                     PIR0            equ	14752	;# 
  9432   0039A1                     PIR1            equ	14753	;# 
  9433   0039A2                     PIR2            equ	14754	;# 
  9434   0039A3                     PIR3            equ	14755	;# 
  9435   0039A4                     PIR4            equ	14756	;# 
  9436   0039A5                     PIR5            equ	14757	;# 
  9437   0039A6                     PIR6            equ	14758	;# 
  9438   0039A7                     PIR7            equ	14759	;# 
  9439   0039A8                     PIR8            equ	14760	;# 
  9440   0039A9                     PIR9            equ	14761	;# 
  9441   0039AA                     PIR10           equ	14762	;# 
  9442   0039C0                     PMD0            equ	14784	;# 
  9443   0039C1                     PMD1            equ	14785	;# 
  9444   0039C2                     PMD2            equ	14786	;# 
  9445   0039C3                     PMD3            equ	14787	;# 
  9446   0039C4                     PMD4            equ	14788	;# 
  9447   0039C5                     PMD5            equ	14789	;# 
  9448   0039C6                     PMD6            equ	14790	;# 
  9449   0039C7                     PMD7            equ	14791	;# 
  9450   0039D0                     BORCON          equ	14800	;# 
  9451   0039D1                     VREGCON         equ	14801	;# 
  9452   0039D8                     CPUDOZE         equ	14808	;# 
  9453   0039D9                     OSCCON1         equ	14809	;# 
  9454   0039DA                     OSCCON2         equ	14810	;# 
  9455   0039DB                     OSCCON3         equ	14811	;# 
  9456   0039DC                     OSCSTAT         equ	14812	;# 
  9457   0039DC                     OSCSTAT1        equ	14812	;# 
  9458   0039DD                     OSCEN           equ	14813	;# 
  9459   0039DE                     OSCTUNE         equ	14814	;# 
  9460   0039DF                     OSCFRQ          equ	14815	;# 
  9461   0039E0                     NVMADRL         equ	14816	;# 
  9462   0039E1                     NVMADRH         equ	14817	;# 
  9463   0039E3                     NVMDAT          equ	14819	;# 
  9464   0039E5                     NVMCON1         equ	14821	;# 
  9465   0039E6                     NVMCON2         equ	14822	;# 
  9466   0039EF                     PRLOCK          equ	14831	;# 
  9467   0039F1                     ISRPR           equ	14833	;# 
  9468   0039F2                     MAINPR          equ	14834	;# 
  9469   0039F3                     DMA1PR          equ	14835	;# 
  9470   0039F4                     DMA2PR          equ	14836	;# 
  9471   0039F7                     SCANPR          equ	14839	;# 
  9472   003A00                     RA0PPS          equ	14848	;# 
  9473   003A01                     RA1PPS          equ	14849	;# 
  9474   003A02                     RA2PPS          equ	14850	;# 
  9475   003A03                     RA3PPS          equ	14851	;# 
  9476   003A04                     RA4PPS          equ	14852	;# 
  9477   003A05                     RA5PPS          equ	14853	;# 
  9478   003A06                     RA6PPS          equ	14854	;# 
  9479   003A07                     RA7PPS          equ	14855	;# 
  9480   003A08                     RB0PPS          equ	14856	;# 
  9481   003A09                     RB1PPS          equ	14857	;# 
  9482   003A0A                     RB2PPS          equ	14858	;# 
  9483   003A0B                     RB3PPS          equ	14859	;# 
  9484   003A0C                     RB4PPS          equ	14860	;# 
  9485   003A0D                     RB5PPS          equ	14861	;# 
  9486   003A0E                     RB6PPS          equ	14862	;# 
  9487   003A0F                     RB7PPS          equ	14863	;# 
  9488   003A10                     RC0PPS          equ	14864	;# 
  9489   003A11                     RC1PPS          equ	14865	;# 
  9490   003A12                     RC2PPS          equ	14866	;# 
  9491   003A13                     RC3PPS          equ	14867	;# 
  9492   003A14                     RC4PPS          equ	14868	;# 
  9493   003A15                     RC5PPS          equ	14869	;# 
  9494   003A16                     RC6PPS          equ	14870	;# 
  9495   003A17                     RC7PPS          equ	14871	;# 
  9496   003A18                     RD0PPS          equ	14872	;# 
  9497   003A19                     RD1PPS          equ	14873	;# 
  9498   003A1A                     RD2PPS          equ	14874	;# 
  9499   003A1B                     RD3PPS          equ	14875	;# 
  9500   003A1C                     RD4PPS          equ	14876	;# 
  9501   003A1D                     RD5PPS          equ	14877	;# 
  9502   003A1E                     RD6PPS          equ	14878	;# 
  9503   003A1F                     RD7PPS          equ	14879	;# 
  9504   003A20                     RE0PPS          equ	14880	;# 
  9505   003A21                     RE1PPS          equ	14881	;# 
  9506   003A22                     RE2PPS          equ	14882	;# 
  9507   003A28                     RF0PPS          equ	14888	;# 
  9508   003A29                     RF1PPS          equ	14889	;# 
  9509   003A2A                     RF2PPS          equ	14890	;# 
  9510   003A2B                     RF3PPS          equ	14891	;# 
  9511   003A2C                     RF4PPS          equ	14892	;# 
  9512   003A2D                     RF5PPS          equ	14893	;# 
  9513   003A2E                     RF6PPS          equ	14894	;# 
  9514   003A2F                     RF7PPS          equ	14895	;# 
  9515   003A40                     ANSELA          equ	14912	;# 
  9516   003A41                     WPUA            equ	14913	;# 
  9517   003A42                     ODCONA          equ	14914	;# 
  9518   003A43                     SLRCONA         equ	14915	;# 
  9519   003A44                     INLVLA          equ	14916	;# 
  9520   003A45                     IOCAP           equ	14917	;# 
  9521   003A46                     IOCAN           equ	14918	;# 
  9522   003A47                     IOCAF           equ	14919	;# 
  9523   003A50                     ANSELB          equ	14928	;# 
  9524   003A51                     WPUB            equ	14929	;# 
  9525   003A52                     ODCONB          equ	14930	;# 
  9526   003A53                     SLRCONB         equ	14931	;# 
  9527   003A54                     INLVLB          equ	14932	;# 
  9528   003A55                     IOCBP           equ	14933	;# 
  9529   003A56                     IOCBN           equ	14934	;# 
  9530   003A57                     IOCBF           equ	14935	;# 
  9531   003A5A                     RB1I2C          equ	14938	;# 
  9532   003A5B                     RB2I2C          equ	14939	;# 
  9533   003A60                     ANSELC          equ	14944	;# 
  9534   003A61                     WPUC            equ	14945	;# 
  9535   003A62                     ODCONC          equ	14946	;# 
  9536   003A63                     SLRCONC         equ	14947	;# 
  9537   003A64                     INLVLC          equ	14948	;# 
  9538   003A65                     IOCCP           equ	14949	;# 
  9539   003A66                     IOCCN           equ	14950	;# 
  9540   003A67                     IOCCF           equ	14951	;# 
  9541   003A6A                     RC3I2C          equ	14954	;# 
  9542   003A6B                     RC4I2C          equ	14955	;# 
  9543   003A70                     ANSELD          equ	14960	;# 
  9544   003A71                     WPUD            equ	14961	;# 
  9545   003A72                     ODCOND          equ	14962	;# 
  9546   003A73                     SLRCOND         equ	14963	;# 
  9547   003A74                     INLVLD          equ	14964	;# 
  9548   003A7A                     RD0I2C          equ	14970	;# 
  9549   003A7B                     RD1I2C          equ	14971	;# 
  9550   003A80                     ANSELE          equ	14976	;# 
  9551   003A81                     WPUE            equ	14977	;# 
  9552   003A82                     ODCONE          equ	14978	;# 
  9553   003A83                     SLRCONE         equ	14979	;# 
  9554   003A84                     INLVLE          equ	14980	;# 
  9555   003A85                     IOCEP           equ	14981	;# 
  9556   003A86                     IOCEN           equ	14982	;# 
  9557   003A87                     IOCEF           equ	14983	;# 
  9558   003A90                     ANSELF          equ	14992	;# 
  9559   003A91                     WPUF            equ	14993	;# 
  9560   003A92                     ODCONF          equ	14994	;# 
  9561   003A93                     SLRCONF         equ	14995	;# 
  9562   003A94                     INLVLF          equ	14996	;# 
  9563   003ABF                     PPSLOCK         equ	15039	;# 
  9564   003AC0                     INT0PPS         equ	15040	;# 
  9565   003AC1                     INT1PPS         equ	15041	;# 
  9566   003AC2                     INT2PPS         equ	15042	;# 
  9567   003AC3                     T0CKIPPS        equ	15043	;# 
  9568   003AC4                     T1CKIPPS        equ	15044	;# 
  9569   003AC5                     T1GPPS          equ	15045	;# 
  9570   003AC6                     T3CKIPPS        equ	15046	;# 
  9571   003AC7                     T3GPPS          equ	15047	;# 
  9572   003AC8                     T5CKIPPS        equ	15048	;# 
  9573   003AC9                     T5GPPS          equ	15049	;# 
  9574   003ACA                     T2INPPS         equ	15050	;# 
  9575   003ACB                     T4INPPS         equ	15051	;# 
  9576   003ACC                     T6INPPS         equ	15052	;# 
  9577   003ACD                     CCP1PPS         equ	15053	;# 
  9578   003ACE                     CCP2PPS         equ	15054	;# 
  9579   003ACF                     CCP3PPS         equ	15055	;# 
  9580   003AD0                     CCP4PPS         equ	15056	;# 
  9581   003AD1                     SMT1WINPPS      equ	15057	;# 
  9582   003AD2                     SMT1SIGPPS      equ	15058	;# 
  9583   003AD3                     CWG1INPPS       equ	15059	;# 
  9584   003AD4                     CWG2INPPS       equ	15060	;# 
  9585   003AD5                     CWG3INPPS       equ	15061	;# 
  9586   003AD6                     MD1CARLPPS      equ	15062	;# 
  9587   003AD7                     MD1CARHPPS      equ	15063	;# 
  9588   003AD8                     MD1SRCPPS       equ	15064	;# 
  9589   003AD9                     CLCIN0PPS       equ	15065	;# 
  9590   003ADA                     CLCIN1PPS       equ	15066	;# 
  9591   003ADB                     CLCIN2PPS       equ	15067	;# 
  9592   003ADC                     CLCIN3PPS       equ	15068	;# 
  9593   003ADD                     ADACTPPS        equ	15069	;# 
  9594   003ADE                     SPI1SCKPPS      equ	15070	;# 
  9595   003ADF                     SPI1SDIPPS      equ	15071	;# 
  9596   003AE0                     SPI1SSPPS       equ	15072	;# 
  9597   003AE1                     I2C1SCLPPS      equ	15073	;# 
  9598   003AE2                     I2C1SDAPPS      equ	15074	;# 
  9599   003AE3                     I2C2SCLPPS      equ	15075	;# 
  9600   003AE4                     I2C2SDAPPS      equ	15076	;# 
  9601   003AE5                     U1RXPPS         equ	15077	;# 
  9602   003AE6                     U1CTSPPS        equ	15078	;# 
  9603   003AE8                     U2RXPPS         equ	15080	;# 
  9604   003AE9                     U2CTSPPS        equ	15081	;# 
  9605   003BC9                     DMA2BUF         equ	15305	;# 
  9606   003BCA                     DMA2DCNT        equ	15306	;# 
  9607   003BCA                     DMA2DCNTL       equ	15306	;# 
  9608   003BCB                     DMA2DCNTH       equ	15307	;# 
  9609   003BCC                     DMA2DPTR        equ	15308	;# 
  9610   003BCC                     DMA2DPTRL       equ	15308	;# 
  9611   003BCD                     DMA2DPTRH       equ	15309	;# 
  9612   003BCE                     DMA2DSZ         equ	15310	;# 
  9613   003BCE                     DMA2DSZL        equ	15310	;# 
  9614   003BCF                     DMA2DSZH        equ	15311	;# 
  9615   003BD0                     DMA2DSA         equ	15312	;# 
  9616   003BD0                     DMA2DSAL        equ	15312	;# 
  9617   003BD1                     DMA2DSAH        equ	15313	;# 
  9618   003BD2                     DMA2SCNT        equ	15314	;# 
  9619   003BD2                     DMA2SCNTL       equ	15314	;# 
  9620   003BD3                     DMA2SCNTH       equ	15315	;# 
  9621   003BD4                     DMA2SPTR        equ	15316	;# 
  9622   003BD4                     DMA2SPTRL       equ	15316	;# 
  9623   003BD5                     DMA2SPTRH       equ	15317	;# 
  9624   003BD6                     DMA2SPTRU       equ	15318	;# 
  9625   003BD7                     DMA2SSZ         equ	15319	;# 
  9626   003BD7                     DMA2SSZL        equ	15319	;# 
  9627   003BD8                     DMA2SSZH        equ	15320	;# 
  9628   003BD9                     DMA2SSA         equ	15321	;# 
  9629   003BD9                     DMA2SSAL        equ	15321	;# 
  9630   003BDA                     DMA2SSAH        equ	15322	;# 
  9631   003BDB                     DMA2SSAU        equ	15323	;# 
  9632   003BDC                     DMA2CON0        equ	15324	;# 
  9633   003BDD                     DMA2CON1        equ	15325	;# 
  9634   003BDE                     DMA2AIRQ        equ	15326	;# 
  9635   003BDF                     DMA2SIRQ        equ	15327	;# 
  9636   003BE9                     DMA1BUF         equ	15337	;# 
  9637   003BEA                     DMA1DCNT        equ	15338	;# 
  9638   003BEA                     DMA1DCNTL       equ	15338	;# 
  9639   003BEB                     DMA1DCNTH       equ	15339	;# 
  9640   003BEC                     DMA1DPTR        equ	15340	;# 
  9641   003BEC                     DMA1DPTRL       equ	15340	;# 
  9642   003BED                     DMA1DPTRH       equ	15341	;# 
  9643   003BEE                     DMA1DSZ         equ	15342	;# 
  9644   003BEE                     DMA1DSZL        equ	15342	;# 
  9645   003BEF                     DMA1DSZH        equ	15343	;# 
  9646   003BF0                     DMA1DSA         equ	15344	;# 
  9647   003BF0                     DMA1DSAL        equ	15344	;# 
  9648   003BF1                     DMA1DSAH        equ	15345	;# 
  9649   003BF2                     DMA1SCNT        equ	15346	;# 
  9650   003BF2                     DMA1SCNTL       equ	15346	;# 
  9651   003BF3                     DMA1SCNTH       equ	15347	;# 
  9652   003BF4                     DMA1SPTR        equ	15348	;# 
  9653   003BF4                     DMA1SPTRL       equ	15348	;# 
  9654   003BF5                     DMA1SPTRH       equ	15349	;# 
  9655   003BF6                     DMA1SPTRU       equ	15350	;# 
  9656   003BF7                     DMA1SSZ         equ	15351	;# 
  9657   003BF7                     DMA1SSZL        equ	15351	;# 
  9658   003BF8                     DMA1SSZH        equ	15352	;# 
  9659   003BF9                     DMA1SSA         equ	15353	;# 
  9660   003BF9                     DMA1SSAL        equ	15353	;# 
  9661   003BFA                     DMA1SSAH        equ	15354	;# 
  9662   003BFB                     DMA1SSAU        equ	15355	;# 
  9663   003BFC                     DMA1CON0        equ	15356	;# 
  9664   003BFD                     DMA1CON1        equ	15357	;# 
  9665   003BFE                     DMA1AIRQ        equ	15358	;# 
  9666   003BFF                     DMA1SIRQ        equ	15359	;# 
  9667   003C56                     CLC4CON         equ	15446	;# 
  9668   003C57                     CLC4POL         equ	15447	;# 
  9669   003C58                     CLC4SEL0        equ	15448	;# 
  9670   003C59                     CLC4SEL1        equ	15449	;# 
  9671   003C5A                     CLC4SEL2        equ	15450	;# 
  9672   003C5B                     CLC4SEL3        equ	15451	;# 
  9673   003C5C                     CLC4GLS0        equ	15452	;# 
  9674   003C5D                     CLC4GLS1        equ	15453	;# 
  9675   003C5E                     CLC4GLS2        equ	15454	;# 
  9676   003C5F                     CLC4GLS3        equ	15455	;# 
  9677   003C60                     CLC3CON         equ	15456	;# 
  9678   003C61                     CLC3POL         equ	15457	;# 
  9679   003C62                     CLC3SEL0        equ	15458	;# 
  9680   003C63                     CLC3SEL1        equ	15459	;# 
  9681   003C64                     CLC3SEL2        equ	15460	;# 
  9682   003C65                     CLC3SEL3        equ	15461	;# 
  9683   003C66                     CLC3GLS0        equ	15462	;# 
  9684   003C67                     CLC3GLS1        equ	15463	;# 
  9685   003C68                     CLC3GLS2        equ	15464	;# 
  9686   003C69                     CLC3GLS3        equ	15465	;# 
  9687   003C6A                     CLC2CON         equ	15466	;# 
  9688   003C6B                     CLC2POL         equ	15467	;# 
  9689   003C6C                     CLC2SEL0        equ	15468	;# 
  9690   003C6D                     CLC2SEL1        equ	15469	;# 
  9691   003C6E                     CLC2SEL2        equ	15470	;# 
  9692   003C6F                     CLC2SEL3        equ	15471	;# 
  9693   003C70                     CLC2GLS0        equ	15472	;# 
  9694   003C71                     CLC2GLS1        equ	15473	;# 
  9695   003C72                     CLC2GLS2        equ	15474	;# 
  9696   003C73                     CLC2GLS3        equ	15475	;# 
  9697   003C74                     CLC1CON         equ	15476	;# 
  9698   003C75                     CLC1POL         equ	15477	;# 
  9699   003C76                     CLC1SEL0        equ	15478	;# 
  9700   003C77                     CLC1SEL1        equ	15479	;# 
  9701   003C78                     CLC1SEL2        equ	15480	;# 
  9702   003C79                     CLC1SEL3        equ	15481	;# 
  9703   003C7A                     CLC1GLS0        equ	15482	;# 
  9704   003C7B                     CLC1GLS1        equ	15483	;# 
  9705   003C7C                     CLC1GLS2        equ	15484	;# 
  9706   003C7D                     CLC1GLS3        equ	15485	;# 
  9707   003C7E                     CLCDATA0        equ	15486	;# 
  9708   003CE5                     CLKRCON         equ	15589	;# 
  9709   003CE6                     CLKRCLK         equ	15590	;# 
  9710   003CFA                     MD1CON0         equ	15610	;# 
  9711   003CFB                     MD1CON1         equ	15611	;# 
  9712   003CFC                     MD1SRC          equ	15612	;# 
  9713   003CFD                     MD1CARL         equ	15613	;# 
  9714   003CFE                     MD1CARH         equ	15614	;# 
  9715   003D10                     SPI1RXB         equ	15632	;# 
  9716   003D11                     SPI1TXB         equ	15633	;# 
  9717   003D12                     SPI1TCNT        equ	15634	;# 
  9718   003D12                     SPI1TCNTL       equ	15634	;# 
  9719   003D13                     SPI1TCNTH       equ	15635	;# 
  9720   003D14                     SPI1CON0        equ	15636	;# 
  9721   003D15                     SPI1CON1        equ	15637	;# 
  9722   003D16                     SPI1CON2        equ	15638	;# 
  9723   003D17                     SPI1STATUS      equ	15639	;# 
  9724   003D18                     SPI1TWIDTH      equ	15640	;# 
  9725   003D19                     SPI1BAUD        equ	15641	;# 
  9726   003D1A                     SPI1INTF        equ	15642	;# 
  9727   003D1B                     SPI1INTE        equ	15643	;# 
  9728   003D1C                     SPI1CLK         equ	15644	;# 
  9729   003D54                     I2C2RXB         equ	15700	;# 
  9730   003D55                     I2C2TXB         equ	15701	;# 
  9731   003D56                     I2C2CNT         equ	15702	;# 
  9732   003D57                     I2C2ADB0        equ	15703	;# 
  9733   003D58                     I2C2ADB1        equ	15704	;# 
  9734   003D59                     I2C2ADR0        equ	15705	;# 
  9735   003D5A                     I2C2ADR1        equ	15706	;# 
  9736   003D5B                     I2C2ADR2        equ	15707	;# 
  9737   003D5C                     I2C2ADR3        equ	15708	;# 
  9738   003D5D                     I2C2CON0        equ	15709	;# 
  9739   003D5E                     I2C2CON1        equ	15710	;# 
  9740   003D5F                     I2C2CON2        equ	15711	;# 
  9741   003D60                     I2C2ERR         equ	15712	;# 
  9742   003D61                     I2C2STAT0       equ	15713	;# 
  9743   003D62                     I2C2STAT1       equ	15714	;# 
  9744   003D63                     I2C2PIR         equ	15715	;# 
  9745   003D64                     I2C2PIE         equ	15716	;# 
  9746   003D65                     I2C2CLK         equ	15717	;# 
  9747   003D66                     I2C2BTO         equ	15718	;# 
  9748   003D6A                     I2C1RXB         equ	15722	;# 
  9749   003D6B                     I2C1TXB         equ	15723	;# 
  9750   003D6C                     I2C1CNT         equ	15724	;# 
  9751   003D6D                     I2C1ADB0        equ	15725	;# 
  9752   003D6E                     I2C1ADB1        equ	15726	;# 
  9753   003D6F                     I2C1ADR0        equ	15727	;# 
  9754   003D70                     I2C1ADR1        equ	15728	;# 
  9755   003D71                     I2C1ADR2        equ	15729	;# 
  9756   003D72                     I2C1ADR3        equ	15730	;# 
  9757   003D73                     I2C1CON0        equ	15731	;# 
  9758   003D74                     I2C1CON1        equ	15732	;# 
  9759   003D75                     I2C1CON2        equ	15733	;# 
  9760   003D76                     I2C1ERR         equ	15734	;# 
  9761   003D77                     I2C1STAT0       equ	15735	;# 
  9762   003D78                     I2C1STAT1       equ	15736	;# 
  9763   003D79                     I2C1PIR         equ	15737	;# 
  9764   003D7A                     I2C1PIE         equ	15738	;# 
  9765   003D7B                     I2C1CLK         equ	15739	;# 
  9766   003D7C                     I2C1BTO         equ	15740	;# 
  9767   003DD0                     U2RXB           equ	15824	;# 
  9768   003DD0                     U2RXBL          equ	15824	;# 
  9769   003DD2                     U2TXB           equ	15826	;# 
  9770   003DD2                     U2TXBL          equ	15826	;# 
  9771   003DD4                     U2P1            equ	15828	;# 
  9772   003DD4                     U2P1L           equ	15828	;# 
  9773   003DD6                     U2P2            equ	15830	;# 
  9774   003DD6                     U2P2L           equ	15830	;# 
  9775   003DD8                     U2P3            equ	15832	;# 
  9776   003DD8                     U2P3L           equ	15832	;# 
  9777   003DDA                     U2CON0          equ	15834	;# 
  9778   003DDB                     U2CON1          equ	15835	;# 
  9779   003DDC                     U2CON2          equ	15836	;# 
  9780   003DDD                     U2BRG           equ	15837	;# 
  9781   003DDD                     U2BRGL          equ	15837	;# 
  9782   003DDE                     U2BRGH          equ	15838	;# 
  9783   003DDF                     U2FIFO          equ	15839	;# 
  9784   003DE0                     U2UIR           equ	15840	;# 
  9785   003DE1                     U2ERRIR         equ	15841	;# 
  9786   003DE2                     U2ERRIE         equ	15842	;# 
  9787   003DE8                     U1RXB           equ	15848	;# 
  9788   003DE8                     U1RXBL          equ	15848	;# 
  9789   003DE9                     U1RXCHK         equ	15849	;# 
  9790   003DEA                     U1TXB           equ	15850	;# 
  9791   003DEA                     U1TXBL          equ	15850	;# 
  9792   003DEB                     U1TXCHK         equ	15851	;# 
  9793   003DEC                     U1P1            equ	15852	;# 
  9794   003DEC                     U1P1L           equ	15852	;# 
  9795   003DED                     U1P1H           equ	15853	;# 
  9796   003DEE                     U1P2            equ	15854	;# 
  9797   003DEE                     U1P2L           equ	15854	;# 
  9798   003DEF                     U1P2H           equ	15855	;# 
  9799   003DF0                     U1P3            equ	15856	;# 
  9800   003DF0                     U1P3L           equ	15856	;# 
  9801   003DF1                     U1P3H           equ	15857	;# 
  9802   003DF2                     U1CON0          equ	15858	;# 
  9803   003DF3                     U1CON1          equ	15859	;# 
  9804   003DF4                     U1CON2          equ	15860	;# 
  9805   003DF5                     U1BRG           equ	15861	;# 
  9806   003DF5                     U1BRGL          equ	15861	;# 
  9807   003DF6                     U1BRGH          equ	15862	;# 
  9808   003DF7                     U1FIFO          equ	15863	;# 
  9809   003DF8                     U1UIR           equ	15864	;# 
  9810   003DF9                     U1ERRIR         equ	15865	;# 
  9811   003DFA                     U1ERRIE         equ	15866	;# 
  9812   003E9C                     DAC1CON1        equ	16028	;# 
  9813   003E9E                     DAC1CON0        equ	16030	;# 
  9814   003EB8                     CM2CON0         equ	16056	;# 
  9815   003EB9                     CM2CON1         equ	16057	;# 
  9816   003EBA                     CM2NCH          equ	16058	;# 
  9817   003EBB                     CM2PCH          equ	16059	;# 
  9818   003EBC                     CM1CON0         equ	16060	;# 
  9819   003EBD                     CM1CON1         equ	16061	;# 
  9820   003EBE                     CM1NCH          equ	16062	;# 
  9821   003EBF                     CM1PCH          equ	16063	;# 
  9822   003EC0                     CMOUT           equ	16064	;# 
  9823   003EC1                     FVRCON          equ	16065	;# 
  9824   003EC3                     ZCDCON          equ	16067	;# 
  9825   003EC9                     HLVDCON0        equ	16073	;# 
  9826   003ECA                     HLVDCON1        equ	16074	;# 
  9827   003ED7                     ADCP            equ	16087	;# 
  9828   003EDE                     ADLTH           equ	16094	;# 
  9829   003EDE                     ADLTHL          equ	16094	;# 
  9830   003EDF                     ADLTHH          equ	16095	;# 
  9831   003EE0                     ADUTH           equ	16096	;# 
  9832   003EE0                     ADUTHL          equ	16096	;# 
  9833   003EE1                     ADUTHH          equ	16097	;# 
  9834   003EE2                     ADERR           equ	16098	;# 
  9835   003EE2                     ADERRL          equ	16098	;# 
  9836   003EE3                     ADERRH          equ	16099	;# 
  9837   003EE4                     ADSTPT          equ	16100	;# 
  9838   003EE4                     ADSTPTL         equ	16100	;# 
  9839   003EE5                     ADSTPTH         equ	16101	;# 
  9840   003EE6                     ADFLTR          equ	16102	;# 
  9841   003EE6                     ADFLTRL         equ	16102	;# 
  9842   003EE7                     ADFLTRH         equ	16103	;# 
  9843   003EE8                     ADACC           equ	16104	;# 
  9844   003EE8                     ADACCL          equ	16104	;# 
  9845   003EE9                     ADACCH          equ	16105	;# 
  9846   003EEA                     ADACCU          equ	16106	;# 
  9847   003EEB                     ADCNT           equ	16107	;# 
  9848   003EEC                     ADRPT           equ	16108	;# 
  9849   003EED                     ADPREV          equ	16109	;# 
  9850   003EED                     ADPREVL         equ	16109	;# 
  9851   003EEE                     ADPREVH         equ	16110	;# 
  9852   003EEF                     ADRES           equ	16111	;# 
  9853   003EEF                     ADRESL          equ	16111	;# 
  9854   003EF0                     ADRESH          equ	16112	;# 
  9855   003EF1                     ADPCH           equ	16113	;# 
  9856   003EF3                     ADACQ           equ	16115	;# 
  9857   003EF3                     ADACQL          equ	16115	;# 
  9858   003EF4                     ADACQH          equ	16116	;# 
  9859   003EF5                     ADCAP           equ	16117	;# 
  9860   003EF6                     ADPRE           equ	16118	;# 
  9861   003EF6                     ADPREL          equ	16118	;# 
  9862   003EF7                     ADPREH          equ	16119	;# 
  9863   003EF8                     ADCON0          equ	16120	;# 
  9864   003EF9                     ADCON1          equ	16121	;# 
  9865   003EFA                     ADCON2          equ	16122	;# 
  9866   003EFB                     ADCON3          equ	16123	;# 
  9867   003EFC                     ADSTAT          equ	16124	;# 
  9868   003EFD                     ADREF           equ	16125	;# 
  9869   003EFE                     ADACT           equ	16126	;# 
  9870   003EFF                     ADCLK           equ	16127	;# 
  9871   003F12                     SMT1TMR         equ	16146	;# 
  9872   003F12                     SMT1TMRL        equ	16146	;# 
  9873   003F13                     SMT1TMRH        equ	16147	;# 
  9874   003F14                     SMT1TMRU        equ	16148	;# 
  9875   003F15                     SMT1CPR         equ	16149	;# 
  9876   003F15                     SMT1CPRL        equ	16149	;# 
  9877   003F16                     SMT1CPRH        equ	16150	;# 
  9878   003F17                     SMT1CPRU        equ	16151	;# 
  9879   003F18                     SMT1CPW         equ	16152	;# 
  9880   003F18                     SMT1CPWL        equ	16152	;# 
  9881   003F19                     SMT1CPWH        equ	16153	;# 
  9882   003F1A                     SMT1CPWU        equ	16154	;# 
  9883   003F1B                     SMT1PR          equ	16155	;# 
  9884   003F1B                     SMT1PRL         equ	16155	;# 
  9885   003F1C                     SMT1PRH         equ	16156	;# 
  9886   003F1D                     SMT1PRU         equ	16157	;# 
  9887   003F1E                     SMT1CON0        equ	16158	;# 
  9888   003F1F                     SMT1CON1        equ	16159	;# 
  9889   003F20                     SMT1STAT        equ	16160	;# 
  9890   003F21                     SMT1CLK         equ	16161	;# 
  9891   003F22                     SMT1SIG         equ	16162	;# 
  9892   003F23                     SMT1WIN         equ	16163	;# 
  9893   003F38                     NCO1ACC         equ	16184	;# 
  9894   003F38                     NCO1ACCL        equ	16184	;# 
  9895   003F39                     NCO1ACCH        equ	16185	;# 
  9896   003F3A                     NCO1ACCU        equ	16186	;# 
  9897   003F3B                     NCO1INC         equ	16187	;# 
  9898   003F3B                     NCO1INCL        equ	16187	;# 
  9899   003F3C                     NCO1INCH        equ	16188	;# 
  9900   003F3D                     NCO1INCU        equ	16189	;# 
  9901   003F3E                     NCO1CON         equ	16190	;# 
  9902   003F3F                     NCO1CLK         equ	16191	;# 
  9903   003F40                     CWG3CLK         equ	16192	;# 
  9904   003F40                     CWG3CLKCON      equ	16192	;# 
  9905   003F41                     CWG3ISM         equ	16193	;# 
  9906   003F41                     CWG3DAT         equ	16193	;# 
  9907   003F42                     CWG3DBR         equ	16194	;# 
  9908   003F43                     CWG3DBF         equ	16195	;# 
  9909   003F44                     CWG3CON0        equ	16196	;# 
  9910   003F45                     CWG3CON1        equ	16197	;# 
  9911   003F46                     CWG3AS0         equ	16198	;# 
  9912   003F47                     CWG3AS1         equ	16199	;# 
  9913   003F48                     CWG3STR         equ	16200	;# 
  9914   003F49                     CWG2CLK         equ	16201	;# 
  9915   003F49                     CWG2CLKCON      equ	16201	;# 
  9916   003F4A                     CWG2ISM         equ	16202	;# 
  9917   003F4A                     CWG2DAT         equ	16202	;# 
  9918   003F4B                     CWG2DBR         equ	16203	;# 
  9919   003F4C                     CWG2DBF         equ	16204	;# 
  9920   003F4D                     CWG2CON0        equ	16205	;# 
  9921   003F4E                     CWG2CON1        equ	16206	;# 
  9922   003F4F                     CWG2AS0         equ	16207	;# 
  9923   003F50                     CWG2AS1         equ	16208	;# 
  9924   003F51                     CWG2STR         equ	16209	;# 
  9925   003F52                     CWG1CLK         equ	16210	;# 
  9926   003F52                     CWG1CLKCON      equ	16210	;# 
  9927   003F53                     CWG1ISM         equ	16211	;# 
  9928   003F53                     CWG1DAT         equ	16211	;# 
  9929   003F54                     CWG1DBR         equ	16212	;# 
  9930   003F55                     CWG1DBF         equ	16213	;# 
  9931   003F56                     CWG1CON0        equ	16214	;# 
  9932   003F57                     CWG1CON1        equ	16215	;# 
  9933   003F58                     CWG1AS0         equ	16216	;# 
  9934   003F59                     CWG1AS1         equ	16217	;# 
  9935   003F5A                     CWG1STR         equ	16218	;# 
  9936   003F5E                     CCPTMRS0        equ	16222	;# 
  9937   003F5F                     CCPTMRS1        equ	16223	;# 
  9938   003F60                     PWM8DC          equ	16224	;# 
  9939   003F60                     PWM8DCL         equ	16224	;# 
  9940   003F61                     PWM8DCH         equ	16225	;# 
  9941   003F62                     PWM8CON         equ	16226	;# 
  9942   003F64                     PWM7DC          equ	16228	;# 
  9943   003F64                     PWM7DCL         equ	16228	;# 
  9944   003F65                     PWM7DCH         equ	16229	;# 
  9945   003F66                     PWM7CON         equ	16230	;# 
  9946   003F68                     PWM6DC          equ	16232	;# 
  9947   003F68                     PWM6DCL         equ	16232	;# 
  9948   003F69                     PWM6DCH         equ	16233	;# 
  9949   003F6A                     PWM6CON         equ	16234	;# 
  9950   003F6C                     PWM5DC          equ	16236	;# 
  9951   003F6C                     PWM5DCL         equ	16236	;# 
  9952   003F6D                     PWM5DCH         equ	16237	;# 
  9953   003F6E                     PWM5CON         equ	16238	;# 
  9954   003F70                     CCPR4           equ	16240	;# 
  9955   003F70                     CCPR4L          equ	16240	;# 
  9956   003F71                     CCPR4H          equ	16241	;# 
  9957   003F72                     CCP4CON         equ	16242	;# 
  9958   003F73                     CCP4CAP         equ	16243	;# 
  9959   003F74                     CCPR3           equ	16244	;# 
  9960   003F74                     CCPR3L          equ	16244	;# 
  9961   003F75                     CCPR3H          equ	16245	;# 
  9962   003F76                     CCP3CON         equ	16246	;# 
  9963   003F77                     CCP3CAP         equ	16247	;# 
  9964   003F78                     CCPR2           equ	16248	;# 
  9965   003F78                     CCPR2L          equ	16248	;# 
  9966   003F79                     CCPR2H          equ	16249	;# 
  9967   003F7A                     CCP2CON         equ	16250	;# 
  9968   003F7B                     CCP2CAP         equ	16251	;# 
  9969   003F7C                     CCPR1           equ	16252	;# 
  9970   003F7C                     CCPR1L          equ	16252	;# 
  9971   003F7D                     CCPR1H          equ	16253	;# 
  9972   003F7E                     CCP1CON         equ	16254	;# 
  9973   003F7F                     CCP1CAP         equ	16255	;# 
  9974   003F92                     T6TMR           equ	16274	;# 
  9975   003F92                     TMR6            equ	16274	;# 
  9976   003F93                     T6PR            equ	16275	;# 
  9977   003F93                     PR6             equ	16275	;# 
  9978   003F94                     T6CON           equ	16276	;# 
  9979   003F95                     T6HLT           equ	16277	;# 
  9980   003F96                     T6CLKCON        equ	16278	;# 
  9981   003F96                     T6CLK           equ	16278	;# 
  9982   003F97                     T6RST           equ	16279	;# 
  9983   003F98                     TMR5            equ	16280	;# 
  9984   003F98                     TMR5L           equ	16280	;# 
  9985   003F99                     TMR5H           equ	16281	;# 
  9986   003F9A                     T5CON           equ	16282	;# 
  9987   003F9A                     TMR5CON         equ	16282	;# 
  9988   003F9B                     T5GCON          equ	16283	;# 
  9989   003F9B                     TMR5GCON        equ	16283	;# 
  9990   003F9C                     T5GATE          equ	16284	;# 
  9991   003F9C                     TMR5GATE        equ	16284	;# 
  9992   003F9D                     T5CLK           equ	16285	;# 
  9993   003F9D                     TMR5CLK         equ	16285	;# 
  9994   003F9D                     PR5             equ	16285	;# 
  9995   003F9E                     T4TMR           equ	16286	;# 
  9996   003F9E                     TMR4            equ	16286	;# 
  9997   003F9F                     T4PR            equ	16287	;# 
  9998   003F9F                     PR4             equ	16287	;# 
  9999   003FA0                     T4CON           equ	16288	;# 
 10000   003FA1                     T4HLT           equ	16289	;# 
 10001   003FA2                     T4CLKCON        equ	16290	;# 
 10002   003FA2                     T4CLK           equ	16290	;# 
 10003   003FA3                     T4RST           equ	16291	;# 
 10004   003FA4                     TMR3            equ	16292	;# 
 10005   003FA4                     TMR3L           equ	16292	;# 
 10006   003FA5                     TMR3H           equ	16293	;# 
 10007   003FA6                     T3CON           equ	16294	;# 
 10008   003FA6                     TMR3CON         equ	16294	;# 
 10009   003FA7                     T3GCON          equ	16295	;# 
 10010   003FA7                     TMR3GCON        equ	16295	;# 
 10011   003FA8                     T3GATE          equ	16296	;# 
 10012   003FA8                     TMR3GATE        equ	16296	;# 
 10013   003FA9                     T3CLK           equ	16297	;# 
 10014   003FA9                     TMR3CLK         equ	16297	;# 
 10015   003FA9                     PR3             equ	16297	;# 
 10016   003FAA                     T2TMR           equ	16298	;# 
 10017   003FAA                     TMR2            equ	16298	;# 
 10018   003FAB                     T2PR            equ	16299	;# 
 10019   003FAB                     PR2             equ	16299	;# 
 10020   003FAC                     T2CON           equ	16300	;# 
 10021   003FAD                     T2HLT           equ	16301	;# 
 10022   003FAE                     T2CLKCON        equ	16302	;# 
 10023   003FAE                     T2CLK           equ	16302	;# 
 10024   003FAF                     T2RST           equ	16303	;# 
 10025   003FB0                     TMR1            equ	16304	;# 
 10026   003FB0                     TMR1L           equ	16304	;# 
 10027   003FB1                     TMR1H           equ	16305	;# 
 10028   003FB2                     T1CON           equ	16306	;# 
 10029   003FB2                     TMR1CON         equ	16306	;# 
 10030   003FB3                     T1GCON          equ	16307	;# 
 10031   003FB3                     TMR1GCON        equ	16307	;# 
 10032   003FB4                     T1GATE          equ	16308	;# 
 10033   003FB4                     TMR1GATE        equ	16308	;# 
 10034   003FB5                     T1CLK           equ	16309	;# 
 10035   003FB5                     TMR1CLK         equ	16309	;# 
 10036   003FB5                     PR1             equ	16309	;# 
 10037   003FB6                     TMR0L           equ	16310	;# 
 10038   003FB6                     TMR0            equ	16310	;# 
 10039   003FB7                     TMR0H           equ	16311	;# 
 10040   003FB7                     PR0             equ	16311	;# 
 10041   003FB8                     T0CON0          equ	16312	;# 
 10042   003FB9                     T0CON1          equ	16313	;# 
 10043   003FBA                     LATA            equ	16314	;# 
 10044   003FBB                     LATB            equ	16315	;# 
 10045   003FBC                     LATC            equ	16316	;# 
 10046   003FBD                     LATD            equ	16317	;# 
 10047   003FBE                     LATE            equ	16318	;# 
 10048   003FBF                     LATF            equ	16319	;# 
 10049   003FC2                     TRISA           equ	16322	;# 
 10050   003FC3                     TRISB           equ	16323	;# 
 10051   003FC4                     TRISC           equ	16324	;# 
 10052   003FC5                     TRISD           equ	16325	;# 
 10053   003FC6                     TRISE           equ	16326	;# 
 10054   003FC7                     TRISF           equ	16327	;# 
 10055   003FCA                     PORTA           equ	16330	;# 
 10056   003FCB                     PORTB           equ	16331	;# 
 10057   003FCC                     PORTC           equ	16332	;# 
 10058   003FCD                     PORTD           equ	16333	;# 
 10059   003FCE                     PORTE           equ	16334	;# 
 10060   003FCF                     PORTF           equ	16335	;# 
 10061   003FD2                     INTCON0         equ	16338	;# 
 10062   003FD3                     INTCON1         equ	16339	;# 
 10063   003FD4                     IVTLOCK         equ	16340	;# 
 10064   003FD5                     IVTBASE         equ	16341	;# 
 10065   003FD5                     IVTBASEL        equ	16341	;# 
 10066   003FD6                     IVTBASEH        equ	16342	;# 
 10067   003FD7                     IVTBASEU        equ	16343	;# 
 10068   003FD8                     STATUS          equ	16344	;# 
 10069   003FD9                     FSR2            equ	16345	;# 
 10070   003FD9                     FSR2L           equ	16345	;# 
 10071   003FDA                     FSR2H           equ	16346	;# 
 10072   003FDB                     PLUSW2          equ	16347	;# 
 10073   003FDC                     PREINC2         equ	16348	;# 
 10074   003FDD                     POSTDEC2        equ	16349	;# 
 10075   003FDE                     POSTINC2        equ	16350	;# 
 10076   003FDF                     INDF2           equ	16351	;# 
 10077   003FE0                     BSR             equ	16352	;# 
 10078   003FE1                     FSR1            equ	16353	;# 
 10079   003FE1                     FSR1L           equ	16353	;# 
 10080   003FE2                     FSR1H           equ	16354	;# 
 10081   003FE3                     PLUSW1          equ	16355	;# 
 10082   003FE4                     PREINC1         equ	16356	;# 
 10083   003FE5                     POSTDEC1        equ	16357	;# 
 10084   003FE6                     POSTINC1        equ	16358	;# 
 10085   003FE7                     INDF1           equ	16359	;# 
 10086   003FE8                     WREG            equ	16360	;# 
 10087   003FE9                     FSR0            equ	16361	;# 
 10088   003FE9                     FSR0L           equ	16361	;# 
 10089   003FEA                     FSR0H           equ	16362	;# 
 10090   003FEB                     PLUSW0          equ	16363	;# 
 10091   003FEC                     PREINC0         equ	16364	;# 
 10092   003FED                     POSTDEC0        equ	16365	;# 
 10093   003FEE                     POSTINC0        equ	16366	;# 
 10094   003FEF                     INDF0           equ	16367	;# 
 10095   003FF0                     PCON0           equ	16368	;# 
 10096   003FF1                     PCON1           equ	16369	;# 
 10097   003FF3                     PROD            equ	16371	;# 
 10098   003FF3                     PRODL           equ	16371	;# 
 10099   003FF4                     PRODH           equ	16372	;# 
 10100   003FF5                     TABLAT          equ	16373	;# 
 10101   003FF6                     TBLPTR          equ	16374	;# 
 10102   003FF6                     TBLPTRL         equ	16374	;# 
 10103   003FF7                     TBLPTRH         equ	16375	;# 
 10104   003FF8                     TBLPTRU         equ	16376	;# 
 10105   003FF9                     PCLAT           equ	16377	;# 
 10106   003FF9                     PCL             equ	16377	;# 
 10107   003FFA                     PCLATH          equ	16378	;# 
 10108   003FFB                     PCLATU          equ	16379	;# 
 10109   003FFC                     STKPTR          equ	16380	;# 
 10110   003FFD                     TOS             equ	16381	;# 
 10111   003FFD                     TOSL            equ	16381	;# 
 10112   003FFE                     TOSH            equ	16382	;# 
 10113   003FFF                     TOSU            equ	16383	;# 
 10114   003880                     STATUS_CSHAD    equ	14464	;# 
 10115   003881                     WREG_CSHAD      equ	14465	;# 
 10116   003882                     BSR_CSHAD       equ	14466	;# 
 10117   003883                     SHADCON         equ	14467	;# 
 10118   003884                     STATUS_SHAD     equ	14468	;# 
 10119   003885                     WREG_SHAD       equ	14469	;# 
 10120   003886                     BSR_SHAD        equ	14470	;# 
 10121   003887                     PCLATH_SHAD     equ	14471	;# 
 10122   003888                     PCLATU_SHAD     equ	14472	;# 
 10123   003889                     FSR0SH          equ	14473	;# 
 10124   003889                     FSR0L_SHAD      equ	14473	;# 
 10125   00388A                     FSR0H_SHAD      equ	14474	;# 
 10126   00388B                     FSR1SH          equ	14475	;# 
 10127   00388B                     FSR1L_SHAD      equ	14475	;# 
 10128   00388C                     FSR1H_SHAD      equ	14476	;# 
 10129   00388D                     FSR2SH          equ	14477	;# 
 10130   00388D                     FSR2L_SHAD      equ	14477	;# 
 10131   00388E                     FSR2H_SHAD      equ	14478	;# 
 10132   00388F                     PRODSH          equ	14479	;# 
 10133   00388F                     PRODL_SHAD      equ	14479	;# 
 10134   003890                     PRODH_SHAD      equ	14480	;# 
 10135   00389D                     IVTADL          equ	14493	;# 
 10136   00389E                     IVTADH          equ	14494	;# 
 10137   00389F                     IVTADU          equ	14495	;# 
 10138   00395B                     WDTCON0         equ	14683	;# 
 10139   00395C                     WDTCON1         equ	14684	;# 
 10140   00395D                     WDTPSL          equ	14685	;# 
 10141   00395E                     WDTPSH          equ	14686	;# 
 10142   00395F                     WDTTMR          equ	14687	;# 
 10143   003960                     CRCDATA         equ	14688	;# 
 10144   003960                     CRCDATL         equ	14688	;# 
 10145   003961                     CRCDATH         equ	14689	;# 
 10146   003962                     CRCACC          equ	14690	;# 
 10147   003962                     CRCACCL         equ	14690	;# 
 10148   003963                     CRCACCH         equ	14691	;# 
 10149   003964                     CRCSHFT         equ	14692	;# 
 10150   003964                     CRCSHIFTL       equ	14692	;# 
 10151   003965                     CRCSHIFTH       equ	14693	;# 
 10152   003966                     CRCXOR          equ	14694	;# 
 10153   003966                     CRCXORL         equ	14694	;# 
 10154   003967                     CRCXORH         equ	14695	;# 
 10155   003968                     CRCCON0         equ	14696	;# 
 10156   003969                     CRCCON1         equ	14697	;# 
 10157   003976                     SCANLADR        equ	14710	;# 
 10158   003976                     SCANLADRL       equ	14710	;# 
 10159   003977                     SCANLADRH       equ	14711	;# 
 10160   003978                     SCANLADRU       equ	14712	;# 
 10161   003979                     SCANHADR        equ	14713	;# 
 10162   003979                     SCANHADRL       equ	14713	;# 
 10163   00397A                     SCANHADRH       equ	14714	;# 
 10164   00397B                     SCANHADRU       equ	14715	;# 
 10165   00397C                     SCANCON0        equ	14716	;# 
 10166   00397D                     SCANTRIG        equ	14717	;# 
 10167   003980                     IPR0            equ	14720	;# 
 10168   003981                     IPR1            equ	14721	;# 
 10169   003982                     IPR2            equ	14722	;# 
 10170   003983                     IPR3            equ	14723	;# 
 10171   003984                     IPR4            equ	14724	;# 
 10172   003985                     IPR5            equ	14725	;# 
 10173   003986                     IPR6            equ	14726	;# 
 10174   003987                     IPR7            equ	14727	;# 
 10175   003988                     IPR8            equ	14728	;# 
 10176   003989                     IPR9            equ	14729	;# 
 10177   00398A                     IPR10           equ	14730	;# 
 10178   003990                     PIE0            equ	14736	;# 
 10179   003991                     PIE1            equ	14737	;# 
 10180   003992                     PIE2            equ	14738	;# 
 10181   003993                     PIE3            equ	14739	;# 
 10182   003994                     PIE4            equ	14740	;# 
 10183   003995                     PIE5            equ	14741	;# 
 10184   003996                     PIE6            equ	14742	;# 
 10185   003997                     PIE7            equ	14743	;# 
 10186   003998                     PIE8            equ	14744	;# 
 10187   003999                     PIE9            equ	14745	;# 
 10188   00399A                     PIE10           equ	14746	;# 
 10189   0039A0                     PIR0            equ	14752	;# 
 10190   0039A1                     PIR1            equ	14753	;# 
 10191   0039A2                     PIR2            equ	14754	;# 
 10192   0039A3                     PIR3            equ	14755	;# 
 10193   0039A4                     PIR4            equ	14756	;# 
 10194   0039A5                     PIR5            equ	14757	;# 
 10195   0039A6                     PIR6            equ	14758	;# 
 10196   0039A7                     PIR7            equ	14759	;# 
 10197   0039A8                     PIR8            equ	14760	;# 
 10198   0039A9                     PIR9            equ	14761	;# 
 10199   0039AA                     PIR10           equ	14762	;# 
 10200   0039C0                     PMD0            equ	14784	;# 
 10201   0039C1                     PMD1            equ	14785	;# 
 10202   0039C2                     PMD2            equ	14786	;# 
 10203   0039C3                     PMD3            equ	14787	;# 
 10204   0039C4                     PMD4            equ	14788	;# 
 10205   0039C5                     PMD5            equ	14789	;# 
 10206   0039C6                     PMD6            equ	14790	;# 
 10207   0039C7                     PMD7            equ	14791	;# 
 10208   0039D0                     BORCON          equ	14800	;# 
 10209   0039D1                     VREGCON         equ	14801	;# 
 10210   0039D8                     CPUDOZE         equ	14808	;# 
 10211   0039D9                     OSCCON1         equ	14809	;# 
 10212   0039DA                     OSCCON2         equ	14810	;# 
 10213   0039DB                     OSCCON3         equ	14811	;# 
 10214   0039DC                     OSCSTAT         equ	14812	;# 
 10215   0039DC                     OSCSTAT1        equ	14812	;# 
 10216   0039DD                     OSCEN           equ	14813	;# 
 10217   0039DE                     OSCTUNE         equ	14814	;# 
 10218   0039DF                     OSCFRQ          equ	14815	;# 
 10219   0039E0                     NVMADRL         equ	14816	;# 
 10220   0039E1                     NVMADRH         equ	14817	;# 
 10221   0039E3                     NVMDAT          equ	14819	;# 
 10222   0039E5                     NVMCON1         equ	14821	;# 
 10223   0039E6                     NVMCON2         equ	14822	;# 
 10224   0039EF                     PRLOCK          equ	14831	;# 
 10225   0039F1                     ISRPR           equ	14833	;# 
 10226   0039F2                     MAINPR          equ	14834	;# 
 10227   0039F3                     DMA1PR          equ	14835	;# 
 10228   0039F4                     DMA2PR          equ	14836	;# 
 10229   0039F7                     SCANPR          equ	14839	;# 
 10230   003A00                     RA0PPS          equ	14848	;# 
 10231   003A01                     RA1PPS          equ	14849	;# 
 10232   003A02                     RA2PPS          equ	14850	;# 
 10233   003A03                     RA3PPS          equ	14851	;# 
 10234   003A04                     RA4PPS          equ	14852	;# 
 10235   003A05                     RA5PPS          equ	14853	;# 
 10236   003A06                     RA6PPS          equ	14854	;# 
 10237   003A07                     RA7PPS          equ	14855	;# 
 10238   003A08                     RB0PPS          equ	14856	;# 
 10239   003A09                     RB1PPS          equ	14857	;# 
 10240   003A0A                     RB2PPS          equ	14858	;# 
 10241   003A0B                     RB3PPS          equ	14859	;# 
 10242   003A0C                     RB4PPS          equ	14860	;# 
 10243   003A0D                     RB5PPS          equ	14861	;# 
 10244   003A0E                     RB6PPS          equ	14862	;# 
 10245   003A0F                     RB7PPS          equ	14863	;# 
 10246   003A10                     RC0PPS          equ	14864	;# 
 10247   003A11                     RC1PPS          equ	14865	;# 
 10248   003A12                     RC2PPS          equ	14866	;# 
 10249   003A13                     RC3PPS          equ	14867	;# 
 10250   003A14                     RC4PPS          equ	14868	;# 
 10251   003A15                     RC5PPS          equ	14869	;# 
 10252   003A16                     RC6PPS          equ	14870	;# 
 10253   003A17                     RC7PPS          equ	14871	;# 
 10254   003A18                     RD0PPS          equ	14872	;# 
 10255   003A19                     RD1PPS          equ	14873	;# 
 10256   003A1A                     RD2PPS          equ	14874	;# 
 10257   003A1B                     RD3PPS          equ	14875	;# 
 10258   003A1C                     RD4PPS          equ	14876	;# 
 10259   003A1D                     RD5PPS          equ	14877	;# 
 10260   003A1E                     RD6PPS          equ	14878	;# 
 10261   003A1F                     RD7PPS          equ	14879	;# 
 10262   003A20                     RE0PPS          equ	14880	;# 
 10263   003A21                     RE1PPS          equ	14881	;# 
 10264   003A22                     RE2PPS          equ	14882	;# 
 10265   003A28                     RF0PPS          equ	14888	;# 
 10266   003A29                     RF1PPS          equ	14889	;# 
 10267   003A2A                     RF2PPS          equ	14890	;# 
 10268   003A2B                     RF3PPS          equ	14891	;# 
 10269   003A2C                     RF4PPS          equ	14892	;# 
 10270   003A2D                     RF5PPS          equ	14893	;# 
 10271   003A2E                     RF6PPS          equ	14894	;# 
 10272   003A2F                     RF7PPS          equ	14895	;# 
 10273   003A40                     ANSELA          equ	14912	;# 
 10274   003A41                     WPUA            equ	14913	;# 
 10275   003A42                     ODCONA          equ	14914	;# 
 10276   003A43                     SLRCONA         equ	14915	;# 
 10277   003A44                     INLVLA          equ	14916	;# 
 10278   003A45                     IOCAP           equ	14917	;# 
 10279   003A46                     IOCAN           equ	14918	;# 
 10280   003A47                     IOCAF           equ	14919	;# 
 10281   003A50                     ANSELB          equ	14928	;# 
 10282   003A51                     WPUB            equ	14929	;# 
 10283   003A52                     ODCONB          equ	14930	;# 
 10284   003A53                     SLRCONB         equ	14931	;# 
 10285   003A54                     INLVLB          equ	14932	;# 
 10286   003A55                     IOCBP           equ	14933	;# 
 10287   003A56                     IOCBN           equ	14934	;# 
 10288   003A57                     IOCBF           equ	14935	;# 
 10289   003A5A                     RB1I2C          equ	14938	;# 
 10290   003A5B                     RB2I2C          equ	14939	;# 
 10291   003A60                     ANSELC          equ	14944	;# 
 10292   003A61                     WPUC            equ	14945	;# 
 10293   003A62                     ODCONC          equ	14946	;# 
 10294   003A63                     SLRCONC         equ	14947	;# 
 10295   003A64                     INLVLC          equ	14948	;# 
 10296   003A65                     IOCCP           equ	14949	;# 
 10297   003A66                     IOCCN           equ	14950	;# 
 10298   003A67                     IOCCF           equ	14951	;# 
 10299   003A6A                     RC3I2C          equ	14954	;# 
 10300   003A6B                     RC4I2C          equ	14955	;# 
 10301   003A70                     ANSELD          equ	14960	;# 
 10302   003A71                     WPUD            equ	14961	;# 
 10303   003A72                     ODCOND          equ	14962	;# 
 10304   003A73                     SLRCOND         equ	14963	;# 
 10305   003A74                     INLVLD          equ	14964	;# 
 10306   003A7A                     RD0I2C          equ	14970	;# 
 10307   003A7B                     RD1I2C          equ	14971	;# 
 10308   003A80                     ANSELE          equ	14976	;# 
 10309   003A81                     WPUE            equ	14977	;# 
 10310   003A82                     ODCONE          equ	14978	;# 
 10311   003A83                     SLRCONE         equ	14979	;# 
 10312   003A84                     INLVLE          equ	14980	;# 
 10313   003A85                     IOCEP           equ	14981	;# 
 10314   003A86                     IOCEN           equ	14982	;# 
 10315   003A87                     IOCEF           equ	14983	;# 
 10316   003A90                     ANSELF          equ	14992	;# 
 10317   003A91                     WPUF            equ	14993	;# 
 10318   003A92                     ODCONF          equ	14994	;# 
 10319   003A93                     SLRCONF         equ	14995	;# 
 10320   003A94                     INLVLF          equ	14996	;# 
 10321   003ABF                     PPSLOCK         equ	15039	;# 
 10322   003AC0                     INT0PPS         equ	15040	;# 
 10323   003AC1                     INT1PPS         equ	15041	;# 
 10324   003AC2                     INT2PPS         equ	15042	;# 
 10325   003AC3                     T0CKIPPS        equ	15043	;# 
 10326   003AC4                     T1CKIPPS        equ	15044	;# 
 10327   003AC5                     T1GPPS          equ	15045	;# 
 10328   003AC6                     T3CKIPPS        equ	15046	;# 
 10329   003AC7                     T3GPPS          equ	15047	;# 
 10330   003AC8                     T5CKIPPS        equ	15048	;# 
 10331   003AC9                     T5GPPS          equ	15049	;# 
 10332   003ACA                     T2INPPS         equ	15050	;# 
 10333   003ACB                     T4INPPS         equ	15051	;# 
 10334   003ACC                     T6INPPS         equ	15052	;# 
 10335   003ACD                     CCP1PPS         equ	15053	;# 
 10336   003ACE                     CCP2PPS         equ	15054	;# 
 10337   003ACF                     CCP3PPS         equ	15055	;# 
 10338   003AD0                     CCP4PPS         equ	15056	;# 
 10339   003AD1                     SMT1WINPPS      equ	15057	;# 
 10340   003AD2                     SMT1SIGPPS      equ	15058	;# 
 10341   003AD3                     CWG1INPPS       equ	15059	;# 
 10342   003AD4                     CWG2INPPS       equ	15060	;# 
 10343   003AD5                     CWG3INPPS       equ	15061	;# 
 10344   003AD6                     MD1CARLPPS      equ	15062	;# 
 10345   003AD7                     MD1CARHPPS      equ	15063	;# 
 10346   003AD8                     MD1SRCPPS       equ	15064	;# 
 10347   003AD9                     CLCIN0PPS       equ	15065	;# 
 10348   003ADA                     CLCIN1PPS       equ	15066	;# 
 10349   003ADB                     CLCIN2PPS       equ	15067	;# 
 10350   003ADC                     CLCIN3PPS       equ	15068	;# 
 10351   003ADD                     ADACTPPS        equ	15069	;# 
 10352   003ADE                     SPI1SCKPPS      equ	15070	;# 
 10353   003ADF                     SPI1SDIPPS      equ	15071	;# 
 10354   003AE0                     SPI1SSPPS       equ	15072	;# 
 10355   003AE1                     I2C1SCLPPS      equ	15073	;# 
 10356   003AE2                     I2C1SDAPPS      equ	15074	;# 
 10357   003AE3                     I2C2SCLPPS      equ	15075	;# 
 10358   003AE4                     I2C2SDAPPS      equ	15076	;# 
 10359   003AE5                     U1RXPPS         equ	15077	;# 
 10360   003AE6                     U1CTSPPS        equ	15078	;# 
 10361   003AE8                     U2RXPPS         equ	15080	;# 
 10362   003AE9                     U2CTSPPS        equ	15081	;# 
 10363   003BC9                     DMA2BUF         equ	15305	;# 
 10364   003BCA                     DMA2DCNT        equ	15306	;# 
 10365   003BCA                     DMA2DCNTL       equ	15306	;# 
 10366   003BCB                     DMA2DCNTH       equ	15307	;# 
 10367   003BCC                     DMA2DPTR        equ	15308	;# 
 10368   003BCC                     DMA2DPTRL       equ	15308	;# 
 10369   003BCD                     DMA2DPTRH       equ	15309	;# 
 10370   003BCE                     DMA2DSZ         equ	15310	;# 
 10371   003BCE                     DMA2DSZL        equ	15310	;# 
 10372   003BCF                     DMA2DSZH        equ	15311	;# 
 10373   003BD0                     DMA2DSA         equ	15312	;# 
 10374   003BD0                     DMA2DSAL        equ	15312	;# 
 10375   003BD1                     DMA2DSAH        equ	15313	;# 
 10376   003BD2                     DMA2SCNT        equ	15314	;# 
 10377   003BD2                     DMA2SCNTL       equ	15314	;# 
 10378   003BD3                     DMA2SCNTH       equ	15315	;# 
 10379   003BD4                     DMA2SPTR        equ	15316	;# 
 10380   003BD4                     DMA2SPTRL       equ	15316	;# 
 10381   003BD5                     DMA2SPTRH       equ	15317	;# 
 10382   003BD6                     DMA2SPTRU       equ	15318	;# 
 10383   003BD7                     DMA2SSZ         equ	15319	;# 
 10384   003BD7                     DMA2SSZL        equ	15319	;# 
 10385   003BD8                     DMA2SSZH        equ	15320	;# 
 10386   003BD9                     DMA2SSA         equ	15321	;# 
 10387   003BD9                     DMA2SSAL        equ	15321	;# 
 10388   003BDA                     DMA2SSAH        equ	15322	;# 
 10389   003BDB                     DMA2SSAU        equ	15323	;# 
 10390   003BDC                     DMA2CON0        equ	15324	;# 
 10391   003BDD                     DMA2CON1        equ	15325	;# 
 10392   003BDE                     DMA2AIRQ        equ	15326	;# 
 10393   003BDF                     DMA2SIRQ        equ	15327	;# 
 10394   003BE9                     DMA1BUF         equ	15337	;# 
 10395   003BEA                     DMA1DCNT        equ	15338	;# 
 10396   003BEA                     DMA1DCNTL       equ	15338	;# 
 10397   003BEB                     DMA1DCNTH       equ	15339	;# 
 10398   003BEC                     DMA1DPTR        equ	15340	;# 
 10399   003BEC                     DMA1DPTRL       equ	15340	;# 
 10400   003BED                     DMA1DPTRH       equ	15341	;# 
 10401   003BEE                     DMA1DSZ         equ	15342	;# 
 10402   003BEE                     DMA1DSZL        equ	15342	;# 
 10403   003BEF                     DMA1DSZH        equ	15343	;# 
 10404   003BF0                     DMA1DSA         equ	15344	;# 
 10405   003BF0                     DMA1DSAL        equ	15344	;# 
 10406   003BF1                     DMA1DSAH        equ	15345	;# 
 10407   003BF2                     DMA1SCNT        equ	15346	;# 
 10408   003BF2                     DMA1SCNTL       equ	15346	;# 
 10409   003BF3                     DMA1SCNTH       equ	15347	;# 
 10410   003BF4                     DMA1SPTR        equ	15348	;# 
 10411   003BF4                     DMA1SPTRL       equ	15348	;# 
 10412   003BF5                     DMA1SPTRH       equ	15349	;# 
 10413   003BF6                     DMA1SPTRU       equ	15350	;# 
 10414   003BF7                     DMA1SSZ         equ	15351	;# 
 10415   003BF7                     DMA1SSZL        equ	15351	;# 
 10416   003BF8                     DMA1SSZH        equ	15352	;# 
 10417   003BF9                     DMA1SSA         equ	15353	;# 
 10418   003BF9                     DMA1SSAL        equ	15353	;# 
 10419   003BFA                     DMA1SSAH        equ	15354	;# 
 10420   003BFB                     DMA1SSAU        equ	15355	;# 
 10421   003BFC                     DMA1CON0        equ	15356	;# 
 10422   003BFD                     DMA1CON1        equ	15357	;# 
 10423   003BFE                     DMA1AIRQ        equ	15358	;# 
 10424   003BFF                     DMA1SIRQ        equ	15359	;# 
 10425   003C56                     CLC4CON         equ	15446	;# 
 10426   003C57                     CLC4POL         equ	15447	;# 
 10427   003C58                     CLC4SEL0        equ	15448	;# 
 10428   003C59                     CLC4SEL1        equ	15449	;# 
 10429   003C5A                     CLC4SEL2        equ	15450	;# 
 10430   003C5B                     CLC4SEL3        equ	15451	;# 
 10431   003C5C                     CLC4GLS0        equ	15452	;# 
 10432   003C5D                     CLC4GLS1        equ	15453	;# 
 10433   003C5E                     CLC4GLS2        equ	15454	;# 
 10434   003C5F                     CLC4GLS3        equ	15455	;# 
 10435   003C60                     CLC3CON         equ	15456	;# 
 10436   003C61                     CLC3POL         equ	15457	;# 
 10437   003C62                     CLC3SEL0        equ	15458	;# 
 10438   003C63                     CLC3SEL1        equ	15459	;# 
 10439   003C64                     CLC3SEL2        equ	15460	;# 
 10440   003C65                     CLC3SEL3        equ	15461	;# 
 10441   003C66                     CLC3GLS0        equ	15462	;# 
 10442   003C67                     CLC3GLS1        equ	15463	;# 
 10443   003C68                     CLC3GLS2        equ	15464	;# 
 10444   003C69                     CLC3GLS3        equ	15465	;# 
 10445   003C6A                     CLC2CON         equ	15466	;# 
 10446   003C6B                     CLC2POL         equ	15467	;# 
 10447   003C6C                     CLC2SEL0        equ	15468	;# 
 10448   003C6D                     CLC2SEL1        equ	15469	;# 
 10449   003C6E                     CLC2SEL2        equ	15470	;# 
 10450   003C6F                     CLC2SEL3        equ	15471	;# 
 10451   003C70                     CLC2GLS0        equ	15472	;# 
 10452   003C71                     CLC2GLS1        equ	15473	;# 
 10453   003C72                     CLC2GLS2        equ	15474	;# 
 10454   003C73                     CLC2GLS3        equ	15475	;# 
 10455   003C74                     CLC1CON         equ	15476	;# 
 10456   003C75                     CLC1POL         equ	15477	;# 
 10457   003C76                     CLC1SEL0        equ	15478	;# 
 10458   003C77                     CLC1SEL1        equ	15479	;# 
 10459   003C78                     CLC1SEL2        equ	15480	;# 
 10460   003C79                     CLC1SEL3        equ	15481	;# 
 10461   003C7A                     CLC1GLS0        equ	15482	;# 
 10462   003C7B                     CLC1GLS1        equ	15483	;# 
 10463   003C7C                     CLC1GLS2        equ	15484	;# 
 10464   003C7D                     CLC1GLS3        equ	15485	;# 
 10465   003C7E                     CLCDATA0        equ	15486	;# 
 10466   003CE5                     CLKRCON         equ	15589	;# 
 10467   003CE6                     CLKRCLK         equ	15590	;# 
 10468   003CFA                     MD1CON0         equ	15610	;# 
 10469   003CFB                     MD1CON1         equ	15611	;# 
 10470   003CFC                     MD1SRC          equ	15612	;# 
 10471   003CFD                     MD1CARL         equ	15613	;# 
 10472   003CFE                     MD1CARH         equ	15614	;# 
 10473   003D10                     SPI1RXB         equ	15632	;# 
 10474   003D11                     SPI1TXB         equ	15633	;# 
 10475   003D12                     SPI1TCNT        equ	15634	;# 
 10476   003D12                     SPI1TCNTL       equ	15634	;# 
 10477   003D13                     SPI1TCNTH       equ	15635	;# 
 10478   003D14                     SPI1CON0        equ	15636	;# 
 10479   003D15                     SPI1CON1        equ	15637	;# 
 10480   003D16                     SPI1CON2        equ	15638	;# 
 10481   003D17                     SPI1STATUS      equ	15639	;# 
 10482   003D18                     SPI1TWIDTH      equ	15640	;# 
 10483   003D19                     SPI1BAUD        equ	15641	;# 
 10484   003D1A                     SPI1INTF        equ	15642	;# 
 10485   003D1B                     SPI1INTE        equ	15643	;# 
 10486   003D1C                     SPI1CLK         equ	15644	;# 
 10487   003D54                     I2C2RXB         equ	15700	;# 
 10488   003D55                     I2C2TXB         equ	15701	;# 
 10489   003D56                     I2C2CNT         equ	15702	;# 
 10490   003D57                     I2C2ADB0        equ	15703	;# 
 10491   003D58                     I2C2ADB1        equ	15704	;# 
 10492   003D59                     I2C2ADR0        equ	15705	;# 
 10493   003D5A                     I2C2ADR1        equ	15706	;# 
 10494   003D5B                     I2C2ADR2        equ	15707	;# 
 10495   003D5C                     I2C2ADR3        equ	15708	;# 
 10496   003D5D                     I2C2CON0        equ	15709	;# 
 10497   003D5E                     I2C2CON1        equ	15710	;# 
 10498   003D5F                     I2C2CON2        equ	15711	;# 
 10499   003D60                     I2C2ERR         equ	15712	;# 
 10500   003D61                     I2C2STAT0       equ	15713	;# 
 10501   003D62                     I2C2STAT1       equ	15714	;# 
 10502   003D63                     I2C2PIR         equ	15715	;# 
 10503   003D64                     I2C2PIE         equ	15716	;# 
 10504   003D65                     I2C2CLK         equ	15717	;# 
 10505   003D66                     I2C2BTO         equ	15718	;# 
 10506   003D6A                     I2C1RXB         equ	15722	;# 
 10507   003D6B                     I2C1TXB         equ	15723	;# 
 10508   003D6C                     I2C1CNT         equ	15724	;# 
 10509   003D6D                     I2C1ADB0        equ	15725	;# 
 10510   003D6E                     I2C1ADB1        equ	15726	;# 
 10511   003D6F                     I2C1ADR0        equ	15727	;# 
 10512   003D70                     I2C1ADR1        equ	15728	;# 
 10513   003D71                     I2C1ADR2        equ	15729	;# 
 10514   003D72                     I2C1ADR3        equ	15730	;# 
 10515   003D73                     I2C1CON0        equ	15731	;# 
 10516   003D74                     I2C1CON1        equ	15732	;# 
 10517   003D75                     I2C1CON2        equ	15733	;# 
 10518   003D76                     I2C1ERR         equ	15734	;# 
 10519   003D77                     I2C1STAT0       equ	15735	;# 
 10520   003D78                     I2C1STAT1       equ	15736	;# 
 10521   003D79                     I2C1PIR         equ	15737	;# 
 10522   003D7A                     I2C1PIE         equ	15738	;# 
 10523   003D7B                     I2C1CLK         equ	15739	;# 
 10524   003D7C                     I2C1BTO         equ	15740	;# 
 10525   003DD0                     U2RXB           equ	15824	;# 
 10526   003DD0                     U2RXBL          equ	15824	;# 
 10527   003DD2                     U2TXB           equ	15826	;# 
 10528   003DD2                     U2TXBL          equ	15826	;# 
 10529   003DD4                     U2P1            equ	15828	;# 
 10530   003DD4                     U2P1L           equ	15828	;# 
 10531   003DD6                     U2P2            equ	15830	;# 
 10532   003DD6                     U2P2L           equ	15830	;# 
 10533   003DD8                     U2P3            equ	15832	;# 
 10534   003DD8                     U2P3L           equ	15832	;# 
 10535   003DDA                     U2CON0          equ	15834	;# 
 10536   003DDB                     U2CON1          equ	15835	;# 
 10537   003DDC                     U2CON2          equ	15836	;# 
 10538   003DDD                     U2BRG           equ	15837	;# 
 10539   003DDD                     U2BRGL          equ	15837	;# 
 10540   003DDE                     U2BRGH          equ	15838	;# 
 10541   003DDF                     U2FIFO          equ	15839	;# 
 10542   003DE0                     U2UIR           equ	15840	;# 
 10543   003DE1                     U2ERRIR         equ	15841	;# 
 10544   003DE2                     U2ERRIE         equ	15842	;# 
 10545   003DE8                     U1RXB           equ	15848	;# 
 10546   003DE8                     U1RXBL          equ	15848	;# 
 10547   003DE9                     U1RXCHK         equ	15849	;# 
 10548   003DEA                     U1TXB           equ	15850	;# 
 10549   003DEA                     U1TXBL          equ	15850	;# 
 10550   003DEB                     U1TXCHK         equ	15851	;# 
 10551   003DEC                     U1P1            equ	15852	;# 
 10552   003DEC                     U1P1L           equ	15852	;# 
 10553   003DED                     U1P1H           equ	15853	;# 
 10554   003DEE                     U1P2            equ	15854	;# 
 10555   003DEE                     U1P2L           equ	15854	;# 
 10556   003DEF                     U1P2H           equ	15855	;# 
 10557   003DF0                     U1P3            equ	15856	;# 
 10558   003DF0                     U1P3L           equ	15856	;# 
 10559   003DF1                     U1P3H           equ	15857	;# 
 10560   003DF2                     U1CON0          equ	15858	;# 
 10561   003DF3                     U1CON1          equ	15859	;# 
 10562   003DF4                     U1CON2          equ	15860	;# 
 10563   003DF5                     U1BRG           equ	15861	;# 
 10564   003DF5                     U1BRGL          equ	15861	;# 
 10565   003DF6                     U1BRGH          equ	15862	;# 
 10566   003DF7                     U1FIFO          equ	15863	;# 
 10567   003DF8                     U1UIR           equ	15864	;# 
 10568   003DF9                     U1ERRIR         equ	15865	;# 
 10569   003DFA                     U1ERRIE         equ	15866	;# 
 10570   003E9C                     DAC1CON1        equ	16028	;# 
 10571   003E9E                     DAC1CON0        equ	16030	;# 
 10572   003EB8                     CM2CON0         equ	16056	;# 
 10573   003EB9                     CM2CON1         equ	16057	;# 
 10574   003EBA                     CM2NCH          equ	16058	;# 
 10575   003EBB                     CM2PCH          equ	16059	;# 
 10576   003EBC                     CM1CON0         equ	16060	;# 
 10577   003EBD                     CM1CON1         equ	16061	;# 
 10578   003EBE                     CM1NCH          equ	16062	;# 
 10579   003EBF                     CM1PCH          equ	16063	;# 
 10580   003EC0                     CMOUT           equ	16064	;# 
 10581   003EC1                     FVRCON          equ	16065	;# 
 10582   003EC3                     ZCDCON          equ	16067	;# 
 10583   003EC9                     HLVDCON0        equ	16073	;# 
 10584   003ECA                     HLVDCON1        equ	16074	;# 
 10585   003ED7                     ADCP            equ	16087	;# 
 10586   003EDE                     ADLTH           equ	16094	;# 
 10587   003EDE                     ADLTHL          equ	16094	;# 
 10588   003EDF                     ADLTHH          equ	16095	;# 
 10589   003EE0                     ADUTH           equ	16096	;# 
 10590   003EE0                     ADUTHL          equ	16096	;# 
 10591   003EE1                     ADUTHH          equ	16097	;# 
 10592   003EE2                     ADERR           equ	16098	;# 
 10593   003EE2                     ADERRL          equ	16098	;# 
 10594   003EE3                     ADERRH          equ	16099	;# 
 10595   003EE4                     ADSTPT          equ	16100	;# 
 10596   003EE4                     ADSTPTL         equ	16100	;# 
 10597   003EE5                     ADSTPTH         equ	16101	;# 
 10598   003EE6                     ADFLTR          equ	16102	;# 
 10599   003EE6                     ADFLTRL         equ	16102	;# 
 10600   003EE7                     ADFLTRH         equ	16103	;# 
 10601   003EE8                     ADACC           equ	16104	;# 
 10602   003EE8                     ADACCL          equ	16104	;# 
 10603   003EE9                     ADACCH          equ	16105	;# 
 10604   003EEA                     ADACCU          equ	16106	;# 
 10605   003EEB                     ADCNT           equ	16107	;# 
 10606   003EEC                     ADRPT           equ	16108	;# 
 10607   003EED                     ADPREV          equ	16109	;# 
 10608   003EED                     ADPREVL         equ	16109	;# 
 10609   003EEE                     ADPREVH         equ	16110	;# 
 10610   003EEF                     ADRES           equ	16111	;# 
 10611   003EEF                     ADRESL          equ	16111	;# 
 10612   003EF0                     ADRESH          equ	16112	;# 
 10613   003EF1                     ADPCH           equ	16113	;# 
 10614   003EF3                     ADACQ           equ	16115	;# 
 10615   003EF3                     ADACQL          equ	16115	;# 
 10616   003EF4                     ADACQH          equ	16116	;# 
 10617   003EF5                     ADCAP           equ	16117	;# 
 10618   003EF6                     ADPRE           equ	16118	;# 
 10619   003EF6                     ADPREL          equ	16118	;# 
 10620   003EF7                     ADPREH          equ	16119	;# 
 10621   003EF8                     ADCON0          equ	16120	;# 
 10622   003EF9                     ADCON1          equ	16121	;# 
 10623   003EFA                     ADCON2          equ	16122	;# 
 10624   003EFB                     ADCON3          equ	16123	;# 
 10625   003EFC                     ADSTAT          equ	16124	;# 
 10626   003EFD                     ADREF           equ	16125	;# 
 10627   003EFE                     ADACT           equ	16126	;# 
 10628   003EFF                     ADCLK           equ	16127	;# 
 10629   003F12                     SMT1TMR         equ	16146	;# 
 10630   003F12                     SMT1TMRL        equ	16146	;# 
 10631   003F13                     SMT1TMRH        equ	16147	;# 
 10632   003F14                     SMT1TMRU        equ	16148	;# 
 10633   003F15                     SMT1CPR         equ	16149	;# 
 10634   003F15                     SMT1CPRL        equ	16149	;# 
 10635   003F16                     SMT1CPRH        equ	16150	;# 
 10636   003F17                     SMT1CPRU        equ	16151	;# 
 10637   003F18                     SMT1CPW         equ	16152	;# 
 10638   003F18                     SMT1CPWL        equ	16152	;# 
 10639   003F19                     SMT1CPWH        equ	16153	;# 
 10640   003F1A                     SMT1CPWU        equ	16154	;# 
 10641   003F1B                     SMT1PR          equ	16155	;# 
 10642   003F1B                     SMT1PRL         equ	16155	;# 
 10643   003F1C                     SMT1PRH         equ	16156	;# 
 10644   003F1D                     SMT1PRU         equ	16157	;# 
 10645   003F1E                     SMT1CON0        equ	16158	;# 
 10646   003F1F                     SMT1CON1        equ	16159	;# 
 10647   003F20                     SMT1STAT        equ	16160	;# 
 10648   003F21                     SMT1CLK         equ	16161	;# 
 10649   003F22                     SMT1SIG         equ	16162	;# 
 10650   003F23                     SMT1WIN         equ	16163	;# 
 10651   003F38                     NCO1ACC         equ	16184	;# 
 10652   003F38                     NCO1ACCL        equ	16184	;# 
 10653   003F39                     NCO1ACCH        equ	16185	;# 
 10654   003F3A                     NCO1ACCU        equ	16186	;# 
 10655   003F3B                     NCO1INC         equ	16187	;# 
 10656   003F3B                     NCO1INCL        equ	16187	;# 
 10657   003F3C                     NCO1INCH        equ	16188	;# 
 10658   003F3D                     NCO1INCU        equ	16189	;# 
 10659   003F3E                     NCO1CON         equ	16190	;# 
 10660   003F3F                     NCO1CLK         equ	16191	;# 
 10661   003F40                     CWG3CLK         equ	16192	;# 
 10662   003F40                     CWG3CLKCON      equ	16192	;# 
 10663   003F41                     CWG3ISM         equ	16193	;# 
 10664   003F41                     CWG3DAT         equ	16193	;# 
 10665   003F42                     CWG3DBR         equ	16194	;# 
 10666   003F43                     CWG3DBF         equ	16195	;# 
 10667   003F44                     CWG3CON0        equ	16196	;# 
 10668   003F45                     CWG3CON1        equ	16197	;# 
 10669   003F46                     CWG3AS0         equ	16198	;# 
 10670   003F47                     CWG3AS1         equ	16199	;# 
 10671   003F48                     CWG3STR         equ	16200	;# 
 10672   003F49                     CWG2CLK         equ	16201	;# 
 10673   003F49                     CWG2CLKCON      equ	16201	;# 
 10674   003F4A                     CWG2ISM         equ	16202	;# 
 10675   003F4A                     CWG2DAT         equ	16202	;# 
 10676   003F4B                     CWG2DBR         equ	16203	;# 
 10677   003F4C                     CWG2DBF         equ	16204	;# 
 10678   003F4D                     CWG2CON0        equ	16205	;# 
 10679   003F4E                     CWG2CON1        equ	16206	;# 
 10680   003F4F                     CWG2AS0         equ	16207	;# 
 10681   003F50                     CWG2AS1         equ	16208	;# 
 10682   003F51                     CWG2STR         equ	16209	;# 
 10683   003F52                     CWG1CLK         equ	16210	;# 
 10684   003F52                     CWG1CLKCON      equ	16210	;# 
 10685   003F53                     CWG1ISM         equ	16211	;# 
 10686   003F53                     CWG1DAT         equ	16211	;# 
 10687   003F54                     CWG1DBR         equ	16212	;# 
 10688   003F55                     CWG1DBF         equ	16213	;# 
 10689   003F56                     CWG1CON0        equ	16214	;# 
 10690   003F57                     CWG1CON1        equ	16215	;# 
 10691   003F58                     CWG1AS0         equ	16216	;# 
 10692   003F59                     CWG1AS1         equ	16217	;# 
 10693   003F5A                     CWG1STR         equ	16218	;# 
 10694   003F5E                     CCPTMRS0        equ	16222	;# 
 10695   003F5F                     CCPTMRS1        equ	16223	;# 
 10696   003F60                     PWM8DC          equ	16224	;# 
 10697   003F60                     PWM8DCL         equ	16224	;# 
 10698   003F61                     PWM8DCH         equ	16225	;# 
 10699   003F62                     PWM8CON         equ	16226	;# 
 10700   003F64                     PWM7DC          equ	16228	;# 
 10701   003F64                     PWM7DCL         equ	16228	;# 
 10702   003F65                     PWM7DCH         equ	16229	;# 
 10703   003F66                     PWM7CON         equ	16230	;# 
 10704   003F68                     PWM6DC          equ	16232	;# 
 10705   003F68                     PWM6DCL         equ	16232	;# 
 10706   003F69                     PWM6DCH         equ	16233	;# 
 10707   003F6A                     PWM6CON         equ	16234	;# 
 10708   003F6C                     PWM5DC          equ	16236	;# 
 10709   003F6C                     PWM5DCL         equ	16236	;# 
 10710   003F6D                     PWM5DCH         equ	16237	;# 
 10711   003F6E                     PWM5CON         equ	16238	;# 
 10712   003F70                     CCPR4           equ	16240	;# 
 10713   003F70                     CCPR4L          equ	16240	;# 
 10714   003F71                     CCPR4H          equ	16241	;# 
 10715   003F72                     CCP4CON         equ	16242	;# 
 10716   003F73                     CCP4CAP         equ	16243	;# 
 10717   003F74                     CCPR3           equ	16244	;# 
 10718   003F74                     CCPR3L          equ	16244	;# 
 10719   003F75                     CCPR3H          equ	16245	;# 
 10720   003F76                     CCP3CON         equ	16246	;# 
 10721   003F77                     CCP3CAP         equ	16247	;# 
 10722   003F78                     CCPR2           equ	16248	;# 
 10723   003F78                     CCPR2L          equ	16248	;# 
 10724   003F79                     CCPR2H          equ	16249	;# 
 10725   003F7A                     CCP2CON         equ	16250	;# 
 10726   003F7B                     CCP2CAP         equ	16251	;# 
 10727   003F7C                     CCPR1           equ	16252	;# 
 10728   003F7C                     CCPR1L          equ	16252	;# 
 10729   003F7D                     CCPR1H          equ	16253	;# 
 10730   003F7E                     CCP1CON         equ	16254	;# 
 10731   003F7F                     CCP1CAP         equ	16255	;# 
 10732   003F92                     T6TMR           equ	16274	;# 
 10733   003F92                     TMR6            equ	16274	;# 
 10734   003F93                     T6PR            equ	16275	;# 
 10735   003F93                     PR6             equ	16275	;# 
 10736   003F94                     T6CON           equ	16276	;# 
 10737   003F95                     T6HLT           equ	16277	;# 
 10738   003F96                     T6CLKCON        equ	16278	;# 
 10739   003F96                     T6CLK           equ	16278	;# 
 10740   003F97                     T6RST           equ	16279	;# 
 10741   003F98                     TMR5            equ	16280	;# 
 10742   003F98                     TMR5L           equ	16280	;# 
 10743   003F99                     TMR5H           equ	16281	;# 
 10744   003F9A                     T5CON           equ	16282	;# 
 10745   003F9A                     TMR5CON         equ	16282	;# 
 10746   003F9B                     T5GCON          equ	16283	;# 
 10747   003F9B                     TMR5GCON        equ	16283	;# 
 10748   003F9C                     T5GATE          equ	16284	;# 
 10749   003F9C                     TMR5GATE        equ	16284	;# 
 10750   003F9D                     T5CLK           equ	16285	;# 
 10751   003F9D                     TMR5CLK         equ	16285	;# 
 10752   003F9D                     PR5             equ	16285	;# 
 10753   003F9E                     T4TMR           equ	16286	;# 
 10754   003F9E                     TMR4            equ	16286	;# 
 10755   003F9F                     T4PR            equ	16287	;# 
 10756   003F9F                     PR4             equ	16287	;# 
 10757   003FA0                     T4CON           equ	16288	;# 
 10758   003FA1                     T4HLT           equ	16289	;# 
 10759   003FA2                     T4CLKCON        equ	16290	;# 
 10760   003FA2                     T4CLK           equ	16290	;# 
 10761   003FA3                     T4RST           equ	16291	;# 
 10762   003FA4                     TMR3            equ	16292	;# 
 10763   003FA4                     TMR3L           equ	16292	;# 
 10764   003FA5                     TMR3H           equ	16293	;# 
 10765   003FA6                     T3CON           equ	16294	;# 
 10766   003FA6                     TMR3CON         equ	16294	;# 
 10767   003FA7                     T3GCON          equ	16295	;# 
 10768   003FA7                     TMR3GCON        equ	16295	;# 
 10769   003FA8                     T3GATE          equ	16296	;# 
 10770   003FA8                     TMR3GATE        equ	16296	;# 
 10771   003FA9                     T3CLK           equ	16297	;# 
 10772   003FA9                     TMR3CLK         equ	16297	;# 
 10773   003FA9                     PR3             equ	16297	;# 
 10774   003FAA                     T2TMR           equ	16298	;# 
 10775   003FAA                     TMR2            equ	16298	;# 
 10776   003FAB                     T2PR            equ	16299	;# 
 10777   003FAB                     PR2             equ	16299	;# 
 10778   003FAC                     T2CON           equ	16300	;# 
 10779   003FAD                     T2HLT           equ	16301	;# 
 10780   003FAE                     T2CLKCON        equ	16302	;# 
 10781   003FAE                     T2CLK           equ	16302	;# 
 10782   003FAF                     T2RST           equ	16303	;# 
 10783   003FB0                     TMR1            equ	16304	;# 
 10784   003FB0                     TMR1L           equ	16304	;# 
 10785   003FB1                     TMR1H           equ	16305	;# 
 10786   003FB2                     T1CON           equ	16306	;# 
 10787   003FB2                     TMR1CON         equ	16306	;# 
 10788   003FB3                     T1GCON          equ	16307	;# 
 10789   003FB3                     TMR1GCON        equ	16307	;# 
 10790   003FB4                     T1GATE          equ	16308	;# 
 10791   003FB4                     TMR1GATE        equ	16308	;# 
 10792   003FB5                     T1CLK           equ	16309	;# 
 10793   003FB5                     TMR1CLK         equ	16309	;# 
 10794   003FB5                     PR1             equ	16309	;# 
 10795   003FB6                     TMR0L           equ	16310	;# 
 10796   003FB6                     TMR0            equ	16310	;# 
 10797   003FB7                     TMR0H           equ	16311	;# 
 10798   003FB7                     PR0             equ	16311	;# 
 10799   003FB8                     T0CON0          equ	16312	;# 
 10800   003FB9                     T0CON1          equ	16313	;# 
 10801   003FBA                     LATA            equ	16314	;# 
 10802   003FBB                     LATB            equ	16315	;# 
 10803   003FBC                     LATC            equ	16316	;# 
 10804   003FBD                     LATD            equ	16317	;# 
 10805   003FBE                     LATE            equ	16318	;# 
 10806   003FBF                     LATF            equ	16319	;# 
 10807   003FC2                     TRISA           equ	16322	;# 
 10808   003FC3                     TRISB           equ	16323	;# 
 10809   003FC4                     TRISC           equ	16324	;# 
 10810   003FC5                     TRISD           equ	16325	;# 
 10811   003FC6                     TRISE           equ	16326	;# 
 10812   003FC7                     TRISF           equ	16327	;# 
 10813   003FCA                     PORTA           equ	16330	;# 
 10814   003FCB                     PORTB           equ	16331	;# 
 10815   003FCC                     PORTC           equ	16332	;# 
 10816   003FCD                     PORTD           equ	16333	;# 
 10817   003FCE                     PORTE           equ	16334	;# 
 10818   003FCF                     PORTF           equ	16335	;# 
 10819   003FD2                     INTCON0         equ	16338	;# 
 10820   003FD3                     INTCON1         equ	16339	;# 
 10821   003FD4                     IVTLOCK         equ	16340	;# 
 10822   003FD5                     IVTBASE         equ	16341	;# 
 10823   003FD5                     IVTBASEL        equ	16341	;# 
 10824   003FD6                     IVTBASEH        equ	16342	;# 
 10825   003FD7                     IVTBASEU        equ	16343	;# 
 10826   003FD8                     STATUS          equ	16344	;# 
 10827   003FD9                     FSR2            equ	16345	;# 
 10828   003FD9                     FSR2L           equ	16345	;# 
 10829   003FDA                     FSR2H           equ	16346	;# 
 10830   003FDB                     PLUSW2          equ	16347	;# 
 10831   003FDC                     PREINC2         equ	16348	;# 
 10832   003FDD                     POSTDEC2        equ	16349	;# 
 10833   003FDE                     POSTINC2        equ	16350	;# 
 10834   003FDF                     INDF2           equ	16351	;# 
 10835   003FE0                     BSR             equ	16352	;# 
 10836   003FE1                     FSR1            equ	16353	;# 
 10837   003FE1                     FSR1L           equ	16353	;# 
 10838   003FE2                     FSR1H           equ	16354	;# 
 10839   003FE3                     PLUSW1          equ	16355	;# 
 10840   003FE4                     PREINC1         equ	16356	;# 
 10841   003FE5                     POSTDEC1        equ	16357	;# 
 10842   003FE6                     POSTINC1        equ	16358	;# 
 10843   003FE7                     INDF1           equ	16359	;# 
 10844   003FE8                     WREG            equ	16360	;# 
 10845   003FE9                     FSR0            equ	16361	;# 
 10846   003FE9                     FSR0L           equ	16361	;# 
 10847   003FEA                     FSR0H           equ	16362	;# 
 10848   003FEB                     PLUSW0          equ	16363	;# 
 10849   003FEC                     PREINC0         equ	16364	;# 
 10850   003FED                     POSTDEC0        equ	16365	;# 
 10851   003FEE                     POSTINC0        equ	16366	;# 
 10852   003FEF                     INDF0           equ	16367	;# 
 10853   003FF0                     PCON0           equ	16368	;# 
 10854   003FF1                     PCON1           equ	16369	;# 
 10855   003FF3                     PROD            equ	16371	;# 
 10856   003FF3                     PRODL           equ	16371	;# 
 10857   003FF4                     PRODH           equ	16372	;# 
 10858   003FF5                     TABLAT          equ	16373	;# 
 10859   003FF6                     TBLPTR          equ	16374	;# 
 10860   003FF6                     TBLPTRL         equ	16374	;# 
 10861   003FF7                     TBLPTRH         equ	16375	;# 
 10862   003FF8                     TBLPTRU         equ	16376	;# 
 10863   003FF9                     PCLAT           equ	16377	;# 
 10864   003FF9                     PCL             equ	16377	;# 
 10865   003FFA                     PCLATH          equ	16378	;# 
 10866   003FFB                     PCLATU          equ	16379	;# 
 10867   003FFC                     STKPTR          equ	16380	;# 
 10868   003FFD                     TOS             equ	16381	;# 
 10869   003FFD                     TOSL            equ	16381	;# 
 10870   003FFE                     TOSH            equ	16382	;# 
 10871   003FFF                     TOSU            equ	16383	;# 
 10872   003880                     STATUS_CSHAD    equ	14464	;# 
 10873   003881                     WREG_CSHAD      equ	14465	;# 
 10874   003882                     BSR_CSHAD       equ	14466	;# 
 10875   003883                     SHADCON         equ	14467	;# 
 10876   003884                     STATUS_SHAD     equ	14468	;# 
 10877   003885                     WREG_SHAD       equ	14469	;# 
 10878   003886                     BSR_SHAD        equ	14470	;# 
 10879   003887                     PCLATH_SHAD     equ	14471	;# 
 10880   003888                     PCLATU_SHAD     equ	14472	;# 
 10881   003889                     FSR0SH          equ	14473	;# 
 10882   003889                     FSR0L_SHAD      equ	14473	;# 
 10883   00388A                     FSR0H_SHAD      equ	14474	;# 
 10884   00388B                     FSR1SH          equ	14475	;# 
 10885   00388B                     FSR1L_SHAD      equ	14475	;# 
 10886   00388C                     FSR1H_SHAD      equ	14476	;# 
 10887   00388D                     FSR2SH          equ	14477	;# 
 10888   00388D                     FSR2L_SHAD      equ	14477	;# 
 10889   00388E                     FSR2H_SHAD      equ	14478	;# 
 10890   00388F                     PRODSH          equ	14479	;# 
 10891   00388F                     PRODL_SHAD      equ	14479	;# 
 10892   003890                     PRODH_SHAD      equ	14480	;# 
 10893   00389D                     IVTADL          equ	14493	;# 
 10894   00389E                     IVTADH          equ	14494	;# 
 10895   00389F                     IVTADU          equ	14495	;# 
 10896   00395B                     WDTCON0         equ	14683	;# 
 10897   00395C                     WDTCON1         equ	14684	;# 
 10898   00395D                     WDTPSL          equ	14685	;# 
 10899   00395E                     WDTPSH          equ	14686	;# 
 10900   00395F                     WDTTMR          equ	14687	;# 
 10901   003960                     CRCDATA         equ	14688	;# 
 10902   003960                     CRCDATL         equ	14688	;# 
 10903   003961                     CRCDATH         equ	14689	;# 
 10904   003962                     CRCACC          equ	14690	;# 
 10905   003962                     CRCACCL         equ	14690	;# 
 10906   003963                     CRCACCH         equ	14691	;# 
 10907   003964                     CRCSHFT         equ	14692	;# 
 10908   003964                     CRCSHIFTL       equ	14692	;# 
 10909   003965                     CRCSHIFTH       equ	14693	;# 
 10910   003966                     CRCXOR          equ	14694	;# 
 10911   003966                     CRCXORL         equ	14694	;# 
 10912   003967                     CRCXORH         equ	14695	;# 
 10913   003968                     CRCCON0         equ	14696	;# 
 10914   003969                     CRCCON1         equ	14697	;# 
 10915   003976                     SCANLADR        equ	14710	;# 
 10916   003976                     SCANLADRL       equ	14710	;# 
 10917   003977                     SCANLADRH       equ	14711	;# 
 10918   003978                     SCANLADRU       equ	14712	;# 
 10919   003979                     SCANHADR        equ	14713	;# 
 10920   003979                     SCANHADRL       equ	14713	;# 
 10921   00397A                     SCANHADRH       equ	14714	;# 
 10922   00397B                     SCANHADRU       equ	14715	;# 
 10923   00397C                     SCANCON0        equ	14716	;# 
 10924   00397D                     SCANTRIG        equ	14717	;# 
 10925   003980                     IPR0            equ	14720	;# 
 10926   003981                     IPR1            equ	14721	;# 
 10927   003982                     IPR2            equ	14722	;# 
 10928   003983                     IPR3            equ	14723	;# 
 10929   003984                     IPR4            equ	14724	;# 
 10930   003985                     IPR5            equ	14725	;# 
 10931   003986                     IPR6            equ	14726	;# 
 10932   003987                     IPR7            equ	14727	;# 
 10933   003988                     IPR8            equ	14728	;# 
 10934   003989                     IPR9            equ	14729	;# 
 10935   00398A                     IPR10           equ	14730	;# 
 10936   003990                     PIE0            equ	14736	;# 
 10937   003991                     PIE1            equ	14737	;# 
 10938   003992                     PIE2            equ	14738	;# 
 10939   003993                     PIE3            equ	14739	;# 
 10940   003994                     PIE4            equ	14740	;# 
 10941   003995                     PIE5            equ	14741	;# 
 10942   003996                     PIE6            equ	14742	;# 
 10943   003997                     PIE7            equ	14743	;# 
 10944   003998                     PIE8            equ	14744	;# 
 10945   003999                     PIE9            equ	14745	;# 
 10946   00399A                     PIE10           equ	14746	;# 
 10947   0039A0                     PIR0            equ	14752	;# 
 10948   0039A1                     PIR1            equ	14753	;# 
 10949   0039A2                     PIR2            equ	14754	;# 
 10950   0039A3                     PIR3            equ	14755	;# 
 10951   0039A4                     PIR4            equ	14756	;# 
 10952   0039A5                     PIR5            equ	14757	;# 
 10953   0039A6                     PIR6            equ	14758	;# 
 10954   0039A7                     PIR7            equ	14759	;# 
 10955   0039A8                     PIR8            equ	14760	;# 
 10956   0039A9                     PIR9            equ	14761	;# 
 10957   0039AA                     PIR10           equ	14762	;# 
 10958   0039C0                     PMD0            equ	14784	;# 
 10959   0039C1                     PMD1            equ	14785	;# 
 10960   0039C2                     PMD2            equ	14786	;# 
 10961   0039C3                     PMD3            equ	14787	;# 
 10962   0039C4                     PMD4            equ	14788	;# 
 10963   0039C5                     PMD5            equ	14789	;# 
 10964   0039C6                     PMD6            equ	14790	;# 
 10965   0039C7                     PMD7            equ	14791	;# 
 10966   0039D0                     BORCON          equ	14800	;# 
 10967   0039D1                     VREGCON         equ	14801	;# 
 10968   0039D8                     CPUDOZE         equ	14808	;# 
 10969   0039D9                     OSCCON1         equ	14809	;# 
 10970   0039DA                     OSCCON2         equ	14810	;# 
 10971   0039DB                     OSCCON3         equ	14811	;# 
 10972   0039DC                     OSCSTAT         equ	14812	;# 
 10973   0039DC                     OSCSTAT1        equ	14812	;# 
 10974   0039DD                     OSCEN           equ	14813	;# 
 10975   0039DE                     OSCTUNE         equ	14814	;# 
 10976   0039DF                     OSCFRQ          equ	14815	;# 
 10977   0039E0                     NVMADRL         equ	14816	;# 
 10978   0039E1                     NVMADRH         equ	14817	;# 
 10979   0039E3                     NVMDAT          equ	14819	;# 
 10980   0039E5                     NVMCON1         equ	14821	;# 
 10981   0039E6                     NVMCON2         equ	14822	;# 
 10982   0039EF                     PRLOCK          equ	14831	;# 
 10983   0039F1                     ISRPR           equ	14833	;# 
 10984   0039F2                     MAINPR          equ	14834	;# 
 10985   0039F3                     DMA1PR          equ	14835	;# 
 10986   0039F4                     DMA2PR          equ	14836	;# 
 10987   0039F7                     SCANPR          equ	14839	;# 
 10988   003A00                     RA0PPS          equ	14848	;# 
 10989   003A01                     RA1PPS          equ	14849	;# 
 10990   003A02                     RA2PPS          equ	14850	;# 
 10991   003A03                     RA3PPS          equ	14851	;# 
 10992   003A04                     RA4PPS          equ	14852	;# 
 10993   003A05                     RA5PPS          equ	14853	;# 
 10994   003A06                     RA6PPS          equ	14854	;# 
 10995   003A07                     RA7PPS          equ	14855	;# 
 10996   003A08                     RB0PPS          equ	14856	;# 
 10997   003A09                     RB1PPS          equ	14857	;# 
 10998   003A0A                     RB2PPS          equ	14858	;# 
 10999   003A0B                     RB3PPS          equ	14859	;# 
 11000   003A0C                     RB4PPS          equ	14860	;# 
 11001   003A0D                     RB5PPS          equ	14861	;# 
 11002   003A0E                     RB6PPS          equ	14862	;# 
 11003   003A0F                     RB7PPS          equ	14863	;# 
 11004   003A10                     RC0PPS          equ	14864	;# 
 11005   003A11                     RC1PPS          equ	14865	;# 
 11006   003A12                     RC2PPS          equ	14866	;# 
 11007   003A13                     RC3PPS          equ	14867	;# 
 11008   003A14                     RC4PPS          equ	14868	;# 
 11009   003A15                     RC5PPS          equ	14869	;# 
 11010   003A16                     RC6PPS          equ	14870	;# 
 11011   003A17                     RC7PPS          equ	14871	;# 
 11012   003A18                     RD0PPS          equ	14872	;# 
 11013   003A19                     RD1PPS          equ	14873	;# 
 11014   003A1A                     RD2PPS          equ	14874	;# 
 11015   003A1B                     RD3PPS          equ	14875	;# 
 11016   003A1C                     RD4PPS          equ	14876	;# 
 11017   003A1D                     RD5PPS          equ	14877	;# 
 11018   003A1E                     RD6PPS          equ	14878	;# 
 11019   003A1F                     RD7PPS          equ	14879	;# 
 11020   003A20                     RE0PPS          equ	14880	;# 
 11021   003A21                     RE1PPS          equ	14881	;# 
 11022   003A22                     RE2PPS          equ	14882	;# 
 11023   003A28                     RF0PPS          equ	14888	;# 
 11024   003A29                     RF1PPS          equ	14889	;# 
 11025   003A2A                     RF2PPS          equ	14890	;# 
 11026   003A2B                     RF3PPS          equ	14891	;# 
 11027   003A2C                     RF4PPS          equ	14892	;# 
 11028   003A2D                     RF5PPS          equ	14893	;# 
 11029   003A2E                     RF6PPS          equ	14894	;# 
 11030   003A2F                     RF7PPS          equ	14895	;# 
 11031   003A40                     ANSELA          equ	14912	;# 
 11032   003A41                     WPUA            equ	14913	;# 
 11033   003A42                     ODCONA          equ	14914	;# 
 11034   003A43                     SLRCONA         equ	14915	;# 
 11035   003A44                     INLVLA          equ	14916	;# 
 11036   003A45                     IOCAP           equ	14917	;# 
 11037   003A46                     IOCAN           equ	14918	;# 
 11038   003A47                     IOCAF           equ	14919	;# 
 11039   003A50                     ANSELB          equ	14928	;# 
 11040   003A51                     WPUB            equ	14929	;# 
 11041   003A52                     ODCONB          equ	14930	;# 
 11042   003A53                     SLRCONB         equ	14931	;# 
 11043   003A54                     INLVLB          equ	14932	;# 
 11044   003A55                     IOCBP           equ	14933	;# 
 11045   003A56                     IOCBN           equ	14934	;# 
 11046   003A57                     IOCBF           equ	14935	;# 
 11047   003A5A                     RB1I2C          equ	14938	;# 
 11048   003A5B                     RB2I2C          equ	14939	;# 
 11049   003A60                     ANSELC          equ	14944	;# 
 11050   003A61                     WPUC            equ	14945	;# 
 11051   003A62                     ODCONC          equ	14946	;# 
 11052   003A63                     SLRCONC         equ	14947	;# 
 11053   003A64                     INLVLC          equ	14948	;# 
 11054   003A65                     IOCCP           equ	14949	;# 
 11055   003A66                     IOCCN           equ	14950	;# 
 11056   003A67                     IOCCF           equ	14951	;# 
 11057   003A6A                     RC3I2C          equ	14954	;# 
 11058   003A6B                     RC4I2C          equ	14955	;# 
 11059   003A70                     ANSELD          equ	14960	;# 
 11060   003A71                     WPUD            equ	14961	;# 
 11061   003A72                     ODCOND          equ	14962	;# 
 11062   003A73                     SLRCOND         equ	14963	;# 
 11063   003A74                     INLVLD          equ	14964	;# 
 11064   003A7A                     RD0I2C          equ	14970	;# 
 11065   003A7B                     RD1I2C          equ	14971	;# 
 11066   003A80                     ANSELE          equ	14976	;# 
 11067   003A81                     WPUE            equ	14977	;# 
 11068   003A82                     ODCONE          equ	14978	;# 
 11069   003A83                     SLRCONE         equ	14979	;# 
 11070   003A84                     INLVLE          equ	14980	;# 
 11071   003A85                     IOCEP           equ	14981	;# 
 11072   003A86                     IOCEN           equ	14982	;# 
 11073   003A87                     IOCEF           equ	14983	;# 
 11074   003A90                     ANSELF          equ	14992	;# 
 11075   003A91                     WPUF            equ	14993	;# 
 11076   003A92                     ODCONF          equ	14994	;# 
 11077   003A93                     SLRCONF         equ	14995	;# 
 11078   003A94                     INLVLF          equ	14996	;# 
 11079   003ABF                     PPSLOCK         equ	15039	;# 
 11080   003AC0                     INT0PPS         equ	15040	;# 
 11081   003AC1                     INT1PPS         equ	15041	;# 
 11082   003AC2                     INT2PPS         equ	15042	;# 
 11083   003AC3                     T0CKIPPS        equ	15043	;# 
 11084   003AC4                     T1CKIPPS        equ	15044	;# 
 11085   003AC5                     T1GPPS          equ	15045	;# 
 11086   003AC6                     T3CKIPPS        equ	15046	;# 
 11087   003AC7                     T3GPPS          equ	15047	;# 
 11088   003AC8                     T5CKIPPS        equ	15048	;# 
 11089   003AC9                     T5GPPS          equ	15049	;# 
 11090   003ACA                     T2INPPS         equ	15050	;# 
 11091   003ACB                     T4INPPS         equ	15051	;# 
 11092   003ACC                     T6INPPS         equ	15052	;# 
 11093   003ACD                     CCP1PPS         equ	15053	;# 
 11094   003ACE                     CCP2PPS         equ	15054	;# 
 11095   003ACF                     CCP3PPS         equ	15055	;# 
 11096   003AD0                     CCP4PPS         equ	15056	;# 
 11097   003AD1                     SMT1WINPPS      equ	15057	;# 
 11098   003AD2                     SMT1SIGPPS      equ	15058	;# 
 11099   003AD3                     CWG1INPPS       equ	15059	;# 
 11100   003AD4                     CWG2INPPS       equ	15060	;# 
 11101   003AD5                     CWG3INPPS       equ	15061	;# 
 11102   003AD6                     MD1CARLPPS      equ	15062	;# 
 11103   003AD7                     MD1CARHPPS      equ	15063	;# 
 11104   003AD8                     MD1SRCPPS       equ	15064	;# 
 11105   003AD9                     CLCIN0PPS       equ	15065	;# 
 11106   003ADA                     CLCIN1PPS       equ	15066	;# 
 11107   003ADB                     CLCIN2PPS       equ	15067	;# 
 11108   003ADC                     CLCIN3PPS       equ	15068	;# 
 11109   003ADD                     ADACTPPS        equ	15069	;# 
 11110   003ADE                     SPI1SCKPPS      equ	15070	;# 
 11111   003ADF                     SPI1SDIPPS      equ	15071	;# 
 11112   003AE0                     SPI1SSPPS       equ	15072	;# 
 11113   003AE1                     I2C1SCLPPS      equ	15073	;# 
 11114   003AE2                     I2C1SDAPPS      equ	15074	;# 
 11115   003AE3                     I2C2SCLPPS      equ	15075	;# 
 11116   003AE4                     I2C2SDAPPS      equ	15076	;# 
 11117   003AE5                     U1RXPPS         equ	15077	;# 
 11118   003AE6                     U1CTSPPS        equ	15078	;# 
 11119   003AE8                     U2RXPPS         equ	15080	;# 
 11120   003AE9                     U2CTSPPS        equ	15081	;# 
 11121   003BC9                     DMA2BUF         equ	15305	;# 
 11122   003BCA                     DMA2DCNT        equ	15306	;# 
 11123   003BCA                     DMA2DCNTL       equ	15306	;# 
 11124   003BCB                     DMA2DCNTH       equ	15307	;# 
 11125   003BCC                     DMA2DPTR        equ	15308	;# 
 11126   003BCC                     DMA2DPTRL       equ	15308	;# 
 11127   003BCD                     DMA2DPTRH       equ	15309	;# 
 11128   003BCE                     DMA2DSZ         equ	15310	;# 
 11129   003BCE                     DMA2DSZL        equ	15310	;# 
 11130   003BCF                     DMA2DSZH        equ	15311	;# 
 11131   003BD0                     DMA2DSA         equ	15312	;# 
 11132   003BD0                     DMA2DSAL        equ	15312	;# 
 11133   003BD1                     DMA2DSAH        equ	15313	;# 
 11134   003BD2                     DMA2SCNT        equ	15314	;# 
 11135   003BD2                     DMA2SCNTL       equ	15314	;# 
 11136   003BD3                     DMA2SCNTH       equ	15315	;# 
 11137   003BD4                     DMA2SPTR        equ	15316	;# 
 11138   003BD4                     DMA2SPTRL       equ	15316	;# 
 11139   003BD5                     DMA2SPTRH       equ	15317	;# 
 11140   003BD6                     DMA2SPTRU       equ	15318	;# 
 11141   003BD7                     DMA2SSZ         equ	15319	;# 
 11142   003BD7                     DMA2SSZL        equ	15319	;# 
 11143   003BD8                     DMA2SSZH        equ	15320	;# 
 11144   003BD9                     DMA2SSA         equ	15321	;# 
 11145   003BD9                     DMA2SSAL        equ	15321	;# 
 11146   003BDA                     DMA2SSAH        equ	15322	;# 
 11147   003BDB                     DMA2SSAU        equ	15323	;# 
 11148   003BDC                     DMA2CON0        equ	15324	;# 
 11149   003BDD                     DMA2CON1        equ	15325	;# 
 11150   003BDE                     DMA2AIRQ        equ	15326	;# 
 11151   003BDF                     DMA2SIRQ        equ	15327	;# 
 11152   003BE9                     DMA1BUF         equ	15337	;# 
 11153   003BEA                     DMA1DCNT        equ	15338	;# 
 11154   003BEA                     DMA1DCNTL       equ	15338	;# 
 11155   003BEB                     DMA1DCNTH       equ	15339	;# 
 11156   003BEC                     DMA1DPTR        equ	15340	;# 
 11157   003BEC                     DMA1DPTRL       equ	15340	;# 
 11158   003BED                     DMA1DPTRH       equ	15341	;# 
 11159   003BEE                     DMA1DSZ         equ	15342	;# 
 11160   003BEE                     DMA1DSZL        equ	15342	;# 
 11161   003BEF                     DMA1DSZH        equ	15343	;# 
 11162   003BF0                     DMA1DSA         equ	15344	;# 
 11163   003BF0                     DMA1DSAL        equ	15344	;# 
 11164   003BF1                     DMA1DSAH        equ	15345	;# 
 11165   003BF2                     DMA1SCNT        equ	15346	;# 
 11166   003BF2                     DMA1SCNTL       equ	15346	;# 
 11167   003BF3                     DMA1SCNTH       equ	15347	;# 
 11168   003BF4                     DMA1SPTR        equ	15348	;# 
 11169   003BF4                     DMA1SPTRL       equ	15348	;# 
 11170   003BF5                     DMA1SPTRH       equ	15349	;# 
 11171   003BF6                     DMA1SPTRU       equ	15350	;# 
 11172   003BF7                     DMA1SSZ         equ	15351	;# 
 11173   003BF7                     DMA1SSZL        equ	15351	;# 
 11174   003BF8                     DMA1SSZH        equ	15352	;# 
 11175   003BF9                     DMA1SSA         equ	15353	;# 
 11176   003BF9                     DMA1SSAL        equ	15353	;# 
 11177   003BFA                     DMA1SSAH        equ	15354	;# 
 11178   003BFB                     DMA1SSAU        equ	15355	;# 
 11179   003BFC                     DMA1CON0        equ	15356	;# 
 11180   003BFD                     DMA1CON1        equ	15357	;# 
 11181   003BFE                     DMA1AIRQ        equ	15358	;# 
 11182   003BFF                     DMA1SIRQ        equ	15359	;# 
 11183   003C56                     CLC4CON         equ	15446	;# 
 11184   003C57                     CLC4POL         equ	15447	;# 
 11185   003C58                     CLC4SEL0        equ	15448	;# 
 11186   003C59                     CLC4SEL1        equ	15449	;# 
 11187   003C5A                     CLC4SEL2        equ	15450	;# 
 11188   003C5B                     CLC4SEL3        equ	15451	;# 
 11189   003C5C                     CLC4GLS0        equ	15452	;# 
 11190   003C5D                     CLC4GLS1        equ	15453	;# 
 11191   003C5E                     CLC4GLS2        equ	15454	;# 
 11192   003C5F                     CLC4GLS3        equ	15455	;# 
 11193   003C60                     CLC3CON         equ	15456	;# 
 11194   003C61                     CLC3POL         equ	15457	;# 
 11195   003C62                     CLC3SEL0        equ	15458	;# 
 11196   003C63                     CLC3SEL1        equ	15459	;# 
 11197   003C64                     CLC3SEL2        equ	15460	;# 
 11198   003C65                     CLC3SEL3        equ	15461	;# 
 11199   003C66                     CLC3GLS0        equ	15462	;# 
 11200   003C67                     CLC3GLS1        equ	15463	;# 
 11201   003C68                     CLC3GLS2        equ	15464	;# 
 11202   003C69                     CLC3GLS3        equ	15465	;# 
 11203   003C6A                     CLC2CON         equ	15466	;# 
 11204   003C6B                     CLC2POL         equ	15467	;# 
 11205   003C6C                     CLC2SEL0        equ	15468	;# 
 11206   003C6D                     CLC2SEL1        equ	15469	;# 
 11207   003C6E                     CLC2SEL2        equ	15470	;# 
 11208   003C6F                     CLC2SEL3        equ	15471	;# 
 11209   003C70                     CLC2GLS0        equ	15472	;# 
 11210   003C71                     CLC2GLS1        equ	15473	;# 
 11211   003C72                     CLC2GLS2        equ	15474	;# 
 11212   003C73                     CLC2GLS3        equ	15475	;# 
 11213   003C74                     CLC1CON         equ	15476	;# 
 11214   003C75                     CLC1POL         equ	15477	;# 
 11215   003C76                     CLC1SEL0        equ	15478	;# 
 11216   003C77                     CLC1SEL1        equ	15479	;# 
 11217   003C78                     CLC1SEL2        equ	15480	;# 
 11218   003C79                     CLC1SEL3        equ	15481	;# 
 11219   003C7A                     CLC1GLS0        equ	15482	;# 
 11220   003C7B                     CLC1GLS1        equ	15483	;# 
 11221   003C7C                     CLC1GLS2        equ	15484	;# 
 11222   003C7D                     CLC1GLS3        equ	15485	;# 
 11223   003C7E                     CLCDATA0        equ	15486	;# 
 11224   003CE5                     CLKRCON         equ	15589	;# 
 11225   003CE6                     CLKRCLK         equ	15590	;# 
 11226   003CFA                     MD1CON0         equ	15610	;# 
 11227   003CFB                     MD1CON1         equ	15611	;# 
 11228   003CFC                     MD1SRC          equ	15612	;# 
 11229   003CFD                     MD1CARL         equ	15613	;# 
 11230   003CFE                     MD1CARH         equ	15614	;# 
 11231   003D10                     SPI1RXB         equ	15632	;# 
 11232   003D11                     SPI1TXB         equ	15633	;# 
 11233   003D12                     SPI1TCNT        equ	15634	;# 
 11234   003D12                     SPI1TCNTL       equ	15634	;# 
 11235   003D13                     SPI1TCNTH       equ	15635	;# 
 11236   003D14                     SPI1CON0        equ	15636	;# 
 11237   003D15                     SPI1CON1        equ	15637	;# 
 11238   003D16                     SPI1CON2        equ	15638	;# 
 11239   003D17                     SPI1STATUS      equ	15639	;# 
 11240   003D18                     SPI1TWIDTH      equ	15640	;# 
 11241   003D19                     SPI1BAUD        equ	15641	;# 
 11242   003D1A                     SPI1INTF        equ	15642	;# 
 11243   003D1B                     SPI1INTE        equ	15643	;# 
 11244   003D1C                     SPI1CLK         equ	15644	;# 
 11245   003D54                     I2C2RXB         equ	15700	;# 
 11246   003D55                     I2C2TXB         equ	15701	;# 
 11247   003D56                     I2C2CNT         equ	15702	;# 
 11248   003D57                     I2C2ADB0        equ	15703	;# 
 11249   003D58                     I2C2ADB1        equ	15704	;# 
 11250   003D59                     I2C2ADR0        equ	15705	;# 
 11251   003D5A                     I2C2ADR1        equ	15706	;# 
 11252   003D5B                     I2C2ADR2        equ	15707	;# 
 11253   003D5C                     I2C2ADR3        equ	15708	;# 
 11254   003D5D                     I2C2CON0        equ	15709	;# 
 11255   003D5E                     I2C2CON1        equ	15710	;# 
 11256   003D5F                     I2C2CON2        equ	15711	;# 
 11257   003D60                     I2C2ERR         equ	15712	;# 
 11258   003D61                     I2C2STAT0       equ	15713	;# 
 11259   003D62                     I2C2STAT1       equ	15714	;# 
 11260   003D63                     I2C2PIR         equ	15715	;# 
 11261   003D64                     I2C2PIE         equ	15716	;# 
 11262   003D65                     I2C2CLK         equ	15717	;# 
 11263   003D66                     I2C2BTO         equ	15718	;# 
 11264   003D6A                     I2C1RXB         equ	15722	;# 
 11265   003D6B                     I2C1TXB         equ	15723	;# 
 11266   003D6C                     I2C1CNT         equ	15724	;# 
 11267   003D6D                     I2C1ADB0        equ	15725	;# 
 11268   003D6E                     I2C1ADB1        equ	15726	;# 
 11269   003D6F                     I2C1ADR0        equ	15727	;# 
 11270   003D70                     I2C1ADR1        equ	15728	;# 
 11271   003D71                     I2C1ADR2        equ	15729	;# 
 11272   003D72                     I2C1ADR3        equ	15730	;# 
 11273   003D73                     I2C1CON0        equ	15731	;# 
 11274   003D74                     I2C1CON1        equ	15732	;# 
 11275   003D75                     I2C1CON2        equ	15733	;# 
 11276   003D76                     I2C1ERR         equ	15734	;# 
 11277   003D77                     I2C1STAT0       equ	15735	;# 
 11278   003D78                     I2C1STAT1       equ	15736	;# 
 11279   003D79                     I2C1PIR         equ	15737	;# 
 11280   003D7A                     I2C1PIE         equ	15738	;# 
 11281   003D7B                     I2C1CLK         equ	15739	;# 
 11282   003D7C                     I2C1BTO         equ	15740	;# 
 11283   003DD0                     U2RXB           equ	15824	;# 
 11284   003DD0                     U2RXBL          equ	15824	;# 
 11285   003DD2                     U2TXB           equ	15826	;# 
 11286   003DD2                     U2TXBL          equ	15826	;# 
 11287   003DD4                     U2P1            equ	15828	;# 
 11288   003DD4                     U2P1L           equ	15828	;# 
 11289   003DD6                     U2P2            equ	15830	;# 
 11290   003DD6                     U2P2L           equ	15830	;# 
 11291   003DD8                     U2P3            equ	15832	;# 
 11292   003DD8                     U2P3L           equ	15832	;# 
 11293   003DDA                     U2CON0          equ	15834	;# 
 11294   003DDB                     U2CON1          equ	15835	;# 
 11295   003DDC                     U2CON2          equ	15836	;# 
 11296   003DDD                     U2BRG           equ	15837	;# 
 11297   003DDD                     U2BRGL          equ	15837	;# 
 11298   003DDE                     U2BRGH          equ	15838	;# 
 11299   003DDF                     U2FIFO          equ	15839	;# 
 11300   003DE0                     U2UIR           equ	15840	;# 
 11301   003DE1                     U2ERRIR         equ	15841	;# 
 11302   003DE2                     U2ERRIE         equ	15842	;# 
 11303   003DE8                     U1RXB           equ	15848	;# 
 11304   003DE8                     U1RXBL          equ	15848	;# 
 11305   003DE9                     U1RXCHK         equ	15849	;# 
 11306   003DEA                     U1TXB           equ	15850	;# 
 11307   003DEA                     U1TXBL          equ	15850	;# 
 11308   003DEB                     U1TXCHK         equ	15851	;# 
 11309   003DEC                     U1P1            equ	15852	;# 
 11310   003DEC                     U1P1L           equ	15852	;# 
 11311   003DED                     U1P1H           equ	15853	;# 
 11312   003DEE                     U1P2            equ	15854	;# 
 11313   003DEE                     U1P2L           equ	15854	;# 
 11314   003DEF                     U1P2H           equ	15855	;# 
 11315   003DF0                     U1P3            equ	15856	;# 
 11316   003DF0                     U1P3L           equ	15856	;# 
 11317   003DF1                     U1P3H           equ	15857	;# 
 11318   003DF2                     U1CON0          equ	15858	;# 
 11319   003DF3                     U1CON1          equ	15859	;# 
 11320   003DF4                     U1CON2          equ	15860	;# 
 11321   003DF5                     U1BRG           equ	15861	;# 
 11322   003DF5                     U1BRGL          equ	15861	;# 
 11323   003DF6                     U1BRGH          equ	15862	;# 
 11324   003DF7                     U1FIFO          equ	15863	;# 
 11325   003DF8                     U1UIR           equ	15864	;# 
 11326   003DF9                     U1ERRIR         equ	15865	;# 
 11327   003DFA                     U1ERRIE         equ	15866	;# 
 11328   003E9C                     DAC1CON1        equ	16028	;# 
 11329   003E9E                     DAC1CON0        equ	16030	;# 
 11330   003EB8                     CM2CON0         equ	16056	;# 
 11331   003EB9                     CM2CON1         equ	16057	;# 
 11332   003EBA                     CM2NCH          equ	16058	;# 
 11333   003EBB                     CM2PCH          equ	16059	;# 
 11334   003EBC                     CM1CON0         equ	16060	;# 
 11335   003EBD                     CM1CON1         equ	16061	;# 
 11336   003EBE                     CM1NCH          equ	16062	;# 
 11337   003EBF                     CM1PCH          equ	16063	;# 
 11338   003EC0                     CMOUT           equ	16064	;# 
 11339   003EC1                     FVRCON          equ	16065	;# 
 11340   003EC3                     ZCDCON          equ	16067	;# 
 11341   003EC9                     HLVDCON0        equ	16073	;# 
 11342   003ECA                     HLVDCON1        equ	16074	;# 
 11343   003ED7                     ADCP            equ	16087	;# 
 11344   003EDE                     ADLTH           equ	16094	;# 
 11345   003EDE                     ADLTHL          equ	16094	;# 
 11346   003EDF                     ADLTHH          equ	16095	;# 
 11347   003EE0                     ADUTH           equ	16096	;# 
 11348   003EE0                     ADUTHL          equ	16096	;# 
 11349   003EE1                     ADUTHH          equ	16097	;# 
 11350   003EE2                     ADERR           equ	16098	;# 
 11351   003EE2                     ADERRL          equ	16098	;# 
 11352   003EE3                     ADERRH          equ	16099	;# 
 11353   003EE4                     ADSTPT          equ	16100	;# 
 11354   003EE4                     ADSTPTL         equ	16100	;# 
 11355   003EE5                     ADSTPTH         equ	16101	;# 
 11356   003EE6                     ADFLTR          equ	16102	;# 
 11357   003EE6                     ADFLTRL         equ	16102	;# 
 11358   003EE7                     ADFLTRH         equ	16103	;# 
 11359   003EE8                     ADACC           equ	16104	;# 
 11360   003EE8                     ADACCL          equ	16104	;# 
 11361   003EE9                     ADACCH          equ	16105	;# 
 11362   003EEA                     ADACCU          equ	16106	;# 
 11363   003EEB                     ADCNT           equ	16107	;# 
 11364   003EEC                     ADRPT           equ	16108	;# 
 11365   003EED                     ADPREV          equ	16109	;# 
 11366   003EED                     ADPREVL         equ	16109	;# 
 11367   003EEE                     ADPREVH         equ	16110	;# 
 11368   003EEF                     ADRES           equ	16111	;# 
 11369   003EEF                     ADRESL          equ	16111	;# 
 11370   003EF0                     ADRESH          equ	16112	;# 
 11371   003EF1                     ADPCH           equ	16113	;# 
 11372   003EF3                     ADACQ           equ	16115	;# 
 11373   003EF3                     ADACQL          equ	16115	;# 
 11374   003EF4                     ADACQH          equ	16116	;# 
 11375   003EF5                     ADCAP           equ	16117	;# 
 11376   003EF6                     ADPRE           equ	16118	;# 
 11377   003EF6                     ADPREL          equ	16118	;# 
 11378   003EF7                     ADPREH          equ	16119	;# 
 11379   003EF8                     ADCON0          equ	16120	;# 
 11380   003EF9                     ADCON1          equ	16121	;# 
 11381   003EFA                     ADCON2          equ	16122	;# 
 11382   003EFB                     ADCON3          equ	16123	;# 
 11383   003EFC                     ADSTAT          equ	16124	;# 
 11384   003EFD                     ADREF           equ	16125	;# 
 11385   003EFE                     ADACT           equ	16126	;# 
 11386   003EFF                     ADCLK           equ	16127	;# 
 11387   003F12                     SMT1TMR         equ	16146	;# 
 11388   003F12                     SMT1TMRL        equ	16146	;# 
 11389   003F13                     SMT1TMRH        equ	16147	;# 
 11390   003F14                     SMT1TMRU        equ	16148	;# 
 11391   003F15                     SMT1CPR         equ	16149	;# 
 11392   003F15                     SMT1CPRL        equ	16149	;# 
 11393   003F16                     SMT1CPRH        equ	16150	;# 
 11394   003F17                     SMT1CPRU        equ	16151	;# 
 11395   003F18                     SMT1CPW         equ	16152	;# 
 11396   003F18                     SMT1CPWL        equ	16152	;# 
 11397   003F19                     SMT1CPWH        equ	16153	;# 
 11398   003F1A                     SMT1CPWU        equ	16154	;# 
 11399   003F1B                     SMT1PR          equ	16155	;# 
 11400   003F1B                     SMT1PRL         equ	16155	;# 
 11401   003F1C                     SMT1PRH         equ	16156	;# 
 11402   003F1D                     SMT1PRU         equ	16157	;# 
 11403   003F1E                     SMT1CON0        equ	16158	;# 
 11404   003F1F                     SMT1CON1        equ	16159	;# 
 11405   003F20                     SMT1STAT        equ	16160	;# 
 11406   003F21                     SMT1CLK         equ	16161	;# 
 11407   003F22                     SMT1SIG         equ	16162	;# 
 11408   003F23                     SMT1WIN         equ	16163	;# 
 11409   003F38                     NCO1ACC         equ	16184	;# 
 11410   003F38                     NCO1ACCL        equ	16184	;# 
 11411   003F39                     NCO1ACCH        equ	16185	;# 
 11412   003F3A                     NCO1ACCU        equ	16186	;# 
 11413   003F3B                     NCO1INC         equ	16187	;# 
 11414   003F3B                     NCO1INCL        equ	16187	;# 
 11415   003F3C                     NCO1INCH        equ	16188	;# 
 11416   003F3D                     NCO1INCU        equ	16189	;# 
 11417   003F3E                     NCO1CON         equ	16190	;# 
 11418   003F3F                     NCO1CLK         equ	16191	;# 
 11419   003F40                     CWG3CLK         equ	16192	;# 
 11420   003F40                     CWG3CLKCON      equ	16192	;# 
 11421   003F41                     CWG3ISM         equ	16193	;# 
 11422   003F41                     CWG3DAT         equ	16193	;# 
 11423   003F42                     CWG3DBR         equ	16194	;# 
 11424   003F43                     CWG3DBF         equ	16195	;# 
 11425   003F44                     CWG3CON0        equ	16196	;# 
 11426   003F45                     CWG3CON1        equ	16197	;# 
 11427   003F46                     CWG3AS0         equ	16198	;# 
 11428   003F47                     CWG3AS1         equ	16199	;# 
 11429   003F48                     CWG3STR         equ	16200	;# 
 11430   003F49                     CWG2CLK         equ	16201	;# 
 11431   003F49                     CWG2CLKCON      equ	16201	;# 
 11432   003F4A                     CWG2ISM         equ	16202	;# 
 11433   003F4A                     CWG2DAT         equ	16202	;# 
 11434   003F4B                     CWG2DBR         equ	16203	;# 
 11435   003F4C                     CWG2DBF         equ	16204	;# 
 11436   003F4D                     CWG2CON0        equ	16205	;# 
 11437   003F4E                     CWG2CON1        equ	16206	;# 
 11438   003F4F                     CWG2AS0         equ	16207	;# 
 11439   003F50                     CWG2AS1         equ	16208	;# 
 11440   003F51                     CWG2STR         equ	16209	;# 
 11441   003F52                     CWG1CLK         equ	16210	;# 
 11442   003F52                     CWG1CLKCON      equ	16210	;# 
 11443   003F53                     CWG1ISM         equ	16211	;# 
 11444   003F53                     CWG1DAT         equ	16211	;# 
 11445   003F54                     CWG1DBR         equ	16212	;# 
 11446   003F55                     CWG1DBF         equ	16213	;# 
 11447   003F56                     CWG1CON0        equ	16214	;# 
 11448   003F57                     CWG1CON1        equ	16215	;# 
 11449   003F58                     CWG1AS0         equ	16216	;# 
 11450   003F59                     CWG1AS1         equ	16217	;# 
 11451   003F5A                     CWG1STR         equ	16218	;# 
 11452   003F5E                     CCPTMRS0        equ	16222	;# 
 11453   003F5F                     CCPTMRS1        equ	16223	;# 
 11454   003F60                     PWM8DC          equ	16224	;# 
 11455   003F60                     PWM8DCL         equ	16224	;# 
 11456   003F61                     PWM8DCH         equ	16225	;# 
 11457   003F62                     PWM8CON         equ	16226	;# 
 11458   003F64                     PWM7DC          equ	16228	;# 
 11459   003F64                     PWM7DCL         equ	16228	;# 
 11460   003F65                     PWM7DCH         equ	16229	;# 
 11461   003F66                     PWM7CON         equ	16230	;# 
 11462   003F68                     PWM6DC          equ	16232	;# 
 11463   003F68                     PWM6DCL         equ	16232	;# 
 11464   003F69                     PWM6DCH         equ	16233	;# 
 11465   003F6A                     PWM6CON         equ	16234	;# 
 11466   003F6C                     PWM5DC          equ	16236	;# 
 11467   003F6C                     PWM5DCL         equ	16236	;# 
 11468   003F6D                     PWM5DCH         equ	16237	;# 
 11469   003F6E                     PWM5CON         equ	16238	;# 
 11470   003F70                     CCPR4           equ	16240	;# 
 11471   003F70                     CCPR4L          equ	16240	;# 
 11472   003F71                     CCPR4H          equ	16241	;# 
 11473   003F72                     CCP4CON         equ	16242	;# 
 11474   003F73                     CCP4CAP         equ	16243	;# 
 11475   003F74                     CCPR3           equ	16244	;# 
 11476   003F74                     CCPR3L          equ	16244	;# 
 11477   003F75                     CCPR3H          equ	16245	;# 
 11478   003F76                     CCP3CON         equ	16246	;# 
 11479   003F77                     CCP3CAP         equ	16247	;# 
 11480   003F78                     CCPR2           equ	16248	;# 
 11481   003F78                     CCPR2L          equ	16248	;# 
 11482   003F79                     CCPR2H          equ	16249	;# 
 11483   003F7A                     CCP2CON         equ	16250	;# 
 11484   003F7B                     CCP2CAP         equ	16251	;# 
 11485   003F7C                     CCPR1           equ	16252	;# 
 11486   003F7C                     CCPR1L          equ	16252	;# 
 11487   003F7D                     CCPR1H          equ	16253	;# 
 11488   003F7E                     CCP1CON         equ	16254	;# 
 11489   003F7F                     CCP1CAP         equ	16255	;# 
 11490   003F92                     T6TMR           equ	16274	;# 
 11491   003F92                     TMR6            equ	16274	;# 
 11492   003F93                     T6PR            equ	16275	;# 
 11493   003F93                     PR6             equ	16275	;# 
 11494   003F94                     T6CON           equ	16276	;# 
 11495   003F95                     T6HLT           equ	16277	;# 
 11496   003F96                     T6CLKCON        equ	16278	;# 
 11497   003F96                     T6CLK           equ	16278	;# 
 11498   003F97                     T6RST           equ	16279	;# 
 11499   003F98                     TMR5            equ	16280	;# 
 11500   003F98                     TMR5L           equ	16280	;# 
 11501   003F99                     TMR5H           equ	16281	;# 
 11502   003F9A                     T5CON           equ	16282	;# 
 11503   003F9A                     TMR5CON         equ	16282	;# 
 11504   003F9B                     T5GCON          equ	16283	;# 
 11505   003F9B                     TMR5GCON        equ	16283	;# 
 11506   003F9C                     T5GATE          equ	16284	;# 
 11507   003F9C                     TMR5GATE        equ	16284	;# 
 11508   003F9D                     T5CLK           equ	16285	;# 
 11509   003F9D                     TMR5CLK         equ	16285	;# 
 11510   003F9D                     PR5             equ	16285	;# 
 11511   003F9E                     T4TMR           equ	16286	;# 
 11512   003F9E                     TMR4            equ	16286	;# 
 11513   003F9F                     T4PR            equ	16287	;# 
 11514   003F9F                     PR4             equ	16287	;# 
 11515   003FA0                     T4CON           equ	16288	;# 
 11516   003FA1                     T4HLT           equ	16289	;# 
 11517   003FA2                     T4CLKCON        equ	16290	;# 
 11518   003FA2                     T4CLK           equ	16290	;# 
 11519   003FA3                     T4RST           equ	16291	;# 
 11520   003FA4                     TMR3            equ	16292	;# 
 11521   003FA4                     TMR3L           equ	16292	;# 
 11522   003FA5                     TMR3H           equ	16293	;# 
 11523   003FA6                     T3CON           equ	16294	;# 
 11524   003FA6                     TMR3CON         equ	16294	;# 
 11525   003FA7                     T3GCON          equ	16295	;# 
 11526   003FA7                     TMR3GCON        equ	16295	;# 
 11527   003FA8                     T3GATE          equ	16296	;# 
 11528   003FA8                     TMR3GATE        equ	16296	;# 
 11529   003FA9                     T3CLK           equ	16297	;# 
 11530   003FA9                     TMR3CLK         equ	16297	;# 
 11531   003FA9                     PR3             equ	16297	;# 
 11532   003FAA                     T2TMR           equ	16298	;# 
 11533   003FAA                     TMR2            equ	16298	;# 
 11534   003FAB                     T2PR            equ	16299	;# 
 11535   003FAB                     PR2             equ	16299	;# 
 11536   003FAC                     T2CON           equ	16300	;# 
 11537   003FAD                     T2HLT           equ	16301	;# 
 11538   003FAE                     T2CLKCON        equ	16302	;# 
 11539   003FAE                     T2CLK           equ	16302	;# 
 11540   003FAF                     T2RST           equ	16303	;# 
 11541   003FB0                     TMR1            equ	16304	;# 
 11542   003FB0                     TMR1L           equ	16304	;# 
 11543   003FB1                     TMR1H           equ	16305	;# 
 11544   003FB2                     T1CON           equ	16306	;# 
 11545   003FB2                     TMR1CON         equ	16306	;# 
 11546   003FB3                     T1GCON          equ	16307	;# 
 11547   003FB3                     TMR1GCON        equ	16307	;# 
 11548   003FB4                     T1GATE          equ	16308	;# 
 11549   003FB4                     TMR1GATE        equ	16308	;# 
 11550   003FB5                     T1CLK           equ	16309	;# 
 11551   003FB5                     TMR1CLK         equ	16309	;# 
 11552   003FB5                     PR1             equ	16309	;# 
 11553   003FB6                     TMR0L           equ	16310	;# 
 11554   003FB6                     TMR0            equ	16310	;# 
 11555   003FB7                     TMR0H           equ	16311	;# 
 11556   003FB7                     PR0             equ	16311	;# 
 11557   003FB8                     T0CON0          equ	16312	;# 
 11558   003FB9                     T0CON1          equ	16313	;# 
 11559   003FBA                     LATA            equ	16314	;# 
 11560   003FBB                     LATB            equ	16315	;# 
 11561   003FBC                     LATC            equ	16316	;# 
 11562   003FBD                     LATD            equ	16317	;# 
 11563   003FBE                     LATE            equ	16318	;# 
 11564   003FBF                     LATF            equ	16319	;# 
 11565   003FC2                     TRISA           equ	16322	;# 
 11566   003FC3                     TRISB           equ	16323	;# 
 11567   003FC4                     TRISC           equ	16324	;# 
 11568   003FC5                     TRISD           equ	16325	;# 
 11569   003FC6                     TRISE           equ	16326	;# 
 11570   003FC7                     TRISF           equ	16327	;# 
 11571   003FCA                     PORTA           equ	16330	;# 
 11572   003FCB                     PORTB           equ	16331	;# 
 11573   003FCC                     PORTC           equ	16332	;# 
 11574   003FCD                     PORTD           equ	16333	;# 
 11575   003FCE                     PORTE           equ	16334	;# 
 11576   003FCF                     PORTF           equ	16335	;# 
 11577   003FD2                     INTCON0         equ	16338	;# 
 11578   003FD3                     INTCON1         equ	16339	;# 
 11579   003FD4                     IVTLOCK         equ	16340	;# 
 11580   003FD5                     IVTBASE         equ	16341	;# 
 11581   003FD5                     IVTBASEL        equ	16341	;# 
 11582   003FD6                     IVTBASEH        equ	16342	;# 
 11583   003FD7                     IVTBASEU        equ	16343	;# 
 11584   003FD8                     STATUS          equ	16344	;# 
 11585   003FD9                     FSR2            equ	16345	;# 
 11586   003FD9                     FSR2L           equ	16345	;# 
 11587   003FDA                     FSR2H           equ	16346	;# 
 11588   003FDB                     PLUSW2          equ	16347	;# 
 11589   003FDC                     PREINC2         equ	16348	;# 
 11590   003FDD                     POSTDEC2        equ	16349	;# 
 11591   003FDE                     POSTINC2        equ	16350	;# 
 11592   003FDF                     INDF2           equ	16351	;# 
 11593   003FE0                     BSR             equ	16352	;# 
 11594   003FE1                     FSR1            equ	16353	;# 
 11595   003FE1                     FSR1L           equ	16353	;# 
 11596   003FE2                     FSR1H           equ	16354	;# 
 11597   003FE3                     PLUSW1          equ	16355	;# 
 11598   003FE4                     PREINC1         equ	16356	;# 
 11599   003FE5                     POSTDEC1        equ	16357	;# 
 11600   003FE6                     POSTINC1        equ	16358	;# 
 11601   003FE7                     INDF1           equ	16359	;# 
 11602   003FE8                     WREG            equ	16360	;# 
 11603   003FE9                     FSR0            equ	16361	;# 
 11604   003FE9                     FSR0L           equ	16361	;# 
 11605   003FEA                     FSR0H           equ	16362	;# 
 11606   003FEB                     PLUSW0          equ	16363	;# 
 11607   003FEC                     PREINC0         equ	16364	;# 
 11608   003FED                     POSTDEC0        equ	16365	;# 
 11609   003FEE                     POSTINC0        equ	16366	;# 
 11610   003FEF                     INDF0           equ	16367	;# 
 11611   003FF0                     PCON0           equ	16368	;# 
 11612   003FF1                     PCON1           equ	16369	;# 
 11613   003FF3                     PROD            equ	16371	;# 
 11614   003FF3                     PRODL           equ	16371	;# 
 11615   003FF4                     PRODH           equ	16372	;# 
 11616   003FF5                     TABLAT          equ	16373	;# 
 11617   003FF6                     TBLPTR          equ	16374	;# 
 11618   003FF6                     TBLPTRL         equ	16374	;# 
 11619   003FF7                     TBLPTRH         equ	16375	;# 
 11620   003FF8                     TBLPTRU         equ	16376	;# 
 11621   003FF9                     PCLAT           equ	16377	;# 
 11622   003FF9                     PCL             equ	16377	;# 
 11623   003FFA                     PCLATH          equ	16378	;# 
 11624   003FFB                     PCLATU          equ	16379	;# 
 11625   003FFC                     STKPTR          equ	16380	;# 
 11626   003FFD                     TOS             equ	16381	;# 
 11627   003FFD                     TOSL            equ	16381	;# 
 11628   003FFE                     TOSH            equ	16382	;# 
 11629   003FFF                     TOSU            equ	16383	;# 
 11630   003880                     STATUS_CSHAD    equ	14464	;# 
 11631   003881                     WREG_CSHAD      equ	14465	;# 
 11632   003882                     BSR_CSHAD       equ	14466	;# 
 11633   003883                     SHADCON         equ	14467	;# 
 11634   003884                     STATUS_SHAD     equ	14468	;# 
 11635   003885                     WREG_SHAD       equ	14469	;# 
 11636   003886                     BSR_SHAD        equ	14470	;# 
 11637   003887                     PCLATH_SHAD     equ	14471	;# 
 11638   003888                     PCLATU_SHAD     equ	14472	;# 
 11639   003889                     FSR0SH          equ	14473	;# 
 11640   003889                     FSR0L_SHAD      equ	14473	;# 
 11641   00388A                     FSR0H_SHAD      equ	14474	;# 
 11642   00388B                     FSR1SH          equ	14475	;# 
 11643   00388B                     FSR1L_SHAD      equ	14475	;# 
 11644   00388C                     FSR1H_SHAD      equ	14476	;# 
 11645   00388D                     FSR2SH          equ	14477	;# 
 11646   00388D                     FSR2L_SHAD      equ	14477	;# 
 11647   00388E                     FSR2H_SHAD      equ	14478	;# 
 11648   00388F                     PRODSH          equ	14479	;# 
 11649   00388F                     PRODL_SHAD      equ	14479	;# 
 11650   003890                     PRODH_SHAD      equ	14480	;# 
 11651   00389D                     IVTADL          equ	14493	;# 
 11652   00389E                     IVTADH          equ	14494	;# 
 11653   00389F                     IVTADU          equ	14495	;# 
 11654   00395B                     WDTCON0         equ	14683	;# 
 11655   00395C                     WDTCON1         equ	14684	;# 
 11656   00395D                     WDTPSL          equ	14685	;# 
 11657   00395E                     WDTPSH          equ	14686	;# 
 11658   00395F                     WDTTMR          equ	14687	;# 
 11659   003960                     CRCDATA         equ	14688	;# 
 11660   003960                     CRCDATL         equ	14688	;# 
 11661   003961                     CRCDATH         equ	14689	;# 
 11662   003962                     CRCACC          equ	14690	;# 
 11663   003962                     CRCACCL         equ	14690	;# 
 11664   003963                     CRCACCH         equ	14691	;# 
 11665   003964                     CRCSHFT         equ	14692	;# 
 11666   003964                     CRCSHIFTL       equ	14692	;# 
 11667   003965                     CRCSHIFTH       equ	14693	;# 
 11668   003966                     CRCXOR          equ	14694	;# 
 11669   003966                     CRCXORL         equ	14694	;# 
 11670   003967                     CRCXORH         equ	14695	;# 
 11671   003968                     CRCCON0         equ	14696	;# 
 11672   003969                     CRCCON1         equ	14697	;# 
 11673   003976                     SCANLADR        equ	14710	;# 
 11674   003976                     SCANLADRL       equ	14710	;# 
 11675   003977                     SCANLADRH       equ	14711	;# 
 11676   003978                     SCANLADRU       equ	14712	;# 
 11677   003979                     SCANHADR        equ	14713	;# 
 11678   003979                     SCANHADRL       equ	14713	;# 
 11679   00397A                     SCANHADRH       equ	14714	;# 
 11680   00397B                     SCANHADRU       equ	14715	;# 
 11681   00397C                     SCANCON0        equ	14716	;# 
 11682   00397D                     SCANTRIG        equ	14717	;# 
 11683   003980                     IPR0            equ	14720	;# 
 11684   003981                     IPR1            equ	14721	;# 
 11685   003982                     IPR2            equ	14722	;# 
 11686   003983                     IPR3            equ	14723	;# 
 11687   003984                     IPR4            equ	14724	;# 
 11688   003985                     IPR5            equ	14725	;# 
 11689   003986                     IPR6            equ	14726	;# 
 11690   003987                     IPR7            equ	14727	;# 
 11691   003988                     IPR8            equ	14728	;# 
 11692   003989                     IPR9            equ	14729	;# 
 11693   00398A                     IPR10           equ	14730	;# 
 11694   003990                     PIE0            equ	14736	;# 
 11695   003991                     PIE1            equ	14737	;# 
 11696   003992                     PIE2            equ	14738	;# 
 11697   003993                     PIE3            equ	14739	;# 
 11698   003994                     PIE4            equ	14740	;# 
 11699   003995                     PIE5            equ	14741	;# 
 11700   003996                     PIE6            equ	14742	;# 
 11701   003997                     PIE7            equ	14743	;# 
 11702   003998                     PIE8            equ	14744	;# 
 11703   003999                     PIE9            equ	14745	;# 
 11704   00399A                     PIE10           equ	14746	;# 
 11705   0039A0                     PIR0            equ	14752	;# 
 11706   0039A1                     PIR1            equ	14753	;# 
 11707   0039A2                     PIR2            equ	14754	;# 
 11708   0039A3                     PIR3            equ	14755	;# 
 11709   0039A4                     PIR4            equ	14756	;# 
 11710   0039A5                     PIR5            equ	14757	;# 
 11711   0039A6                     PIR6            equ	14758	;# 
 11712   0039A7                     PIR7            equ	14759	;# 
 11713   0039A8                     PIR8            equ	14760	;# 
 11714   0039A9                     PIR9            equ	14761	;# 
 11715   0039AA                     PIR10           equ	14762	;# 
 11716   0039C0                     PMD0            equ	14784	;# 
 11717   0039C1                     PMD1            equ	14785	;# 
 11718   0039C2                     PMD2            equ	14786	;# 
 11719   0039C3                     PMD3            equ	14787	;# 
 11720   0039C4                     PMD4            equ	14788	;# 
 11721   0039C5                     PMD5            equ	14789	;# 
 11722   0039C6                     PMD6            equ	14790	;# 
 11723   0039C7                     PMD7            equ	14791	;# 
 11724   0039D0                     BORCON          equ	14800	;# 
 11725   0039D1                     VREGCON         equ	14801	;# 
 11726   0039D8                     CPUDOZE         equ	14808	;# 
 11727   0039D9                     OSCCON1         equ	14809	;# 
 11728   0039DA                     OSCCON2         equ	14810	;# 
 11729   0039DB                     OSCCON3         equ	14811	;# 
 11730   0039DC                     OSCSTAT         equ	14812	;# 
 11731   0039DC                     OSCSTAT1        equ	14812	;# 
 11732   0039DD                     OSCEN           equ	14813	;# 
 11733   0039DE                     OSCTUNE         equ	14814	;# 
 11734   0039DF                     OSCFRQ          equ	14815	;# 
 11735   0039E0                     NVMADRL         equ	14816	;# 
 11736   0039E1                     NVMADRH         equ	14817	;# 
 11737   0039E3                     NVMDAT          equ	14819	;# 
 11738   0039E5                     NVMCON1         equ	14821	;# 
 11739   0039E6                     NVMCON2         equ	14822	;# 
 11740   0039EF                     PRLOCK          equ	14831	;# 
 11741   0039F1                     ISRPR           equ	14833	;# 
 11742   0039F2                     MAINPR          equ	14834	;# 
 11743   0039F3                     DMA1PR          equ	14835	;# 
 11744   0039F4                     DMA2PR          equ	14836	;# 
 11745   0039F7                     SCANPR          equ	14839	;# 
 11746   003A00                     RA0PPS          equ	14848	;# 
 11747   003A01                     RA1PPS          equ	14849	;# 
 11748   003A02                     RA2PPS          equ	14850	;# 
 11749   003A03                     RA3PPS          equ	14851	;# 
 11750   003A04                     RA4PPS          equ	14852	;# 
 11751   003A05                     RA5PPS          equ	14853	;# 
 11752   003A06                     RA6PPS          equ	14854	;# 
 11753   003A07                     RA7PPS          equ	14855	;# 
 11754   003A08                     RB0PPS          equ	14856	;# 
 11755   003A09                     RB1PPS          equ	14857	;# 
 11756   003A0A                     RB2PPS          equ	14858	;# 
 11757   003A0B                     RB3PPS          equ	14859	;# 
 11758   003A0C                     RB4PPS          equ	14860	;# 
 11759   003A0D                     RB5PPS          equ	14861	;# 
 11760   003A0E                     RB6PPS          equ	14862	;# 
 11761   003A0F                     RB7PPS          equ	14863	;# 
 11762   003A10                     RC0PPS          equ	14864	;# 
 11763   003A11                     RC1PPS          equ	14865	;# 
 11764   003A12                     RC2PPS          equ	14866	;# 
 11765   003A13                     RC3PPS          equ	14867	;# 
 11766   003A14                     RC4PPS          equ	14868	;# 
 11767   003A15                     RC5PPS          equ	14869	;# 
 11768   003A16                     RC6PPS          equ	14870	;# 
 11769   003A17                     RC7PPS          equ	14871	;# 
 11770   003A18                     RD0PPS          equ	14872	;# 
 11771   003A19                     RD1PPS          equ	14873	;# 
 11772   003A1A                     RD2PPS          equ	14874	;# 
 11773   003A1B                     RD3PPS          equ	14875	;# 
 11774   003A1C                     RD4PPS          equ	14876	;# 
 11775   003A1D                     RD5PPS          equ	14877	;# 
 11776   003A1E                     RD6PPS          equ	14878	;# 
 11777   003A1F                     RD7PPS          equ	14879	;# 
 11778   003A20                     RE0PPS          equ	14880	;# 
 11779   003A21                     RE1PPS          equ	14881	;# 
 11780   003A22                     RE2PPS          equ	14882	;# 
 11781   003A28                     RF0PPS          equ	14888	;# 
 11782   003A29                     RF1PPS          equ	14889	;# 
 11783   003A2A                     RF2PPS          equ	14890	;# 
 11784   003A2B                     RF3PPS          equ	14891	;# 
 11785   003A2C                     RF4PPS          equ	14892	;# 
 11786   003A2D                     RF5PPS          equ	14893	;# 
 11787   003A2E                     RF6PPS          equ	14894	;# 
 11788   003A2F                     RF7PPS          equ	14895	;# 
 11789   003A40                     ANSELA          equ	14912	;# 
 11790   003A41                     WPUA            equ	14913	;# 
 11791   003A42                     ODCONA          equ	14914	;# 
 11792   003A43                     SLRCONA         equ	14915	;# 
 11793   003A44                     INLVLA          equ	14916	;# 
 11794   003A45                     IOCAP           equ	14917	;# 
 11795   003A46                     IOCAN           equ	14918	;# 
 11796   003A47                     IOCAF           equ	14919	;# 
 11797   003A50                     ANSELB          equ	14928	;# 
 11798   003A51                     WPUB            equ	14929	;# 
 11799   003A52                     ODCONB          equ	14930	;# 
 11800   003A53                     SLRCONB         equ	14931	;# 
 11801   003A54                     INLVLB          equ	14932	;# 
 11802   003A55                     IOCBP           equ	14933	;# 
 11803   003A56                     IOCBN           equ	14934	;# 
 11804   003A57                     IOCBF           equ	14935	;# 
 11805   003A5A                     RB1I2C          equ	14938	;# 
 11806   003A5B                     RB2I2C          equ	14939	;# 
 11807   003A60                     ANSELC          equ	14944	;# 
 11808   003A61                     WPUC            equ	14945	;# 
 11809   003A62                     ODCONC          equ	14946	;# 
 11810   003A63                     SLRCONC         equ	14947	;# 
 11811   003A64                     INLVLC          equ	14948	;# 
 11812   003A65                     IOCCP           equ	14949	;# 
 11813   003A66                     IOCCN           equ	14950	;# 
 11814   003A67                     IOCCF           equ	14951	;# 
 11815   003A6A                     RC3I2C          equ	14954	;# 
 11816   003A6B                     RC4I2C          equ	14955	;# 
 11817   003A70                     ANSELD          equ	14960	;# 
 11818   003A71                     WPUD            equ	14961	;# 
 11819   003A72                     ODCOND          equ	14962	;# 
 11820   003A73                     SLRCOND         equ	14963	;# 
 11821   003A74                     INLVLD          equ	14964	;# 
 11822   003A7A                     RD0I2C          equ	14970	;# 
 11823   003A7B                     RD1I2C          equ	14971	;# 
 11824   003A80                     ANSELE          equ	14976	;# 
 11825   003A81                     WPUE            equ	14977	;# 
 11826   003A82                     ODCONE          equ	14978	;# 
 11827   003A83                     SLRCONE         equ	14979	;# 
 11828   003A84                     INLVLE          equ	14980	;# 
 11829   003A85                     IOCEP           equ	14981	;# 
 11830   003A86                     IOCEN           equ	14982	;# 
 11831   003A87                     IOCEF           equ	14983	;# 
 11832   003A90                     ANSELF          equ	14992	;# 
 11833   003A91                     WPUF            equ	14993	;# 
 11834   003A92                     ODCONF          equ	14994	;# 
 11835   003A93                     SLRCONF         equ	14995	;# 
 11836   003A94                     INLVLF          equ	14996	;# 
 11837   003ABF                     PPSLOCK         equ	15039	;# 
 11838   003AC0                     INT0PPS         equ	15040	;# 
 11839   003AC1                     INT1PPS         equ	15041	;# 
 11840   003AC2                     INT2PPS         equ	15042	;# 
 11841   003AC3                     T0CKIPPS        equ	15043	;# 
 11842   003AC4                     T1CKIPPS        equ	15044	;# 
 11843   003AC5                     T1GPPS          equ	15045	;# 
 11844   003AC6                     T3CKIPPS        equ	15046	;# 
 11845   003AC7                     T3GPPS          equ	15047	;# 
 11846   003AC8                     T5CKIPPS        equ	15048	;# 
 11847   003AC9                     T5GPPS          equ	15049	;# 
 11848   003ACA                     T2INPPS         equ	15050	;# 
 11849   003ACB                     T4INPPS         equ	15051	;# 
 11850   003ACC                     T6INPPS         equ	15052	;# 
 11851   003ACD                     CCP1PPS         equ	15053	;# 
 11852   003ACE                     CCP2PPS         equ	15054	;# 
 11853   003ACF                     CCP3PPS         equ	15055	;# 
 11854   003AD0                     CCP4PPS         equ	15056	;# 
 11855   003AD1                     SMT1WINPPS      equ	15057	;# 
 11856   003AD2                     SMT1SIGPPS      equ	15058	;# 
 11857   003AD3                     CWG1INPPS       equ	15059	;# 
 11858   003AD4                     CWG2INPPS       equ	15060	;# 
 11859   003AD5                     CWG3INPPS       equ	15061	;# 
 11860   003AD6                     MD1CARLPPS      equ	15062	;# 
 11861   003AD7                     MD1CARHPPS      equ	15063	;# 
 11862   003AD8                     MD1SRCPPS       equ	15064	;# 
 11863   003AD9                     CLCIN0PPS       equ	15065	;# 
 11864   003ADA                     CLCIN1PPS       equ	15066	;# 
 11865   003ADB                     CLCIN2PPS       equ	15067	;# 
 11866   003ADC                     CLCIN3PPS       equ	15068	;# 
 11867   003ADD                     ADACTPPS        equ	15069	;# 
 11868   003ADE                     SPI1SCKPPS      equ	15070	;# 
 11869   003ADF                     SPI1SDIPPS      equ	15071	;# 
 11870   003AE0                     SPI1SSPPS       equ	15072	;# 
 11871   003AE1                     I2C1SCLPPS      equ	15073	;# 
 11872   003AE2                     I2C1SDAPPS      equ	15074	;# 
 11873   003AE3                     I2C2SCLPPS      equ	15075	;# 
 11874   003AE4                     I2C2SDAPPS      equ	15076	;# 
 11875   003AE5                     U1RXPPS         equ	15077	;# 
 11876   003AE6                     U1CTSPPS        equ	15078	;# 
 11877   003AE8                     U2RXPPS         equ	15080	;# 
 11878   003AE9                     U2CTSPPS        equ	15081	;# 
 11879   003BC9                     DMA2BUF         equ	15305	;# 
 11880   003BCA                     DMA2DCNT        equ	15306	;# 
 11881   003BCA                     DMA2DCNTL       equ	15306	;# 
 11882   003BCB                     DMA2DCNTH       equ	15307	;# 
 11883   003BCC                     DMA2DPTR        equ	15308	;# 
 11884   003BCC                     DMA2DPTRL       equ	15308	;# 
 11885   003BCD                     DMA2DPTRH       equ	15309	;# 
 11886   003BCE                     DMA2DSZ         equ	15310	;# 
 11887   003BCE                     DMA2DSZL        equ	15310	;# 
 11888   003BCF                     DMA2DSZH        equ	15311	;# 
 11889   003BD0                     DMA2DSA         equ	15312	;# 
 11890   003BD0                     DMA2DSAL        equ	15312	;# 
 11891   003BD1                     DMA2DSAH        equ	15313	;# 
 11892   003BD2                     DMA2SCNT        equ	15314	;# 
 11893   003BD2                     DMA2SCNTL       equ	15314	;# 
 11894   003BD3                     DMA2SCNTH       equ	15315	;# 
 11895   003BD4                     DMA2SPTR        equ	15316	;# 
 11896   003BD4                     DMA2SPTRL       equ	15316	;# 
 11897   003BD5                     DMA2SPTRH       equ	15317	;# 
 11898   003BD6                     DMA2SPTRU       equ	15318	;# 
 11899   003BD7                     DMA2SSZ         equ	15319	;# 
 11900   003BD7                     DMA2SSZL        equ	15319	;# 
 11901   003BD8                     DMA2SSZH        equ	15320	;# 
 11902   003BD9                     DMA2SSA         equ	15321	;# 
 11903   003BD9                     DMA2SSAL        equ	15321	;# 
 11904   003BDA                     DMA2SSAH        equ	15322	;# 
 11905   003BDB                     DMA2SSAU        equ	15323	;# 
 11906   003BDC                     DMA2CON0        equ	15324	;# 
 11907   003BDD                     DMA2CON1        equ	15325	;# 
 11908   003BDE                     DMA2AIRQ        equ	15326	;# 
 11909   003BDF                     DMA2SIRQ        equ	15327	;# 
 11910   003BE9                     DMA1BUF         equ	15337	;# 
 11911   003BEA                     DMA1DCNT        equ	15338	;# 
 11912   003BEA                     DMA1DCNTL       equ	15338	;# 
 11913   003BEB                     DMA1DCNTH       equ	15339	;# 
 11914   003BEC                     DMA1DPTR        equ	15340	;# 
 11915   003BEC                     DMA1DPTRL       equ	15340	;# 
 11916   003BED                     DMA1DPTRH       equ	15341	;# 
 11917   003BEE                     DMA1DSZ         equ	15342	;# 
 11918   003BEE                     DMA1DSZL        equ	15342	;# 
 11919   003BEF                     DMA1DSZH        equ	15343	;# 
 11920   003BF0                     DMA1DSA         equ	15344	;# 
 11921   003BF0                     DMA1DSAL        equ	15344	;# 
 11922   003BF1                     DMA1DSAH        equ	15345	;# 
 11923   003BF2                     DMA1SCNT        equ	15346	;# 
 11924   003BF2                     DMA1SCNTL       equ	15346	;# 
 11925   003BF3                     DMA1SCNTH       equ	15347	;# 
 11926   003BF4                     DMA1SPTR        equ	15348	;# 
 11927   003BF4                     DMA1SPTRL       equ	15348	;# 
 11928   003BF5                     DMA1SPTRH       equ	15349	;# 
 11929   003BF6                     DMA1SPTRU       equ	15350	;# 
 11930   003BF7                     DMA1SSZ         equ	15351	;# 
 11931   003BF7                     DMA1SSZL        equ	15351	;# 
 11932   003BF8                     DMA1SSZH        equ	15352	;# 
 11933   003BF9                     DMA1SSA         equ	15353	;# 
 11934   003BF9                     DMA1SSAL        equ	15353	;# 
 11935   003BFA                     DMA1SSAH        equ	15354	;# 
 11936   003BFB                     DMA1SSAU        equ	15355	;# 
 11937   003BFC                     DMA1CON0        equ	15356	;# 
 11938   003BFD                     DMA1CON1        equ	15357	;# 
 11939   003BFE                     DMA1AIRQ        equ	15358	;# 
 11940   003BFF                     DMA1SIRQ        equ	15359	;# 
 11941   003C56                     CLC4CON         equ	15446	;# 
 11942   003C57                     CLC4POL         equ	15447	;# 
 11943   003C58                     CLC4SEL0        equ	15448	;# 
 11944   003C59                     CLC4SEL1        equ	15449	;# 
 11945   003C5A                     CLC4SEL2        equ	15450	;# 
 11946   003C5B                     CLC4SEL3        equ	15451	;# 
 11947   003C5C                     CLC4GLS0        equ	15452	;# 
 11948   003C5D                     CLC4GLS1        equ	15453	;# 
 11949   003C5E                     CLC4GLS2        equ	15454	;# 
 11950   003C5F                     CLC4GLS3        equ	15455	;# 
 11951   003C60                     CLC3CON         equ	15456	;# 
 11952   003C61                     CLC3POL         equ	15457	;# 
 11953   003C62                     CLC3SEL0        equ	15458	;# 
 11954   003C63                     CLC3SEL1        equ	15459	;# 
 11955   003C64                     CLC3SEL2        equ	15460	;# 
 11956   003C65                     CLC3SEL3        equ	15461	;# 
 11957   003C66                     CLC3GLS0        equ	15462	;# 
 11958   003C67                     CLC3GLS1        equ	15463	;# 
 11959   003C68                     CLC3GLS2        equ	15464	;# 
 11960   003C69                     CLC3GLS3        equ	15465	;# 
 11961   003C6A                     CLC2CON         equ	15466	;# 
 11962   003C6B                     CLC2POL         equ	15467	;# 
 11963   003C6C                     CLC2SEL0        equ	15468	;# 
 11964   003C6D                     CLC2SEL1        equ	15469	;# 
 11965   003C6E                     CLC2SEL2        equ	15470	;# 
 11966   003C6F                     CLC2SEL3        equ	15471	;# 
 11967   003C70                     CLC2GLS0        equ	15472	;# 
 11968   003C71                     CLC2GLS1        equ	15473	;# 
 11969   003C72                     CLC2GLS2        equ	15474	;# 
 11970   003C73                     CLC2GLS3        equ	15475	;# 
 11971   003C74                     CLC1CON         equ	15476	;# 
 11972   003C75                     CLC1POL         equ	15477	;# 
 11973   003C76                     CLC1SEL0        equ	15478	;# 
 11974   003C77                     CLC1SEL1        equ	15479	;# 
 11975   003C78                     CLC1SEL2        equ	15480	;# 
 11976   003C79                     CLC1SEL3        equ	15481	;# 
 11977   003C7A                     CLC1GLS0        equ	15482	;# 
 11978   003C7B                     CLC1GLS1        equ	15483	;# 
 11979   003C7C                     CLC1GLS2        equ	15484	;# 
 11980   003C7D                     CLC1GLS3        equ	15485	;# 
 11981   003C7E                     CLCDATA0        equ	15486	;# 
 11982   003CE5                     CLKRCON         equ	15589	;# 
 11983   003CE6                     CLKRCLK         equ	15590	;# 
 11984   003CFA                     MD1CON0         equ	15610	;# 
 11985   003CFB                     MD1CON1         equ	15611	;# 
 11986   003CFC                     MD1SRC          equ	15612	;# 
 11987   003CFD                     MD1CARL         equ	15613	;# 
 11988   003CFE                     MD1CARH         equ	15614	;# 
 11989   003D10                     SPI1RXB         equ	15632	;# 
 11990   003D11                     SPI1TXB         equ	15633	;# 
 11991   003D12                     SPI1TCNT        equ	15634	;# 
 11992   003D12                     SPI1TCNTL       equ	15634	;# 
 11993   003D13                     SPI1TCNTH       equ	15635	;# 
 11994   003D14                     SPI1CON0        equ	15636	;# 
 11995   003D15                     SPI1CON1        equ	15637	;# 
 11996   003D16                     SPI1CON2        equ	15638	;# 
 11997   003D17                     SPI1STATUS      equ	15639	;# 
 11998   003D18                     SPI1TWIDTH      equ	15640	;# 
 11999   003D19                     SPI1BAUD        equ	15641	;# 
 12000   003D1A                     SPI1INTF        equ	15642	;# 
 12001   003D1B                     SPI1INTE        equ	15643	;# 
 12002   003D1C                     SPI1CLK         equ	15644	;# 
 12003   003D54                     I2C2RXB         equ	15700	;# 
 12004   003D55                     I2C2TXB         equ	15701	;# 
 12005   003D56                     I2C2CNT         equ	15702	;# 
 12006   003D57                     I2C2ADB0        equ	15703	;# 
 12007   003D58                     I2C2ADB1        equ	15704	;# 
 12008   003D59                     I2C2ADR0        equ	15705	;# 
 12009   003D5A                     I2C2ADR1        equ	15706	;# 
 12010   003D5B                     I2C2ADR2        equ	15707	;# 
 12011   003D5C                     I2C2ADR3        equ	15708	;# 
 12012   003D5D                     I2C2CON0        equ	15709	;# 
 12013   003D5E                     I2C2CON1        equ	15710	;# 
 12014   003D5F                     I2C2CON2        equ	15711	;# 
 12015   003D60                     I2C2ERR         equ	15712	;# 
 12016   003D61                     I2C2STAT0       equ	15713	;# 
 12017   003D62                     I2C2STAT1       equ	15714	;# 
 12018   003D63                     I2C2PIR         equ	15715	;# 
 12019   003D64                     I2C2PIE         equ	15716	;# 
 12020   003D65                     I2C2CLK         equ	15717	;# 
 12021   003D66                     I2C2BTO         equ	15718	;# 
 12022   003D6A                     I2C1RXB         equ	15722	;# 
 12023   003D6B                     I2C1TXB         equ	15723	;# 
 12024   003D6C                     I2C1CNT         equ	15724	;# 
 12025   003D6D                     I2C1ADB0        equ	15725	;# 
 12026   003D6E                     I2C1ADB1        equ	15726	;# 
 12027   003D6F                     I2C1ADR0        equ	15727	;# 
 12028   003D70                     I2C1ADR1        equ	15728	;# 
 12029   003D71                     I2C1ADR2        equ	15729	;# 
 12030   003D72                     I2C1ADR3        equ	15730	;# 
 12031   003D73                     I2C1CON0        equ	15731	;# 
 12032   003D74                     I2C1CON1        equ	15732	;# 
 12033   003D75                     I2C1CON2        equ	15733	;# 
 12034   003D76                     I2C1ERR         equ	15734	;# 
 12035   003D77                     I2C1STAT0       equ	15735	;# 
 12036   003D78                     I2C1STAT1       equ	15736	;# 
 12037   003D79                     I2C1PIR         equ	15737	;# 
 12038   003D7A                     I2C1PIE         equ	15738	;# 
 12039   003D7B                     I2C1CLK         equ	15739	;# 
 12040   003D7C                     I2C1BTO         equ	15740	;# 
 12041   003DD0                     U2RXB           equ	15824	;# 
 12042   003DD0                     U2RXBL          equ	15824	;# 
 12043   003DD2                     U2TXB           equ	15826	;# 
 12044   003DD2                     U2TXBL          equ	15826	;# 
 12045   003DD4                     U2P1            equ	15828	;# 
 12046   003DD4                     U2P1L           equ	15828	;# 
 12047   003DD6                     U2P2            equ	15830	;# 
 12048   003DD6                     U2P2L           equ	15830	;# 
 12049   003DD8                     U2P3            equ	15832	;# 
 12050   003DD8                     U2P3L           equ	15832	;# 
 12051   003DDA                     U2CON0          equ	15834	;# 
 12052   003DDB                     U2CON1          equ	15835	;# 
 12053   003DDC                     U2CON2          equ	15836	;# 
 12054   003DDD                     U2BRG           equ	15837	;# 
 12055   003DDD                     U2BRGL          equ	15837	;# 
 12056   003DDE                     U2BRGH          equ	15838	;# 
 12057   003DDF                     U2FIFO          equ	15839	;# 
 12058   003DE0                     U2UIR           equ	15840	;# 
 12059   003DE1                     U2ERRIR         equ	15841	;# 
 12060   003DE2                     U2ERRIE         equ	15842	;# 
 12061   003DE8                     U1RXB           equ	15848	;# 
 12062   003DE8                     U1RXBL          equ	15848	;# 
 12063   003DE9                     U1RXCHK         equ	15849	;# 
 12064   003DEA                     U1TXB           equ	15850	;# 
 12065   003DEA                     U1TXBL          equ	15850	;# 
 12066   003DEB                     U1TXCHK         equ	15851	;# 
 12067   003DEC                     U1P1            equ	15852	;# 
 12068   003DEC                     U1P1L           equ	15852	;# 
 12069   003DED                     U1P1H           equ	15853	;# 
 12070   003DEE                     U1P2            equ	15854	;# 
 12071   003DEE                     U1P2L           equ	15854	;# 
 12072   003DEF                     U1P2H           equ	15855	;# 
 12073   003DF0                     U1P3            equ	15856	;# 
 12074   003DF0                     U1P3L           equ	15856	;# 
 12075   003DF1                     U1P3H           equ	15857	;# 
 12076   003DF2                     U1CON0          equ	15858	;# 
 12077   003DF3                     U1CON1          equ	15859	;# 
 12078   003DF4                     U1CON2          equ	15860	;# 
 12079   003DF5                     U1BRG           equ	15861	;# 
 12080   003DF5                     U1BRGL          equ	15861	;# 
 12081   003DF6                     U1BRGH          equ	15862	;# 
 12082   003DF7                     U1FIFO          equ	15863	;# 
 12083   003DF8                     U1UIR           equ	15864	;# 
 12084   003DF9                     U1ERRIR         equ	15865	;# 
 12085   003DFA                     U1ERRIE         equ	15866	;# 
 12086   003E9C                     DAC1CON1        equ	16028	;# 
 12087   003E9E                     DAC1CON0        equ	16030	;# 
 12088   003EB8                     CM2CON0         equ	16056	;# 
 12089   003EB9                     CM2CON1         equ	16057	;# 
 12090   003EBA                     CM2NCH          equ	16058	;# 
 12091   003EBB                     CM2PCH          equ	16059	;# 
 12092   003EBC                     CM1CON0         equ	16060	;# 
 12093   003EBD                     CM1CON1         equ	16061	;# 
 12094   003EBE                     CM1NCH          equ	16062	;# 
 12095   003EBF                     CM1PCH          equ	16063	;# 
 12096   003EC0                     CMOUT           equ	16064	;# 
 12097   003EC1                     FVRCON          equ	16065	;# 
 12098   003EC3                     ZCDCON          equ	16067	;# 
 12099   003EC9                     HLVDCON0        equ	16073	;# 
 12100   003ECA                     HLVDCON1        equ	16074	;# 
 12101   003ED7                     ADCP            equ	16087	;# 
 12102   003EDE                     ADLTH           equ	16094	;# 
 12103   003EDE                     ADLTHL          equ	16094	;# 
 12104   003EDF                     ADLTHH          equ	16095	;# 
 12105   003EE0                     ADUTH           equ	16096	;# 
 12106   003EE0                     ADUTHL          equ	16096	;# 
 12107   003EE1                     ADUTHH          equ	16097	;# 
 12108   003EE2                     ADERR           equ	16098	;# 
 12109   003EE2                     ADERRL          equ	16098	;# 
 12110   003EE3                     ADERRH          equ	16099	;# 
 12111   003EE4                     ADSTPT          equ	16100	;# 
 12112   003EE4                     ADSTPTL         equ	16100	;# 
 12113   003EE5                     ADSTPTH         equ	16101	;# 
 12114   003EE6                     ADFLTR          equ	16102	;# 
 12115   003EE6                     ADFLTRL         equ	16102	;# 
 12116   003EE7                     ADFLTRH         equ	16103	;# 
 12117   003EE8                     ADACC           equ	16104	;# 
 12118   003EE8                     ADACCL          equ	16104	;# 
 12119   003EE9                     ADACCH          equ	16105	;# 
 12120   003EEA                     ADACCU          equ	16106	;# 
 12121   003EEB                     ADCNT           equ	16107	;# 
 12122   003EEC                     ADRPT           equ	16108	;# 
 12123   003EED                     ADPREV          equ	16109	;# 
 12124   003EED                     ADPREVL         equ	16109	;# 
 12125   003EEE                     ADPREVH         equ	16110	;# 
 12126   003EEF                     ADRES           equ	16111	;# 
 12127   003EEF                     ADRESL          equ	16111	;# 
 12128   003EF0                     ADRESH          equ	16112	;# 
 12129   003EF1                     ADPCH           equ	16113	;# 
 12130   003EF3                     ADACQ           equ	16115	;# 
 12131   003EF3                     ADACQL          equ	16115	;# 
 12132   003EF4                     ADACQH          equ	16116	;# 
 12133   003EF5                     ADCAP           equ	16117	;# 
 12134   003EF6                     ADPRE           equ	16118	;# 
 12135   003EF6                     ADPREL          equ	16118	;# 
 12136   003EF7                     ADPREH          equ	16119	;# 
 12137   003EF8                     ADCON0          equ	16120	;# 
 12138   003EF9                     ADCON1          equ	16121	;# 
 12139   003EFA                     ADCON2          equ	16122	;# 
 12140   003EFB                     ADCON3          equ	16123	;# 
 12141   003EFC                     ADSTAT          equ	16124	;# 
 12142   003EFD                     ADREF           equ	16125	;# 
 12143   003EFE                     ADACT           equ	16126	;# 
 12144   003EFF                     ADCLK           equ	16127	;# 
 12145   003F12                     SMT1TMR         equ	16146	;# 
 12146   003F12                     SMT1TMRL        equ	16146	;# 
 12147   003F13                     SMT1TMRH        equ	16147	;# 
 12148   003F14                     SMT1TMRU        equ	16148	;# 
 12149   003F15                     SMT1CPR         equ	16149	;# 
 12150   003F15                     SMT1CPRL        equ	16149	;# 
 12151   003F16                     SMT1CPRH        equ	16150	;# 
 12152   003F17                     SMT1CPRU        equ	16151	;# 
 12153   003F18                     SMT1CPW         equ	16152	;# 
 12154   003F18                     SMT1CPWL        equ	16152	;# 
 12155   003F19                     SMT1CPWH        equ	16153	;# 
 12156   003F1A                     SMT1CPWU        equ	16154	;# 
 12157   003F1B                     SMT1PR          equ	16155	;# 
 12158   003F1B                     SMT1PRL         equ	16155	;# 
 12159   003F1C                     SMT1PRH         equ	16156	;# 
 12160   003F1D                     SMT1PRU         equ	16157	;# 
 12161   003F1E                     SMT1CON0        equ	16158	;# 
 12162   003F1F                     SMT1CON1        equ	16159	;# 
 12163   003F20                     SMT1STAT        equ	16160	;# 
 12164   003F21                     SMT1CLK         equ	16161	;# 
 12165   003F22                     SMT1SIG         equ	16162	;# 
 12166   003F23                     SMT1WIN         equ	16163	;# 
 12167   003F38                     NCO1ACC         equ	16184	;# 
 12168   003F38                     NCO1ACCL        equ	16184	;# 
 12169   003F39                     NCO1ACCH        equ	16185	;# 
 12170   003F3A                     NCO1ACCU        equ	16186	;# 
 12171   003F3B                     NCO1INC         equ	16187	;# 
 12172   003F3B                     NCO1INCL        equ	16187	;# 
 12173   003F3C                     NCO1INCH        equ	16188	;# 
 12174   003F3D                     NCO1INCU        equ	16189	;# 
 12175   003F3E                     NCO1CON         equ	16190	;# 
 12176   003F3F                     NCO1CLK         equ	16191	;# 
 12177   003F40                     CWG3CLK         equ	16192	;# 
 12178   003F40                     CWG3CLKCON      equ	16192	;# 
 12179   003F41                     CWG3ISM         equ	16193	;# 
 12180   003F41                     CWG3DAT         equ	16193	;# 
 12181   003F42                     CWG3DBR         equ	16194	;# 
 12182   003F43                     CWG3DBF         equ	16195	;# 
 12183   003F44                     CWG3CON0        equ	16196	;# 
 12184   003F45                     CWG3CON1        equ	16197	;# 
 12185   003F46                     CWG3AS0         equ	16198	;# 
 12186   003F47                     CWG3AS1         equ	16199	;# 
 12187   003F48                     CWG3STR         equ	16200	;# 
 12188   003F49                     CWG2CLK         equ	16201	;# 
 12189   003F49                     CWG2CLKCON      equ	16201	;# 
 12190   003F4A                     CWG2ISM         equ	16202	;# 
 12191   003F4A                     CWG2DAT         equ	16202	;# 
 12192   003F4B                     CWG2DBR         equ	16203	;# 
 12193   003F4C                     CWG2DBF         equ	16204	;# 
 12194   003F4D                     CWG2CON0        equ	16205	;# 
 12195   003F4E                     CWG2CON1        equ	16206	;# 
 12196   003F4F                     CWG2AS0         equ	16207	;# 
 12197   003F50                     CWG2AS1         equ	16208	;# 
 12198   003F51                     CWG2STR         equ	16209	;# 
 12199   003F52                     CWG1CLK         equ	16210	;# 
 12200   003F52                     CWG1CLKCON      equ	16210	;# 
 12201   003F53                     CWG1ISM         equ	16211	;# 
 12202   003F53                     CWG1DAT         equ	16211	;# 
 12203   003F54                     CWG1DBR         equ	16212	;# 
 12204   003F55                     CWG1DBF         equ	16213	;# 
 12205   003F56                     CWG1CON0        equ	16214	;# 
 12206   003F57                     CWG1CON1        equ	16215	;# 
 12207   003F58                     CWG1AS0         equ	16216	;# 
 12208   003F59                     CWG1AS1         equ	16217	;# 
 12209   003F5A                     CWG1STR         equ	16218	;# 
 12210   003F5E                     CCPTMRS0        equ	16222	;# 
 12211   003F5F                     CCPTMRS1        equ	16223	;# 
 12212   003F60                     PWM8DC          equ	16224	;# 
 12213   003F60                     PWM8DCL         equ	16224	;# 
 12214   003F61                     PWM8DCH         equ	16225	;# 
 12215   003F62                     PWM8CON         equ	16226	;# 
 12216   003F64                     PWM7DC          equ	16228	;# 
 12217   003F64                     PWM7DCL         equ	16228	;# 
 12218   003F65                     PWM7DCH         equ	16229	;# 
 12219   003F66                     PWM7CON         equ	16230	;# 
 12220   003F68                     PWM6DC          equ	16232	;# 
 12221   003F68                     PWM6DCL         equ	16232	;# 
 12222   003F69                     PWM6DCH         equ	16233	;# 
 12223   003F6A                     PWM6CON         equ	16234	;# 
 12224   003F6C                     PWM5DC          equ	16236	;# 
 12225   003F6C                     PWM5DCL         equ	16236	;# 
 12226   003F6D                     PWM5DCH         equ	16237	;# 
 12227   003F6E                     PWM5CON         equ	16238	;# 
 12228   003F70                     CCPR4           equ	16240	;# 
 12229   003F70                     CCPR4L          equ	16240	;# 
 12230   003F71                     CCPR4H          equ	16241	;# 
 12231   003F72                     CCP4CON         equ	16242	;# 
 12232   003F73                     CCP4CAP         equ	16243	;# 
 12233   003F74                     CCPR3           equ	16244	;# 
 12234   003F74                     CCPR3L          equ	16244	;# 
 12235   003F75                     CCPR3H          equ	16245	;# 
 12236   003F76                     CCP3CON         equ	16246	;# 
 12237   003F77                     CCP3CAP         equ	16247	;# 
 12238   003F78                     CCPR2           equ	16248	;# 
 12239   003F78                     CCPR2L          equ	16248	;# 
 12240   003F79                     CCPR2H          equ	16249	;# 
 12241   003F7A                     CCP2CON         equ	16250	;# 
 12242   003F7B                     CCP2CAP         equ	16251	;# 
 12243   003F7C                     CCPR1           equ	16252	;# 
 12244   003F7C                     CCPR1L          equ	16252	;# 
 12245   003F7D                     CCPR1H          equ	16253	;# 
 12246   003F7E                     CCP1CON         equ	16254	;# 
 12247   003F7F                     CCP1CAP         equ	16255	;# 
 12248   003F92                     T6TMR           equ	16274	;# 
 12249   003F92                     TMR6            equ	16274	;# 
 12250   003F93                     T6PR            equ	16275	;# 
 12251   003F93                     PR6             equ	16275	;# 
 12252   003F94                     T6CON           equ	16276	;# 
 12253   003F95                     T6HLT           equ	16277	;# 
 12254   003F96                     T6CLKCON        equ	16278	;# 
 12255   003F96                     T6CLK           equ	16278	;# 
 12256   003F97                     T6RST           equ	16279	;# 
 12257   003F98                     TMR5            equ	16280	;# 
 12258   003F98                     TMR5L           equ	16280	;# 
 12259   003F99                     TMR5H           equ	16281	;# 
 12260   003F9A                     T5CON           equ	16282	;# 
 12261   003F9A                     TMR5CON         equ	16282	;# 
 12262   003F9B                     T5GCON          equ	16283	;# 
 12263   003F9B                     TMR5GCON        equ	16283	;# 
 12264   003F9C                     T5GATE          equ	16284	;# 
 12265   003F9C                     TMR5GATE        equ	16284	;# 
 12266   003F9D                     T5CLK           equ	16285	;# 
 12267   003F9D                     TMR5CLK         equ	16285	;# 
 12268   003F9D                     PR5             equ	16285	;# 
 12269   003F9E                     T4TMR           equ	16286	;# 
 12270   003F9E                     TMR4            equ	16286	;# 
 12271   003F9F                     T4PR            equ	16287	;# 
 12272   003F9F                     PR4             equ	16287	;# 
 12273   003FA0                     T4CON           equ	16288	;# 
 12274   003FA1                     T4HLT           equ	16289	;# 
 12275   003FA2                     T4CLKCON        equ	16290	;# 
 12276   003FA2                     T4CLK           equ	16290	;# 
 12277   003FA3                     T4RST           equ	16291	;# 
 12278   003FA4                     TMR3            equ	16292	;# 
 12279   003FA4                     TMR3L           equ	16292	;# 
 12280   003FA5                     TMR3H           equ	16293	;# 
 12281   003FA6                     T3CON           equ	16294	;# 
 12282   003FA6                     TMR3CON         equ	16294	;# 
 12283   003FA7                     T3GCON          equ	16295	;# 
 12284   003FA7                     TMR3GCON        equ	16295	;# 
 12285   003FA8                     T3GATE          equ	16296	;# 
 12286   003FA8                     TMR3GATE        equ	16296	;# 
 12287   003FA9                     T3CLK           equ	16297	;# 
 12288   003FA9                     TMR3CLK         equ	16297	;# 
 12289   003FA9                     PR3             equ	16297	;# 
 12290   003FAA                     T2TMR           equ	16298	;# 
 12291   003FAA                     TMR2            equ	16298	;# 
 12292   003FAB                     T2PR            equ	16299	;# 
 12293   003FAB                     PR2             equ	16299	;# 
 12294   003FAC                     T2CON           equ	16300	;# 
 12295   003FAD                     T2HLT           equ	16301	;# 
 12296   003FAE                     T2CLKCON        equ	16302	;# 
 12297   003FAE                     T2CLK           equ	16302	;# 
 12298   003FAF                     T2RST           equ	16303	;# 
 12299   003FB0                     TMR1            equ	16304	;# 
 12300   003FB0                     TMR1L           equ	16304	;# 
 12301   003FB1                     TMR1H           equ	16305	;# 
 12302   003FB2                     T1CON           equ	16306	;# 
 12303   003FB2                     TMR1CON         equ	16306	;# 
 12304   003FB3                     T1GCON          equ	16307	;# 
 12305   003FB3                     TMR1GCON        equ	16307	;# 
 12306   003FB4                     T1GATE          equ	16308	;# 
 12307   003FB4                     TMR1GATE        equ	16308	;# 
 12308   003FB5                     T1CLK           equ	16309	;# 
 12309   003FB5                     TMR1CLK         equ	16309	;# 
 12310   003FB5                     PR1             equ	16309	;# 
 12311   003FB6                     TMR0L           equ	16310	;# 
 12312   003FB6                     TMR0            equ	16310	;# 
 12313   003FB7                     TMR0H           equ	16311	;# 
 12314   003FB7                     PR0             equ	16311	;# 
 12315   003FB8                     T0CON0          equ	16312	;# 
 12316   003FB9                     T0CON1          equ	16313	;# 
 12317   003FBA                     LATA            equ	16314	;# 
 12318   003FBB                     LATB            equ	16315	;# 
 12319   003FBC                     LATC            equ	16316	;# 
 12320   003FBD                     LATD            equ	16317	;# 
 12321   003FBE                     LATE            equ	16318	;# 
 12322   003FBF                     LATF            equ	16319	;# 
 12323   003FC2                     TRISA           equ	16322	;# 
 12324   003FC3                     TRISB           equ	16323	;# 
 12325   003FC4                     TRISC           equ	16324	;# 
 12326   003FC5                     TRISD           equ	16325	;# 
 12327   003FC6                     TRISE           equ	16326	;# 
 12328   003FC7                     TRISF           equ	16327	;# 
 12329   003FCA                     PORTA           equ	16330	;# 
 12330   003FCB                     PORTB           equ	16331	;# 
 12331   003FCC                     PORTC           equ	16332	;# 
 12332   003FCD                     PORTD           equ	16333	;# 
 12333   003FCE                     PORTE           equ	16334	;# 
 12334   003FCF                     PORTF           equ	16335	;# 
 12335   003FD2                     INTCON0         equ	16338	;# 
 12336   003FD3                     INTCON1         equ	16339	;# 
 12337   003FD4                     IVTLOCK         equ	16340	;# 
 12338   003FD5                     IVTBASE         equ	16341	;# 
 12339   003FD5                     IVTBASEL        equ	16341	;# 
 12340   003FD6                     IVTBASEH        equ	16342	;# 
 12341   003FD7                     IVTBASEU        equ	16343	;# 
 12342   003FD8                     STATUS          equ	16344	;# 
 12343   003FD9                     FSR2            equ	16345	;# 
 12344   003FD9                     FSR2L           equ	16345	;# 
 12345   003FDA                     FSR2H           equ	16346	;# 
 12346   003FDB                     PLUSW2          equ	16347	;# 
 12347   003FDC                     PREINC2         equ	16348	;# 
 12348   003FDD                     POSTDEC2        equ	16349	;# 
 12349   003FDE                     POSTINC2        equ	16350	;# 
 12350   003FDF                     INDF2           equ	16351	;# 
 12351   003FE0                     BSR             equ	16352	;# 
 12352   003FE1                     FSR1            equ	16353	;# 
 12353   003FE1                     FSR1L           equ	16353	;# 
 12354   003FE2                     FSR1H           equ	16354	;# 
 12355   003FE3                     PLUSW1          equ	16355	;# 
 12356   003FE4                     PREINC1         equ	16356	;# 
 12357   003FE5                     POSTDEC1        equ	16357	;# 
 12358   003FE6                     POSTINC1        equ	16358	;# 
 12359   003FE7                     INDF1           equ	16359	;# 
 12360   003FE8                     WREG            equ	16360	;# 
 12361   003FE9                     FSR0            equ	16361	;# 
 12362   003FE9                     FSR0L           equ	16361	;# 
 12363   003FEA                     FSR0H           equ	16362	;# 
 12364   003FEB                     PLUSW0          equ	16363	;# 
 12365   003FEC                     PREINC0         equ	16364	;# 
 12366   003FED                     POSTDEC0        equ	16365	;# 
 12367   003FEE                     POSTINC0        equ	16366	;# 
 12368   003FEF                     INDF0           equ	16367	;# 
 12369   003FF0                     PCON0           equ	16368	;# 
 12370   003FF1                     PCON1           equ	16369	;# 
 12371   003FF3                     PROD            equ	16371	;# 
 12372   003FF3                     PRODL           equ	16371	;# 
 12373   003FF4                     PRODH           equ	16372	;# 
 12374   003FF5                     TABLAT          equ	16373	;# 
 12375   003FF6                     TBLPTR          equ	16374	;# 
 12376   003FF6                     TBLPTRL         equ	16374	;# 
 12377   003FF7                     TBLPTRH         equ	16375	;# 
 12378   003FF8                     TBLPTRU         equ	16376	;# 
 12379   003FF9                     PCLAT           equ	16377	;# 
 12380   003FF9                     PCL             equ	16377	;# 
 12381   003FFA                     PCLATH          equ	16378	;# 
 12382   003FFB                     PCLATU          equ	16379	;# 
 12383   003FFC                     STKPTR          equ	16380	;# 
 12384   003FFD                     TOS             equ	16381	;# 
 12385   003FFD                     TOSL            equ	16381	;# 
 12386   003FFE                     TOSH            equ	16382	;# 
 12387   003FFF                     TOSU            equ	16383	;# 
 12388   003880                     STATUS_CSHAD    equ	14464	;# 
 12389   003881                     WREG_CSHAD      equ	14465	;# 
 12390   003882                     BSR_CSHAD       equ	14466	;# 
 12391   003883                     SHADCON         equ	14467	;# 
 12392   003884                     STATUS_SHAD     equ	14468	;# 
 12393   003885                     WREG_SHAD       equ	14469	;# 
 12394   003886                     BSR_SHAD        equ	14470	;# 
 12395   003887                     PCLATH_SHAD     equ	14471	;# 
 12396   003888                     PCLATU_SHAD     equ	14472	;# 
 12397   003889                     FSR0SH          equ	14473	;# 
 12398   003889                     FSR0L_SHAD      equ	14473	;# 
 12399   00388A                     FSR0H_SHAD      equ	14474	;# 
 12400   00388B                     FSR1SH          equ	14475	;# 
 12401   00388B                     FSR1L_SHAD      equ	14475	;# 
 12402   00388C                     FSR1H_SHAD      equ	14476	;# 
 12403   00388D                     FSR2SH          equ	14477	;# 
 12404   00388D                     FSR2L_SHAD      equ	14477	;# 
 12405   00388E                     FSR2H_SHAD      equ	14478	;# 
 12406   00388F                     PRODSH          equ	14479	;# 
 12407   00388F                     PRODL_SHAD      equ	14479	;# 
 12408   003890                     PRODH_SHAD      equ	14480	;# 
 12409   00389D                     IVTADL          equ	14493	;# 
 12410   00389E                     IVTADH          equ	14494	;# 
 12411   00389F                     IVTADU          equ	14495	;# 
 12412   00395B                     WDTCON0         equ	14683	;# 
 12413   00395C                     WDTCON1         equ	14684	;# 
 12414   00395D                     WDTPSL          equ	14685	;# 
 12415   00395E                     WDTPSH          equ	14686	;# 
 12416   00395F                     WDTTMR          equ	14687	;# 
 12417   003960                     CRCDATA         equ	14688	;# 
 12418   003960                     CRCDATL         equ	14688	;# 
 12419   003961                     CRCDATH         equ	14689	;# 
 12420   003962                     CRCACC          equ	14690	;# 
 12421   003962                     CRCACCL         equ	14690	;# 
 12422   003963                     CRCACCH         equ	14691	;# 
 12423   003964                     CRCSHFT         equ	14692	;# 
 12424   003964                     CRCSHIFTL       equ	14692	;# 
 12425   003965                     CRCSHIFTH       equ	14693	;# 
 12426   003966                     CRCXOR          equ	14694	;# 
 12427   003966                     CRCXORL         equ	14694	;# 
 12428   003967                     CRCXORH         equ	14695	;# 
 12429   003968                     CRCCON0         equ	14696	;# 
 12430   003969                     CRCCON1         equ	14697	;# 
 12431   003976                     SCANLADR        equ	14710	;# 
 12432   003976                     SCANLADRL       equ	14710	;# 
 12433   003977                     SCANLADRH       equ	14711	;# 
 12434   003978                     SCANLADRU       equ	14712	;# 
 12435   003979                     SCANHADR        equ	14713	;# 
 12436   003979                     SCANHADRL       equ	14713	;# 
 12437   00397A                     SCANHADRH       equ	14714	;# 
 12438   00397B                     SCANHADRU       equ	14715	;# 
 12439   00397C                     SCANCON0        equ	14716	;# 
 12440   00397D                     SCANTRIG        equ	14717	;# 
 12441   003980                     IPR0            equ	14720	;# 
 12442   003981                     IPR1            equ	14721	;# 
 12443   003982                     IPR2            equ	14722	;# 
 12444   003983                     IPR3            equ	14723	;# 
 12445   003984                     IPR4            equ	14724	;# 
 12446   003985                     IPR5            equ	14725	;# 
 12447   003986                     IPR6            equ	14726	;# 
 12448   003987                     IPR7            equ	14727	;# 
 12449   003988                     IPR8            equ	14728	;# 
 12450   003989                     IPR9            equ	14729	;# 
 12451   00398A                     IPR10           equ	14730	;# 
 12452   003990                     PIE0            equ	14736	;# 
 12453   003991                     PIE1            equ	14737	;# 
 12454   003992                     PIE2            equ	14738	;# 
 12455   003993                     PIE3            equ	14739	;# 
 12456   003994                     PIE4            equ	14740	;# 
 12457   003995                     PIE5            equ	14741	;# 
 12458   003996                     PIE6            equ	14742	;# 
 12459   003997                     PIE7            equ	14743	;# 
 12460   003998                     PIE8            equ	14744	;# 
 12461   003999                     PIE9            equ	14745	;# 
 12462   00399A                     PIE10           equ	14746	;# 
 12463   0039A0                     PIR0            equ	14752	;# 
 12464   0039A1                     PIR1            equ	14753	;# 
 12465   0039A2                     PIR2            equ	14754	;# 
 12466   0039A3                     PIR3            equ	14755	;# 
 12467   0039A4                     PIR4            equ	14756	;# 
 12468   0039A5                     PIR5            equ	14757	;# 
 12469   0039A6                     PIR6            equ	14758	;# 
 12470   0039A7                     PIR7            equ	14759	;# 
 12471   0039A8                     PIR8            equ	14760	;# 
 12472   0039A9                     PIR9            equ	14761	;# 
 12473   0039AA                     PIR10           equ	14762	;# 
 12474   0039C0                     PMD0            equ	14784	;# 
 12475   0039C1                     PMD1            equ	14785	;# 
 12476   0039C2                     PMD2            equ	14786	;# 
 12477   0039C3                     PMD3            equ	14787	;# 
 12478   0039C4                     PMD4            equ	14788	;# 
 12479   0039C5                     PMD5            equ	14789	;# 
 12480   0039C6                     PMD6            equ	14790	;# 
 12481   0039C7                     PMD7            equ	14791	;# 
 12482   0039D0                     BORCON          equ	14800	;# 
 12483   0039D1                     VREGCON         equ	14801	;# 
 12484   0039D8                     CPUDOZE         equ	14808	;# 
 12485   0039D9                     OSCCON1         equ	14809	;# 
 12486   0039DA                     OSCCON2         equ	14810	;# 
 12487   0039DB                     OSCCON3         equ	14811	;# 
 12488   0039DC                     OSCSTAT         equ	14812	;# 
 12489   0039DC                     OSCSTAT1        equ	14812	;# 
 12490   0039DD                     OSCEN           equ	14813	;# 
 12491   0039DE                     OSCTUNE         equ	14814	;# 
 12492   0039DF                     OSCFRQ          equ	14815	;# 
 12493   0039E0                     NVMADRL         equ	14816	;# 
 12494   0039E1                     NVMADRH         equ	14817	;# 
 12495   0039E3                     NVMDAT          equ	14819	;# 
 12496   0039E5                     NVMCON1         equ	14821	;# 
 12497   0039E6                     NVMCON2         equ	14822	;# 
 12498   0039EF                     PRLOCK          equ	14831	;# 
 12499   0039F1                     ISRPR           equ	14833	;# 
 12500   0039F2                     MAINPR          equ	14834	;# 
 12501   0039F3                     DMA1PR          equ	14835	;# 
 12502   0039F4                     DMA2PR          equ	14836	;# 
 12503   0039F7                     SCANPR          equ	14839	;# 
 12504   003A00                     RA0PPS          equ	14848	;# 
 12505   003A01                     RA1PPS          equ	14849	;# 
 12506   003A02                     RA2PPS          equ	14850	;# 
 12507   003A03                     RA3PPS          equ	14851	;# 
 12508   003A04                     RA4PPS          equ	14852	;# 
 12509   003A05                     RA5PPS          equ	14853	;# 
 12510   003A06                     RA6PPS          equ	14854	;# 
 12511   003A07                     RA7PPS          equ	14855	;# 
 12512   003A08                     RB0PPS          equ	14856	;# 
 12513   003A09                     RB1PPS          equ	14857	;# 
 12514   003A0A                     RB2PPS          equ	14858	;# 
 12515   003A0B                     RB3PPS          equ	14859	;# 
 12516   003A0C                     RB4PPS          equ	14860	;# 
 12517   003A0D                     RB5PPS          equ	14861	;# 
 12518   003A0E                     RB6PPS          equ	14862	;# 
 12519   003A0F                     RB7PPS          equ	14863	;# 
 12520   003A10                     RC0PPS          equ	14864	;# 
 12521   003A11                     RC1PPS          equ	14865	;# 
 12522   003A12                     RC2PPS          equ	14866	;# 
 12523   003A13                     RC3PPS          equ	14867	;# 
 12524   003A14                     RC4PPS          equ	14868	;# 
 12525   003A15                     RC5PPS          equ	14869	;# 
 12526   003A16                     RC6PPS          equ	14870	;# 
 12527   003A17                     RC7PPS          equ	14871	;# 
 12528   003A18                     RD0PPS          equ	14872	;# 
 12529   003A19                     RD1PPS          equ	14873	;# 
 12530   003A1A                     RD2PPS          equ	14874	;# 
 12531   003A1B                     RD3PPS          equ	14875	;# 
 12532   003A1C                     RD4PPS          equ	14876	;# 
 12533   003A1D                     RD5PPS          equ	14877	;# 
 12534   003A1E                     RD6PPS          equ	14878	;# 
 12535   003A1F                     RD7PPS          equ	14879	;# 
 12536   003A20                     RE0PPS          equ	14880	;# 
 12537   003A21                     RE1PPS          equ	14881	;# 
 12538   003A22                     RE2PPS          equ	14882	;# 
 12539   003A28                     RF0PPS          equ	14888	;# 
 12540   003A29                     RF1PPS          equ	14889	;# 
 12541   003A2A                     RF2PPS          equ	14890	;# 
 12542   003A2B                     RF3PPS          equ	14891	;# 
 12543   003A2C                     RF4PPS          equ	14892	;# 
 12544   003A2D                     RF5PPS          equ	14893	;# 
 12545   003A2E                     RF6PPS          equ	14894	;# 
 12546   003A2F                     RF7PPS          equ	14895	;# 
 12547   003A40                     ANSELA          equ	14912	;# 
 12548   003A41                     WPUA            equ	14913	;# 
 12549   003A42                     ODCONA          equ	14914	;# 
 12550   003A43                     SLRCONA         equ	14915	;# 
 12551   003A44                     INLVLA          equ	14916	;# 
 12552   003A45                     IOCAP           equ	14917	;# 
 12553   003A46                     IOCAN           equ	14918	;# 
 12554   003A47                     IOCAF           equ	14919	;# 
 12555   003A50                     ANSELB          equ	14928	;# 
 12556   003A51                     WPUB            equ	14929	;# 
 12557   003A52                     ODCONB          equ	14930	;# 
 12558   003A53                     SLRCONB         equ	14931	;# 
 12559   003A54                     INLVLB          equ	14932	;# 
 12560   003A55                     IOCBP           equ	14933	;# 
 12561   003A56                     IOCBN           equ	14934	;# 
 12562   003A57                     IOCBF           equ	14935	;# 
 12563   003A5A                     RB1I2C          equ	14938	;# 
 12564   003A5B                     RB2I2C          equ	14939	;# 
 12565   003A60                     ANSELC          equ	14944	;# 
 12566   003A61                     WPUC            equ	14945	;# 
 12567   003A62                     ODCONC          equ	14946	;# 
 12568   003A63                     SLRCONC         equ	14947	;# 
 12569   003A64                     INLVLC          equ	14948	;# 
 12570   003A65                     IOCCP           equ	14949	;# 
 12571   003A66                     IOCCN           equ	14950	;# 
 12572   003A67                     IOCCF           equ	14951	;# 
 12573   003A6A                     RC3I2C          equ	14954	;# 
 12574   003A6B                     RC4I2C          equ	14955	;# 
 12575   003A70                     ANSELD          equ	14960	;# 
 12576   003A71                     WPUD            equ	14961	;# 
 12577   003A72                     ODCOND          equ	14962	;# 
 12578   003A73                     SLRCOND         equ	14963	;# 
 12579   003A74                     INLVLD          equ	14964	;# 
 12580   003A7A                     RD0I2C          equ	14970	;# 
 12581   003A7B                     RD1I2C          equ	14971	;# 
 12582   003A80                     ANSELE          equ	14976	;# 
 12583   003A81                     WPUE            equ	14977	;# 
 12584   003A82                     ODCONE          equ	14978	;# 
 12585   003A83                     SLRCONE         equ	14979	;# 
 12586   003A84                     INLVLE          equ	14980	;# 
 12587   003A85                     IOCEP           equ	14981	;# 
 12588   003A86                     IOCEN           equ	14982	;# 
 12589   003A87                     IOCEF           equ	14983	;# 
 12590   003A90                     ANSELF          equ	14992	;# 
 12591   003A91                     WPUF            equ	14993	;# 
 12592   003A92                     ODCONF          equ	14994	;# 
 12593   003A93                     SLRCONF         equ	14995	;# 
 12594   003A94                     INLVLF          equ	14996	;# 
 12595   003ABF                     PPSLOCK         equ	15039	;# 
 12596   003AC0                     INT0PPS         equ	15040	;# 
 12597   003AC1                     INT1PPS         equ	15041	;# 
 12598   003AC2                     INT2PPS         equ	15042	;# 
 12599   003AC3                     T0CKIPPS        equ	15043	;# 
 12600   003AC4                     T1CKIPPS        equ	15044	;# 
 12601   003AC5                     T1GPPS          equ	15045	;# 
 12602   003AC6                     T3CKIPPS        equ	15046	;# 
 12603   003AC7                     T3GPPS          equ	15047	;# 
 12604   003AC8                     T5CKIPPS        equ	15048	;# 
 12605   003AC9                     T5GPPS          equ	15049	;# 
 12606   003ACA                     T2INPPS         equ	15050	;# 
 12607   003ACB                     T4INPPS         equ	15051	;# 
 12608   003ACC                     T6INPPS         equ	15052	;# 
 12609   003ACD                     CCP1PPS         equ	15053	;# 
 12610   003ACE                     CCP2PPS         equ	15054	;# 
 12611   003ACF                     CCP3PPS         equ	15055	;# 
 12612   003AD0                     CCP4PPS         equ	15056	;# 
 12613   003AD1                     SMT1WINPPS      equ	15057	;# 
 12614   003AD2                     SMT1SIGPPS      equ	15058	;# 
 12615   003AD3                     CWG1INPPS       equ	15059	;# 
 12616   003AD4                     CWG2INPPS       equ	15060	;# 
 12617   003AD5                     CWG3INPPS       equ	15061	;# 
 12618   003AD6                     MD1CARLPPS      equ	15062	;# 
 12619   003AD7                     MD1CARHPPS      equ	15063	;# 
 12620   003AD8                     MD1SRCPPS       equ	15064	;# 
 12621   003AD9                     CLCIN0PPS       equ	15065	;# 
 12622   003ADA                     CLCIN1PPS       equ	15066	;# 
 12623   003ADB                     CLCIN2PPS       equ	15067	;# 
 12624   003ADC                     CLCIN3PPS       equ	15068	;# 
 12625   003ADD                     ADACTPPS        equ	15069	;# 
 12626   003ADE                     SPI1SCKPPS      equ	15070	;# 
 12627   003ADF                     SPI1SDIPPS      equ	15071	;# 
 12628   003AE0                     SPI1SSPPS       equ	15072	;# 
 12629   003AE1                     I2C1SCLPPS      equ	15073	;# 
 12630   003AE2                     I2C1SDAPPS      equ	15074	;# 
 12631   003AE3                     I2C2SCLPPS      equ	15075	;# 
 12632   003AE4                     I2C2SDAPPS      equ	15076	;# 
 12633   003AE5                     U1RXPPS         equ	15077	;# 
 12634   003AE6                     U1CTSPPS        equ	15078	;# 
 12635   003AE8                     U2RXPPS         equ	15080	;# 
 12636   003AE9                     U2CTSPPS        equ	15081	;# 
 12637   003BC9                     DMA2BUF         equ	15305	;# 
 12638   003BCA                     DMA2DCNT        equ	15306	;# 
 12639   003BCA                     DMA2DCNTL       equ	15306	;# 
 12640   003BCB                     DMA2DCNTH       equ	15307	;# 
 12641   003BCC                     DMA2DPTR        equ	15308	;# 
 12642   003BCC                     DMA2DPTRL       equ	15308	;# 
 12643   003BCD                     DMA2DPTRH       equ	15309	;# 
 12644   003BCE                     DMA2DSZ         equ	15310	;# 
 12645   003BCE                     DMA2DSZL        equ	15310	;# 
 12646   003BCF                     DMA2DSZH        equ	15311	;# 
 12647   003BD0                     DMA2DSA         equ	15312	;# 
 12648   003BD0                     DMA2DSAL        equ	15312	;# 
 12649   003BD1                     DMA2DSAH        equ	15313	;# 
 12650   003BD2                     DMA2SCNT        equ	15314	;# 
 12651   003BD2                     DMA2SCNTL       equ	15314	;# 
 12652   003BD3                     DMA2SCNTH       equ	15315	;# 
 12653   003BD4                     DMA2SPTR        equ	15316	;# 
 12654   003BD4                     DMA2SPTRL       equ	15316	;# 
 12655   003BD5                     DMA2SPTRH       equ	15317	;# 
 12656   003BD6                     DMA2SPTRU       equ	15318	;# 
 12657   003BD7                     DMA2SSZ         equ	15319	;# 
 12658   003BD7                     DMA2SSZL        equ	15319	;# 
 12659   003BD8                     DMA2SSZH        equ	15320	;# 
 12660   003BD9                     DMA2SSA         equ	15321	;# 
 12661   003BD9                     DMA2SSAL        equ	15321	;# 
 12662   003BDA                     DMA2SSAH        equ	15322	;# 
 12663   003BDB                     DMA2SSAU        equ	15323	;# 
 12664   003BDC                     DMA2CON0        equ	15324	;# 
 12665   003BDD                     DMA2CON1        equ	15325	;# 
 12666   003BDE                     DMA2AIRQ        equ	15326	;# 
 12667   003BDF                     DMA2SIRQ        equ	15327	;# 
 12668   003BE9                     DMA1BUF         equ	15337	;# 
 12669   003BEA                     DMA1DCNT        equ	15338	;# 
 12670   003BEA                     DMA1DCNTL       equ	15338	;# 
 12671   003BEB                     DMA1DCNTH       equ	15339	;# 
 12672   003BEC                     DMA1DPTR        equ	15340	;# 
 12673   003BEC                     DMA1DPTRL       equ	15340	;# 
 12674   003BED                     DMA1DPTRH       equ	15341	;# 
 12675   003BEE                     DMA1DSZ         equ	15342	;# 
 12676   003BEE                     DMA1DSZL        equ	15342	;# 
 12677   003BEF                     DMA1DSZH        equ	15343	;# 
 12678   003BF0                     DMA1DSA         equ	15344	;# 
 12679   003BF0                     DMA1DSAL        equ	15344	;# 
 12680   003BF1                     DMA1DSAH        equ	15345	;# 
 12681   003BF2                     DMA1SCNT        equ	15346	;# 
 12682   003BF2                     DMA1SCNTL       equ	15346	;# 
 12683   003BF3                     DMA1SCNTH       equ	15347	;# 
 12684   003BF4                     DMA1SPTR        equ	15348	;# 
 12685   003BF4                     DMA1SPTRL       equ	15348	;# 
 12686   003BF5                     DMA1SPTRH       equ	15349	;# 
 12687   003BF6                     DMA1SPTRU       equ	15350	;# 
 12688   003BF7                     DMA1SSZ         equ	15351	;# 
 12689   003BF7                     DMA1SSZL        equ	15351	;# 
 12690   003BF8                     DMA1SSZH        equ	15352	;# 
 12691   003BF9                     DMA1SSA         equ	15353	;# 
 12692   003BF9                     DMA1SSAL        equ	15353	;# 
 12693   003BFA                     DMA1SSAH        equ	15354	;# 
 12694   003BFB                     DMA1SSAU        equ	15355	;# 
 12695   003BFC                     DMA1CON0        equ	15356	;# 
 12696   003BFD                     DMA1CON1        equ	15357	;# 
 12697   003BFE                     DMA1AIRQ        equ	15358	;# 
 12698   003BFF                     DMA1SIRQ        equ	15359	;# 
 12699   003C56                     CLC4CON         equ	15446	;# 
 12700   003C57                     CLC4POL         equ	15447	;# 
 12701   003C58                     CLC4SEL0        equ	15448	;# 
 12702   003C59                     CLC4SEL1        equ	15449	;# 
 12703   003C5A                     CLC4SEL2        equ	15450	;# 
 12704   003C5B                     CLC4SEL3        equ	15451	;# 
 12705   003C5C                     CLC4GLS0        equ	15452	;# 
 12706   003C5D                     CLC4GLS1        equ	15453	;# 
 12707   003C5E                     CLC4GLS2        equ	15454	;# 
 12708   003C5F                     CLC4GLS3        equ	15455	;# 
 12709   003C60                     CLC3CON         equ	15456	;# 
 12710   003C61                     CLC3POL         equ	15457	;# 
 12711   003C62                     CLC3SEL0        equ	15458	;# 
 12712   003C63                     CLC3SEL1        equ	15459	;# 
 12713   003C64                     CLC3SEL2        equ	15460	;# 
 12714   003C65                     CLC3SEL3        equ	15461	;# 
 12715   003C66                     CLC3GLS0        equ	15462	;# 
 12716   003C67                     CLC3GLS1        equ	15463	;# 
 12717   003C68                     CLC3GLS2        equ	15464	;# 
 12718   003C69                     CLC3GLS3        equ	15465	;# 
 12719   003C6A                     CLC2CON         equ	15466	;# 
 12720   003C6B                     CLC2POL         equ	15467	;# 
 12721   003C6C                     CLC2SEL0        equ	15468	;# 
 12722   003C6D                     CLC2SEL1        equ	15469	;# 
 12723   003C6E                     CLC2SEL2        equ	15470	;# 
 12724   003C6F                     CLC2SEL3        equ	15471	;# 
 12725   003C70                     CLC2GLS0        equ	15472	;# 
 12726   003C71                     CLC2GLS1        equ	15473	;# 
 12727   003C72                     CLC2GLS2        equ	15474	;# 
 12728   003C73                     CLC2GLS3        equ	15475	;# 
 12729   003C74                     CLC1CON         equ	15476	;# 
 12730   003C75                     CLC1POL         equ	15477	;# 
 12731   003C76                     CLC1SEL0        equ	15478	;# 
 12732   003C77                     CLC1SEL1        equ	15479	;# 
 12733   003C78                     CLC1SEL2        equ	15480	;# 
 12734   003C79                     CLC1SEL3        equ	15481	;# 
 12735   003C7A                     CLC1GLS0        equ	15482	;# 
 12736   003C7B                     CLC1GLS1        equ	15483	;# 
 12737   003C7C                     CLC1GLS2        equ	15484	;# 
 12738   003C7D                     CLC1GLS3        equ	15485	;# 
 12739   003C7E                     CLCDATA0        equ	15486	;# 
 12740   003CE5                     CLKRCON         equ	15589	;# 
 12741   003CE6                     CLKRCLK         equ	15590	;# 
 12742   003CFA                     MD1CON0         equ	15610	;# 
 12743   003CFB                     MD1CON1         equ	15611	;# 
 12744   003CFC                     MD1SRC          equ	15612	;# 
 12745   003CFD                     MD1CARL         equ	15613	;# 
 12746   003CFE                     MD1CARH         equ	15614	;# 
 12747   003D10                     SPI1RXB         equ	15632	;# 
 12748   003D11                     SPI1TXB         equ	15633	;# 
 12749   003D12                     SPI1TCNT        equ	15634	;# 
 12750   003D12                     SPI1TCNTL       equ	15634	;# 
 12751   003D13                     SPI1TCNTH       equ	15635	;# 
 12752   003D14                     SPI1CON0        equ	15636	;# 
 12753   003D15                     SPI1CON1        equ	15637	;# 
 12754   003D16                     SPI1CON2        equ	15638	;# 
 12755   003D17                     SPI1STATUS      equ	15639	;# 
 12756   003D18                     SPI1TWIDTH      equ	15640	;# 
 12757   003D19                     SPI1BAUD        equ	15641	;# 
 12758   003D1A                     SPI1INTF        equ	15642	;# 
 12759   003D1B                     SPI1INTE        equ	15643	;# 
 12760   003D1C                     SPI1CLK         equ	15644	;# 
 12761   003D54                     I2C2RXB         equ	15700	;# 
 12762   003D55                     I2C2TXB         equ	15701	;# 
 12763   003D56                     I2C2CNT         equ	15702	;# 
 12764   003D57                     I2C2ADB0        equ	15703	;# 
 12765   003D58                     I2C2ADB1        equ	15704	;# 
 12766   003D59                     I2C2ADR0        equ	15705	;# 
 12767   003D5A                     I2C2ADR1        equ	15706	;# 
 12768   003D5B                     I2C2ADR2        equ	15707	;# 
 12769   003D5C                     I2C2ADR3        equ	15708	;# 
 12770   003D5D                     I2C2CON0        equ	15709	;# 
 12771   003D5E                     I2C2CON1        equ	15710	;# 
 12772   003D5F                     I2C2CON2        equ	15711	;# 
 12773   003D60                     I2C2ERR         equ	15712	;# 
 12774   003D61                     I2C2STAT0       equ	15713	;# 
 12775   003D62                     I2C2STAT1       equ	15714	;# 
 12776   003D63                     I2C2PIR         equ	15715	;# 
 12777   003D64                     I2C2PIE         equ	15716	;# 
 12778   003D65                     I2C2CLK         equ	15717	;# 
 12779   003D66                     I2C2BTO         equ	15718	;# 
 12780   003D6A                     I2C1RXB         equ	15722	;# 
 12781   003D6B                     I2C1TXB         equ	15723	;# 
 12782   003D6C                     I2C1CNT         equ	15724	;# 
 12783   003D6D                     I2C1ADB0        equ	15725	;# 
 12784   003D6E                     I2C1ADB1        equ	15726	;# 
 12785   003D6F                     I2C1ADR0        equ	15727	;# 
 12786   003D70                     I2C1ADR1        equ	15728	;# 
 12787   003D71                     I2C1ADR2        equ	15729	;# 
 12788   003D72                     I2C1ADR3        equ	15730	;# 
 12789   003D73                     I2C1CON0        equ	15731	;# 
 12790   003D74                     I2C1CON1        equ	15732	;# 
 12791   003D75                     I2C1CON2        equ	15733	;# 
 12792   003D76                     I2C1ERR         equ	15734	;# 
 12793   003D77                     I2C1STAT0       equ	15735	;# 
 12794   003D78                     I2C1STAT1       equ	15736	;# 
 12795   003D79                     I2C1PIR         equ	15737	;# 
 12796   003D7A                     I2C1PIE         equ	15738	;# 
 12797   003D7B                     I2C1CLK         equ	15739	;# 
 12798   003D7C                     I2C1BTO         equ	15740	;# 
 12799   003DD0                     U2RXB           equ	15824	;# 
 12800   003DD0                     U2RXBL          equ	15824	;# 
 12801   003DD2                     U2TXB           equ	15826	;# 
 12802   003DD2                     U2TXBL          equ	15826	;# 
 12803   003DD4                     U2P1            equ	15828	;# 
 12804   003DD4                     U2P1L           equ	15828	;# 
 12805   003DD6                     U2P2            equ	15830	;# 
 12806   003DD6                     U2P2L           equ	15830	;# 
 12807   003DD8                     U2P3            equ	15832	;# 
 12808   003DD8                     U2P3L           equ	15832	;# 
 12809   003DDA                     U2CON0          equ	15834	;# 
 12810   003DDB                     U2CON1          equ	15835	;# 
 12811   003DDC                     U2CON2          equ	15836	;# 
 12812   003DDD                     U2BRG           equ	15837	;# 
 12813   003DDD                     U2BRGL          equ	15837	;# 
 12814   003DDE                     U2BRGH          equ	15838	;# 
 12815   003DDF                     U2FIFO          equ	15839	;# 
 12816   003DE0                     U2UIR           equ	15840	;# 
 12817   003DE1                     U2ERRIR         equ	15841	;# 
 12818   003DE2                     U2ERRIE         equ	15842	;# 
 12819   003DE8                     U1RXB           equ	15848	;# 
 12820   003DE8                     U1RXBL          equ	15848	;# 
 12821   003DE9                     U1RXCHK         equ	15849	;# 
 12822   003DEA                     U1TXB           equ	15850	;# 
 12823   003DEA                     U1TXBL          equ	15850	;# 
 12824   003DEB                     U1TXCHK         equ	15851	;# 
 12825   003DEC                     U1P1            equ	15852	;# 
 12826   003DEC                     U1P1L           equ	15852	;# 
 12827   003DED                     U1P1H           equ	15853	;# 
 12828   003DEE                     U1P2            equ	15854	;# 
 12829   003DEE                     U1P2L           equ	15854	;# 
 12830   003DEF                     U1P2H           equ	15855	;# 
 12831   003DF0                     U1P3            equ	15856	;# 
 12832   003DF0                     U1P3L           equ	15856	;# 
 12833   003DF1                     U1P3H           equ	15857	;# 
 12834   003DF2                     U1CON0          equ	15858	;# 
 12835   003DF3                     U1CON1          equ	15859	;# 
 12836   003DF4                     U1CON2          equ	15860	;# 
 12837   003DF5                     U1BRG           equ	15861	;# 
 12838   003DF5                     U1BRGL          equ	15861	;# 
 12839   003DF6                     U1BRGH          equ	15862	;# 
 12840   003DF7                     U1FIFO          equ	15863	;# 
 12841   003DF8                     U1UIR           equ	15864	;# 
 12842   003DF9                     U1ERRIR         equ	15865	;# 
 12843   003DFA                     U1ERRIE         equ	15866	;# 
 12844   003E9C                     DAC1CON1        equ	16028	;# 
 12845   003E9E                     DAC1CON0        equ	16030	;# 
 12846   003EB8                     CM2CON0         equ	16056	;# 
 12847   003EB9                     CM2CON1         equ	16057	;# 
 12848   003EBA                     CM2NCH          equ	16058	;# 
 12849   003EBB                     CM2PCH          equ	16059	;# 
 12850   003EBC                     CM1CON0         equ	16060	;# 
 12851   003EBD                     CM1CON1         equ	16061	;# 
 12852   003EBE                     CM1NCH          equ	16062	;# 
 12853   003EBF                     CM1PCH          equ	16063	;# 
 12854   003EC0                     CMOUT           equ	16064	;# 
 12855   003EC1                     FVRCON          equ	16065	;# 
 12856   003EC3                     ZCDCON          equ	16067	;# 
 12857   003EC9                     HLVDCON0        equ	16073	;# 
 12858   003ECA                     HLVDCON1        equ	16074	;# 
 12859   003ED7                     ADCP            equ	16087	;# 
 12860   003EDE                     ADLTH           equ	16094	;# 
 12861   003EDE                     ADLTHL          equ	16094	;# 
 12862   003EDF                     ADLTHH          equ	16095	;# 
 12863   003EE0                     ADUTH           equ	16096	;# 
 12864   003EE0                     ADUTHL          equ	16096	;# 
 12865   003EE1                     ADUTHH          equ	16097	;# 
 12866   003EE2                     ADERR           equ	16098	;# 
 12867   003EE2                     ADERRL          equ	16098	;# 
 12868   003EE3                     ADERRH          equ	16099	;# 
 12869   003EE4                     ADSTPT          equ	16100	;# 
 12870   003EE4                     ADSTPTL         equ	16100	;# 
 12871   003EE5                     ADSTPTH         equ	16101	;# 
 12872   003EE6                     ADFLTR          equ	16102	;# 
 12873   003EE6                     ADFLTRL         equ	16102	;# 
 12874   003EE7                     ADFLTRH         equ	16103	;# 
 12875   003EE8                     ADACC           equ	16104	;# 
 12876   003EE8                     ADACCL          equ	16104	;# 
 12877   003EE9                     ADACCH          equ	16105	;# 
 12878   003EEA                     ADACCU          equ	16106	;# 
 12879   003EEB                     ADCNT           equ	16107	;# 
 12880   003EEC                     ADRPT           equ	16108	;# 
 12881   003EED                     ADPREV          equ	16109	;# 
 12882   003EED                     ADPREVL         equ	16109	;# 
 12883   003EEE                     ADPREVH         equ	16110	;# 
 12884   003EEF                     ADRES           equ	16111	;# 
 12885   003EEF                     ADRESL          equ	16111	;# 
 12886   003EF0                     ADRESH          equ	16112	;# 
 12887   003EF1                     ADPCH           equ	16113	;# 
 12888   003EF3                     ADACQ           equ	16115	;# 
 12889   003EF3                     ADACQL          equ	16115	;# 
 12890   003EF4                     ADACQH          equ	16116	;# 
 12891   003EF5                     ADCAP           equ	16117	;# 
 12892   003EF6                     ADPRE           equ	16118	;# 
 12893   003EF6                     ADPREL          equ	16118	;# 
 12894   003EF7                     ADPREH          equ	16119	;# 
 12895   003EF8                     ADCON0          equ	16120	;# 
 12896   003EF9                     ADCON1          equ	16121	;# 
 12897   003EFA                     ADCON2          equ	16122	;# 
 12898   003EFB                     ADCON3          equ	16123	;# 
 12899   003EFC                     ADSTAT          equ	16124	;# 
 12900   003EFD                     ADREF           equ	16125	;# 
 12901   003EFE                     ADACT           equ	16126	;# 
 12902   003EFF                     ADCLK           equ	16127	;# 
 12903   003F12                     SMT1TMR         equ	16146	;# 
 12904   003F12                     SMT1TMRL        equ	16146	;# 
 12905   003F13                     SMT1TMRH        equ	16147	;# 
 12906   003F14                     SMT1TMRU        equ	16148	;# 
 12907   003F15                     SMT1CPR         equ	16149	;# 
 12908   003F15                     SMT1CPRL        equ	16149	;# 
 12909   003F16                     SMT1CPRH        equ	16150	;# 
 12910   003F17                     SMT1CPRU        equ	16151	;# 
 12911   003F18                     SMT1CPW         equ	16152	;# 
 12912   003F18                     SMT1CPWL        equ	16152	;# 
 12913   003F19                     SMT1CPWH        equ	16153	;# 
 12914   003F1A                     SMT1CPWU        equ	16154	;# 
 12915   003F1B                     SMT1PR          equ	16155	;# 
 12916   003F1B                     SMT1PRL         equ	16155	;# 
 12917   003F1C                     SMT1PRH         equ	16156	;# 
 12918   003F1D                     SMT1PRU         equ	16157	;# 
 12919   003F1E                     SMT1CON0        equ	16158	;# 
 12920   003F1F                     SMT1CON1        equ	16159	;# 
 12921   003F20                     SMT1STAT        equ	16160	;# 
 12922   003F21                     SMT1CLK         equ	16161	;# 
 12923   003F22                     SMT1SIG         equ	16162	;# 
 12924   003F23                     SMT1WIN         equ	16163	;# 
 12925   003F38                     NCO1ACC         equ	16184	;# 
 12926   003F38                     NCO1ACCL        equ	16184	;# 
 12927   003F39                     NCO1ACCH        equ	16185	;# 
 12928   003F3A                     NCO1ACCU        equ	16186	;# 
 12929   003F3B                     NCO1INC         equ	16187	;# 
 12930   003F3B                     NCO1INCL        equ	16187	;# 
 12931   003F3C                     NCO1INCH        equ	16188	;# 
 12932   003F3D                     NCO1INCU        equ	16189	;# 
 12933   003F3E                     NCO1CON         equ	16190	;# 
 12934   003F3F                     NCO1CLK         equ	16191	;# 
 12935   003F40                     CWG3CLK         equ	16192	;# 
 12936   003F40                     CWG3CLKCON      equ	16192	;# 
 12937   003F41                     CWG3ISM         equ	16193	;# 
 12938   003F41                     CWG3DAT         equ	16193	;# 
 12939   003F42                     CWG3DBR         equ	16194	;# 
 12940   003F43                     CWG3DBF         equ	16195	;# 
 12941   003F44                     CWG3CON0        equ	16196	;# 
 12942   003F45                     CWG3CON1        equ	16197	;# 
 12943   003F46                     CWG3AS0         equ	16198	;# 
 12944   003F47                     CWG3AS1         equ	16199	;# 
 12945   003F48                     CWG3STR         equ	16200	;# 
 12946   003F49                     CWG2CLK         equ	16201	;# 
 12947   003F49                     CWG2CLKCON      equ	16201	;# 
 12948   003F4A                     CWG2ISM         equ	16202	;# 
 12949   003F4A                     CWG2DAT         equ	16202	;# 
 12950   003F4B                     CWG2DBR         equ	16203	;# 
 12951   003F4C                     CWG2DBF         equ	16204	;# 
 12952   003F4D                     CWG2CON0        equ	16205	;# 
 12953   003F4E                     CWG2CON1        equ	16206	;# 
 12954   003F4F                     CWG2AS0         equ	16207	;# 
 12955   003F50                     CWG2AS1         equ	16208	;# 
 12956   003F51                     CWG2STR         equ	16209	;# 
 12957   003F52                     CWG1CLK         equ	16210	;# 
 12958   003F52                     CWG1CLKCON      equ	16210	;# 
 12959   003F53                     CWG1ISM         equ	16211	;# 
 12960   003F53                     CWG1DAT         equ	16211	;# 
 12961   003F54                     CWG1DBR         equ	16212	;# 
 12962   003F55                     CWG1DBF         equ	16213	;# 
 12963   003F56                     CWG1CON0        equ	16214	;# 
 12964   003F57                     CWG1CON1        equ	16215	;# 
 12965   003F58                     CWG1AS0         equ	16216	;# 
 12966   003F59                     CWG1AS1         equ	16217	;# 
 12967   003F5A                     CWG1STR         equ	16218	;# 
 12968   003F5E                     CCPTMRS0        equ	16222	;# 
 12969   003F5F                     CCPTMRS1        equ	16223	;# 
 12970   003F60                     PWM8DC          equ	16224	;# 
 12971   003F60                     PWM8DCL         equ	16224	;# 
 12972   003F61                     PWM8DCH         equ	16225	;# 
 12973   003F62                     PWM8CON         equ	16226	;# 
 12974   003F64                     PWM7DC          equ	16228	;# 
 12975   003F64                     PWM7DCL         equ	16228	;# 
 12976   003F65                     PWM7DCH         equ	16229	;# 
 12977   003F66                     PWM7CON         equ	16230	;# 
 12978   003F68                     PWM6DC          equ	16232	;# 
 12979   003F68                     PWM6DCL         equ	16232	;# 
 12980   003F69                     PWM6DCH         equ	16233	;# 
 12981   003F6A                     PWM6CON         equ	16234	;# 
 12982   003F6C                     PWM5DC          equ	16236	;# 
 12983   003F6C                     PWM5DCL         equ	16236	;# 
 12984   003F6D                     PWM5DCH         equ	16237	;# 
 12985   003F6E                     PWM5CON         equ	16238	;# 
 12986   003F70                     CCPR4           equ	16240	;# 
 12987   003F70                     CCPR4L          equ	16240	;# 
 12988   003F71                     CCPR4H          equ	16241	;# 
 12989   003F72                     CCP4CON         equ	16242	;# 
 12990   003F73                     CCP4CAP         equ	16243	;# 
 12991   003F74                     CCPR3           equ	16244	;# 
 12992   003F74                     CCPR3L          equ	16244	;# 
 12993   003F75                     CCPR3H          equ	16245	;# 
 12994   003F76                     CCP3CON         equ	16246	;# 
 12995   003F77                     CCP3CAP         equ	16247	;# 
 12996   003F78                     CCPR2           equ	16248	;# 
 12997   003F78                     CCPR2L          equ	16248	;# 
 12998   003F79                     CCPR2H          equ	16249	;# 
 12999   003F7A                     CCP2CON         equ	16250	;# 
 13000   003F7B                     CCP2CAP         equ	16251	;# 
 13001   003F7C                     CCPR1           equ	16252	;# 
 13002   003F7C                     CCPR1L          equ	16252	;# 
 13003   003F7D                     CCPR1H          equ	16253	;# 
 13004   003F7E                     CCP1CON         equ	16254	;# 
 13005   003F7F                     CCP1CAP         equ	16255	;# 
 13006   003F92                     T6TMR           equ	16274	;# 
 13007   003F92                     TMR6            equ	16274	;# 
 13008   003F93                     T6PR            equ	16275	;# 
 13009   003F93                     PR6             equ	16275	;# 
 13010   003F94                     T6CON           equ	16276	;# 
 13011   003F95                     T6HLT           equ	16277	;# 
 13012   003F96                     T6CLKCON        equ	16278	;# 
 13013   003F96                     T6CLK           equ	16278	;# 
 13014   003F97                     T6RST           equ	16279	;# 
 13015   003F98                     TMR5            equ	16280	;# 
 13016   003F98                     TMR5L           equ	16280	;# 
 13017   003F99                     TMR5H           equ	16281	;# 
 13018   003F9A                     T5CON           equ	16282	;# 
 13019   003F9A                     TMR5CON         equ	16282	;# 
 13020   003F9B                     T5GCON          equ	16283	;# 
 13021   003F9B                     TMR5GCON        equ	16283	;# 
 13022   003F9C                     T5GATE          equ	16284	;# 
 13023   003F9C                     TMR5GATE        equ	16284	;# 
 13024   003F9D                     T5CLK           equ	16285	;# 
 13025   003F9D                     TMR5CLK         equ	16285	;# 
 13026   003F9D                     PR5             equ	16285	;# 
 13027   003F9E                     T4TMR           equ	16286	;# 
 13028   003F9E                     TMR4            equ	16286	;# 
 13029   003F9F                     T4PR            equ	16287	;# 
 13030   003F9F                     PR4             equ	16287	;# 
 13031   003FA0                     T4CON           equ	16288	;# 
 13032   003FA1                     T4HLT           equ	16289	;# 
 13033   003FA2                     T4CLKCON        equ	16290	;# 
 13034   003FA2                     T4CLK           equ	16290	;# 
 13035   003FA3                     T4RST           equ	16291	;# 
 13036   003FA4                     TMR3            equ	16292	;# 
 13037   003FA4                     TMR3L           equ	16292	;# 
 13038   003FA5                     TMR3H           equ	16293	;# 
 13039   003FA6                     T3CON           equ	16294	;# 
 13040   003FA6                     TMR3CON         equ	16294	;# 
 13041   003FA7                     T3GCON          equ	16295	;# 
 13042   003FA7                     TMR3GCON        equ	16295	;# 
 13043   003FA8                     T3GATE          equ	16296	;# 
 13044   003FA8                     TMR3GATE        equ	16296	;# 
 13045   003FA9                     T3CLK           equ	16297	;# 
 13046   003FA9                     TMR3CLK         equ	16297	;# 
 13047   003FA9                     PR3             equ	16297	;# 
 13048   003FAA                     T2TMR           equ	16298	;# 
 13049   003FAA                     TMR2            equ	16298	;# 
 13050   003FAB                     T2PR            equ	16299	;# 
 13051   003FAB                     PR2             equ	16299	;# 
 13052   003FAC                     T2CON           equ	16300	;# 
 13053   003FAD                     T2HLT           equ	16301	;# 
 13054   003FAE                     T2CLKCON        equ	16302	;# 
 13055   003FAE                     T2CLK           equ	16302	;# 
 13056   003FAF                     T2RST           equ	16303	;# 
 13057   003FB0                     TMR1            equ	16304	;# 
 13058   003FB0                     TMR1L           equ	16304	;# 
 13059   003FB1                     TMR1H           equ	16305	;# 
 13060   003FB2                     T1CON           equ	16306	;# 
 13061   003FB2                     TMR1CON         equ	16306	;# 
 13062   003FB3                     T1GCON          equ	16307	;# 
 13063   003FB3                     TMR1GCON        equ	16307	;# 
 13064   003FB4                     T1GATE          equ	16308	;# 
 13065   003FB4                     TMR1GATE        equ	16308	;# 
 13066   003FB5                     T1CLK           equ	16309	;# 
 13067   003FB5                     TMR1CLK         equ	16309	;# 
 13068   003FB5                     PR1             equ	16309	;# 
 13069   003FB6                     TMR0L           equ	16310	;# 
 13070   003FB6                     TMR0            equ	16310	;# 
 13071   003FB7                     TMR0H           equ	16311	;# 
 13072   003FB7                     PR0             equ	16311	;# 
 13073   003FB8                     T0CON0          equ	16312	;# 
 13074   003FB9                     T0CON1          equ	16313	;# 
 13075   003FBA                     LATA            equ	16314	;# 
 13076   003FBB                     LATB            equ	16315	;# 
 13077   003FBC                     LATC            equ	16316	;# 
 13078   003FBD                     LATD            equ	16317	;# 
 13079   003FBE                     LATE            equ	16318	;# 
 13080   003FBF                     LATF            equ	16319	;# 
 13081   003FC2                     TRISA           equ	16322	;# 
 13082   003FC3                     TRISB           equ	16323	;# 
 13083   003FC4                     TRISC           equ	16324	;# 
 13084   003FC5                     TRISD           equ	16325	;# 
 13085   003FC6                     TRISE           equ	16326	;# 
 13086   003FC7                     TRISF           equ	16327	;# 
 13087   003FCA                     PORTA           equ	16330	;# 
 13088   003FCB                     PORTB           equ	16331	;# 
 13089   003FCC                     PORTC           equ	16332	;# 
 13090   003FCD                     PORTD           equ	16333	;# 
 13091   003FCE                     PORTE           equ	16334	;# 
 13092   003FCF                     PORTF           equ	16335	;# 
 13093   003FD2                     INTCON0         equ	16338	;# 
 13094   003FD3                     INTCON1         equ	16339	;# 
 13095   003FD4                     IVTLOCK         equ	16340	;# 
 13096   003FD5                     IVTBASE         equ	16341	;# 
 13097   003FD5                     IVTBASEL        equ	16341	;# 
 13098   003FD6                     IVTBASEH        equ	16342	;# 
 13099   003FD7                     IVTBASEU        equ	16343	;# 
 13100   003FD8                     STATUS          equ	16344	;# 
 13101   003FD9                     FSR2            equ	16345	;# 
 13102   003FD9                     FSR2L           equ	16345	;# 
 13103   003FDA                     FSR2H           equ	16346	;# 
 13104   003FDB                     PLUSW2          equ	16347	;# 
 13105   003FDC                     PREINC2         equ	16348	;# 
 13106   003FDD                     POSTDEC2        equ	16349	;# 
 13107   003FDE                     POSTINC2        equ	16350	;# 
 13108   003FDF                     INDF2           equ	16351	;# 
 13109   003FE0                     BSR             equ	16352	;# 
 13110   003FE1                     FSR1            equ	16353	;# 
 13111   003FE1                     FSR1L           equ	16353	;# 
 13112   003FE2                     FSR1H           equ	16354	;# 
 13113   003FE3                     PLUSW1          equ	16355	;# 
 13114   003FE4                     PREINC1         equ	16356	;# 
 13115   003FE5                     POSTDEC1        equ	16357	;# 
 13116   003FE6                     POSTINC1        equ	16358	;# 
 13117   003FE7                     INDF1           equ	16359	;# 
 13118   003FE8                     WREG            equ	16360	;# 
 13119   003FE9                     FSR0            equ	16361	;# 
 13120   003FE9                     FSR0L           equ	16361	;# 
 13121   003FEA                     FSR0H           equ	16362	;# 
 13122   003FEB                     PLUSW0          equ	16363	;# 
 13123   003FEC                     PREINC0         equ	16364	;# 
 13124   003FED                     POSTDEC0        equ	16365	;# 
 13125   003FEE                     POSTINC0        equ	16366	;# 
 13126   003FEF                     INDF0           equ	16367	;# 
 13127   003FF0                     PCON0           equ	16368	;# 
 13128   003FF1                     PCON1           equ	16369	;# 
 13129   003FF3                     PROD            equ	16371	;# 
 13130   003FF3                     PRODL           equ	16371	;# 
 13131   003FF4                     PRODH           equ	16372	;# 
 13132   003FF5                     TABLAT          equ	16373	;# 
 13133   003FF6                     TBLPTR          equ	16374	;# 
 13134   003FF6                     TBLPTRL         equ	16374	;# 
 13135   003FF7                     TBLPTRH         equ	16375	;# 
 13136   003FF8                     TBLPTRU         equ	16376	;# 
 13137   003FF9                     PCLAT           equ	16377	;# 
 13138   003FF9                     PCL             equ	16377	;# 
 13139   003FFA                     PCLATH          equ	16378	;# 
 13140   003FFB                     PCLATU          equ	16379	;# 
 13141   003FFC                     STKPTR          equ	16380	;# 
 13142   003FFD                     TOS             equ	16381	;# 
 13143   003FFD                     TOSL            equ	16381	;# 
 13144   003FFE                     TOSH            equ	16382	;# 
 13145   003FFF                     TOSU            equ	16383	;# 
 13146   003880                     STATUS_CSHAD    equ	14464	;# 
 13147   003881                     WREG_CSHAD      equ	14465	;# 
 13148   003882                     BSR_CSHAD       equ	14466	;# 
 13149   003883                     SHADCON         equ	14467	;# 
 13150   003884                     STATUS_SHAD     equ	14468	;# 
 13151   003885                     WREG_SHAD       equ	14469	;# 
 13152   003886                     BSR_SHAD        equ	14470	;# 
 13153   003887                     PCLATH_SHAD     equ	14471	;# 
 13154   003888                     PCLATU_SHAD     equ	14472	;# 
 13155   003889                     FSR0SH          equ	14473	;# 
 13156   003889                     FSR0L_SHAD      equ	14473	;# 
 13157   00388A                     FSR0H_SHAD      equ	14474	;# 
 13158   00388B                     FSR1SH          equ	14475	;# 
 13159   00388B                     FSR1L_SHAD      equ	14475	;# 
 13160   00388C                     FSR1H_SHAD      equ	14476	;# 
 13161   00388D                     FSR2SH          equ	14477	;# 
 13162   00388D                     FSR2L_SHAD      equ	14477	;# 
 13163   00388E                     FSR2H_SHAD      equ	14478	;# 
 13164   00388F                     PRODSH          equ	14479	;# 
 13165   00388F                     PRODL_SHAD      equ	14479	;# 
 13166   003890                     PRODH_SHAD      equ	14480	;# 
 13167   00389D                     IVTADL          equ	14493	;# 
 13168   00389E                     IVTADH          equ	14494	;# 
 13169   00389F                     IVTADU          equ	14495	;# 
 13170   00395B                     WDTCON0         equ	14683	;# 
 13171   00395C                     WDTCON1         equ	14684	;# 
 13172   00395D                     WDTPSL          equ	14685	;# 
 13173   00395E                     WDTPSH          equ	14686	;# 
 13174   00395F                     WDTTMR          equ	14687	;# 
 13175   003960                     CRCDATA         equ	14688	;# 
 13176   003960                     CRCDATL         equ	14688	;# 
 13177   003961                     CRCDATH         equ	14689	;# 
 13178   003962                     CRCACC          equ	14690	;# 
 13179   003962                     CRCACCL         equ	14690	;# 
 13180   003963                     CRCACCH         equ	14691	;# 
 13181   003964                     CRCSHFT         equ	14692	;# 
 13182   003964                     CRCSHIFTL       equ	14692	;# 
 13183   003965                     CRCSHIFTH       equ	14693	;# 
 13184   003966                     CRCXOR          equ	14694	;# 
 13185   003966                     CRCXORL         equ	14694	;# 
 13186   003967                     CRCXORH         equ	14695	;# 
 13187   003968                     CRCCON0         equ	14696	;# 
 13188   003969                     CRCCON1         equ	14697	;# 
 13189   003976                     SCANLADR        equ	14710	;# 
 13190   003976                     SCANLADRL       equ	14710	;# 
 13191   003977                     SCANLADRH       equ	14711	;# 
 13192   003978                     SCANLADRU       equ	14712	;# 
 13193   003979                     SCANHADR        equ	14713	;# 
 13194   003979                     SCANHADRL       equ	14713	;# 
 13195   00397A                     SCANHADRH       equ	14714	;# 
 13196   00397B                     SCANHADRU       equ	14715	;# 
 13197   00397C                     SCANCON0        equ	14716	;# 
 13198   00397D                     SCANTRIG        equ	14717	;# 
 13199   003980                     IPR0            equ	14720	;# 
 13200   003981                     IPR1            equ	14721	;# 
 13201   003982                     IPR2            equ	14722	;# 
 13202   003983                     IPR3            equ	14723	;# 
 13203   003984                     IPR4            equ	14724	;# 
 13204   003985                     IPR5            equ	14725	;# 
 13205   003986                     IPR6            equ	14726	;# 
 13206   003987                     IPR7            equ	14727	;# 
 13207   003988                     IPR8            equ	14728	;# 
 13208   003989                     IPR9            equ	14729	;# 
 13209   00398A                     IPR10           equ	14730	;# 
 13210   003990                     PIE0            equ	14736	;# 
 13211   003991                     PIE1            equ	14737	;# 
 13212   003992                     PIE2            equ	14738	;# 
 13213   003993                     PIE3            equ	14739	;# 
 13214   003994                     PIE4            equ	14740	;# 
 13215   003995                     PIE5            equ	14741	;# 
 13216   003996                     PIE6            equ	14742	;# 
 13217   003997                     PIE7            equ	14743	;# 
 13218   003998                     PIE8            equ	14744	;# 
 13219   003999                     PIE9            equ	14745	;# 
 13220   00399A                     PIE10           equ	14746	;# 
 13221   0039A0                     PIR0            equ	14752	;# 
 13222   0039A1                     PIR1            equ	14753	;# 
 13223   0039A2                     PIR2            equ	14754	;# 
 13224   0039A3                     PIR3            equ	14755	;# 
 13225   0039A4                     PIR4            equ	14756	;# 
 13226   0039A5                     PIR5            equ	14757	;# 
 13227   0039A6                     PIR6            equ	14758	;# 
 13228   0039A7                     PIR7            equ	14759	;# 
 13229   0039A8                     PIR8            equ	14760	;# 
 13230   0039A9                     PIR9            equ	14761	;# 
 13231   0039AA                     PIR10           equ	14762	;# 
 13232   0039C0                     PMD0            equ	14784	;# 
 13233   0039C1                     PMD1            equ	14785	;# 
 13234   0039C2                     PMD2            equ	14786	;# 
 13235   0039C3                     PMD3            equ	14787	;# 
 13236   0039C4                     PMD4            equ	14788	;# 
 13237   0039C5                     PMD5            equ	14789	;# 
 13238   0039C6                     PMD6            equ	14790	;# 
 13239   0039C7                     PMD7            equ	14791	;# 
 13240   0039D0                     BORCON          equ	14800	;# 
 13241   0039D1                     VREGCON         equ	14801	;# 
 13242   0039D8                     CPUDOZE         equ	14808	;# 
 13243   0039D9                     OSCCON1         equ	14809	;# 
 13244   0039DA                     OSCCON2         equ	14810	;# 
 13245   0039DB                     OSCCON3         equ	14811	;# 
 13246   0039DC                     OSCSTAT         equ	14812	;# 
 13247   0039DC                     OSCSTAT1        equ	14812	;# 
 13248   0039DD                     OSCEN           equ	14813	;# 
 13249   0039DE                     OSCTUNE         equ	14814	;# 
 13250   0039DF                     OSCFRQ          equ	14815	;# 
 13251   0039E0                     NVMADRL         equ	14816	;# 
 13252   0039E1                     NVMADRH         equ	14817	;# 
 13253   0039E3                     NVMDAT          equ	14819	;# 
 13254   0039E5                     NVMCON1         equ	14821	;# 
 13255   0039E6                     NVMCON2         equ	14822	;# 
 13256   0039EF                     PRLOCK          equ	14831	;# 
 13257   0039F1                     ISRPR           equ	14833	;# 
 13258   0039F2                     MAINPR          equ	14834	;# 
 13259   0039F3                     DMA1PR          equ	14835	;# 
 13260   0039F4                     DMA2PR          equ	14836	;# 
 13261   0039F7                     SCANPR          equ	14839	;# 
 13262   003A00                     RA0PPS          equ	14848	;# 
 13263   003A01                     RA1PPS          equ	14849	;# 
 13264   003A02                     RA2PPS          equ	14850	;# 
 13265   003A03                     RA3PPS          equ	14851	;# 
 13266   003A04                     RA4PPS          equ	14852	;# 
 13267   003A05                     RA5PPS          equ	14853	;# 
 13268   003A06                     RA6PPS          equ	14854	;# 
 13269   003A07                     RA7PPS          equ	14855	;# 
 13270   003A08                     RB0PPS          equ	14856	;# 
 13271   003A09                     RB1PPS          equ	14857	;# 
 13272   003A0A                     RB2PPS          equ	14858	;# 
 13273   003A0B                     RB3PPS          equ	14859	;# 
 13274   003A0C                     RB4PPS          equ	14860	;# 
 13275   003A0D                     RB5PPS          equ	14861	;# 
 13276   003A0E                     RB6PPS          equ	14862	;# 
 13277   003A0F                     RB7PPS          equ	14863	;# 
 13278   003A10                     RC0PPS          equ	14864	;# 
 13279   003A11                     RC1PPS          equ	14865	;# 
 13280   003A12                     RC2PPS          equ	14866	;# 
 13281   003A13                     RC3PPS          equ	14867	;# 
 13282   003A14                     RC4PPS          equ	14868	;# 
 13283   003A15                     RC5PPS          equ	14869	;# 
 13284   003A16                     RC6PPS          equ	14870	;# 
 13285   003A17                     RC7PPS          equ	14871	;# 
 13286   003A18                     RD0PPS          equ	14872	;# 
 13287   003A19                     RD1PPS          equ	14873	;# 
 13288   003A1A                     RD2PPS          equ	14874	;# 
 13289   003A1B                     RD3PPS          equ	14875	;# 
 13290   003A1C                     RD4PPS          equ	14876	;# 
 13291   003A1D                     RD5PPS          equ	14877	;# 
 13292   003A1E                     RD6PPS          equ	14878	;# 
 13293   003A1F                     RD7PPS          equ	14879	;# 
 13294   003A20                     RE0PPS          equ	14880	;# 
 13295   003A21                     RE1PPS          equ	14881	;# 
 13296   003A22                     RE2PPS          equ	14882	;# 
 13297   003A28                     RF0PPS          equ	14888	;# 
 13298   003A29                     RF1PPS          equ	14889	;# 
 13299   003A2A                     RF2PPS          equ	14890	;# 
 13300   003A2B                     RF3PPS          equ	14891	;# 
 13301   003A2C                     RF4PPS          equ	14892	;# 
 13302   003A2D                     RF5PPS          equ	14893	;# 
 13303   003A2E                     RF6PPS          equ	14894	;# 
 13304   003A2F                     RF7PPS          equ	14895	;# 
 13305   003A40                     ANSELA          equ	14912	;# 
 13306   003A41                     WPUA            equ	14913	;# 
 13307   003A42                     ODCONA          equ	14914	;# 
 13308   003A43                     SLRCONA         equ	14915	;# 
 13309   003A44                     INLVLA          equ	14916	;# 
 13310   003A45                     IOCAP           equ	14917	;# 
 13311   003A46                     IOCAN           equ	14918	;# 
 13312   003A47                     IOCAF           equ	14919	;# 
 13313   003A50                     ANSELB          equ	14928	;# 
 13314   003A51                     WPUB            equ	14929	;# 
 13315   003A52                     ODCONB          equ	14930	;# 
 13316   003A53                     SLRCONB         equ	14931	;# 
 13317   003A54                     INLVLB          equ	14932	;# 
 13318   003A55                     IOCBP           equ	14933	;# 
 13319   003A56                     IOCBN           equ	14934	;# 
 13320   003A57                     IOCBF           equ	14935	;# 
 13321   003A5A                     RB1I2C          equ	14938	;# 
 13322   003A5B                     RB2I2C          equ	14939	;# 
 13323   003A60                     ANSELC          equ	14944	;# 
 13324   003A61                     WPUC            equ	14945	;# 
 13325   003A62                     ODCONC          equ	14946	;# 
 13326   003A63                     SLRCONC         equ	14947	;# 
 13327   003A64                     INLVLC          equ	14948	;# 
 13328   003A65                     IOCCP           equ	14949	;# 
 13329   003A66                     IOCCN           equ	14950	;# 
 13330   003A67                     IOCCF           equ	14951	;# 
 13331   003A6A                     RC3I2C          equ	14954	;# 
 13332   003A6B                     RC4I2C          equ	14955	;# 
 13333   003A70                     ANSELD          equ	14960	;# 
 13334   003A71                     WPUD            equ	14961	;# 
 13335   003A72                     ODCOND          equ	14962	;# 
 13336   003A73                     SLRCOND         equ	14963	;# 
 13337   003A74                     INLVLD          equ	14964	;# 
 13338   003A7A                     RD0I2C          equ	14970	;# 
 13339   003A7B                     RD1I2C          equ	14971	;# 
 13340   003A80                     ANSELE          equ	14976	;# 
 13341   003A81                     WPUE            equ	14977	;# 
 13342   003A82                     ODCONE          equ	14978	;# 
 13343   003A83                     SLRCONE         equ	14979	;# 
 13344   003A84                     INLVLE          equ	14980	;# 
 13345   003A85                     IOCEP           equ	14981	;# 
 13346   003A86                     IOCEN           equ	14982	;# 
 13347   003A87                     IOCEF           equ	14983	;# 
 13348   003A90                     ANSELF          equ	14992	;# 
 13349   003A91                     WPUF            equ	14993	;# 
 13350   003A92                     ODCONF          equ	14994	;# 
 13351   003A93                     SLRCONF         equ	14995	;# 
 13352   003A94                     INLVLF          equ	14996	;# 
 13353   003ABF                     PPSLOCK         equ	15039	;# 
 13354   003AC0                     INT0PPS         equ	15040	;# 
 13355   003AC1                     INT1PPS         equ	15041	;# 
 13356   003AC2                     INT2PPS         equ	15042	;# 
 13357   003AC3                     T0CKIPPS        equ	15043	;# 
 13358   003AC4                     T1CKIPPS        equ	15044	;# 
 13359   003AC5                     T1GPPS          equ	15045	;# 
 13360   003AC6                     T3CKIPPS        equ	15046	;# 
 13361   003AC7                     T3GPPS          equ	15047	;# 
 13362   003AC8                     T5CKIPPS        equ	15048	;# 
 13363   003AC9                     T5GPPS          equ	15049	;# 
 13364   003ACA                     T2INPPS         equ	15050	;# 
 13365   003ACB                     T4INPPS         equ	15051	;# 
 13366   003ACC                     T6INPPS         equ	15052	;# 
 13367   003ACD                     CCP1PPS         equ	15053	;# 
 13368   003ACE                     CCP2PPS         equ	15054	;# 
 13369   003ACF                     CCP3PPS         equ	15055	;# 
 13370   003AD0                     CCP4PPS         equ	15056	;# 
 13371   003AD1                     SMT1WINPPS      equ	15057	;# 
 13372   003AD2                     SMT1SIGPPS      equ	15058	;# 
 13373   003AD3                     CWG1INPPS       equ	15059	;# 
 13374   003AD4                     CWG2INPPS       equ	15060	;# 
 13375   003AD5                     CWG3INPPS       equ	15061	;# 
 13376   003AD6                     MD1CARLPPS      equ	15062	;# 
 13377   003AD7                     MD1CARHPPS      equ	15063	;# 
 13378   003AD8                     MD1SRCPPS       equ	15064	;# 
 13379   003AD9                     CLCIN0PPS       equ	15065	;# 
 13380   003ADA                     CLCIN1PPS       equ	15066	;# 
 13381   003ADB                     CLCIN2PPS       equ	15067	;# 
 13382   003ADC                     CLCIN3PPS       equ	15068	;# 
 13383   003ADD                     ADACTPPS        equ	15069	;# 
 13384   003ADE                     SPI1SCKPPS      equ	15070	;# 
 13385   003ADF                     SPI1SDIPPS      equ	15071	;# 
 13386   003AE0                     SPI1SSPPS       equ	15072	;# 
 13387   003AE1                     I2C1SCLPPS      equ	15073	;# 
 13388   003AE2                     I2C1SDAPPS      equ	15074	;# 
 13389   003AE3                     I2C2SCLPPS      equ	15075	;# 
 13390   003AE4                     I2C2SDAPPS      equ	15076	;# 
 13391   003AE5                     U1RXPPS         equ	15077	;# 
 13392   003AE6                     U1CTSPPS        equ	15078	;# 
 13393   003AE8                     U2RXPPS         equ	15080	;# 
 13394   003AE9                     U2CTSPPS        equ	15081	;# 
 13395   003BC9                     DMA2BUF         equ	15305	;# 
 13396   003BCA                     DMA2DCNT        equ	15306	;# 
 13397   003BCA                     DMA2DCNTL       equ	15306	;# 
 13398   003BCB                     DMA2DCNTH       equ	15307	;# 
 13399   003BCC                     DMA2DPTR        equ	15308	;# 
 13400   003BCC                     DMA2DPTRL       equ	15308	;# 
 13401   003BCD                     DMA2DPTRH       equ	15309	;# 
 13402   003BCE                     DMA2DSZ         equ	15310	;# 
 13403   003BCE                     DMA2DSZL        equ	15310	;# 
 13404   003BCF                     DMA2DSZH        equ	15311	;# 
 13405   003BD0                     DMA2DSA         equ	15312	;# 
 13406   003BD0                     DMA2DSAL        equ	15312	;# 
 13407   003BD1                     DMA2DSAH        equ	15313	;# 
 13408   003BD2                     DMA2SCNT        equ	15314	;# 
 13409   003BD2                     DMA2SCNTL       equ	15314	;# 
 13410   003BD3                     DMA2SCNTH       equ	15315	;# 
 13411   003BD4                     DMA2SPTR        equ	15316	;# 
 13412   003BD4                     DMA2SPTRL       equ	15316	;# 
 13413   003BD5                     DMA2SPTRH       equ	15317	;# 
 13414   003BD6                     DMA2SPTRU       equ	15318	;# 
 13415   003BD7                     DMA2SSZ         equ	15319	;# 
 13416   003BD7                     DMA2SSZL        equ	15319	;# 
 13417   003BD8                     DMA2SSZH        equ	15320	;# 
 13418   003BD9                     DMA2SSA         equ	15321	;# 
 13419   003BD9                     DMA2SSAL        equ	15321	;# 
 13420   003BDA                     DMA2SSAH        equ	15322	;# 
 13421   003BDB                     DMA2SSAU        equ	15323	;# 
 13422   003BDC                     DMA2CON0        equ	15324	;# 
 13423   003BDD                     DMA2CON1        equ	15325	;# 
 13424   003BDE                     DMA2AIRQ        equ	15326	;# 
 13425   003BDF                     DMA2SIRQ        equ	15327	;# 
 13426   003BE9                     DMA1BUF         equ	15337	;# 
 13427   003BEA                     DMA1DCNT        equ	15338	;# 
 13428   003BEA                     DMA1DCNTL       equ	15338	;# 
 13429   003BEB                     DMA1DCNTH       equ	15339	;# 
 13430   003BEC                     DMA1DPTR        equ	15340	;# 
 13431   003BEC                     DMA1DPTRL       equ	15340	;# 
 13432   003BED                     DMA1DPTRH       equ	15341	;# 
 13433   003BEE                     DMA1DSZ         equ	15342	;# 
 13434   003BEE                     DMA1DSZL        equ	15342	;# 
 13435   003BEF                     DMA1DSZH        equ	15343	;# 
 13436   003BF0                     DMA1DSA         equ	15344	;# 
 13437   003BF0                     DMA1DSAL        equ	15344	;# 
 13438   003BF1                     DMA1DSAH        equ	15345	;# 
 13439   003BF2                     DMA1SCNT        equ	15346	;# 
 13440   003BF2                     DMA1SCNTL       equ	15346	;# 
 13441   003BF3                     DMA1SCNTH       equ	15347	;# 
 13442   003BF4                     DMA1SPTR        equ	15348	;# 
 13443   003BF4                     DMA1SPTRL       equ	15348	;# 
 13444   003BF5                     DMA1SPTRH       equ	15349	;# 
 13445   003BF6                     DMA1SPTRU       equ	15350	;# 
 13446   003BF7                     DMA1SSZ         equ	15351	;# 
 13447   003BF7                     DMA1SSZL        equ	15351	;# 
 13448   003BF8                     DMA1SSZH        equ	15352	;# 
 13449   003BF9                     DMA1SSA         equ	15353	;# 
 13450   003BF9                     DMA1SSAL        equ	15353	;# 
 13451   003BFA                     DMA1SSAH        equ	15354	;# 
 13452   003BFB                     DMA1SSAU        equ	15355	;# 
 13453   003BFC                     DMA1CON0        equ	15356	;# 
 13454   003BFD                     DMA1CON1        equ	15357	;# 
 13455   003BFE                     DMA1AIRQ        equ	15358	;# 
 13456   003BFF                     DMA1SIRQ        equ	15359	;# 
 13457   003C56                     CLC4CON         equ	15446	;# 
 13458   003C57                     CLC4POL         equ	15447	;# 
 13459   003C58                     CLC4SEL0        equ	15448	;# 
 13460   003C59                     CLC4SEL1        equ	15449	;# 
 13461   003C5A                     CLC4SEL2        equ	15450	;# 
 13462   003C5B                     CLC4SEL3        equ	15451	;# 
 13463   003C5C                     CLC4GLS0        equ	15452	;# 
 13464   003C5D                     CLC4GLS1        equ	15453	;# 
 13465   003C5E                     CLC4GLS2        equ	15454	;# 
 13466   003C5F                     CLC4GLS3        equ	15455	;# 
 13467   003C60                     CLC3CON         equ	15456	;# 
 13468   003C61                     CLC3POL         equ	15457	;# 
 13469   003C62                     CLC3SEL0        equ	15458	;# 
 13470   003C63                     CLC3SEL1        equ	15459	;# 
 13471   003C64                     CLC3SEL2        equ	15460	;# 
 13472   003C65                     CLC3SEL3        equ	15461	;# 
 13473   003C66                     CLC3GLS0        equ	15462	;# 
 13474   003C67                     CLC3GLS1        equ	15463	;# 
 13475   003C68                     CLC3GLS2        equ	15464	;# 
 13476   003C69                     CLC3GLS3        equ	15465	;# 
 13477   003C6A                     CLC2CON         equ	15466	;# 
 13478   003C6B                     CLC2POL         equ	15467	;# 
 13479   003C6C                     CLC2SEL0        equ	15468	;# 
 13480   003C6D                     CLC2SEL1        equ	15469	;# 
 13481   003C6E                     CLC2SEL2        equ	15470	;# 
 13482   003C6F                     CLC2SEL3        equ	15471	;# 
 13483   003C70                     CLC2GLS0        equ	15472	;# 
 13484   003C71                     CLC2GLS1        equ	15473	;# 
 13485   003C72                     CLC2GLS2        equ	15474	;# 
 13486   003C73                     CLC2GLS3        equ	15475	;# 
 13487   003C74                     CLC1CON         equ	15476	;# 
 13488   003C75                     CLC1POL         equ	15477	;# 
 13489   003C76                     CLC1SEL0        equ	15478	;# 
 13490   003C77                     CLC1SEL1        equ	15479	;# 
 13491   003C78                     CLC1SEL2        equ	15480	;# 
 13492   003C79                     CLC1SEL3        equ	15481	;# 
 13493   003C7A                     CLC1GLS0        equ	15482	;# 
 13494   003C7B                     CLC1GLS1        equ	15483	;# 
 13495   003C7C                     CLC1GLS2        equ	15484	;# 
 13496   003C7D                     CLC1GLS3        equ	15485	;# 
 13497   003C7E                     CLCDATA0        equ	15486	;# 
 13498   003CE5                     CLKRCON         equ	15589	;# 
 13499   003CE6                     CLKRCLK         equ	15590	;# 
 13500   003CFA                     MD1CON0         equ	15610	;# 
 13501   003CFB                     MD1CON1         equ	15611	;# 
 13502   003CFC                     MD1SRC          equ	15612	;# 
 13503   003CFD                     MD1CARL         equ	15613	;# 
 13504   003CFE                     MD1CARH         equ	15614	;# 
 13505   003D10                     SPI1RXB         equ	15632	;# 
 13506   003D11                     SPI1TXB         equ	15633	;# 
 13507   003D12                     SPI1TCNT        equ	15634	;# 
 13508   003D12                     SPI1TCNTL       equ	15634	;# 
 13509   003D13                     SPI1TCNTH       equ	15635	;# 
 13510   003D14                     SPI1CON0        equ	15636	;# 
 13511   003D15                     SPI1CON1        equ	15637	;# 
 13512   003D16                     SPI1CON2        equ	15638	;# 
 13513   003D17                     SPI1STATUS      equ	15639	;# 
 13514   003D18                     SPI1TWIDTH      equ	15640	;# 
 13515   003D19                     SPI1BAUD        equ	15641	;# 
 13516   003D1A                     SPI1INTF        equ	15642	;# 
 13517   003D1B                     SPI1INTE        equ	15643	;# 
 13518   003D1C                     SPI1CLK         equ	15644	;# 
 13519   003D54                     I2C2RXB         equ	15700	;# 
 13520   003D55                     I2C2TXB         equ	15701	;# 
 13521   003D56                     I2C2CNT         equ	15702	;# 
 13522   003D57                     I2C2ADB0        equ	15703	;# 
 13523   003D58                     I2C2ADB1        equ	15704	;# 
 13524   003D59                     I2C2ADR0        equ	15705	;# 
 13525   003D5A                     I2C2ADR1        equ	15706	;# 
 13526   003D5B                     I2C2ADR2        equ	15707	;# 
 13527   003D5C                     I2C2ADR3        equ	15708	;# 
 13528   003D5D                     I2C2CON0        equ	15709	;# 
 13529   003D5E                     I2C2CON1        equ	15710	;# 
 13530   003D5F                     I2C2CON2        equ	15711	;# 
 13531   003D60                     I2C2ERR         equ	15712	;# 
 13532   003D61                     I2C2STAT0       equ	15713	;# 
 13533   003D62                     I2C2STAT1       equ	15714	;# 
 13534   003D63                     I2C2PIR         equ	15715	;# 
 13535   003D64                     I2C2PIE         equ	15716	;# 
 13536   003D65                     I2C2CLK         equ	15717	;# 
 13537   003D66                     I2C2BTO         equ	15718	;# 
 13538   003D6A                     I2C1RXB         equ	15722	;# 
 13539   003D6B                     I2C1TXB         equ	15723	;# 
 13540   003D6C                     I2C1CNT         equ	15724	;# 
 13541   003D6D                     I2C1ADB0        equ	15725	;# 
 13542   003D6E                     I2C1ADB1        equ	15726	;# 
 13543   003D6F                     I2C1ADR0        equ	15727	;# 
 13544   003D70                     I2C1ADR1        equ	15728	;# 
 13545   003D71                     I2C1ADR2        equ	15729	;# 
 13546   003D72                     I2C1ADR3        equ	15730	;# 
 13547   003D73                     I2C1CON0        equ	15731	;# 
 13548   003D74                     I2C1CON1        equ	15732	;# 
 13549   003D75                     I2C1CON2        equ	15733	;# 
 13550   003D76                     I2C1ERR         equ	15734	;# 
 13551   003D77                     I2C1STAT0       equ	15735	;# 
 13552   003D78                     I2C1STAT1       equ	15736	;# 
 13553   003D79                     I2C1PIR         equ	15737	;# 
 13554   003D7A                     I2C1PIE         equ	15738	;# 
 13555   003D7B                     I2C1CLK         equ	15739	;# 
 13556   003D7C                     I2C1BTO         equ	15740	;# 
 13557   003DD0                     U2RXB           equ	15824	;# 
 13558   003DD0                     U2RXBL          equ	15824	;# 
 13559   003DD2                     U2TXB           equ	15826	;# 
 13560   003DD2                     U2TXBL          equ	15826	;# 
 13561   003DD4                     U2P1            equ	15828	;# 
 13562   003DD4                     U2P1L           equ	15828	;# 
 13563   003DD6                     U2P2            equ	15830	;# 
 13564   003DD6                     U2P2L           equ	15830	;# 
 13565   003DD8                     U2P3            equ	15832	;# 
 13566   003DD8                     U2P3L           equ	15832	;# 
 13567   003DDA                     U2CON0          equ	15834	;# 
 13568   003DDB                     U2CON1          equ	15835	;# 
 13569   003DDC                     U2CON2          equ	15836	;# 
 13570   003DDD                     U2BRG           equ	15837	;# 
 13571   003DDD                     U2BRGL          equ	15837	;# 
 13572   003DDE                     U2BRGH          equ	15838	;# 
 13573   003DDF                     U2FIFO          equ	15839	;# 
 13574   003DE0                     U2UIR           equ	15840	;# 
 13575   003DE1                     U2ERRIR         equ	15841	;# 
 13576   003DE2                     U2ERRIE         equ	15842	;# 
 13577   003DE8                     U1RXB           equ	15848	;# 
 13578   003DE8                     U1RXBL          equ	15848	;# 
 13579   003DE9                     U1RXCHK         equ	15849	;# 
 13580   003DEA                     U1TXB           equ	15850	;# 
 13581   003DEA                     U1TXBL          equ	15850	;# 
 13582   003DEB                     U1TXCHK         equ	15851	;# 
 13583   003DEC                     U1P1            equ	15852	;# 
 13584   003DEC                     U1P1L           equ	15852	;# 
 13585   003DED                     U1P1H           equ	15853	;# 
 13586   003DEE                     U1P2            equ	15854	;# 
 13587   003DEE                     U1P2L           equ	15854	;# 
 13588   003DEF                     U1P2H           equ	15855	;# 
 13589   003DF0                     U1P3            equ	15856	;# 
 13590   003DF0                     U1P3L           equ	15856	;# 
 13591   003DF1                     U1P3H           equ	15857	;# 
 13592   003DF2                     U1CON0          equ	15858	;# 
 13593   003DF3                     U1CON1          equ	15859	;# 
 13594   003DF4                     U1CON2          equ	15860	;# 
 13595   003DF5                     U1BRG           equ	15861	;# 
 13596   003DF5                     U1BRGL          equ	15861	;# 
 13597   003DF6                     U1BRGH          equ	15862	;# 
 13598   003DF7                     U1FIFO          equ	15863	;# 
 13599   003DF8                     U1UIR           equ	15864	;# 
 13600   003DF9                     U1ERRIR         equ	15865	;# 
 13601   003DFA                     U1ERRIE         equ	15866	;# 
 13602   003E9C                     DAC1CON1        equ	16028	;# 
 13603   003E9E                     DAC1CON0        equ	16030	;# 
 13604   003EB8                     CM2CON0         equ	16056	;# 
 13605   003EB9                     CM2CON1         equ	16057	;# 
 13606   003EBA                     CM2NCH          equ	16058	;# 
 13607   003EBB                     CM2PCH          equ	16059	;# 
 13608   003EBC                     CM1CON0         equ	16060	;# 
 13609   003EBD                     CM1CON1         equ	16061	;# 
 13610   003EBE                     CM1NCH          equ	16062	;# 
 13611   003EBF                     CM1PCH          equ	16063	;# 
 13612   003EC0                     CMOUT           equ	16064	;# 
 13613   003EC1                     FVRCON          equ	16065	;# 
 13614   003EC3                     ZCDCON          equ	16067	;# 
 13615   003EC9                     HLVDCON0        equ	16073	;# 
 13616   003ECA                     HLVDCON1        equ	16074	;# 
 13617   003ED7                     ADCP            equ	16087	;# 
 13618   003EDE                     ADLTH           equ	16094	;# 
 13619   003EDE                     ADLTHL          equ	16094	;# 
 13620   003EDF                     ADLTHH          equ	16095	;# 
 13621   003EE0                     ADUTH           equ	16096	;# 
 13622   003EE0                     ADUTHL          equ	16096	;# 
 13623   003EE1                     ADUTHH          equ	16097	;# 
 13624   003EE2                     ADERR           equ	16098	;# 
 13625   003EE2                     ADERRL          equ	16098	;# 
 13626   003EE3                     ADERRH          equ	16099	;# 
 13627   003EE4                     ADSTPT          equ	16100	;# 
 13628   003EE4                     ADSTPTL         equ	16100	;# 
 13629   003EE5                     ADSTPTH         equ	16101	;# 
 13630   003EE6                     ADFLTR          equ	16102	;# 
 13631   003EE6                     ADFLTRL         equ	16102	;# 
 13632   003EE7                     ADFLTRH         equ	16103	;# 
 13633   003EE8                     ADACC           equ	16104	;# 
 13634   003EE8                     ADACCL          equ	16104	;# 
 13635   003EE9                     ADACCH          equ	16105	;# 
 13636   003EEA                     ADACCU          equ	16106	;# 
 13637   003EEB                     ADCNT           equ	16107	;# 
 13638   003EEC                     ADRPT           equ	16108	;# 
 13639   003EED                     ADPREV          equ	16109	;# 
 13640   003EED                     ADPREVL         equ	16109	;# 
 13641   003EEE                     ADPREVH         equ	16110	;# 
 13642   003EEF                     ADRES           equ	16111	;# 
 13643   003EEF                     ADRESL          equ	16111	;# 
 13644   003EF0                     ADRESH          equ	16112	;# 
 13645   003EF1                     ADPCH           equ	16113	;# 
 13646   003EF3                     ADACQ           equ	16115	;# 
 13647   003EF3                     ADACQL          equ	16115	;# 
 13648   003EF4                     ADACQH          equ	16116	;# 
 13649   003EF5                     ADCAP           equ	16117	;# 
 13650   003EF6                     ADPRE           equ	16118	;# 
 13651   003EF6                     ADPREL          equ	16118	;# 
 13652   003EF7                     ADPREH          equ	16119	;# 
 13653   003EF8                     ADCON0          equ	16120	;# 
 13654   003EF9                     ADCON1          equ	16121	;# 
 13655   003EFA                     ADCON2          equ	16122	;# 
 13656   003EFB                     ADCON3          equ	16123	;# 
 13657   003EFC                     ADSTAT          equ	16124	;# 
 13658   003EFD                     ADREF           equ	16125	;# 
 13659   003EFE                     ADACT           equ	16126	;# 
 13660   003EFF                     ADCLK           equ	16127	;# 
 13661   003F12                     SMT1TMR         equ	16146	;# 
 13662   003F12                     SMT1TMRL        equ	16146	;# 
 13663   003F13                     SMT1TMRH        equ	16147	;# 
 13664   003F14                     SMT1TMRU        equ	16148	;# 
 13665   003F15                     SMT1CPR         equ	16149	;# 
 13666   003F15                     SMT1CPRL        equ	16149	;# 
 13667   003F16                     SMT1CPRH        equ	16150	;# 
 13668   003F17                     SMT1CPRU        equ	16151	;# 
 13669   003F18                     SMT1CPW         equ	16152	;# 
 13670   003F18                     SMT1CPWL        equ	16152	;# 
 13671   003F19                     SMT1CPWH        equ	16153	;# 
 13672   003F1A                     SMT1CPWU        equ	16154	;# 
 13673   003F1B                     SMT1PR          equ	16155	;# 
 13674   003F1B                     SMT1PRL         equ	16155	;# 
 13675   003F1C                     SMT1PRH         equ	16156	;# 
 13676   003F1D                     SMT1PRU         equ	16157	;# 
 13677   003F1E                     SMT1CON0        equ	16158	;# 
 13678   003F1F                     SMT1CON1        equ	16159	;# 
 13679   003F20                     SMT1STAT        equ	16160	;# 
 13680   003F21                     SMT1CLK         equ	16161	;# 
 13681   003F22                     SMT1SIG         equ	16162	;# 
 13682   003F23                     SMT1WIN         equ	16163	;# 
 13683   003F38                     NCO1ACC         equ	16184	;# 
 13684   003F38                     NCO1ACCL        equ	16184	;# 
 13685   003F39                     NCO1ACCH        equ	16185	;# 
 13686   003F3A                     NCO1ACCU        equ	16186	;# 
 13687   003F3B                     NCO1INC         equ	16187	;# 
 13688   003F3B                     NCO1INCL        equ	16187	;# 
 13689   003F3C                     NCO1INCH        equ	16188	;# 
 13690   003F3D                     NCO1INCU        equ	16189	;# 
 13691   003F3E                     NCO1CON         equ	16190	;# 
 13692   003F3F                     NCO1CLK         equ	16191	;# 
 13693   003F40                     CWG3CLK         equ	16192	;# 
 13694   003F40                     CWG3CLKCON      equ	16192	;# 
 13695   003F41                     CWG3ISM         equ	16193	;# 
 13696   003F41                     CWG3DAT         equ	16193	;# 
 13697   003F42                     CWG3DBR         equ	16194	;# 
 13698   003F43                     CWG3DBF         equ	16195	;# 
 13699   003F44                     CWG3CON0        equ	16196	;# 
 13700   003F45                     CWG3CON1        equ	16197	;# 
 13701   003F46                     CWG3AS0         equ	16198	;# 
 13702   003F47                     CWG3AS1         equ	16199	;# 
 13703   003F48                     CWG3STR         equ	16200	;# 
 13704   003F49                     CWG2CLK         equ	16201	;# 
 13705   003F49                     CWG2CLKCON      equ	16201	;# 
 13706   003F4A                     CWG2ISM         equ	16202	;# 
 13707   003F4A                     CWG2DAT         equ	16202	;# 
 13708   003F4B                     CWG2DBR         equ	16203	;# 
 13709   003F4C                     CWG2DBF         equ	16204	;# 
 13710   003F4D                     CWG2CON0        equ	16205	;# 
 13711   003F4E                     CWG2CON1        equ	16206	;# 
 13712   003F4F                     CWG2AS0         equ	16207	;# 
 13713   003F50                     CWG2AS1         equ	16208	;# 
 13714   003F51                     CWG2STR         equ	16209	;# 
 13715   003F52                     CWG1CLK         equ	16210	;# 
 13716   003F52                     CWG1CLKCON      equ	16210	;# 
 13717   003F53                     CWG1ISM         equ	16211	;# 
 13718   003F53                     CWG1DAT         equ	16211	;# 
 13719   003F54                     CWG1DBR         equ	16212	;# 
 13720   003F55                     CWG1DBF         equ	16213	;# 
 13721   003F56                     CWG1CON0        equ	16214	;# 
 13722   003F57                     CWG1CON1        equ	16215	;# 
 13723   003F58                     CWG1AS0         equ	16216	;# 
 13724   003F59                     CWG1AS1         equ	16217	;# 
 13725   003F5A                     CWG1STR         equ	16218	;# 
 13726   003F5E                     CCPTMRS0        equ	16222	;# 
 13727   003F5F                     CCPTMRS1        equ	16223	;# 
 13728   003F60                     PWM8DC          equ	16224	;# 
 13729   003F60                     PWM8DCL         equ	16224	;# 
 13730   003F61                     PWM8DCH         equ	16225	;# 
 13731   003F62                     PWM8CON         equ	16226	;# 
 13732   003F64                     PWM7DC          equ	16228	;# 
 13733   003F64                     PWM7DCL         equ	16228	;# 
 13734   003F65                     PWM7DCH         equ	16229	;# 
 13735   003F66                     PWM7CON         equ	16230	;# 
 13736   003F68                     PWM6DC          equ	16232	;# 
 13737   003F68                     PWM6DCL         equ	16232	;# 
 13738   003F69                     PWM6DCH         equ	16233	;# 
 13739   003F6A                     PWM6CON         equ	16234	;# 
 13740   003F6C                     PWM5DC          equ	16236	;# 
 13741   003F6C                     PWM5DCL         equ	16236	;# 
 13742   003F6D                     PWM5DCH         equ	16237	;# 
 13743   003F6E                     PWM5CON         equ	16238	;# 
 13744   003F70                     CCPR4           equ	16240	;# 
 13745   003F70                     CCPR4L          equ	16240	;# 
 13746   003F71                     CCPR4H          equ	16241	;# 
 13747   003F72                     CCP4CON         equ	16242	;# 
 13748   003F73                     CCP4CAP         equ	16243	;# 
 13749   003F74                     CCPR3           equ	16244	;# 
 13750   003F74                     CCPR3L          equ	16244	;# 
 13751   003F75                     CCPR3H          equ	16245	;# 
 13752   003F76                     CCP3CON         equ	16246	;# 
 13753   003F77                     CCP3CAP         equ	16247	;# 
 13754   003F78                     CCPR2           equ	16248	;# 
 13755   003F78                     CCPR2L          equ	16248	;# 
 13756   003F79                     CCPR2H          equ	16249	;# 
 13757   003F7A                     CCP2CON         equ	16250	;# 
 13758   003F7B                     CCP2CAP         equ	16251	;# 
 13759   003F7C                     CCPR1           equ	16252	;# 
 13760   003F7C                     CCPR1L          equ	16252	;# 
 13761   003F7D                     CCPR1H          equ	16253	;# 
 13762   003F7E                     CCP1CON         equ	16254	;# 
 13763   003F7F                     CCP1CAP         equ	16255	;# 
 13764   003F92                     T6TMR           equ	16274	;# 
 13765   003F92                     TMR6            equ	16274	;# 
 13766   003F93                     T6PR            equ	16275	;# 
 13767   003F93                     PR6             equ	16275	;# 
 13768   003F94                     T6CON           equ	16276	;# 
 13769   003F95                     T6HLT           equ	16277	;# 
 13770   003F96                     T6CLKCON        equ	16278	;# 
 13771   003F96                     T6CLK           equ	16278	;# 
 13772   003F97                     T6RST           equ	16279	;# 
 13773   003F98                     TMR5            equ	16280	;# 
 13774   003F98                     TMR5L           equ	16280	;# 
 13775   003F99                     TMR5H           equ	16281	;# 
 13776   003F9A                     T5CON           equ	16282	;# 
 13777   003F9A                     TMR5CON         equ	16282	;# 
 13778   003F9B                     T5GCON          equ	16283	;# 
 13779   003F9B                     TMR5GCON        equ	16283	;# 
 13780   003F9C                     T5GATE          equ	16284	;# 
 13781   003F9C                     TMR5GATE        equ	16284	;# 
 13782   003F9D                     T5CLK           equ	16285	;# 
 13783   003F9D                     TMR5CLK         equ	16285	;# 
 13784   003F9D                     PR5             equ	16285	;# 
 13785   003F9E                     T4TMR           equ	16286	;# 
 13786   003F9E                     TMR4            equ	16286	;# 
 13787   003F9F                     T4PR            equ	16287	;# 
 13788   003F9F                     PR4             equ	16287	;# 
 13789   003FA0                     T4CON           equ	16288	;# 
 13790   003FA1                     T4HLT           equ	16289	;# 
 13791   003FA2                     T4CLKCON        equ	16290	;# 
 13792   003FA2                     T4CLK           equ	16290	;# 
 13793   003FA3                     T4RST           equ	16291	;# 
 13794   003FA4                     TMR3            equ	16292	;# 
 13795   003FA4                     TMR3L           equ	16292	;# 
 13796   003FA5                     TMR3H           equ	16293	;# 
 13797   003FA6                     T3CON           equ	16294	;# 
 13798   003FA6                     TMR3CON         equ	16294	;# 
 13799   003FA7                     T3GCON          equ	16295	;# 
 13800   003FA7                     TMR3GCON        equ	16295	;# 
 13801   003FA8                     T3GATE          equ	16296	;# 
 13802   003FA8                     TMR3GATE        equ	16296	;# 
 13803   003FA9                     T3CLK           equ	16297	;# 
 13804   003FA9                     TMR3CLK         equ	16297	;# 
 13805   003FA9                     PR3             equ	16297	;# 
 13806   003FAA                     T2TMR           equ	16298	;# 
 13807   003FAA                     TMR2            equ	16298	;# 
 13808   003FAB                     T2PR            equ	16299	;# 
 13809   003FAB                     PR2             equ	16299	;# 
 13810   003FAC                     T2CON           equ	16300	;# 
 13811   003FAD                     T2HLT           equ	16301	;# 
 13812   003FAE                     T2CLKCON        equ	16302	;# 
 13813   003FAE                     T2CLK           equ	16302	;# 
 13814   003FAF                     T2RST           equ	16303	;# 
 13815   003FB0                     TMR1            equ	16304	;# 
 13816   003FB0                     TMR1L           equ	16304	;# 
 13817   003FB1                     TMR1H           equ	16305	;# 
 13818   003FB2                     T1CON           equ	16306	;# 
 13819   003FB2                     TMR1CON         equ	16306	;# 
 13820   003FB3                     T1GCON          equ	16307	;# 
 13821   003FB3                     TMR1GCON        equ	16307	;# 
 13822   003FB4                     T1GATE          equ	16308	;# 
 13823   003FB4                     TMR1GATE        equ	16308	;# 
 13824   003FB5                     T1CLK           equ	16309	;# 
 13825   003FB5                     TMR1CLK         equ	16309	;# 
 13826   003FB5                     PR1             equ	16309	;# 
 13827   003FB6                     TMR0L           equ	16310	;# 
 13828   003FB6                     TMR0            equ	16310	;# 
 13829   003FB7                     TMR0H           equ	16311	;# 
 13830   003FB7                     PR0             equ	16311	;# 
 13831   003FB8                     T0CON0          equ	16312	;# 
 13832   003FB9                     T0CON1          equ	16313	;# 
 13833   003FBA                     LATA            equ	16314	;# 
 13834   003FBB                     LATB            equ	16315	;# 
 13835   003FBC                     LATC            equ	16316	;# 
 13836   003FBD                     LATD            equ	16317	;# 
 13837   003FBE                     LATE            equ	16318	;# 
 13838   003FBF                     LATF            equ	16319	;# 
 13839   003FC2                     TRISA           equ	16322	;# 
 13840   003FC3                     TRISB           equ	16323	;# 
 13841   003FC4                     TRISC           equ	16324	;# 
 13842   003FC5                     TRISD           equ	16325	;# 
 13843   003FC6                     TRISE           equ	16326	;# 
 13844   003FC7                     TRISF           equ	16327	;# 
 13845   003FCA                     PORTA           equ	16330	;# 
 13846   003FCB                     PORTB           equ	16331	;# 
 13847   003FCC                     PORTC           equ	16332	;# 
 13848   003FCD                     PORTD           equ	16333	;# 
 13849   003FCE                     PORTE           equ	16334	;# 
 13850   003FCF                     PORTF           equ	16335	;# 
 13851   003FD2                     INTCON0         equ	16338	;# 
 13852   003FD3                     INTCON1         equ	16339	;# 
 13853   003FD4                     IVTLOCK         equ	16340	;# 
 13854   003FD5                     IVTBASE         equ	16341	;# 
 13855   003FD5                     IVTBASEL        equ	16341	;# 
 13856   003FD6                     IVTBASEH        equ	16342	;# 
 13857   003FD7                     IVTBASEU        equ	16343	;# 
 13858   003FD8                     STATUS          equ	16344	;# 
 13859   003FD9                     FSR2            equ	16345	;# 
 13860   003FD9                     FSR2L           equ	16345	;# 
 13861   003FDA                     FSR2H           equ	16346	;# 
 13862   003FDB                     PLUSW2          equ	16347	;# 
 13863   003FDC                     PREINC2         equ	16348	;# 
 13864   003FDD                     POSTDEC2        equ	16349	;# 
 13865   003FDE                     POSTINC2        equ	16350	;# 
 13866   003FDF                     INDF2           equ	16351	;# 
 13867   003FE0                     BSR             equ	16352	;# 
 13868   003FE1                     FSR1            equ	16353	;# 
 13869   003FE1                     FSR1L           equ	16353	;# 
 13870   003FE2                     FSR1H           equ	16354	;# 
 13871   003FE3                     PLUSW1          equ	16355	;# 
 13872   003FE4                     PREINC1         equ	16356	;# 
 13873   003FE5                     POSTDEC1        equ	16357	;# 
 13874   003FE6                     POSTINC1        equ	16358	;# 
 13875   003FE7                     INDF1           equ	16359	;# 
 13876   003FE8                     WREG            equ	16360	;# 
 13877   003FE9                     FSR0            equ	16361	;# 
 13878   003FE9                     FSR0L           equ	16361	;# 
 13879   003FEA                     FSR0H           equ	16362	;# 
 13880   003FEB                     PLUSW0          equ	16363	;# 
 13881   003FEC                     PREINC0         equ	16364	;# 
 13882   003FED                     POSTDEC0        equ	16365	;# 
 13883   003FEE                     POSTINC0        equ	16366	;# 
 13884   003FEF                     INDF0           equ	16367	;# 
 13885   003FF0                     PCON0           equ	16368	;# 
 13886   003FF1                     PCON1           equ	16369	;# 
 13887   003FF3                     PROD            equ	16371	;# 
 13888   003FF3                     PRODL           equ	16371	;# 
 13889   003FF4                     PRODH           equ	16372	;# 
 13890   003FF5                     TABLAT          equ	16373	;# 
 13891   003FF6                     TBLPTR          equ	16374	;# 
 13892   003FF6                     TBLPTRL         equ	16374	;# 
 13893   003FF7                     TBLPTRH         equ	16375	;# 
 13894   003FF8                     TBLPTRU         equ	16376	;# 
 13895   003FF9                     PCLAT           equ	16377	;# 
 13896   003FF9                     PCL             equ	16377	;# 
 13897   003FFA                     PCLATH          equ	16378	;# 
 13898   003FFB                     PCLATU          equ	16379	;# 
 13899   003FFC                     STKPTR          equ	16380	;# 
 13900   003FFD                     TOS             equ	16381	;# 
 13901   003FFD                     TOSL            equ	16381	;# 
 13902   003FFE                     TOSH            equ	16382	;# 
 13903   003FFF                     TOSU            equ	16383	;# 
 13904   003880                     STATUS_CSHAD    equ	14464	;# 
 13905   003881                     WREG_CSHAD      equ	14465	;# 
 13906   003882                     BSR_CSHAD       equ	14466	;# 
 13907   003883                     SHADCON         equ	14467	;# 
 13908   003884                     STATUS_SHAD     equ	14468	;# 
 13909   003885                     WREG_SHAD       equ	14469	;# 
 13910   003886                     BSR_SHAD        equ	14470	;# 
 13911   003887                     PCLATH_SHAD     equ	14471	;# 
 13912   003888                     PCLATU_SHAD     equ	14472	;# 
 13913   003889                     FSR0SH          equ	14473	;# 
 13914   003889                     FSR0L_SHAD      equ	14473	;# 
 13915   00388A                     FSR0H_SHAD      equ	14474	;# 
 13916   00388B                     FSR1SH          equ	14475	;# 
 13917   00388B                     FSR1L_SHAD      equ	14475	;# 
 13918   00388C                     FSR1H_SHAD      equ	14476	;# 
 13919   00388D                     FSR2SH          equ	14477	;# 
 13920   00388D                     FSR2L_SHAD      equ	14477	;# 
 13921   00388E                     FSR2H_SHAD      equ	14478	;# 
 13922   00388F                     PRODSH          equ	14479	;# 
 13923   00388F                     PRODL_SHAD      equ	14479	;# 
 13924   003890                     PRODH_SHAD      equ	14480	;# 
 13925   00389D                     IVTADL          equ	14493	;# 
 13926   00389E                     IVTADH          equ	14494	;# 
 13927   00389F                     IVTADU          equ	14495	;# 
 13928   00395B                     WDTCON0         equ	14683	;# 
 13929   00395C                     WDTCON1         equ	14684	;# 
 13930   00395D                     WDTPSL          equ	14685	;# 
 13931   00395E                     WDTPSH          equ	14686	;# 
 13932   00395F                     WDTTMR          equ	14687	;# 
 13933   003960                     CRCDATA         equ	14688	;# 
 13934   003960                     CRCDATL         equ	14688	;# 
 13935   003961                     CRCDATH         equ	14689	;# 
 13936   003962                     CRCACC          equ	14690	;# 
 13937   003962                     CRCACCL         equ	14690	;# 
 13938   003963                     CRCACCH         equ	14691	;# 
 13939   003964                     CRCSHFT         equ	14692	;# 
 13940   003964                     CRCSHIFTL       equ	14692	;# 
 13941   003965                     CRCSHIFTH       equ	14693	;# 
 13942   003966                     CRCXOR          equ	14694	;# 
 13943   003966                     CRCXORL         equ	14694	;# 
 13944   003967                     CRCXORH         equ	14695	;# 
 13945   003968                     CRCCON0         equ	14696	;# 
 13946   003969                     CRCCON1         equ	14697	;# 
 13947   003976                     SCANLADR        equ	14710	;# 
 13948   003976                     SCANLADRL       equ	14710	;# 
 13949   003977                     SCANLADRH       equ	14711	;# 
 13950   003978                     SCANLADRU       equ	14712	;# 
 13951   003979                     SCANHADR        equ	14713	;# 
 13952   003979                     SCANHADRL       equ	14713	;# 
 13953   00397A                     SCANHADRH       equ	14714	;# 
 13954   00397B                     SCANHADRU       equ	14715	;# 
 13955   00397C                     SCANCON0        equ	14716	;# 
 13956   00397D                     SCANTRIG        equ	14717	;# 
 13957   003980                     IPR0            equ	14720	;# 
 13958   003981                     IPR1            equ	14721	;# 
 13959   003982                     IPR2            equ	14722	;# 
 13960   003983                     IPR3            equ	14723	;# 
 13961   003984                     IPR4            equ	14724	;# 
 13962   003985                     IPR5            equ	14725	;# 
 13963   003986                     IPR6            equ	14726	;# 
 13964   003987                     IPR7            equ	14727	;# 
 13965   003988                     IPR8            equ	14728	;# 
 13966   003989                     IPR9            equ	14729	;# 
 13967   00398A                     IPR10           equ	14730	;# 
 13968   003990                     PIE0            equ	14736	;# 
 13969   003991                     PIE1            equ	14737	;# 
 13970   003992                     PIE2            equ	14738	;# 
 13971   003993                     PIE3            equ	14739	;# 
 13972   003994                     PIE4            equ	14740	;# 
 13973   003995                     PIE5            equ	14741	;# 
 13974   003996                     PIE6            equ	14742	;# 
 13975   003997                     PIE7            equ	14743	;# 
 13976   003998                     PIE8            equ	14744	;# 
 13977   003999                     PIE9            equ	14745	;# 
 13978   00399A                     PIE10           equ	14746	;# 
 13979   0039A0                     PIR0            equ	14752	;# 
 13980   0039A1                     PIR1            equ	14753	;# 
 13981   0039A2                     PIR2            equ	14754	;# 
 13982   0039A3                     PIR3            equ	14755	;# 
 13983   0039A4                     PIR4            equ	14756	;# 
 13984   0039A5                     PIR5            equ	14757	;# 
 13985   0039A6                     PIR6            equ	14758	;# 
 13986   0039A7                     PIR7            equ	14759	;# 
 13987   0039A8                     PIR8            equ	14760	;# 
 13988   0039A9                     PIR9            equ	14761	;# 
 13989   0039AA                     PIR10           equ	14762	;# 
 13990   0039C0                     PMD0            equ	14784	;# 
 13991   0039C1                     PMD1            equ	14785	;# 
 13992   0039C2                     PMD2            equ	14786	;# 
 13993   0039C3                     PMD3            equ	14787	;# 
 13994   0039C4                     PMD4            equ	14788	;# 
 13995   0039C5                     PMD5            equ	14789	;# 
 13996   0039C6                     PMD6            equ	14790	;# 
 13997   0039C7                     PMD7            equ	14791	;# 
 13998   0039D0                     BORCON          equ	14800	;# 
 13999   0039D1                     VREGCON         equ	14801	;# 
 14000   0039D8                     CPUDOZE         equ	14808	;# 
 14001   0039D9                     OSCCON1         equ	14809	;# 
 14002   0039DA                     OSCCON2         equ	14810	;# 
 14003   0039DB                     OSCCON3         equ	14811	;# 
 14004   0039DC                     OSCSTAT         equ	14812	;# 
 14005   0039DC                     OSCSTAT1        equ	14812	;# 
 14006   0039DD                     OSCEN           equ	14813	;# 
 14007   0039DE                     OSCTUNE         equ	14814	;# 
 14008   0039DF                     OSCFRQ          equ	14815	;# 
 14009   0039E0                     NVMADRL         equ	14816	;# 
 14010   0039E1                     NVMADRH         equ	14817	;# 
 14011   0039E3                     NVMDAT          equ	14819	;# 
 14012   0039E5                     NVMCON1         equ	14821	;# 
 14013   0039E6                     NVMCON2         equ	14822	;# 
 14014   0039EF                     PRLOCK          equ	14831	;# 
 14015   0039F1                     ISRPR           equ	14833	;# 
 14016   0039F2                     MAINPR          equ	14834	;# 
 14017   0039F3                     DMA1PR          equ	14835	;# 
 14018   0039F4                     DMA2PR          equ	14836	;# 
 14019   0039F7                     SCANPR          equ	14839	;# 
 14020   003A00                     RA0PPS          equ	14848	;# 
 14021   003A01                     RA1PPS          equ	14849	;# 
 14022   003A02                     RA2PPS          equ	14850	;# 
 14023   003A03                     RA3PPS          equ	14851	;# 
 14024   003A04                     RA4PPS          equ	14852	;# 
 14025   003A05                     RA5PPS          equ	14853	;# 
 14026   003A06                     RA6PPS          equ	14854	;# 
 14027   003A07                     RA7PPS          equ	14855	;# 
 14028   003A08                     RB0PPS          equ	14856	;# 
 14029   003A09                     RB1PPS          equ	14857	;# 
 14030   003A0A                     RB2PPS          equ	14858	;# 
 14031   003A0B                     RB3PPS          equ	14859	;# 
 14032   003A0C                     RB4PPS          equ	14860	;# 
 14033   003A0D                     RB5PPS          equ	14861	;# 
 14034   003A0E                     RB6PPS          equ	14862	;# 
 14035   003A0F                     RB7PPS          equ	14863	;# 
 14036   003A10                     RC0PPS          equ	14864	;# 
 14037   003A11                     RC1PPS          equ	14865	;# 
 14038   003A12                     RC2PPS          equ	14866	;# 
 14039   003A13                     RC3PPS          equ	14867	;# 
 14040   003A14                     RC4PPS          equ	14868	;# 
 14041   003A15                     RC5PPS          equ	14869	;# 
 14042   003A16                     RC6PPS          equ	14870	;# 
 14043   003A17                     RC7PPS          equ	14871	;# 
 14044   003A18                     RD0PPS          equ	14872	;# 
 14045   003A19                     RD1PPS          equ	14873	;# 
 14046   003A1A                     RD2PPS          equ	14874	;# 
 14047   003A1B                     RD3PPS          equ	14875	;# 
 14048   003A1C                     RD4PPS          equ	14876	;# 
 14049   003A1D                     RD5PPS          equ	14877	;# 
 14050   003A1E                     RD6PPS          equ	14878	;# 
 14051   003A1F                     RD7PPS          equ	14879	;# 
 14052   003A20                     RE0PPS          equ	14880	;# 
 14053   003A21                     RE1PPS          equ	14881	;# 
 14054   003A22                     RE2PPS          equ	14882	;# 
 14055   003A28                     RF0PPS          equ	14888	;# 
 14056   003A29                     RF1PPS          equ	14889	;# 
 14057   003A2A                     RF2PPS          equ	14890	;# 
 14058   003A2B                     RF3PPS          equ	14891	;# 
 14059   003A2C                     RF4PPS          equ	14892	;# 
 14060   003A2D                     RF5PPS          equ	14893	;# 
 14061   003A2E                     RF6PPS          equ	14894	;# 
 14062   003A2F                     RF7PPS          equ	14895	;# 
 14063   003A40                     ANSELA          equ	14912	;# 
 14064   003A41                     WPUA            equ	14913	;# 
 14065   003A42                     ODCONA          equ	14914	;# 
 14066   003A43                     SLRCONA         equ	14915	;# 
 14067   003A44                     INLVLA          equ	14916	;# 
 14068   003A45                     IOCAP           equ	14917	;# 
 14069   003A46                     IOCAN           equ	14918	;# 
 14070   003A47                     IOCAF           equ	14919	;# 
 14071   003A50                     ANSELB          equ	14928	;# 
 14072   003A51                     WPUB            equ	14929	;# 
 14073   003A52                     ODCONB          equ	14930	;# 
 14074   003A53                     SLRCONB         equ	14931	;# 
 14075   003A54                     INLVLB          equ	14932	;# 
 14076   003A55                     IOCBP           equ	14933	;# 
 14077   003A56                     IOCBN           equ	14934	;# 
 14078   003A57                     IOCBF           equ	14935	;# 
 14079   003A5A                     RB1I2C          equ	14938	;# 
 14080   003A5B                     RB2I2C          equ	14939	;# 
 14081   003A60                     ANSELC          equ	14944	;# 
 14082   003A61                     WPUC            equ	14945	;# 
 14083   003A62                     ODCONC          equ	14946	;# 
 14084   003A63                     SLRCONC         equ	14947	;# 
 14085   003A64                     INLVLC          equ	14948	;# 
 14086   003A65                     IOCCP           equ	14949	;# 
 14087   003A66                     IOCCN           equ	14950	;# 
 14088   003A67                     IOCCF           equ	14951	;# 
 14089   003A6A                     RC3I2C          equ	14954	;# 
 14090   003A6B                     RC4I2C          equ	14955	;# 
 14091   003A70                     ANSELD          equ	14960	;# 
 14092   003A71                     WPUD            equ	14961	;# 
 14093   003A72                     ODCOND          equ	14962	;# 
 14094   003A73                     SLRCOND         equ	14963	;# 
 14095   003A74                     INLVLD          equ	14964	;# 
 14096   003A7A                     RD0I2C          equ	14970	;# 
 14097   003A7B                     RD1I2C          equ	14971	;# 
 14098   003A80                     ANSELE          equ	14976	;# 
 14099   003A81                     WPUE            equ	14977	;# 
 14100   003A82                     ODCONE          equ	14978	;# 
 14101   003A83                     SLRCONE         equ	14979	;# 
 14102   003A84                     INLVLE          equ	14980	;# 
 14103   003A85                     IOCEP           equ	14981	;# 
 14104   003A86                     IOCEN           equ	14982	;# 
 14105   003A87                     IOCEF           equ	14983	;# 
 14106   003A90                     ANSELF          equ	14992	;# 
 14107   003A91                     WPUF            equ	14993	;# 
 14108   003A92                     ODCONF          equ	14994	;# 
 14109   003A93                     SLRCONF         equ	14995	;# 
 14110   003A94                     INLVLF          equ	14996	;# 
 14111   003ABF                     PPSLOCK         equ	15039	;# 
 14112   003AC0                     INT0PPS         equ	15040	;# 
 14113   003AC1                     INT1PPS         equ	15041	;# 
 14114   003AC2                     INT2PPS         equ	15042	;# 
 14115   003AC3                     T0CKIPPS        equ	15043	;# 
 14116   003AC4                     T1CKIPPS        equ	15044	;# 
 14117   003AC5                     T1GPPS          equ	15045	;# 
 14118   003AC6                     T3CKIPPS        equ	15046	;# 
 14119   003AC7                     T3GPPS          equ	15047	;# 
 14120   003AC8                     T5CKIPPS        equ	15048	;# 
 14121   003AC9                     T5GPPS          equ	15049	;# 
 14122   003ACA                     T2INPPS         equ	15050	;# 
 14123   003ACB                     T4INPPS         equ	15051	;# 
 14124   003ACC                     T6INPPS         equ	15052	;# 
 14125   003ACD                     CCP1PPS         equ	15053	;# 
 14126   003ACE                     CCP2PPS         equ	15054	;# 
 14127   003ACF                     CCP3PPS         equ	15055	;# 
 14128   003AD0                     CCP4PPS         equ	15056	;# 
 14129   003AD1                     SMT1WINPPS      equ	15057	;# 
 14130   003AD2                     SMT1SIGPPS      equ	15058	;# 
 14131   003AD3                     CWG1INPPS       equ	15059	;# 
 14132   003AD4                     CWG2INPPS       equ	15060	;# 
 14133   003AD5                     CWG3INPPS       equ	15061	;# 
 14134   003AD6                     MD1CARLPPS      equ	15062	;# 
 14135   003AD7                     MD1CARHPPS      equ	15063	;# 
 14136   003AD8                     MD1SRCPPS       equ	15064	;# 
 14137   003AD9                     CLCIN0PPS       equ	15065	;# 
 14138   003ADA                     CLCIN1PPS       equ	15066	;# 
 14139   003ADB                     CLCIN2PPS       equ	15067	;# 
 14140   003ADC                     CLCIN3PPS       equ	15068	;# 
 14141   003ADD                     ADACTPPS        equ	15069	;# 
 14142   003ADE                     SPI1SCKPPS      equ	15070	;# 
 14143   003ADF                     SPI1SDIPPS      equ	15071	;# 
 14144   003AE0                     SPI1SSPPS       equ	15072	;# 
 14145   003AE1                     I2C1SCLPPS      equ	15073	;# 
 14146   003AE2                     I2C1SDAPPS      equ	15074	;# 
 14147   003AE3                     I2C2SCLPPS      equ	15075	;# 
 14148   003AE4                     I2C2SDAPPS      equ	15076	;# 
 14149   003AE5                     U1RXPPS         equ	15077	;# 
 14150   003AE6                     U1CTSPPS        equ	15078	;# 
 14151   003AE8                     U2RXPPS         equ	15080	;# 
 14152   003AE9                     U2CTSPPS        equ	15081	;# 
 14153   003BC9                     DMA2BUF         equ	15305	;# 
 14154   003BCA                     DMA2DCNT        equ	15306	;# 
 14155   003BCA                     DMA2DCNTL       equ	15306	;# 
 14156   003BCB                     DMA2DCNTH       equ	15307	;# 
 14157   003BCC                     DMA2DPTR        equ	15308	;# 
 14158   003BCC                     DMA2DPTRL       equ	15308	;# 
 14159   003BCD                     DMA2DPTRH       equ	15309	;# 
 14160   003BCE                     DMA2DSZ         equ	15310	;# 
 14161   003BCE                     DMA2DSZL        equ	15310	;# 
 14162   003BCF                     DMA2DSZH        equ	15311	;# 
 14163   003BD0                     DMA2DSA         equ	15312	;# 
 14164   003BD0                     DMA2DSAL        equ	15312	;# 
 14165   003BD1                     DMA2DSAH        equ	15313	;# 
 14166   003BD2                     DMA2SCNT        equ	15314	;# 
 14167   003BD2                     DMA2SCNTL       equ	15314	;# 
 14168   003BD3                     DMA2SCNTH       equ	15315	;# 
 14169   003BD4                     DMA2SPTR        equ	15316	;# 
 14170   003BD4                     DMA2SPTRL       equ	15316	;# 
 14171   003BD5                     DMA2SPTRH       equ	15317	;# 
 14172   003BD6                     DMA2SPTRU       equ	15318	;# 
 14173   003BD7                     DMA2SSZ         equ	15319	;# 
 14174   003BD7                     DMA2SSZL        equ	15319	;# 
 14175   003BD8                     DMA2SSZH        equ	15320	;# 
 14176   003BD9                     DMA2SSA         equ	15321	;# 
 14177   003BD9                     DMA2SSAL        equ	15321	;# 
 14178   003BDA                     DMA2SSAH        equ	15322	;# 
 14179   003BDB                     DMA2SSAU        equ	15323	;# 
 14180   003BDC                     DMA2CON0        equ	15324	;# 
 14181   003BDD                     DMA2CON1        equ	15325	;# 
 14182   003BDE                     DMA2AIRQ        equ	15326	;# 
 14183   003BDF                     DMA2SIRQ        equ	15327	;# 
 14184   003BE9                     DMA1BUF         equ	15337	;# 
 14185   003BEA                     DMA1DCNT        equ	15338	;# 
 14186   003BEA                     DMA1DCNTL       equ	15338	;# 
 14187   003BEB                     DMA1DCNTH       equ	15339	;# 
 14188   003BEC                     DMA1DPTR        equ	15340	;# 
 14189   003BEC                     DMA1DPTRL       equ	15340	;# 
 14190   003BED                     DMA1DPTRH       equ	15341	;# 
 14191   003BEE                     DMA1DSZ         equ	15342	;# 
 14192   003BEE                     DMA1DSZL        equ	15342	;# 
 14193   003BEF                     DMA1DSZH        equ	15343	;# 
 14194   003BF0                     DMA1DSA         equ	15344	;# 
 14195   003BF0                     DMA1DSAL        equ	15344	;# 
 14196   003BF1                     DMA1DSAH        equ	15345	;# 
 14197   003BF2                     DMA1SCNT        equ	15346	;# 
 14198   003BF2                     DMA1SCNTL       equ	15346	;# 
 14199   003BF3                     DMA1SCNTH       equ	15347	;# 
 14200   003BF4                     DMA1SPTR        equ	15348	;# 
 14201   003BF4                     DMA1SPTRL       equ	15348	;# 
 14202   003BF5                     DMA1SPTRH       equ	15349	;# 
 14203   003BF6                     DMA1SPTRU       equ	15350	;# 
 14204   003BF7                     DMA1SSZ         equ	15351	;# 
 14205   003BF7                     DMA1SSZL        equ	15351	;# 
 14206   003BF8                     DMA1SSZH        equ	15352	;# 
 14207   003BF9                     DMA1SSA         equ	15353	;# 
 14208   003BF9                     DMA1SSAL        equ	15353	;# 
 14209   003BFA                     DMA1SSAH        equ	15354	;# 
 14210   003BFB                     DMA1SSAU        equ	15355	;# 
 14211   003BFC                     DMA1CON0        equ	15356	;# 
 14212   003BFD                     DMA1CON1        equ	15357	;# 
 14213   003BFE                     DMA1AIRQ        equ	15358	;# 
 14214   003BFF                     DMA1SIRQ        equ	15359	;# 
 14215   003C56                     CLC4CON         equ	15446	;# 
 14216   003C57                     CLC4POL         equ	15447	;# 
 14217   003C58                     CLC4SEL0        equ	15448	;# 
 14218   003C59                     CLC4SEL1        equ	15449	;# 
 14219   003C5A                     CLC4SEL2        equ	15450	;# 
 14220   003C5B                     CLC4SEL3        equ	15451	;# 
 14221   003C5C                     CLC4GLS0        equ	15452	;# 
 14222   003C5D                     CLC4GLS1        equ	15453	;# 
 14223   003C5E                     CLC4GLS2        equ	15454	;# 
 14224   003C5F                     CLC4GLS3        equ	15455	;# 
 14225   003C60                     CLC3CON         equ	15456	;# 
 14226   003C61                     CLC3POL         equ	15457	;# 
 14227   003C62                     CLC3SEL0        equ	15458	;# 
 14228   003C63                     CLC3SEL1        equ	15459	;# 
 14229   003C64                     CLC3SEL2        equ	15460	;# 
 14230   003C65                     CLC3SEL3        equ	15461	;# 
 14231   003C66                     CLC3GLS0        equ	15462	;# 
 14232   003C67                     CLC3GLS1        equ	15463	;# 
 14233   003C68                     CLC3GLS2        equ	15464	;# 
 14234   003C69                     CLC3GLS3        equ	15465	;# 
 14235   003C6A                     CLC2CON         equ	15466	;# 
 14236   003C6B                     CLC2POL         equ	15467	;# 
 14237   003C6C                     CLC2SEL0        equ	15468	;# 
 14238   003C6D                     CLC2SEL1        equ	15469	;# 
 14239   003C6E                     CLC2SEL2        equ	15470	;# 
 14240   003C6F                     CLC2SEL3        equ	15471	;# 
 14241   003C70                     CLC2GLS0        equ	15472	;# 
 14242   003C71                     CLC2GLS1        equ	15473	;# 
 14243   003C72                     CLC2GLS2        equ	15474	;# 
 14244   003C73                     CLC2GLS3        equ	15475	;# 
 14245   003C74                     CLC1CON         equ	15476	;# 
 14246   003C75                     CLC1POL         equ	15477	;# 
 14247   003C76                     CLC1SEL0        equ	15478	;# 
 14248   003C77                     CLC1SEL1        equ	15479	;# 
 14249   003C78                     CLC1SEL2        equ	15480	;# 
 14250   003C79                     CLC1SEL3        equ	15481	;# 
 14251   003C7A                     CLC1GLS0        equ	15482	;# 
 14252   003C7B                     CLC1GLS1        equ	15483	;# 
 14253   003C7C                     CLC1GLS2        equ	15484	;# 
 14254   003C7D                     CLC1GLS3        equ	15485	;# 
 14255   003C7E                     CLCDATA0        equ	15486	;# 
 14256   003CE5                     CLKRCON         equ	15589	;# 
 14257   003CE6                     CLKRCLK         equ	15590	;# 
 14258   003CFA                     MD1CON0         equ	15610	;# 
 14259   003CFB                     MD1CON1         equ	15611	;# 
 14260   003CFC                     MD1SRC          equ	15612	;# 
 14261   003CFD                     MD1CARL         equ	15613	;# 
 14262   003CFE                     MD1CARH         equ	15614	;# 
 14263   003D10                     SPI1RXB         equ	15632	;# 
 14264   003D11                     SPI1TXB         equ	15633	;# 
 14265   003D12                     SPI1TCNT        equ	15634	;# 
 14266   003D12                     SPI1TCNTL       equ	15634	;# 
 14267   003D13                     SPI1TCNTH       equ	15635	;# 
 14268   003D14                     SPI1CON0        equ	15636	;# 
 14269   003D15                     SPI1CON1        equ	15637	;# 
 14270   003D16                     SPI1CON2        equ	15638	;# 
 14271   003D17                     SPI1STATUS      equ	15639	;# 
 14272   003D18                     SPI1TWIDTH      equ	15640	;# 
 14273   003D19                     SPI1BAUD        equ	15641	;# 
 14274   003D1A                     SPI1INTF        equ	15642	;# 
 14275   003D1B                     SPI1INTE        equ	15643	;# 
 14276   003D1C                     SPI1CLK         equ	15644	;# 
 14277   003D54                     I2C2RXB         equ	15700	;# 
 14278   003D55                     I2C2TXB         equ	15701	;# 
 14279   003D56                     I2C2CNT         equ	15702	;# 
 14280   003D57                     I2C2ADB0        equ	15703	;# 
 14281   003D58                     I2C2ADB1        equ	15704	;# 
 14282   003D59                     I2C2ADR0        equ	15705	;# 
 14283   003D5A                     I2C2ADR1        equ	15706	;# 
 14284   003D5B                     I2C2ADR2        equ	15707	;# 
 14285   003D5C                     I2C2ADR3        equ	15708	;# 
 14286   003D5D                     I2C2CON0        equ	15709	;# 
 14287   003D5E                     I2C2CON1        equ	15710	;# 
 14288   003D5F                     I2C2CON2        equ	15711	;# 
 14289   003D60                     I2C2ERR         equ	15712	;# 
 14290   003D61                     I2C2STAT0       equ	15713	;# 
 14291   003D62                     I2C2STAT1       equ	15714	;# 
 14292   003D63                     I2C2PIR         equ	15715	;# 
 14293   003D64                     I2C2PIE         equ	15716	;# 
 14294   003D65                     I2C2CLK         equ	15717	;# 
 14295   003D66                     I2C2BTO         equ	15718	;# 
 14296   003D6A                     I2C1RXB         equ	15722	;# 
 14297   003D6B                     I2C1TXB         equ	15723	;# 
 14298   003D6C                     I2C1CNT         equ	15724	;# 
 14299   003D6D                     I2C1ADB0        equ	15725	;# 
 14300   003D6E                     I2C1ADB1        equ	15726	;# 
 14301   003D6F                     I2C1ADR0        equ	15727	;# 
 14302   003D70                     I2C1ADR1        equ	15728	;# 
 14303   003D71                     I2C1ADR2        equ	15729	;# 
 14304   003D72                     I2C1ADR3        equ	15730	;# 
 14305   003D73                     I2C1CON0        equ	15731	;# 
 14306   003D74                     I2C1CON1        equ	15732	;# 
 14307   003D75                     I2C1CON2        equ	15733	;# 
 14308   003D76                     I2C1ERR         equ	15734	;# 
 14309   003D77                     I2C1STAT0       equ	15735	;# 
 14310   003D78                     I2C1STAT1       equ	15736	;# 
 14311   003D79                     I2C1PIR         equ	15737	;# 
 14312   003D7A                     I2C1PIE         equ	15738	;# 
 14313   003D7B                     I2C1CLK         equ	15739	;# 
 14314   003D7C                     I2C1BTO         equ	15740	;# 
 14315   003DD0                     U2RXB           equ	15824	;# 
 14316   003DD0                     U2RXBL          equ	15824	;# 
 14317   003DD2                     U2TXB           equ	15826	;# 
 14318   003DD2                     U2TXBL          equ	15826	;# 
 14319   003DD4                     U2P1            equ	15828	;# 
 14320   003DD4                     U2P1L           equ	15828	;# 
 14321   003DD6                     U2P2            equ	15830	;# 
 14322   003DD6                     U2P2L           equ	15830	;# 
 14323   003DD8                     U2P3            equ	15832	;# 
 14324   003DD8                     U2P3L           equ	15832	;# 
 14325   003DDA                     U2CON0          equ	15834	;# 
 14326   003DDB                     U2CON1          equ	15835	;# 
 14327   003DDC                     U2CON2          equ	15836	;# 
 14328   003DDD                     U2BRG           equ	15837	;# 
 14329   003DDD                     U2BRGL          equ	15837	;# 
 14330   003DDE                     U2BRGH          equ	15838	;# 
 14331   003DDF                     U2FIFO          equ	15839	;# 
 14332   003DE0                     U2UIR           equ	15840	;# 
 14333   003DE1                     U2ERRIR         equ	15841	;# 
 14334   003DE2                     U2ERRIE         equ	15842	;# 
 14335   003DE8                     U1RXB           equ	15848	;# 
 14336   003DE8                     U1RXBL          equ	15848	;# 
 14337   003DE9                     U1RXCHK         equ	15849	;# 
 14338   003DEA                     U1TXB           equ	15850	;# 
 14339   003DEA                     U1TXBL          equ	15850	;# 
 14340   003DEB                     U1TXCHK         equ	15851	;# 
 14341   003DEC                     U1P1            equ	15852	;# 
 14342   003DEC                     U1P1L           equ	15852	;# 
 14343   003DED                     U1P1H           equ	15853	;# 
 14344   003DEE                     U1P2            equ	15854	;# 
 14345   003DEE                     U1P2L           equ	15854	;# 
 14346   003DEF                     U1P2H           equ	15855	;# 
 14347   003DF0                     U1P3            equ	15856	;# 
 14348   003DF0                     U1P3L           equ	15856	;# 
 14349   003DF1                     U1P3H           equ	15857	;# 
 14350   003DF2                     U1CON0          equ	15858	;# 
 14351   003DF3                     U1CON1          equ	15859	;# 
 14352   003DF4                     U1CON2          equ	15860	;# 
 14353   003DF5                     U1BRG           equ	15861	;# 
 14354   003DF5                     U1BRGL          equ	15861	;# 
 14355   003DF6                     U1BRGH          equ	15862	;# 
 14356   003DF7                     U1FIFO          equ	15863	;# 
 14357   003DF8                     U1UIR           equ	15864	;# 
 14358   003DF9                     U1ERRIR         equ	15865	;# 
 14359   003DFA                     U1ERRIE         equ	15866	;# 
 14360   003E9C                     DAC1CON1        equ	16028	;# 
 14361   003E9E                     DAC1CON0        equ	16030	;# 
 14362   003EB8                     CM2CON0         equ	16056	;# 
 14363   003EB9                     CM2CON1         equ	16057	;# 
 14364   003EBA                     CM2NCH          equ	16058	;# 
 14365   003EBB                     CM2PCH          equ	16059	;# 
 14366   003EBC                     CM1CON0         equ	16060	;# 
 14367   003EBD                     CM1CON1         equ	16061	;# 
 14368   003EBE                     CM1NCH          equ	16062	;# 
 14369   003EBF                     CM1PCH          equ	16063	;# 
 14370   003EC0                     CMOUT           equ	16064	;# 
 14371   003EC1                     FVRCON          equ	16065	;# 
 14372   003EC3                     ZCDCON          equ	16067	;# 
 14373   003EC9                     HLVDCON0        equ	16073	;# 
 14374   003ECA                     HLVDCON1        equ	16074	;# 
 14375   003ED7                     ADCP            equ	16087	;# 
 14376   003EDE                     ADLTH           equ	16094	;# 
 14377   003EDE                     ADLTHL          equ	16094	;# 
 14378   003EDF                     ADLTHH          equ	16095	;# 
 14379   003EE0                     ADUTH           equ	16096	;# 
 14380   003EE0                     ADUTHL          equ	16096	;# 
 14381   003EE1                     ADUTHH          equ	16097	;# 
 14382   003EE2                     ADERR           equ	16098	;# 
 14383   003EE2                     ADERRL          equ	16098	;# 
 14384   003EE3                     ADERRH          equ	16099	;# 
 14385   003EE4                     ADSTPT          equ	16100	;# 
 14386   003EE4                     ADSTPTL         equ	16100	;# 
 14387   003EE5                     ADSTPTH         equ	16101	;# 
 14388   003EE6                     ADFLTR          equ	16102	;# 
 14389   003EE6                     ADFLTRL         equ	16102	;# 
 14390   003EE7                     ADFLTRH         equ	16103	;# 
 14391   003EE8                     ADACC           equ	16104	;# 
 14392   003EE8                     ADACCL          equ	16104	;# 
 14393   003EE9                     ADACCH          equ	16105	;# 
 14394   003EEA                     ADACCU          equ	16106	;# 
 14395   003EEB                     ADCNT           equ	16107	;# 
 14396   003EEC                     ADRPT           equ	16108	;# 
 14397   003EED                     ADPREV          equ	16109	;# 
 14398   003EED                     ADPREVL         equ	16109	;# 
 14399   003EEE                     ADPREVH         equ	16110	;# 
 14400   003EEF                     ADRES           equ	16111	;# 
 14401   003EEF                     ADRESL          equ	16111	;# 
 14402   003EF0                     ADRESH          equ	16112	;# 
 14403   003EF1                     ADPCH           equ	16113	;# 
 14404   003EF3                     ADACQ           equ	16115	;# 
 14405   003EF3                     ADACQL          equ	16115	;# 
 14406   003EF4                     ADACQH          equ	16116	;# 
 14407   003EF5                     ADCAP           equ	16117	;# 
 14408   003EF6                     ADPRE           equ	16118	;# 
 14409   003EF6                     ADPREL          equ	16118	;# 
 14410   003EF7                     ADPREH          equ	16119	;# 
 14411   003EF8                     ADCON0          equ	16120	;# 
 14412   003EF9                     ADCON1          equ	16121	;# 
 14413   003EFA                     ADCON2          equ	16122	;# 
 14414   003EFB                     ADCON3          equ	16123	;# 
 14415   003EFC                     ADSTAT          equ	16124	;# 
 14416   003EFD                     ADREF           equ	16125	;# 
 14417   003EFE                     ADACT           equ	16126	;# 
 14418   003EFF                     ADCLK           equ	16127	;# 
 14419   003F12                     SMT1TMR         equ	16146	;# 
 14420   003F12                     SMT1TMRL        equ	16146	;# 
 14421   003F13                     SMT1TMRH        equ	16147	;# 
 14422   003F14                     SMT1TMRU        equ	16148	;# 
 14423   003F15                     SMT1CPR         equ	16149	;# 
 14424   003F15                     SMT1CPRL        equ	16149	;# 
 14425   003F16                     SMT1CPRH        equ	16150	;# 
 14426   003F17                     SMT1CPRU        equ	16151	;# 
 14427   003F18                     SMT1CPW         equ	16152	;# 
 14428   003F18                     SMT1CPWL        equ	16152	;# 
 14429   003F19                     SMT1CPWH        equ	16153	;# 
 14430   003F1A                     SMT1CPWU        equ	16154	;# 
 14431   003F1B                     SMT1PR          equ	16155	;# 
 14432   003F1B                     SMT1PRL         equ	16155	;# 
 14433   003F1C                     SMT1PRH         equ	16156	;# 
 14434   003F1D                     SMT1PRU         equ	16157	;# 
 14435   003F1E                     SMT1CON0        equ	16158	;# 
 14436   003F1F                     SMT1CON1        equ	16159	;# 
 14437   003F20                     SMT1STAT        equ	16160	;# 
 14438   003F21                     SMT1CLK         equ	16161	;# 
 14439   003F22                     SMT1SIG         equ	16162	;# 
 14440   003F23                     SMT1WIN         equ	16163	;# 
 14441   003F38                     NCO1ACC         equ	16184	;# 
 14442   003F38                     NCO1ACCL        equ	16184	;# 
 14443   003F39                     NCO1ACCH        equ	16185	;# 
 14444   003F3A                     NCO1ACCU        equ	16186	;# 
 14445   003F3B                     NCO1INC         equ	16187	;# 
 14446   003F3B                     NCO1INCL        equ	16187	;# 
 14447   003F3C                     NCO1INCH        equ	16188	;# 
 14448   003F3D                     NCO1INCU        equ	16189	;# 
 14449   003F3E                     NCO1CON         equ	16190	;# 
 14450   003F3F                     NCO1CLK         equ	16191	;# 
 14451   003F40                     CWG3CLK         equ	16192	;# 
 14452   003F40                     CWG3CLKCON      equ	16192	;# 
 14453   003F41                     CWG3ISM         equ	16193	;# 
 14454   003F41                     CWG3DAT         equ	16193	;# 
 14455   003F42                     CWG3DBR         equ	16194	;# 
 14456   003F43                     CWG3DBF         equ	16195	;# 
 14457   003F44                     CWG3CON0        equ	16196	;# 
 14458   003F45                     CWG3CON1        equ	16197	;# 
 14459   003F46                     CWG3AS0         equ	16198	;# 
 14460   003F47                     CWG3AS1         equ	16199	;# 
 14461   003F48                     CWG3STR         equ	16200	;# 
 14462   003F49                     CWG2CLK         equ	16201	;# 
 14463   003F49                     CWG2CLKCON      equ	16201	;# 
 14464   003F4A                     CWG2ISM         equ	16202	;# 
 14465   003F4A                     CWG2DAT         equ	16202	;# 
 14466   003F4B                     CWG2DBR         equ	16203	;# 
 14467   003F4C                     CWG2DBF         equ	16204	;# 
 14468   003F4D                     CWG2CON0        equ	16205	;# 
 14469   003F4E                     CWG2CON1        equ	16206	;# 
 14470   003F4F                     CWG2AS0         equ	16207	;# 
 14471   003F50                     CWG2AS1         equ	16208	;# 
 14472   003F51                     CWG2STR         equ	16209	;# 
 14473   003F52                     CWG1CLK         equ	16210	;# 
 14474   003F52                     CWG1CLKCON      equ	16210	;# 
 14475   003F53                     CWG1ISM         equ	16211	;# 
 14476   003F53                     CWG1DAT         equ	16211	;# 
 14477   003F54                     CWG1DBR         equ	16212	;# 
 14478   003F55                     CWG1DBF         equ	16213	;# 
 14479   003F56                     CWG1CON0        equ	16214	;# 
 14480   003F57                     CWG1CON1        equ	16215	;# 
 14481   003F58                     CWG1AS0         equ	16216	;# 
 14482   003F59                     CWG1AS1         equ	16217	;# 
 14483   003F5A                     CWG1STR         equ	16218	;# 
 14484   003F5E                     CCPTMRS0        equ	16222	;# 
 14485   003F5F                     CCPTMRS1        equ	16223	;# 
 14486   003F60                     PWM8DC          equ	16224	;# 
 14487   003F60                     PWM8DCL         equ	16224	;# 
 14488   003F61                     PWM8DCH         equ	16225	;# 
 14489   003F62                     PWM8CON         equ	16226	;# 
 14490   003F64                     PWM7DC          equ	16228	;# 
 14491   003F64                     PWM7DCL         equ	16228	;# 
 14492   003F65                     PWM7DCH         equ	16229	;# 
 14493   003F66                     PWM7CON         equ	16230	;# 
 14494   003F68                     PWM6DC          equ	16232	;# 
 14495   003F68                     PWM6DCL         equ	16232	;# 
 14496   003F69                     PWM6DCH         equ	16233	;# 
 14497   003F6A                     PWM6CON         equ	16234	;# 
 14498   003F6C                     PWM5DC          equ	16236	;# 
 14499   003F6C                     PWM5DCL         equ	16236	;# 
 14500   003F6D                     PWM5DCH         equ	16237	;# 
 14501   003F6E                     PWM5CON         equ	16238	;# 
 14502   003F70                     CCPR4           equ	16240	;# 
 14503   003F70                     CCPR4L          equ	16240	;# 
 14504   003F71                     CCPR4H          equ	16241	;# 
 14505   003F72                     CCP4CON         equ	16242	;# 
 14506   003F73                     CCP4CAP         equ	16243	;# 
 14507   003F74                     CCPR3           equ	16244	;# 
 14508   003F74                     CCPR3L          equ	16244	;# 
 14509   003F75                     CCPR3H          equ	16245	;# 
 14510   003F76                     CCP3CON         equ	16246	;# 
 14511   003F77                     CCP3CAP         equ	16247	;# 
 14512   003F78                     CCPR2           equ	16248	;# 
 14513   003F78                     CCPR2L          equ	16248	;# 
 14514   003F79                     CCPR2H          equ	16249	;# 
 14515   003F7A                     CCP2CON         equ	16250	;# 
 14516   003F7B                     CCP2CAP         equ	16251	;# 
 14517   003F7C                     CCPR1           equ	16252	;# 
 14518   003F7C                     CCPR1L          equ	16252	;# 
 14519   003F7D                     CCPR1H          equ	16253	;# 
 14520   003F7E                     CCP1CON         equ	16254	;# 
 14521   003F7F                     CCP1CAP         equ	16255	;# 
 14522   003F92                     T6TMR           equ	16274	;# 
 14523   003F92                     TMR6            equ	16274	;# 
 14524   003F93                     T6PR            equ	16275	;# 
 14525   003F93                     PR6             equ	16275	;# 
 14526   003F94                     T6CON           equ	16276	;# 
 14527   003F95                     T6HLT           equ	16277	;# 
 14528   003F96                     T6CLKCON        equ	16278	;# 
 14529   003F96                     T6CLK           equ	16278	;# 
 14530   003F97                     T6RST           equ	16279	;# 
 14531   003F98                     TMR5            equ	16280	;# 
 14532   003F98                     TMR5L           equ	16280	;# 
 14533   003F99                     TMR5H           equ	16281	;# 
 14534   003F9A                     T5CON           equ	16282	;# 
 14535   003F9A                     TMR5CON         equ	16282	;# 
 14536   003F9B                     T5GCON          equ	16283	;# 
 14537   003F9B                     TMR5GCON        equ	16283	;# 
 14538   003F9C                     T5GATE          equ	16284	;# 
 14539   003F9C                     TMR5GATE        equ	16284	;# 
 14540   003F9D                     T5CLK           equ	16285	;# 
 14541   003F9D                     TMR5CLK         equ	16285	;# 
 14542   003F9D                     PR5             equ	16285	;# 
 14543   003F9E                     T4TMR           equ	16286	;# 
 14544   003F9E                     TMR4            equ	16286	;# 
 14545   003F9F                     T4PR            equ	16287	;# 
 14546   003F9F                     PR4             equ	16287	;# 
 14547   003FA0                     T4CON           equ	16288	;# 
 14548   003FA1                     T4HLT           equ	16289	;# 
 14549   003FA2                     T4CLKCON        equ	16290	;# 
 14550   003FA2                     T4CLK           equ	16290	;# 
 14551   003FA3                     T4RST           equ	16291	;# 
 14552   003FA4                     TMR3            equ	16292	;# 
 14553   003FA4                     TMR3L           equ	16292	;# 
 14554   003FA5                     TMR3H           equ	16293	;# 
 14555   003FA6                     T3CON           equ	16294	;# 
 14556   003FA6                     TMR3CON         equ	16294	;# 
 14557   003FA7                     T3GCON          equ	16295	;# 
 14558   003FA7                     TMR3GCON        equ	16295	;# 
 14559   003FA8                     T3GATE          equ	16296	;# 
 14560   003FA8                     TMR3GATE        equ	16296	;# 
 14561   003FA9                     T3CLK           equ	16297	;# 
 14562   003FA9                     TMR3CLK         equ	16297	;# 
 14563   003FA9                     PR3             equ	16297	;# 
 14564   003FAA                     T2TMR           equ	16298	;# 
 14565   003FAA                     TMR2            equ	16298	;# 
 14566   003FAB                     T2PR            equ	16299	;# 
 14567   003FAB                     PR2             equ	16299	;# 
 14568   003FAC                     T2CON           equ	16300	;# 
 14569   003FAD                     T2HLT           equ	16301	;# 
 14570   003FAE                     T2CLKCON        equ	16302	;# 
 14571   003FAE                     T2CLK           equ	16302	;# 
 14572   003FAF                     T2RST           equ	16303	;# 
 14573   003FB0                     TMR1            equ	16304	;# 
 14574   003FB0                     TMR1L           equ	16304	;# 
 14575   003FB1                     TMR1H           equ	16305	;# 
 14576   003FB2                     T1CON           equ	16306	;# 
 14577   003FB2                     TMR1CON         equ	16306	;# 
 14578   003FB3                     T1GCON          equ	16307	;# 
 14579   003FB3                     TMR1GCON        equ	16307	;# 
 14580   003FB4                     T1GATE          equ	16308	;# 
 14581   003FB4                     TMR1GATE        equ	16308	;# 
 14582   003FB5                     T1CLK           equ	16309	;# 
 14583   003FB5                     TMR1CLK         equ	16309	;# 
 14584   003FB5                     PR1             equ	16309	;# 
 14585   003FB6                     TMR0L           equ	16310	;# 
 14586   003FB6                     TMR0            equ	16310	;# 
 14587   003FB7                     TMR0H           equ	16311	;# 
 14588   003FB7                     PR0             equ	16311	;# 
 14589   003FB8                     T0CON0          equ	16312	;# 
 14590   003FB9                     T0CON1          equ	16313	;# 
 14591   003FBA                     LATA            equ	16314	;# 
 14592   003FBB                     LATB            equ	16315	;# 
 14593   003FBC                     LATC            equ	16316	;# 
 14594   003FBD                     LATD            equ	16317	;# 
 14595   003FBE                     LATE            equ	16318	;# 
 14596   003FBF                     LATF            equ	16319	;# 
 14597   003FC2                     TRISA           equ	16322	;# 
 14598   003FC3                     TRISB           equ	16323	;# 
 14599   003FC4                     TRISC           equ	16324	;# 
 14600   003FC5                     TRISD           equ	16325	;# 
 14601   003FC6                     TRISE           equ	16326	;# 
 14602   003FC7                     TRISF           equ	16327	;# 
 14603   003FCA                     PORTA           equ	16330	;# 
 14604   003FCB                     PORTB           equ	16331	;# 
 14605   003FCC                     PORTC           equ	16332	;# 
 14606   003FCD                     PORTD           equ	16333	;# 
 14607   003FCE                     PORTE           equ	16334	;# 
 14608   003FCF                     PORTF           equ	16335	;# 
 14609   003FD2                     INTCON0         equ	16338	;# 
 14610   003FD3                     INTCON1         equ	16339	;# 
 14611   003FD4                     IVTLOCK         equ	16340	;# 
 14612   003FD5                     IVTBASE         equ	16341	;# 
 14613   003FD5                     IVTBASEL        equ	16341	;# 
 14614   003FD6                     IVTBASEH        equ	16342	;# 
 14615   003FD7                     IVTBASEU        equ	16343	;# 
 14616   003FD8                     STATUS          equ	16344	;# 
 14617   003FD9                     FSR2            equ	16345	;# 
 14618   003FD9                     FSR2L           equ	16345	;# 
 14619   003FDA                     FSR2H           equ	16346	;# 
 14620   003FDB                     PLUSW2          equ	16347	;# 
 14621   003FDC                     PREINC2         equ	16348	;# 
 14622   003FDD                     POSTDEC2        equ	16349	;# 
 14623   003FDE                     POSTINC2        equ	16350	;# 
 14624   003FDF                     INDF2           equ	16351	;# 
 14625   003FE0                     BSR             equ	16352	;# 
 14626   003FE1                     FSR1            equ	16353	;# 
 14627   003FE1                     FSR1L           equ	16353	;# 
 14628   003FE2                     FSR1H           equ	16354	;# 
 14629   003FE3                     PLUSW1          equ	16355	;# 
 14630   003FE4                     PREINC1         equ	16356	;# 
 14631   003FE5                     POSTDEC1        equ	16357	;# 
 14632   003FE6                     POSTINC1        equ	16358	;# 
 14633   003FE7                     INDF1           equ	16359	;# 
 14634   003FE8                     WREG            equ	16360	;# 
 14635   003FE9                     FSR0            equ	16361	;# 
 14636   003FE9                     FSR0L           equ	16361	;# 
 14637   003FEA                     FSR0H           equ	16362	;# 
 14638   003FEB                     PLUSW0          equ	16363	;# 
 14639   003FEC                     PREINC0         equ	16364	;# 
 14640   003FED                     POSTDEC0        equ	16365	;# 
 14641   003FEE                     POSTINC0        equ	16366	;# 
 14642   003FEF                     INDF0           equ	16367	;# 
 14643   003FF0                     PCON0           equ	16368	;# 
 14644   003FF1                     PCON1           equ	16369	;# 
 14645   003FF3                     PROD            equ	16371	;# 
 14646   003FF3                     PRODL           equ	16371	;# 
 14647   003FF4                     PRODH           equ	16372	;# 
 14648   003FF5                     TABLAT          equ	16373	;# 
 14649   003FF6                     TBLPTR          equ	16374	;# 
 14650   003FF6                     TBLPTRL         equ	16374	;# 
 14651   003FF7                     TBLPTRH         equ	16375	;# 
 14652   003FF8                     TBLPTRU         equ	16376	;# 
 14653   003FF9                     PCLAT           equ	16377	;# 
 14654   003FF9                     PCL             equ	16377	;# 
 14655   003FFA                     PCLATH          equ	16378	;# 
 14656   003FFB                     PCLATU          equ	16379	;# 
 14657   003FFC                     STKPTR          equ	16380	;# 
 14658   003FFD                     TOS             equ	16381	;# 
 14659   003FFD                     TOSL            equ	16381	;# 
 14660   003FFE                     TOSH            equ	16382	;# 
 14661   003FFF                     TOSU            equ	16383	;# 
 14662   003880                     STATUS_CSHAD    equ	14464	;# 
 14663   003881                     WREG_CSHAD      equ	14465	;# 
 14664   003882                     BSR_CSHAD       equ	14466	;# 
 14665   003883                     SHADCON         equ	14467	;# 
 14666   003884                     STATUS_SHAD     equ	14468	;# 
 14667   003885                     WREG_SHAD       equ	14469	;# 
 14668   003886                     BSR_SHAD        equ	14470	;# 
 14669   003887                     PCLATH_SHAD     equ	14471	;# 
 14670   003888                     PCLATU_SHAD     equ	14472	;# 
 14671   003889                     FSR0SH          equ	14473	;# 
 14672   003889                     FSR0L_SHAD      equ	14473	;# 
 14673   00388A                     FSR0H_SHAD      equ	14474	;# 
 14674   00388B                     FSR1SH          equ	14475	;# 
 14675   00388B                     FSR1L_SHAD      equ	14475	;# 
 14676   00388C                     FSR1H_SHAD      equ	14476	;# 
 14677   00388D                     FSR2SH          equ	14477	;# 
 14678   00388D                     FSR2L_SHAD      equ	14477	;# 
 14679   00388E                     FSR2H_SHAD      equ	14478	;# 
 14680   00388F                     PRODSH          equ	14479	;# 
 14681   00388F                     PRODL_SHAD      equ	14479	;# 
 14682   003890                     PRODH_SHAD      equ	14480	;# 
 14683   00389D                     IVTADL          equ	14493	;# 
 14684   00389E                     IVTADH          equ	14494	;# 
 14685   00389F                     IVTADU          equ	14495	;# 
 14686   00395B                     WDTCON0         equ	14683	;# 
 14687   00395C                     WDTCON1         equ	14684	;# 
 14688   00395D                     WDTPSL          equ	14685	;# 
 14689   00395E                     WDTPSH          equ	14686	;# 
 14690   00395F                     WDTTMR          equ	14687	;# 
 14691   003960                     CRCDATA         equ	14688	;# 
 14692   003960                     CRCDATL         equ	14688	;# 
 14693   003961                     CRCDATH         equ	14689	;# 
 14694   003962                     CRCACC          equ	14690	;# 
 14695   003962                     CRCACCL         equ	14690	;# 
 14696   003963                     CRCACCH         equ	14691	;# 
 14697   003964                     CRCSHFT         equ	14692	;# 
 14698   003964                     CRCSHIFTL       equ	14692	;# 
 14699   003965                     CRCSHIFTH       equ	14693	;# 
 14700   003966                     CRCXOR          equ	14694	;# 
 14701   003966                     CRCXORL         equ	14694	;# 
 14702   003967                     CRCXORH         equ	14695	;# 
 14703   003968                     CRCCON0         equ	14696	;# 
 14704   003969                     CRCCON1         equ	14697	;# 
 14705   003976                     SCANLADR        equ	14710	;# 
 14706   003976                     SCANLADRL       equ	14710	;# 
 14707   003977                     SCANLADRH       equ	14711	;# 
 14708   003978                     SCANLADRU       equ	14712	;# 
 14709   003979                     SCANHADR        equ	14713	;# 
 14710   003979                     SCANHADRL       equ	14713	;# 
 14711   00397A                     SCANHADRH       equ	14714	;# 
 14712   00397B                     SCANHADRU       equ	14715	;# 
 14713   00397C                     SCANCON0        equ	14716	;# 
 14714   00397D                     SCANTRIG        equ	14717	;# 
 14715   003980                     IPR0            equ	14720	;# 
 14716   003981                     IPR1            equ	14721	;# 
 14717   003982                     IPR2            equ	14722	;# 
 14718   003983                     IPR3            equ	14723	;# 
 14719   003984                     IPR4            equ	14724	;# 
 14720   003985                     IPR5            equ	14725	;# 
 14721   003986                     IPR6            equ	14726	;# 
 14722   003987                     IPR7            equ	14727	;# 
 14723   003988                     IPR8            equ	14728	;# 
 14724   003989                     IPR9            equ	14729	;# 
 14725   00398A                     IPR10           equ	14730	;# 
 14726   003990                     PIE0            equ	14736	;# 
 14727   003991                     PIE1            equ	14737	;# 
 14728   003992                     PIE2            equ	14738	;# 
 14729   003993                     PIE3            equ	14739	;# 
 14730   003994                     PIE4            equ	14740	;# 
 14731   003995                     PIE5            equ	14741	;# 
 14732   003996                     PIE6            equ	14742	;# 
 14733   003997                     PIE7            equ	14743	;# 
 14734   003998                     PIE8            equ	14744	;# 
 14735   003999                     PIE9            equ	14745	;# 
 14736   00399A                     PIE10           equ	14746	;# 
 14737   0039A0                     PIR0            equ	14752	;# 
 14738   0039A1                     PIR1            equ	14753	;# 
 14739   0039A2                     PIR2            equ	14754	;# 
 14740   0039A3                     PIR3            equ	14755	;# 
 14741   0039A4                     PIR4            equ	14756	;# 
 14742   0039A5                     PIR5            equ	14757	;# 
 14743   0039A6                     PIR6            equ	14758	;# 
 14744   0039A7                     PIR7            equ	14759	;# 
 14745   0039A8                     PIR8            equ	14760	;# 
 14746   0039A9                     PIR9            equ	14761	;# 
 14747   0039AA                     PIR10           equ	14762	;# 
 14748   0039C0                     PMD0            equ	14784	;# 
 14749   0039C1                     PMD1            equ	14785	;# 
 14750   0039C2                     PMD2            equ	14786	;# 
 14751   0039C3                     PMD3            equ	14787	;# 
 14752   0039C4                     PMD4            equ	14788	;# 
 14753   0039C5                     PMD5            equ	14789	;# 
 14754   0039C6                     PMD6            equ	14790	;# 
 14755   0039C7                     PMD7            equ	14791	;# 
 14756   0039D0                     BORCON          equ	14800	;# 
 14757   0039D1                     VREGCON         equ	14801	;# 
 14758   0039D8                     CPUDOZE         equ	14808	;# 
 14759   0039D9                     OSCCON1         equ	14809	;# 
 14760   0039DA                     OSCCON2         equ	14810	;# 
 14761   0039DB                     OSCCON3         equ	14811	;# 
 14762   0039DC                     OSCSTAT         equ	14812	;# 
 14763   0039DC                     OSCSTAT1        equ	14812	;# 
 14764   0039DD                     OSCEN           equ	14813	;# 
 14765   0039DE                     OSCTUNE         equ	14814	;# 
 14766   0039DF                     OSCFRQ          equ	14815	;# 
 14767   0039E0                     NVMADRL         equ	14816	;# 
 14768   0039E1                     NVMADRH         equ	14817	;# 
 14769   0039E3                     NVMDAT          equ	14819	;# 
 14770   0039E5                     NVMCON1         equ	14821	;# 
 14771   0039E6                     NVMCON2         equ	14822	;# 
 14772   0039EF                     PRLOCK          equ	14831	;# 
 14773   0039F1                     ISRPR           equ	14833	;# 
 14774   0039F2                     MAINPR          equ	14834	;# 
 14775   0039F3                     DMA1PR          equ	14835	;# 
 14776   0039F4                     DMA2PR          equ	14836	;# 
 14777   0039F7                     SCANPR          equ	14839	;# 
 14778   003A00                     RA0PPS          equ	14848	;# 
 14779   003A01                     RA1PPS          equ	14849	;# 
 14780   003A02                     RA2PPS          equ	14850	;# 
 14781   003A03                     RA3PPS          equ	14851	;# 
 14782   003A04                     RA4PPS          equ	14852	;# 
 14783   003A05                     RA5PPS          equ	14853	;# 
 14784   003A06                     RA6PPS          equ	14854	;# 
 14785   003A07                     RA7PPS          equ	14855	;# 
 14786   003A08                     RB0PPS          equ	14856	;# 
 14787   003A09                     RB1PPS          equ	14857	;# 
 14788   003A0A                     RB2PPS          equ	14858	;# 
 14789   003A0B                     RB3PPS          equ	14859	;# 
 14790   003A0C                     RB4PPS          equ	14860	;# 
 14791   003A0D                     RB5PPS          equ	14861	;# 
 14792   003A0E                     RB6PPS          equ	14862	;# 
 14793   003A0F                     RB7PPS          equ	14863	;# 
 14794   003A10                     RC0PPS          equ	14864	;# 
 14795   003A11                     RC1PPS          equ	14865	;# 
 14796   003A12                     RC2PPS          equ	14866	;# 
 14797   003A13                     RC3PPS          equ	14867	;# 
 14798   003A14                     RC4PPS          equ	14868	;# 
 14799   003A15                     RC5PPS          equ	14869	;# 
 14800   003A16                     RC6PPS          equ	14870	;# 
 14801   003A17                     RC7PPS          equ	14871	;# 
 14802   003A18                     RD0PPS          equ	14872	;# 
 14803   003A19                     RD1PPS          equ	14873	;# 
 14804   003A1A                     RD2PPS          equ	14874	;# 
 14805   003A1B                     RD3PPS          equ	14875	;# 
 14806   003A1C                     RD4PPS          equ	14876	;# 
 14807   003A1D                     RD5PPS          equ	14877	;# 
 14808   003A1E                     RD6PPS          equ	14878	;# 
 14809   003A1F                     RD7PPS          equ	14879	;# 
 14810   003A20                     RE0PPS          equ	14880	;# 
 14811   003A21                     RE1PPS          equ	14881	;# 
 14812   003A22                     RE2PPS          equ	14882	;# 
 14813   003A28                     RF0PPS          equ	14888	;# 
 14814   003A29                     RF1PPS          equ	14889	;# 
 14815   003A2A                     RF2PPS          equ	14890	;# 
 14816   003A2B                     RF3PPS          equ	14891	;# 
 14817   003A2C                     RF4PPS          equ	14892	;# 
 14818   003A2D                     RF5PPS          equ	14893	;# 
 14819   003A2E                     RF6PPS          equ	14894	;# 
 14820   003A2F                     RF7PPS          equ	14895	;# 
 14821   003A40                     ANSELA          equ	14912	;# 
 14822   003A41                     WPUA            equ	14913	;# 
 14823   003A42                     ODCONA          equ	14914	;# 
 14824   003A43                     SLRCONA         equ	14915	;# 
 14825   003A44                     INLVLA          equ	14916	;# 
 14826   003A45                     IOCAP           equ	14917	;# 
 14827   003A46                     IOCAN           equ	14918	;# 
 14828   003A47                     IOCAF           equ	14919	;# 
 14829   003A50                     ANSELB          equ	14928	;# 
 14830   003A51                     WPUB            equ	14929	;# 
 14831   003A52                     ODCONB          equ	14930	;# 
 14832   003A53                     SLRCONB         equ	14931	;# 
 14833   003A54                     INLVLB          equ	14932	;# 
 14834   003A55                     IOCBP           equ	14933	;# 
 14835   003A56                     IOCBN           equ	14934	;# 
 14836   003A57                     IOCBF           equ	14935	;# 
 14837   003A5A                     RB1I2C          equ	14938	;# 
 14838   003A5B                     RB2I2C          equ	14939	;# 
 14839   003A60                     ANSELC          equ	14944	;# 
 14840   003A61                     WPUC            equ	14945	;# 
 14841   003A62                     ODCONC          equ	14946	;# 
 14842   003A63                     SLRCONC         equ	14947	;# 
 14843   003A64                     INLVLC          equ	14948	;# 
 14844   003A65                     IOCCP           equ	14949	;# 
 14845   003A66                     IOCCN           equ	14950	;# 
 14846   003A67                     IOCCF           equ	14951	;# 
 14847   003A6A                     RC3I2C          equ	14954	;# 
 14848   003A6B                     RC4I2C          equ	14955	;# 
 14849   003A70                     ANSELD          equ	14960	;# 
 14850   003A71                     WPUD            equ	14961	;# 
 14851   003A72                     ODCOND          equ	14962	;# 
 14852   003A73                     SLRCOND         equ	14963	;# 
 14853   003A74                     INLVLD          equ	14964	;# 
 14854   003A7A                     RD0I2C          equ	14970	;# 
 14855   003A7B                     RD1I2C          equ	14971	;# 
 14856   003A80                     ANSELE          equ	14976	;# 
 14857   003A81                     WPUE            equ	14977	;# 
 14858   003A82                     ODCONE          equ	14978	;# 
 14859   003A83                     SLRCONE         equ	14979	;# 
 14860   003A84                     INLVLE          equ	14980	;# 
 14861   003A85                     IOCEP           equ	14981	;# 
 14862   003A86                     IOCEN           equ	14982	;# 
 14863   003A87                     IOCEF           equ	14983	;# 
 14864   003A90                     ANSELF          equ	14992	;# 
 14865   003A91                     WPUF            equ	14993	;# 
 14866   003A92                     ODCONF          equ	14994	;# 
 14867   003A93                     SLRCONF         equ	14995	;# 
 14868   003A94                     INLVLF          equ	14996	;# 
 14869   003ABF                     PPSLOCK         equ	15039	;# 
 14870   003AC0                     INT0PPS         equ	15040	;# 
 14871   003AC1                     INT1PPS         equ	15041	;# 
 14872   003AC2                     INT2PPS         equ	15042	;# 
 14873   003AC3                     T0CKIPPS        equ	15043	;# 
 14874   003AC4                     T1CKIPPS        equ	15044	;# 
 14875   003AC5                     T1GPPS          equ	15045	;# 
 14876   003AC6                     T3CKIPPS        equ	15046	;# 
 14877   003AC7                     T3GPPS          equ	15047	;# 
 14878   003AC8                     T5CKIPPS        equ	15048	;# 
 14879   003AC9                     T5GPPS          equ	15049	;# 
 14880   003ACA                     T2INPPS         equ	15050	;# 
 14881   003ACB                     T4INPPS         equ	15051	;# 
 14882   003ACC                     T6INPPS         equ	15052	;# 
 14883   003ACD                     CCP1PPS         equ	15053	;# 
 14884   003ACE                     CCP2PPS         equ	15054	;# 
 14885   003ACF                     CCP3PPS         equ	15055	;# 
 14886   003AD0                     CCP4PPS         equ	15056	;# 
 14887   003AD1                     SMT1WINPPS      equ	15057	;# 
 14888   003AD2                     SMT1SIGPPS      equ	15058	;# 
 14889   003AD3                     CWG1INPPS       equ	15059	;# 
 14890   003AD4                     CWG2INPPS       equ	15060	;# 
 14891   003AD5                     CWG3INPPS       equ	15061	;# 
 14892   003AD6                     MD1CARLPPS      equ	15062	;# 
 14893   003AD7                     MD1CARHPPS      equ	15063	;# 
 14894   003AD8                     MD1SRCPPS       equ	15064	;# 
 14895   003AD9                     CLCIN0PPS       equ	15065	;# 
 14896   003ADA                     CLCIN1PPS       equ	15066	;# 
 14897   003ADB                     CLCIN2PPS       equ	15067	;# 
 14898   003ADC                     CLCIN3PPS       equ	15068	;# 
 14899   003ADD                     ADACTPPS        equ	15069	;# 
 14900   003ADE                     SPI1SCKPPS      equ	15070	;# 
 14901   003ADF                     SPI1SDIPPS      equ	15071	;# 
 14902   003AE0                     SPI1SSPPS       equ	15072	;# 
 14903   003AE1                     I2C1SCLPPS      equ	15073	;# 
 14904   003AE2                     I2C1SDAPPS      equ	15074	;# 
 14905   003AE3                     I2C2SCLPPS      equ	15075	;# 
 14906   003AE4                     I2C2SDAPPS      equ	15076	;# 
 14907   003AE5                     U1RXPPS         equ	15077	;# 
 14908   003AE6                     U1CTSPPS        equ	15078	;# 
 14909   003AE8                     U2RXPPS         equ	15080	;# 
 14910   003AE9                     U2CTSPPS        equ	15081	;# 
 14911   003BC9                     DMA2BUF         equ	15305	;# 
 14912   003BCA                     DMA2DCNT        equ	15306	;# 
 14913   003BCA                     DMA2DCNTL       equ	15306	;# 
 14914   003BCB                     DMA2DCNTH       equ	15307	;# 
 14915   003BCC                     DMA2DPTR        equ	15308	;# 
 14916   003BCC                     DMA2DPTRL       equ	15308	;# 
 14917   003BCD                     DMA2DPTRH       equ	15309	;# 
 14918   003BCE                     DMA2DSZ         equ	15310	;# 
 14919   003BCE                     DMA2DSZL        equ	15310	;# 
 14920   003BCF                     DMA2DSZH        equ	15311	;# 
 14921   003BD0                     DMA2DSA         equ	15312	;# 
 14922   003BD0                     DMA2DSAL        equ	15312	;# 
 14923   003BD1                     DMA2DSAH        equ	15313	;# 
 14924   003BD2                     DMA2SCNT        equ	15314	;# 
 14925   003BD2                     DMA2SCNTL       equ	15314	;# 
 14926   003BD3                     DMA2SCNTH       equ	15315	;# 
 14927   003BD4                     DMA2SPTR        equ	15316	;# 
 14928   003BD4                     DMA2SPTRL       equ	15316	;# 
 14929   003BD5                     DMA2SPTRH       equ	15317	;# 
 14930   003BD6                     DMA2SPTRU       equ	15318	;# 
 14931   003BD7                     DMA2SSZ         equ	15319	;# 
 14932   003BD7                     DMA2SSZL        equ	15319	;# 
 14933   003BD8                     DMA2SSZH        equ	15320	;# 
 14934   003BD9                     DMA2SSA         equ	15321	;# 
 14935   003BD9                     DMA2SSAL        equ	15321	;# 
 14936   003BDA                     DMA2SSAH        equ	15322	;# 
 14937   003BDB                     DMA2SSAU        equ	15323	;# 
 14938   003BDC                     DMA2CON0        equ	15324	;# 
 14939   003BDD                     DMA2CON1        equ	15325	;# 
 14940   003BDE                     DMA2AIRQ        equ	15326	;# 
 14941   003BDF                     DMA2SIRQ        equ	15327	;# 
 14942   003BE9                     DMA1BUF         equ	15337	;# 
 14943   003BEA                     DMA1DCNT        equ	15338	;# 
 14944   003BEA                     DMA1DCNTL       equ	15338	;# 
 14945   003BEB                     DMA1DCNTH       equ	15339	;# 
 14946   003BEC                     DMA1DPTR        equ	15340	;# 
 14947   003BEC                     DMA1DPTRL       equ	15340	;# 
 14948   003BED                     DMA1DPTRH       equ	15341	;# 
 14949   003BEE                     DMA1DSZ         equ	15342	;# 
 14950   003BEE                     DMA1DSZL        equ	15342	;# 
 14951   003BEF                     DMA1DSZH        equ	15343	;# 
 14952   003BF0                     DMA1DSA         equ	15344	;# 
 14953   003BF0                     DMA1DSAL        equ	15344	;# 
 14954   003BF1                     DMA1DSAH        equ	15345	;# 
 14955   003BF2                     DMA1SCNT        equ	15346	;# 
 14956   003BF2                     DMA1SCNTL       equ	15346	;# 
 14957   003BF3                     DMA1SCNTH       equ	15347	;# 
 14958   003BF4                     DMA1SPTR        equ	15348	;# 
 14959   003BF4                     DMA1SPTRL       equ	15348	;# 
 14960   003BF5                     DMA1SPTRH       equ	15349	;# 
 14961   003BF6                     DMA1SPTRU       equ	15350	;# 
 14962   003BF7                     DMA1SSZ         equ	15351	;# 
 14963   003BF7                     DMA1SSZL        equ	15351	;# 
 14964   003BF8                     DMA1SSZH        equ	15352	;# 
 14965   003BF9                     DMA1SSA         equ	15353	;# 
 14966   003BF9                     DMA1SSAL        equ	15353	;# 
 14967   003BFA                     DMA1SSAH        equ	15354	;# 
 14968   003BFB                     DMA1SSAU        equ	15355	;# 
 14969   003BFC                     DMA1CON0        equ	15356	;# 
 14970   003BFD                     DMA1CON1        equ	15357	;# 
 14971   003BFE                     DMA1AIRQ        equ	15358	;# 
 14972   003BFF                     DMA1SIRQ        equ	15359	;# 
 14973   003C56                     CLC4CON         equ	15446	;# 
 14974   003C57                     CLC4POL         equ	15447	;# 
 14975   003C58                     CLC4SEL0        equ	15448	;# 
 14976   003C59                     CLC4SEL1        equ	15449	;# 
 14977   003C5A                     CLC4SEL2        equ	15450	;# 
 14978   003C5B                     CLC4SEL3        equ	15451	;# 
 14979   003C5C                     CLC4GLS0        equ	15452	;# 
 14980   003C5D                     CLC4GLS1        equ	15453	;# 
 14981   003C5E                     CLC4GLS2        equ	15454	;# 
 14982   003C5F                     CLC4GLS3        equ	15455	;# 
 14983   003C60                     CLC3CON         equ	15456	;# 
 14984   003C61                     CLC3POL         equ	15457	;# 
 14985   003C62                     CLC3SEL0        equ	15458	;# 
 14986   003C63                     CLC3SEL1        equ	15459	;# 
 14987   003C64                     CLC3SEL2        equ	15460	;# 
 14988   003C65                     CLC3SEL3        equ	15461	;# 
 14989   003C66                     CLC3GLS0        equ	15462	;# 
 14990   003C67                     CLC3GLS1        equ	15463	;# 
 14991   003C68                     CLC3GLS2        equ	15464	;# 
 14992   003C69                     CLC3GLS3        equ	15465	;# 
 14993   003C6A                     CLC2CON         equ	15466	;# 
 14994   003C6B                     CLC2POL         equ	15467	;# 
 14995   003C6C                     CLC2SEL0        equ	15468	;# 
 14996   003C6D                     CLC2SEL1        equ	15469	;# 
 14997   003C6E                     CLC2SEL2        equ	15470	;# 
 14998   003C6F                     CLC2SEL3        equ	15471	;# 
 14999   003C70                     CLC2GLS0        equ	15472	;# 
 15000   003C71                     CLC2GLS1        equ	15473	;# 
 15001   003C72                     CLC2GLS2        equ	15474	;# 
 15002   003C73                     CLC2GLS3        equ	15475	;# 
 15003   003C74                     CLC1CON         equ	15476	;# 
 15004   003C75                     CLC1POL         equ	15477	;# 
 15005   003C76                     CLC1SEL0        equ	15478	;# 
 15006   003C77                     CLC1SEL1        equ	15479	;# 
 15007   003C78                     CLC1SEL2        equ	15480	;# 
 15008   003C79                     CLC1SEL3        equ	15481	;# 
 15009   003C7A                     CLC1GLS0        equ	15482	;# 
 15010   003C7B                     CLC1GLS1        equ	15483	;# 
 15011   003C7C                     CLC1GLS2        equ	15484	;# 
 15012   003C7D                     CLC1GLS3        equ	15485	;# 
 15013   003C7E                     CLCDATA0        equ	15486	;# 
 15014   003CE5                     CLKRCON         equ	15589	;# 
 15015   003CE6                     CLKRCLK         equ	15590	;# 
 15016   003CFA                     MD1CON0         equ	15610	;# 
 15017   003CFB                     MD1CON1         equ	15611	;# 
 15018   003CFC                     MD1SRC          equ	15612	;# 
 15019   003CFD                     MD1CARL         equ	15613	;# 
 15020   003CFE                     MD1CARH         equ	15614	;# 
 15021   003D10                     SPI1RXB         equ	15632	;# 
 15022   003D11                     SPI1TXB         equ	15633	;# 
 15023   003D12                     SPI1TCNT        equ	15634	;# 
 15024   003D12                     SPI1TCNTL       equ	15634	;# 
 15025   003D13                     SPI1TCNTH       equ	15635	;# 
 15026   003D14                     SPI1CON0        equ	15636	;# 
 15027   003D15                     SPI1CON1        equ	15637	;# 
 15028   003D16                     SPI1CON2        equ	15638	;# 
 15029   003D17                     SPI1STATUS      equ	15639	;# 
 15030   003D18                     SPI1TWIDTH      equ	15640	;# 
 15031   003D19                     SPI1BAUD        equ	15641	;# 
 15032   003D1A                     SPI1INTF        equ	15642	;# 
 15033   003D1B                     SPI1INTE        equ	15643	;# 
 15034   003D1C                     SPI1CLK         equ	15644	;# 
 15035   003D54                     I2C2RXB         equ	15700	;# 
 15036   003D55                     I2C2TXB         equ	15701	;# 
 15037   003D56                     I2C2CNT         equ	15702	;# 
 15038   003D57                     I2C2ADB0        equ	15703	;# 
 15039   003D58                     I2C2ADB1        equ	15704	;# 
 15040   003D59                     I2C2ADR0        equ	15705	;# 
 15041   003D5A                     I2C2ADR1        equ	15706	;# 
 15042   003D5B                     I2C2ADR2        equ	15707	;# 
 15043   003D5C                     I2C2ADR3        equ	15708	;# 
 15044   003D5D                     I2C2CON0        equ	15709	;# 
 15045   003D5E                     I2C2CON1        equ	15710	;# 
 15046   003D5F                     I2C2CON2        equ	15711	;# 
 15047   003D60                     I2C2ERR         equ	15712	;# 
 15048   003D61                     I2C2STAT0       equ	15713	;# 
 15049   003D62                     I2C2STAT1       equ	15714	;# 
 15050   003D63                     I2C2PIR         equ	15715	;# 
 15051   003D64                     I2C2PIE         equ	15716	;# 
 15052   003D65                     I2C2CLK         equ	15717	;# 
 15053   003D66                     I2C2BTO         equ	15718	;# 
 15054   003D6A                     I2C1RXB         equ	15722	;# 
 15055   003D6B                     I2C1TXB         equ	15723	;# 
 15056   003D6C                     I2C1CNT         equ	15724	;# 
 15057   003D6D                     I2C1ADB0        equ	15725	;# 
 15058   003D6E                     I2C1ADB1        equ	15726	;# 
 15059   003D6F                     I2C1ADR0        equ	15727	;# 
 15060   003D70                     I2C1ADR1        equ	15728	;# 
 15061   003D71                     I2C1ADR2        equ	15729	;# 
 15062   003D72                     I2C1ADR3        equ	15730	;# 
 15063   003D73                     I2C1CON0        equ	15731	;# 
 15064   003D74                     I2C1CON1        equ	15732	;# 
 15065   003D75                     I2C1CON2        equ	15733	;# 
 15066   003D76                     I2C1ERR         equ	15734	;# 
 15067   003D77                     I2C1STAT0       equ	15735	;# 
 15068   003D78                     I2C1STAT1       equ	15736	;# 
 15069   003D79                     I2C1PIR         equ	15737	;# 
 15070   003D7A                     I2C1PIE         equ	15738	;# 
 15071   003D7B                     I2C1CLK         equ	15739	;# 
 15072   003D7C                     I2C1BTO         equ	15740	;# 
 15073   003DD0                     U2RXB           equ	15824	;# 
 15074   003DD0                     U2RXBL          equ	15824	;# 
 15075   003DD2                     U2TXB           equ	15826	;# 
 15076   003DD2                     U2TXBL          equ	15826	;# 
 15077   003DD4                     U2P1            equ	15828	;# 
 15078   003DD4                     U2P1L           equ	15828	;# 
 15079   003DD6                     U2P2            equ	15830	;# 
 15080   003DD6                     U2P2L           equ	15830	;# 
 15081   003DD8                     U2P3            equ	15832	;# 
 15082   003DD8                     U2P3L           equ	15832	;# 
 15083   003DDA                     U2CON0          equ	15834	;# 
 15084   003DDB                     U2CON1          equ	15835	;# 
 15085   003DDC                     U2CON2          equ	15836	;# 
 15086   003DDD                     U2BRG           equ	15837	;# 
 15087   003DDD                     U2BRGL          equ	15837	;# 
 15088   003DDE                     U2BRGH          equ	15838	;# 
 15089   003DDF                     U2FIFO          equ	15839	;# 
 15090   003DE0                     U2UIR           equ	15840	;# 
 15091   003DE1                     U2ERRIR         equ	15841	;# 
 15092   003DE2                     U2ERRIE         equ	15842	;# 
 15093   003DE8                     U1RXB           equ	15848	;# 
 15094   003DE8                     U1RXBL          equ	15848	;# 
 15095   003DE9                     U1RXCHK         equ	15849	;# 
 15096   003DEA                     U1TXB           equ	15850	;# 
 15097   003DEA                     U1TXBL          equ	15850	;# 
 15098   003DEB                     U1TXCHK         equ	15851	;# 
 15099   003DEC                     U1P1            equ	15852	;# 
 15100   003DEC                     U1P1L           equ	15852	;# 
 15101   003DED                     U1P1H           equ	15853	;# 
 15102   003DEE                     U1P2            equ	15854	;# 
 15103   003DEE                     U1P2L           equ	15854	;# 
 15104   003DEF                     U1P2H           equ	15855	;# 
 15105   003DF0                     U1P3            equ	15856	;# 
 15106   003DF0                     U1P3L           equ	15856	;# 
 15107   003DF1                     U1P3H           equ	15857	;# 
 15108   003DF2                     U1CON0          equ	15858	;# 
 15109   003DF3                     U1CON1          equ	15859	;# 
 15110   003DF4                     U1CON2          equ	15860	;# 
 15111   003DF5                     U1BRG           equ	15861	;# 
 15112   003DF5                     U1BRGL          equ	15861	;# 
 15113   003DF6                     U1BRGH          equ	15862	;# 
 15114   003DF7                     U1FIFO          equ	15863	;# 
 15115   003DF8                     U1UIR           equ	15864	;# 
 15116   003DF9                     U1ERRIR         equ	15865	;# 
 15117   003DFA                     U1ERRIE         equ	15866	;# 
 15118   003E9C                     DAC1CON1        equ	16028	;# 
 15119   003E9E                     DAC1CON0        equ	16030	;# 
 15120   003EB8                     CM2CON0         equ	16056	;# 
 15121   003EB9                     CM2CON1         equ	16057	;# 
 15122   003EBA                     CM2NCH          equ	16058	;# 
 15123   003EBB                     CM2PCH          equ	16059	;# 
 15124   003EBC                     CM1CON0         equ	16060	;# 
 15125   003EBD                     CM1CON1         equ	16061	;# 
 15126   003EBE                     CM1NCH          equ	16062	;# 
 15127   003EBF                     CM1PCH          equ	16063	;# 
 15128   003EC0                     CMOUT           equ	16064	;# 
 15129   003EC1                     FVRCON          equ	16065	;# 
 15130   003EC3                     ZCDCON          equ	16067	;# 
 15131   003EC9                     HLVDCON0        equ	16073	;# 
 15132   003ECA                     HLVDCON1        equ	16074	;# 
 15133   003ED7                     ADCP            equ	16087	;# 
 15134   003EDE                     ADLTH           equ	16094	;# 
 15135   003EDE                     ADLTHL          equ	16094	;# 
 15136   003EDF                     ADLTHH          equ	16095	;# 
 15137   003EE0                     ADUTH           equ	16096	;# 
 15138   003EE0                     ADUTHL          equ	16096	;# 
 15139   003EE1                     ADUTHH          equ	16097	;# 
 15140   003EE2                     ADERR           equ	16098	;# 
 15141   003EE2                     ADERRL          equ	16098	;# 
 15142   003EE3                     ADERRH          equ	16099	;# 
 15143   003EE4                     ADSTPT          equ	16100	;# 
 15144   003EE4                     ADSTPTL         equ	16100	;# 
 15145   003EE5                     ADSTPTH         equ	16101	;# 
 15146   003EE6                     ADFLTR          equ	16102	;# 
 15147   003EE6                     ADFLTRL         equ	16102	;# 
 15148   003EE7                     ADFLTRH         equ	16103	;# 
 15149   003EE8                     ADACC           equ	16104	;# 
 15150   003EE8                     ADACCL          equ	16104	;# 
 15151   003EE9                     ADACCH          equ	16105	;# 
 15152   003EEA                     ADACCU          equ	16106	;# 
 15153   003EEB                     ADCNT           equ	16107	;# 
 15154   003EEC                     ADRPT           equ	16108	;# 
 15155   003EED                     ADPREV          equ	16109	;# 
 15156   003EED                     ADPREVL         equ	16109	;# 
 15157   003EEE                     ADPREVH         equ	16110	;# 
 15158   003EEF                     ADRES           equ	16111	;# 
 15159   003EEF                     ADRESL          equ	16111	;# 
 15160   003EF0                     ADRESH          equ	16112	;# 
 15161   003EF1                     ADPCH           equ	16113	;# 
 15162   003EF3                     ADACQ           equ	16115	;# 
 15163   003EF3                     ADACQL          equ	16115	;# 
 15164   003EF4                     ADACQH          equ	16116	;# 
 15165   003EF5                     ADCAP           equ	16117	;# 
 15166   003EF6                     ADPRE           equ	16118	;# 
 15167   003EF6                     ADPREL          equ	16118	;# 
 15168   003EF7                     ADPREH          equ	16119	;# 
 15169   003EF8                     ADCON0          equ	16120	;# 
 15170   003EF9                     ADCON1          equ	16121	;# 
 15171   003EFA                     ADCON2          equ	16122	;# 
 15172   003EFB                     ADCON3          equ	16123	;# 
 15173   003EFC                     ADSTAT          equ	16124	;# 
 15174   003EFD                     ADREF           equ	16125	;# 
 15175   003EFE                     ADACT           equ	16126	;# 
 15176   003EFF                     ADCLK           equ	16127	;# 
 15177   003F12                     SMT1TMR         equ	16146	;# 
 15178   003F12                     SMT1TMRL        equ	16146	;# 
 15179   003F13                     SMT1TMRH        equ	16147	;# 
 15180   003F14                     SMT1TMRU        equ	16148	;# 
 15181   003F15                     SMT1CPR         equ	16149	;# 
 15182   003F15                     SMT1CPRL        equ	16149	;# 
 15183   003F16                     SMT1CPRH        equ	16150	;# 
 15184   003F17                     SMT1CPRU        equ	16151	;# 
 15185   003F18                     SMT1CPW         equ	16152	;# 
 15186   003F18                     SMT1CPWL        equ	16152	;# 
 15187   003F19                     SMT1CPWH        equ	16153	;# 
 15188   003F1A                     SMT1CPWU        equ	16154	;# 
 15189   003F1B                     SMT1PR          equ	16155	;# 
 15190   003F1B                     SMT1PRL         equ	16155	;# 
 15191   003F1C                     SMT1PRH         equ	16156	;# 
 15192   003F1D                     SMT1PRU         equ	16157	;# 
 15193   003F1E                     SMT1CON0        equ	16158	;# 
 15194   003F1F                     SMT1CON1        equ	16159	;# 
 15195   003F20                     SMT1STAT        equ	16160	;# 
 15196   003F21                     SMT1CLK         equ	16161	;# 
 15197   003F22                     SMT1SIG         equ	16162	;# 
 15198   003F23                     SMT1WIN         equ	16163	;# 
 15199   003F38                     NCO1ACC         equ	16184	;# 
 15200   003F38                     NCO1ACCL        equ	16184	;# 
 15201   003F39                     NCO1ACCH        equ	16185	;# 
 15202   003F3A                     NCO1ACCU        equ	16186	;# 
 15203   003F3B                     NCO1INC         equ	16187	;# 
 15204   003F3B                     NCO1INCL        equ	16187	;# 
 15205   003F3C                     NCO1INCH        equ	16188	;# 
 15206   003F3D                     NCO1INCU        equ	16189	;# 
 15207   003F3E                     NCO1CON         equ	16190	;# 
 15208   003F3F                     NCO1CLK         equ	16191	;# 
 15209   003F40                     CWG3CLK         equ	16192	;# 
 15210   003F40                     CWG3CLKCON      equ	16192	;# 
 15211   003F41                     CWG3ISM         equ	16193	;# 
 15212   003F41                     CWG3DAT         equ	16193	;# 
 15213   003F42                     CWG3DBR         equ	16194	;# 
 15214   003F43                     CWG3DBF         equ	16195	;# 
 15215   003F44                     CWG3CON0        equ	16196	;# 
 15216   003F45                     CWG3CON1        equ	16197	;# 
 15217   003F46                     CWG3AS0         equ	16198	;# 
 15218   003F47                     CWG3AS1         equ	16199	;# 
 15219   003F48                     CWG3STR         equ	16200	;# 
 15220   003F49                     CWG2CLK         equ	16201	;# 
 15221   003F49                     CWG2CLKCON      equ	16201	;# 
 15222   003F4A                     CWG2ISM         equ	16202	;# 
 15223   003F4A                     CWG2DAT         equ	16202	;# 
 15224   003F4B                     CWG2DBR         equ	16203	;# 
 15225   003F4C                     CWG2DBF         equ	16204	;# 
 15226   003F4D                     CWG2CON0        equ	16205	;# 
 15227   003F4E                     CWG2CON1        equ	16206	;# 
 15228   003F4F                     CWG2AS0         equ	16207	;# 
 15229   003F50                     CWG2AS1         equ	16208	;# 
 15230   003F51                     CWG2STR         equ	16209	;# 
 15231   003F52                     CWG1CLK         equ	16210	;# 
 15232   003F52                     CWG1CLKCON      equ	16210	;# 
 15233   003F53                     CWG1ISM         equ	16211	;# 
 15234   003F53                     CWG1DAT         equ	16211	;# 
 15235   003F54                     CWG1DBR         equ	16212	;# 
 15236   003F55                     CWG1DBF         equ	16213	;# 
 15237   003F56                     CWG1CON0        equ	16214	;# 
 15238   003F57                     CWG1CON1        equ	16215	;# 
 15239   003F58                     CWG1AS0         equ	16216	;# 
 15240   003F59                     CWG1AS1         equ	16217	;# 
 15241   003F5A                     CWG1STR         equ	16218	;# 
 15242   003F5E                     CCPTMRS0        equ	16222	;# 
 15243   003F5F                     CCPTMRS1        equ	16223	;# 
 15244   003F60                     PWM8DC          equ	16224	;# 
 15245   003F60                     PWM8DCL         equ	16224	;# 
 15246   003F61                     PWM8DCH         equ	16225	;# 
 15247   003F62                     PWM8CON         equ	16226	;# 
 15248   003F64                     PWM7DC          equ	16228	;# 
 15249   003F64                     PWM7DCL         equ	16228	;# 
 15250   003F65                     PWM7DCH         equ	16229	;# 
 15251   003F66                     PWM7CON         equ	16230	;# 
 15252   003F68                     PWM6DC          equ	16232	;# 
 15253   003F68                     PWM6DCL         equ	16232	;# 
 15254   003F69                     PWM6DCH         equ	16233	;# 
 15255   003F6A                     PWM6CON         equ	16234	;# 
 15256   003F6C                     PWM5DC          equ	16236	;# 
 15257   003F6C                     PWM5DCL         equ	16236	;# 
 15258   003F6D                     PWM5DCH         equ	16237	;# 
 15259   003F6E                     PWM5CON         equ	16238	;# 
 15260   003F70                     CCPR4           equ	16240	;# 
 15261   003F70                     CCPR4L          equ	16240	;# 
 15262   003F71                     CCPR4H          equ	16241	;# 
 15263   003F72                     CCP4CON         equ	16242	;# 
 15264   003F73                     CCP4CAP         equ	16243	;# 
 15265   003F74                     CCPR3           equ	16244	;# 
 15266   003F74                     CCPR3L          equ	16244	;# 
 15267   003F75                     CCPR3H          equ	16245	;# 
 15268   003F76                     CCP3CON         equ	16246	;# 
 15269   003F77                     CCP3CAP         equ	16247	;# 
 15270   003F78                     CCPR2           equ	16248	;# 
 15271   003F78                     CCPR2L          equ	16248	;# 
 15272   003F79                     CCPR2H          equ	16249	;# 
 15273   003F7A                     CCP2CON         equ	16250	;# 
 15274   003F7B                     CCP2CAP         equ	16251	;# 
 15275   003F7C                     CCPR1           equ	16252	;# 
 15276   003F7C                     CCPR1L          equ	16252	;# 
 15277   003F7D                     CCPR1H          equ	16253	;# 
 15278   003F7E                     CCP1CON         equ	16254	;# 
 15279   003F7F                     CCP1CAP         equ	16255	;# 
 15280   003F92                     T6TMR           equ	16274	;# 
 15281   003F92                     TMR6            equ	16274	;# 
 15282   003F93                     T6PR            equ	16275	;# 
 15283   003F93                     PR6             equ	16275	;# 
 15284   003F94                     T6CON           equ	16276	;# 
 15285   003F95                     T6HLT           equ	16277	;# 
 15286   003F96                     T6CLKCON        equ	16278	;# 
 15287   003F96                     T6CLK           equ	16278	;# 
 15288   003F97                     T6RST           equ	16279	;# 
 15289   003F98                     TMR5            equ	16280	;# 
 15290   003F98                     TMR5L           equ	16280	;# 
 15291   003F99                     TMR5H           equ	16281	;# 
 15292   003F9A                     T5CON           equ	16282	;# 
 15293   003F9A                     TMR5CON         equ	16282	;# 
 15294   003F9B                     T5GCON          equ	16283	;# 
 15295   003F9B                     TMR5GCON        equ	16283	;# 
 15296   003F9C                     T5GATE          equ	16284	;# 
 15297   003F9C                     TMR5GATE        equ	16284	;# 
 15298   003F9D                     T5CLK           equ	16285	;# 
 15299   003F9D                     TMR5CLK         equ	16285	;# 
 15300   003F9D                     PR5             equ	16285	;# 
 15301   003F9E                     T4TMR           equ	16286	;# 
 15302   003F9E                     TMR4            equ	16286	;# 
 15303   003F9F                     T4PR            equ	16287	;# 
 15304   003F9F                     PR4             equ	16287	;# 
 15305   003FA0                     T4CON           equ	16288	;# 
 15306   003FA1                     T4HLT           equ	16289	;# 
 15307   003FA2                     T4CLKCON        equ	16290	;# 
 15308   003FA2                     T4CLK           equ	16290	;# 
 15309   003FA3                     T4RST           equ	16291	;# 
 15310   003FA4                     TMR3            equ	16292	;# 
 15311   003FA4                     TMR3L           equ	16292	;# 
 15312   003FA5                     TMR3H           equ	16293	;# 
 15313   003FA6                     T3CON           equ	16294	;# 
 15314   003FA6                     TMR3CON         equ	16294	;# 
 15315   003FA7                     T3GCON          equ	16295	;# 
 15316   003FA7                     TMR3GCON        equ	16295	;# 
 15317   003FA8                     T3GATE          equ	16296	;# 
 15318   003FA8                     TMR3GATE        equ	16296	;# 
 15319   003FA9                     T3CLK           equ	16297	;# 
 15320   003FA9                     TMR3CLK         equ	16297	;# 
 15321   003FA9                     PR3             equ	16297	;# 
 15322   003FAA                     T2TMR           equ	16298	;# 
 15323   003FAA                     TMR2            equ	16298	;# 
 15324   003FAB                     T2PR            equ	16299	;# 
 15325   003FAB                     PR2             equ	16299	;# 
 15326   003FAC                     T2CON           equ	16300	;# 
 15327   003FAD                     T2HLT           equ	16301	;# 
 15328   003FAE                     T2CLKCON        equ	16302	;# 
 15329   003FAE                     T2CLK           equ	16302	;# 
 15330   003FAF                     T2RST           equ	16303	;# 
 15331   003FB0                     TMR1            equ	16304	;# 
 15332   003FB0                     TMR1L           equ	16304	;# 
 15333   003FB1                     TMR1H           equ	16305	;# 
 15334   003FB2                     T1CON           equ	16306	;# 
 15335   003FB2                     TMR1CON         equ	16306	;# 
 15336   003FB3                     T1GCON          equ	16307	;# 
 15337   003FB3                     TMR1GCON        equ	16307	;# 
 15338   003FB4                     T1GATE          equ	16308	;# 
 15339   003FB4                     TMR1GATE        equ	16308	;# 
 15340   003FB5                     T1CLK           equ	16309	;# 
 15341   003FB5                     TMR1CLK         equ	16309	;# 
 15342   003FB5                     PR1             equ	16309	;# 
 15343   003FB6                     TMR0L           equ	16310	;# 
 15344   003FB6                     TMR0            equ	16310	;# 
 15345   003FB7                     TMR0H           equ	16311	;# 
 15346   003FB7                     PR0             equ	16311	;# 
 15347   003FB8                     T0CON0          equ	16312	;# 
 15348   003FB9                     T0CON1          equ	16313	;# 
 15349   003FBA                     LATA            equ	16314	;# 
 15350   003FBB                     LATB            equ	16315	;# 
 15351   003FBC                     LATC            equ	16316	;# 
 15352   003FBD                     LATD            equ	16317	;# 
 15353   003FBE                     LATE            equ	16318	;# 
 15354   003FBF                     LATF            equ	16319	;# 
 15355   003FC2                     TRISA           equ	16322	;# 
 15356   003FC3                     TRISB           equ	16323	;# 
 15357   003FC4                     TRISC           equ	16324	;# 
 15358   003FC5                     TRISD           equ	16325	;# 
 15359   003FC6                     TRISE           equ	16326	;# 
 15360   003FC7                     TRISF           equ	16327	;# 
 15361   003FCA                     PORTA           equ	16330	;# 
 15362   003FCB                     PORTB           equ	16331	;# 
 15363   003FCC                     PORTC           equ	16332	;# 
 15364   003FCD                     PORTD           equ	16333	;# 
 15365   003FCE                     PORTE           equ	16334	;# 
 15366   003FCF                     PORTF           equ	16335	;# 
 15367   003FD2                     INTCON0         equ	16338	;# 
 15368   003FD3                     INTCON1         equ	16339	;# 
 15369   003FD4                     IVTLOCK         equ	16340	;# 
 15370   003FD5                     IVTBASE         equ	16341	;# 
 15371   003FD5                     IVTBASEL        equ	16341	;# 
 15372   003FD6                     IVTBASEH        equ	16342	;# 
 15373   003FD7                     IVTBASEU        equ	16343	;# 
 15374   003FD8                     STATUS          equ	16344	;# 
 15375   003FD9                     FSR2            equ	16345	;# 
 15376   003FD9                     FSR2L           equ	16345	;# 
 15377   003FDA                     FSR2H           equ	16346	;# 
 15378   003FDB                     PLUSW2          equ	16347	;# 
 15379   003FDC                     PREINC2         equ	16348	;# 
 15380   003FDD                     POSTDEC2        equ	16349	;# 
 15381   003FDE                     POSTINC2        equ	16350	;# 
 15382   003FDF                     INDF2           equ	16351	;# 
 15383   003FE0                     BSR             equ	16352	;# 
 15384   003FE1                     FSR1            equ	16353	;# 
 15385   003FE1                     FSR1L           equ	16353	;# 
 15386   003FE2                     FSR1H           equ	16354	;# 
 15387   003FE3                     PLUSW1          equ	16355	;# 
 15388   003FE4                     PREINC1         equ	16356	;# 
 15389   003FE5                     POSTDEC1        equ	16357	;# 
 15390   003FE6                     POSTINC1        equ	16358	;# 
 15391   003FE7                     INDF1           equ	16359	;# 
 15392   003FE8                     WREG            equ	16360	;# 
 15393   003FE9                     FSR0            equ	16361	;# 
 15394   003FE9                     FSR0L           equ	16361	;# 
 15395   003FEA                     FSR0H           equ	16362	;# 
 15396   003FEB                     PLUSW0          equ	16363	;# 
 15397   003FEC                     PREINC0         equ	16364	;# 
 15398   003FED                     POSTDEC0        equ	16365	;# 
 15399   003FEE                     POSTINC0        equ	16366	;# 
 15400   003FEF                     INDF0           equ	16367	;# 
 15401   003FF0                     PCON0           equ	16368	;# 
 15402   003FF1                     PCON1           equ	16369	;# 
 15403   003FF3                     PROD            equ	16371	;# 
 15404   003FF3                     PRODL           equ	16371	;# 
 15405   003FF4                     PRODH           equ	16372	;# 
 15406   003FF5                     TABLAT          equ	16373	;# 
 15407   003FF6                     TBLPTR          equ	16374	;# 
 15408   003FF6                     TBLPTRL         equ	16374	;# 
 15409   003FF7                     TBLPTRH         equ	16375	;# 
 15410   003FF8                     TBLPTRU         equ	16376	;# 
 15411   003FF9                     PCLAT           equ	16377	;# 
 15412   003FF9                     PCL             equ	16377	;# 
 15413   003FFA                     PCLATH          equ	16378	;# 
 15414   003FFB                     PCLATU          equ	16379	;# 
 15415   003FFC                     STKPTR          equ	16380	;# 
 15416   003FFD                     TOS             equ	16381	;# 
 15417   003FFD                     TOSL            equ	16381	;# 
 15418   003FFE                     TOSH            equ	16382	;# 
 15419   003FFF                     TOSU            equ	16383	;# 
 15420   003880                     STATUS_CSHAD    equ	14464	;# 
 15421   003881                     WREG_CSHAD      equ	14465	;# 
 15422   003882                     BSR_CSHAD       equ	14466	;# 
 15423   003883                     SHADCON         equ	14467	;# 
 15424   003884                     STATUS_SHAD     equ	14468	;# 
 15425   003885                     WREG_SHAD       equ	14469	;# 
 15426   003886                     BSR_SHAD        equ	14470	;# 
 15427   003887                     PCLATH_SHAD     equ	14471	;# 
 15428   003888                     PCLATU_SHAD     equ	14472	;# 
 15429   003889                     FSR0SH          equ	14473	;# 
 15430   003889                     FSR0L_SHAD      equ	14473	;# 
 15431   00388A                     FSR0H_SHAD      equ	14474	;# 
 15432   00388B                     FSR1SH          equ	14475	;# 
 15433   00388B                     FSR1L_SHAD      equ	14475	;# 
 15434   00388C                     FSR1H_SHAD      equ	14476	;# 
 15435   00388D                     FSR2SH          equ	14477	;# 
 15436   00388D                     FSR2L_SHAD      equ	14477	;# 
 15437   00388E                     FSR2H_SHAD      equ	14478	;# 
 15438   00388F                     PRODSH          equ	14479	;# 
 15439   00388F                     PRODL_SHAD      equ	14479	;# 
 15440   003890                     PRODH_SHAD      equ	14480	;# 
 15441   00389D                     IVTADL          equ	14493	;# 
 15442   00389E                     IVTADH          equ	14494	;# 
 15443   00389F                     IVTADU          equ	14495	;# 
 15444   00395B                     WDTCON0         equ	14683	;# 
 15445   00395C                     WDTCON1         equ	14684	;# 
 15446   00395D                     WDTPSL          equ	14685	;# 
 15447   00395E                     WDTPSH          equ	14686	;# 
 15448   00395F                     WDTTMR          equ	14687	;# 
 15449   003960                     CRCDATA         equ	14688	;# 
 15450   003960                     CRCDATL         equ	14688	;# 
 15451   003961                     CRCDATH         equ	14689	;# 
 15452   003962                     CRCACC          equ	14690	;# 
 15453   003962                     CRCACCL         equ	14690	;# 
 15454   003963                     CRCACCH         equ	14691	;# 
 15455   003964                     CRCSHFT         equ	14692	;# 
 15456   003964                     CRCSHIFTL       equ	14692	;# 
 15457   003965                     CRCSHIFTH       equ	14693	;# 
 15458   003966                     CRCXOR          equ	14694	;# 
 15459   003966                     CRCXORL         equ	14694	;# 
 15460   003967                     CRCXORH         equ	14695	;# 
 15461   003968                     CRCCON0         equ	14696	;# 
 15462   003969                     CRCCON1         equ	14697	;# 
 15463   003976                     SCANLADR        equ	14710	;# 
 15464   003976                     SCANLADRL       equ	14710	;# 
 15465   003977                     SCANLADRH       equ	14711	;# 
 15466   003978                     SCANLADRU       equ	14712	;# 
 15467   003979                     SCANHADR        equ	14713	;# 
 15468   003979                     SCANHADRL       equ	14713	;# 
 15469   00397A                     SCANHADRH       equ	14714	;# 
 15470   00397B                     SCANHADRU       equ	14715	;# 
 15471   00397C                     SCANCON0        equ	14716	;# 
 15472   00397D                     SCANTRIG        equ	14717	;# 
 15473   003980                     IPR0            equ	14720	;# 
 15474   003981                     IPR1            equ	14721	;# 
 15475   003982                     IPR2            equ	14722	;# 
 15476   003983                     IPR3            equ	14723	;# 
 15477   003984                     IPR4            equ	14724	;# 
 15478   003985                     IPR5            equ	14725	;# 
 15479   003986                     IPR6            equ	14726	;# 
 15480   003987                     IPR7            equ	14727	;# 
 15481   003988                     IPR8            equ	14728	;# 
 15482   003989                     IPR9            equ	14729	;# 
 15483   00398A                     IPR10           equ	14730	;# 
 15484   003990                     PIE0            equ	14736	;# 
 15485   003991                     PIE1            equ	14737	;# 
 15486   003992                     PIE2            equ	14738	;# 
 15487   003993                     PIE3            equ	14739	;# 
 15488   003994                     PIE4            equ	14740	;# 
 15489   003995                     PIE5            equ	14741	;# 
 15490   003996                     PIE6            equ	14742	;# 
 15491   003997                     PIE7            equ	14743	;# 
 15492   003998                     PIE8            equ	14744	;# 
 15493   003999                     PIE9            equ	14745	;# 
 15494   00399A                     PIE10           equ	14746	;# 
 15495   0039A0                     PIR0            equ	14752	;# 
 15496   0039A1                     PIR1            equ	14753	;# 
 15497   0039A2                     PIR2            equ	14754	;# 
 15498   0039A3                     PIR3            equ	14755	;# 
 15499   0039A4                     PIR4            equ	14756	;# 
 15500   0039A5                     PIR5            equ	14757	;# 
 15501   0039A6                     PIR6            equ	14758	;# 
 15502   0039A7                     PIR7            equ	14759	;# 
 15503   0039A8                     PIR8            equ	14760	;# 
 15504   0039A9                     PIR9            equ	14761	;# 
 15505   0039AA                     PIR10           equ	14762	;# 
 15506   0039C0                     PMD0            equ	14784	;# 
 15507   0039C1                     PMD1            equ	14785	;# 
 15508   0039C2                     PMD2            equ	14786	;# 
 15509   0039C3                     PMD3            equ	14787	;# 
 15510   0039C4                     PMD4            equ	14788	;# 
 15511   0039C5                     PMD5            equ	14789	;# 
 15512   0039C6                     PMD6            equ	14790	;# 
 15513   0039C7                     PMD7            equ	14791	;# 
 15514   0039D0                     BORCON          equ	14800	;# 
 15515   0039D1                     VREGCON         equ	14801	;# 
 15516   0039D8                     CPUDOZE         equ	14808	;# 
 15517   0039D9                     OSCCON1         equ	14809	;# 
 15518   0039DA                     OSCCON2         equ	14810	;# 
 15519   0039DB                     OSCCON3         equ	14811	;# 
 15520   0039DC                     OSCSTAT         equ	14812	;# 
 15521   0039DC                     OSCSTAT1        equ	14812	;# 
 15522   0039DD                     OSCEN           equ	14813	;# 
 15523   0039DE                     OSCTUNE         equ	14814	;# 
 15524   0039DF                     OSCFRQ          equ	14815	;# 
 15525   0039E0                     NVMADRL         equ	14816	;# 
 15526   0039E1                     NVMADRH         equ	14817	;# 
 15527   0039E3                     NVMDAT          equ	14819	;# 
 15528   0039E5                     NVMCON1         equ	14821	;# 
 15529   0039E6                     NVMCON2         equ	14822	;# 
 15530   0039EF                     PRLOCK          equ	14831	;# 
 15531   0039F1                     ISRPR           equ	14833	;# 
 15532   0039F2                     MAINPR          equ	14834	;# 
 15533   0039F3                     DMA1PR          equ	14835	;# 
 15534   0039F4                     DMA2PR          equ	14836	;# 
 15535   0039F7                     SCANPR          equ	14839	;# 
 15536   003A00                     RA0PPS          equ	14848	;# 
 15537   003A01                     RA1PPS          equ	14849	;# 
 15538   003A02                     RA2PPS          equ	14850	;# 
 15539   003A03                     RA3PPS          equ	14851	;# 
 15540   003A04                     RA4PPS          equ	14852	;# 
 15541   003A05                     RA5PPS          equ	14853	;# 
 15542   003A06                     RA6PPS          equ	14854	;# 
 15543   003A07                     RA7PPS          equ	14855	;# 
 15544   003A08                     RB0PPS          equ	14856	;# 
 15545   003A09                     RB1PPS          equ	14857	;# 
 15546   003A0A                     RB2PPS          equ	14858	;# 
 15547   003A0B                     RB3PPS          equ	14859	;# 
 15548   003A0C                     RB4PPS          equ	14860	;# 
 15549   003A0D                     RB5PPS          equ	14861	;# 
 15550   003A0E                     RB6PPS          equ	14862	;# 
 15551   003A0F                     RB7PPS          equ	14863	;# 
 15552   003A10                     RC0PPS          equ	14864	;# 
 15553   003A11                     RC1PPS          equ	14865	;# 
 15554   003A12                     RC2PPS          equ	14866	;# 
 15555   003A13                     RC3PPS          equ	14867	;# 
 15556   003A14                     RC4PPS          equ	14868	;# 
 15557   003A15                     RC5PPS          equ	14869	;# 
 15558   003A16                     RC6PPS          equ	14870	;# 
 15559   003A17                     RC7PPS          equ	14871	;# 
 15560   003A18                     RD0PPS          equ	14872	;# 
 15561   003A19                     RD1PPS          equ	14873	;# 
 15562   003A1A                     RD2PPS          equ	14874	;# 
 15563   003A1B                     RD3PPS          equ	14875	;# 
 15564   003A1C                     RD4PPS          equ	14876	;# 
 15565   003A1D                     RD5PPS          equ	14877	;# 
 15566   003A1E                     RD6PPS          equ	14878	;# 
 15567   003A1F                     RD7PPS          equ	14879	;# 
 15568   003A20                     RE0PPS          equ	14880	;# 
 15569   003A21                     RE1PPS          equ	14881	;# 
 15570   003A22                     RE2PPS          equ	14882	;# 
 15571   003A28                     RF0PPS          equ	14888	;# 
 15572   003A29                     RF1PPS          equ	14889	;# 
 15573   003A2A                     RF2PPS          equ	14890	;# 
 15574   003A2B                     RF3PPS          equ	14891	;# 
 15575   003A2C                     RF4PPS          equ	14892	;# 
 15576   003A2D                     RF5PPS          equ	14893	;# 
 15577   003A2E                     RF6PPS          equ	14894	;# 
 15578   003A2F                     RF7PPS          equ	14895	;# 
 15579   003A40                     ANSELA          equ	14912	;# 
 15580   003A41                     WPUA            equ	14913	;# 
 15581   003A42                     ODCONA          equ	14914	;# 
 15582   003A43                     SLRCONA         equ	14915	;# 
 15583   003A44                     INLVLA          equ	14916	;# 
 15584   003A45                     IOCAP           equ	14917	;# 
 15585   003A46                     IOCAN           equ	14918	;# 
 15586   003A47                     IOCAF           equ	14919	;# 
 15587   003A50                     ANSELB          equ	14928	;# 
 15588   003A51                     WPUB            equ	14929	;# 
 15589   003A52                     ODCONB          equ	14930	;# 
 15590   003A53                     SLRCONB         equ	14931	;# 
 15591   003A54                     INLVLB          equ	14932	;# 
 15592   003A55                     IOCBP           equ	14933	;# 
 15593   003A56                     IOCBN           equ	14934	;# 
 15594   003A57                     IOCBF           equ	14935	;# 
 15595   003A5A                     RB1I2C          equ	14938	;# 
 15596   003A5B                     RB2I2C          equ	14939	;# 
 15597   003A60                     ANSELC          equ	14944	;# 
 15598   003A61                     WPUC            equ	14945	;# 
 15599   003A62                     ODCONC          equ	14946	;# 
 15600   003A63                     SLRCONC         equ	14947	;# 
 15601   003A64                     INLVLC          equ	14948	;# 
 15602   003A65                     IOCCP           equ	14949	;# 
 15603   003A66                     IOCCN           equ	14950	;# 
 15604   003A67                     IOCCF           equ	14951	;# 
 15605   003A6A                     RC3I2C          equ	14954	;# 
 15606   003A6B                     RC4I2C          equ	14955	;# 
 15607   003A70                     ANSELD          equ	14960	;# 
 15608   003A71                     WPUD            equ	14961	;# 
 15609   003A72                     ODCOND          equ	14962	;# 
 15610   003A73                     SLRCOND         equ	14963	;# 
 15611   003A74                     INLVLD          equ	14964	;# 
 15612   003A7A                     RD0I2C          equ	14970	;# 
 15613   003A7B                     RD1I2C          equ	14971	;# 
 15614   003A80                     ANSELE          equ	14976	;# 
 15615   003A81                     WPUE            equ	14977	;# 
 15616   003A82                     ODCONE          equ	14978	;# 
 15617   003A83                     SLRCONE         equ	14979	;# 
 15618   003A84                     INLVLE          equ	14980	;# 
 15619   003A85                     IOCEP           equ	14981	;# 
 15620   003A86                     IOCEN           equ	14982	;# 
 15621   003A87                     IOCEF           equ	14983	;# 
 15622   003A90                     ANSELF          equ	14992	;# 
 15623   003A91                     WPUF            equ	14993	;# 
 15624   003A92                     ODCONF          equ	14994	;# 
 15625   003A93                     SLRCONF         equ	14995	;# 
 15626   003A94                     INLVLF          equ	14996	;# 
 15627   003ABF                     PPSLOCK         equ	15039	;# 
 15628   003AC0                     INT0PPS         equ	15040	;# 
 15629   003AC1                     INT1PPS         equ	15041	;# 
 15630   003AC2                     INT2PPS         equ	15042	;# 
 15631   003AC3                     T0CKIPPS        equ	15043	;# 
 15632   003AC4                     T1CKIPPS        equ	15044	;# 
 15633   003AC5                     T1GPPS          equ	15045	;# 
 15634   003AC6                     T3CKIPPS        equ	15046	;# 
 15635   003AC7                     T3GPPS          equ	15047	;# 
 15636   003AC8                     T5CKIPPS        equ	15048	;# 
 15637   003AC9                     T5GPPS          equ	15049	;# 
 15638   003ACA                     T2INPPS         equ	15050	;# 
 15639   003ACB                     T4INPPS         equ	15051	;# 
 15640   003ACC                     T6INPPS         equ	15052	;# 
 15641   003ACD                     CCP1PPS         equ	15053	;# 
 15642   003ACE                     CCP2PPS         equ	15054	;# 
 15643   003ACF                     CCP3PPS         equ	15055	;# 
 15644   003AD0                     CCP4PPS         equ	15056	;# 
 15645   003AD1                     SMT1WINPPS      equ	15057	;# 
 15646   003AD2                     SMT1SIGPPS      equ	15058	;# 
 15647   003AD3                     CWG1INPPS       equ	15059	;# 
 15648   003AD4                     CWG2INPPS       equ	15060	;# 
 15649   003AD5                     CWG3INPPS       equ	15061	;# 
 15650   003AD6                     MD1CARLPPS      equ	15062	;# 
 15651   003AD7                     MD1CARHPPS      equ	15063	;# 
 15652   003AD8                     MD1SRCPPS       equ	15064	;# 
 15653   003AD9                     CLCIN0PPS       equ	15065	;# 
 15654   003ADA                     CLCIN1PPS       equ	15066	;# 
 15655   003ADB                     CLCIN2PPS       equ	15067	;# 
 15656   003ADC                     CLCIN3PPS       equ	15068	;# 
 15657   003ADD                     ADACTPPS        equ	15069	;# 
 15658   003ADE                     SPI1SCKPPS      equ	15070	;# 
 15659   003ADF                     SPI1SDIPPS      equ	15071	;# 
 15660   003AE0                     SPI1SSPPS       equ	15072	;# 
 15661   003AE1                     I2C1SCLPPS      equ	15073	;# 
 15662   003AE2                     I2C1SDAPPS      equ	15074	;# 
 15663   003AE3                     I2C2SCLPPS      equ	15075	;# 
 15664   003AE4                     I2C2SDAPPS      equ	15076	;# 
 15665   003AE5                     U1RXPPS         equ	15077	;# 
 15666   003AE6                     U1CTSPPS        equ	15078	;# 
 15667   003AE8                     U2RXPPS         equ	15080	;# 
 15668   003AE9                     U2CTSPPS        equ	15081	;# 
 15669   003BC9                     DMA2BUF         equ	15305	;# 
 15670   003BCA                     DMA2DCNT        equ	15306	;# 
 15671   003BCA                     DMA2DCNTL       equ	15306	;# 
 15672   003BCB                     DMA2DCNTH       equ	15307	;# 
 15673   003BCC                     DMA2DPTR        equ	15308	;# 
 15674   003BCC                     DMA2DPTRL       equ	15308	;# 
 15675   003BCD                     DMA2DPTRH       equ	15309	;# 
 15676   003BCE                     DMA2DSZ         equ	15310	;# 
 15677   003BCE                     DMA2DSZL        equ	15310	;# 
 15678   003BCF                     DMA2DSZH        equ	15311	;# 
 15679   003BD0                     DMA2DSA         equ	15312	;# 
 15680   003BD0                     DMA2DSAL        equ	15312	;# 
 15681   003BD1                     DMA2DSAH        equ	15313	;# 
 15682   003BD2                     DMA2SCNT        equ	15314	;# 
 15683   003BD2                     DMA2SCNTL       equ	15314	;# 
 15684   003BD3                     DMA2SCNTH       equ	15315	;# 
 15685   003BD4                     DMA2SPTR        equ	15316	;# 
 15686   003BD4                     DMA2SPTRL       equ	15316	;# 
 15687   003BD5                     DMA2SPTRH       equ	15317	;# 
 15688   003BD6                     DMA2SPTRU       equ	15318	;# 
 15689   003BD7                     DMA2SSZ         equ	15319	;# 
 15690   003BD7                     DMA2SSZL        equ	15319	;# 
 15691   003BD8                     DMA2SSZH        equ	15320	;# 
 15692   003BD9                     DMA2SSA         equ	15321	;# 
 15693   003BD9                     DMA2SSAL        equ	15321	;# 
 15694   003BDA                     DMA2SSAH        equ	15322	;# 
 15695   003BDB                     DMA2SSAU        equ	15323	;# 
 15696   003BDC                     DMA2CON0        equ	15324	;# 
 15697   003BDD                     DMA2CON1        equ	15325	;# 
 15698   003BDE                     DMA2AIRQ        equ	15326	;# 
 15699   003BDF                     DMA2SIRQ        equ	15327	;# 
 15700   003BE9                     DMA1BUF         equ	15337	;# 
 15701   003BEA                     DMA1DCNT        equ	15338	;# 
 15702   003BEA                     DMA1DCNTL       equ	15338	;# 
 15703   003BEB                     DMA1DCNTH       equ	15339	;# 
 15704   003BEC                     DMA1DPTR        equ	15340	;# 
 15705   003BEC                     DMA1DPTRL       equ	15340	;# 
 15706   003BED                     DMA1DPTRH       equ	15341	;# 
 15707   003BEE                     DMA1DSZ         equ	15342	;# 
 15708   003BEE                     DMA1DSZL        equ	15342	;# 
 15709   003BEF                     DMA1DSZH        equ	15343	;# 
 15710   003BF0                     DMA1DSA         equ	15344	;# 
 15711   003BF0                     DMA1DSAL        equ	15344	;# 
 15712   003BF1                     DMA1DSAH        equ	15345	;# 
 15713   003BF2                     DMA1SCNT        equ	15346	;# 
 15714   003BF2                     DMA1SCNTL       equ	15346	;# 
 15715   003BF3                     DMA1SCNTH       equ	15347	;# 
 15716   003BF4                     DMA1SPTR        equ	15348	;# 
 15717   003BF4                     DMA1SPTRL       equ	15348	;# 
 15718   003BF5                     DMA1SPTRH       equ	15349	;# 
 15719   003BF6                     DMA1SPTRU       equ	15350	;# 
 15720   003BF7                     DMA1SSZ         equ	15351	;# 
 15721   003BF7                     DMA1SSZL        equ	15351	;# 
 15722   003BF8                     DMA1SSZH        equ	15352	;# 
 15723   003BF9                     DMA1SSA         equ	15353	;# 
 15724   003BF9                     DMA1SSAL        equ	15353	;# 
 15725   003BFA                     DMA1SSAH        equ	15354	;# 
 15726   003BFB                     DMA1SSAU        equ	15355	;# 
 15727   003BFC                     DMA1CON0        equ	15356	;# 
 15728   003BFD                     DMA1CON1        equ	15357	;# 
 15729   003BFE                     DMA1AIRQ        equ	15358	;# 
 15730   003BFF                     DMA1SIRQ        equ	15359	;# 
 15731   003C56                     CLC4CON         equ	15446	;# 
 15732   003C57                     CLC4POL         equ	15447	;# 
 15733   003C58                     CLC4SEL0        equ	15448	;# 
 15734   003C59                     CLC4SEL1        equ	15449	;# 
 15735   003C5A                     CLC4SEL2        equ	15450	;# 
 15736   003C5B                     CLC4SEL3        equ	15451	;# 
 15737   003C5C                     CLC4GLS0        equ	15452	;# 
 15738   003C5D                     CLC4GLS1        equ	15453	;# 
 15739   003C5E                     CLC4GLS2        equ	15454	;# 
 15740   003C5F                     CLC4GLS3        equ	15455	;# 
 15741   003C60                     CLC3CON         equ	15456	;# 
 15742   003C61                     CLC3POL         equ	15457	;# 
 15743   003C62                     CLC3SEL0        equ	15458	;# 
 15744   003C63                     CLC3SEL1        equ	15459	;# 
 15745   003C64                     CLC3SEL2        equ	15460	;# 
 15746   003C65                     CLC3SEL3        equ	15461	;# 
 15747   003C66                     CLC3GLS0        equ	15462	;# 
 15748   003C67                     CLC3GLS1        equ	15463	;# 
 15749   003C68                     CLC3GLS2        equ	15464	;# 
 15750   003C69                     CLC3GLS3        equ	15465	;# 
 15751   003C6A                     CLC2CON         equ	15466	;# 
 15752   003C6B                     CLC2POL         equ	15467	;# 
 15753   003C6C                     CLC2SEL0        equ	15468	;# 
 15754   003C6D                     CLC2SEL1        equ	15469	;# 
 15755   003C6E                     CLC2SEL2        equ	15470	;# 
 15756   003C6F                     CLC2SEL3        equ	15471	;# 
 15757   003C70                     CLC2GLS0        equ	15472	;# 
 15758   003C71                     CLC2GLS1        equ	15473	;# 
 15759   003C72                     CLC2GLS2        equ	15474	;# 
 15760   003C73                     CLC2GLS3        equ	15475	;# 
 15761   003C74                     CLC1CON         equ	15476	;# 
 15762   003C75                     CLC1POL         equ	15477	;# 
 15763   003C76                     CLC1SEL0        equ	15478	;# 
 15764   003C77                     CLC1SEL1        equ	15479	;# 
 15765   003C78                     CLC1SEL2        equ	15480	;# 
 15766   003C79                     CLC1SEL3        equ	15481	;# 
 15767   003C7A                     CLC1GLS0        equ	15482	;# 
 15768   003C7B                     CLC1GLS1        equ	15483	;# 
 15769   003C7C                     CLC1GLS2        equ	15484	;# 
 15770   003C7D                     CLC1GLS3        equ	15485	;# 
 15771   003C7E                     CLCDATA0        equ	15486	;# 
 15772   003CE5                     CLKRCON         equ	15589	;# 
 15773   003CE6                     CLKRCLK         equ	15590	;# 
 15774   003CFA                     MD1CON0         equ	15610	;# 
 15775   003CFB                     MD1CON1         equ	15611	;# 
 15776   003CFC                     MD1SRC          equ	15612	;# 
 15777   003CFD                     MD1CARL         equ	15613	;# 
 15778   003CFE                     MD1CARH         equ	15614	;# 
 15779   003D10                     SPI1RXB         equ	15632	;# 
 15780   003D11                     SPI1TXB         equ	15633	;# 
 15781   003D12                     SPI1TCNT        equ	15634	;# 
 15782   003D12                     SPI1TCNTL       equ	15634	;# 
 15783   003D13                     SPI1TCNTH       equ	15635	;# 
 15784   003D14                     SPI1CON0        equ	15636	;# 
 15785   003D15                     SPI1CON1        equ	15637	;# 
 15786   003D16                     SPI1CON2        equ	15638	;# 
 15787   003D17                     SPI1STATUS      equ	15639	;# 
 15788   003D18                     SPI1TWIDTH      equ	15640	;# 
 15789   003D19                     SPI1BAUD        equ	15641	;# 
 15790   003D1A                     SPI1INTF        equ	15642	;# 
 15791   003D1B                     SPI1INTE        equ	15643	;# 
 15792   003D1C                     SPI1CLK         equ	15644	;# 
 15793   003D54                     I2C2RXB         equ	15700	;# 
 15794   003D55                     I2C2TXB         equ	15701	;# 
 15795   003D56                     I2C2CNT         equ	15702	;# 
 15796   003D57                     I2C2ADB0        equ	15703	;# 
 15797   003D58                     I2C2ADB1        equ	15704	;# 
 15798   003D59                     I2C2ADR0        equ	15705	;# 
 15799   003D5A                     I2C2ADR1        equ	15706	;# 
 15800   003D5B                     I2C2ADR2        equ	15707	;# 
 15801   003D5C                     I2C2ADR3        equ	15708	;# 
 15802   003D5D                     I2C2CON0        equ	15709	;# 
 15803   003D5E                     I2C2CON1        equ	15710	;# 
 15804   003D5F                     I2C2CON2        equ	15711	;# 
 15805   003D60                     I2C2ERR         equ	15712	;# 
 15806   003D61                     I2C2STAT0       equ	15713	;# 
 15807   003D62                     I2C2STAT1       equ	15714	;# 
 15808   003D63                     I2C2PIR         equ	15715	;# 
 15809   003D64                     I2C2PIE         equ	15716	;# 
 15810   003D65                     I2C2CLK         equ	15717	;# 
 15811   003D66                     I2C2BTO         equ	15718	;# 
 15812   003D6A                     I2C1RXB         equ	15722	;# 
 15813   003D6B                     I2C1TXB         equ	15723	;# 
 15814   003D6C                     I2C1CNT         equ	15724	;# 
 15815   003D6D                     I2C1ADB0        equ	15725	;# 
 15816   003D6E                     I2C1ADB1        equ	15726	;# 
 15817   003D6F                     I2C1ADR0        equ	15727	;# 
 15818   003D70                     I2C1ADR1        equ	15728	;# 
 15819   003D71                     I2C1ADR2        equ	15729	;# 
 15820   003D72                     I2C1ADR3        equ	15730	;# 
 15821   003D73                     I2C1CON0        equ	15731	;# 
 15822   003D74                     I2C1CON1        equ	15732	;# 
 15823   003D75                     I2C1CON2        equ	15733	;# 
 15824   003D76                     I2C1ERR         equ	15734	;# 
 15825   003D77                     I2C1STAT0       equ	15735	;# 
 15826   003D78                     I2C1STAT1       equ	15736	;# 
 15827   003D79                     I2C1PIR         equ	15737	;# 
 15828   003D7A                     I2C1PIE         equ	15738	;# 
 15829   003D7B                     I2C1CLK         equ	15739	;# 
 15830   003D7C                     I2C1BTO         equ	15740	;# 
 15831   003DD0                     U2RXB           equ	15824	;# 
 15832   003DD0                     U2RXBL          equ	15824	;# 
 15833   003DD2                     U2TXB           equ	15826	;# 
 15834   003DD2                     U2TXBL          equ	15826	;# 
 15835   003DD4                     U2P1            equ	15828	;# 
 15836   003DD4                     U2P1L           equ	15828	;# 
 15837   003DD6                     U2P2            equ	15830	;# 
 15838   003DD6                     U2P2L           equ	15830	;# 
 15839   003DD8                     U2P3            equ	15832	;# 
 15840   003DD8                     U2P3L           equ	15832	;# 
 15841   003DDA                     U2CON0          equ	15834	;# 
 15842   003DDB                     U2CON1          equ	15835	;# 
 15843   003DDC                     U2CON2          equ	15836	;# 
 15844   003DDD                     U2BRG           equ	15837	;# 
 15845   003DDD                     U2BRGL          equ	15837	;# 
 15846   003DDE                     U2BRGH          equ	15838	;# 
 15847   003DDF                     U2FIFO          equ	15839	;# 
 15848   003DE0                     U2UIR           equ	15840	;# 
 15849   003DE1                     U2ERRIR         equ	15841	;# 
 15850   003DE2                     U2ERRIE         equ	15842	;# 
 15851   003DE8                     U1RXB           equ	15848	;# 
 15852   003DE8                     U1RXBL          equ	15848	;# 
 15853   003DE9                     U1RXCHK         equ	15849	;# 
 15854   003DEA                     U1TXB           equ	15850	;# 
 15855   003DEA                     U1TXBL          equ	15850	;# 
 15856   003DEB                     U1TXCHK         equ	15851	;# 
 15857   003DEC                     U1P1            equ	15852	;# 
 15858   003DEC                     U1P1L           equ	15852	;# 
 15859   003DED                     U1P1H           equ	15853	;# 
 15860   003DEE                     U1P2            equ	15854	;# 
 15861   003DEE                     U1P2L           equ	15854	;# 
 15862   003DEF                     U1P2H           equ	15855	;# 
 15863   003DF0                     U1P3            equ	15856	;# 
 15864   003DF0                     U1P3L           equ	15856	;# 
 15865   003DF1                     U1P3H           equ	15857	;# 
 15866   003DF2                     U1CON0          equ	15858	;# 
 15867   003DF3                     U1CON1          equ	15859	;# 
 15868   003DF4                     U1CON2          equ	15860	;# 
 15869   003DF5                     U1BRG           equ	15861	;# 
 15870   003DF5                     U1BRGL          equ	15861	;# 
 15871   003DF6                     U1BRGH          equ	15862	;# 
 15872   003DF7                     U1FIFO          equ	15863	;# 
 15873   003DF8                     U1UIR           equ	15864	;# 
 15874   003DF9                     U1ERRIR         equ	15865	;# 
 15875   003DFA                     U1ERRIE         equ	15866	;# 
 15876   003E9C                     DAC1CON1        equ	16028	;# 
 15877   003E9E                     DAC1CON0        equ	16030	;# 
 15878   003EB8                     CM2CON0         equ	16056	;# 
 15879   003EB9                     CM2CON1         equ	16057	;# 
 15880   003EBA                     CM2NCH          equ	16058	;# 
 15881   003EBB                     CM2PCH          equ	16059	;# 
 15882   003EBC                     CM1CON0         equ	16060	;# 
 15883   003EBD                     CM1CON1         equ	16061	;# 
 15884   003EBE                     CM1NCH          equ	16062	;# 
 15885   003EBF                     CM1PCH          equ	16063	;# 
 15886   003EC0                     CMOUT           equ	16064	;# 
 15887   003EC1                     FVRCON          equ	16065	;# 
 15888   003EC3                     ZCDCON          equ	16067	;# 
 15889   003EC9                     HLVDCON0        equ	16073	;# 
 15890   003ECA                     HLVDCON1        equ	16074	;# 
 15891   003ED7                     ADCP            equ	16087	;# 
 15892   003EDE                     ADLTH           equ	16094	;# 
 15893   003EDE                     ADLTHL          equ	16094	;# 
 15894   003EDF                     ADLTHH          equ	16095	;# 
 15895   003EE0                     ADUTH           equ	16096	;# 
 15896   003EE0                     ADUTHL          equ	16096	;# 
 15897   003EE1                     ADUTHH          equ	16097	;# 
 15898   003EE2                     ADERR           equ	16098	;# 
 15899   003EE2                     ADERRL          equ	16098	;# 
 15900   003EE3                     ADERRH          equ	16099	;# 
 15901   003EE4                     ADSTPT          equ	16100	;# 
 15902   003EE4                     ADSTPTL         equ	16100	;# 
 15903   003EE5                     ADSTPTH         equ	16101	;# 
 15904   003EE6                     ADFLTR          equ	16102	;# 
 15905   003EE6                     ADFLTRL         equ	16102	;# 
 15906   003EE7                     ADFLTRH         equ	16103	;# 
 15907   003EE8                     ADACC           equ	16104	;# 
 15908   003EE8                     ADACCL          equ	16104	;# 
 15909   003EE9                     ADACCH          equ	16105	;# 
 15910   003EEA                     ADACCU          equ	16106	;# 
 15911   003EEB                     ADCNT           equ	16107	;# 
 15912   003EEC                     ADRPT           equ	16108	;# 
 15913   003EED                     ADPREV          equ	16109	;# 
 15914   003EED                     ADPREVL         equ	16109	;# 
 15915   003EEE                     ADPREVH         equ	16110	;# 
 15916   003EEF                     ADRES           equ	16111	;# 
 15917   003EEF                     ADRESL          equ	16111	;# 
 15918   003EF0                     ADRESH          equ	16112	;# 
 15919   003EF1                     ADPCH           equ	16113	;# 
 15920   003EF3                     ADACQ           equ	16115	;# 
 15921   003EF3                     ADACQL          equ	16115	;# 
 15922   003EF4                     ADACQH          equ	16116	;# 
 15923   003EF5                     ADCAP           equ	16117	;# 
 15924   003EF6                     ADPRE           equ	16118	;# 
 15925   003EF6                     ADPREL          equ	16118	;# 
 15926   003EF7                     ADPREH          equ	16119	;# 
 15927   003EF8                     ADCON0          equ	16120	;# 
 15928   003EF9                     ADCON1          equ	16121	;# 
 15929   003EFA                     ADCON2          equ	16122	;# 
 15930   003EFB                     ADCON3          equ	16123	;# 
 15931   003EFC                     ADSTAT          equ	16124	;# 
 15932   003EFD                     ADREF           equ	16125	;# 
 15933   003EFE                     ADACT           equ	16126	;# 
 15934   003EFF                     ADCLK           equ	16127	;# 
 15935   003F12                     SMT1TMR         equ	16146	;# 
 15936   003F12                     SMT1TMRL        equ	16146	;# 
 15937   003F13                     SMT1TMRH        equ	16147	;# 
 15938   003F14                     SMT1TMRU        equ	16148	;# 
 15939   003F15                     SMT1CPR         equ	16149	;# 
 15940   003F15                     SMT1CPRL        equ	16149	;# 
 15941   003F16                     SMT1CPRH        equ	16150	;# 
 15942   003F17                     SMT1CPRU        equ	16151	;# 
 15943   003F18                     SMT1CPW         equ	16152	;# 
 15944   003F18                     SMT1CPWL        equ	16152	;# 
 15945   003F19                     SMT1CPWH        equ	16153	;# 
 15946   003F1A                     SMT1CPWU        equ	16154	;# 
 15947   003F1B                     SMT1PR          equ	16155	;# 
 15948   003F1B                     SMT1PRL         equ	16155	;# 
 15949   003F1C                     SMT1PRH         equ	16156	;# 
 15950   003F1D                     SMT1PRU         equ	16157	;# 
 15951   003F1E                     SMT1CON0        equ	16158	;# 
 15952   003F1F                     SMT1CON1        equ	16159	;# 
 15953   003F20                     SMT1STAT        equ	16160	;# 
 15954   003F21                     SMT1CLK         equ	16161	;# 
 15955   003F22                     SMT1SIG         equ	16162	;# 
 15956   003F23                     SMT1WIN         equ	16163	;# 
 15957   003F38                     NCO1ACC         equ	16184	;# 
 15958   003F38                     NCO1ACCL        equ	16184	;# 
 15959   003F39                     NCO1ACCH        equ	16185	;# 
 15960   003F3A                     NCO1ACCU        equ	16186	;# 
 15961   003F3B                     NCO1INC         equ	16187	;# 
 15962   003F3B                     NCO1INCL        equ	16187	;# 
 15963   003F3C                     NCO1INCH        equ	16188	;# 
 15964   003F3D                     NCO1INCU        equ	16189	;# 
 15965   003F3E                     NCO1CON         equ	16190	;# 
 15966   003F3F                     NCO1CLK         equ	16191	;# 
 15967   003F40                     CWG3CLK         equ	16192	;# 
 15968   003F40                     CWG3CLKCON      equ	16192	;# 
 15969   003F41                     CWG3ISM         equ	16193	;# 
 15970   003F41                     CWG3DAT         equ	16193	;# 
 15971   003F42                     CWG3DBR         equ	16194	;# 
 15972   003F43                     CWG3DBF         equ	16195	;# 
 15973   003F44                     CWG3CON0        equ	16196	;# 
 15974   003F45                     CWG3CON1        equ	16197	;# 
 15975   003F46                     CWG3AS0         equ	16198	;# 
 15976   003F47                     CWG3AS1         equ	16199	;# 
 15977   003F48                     CWG3STR         equ	16200	;# 
 15978   003F49                     CWG2CLK         equ	16201	;# 
 15979   003F49                     CWG2CLKCON      equ	16201	;# 
 15980   003F4A                     CWG2ISM         equ	16202	;# 
 15981   003F4A                     CWG2DAT         equ	16202	;# 
 15982   003F4B                     CWG2DBR         equ	16203	;# 
 15983   003F4C                     CWG2DBF         equ	16204	;# 
 15984   003F4D                     CWG2CON0        equ	16205	;# 
 15985   003F4E                     CWG2CON1        equ	16206	;# 
 15986   003F4F                     CWG2AS0         equ	16207	;# 
 15987   003F50                     CWG2AS1         equ	16208	;# 
 15988   003F51                     CWG2STR         equ	16209	;# 
 15989   003F52                     CWG1CLK         equ	16210	;# 
 15990   003F52                     CWG1CLKCON      equ	16210	;# 
 15991   003F53                     CWG1ISM         equ	16211	;# 
 15992   003F53                     CWG1DAT         equ	16211	;# 
 15993   003F54                     CWG1DBR         equ	16212	;# 
 15994   003F55                     CWG1DBF         equ	16213	;# 
 15995   003F56                     CWG1CON0        equ	16214	;# 
 15996   003F57                     CWG1CON1        equ	16215	;# 
 15997   003F58                     CWG1AS0         equ	16216	;# 
 15998   003F59                     CWG1AS1         equ	16217	;# 
 15999   003F5A                     CWG1STR         equ	16218	;# 
 16000   003F5E                     CCPTMRS0        equ	16222	;# 
 16001   003F5F                     CCPTMRS1        equ	16223	;# 
 16002   003F60                     PWM8DC          equ	16224	;# 
 16003   003F60                     PWM8DCL         equ	16224	;# 
 16004   003F61                     PWM8DCH         equ	16225	;# 
 16005   003F62                     PWM8CON         equ	16226	;# 
 16006   003F64                     PWM7DC          equ	16228	;# 
 16007   003F64                     PWM7DCL         equ	16228	;# 
 16008   003F65                     PWM7DCH         equ	16229	;# 
 16009   003F66                     PWM7CON         equ	16230	;# 
 16010   003F68                     PWM6DC          equ	16232	;# 
 16011   003F68                     PWM6DCL         equ	16232	;# 
 16012   003F69                     PWM6DCH         equ	16233	;# 
 16013   003F6A                     PWM6CON         equ	16234	;# 
 16014   003F6C                     PWM5DC          equ	16236	;# 
 16015   003F6C                     PWM5DCL         equ	16236	;# 
 16016   003F6D                     PWM5DCH         equ	16237	;# 
 16017   003F6E                     PWM5CON         equ	16238	;# 
 16018   003F70                     CCPR4           equ	16240	;# 
 16019   003F70                     CCPR4L          equ	16240	;# 
 16020   003F71                     CCPR4H          equ	16241	;# 
 16021   003F72                     CCP4CON         equ	16242	;# 
 16022   003F73                     CCP4CAP         equ	16243	;# 
 16023   003F74                     CCPR3           equ	16244	;# 
 16024   003F74                     CCPR3L          equ	16244	;# 
 16025   003F75                     CCPR3H          equ	16245	;# 
 16026   003F76                     CCP3CON         equ	16246	;# 
 16027   003F77                     CCP3CAP         equ	16247	;# 
 16028   003F78                     CCPR2           equ	16248	;# 
 16029   003F78                     CCPR2L          equ	16248	;# 
 16030   003F79                     CCPR2H          equ	16249	;# 
 16031   003F7A                     CCP2CON         equ	16250	;# 
 16032   003F7B                     CCP2CAP         equ	16251	;# 
 16033   003F7C                     CCPR1           equ	16252	;# 
 16034   003F7C                     CCPR1L          equ	16252	;# 
 16035   003F7D                     CCPR1H          equ	16253	;# 
 16036   003F7E                     CCP1CON         equ	16254	;# 
 16037   003F7F                     CCP1CAP         equ	16255	;# 
 16038   003F92                     T6TMR           equ	16274	;# 
 16039   003F92                     TMR6            equ	16274	;# 
 16040   003F93                     T6PR            equ	16275	;# 
 16041   003F93                     PR6             equ	16275	;# 
 16042   003F94                     T6CON           equ	16276	;# 
 16043   003F95                     T6HLT           equ	16277	;# 
 16044   003F96                     T6CLKCON        equ	16278	;# 
 16045   003F96                     T6CLK           equ	16278	;# 
 16046   003F97                     T6RST           equ	16279	;# 
 16047   003F98                     TMR5            equ	16280	;# 
 16048   003F98                     TMR5L           equ	16280	;# 
 16049   003F99                     TMR5H           equ	16281	;# 
 16050   003F9A                     T5CON           equ	16282	;# 
 16051   003F9A                     TMR5CON         equ	16282	;# 
 16052   003F9B                     T5GCON          equ	16283	;# 
 16053   003F9B                     TMR5GCON        equ	16283	;# 
 16054   003F9C                     T5GATE          equ	16284	;# 
 16055   003F9C                     TMR5GATE        equ	16284	;# 
 16056   003F9D                     T5CLK           equ	16285	;# 
 16057   003F9D                     TMR5CLK         equ	16285	;# 
 16058   003F9D                     PR5             equ	16285	;# 
 16059   003F9E                     T4TMR           equ	16286	;# 
 16060   003F9E                     TMR4            equ	16286	;# 
 16061   003F9F                     T4PR            equ	16287	;# 
 16062   003F9F                     PR4             equ	16287	;# 
 16063   003FA0                     T4CON           equ	16288	;# 
 16064   003FA1                     T4HLT           equ	16289	;# 
 16065   003FA2                     T4CLKCON        equ	16290	;# 
 16066   003FA2                     T4CLK           equ	16290	;# 
 16067   003FA3                     T4RST           equ	16291	;# 
 16068   003FA4                     TMR3            equ	16292	;# 
 16069   003FA4                     TMR3L           equ	16292	;# 
 16070   003FA5                     TMR3H           equ	16293	;# 
 16071   003FA6                     T3CON           equ	16294	;# 
 16072   003FA6                     TMR3CON         equ	16294	;# 
 16073   003FA7                     T3GCON          equ	16295	;# 
 16074   003FA7                     TMR3GCON        equ	16295	;# 
 16075   003FA8                     T3GATE          equ	16296	;# 
 16076   003FA8                     TMR3GATE        equ	16296	;# 
 16077   003FA9                     T3CLK           equ	16297	;# 
 16078   003FA9                     TMR3CLK         equ	16297	;# 
 16079   003FA9                     PR3             equ	16297	;# 
 16080   003FAA                     T2TMR           equ	16298	;# 
 16081   003FAA                     TMR2            equ	16298	;# 
 16082   003FAB                     T2PR            equ	16299	;# 
 16083   003FAB                     PR2             equ	16299	;# 
 16084   003FAC                     T2CON           equ	16300	;# 
 16085   003FAD                     T2HLT           equ	16301	;# 
 16086   003FAE                     T2CLKCON        equ	16302	;# 
 16087   003FAE                     T2CLK           equ	16302	;# 
 16088   003FAF                     T2RST           equ	16303	;# 
 16089   003FB0                     TMR1            equ	16304	;# 
 16090   003FB0                     TMR1L           equ	16304	;# 
 16091   003FB1                     TMR1H           equ	16305	;# 
 16092   003FB2                     T1CON           equ	16306	;# 
 16093   003FB2                     TMR1CON         equ	16306	;# 
 16094   003FB3                     T1GCON          equ	16307	;# 
 16095   003FB3                     TMR1GCON        equ	16307	;# 
 16096   003FB4                     T1GATE          equ	16308	;# 
 16097   003FB4                     TMR1GATE        equ	16308	;# 
 16098   003FB5                     T1CLK           equ	16309	;# 
 16099   003FB5                     TMR1CLK         equ	16309	;# 
 16100   003FB5                     PR1             equ	16309	;# 
 16101   003FB6                     TMR0L           equ	16310	;# 
 16102   003FB6                     TMR0            equ	16310	;# 
 16103   003FB7                     TMR0H           equ	16311	;# 
 16104   003FB7                     PR0             equ	16311	;# 
 16105   003FB8                     T0CON0          equ	16312	;# 
 16106   003FB9                     T0CON1          equ	16313	;# 
 16107   003FBA                     LATA            equ	16314	;# 
 16108   003FBB                     LATB            equ	16315	;# 
 16109   003FBC                     LATC            equ	16316	;# 
 16110   003FBD                     LATD            equ	16317	;# 
 16111   003FBE                     LATE            equ	16318	;# 
 16112   003FBF                     LATF            equ	16319	;# 
 16113   003FC2                     TRISA           equ	16322	;# 
 16114   003FC3                     TRISB           equ	16323	;# 
 16115   003FC4                     TRISC           equ	16324	;# 
 16116   003FC5                     TRISD           equ	16325	;# 
 16117   003FC6                     TRISE           equ	16326	;# 
 16118   003FC7                     TRISF           equ	16327	;# 
 16119   003FCA                     PORTA           equ	16330	;# 
 16120   003FCB                     PORTB           equ	16331	;# 
 16121   003FCC                     PORTC           equ	16332	;# 
 16122   003FCD                     PORTD           equ	16333	;# 
 16123   003FCE                     PORTE           equ	16334	;# 
 16124   003FCF                     PORTF           equ	16335	;# 
 16125   003FD2                     INTCON0         equ	16338	;# 
 16126   003FD3                     INTCON1         equ	16339	;# 
 16127   003FD4                     IVTLOCK         equ	16340	;# 
 16128   003FD5                     IVTBASE         equ	16341	;# 
 16129   003FD5                     IVTBASEL        equ	16341	;# 
 16130   003FD6                     IVTBASEH        equ	16342	;# 
 16131   003FD7                     IVTBASEU        equ	16343	;# 
 16132   003FD8                     STATUS          equ	16344	;# 
 16133   003FD9                     FSR2            equ	16345	;# 
 16134   003FD9                     FSR2L           equ	16345	;# 
 16135   003FDA                     FSR2H           equ	16346	;# 
 16136   003FDB                     PLUSW2          equ	16347	;# 
 16137   003FDC                     PREINC2         equ	16348	;# 
 16138   003FDD                     POSTDEC2        equ	16349	;# 
 16139   003FDE                     POSTINC2        equ	16350	;# 
 16140   003FDF                     INDF2           equ	16351	;# 
 16141   003FE0                     BSR             equ	16352	;# 
 16142   003FE1                     FSR1            equ	16353	;# 
 16143   003FE1                     FSR1L           equ	16353	;# 
 16144   003FE2                     FSR1H           equ	16354	;# 
 16145   003FE3                     PLUSW1          equ	16355	;# 
 16146   003FE4                     PREINC1         equ	16356	;# 
 16147   003FE5                     POSTDEC1        equ	16357	;# 
 16148   003FE6                     POSTINC1        equ	16358	;# 
 16149   003FE7                     INDF1           equ	16359	;# 
 16150   003FE8                     WREG            equ	16360	;# 
 16151   003FE9                     FSR0            equ	16361	;# 
 16152   003FE9                     FSR0L           equ	16361	;# 
 16153   003FEA                     FSR0H           equ	16362	;# 
 16154   003FEB                     PLUSW0          equ	16363	;# 
 16155   003FEC                     PREINC0         equ	16364	;# 
 16156   003FED                     POSTDEC0        equ	16365	;# 
 16157   003FEE                     POSTINC0        equ	16366	;# 
 16158   003FEF                     INDF0           equ	16367	;# 
 16159   003FF0                     PCON0           equ	16368	;# 
 16160   003FF1                     PCON1           equ	16369	;# 
 16161   003FF3                     PROD            equ	16371	;# 
 16162   003FF3                     PRODL           equ	16371	;# 
 16163   003FF4                     PRODH           equ	16372	;# 
 16164   003FF5                     TABLAT          equ	16373	;# 
 16165   003FF6                     TBLPTR          equ	16374	;# 
 16166   003FF6                     TBLPTRL         equ	16374	;# 
 16167   003FF7                     TBLPTRH         equ	16375	;# 
 16168   003FF8                     TBLPTRU         equ	16376	;# 
 16169   003FF9                     PCLAT           equ	16377	;# 
 16170   003FF9                     PCL             equ	16377	;# 
 16171   003FFA                     PCLATH          equ	16378	;# 
 16172   003FFB                     PCLATU          equ	16379	;# 
 16173   003FFC                     STKPTR          equ	16380	;# 
 16174   003FFD                     TOS             equ	16381	;# 
 16175   003FFD                     TOSL            equ	16381	;# 
 16176   003FFE                     TOSH            equ	16382	;# 
 16177   003FFF                     TOSU            equ	16383	;# 
 16178   003880                     STATUS_CSHAD    equ	14464	;# 
 16179   003881                     WREG_CSHAD      equ	14465	;# 
 16180   003882                     BSR_CSHAD       equ	14466	;# 
 16181   003883                     SHADCON         equ	14467	;# 
 16182   003884                     STATUS_SHAD     equ	14468	;# 
 16183   003885                     WREG_SHAD       equ	14469	;# 
 16184   003886                     BSR_SHAD        equ	14470	;# 
 16185   003887                     PCLATH_SHAD     equ	14471	;# 
 16186   003888                     PCLATU_SHAD     equ	14472	;# 
 16187   003889                     FSR0SH          equ	14473	;# 
 16188   003889                     FSR0L_SHAD      equ	14473	;# 
 16189   00388A                     FSR0H_SHAD      equ	14474	;# 
 16190   00388B                     FSR1SH          equ	14475	;# 
 16191   00388B                     FSR1L_SHAD      equ	14475	;# 
 16192   00388C                     FSR1H_SHAD      equ	14476	;# 
 16193   00388D                     FSR2SH          equ	14477	;# 
 16194   00388D                     FSR2L_SHAD      equ	14477	;# 
 16195   00388E                     FSR2H_SHAD      equ	14478	;# 
 16196   00388F                     PRODSH          equ	14479	;# 
 16197   00388F                     PRODL_SHAD      equ	14479	;# 
 16198   003890                     PRODH_SHAD      equ	14480	;# 
 16199   00389D                     IVTADL          equ	14493	;# 
 16200   00389E                     IVTADH          equ	14494	;# 
 16201   00389F                     IVTADU          equ	14495	;# 
 16202   00395B                     WDTCON0         equ	14683	;# 
 16203   00395C                     WDTCON1         equ	14684	;# 
 16204   00395D                     WDTPSL          equ	14685	;# 
 16205   00395E                     WDTPSH          equ	14686	;# 
 16206   00395F                     WDTTMR          equ	14687	;# 
 16207   003960                     CRCDATA         equ	14688	;# 
 16208   003960                     CRCDATL         equ	14688	;# 
 16209   003961                     CRCDATH         equ	14689	;# 
 16210   003962                     CRCACC          equ	14690	;# 
 16211   003962                     CRCACCL         equ	14690	;# 
 16212   003963                     CRCACCH         equ	14691	;# 
 16213   003964                     CRCSHFT         equ	14692	;# 
 16214   003964                     CRCSHIFTL       equ	14692	;# 
 16215   003965                     CRCSHIFTH       equ	14693	;# 
 16216   003966                     CRCXOR          equ	14694	;# 
 16217   003966                     CRCXORL         equ	14694	;# 
 16218   003967                     CRCXORH         equ	14695	;# 
 16219   003968                     CRCCON0         equ	14696	;# 
 16220   003969                     CRCCON1         equ	14697	;# 
 16221   003976                     SCANLADR        equ	14710	;# 
 16222   003976                     SCANLADRL       equ	14710	;# 
 16223   003977                     SCANLADRH       equ	14711	;# 
 16224   003978                     SCANLADRU       equ	14712	;# 
 16225   003979                     SCANHADR        equ	14713	;# 
 16226   003979                     SCANHADRL       equ	14713	;# 
 16227   00397A                     SCANHADRH       equ	14714	;# 
 16228   00397B                     SCANHADRU       equ	14715	;# 
 16229   00397C                     SCANCON0        equ	14716	;# 
 16230   00397D                     SCANTRIG        equ	14717	;# 
 16231   003980                     IPR0            equ	14720	;# 
 16232   003981                     IPR1            equ	14721	;# 
 16233   003982                     IPR2            equ	14722	;# 
 16234   003983                     IPR3            equ	14723	;# 
 16235   003984                     IPR4            equ	14724	;# 
 16236   003985                     IPR5            equ	14725	;# 
 16237   003986                     IPR6            equ	14726	;# 
 16238   003987                     IPR7            equ	14727	;# 
 16239   003988                     IPR8            equ	14728	;# 
 16240   003989                     IPR9            equ	14729	;# 
 16241   00398A                     IPR10           equ	14730	;# 
 16242   003990                     PIE0            equ	14736	;# 
 16243   003991                     PIE1            equ	14737	;# 
 16244   003992                     PIE2            equ	14738	;# 
 16245   003993                     PIE3            equ	14739	;# 
 16246   003994                     PIE4            equ	14740	;# 
 16247   003995                     PIE5            equ	14741	;# 
 16248   003996                     PIE6            equ	14742	;# 
 16249   003997                     PIE7            equ	14743	;# 
 16250   003998                     PIE8            equ	14744	;# 
 16251   003999                     PIE9            equ	14745	;# 
 16252   00399A                     PIE10           equ	14746	;# 
 16253   0039A0                     PIR0            equ	14752	;# 
 16254   0039A1                     PIR1            equ	14753	;# 
 16255   0039A2                     PIR2            equ	14754	;# 
 16256   0039A3                     PIR3            equ	14755	;# 
 16257   0039A4                     PIR4            equ	14756	;# 
 16258   0039A5                     PIR5            equ	14757	;# 
 16259   0039A6                     PIR6            equ	14758	;# 
 16260   0039A7                     PIR7            equ	14759	;# 
 16261   0039A8                     PIR8            equ	14760	;# 
 16262   0039A9                     PIR9            equ	14761	;# 
 16263   0039AA                     PIR10           equ	14762	;# 
 16264   0039C0                     PMD0            equ	14784	;# 
 16265   0039C1                     PMD1            equ	14785	;# 
 16266   0039C2                     PMD2            equ	14786	;# 
 16267   0039C3                     PMD3            equ	14787	;# 
 16268   0039C4                     PMD4            equ	14788	;# 
 16269   0039C5                     PMD5            equ	14789	;# 
 16270   0039C6                     PMD6            equ	14790	;# 
 16271   0039C7                     PMD7            equ	14791	;# 
 16272   0039D0                     BORCON          equ	14800	;# 
 16273   0039D1                     VREGCON         equ	14801	;# 
 16274   0039D8                     CPUDOZE         equ	14808	;# 
 16275   0039D9                     OSCCON1         equ	14809	;# 
 16276   0039DA                     OSCCON2         equ	14810	;# 
 16277   0039DB                     OSCCON3         equ	14811	;# 
 16278   0039DC                     OSCSTAT         equ	14812	;# 
 16279   0039DC                     OSCSTAT1        equ	14812	;# 
 16280   0039DD                     OSCEN           equ	14813	;# 
 16281   0039DE                     OSCTUNE         equ	14814	;# 
 16282   0039DF                     OSCFRQ          equ	14815	;# 
 16283   0039E0                     NVMADRL         equ	14816	;# 
 16284   0039E1                     NVMADRH         equ	14817	;# 
 16285   0039E3                     NVMDAT          equ	14819	;# 
 16286   0039E5                     NVMCON1         equ	14821	;# 
 16287   0039E6                     NVMCON2         equ	14822	;# 
 16288   0039EF                     PRLOCK          equ	14831	;# 
 16289   0039F1                     ISRPR           equ	14833	;# 
 16290   0039F2                     MAINPR          equ	14834	;# 
 16291   0039F3                     DMA1PR          equ	14835	;# 
 16292   0039F4                     DMA2PR          equ	14836	;# 
 16293   0039F7                     SCANPR          equ	14839	;# 
 16294   003A00                     RA0PPS          equ	14848	;# 
 16295   003A01                     RA1PPS          equ	14849	;# 
 16296   003A02                     RA2PPS          equ	14850	;# 
 16297   003A03                     RA3PPS          equ	14851	;# 
 16298   003A04                     RA4PPS          equ	14852	;# 
 16299   003A05                     RA5PPS          equ	14853	;# 
 16300   003A06                     RA6PPS          equ	14854	;# 
 16301   003A07                     RA7PPS          equ	14855	;# 
 16302   003A08                     RB0PPS          equ	14856	;# 
 16303   003A09                     RB1PPS          equ	14857	;# 
 16304   003A0A                     RB2PPS          equ	14858	;# 
 16305   003A0B                     RB3PPS          equ	14859	;# 
 16306   003A0C                     RB4PPS          equ	14860	;# 
 16307   003A0D                     RB5PPS          equ	14861	;# 
 16308   003A0E                     RB6PPS          equ	14862	;# 
 16309   003A0F                     RB7PPS          equ	14863	;# 
 16310   003A10                     RC0PPS          equ	14864	;# 
 16311   003A11                     RC1PPS          equ	14865	;# 
 16312   003A12                     RC2PPS          equ	14866	;# 
 16313   003A13                     RC3PPS          equ	14867	;# 
 16314   003A14                     RC4PPS          equ	14868	;# 
 16315   003A15                     RC5PPS          equ	14869	;# 
 16316   003A16                     RC6PPS          equ	14870	;# 
 16317   003A17                     RC7PPS          equ	14871	;# 
 16318   003A18                     RD0PPS          equ	14872	;# 
 16319   003A19                     RD1PPS          equ	14873	;# 
 16320   003A1A                     RD2PPS          equ	14874	;# 
 16321   003A1B                     RD3PPS          equ	14875	;# 
 16322   003A1C                     RD4PPS          equ	14876	;# 
 16323   003A1D                     RD5PPS          equ	14877	;# 
 16324   003A1E                     RD6PPS          equ	14878	;# 
 16325   003A1F                     RD7PPS          equ	14879	;# 
 16326   003A20                     RE0PPS          equ	14880	;# 
 16327   003A21                     RE1PPS          equ	14881	;# 
 16328   003A22                     RE2PPS          equ	14882	;# 
 16329   003A28                     RF0PPS          equ	14888	;# 
 16330   003A29                     RF1PPS          equ	14889	;# 
 16331   003A2A                     RF2PPS          equ	14890	;# 
 16332   003A2B                     RF3PPS          equ	14891	;# 
 16333   003A2C                     RF4PPS          equ	14892	;# 
 16334   003A2D                     RF5PPS          equ	14893	;# 
 16335   003A2E                     RF6PPS          equ	14894	;# 
 16336   003A2F                     RF7PPS          equ	14895	;# 
 16337   003A40                     ANSELA          equ	14912	;# 
 16338   003A41                     WPUA            equ	14913	;# 
 16339   003A42                     ODCONA          equ	14914	;# 
 16340   003A43                     SLRCONA         equ	14915	;# 
 16341   003A44                     INLVLA          equ	14916	;# 
 16342   003A45                     IOCAP           equ	14917	;# 
 16343   003A46                     IOCAN           equ	14918	;# 
 16344   003A47                     IOCAF           equ	14919	;# 
 16345   003A50                     ANSELB          equ	14928	;# 
 16346   003A51                     WPUB            equ	14929	;# 
 16347   003A52                     ODCONB          equ	14930	;# 
 16348   003A53                     SLRCONB         equ	14931	;# 
 16349   003A54                     INLVLB          equ	14932	;# 
 16350   003A55                     IOCBP           equ	14933	;# 
 16351   003A56                     IOCBN           equ	14934	;# 
 16352   003A57                     IOCBF           equ	14935	;# 
 16353   003A5A                     RB1I2C          equ	14938	;# 
 16354   003A5B                     RB2I2C          equ	14939	;# 
 16355   003A60                     ANSELC          equ	14944	;# 
 16356   003A61                     WPUC            equ	14945	;# 
 16357   003A62                     ODCONC          equ	14946	;# 
 16358   003A63                     SLRCONC         equ	14947	;# 
 16359   003A64                     INLVLC          equ	14948	;# 
 16360   003A65                     IOCCP           equ	14949	;# 
 16361   003A66                     IOCCN           equ	14950	;# 
 16362   003A67                     IOCCF           equ	14951	;# 
 16363   003A6A                     RC3I2C          equ	14954	;# 
 16364   003A6B                     RC4I2C          equ	14955	;# 
 16365   003A70                     ANSELD          equ	14960	;# 
 16366   003A71                     WPUD            equ	14961	;# 
 16367   003A72                     ODCOND          equ	14962	;# 
 16368   003A73                     SLRCOND         equ	14963	;# 
 16369   003A74                     INLVLD          equ	14964	;# 
 16370   003A7A                     RD0I2C          equ	14970	;# 
 16371   003A7B                     RD1I2C          equ	14971	;# 
 16372   003A80                     ANSELE          equ	14976	;# 
 16373   003A81                     WPUE            equ	14977	;# 
 16374   003A82                     ODCONE          equ	14978	;# 
 16375   003A83                     SLRCONE         equ	14979	;# 
 16376   003A84                     INLVLE          equ	14980	;# 
 16377   003A85                     IOCEP           equ	14981	;# 
 16378   003A86                     IOCEN           equ	14982	;# 
 16379   003A87                     IOCEF           equ	14983	;# 
 16380   003A90                     ANSELF          equ	14992	;# 
 16381   003A91                     WPUF            equ	14993	;# 
 16382   003A92                     ODCONF          equ	14994	;# 
 16383   003A93                     SLRCONF         equ	14995	;# 
 16384   003A94                     INLVLF          equ	14996	;# 
 16385   003ABF                     PPSLOCK         equ	15039	;# 
 16386   003AC0                     INT0PPS         equ	15040	;# 
 16387   003AC1                     INT1PPS         equ	15041	;# 
 16388   003AC2                     INT2PPS         equ	15042	;# 
 16389   003AC3                     T0CKIPPS        equ	15043	;# 
 16390   003AC4                     T1CKIPPS        equ	15044	;# 
 16391   003AC5                     T1GPPS          equ	15045	;# 
 16392   003AC6                     T3CKIPPS        equ	15046	;# 
 16393   003AC7                     T3GPPS          equ	15047	;# 
 16394   003AC8                     T5CKIPPS        equ	15048	;# 
 16395   003AC9                     T5GPPS          equ	15049	;# 
 16396   003ACA                     T2INPPS         equ	15050	;# 
 16397   003ACB                     T4INPPS         equ	15051	;# 
 16398   003ACC                     T6INPPS         equ	15052	;# 
 16399   003ACD                     CCP1PPS         equ	15053	;# 
 16400   003ACE                     CCP2PPS         equ	15054	;# 
 16401   003ACF                     CCP3PPS         equ	15055	;# 
 16402   003AD0                     CCP4PPS         equ	15056	;# 
 16403   003AD1                     SMT1WINPPS      equ	15057	;# 
 16404   003AD2                     SMT1SIGPPS      equ	15058	;# 
 16405   003AD3                     CWG1INPPS       equ	15059	;# 
 16406   003AD4                     CWG2INPPS       equ	15060	;# 
 16407   003AD5                     CWG3INPPS       equ	15061	;# 
 16408   003AD6                     MD1CARLPPS      equ	15062	;# 
 16409   003AD7                     MD1CARHPPS      equ	15063	;# 
 16410   003AD8                     MD1SRCPPS       equ	15064	;# 
 16411   003AD9                     CLCIN0PPS       equ	15065	;# 
 16412   003ADA                     CLCIN1PPS       equ	15066	;# 
 16413   003ADB                     CLCIN2PPS       equ	15067	;# 
 16414   003ADC                     CLCIN3PPS       equ	15068	;# 
 16415   003ADD                     ADACTPPS        equ	15069	;# 
 16416   003ADE                     SPI1SCKPPS      equ	15070	;# 
 16417   003ADF                     SPI1SDIPPS      equ	15071	;# 
 16418   003AE0                     SPI1SSPPS       equ	15072	;# 
 16419   003AE1                     I2C1SCLPPS      equ	15073	;# 
 16420   003AE2                     I2C1SDAPPS      equ	15074	;# 
 16421   003AE3                     I2C2SCLPPS      equ	15075	;# 
 16422   003AE4                     I2C2SDAPPS      equ	15076	;# 
 16423   003AE5                     U1RXPPS         equ	15077	;# 
 16424   003AE6                     U1CTSPPS        equ	15078	;# 
 16425   003AE8                     U2RXPPS         equ	15080	;# 
 16426   003AE9                     U2CTSPPS        equ	15081	;# 
 16427   003BC9                     DMA2BUF         equ	15305	;# 
 16428   003BCA                     DMA2DCNT        equ	15306	;# 
 16429   003BCA                     DMA2DCNTL       equ	15306	;# 
 16430   003BCB                     DMA2DCNTH       equ	15307	;# 
 16431   003BCC                     DMA2DPTR        equ	15308	;# 
 16432   003BCC                     DMA2DPTRL       equ	15308	;# 
 16433   003BCD                     DMA2DPTRH       equ	15309	;# 
 16434   003BCE                     DMA2DSZ         equ	15310	;# 
 16435   003BCE                     DMA2DSZL        equ	15310	;# 
 16436   003BCF                     DMA2DSZH        equ	15311	;# 
 16437   003BD0                     DMA2DSA         equ	15312	;# 
 16438   003BD0                     DMA2DSAL        equ	15312	;# 
 16439   003BD1                     DMA2DSAH        equ	15313	;# 
 16440   003BD2                     DMA2SCNT        equ	15314	;# 
 16441   003BD2                     DMA2SCNTL       equ	15314	;# 
 16442   003BD3                     DMA2SCNTH       equ	15315	;# 
 16443   003BD4                     DMA2SPTR        equ	15316	;# 
 16444   003BD4                     DMA2SPTRL       equ	15316	;# 
 16445   003BD5                     DMA2SPTRH       equ	15317	;# 
 16446   003BD6                     DMA2SPTRU       equ	15318	;# 
 16447   003BD7                     DMA2SSZ         equ	15319	;# 
 16448   003BD7                     DMA2SSZL        equ	15319	;# 
 16449   003BD8                     DMA2SSZH        equ	15320	;# 
 16450   003BD9                     DMA2SSA         equ	15321	;# 
 16451   003BD9                     DMA2SSAL        equ	15321	;# 
 16452   003BDA                     DMA2SSAH        equ	15322	;# 
 16453   003BDB                     DMA2SSAU        equ	15323	;# 
 16454   003BDC                     DMA2CON0        equ	15324	;# 
 16455   003BDD                     DMA2CON1        equ	15325	;# 
 16456   003BDE                     DMA2AIRQ        equ	15326	;# 
 16457   003BDF                     DMA2SIRQ        equ	15327	;# 
 16458   003BE9                     DMA1BUF         equ	15337	;# 
 16459   003BEA                     DMA1DCNT        equ	15338	;# 
 16460   003BEA                     DMA1DCNTL       equ	15338	;# 
 16461   003BEB                     DMA1DCNTH       equ	15339	;# 
 16462   003BEC                     DMA1DPTR        equ	15340	;# 
 16463   003BEC                     DMA1DPTRL       equ	15340	;# 
 16464   003BED                     DMA1DPTRH       equ	15341	;# 
 16465   003BEE                     DMA1DSZ         equ	15342	;# 
 16466   003BEE                     DMA1DSZL        equ	15342	;# 
 16467   003BEF                     DMA1DSZH        equ	15343	;# 
 16468   003BF0                     DMA1DSA         equ	15344	;# 
 16469   003BF0                     DMA1DSAL        equ	15344	;# 
 16470   003BF1                     DMA1DSAH        equ	15345	;# 
 16471   003BF2                     DMA1SCNT        equ	15346	;# 
 16472   003BF2                     DMA1SCNTL       equ	15346	;# 
 16473   003BF3                     DMA1SCNTH       equ	15347	;# 
 16474   003BF4                     DMA1SPTR        equ	15348	;# 
 16475   003BF4                     DMA1SPTRL       equ	15348	;# 
 16476   003BF5                     DMA1SPTRH       equ	15349	;# 
 16477   003BF6                     DMA1SPTRU       equ	15350	;# 
 16478   003BF7                     DMA1SSZ         equ	15351	;# 
 16479   003BF7                     DMA1SSZL        equ	15351	;# 
 16480   003BF8                     DMA1SSZH        equ	15352	;# 
 16481   003BF9                     DMA1SSA         equ	15353	;# 
 16482   003BF9                     DMA1SSAL        equ	15353	;# 
 16483   003BFA                     DMA1SSAH        equ	15354	;# 
 16484   003BFB                     DMA1SSAU        equ	15355	;# 
 16485   003BFC                     DMA1CON0        equ	15356	;# 
 16486   003BFD                     DMA1CON1        equ	15357	;# 
 16487   003BFE                     DMA1AIRQ        equ	15358	;# 
 16488   003BFF                     DMA1SIRQ        equ	15359	;# 
 16489   003C56                     CLC4CON         equ	15446	;# 
 16490   003C57                     CLC4POL         equ	15447	;# 
 16491   003C58                     CLC4SEL0        equ	15448	;# 
 16492   003C59                     CLC4SEL1        equ	15449	;# 
 16493   003C5A                     CLC4SEL2        equ	15450	;# 
 16494   003C5B                     CLC4SEL3        equ	15451	;# 
 16495   003C5C                     CLC4GLS0        equ	15452	;# 
 16496   003C5D                     CLC4GLS1        equ	15453	;# 
 16497   003C5E                     CLC4GLS2        equ	15454	;# 
 16498   003C5F                     CLC4GLS3        equ	15455	;# 
 16499   003C60                     CLC3CON         equ	15456	;# 
 16500   003C61                     CLC3POL         equ	15457	;# 
 16501   003C62                     CLC3SEL0        equ	15458	;# 
 16502   003C63                     CLC3SEL1        equ	15459	;# 
 16503   003C64                     CLC3SEL2        equ	15460	;# 
 16504   003C65                     CLC3SEL3        equ	15461	;# 
 16505   003C66                     CLC3GLS0        equ	15462	;# 
 16506   003C67                     CLC3GLS1        equ	15463	;# 
 16507   003C68                     CLC3GLS2        equ	15464	;# 
 16508   003C69                     CLC3GLS3        equ	15465	;# 
 16509   003C6A                     CLC2CON         equ	15466	;# 
 16510   003C6B                     CLC2POL         equ	15467	;# 
 16511   003C6C                     CLC2SEL0        equ	15468	;# 
 16512   003C6D                     CLC2SEL1        equ	15469	;# 
 16513   003C6E                     CLC2SEL2        equ	15470	;# 
 16514   003C6F                     CLC2SEL3        equ	15471	;# 
 16515   003C70                     CLC2GLS0        equ	15472	;# 
 16516   003C71                     CLC2GLS1        equ	15473	;# 
 16517   003C72                     CLC2GLS2        equ	15474	;# 
 16518   003C73                     CLC2GLS3        equ	15475	;# 
 16519   003C74                     CLC1CON         equ	15476	;# 
 16520   003C75                     CLC1POL         equ	15477	;# 
 16521   003C76                     CLC1SEL0        equ	15478	;# 
 16522   003C77                     CLC1SEL1        equ	15479	;# 
 16523   003C78                     CLC1SEL2        equ	15480	;# 
 16524   003C79                     CLC1SEL3        equ	15481	;# 
 16525   003C7A                     CLC1GLS0        equ	15482	;# 
 16526   003C7B                     CLC1GLS1        equ	15483	;# 
 16527   003C7C                     CLC1GLS2        equ	15484	;# 
 16528   003C7D                     CLC1GLS3        equ	15485	;# 
 16529   003C7E                     CLCDATA0        equ	15486	;# 
 16530   003CE5                     CLKRCON         equ	15589	;# 
 16531   003CE6                     CLKRCLK         equ	15590	;# 
 16532   003CFA                     MD1CON0         equ	15610	;# 
 16533   003CFB                     MD1CON1         equ	15611	;# 
 16534   003CFC                     MD1SRC          equ	15612	;# 
 16535   003CFD                     MD1CARL         equ	15613	;# 
 16536   003CFE                     MD1CARH         equ	15614	;# 
 16537   003D10                     SPI1RXB         equ	15632	;# 
 16538   003D11                     SPI1TXB         equ	15633	;# 
 16539   003D12                     SPI1TCNT        equ	15634	;# 
 16540   003D12                     SPI1TCNTL       equ	15634	;# 
 16541   003D13                     SPI1TCNTH       equ	15635	;# 
 16542   003D14                     SPI1CON0        equ	15636	;# 
 16543   003D15                     SPI1CON1        equ	15637	;# 
 16544   003D16                     SPI1CON2        equ	15638	;# 
 16545   003D17                     SPI1STATUS      equ	15639	;# 
 16546   003D18                     SPI1TWIDTH      equ	15640	;# 
 16547   003D19                     SPI1BAUD        equ	15641	;# 
 16548   003D1A                     SPI1INTF        equ	15642	;# 
 16549   003D1B                     SPI1INTE        equ	15643	;# 
 16550   003D1C                     SPI1CLK         equ	15644	;# 
 16551   003D54                     I2C2RXB         equ	15700	;# 
 16552   003D55                     I2C2TXB         equ	15701	;# 
 16553   003D56                     I2C2CNT         equ	15702	;# 
 16554   003D57                     I2C2ADB0        equ	15703	;# 
 16555   003D58                     I2C2ADB1        equ	15704	;# 
 16556   003D59                     I2C2ADR0        equ	15705	;# 
 16557   003D5A                     I2C2ADR1        equ	15706	;# 
 16558   003D5B                     I2C2ADR2        equ	15707	;# 
 16559   003D5C                     I2C2ADR3        equ	15708	;# 
 16560   003D5D                     I2C2CON0        equ	15709	;# 
 16561   003D5E                     I2C2CON1        equ	15710	;# 
 16562   003D5F                     I2C2CON2        equ	15711	;# 
 16563   003D60                     I2C2ERR         equ	15712	;# 
 16564   003D61                     I2C2STAT0       equ	15713	;# 
 16565   003D62                     I2C2STAT1       equ	15714	;# 
 16566   003D63                     I2C2PIR         equ	15715	;# 
 16567   003D64                     I2C2PIE         equ	15716	;# 
 16568   003D65                     I2C2CLK         equ	15717	;# 
 16569   003D66                     I2C2BTO         equ	15718	;# 
 16570   003D6A                     I2C1RXB         equ	15722	;# 
 16571   003D6B                     I2C1TXB         equ	15723	;# 
 16572   003D6C                     I2C1CNT         equ	15724	;# 
 16573   003D6D                     I2C1ADB0        equ	15725	;# 
 16574   003D6E                     I2C1ADB1        equ	15726	;# 
 16575   003D6F                     I2C1ADR0        equ	15727	;# 
 16576   003D70                     I2C1ADR1        equ	15728	;# 
 16577   003D71                     I2C1ADR2        equ	15729	;# 
 16578   003D72                     I2C1ADR3        equ	15730	;# 
 16579   003D73                     I2C1CON0        equ	15731	;# 
 16580   003D74                     I2C1CON1        equ	15732	;# 
 16581   003D75                     I2C1CON2        equ	15733	;# 
 16582   003D76                     I2C1ERR         equ	15734	;# 
 16583   003D77                     I2C1STAT0       equ	15735	;# 
 16584   003D78                     I2C1STAT1       equ	15736	;# 
 16585   003D79                     I2C1PIR         equ	15737	;# 
 16586   003D7A                     I2C1PIE         equ	15738	;# 
 16587   003D7B                     I2C1CLK         equ	15739	;# 
 16588   003D7C                     I2C1BTO         equ	15740	;# 
 16589   003DD0                     U2RXB           equ	15824	;# 
 16590   003DD0                     U2RXBL          equ	15824	;# 
 16591   003DD2                     U2TXB           equ	15826	;# 
 16592   003DD2                     U2TXBL          equ	15826	;# 
 16593   003DD4                     U2P1            equ	15828	;# 
 16594   003DD4                     U2P1L           equ	15828	;# 
 16595   003DD6                     U2P2            equ	15830	;# 
 16596   003DD6                     U2P2L           equ	15830	;# 
 16597   003DD8                     U2P3            equ	15832	;# 
 16598   003DD8                     U2P3L           equ	15832	;# 
 16599   003DDA                     U2CON0          equ	15834	;# 
 16600   003DDB                     U2CON1          equ	15835	;# 
 16601   003DDC                     U2CON2          equ	15836	;# 
 16602   003DDD                     U2BRG           equ	15837	;# 
 16603   003DDD                     U2BRGL          equ	15837	;# 
 16604   003DDE                     U2BRGH          equ	15838	;# 
 16605   003DDF                     U2FIFO          equ	15839	;# 
 16606   003DE0                     U2UIR           equ	15840	;# 
 16607   003DE1                     U2ERRIR         equ	15841	;# 
 16608   003DE2                     U2ERRIE         equ	15842	;# 
 16609   003DE8                     U1RXB           equ	15848	;# 
 16610   003DE8                     U1RXBL          equ	15848	;# 
 16611   003DE9                     U1RXCHK         equ	15849	;# 
 16612   003DEA                     U1TXB           equ	15850	;# 
 16613   003DEA                     U1TXBL          equ	15850	;# 
 16614   003DEB                     U1TXCHK         equ	15851	;# 
 16615   003DEC                     U1P1            equ	15852	;# 
 16616   003DEC                     U1P1L           equ	15852	;# 
 16617   003DED                     U1P1H           equ	15853	;# 
 16618   003DEE                     U1P2            equ	15854	;# 
 16619   003DEE                     U1P2L           equ	15854	;# 
 16620   003DEF                     U1P2H           equ	15855	;# 
 16621   003DF0                     U1P3            equ	15856	;# 
 16622   003DF0                     U1P3L           equ	15856	;# 
 16623   003DF1                     U1P3H           equ	15857	;# 
 16624   003DF2                     U1CON0          equ	15858	;# 
 16625   003DF3                     U1CON1          equ	15859	;# 
 16626   003DF4                     U1CON2          equ	15860	;# 
 16627   003DF5                     U1BRG           equ	15861	;# 
 16628   003DF5                     U1BRGL          equ	15861	;# 
 16629   003DF6                     U1BRGH          equ	15862	;# 
 16630   003DF7                     U1FIFO          equ	15863	;# 
 16631   003DF8                     U1UIR           equ	15864	;# 
 16632   003DF9                     U1ERRIR         equ	15865	;# 
 16633   003DFA                     U1ERRIE         equ	15866	;# 
 16634   003E9C                     DAC1CON1        equ	16028	;# 
 16635   003E9E                     DAC1CON0        equ	16030	;# 
 16636   003EB8                     CM2CON0         equ	16056	;# 
 16637   003EB9                     CM2CON1         equ	16057	;# 
 16638   003EBA                     CM2NCH          equ	16058	;# 
 16639   003EBB                     CM2PCH          equ	16059	;# 
 16640   003EBC                     CM1CON0         equ	16060	;# 
 16641   003EBD                     CM1CON1         equ	16061	;# 
 16642   003EBE                     CM1NCH          equ	16062	;# 
 16643   003EBF                     CM1PCH          equ	16063	;# 
 16644   003EC0                     CMOUT           equ	16064	;# 
 16645   003EC1                     FVRCON          equ	16065	;# 
 16646   003EC3                     ZCDCON          equ	16067	;# 
 16647   003EC9                     HLVDCON0        equ	16073	;# 
 16648   003ECA                     HLVDCON1        equ	16074	;# 
 16649   003ED7                     ADCP            equ	16087	;# 
 16650   003EDE                     ADLTH           equ	16094	;# 
 16651   003EDE                     ADLTHL          equ	16094	;# 
 16652   003EDF                     ADLTHH          equ	16095	;# 
 16653   003EE0                     ADUTH           equ	16096	;# 
 16654   003EE0                     ADUTHL          equ	16096	;# 
 16655   003EE1                     ADUTHH          equ	16097	;# 
 16656   003EE2                     ADERR           equ	16098	;# 
 16657   003EE2                     ADERRL          equ	16098	;# 
 16658   003EE3                     ADERRH          equ	16099	;# 
 16659   003EE4                     ADSTPT          equ	16100	;# 
 16660   003EE4                     ADSTPTL         equ	16100	;# 
 16661   003EE5                     ADSTPTH         equ	16101	;# 
 16662   003EE6                     ADFLTR          equ	16102	;# 
 16663   003EE6                     ADFLTRL         equ	16102	;# 
 16664   003EE7                     ADFLTRH         equ	16103	;# 
 16665   003EE8                     ADACC           equ	16104	;# 
 16666   003EE8                     ADACCL          equ	16104	;# 
 16667   003EE9                     ADACCH          equ	16105	;# 
 16668   003EEA                     ADACCU          equ	16106	;# 
 16669   003EEB                     ADCNT           equ	16107	;# 
 16670   003EEC                     ADRPT           equ	16108	;# 
 16671   003EED                     ADPREV          equ	16109	;# 
 16672   003EED                     ADPREVL         equ	16109	;# 
 16673   003EEE                     ADPREVH         equ	16110	;# 
 16674   003EEF                     ADRES           equ	16111	;# 
 16675   003EEF                     ADRESL          equ	16111	;# 
 16676   003EF0                     ADRESH          equ	16112	;# 
 16677   003EF1                     ADPCH           equ	16113	;# 
 16678   003EF3                     ADACQ           equ	16115	;# 
 16679   003EF3                     ADACQL          equ	16115	;# 
 16680   003EF4                     ADACQH          equ	16116	;# 
 16681   003EF5                     ADCAP           equ	16117	;# 
 16682   003EF6                     ADPRE           equ	16118	;# 
 16683   003EF6                     ADPREL          equ	16118	;# 
 16684   003EF7                     ADPREH          equ	16119	;# 
 16685   003EF8                     ADCON0          equ	16120	;# 
 16686   003EF9                     ADCON1          equ	16121	;# 
 16687   003EFA                     ADCON2          equ	16122	;# 
 16688   003EFB                     ADCON3          equ	16123	;# 
 16689   003EFC                     ADSTAT          equ	16124	;# 
 16690   003EFD                     ADREF           equ	16125	;# 
 16691   003EFE                     ADACT           equ	16126	;# 
 16692   003EFF                     ADCLK           equ	16127	;# 
 16693   003F12                     SMT1TMR         equ	16146	;# 
 16694   003F12                     SMT1TMRL        equ	16146	;# 
 16695   003F13                     SMT1TMRH        equ	16147	;# 
 16696   003F14                     SMT1TMRU        equ	16148	;# 
 16697   003F15                     SMT1CPR         equ	16149	;# 
 16698   003F15                     SMT1CPRL        equ	16149	;# 
 16699   003F16                     SMT1CPRH        equ	16150	;# 
 16700   003F17                     SMT1CPRU        equ	16151	;# 
 16701   003F18                     SMT1CPW         equ	16152	;# 
 16702   003F18                     SMT1CPWL        equ	16152	;# 
 16703   003F19                     SMT1CPWH        equ	16153	;# 
 16704   003F1A                     SMT1CPWU        equ	16154	;# 
 16705   003F1B                     SMT1PR          equ	16155	;# 
 16706   003F1B                     SMT1PRL         equ	16155	;# 
 16707   003F1C                     SMT1PRH         equ	16156	;# 
 16708   003F1D                     SMT1PRU         equ	16157	;# 
 16709   003F1E                     SMT1CON0        equ	16158	;# 
 16710   003F1F                     SMT1CON1        equ	16159	;# 
 16711   003F20                     SMT1STAT        equ	16160	;# 
 16712   003F21                     SMT1CLK         equ	16161	;# 
 16713   003F22                     SMT1SIG         equ	16162	;# 
 16714   003F23                     SMT1WIN         equ	16163	;# 
 16715   003F38                     NCO1ACC         equ	16184	;# 
 16716   003F38                     NCO1ACCL        equ	16184	;# 
 16717   003F39                     NCO1ACCH        equ	16185	;# 
 16718   003F3A                     NCO1ACCU        equ	16186	;# 
 16719   003F3B                     NCO1INC         equ	16187	;# 
 16720   003F3B                     NCO1INCL        equ	16187	;# 
 16721   003F3C                     NCO1INCH        equ	16188	;# 
 16722   003F3D                     NCO1INCU        equ	16189	;# 
 16723   003F3E                     NCO1CON         equ	16190	;# 
 16724   003F3F                     NCO1CLK         equ	16191	;# 
 16725   003F40                     CWG3CLK         equ	16192	;# 
 16726   003F40                     CWG3CLKCON      equ	16192	;# 
 16727   003F41                     CWG3ISM         equ	16193	;# 
 16728   003F41                     CWG3DAT         equ	16193	;# 
 16729   003F42                     CWG3DBR         equ	16194	;# 
 16730   003F43                     CWG3DBF         equ	16195	;# 
 16731   003F44                     CWG3CON0        equ	16196	;# 
 16732   003F45                     CWG3CON1        equ	16197	;# 
 16733   003F46                     CWG3AS0         equ	16198	;# 
 16734   003F47                     CWG3AS1         equ	16199	;# 
 16735   003F48                     CWG3STR         equ	16200	;# 
 16736   003F49                     CWG2CLK         equ	16201	;# 
 16737   003F49                     CWG2CLKCON      equ	16201	;# 
 16738   003F4A                     CWG2ISM         equ	16202	;# 
 16739   003F4A                     CWG2DAT         equ	16202	;# 
 16740   003F4B                     CWG2DBR         equ	16203	;# 
 16741   003F4C                     CWG2DBF         equ	16204	;# 
 16742   003F4D                     CWG2CON0        equ	16205	;# 
 16743   003F4E                     CWG2CON1        equ	16206	;# 
 16744   003F4F                     CWG2AS0         equ	16207	;# 
 16745   003F50                     CWG2AS1         equ	16208	;# 
 16746   003F51                     CWG2STR         equ	16209	;# 
 16747   003F52                     CWG1CLK         equ	16210	;# 
 16748   003F52                     CWG1CLKCON      equ	16210	;# 
 16749   003F53                     CWG1ISM         equ	16211	;# 
 16750   003F53                     CWG1DAT         equ	16211	;# 
 16751   003F54                     CWG1DBR         equ	16212	;# 
 16752   003F55                     CWG1DBF         equ	16213	;# 
 16753   003F56                     CWG1CON0        equ	16214	;# 
 16754   003F57                     CWG1CON1        equ	16215	;# 
 16755   003F58                     CWG1AS0         equ	16216	;# 
 16756   003F59                     CWG1AS1         equ	16217	;# 
 16757   003F5A                     CWG1STR         equ	16218	;# 
 16758   003F5E                     CCPTMRS0        equ	16222	;# 
 16759   003F5F                     CCPTMRS1        equ	16223	;# 
 16760   003F60                     PWM8DC          equ	16224	;# 
 16761   003F60                     PWM8DCL         equ	16224	;# 
 16762   003F61                     PWM8DCH         equ	16225	;# 
 16763   003F62                     PWM8CON         equ	16226	;# 
 16764   003F64                     PWM7DC          equ	16228	;# 
 16765   003F64                     PWM7DCL         equ	16228	;# 
 16766   003F65                     PWM7DCH         equ	16229	;# 
 16767   003F66                     PWM7CON         equ	16230	;# 
 16768   003F68                     PWM6DC          equ	16232	;# 
 16769   003F68                     PWM6DCL         equ	16232	;# 
 16770   003F69                     PWM6DCH         equ	16233	;# 
 16771   003F6A                     PWM6CON         equ	16234	;# 
 16772   003F6C                     PWM5DC          equ	16236	;# 
 16773   003F6C                     PWM5DCL         equ	16236	;# 
 16774   003F6D                     PWM5DCH         equ	16237	;# 
 16775   003F6E                     PWM5CON         equ	16238	;# 
 16776   003F70                     CCPR4           equ	16240	;# 
 16777   003F70                     CCPR4L          equ	16240	;# 
 16778   003F71                     CCPR4H          equ	16241	;# 
 16779   003F72                     CCP4CON         equ	16242	;# 
 16780   003F73                     CCP4CAP         equ	16243	;# 
 16781   003F74                     CCPR3           equ	16244	;# 
 16782   003F74                     CCPR3L          equ	16244	;# 
 16783   003F75                     CCPR3H          equ	16245	;# 
 16784   003F76                     CCP3CON         equ	16246	;# 
 16785   003F77                     CCP3CAP         equ	16247	;# 
 16786   003F78                     CCPR2           equ	16248	;# 
 16787   003F78                     CCPR2L          equ	16248	;# 
 16788   003F79                     CCPR2H          equ	16249	;# 
 16789   003F7A                     CCP2CON         equ	16250	;# 
 16790   003F7B                     CCP2CAP         equ	16251	;# 
 16791   003F7C                     CCPR1           equ	16252	;# 
 16792   003F7C                     CCPR1L          equ	16252	;# 
 16793   003F7D                     CCPR1H          equ	16253	;# 
 16794   003F7E                     CCP1CON         equ	16254	;# 
 16795   003F7F                     CCP1CAP         equ	16255	;# 
 16796   003F92                     T6TMR           equ	16274	;# 
 16797   003F92                     TMR6            equ	16274	;# 
 16798   003F93                     T6PR            equ	16275	;# 
 16799   003F93                     PR6             equ	16275	;# 
 16800   003F94                     T6CON           equ	16276	;# 
 16801   003F95                     T6HLT           equ	16277	;# 
 16802   003F96                     T6CLKCON        equ	16278	;# 
 16803   003F96                     T6CLK           equ	16278	;# 
 16804   003F97                     T6RST           equ	16279	;# 
 16805   003F98                     TMR5            equ	16280	;# 
 16806   003F98                     TMR5L           equ	16280	;# 
 16807   003F99                     TMR5H           equ	16281	;# 
 16808   003F9A                     T5CON           equ	16282	;# 
 16809   003F9A                     TMR5CON         equ	16282	;# 
 16810   003F9B                     T5GCON          equ	16283	;# 
 16811   003F9B                     TMR5GCON        equ	16283	;# 
 16812   003F9C                     T5GATE          equ	16284	;# 
 16813   003F9C                     TMR5GATE        equ	16284	;# 
 16814   003F9D                     T5CLK           equ	16285	;# 
 16815   003F9D                     TMR5CLK         equ	16285	;# 
 16816   003F9D                     PR5             equ	16285	;# 
 16817   003F9E                     T4TMR           equ	16286	;# 
 16818   003F9E                     TMR4            equ	16286	;# 
 16819   003F9F                     T4PR            equ	16287	;# 
 16820   003F9F                     PR4             equ	16287	;# 
 16821   003FA0                     T4CON           equ	16288	;# 
 16822   003FA1                     T4HLT           equ	16289	;# 
 16823   003FA2                     T4CLKCON        equ	16290	;# 
 16824   003FA2                     T4CLK           equ	16290	;# 
 16825   003FA3                     T4RST           equ	16291	;# 
 16826   003FA4                     TMR3            equ	16292	;# 
 16827   003FA4                     TMR3L           equ	16292	;# 
 16828   003FA5                     TMR3H           equ	16293	;# 
 16829   003FA6                     T3CON           equ	16294	;# 
 16830   003FA6                     TMR3CON         equ	16294	;# 
 16831   003FA7                     T3GCON          equ	16295	;# 
 16832   003FA7                     TMR3GCON        equ	16295	;# 
 16833   003FA8                     T3GATE          equ	16296	;# 
 16834   003FA8                     TMR3GATE        equ	16296	;# 
 16835   003FA9                     T3CLK           equ	16297	;# 
 16836   003FA9                     TMR3CLK         equ	16297	;# 
 16837   003FA9                     PR3             equ	16297	;# 
 16838   003FAA                     T2TMR           equ	16298	;# 
 16839   003FAA                     TMR2            equ	16298	;# 
 16840   003FAB                     T2PR            equ	16299	;# 
 16841   003FAB                     PR2             equ	16299	;# 
 16842   003FAC                     T2CON           equ	16300	;# 
 16843   003FAD                     T2HLT           equ	16301	;# 
 16844   003FAE                     T2CLKCON        equ	16302	;# 
 16845   003FAE                     T2CLK           equ	16302	;# 
 16846   003FAF                     T2RST           equ	16303	;# 
 16847   003FB0                     TMR1            equ	16304	;# 
 16848   003FB0                     TMR1L           equ	16304	;# 
 16849   003FB1                     TMR1H           equ	16305	;# 
 16850   003FB2                     T1CON           equ	16306	;# 
 16851   003FB2                     TMR1CON         equ	16306	;# 
 16852   003FB3                     T1GCON          equ	16307	;# 
 16853   003FB3                     TMR1GCON        equ	16307	;# 
 16854   003FB4                     T1GATE          equ	16308	;# 
 16855   003FB4                     TMR1GATE        equ	16308	;# 
 16856   003FB5                     T1CLK           equ	16309	;# 
 16857   003FB5                     TMR1CLK         equ	16309	;# 
 16858   003FB5                     PR1             equ	16309	;# 
 16859   003FB6                     TMR0L           equ	16310	;# 
 16860   003FB6                     TMR0            equ	16310	;# 
 16861   003FB7                     TMR0H           equ	16311	;# 
 16862   003FB7                     PR0             equ	16311	;# 
 16863   003FB8                     T0CON0          equ	16312	;# 
 16864   003FB9                     T0CON1          equ	16313	;# 
 16865   003FBA                     LATA            equ	16314	;# 
 16866   003FBB                     LATB            equ	16315	;# 
 16867   003FBC                     LATC            equ	16316	;# 
 16868   003FBD                     LATD            equ	16317	;# 
 16869   003FBE                     LATE            equ	16318	;# 
 16870   003FBF                     LATF            equ	16319	;# 
 16871   003FC2                     TRISA           equ	16322	;# 
 16872   003FC3                     TRISB           equ	16323	;# 
 16873   003FC4                     TRISC           equ	16324	;# 
 16874   003FC5                     TRISD           equ	16325	;# 
 16875   003FC6                     TRISE           equ	16326	;# 
 16876   003FC7                     TRISF           equ	16327	;# 
 16877   003FCA                     PORTA           equ	16330	;# 
 16878   003FCB                     PORTB           equ	16331	;# 
 16879   003FCC                     PORTC           equ	16332	;# 
 16880   003FCD                     PORTD           equ	16333	;# 
 16881   003FCE                     PORTE           equ	16334	;# 
 16882   003FCF                     PORTF           equ	16335	;# 
 16883   003FD2                     INTCON0         equ	16338	;# 
 16884   003FD3                     INTCON1         equ	16339	;# 
 16885   003FD4                     IVTLOCK         equ	16340	;# 
 16886   003FD5                     IVTBASE         equ	16341	;# 
 16887   003FD5                     IVTBASEL        equ	16341	;# 
 16888   003FD6                     IVTBASEH        equ	16342	;# 
 16889   003FD7                     IVTBASEU        equ	16343	;# 
 16890   003FD8                     STATUS          equ	16344	;# 
 16891   003FD9                     FSR2            equ	16345	;# 
 16892   003FD9                     FSR2L           equ	16345	;# 
 16893   003FDA                     FSR2H           equ	16346	;# 
 16894   003FDB                     PLUSW2          equ	16347	;# 
 16895   003FDC                     PREINC2         equ	16348	;# 
 16896   003FDD                     POSTDEC2        equ	16349	;# 
 16897   003FDE                     POSTINC2        equ	16350	;# 
 16898   003FDF                     INDF2           equ	16351	;# 
 16899   003FE0                     BSR             equ	16352	;# 
 16900   003FE1                     FSR1            equ	16353	;# 
 16901   003FE1                     FSR1L           equ	16353	;# 
 16902   003FE2                     FSR1H           equ	16354	;# 
 16903   003FE3                     PLUSW1          equ	16355	;# 
 16904   003FE4                     PREINC1         equ	16356	;# 
 16905   003FE5                     POSTDEC1        equ	16357	;# 
 16906   003FE6                     POSTINC1        equ	16358	;# 
 16907   003FE7                     INDF1           equ	16359	;# 
 16908   003FE8                     WREG            equ	16360	;# 
 16909   003FE9                     FSR0            equ	16361	;# 
 16910   003FE9                     FSR0L           equ	16361	;# 
 16911   003FEA                     FSR0H           equ	16362	;# 
 16912   003FEB                     PLUSW0          equ	16363	;# 
 16913   003FEC                     PREINC0         equ	16364	;# 
 16914   003FED                     POSTDEC0        equ	16365	;# 
 16915   003FEE                     POSTINC0        equ	16366	;# 
 16916   003FEF                     INDF0           equ	16367	;# 
 16917   003FF0                     PCON0           equ	16368	;# 
 16918   003FF1                     PCON1           equ	16369	;# 
 16919   003FF3                     PROD            equ	16371	;# 
 16920   003FF3                     PRODL           equ	16371	;# 
 16921   003FF4                     PRODH           equ	16372	;# 
 16922   003FF5                     TABLAT          equ	16373	;# 
 16923   003FF6                     TBLPTR          equ	16374	;# 
 16924   003FF6                     TBLPTRL         equ	16374	;# 
 16925   003FF7                     TBLPTRH         equ	16375	;# 
 16926   003FF8                     TBLPTRU         equ	16376	;# 
 16927   003FF9                     PCLAT           equ	16377	;# 
 16928   003FF9                     PCL             equ	16377	;# 
 16929   003FFA                     PCLATH          equ	16378	;# 
 16930   003FFB                     PCLATU          equ	16379	;# 
 16931   003FFC                     STKPTR          equ	16380	;# 
 16932   003FFD                     TOS             equ	16381	;# 
 16933   003FFD                     TOSL            equ	16381	;# 
 16934   003FFE                     TOSH            equ	16382	;# 
 16935   003FFF                     TOSU            equ	16383	;# 
 16936   003880                     STATUS_CSHAD    equ	14464	;# 
 16937   003881                     WREG_CSHAD      equ	14465	;# 
 16938   003882                     BSR_CSHAD       equ	14466	;# 
 16939   003883                     SHADCON         equ	14467	;# 
 16940   003884                     STATUS_SHAD     equ	14468	;# 
 16941   003885                     WREG_SHAD       equ	14469	;# 
 16942   003886                     BSR_SHAD        equ	14470	;# 
 16943   003887                     PCLATH_SHAD     equ	14471	;# 
 16944   003888                     PCLATU_SHAD     equ	14472	;# 
 16945   003889                     FSR0SH          equ	14473	;# 
 16946   003889                     FSR0L_SHAD      equ	14473	;# 
 16947   00388A                     FSR0H_SHAD      equ	14474	;# 
 16948   00388B                     FSR1SH          equ	14475	;# 
 16949   00388B                     FSR1L_SHAD      equ	14475	;# 
 16950   00388C                     FSR1H_SHAD      equ	14476	;# 
 16951   00388D                     FSR2SH          equ	14477	;# 
 16952   00388D                     FSR2L_SHAD      equ	14477	;# 
 16953   00388E                     FSR2H_SHAD      equ	14478	;# 
 16954   00388F                     PRODSH          equ	14479	;# 
 16955   00388F                     PRODL_SHAD      equ	14479	;# 
 16956   003890                     PRODH_SHAD      equ	14480	;# 
 16957   00389D                     IVTADL          equ	14493	;# 
 16958   00389E                     IVTADH          equ	14494	;# 
 16959   00389F                     IVTADU          equ	14495	;# 
 16960   00395B                     WDTCON0         equ	14683	;# 
 16961   00395C                     WDTCON1         equ	14684	;# 
 16962   00395D                     WDTPSL          equ	14685	;# 
 16963   00395E                     WDTPSH          equ	14686	;# 
 16964   00395F                     WDTTMR          equ	14687	;# 
 16965   003960                     CRCDATA         equ	14688	;# 
 16966   003960                     CRCDATL         equ	14688	;# 
 16967   003961                     CRCDATH         equ	14689	;# 
 16968   003962                     CRCACC          equ	14690	;# 
 16969   003962                     CRCACCL         equ	14690	;# 
 16970   003963                     CRCACCH         equ	14691	;# 
 16971   003964                     CRCSHFT         equ	14692	;# 
 16972   003964                     CRCSHIFTL       equ	14692	;# 
 16973   003965                     CRCSHIFTH       equ	14693	;# 
 16974   003966                     CRCXOR          equ	14694	;# 
 16975   003966                     CRCXORL         equ	14694	;# 
 16976   003967                     CRCXORH         equ	14695	;# 
 16977   003968                     CRCCON0         equ	14696	;# 
 16978   003969                     CRCCON1         equ	14697	;# 
 16979   003976                     SCANLADR        equ	14710	;# 
 16980   003976                     SCANLADRL       equ	14710	;# 
 16981   003977                     SCANLADRH       equ	14711	;# 
 16982   003978                     SCANLADRU       equ	14712	;# 
 16983   003979                     SCANHADR        equ	14713	;# 
 16984   003979                     SCANHADRL       equ	14713	;# 
 16985   00397A                     SCANHADRH       equ	14714	;# 
 16986   00397B                     SCANHADRU       equ	14715	;# 
 16987   00397C                     SCANCON0        equ	14716	;# 
 16988   00397D                     SCANTRIG        equ	14717	;# 
 16989   003980                     IPR0            equ	14720	;# 
 16990   003981                     IPR1            equ	14721	;# 
 16991   003982                     IPR2            equ	14722	;# 
 16992   003983                     IPR3            equ	14723	;# 
 16993   003984                     IPR4            equ	14724	;# 
 16994   003985                     IPR5            equ	14725	;# 
 16995   003986                     IPR6            equ	14726	;# 
 16996   003987                     IPR7            equ	14727	;# 
 16997   003988                     IPR8            equ	14728	;# 
 16998   003989                     IPR9            equ	14729	;# 
 16999   00398A                     IPR10           equ	14730	;# 
 17000   003990                     PIE0            equ	14736	;# 
 17001   003991                     PIE1            equ	14737	;# 
 17002   003992                     PIE2            equ	14738	;# 
 17003   003993                     PIE3            equ	14739	;# 
 17004   003994                     PIE4            equ	14740	;# 
 17005   003995                     PIE5            equ	14741	;# 
 17006   003996                     PIE6            equ	14742	;# 
 17007   003997                     PIE7            equ	14743	;# 
 17008   003998                     PIE8            equ	14744	;# 
 17009   003999                     PIE9            equ	14745	;# 
 17010   00399A                     PIE10           equ	14746	;# 
 17011   0039A0                     PIR0            equ	14752	;# 
 17012   0039A1                     PIR1            equ	14753	;# 
 17013   0039A2                     PIR2            equ	14754	;# 
 17014   0039A3                     PIR3            equ	14755	;# 
 17015   0039A4                     PIR4            equ	14756	;# 
 17016   0039A5                     PIR5            equ	14757	;# 
 17017   0039A6                     PIR6            equ	14758	;# 
 17018   0039A7                     PIR7            equ	14759	;# 
 17019   0039A8                     PIR8            equ	14760	;# 
 17020   0039A9                     PIR9            equ	14761	;# 
 17021   0039AA                     PIR10           equ	14762	;# 
 17022   0039C0                     PMD0            equ	14784	;# 
 17023   0039C1                     PMD1            equ	14785	;# 
 17024   0039C2                     PMD2            equ	14786	;# 
 17025   0039C3                     PMD3            equ	14787	;# 
 17026   0039C4                     PMD4            equ	14788	;# 
 17027   0039C5                     PMD5            equ	14789	;# 
 17028   0039C6                     PMD6            equ	14790	;# 
 17029   0039C7                     PMD7            equ	14791	;# 
 17030   0039D0                     BORCON          equ	14800	;# 
 17031   0039D1                     VREGCON         equ	14801	;# 
 17032   0039D8                     CPUDOZE         equ	14808	;# 
 17033   0039D9                     OSCCON1         equ	14809	;# 
 17034   0039DA                     OSCCON2         equ	14810	;# 
 17035   0039DB                     OSCCON3         equ	14811	;# 
 17036   0039DC                     OSCSTAT         equ	14812	;# 
 17037   0039DC                     OSCSTAT1        equ	14812	;# 
 17038   0039DD                     OSCEN           equ	14813	;# 
 17039   0039DE                     OSCTUNE         equ	14814	;# 
 17040   0039DF                     OSCFRQ          equ	14815	;# 
 17041   0039E0                     NVMADRL         equ	14816	;# 
 17042   0039E1                     NVMADRH         equ	14817	;# 
 17043   0039E3                     NVMDAT          equ	14819	;# 
 17044   0039E5                     NVMCON1         equ	14821	;# 
 17045   0039E6                     NVMCON2         equ	14822	;# 
 17046   0039EF                     PRLOCK          equ	14831	;# 
 17047   0039F1                     ISRPR           equ	14833	;# 
 17048   0039F2                     MAINPR          equ	14834	;# 
 17049   0039F3                     DMA1PR          equ	14835	;# 
 17050   0039F4                     DMA2PR          equ	14836	;# 
 17051   0039F7                     SCANPR          equ	14839	;# 
 17052   003A00                     RA0PPS          equ	14848	;# 
 17053   003A01                     RA1PPS          equ	14849	;# 
 17054   003A02                     RA2PPS          equ	14850	;# 
 17055   003A03                     RA3PPS          equ	14851	;# 
 17056   003A04                     RA4PPS          equ	14852	;# 
 17057   003A05                     RA5PPS          equ	14853	;# 
 17058   003A06                     RA6PPS          equ	14854	;# 
 17059   003A07                     RA7PPS          equ	14855	;# 
 17060   003A08                     RB0PPS          equ	14856	;# 
 17061   003A09                     RB1PPS          equ	14857	;# 
 17062   003A0A                     RB2PPS          equ	14858	;# 
 17063   003A0B                     RB3PPS          equ	14859	;# 
 17064   003A0C                     RB4PPS          equ	14860	;# 
 17065   003A0D                     RB5PPS          equ	14861	;# 
 17066   003A0E                     RB6PPS          equ	14862	;# 
 17067   003A0F                     RB7PPS          equ	14863	;# 
 17068   003A10                     RC0PPS          equ	14864	;# 
 17069   003A11                     RC1PPS          equ	14865	;# 
 17070   003A12                     RC2PPS          equ	14866	;# 
 17071   003A13                     RC3PPS          equ	14867	;# 
 17072   003A14                     RC4PPS          equ	14868	;# 
 17073   003A15                     RC5PPS          equ	14869	;# 
 17074   003A16                     RC6PPS          equ	14870	;# 
 17075   003A17                     RC7PPS          equ	14871	;# 
 17076   003A18                     RD0PPS          equ	14872	;# 
 17077   003A19                     RD1PPS          equ	14873	;# 
 17078   003A1A                     RD2PPS          equ	14874	;# 
 17079   003A1B                     RD3PPS          equ	14875	;# 
 17080   003A1C                     RD4PPS          equ	14876	;# 
 17081   003A1D                     RD5PPS          equ	14877	;# 
 17082   003A1E                     RD6PPS          equ	14878	;# 
 17083   003A1F                     RD7PPS          equ	14879	;# 
 17084   003A20                     RE0PPS          equ	14880	;# 
 17085   003A21                     RE1PPS          equ	14881	;# 
 17086   003A22                     RE2PPS          equ	14882	;# 
 17087   003A28                     RF0PPS          equ	14888	;# 
 17088   003A29                     RF1PPS          equ	14889	;# 
 17089   003A2A                     RF2PPS          equ	14890	;# 
 17090   003A2B                     RF3PPS          equ	14891	;# 
 17091   003A2C                     RF4PPS          equ	14892	;# 
 17092   003A2D                     RF5PPS          equ	14893	;# 
 17093   003A2E                     RF6PPS          equ	14894	;# 
 17094   003A2F                     RF7PPS          equ	14895	;# 
 17095   003A40                     ANSELA          equ	14912	;# 
 17096   003A41                     WPUA            equ	14913	;# 
 17097   003A42                     ODCONA          equ	14914	;# 
 17098   003A43                     SLRCONA         equ	14915	;# 
 17099   003A44                     INLVLA          equ	14916	;# 
 17100   003A45                     IOCAP           equ	14917	;# 
 17101   003A46                     IOCAN           equ	14918	;# 
 17102   003A47                     IOCAF           equ	14919	;# 
 17103   003A50                     ANSELB          equ	14928	;# 
 17104   003A51                     WPUB            equ	14929	;# 
 17105   003A52                     ODCONB          equ	14930	;# 
 17106   003A53                     SLRCONB         equ	14931	;# 
 17107   003A54                     INLVLB          equ	14932	;# 
 17108   003A55                     IOCBP           equ	14933	;# 
 17109   003A56                     IOCBN           equ	14934	;# 
 17110   003A57                     IOCBF           equ	14935	;# 
 17111   003A5A                     RB1I2C          equ	14938	;# 
 17112   003A5B                     RB2I2C          equ	14939	;# 
 17113   003A60                     ANSELC          equ	14944	;# 
 17114   003A61                     WPUC            equ	14945	;# 
 17115   003A62                     ODCONC          equ	14946	;# 
 17116   003A63                     SLRCONC         equ	14947	;# 
 17117   003A64                     INLVLC          equ	14948	;# 
 17118   003A65                     IOCCP           equ	14949	;# 
 17119   003A66                     IOCCN           equ	14950	;# 
 17120   003A67                     IOCCF           equ	14951	;# 
 17121   003A6A                     RC3I2C          equ	14954	;# 
 17122   003A6B                     RC4I2C          equ	14955	;# 
 17123   003A70                     ANSELD          equ	14960	;# 
 17124   003A71                     WPUD            equ	14961	;# 
 17125   003A72                     ODCOND          equ	14962	;# 
 17126   003A73                     SLRCOND         equ	14963	;# 
 17127   003A74                     INLVLD          equ	14964	;# 
 17128   003A7A                     RD0I2C          equ	14970	;# 
 17129   003A7B                     RD1I2C          equ	14971	;# 
 17130   003A80                     ANSELE          equ	14976	;# 
 17131   003A81                     WPUE            equ	14977	;# 
 17132   003A82                     ODCONE          equ	14978	;# 
 17133   003A83                     SLRCONE         equ	14979	;# 
 17134   003A84                     INLVLE          equ	14980	;# 
 17135   003A85                     IOCEP           equ	14981	;# 
 17136   003A86                     IOCEN           equ	14982	;# 
 17137   003A87                     IOCEF           equ	14983	;# 
 17138   003A90                     ANSELF          equ	14992	;# 
 17139   003A91                     WPUF            equ	14993	;# 
 17140   003A92                     ODCONF          equ	14994	;# 
 17141   003A93                     SLRCONF         equ	14995	;# 
 17142   003A94                     INLVLF          equ	14996	;# 
 17143   003ABF                     PPSLOCK         equ	15039	;# 
 17144   003AC0                     INT0PPS         equ	15040	;# 
 17145   003AC1                     INT1PPS         equ	15041	;# 
 17146   003AC2                     INT2PPS         equ	15042	;# 
 17147   003AC3                     T0CKIPPS        equ	15043	;# 
 17148   003AC4                     T1CKIPPS        equ	15044	;# 
 17149   003AC5                     T1GPPS          equ	15045	;# 
 17150   003AC6                     T3CKIPPS        equ	15046	;# 
 17151   003AC7                     T3GPPS          equ	15047	;# 
 17152   003AC8                     T5CKIPPS        equ	15048	;# 
 17153   003AC9                     T5GPPS          equ	15049	;# 
 17154   003ACA                     T2INPPS         equ	15050	;# 
 17155   003ACB                     T4INPPS         equ	15051	;# 
 17156   003ACC                     T6INPPS         equ	15052	;# 
 17157   003ACD                     CCP1PPS         equ	15053	;# 
 17158   003ACE                     CCP2PPS         equ	15054	;# 
 17159   003ACF                     CCP3PPS         equ	15055	;# 
 17160   003AD0                     CCP4PPS         equ	15056	;# 
 17161   003AD1                     SMT1WINPPS      equ	15057	;# 
 17162   003AD2                     SMT1SIGPPS      equ	15058	;# 
 17163   003AD3                     CWG1INPPS       equ	15059	;# 
 17164   003AD4                     CWG2INPPS       equ	15060	;# 
 17165   003AD5                     CWG3INPPS       equ	15061	;# 
 17166   003AD6                     MD1CARLPPS      equ	15062	;# 
 17167   003AD7                     MD1CARHPPS      equ	15063	;# 
 17168   003AD8                     MD1SRCPPS       equ	15064	;# 
 17169   003AD9                     CLCIN0PPS       equ	15065	;# 
 17170   003ADA                     CLCIN1PPS       equ	15066	;# 
 17171   003ADB                     CLCIN2PPS       equ	15067	;# 
 17172   003ADC                     CLCIN3PPS       equ	15068	;# 
 17173   003ADD                     ADACTPPS        equ	15069	;# 
 17174   003ADE                     SPI1SCKPPS      equ	15070	;# 
 17175   003ADF                     SPI1SDIPPS      equ	15071	;# 
 17176   003AE0                     SPI1SSPPS       equ	15072	;# 
 17177   003AE1                     I2C1SCLPPS      equ	15073	;# 
 17178   003AE2                     I2C1SDAPPS      equ	15074	;# 
 17179   003AE3                     I2C2SCLPPS      equ	15075	;# 
 17180   003AE4                     I2C2SDAPPS      equ	15076	;# 
 17181   003AE5                     U1RXPPS         equ	15077	;# 
 17182   003AE6                     U1CTSPPS        equ	15078	;# 
 17183   003AE8                     U2RXPPS         equ	15080	;# 
 17184   003AE9                     U2CTSPPS        equ	15081	;# 
 17185   003BC9                     DMA2BUF         equ	15305	;# 
 17186   003BCA                     DMA2DCNT        equ	15306	;# 
 17187   003BCA                     DMA2DCNTL       equ	15306	;# 
 17188   003BCB                     DMA2DCNTH       equ	15307	;# 
 17189   003BCC                     DMA2DPTR        equ	15308	;# 
 17190   003BCC                     DMA2DPTRL       equ	15308	;# 
 17191   003BCD                     DMA2DPTRH       equ	15309	;# 
 17192   003BCE                     DMA2DSZ         equ	15310	;# 
 17193   003BCE                     DMA2DSZL        equ	15310	;# 
 17194   003BCF                     DMA2DSZH        equ	15311	;# 
 17195   003BD0                     DMA2DSA         equ	15312	;# 
 17196   003BD0                     DMA2DSAL        equ	15312	;# 
 17197   003BD1                     DMA2DSAH        equ	15313	;# 
 17198   003BD2                     DMA2SCNT        equ	15314	;# 
 17199   003BD2                     DMA2SCNTL       equ	15314	;# 
 17200   003BD3                     DMA2SCNTH       equ	15315	;# 
 17201   003BD4                     DMA2SPTR        equ	15316	;# 
 17202   003BD4                     DMA2SPTRL       equ	15316	;# 
 17203   003BD5                     DMA2SPTRH       equ	15317	;# 
 17204   003BD6                     DMA2SPTRU       equ	15318	;# 
 17205   003BD7                     DMA2SSZ         equ	15319	;# 
 17206   003BD7                     DMA2SSZL        equ	15319	;# 
 17207   003BD8                     DMA2SSZH        equ	15320	;# 
 17208   003BD9                     DMA2SSA         equ	15321	;# 
 17209   003BD9                     DMA2SSAL        equ	15321	;# 
 17210   003BDA                     DMA2SSAH        equ	15322	;# 
 17211   003BDB                     DMA2SSAU        equ	15323	;# 
 17212   003BDC                     DMA2CON0        equ	15324	;# 
 17213   003BDD                     DMA2CON1        equ	15325	;# 
 17214   003BDE                     DMA2AIRQ        equ	15326	;# 
 17215   003BDF                     DMA2SIRQ        equ	15327	;# 
 17216   003BE9                     DMA1BUF         equ	15337	;# 
 17217   003BEA                     DMA1DCNT        equ	15338	;# 
 17218   003BEA                     DMA1DCNTL       equ	15338	;# 
 17219   003BEB                     DMA1DCNTH       equ	15339	;# 
 17220   003BEC                     DMA1DPTR        equ	15340	;# 
 17221   003BEC                     DMA1DPTRL       equ	15340	;# 
 17222   003BED                     DMA1DPTRH       equ	15341	;# 
 17223   003BEE                     DMA1DSZ         equ	15342	;# 
 17224   003BEE                     DMA1DSZL        equ	15342	;# 
 17225   003BEF                     DMA1DSZH        equ	15343	;# 
 17226   003BF0                     DMA1DSA         equ	15344	;# 
 17227   003BF0                     DMA1DSAL        equ	15344	;# 
 17228   003BF1                     DMA1DSAH        equ	15345	;# 
 17229   003BF2                     DMA1SCNT        equ	15346	;# 
 17230   003BF2                     DMA1SCNTL       equ	15346	;# 
 17231   003BF3                     DMA1SCNTH       equ	15347	;# 
 17232   003BF4                     DMA1SPTR        equ	15348	;# 
 17233   003BF4                     DMA1SPTRL       equ	15348	;# 
 17234   003BF5                     DMA1SPTRH       equ	15349	;# 
 17235   003BF6                     DMA1SPTRU       equ	15350	;# 
 17236   003BF7                     DMA1SSZ         equ	15351	;# 
 17237   003BF7                     DMA1SSZL        equ	15351	;# 
 17238   003BF8                     DMA1SSZH        equ	15352	;# 
 17239   003BF9                     DMA1SSA         equ	15353	;# 
 17240   003BF9                     DMA1SSAL        equ	15353	;# 
 17241   003BFA                     DMA1SSAH        equ	15354	;# 
 17242   003BFB                     DMA1SSAU        equ	15355	;# 
 17243   003BFC                     DMA1CON0        equ	15356	;# 
 17244   003BFD                     DMA1CON1        equ	15357	;# 
 17245   003BFE                     DMA1AIRQ        equ	15358	;# 
 17246   003BFF                     DMA1SIRQ        equ	15359	;# 
 17247   003C56                     CLC4CON         equ	15446	;# 
 17248   003C57                     CLC4POL         equ	15447	;# 
 17249   003C58                     CLC4SEL0        equ	15448	;# 
 17250   003C59                     CLC4SEL1        equ	15449	;# 
 17251   003C5A                     CLC4SEL2        equ	15450	;# 
 17252   003C5B                     CLC4SEL3        equ	15451	;# 
 17253   003C5C                     CLC4GLS0        equ	15452	;# 
 17254   003C5D                     CLC4GLS1        equ	15453	;# 
 17255   003C5E                     CLC4GLS2        equ	15454	;# 
 17256   003C5F                     CLC4GLS3        equ	15455	;# 
 17257   003C60                     CLC3CON         equ	15456	;# 
 17258   003C61                     CLC3POL         equ	15457	;# 
 17259   003C62                     CLC3SEL0        equ	15458	;# 
 17260   003C63                     CLC3SEL1        equ	15459	;# 
 17261   003C64                     CLC3SEL2        equ	15460	;# 
 17262   003C65                     CLC3SEL3        equ	15461	;# 
 17263   003C66                     CLC3GLS0        equ	15462	;# 
 17264   003C67                     CLC3GLS1        equ	15463	;# 
 17265   003C68                     CLC3GLS2        equ	15464	;# 
 17266   003C69                     CLC3GLS3        equ	15465	;# 
 17267   003C6A                     CLC2CON         equ	15466	;# 
 17268   003C6B                     CLC2POL         equ	15467	;# 
 17269   003C6C                     CLC2SEL0        equ	15468	;# 
 17270   003C6D                     CLC2SEL1        equ	15469	;# 
 17271   003C6E                     CLC2SEL2        equ	15470	;# 
 17272   003C6F                     CLC2SEL3        equ	15471	;# 
 17273   003C70                     CLC2GLS0        equ	15472	;# 
 17274   003C71                     CLC2GLS1        equ	15473	;# 
 17275   003C72                     CLC2GLS2        equ	15474	;# 
 17276   003C73                     CLC2GLS3        equ	15475	;# 
 17277   003C74                     CLC1CON         equ	15476	;# 
 17278   003C75                     CLC1POL         equ	15477	;# 
 17279   003C76                     CLC1SEL0        equ	15478	;# 
 17280   003C77                     CLC1SEL1        equ	15479	;# 
 17281   003C78                     CLC1SEL2        equ	15480	;# 
 17282   003C79                     CLC1SEL3        equ	15481	;# 
 17283   003C7A                     CLC1GLS0        equ	15482	;# 
 17284   003C7B                     CLC1GLS1        equ	15483	;# 
 17285   003C7C                     CLC1GLS2        equ	15484	;# 
 17286   003C7D                     CLC1GLS3        equ	15485	;# 
 17287   003C7E                     CLCDATA0        equ	15486	;# 
 17288   003CE5                     CLKRCON         equ	15589	;# 
 17289   003CE6                     CLKRCLK         equ	15590	;# 
 17290   003CFA                     MD1CON0         equ	15610	;# 
 17291   003CFB                     MD1CON1         equ	15611	;# 
 17292   003CFC                     MD1SRC          equ	15612	;# 
 17293   003CFD                     MD1CARL         equ	15613	;# 
 17294   003CFE                     MD1CARH         equ	15614	;# 
 17295   003D10                     SPI1RXB         equ	15632	;# 
 17296   003D11                     SPI1TXB         equ	15633	;# 
 17297   003D12                     SPI1TCNT        equ	15634	;# 
 17298   003D12                     SPI1TCNTL       equ	15634	;# 
 17299   003D13                     SPI1TCNTH       equ	15635	;# 
 17300   003D14                     SPI1CON0        equ	15636	;# 
 17301   003D15                     SPI1CON1        equ	15637	;# 
 17302   003D16                     SPI1CON2        equ	15638	;# 
 17303   003D17                     SPI1STATUS      equ	15639	;# 
 17304   003D18                     SPI1TWIDTH      equ	15640	;# 
 17305   003D19                     SPI1BAUD        equ	15641	;# 
 17306   003D1A                     SPI1INTF        equ	15642	;# 
 17307   003D1B                     SPI1INTE        equ	15643	;# 
 17308   003D1C                     SPI1CLK         equ	15644	;# 
 17309   003D54                     I2C2RXB         equ	15700	;# 
 17310   003D55                     I2C2TXB         equ	15701	;# 
 17311   003D56                     I2C2CNT         equ	15702	;# 
 17312   003D57                     I2C2ADB0        equ	15703	;# 
 17313   003D58                     I2C2ADB1        equ	15704	;# 
 17314   003D59                     I2C2ADR0        equ	15705	;# 
 17315   003D5A                     I2C2ADR1        equ	15706	;# 
 17316   003D5B                     I2C2ADR2        equ	15707	;# 
 17317   003D5C                     I2C2ADR3        equ	15708	;# 
 17318   003D5D                     I2C2CON0        equ	15709	;# 
 17319   003D5E                     I2C2CON1        equ	15710	;# 
 17320   003D5F                     I2C2CON2        equ	15711	;# 
 17321   003D60                     I2C2ERR         equ	15712	;# 
 17322   003D61                     I2C2STAT0       equ	15713	;# 
 17323   003D62                     I2C2STAT1       equ	15714	;# 
 17324   003D63                     I2C2PIR         equ	15715	;# 
 17325   003D64                     I2C2PIE         equ	15716	;# 
 17326   003D65                     I2C2CLK         equ	15717	;# 
 17327   003D66                     I2C2BTO         equ	15718	;# 
 17328   003D6A                     I2C1RXB         equ	15722	;# 
 17329   003D6B                     I2C1TXB         equ	15723	;# 
 17330   003D6C                     I2C1CNT         equ	15724	;# 
 17331   003D6D                     I2C1ADB0        equ	15725	;# 
 17332   003D6E                     I2C1ADB1        equ	15726	;# 
 17333   003D6F                     I2C1ADR0        equ	15727	;# 
 17334   003D70                     I2C1ADR1        equ	15728	;# 
 17335   003D71                     I2C1ADR2        equ	15729	;# 
 17336   003D72                     I2C1ADR3        equ	15730	;# 
 17337   003D73                     I2C1CON0        equ	15731	;# 
 17338   003D74                     I2C1CON1        equ	15732	;# 
 17339   003D75                     I2C1CON2        equ	15733	;# 
 17340   003D76                     I2C1ERR         equ	15734	;# 
 17341   003D77                     I2C1STAT0       equ	15735	;# 
 17342   003D78                     I2C1STAT1       equ	15736	;# 
 17343   003D79                     I2C1PIR         equ	15737	;# 
 17344   003D7A                     I2C1PIE         equ	15738	;# 
 17345   003D7B                     I2C1CLK         equ	15739	;# 
 17346   003D7C                     I2C1BTO         equ	15740	;# 
 17347   003DD0                     U2RXB           equ	15824	;# 
 17348   003DD0                     U2RXBL          equ	15824	;# 
 17349   003DD2                     U2TXB           equ	15826	;# 
 17350   003DD2                     U2TXBL          equ	15826	;# 
 17351   003DD4                     U2P1            equ	15828	;# 
 17352   003DD4                     U2P1L           equ	15828	;# 
 17353   003DD6                     U2P2            equ	15830	;# 
 17354   003DD6                     U2P2L           equ	15830	;# 
 17355   003DD8                     U2P3            equ	15832	;# 
 17356   003DD8                     U2P3L           equ	15832	;# 
 17357   003DDA                     U2CON0          equ	15834	;# 
 17358   003DDB                     U2CON1          equ	15835	;# 
 17359   003DDC                     U2CON2          equ	15836	;# 
 17360   003DDD                     U2BRG           equ	15837	;# 
 17361   003DDD                     U2BRGL          equ	15837	;# 
 17362   003DDE                     U2BRGH          equ	15838	;# 
 17363   003DDF                     U2FIFO          equ	15839	;# 
 17364   003DE0                     U2UIR           equ	15840	;# 
 17365   003DE1                     U2ERRIR         equ	15841	;# 
 17366   003DE2                     U2ERRIE         equ	15842	;# 
 17367   003DE8                     U1RXB           equ	15848	;# 
 17368   003DE8                     U1RXBL          equ	15848	;# 
 17369   003DE9                     U1RXCHK         equ	15849	;# 
 17370   003DEA                     U1TXB           equ	15850	;# 
 17371   003DEA                     U1TXBL          equ	15850	;# 
 17372   003DEB                     U1TXCHK         equ	15851	;# 
 17373   003DEC                     U1P1            equ	15852	;# 
 17374   003DEC                     U1P1L           equ	15852	;# 
 17375   003DED                     U1P1H           equ	15853	;# 
 17376   003DEE                     U1P2            equ	15854	;# 
 17377   003DEE                     U1P2L           equ	15854	;# 
 17378   003DEF                     U1P2H           equ	15855	;# 
 17379   003DF0                     U1P3            equ	15856	;# 
 17380   003DF0                     U1P3L           equ	15856	;# 
 17381   003DF1                     U1P3H           equ	15857	;# 
 17382   003DF2                     U1CON0          equ	15858	;# 
 17383   003DF3                     U1CON1          equ	15859	;# 
 17384   003DF4                     U1CON2          equ	15860	;# 
 17385   003DF5                     U1BRG           equ	15861	;# 
 17386   003DF5                     U1BRGL          equ	15861	;# 
 17387   003DF6                     U1BRGH          equ	15862	;# 
 17388   003DF7                     U1FIFO          equ	15863	;# 
 17389   003DF8                     U1UIR           equ	15864	;# 
 17390   003DF9                     U1ERRIR         equ	15865	;# 
 17391   003DFA                     U1ERRIE         equ	15866	;# 
 17392   003E9C                     DAC1CON1        equ	16028	;# 
 17393   003E9E                     DAC1CON0        equ	16030	;# 
 17394   003EB8                     CM2CON0         equ	16056	;# 
 17395   003EB9                     CM2CON1         equ	16057	;# 
 17396   003EBA                     CM2NCH          equ	16058	;# 
 17397   003EBB                     CM2PCH          equ	16059	;# 
 17398   003EBC                     CM1CON0         equ	16060	;# 
 17399   003EBD                     CM1CON1         equ	16061	;# 
 17400   003EBE                     CM1NCH          equ	16062	;# 
 17401   003EBF                     CM1PCH          equ	16063	;# 
 17402   003EC0                     CMOUT           equ	16064	;# 
 17403   003EC1                     FVRCON          equ	16065	;# 
 17404   003EC3                     ZCDCON          equ	16067	;# 
 17405   003EC9                     HLVDCON0        equ	16073	;# 
 17406   003ECA                     HLVDCON1        equ	16074	;# 
 17407   003ED7                     ADCP            equ	16087	;# 
 17408   003EDE                     ADLTH           equ	16094	;# 
 17409   003EDE                     ADLTHL          equ	16094	;# 
 17410   003EDF                     ADLTHH          equ	16095	;# 
 17411   003EE0                     ADUTH           equ	16096	;# 
 17412   003EE0                     ADUTHL          equ	16096	;# 
 17413   003EE1                     ADUTHH          equ	16097	;# 
 17414   003EE2                     ADERR           equ	16098	;# 
 17415   003EE2                     ADERRL          equ	16098	;# 
 17416   003EE3                     ADERRH          equ	16099	;# 
 17417   003EE4                     ADSTPT          equ	16100	;# 
 17418   003EE4                     ADSTPTL         equ	16100	;# 
 17419   003EE5                     ADSTPTH         equ	16101	;# 
 17420   003EE6                     ADFLTR          equ	16102	;# 
 17421   003EE6                     ADFLTRL         equ	16102	;# 
 17422   003EE7                     ADFLTRH         equ	16103	;# 
 17423   003EE8                     ADACC           equ	16104	;# 
 17424   003EE8                     ADACCL          equ	16104	;# 
 17425   003EE9                     ADACCH          equ	16105	;# 
 17426   003EEA                     ADACCU          equ	16106	;# 
 17427   003EEB                     ADCNT           equ	16107	;# 
 17428   003EEC                     ADRPT           equ	16108	;# 
 17429   003EED                     ADPREV          equ	16109	;# 
 17430   003EED                     ADPREVL         equ	16109	;# 
 17431   003EEE                     ADPREVH         equ	16110	;# 
 17432   003EEF                     ADRES           equ	16111	;# 
 17433   003EEF                     ADRESL          equ	16111	;# 
 17434   003EF0                     ADRESH          equ	16112	;# 
 17435   003EF1                     ADPCH           equ	16113	;# 
 17436   003EF3                     ADACQ           equ	16115	;# 
 17437   003EF3                     ADACQL          equ	16115	;# 
 17438   003EF4                     ADACQH          equ	16116	;# 
 17439   003EF5                     ADCAP           equ	16117	;# 
 17440   003EF6                     ADPRE           equ	16118	;# 
 17441   003EF6                     ADPREL          equ	16118	;# 
 17442   003EF7                     ADPREH          equ	16119	;# 
 17443   003EF8                     ADCON0          equ	16120	;# 
 17444   003EF9                     ADCON1          equ	16121	;# 
 17445   003EFA                     ADCON2          equ	16122	;# 
 17446   003EFB                     ADCON3          equ	16123	;# 
 17447   003EFC                     ADSTAT          equ	16124	;# 
 17448   003EFD                     ADREF           equ	16125	;# 
 17449   003EFE                     ADACT           equ	16126	;# 
 17450   003EFF                     ADCLK           equ	16127	;# 
 17451   003F12                     SMT1TMR         equ	16146	;# 
 17452   003F12                     SMT1TMRL        equ	16146	;# 
 17453   003F13                     SMT1TMRH        equ	16147	;# 
 17454   003F14                     SMT1TMRU        equ	16148	;# 
 17455   003F15                     SMT1CPR         equ	16149	;# 
 17456   003F15                     SMT1CPRL        equ	16149	;# 
 17457   003F16                     SMT1CPRH        equ	16150	;# 
 17458   003F17                     SMT1CPRU        equ	16151	;# 
 17459   003F18                     SMT1CPW         equ	16152	;# 
 17460   003F18                     SMT1CPWL        equ	16152	;# 
 17461   003F19                     SMT1CPWH        equ	16153	;# 
 17462   003F1A                     SMT1CPWU        equ	16154	;# 
 17463   003F1B                     SMT1PR          equ	16155	;# 
 17464   003F1B                     SMT1PRL         equ	16155	;# 
 17465   003F1C                     SMT1PRH         equ	16156	;# 
 17466   003F1D                     SMT1PRU         equ	16157	;# 
 17467   003F1E                     SMT1CON0        equ	16158	;# 
 17468   003F1F                     SMT1CON1        equ	16159	;# 
 17469   003F20                     SMT1STAT        equ	16160	;# 
 17470   003F21                     SMT1CLK         equ	16161	;# 
 17471   003F22                     SMT1SIG         equ	16162	;# 
 17472   003F23                     SMT1WIN         equ	16163	;# 
 17473   003F38                     NCO1ACC         equ	16184	;# 
 17474   003F38                     NCO1ACCL        equ	16184	;# 
 17475   003F39                     NCO1ACCH        equ	16185	;# 
 17476   003F3A                     NCO1ACCU        equ	16186	;# 
 17477   003F3B                     NCO1INC         equ	16187	;# 
 17478   003F3B                     NCO1INCL        equ	16187	;# 
 17479   003F3C                     NCO1INCH        equ	16188	;# 
 17480   003F3D                     NCO1INCU        equ	16189	;# 
 17481   003F3E                     NCO1CON         equ	16190	;# 
 17482   003F3F                     NCO1CLK         equ	16191	;# 
 17483   003F40                     CWG3CLK         equ	16192	;# 
 17484   003F40                     CWG3CLKCON      equ	16192	;# 
 17485   003F41                     CWG3ISM         equ	16193	;# 
 17486   003F41                     CWG3DAT         equ	16193	;# 
 17487   003F42                     CWG3DBR         equ	16194	;# 
 17488   003F43                     CWG3DBF         equ	16195	;# 
 17489   003F44                     CWG3CON0        equ	16196	;# 
 17490   003F45                     CWG3CON1        equ	16197	;# 
 17491   003F46                     CWG3AS0         equ	16198	;# 
 17492   003F47                     CWG3AS1         equ	16199	;# 
 17493   003F48                     CWG3STR         equ	16200	;# 
 17494   003F49                     CWG2CLK         equ	16201	;# 
 17495   003F49                     CWG2CLKCON      equ	16201	;# 
 17496   003F4A                     CWG2ISM         equ	16202	;# 
 17497   003F4A                     CWG2DAT         equ	16202	;# 
 17498   003F4B                     CWG2DBR         equ	16203	;# 
 17499   003F4C                     CWG2DBF         equ	16204	;# 
 17500   003F4D                     CWG2CON0        equ	16205	;# 
 17501   003F4E                     CWG2CON1        equ	16206	;# 
 17502   003F4F                     CWG2AS0         equ	16207	;# 
 17503   003F50                     CWG2AS1         equ	16208	;# 
 17504   003F51                     CWG2STR         equ	16209	;# 
 17505   003F52                     CWG1CLK         equ	16210	;# 
 17506   003F52                     CWG1CLKCON      equ	16210	;# 
 17507   003F53                     CWG1ISM         equ	16211	;# 
 17508   003F53                     CWG1DAT         equ	16211	;# 
 17509   003F54                     CWG1DBR         equ	16212	;# 
 17510   003F55                     CWG1DBF         equ	16213	;# 
 17511   003F56                     CWG1CON0        equ	16214	;# 
 17512   003F57                     CWG1CON1        equ	16215	;# 
 17513   003F58                     CWG1AS0         equ	16216	;# 
 17514   003F59                     CWG1AS1         equ	16217	;# 
 17515   003F5A                     CWG1STR         equ	16218	;# 
 17516   003F5E                     CCPTMRS0        equ	16222	;# 
 17517   003F5F                     CCPTMRS1        equ	16223	;# 
 17518   003F60                     PWM8DC          equ	16224	;# 
 17519   003F60                     PWM8DCL         equ	16224	;# 
 17520   003F61                     PWM8DCH         equ	16225	;# 
 17521   003F62                     PWM8CON         equ	16226	;# 
 17522   003F64                     PWM7DC          equ	16228	;# 
 17523   003F64                     PWM7DCL         equ	16228	;# 
 17524   003F65                     PWM7DCH         equ	16229	;# 
 17525   003F66                     PWM7CON         equ	16230	;# 
 17526   003F68                     PWM6DC          equ	16232	;# 
 17527   003F68                     PWM6DCL         equ	16232	;# 
 17528   003F69                     PWM6DCH         equ	16233	;# 
 17529   003F6A                     PWM6CON         equ	16234	;# 
 17530   003F6C                     PWM5DC          equ	16236	;# 
 17531   003F6C                     PWM5DCL         equ	16236	;# 
 17532   003F6D                     PWM5DCH         equ	16237	;# 
 17533   003F6E                     PWM5CON         equ	16238	;# 
 17534   003F70                     CCPR4           equ	16240	;# 
 17535   003F70                     CCPR4L          equ	16240	;# 
 17536   003F71                     CCPR4H          equ	16241	;# 
 17537   003F72                     CCP4CON         equ	16242	;# 
 17538   003F73                     CCP4CAP         equ	16243	;# 
 17539   003F74                     CCPR3           equ	16244	;# 
 17540   003F74                     CCPR3L          equ	16244	;# 
 17541   003F75                     CCPR3H          equ	16245	;# 
 17542   003F76                     CCP3CON         equ	16246	;# 
 17543   003F77                     CCP3CAP         equ	16247	;# 
 17544   003F78                     CCPR2           equ	16248	;# 
 17545   003F78                     CCPR2L          equ	16248	;# 
 17546   003F79                     CCPR2H          equ	16249	;# 
 17547   003F7A                     CCP2CON         equ	16250	;# 
 17548   003F7B                     CCP2CAP         equ	16251	;# 
 17549   003F7C                     CCPR1           equ	16252	;# 
 17550   003F7C                     CCPR1L          equ	16252	;# 
 17551   003F7D                     CCPR1H          equ	16253	;# 
 17552   003F7E                     CCP1CON         equ	16254	;# 
 17553   003F7F                     CCP1CAP         equ	16255	;# 
 17554   003F92                     T6TMR           equ	16274	;# 
 17555   003F92                     TMR6            equ	16274	;# 
 17556   003F93                     T6PR            equ	16275	;# 
 17557   003F93                     PR6             equ	16275	;# 
 17558   003F94                     T6CON           equ	16276	;# 
 17559   003F95                     T6HLT           equ	16277	;# 
 17560   003F96                     T6CLKCON        equ	16278	;# 
 17561   003F96                     T6CLK           equ	16278	;# 
 17562   003F97                     T6RST           equ	16279	;# 
 17563   003F98                     TMR5            equ	16280	;# 
 17564   003F98                     TMR5L           equ	16280	;# 
 17565   003F99                     TMR5H           equ	16281	;# 
 17566   003F9A                     T5CON           equ	16282	;# 
 17567   003F9A                     TMR5CON         equ	16282	;# 
 17568   003F9B                     T5GCON          equ	16283	;# 
 17569   003F9B                     TMR5GCON        equ	16283	;# 
 17570   003F9C                     T5GATE          equ	16284	;# 
 17571   003F9C                     TMR5GATE        equ	16284	;# 
 17572   003F9D                     T5CLK           equ	16285	;# 
 17573   003F9D                     TMR5CLK         equ	16285	;# 
 17574   003F9D                     PR5             equ	16285	;# 
 17575   003F9E                     T4TMR           equ	16286	;# 
 17576   003F9E                     TMR4            equ	16286	;# 
 17577   003F9F                     T4PR            equ	16287	;# 
 17578   003F9F                     PR4             equ	16287	;# 
 17579   003FA0                     T4CON           equ	16288	;# 
 17580   003FA1                     T4HLT           equ	16289	;# 
 17581   003FA2                     T4CLKCON        equ	16290	;# 
 17582   003FA2                     T4CLK           equ	16290	;# 
 17583   003FA3                     T4RST           equ	16291	;# 
 17584   003FA4                     TMR3            equ	16292	;# 
 17585   003FA4                     TMR3L           equ	16292	;# 
 17586   003FA5                     TMR3H           equ	16293	;# 
 17587   003FA6                     T3CON           equ	16294	;# 
 17588   003FA6                     TMR3CON         equ	16294	;# 
 17589   003FA7                     T3GCON          equ	16295	;# 
 17590   003FA7                     TMR3GCON        equ	16295	;# 
 17591   003FA8                     T3GATE          equ	16296	;# 
 17592   003FA8                     TMR3GATE        equ	16296	;# 
 17593   003FA9                     T3CLK           equ	16297	;# 
 17594   003FA9                     TMR3CLK         equ	16297	;# 
 17595   003FA9                     PR3             equ	16297	;# 
 17596   003FAA                     T2TMR           equ	16298	;# 
 17597   003FAA                     TMR2            equ	16298	;# 
 17598   003FAB                     T2PR            equ	16299	;# 
 17599   003FAB                     PR2             equ	16299	;# 
 17600   003FAC                     T2CON           equ	16300	;# 
 17601   003FAD                     T2HLT           equ	16301	;# 
 17602   003FAE                     T2CLKCON        equ	16302	;# 
 17603   003FAE                     T2CLK           equ	16302	;# 
 17604   003FAF                     T2RST           equ	16303	;# 
 17605   003FB0                     TMR1            equ	16304	;# 
 17606   003FB0                     TMR1L           equ	16304	;# 
 17607   003FB1                     TMR1H           equ	16305	;# 
 17608   003FB2                     T1CON           equ	16306	;# 
 17609   003FB2                     TMR1CON         equ	16306	;# 
 17610   003FB3                     T1GCON          equ	16307	;# 
 17611   003FB3                     TMR1GCON        equ	16307	;# 
 17612   003FB4                     T1GATE          equ	16308	;# 
 17613   003FB4                     TMR1GATE        equ	16308	;# 
 17614   003FB5                     T1CLK           equ	16309	;# 
 17615   003FB5                     TMR1CLK         equ	16309	;# 
 17616   003FB5                     PR1             equ	16309	;# 
 17617   003FB6                     TMR0L           equ	16310	;# 
 17618   003FB6                     TMR0            equ	16310	;# 
 17619   003FB7                     TMR0H           equ	16311	;# 
 17620   003FB7                     PR0             equ	16311	;# 
 17621   003FB8                     T0CON0          equ	16312	;# 
 17622   003FB9                     T0CON1          equ	16313	;# 
 17623   003FBA                     LATA            equ	16314	;# 
 17624   003FBB                     LATB            equ	16315	;# 
 17625   003FBC                     LATC            equ	16316	;# 
 17626   003FBD                     LATD            equ	16317	;# 
 17627   003FBE                     LATE            equ	16318	;# 
 17628   003FBF                     LATF            equ	16319	;# 
 17629   003FC2                     TRISA           equ	16322	;# 
 17630   003FC3                     TRISB           equ	16323	;# 
 17631   003FC4                     TRISC           equ	16324	;# 
 17632   003FC5                     TRISD           equ	16325	;# 
 17633   003FC6                     TRISE           equ	16326	;# 
 17634   003FC7                     TRISF           equ	16327	;# 
 17635   003FCA                     PORTA           equ	16330	;# 
 17636   003FCB                     PORTB           equ	16331	;# 
 17637   003FCC                     PORTC           equ	16332	;# 
 17638   003FCD                     PORTD           equ	16333	;# 
 17639   003FCE                     PORTE           equ	16334	;# 
 17640   003FCF                     PORTF           equ	16335	;# 
 17641   003FD2                     INTCON0         equ	16338	;# 
 17642   003FD3                     INTCON1         equ	16339	;# 
 17643   003FD4                     IVTLOCK         equ	16340	;# 
 17644   003FD5                     IVTBASE         equ	16341	;# 
 17645   003FD5                     IVTBASEL        equ	16341	;# 
 17646   003FD6                     IVTBASEH        equ	16342	;# 
 17647   003FD7                     IVTBASEU        equ	16343	;# 
 17648   003FD8                     STATUS          equ	16344	;# 
 17649   003FD9                     FSR2            equ	16345	;# 
 17650   003FD9                     FSR2L           equ	16345	;# 
 17651   003FDA                     FSR2H           equ	16346	;# 
 17652   003FDB                     PLUSW2          equ	16347	;# 
 17653   003FDC                     PREINC2         equ	16348	;# 
 17654   003FDD                     POSTDEC2        equ	16349	;# 
 17655   003FDE                     POSTINC2        equ	16350	;# 
 17656   003FDF                     INDF2           equ	16351	;# 
 17657   003FE0                     BSR             equ	16352	;# 
 17658   003FE1                     FSR1            equ	16353	;# 
 17659   003FE1                     FSR1L           equ	16353	;# 
 17660   003FE2                     FSR1H           equ	16354	;# 
 17661   003FE3                     PLUSW1          equ	16355	;# 
 17662   003FE4                     PREINC1         equ	16356	;# 
 17663   003FE5                     POSTDEC1        equ	16357	;# 
 17664   003FE6                     POSTINC1        equ	16358	;# 
 17665   003FE7                     INDF1           equ	16359	;# 
 17666   003FE8                     WREG            equ	16360	;# 
 17667   003FE9                     FSR0            equ	16361	;# 
 17668   003FE9                     FSR0L           equ	16361	;# 
 17669   003FEA                     FSR0H           equ	16362	;# 
 17670   003FEB                     PLUSW0          equ	16363	;# 
 17671   003FEC                     PREINC0         equ	16364	;# 
 17672   003FED                     POSTDEC0        equ	16365	;# 
 17673   003FEE                     POSTINC0        equ	16366	;# 
 17674   003FEF                     INDF0           equ	16367	;# 
 17675   003FF0                     PCON0           equ	16368	;# 
 17676   003FF1                     PCON1           equ	16369	;# 
 17677   003FF3                     PROD            equ	16371	;# 
 17678   003FF3                     PRODL           equ	16371	;# 
 17679   003FF4                     PRODH           equ	16372	;# 
 17680   003FF5                     TABLAT          equ	16373	;# 
 17681   003FF6                     TBLPTR          equ	16374	;# 
 17682   003FF6                     TBLPTRL         equ	16374	;# 
 17683   003FF7                     TBLPTRH         equ	16375	;# 
 17684   003FF8                     TBLPTRU         equ	16376	;# 
 17685   003FF9                     PCLAT           equ	16377	;# 
 17686   003FF9                     PCL             equ	16377	;# 
 17687   003FFA                     PCLATH          equ	16378	;# 
 17688   003FFB                     PCLATU          equ	16379	;# 
 17689   003FFC                     STKPTR          equ	16380	;# 
 17690   003FFD                     TOS             equ	16381	;# 
 17691   003FFD                     TOSL            equ	16381	;# 
 17692   003FFE                     TOSH            equ	16382	;# 
 17693   003FFF                     TOSU            equ	16383	;# 
 17694   003880                     STATUS_CSHAD    equ	14464	;# 
 17695   003881                     WREG_CSHAD      equ	14465	;# 
 17696   003882                     BSR_CSHAD       equ	14466	;# 
 17697   003883                     SHADCON         equ	14467	;# 
 17698   003884                     STATUS_SHAD     equ	14468	;# 
 17699   003885                     WREG_SHAD       equ	14469	;# 
 17700   003886                     BSR_SHAD        equ	14470	;# 
 17701   003887                     PCLATH_SHAD     equ	14471	;# 
 17702   003888                     PCLATU_SHAD     equ	14472	;# 
 17703   003889                     FSR0SH          equ	14473	;# 
 17704   003889                     FSR0L_SHAD      equ	14473	;# 
 17705   00388A                     FSR0H_SHAD      equ	14474	;# 
 17706   00388B                     FSR1SH          equ	14475	;# 
 17707   00388B                     FSR1L_SHAD      equ	14475	;# 
 17708   00388C                     FSR1H_SHAD      equ	14476	;# 
 17709   00388D                     FSR2SH          equ	14477	;# 
 17710   00388D                     FSR2L_SHAD      equ	14477	;# 
 17711   00388E                     FSR2H_SHAD      equ	14478	;# 
 17712   00388F                     PRODSH          equ	14479	;# 
 17713   00388F                     PRODL_SHAD      equ	14479	;# 
 17714   003890                     PRODH_SHAD      equ	14480	;# 
 17715   00389D                     IVTADL          equ	14493	;# 
 17716   00389E                     IVTADH          equ	14494	;# 
 17717   00389F                     IVTADU          equ	14495	;# 
 17718   00395B                     WDTCON0         equ	14683	;# 
 17719   00395C                     WDTCON1         equ	14684	;# 
 17720   00395D                     WDTPSL          equ	14685	;# 
 17721   00395E                     WDTPSH          equ	14686	;# 
 17722   00395F                     WDTTMR          equ	14687	;# 
 17723   003960                     CRCDATA         equ	14688	;# 
 17724   003960                     CRCDATL         equ	14688	;# 
 17725   003961                     CRCDATH         equ	14689	;# 
 17726   003962                     CRCACC          equ	14690	;# 
 17727   003962                     CRCACCL         equ	14690	;# 
 17728   003963                     CRCACCH         equ	14691	;# 
 17729   003964                     CRCSHFT         equ	14692	;# 
 17730   003964                     CRCSHIFTL       equ	14692	;# 
 17731   003965                     CRCSHIFTH       equ	14693	;# 
 17732   003966                     CRCXOR          equ	14694	;# 
 17733   003966                     CRCXORL         equ	14694	;# 
 17734   003967                     CRCXORH         equ	14695	;# 
 17735   003968                     CRCCON0         equ	14696	;# 
 17736   003969                     CRCCON1         equ	14697	;# 
 17737   003976                     SCANLADR        equ	14710	;# 
 17738   003976                     SCANLADRL       equ	14710	;# 
 17739   003977                     SCANLADRH       equ	14711	;# 
 17740   003978                     SCANLADRU       equ	14712	;# 
 17741   003979                     SCANHADR        equ	14713	;# 
 17742   003979                     SCANHADRL       equ	14713	;# 
 17743   00397A                     SCANHADRH       equ	14714	;# 
 17744   00397B                     SCANHADRU       equ	14715	;# 
 17745   00397C                     SCANCON0        equ	14716	;# 
 17746   00397D                     SCANTRIG        equ	14717	;# 
 17747   003980                     IPR0            equ	14720	;# 
 17748   003981                     IPR1            equ	14721	;# 
 17749   003982                     IPR2            equ	14722	;# 
 17750   003983                     IPR3            equ	14723	;# 
 17751   003984                     IPR4            equ	14724	;# 
 17752   003985                     IPR5            equ	14725	;# 
 17753   003986                     IPR6            equ	14726	;# 
 17754   003987                     IPR7            equ	14727	;# 
 17755   003988                     IPR8            equ	14728	;# 
 17756   003989                     IPR9            equ	14729	;# 
 17757   00398A                     IPR10           equ	14730	;# 
 17758   003990                     PIE0            equ	14736	;# 
 17759   003991                     PIE1            equ	14737	;# 
 17760   003992                     PIE2            equ	14738	;# 
 17761   003993                     PIE3            equ	14739	;# 
 17762   003994                     PIE4            equ	14740	;# 
 17763   003995                     PIE5            equ	14741	;# 
 17764   003996                     PIE6            equ	14742	;# 
 17765   003997                     PIE7            equ	14743	;# 
 17766   003998                     PIE8            equ	14744	;# 
 17767   003999                     PIE9            equ	14745	;# 
 17768   00399A                     PIE10           equ	14746	;# 
 17769   0039A0                     PIR0            equ	14752	;# 
 17770   0039A1                     PIR1            equ	14753	;# 
 17771   0039A2                     PIR2            equ	14754	;# 
 17772   0039A3                     PIR3            equ	14755	;# 
 17773   0039A4                     PIR4            equ	14756	;# 
 17774   0039A5                     PIR5            equ	14757	;# 
 17775   0039A6                     PIR6            equ	14758	;# 
 17776   0039A7                     PIR7            equ	14759	;# 
 17777   0039A8                     PIR8            equ	14760	;# 
 17778   0039A9                     PIR9            equ	14761	;# 
 17779   0039AA                     PIR10           equ	14762	;# 
 17780   0039C0                     PMD0            equ	14784	;# 
 17781   0039C1                     PMD1            equ	14785	;# 
 17782   0039C2                     PMD2            equ	14786	;# 
 17783   0039C3                     PMD3            equ	14787	;# 
 17784   0039C4                     PMD4            equ	14788	;# 
 17785   0039C5                     PMD5            equ	14789	;# 
 17786   0039C6                     PMD6            equ	14790	;# 
 17787   0039C7                     PMD7            equ	14791	;# 
 17788   0039D0                     BORCON          equ	14800	;# 
 17789   0039D1                     VREGCON         equ	14801	;# 
 17790   0039D8                     CPUDOZE         equ	14808	;# 
 17791   0039D9                     OSCCON1         equ	14809	;# 
 17792   0039DA                     OSCCON2         equ	14810	;# 
 17793   0039DB                     OSCCON3         equ	14811	;# 
 17794   0039DC                     OSCSTAT         equ	14812	;# 
 17795   0039DC                     OSCSTAT1        equ	14812	;# 
 17796   0039DD                     OSCEN           equ	14813	;# 
 17797   0039DE                     OSCTUNE         equ	14814	;# 
 17798   0039DF                     OSCFRQ          equ	14815	;# 
 17799   0039E0                     NVMADRL         equ	14816	;# 
 17800   0039E1                     NVMADRH         equ	14817	;# 
 17801   0039E3                     NVMDAT          equ	14819	;# 
 17802   0039E5                     NVMCON1         equ	14821	;# 
 17803   0039E6                     NVMCON2         equ	14822	;# 
 17804   0039EF                     PRLOCK          equ	14831	;# 
 17805   0039F1                     ISRPR           equ	14833	;# 
 17806   0039F2                     MAINPR          equ	14834	;# 
 17807   0039F3                     DMA1PR          equ	14835	;# 
 17808   0039F4                     DMA2PR          equ	14836	;# 
 17809   0039F7                     SCANPR          equ	14839	;# 
 17810   003A00                     RA0PPS          equ	14848	;# 
 17811   003A01                     RA1PPS          equ	14849	;# 
 17812   003A02                     RA2PPS          equ	14850	;# 
 17813   003A03                     RA3PPS          equ	14851	;# 
 17814   003A04                     RA4PPS          equ	14852	;# 
 17815   003A05                     RA5PPS          equ	14853	;# 
 17816   003A06                     RA6PPS          equ	14854	;# 
 17817   003A07                     RA7PPS          equ	14855	;# 
 17818   003A08                     RB0PPS          equ	14856	;# 
 17819   003A09                     RB1PPS          equ	14857	;# 
 17820   003A0A                     RB2PPS          equ	14858	;# 
 17821   003A0B                     RB3PPS          equ	14859	;# 
 17822   003A0C                     RB4PPS          equ	14860	;# 
 17823   003A0D                     RB5PPS          equ	14861	;# 
 17824   003A0E                     RB6PPS          equ	14862	;# 
 17825   003A0F                     RB7PPS          equ	14863	;# 
 17826   003A10                     RC0PPS          equ	14864	;# 
 17827   003A11                     RC1PPS          equ	14865	;# 
 17828   003A12                     RC2PPS          equ	14866	;# 
 17829   003A13                     RC3PPS          equ	14867	;# 
 17830   003A14                     RC4PPS          equ	14868	;# 
 17831   003A15                     RC5PPS          equ	14869	;# 
 17832   003A16                     RC6PPS          equ	14870	;# 
 17833   003A17                     RC7PPS          equ	14871	;# 
 17834   003A18                     RD0PPS          equ	14872	;# 
 17835   003A19                     RD1PPS          equ	14873	;# 
 17836   003A1A                     RD2PPS          equ	14874	;# 
 17837   003A1B                     RD3PPS          equ	14875	;# 
 17838   003A1C                     RD4PPS          equ	14876	;# 
 17839   003A1D                     RD5PPS          equ	14877	;# 
 17840   003A1E                     RD6PPS          equ	14878	;# 
 17841   003A1F                     RD7PPS          equ	14879	;# 
 17842   003A20                     RE0PPS          equ	14880	;# 
 17843   003A21                     RE1PPS          equ	14881	;# 
 17844   003A22                     RE2PPS          equ	14882	;# 
 17845   003A28                     RF0PPS          equ	14888	;# 
 17846   003A29                     RF1PPS          equ	14889	;# 
 17847   003A2A                     RF2PPS          equ	14890	;# 
 17848   003A2B                     RF3PPS          equ	14891	;# 
 17849   003A2C                     RF4PPS          equ	14892	;# 
 17850   003A2D                     RF5PPS          equ	14893	;# 
 17851   003A2E                     RF6PPS          equ	14894	;# 
 17852   003A2F                     RF7PPS          equ	14895	;# 
 17853   003A40                     ANSELA          equ	14912	;# 
 17854   003A41                     WPUA            equ	14913	;# 
 17855   003A42                     ODCONA          equ	14914	;# 
 17856   003A43                     SLRCONA         equ	14915	;# 
 17857   003A44                     INLVLA          equ	14916	;# 
 17858   003A45                     IOCAP           equ	14917	;# 
 17859   003A46                     IOCAN           equ	14918	;# 
 17860   003A47                     IOCAF           equ	14919	;# 
 17861   003A50                     ANSELB          equ	14928	;# 
 17862   003A51                     WPUB            equ	14929	;# 
 17863   003A52                     ODCONB          equ	14930	;# 
 17864   003A53                     SLRCONB         equ	14931	;# 
 17865   003A54                     INLVLB          equ	14932	;# 
 17866   003A55                     IOCBP           equ	14933	;# 
 17867   003A56                     IOCBN           equ	14934	;# 
 17868   003A57                     IOCBF           equ	14935	;# 
 17869   003A5A                     RB1I2C          equ	14938	;# 
 17870   003A5B                     RB2I2C          equ	14939	;# 
 17871   003A60                     ANSELC          equ	14944	;# 
 17872   003A61                     WPUC            equ	14945	;# 
 17873   003A62                     ODCONC          equ	14946	;# 
 17874   003A63                     SLRCONC         equ	14947	;# 
 17875   003A64                     INLVLC          equ	14948	;# 
 17876   003A65                     IOCCP           equ	14949	;# 
 17877   003A66                     IOCCN           equ	14950	;# 
 17878   003A67                     IOCCF           equ	14951	;# 
 17879   003A6A                     RC3I2C          equ	14954	;# 
 17880   003A6B                     RC4I2C          equ	14955	;# 
 17881   003A70                     ANSELD          equ	14960	;# 
 17882   003A71                     WPUD            equ	14961	;# 
 17883   003A72                     ODCOND          equ	14962	;# 
 17884   003A73                     SLRCOND         equ	14963	;# 
 17885   003A74                     INLVLD          equ	14964	;# 
 17886   003A7A                     RD0I2C          equ	14970	;# 
 17887   003A7B                     RD1I2C          equ	14971	;# 
 17888   003A80                     ANSELE          equ	14976	;# 
 17889   003A81                     WPUE            equ	14977	;# 
 17890   003A82                     ODCONE          equ	14978	;# 
 17891   003A83                     SLRCONE         equ	14979	;# 
 17892   003A84                     INLVLE          equ	14980	;# 
 17893   003A85                     IOCEP           equ	14981	;# 
 17894   003A86                     IOCEN           equ	14982	;# 
 17895   003A87                     IOCEF           equ	14983	;# 
 17896   003A90                     ANSELF          equ	14992	;# 
 17897   003A91                     WPUF            equ	14993	;# 
 17898   003A92                     ODCONF          equ	14994	;# 
 17899   003A93                     SLRCONF         equ	14995	;# 
 17900   003A94                     INLVLF          equ	14996	;# 
 17901   003ABF                     PPSLOCK         equ	15039	;# 
 17902   003AC0                     INT0PPS         equ	15040	;# 
 17903   003AC1                     INT1PPS         equ	15041	;# 
 17904   003AC2                     INT2PPS         equ	15042	;# 
 17905   003AC3                     T0CKIPPS        equ	15043	;# 
 17906   003AC4                     T1CKIPPS        equ	15044	;# 
 17907   003AC5                     T1GPPS          equ	15045	;# 
 17908   003AC6                     T3CKIPPS        equ	15046	;# 
 17909   003AC7                     T3GPPS          equ	15047	;# 
 17910   003AC8                     T5CKIPPS        equ	15048	;# 
 17911   003AC9                     T5GPPS          equ	15049	;# 
 17912   003ACA                     T2INPPS         equ	15050	;# 
 17913   003ACB                     T4INPPS         equ	15051	;# 
 17914   003ACC                     T6INPPS         equ	15052	;# 
 17915   003ACD                     CCP1PPS         equ	15053	;# 
 17916   003ACE                     CCP2PPS         equ	15054	;# 
 17917   003ACF                     CCP3PPS         equ	15055	;# 
 17918   003AD0                     CCP4PPS         equ	15056	;# 
 17919   003AD1                     SMT1WINPPS      equ	15057	;# 
 17920   003AD2                     SMT1SIGPPS      equ	15058	;# 
 17921   003AD3                     CWG1INPPS       equ	15059	;# 
 17922   003AD4                     CWG2INPPS       equ	15060	;# 
 17923   003AD5                     CWG3INPPS       equ	15061	;# 
 17924   003AD6                     MD1CARLPPS      equ	15062	;# 
 17925   003AD7                     MD1CARHPPS      equ	15063	;# 
 17926   003AD8                     MD1SRCPPS       equ	15064	;# 
 17927   003AD9                     CLCIN0PPS       equ	15065	;# 
 17928   003ADA                     CLCIN1PPS       equ	15066	;# 
 17929   003ADB                     CLCIN2PPS       equ	15067	;# 
 17930   003ADC                     CLCIN3PPS       equ	15068	;# 
 17931   003ADD                     ADACTPPS        equ	15069	;# 
 17932   003ADE                     SPI1SCKPPS      equ	15070	;# 
 17933   003ADF                     SPI1SDIPPS      equ	15071	;# 
 17934   003AE0                     SPI1SSPPS       equ	15072	;# 
 17935   003AE1                     I2C1SCLPPS      equ	15073	;# 
 17936   003AE2                     I2C1SDAPPS      equ	15074	;# 
 17937   003AE3                     I2C2SCLPPS      equ	15075	;# 
 17938   003AE4                     I2C2SDAPPS      equ	15076	;# 
 17939   003AE5                     U1RXPPS         equ	15077	;# 
 17940   003AE6                     U1CTSPPS        equ	15078	;# 
 17941   003AE8                     U2RXPPS         equ	15080	;# 
 17942   003AE9                     U2CTSPPS        equ	15081	;# 
 17943   003BC9                     DMA2BUF         equ	15305	;# 
 17944   003BCA                     DMA2DCNT        equ	15306	;# 
 17945   003BCA                     DMA2DCNTL       equ	15306	;# 
 17946   003BCB                     DMA2DCNTH       equ	15307	;# 
 17947   003BCC                     DMA2DPTR        equ	15308	;# 
 17948   003BCC                     DMA2DPTRL       equ	15308	;# 
 17949   003BCD                     DMA2DPTRH       equ	15309	;# 
 17950   003BCE                     DMA2DSZ         equ	15310	;# 
 17951   003BCE                     DMA2DSZL        equ	15310	;# 
 17952   003BCF                     DMA2DSZH        equ	15311	;# 
 17953   003BD0                     DMA2DSA         equ	15312	;# 
 17954   003BD0                     DMA2DSAL        equ	15312	;# 
 17955   003BD1                     DMA2DSAH        equ	15313	;# 
 17956   003BD2                     DMA2SCNT        equ	15314	;# 
 17957   003BD2                     DMA2SCNTL       equ	15314	;# 
 17958   003BD3                     DMA2SCNTH       equ	15315	;# 
 17959   003BD4                     DMA2SPTR        equ	15316	;# 
 17960   003BD4                     DMA2SPTRL       equ	15316	;# 
 17961   003BD5                     DMA2SPTRH       equ	15317	;# 
 17962   003BD6                     DMA2SPTRU       equ	15318	;# 
 17963   003BD7                     DMA2SSZ         equ	15319	;# 
 17964   003BD7                     DMA2SSZL        equ	15319	;# 
 17965   003BD8                     DMA2SSZH        equ	15320	;# 
 17966   003BD9                     DMA2SSA         equ	15321	;# 
 17967   003BD9                     DMA2SSAL        equ	15321	;# 
 17968   003BDA                     DMA2SSAH        equ	15322	;# 
 17969   003BDB                     DMA2SSAU        equ	15323	;# 
 17970   003BDC                     DMA2CON0        equ	15324	;# 
 17971   003BDD                     DMA2CON1        equ	15325	;# 
 17972   003BDE                     DMA2AIRQ        equ	15326	;# 
 17973   003BDF                     DMA2SIRQ        equ	15327	;# 
 17974   003BE9                     DMA1BUF         equ	15337	;# 
 17975   003BEA                     DMA1DCNT        equ	15338	;# 
 17976   003BEA                     DMA1DCNTL       equ	15338	;# 
 17977   003BEB                     DMA1DCNTH       equ	15339	;# 
 17978   003BEC                     DMA1DPTR        equ	15340	;# 
 17979   003BEC                     DMA1DPTRL       equ	15340	;# 
 17980   003BED                     DMA1DPTRH       equ	15341	;# 
 17981   003BEE                     DMA1DSZ         equ	15342	;# 
 17982   003BEE                     DMA1DSZL        equ	15342	;# 
 17983   003BEF                     DMA1DSZH        equ	15343	;# 
 17984   003BF0                     DMA1DSA         equ	15344	;# 
 17985   003BF0                     DMA1DSAL        equ	15344	;# 
 17986   003BF1                     DMA1DSAH        equ	15345	;# 
 17987   003BF2                     DMA1SCNT        equ	15346	;# 
 17988   003BF2                     DMA1SCNTL       equ	15346	;# 
 17989   003BF3                     DMA1SCNTH       equ	15347	;# 
 17990   003BF4                     DMA1SPTR        equ	15348	;# 
 17991   003BF4                     DMA1SPTRL       equ	15348	;# 
 17992   003BF5                     DMA1SPTRH       equ	15349	;# 
 17993   003BF6                     DMA1SPTRU       equ	15350	;# 
 17994   003BF7                     DMA1SSZ         equ	15351	;# 
 17995   003BF7                     DMA1SSZL        equ	15351	;# 
 17996   003BF8                     DMA1SSZH        equ	15352	;# 
 17997   003BF9                     DMA1SSA         equ	15353	;# 
 17998   003BF9                     DMA1SSAL        equ	15353	;# 
 17999   003BFA                     DMA1SSAH        equ	15354	;# 
 18000   003BFB                     DMA1SSAU        equ	15355	;# 
 18001   003BFC                     DMA1CON0        equ	15356	;# 
 18002   003BFD                     DMA1CON1        equ	15357	;# 
 18003   003BFE                     DMA1AIRQ        equ	15358	;# 
 18004   003BFF                     DMA1SIRQ        equ	15359	;# 
 18005   003C56                     CLC4CON         equ	15446	;# 
 18006   003C57                     CLC4POL         equ	15447	;# 
 18007   003C58                     CLC4SEL0        equ	15448	;# 
 18008   003C59                     CLC4SEL1        equ	15449	;# 
 18009   003C5A                     CLC4SEL2        equ	15450	;# 
 18010   003C5B                     CLC4SEL3        equ	15451	;# 
 18011   003C5C                     CLC4GLS0        equ	15452	;# 
 18012   003C5D                     CLC4GLS1        equ	15453	;# 
 18013   003C5E                     CLC4GLS2        equ	15454	;# 
 18014   003C5F                     CLC4GLS3        equ	15455	;# 
 18015   003C60                     CLC3CON         equ	15456	;# 
 18016   003C61                     CLC3POL         equ	15457	;# 
 18017   003C62                     CLC3SEL0        equ	15458	;# 
 18018   003C63                     CLC3SEL1        equ	15459	;# 
 18019   003C64                     CLC3SEL2        equ	15460	;# 
 18020   003C65                     CLC3SEL3        equ	15461	;# 
 18021   003C66                     CLC3GLS0        equ	15462	;# 
 18022   003C67                     CLC3GLS1        equ	15463	;# 
 18023   003C68                     CLC3GLS2        equ	15464	;# 
 18024   003C69                     CLC3GLS3        equ	15465	;# 
 18025   003C6A                     CLC2CON         equ	15466	;# 
 18026   003C6B                     CLC2POL         equ	15467	;# 
 18027   003C6C                     CLC2SEL0        equ	15468	;# 
 18028   003C6D                     CLC2SEL1        equ	15469	;# 
 18029   003C6E                     CLC2SEL2        equ	15470	;# 
 18030   003C6F                     CLC2SEL3        equ	15471	;# 
 18031   003C70                     CLC2GLS0        equ	15472	;# 
 18032   003C71                     CLC2GLS1        equ	15473	;# 
 18033   003C72                     CLC2GLS2        equ	15474	;# 
 18034   003C73                     CLC2GLS3        equ	15475	;# 
 18035   003C74                     CLC1CON         equ	15476	;# 
 18036   003C75                     CLC1POL         equ	15477	;# 
 18037   003C76                     CLC1SEL0        equ	15478	;# 
 18038   003C77                     CLC1SEL1        equ	15479	;# 
 18039   003C78                     CLC1SEL2        equ	15480	;# 
 18040   003C79                     CLC1SEL3        equ	15481	;# 
 18041   003C7A                     CLC1GLS0        equ	15482	;# 
 18042   003C7B                     CLC1GLS1        equ	15483	;# 
 18043   003C7C                     CLC1GLS2        equ	15484	;# 
 18044   003C7D                     CLC1GLS3        equ	15485	;# 
 18045   003C7E                     CLCDATA0        equ	15486	;# 
 18046   003CE5                     CLKRCON         equ	15589	;# 
 18047   003CE6                     CLKRCLK         equ	15590	;# 
 18048   003CFA                     MD1CON0         equ	15610	;# 
 18049   003CFB                     MD1CON1         equ	15611	;# 
 18050   003CFC                     MD1SRC          equ	15612	;# 
 18051   003CFD                     MD1CARL         equ	15613	;# 
 18052   003CFE                     MD1CARH         equ	15614	;# 
 18053   003D10                     SPI1RXB         equ	15632	;# 
 18054   003D11                     SPI1TXB         equ	15633	;# 
 18055   003D12                     SPI1TCNT        equ	15634	;# 
 18056   003D12                     SPI1TCNTL       equ	15634	;# 
 18057   003D13                     SPI1TCNTH       equ	15635	;# 
 18058   003D14                     SPI1CON0        equ	15636	;# 
 18059   003D15                     SPI1CON1        equ	15637	;# 
 18060   003D16                     SPI1CON2        equ	15638	;# 
 18061   003D17                     SPI1STATUS      equ	15639	;# 
 18062   003D18                     SPI1TWIDTH      equ	15640	;# 
 18063   003D19                     SPI1BAUD        equ	15641	;# 
 18064   003D1A                     SPI1INTF        equ	15642	;# 
 18065   003D1B                     SPI1INTE        equ	15643	;# 
 18066   003D1C                     SPI1CLK         equ	15644	;# 
 18067   003D54                     I2C2RXB         equ	15700	;# 
 18068   003D55                     I2C2TXB         equ	15701	;# 
 18069   003D56                     I2C2CNT         equ	15702	;# 
 18070   003D57                     I2C2ADB0        equ	15703	;# 
 18071   003D58                     I2C2ADB1        equ	15704	;# 
 18072   003D59                     I2C2ADR0        equ	15705	;# 
 18073   003D5A                     I2C2ADR1        equ	15706	;# 
 18074   003D5B                     I2C2ADR2        equ	15707	;# 
 18075   003D5C                     I2C2ADR3        equ	15708	;# 
 18076   003D5D                     I2C2CON0        equ	15709	;# 
 18077   003D5E                     I2C2CON1        equ	15710	;# 
 18078   003D5F                     I2C2CON2        equ	15711	;# 
 18079   003D60                     I2C2ERR         equ	15712	;# 
 18080   003D61                     I2C2STAT0       equ	15713	;# 
 18081   003D62                     I2C2STAT1       equ	15714	;# 
 18082   003D63                     I2C2PIR         equ	15715	;# 
 18083   003D64                     I2C2PIE         equ	15716	;# 
 18084   003D65                     I2C2CLK         equ	15717	;# 
 18085   003D66                     I2C2BTO         equ	15718	;# 
 18086   003D6A                     I2C1RXB         equ	15722	;# 
 18087   003D6B                     I2C1TXB         equ	15723	;# 
 18088   003D6C                     I2C1CNT         equ	15724	;# 
 18089   003D6D                     I2C1ADB0        equ	15725	;# 
 18090   003D6E                     I2C1ADB1        equ	15726	;# 
 18091   003D6F                     I2C1ADR0        equ	15727	;# 
 18092   003D70                     I2C1ADR1        equ	15728	;# 
 18093   003D71                     I2C1ADR2        equ	15729	;# 
 18094   003D72                     I2C1ADR3        equ	15730	;# 
 18095   003D73                     I2C1CON0        equ	15731	;# 
 18096   003D74                     I2C1CON1        equ	15732	;# 
 18097   003D75                     I2C1CON2        equ	15733	;# 
 18098   003D76                     I2C1ERR         equ	15734	;# 
 18099   003D77                     I2C1STAT0       equ	15735	;# 
 18100   003D78                     I2C1STAT1       equ	15736	;# 
 18101   003D79                     I2C1PIR         equ	15737	;# 
 18102   003D7A                     I2C1PIE         equ	15738	;# 
 18103   003D7B                     I2C1CLK         equ	15739	;# 
 18104   003D7C                     I2C1BTO         equ	15740	;# 
 18105   003DD0                     U2RXB           equ	15824	;# 
 18106   003DD0                     U2RXBL          equ	15824	;# 
 18107   003DD2                     U2TXB           equ	15826	;# 
 18108   003DD2                     U2TXBL          equ	15826	;# 
 18109   003DD4                     U2P1            equ	15828	;# 
 18110   003DD4                     U2P1L           equ	15828	;# 
 18111   003DD6                     U2P2            equ	15830	;# 
 18112   003DD6                     U2P2L           equ	15830	;# 
 18113   003DD8                     U2P3            equ	15832	;# 
 18114   003DD8                     U2P3L           equ	15832	;# 
 18115   003DDA                     U2CON0          equ	15834	;# 
 18116   003DDB                     U2CON1          equ	15835	;# 
 18117   003DDC                     U2CON2          equ	15836	;# 
 18118   003DDD                     U2BRG           equ	15837	;# 
 18119   003DDD                     U2BRGL          equ	15837	;# 
 18120   003DDE                     U2BRGH          equ	15838	;# 
 18121   003DDF                     U2FIFO          equ	15839	;# 
 18122   003DE0                     U2UIR           equ	15840	;# 
 18123   003DE1                     U2ERRIR         equ	15841	;# 
 18124   003DE2                     U2ERRIE         equ	15842	;# 
 18125   003DE8                     U1RXB           equ	15848	;# 
 18126   003DE8                     U1RXBL          equ	15848	;# 
 18127   003DE9                     U1RXCHK         equ	15849	;# 
 18128   003DEA                     U1TXB           equ	15850	;# 
 18129   003DEA                     U1TXBL          equ	15850	;# 
 18130   003DEB                     U1TXCHK         equ	15851	;# 
 18131   003DEC                     U1P1            equ	15852	;# 
 18132   003DEC                     U1P1L           equ	15852	;# 
 18133   003DED                     U1P1H           equ	15853	;# 
 18134   003DEE                     U1P2            equ	15854	;# 
 18135   003DEE                     U1P2L           equ	15854	;# 
 18136   003DEF                     U1P2H           equ	15855	;# 
 18137   003DF0                     U1P3            equ	15856	;# 
 18138   003DF0                     U1P3L           equ	15856	;# 
 18139   003DF1                     U1P3H           equ	15857	;# 
 18140   003DF2                     U1CON0          equ	15858	;# 
 18141   003DF3                     U1CON1          equ	15859	;# 
 18142   003DF4                     U1CON2          equ	15860	;# 
 18143   003DF5                     U1BRG           equ	15861	;# 
 18144   003DF5                     U1BRGL          equ	15861	;# 
 18145   003DF6                     U1BRGH          equ	15862	;# 
 18146   003DF7                     U1FIFO          equ	15863	;# 
 18147   003DF8                     U1UIR           equ	15864	;# 
 18148   003DF9                     U1ERRIR         equ	15865	;# 
 18149   003DFA                     U1ERRIE         equ	15866	;# 
 18150   003E9C                     DAC1CON1        equ	16028	;# 
 18151   003E9E                     DAC1CON0        equ	16030	;# 
 18152   003EB8                     CM2CON0         equ	16056	;# 
 18153   003EB9                     CM2CON1         equ	16057	;# 
 18154   003EBA                     CM2NCH          equ	16058	;# 
 18155   003EBB                     CM2PCH          equ	16059	;# 
 18156   003EBC                     CM1CON0         equ	16060	;# 
 18157   003EBD                     CM1CON1         equ	16061	;# 
 18158   003EBE                     CM1NCH          equ	16062	;# 
 18159   003EBF                     CM1PCH          equ	16063	;# 
 18160   003EC0                     CMOUT           equ	16064	;# 
 18161   003EC1                     FVRCON          equ	16065	;# 
 18162   003EC3                     ZCDCON          equ	16067	;# 
 18163   003EC9                     HLVDCON0        equ	16073	;# 
 18164   003ECA                     HLVDCON1        equ	16074	;# 
 18165   003ED7                     ADCP            equ	16087	;# 
 18166   003EDE                     ADLTH           equ	16094	;# 
 18167   003EDE                     ADLTHL          equ	16094	;# 
 18168   003EDF                     ADLTHH          equ	16095	;# 
 18169   003EE0                     ADUTH           equ	16096	;# 
 18170   003EE0                     ADUTHL          equ	16096	;# 
 18171   003EE1                     ADUTHH          equ	16097	;# 
 18172   003EE2                     ADERR           equ	16098	;# 
 18173   003EE2                     ADERRL          equ	16098	;# 
 18174   003EE3                     ADERRH          equ	16099	;# 
 18175   003EE4                     ADSTPT          equ	16100	;# 
 18176   003EE4                     ADSTPTL         equ	16100	;# 
 18177   003EE5                     ADSTPTH         equ	16101	;# 
 18178   003EE6                     ADFLTR          equ	16102	;# 
 18179   003EE6                     ADFLTRL         equ	16102	;# 
 18180   003EE7                     ADFLTRH         equ	16103	;# 
 18181   003EE8                     ADACC           equ	16104	;# 
 18182   003EE8                     ADACCL          equ	16104	;# 
 18183   003EE9                     ADACCH          equ	16105	;# 
 18184   003EEA                     ADACCU          equ	16106	;# 
 18185   003EEB                     ADCNT           equ	16107	;# 
 18186   003EEC                     ADRPT           equ	16108	;# 
 18187   003EED                     ADPREV          equ	16109	;# 
 18188   003EED                     ADPREVL         equ	16109	;# 
 18189   003EEE                     ADPREVH         equ	16110	;# 
 18190   003EEF                     ADRES           equ	16111	;# 
 18191   003EEF                     ADRESL          equ	16111	;# 
 18192   003EF0                     ADRESH          equ	16112	;# 
 18193   003EF1                     ADPCH           equ	16113	;# 
 18194   003EF3                     ADACQ           equ	16115	;# 
 18195   003EF3                     ADACQL          equ	16115	;# 
 18196   003EF4                     ADACQH          equ	16116	;# 
 18197   003EF5                     ADCAP           equ	16117	;# 
 18198   003EF6                     ADPRE           equ	16118	;# 
 18199   003EF6                     ADPREL          equ	16118	;# 
 18200   003EF7                     ADPREH          equ	16119	;# 
 18201   003EF8                     ADCON0          equ	16120	;# 
 18202   003EF9                     ADCON1          equ	16121	;# 
 18203   003EFA                     ADCON2          equ	16122	;# 
 18204   003EFB                     ADCON3          equ	16123	;# 
 18205   003EFC                     ADSTAT          equ	16124	;# 
 18206   003EFD                     ADREF           equ	16125	;# 
 18207   003EFE                     ADACT           equ	16126	;# 
 18208   003EFF                     ADCLK           equ	16127	;# 
 18209   003F12                     SMT1TMR         equ	16146	;# 
 18210   003F12                     SMT1TMRL        equ	16146	;# 
 18211   003F13                     SMT1TMRH        equ	16147	;# 
 18212   003F14                     SMT1TMRU        equ	16148	;# 
 18213   003F15                     SMT1CPR         equ	16149	;# 
 18214   003F15                     SMT1CPRL        equ	16149	;# 
 18215   003F16                     SMT1CPRH        equ	16150	;# 
 18216   003F17                     SMT1CPRU        equ	16151	;# 
 18217   003F18                     SMT1CPW         equ	16152	;# 
 18218   003F18                     SMT1CPWL        equ	16152	;# 
 18219   003F19                     SMT1CPWH        equ	16153	;# 
 18220   003F1A                     SMT1CPWU        equ	16154	;# 
 18221   003F1B                     SMT1PR          equ	16155	;# 
 18222   003F1B                     SMT1PRL         equ	16155	;# 
 18223   003F1C                     SMT1PRH         equ	16156	;# 
 18224   003F1D                     SMT1PRU         equ	16157	;# 
 18225   003F1E                     SMT1CON0        equ	16158	;# 
 18226   003F1F                     SMT1CON1        equ	16159	;# 
 18227   003F20                     SMT1STAT        equ	16160	;# 
 18228   003F21                     SMT1CLK         equ	16161	;# 
 18229   003F22                     SMT1SIG         equ	16162	;# 
 18230   003F23                     SMT1WIN         equ	16163	;# 
 18231   003F38                     NCO1ACC         equ	16184	;# 
 18232   003F38                     NCO1ACCL        equ	16184	;# 
 18233   003F39                     NCO1ACCH        equ	16185	;# 
 18234   003F3A                     NCO1ACCU        equ	16186	;# 
 18235   003F3B                     NCO1INC         equ	16187	;# 
 18236   003F3B                     NCO1INCL        equ	16187	;# 
 18237   003F3C                     NCO1INCH        equ	16188	;# 
 18238   003F3D                     NCO1INCU        equ	16189	;# 
 18239   003F3E                     NCO1CON         equ	16190	;# 
 18240   003F3F                     NCO1CLK         equ	16191	;# 
 18241   003F40                     CWG3CLK         equ	16192	;# 
 18242   003F40                     CWG3CLKCON      equ	16192	;# 
 18243   003F41                     CWG3ISM         equ	16193	;# 
 18244   003F41                     CWG3DAT         equ	16193	;# 
 18245   003F42                     CWG3DBR         equ	16194	;# 
 18246   003F43                     CWG3DBF         equ	16195	;# 
 18247   003F44                     CWG3CON0        equ	16196	;# 
 18248   003F45                     CWG3CON1        equ	16197	;# 
 18249   003F46                     CWG3AS0         equ	16198	;# 
 18250   003F47                     CWG3AS1         equ	16199	;# 
 18251   003F48                     CWG3STR         equ	16200	;# 
 18252   003F49                     CWG2CLK         equ	16201	;# 
 18253   003F49                     CWG2CLKCON      equ	16201	;# 
 18254   003F4A                     CWG2ISM         equ	16202	;# 
 18255   003F4A                     CWG2DAT         equ	16202	;# 
 18256   003F4B                     CWG2DBR         equ	16203	;# 
 18257   003F4C                     CWG2DBF         equ	16204	;# 
 18258   003F4D                     CWG2CON0        equ	16205	;# 
 18259   003F4E                     CWG2CON1        equ	16206	;# 
 18260   003F4F                     CWG2AS0         equ	16207	;# 
 18261   003F50                     CWG2AS1         equ	16208	;# 
 18262   003F51                     CWG2STR         equ	16209	;# 
 18263   003F52                     CWG1CLK         equ	16210	;# 
 18264   003F52                     CWG1CLKCON      equ	16210	;# 
 18265   003F53                     CWG1ISM         equ	16211	;# 
 18266   003F53                     CWG1DAT         equ	16211	;# 
 18267   003F54                     CWG1DBR         equ	16212	;# 
 18268   003F55                     CWG1DBF         equ	16213	;# 
 18269   003F56                     CWG1CON0        equ	16214	;# 
 18270   003F57                     CWG1CON1        equ	16215	;# 
 18271   003F58                     CWG1AS0         equ	16216	;# 
 18272   003F59                     CWG1AS1         equ	16217	;# 
 18273   003F5A                     CWG1STR         equ	16218	;# 
 18274   003F5E                     CCPTMRS0        equ	16222	;# 
 18275   003F5F                     CCPTMRS1        equ	16223	;# 
 18276   003F60                     PWM8DC          equ	16224	;# 
 18277   003F60                     PWM8DCL         equ	16224	;# 
 18278   003F61                     PWM8DCH         equ	16225	;# 
 18279   003F62                     PWM8CON         equ	16226	;# 
 18280   003F64                     PWM7DC          equ	16228	;# 
 18281   003F64                     PWM7DCL         equ	16228	;# 
 18282   003F65                     PWM7DCH         equ	16229	;# 
 18283   003F66                     PWM7CON         equ	16230	;# 
 18284   003F68                     PWM6DC          equ	16232	;# 
 18285   003F68                     PWM6DCL         equ	16232	;# 
 18286   003F69                     PWM6DCH         equ	16233	;# 
 18287   003F6A                     PWM6CON         equ	16234	;# 
 18288   003F6C                     PWM5DC          equ	16236	;# 
 18289   003F6C                     PWM5DCL         equ	16236	;# 
 18290   003F6D                     PWM5DCH         equ	16237	;# 
 18291   003F6E                     PWM5CON         equ	16238	;# 
 18292   003F70                     CCPR4           equ	16240	;# 
 18293   003F70                     CCPR4L          equ	16240	;# 
 18294   003F71                     CCPR4H          equ	16241	;# 
 18295   003F72                     CCP4CON         equ	16242	;# 
 18296   003F73                     CCP4CAP         equ	16243	;# 
 18297   003F74                     CCPR3           equ	16244	;# 
 18298   003F74                     CCPR3L          equ	16244	;# 
 18299   003F75                     CCPR3H          equ	16245	;# 
 18300   003F76                     CCP3CON         equ	16246	;# 
 18301   003F77                     CCP3CAP         equ	16247	;# 
 18302   003F78                     CCPR2           equ	16248	;# 
 18303   003F78                     CCPR2L          equ	16248	;# 
 18304   003F79                     CCPR2H          equ	16249	;# 
 18305   003F7A                     CCP2CON         equ	16250	;# 
 18306   003F7B                     CCP2CAP         equ	16251	;# 
 18307   003F7C                     CCPR1           equ	16252	;# 
 18308   003F7C                     CCPR1L          equ	16252	;# 
 18309   003F7D                     CCPR1H          equ	16253	;# 
 18310   003F7E                     CCP1CON         equ	16254	;# 
 18311   003F7F                     CCP1CAP         equ	16255	;# 
 18312   003F92                     T6TMR           equ	16274	;# 
 18313   003F92                     TMR6            equ	16274	;# 
 18314   003F93                     T6PR            equ	16275	;# 
 18315   003F93                     PR6             equ	16275	;# 
 18316   003F94                     T6CON           equ	16276	;# 
 18317   003F95                     T6HLT           equ	16277	;# 
 18318   003F96                     T6CLKCON        equ	16278	;# 
 18319   003F96                     T6CLK           equ	16278	;# 
 18320   003F97                     T6RST           equ	16279	;# 
 18321   003F98                     TMR5            equ	16280	;# 
 18322   003F98                     TMR5L           equ	16280	;# 
 18323   003F99                     TMR5H           equ	16281	;# 
 18324   003F9A                     T5CON           equ	16282	;# 
 18325   003F9A                     TMR5CON         equ	16282	;# 
 18326   003F9B                     T5GCON          equ	16283	;# 
 18327   003F9B                     TMR5GCON        equ	16283	;# 
 18328   003F9C                     T5GATE          equ	16284	;# 
 18329   003F9C                     TMR5GATE        equ	16284	;# 
 18330   003F9D                     T5CLK           equ	16285	;# 
 18331   003F9D                     TMR5CLK         equ	16285	;# 
 18332   003F9D                     PR5             equ	16285	;# 
 18333   003F9E                     T4TMR           equ	16286	;# 
 18334   003F9E                     TMR4            equ	16286	;# 
 18335   003F9F                     T4PR            equ	16287	;# 
 18336   003F9F                     PR4             equ	16287	;# 
 18337   003FA0                     T4CON           equ	16288	;# 
 18338   003FA1                     T4HLT           equ	16289	;# 
 18339   003FA2                     T4CLKCON        equ	16290	;# 
 18340   003FA2                     T4CLK           equ	16290	;# 
 18341   003FA3                     T4RST           equ	16291	;# 
 18342   003FA4                     TMR3            equ	16292	;# 
 18343   003FA4                     TMR3L           equ	16292	;# 
 18344   003FA5                     TMR3H           equ	16293	;# 
 18345   003FA6                     T3CON           equ	16294	;# 
 18346   003FA6                     TMR3CON         equ	16294	;# 
 18347   003FA7                     T3GCON          equ	16295	;# 
 18348   003FA7                     TMR3GCON        equ	16295	;# 
 18349   003FA8                     T3GATE          equ	16296	;# 
 18350   003FA8                     TMR3GATE        equ	16296	;# 
 18351   003FA9                     T3CLK           equ	16297	;# 
 18352   003FA9                     TMR3CLK         equ	16297	;# 
 18353   003FA9                     PR3             equ	16297	;# 
 18354   003FAA                     T2TMR           equ	16298	;# 
 18355   003FAA                     TMR2            equ	16298	;# 
 18356   003FAB                     T2PR            equ	16299	;# 
 18357   003FAB                     PR2             equ	16299	;# 
 18358   003FAC                     T2CON           equ	16300	;# 
 18359   003FAD                     T2HLT           equ	16301	;# 
 18360   003FAE                     T2CLKCON        equ	16302	;# 
 18361   003FAE                     T2CLK           equ	16302	;# 
 18362   003FAF                     T2RST           equ	16303	;# 
 18363   003FB0                     TMR1            equ	16304	;# 
 18364   003FB0                     TMR1L           equ	16304	;# 
 18365   003FB1                     TMR1H           equ	16305	;# 
 18366   003FB2                     T1CON           equ	16306	;# 
 18367   003FB2                     TMR1CON         equ	16306	;# 
 18368   003FB3                     T1GCON          equ	16307	;# 
 18369   003FB3                     TMR1GCON        equ	16307	;# 
 18370   003FB4                     T1GATE          equ	16308	;# 
 18371   003FB4                     TMR1GATE        equ	16308	;# 
 18372   003FB5                     T1CLK           equ	16309	;# 
 18373   003FB5                     TMR1CLK         equ	16309	;# 
 18374   003FB5                     PR1             equ	16309	;# 
 18375   003FB6                     TMR0L           equ	16310	;# 
 18376   003FB6                     TMR0            equ	16310	;# 
 18377   003FB7                     TMR0H           equ	16311	;# 
 18378   003FB7                     PR0             equ	16311	;# 
 18379   003FB8                     T0CON0          equ	16312	;# 
 18380   003FB9                     T0CON1          equ	16313	;# 
 18381   003FBA                     LATA            equ	16314	;# 
 18382   003FBB                     LATB            equ	16315	;# 
 18383   003FBC                     LATC            equ	16316	;# 
 18384   003FBD                     LATD            equ	16317	;# 
 18385   003FBE                     LATE            equ	16318	;# 
 18386   003FBF                     LATF            equ	16319	;# 
 18387   003FC2                     TRISA           equ	16322	;# 
 18388   003FC3                     TRISB           equ	16323	;# 
 18389   003FC4                     TRISC           equ	16324	;# 
 18390   003FC5                     TRISD           equ	16325	;# 
 18391   003FC6                     TRISE           equ	16326	;# 
 18392   003FC7                     TRISF           equ	16327	;# 
 18393   003FCA                     PORTA           equ	16330	;# 
 18394   003FCB                     PORTB           equ	16331	;# 
 18395   003FCC                     PORTC           equ	16332	;# 
 18396   003FCD                     PORTD           equ	16333	;# 
 18397   003FCE                     PORTE           equ	16334	;# 
 18398   003FCF                     PORTF           equ	16335	;# 
 18399   003FD2                     INTCON0         equ	16338	;# 
 18400   003FD3                     INTCON1         equ	16339	;# 
 18401   003FD4                     IVTLOCK         equ	16340	;# 
 18402   003FD5                     IVTBASE         equ	16341	;# 
 18403   003FD5                     IVTBASEL        equ	16341	;# 
 18404   003FD6                     IVTBASEH        equ	16342	;# 
 18405   003FD7                     IVTBASEU        equ	16343	;# 
 18406   003FD8                     STATUS          equ	16344	;# 
 18407   003FD9                     FSR2            equ	16345	;# 
 18408   003FD9                     FSR2L           equ	16345	;# 
 18409   003FDA                     FSR2H           equ	16346	;# 
 18410   003FDB                     PLUSW2          equ	16347	;# 
 18411   003FDC                     PREINC2         equ	16348	;# 
 18412   003FDD                     POSTDEC2        equ	16349	;# 
 18413   003FDE                     POSTINC2        equ	16350	;# 
 18414   003FDF                     INDF2           equ	16351	;# 
 18415   003FE0                     BSR             equ	16352	;# 
 18416   003FE1                     FSR1            equ	16353	;# 
 18417   003FE1                     FSR1L           equ	16353	;# 
 18418   003FE2                     FSR1H           equ	16354	;# 
 18419   003FE3                     PLUSW1          equ	16355	;# 
 18420   003FE4                     PREINC1         equ	16356	;# 
 18421   003FE5                     POSTDEC1        equ	16357	;# 
 18422   003FE6                     POSTINC1        equ	16358	;# 
 18423   003FE7                     INDF1           equ	16359	;# 
 18424   003FE8                     WREG            equ	16360	;# 
 18425   003FE9                     FSR0            equ	16361	;# 
 18426   003FE9                     FSR0L           equ	16361	;# 
 18427   003FEA                     FSR0H           equ	16362	;# 
 18428   003FEB                     PLUSW0          equ	16363	;# 
 18429   003FEC                     PREINC0         equ	16364	;# 
 18430   003FED                     POSTDEC0        equ	16365	;# 
 18431   003FEE                     POSTINC0        equ	16366	;# 
 18432   003FEF                     INDF0           equ	16367	;# 
 18433   003FF0                     PCON0           equ	16368	;# 
 18434   003FF1                     PCON1           equ	16369	;# 
 18435   003FF3                     PROD            equ	16371	;# 
 18436   003FF3                     PRODL           equ	16371	;# 
 18437   003FF4                     PRODH           equ	16372	;# 
 18438   003FF5                     TABLAT          equ	16373	;# 
 18439   003FF6                     TBLPTR          equ	16374	;# 
 18440   003FF6                     TBLPTRL         equ	16374	;# 
 18441   003FF7                     TBLPTRH         equ	16375	;# 
 18442   003FF8                     TBLPTRU         equ	16376	;# 
 18443   003FF9                     PCLAT           equ	16377	;# 
 18444   003FF9                     PCL             equ	16377	;# 
 18445   003FFA                     PCLATH          equ	16378	;# 
 18446   003FFB                     PCLATU          equ	16379	;# 
 18447   003FFC                     STKPTR          equ	16380	;# 
 18448   003FFD                     TOS             equ	16381	;# 
 18449   003FFD                     TOSL            equ	16381	;# 
 18450   003FFE                     TOSH            equ	16382	;# 
 18451   003FFF                     TOSU            equ	16383	;# 
 18452   003880                     STATUS_CSHAD    equ	14464	;# 
 18453   003881                     WREG_CSHAD      equ	14465	;# 
 18454   003882                     BSR_CSHAD       equ	14466	;# 
 18455   003883                     SHADCON         equ	14467	;# 
 18456   003884                     STATUS_SHAD     equ	14468	;# 
 18457   003885                     WREG_SHAD       equ	14469	;# 
 18458   003886                     BSR_SHAD        equ	14470	;# 
 18459   003887                     PCLATH_SHAD     equ	14471	;# 
 18460   003888                     PCLATU_SHAD     equ	14472	;# 
 18461   003889                     FSR0SH          equ	14473	;# 
 18462   003889                     FSR0L_SHAD      equ	14473	;# 
 18463   00388A                     FSR0H_SHAD      equ	14474	;# 
 18464   00388B                     FSR1SH          equ	14475	;# 
 18465   00388B                     FSR1L_SHAD      equ	14475	;# 
 18466   00388C                     FSR1H_SHAD      equ	14476	;# 
 18467   00388D                     FSR2SH          equ	14477	;# 
 18468   00388D                     FSR2L_SHAD      equ	14477	;# 
 18469   00388E                     FSR2H_SHAD      equ	14478	;# 
 18470   00388F                     PRODSH          equ	14479	;# 
 18471   00388F                     PRODL_SHAD      equ	14479	;# 
 18472   003890                     PRODH_SHAD      equ	14480	;# 
 18473   00389D                     IVTADL          equ	14493	;# 
 18474   00389E                     IVTADH          equ	14494	;# 
 18475   00389F                     IVTADU          equ	14495	;# 
 18476   00395B                     WDTCON0         equ	14683	;# 
 18477   00395C                     WDTCON1         equ	14684	;# 
 18478   00395D                     WDTPSL          equ	14685	;# 
 18479   00395E                     WDTPSH          equ	14686	;# 
 18480   00395F                     WDTTMR          equ	14687	;# 
 18481   003960                     CRCDATA         equ	14688	;# 
 18482   003960                     CRCDATL         equ	14688	;# 
 18483   003961                     CRCDATH         equ	14689	;# 
 18484   003962                     CRCACC          equ	14690	;# 
 18485   003962                     CRCACCL         equ	14690	;# 
 18486   003963                     CRCACCH         equ	14691	;# 
 18487   003964                     CRCSHFT         equ	14692	;# 
 18488   003964                     CRCSHIFTL       equ	14692	;# 
 18489   003965                     CRCSHIFTH       equ	14693	;# 
 18490   003966                     CRCXOR          equ	14694	;# 
 18491   003966                     CRCXORL         equ	14694	;# 
 18492   003967                     CRCXORH         equ	14695	;# 
 18493   003968                     CRCCON0         equ	14696	;# 
 18494   003969                     CRCCON1         equ	14697	;# 
 18495   003976                     SCANLADR        equ	14710	;# 
 18496   003976                     SCANLADRL       equ	14710	;# 
 18497   003977                     SCANLADRH       equ	14711	;# 
 18498   003978                     SCANLADRU       equ	14712	;# 
 18499   003979                     SCANHADR        equ	14713	;# 
 18500   003979                     SCANHADRL       equ	14713	;# 
 18501   00397A                     SCANHADRH       equ	14714	;# 
 18502   00397B                     SCANHADRU       equ	14715	;# 
 18503   00397C                     SCANCON0        equ	14716	;# 
 18504   00397D                     SCANTRIG        equ	14717	;# 
 18505   003980                     IPR0            equ	14720	;# 
 18506   003981                     IPR1            equ	14721	;# 
 18507   003982                     IPR2            equ	14722	;# 
 18508   003983                     IPR3            equ	14723	;# 
 18509   003984                     IPR4            equ	14724	;# 
 18510   003985                     IPR5            equ	14725	;# 
 18511   003986                     IPR6            equ	14726	;# 
 18512   003987                     IPR7            equ	14727	;# 
 18513   003988                     IPR8            equ	14728	;# 
 18514   003989                     IPR9            equ	14729	;# 
 18515   00398A                     IPR10           equ	14730	;# 
 18516   003990                     PIE0            equ	14736	;# 
 18517   003991                     PIE1            equ	14737	;# 
 18518   003992                     PIE2            equ	14738	;# 
 18519   003993                     PIE3            equ	14739	;# 
 18520   003994                     PIE4            equ	14740	;# 
 18521   003995                     PIE5            equ	14741	;# 
 18522   003996                     PIE6            equ	14742	;# 
 18523   003997                     PIE7            equ	14743	;# 
 18524   003998                     PIE8            equ	14744	;# 
 18525   003999                     PIE9            equ	14745	;# 
 18526   00399A                     PIE10           equ	14746	;# 
 18527   0039A0                     PIR0            equ	14752	;# 
 18528   0039A1                     PIR1            equ	14753	;# 
 18529   0039A2                     PIR2            equ	14754	;# 
 18530   0039A3                     PIR3            equ	14755	;# 
 18531   0039A4                     PIR4            equ	14756	;# 
 18532   0039A5                     PIR5            equ	14757	;# 
 18533   0039A6                     PIR6            equ	14758	;# 
 18534   0039A7                     PIR7            equ	14759	;# 
 18535   0039A8                     PIR8            equ	14760	;# 
 18536   0039A9                     PIR9            equ	14761	;# 
 18537   0039AA                     PIR10           equ	14762	;# 
 18538   0039C0                     PMD0            equ	14784	;# 
 18539   0039C1                     PMD1            equ	14785	;# 
 18540   0039C2                     PMD2            equ	14786	;# 
 18541   0039C3                     PMD3            equ	14787	;# 
 18542   0039C4                     PMD4            equ	14788	;# 
 18543   0039C5                     PMD5            equ	14789	;# 
 18544   0039C6                     PMD6            equ	14790	;# 
 18545   0039C7                     PMD7            equ	14791	;# 
 18546   0039D0                     BORCON          equ	14800	;# 
 18547   0039D1                     VREGCON         equ	14801	;# 
 18548   0039D8                     CPUDOZE         equ	14808	;# 
 18549   0039D9                     OSCCON1         equ	14809	;# 
 18550   0039DA                     OSCCON2         equ	14810	;# 
 18551   0039DB                     OSCCON3         equ	14811	;# 
 18552   0039DC                     OSCSTAT         equ	14812	;# 
 18553   0039DC                     OSCSTAT1        equ	14812	;# 
 18554   0039DD                     OSCEN           equ	14813	;# 
 18555   0039DE                     OSCTUNE         equ	14814	;# 
 18556   0039DF                     OSCFRQ          equ	14815	;# 
 18557   0039E0                     NVMADRL         equ	14816	;# 
 18558   0039E1                     NVMADRH         equ	14817	;# 
 18559   0039E3                     NVMDAT          equ	14819	;# 
 18560   0039E5                     NVMCON1         equ	14821	;# 
 18561   0039E6                     NVMCON2         equ	14822	;# 
 18562   0039EF                     PRLOCK          equ	14831	;# 
 18563   0039F1                     ISRPR           equ	14833	;# 
 18564   0039F2                     MAINPR          equ	14834	;# 
 18565   0039F3                     DMA1PR          equ	14835	;# 
 18566   0039F4                     DMA2PR          equ	14836	;# 
 18567   0039F7                     SCANPR          equ	14839	;# 
 18568   003A00                     RA0PPS          equ	14848	;# 
 18569   003A01                     RA1PPS          equ	14849	;# 
 18570   003A02                     RA2PPS          equ	14850	;# 
 18571   003A03                     RA3PPS          equ	14851	;# 
 18572   003A04                     RA4PPS          equ	14852	;# 
 18573   003A05                     RA5PPS          equ	14853	;# 
 18574   003A06                     RA6PPS          equ	14854	;# 
 18575   003A07                     RA7PPS          equ	14855	;# 
 18576   003A08                     RB0PPS          equ	14856	;# 
 18577   003A09                     RB1PPS          equ	14857	;# 
 18578   003A0A                     RB2PPS          equ	14858	;# 
 18579   003A0B                     RB3PPS          equ	14859	;# 
 18580   003A0C                     RB4PPS          equ	14860	;# 
 18581   003A0D                     RB5PPS          equ	14861	;# 
 18582   003A0E                     RB6PPS          equ	14862	;# 
 18583   003A0F                     RB7PPS          equ	14863	;# 
 18584   003A10                     RC0PPS          equ	14864	;# 
 18585   003A11                     RC1PPS          equ	14865	;# 
 18586   003A12                     RC2PPS          equ	14866	;# 
 18587   003A13                     RC3PPS          equ	14867	;# 
 18588   003A14                     RC4PPS          equ	14868	;# 
 18589   003A15                     RC5PPS          equ	14869	;# 
 18590   003A16                     RC6PPS          equ	14870	;# 
 18591   003A17                     RC7PPS          equ	14871	;# 
 18592   003A18                     RD0PPS          equ	14872	;# 
 18593   003A19                     RD1PPS          equ	14873	;# 
 18594   003A1A                     RD2PPS          equ	14874	;# 
 18595   003A1B                     RD3PPS          equ	14875	;# 
 18596   003A1C                     RD4PPS          equ	14876	;# 
 18597   003A1D                     RD5PPS          equ	14877	;# 
 18598   003A1E                     RD6PPS          equ	14878	;# 
 18599   003A1F                     RD7PPS          equ	14879	;# 
 18600   003A20                     RE0PPS          equ	14880	;# 
 18601   003A21                     RE1PPS          equ	14881	;# 
 18602   003A22                     RE2PPS          equ	14882	;# 
 18603   003A28                     RF0PPS          equ	14888	;# 
 18604   003A29                     RF1PPS          equ	14889	;# 
 18605   003A2A                     RF2PPS          equ	14890	;# 
 18606   003A2B                     RF3PPS          equ	14891	;# 
 18607   003A2C                     RF4PPS          equ	14892	;# 
 18608   003A2D                     RF5PPS          equ	14893	;# 
 18609   003A2E                     RF6PPS          equ	14894	;# 
 18610   003A2F                     RF7PPS          equ	14895	;# 
 18611   003A40                     ANSELA          equ	14912	;# 
 18612   003A41                     WPUA            equ	14913	;# 
 18613   003A42                     ODCONA          equ	14914	;# 
 18614   003A43                     SLRCONA         equ	14915	;# 
 18615   003A44                     INLVLA          equ	14916	;# 
 18616   003A45                     IOCAP           equ	14917	;# 
 18617   003A46                     IOCAN           equ	14918	;# 
 18618   003A47                     IOCAF           equ	14919	;# 
 18619   003A50                     ANSELB          equ	14928	;# 
 18620   003A51                     WPUB            equ	14929	;# 
 18621   003A52                     ODCONB          equ	14930	;# 
 18622   003A53                     SLRCONB         equ	14931	;# 
 18623   003A54                     INLVLB          equ	14932	;# 
 18624   003A55                     IOCBP           equ	14933	;# 
 18625   003A56                     IOCBN           equ	14934	;# 
 18626   003A57                     IOCBF           equ	14935	;# 
 18627   003A5A                     RB1I2C          equ	14938	;# 
 18628   003A5B                     RB2I2C          equ	14939	;# 
 18629   003A60                     ANSELC          equ	14944	;# 
 18630   003A61                     WPUC            equ	14945	;# 
 18631   003A62                     ODCONC          equ	14946	;# 
 18632   003A63                     SLRCONC         equ	14947	;# 
 18633   003A64                     INLVLC          equ	14948	;# 
 18634   003A65                     IOCCP           equ	14949	;# 
 18635   003A66                     IOCCN           equ	14950	;# 
 18636   003A67                     IOCCF           equ	14951	;# 
 18637   003A6A                     RC3I2C          equ	14954	;# 
 18638   003A6B                     RC4I2C          equ	14955	;# 
 18639   003A70                     ANSELD          equ	14960	;# 
 18640   003A71                     WPUD            equ	14961	;# 
 18641   003A72                     ODCOND          equ	14962	;# 
 18642   003A73                     SLRCOND         equ	14963	;# 
 18643   003A74                     INLVLD          equ	14964	;# 
 18644   003A7A                     RD0I2C          equ	14970	;# 
 18645   003A7B                     RD1I2C          equ	14971	;# 
 18646   003A80                     ANSELE          equ	14976	;# 
 18647   003A81                     WPUE            equ	14977	;# 
 18648   003A82                     ODCONE          equ	14978	;# 
 18649   003A83                     SLRCONE         equ	14979	;# 
 18650   003A84                     INLVLE          equ	14980	;# 
 18651   003A85                     IOCEP           equ	14981	;# 
 18652   003A86                     IOCEN           equ	14982	;# 
 18653   003A87                     IOCEF           equ	14983	;# 
 18654   003A90                     ANSELF          equ	14992	;# 
 18655   003A91                     WPUF            equ	14993	;# 
 18656   003A92                     ODCONF          equ	14994	;# 
 18657   003A93                     SLRCONF         equ	14995	;# 
 18658   003A94                     INLVLF          equ	14996	;# 
 18659   003ABF                     PPSLOCK         equ	15039	;# 
 18660   003AC0                     INT0PPS         equ	15040	;# 
 18661   003AC1                     INT1PPS         equ	15041	;# 
 18662   003AC2                     INT2PPS         equ	15042	;# 
 18663   003AC3                     T0CKIPPS        equ	15043	;# 
 18664   003AC4                     T1CKIPPS        equ	15044	;# 
 18665   003AC5                     T1GPPS          equ	15045	;# 
 18666   003AC6                     T3CKIPPS        equ	15046	;# 
 18667   003AC7                     T3GPPS          equ	15047	;# 
 18668   003AC8                     T5CKIPPS        equ	15048	;# 
 18669   003AC9                     T5GPPS          equ	15049	;# 
 18670   003ACA                     T2INPPS         equ	15050	;# 
 18671   003ACB                     T4INPPS         equ	15051	;# 
 18672   003ACC                     T6INPPS         equ	15052	;# 
 18673   003ACD                     CCP1PPS         equ	15053	;# 
 18674   003ACE                     CCP2PPS         equ	15054	;# 
 18675   003ACF                     CCP3PPS         equ	15055	;# 
 18676   003AD0                     CCP4PPS         equ	15056	;# 
 18677   003AD1                     SMT1WINPPS      equ	15057	;# 
 18678   003AD2                     SMT1SIGPPS      equ	15058	;# 
 18679   003AD3                     CWG1INPPS       equ	15059	;# 
 18680   003AD4                     CWG2INPPS       equ	15060	;# 
 18681   003AD5                     CWG3INPPS       equ	15061	;# 
 18682   003AD6                     MD1CARLPPS      equ	15062	;# 
 18683   003AD7                     MD1CARHPPS      equ	15063	;# 
 18684   003AD8                     MD1SRCPPS       equ	15064	;# 
 18685   003AD9                     CLCIN0PPS       equ	15065	;# 
 18686   003ADA                     CLCIN1PPS       equ	15066	;# 
 18687   003ADB                     CLCIN2PPS       equ	15067	;# 
 18688   003ADC                     CLCIN3PPS       equ	15068	;# 
 18689   003ADD                     ADACTPPS        equ	15069	;# 
 18690   003ADE                     SPI1SCKPPS      equ	15070	;# 
 18691   003ADF                     SPI1SDIPPS      equ	15071	;# 
 18692   003AE0                     SPI1SSPPS       equ	15072	;# 
 18693   003AE1                     I2C1SCLPPS      equ	15073	;# 
 18694   003AE2                     I2C1SDAPPS      equ	15074	;# 
 18695   003AE3                     I2C2SCLPPS      equ	15075	;# 
 18696   003AE4                     I2C2SDAPPS      equ	15076	;# 
 18697   003AE5                     U1RXPPS         equ	15077	;# 
 18698   003AE6                     U1CTSPPS        equ	15078	;# 
 18699   003AE8                     U2RXPPS         equ	15080	;# 
 18700   003AE9                     U2CTSPPS        equ	15081	;# 
 18701   003BC9                     DMA2BUF         equ	15305	;# 
 18702   003BCA                     DMA2DCNT        equ	15306	;# 
 18703   003BCA                     DMA2DCNTL       equ	15306	;# 
 18704   003BCB                     DMA2DCNTH       equ	15307	;# 
 18705   003BCC                     DMA2DPTR        equ	15308	;# 
 18706   003BCC                     DMA2DPTRL       equ	15308	;# 
 18707   003BCD                     DMA2DPTRH       equ	15309	;# 
 18708   003BCE                     DMA2DSZ         equ	15310	;# 
 18709   003BCE                     DMA2DSZL        equ	15310	;# 
 18710   003BCF                     DMA2DSZH        equ	15311	;# 
 18711   003BD0                     DMA2DSA         equ	15312	;# 
 18712   003BD0                     DMA2DSAL        equ	15312	;# 
 18713   003BD1                     DMA2DSAH        equ	15313	;# 
 18714   003BD2                     DMA2SCNT        equ	15314	;# 
 18715   003BD2                     DMA2SCNTL       equ	15314	;# 
 18716   003BD3                     DMA2SCNTH       equ	15315	;# 
 18717   003BD4                     DMA2SPTR        equ	15316	;# 
 18718   003BD4                     DMA2SPTRL       equ	15316	;# 
 18719   003BD5                     DMA2SPTRH       equ	15317	;# 
 18720   003BD6                     DMA2SPTRU       equ	15318	;# 
 18721   003BD7                     DMA2SSZ         equ	15319	;# 
 18722   003BD7                     DMA2SSZL        equ	15319	;# 
 18723   003BD8                     DMA2SSZH        equ	15320	;# 
 18724   003BD9                     DMA2SSA         equ	15321	;# 
 18725   003BD9                     DMA2SSAL        equ	15321	;# 
 18726   003BDA                     DMA2SSAH        equ	15322	;# 
 18727   003BDB                     DMA2SSAU        equ	15323	;# 
 18728   003BDC                     DMA2CON0        equ	15324	;# 
 18729   003BDD                     DMA2CON1        equ	15325	;# 
 18730   003BDE                     DMA2AIRQ        equ	15326	;# 
 18731   003BDF                     DMA2SIRQ        equ	15327	;# 
 18732   003BE9                     DMA1BUF         equ	15337	;# 
 18733   003BEA                     DMA1DCNT        equ	15338	;# 
 18734   003BEA                     DMA1DCNTL       equ	15338	;# 
 18735   003BEB                     DMA1DCNTH       equ	15339	;# 
 18736   003BEC                     DMA1DPTR        equ	15340	;# 
 18737   003BEC                     DMA1DPTRL       equ	15340	;# 
 18738   003BED                     DMA1DPTRH       equ	15341	;# 
 18739   003BEE                     DMA1DSZ         equ	15342	;# 
 18740   003BEE                     DMA1DSZL        equ	15342	;# 
 18741   003BEF                     DMA1DSZH        equ	15343	;# 
 18742   003BF0                     DMA1DSA         equ	15344	;# 
 18743   003BF0                     DMA1DSAL        equ	15344	;# 
 18744   003BF1                     DMA1DSAH        equ	15345	;# 
 18745   003BF2                     DMA1SCNT        equ	15346	;# 
 18746   003BF2                     DMA1SCNTL       equ	15346	;# 
 18747   003BF3                     DMA1SCNTH       equ	15347	;# 
 18748   003BF4                     DMA1SPTR        equ	15348	;# 
 18749   003BF4                     DMA1SPTRL       equ	15348	;# 
 18750   003BF5                     DMA1SPTRH       equ	15349	;# 
 18751   003BF6                     DMA1SPTRU       equ	15350	;# 
 18752   003BF7                     DMA1SSZ         equ	15351	;# 
 18753   003BF7                     DMA1SSZL        equ	15351	;# 
 18754   003BF8                     DMA1SSZH        equ	15352	;# 
 18755   003BF9                     DMA1SSA         equ	15353	;# 
 18756   003BF9                     DMA1SSAL        equ	15353	;# 
 18757   003BFA                     DMA1SSAH        equ	15354	;# 
 18758   003BFB                     DMA1SSAU        equ	15355	;# 
 18759   003BFC                     DMA1CON0        equ	15356	;# 
 18760   003BFD                     DMA1CON1        equ	15357	;# 
 18761   003BFE                     DMA1AIRQ        equ	15358	;# 
 18762   003BFF                     DMA1SIRQ        equ	15359	;# 
 18763   003C56                     CLC4CON         equ	15446	;# 
 18764   003C57                     CLC4POL         equ	15447	;# 
 18765   003C58                     CLC4SEL0        equ	15448	;# 
 18766   003C59                     CLC4SEL1        equ	15449	;# 
 18767   003C5A                     CLC4SEL2        equ	15450	;# 
 18768   003C5B                     CLC4SEL3        equ	15451	;# 
 18769   003C5C                     CLC4GLS0        equ	15452	;# 
 18770   003C5D                     CLC4GLS1        equ	15453	;# 
 18771   003C5E                     CLC4GLS2        equ	15454	;# 
 18772   003C5F                     CLC4GLS3        equ	15455	;# 
 18773   003C60                     CLC3CON         equ	15456	;# 
 18774   003C61                     CLC3POL         equ	15457	;# 
 18775   003C62                     CLC3SEL0        equ	15458	;# 
 18776   003C63                     CLC3SEL1        equ	15459	;# 
 18777   003C64                     CLC3SEL2        equ	15460	;# 
 18778   003C65                     CLC3SEL3        equ	15461	;# 
 18779   003C66                     CLC3GLS0        equ	15462	;# 
 18780   003C67                     CLC3GLS1        equ	15463	;# 
 18781   003C68                     CLC3GLS2        equ	15464	;# 
 18782   003C69                     CLC3GLS3        equ	15465	;# 
 18783   003C6A                     CLC2CON         equ	15466	;# 
 18784   003C6B                     CLC2POL         equ	15467	;# 
 18785   003C6C                     CLC2SEL0        equ	15468	;# 
 18786   003C6D                     CLC2SEL1        equ	15469	;# 
 18787   003C6E                     CLC2SEL2        equ	15470	;# 
 18788   003C6F                     CLC2SEL3        equ	15471	;# 
 18789   003C70                     CLC2GLS0        equ	15472	;# 
 18790   003C71                     CLC2GLS1        equ	15473	;# 
 18791   003C72                     CLC2GLS2        equ	15474	;# 
 18792   003C73                     CLC2GLS3        equ	15475	;# 
 18793   003C74                     CLC1CON         equ	15476	;# 
 18794   003C75                     CLC1POL         equ	15477	;# 
 18795   003C76                     CLC1SEL0        equ	15478	;# 
 18796   003C77                     CLC1SEL1        equ	15479	;# 
 18797   003C78                     CLC1SEL2        equ	15480	;# 
 18798   003C79                     CLC1SEL3        equ	15481	;# 
 18799   003C7A                     CLC1GLS0        equ	15482	;# 
 18800   003C7B                     CLC1GLS1        equ	15483	;# 
 18801   003C7C                     CLC1GLS2        equ	15484	;# 
 18802   003C7D                     CLC1GLS3        equ	15485	;# 
 18803   003C7E                     CLCDATA0        equ	15486	;# 
 18804   003CE5                     CLKRCON         equ	15589	;# 
 18805   003CE6                     CLKRCLK         equ	15590	;# 
 18806   003CFA                     MD1CON0         equ	15610	;# 
 18807   003CFB                     MD1CON1         equ	15611	;# 
 18808   003CFC                     MD1SRC          equ	15612	;# 
 18809   003CFD                     MD1CARL         equ	15613	;# 
 18810   003CFE                     MD1CARH         equ	15614	;# 
 18811   003D10                     SPI1RXB         equ	15632	;# 
 18812   003D11                     SPI1TXB         equ	15633	;# 
 18813   003D12                     SPI1TCNT        equ	15634	;# 
 18814   003D12                     SPI1TCNTL       equ	15634	;# 
 18815   003D13                     SPI1TCNTH       equ	15635	;# 
 18816   003D14                     SPI1CON0        equ	15636	;# 
 18817   003D15                     SPI1CON1        equ	15637	;# 
 18818   003D16                     SPI1CON2        equ	15638	;# 
 18819   003D17                     SPI1STATUS      equ	15639	;# 
 18820   003D18                     SPI1TWIDTH      equ	15640	;# 
 18821   003D19                     SPI1BAUD        equ	15641	;# 
 18822   003D1A                     SPI1INTF        equ	15642	;# 
 18823   003D1B                     SPI1INTE        equ	15643	;# 
 18824   003D1C                     SPI1CLK         equ	15644	;# 
 18825   003D54                     I2C2RXB         equ	15700	;# 
 18826   003D55                     I2C2TXB         equ	15701	;# 
 18827   003D56                     I2C2CNT         equ	15702	;# 
 18828   003D57                     I2C2ADB0        equ	15703	;# 
 18829   003D58                     I2C2ADB1        equ	15704	;# 
 18830   003D59                     I2C2ADR0        equ	15705	;# 
 18831   003D5A                     I2C2ADR1        equ	15706	;# 
 18832   003D5B                     I2C2ADR2        equ	15707	;# 
 18833   003D5C                     I2C2ADR3        equ	15708	;# 
 18834   003D5D                     I2C2CON0        equ	15709	;# 
 18835   003D5E                     I2C2CON1        equ	15710	;# 
 18836   003D5F                     I2C2CON2        equ	15711	;# 
 18837   003D60                     I2C2ERR         equ	15712	;# 
 18838   003D61                     I2C2STAT0       equ	15713	;# 
 18839   003D62                     I2C2STAT1       equ	15714	;# 
 18840   003D63                     I2C2PIR         equ	15715	;# 
 18841   003D64                     I2C2PIE         equ	15716	;# 
 18842   003D65                     I2C2CLK         equ	15717	;# 
 18843   003D66                     I2C2BTO         equ	15718	;# 
 18844   003D6A                     I2C1RXB         equ	15722	;# 
 18845   003D6B                     I2C1TXB         equ	15723	;# 
 18846   003D6C                     I2C1CNT         equ	15724	;# 
 18847   003D6D                     I2C1ADB0        equ	15725	;# 
 18848   003D6E                     I2C1ADB1        equ	15726	;# 
 18849   003D6F                     I2C1ADR0        equ	15727	;# 
 18850   003D70                     I2C1ADR1        equ	15728	;# 
 18851   003D71                     I2C1ADR2        equ	15729	;# 
 18852   003D72                     I2C1ADR3        equ	15730	;# 
 18853   003D73                     I2C1CON0        equ	15731	;# 
 18854   003D74                     I2C1CON1        equ	15732	;# 
 18855   003D75                     I2C1CON2        equ	15733	;# 
 18856   003D76                     I2C1ERR         equ	15734	;# 
 18857   003D77                     I2C1STAT0       equ	15735	;# 
 18858   003D78                     I2C1STAT1       equ	15736	;# 
 18859   003D79                     I2C1PIR         equ	15737	;# 
 18860   003D7A                     I2C1PIE         equ	15738	;# 
 18861   003D7B                     I2C1CLK         equ	15739	;# 
 18862   003D7C                     I2C1BTO         equ	15740	;# 
 18863   003DD0                     U2RXB           equ	15824	;# 
 18864   003DD0                     U2RXBL          equ	15824	;# 
 18865   003DD2                     U2TXB           equ	15826	;# 
 18866   003DD2                     U2TXBL          equ	15826	;# 
 18867   003DD4                     U2P1            equ	15828	;# 
 18868   003DD4                     U2P1L           equ	15828	;# 
 18869   003DD6                     U2P2            equ	15830	;# 
 18870   003DD6                     U2P2L           equ	15830	;# 
 18871   003DD8                     U2P3            equ	15832	;# 
 18872   003DD8                     U2P3L           equ	15832	;# 
 18873   003DDA                     U2CON0          equ	15834	;# 
 18874   003DDB                     U2CON1          equ	15835	;# 
 18875   003DDC                     U2CON2          equ	15836	;# 
 18876   003DDD                     U2BRG           equ	15837	;# 
 18877   003DDD                     U2BRGL          equ	15837	;# 
 18878   003DDE                     U2BRGH          equ	15838	;# 
 18879   003DDF                     U2FIFO          equ	15839	;# 
 18880   003DE0                     U2UIR           equ	15840	;# 
 18881   003DE1                     U2ERRIR         equ	15841	;# 
 18882   003DE2                     U2ERRIE         equ	15842	;# 
 18883   003DE8                     U1RXB           equ	15848	;# 
 18884   003DE8                     U1RXBL          equ	15848	;# 
 18885   003DE9                     U1RXCHK         equ	15849	;# 
 18886   003DEA                     U1TXB           equ	15850	;# 
 18887   003DEA                     U1TXBL          equ	15850	;# 
 18888   003DEB                     U1TXCHK         equ	15851	;# 
 18889   003DEC                     U1P1            equ	15852	;# 
 18890   003DEC                     U1P1L           equ	15852	;# 
 18891   003DED                     U1P1H           equ	15853	;# 
 18892   003DEE                     U1P2            equ	15854	;# 
 18893   003DEE                     U1P2L           equ	15854	;# 
 18894   003DEF                     U1P2H           equ	15855	;# 
 18895   003DF0                     U1P3            equ	15856	;# 
 18896   003DF0                     U1P3L           equ	15856	;# 
 18897   003DF1                     U1P3H           equ	15857	;# 
 18898   003DF2                     U1CON0          equ	15858	;# 
 18899   003DF3                     U1CON1          equ	15859	;# 
 18900   003DF4                     U1CON2          equ	15860	;# 
 18901   003DF5                     U1BRG           equ	15861	;# 
 18902   003DF5                     U1BRGL          equ	15861	;# 
 18903   003DF6                     U1BRGH          equ	15862	;# 
 18904   003DF7                     U1FIFO          equ	15863	;# 
 18905   003DF8                     U1UIR           equ	15864	;# 
 18906   003DF9                     U1ERRIR         equ	15865	;# 
 18907   003DFA                     U1ERRIE         equ	15866	;# 
 18908   003E9C                     DAC1CON1        equ	16028	;# 
 18909   003E9E                     DAC1CON0        equ	16030	;# 
 18910   003EB8                     CM2CON0         equ	16056	;# 
 18911   003EB9                     CM2CON1         equ	16057	;# 
 18912   003EBA                     CM2NCH          equ	16058	;# 
 18913   003EBB                     CM2PCH          equ	16059	;# 
 18914   003EBC                     CM1CON0         equ	16060	;# 
 18915   003EBD                     CM1CON1         equ	16061	;# 
 18916   003EBE                     CM1NCH          equ	16062	;# 
 18917   003EBF                     CM1PCH          equ	16063	;# 
 18918   003EC0                     CMOUT           equ	16064	;# 
 18919   003EC1                     FVRCON          equ	16065	;# 
 18920   003EC3                     ZCDCON          equ	16067	;# 
 18921   003EC9                     HLVDCON0        equ	16073	;# 
 18922   003ECA                     HLVDCON1        equ	16074	;# 
 18923   003ED7                     ADCP            equ	16087	;# 
 18924   003EDE                     ADLTH           equ	16094	;# 
 18925   003EDE                     ADLTHL          equ	16094	;# 
 18926   003EDF                     ADLTHH          equ	16095	;# 
 18927   003EE0                     ADUTH           equ	16096	;# 
 18928   003EE0                     ADUTHL          equ	16096	;# 
 18929   003EE1                     ADUTHH          equ	16097	;# 
 18930   003EE2                     ADERR           equ	16098	;# 
 18931   003EE2                     ADERRL          equ	16098	;# 
 18932   003EE3                     ADERRH          equ	16099	;# 
 18933   003EE4                     ADSTPT          equ	16100	;# 
 18934   003EE4                     ADSTPTL         equ	16100	;# 
 18935   003EE5                     ADSTPTH         equ	16101	;# 
 18936   003EE6                     ADFLTR          equ	16102	;# 
 18937   003EE6                     ADFLTRL         equ	16102	;# 
 18938   003EE7                     ADFLTRH         equ	16103	;# 
 18939   003EE8                     ADACC           equ	16104	;# 
 18940   003EE8                     ADACCL          equ	16104	;# 
 18941   003EE9                     ADACCH          equ	16105	;# 
 18942   003EEA                     ADACCU          equ	16106	;# 
 18943   003EEB                     ADCNT           equ	16107	;# 
 18944   003EEC                     ADRPT           equ	16108	;# 
 18945   003EED                     ADPREV          equ	16109	;# 
 18946   003EED                     ADPREVL         equ	16109	;# 
 18947   003EEE                     ADPREVH         equ	16110	;# 
 18948   003EEF                     ADRES           equ	16111	;# 
 18949   003EEF                     ADRESL          equ	16111	;# 
 18950   003EF0                     ADRESH          equ	16112	;# 
 18951   003EF1                     ADPCH           equ	16113	;# 
 18952   003EF3                     ADACQ           equ	16115	;# 
 18953   003EF3                     ADACQL          equ	16115	;# 
 18954   003EF4                     ADACQH          equ	16116	;# 
 18955   003EF5                     ADCAP           equ	16117	;# 
 18956   003EF6                     ADPRE           equ	16118	;# 
 18957   003EF6                     ADPREL          equ	16118	;# 
 18958   003EF7                     ADPREH          equ	16119	;# 
 18959   003EF8                     ADCON0          equ	16120	;# 
 18960   003EF9                     ADCON1          equ	16121	;# 
 18961   003EFA                     ADCON2          equ	16122	;# 
 18962   003EFB                     ADCON3          equ	16123	;# 
 18963   003EFC                     ADSTAT          equ	16124	;# 
 18964   003EFD                     ADREF           equ	16125	;# 
 18965   003EFE                     ADACT           equ	16126	;# 
 18966   003EFF                     ADCLK           equ	16127	;# 
 18967   003F12                     SMT1TMR         equ	16146	;# 
 18968   003F12                     SMT1TMRL        equ	16146	;# 
 18969   003F13                     SMT1TMRH        equ	16147	;# 
 18970   003F14                     SMT1TMRU        equ	16148	;# 
 18971   003F15                     SMT1CPR         equ	16149	;# 
 18972   003F15                     SMT1CPRL        equ	16149	;# 
 18973   003F16                     SMT1CPRH        equ	16150	;# 
 18974   003F17                     SMT1CPRU        equ	16151	;# 
 18975   003F18                     SMT1CPW         equ	16152	;# 
 18976   003F18                     SMT1CPWL        equ	16152	;# 
 18977   003F19                     SMT1CPWH        equ	16153	;# 
 18978   003F1A                     SMT1CPWU        equ	16154	;# 
 18979   003F1B                     SMT1PR          equ	16155	;# 
 18980   003F1B                     SMT1PRL         equ	16155	;# 
 18981   003F1C                     SMT1PRH         equ	16156	;# 
 18982   003F1D                     SMT1PRU         equ	16157	;# 
 18983   003F1E                     SMT1CON0        equ	16158	;# 
 18984   003F1F                     SMT1CON1        equ	16159	;# 
 18985   003F20                     SMT1STAT        equ	16160	;# 
 18986   003F21                     SMT1CLK         equ	16161	;# 
 18987   003F22                     SMT1SIG         equ	16162	;# 
 18988   003F23                     SMT1WIN         equ	16163	;# 
 18989   003F38                     NCO1ACC         equ	16184	;# 
 18990   003F38                     NCO1ACCL        equ	16184	;# 
 18991   003F39                     NCO1ACCH        equ	16185	;# 
 18992   003F3A                     NCO1ACCU        equ	16186	;# 
 18993   003F3B                     NCO1INC         equ	16187	;# 
 18994   003F3B                     NCO1INCL        equ	16187	;# 
 18995   003F3C                     NCO1INCH        equ	16188	;# 
 18996   003F3D                     NCO1INCU        equ	16189	;# 
 18997   003F3E                     NCO1CON         equ	16190	;# 
 18998   003F3F                     NCO1CLK         equ	16191	;# 
 18999   003F40                     CWG3CLK         equ	16192	;# 
 19000   003F40                     CWG3CLKCON      equ	16192	;# 
 19001   003F41                     CWG3ISM         equ	16193	;# 
 19002   003F41                     CWG3DAT         equ	16193	;# 
 19003   003F42                     CWG3DBR         equ	16194	;# 
 19004   003F43                     CWG3DBF         equ	16195	;# 
 19005   003F44                     CWG3CON0        equ	16196	;# 
 19006   003F45                     CWG3CON1        equ	16197	;# 
 19007   003F46                     CWG3AS0         equ	16198	;# 
 19008   003F47                     CWG3AS1         equ	16199	;# 
 19009   003F48                     CWG3STR         equ	16200	;# 
 19010   003F49                     CWG2CLK         equ	16201	;# 
 19011   003F49                     CWG2CLKCON      equ	16201	;# 
 19012   003F4A                     CWG2ISM         equ	16202	;# 
 19013   003F4A                     CWG2DAT         equ	16202	;# 
 19014   003F4B                     CWG2DBR         equ	16203	;# 
 19015   003F4C                     CWG2DBF         equ	16204	;# 
 19016   003F4D                     CWG2CON0        equ	16205	;# 
 19017   003F4E                     CWG2CON1        equ	16206	;# 
 19018   003F4F                     CWG2AS0         equ	16207	;# 
 19019   003F50                     CWG2AS1         equ	16208	;# 
 19020   003F51                     CWG2STR         equ	16209	;# 
 19021   003F52                     CWG1CLK         equ	16210	;# 
 19022   003F52                     CWG1CLKCON      equ	16210	;# 
 19023   003F53                     CWG1ISM         equ	16211	;# 
 19024   003F53                     CWG1DAT         equ	16211	;# 
 19025   003F54                     CWG1DBR         equ	16212	;# 
 19026   003F55                     CWG1DBF         equ	16213	;# 
 19027   003F56                     CWG1CON0        equ	16214	;# 
 19028   003F57                     CWG1CON1        equ	16215	;# 
 19029   003F58                     CWG1AS0         equ	16216	;# 
 19030   003F59                     CWG1AS1         equ	16217	;# 
 19031   003F5A                     CWG1STR         equ	16218	;# 
 19032   003F5E                     CCPTMRS0        equ	16222	;# 
 19033   003F5F                     CCPTMRS1        equ	16223	;# 
 19034   003F60                     PWM8DC          equ	16224	;# 
 19035   003F60                     PWM8DCL         equ	16224	;# 
 19036   003F61                     PWM8DCH         equ	16225	;# 
 19037   003F62                     PWM8CON         equ	16226	;# 
 19038   003F64                     PWM7DC          equ	16228	;# 
 19039   003F64                     PWM7DCL         equ	16228	;# 
 19040   003F65                     PWM7DCH         equ	16229	;# 
 19041   003F66                     PWM7CON         equ	16230	;# 
 19042   003F68                     PWM6DC          equ	16232	;# 
 19043   003F68                     PWM6DCL         equ	16232	;# 
 19044   003F69                     PWM6DCH         equ	16233	;# 
 19045   003F6A                     PWM6CON         equ	16234	;# 
 19046   003F6C                     PWM5DC          equ	16236	;# 
 19047   003F6C                     PWM5DCL         equ	16236	;# 
 19048   003F6D                     PWM5DCH         equ	16237	;# 
 19049   003F6E                     PWM5CON         equ	16238	;# 
 19050   003F70                     CCPR4           equ	16240	;# 
 19051   003F70                     CCPR4L          equ	16240	;# 
 19052   003F71                     CCPR4H          equ	16241	;# 
 19053   003F72                     CCP4CON         equ	16242	;# 
 19054   003F73                     CCP4CAP         equ	16243	;# 
 19055   003F74                     CCPR3           equ	16244	;# 
 19056   003F74                     CCPR3L          equ	16244	;# 
 19057   003F75                     CCPR3H          equ	16245	;# 
 19058   003F76                     CCP3CON         equ	16246	;# 
 19059   003F77                     CCP3CAP         equ	16247	;# 
 19060   003F78                     CCPR2           equ	16248	;# 
 19061   003F78                     CCPR2L          equ	16248	;# 
 19062   003F79                     CCPR2H          equ	16249	;# 
 19063   003F7A                     CCP2CON         equ	16250	;# 
 19064   003F7B                     CCP2CAP         equ	16251	;# 
 19065   003F7C                     CCPR1           equ	16252	;# 
 19066   003F7C                     CCPR1L          equ	16252	;# 
 19067   003F7D                     CCPR1H          equ	16253	;# 
 19068   003F7E                     CCP1CON         equ	16254	;# 
 19069   003F7F                     CCP1CAP         equ	16255	;# 
 19070   003F92                     T6TMR           equ	16274	;# 
 19071   003F92                     TMR6            equ	16274	;# 
 19072   003F93                     T6PR            equ	16275	;# 
 19073   003F93                     PR6             equ	16275	;# 
 19074   003F94                     T6CON           equ	16276	;# 
 19075   003F95                     T6HLT           equ	16277	;# 
 19076   003F96                     T6CLKCON        equ	16278	;# 
 19077   003F96                     T6CLK           equ	16278	;# 
 19078   003F97                     T6RST           equ	16279	;# 
 19079   003F98                     TMR5            equ	16280	;# 
 19080   003F98                     TMR5L           equ	16280	;# 
 19081   003F99                     TMR5H           equ	16281	;# 
 19082   003F9A                     T5CON           equ	16282	;# 
 19083   003F9A                     TMR5CON         equ	16282	;# 
 19084   003F9B                     T5GCON          equ	16283	;# 
 19085   003F9B                     TMR5GCON        equ	16283	;# 
 19086   003F9C                     T5GATE          equ	16284	;# 
 19087   003F9C                     TMR5GATE        equ	16284	;# 
 19088   003F9D                     T5CLK           equ	16285	;# 
 19089   003F9D                     TMR5CLK         equ	16285	;# 
 19090   003F9D                     PR5             equ	16285	;# 
 19091   003F9E                     T4TMR           equ	16286	;# 
 19092   003F9E                     TMR4            equ	16286	;# 
 19093   003F9F                     T4PR            equ	16287	;# 
 19094   003F9F                     PR4             equ	16287	;# 
 19095   003FA0                     T4CON           equ	16288	;# 
 19096   003FA1                     T4HLT           equ	16289	;# 
 19097   003FA2                     T4CLKCON        equ	16290	;# 
 19098   003FA2                     T4CLK           equ	16290	;# 
 19099   003FA3                     T4RST           equ	16291	;# 
 19100   003FA4                     TMR3            equ	16292	;# 
 19101   003FA4                     TMR3L           equ	16292	;# 
 19102   003FA5                     TMR3H           equ	16293	;# 
 19103   003FA6                     T3CON           equ	16294	;# 
 19104   003FA6                     TMR3CON         equ	16294	;# 
 19105   003FA7                     T3GCON          equ	16295	;# 
 19106   003FA7                     TMR3GCON        equ	16295	;# 
 19107   003FA8                     T3GATE          equ	16296	;# 
 19108   003FA8                     TMR3GATE        equ	16296	;# 
 19109   003FA9                     T3CLK           equ	16297	;# 
 19110   003FA9                     TMR3CLK         equ	16297	;# 
 19111   003FA9                     PR3             equ	16297	;# 
 19112   003FAA                     T2TMR           equ	16298	;# 
 19113   003FAA                     TMR2            equ	16298	;# 
 19114   003FAB                     T2PR            equ	16299	;# 
 19115   003FAB                     PR2             equ	16299	;# 
 19116   003FAC                     T2CON           equ	16300	;# 
 19117   003FAD                     T2HLT           equ	16301	;# 
 19118   003FAE                     T2CLKCON        equ	16302	;# 
 19119   003FAE                     T2CLK           equ	16302	;# 
 19120   003FAF                     T2RST           equ	16303	;# 
 19121   003FB0                     TMR1            equ	16304	;# 
 19122   003FB0                     TMR1L           equ	16304	;# 
 19123   003FB1                     TMR1H           equ	16305	;# 
 19124   003FB2                     T1CON           equ	16306	;# 
 19125   003FB2                     TMR1CON         equ	16306	;# 
 19126   003FB3                     T1GCON          equ	16307	;# 
 19127   003FB3                     TMR1GCON        equ	16307	;# 
 19128   003FB4                     T1GATE          equ	16308	;# 
 19129   003FB4                     TMR1GATE        equ	16308	;# 
 19130   003FB5                     T1CLK           equ	16309	;# 
 19131   003FB5                     TMR1CLK         equ	16309	;# 
 19132   003FB5                     PR1             equ	16309	;# 
 19133   003FB6                     TMR0L           equ	16310	;# 
 19134   003FB6                     TMR0            equ	16310	;# 
 19135   003FB7                     TMR0H           equ	16311	;# 
 19136   003FB7                     PR0             equ	16311	;# 
 19137   003FB8                     T0CON0          equ	16312	;# 
 19138   003FB9                     T0CON1          equ	16313	;# 
 19139   003FBA                     LATA            equ	16314	;# 
 19140   003FBB                     LATB            equ	16315	;# 
 19141   003FBC                     LATC            equ	16316	;# 
 19142   003FBD                     LATD            equ	16317	;# 
 19143   003FBE                     LATE            equ	16318	;# 
 19144   003FBF                     LATF            equ	16319	;# 
 19145   003FC2                     TRISA           equ	16322	;# 
 19146   003FC3                     TRISB           equ	16323	;# 
 19147   003FC4                     TRISC           equ	16324	;# 
 19148   003FC5                     TRISD           equ	16325	;# 
 19149   003FC6                     TRISE           equ	16326	;# 
 19150   003FC7                     TRISF           equ	16327	;# 
 19151   003FCA                     PORTA           equ	16330	;# 
 19152   003FCB                     PORTB           equ	16331	;# 
 19153   003FCC                     PORTC           equ	16332	;# 
 19154   003FCD                     PORTD           equ	16333	;# 
 19155   003FCE                     PORTE           equ	16334	;# 
 19156   003FCF                     PORTF           equ	16335	;# 
 19157   003FD2                     INTCON0         equ	16338	;# 
 19158   003FD3                     INTCON1         equ	16339	;# 
 19159   003FD4                     IVTLOCK         equ	16340	;# 
 19160   003FD5                     IVTBASE         equ	16341	;# 
 19161   003FD5                     IVTBASEL        equ	16341	;# 
 19162   003FD6                     IVTBASEH        equ	16342	;# 
 19163   003FD7                     IVTBASEU        equ	16343	;# 
 19164   003FD8                     STATUS          equ	16344	;# 
 19165   003FD9                     FSR2            equ	16345	;# 
 19166   003FD9                     FSR2L           equ	16345	;# 
 19167   003FDA                     FSR2H           equ	16346	;# 
 19168   003FDB                     PLUSW2          equ	16347	;# 
 19169   003FDC                     PREINC2         equ	16348	;# 
 19170   003FDD                     POSTDEC2        equ	16349	;# 
 19171   003FDE                     POSTINC2        equ	16350	;# 
 19172   003FDF                     INDF2           equ	16351	;# 
 19173   003FE0                     BSR             equ	16352	;# 
 19174   003FE1                     FSR1            equ	16353	;# 
 19175   003FE1                     FSR1L           equ	16353	;# 
 19176   003FE2                     FSR1H           equ	16354	;# 
 19177   003FE3                     PLUSW1          equ	16355	;# 
 19178   003FE4                     PREINC1         equ	16356	;# 
 19179   003FE5                     POSTDEC1        equ	16357	;# 
 19180   003FE6                     POSTINC1        equ	16358	;# 
 19181   003FE7                     INDF1           equ	16359	;# 
 19182   003FE8                     WREG            equ	16360	;# 
 19183   003FE9                     FSR0            equ	16361	;# 
 19184   003FE9                     FSR0L           equ	16361	;# 
 19185   003FEA                     FSR0H           equ	16362	;# 
 19186   003FEB                     PLUSW0          equ	16363	;# 
 19187   003FEC                     PREINC0         equ	16364	;# 
 19188   003FED                     POSTDEC0        equ	16365	;# 
 19189   003FEE                     POSTINC0        equ	16366	;# 
 19190   003FEF                     INDF0           equ	16367	;# 
 19191   003FF0                     PCON0           equ	16368	;# 
 19192   003FF1                     PCON1           equ	16369	;# 
 19193   003FF3                     PROD            equ	16371	;# 
 19194   003FF3                     PRODL           equ	16371	;# 
 19195   003FF4                     PRODH           equ	16372	;# 
 19196   003FF5                     TABLAT          equ	16373	;# 
 19197   003FF6                     TBLPTR          equ	16374	;# 
 19198   003FF6                     TBLPTRL         equ	16374	;# 
 19199   003FF7                     TBLPTRH         equ	16375	;# 
 19200   003FF8                     TBLPTRU         equ	16376	;# 
 19201   003FF9                     PCLAT           equ	16377	;# 
 19202   003FF9                     PCL             equ	16377	;# 
 19203   003FFA                     PCLATH          equ	16378	;# 
 19204   003FFB                     PCLATU          equ	16379	;# 
 19205   003FFC                     STKPTR          equ	16380	;# 
 19206   003FFD                     TOS             equ	16381	;# 
 19207   003FFD                     TOSL            equ	16381	;# 
 19208   003FFE                     TOSH            equ	16382	;# 
 19209   003FFF                     TOSU            equ	16383	;# 
 19210                           
 19211 ;;_s	offset	0
 19212 ;;_mode	offset	2
 19213 ;;_rxData	offset	0
 19214 ;;_t_link	offset=-2 (param)
 19215 ;;_k	offset	0
 19216 ;;_checksum	offset	2
 19217 ;;_i	offset	4
 19218 ;;_byte_block	offset=-2 (param)
 19219 ;;_length	offset=-3 (param)
 19220 ;;_fake	offset=-4 (param)
 19221 ;;_s_uart	offset=-5 (param)
 19222 ;;_i	offset	0
 19223 ;;_sum	offset	2
 19224 ;;_byte_block	offset=-2 (param)
 19225 ;;_byte_count	offset=-4 (param)
 19226 ;;_bufData	offset=-1 (param)
 19227 ;;_txData	offset=-1 (param)
 19228 ;;_bufData	offset=-1 (param)
 19229 ;;_ceid	offset	0
 19230 ;;_i	offset	4
 19231 ;;_stream	offset=-6 (param)
 19232 ;;_function	offset=-7 (param)
 19233 ;;_block	offset=-1 (param)
 19234 ;;_sid	offset=-2 (param)
 19235 ;;_s	offset=-2 (param)
 19236 ;;_rxData	offset	0
 19237 ;;_r_link	offset=-2 (param)
 19238 ;;_txData	offset=-1 (param)
 19239 ;;_rxData	offset	0
 19240 ;;_m_link	offset=-2 (param)
 19241 ;;_stream	offset=-1 (param)
 19242 ;;_function	offset=-2 (param)
 19243 ;;_t_format	offset=-1 (param)
 19244 ;;_sid	offset=-1 (param)
 19245 ;;_j	offset	0
 19246 ;;_k	offset	2
 19247 ;;_i	offset	4
 19248 ;;_z	offset	6
 19249 ;;_data	offset=-2 (param)
 19250 ;;_msg_data	offset	0
 19251 ;;_stream	offset=-1 (param)
 19252 ;;_function	offset=-2 (param)
 19253 ;;_dtime	offset=-4 (param)
 19254 ;;_i	offset	0
 19255 ;;_stream	offset=-1 (param)
 19256 ;;_function	offset=-2 (param)
 19257 ;;_dtime	offset=-4 (param)
 19258 ;;_msg_data	offset=-6 (param)
 19259 ;;_GIEBitValue	offset	0
 19260 ;;_bAdd	offset=-2 (param)
 19261 ;;_bData	offset=-3 (param)
 19262 ;;_byte_block	offset=-1 (param)
 19263 ;;_clear	offset=-2 (param)
 19264 ;;_readValue	offset	0
 19265 ;;_readValue	offset	0
 19266 ;;_cmd	offset=-1 (param)
 19267 ;;_cmd	offset=-1 (param)
 19268 ;;_data	offset=-1 (param)
 19269 ;;__this	offset=-2 (param)
 19270 ;;_cmd	offset=-1 (param)
 19271 ;;_flipper	offset=-1 (param)
 19272 ;;_numMilliseconds	offset=-2 (param)
 19273 ;;_vterm	offset=-1 (param)
 19274 ;;_new_response_info	offset=-1 (param)
 19275 ;;_new_response_info	offset=-1 (param)
 19276 ;;_level	offset=-2 (param)
 19277 ;;_dutyValue	offset=-2 (param)
 19278 ;;_timer	offset=-1 (param)
 19279 ;;_count	offset=-3 (param)
 19280 ;;_InterruptHandler	offset=-3 (param)
 19281 ;;_InterruptHandler	offset=-3 (param)
 19282 ;;_InterruptHandler	offset=-3 (param)
 19283 ;;_InterruptHandler	offset=-3 (param)
 19284 ;;_InterruptHandler	offset=-3 (param)
 19285 ;;_InterruptHandler	offset=-3 (param)
 19286 ;;_state	offset	0
 19287 ;;_InterruptHandler	offset=-3 (param)
 19288 ;;_InterruptHandler	offset=-3 (param)
 19289 ;;_InterruptHandler	offset=-3 (param)
 19290 ;;_InterruptHandler	offset=-3 (param)
 19291 ;;_r	offset=-1 (param)
 19292 ;;_c	offset=-2 (param)
 19293 ;;_strPtr	offset=-4 (param)
 19294 ;;_vterm	offset=-1 (param)
 19295 ;;_r	offset=-1 (param)
 19296 ;;_c	offset=-2 (param)
 19297 ;;_strPtr	offset=-4 (param)
 19298 ;;_strPtr	offset=-1 (param)
 19299 ;;_delay	offset=-4 (param)
 19300 ;;_strPtr	offset=-2 (param)
 19301 ;;__this	offset=-2 (param)
 19302 ;;_clearBuffer	offset=-3 (param)
 19303 ;;_p	offset	0
 19304 ;;_dest	offset=-2 (param)
 19305 ;;_c	offset=-4 (param)
 19306 ;;_n	offset=-6 (param)
 19307 ;;_ap	offset	0
 19308 ;;_fmt	offset=-3 (param)
 19309 ;;_f	offset	0
 19310 ;;_ap	offset	11
 19311 ;;_s	offset=-3 (param)
 19312 ;;_fmt	offset=-5 (param)
 19313 ;;_cfmt	offset	0
 19314 ;;_fp	offset=-2 (param)
 19315 ;;_fmt	offset=-4 (param)
 19316 ;;_ap	offset=-6 (param)
 19317 ;;_convarg	offset	0
 19318 ;;_cp	offset	4
 19319 ;;_c	offset	6
 19320 ;;_done	offset	7
 19321 ;;_fp	offset=-2 (param)
 19322 ;;_fmt	offset=-4 (param)
 19323 ;;_ap	offset=-6 (param)
 19324 ;;_xtoa$5788	offset	0
 19325 ;;_i	offset	2
 19326 ;;_w	offset	4
 19327 ;;_p	offset	6
 19328 ;;_c	offset	8
 19329 ;;_d_nonzero	offset	9
 19330 ;;_a	offset	10
 19331 ;;_fp	offset=-2 (param)
 19332 ;;_d	offset=-6 (param)
 19333 ;;_x	offset=-7 (param)
 19334 ;;_i	offset	0
 19335 ;;_w	offset	2
 19336 ;;_p	offset	4
 19337 ;;_fp	offset=-2 (param)
 19338 ;;_d	offset=-6 (param)
 19339 ;;_counter	offset	0
 19340 ;;_dividend	offset=-4 (param)
 19341 ;;_divisor	offset=-8 (param)
 19342 ;;_quotient	offset	0
 19343 ;;_counter	offset	4
 19344 ;;_dividend	offset=-4 (param)
 19345 ;;_divisor	offset=-8 (param)
 19346 ;;_l	offset	0
 19347 ;;_cp	offset	2
 19348 ;;_w	offset	4
 19349 ;;_p	offset	6
 19350 ;;_fp	offset=-2 (param)
 19351 ;;_s	offset=-4 (param)
 19352 ;;_c	offset	0
 19353 ;;_n	offset	1
 19354 ;;_fmt	offset=-2 (param)
 19355 ;;_ap	offset=-4 (param)
 19356 ;;_i	offset	0
 19357 ;;_w	offset	2
 19358 ;;_p	offset	4
 19359 ;;_t	offset	6
 19360 ;;_fp	offset=-2 (param)
 19361 ;;_d	offset=-6 (param)
 19362 ;;_dtoa$5755	offset	0
 19363 ;;_i	offset	2
 19364 ;;_w	offset	4
 19365 ;;_p	offset	6
 19366 ;;_s	offset	8
 19367 ;;_fp	offset=-2 (param)
 19368 ;;_d	offset=-6 (param)
 19369 ;;_i	offset	0
 19370 ;;_fp	offset=-2 (param)
 19371 ;;_buf	offset=-4 (param)
 19372 ;;_p	offset=-6 (param)
 19373 ;;_a	offset	0
 19374 ;;_s	offset=-2 (param)
 19375 ;;_i	offset	0
 19376 ;;_c	offset	2
 19377 ;;_s	offset=-2 (param)
 19378 ;;_fp	offset=-4 (param)
 19379 ;;_a	offset=-2 (param)
 19380 ;;_sign	offset	0
 19381 ;;_counter	offset	1
 19382 ;;_dividend	offset=-4 (param)
 19383 ;;_divisor	offset=-8 (param)
 19384 ;;_quotient	offset	0
 19385 ;;_sign	offset	4
 19386 ;;_counter	offset	5
 19387 ;;_dividend	offset=-4 (param)
 19388 ;;_divisor	offset=-8 (param)
 19389 ;;_w	offset	0
 19390 ;;_l	offset	2
 19391 ;;_fp	offset=-2 (param)
 19392 ;;_c	offset=-3 (param)
 19393 ;;_c	offset=-2 (param)
 19394 ;;_fp	offset=-4 (param)
 19395 ;;_c	offset=-1 (param)
 19396 ;;__this	offset=-2 (param)
 19397 ;;_c	offset=-3 (param)
 19398 ;;_line	offset=-1 (param)
 19399 ;;_vterm	offset=-2 (param)
 19400 ;;_timer	offset=-1 (param)
 19401 ;;_i	offset	0
 19402 ;;_timerVal	offset=-2 (param)
 19403                           
 19404                           	psect	idataCOMRAM
 19405   0180FA                     __pidataCOMRAM:
 19406                           	callstack 0
 19407                           
 19408                           ;initializer for secs_II_monitor_message@store6_11
 19409   0180FA  01                 	db	1
 19410                           
 19411                           ;initializer for secs_II_monitor_message@store1_13
 19412   0180FB  01                 	db	1
 19413                           
 19414                           ;initializer for secs_II_monitor_message@store1_1
 19415   0180FC  01                 	db	1
 19416                           
 19417                           ;initializer for r_protocol@d
 19418   0180FD  01                 	db	1
 19419                           
 19420                           ;initializer for r_protocol@retry
 19421   0180FE  03                 	db	3
 19422                           
 19423                           	psect	idataBIGRAM
 19424   0130AE                     __pidataBIGRAM:
 19425                           	callstack 0
 19426                           
 19427                           ;initializer for _V
 19428   0130AE  00                 	db	0
 19429   0130AF  00                 	db	0
 19430   0130B0  00                 	db	0
 19431   0130B1  00                 	db	0
 19432   0130B2  00                 	db	0
 19433   0130B3  00                 	db	0
 19434   0130B4  00                 	db	0
 19435   0130B5  00                 	db	0
 19436   0130B6  00                 	db	0
 19437   0130B7  00                 	db	0
 19438   0130B8  00                 	db	0
 19439   0130B9  00                 	db	0
 19440   0130BA  00                 	db	0
 19441   0130BB  00                 	db	0
 19442   0130BC  00                 	db	0
 19443   0130BD  00                 	db	0
 19444   0130BE  00                 	db	0
 19445   0130BF  00                 	db	0
 19446   0130C0  00                 	db	0
 19447   0130C1  00                 	db	0
 19448   0130C2  00                 	db	0
 19449   0130C3  00                 	db	0
 19450   0130C4  00                 	db	0
 19451   0130C5  00                 	db	0
 19452   0130C6  00                 	db	0
 19453   0130C7  00                 	db	0
 19454   0130C8  00                 	db	0
 19455   0130C9  00                 	db	0
 19456   0130CA  00                 	db	0
 19457   0130CB  00                 	db	0
 19458   0130CC  00                 	db	0
 19459   0130CD  00                 	db	0
 19460   0130CE  00                 	db	0
 19461   0130CF  00                 	db	0
 19462   0130D0  00                 	db	0
 19463   0130D1  00                 	db	0
 19464   0130D2  00                 	db	0
 19465   0130D3  00                 	db	0
 19466   0130D4  00                 	db	0
 19467   0130D5  00                 	db	0
 19468   0130D6  00                 	db	0
 19469   0130D7  00                 	db	0
 19470   0130D8  00                 	db	0
 19471   0130D9  00                 	db	0
 19472   0130DA  00                 	db	0
 19473   0130DB  00                 	db	0
 19474   0130DC  00                 	db	0
 19475   0130DD  00                 	db	0
 19476   0130DE  00                 	db	0
 19477   0130DF  00                 	db	0
 19478   0130E0  00                 	db	0
 19479   0130E1  00                 	db	0
 19480   0130E2  00                 	db	0
 19481   0130E3  00                 	db	0
 19482   0130E4  00                 	db	0
 19483   0130E5  00                 	db	0
 19484   0130E6  00                 	db	0
 19485   0130E7  00                 	db	0
 19486   0130E8  00                 	db	0
 19487   0130E9  00                 	db	0
 19488   0130EA  00                 	db	0
 19489   0130EB  00                 	db	0
 19490   0130EC  00                 	db	0
 19491   0130ED  00                 	db	0
 19492   0130EE  00                 	db	0
 19493   0130EF  00                 	db	0
 19494   0130F0  00                 	db	0
 19495   0130F1  00                 	db	0
 19496   0130F2  00                 	db	0
 19497   0130F3  00                 	db	0
 19498   0130F4  00                 	db	0
 19499   0130F5  00                 	db	0
 19500   0130F6  00                 	db	0
 19501   0130F7  00                 	db	0
 19502   0130F8  00                 	db	0
 19503   0130F9  00                 	db	0
 19504   0130FA  00                 	db	0
 19505   0130FB  00                 	db	0
 19506   0130FC  00                 	db	0
 19507   0130FD  00                 	db	0
 19508   0130FE  00                 	db	0
 19509   0130FF  00                 	db	0
 19510   013100  00                 	db	0
 19511   013101  00                 	db	0
 19512   013102  00                 	db	0
 19513   013103  00                 	db	0
 19514   013104  00                 	db	0
 19515   013105  00                 	db	0
 19516   013106  00                 	db	0
 19517   013107  00                 	db	0
 19518   013108  00                 	db	0
 19519   013109  00                 	db	0
 19520   01310A  00                 	db	0
 19521   01310B  00                 	db	0
 19522   01310C  00                 	db	0
 19523   01310D  00                 	db	0
 19524   01310E  00                 	db	0
 19525   01310F  00                 	db	0
 19526   013110  00                 	db	0
 19527   013111  00                 	db	0
 19528   013112  00                 	db	0
 19529   013113  00                 	db	0
 19530   013114  00                 	db	0
 19531   013115  00                 	db	0
 19532   013116  00                 	db	0
 19533   013117  00                 	db	0
 19534   013118  00                 	db	0
 19535   013119  00                 	db	0
 19536   01311A  00                 	db	0
 19537   01311B  00                 	db	0
 19538   01311C  00                 	db	0
 19539   01311D  00                 	db	0
 19540   01311E  00                 	db	0
 19541   01311F  00                 	db	0
 19542   013120  00                 	db	0
 19543   013121  00                 	db	0
 19544   013122  00                 	db	0
 19545   013123  00                 	db	0
 19546   013124  00                 	db	0
 19547   013125  00                 	db	0
 19548   013126  00                 	db	0
 19549   013127  00                 	db	0
 19550   013128  00                 	db	0
 19551   013129  00                 	db	0
 19552   01312A  00                 	db	0
 19553   01312B  00                 	db	0
 19554   01312C  00                 	db	0
 19555   01312D  00                 	db	0
 19556   01312E  00                 	db	0
 19557   01312F  00                 	db	0
 19558   013130  00                 	db	0
 19559   013131  00                 	db	0
 19560   013132  00                 	db	0
 19561   013133  00                 	db	0
 19562   013134  00                 	db	0
 19563   013135  00                 	db	0
 19564   013136  00                 	db	0
 19565   013137  00                 	db	0
 19566   013138  00                 	db	0
 19567   013139  00                 	db	0
 19568   01313A  00                 	db	0
 19569   01313B  00                 	db	0
 19570   01313C  00                 	db	0
 19571   01313D  00                 	db	0
 19572   01313E  00                 	db	0
 19573   01313F  00                 	db	0
 19574   013140  00                 	db	0
 19575   013141  00                 	db	0
 19576   013142  00                 	db	0
 19577   013143  00                 	db	0
 19578   013144  00                 	db	0
 19579   013145  00                 	db	0
 19580   013146  00                 	db	0
 19581   013147  00                 	db	0
 19582   013148  00                 	db	0
 19583   013149  00                 	db	0
 19584   01314A  00                 	db	0
 19585   01314B  00                 	db	0
 19586   01314C  00                 	db	0
 19587   01314D  00                 	db	0
 19588   01314E  00                 	db	0
 19589   01314F  00                 	db	0
 19590   013150  00                 	db	0
 19591   013151  00                 	db	0
 19592   013152  00                 	db	0
 19593   013153  00                 	db	0
 19594   013154  00                 	db	0
 19595   013155  00                 	db	0
 19596   013156  00                 	db	0
 19597   013157  00                 	db	0
 19598   013158  00                 	db	0
 19599   013159  00                 	db	0
 19600   01315A  00                 	db	0
 19601   01315B  00                 	db	0
 19602   01315C  00                 	db	0
 19603   01315D  00                 	db	0
 19604   01315E  00                 	db	0
 19605   01315F  00                 	db	0
 19606   013160  00                 	db	0
 19607   013161  00                 	db	0
 19608   013162  00                 	db	0
 19609   013163  00                 	db	0
 19610   013164  00                 	db	0
 19611   013165  00                 	db	0
 19612   013166  00                 	db	0
 19613   013167  00                 	db	0
 19614   013168  00                 	db	0
 19615   013169  00                 	db	0
 19616   01316A  00                 	db	0
 19617   01316B  00                 	db	0
 19618   01316C  00                 	db	0
 19619   01316D  00                 	db	0
 19620   01316E  00                 	db	0
 19621   01316F  00                 	db	0
 19622   013170  00                 	db	0
 19623   013171  00                 	db	0
 19624   013172  00                 	db	0
 19625   013173  00                 	db	0
 19626   013174  00                 	db	0
 19627   013175  00                 	db	0
 19628   013176  00                 	db	0
 19629   013177  00                 	db	0
 19630   013178  00                 	db	0
 19631   013179  00                 	db	0
 19632   01317A  00                 	db	0
 19633   01317B  00                 	db	0
 19634   01317C  00                 	db	0
 19635   01317D  00                 	db	0
 19636   01317E  00                 	db	0
 19637   01317F  00                 	db	0
 19638   013180  00                 	db	0
 19639   013181  00                 	db	0
 19640   013182  00                 	db	0
 19641   013183  00                 	db	0
 19642   013184  00                 	db	0
 19643   013185  00                 	db	0
 19644   013186  00                 	db	0
 19645   013187  00                 	db	0
 19646   013188  00                 	db	0
 19647   013189  00                 	db	0
 19648   01318A  00                 	db	0
 19649   01318B  00                 	db	0
 19650   01318C  00                 	db	0
 19651   01318D  00                 	db	0
 19652   01318E  00                 	db	0
 19653   01318F  00                 	db	0
 19654   013190  00                 	db	0
 19655   013191  00                 	db	0
 19656   013192  00                 	db	0
 19657   013193  00                 	db	0
 19658   013194  00                 	db	0
 19659   013195  00                 	db	0
 19660   013196  00                 	db	0
 19661   013197  00                 	db	0
 19662   013198  00                 	db	0
 19663   013199  00                 	db	0
 19664   01319A  00                 	db	0
 19665   01319B  00                 	db	0
 19666   01319C  00                 	db	0
 19667   01319D  00                 	db	0
 19668   01319E  00                 	db	0
 19669   01319F  00                 	db	0
 19670   0131A0  00                 	db	0
 19671   0131A1  00                 	db	0
 19672   0131A2  00                 	db	0
 19673   0131A3  00                 	db	0
 19674   0131A4  00                 	db	0
 19675   0131A5  00                 	db	0
 19676   0131A6  00                 	db	0
 19677   0131A7  00                 	db	0
 19678   0131A8  00                 	db	0
 19679   0131A9  00                 	db	0
 19680   0131AA  00                 	db	0
 19681   0131AB  00                 	db	0
 19682   0131AC  00                 	db	0
 19683   0131AD  00                 	db	0
 19684   0131AE  00                 	db	0
 19685   0131AF  00                 	db	0
 19686   0131B0  00                 	db	0
 19687   0131B1  00                 	db	0
 19688   0131B2  00                 	db	0
 19689   0131B3  00                 	db	0
 19690   0131B4  00                 	db	0
 19691   0131B5  00                 	db	0
 19692   0131B6  00                 	db	0
 19693   0131B7  00                 	db	0
 19694   0131B8  00                 	db	0
 19695   0131B9  00                 	db	0
 19696   0131BA  00                 	db	0
 19697   0131BB  00                 	db	0
 19698   0131BC  00                 	db	0
 19699   0131BD  00                 	db	0
 19700   0131BE  00                 	db	0
 19701   0131BF  00                 	db	0
 19702   0131C0  00                 	db	0
 19703   0131C1  00                 	db	0
 19704   0131C2  00                 	db	0
 19705   0131C3  00                 	db	0
 19706   0131C4  00                 	db	0
 19707   0131C5  00                 	db	0
 19708   0131C6  00                 	db	0
 19709   0131C7  00                 	db	0
 19710   0131C8  00                 	db	0
 19711   0131C9  00                 	db	0
 19712   0131CA  00                 	db	0
 19713   0131CB  00                 	db	0
 19714   0131CC  00                 	db	0
 19715   0131CD  00                 	db	0
 19716   0131CE  00                 	db	0
 19717   0131CF  00                 	db	0
 19718   0131D0  00                 	db	0
 19719   0131D1  00                 	db	0
 19720   0131D2  00                 	db	0
 19721   0131D3  00                 	db	0
 19722   0131D4  00                 	db	0
 19723   0131D5  0000               	dw	0
 19724   0131D7  0000               	dw	0
 19725   0131D9  0000               	dw	0
 19726   0131DB  0000               	dw	0
 19727   0131DD  0000               	dw	0
 19728   0131DF  0000               	dw	0
 19729   0131E1  00                 	db	0
 19730   0131E2  00                 	db	0
 19731   0131E3  0A                 	db	10
 19732   0131E4  0A                 	db	10
 19733   0131E5  14                 	db	20
 19734   0131E6  00                 	db	0
 19735   0131E7  00                 	db	0
 19736   0131E8  00                 	db	0
 19737   0131E9  0000               	dw	0
 19738   0131EB  0000               	dw	0
 19739   0131ED  0000               	dw	0
 19740   0131EF  0000               	dw	0
 19741   0131F1  0000               	dw	0
 19742   0131F3  0000               	dw	0
 19743   0131F5  0000               	dw	0
 19744   0131F7  0000               	dw	0
 19745   0131F9  0000               	dw	0
 19746   0131FB  00                 	db	0
 19747   0131FC  00                 	db	0
 19748   0131FD  00                 	db	0
 19749   0131FE  00                 	db	0
 19750   0131FF  00                 	db	0
 19751   013200  00                 	db	0
 19752   013201  00                 	db	0
 19753   013202  00                 	db	0
 19754   013203  00                 	db	0
 19755   013204  00                 	db	0
 19756   013205  00                 	db	0
 19757   013206  00                 	db	0
 19758   013207  00                 	db	0
 19759   013208  00                 	db	0
 19760   013209  00                 	db	0
 19761   01320A  00                 	db	0
 19762   01320B  00                 	db	0
 19763   01320C  00                 	db	0
 19764   01320D  00                 	db	0
 19765   01320E  00                 	db	0
 19766   01320F  00                 	db	0
 19767   013210  00                 	db	0
 19768   013211  00                 	db	0
 19769   013212  00                 	db	0
 19770   013213  00                 	db	0
 19771   013214  00                 	db	0
 19772   013215  00                 	db	0
 19773   013216  00                 	db	0
 19774   013217  00                 	db	0
 19775   013218  00                 	db	0
 19776   013219  00                 	db	0
 19777   01321A  00                 	db	0
 19778   01321B  00                 	db	0
 19779   01321C  00                 	db	0
 19780   01321D  00                 	db	0
 19781   01321E  00                 	db	0
 19782   01321F  00                 	db	0
 19783   013220  00                 	db	0
 19784   013221  00                 	db	0
 19785   013222  00                 	db	0
 19786   013223  00                 	db	0
 19787   013224  00                 	db	0
 19788   013225  00                 	db	0
 19789   013226  00                 	db	0
 19790   013227  0000               	dw	0
 19791   013229  0000               	dw	0
 19792   01322B  01                 	db	1
 19793   01322C  00                 	db	0
 19794   01322D  01                 	db	1
 19795   01322E  00                 	db	0
 19796   01322F  2D                 	db	45
 19797   013230  00                 	db	0
 19798                           
 19799                           ;initializer for _H153
 19800   013231  0000               	dw	0
 19801   013233  4B                 	db	75
 19802   013234  4F                 	db	79
 19803   013235  4F                 	db	79
 19804   013236  52                 	db	82
 19805   013237  42                 	db	66
 19806   013238  42                 	db	66
 19807   013239  42                 	db	66
 19808   01323A  42                 	db	66
 19809   01323B  34                 	db	52
 19810   01323C  33                 	db	51
 19811   01323D  32                 	db	50
 19812   01323E  31                 	db	49
 19813   01323F  44                 	db	68
 19814   013240  45                 	db	69
 19815   013241  32                 	db	50
 19816   013242  31                 	db	49
 19817   013243  53                 	db	83
 19818   013244  4B                 	db	75
 19819   013245  4F                 	db	79
 19820   013246  4F                 	db	79
 19821   013247  52                 	db	82
 19822   013248  42                 	db	66
 19823   013249  42                 	db	66
 19824   01324A  42                 	db	66
 19825   01324B  42                 	db	66
 19826   01324C  34                 	db	52
 19827   01324D  30                 	db	48
 19828   01324E  30                 	db	48
 19829   01324F  33                 	db	51
 19830   013250  32                 	db	50
 19831   013251  31                 	db	49
 19832   013252  44                 	db	68
 19833   013253  45                 	db	69
 19834   013254  52                 	db	82
 19835   013255  46                 	db	70
 19836   013256  20                 	db	32
 19837   013257  00                 	db	0
 19838   013258  00                 	db	0
 19839   013259  00                 	db	0
 19840   01325A  00                 	db	0
 19841   01325B  00                 	db	0
 19842   01325C  00                 	db	0
 19843   01325D  00                 	db	0
 19844   01325E  00                 	db	0
 19845   01325F  00                 	db	0
 19846   013260  00                 	db	0
 19847   013261  00                 	db	0
 19848   013262  00                 	db	0
 19849   013263  00                 	db	0
 19850   013264  00                 	db	0
 19851   013265  00                 	db	0
 19852   013266  00                 	db	0
 19853   013267  00                 	db	0
 19854   013268  00                 	db	0
 19855   013269  00                 	db	0
 19856   01326A  00                 	db	0
 19857   01326B  00                 	db	0
 19858   01326C  00                 	db	0
 19859   01326D  00                 	db	0
 19860   01326E  00                 	db	0
 19861   01326F  00                 	db	0
 19862   013270  00                 	db	0
 19863   013271  00                 	db	0
 19864   013272  00                 	db	0
 19865   013273  00                 	db	0
 19866   013274  00                 	db	0
 19867   013275  00                 	db	0
 19868   013276  00                 	db	0
 19869   013277  00                 	db	0
 19870   013278  00                 	db	0
 19871   013279  00                 	db	0
 19872   01327A  00                 	db	0
 19873   01327B  00                 	db	0
 19874   01327C  00                 	db	0
 19875   01327D  00                 	db	0
 19876   01327E  00                 	db	0
 19877   01327F  00                 	db	0
 19878   013280  00                 	db	0
 19879   013281  00                 	db	0
 19880   013282  00                 	db	0
 19881   013283  00                 	db	0
 19882   013284  00                 	db	0
 19883   013285  00                 	db	0
 19884   013286  00                 	db	0
 19885   013287  00                 	db	0
 19886   013288  00                 	db	0
 19887   013289  00                 	db	0
 19888   01328A  00                 	db	0
 19889   01328B  00                 	db	0
 19890   01328C  00                 	db	0
 19891   01328D  00                 	db	0
 19892   01328E  00                 	db	0
 19893   01328F  00                 	db	0
 19894   013290  00                 	db	0
 19895   013291  00                 	db	0
 19896   013292  00                 	db	0
 19897   013293  00                 	db	0
 19898   013294  00                 	db	0
 19899   013295  00                 	db	0
 19900   013296  00                 	db	0
 19901   013297  00                 	db	0
 19902   013298  00                 	db	0
 19903   013299  00                 	db	0
 19904   01329A  00                 	db	0
 19905   01329B  00                 	db	0
 19906   01329C  00                 	db	0
 19907   01329D  00                 	db	0
 19908   01329E  00                 	db	0
 19909   01329F  00                 	db	0
 19910   0132A0  00                 	db	0
 19911   0132A1  00                 	db	0
 19912   0132A2  00                 	db	0
 19913   0132A3  00                 	db	0
 19914   0132A4  00                 	db	0
 19915   0132A5  00                 	db	0
 19916   0132A6  00                 	db	0
 19917   0132A7  00                 	db	0
 19918   0132A8  00                 	db	0
 19919   0132A9  00                 	db	0
 19920   0132AA  00                 	db	0
 19921   0132AB  00                 	db	0
 19922   0132AC  00                 	db	0
 19923   0132AD  00                 	db	0
 19924   0132AE  00                 	db	0
 19925   0132AF  00                 	db	0
 19926   0132B0  00                 	db	0
 19927   0132B1  00                 	db	0
 19928   0132B2  00                 	db	0
 19929   0132B3  00                 	db	0
 19930   0132B4  00                 	db	0
 19931   0132B5  00                 	db	0
 19932   0132B6  00                 	db	0
 19933   0132B7  00                 	db	0
 19934   0132B8  00                 	db	0
 19935   0132B9  00                 	db	0
 19936   0132BA  00                 	db	0
 19937   0132BB  2C                 	db	44
 19938   0132BC  41                 	db	65
 19939   0132BD  01                 	db	1
 19940   0132BE  01                 	db	1
 19941   0132BF  21                 	db	33
 19942   0132C0  02                 	db	2
 19943   0132C1  01                 	db	1
 19944   0132C2  0001               	dw	1
 19945   0132C4  0000               	dw	0
 19946   0132C6  01                 	db	1
 19947   0132C7  80                 	db	128
 19948   0132C8  03                 	db	3
 19949   0132C9  8A                 	db	138
 19950   0132CA  00                 	db	0
 19951   0132CB  00                 	db	0
 19952   0132CC  99                 	db	153
 19953   0132CD  0000               	dw	0
 19954   0132CF  6F                 	db	111
 19955   0132D0  53                 	db	83
 19956   0132D1  4B                 	db	75
 19957   0132D2  4F                 	db	79
 19958   0132D3  4F                 	db	79
 19959   0132D4  52                 	db	82
 19960   0132D5  42                 	db	66
 19961   0132D6  42                 	db	66
 19962   0132D7  42                 	db	66
 19963   0132D8  42                 	db	66
 19964   0132D9  34                 	db	52
 19965   0132DA  33                 	db	51
 19966   0132DB  32                 	db	50
 19967   0132DC  31                 	db	49
 19968   0132DD  44                 	db	68
 19969   0132DE  45                 	db	69
 19970   0132DF  32                 	db	50
 19971   0132E0  31                 	db	49
 19972   0132E1  53                 	db	83
 19973   0132E2  4B                 	db	75
 19974   0132E3  52                 	db	82
 19975   0132E4  42                 	db	66
 19976   0132E5  2A                 	db	42
 19977   0132E6  17                 	db	23
 19978   0132E7  41                 	db	65
 19979   0132E8  34                 	db	52
 19980   0132E9  33                 	db	51
 19981   0132EA  32                 	db	50
 19982   0132EB  31                 	db	49
 19983   0132EC  44                 	db	68
 19984   0132ED  45                 	db	69
 19985   0132EE  52                 	db	82
 19986   0132EF  46                 	db	70
 19987   0132F0  2A                 	db	42
 19988   0132F1  00                 	db	0
 19989   0132F2  00                 	db	0
 19990   0132F3  00                 	db	0
 19991   0132F4  00                 	db	0
 19992   0132F5  00                 	db	0
 19993   0132F6  00                 	db	0
 19994   0132F7  00                 	db	0
 19995   0132F8  00                 	db	0
 19996   0132F9  00                 	db	0
 19997   0132FA  00                 	db	0
 19998   0132FB  00                 	db	0
 19999   0132FC  00                 	db	0
 20000   0132FD  00                 	db	0
 20001   0132FE  00                 	db	0
 20002   0132FF  00                 	db	0
 20003   013300  00                 	db	0
 20004   013301  00                 	db	0
 20005   013302  00                 	db	0
 20006   013303  00                 	db	0
 20007   013304  00                 	db	0
 20008   013305  00                 	db	0
 20009   013306  00                 	db	0
 20010   013307  00                 	db	0
 20011   013308  00                 	db	0
 20012   013309  00                 	db	0
 20013   01330A  00                 	db	0
 20014   01330B  00                 	db	0
 20015   01330C  00                 	db	0
 20016   01330D  00                 	db	0
 20017   01330E  00                 	db	0
 20018   01330F  00                 	db	0
 20019   013310  00                 	db	0
 20020   013311  00                 	db	0
 20021   013312  00                 	db	0
 20022   013313  00                 	db	0
 20023   013314  00                 	db	0
 20024   013315  00                 	db	0
 20025   013316  00                 	db	0
 20026   013317  00                 	db	0
 20027   013318  00                 	db	0
 20028   013319  00                 	db	0
 20029   01331A  00                 	db	0
 20030   01331B  00                 	db	0
 20031   01331C  00                 	db	0
 20032   01331D  00                 	db	0
 20033   01331E  00                 	db	0
 20034   01331F  00                 	db	0
 20035   013320  00                 	db	0
 20036   013321  00                 	db	0
 20037   013322  00                 	db	0
 20038   013323  00                 	db	0
 20039   013324  00                 	db	0
 20040   013325  00                 	db	0
 20041   013326  00                 	db	0
 20042   013327  00                 	db	0
 20043   013328  00                 	db	0
 20044   013329  00                 	db	0
 20045   01332A  00                 	db	0
 20046   01332B  00                 	db	0
 20047   01332C  00                 	db	0
 20048   01332D  00                 	db	0
 20049   01332E  00                 	db	0
 20050   01332F  00                 	db	0
 20051   013330  00                 	db	0
 20052   013331  00                 	db	0
 20053   013332  00                 	db	0
 20054   013333  00                 	db	0
 20055   013334  00                 	db	0
 20056   013335  00                 	db	0
 20057   013336  00                 	db	0
 20058   013337  00                 	db	0
 20059   013338  00                 	db	0
 20060   013339  00                 	db	0
 20061   01333A  00                 	db	0
 20062   01333B  00                 	db	0
 20063   01333C  00                 	db	0
 20064   01333D  00                 	db	0
 20065   01333E  00                 	db	0
 20066   01333F  00                 	db	0
 20067   013340  00                 	db	0
 20068   013341  00                 	db	0
 20069   013342  00                 	db	0
 20070   013343  00                 	db	0
 20071   013344  00                 	db	0
 20072   013345  00                 	db	0
 20073   013346  00                 	db	0
 20074   013347  00                 	db	0
 20075   013348  00                 	db	0
 20076   013349  00                 	db	0
 20077   01334A  00                 	db	0
 20078   01334B  00                 	db	0
 20079   01334C  00                 	db	0
 20080   01334D  00                 	db	0
 20081   01334E  00                 	db	0
 20082   01334F  00                 	db	0
 20083   013350  00                 	db	0
 20084   013351  00                 	db	0
 20085   013352  00                 	db	0
 20086   013353  00                 	db	0
 20087   013354  00                 	db	0
 20088   013355  09                 	db	9
 20089   013356  41                 	db	65
 20090   013357  02                 	db	2
 20091   013358  01                 	db	1
 20092   013359  01                 	db	1
 20093   01335A  01                 	db	1
 20094   01335B  21                 	db	33
 20095   01335C  02                 	db	2
 20096   01335D  01                 	db	1
 20097   01335E  0001               	dw	1
 20098   013360  0000               	dw	0
 20099   013362  01                 	db	1
 20100   013363  80                 	db	128
 20101   013364  05                 	db	5
 20102   013365  8A                 	db	138
 20103   013366  00                 	db	0
 20104   013367  00                 	db	0
 20105   013368  99                 	db	153
 20106                           
 20107                           ;initializer for _H254
 20108   013369  2019               	dw	8217
 20109   01336B  57                 	db	87
 20110   01336C  19                 	db	25
 20111   01336D  00                 	db	0
 20112   01336E  00                 	db	0
 20113   01336F  00                 	db	0
 20114   013370  00                 	db	0
 20115   013371  00                 	db	0
 20116   013372  00                 	db	0
 20117   013373  00                 	db	0
 20118   013374  00                 	db	0
 20119   013375  00                 	db	0
 20120   013376  00                 	db	0
 20121   013377  00                 	db	0
 20122   013378  00                 	db	0
 20123   013379  00                 	db	0
 20124   01337A  00                 	db	0
 20125   01337B  00                 	db	0
 20126   01337C  00                 	db	0
 20127   01337D  00                 	db	0
 20128   01337E  00                 	db	0
 20129   01337F  00                 	db	0
 20130   013380  00                 	db	0
 20131   013381  00                 	db	0
 20132   013382  00                 	db	0
 20133   013383  00                 	db	0
 20134   013384  00                 	db	0
 20135   013385  00                 	db	0
 20136   013386  00                 	db	0
 20137   013387  00                 	db	0
 20138   013388  00                 	db	0
 20139   013389  00                 	db	0
 20140   01338A  00                 	db	0
 20141   01338B  00                 	db	0
 20142   01338C  00                 	db	0
 20143   01338D  00                 	db	0
 20144   01338E  00                 	db	0
 20145   01338F  00                 	db	0
 20146   013390  00                 	db	0
 20147   013391  00                 	db	0
 20148   013392  00                 	db	0
 20149   013393  00                 	db	0
 20150   013394  00                 	db	0
 20151   013395  00                 	db	0
 20152   013396  00                 	db	0
 20153   013397  00                 	db	0
 20154   013398  00                 	db	0
 20155   013399  00                 	db	0
 20156   01339A  00                 	db	0
 20157   01339B  00                 	db	0
 20158   01339C  00                 	db	0
 20159   01339D  00                 	db	0
 20160   01339E  00                 	db	0
 20161   01339F  00                 	db	0
 20162   0133A0  00                 	db	0
 20163   0133A1  00                 	db	0
 20164   0133A2  00                 	db	0
 20165   0133A3  00                 	db	0
 20166   0133A4  00                 	db	0
 20167   0133A5  00                 	db	0
 20168   0133A6  00                 	db	0
 20169   0133A7  00                 	db	0
 20170   0133A8  00                 	db	0
 20171   0133A9  00                 	db	0
 20172   0133AA  00                 	db	0
 20173   0133AB  00                 	db	0
 20174   0133AC  00                 	db	0
 20175   0133AD  00                 	db	0
 20176   0133AE  00                 	db	0
 20177   0133AF  00                 	db	0
 20178   0133B0  00                 	db	0
 20179   0133B1  00                 	db	0
 20180   0133B2  00                 	db	0
 20181   0133B3  00                 	db	0
 20182   0133B4  00                 	db	0
 20183   0133B5  00                 	db	0
 20184   0133B6  00                 	db	0
 20185   0133B7  00                 	db	0
 20186   0133B8  00                 	db	0
 20187   0133B9  00                 	db	0
 20188   0133BA  00                 	db	0
 20189   0133BB  00                 	db	0
 20190   0133BC  00                 	db	0
 20191   0133BD  00                 	db	0
 20192   0133BE  00                 	db	0
 20193   0133BF  00                 	db	0
 20194   0133C0  00                 	db	0
 20195   0133C1  00                 	db	0
 20196   0133C2  00                 	db	0
 20197   0133C3  00                 	db	0
 20198   0133C4  00                 	db	0
 20199   0133C5  00                 	db	0
 20200   0133C6  00                 	db	0
 20201   0133C7  00                 	db	0
 20202   0133C8  00                 	db	0
 20203   0133C9  00                 	db	0
 20204   0133CA  00                 	db	0
 20205   0133CB  00                 	db	0
 20206   0133CC  00                 	db	0
 20207   0133CD  00                 	db	0
 20208   0133CE  00                 	db	0
 20209   0133CF  00                 	db	0
 20210   0133D0  00                 	db	0
 20211   0133D1  00                 	db	0
 20212   0133D2  00                 	db	0
 20213   0133D3  00                 	db	0
 20214   0133D4  00                 	db	0
 20215   0133D5  00                 	db	0
 20216   0133D6  00                 	db	0
 20217   0133D7  00                 	db	0
 20218   0133D8  00                 	db	0
 20219   0133D9  00                 	db	0
 20220   0133DA  00                 	db	0
 20221   0133DB  00                 	db	0
 20222   0133DC  00                 	db	0
 20223   0133DD  00                 	db	0
 20224   0133DE  00                 	db	0
 20225   0133DF  00                 	db	0
 20226   0133E0  00                 	db	0
 20227   0133E1  00                 	db	0
 20228   0133E2  00                 	db	0
 20229   0133E3  00                 	db	0
 20230   0133E4  00                 	db	0
 20231   0133E5  00                 	db	0
 20232   0133E6  00                 	db	0
 20233   0133E7  00                 	db	0
 20234   0133E8  00                 	db	0
 20235   0133E9  00                 	db	0
 20236   0133EA  00                 	db	0
 20237   0133EB  00                 	db	0
 20238   0133EC  00                 	db	0
 20239   0133ED  00                 	db	0
 20240   0133EE  00                 	db	0
 20241   0133EF  00                 	db	0
 20242   0133F0  00                 	db	0
 20243   0133F1  00                 	db	0
 20244   0133F2  00                 	db	0
 20245   0133F3  00                 	db	0
 20246   0133F4  00                 	db	0
 20247   0133F5  00                 	db	0
 20248   0133F6  00                 	db	0
 20249   0133F7  00                 	db	0
 20250   0133F8  00                 	db	0
 20251   0133F9  00                 	db	0
 20252   0133FA  00                 	db	0
 20253   0133FB  00                 	db	0
 20254   0133FC  00                 	db	0
 20255   0133FD  00                 	db	0
 20256   0133FE  00                 	db	0
 20257   0133FF  00                 	db	0
 20258   013400  00                 	db	0
 20259   013401  00                 	db	0
 20260   013402  00                 	db	0
 20261   013403  00                 	db	0
 20262   013404  00                 	db	0
 20263   013405  00                 	db	0
 20264   013406  00                 	db	0
 20265   013407  00                 	db	0
 20266   013408  00                 	db	0
 20267   013409  00                 	db	0
 20268   01340A  00                 	db	0
 20269   01340B  00                 	db	0
 20270   01340C  00                 	db	0
 20271   01340D  00                 	db	0
 20272   01340E  00                 	db	0
 20273   01340F  00                 	db	0
 20274   013410  00                 	db	0
 20275   013411  00                 	db	0
 20276   013412  00                 	db	0
 20277   013413  00                 	db	0
 20278   013414  00                 	db	0
 20279   013415  00                 	db	0
 20280   013416  00                 	db	0
 20281   013417  00                 	db	0
 20282   013418  00                 	db	0
 20283   013419  00                 	db	0
 20284   01341A  00                 	db	0
 20285   01341B  00                 	db	0
 20286   01341C  00                 	db	0
 20287   01341D  00                 	db	0
 20288   01341E  00                 	db	0
 20289   01341F  00                 	db	0
 20290   013420  00                 	db	0
 20291   013421  00                 	db	0
 20292   013422  00                 	db	0
 20293   013423  00                 	db	0
 20294   013424  00                 	db	0
 20295   013425  00                 	db	0
 20296   013426  00                 	db	0
 20297   013427  00                 	db	0
 20298   013428  00                 	db	0
 20299   013429  00                 	db	0
 20300   01342A  00                 	db	0
 20301   01342B  00                 	db	0
 20302   01342C  00                 	db	0
 20303   01342D  00                 	db	0
 20304   01342E  00                 	db	0
 20305   01342F  00                 	db	0
 20306   013430  00                 	db	0
 20307   013431  00                 	db	0
 20308   013432  00                 	db	0
 20309   013433  00                 	db	0
 20310   013434  00                 	db	0
 20311   013435  00                 	db	0
 20312   013436  00                 	db	0
 20313   013437  00                 	db	0
 20314   013438  00                 	db	0
 20315   013439  00                 	db	0
 20316   01343A  00                 	db	0
 20317   01343B  00                 	db	0
 20318   01343C  00                 	db	0
 20319   01343D  00                 	db	0
 20320   01343E  00                 	db	0
 20321   01343F  00                 	db	0
 20322   013440  00                 	db	0
 20323   013441  00                 	db	0
 20324   013442  00                 	db	0
 20325   013443  00                 	db	0
 20326   013444  00                 	db	0
 20327   013445  00                 	db	0
 20328   013446  00                 	db	0
 20329   013447  00                 	db	0
 20330   013448  00                 	db	0
 20331   013449  00                 	db	0
 20332   01344A  00                 	db	0
 20333   01344B  00                 	db	0
 20334   01344C  00                 	db	0
 20335   01344D  00                 	db	0
 20336   01344E  00                 	db	0
 20337   01344F  00                 	db	0
 20338   013450  00                 	db	0
 20339   013451  00                 	db	0
 20340   013452  00                 	db	0
 20341   013453  00                 	db	0
 20342   013454  00                 	db	0
 20343   013455  00                 	db	0
 20344   013456  00                 	db	0
 20345   013457  00                 	db	0
 20346   013458  00                 	db	0
 20347   013459  00                 	db	0
 20348   01345A  00                 	db	0
 20349   01345B  00                 	db	0
 20350   01345C  00                 	db	0
 20351   01345D  00                 	db	0
 20352   01345E  00                 	db	0
 20353   01345F  0001               	dw	1
 20354   013461  0000               	dw	0
 20355   013463  01                 	db	1
 20356   013464  80                 	db	128
 20357   013465  03                 	db	3
 20358   013466  8A                 	db	138
 20359   013467  EF                 	db	239
 20360   013468  80                 	db	128
 20361   013469  FE                 	db	254
 20362                           
 20363                           	psect	idataBANK0
 20364   0179AA                     __pidataBANK0:
 20365                           	callstack 0
 20366                           
 20367                           ;initializer for _H33
 20368   0179AA  0000               	dw	0
 20369   0179AC  01                 	db	1
 20370   0179AD  01                 	db	1
 20371   0179AE  A5                 	db	165
 20372   0179AF  4B                 	db	75
 20373   0179B0  43                 	db	67
 20374   0179B1  4F                 	db	79
 20375   0179B2  4C                 	db	76
 20376   0179B3  44                 	db	68
 20377   0179B4  41                 	db	65
 20378   0179B5  4F                 	db	79
 20379   0179B6  4C                 	db	76
 20380   0179B7  08                 	db	8
 20381   0179B8  41                 	db	65
 20382   0179B9  02                 	db	2
 20383   0179BA  01                 	db	1
 20384   0179BB  01                 	db	1
 20385   0179BC  01                 	db	1
 20386   0179BD  37                 	db	55
 20387   0179BE  31                 	db	49
 20388   0179BF  02                 	db	2
 20389   0179C0  41                 	db	65
 20390   0179C1  02                 	db	2
 20391   0179C2  01                 	db	1
 20392   0179C3  0001               	dw	1
 20393   0179C5  0000               	dw	0
 20394   0179C7  01                 	db	1
 20395   0179C8  80                 	db	128
 20396   0179C9  29                 	db	41
 20397   0179CA  82                 	db	130
 20398   0179CB  00                 	db	0
 20399   0179CC  00                 	db	0
 20400   0179CD  21                 	db	33
 20401                           
 20402                           ;initializer for _H14
 20403   0179CE  0000               	dw	0
 20404   0179D0  00                 	db	0
 20405   0179D1  41                 	db	65
 20406   0179D2  11                 	db	17
 20407   0179D3  01                 	db	1
 20408   0179D4  0001               	dw	1
 20409   0179D6  0000               	dw	0
 20410   0179D8  01                 	db	1
 20411   0179D9  80                 	db	128
 20412   0179DA  04                 	db	4
 20413   0179DB  01                 	db	1
 20414   0179DC  00                 	db	0
 20415   0179DD  00                 	db	0
 20416   0179DE  0E                 	db	14
 20417                           
 20418                           	psect	idataBANK1
 20419   0168EE                     __pidataBANK1:
 20420                           	callstack 0
 20421                           
 20422                           ;initializer for _H10
 20423   0168EE  0000               	dw	0
 20424   0168F0  0001               	dw	1
 20425   0168F2  0000               	dw	0
 20426   0168F4  01                 	db	1
 20427   0168F5  80                 	db	128
 20428   0168F6  01                 	db	1
 20429   0168F7  81                 	db	129
 20430   0168F8  00                 	db	0
 20431   0168F9  00                 	db	0
 20432   0168FA  0A                 	db	10
 20433   0168FB  0000               	dw	0
 20434   0168FD  00                 	db	0
 20435   0168FE  00                 	db	0
 20436   0168FF  00                 	db	0
 20437   016900  00                 	db	0
 20438   016901  00                 	db	0
 20439   016902  00                 	db	0
 20440   016903  00                 	db	0
 20441   016904  00                 	db	0
 20442   016905  00                 	db	0
 20443   016906  00                 	db	0
 20444   016907  0A                 	db	10
 20445   016908  0000               	dw	0
 20446   01690A  0001               	dw	1
 20447   01690C  0000               	dw	0
 20448   01690E  01                 	db	1
 20449   01690F  80                 	db	128
 20450   016910  00                 	db	0
 20451   016911  01                 	db	1
 20452   016912  00                 	db	0
 20453   016913  00                 	db	0
 20454   016914  0A                 	db	10
 20455   016915  0000               	dw	0
 20456   016917  0001               	dw	1
 20457   016919  0000               	dw	0
 20458   01691B  01                 	db	1
 20459   01691C  80                 	db	128
 20460   01691D  01                 	db	1
 20461   01691E  81                 	db	129
 20462   01691F  00                 	db	0
 20463   016920  80                 	db	128
 20464   016921  0A                 	db	10
 20465   016922  0000               	dw	0
 20466   016924  0001               	dw	1
 20467   016926  0000               	dw	0
 20468   016928  01                 	db	1
 20469   016929  80                 	db	128
 20470   01692A  11                 	db	17
 20471   01692B  82                 	db	130
 20472   01692C  00                 	db	0
 20473   01692D  00                 	db	0
 20474   01692E  0A                 	db	10
 20475   01692F  0000               	dw	0
 20476   016931  0001               	dw	1
 20477   016933  0000               	dw	0
 20478   016935  01                 	db	1
 20479   016936  80                 	db	128
 20480   016937  0F                 	db	15
 20481   016938  81                 	db	129
 20482   016939  00                 	db	0
 20483   01693A  00                 	db	0
 20484   01693B  0A                 	db	10
 20485   01693C  0000               	dw	0
 20486   01693E  0001               	dw	1
 20487   016940  0000               	dw	0
 20488   016942  01                 	db	1
 20489   016943  80                 	db	128
 20490   016944  11                 	db	17
 20491   016945  81                 	db	129
 20492   016946  00                 	db	0
 20493   016947  00                 	db	0
 20494   016948  0A                 	db	10
 20495                           
 20496                           ;initializer for _H13
 20497   016949  0000               	dw	0
 20498   01694B  00                 	db	0
 20499   01694C  01                 	db	1
 20500   01694D  21                 	db	33
 20501   01694E  0001               	dw	1
 20502   016950  0000               	dw	0
 20503   016952  01                 	db	1
 20504   016953  80                 	db	128
 20505   016954  0C                 	db	12
 20506   016955  06                 	db	6
 20507   016956  00                 	db	0
 20508   016957  00                 	db	0
 20509   016958  0D                 	db	13
 20510   016959  0000               	dw	0
 20511   01695B  00                 	db	0
 20512   01695C  01                 	db	1
 20513   01695D  21                 	db	33
 20514   01695E  0001               	dw	1
 20515   016960  0000               	dw	0
 20516   016962  01                 	db	1
 20517   016963  80                 	db	128
 20518   016964  02                 	db	2
 20519   016965  0A                 	db	10
 20520   016966  00                 	db	0
 20521   016967  00                 	db	0
 20522   016968  0D                 	db	13
 20523   016969  0000               	dw	0
 20524   01696B  00                 	db	0
 20525   01696C  01                 	db	1
 20526   01696D  21                 	db	33
 20527   01696E  0001               	dw	1
 20528   016970  0000               	dw	0
 20529   016972  01                 	db	1
 20530   016973  80                 	db	128
 20531   016974  02                 	db	2
 20532   016975  05                 	db	5
 20533   016976  00                 	db	0
 20534   016977  00                 	db	0
 20535   016978  0D                 	db	13
 20536   016979  0000               	dw	0
 20537   01697B  FF                 	db	255
 20538   01697C  01                 	db	1
 20539   01697D  21                 	db	33
 20540   01697E  0001               	dw	1
 20541   016980  0000               	dw	0
 20542   016982  01                 	db	1
 20543   016983  80                 	db	128
 20544   016984  1A                 	db	26
 20545   016985  02                 	db	2
 20546   016986  00                 	db	0
 20547   016987  00                 	db	0
 20548   016988  0D                 	db	13
 20549                           
 20550                           ;initializer for _H17
 20551   016989  0000               	dw	0
 20552   01698B  00                 	db	0
 20553   01698C  01                 	db	1
 20554   01698D  00                 	db	0
 20555   01698E  01                 	db	1
 20556   01698F  21                 	db	33
 20557   016990  02                 	db	2
 20558   016991  01                 	db	1
 20559   016992  0001               	dw	1
 20560   016994  0000               	dw	0
 20561   016996  01                 	db	1
 20562   016997  80                 	db	128
 20563   016998  0E                 	db	14
 20564   016999  01                 	db	1
 20565   01699A  00                 	db	0
 20566   01699B  00                 	db	0
 20567   01699C  11                 	db	17
 20568                           
 20569                           ;initializer for _port_data
 20570   01699D  FF                 	db	255
 20571   01699E  00                 	db	0
 20572   01699F  FF                 	db	255
 20573   0169A0  00                 	db	0
 20574   0169A1  FF                 	db	255
 20575   0169A2  00                 	db	0
 20576   0169A3  FF                 	db	255
 20577   0169A4  00                 	db	0
 20578   0169A5  FF                 	db	255
 20579   0169A6  00                 	db	0
 20580   0169A7  FF                 	db	255
 20581   0169A8  00                 	db	0
 20582   0169A9  FF                 	db	255
 20583   0169AA  00                 	db	0
 20584   0169AB  FF                 	db	255
 20585   0169AC  00                 	db	0
 20586                           
 20587                           	psect	idataBANK2
 20588   017890                     __pidataBANK2:
 20589                           	callstack 0
 20590                           
 20591                           ;initializer for _H12
 20592   017890  0000               	dw	0
 20593   017892  00                 	db	0
 20594   017893  01                 	db	1
 20595   017894  0001               	dw	1
 20596   017896  0000               	dw	0
 20597   017898  01                 	db	1
 20598   017899  80                 	db	128
 20599   01789A  02                 	db	2
 20600   01789B  01                 	db	1
 20601   01789C  00                 	db	0
 20602   01789D  00                 	db	0
 20603   01789E  0C                 	db	12
 20604   01789F  0000               	dw	0
 20605   0178A1  00                 	db	0
 20606   0178A2  01                 	db	1
 20607   0178A3  0001               	dw	1
 20608   0178A5  0000               	dw	0
 20609   0178A7  01                 	db	1
 20610   0178A8  80                 	db	128
 20611   0178A9  0D                 	db	13
 20612   0178AA  81                 	db	129
 20613   0178AB  00                 	db	0
 20614   0178AC  00                 	db	0
 20615   0178AD  0C                 	db	12
 20616                           
 20617                           ;initializer for _H26
 20618   0178AE  0000               	dw	0
 20619   0178B0  30                 	db	48
 20620   0178B1  31                 	db	49
 20621   0178B2  30                 	db	48
 20622   0178B3  39                 	db	57
 20623   0178B4  31                 	db	49
 20624   0178B5  31                 	db	49
 20625   0178B6  30                 	db	48
 20626   0178B7  38                 	db	56
 20627   0178B8  34                 	db	52
 20628   0178B9  36                 	db	54
 20629   0178BA  30                 	db	48
 20630   0178BB  30                 	db	48
 20631   0178BC  30                 	db	48
 20632   0178BD  30                 	db	48
 20633   0178BE  0E                 	db	14
 20634   0178BF  41                 	db	65
 20635   0178C0  0001               	dw	1
 20636   0178C2  0000               	dw	0
 20637   0178C4  01                 	db	1
 20638   0178C5  80                 	db	128
 20639   0178C6  12                 	db	18
 20640   0178C7  02                 	db	2
 20641   0178C8  00                 	db	0
 20642   0178C9  00                 	db	0
 20643   0178CA  1A                 	db	26
 20644                           
 20645                           	psect	idataBANK6
 20646   016272                     __pidataBANK6:
 20647                           	callstack 0
 20648                           
 20649                           ;initializer for _T
 20650   016272  63                 	db	99
 20651   016273  6F                 	db	111
 20652   016274  6D                 	db	109
 20653   016275  6D                 	db	109
 20654   016276  61                 	db	97
 20655   016277  6E                 	db	110
 20656   016278  64                 	db	100
 20657   016279  73                 	db	115
 20658   01627A  20                 	db	32
 20659   01627B  31                 	db	49
 20660   01627C  00                 	db	0
 20661   01627D  00                 	db	0
 20662   01627E  00                 	db	0
 20663   01627F  00                 	db	0
 20664   016280  00                 	db	0
 20665   016281  00                 	db	0
 20666   016282  00                 	db	0
 20667   016283  00                 	db	0
 20668   016284  00                 	db	0
 20669   016285  00                 	db	0
 20670   016286  00                 	db	0
 20671   016287  00                 	db	0
 20672   016288  00                 	db	0
 20673   016289  00                 	db	0
 20674   01628A  00                 	db	0
 20675   01628B  00                 	db	0
 20676   01628C  00                 	db	0
 20677   01628D  00                 	db	0
 20678   01628E  00                 	db	0
 20679   01628F  00                 	db	0
 20680   016290  00                 	db	0
 20681   016291  00                 	db	0
 20682   016292  64                 	db	100
 20683   016293  69                 	db	105
 20684   016294  73                 	db	115
 20685   016295  70                 	db	112
 20686   016296  6C                 	db	108
 20687   016297  61                 	db	97
 20688   016298  79                 	db	121
 20689   016299  73                 	db	115
 20690   01629A  20                 	db	32
 20691   01629B  31                 	db	49
 20692   01629C  00                 	db	0
 20693   01629D  00                 	db	0
 20694   01629E  00                 	db	0
 20695   01629F  00                 	db	0
 20696   0162A0  00                 	db	0
 20697   0162A1  00                 	db	0
 20698   0162A2  00                 	db	0
 20699   0162A3  00                 	db	0
 20700   0162A4  00                 	db	0
 20701   0162A5  00                 	db	0
 20702   0162A6  00                 	db	0
 20703   0162A7  00                 	db	0
 20704   0162A8  00                 	db	0
 20705   0162A9  00                 	db	0
 20706   0162AA  00                 	db	0
 20707   0162AB  00                 	db	0
 20708   0162AC  00                 	db	0
 20709   0162AD  00                 	db	0
 20710   0162AE  00                 	db	0
 20711   0162AF  00                 	db	0
 20712   0162B0  00                 	db	0
 20713   0162B1  00                 	db	0
 20714   0162B2  63                 	db	99
 20715   0162B3  6F                 	db	111
 20716   0162B4  6D                 	db	109
 20717   0162B5  6D                 	db	109
 20718   0162B6  61                 	db	97
 20719   0162B7  6E                 	db	110
 20720   0162B8  64                 	db	100
 20721   0162B9  73                 	db	115
 20722   0162BA  20                 	db	32
 20723   0162BB  32                 	db	50
 20724   0162BC  00                 	db	0
 20725   0162BD  00                 	db	0
 20726   0162BE  00                 	db	0
 20727   0162BF  00                 	db	0
 20728   0162C0  00                 	db	0
 20729   0162C1  00                 	db	0
 20730   0162C2  00                 	db	0
 20731   0162C3  00                 	db	0
 20732   0162C4  00                 	db	0
 20733   0162C5  00                 	db	0
 20734   0162C6  00                 	db	0
 20735   0162C7  00                 	db	0
 20736   0162C8  00                 	db	0
 20737   0162C9  00                 	db	0
 20738   0162CA  00                 	db	0
 20739   0162CB  00                 	db	0
 20740   0162CC  00                 	db	0
 20741   0162CD  00                 	db	0
 20742   0162CE  00                 	db	0
 20743   0162CF  00                 	db	0
 20744   0162D0  00                 	db	0
 20745   0162D1  00                 	db	0
 20746   0162D2  64                 	db	100
 20747   0162D3  69                 	db	105
 20748   0162D4  73                 	db	115
 20749   0162D5  70                 	db	112
 20750   0162D6  6C                 	db	108
 20751   0162D7  61                 	db	97
 20752   0162D8  79                 	db	121
 20753   0162D9  73                 	db	115
 20754   0162DA  20                 	db	32
 20755   0162DB  32                 	db	50
 20756   0162DC  00                 	db	0
 20757   0162DD  00                 	db	0
 20758   0162DE  00                 	db	0
 20759   0162DF  00                 	db	0
 20760   0162E0  00                 	db	0
 20761   0162E1  00                 	db	0
 20762   0162E2  00                 	db	0
 20763   0162E3  00                 	db	0
 20764   0162E4  00                 	db	0
 20765   0162E5  00                 	db	0
 20766   0162E6  00                 	db	0
 20767   0162E7  00                 	db	0
 20768   0162E8  00                 	db	0
 20769   0162E9  00                 	db	0
 20770   0162EA  00                 	db	0
 20771   0162EB  00                 	db	0
 20772   0162EC  00                 	db	0
 20773   0162ED  00                 	db	0
 20774   0162EE  00                 	db	0
 20775   0162EF  00                 	db	0
 20776   0162F0  00                 	db	0
 20777   0162F1  00                 	db	0
 20778   0162F2  63                 	db	99
 20779   0162F3  6F                 	db	111
 20780   0162F4  6D                 	db	109
 20781   0162F5  6D                 	db	109
 20782   0162F6  61                 	db	97
 20783   0162F7  6E                 	db	110
 20784   0162F8  64                 	db	100
 20785   0162F9  73                 	db	115
 20786   0162FA  20                 	db	32
 20787   0162FB  33                 	db	51
 20788   0162FC  00                 	db	0
 20789   0162FD  00                 	db	0
 20790   0162FE  00                 	db	0
 20791   0162FF  00                 	db	0
 20792   016300  00                 	db	0
 20793   016301  00                 	db	0
 20794   016302  00                 	db	0
 20795   016303  00                 	db	0
 20796   016304  00                 	db	0
 20797   016305  00                 	db	0
 20798   016306  00                 	db	0
 20799   016307  00                 	db	0
 20800   016308  00                 	db	0
 20801   016309  00                 	db	0
 20802   01630A  00                 	db	0
 20803   01630B  00                 	db	0
 20804   01630C  00                 	db	0
 20805   01630D  00                 	db	0
 20806   01630E  00                 	db	0
 20807   01630F  00                 	db	0
 20808   016310  00                 	db	0
 20809   016311  00                 	db	0
 20810   016312  64                 	db	100
 20811   016313  69                 	db	105
 20812   016314  73                 	db	115
 20813   016315  70                 	db	112
 20814   016316  6C                 	db	108
 20815   016317  61                 	db	97
 20816   016318  79                 	db	121
 20817   016319  73                 	db	115
 20818   01631A  20                 	db	32
 20819   01631B  33                 	db	51
 20820   01631C  00                 	db	0
 20821   01631D  00                 	db	0
 20822   01631E  00                 	db	0
 20823   01631F  00                 	db	0
 20824   016320  00                 	db	0
 20825   016321  00                 	db	0
 20826   016322  00                 	db	0
 20827   016323  00                 	db	0
 20828   016324  00                 	db	0
 20829   016325  00                 	db	0
 20830   016326  00                 	db	0
 20831   016327  00                 	db	0
 20832   016328  00                 	db	0
 20833   016329  00                 	db	0
 20834   01632A  00                 	db	0
 20835   01632B  00                 	db	0
 20836   01632C  00                 	db	0
 20837   01632D  00                 	db	0
 20838   01632E  00                 	db	0
 20839   01632F  00                 	db	0
 20840   016330  00                 	db	0
 20841   016331  00                 	db	0
 20842   016332  63                 	db	99
 20843   016333  6F                 	db	111
 20844   016334  6D                 	db	109
 20845   016335  6D                 	db	109
 20846   016336  61                 	db	97
 20847   016337  6E                 	db	110
 20848   016338  64                 	db	100
 20849   016339  73                 	db	115
 20850   01633A  20                 	db	32
 20851   01633B  34                 	db	52
 20852   01633C  00                 	db	0
 20853   01633D  00                 	db	0
 20854   01633E  00                 	db	0
 20855   01633F  00                 	db	0
 20856   016340  00                 	db	0
 20857   016341  00                 	db	0
 20858   016342  00                 	db	0
 20859   016343  00                 	db	0
 20860   016344  00                 	db	0
 20861   016345  00                 	db	0
 20862   016346  00                 	db	0
 20863   016347  00                 	db	0
 20864   016348  00                 	db	0
 20865   016349  00                 	db	0
 20866   01634A  00                 	db	0
 20867   01634B  00                 	db	0
 20868   01634C  00                 	db	0
 20869   01634D  00                 	db	0
 20870   01634E  00                 	db	0
 20871   01634F  00                 	db	0
 20872   016350  00                 	db	0
 20873   016351  00                 	db	0
 20874   016352  64                 	db	100
 20875   016353  69                 	db	105
 20876   016354  73                 	db	115
 20877   016355  70                 	db	112
 20878   016356  6C                 	db	108
 20879   016357  61                 	db	97
 20880   016358  79                 	db	121
 20881   016359  73                 	db	115
 20882   01635A  20                 	db	32
 20883   01635B  34                 	db	52
 20884   01635C  00                 	db	0
 20885   01635D  00                 	db	0
 20886   01635E  00                 	db	0
 20887   01635F  00                 	db	0
 20888   016360  00                 	db	0
 20889   016361  00                 	db	0
 20890   016362  00                 	db	0
 20891   016363  00                 	db	0
 20892   016364  00                 	db	0
 20893   016365  00                 	db	0
 20894   016366  00                 	db	0
 20895   016367  00                 	db	0
 20896   016368  00                 	db	0
 20897   016369  00                 	db	0
 20898   01636A  00                 	db	0
 20899   01636B  00                 	db	0
 20900   01636C  00                 	db	0
 20901   01636D  00                 	db	0
 20902   01636E  00                 	db	0
 20903   01636F  00                 	db	0
 20904   016370  00                 	db	0
 20905   016371  00                 	db	0
 20906                           
 20907                           	psect	mediumconst
 20908   00FB2E                     __pmediumconst:
 20909                           	callstack 0
 20910   00FB2E  00                 	db	0
 20911   00FB2F                     _HC33:
 20912                           	callstack 0
 20913   00FB2F  0000               	dw	0
 20914   00FB31  01                 	db	1
 20915   00FB32  01                 	db	1
 20916   00FB33  A5                 	db	165
 20917   00FB34  4B                 	db	75
 20918   00FB35  43                 	db	67
 20919   00FB36  4F                 	db	79
 20920   00FB37  4C                 	db	76
 20921   00FB38  44                 	db	68
 20922   00FB39  41                 	db	65
 20923   00FB3A  4F                 	db	79
 20924   00FB3B  4C                 	db	76
 20925   00FB3C  08                 	db	8
 20926   00FB3D  41                 	db	65
 20927   00FB3E  02                 	db	2
 20928   00FB3F  01                 	db	1
 20929   00FB40  01                 	db	1
 20930   00FB41  01                 	db	1
 20931   00FB42  37                 	db	55
 20932   00FB43  31                 	db	49
 20933   00FB44  02                 	db	2
 20934   00FB45  41                 	db	65
 20935   00FB46  02                 	db	2
 20936   00FB47  01                 	db	1
 20937   00FB48  0001               	dw	1
 20938   00FB4A  0000               	dw	0
 20939   00FB4C  01                 	db	1
 20940   00FB4D  80                 	db	128
 20941   00FB4E  29                 	db	41
 20942   00FB4F  82                 	db	130
 20943   00FB50  00                 	db	0
 20944   00FB51  00                 	db	0
 20945   00FB52  21                 	db	33
 20946   00FB53  0000               	dw	0
 20947   00FB55  01                 	db	1
 20948   00FB56  01                 	db	1
 20949   00FB57  A5                 	db	165
 20950   00FB58  4B                 	db	75
 20951   00FB59  43                 	db	67
 20952   00FB5A  4F                 	db	79
 20953   00FB5B  4C                 	db	76
 20954   00FB5C  44                 	db	68
 20955   00FB5D  41                 	db	65
 20956   00FB5E  4F                 	db	79
 20957   00FB5F  4C                 	db	76
 20958   00FB60  08                 	db	8
 20959   00FB61  41                 	db	65
 20960   00FB62  02                 	db	2
 20961   00FB63  01                 	db	1
 20962   00FB64  01                 	db	1
 20963   00FB65  01                 	db	1
 20964   00FB66  32                 	db	50
 20965   00FB67  31                 	db	49
 20966   00FB68  02                 	db	2
 20967   00FB69  41                 	db	65
 20968   00FB6A  02                 	db	2
 20969   00FB6B  01                 	db	1
 20970   00FB6C  0001               	dw	1
 20971   00FB6E  0000               	dw	0
 20972   00FB70  01                 	db	1
 20973   00FB71  80                 	db	128
 20974   00FB72  29                 	db	41
 20975   00FB73  82                 	db	130
 20976   00FB74  00                 	db	0
 20977   00FB75  00                 	db	0
 20978   00FB76  21                 	db	33
 20979   00FB77                     __end_of_HC33:
 20980                           	callstack 0
 20981   00FB77                     _msg0:
 20982                           	callstack 0
 20983   00FB77  4D                 	db	77
 20984   00FB78  45                 	db	69
 20985   00FB79  53                 	db	83
 20986   00FB7A  53                 	db	83
 20987   00FB7B  41                 	db	65
 20988   00FB7C  47                 	db	71
 20989   00FB7D  45                 	db	69
 20990   00FB7E  20                 	db	32
 20991   00FB7F  41                 	db	65
 20992   00FB80  6C                 	db	108
 20993   00FB81  6C                 	db	108
 20994   00FB82  20                 	db	32
 20995   00FB83  25                 	db	37
 20996   00FB84  64                 	db	100
 20997   00FB85  2C                 	db	44
 20998   00FB86  20                 	db	32
 20999   00FB87  52                 	db	82
 21000   00FB88  65                 	db	101
 21001   00FB89  61                 	db	97
 21002   00FB8A  64                 	db	100
 21003   00FB8B  20                 	db	32
 21004   00FB8C  25                 	db	37
 21005   00FB8D  64                 	db	100
 21006   00FB8E  20                 	db	32
 21007   00FB8F  46                 	db	70
 21008   00FB90  61                 	db	97
 21009   00FB91  69                 	db	105
 21010   00FB92  6C                 	db	108
 21011   00FB93  65                 	db	101
 21012   00FB94  64                 	db	100
 21013   00FB95  20                 	db	32
 21014   00FB96  25                 	db	37
 21015   00FB97  64                 	db	100
 21016   00FB98  2C                 	db	44
 21017   00FB99  20                 	db	32
 21018   00FB9A  54                 	db	84
 21019   00FB9B  72                 	db	114
 21020   00FB9C  61                 	db	97
 21021   00FB9D  6E                 	db	110
 21022   00FB9E  73                 	db	115
 21023   00FB9F  6D                 	db	109
 21024   00FBA0  69                 	db	105
 21025   00FBA1  74                 	db	116
 21026   00FBA2  20                 	db	32
 21027   00FBA3  25                 	db	37
 21028   00FBA4  64                 	db	100
 21029   00FBA5  20                 	db	32
 21030   00FBA6  46                 	db	70
 21031   00FBA7  61                 	db	97
 21032   00FBA8  69                 	db	105
 21033   00FBA9  6C                 	db	108
 21034   00FBAA  65                 	db	101
 21035   00FBAB  64                 	db	100
 21036   00FBAC  20                 	db	32
 21037   00FBAD  25                 	db	37
 21038   00FBAE  64                 	db	100
 21039   00FBAF  2C                 	db	44
 21040   00FBB0  20                 	db	32
 21041   00FBB1  43                 	db	67
 21042   00FBB2  68                 	db	104
 21043   00FBB3  65                 	db	101
 21044   00FBB4  63                 	db	99
 21045   00FBB5  6B                 	db	107
 21046   00FBB6  73                 	db	115
 21047   00FBB7  75                 	db	117
 21048   00FBB8  6D                 	db	109
 21049   00FBB9  20                 	db	32
 21050   00FBBA  65                 	db	101
 21051   00FBBB  72                 	db	114
 21052   00FBBC  72                 	db	114
 21053   00FBBD  6F                 	db	111
 21054   00FBBE  72                 	db	114
 21055   00FBBF  20                 	db	32
 21056   00FBC0  25                 	db	37
 21057   00FBC1  64                 	db	100
 21058   00FBC2  20                 	db	32
 21059   00FBC3  20                 	db	32
 21060   00FBC4  46                 	db	70
 21061   00FBC5  47                 	db	71
 21062   00FBC6  42                 	db	66
 21063   00FBC7  40                 	db	64
 21064   00FBC8  4D                 	db	77
 21065   00FBC9  43                 	db	67
 21066   00FBCA  48                 	db	72
 21067   00FBCB  50                 	db	80
 21068   00FBCC  20                 	db	32
 21069   00FBCD  25                 	db	37
 21070   00FBCE  73                 	db	115
 21071   00FBCF  00                 	db	0
 21072   00FBD0                     __end_of_msg0:
 21073                           	callstack 0
 21074   00FBD0                     _msg1:
 21075                           	callstack 0
 21076   00FBD0  4F                 	db	79
 21077   00FBD1  4E                 	db	78
 21078   00FBD2  4C                 	db	76
 21079   00FBD3  49                 	db	73
 21080   00FBD4  4E                 	db	78
 21081   00FBD5  45                 	db	69
 21082   00FBD6  20                 	db	32
 21083   00FBD7  41                 	db	65
 21084   00FBD8  6C                 	db	108
 21085   00FBD9  6C                 	db	108
 21086   00FBDA  20                 	db	32
 21087   00FBDB  25                 	db	37
 21088   00FBDC  64                 	db	100
 21089   00FBDD  2C                 	db	44
 21090   00FBDE  20                 	db	32
 21091   00FBDF  52                 	db	82
 21092   00FBE0  65                 	db	101
 21093   00FBE1  61                 	db	97
 21094   00FBE2  64                 	db	100
 21095   00FBE3  20                 	db	32
 21096   00FBE4  25                 	db	37
 21097   00FBE5  64                 	db	100
 21098   00FBE6  20                 	db	32
 21099   00FBE7  46                 	db	70
 21100   00FBE8  61                 	db	97
 21101   00FBE9  69                 	db	105
 21102   00FBEA  6C                 	db	108
 21103   00FBEB  65                 	db	101
 21104   00FBEC  64                 	db	100
 21105   00FBED  20                 	db	32
 21106   00FBEE  25                 	db	37
 21107   00FBEF  64                 	db	100
 21108   00FBF0  2C                 	db	44
 21109   00FBF1  20                 	db	32
 21110   00FBF2  54                 	db	84
 21111   00FBF3  72                 	db	114
 21112   00FBF4  61                 	db	97
 21113   00FBF5  6E                 	db	110
 21114   00FBF6  73                 	db	115
 21115   00FBF7  6D                 	db	109
 21116   00FBF8  69                 	db	105
 21117   00FBF9  74                 	db	116
 21118   00FBFA  20                 	db	32
 21119   00FBFB  25                 	db	37
 21120   00FBFC  64                 	db	100
 21121   00FBFD  20                 	db	32
 21122   00FBFE  46                 	db	70
 21123   00FBFF  61                 	db	97
 21124   00FC00  69                 	db	105
 21125   00FC01  6C                 	db	108
 21126   00FC02  65                 	db	101
 21127   00FC03  64                 	db	100
 21128   00FC04  20                 	db	32
 21129   00FC05  25                 	db	37
 21130   00FC06  64                 	db	100
 21131   00FC07  2C                 	db	44
 21132   00FC08  20                 	db	32
 21133   00FC09  43                 	db	67
 21134   00FC0A  68                 	db	104
 21135   00FC0B  65                 	db	101
 21136   00FC0C  63                 	db	99
 21137   00FC0D  6B                 	db	107
 21138   00FC0E  73                 	db	115
 21139   00FC0F  75                 	db	117
 21140   00FC10  6D                 	db	109
 21141   00FC11  20                 	db	32
 21142   00FC12  65                 	db	101
 21143   00FC13  72                 	db	114
 21144   00FC14  72                 	db	114
 21145   00FC15  6F                 	db	111
 21146   00FC16  72                 	db	114
 21147   00FC17  20                 	db	32
 21148   00FC18  25                 	db	37
 21149   00FC19  64                 	db	100
 21150   00FC1A  20                 	db	32
 21151   00FC1B  20                 	db	32
 21152   00FC1C  46                 	db	70
 21153   00FC1D  47                 	db	71
 21154   00FC1E  42                 	db	66
 21155   00FC1F  40                 	db	64
 21156   00FC20  4D                 	db	77
 21157   00FC21  43                 	db	67
 21158   00FC22  48                 	db	72
 21159   00FC23  50                 	db	80
 21160   00FC24  20                 	db	32
 21161   00FC25  25                 	db	37
 21162   00FC26  73                 	db	115
 21163   00FC27  00                 	db	0
 21164   00FC28                     __end_of_msg1:
 21165                           	callstack 0
 21166   00FC28                     _msg2:
 21167                           	callstack 0
 21168   00FC28  43                 	db	67
 21169   00FC29  4F                 	db	79
 21170   00FC2A  4D                 	db	77
 21171   00FC2B  4D                 	db	77
 21172   00FC2C  20                 	db	32
 21173   00FC2D  41                 	db	65
 21174   00FC2E  6C                 	db	108
 21175   00FC2F  6C                 	db	108
 21176   00FC30  20                 	db	32
 21177   00FC31  25                 	db	37
 21178   00FC32  64                 	db	100
 21179   00FC33  2C                 	db	44
 21180   00FC34  20                 	db	32
 21181   00FC35  52                 	db	82
 21182   00FC36  65                 	db	101
 21183   00FC37  61                 	db	97
 21184   00FC38  64                 	db	100
 21185   00FC39  20                 	db	32
 21186   00FC3A  25                 	db	37
 21187   00FC3B  64                 	db	100
 21188   00FC3C  20                 	db	32
 21189   00FC3D  46                 	db	70
 21190   00FC3E  61                 	db	97
 21191   00FC3F  69                 	db	105
 21192   00FC40  6C                 	db	108
 21193   00FC41  65                 	db	101
 21194   00FC42  64                 	db	100
 21195   00FC43  20                 	db	32
 21196   00FC44  25                 	db	37
 21197   00FC45  64                 	db	100
 21198   00FC46  2C                 	db	44
 21199   00FC47  20                 	db	32
 21200   00FC48  54                 	db	84
 21201   00FC49  72                 	db	114
 21202   00FC4A  61                 	db	97
 21203   00FC4B  6E                 	db	110
 21204   00FC4C  73                 	db	115
 21205   00FC4D  6D                 	db	109
 21206   00FC4E  69                 	db	105
 21207   00FC4F  74                 	db	116
 21208   00FC50  20                 	db	32
 21209   00FC51  25                 	db	37
 21210   00FC52  64                 	db	100
 21211   00FC53  20                 	db	32
 21212   00FC54  46                 	db	70
 21213   00FC55  61                 	db	97
 21214   00FC56  69                 	db	105
 21215   00FC57  6C                 	db	108
 21216   00FC58  65                 	db	101
 21217   00FC59  64                 	db	100
 21218   00FC5A  20                 	db	32
 21219   00FC5B  25                 	db	37
 21220   00FC5C  64                 	db	100
 21221   00FC5D  2C                 	db	44
 21222   00FC5E  20                 	db	32
 21223   00FC5F  43                 	db	67
 21224   00FC60  68                 	db	104
 21225   00FC61  65                 	db	101
 21226   00FC62  63                 	db	99
 21227   00FC63  6B                 	db	107
 21228   00FC64  73                 	db	115
 21229   00FC65  75                 	db	117
 21230   00FC66  6D                 	db	109
 21231   00FC67  20                 	db	32
 21232   00FC68  65                 	db	101
 21233   00FC69  72                 	db	114
 21234   00FC6A  72                 	db	114
 21235   00FC6B  6F                 	db	111
 21236   00FC6C  72                 	db	114
 21237   00FC6D  20                 	db	32
 21238   00FC6E  25                 	db	37
 21239   00FC6F  64                 	db	100
 21240   00FC70  20                 	db	32
 21241   00FC71  20                 	db	32
 21242   00FC72  46                 	db	70
 21243   00FC73  47                 	db	71
 21244   00FC74  42                 	db	66
 21245   00FC75  40                 	db	64
 21246   00FC76  4D                 	db	77
 21247   00FC77  43                 	db	67
 21248   00FC78  48                 	db	72
 21249   00FC79  50                 	db	80
 21250   00FC7A  20                 	db	32
 21251   00FC7B  25                 	db	37
 21252   00FC7C  73                 	db	115
 21253   00FC7D  00                 	db	0
 21254   00FC7E                     __end_of_msg2:
 21255                           	callstack 0
 21256   00FC7E                     _msg99:
 21257                           	callstack 0
 21258   00FC7E  55                 	db	85
 21259   00FC7F  4E                 	db	78
 21260   00FC80  4B                 	db	75
 21261   00FC81  20                 	db	32
 21262   00FC82  46                 	db	70
 21263   00FC83  4F                 	db	79
 21264   00FC84  52                 	db	82
 21265   00FC85  4D                 	db	77
 21266   00FC86  41                 	db	65
 21267   00FC87  54                 	db	84
 21268   00FC88  20                 	db	32
 21269   00FC89  41                 	db	65
 21270   00FC8A  6C                 	db	108
 21271   00FC8B  6C                 	db	108
 21272   00FC8C  20                 	db	32
 21273   00FC8D  25                 	db	37
 21274   00FC8E  64                 	db	100
 21275   00FC8F  2C                 	db	44
 21276   00FC90  20                 	db	32
 21277   00FC91  52                 	db	82
 21278   00FC92  25                 	db	37
 21279   00FC93  64                 	db	100
 21280   00FC94  20                 	db	32
 21281   00FC95  46                 	db	70
 21282   00FC96  25                 	db	37
 21283   00FC97  64                 	db	100
 21284   00FC98  2C                 	db	44
 21285   00FC99  20                 	db	32
 21286   00FC9A  54                 	db	84
 21287   00FC9B  25                 	db	37
 21288   00FC9C  64                 	db	100
 21289   00FC9D  20                 	db	32
 21290   00FC9E  46                 	db	70
 21291   00FC9F  25                 	db	37
 21292   00FCA0  64                 	db	100
 21293   00FCA1  2C                 	db	44
 21294   00FCA2  20                 	db	32
 21295   00FCA3  43                 	db	67
 21296   00FCA4  25                 	db	37
 21297   00FCA5  64                 	db	100
 21298   00FCA6  20                 	db	32
 21299   00FCA7  46                 	db	70
 21300   00FCA8  47                 	db	71
 21301   00FCA9  42                 	db	66
 21302   00FCAA  40                 	db	64
 21303   00FCAB  4D                 	db	77
 21304   00FCAC  43                 	db	67
 21305   00FCAD  48                 	db	72
 21306   00FCAE  50                 	db	80
 21307   00FCAF  20                 	db	32
 21308   00FCB0  25                 	db	37
 21309   00FCB1  73                 	db	115
 21310   00FCB2  20                 	db	32
 21311   00FCB3  20                 	db	32
 21312   00FCB4  20                 	db	32
 21313   00FCB5  00                 	db	0
 21314   00FCB6                     __end_of_msg99:
 21315                           	callstack 0
 21316   00389D                     _IVTADL         set	14493
 21317   00389E                     _IVTADH         set	14494
 21318   00389F                     _IVTADU         set	14495
 21319   0039A4                     _PIR4bits       set	14756
 21320   003998                     _PIE8bits       set	14744
 21321   0039A8                     _PIR8bits       set	14760
 21322   0039E6                     _NVMCON2        set	14822
 21323   0039E3                     _NVMDAT         set	14819
 21324   0039E0                     _NVMADRL        set	14816
 21325   0039E1                     _NVMADRH        set	14817
 21326   0039E5                     _NVMCON1bits    set	14821
 21327   0039F7                     _SCANPR         set	14839
 21328   0039F4                     _DMA2PR         set	14836
 21329   0039F3                     _DMA1PR         set	14835
 21330   0039F2                     _MAINPR         set	14834
 21331   0039F1                     _ISRPR          set	14833
 21332   003992                     _PIE2bits       set	14738
 21333   0039A2                     _PIR2bits       set	14754
 21334   003999                     _PIE9bits       set	14745
 21335   0039A9                     _PIR9bits       set	14761
 21336   003996                     _PIE6bits       set	14742
 21337   003993                     _PIE3bits       set	14739
 21338   0039C7                     _PMD7           set	14791
 21339   0039C6                     _PMD6           set	14790
 21340   0039C5                     _PMD5           set	14789
 21341   0039C4                     _PMD4           set	14788
 21342   0039C3                     _PMD3           set	14787
 21343   0039C2                     _PMD2           set	14786
 21344   0039C1                     _PMD1           set	14785
 21345   0039C0                     _PMD0           set	14784
 21346   0039DE                     _OSCTUNE        set	14814
 21347   0039DF                     _OSCFRQ         set	14815
 21348   0039DD                     _OSCEN          set	14813
 21349   0039DB                     _OSCCON3        set	14811
 21350   0039D9                     _OSCCON1        set	14809
 21351   003988                     _IPR8bits       set	14728
 21352   003989                     _IPR9bits       set	14729
 21353   003987                     _IPR7bits       set	14727
 21354   003985                     _IPR5bits       set	14725
 21355   003981                     _IPR1bits       set	14721
 21356   003983                     _IPR3bits       set	14723
 21357   003986                     _IPR6bits       set	14726
 21358   003982                     _IPR2bits       set	14722
 21359   003997                     _PIE7bits       set	14743
 21360   003995                     _PIE5bits       set	14741
 21361   003991                     _PIE1bits       set	14737
 21362   0039A7                     _PIR7bits       set	14759
 21363   0039A5                     _PIR5bits       set	14757
 21364   0039A1                     _PIR1bits       set	14753
 21365   01CEE0                     _PLLR           set	118496
 21366   003ADF                     _SPI1SDIPPS     set	15071
 21367   003A16                     _RC6PPS         set	14870
 21368   003A15                     _RC5PPS         set	14869
 21369   003A19                     _RD1PPS         set	14873
 21370   003A06                     _RA6PPS         set	14854
 21371   003A05                     _RA5PPS         set	14853
 21372   003A04                     _RA4PPS         set	14852
 21373   003ADE                     _SPI1SCKPPS     set	15070
 21374   003AE5                     _U1RXPPS        set	15077
 21375   003AC1                     _INT1PPS        set	15041
 21376   003AC2                     _INT2PPS        set	15042
 21377   003AC0                     _INT0PPS        set	15040
 21378   003A13                     _RC3PPS         set	14867
 21379   003A0E                     _RB6PPS         set	14862
 21380   003AE8                     _U2RXPPS        set	15080
 21381   003A93                     _SLRCONF        set	14995
 21382   003A83                     _SLRCONE        set	14979
 21383   003A73                     _SLRCOND        set	14963
 21384   003A63                     _SLRCONC        set	14947
 21385   003A53                     _SLRCONB        set	14931
 21386   003A43                     _SLRCONA        set	14915
 21387   003A72                     _ODCOND         set	14962
 21388   003A62                     _ODCONC         set	14946
 21389   003A52                     _ODCONB         set	14930
 21390   003A42                     _ODCONA         set	14914
 21391   003A92                     _ODCONF         set	14994
 21392   003A82                     _ODCONE         set	14978
 21393   003A61                     _WPUC           set	14945
 21394   003A41                     _WPUA           set	14913
 21395   003A51                     _WPUB           set	14929
 21396   003A81                     _WPUE           set	14977
 21397   003A91                     _WPUF           set	14993
 21398   003A71                     _WPUD           set	14961
 21399   003A40                     _ANSELA         set	14912
 21400   003A90                     _ANSELF         set	14992
 21401   003A80                     _ANSELE         set	14976
 21402   003A50                     _ANSELB         set	14928
 21403   003A60                     _ANSELC         set	14944
 21404   003A70                     _ANSELD         set	14960
 21405   003BD9                     _DMA2SSA        set	15321
 21406   003BF9                     _DMA1SSA        set	15353
 21407   003BCE                     _DMA2DSZ        set	15310
 21408   003BD7                     _DMA2SSZ        set	15319
 21409   003BD0                     _DMA2DSA        set	15312
 21410   003BEE                     _DMA1DSZ        set	15342
 21411   003BF7                     _DMA1SSZ        set	15351
 21412   003BF0                     _DMA1DSA        set	15344
 21413   003BFC                     _DMA1CON0bits   set	15356
 21414   003BFD                     _DMA1CON1bits   set	15357
 21415   003BDC                     _DMA2CON0       set	15324
 21416   003BDE                     _DMA2AIRQ       set	15326
 21417   003BDF                     _DMA2SIRQ       set	15327
 21418   003BDD                     _DMA2CON1       set	15325
 21419   003BFC                     _DMA1CON0       set	15356
 21420   003BFE                     _DMA1AIRQ       set	15358
 21421   003BFF                     _DMA1SIRQ       set	15359
 21422   003BFD                     _DMA1CON1       set	15357
 21423   003C74                     _CLC1CON        set	15476
 21424   003C7D                     _CLC1GLS3       set	15485
 21425   003C7C                     _CLC1GLS2       set	15484
 21426   003C7B                     _CLC1GLS1       set	15483
 21427   003C7A                     _CLC1GLS0       set	15482
 21428   003C79                     _CLC1SEL3       set	15481
 21429   003C78                     _CLC1SEL2       set	15480
 21430   003C77                     _CLC1SEL1       set	15479
 21431   003C76                     _CLC1SEL0       set	15478
 21432   003C75                     _CLC1POL        set	15477
 21433   003CE5                     _CLKRCON        set	15589
 21434   003CE6                     _CLKRCLK        set	15590
 21435   003CFD                     _MD1CARL        set	15613
 21436   003CFE                     _MD1CARH        set	15614
 21437   003CFC                     _MD1SRC         set	15612
 21438   003CFB                     _MD1CON1bits    set	15611
 21439   003CFA                     _MD1CON0bits    set	15610
 21440   003D1A                     _SPI1INTFbits   set	15642
 21441   003D10                     _SPI1RXB        set	15632
 21442   003D11                     _SPI1TXB        set	15633
 21443   003D12                     _SPI1TCNTL      set	15634
 21444   003D14                     _SPI1CON0       set	15636
 21445   003D1C                     _SPI1CLK        set	15644
 21446   003D19                     _SPI1BAUD       set	15641
 21447   003D16                     _SPI1CON2       set	15638
 21448   003D15                     _SPI1CON1       set	15637
 21449   003DD0                     _U2RXB          set	15824
 21450   003DD2                     _U2TXB          set	15826
 21451   003DE2                     _U2ERRIE        set	15842
 21452   003DE1                     _U2ERRIR        set	15841
 21453   003DE0                     _U2UIR          set	15840
 21454   003DDF                     _U2FIFO         set	15839
 21455   003DDE                     _U2BRGH         set	15838
 21456   003DDD                     _U2BRGL         set	15837
 21457   003DDC                     _U2CON2         set	15836
 21458   003DDB                     _U2CON1         set	15835
 21459   003DDA                     _U2CON0         set	15834
 21460   003DD8                     _U2P3L          set	15832
 21461   003DD6                     _U2P2L          set	15830
 21462   003DD4                     _U2P1L          set	15828
 21463   003DE8                     _U1RXB          set	15848
 21464   003DEA                     _U1TXB          set	15850
 21465   003DFA                     _U1ERRIE        set	15866
 21466   003DF9                     _U1ERRIR        set	15865
 21467   003DF8                     _U1UIR          set	15864
 21468   003DF7                     _U1FIFO         set	15863
 21469   003DF6                     _U1BRGH         set	15862
 21470   003DF5                     _U1BRGL         set	15861
 21471   003DF4                     _U1CON2         set	15860
 21472   003DF3                     _U1CON1         set	15859
 21473   003DF2                     _U1CON0         set	15858
 21474   003DF1                     _U1P3H          set	15857
 21475   003DF0                     _U1P3L          set	15856
 21476   003DEF                     _U1P2H          set	15855
 21477   003DEE                     _U1P2L          set	15854
 21478   003DED                     _U1P1H          set	15853
 21479   003DEC                     _U1P1L          set	15852
 21480   003EF8                     _ADCON0         set	16120
 21481   003EFF                     _ADCLK          set	16127
 21482   003EFE                     _ADACT          set	16126
 21483   003EFD                     _ADREF          set	16125
 21484   003EFC                     _ADSTAT         set	16124
 21485   003EFB                     _ADCON3         set	16123
 21486   003EFA                     _ADCON2         set	16122
 21487   003EF9                     _ADCON1         set	16121
 21488   003EF7                     _ADPREH         set	16119
 21489   003EF6                     _ADPREL         set	16118
 21490   003EF5                     _ADCAP          set	16117
 21491   003EF4                     _ADACQH         set	16116
 21492   003EF3                     _ADACQL         set	16115
 21493   003EF1                     _ADPCH          set	16113
 21494   003EEC                     _ADRPT          set	16108
 21495   003EEA                     _ADACCU         set	16106
 21496   003EE5                     _ADSTPTH        set	16101
 21497   003EE4                     _ADSTPTL        set	16100
 21498   003EE1                     _ADUTHH         set	16097
 21499   003EE0                     _ADUTHL         set	16096
 21500   003EDF                     _ADLTHH         set	16095
 21501   003EDE                     _ADLTHL         set	16094
 21502   003F5F                     _CCPTMRS1bits   set	16223
 21503   003F3E                     _NCO1CONbits    set	16190
 21504   003F3B                     _NCO1INCL       set	16187
 21505   003F3C                     _NCO1INCH       set	16188
 21506   003F3D                     _NCO1INCU       set	16189
 21507   003F38                     _NCO1ACCL       set	16184
 21508   003F39                     _NCO1ACCH       set	16185
 21509   003F3A                     _NCO1ACCU       set	16186
 21510   003F3F                     _NCO1CLK        set	16191
 21511   003F3E                     _NCO1CON        set	16190
 21512   003FBB                     _LATBbits       set	16315
 21513   003FBC                     _LATCbits       set	16316
 21514   003FBF                     _LATFbits       set	16319
 21515   003FBD                     _LATDbits       set	16317
 21516   003FCB                     _PORTBbits      set	16331
 21517   003FAC                     _T2CON          set	16300
 21518   003FAA                     _T2TMR          set	16298
 21519   003FAB                     _T2PR           set	16299
 21520   003FAF                     _T2RST          set	16303
 21521   003FAD                     _T2HLT          set	16301
 21522   003FAE                     _T2CLKCON       set	16302
 21523   003F60                     _PWM8DCL        set	16224
 21524   003F61                     _PWM8DCH        set	16225
 21525   003F62                     _PWM8CON        set	16226
 21526   003F9A                     _T5CONbits      set	16282
 21527   003F9A                     _T5CON          set	16282
 21528   003F98                     _TMR5L          set	16280
 21529   003F99                     _TMR5H          set	16281
 21530   003F9D                     _T5CLK          set	16285
 21531   003F9C                     _T5GATE         set	16284
 21532   003F9B                     _T5GCON         set	16283
 21533   003F94                     _T6CON          set	16276
 21534   003F92                     _T6TMR          set	16274
 21535   003F93                     _T6PR           set	16275
 21536   003F97                     _T6RST          set	16279
 21537   003F95                     _T6HLT          set	16277
 21538   003F96                     _T6CLKCON       set	16278
 21539   003FBE                     _LATEbits       set	16318
 21540   003FC5                     _TRISD          set	16325
 21541   003FC4                     _TRISC          set	16324
 21542   003FC3                     _TRISB          set	16323
 21543   003FC2                     _TRISA          set	16322
 21544   003FC7                     _TRISF          set	16327
 21545   003FC6                     _TRISE          set	16326
 21546   003FBC                     _LATC           set	16316
 21547   003FBB                     _LATB           set	16315
 21548   003FBF                     _LATF           set	16319
 21549   003FBA                     _LATA           set	16314
 21550   003FBD                     _LATD           set	16317
 21551   003FBE                     _LATE           set	16318
 21552   003FD4                     _IVTLOCKbits    set	16340
 21553   003FD4                     _IVTLOCK        set	16340
 21554   003FD2                     _INTCON0bits    set	16338
 21555   01FE97                     _GIE            set	130711
 21556   00FCB6                     STR_25:
 21557   00FCB6  52                 	db	82	;'R'
 21558   00FCB7  25                 	db	37
 21559   00FCB8  64                 	db	100	;'d'
 21560   00FCB9  20                 	db	32
 21561   00FCBA  25                 	db	37
 21562   00FCBB  64                 	db	100	;'d'
 21563   00FCBC  2C                 	db	44
 21564   00FCBD  20                 	db	32
 21565   00FCBE  54                 	db	84	;'T'
 21566   00FCBF  25                 	db	37
 21567   00FCC0  64                 	db	100	;'d'
 21568   00FCC1  20                 	db	32
 21569   00FCC2  25                 	db	37
 21570   00FCC3  64                 	db	100	;'d'
 21571   00FCC4  20                 	db	32
 21572   00FCC5  43                 	db	67	;'C'
 21573   00FCC6  25                 	db	37
 21574   00FCC7  64                 	db	100	;'d'
 21575   00FCC8  20                 	db	32
 21576   00FCC9  25                 	db	37
 21577   00FCCA  64                 	db	100	;'d'
 21578   00FCCB  20                 	db	32
 21579   00FCCC  20                 	db	32
 21580   00FCCD  20                 	db	32
 21581   00FCCE  20                 	db	32
 21582   00FCCF  20                 	db	32
 21583   00FCD0  20                 	db	32
 21584   00FCD1  23                 	db	35
 21585   00FCD2  00                 	db	0
 21586   00FCD3                     STR_61:
 21587   00FCD3  20                 	db	32
 21588   00FCD4  54                 	db	84	;'T'
 21589   00FCD5  65                 	db	101	;'e'
 21590   00FCD6  72                 	db	114	;'r'
 21591   00FCD7  6D                 	db	109	;'m'
 21592   00FCD8  69                 	db	105	;'i'
 21593   00FCD9  6E                 	db	110	;'n'
 21594   00FCDA  61                 	db	97	;'a'
 21595   00FCDB  6C                 	db	108	;'l'
 21596   00FCDC  20                 	db	32
 21597   00FCDD  25                 	db	37
 21598   00FCDE  64                 	db	100	;'d'
 21599   00FCDF  20                 	db	32
 21600   00FCE0  20                 	db	32
 21601   00FCE1  20                 	db	32
 21602   00FCE2  20                 	db	32
 21603   00FCE3  20                 	db	32
 21604   00FCE4  20                 	db	32
 21605   00FCE5  20                 	db	32
 21606   00FCE6  20                 	db	32
 21607   00FCE7  20                 	db	32
 21608   00FCE8  20                 	db	32
 21609   00FCE9  20                 	db	32
 21610   00FCEA  20                 	db	32
 21611   00FCEB  20                 	db	32
 21612   00FCEC  00                 	db	0
 21613   00FCED                     STR_35:
 21614   00FCED  20                 	db	32
 21615   00FCEE  44                 	db	68	;'D'
 21616   00FCEF  65                 	db	101	;'e'
 21617   00FCF0  62                 	db	98	;'b'
 21618   00FCF1  75                 	db	117	;'u'
 21619   00FCF2  67                 	db	103	;'g'
 21620   00FCF3  20                 	db	32
 21621   00FCF4  54                 	db	84	;'T'
 21622   00FCF5  6F                 	db	111	;'o'
 21623   00FCF6  67                 	db	103	;'g'
 21624   00FCF7  67                 	db	103	;'g'
 21625   00FCF8  6C                 	db	108	;'l'
 21626   00FCF9  65                 	db	101	;'e'
 21627   00FCFA  20                 	db	32
 21628   00FCFB  20                 	db	32
 21629   00FCFC  20                 	db	32
 21630   00FCFD  20                 	db	32
 21631   00FCFE  20                 	db	32
 21632   00FCFF  20                 	db	32
 21633   00FD00  20                 	db	32
 21634   00FD01  20                 	db	32
 21635   00FD02  20                 	db	32
 21636   00FD03  20                 	db	32
 21637   00FD04  20                 	db	32
 21638   00FD05  20                 	db	32
 21639   00FD06  00                 	db	0
 21640   00FD07                     STR_34:
 21641   00FD07  20                 	db	32
 21642   00FD08  4C                 	db	76	;'L'
 21643   00FD09  6F                 	db	111	;'o'
 21644   00FD0A  67                 	db	103	;'g'
 21645   00FD0B  20                 	db	32
 21646   00FD0C  66                 	db	102	;'f'
 21647   00FD0D  69                 	db	105	;'i'
 21648   00FD0E  6C                 	db	108	;'l'
 21649   00FD0F  65                 	db	101	;'e'
 21650   00FD10  20                 	db	32
 21651   00FD11  72                 	db	114	;'r'
 21652   00FD12  65                 	db	101	;'e'
 21653   00FD13  73                 	db	115	;'s'
 21654   00FD14  65                 	db	101	;'e'
 21655   00FD15  74                 	db	116	;'t'
 21656   00FD16  20                 	db	32
 21657   00FD17  20                 	db	32
 21658   00FD18  20                 	db	32
 21659   00FD19  20                 	db	32
 21660   00FD1A  20                 	db	32
 21661   00FD1B  20                 	db	32
 21662   00FD1C  20                 	db	32
 21663   00FD1D  20                 	db	32
 21664   00FD1E  20                 	db	32
 21665   00FD1F  20                 	db	32
 21666   00FD20  00                 	db	0
 21667   00FD21                     STR_20:
 21668   00FD21  4C                 	db	76	;'L'
 21669   00FD22  4F                 	db	79	;'O'
 21670   00FD23  47                 	db	71	;'G'
 21671   00FD24  3A                 	db	58	;':'
 21672   00FD25  20                 	db	32
 21673   00FD26  55                 	db	85	;'U'
 21674   00FD27  25                 	db	37
 21675   00FD28  64                 	db	100	;'d'
 21676   00FD29  20                 	db	32
 21677   00FD2A  47                 	db	71	;'G'
 21678   00FD2B  25                 	db	37
 21679   00FD2C  64                 	db	100	;'d'
 21680   00FD2D  20                 	db	32
 21681   00FD2E  25                 	db	37
 21682   00FD2F  64                 	db	100	;'d'
 21683   00FD30  20                 	db	32
 21684   00FD31  25                 	db	37
 21685   00FD32  64                 	db	100	;'d'
 21686   00FD33  20                 	db	32
 21687   00FD34  20                 	db	32
 21688   00FD35  20                 	db	32
 21689   00FD36  20                 	db	32
 21690   00FD37  20                 	db	32
 21691   00FD38  20                 	db	32
 21692   00FD39  23                 	db	35
 21693   00FD3A  00                 	db	0
 21694   00FD3B                     STR_62:
 21695   00FD3B  20                 	db	32
 21696   00FD3C  43                 	db	67	;'C'
 21697   00FD3D  4D                 	db	77	;'M'
 21698   00FD3E  44                 	db	68	;'D'
 21699   00FD3F  20                 	db	32
 21700   00FD40  25                 	db	37
 21701   00FD41  63                 	db	99	;'c'
 21702   00FD42  20                 	db	32
 21703   00FD43  25                 	db	37
 21704   00FD44  63                 	db	99	;'c'
 21705   00FD45  20                 	db	32
 21706   00FD46  4C                 	db	76	;'L'
 21707   00FD47  65                 	db	101	;'e'
 21708   00FD48  6E                 	db	110	;'n'
 21709   00FD49  20                 	db	32
 21710   00FD4A  25                 	db	37
 21711   00FD4B  64                 	db	100	;'d'
 21712   00FD4C  20                 	db	32
 21713   00FD4D  20                 	db	32
 21714   00FD4E  20                 	db	32
 21715   00FD4F  20                 	db	32
 21716   00FD50  20                 	db	32
 21717   00FD51  20                 	db	32
 21718   00FD52  20                 	db	32
 21719   00FD53  00                 	db	0
 21720   00FD54                     STR_46:
 21721   00FD54  20                 	db	32
 21722   00FD55  4D                 	db	77	;'M'
 21723   00FD56  65                 	db	101	;'e'
 21724   00FD57  73                 	db	115	;'s'
 21725   00FD58  67                 	db	103	;'g'
 21726   00FD59  20                 	db	32
 21727   00FD5A  25                 	db	37
 21728   00FD5B  64                 	db	100	;'d'
 21729   00FD5C  20                 	db	32
 21730   00FD5D  53                 	db	83	;'S'
 21731   00FD5E  74                 	db	116	;'t'
 21732   00FD5F  61                 	db	97	;'a'
 21733   00FD60  63                 	db	99	;'c'
 21734   00FD61  6B                 	db	107	;'k'
 21735   00FD62  20                 	db	32
 21736   00FD63  25                 	db	37
 21737   00FD64  64                 	db	100	;'d'
 21738   00FD65  20                 	db	32
 21739   00FD66  20                 	db	32
 21740   00FD67  20                 	db	32
 21741   00FD68  20                 	db	32
 21742   00FD69  20                 	db	32
 21743   00FD6A  20                 	db	32
 21744   00FD6B  00                 	db	0
 21745   00FD6C                     STR_57:
 21746   00FD6C  20                 	db	32
 21747   00FD6D  4C                 	db	76	;'L'
 21748   00FD6E  6F                 	db	111	;'o'
 21749   00FD6F  61                 	db	97	;'a'
 21750   00FD70  64                 	db	100	;'d'
 21751   00FD71  2D                 	db	45
 21752   00FD72  6C                 	db	108	;'l'
 21753   00FD73  6F                 	db	111	;'o'
 21754   00FD74  63                 	db	99	;'c'
 21755   00FD75  6B                 	db	107	;'k'
 21756   00FD76  20                 	db	32
 21757   00FD77  6E                 	db	110	;'n'
 21758   00FD78  75                 	db	117	;'u'
 21759   00FD79  6D                 	db	109	;'m'
 21760   00FD7A  20                 	db	32
 21761   00FD7B  25                 	db	37
 21762   00FD7C  64                 	db	100	;'d'
 21763   00FD7D  20                 	db	32
 21764   00FD7E  20                 	db	32
 21765   00FD7F  20                 	db	32
 21766   00FD80  20                 	db	32
 21767   00FD81  20                 	db	32
 21768   00FD82  20                 	db	32
 21769   00FD83  00                 	db	0
 21770   00FD84                     STR_14:
 21771   00FD84  20                 	db	32
 21772   00FD85  53                 	db	83	;'S'
 21773   00FD86  25                 	db	37
 21774   00FD87  64                 	db	100	;'d'
 21775   00FD88  46                 	db	70	;'F'
 21776   00FD89  25                 	db	37
 21777   00FD8A  64                 	db	100	;'d'
 21778   00FD8B  20                 	db	32
 21779   00FD8C  23                 	db	35
 21780   00FD8D  20                 	db	32
 21781   00FD8E  4F                 	db	79	;'O'
 21782   00FD8F  4B                 	db	75	;'K'
 21783   00FD90  20                 	db	32
 21784   00FD91  25                 	db	37
 21785   00FD92  64                 	db	100	;'d'
 21786   00FD93  20                 	db	32
 21787   00FD94  20                 	db	32
 21788   00FD95  20                 	db	32
 21789   00FD96  20                 	db	32
 21790   00FD97  20                 	db	32
 21791   00FD98  20                 	db	32
 21792   00FD99  20                 	db	32
 21793   00FD9A  20                 	db	32
 21794   00FD9B  00                 	db	0
 21795   00FD9C                     STR_13:
 21796   00FD9C  20                 	db	32
 21797   00FD9D  53                 	db	83	;'S'
 21798   00FD9E  25                 	db	37
 21799   00FD9F  64                 	db	100	;'d'
 21800   00FDA0  46                 	db	70	;'F'
 21801   00FDA1  25                 	db	37
 21802   00FDA2  64                 	db	100	;'d'
 21803   00FDA3  20                 	db	32
 21804   00FDA4  23                 	db	35
 21805   00FDA5  20                 	db	32
 21806   00FDA6  4F                 	db	79	;'O'
 21807   00FDA7  4B                 	db	75	;'K'
 21808   00FDA8  51                 	db	81	;'Q'
 21809   00FDA9  25                 	db	37
 21810   00FDAA  64                 	db	100	;'d'
 21811   00FDAB  20                 	db	32
 21812   00FDAC  20                 	db	32
 21813   00FDAD  20                 	db	32
 21814   00FDAE  20                 	db	32
 21815   00FDAF  20                 	db	32
 21816   00FDB0  20                 	db	32
 21817   00FDB1  20                 	db	32
 21818   00FDB2  20                 	db	32
 21819   00FDB3  00                 	db	0
 21820   00FDB4                     STR_59:
 21821   00FDB4  20                 	db	32
 21822   00FDB5  44                 	db	68	;'D'
 21823   00FDB6  69                 	db	105	;'i'
 21824   00FDB7  73                 	db	115	;'s'
 21825   00FDB8  70                 	db	112	;'p'
 21826   00FDB9  6C                 	db	108	;'l'
 21827   00FDBA  61                 	db	97	;'a'
 21828   00FDBB  79                 	db	121	;'y'
 21829   00FDBC  20                 	db	32
 21830   00FDBD  6E                 	db	110	;'n'
 21831   00FDBE  75                 	db	117	;'u'
 21832   00FDBF  6D                 	db	109	;'m'
 21833   00FDC0  20                 	db	32
 21834   00FDC1  25                 	db	37
 21835   00FDC2  64                 	db	100	;'d'
 21836   00FDC3  20                 	db	32
 21837   00FDC4  20                 	db	32
 21838   00FDC5  20                 	db	32
 21839   00FDC6  20                 	db	32
 21840   00FDC7  20                 	db	32
 21841   00FDC8  20                 	db	32
 21842   00FDC9  00                 	db	0
 21843   00FDCA                     STR_47:
 21844   00FDCA  20                 	db	32
 21845   00FDCB  53                 	db	83	;'S'
 21846   00FDCC  25                 	db	37
 21847   00FDCD  64                 	db	100	;'d'
 21848   00FDCE  46                 	db	70	;'F'
 21849   00FDCF  25                 	db	37
 21850   00FDD0  64                 	db	100	;'d'
 21851   00FDD1  20                 	db	32
 21852   00FDD2  6C                 	db	108	;'l'
 21853   00FDD3  6F                 	db	111	;'o'
 21854   00FDD4  67                 	db	103	;'g'
 21855   00FDD5  20                 	db	32
 21856   00FDD6  20                 	db	32
 21857   00FDD7  20                 	db	32
 21858   00FDD8  20                 	db	32
 21859   00FDD9  25                 	db	37
 21860   00FDDA  64                 	db	100	;'d'
 21861   00FDDB  20                 	db	32
 21862   00FDDC  20                 	db	32
 21863   00FDDD  20                 	db	32
 21864   00FDDE  20                 	db	32
 21865   00FDDF  00                 	db	0
 21866   00FDE0                     STR_58:
 21867   00FDE0  20                 	db	32
 21868   00FDE1  53                 	db	83	;'S'
 21869   00FDE2  45                 	db	69	;'E'
 21870   00FDE3  51                 	db	81	;'Q'
 21871   00FDE4  55                 	db	85	;'U'
 21872   00FDE5  45                 	db	69	;'E'
 21873   00FDE6  4E                 	db	78	;'N'
 21874   00FDE7  43                 	db	67	;'C'
 21875   00FDE8  45                 	db	69	;'E'
 21876   00FDE9  20                 	db	32
 21877   00FDEA  25                 	db	37
 21878   00FDEB  64                 	db	100	;'d'
 21879   00FDEC  20                 	db	32
 21880   00FDED  20                 	db	32
 21881   00FDEE  20                 	db	32
 21882   00FDEF  20                 	db	32
 21883   00FDF0  20                 	db	32
 21884   00FDF1  20                 	db	32
 21885   00FDF2  20                 	db	32
 21886   00FDF3  20                 	db	32
 21887   00FDF4  00                 	db	0
 21888   00FDF5                     STR_36:
 21889   00FDF5  53                 	db	83	;'S'
 21890   00FDF6  61                 	db	97	;'a'
 21891   00FDF7  76                 	db	118	;'v'
 21892   00FDF8  65                 	db	101	;'e'
 21893   00FDF9  64                 	db	100	;'d'
 21894   00FDFA  20                 	db	32
 21895   00FDFB  53                 	db	83	;'S'
 21896   00FDFC  25                 	db	37
 21897   00FDFD  64                 	db	100	;'d'
 21898   00FDFE  46                 	db	70	;'F'
 21899   00FDFF  25                 	db	37
 21900   00FE00  64                 	db	100	;'d'
 21901   00FE01  20                 	db	32
 21902   00FE02  25                 	db	37
 21903   00FE03  64                 	db	100	;'d'
 21904   00FE04  20                 	db	32
 21905   00FE05  20                 	db	32
 21906   00FE06  20                 	db	32
 21907   00FE07  20                 	db	32
 21908   00FE08  20                 	db	32
 21909   00FE09  00                 	db	0
 21910   00FE0A                     STR_12:
 21911   00FE0A  20                 	db	32
 21912   00FE0B  53                 	db	83	;'S'
 21913   00FE0C  25                 	db	37
 21914   00FE0D  64                 	db	100	;'d'
 21915   00FE0E  46                 	db	70	;'F'
 21916   00FE0F  25                 	db	37
 21917   00FE10  64                 	db	100	;'d'
 21918   00FE11  20                 	db	32
 21919   00FE12  23                 	db	35
 21920   00FE13  20                 	db	32
 21921   00FE14  20                 	db	32
 21922   00FE15  20                 	db	32
 21923   00FE16  20                 	db	32
 21924   00FE17  20                 	db	32
 21925   00FE18  20                 	db	32
 21926   00FE19  20                 	db	32
 21927   00FE1A  20                 	db	32
 21928   00FE1B  20                 	db	32
 21929   00FE1C  20                 	db	32
 21930   00FE1D  20                 	db	32
 21931   00FE1E  00                 	db	0
 21932   00FE1F                     STR_11:
 21933   00FE1F  20                 	db	32
 21934   00FE20  53                 	db	83	;'S'
 21935   00FE21  25                 	db	37
 21936   00FE22  64                 	db	100	;'d'
 21937   00FE23  46                 	db	70	;'F'
 21938   00FE24  25                 	db	37
 21939   00FE25  64                 	db	100	;'d'
 21940   00FE26  20                 	db	32
 21941   00FE27  45                 	db	69	;'E'
 21942   00FE28  72                 	db	114	;'r'
 21943   00FE29  72                 	db	114	;'r'
 21944   00FE2A  20                 	db	32
 21945   00FE2B  20                 	db	32
 21946   00FE2C  20                 	db	32
 21947   00FE2D  20                 	db	32
 21948   00FE2E  20                 	db	32
 21949   00FE2F  20                 	db	32
 21950   00FE30  20                 	db	32
 21951   00FE31  20                 	db	32
 21952   00FE32  20                 	db	32
 21953   00FE33  00                 	db	0
 21954   00FE34                     STR_23:
 21955   00FE34  45                 	db	69	;'E'
 21956   00FE35  71                 	db	113	;'q'
 21957   00FE36  75                 	db	117	;'u'
 21958   00FE37  69                 	db	105	;'i'
 21959   00FE38  70                 	db	112	;'p'
 21960   00FE39  20                 	db	32
 21961   00FE3A  74                 	db	116	;'t'
 21962   00FE3B  79                 	db	121	;'y'
 21963   00FE3C  70                 	db	112	;'p'
 21964   00FE3D  65                 	db	101	;'e'
 21965   00FE3E  20                 	db	32
 21966   00FE3F  25                 	db	37
 21967   00FE40  64                 	db	100	;'d'
 21968   00FE41  20                 	db	32
 21969   00FE42  20                 	db	32
 21970   00FE43  20                 	db	32
 21971   00FE44  20                 	db	32
 21972   00FE45  20                 	db	32
 21973   00FE46  20                 	db	32
 21974   00FE47  20                 	db	32
 21975   00FE48  00                 	db	0
 21976   00FE49                     STR_16:
 21977   00FE49  48                 	db	72	;'H'
 21978   00FE4A  32                 	db	50	;'2'
 21979   00FE4B  35                 	db	53	;'5'
 21980   00FE4C  34                 	db	52	;'4'
 21981   00FE4D  20                 	db	32
 21982   00FE4E  25                 	db	37
 21983   00FE4F  64                 	db	100	;'d'
 21984   00FE50  2C                 	db	44
 21985   00FE51  20                 	db	32
 21986   00FE52  54                 	db	84	;'T'
 21987   00FE53  25                 	db	37
 21988   00FE54  6C                 	db	108	;'l'
 21989   00FE55  64                 	db	100	;'d'
 21990   00FE56  20                 	db	32
 21991   00FE57  20                 	db	32
 21992   00FE58  20                 	db	32
 21993   00FE59  20                 	db	32
 21994   00FE5A  20                 	db	32
 21995   00FE5B  20                 	db	32
 21996   00FE5C  20                 	db	32
 21997   00FE5D  00                 	db	0
 21998   00FE5E                     STR_10:
 21999   00FE5E  48                 	db	72	;'H'
 22000   00FE5F  4F                 	db	79	;'O'
 22001   00FE60  53                 	db	83	;'S'
 22002   00FE61  54                 	db	84	;'T'
 22003   00FE62  3A                 	db	58	;':'
 22004   00FE63  20                 	db	32
 22005   00FE64  25                 	db	37
 22006   00FE65  6C                 	db	108	;'l'
 22007   00FE66  64                 	db	100	;'d'
 22008   00FE67  20                 	db	32
 22009   00FE68  47                 	db	71	;'G'
 22010   00FE69  25                 	db	37
 22011   00FE6A  64                 	db	100	;'d'
 22012   00FE6B  20                 	db	32
 22013   00FE6C  20                 	db	32
 22014   00FE6D  20                 	db	32
 22015   00FE6E  20                 	db	32
 22016   00FE6F  20                 	db	32
 22017   00FE70  20                 	db	32
 22018   00FE71  23                 	db	35
 22019   00FE72  00                 	db	0
 22020   00FE73                     STR_50:
 22021   00FE73  20                 	db	32
 22022   00FE74  53                 	db	83	;'S'
 22023   00FE75  32                 	db	50	;'2'
 22024   00FE76  46                 	db	70	;'F'
 22025   00FE77  34                 	db	52	;'4'
 22026   00FE78  31                 	db	49	;'1'
 22027   00FE79  20                 	db	32
 22028   00FE7A  23                 	db	35
 22029   00FE7B  25                 	db	37
 22030   00FE7C  63                 	db	99	;'c'
 22031   00FE7D  20                 	db	32
 22032   00FE7E  20                 	db	32
 22033   00FE7F  20                 	db	32
 22034   00FE80  20                 	db	32
 22035   00FE81  20                 	db	32
 22036   00FE82  20                 	db	32
 22037   00FE83  20                 	db	32
 22038   00FE84  20                 	db	32
 22039   00FE85  20                 	db	32
 22040   00FE86  00                 	db	0
 22041   00FE87                     STR_48:
 22042   00FE87  20                 	db	32
 22043   00FE88  53                 	db	83	;'S'
 22044   00FE89  74                 	db	116	;'t'
 22045   00FE8A  6F                 	db	111	;'o'
 22046   00FE8B  72                 	db	114	;'r'
 22047   00FE8C  65                 	db	101	;'e'
 22048   00FE8D  64                 	db	100	;'d'
 22049   00FE8E  20                 	db	32
 22050   00FE8F  23                 	db	35
 22051   00FE90  25                 	db	37
 22052   00FE91  64                 	db	100	;'d'
 22053   00FE92  20                 	db	32
 22054   00FE93  20                 	db	32
 22055   00FE94  20                 	db	32
 22056   00FE95  20                 	db	32
 22057   00FE96  20                 	db	32
 22058   00FE97  20                 	db	32
 22059   00FE98  20                 	db	32
 22060   00FE99  20                 	db	32
 22061   00FE9A  00                 	db	0
 22062   00FE9B                     STR_33:
 22063   00FE9B  20                 	db	32
 22064   00FE9C  54                 	db	84	;'T'
 22065   00FE9D  65                 	db	101	;'e'
 22066   00FE9E  72                 	db	114	;'r'
 22067   00FE9F  6D                 	db	109	;'m'
 22068   00FEA0  69                 	db	105	;'i'
 22069   00FEA1  6E                 	db	110	;'n'
 22070   00FEA2  61                 	db	97	;'a'
 22071   00FEA3  6C                 	db	108	;'l'
 22072   00FEA4  20                 	db	32
 22073   00FEA5  20                 	db	32
 22074   00FEA6  20                 	db	32
 22075   00FEA7  20                 	db	32
 22076   00FEA8  20                 	db	32
 22077   00FEA9  20                 	db	32
 22078   00FEAA  20                 	db	32
 22079   00FEAB  20                 	db	32
 22080   00FEAC  20                 	db	32
 22081   00FEAD  20                 	db	32
 22082   00FEAE  00                 	db	0
 22083   00FEAF                     STR_18:
 22084   00FEAF  50                 	db	80	;'P'
 22085   00FEB0  69                 	db	105	;'i'
 22086   00FEB1  6E                 	db	110	;'n'
 22087   00FEB2  67                 	db	103	;'g'
 22088   00FEB3  20                 	db	32
 22089   00FEB4  50                 	db	80	;'P'
 22090   00FEB5  25                 	db	37
 22091   00FEB6  64                 	db	100	;'d'
 22092   00FEB7  20                 	db	32
 22093   00FEB8  52                 	db	82	;'R'
 22094   00FEB9  54                 	db	84	;'T'
 22095   00FEBA  4F                 	db	79	;'O'
 22096   00FEBB  20                 	db	32
 22097   00FEBC  25                 	db	37
 22098   00FEBD  64                 	db	100	;'d'
 22099   00FEBE  20                 	db	32
 22100   00FEBF  20                 	db	32
 22101   00FEC0  20                 	db	32
 22102   00FEC1  20                 	db	32
 22103   00FEC2  00                 	db	0
 22104   00FEC3                     STR_63:
 22105   00FEC3  20                 	db	32
 22106   00FEC4  20                 	db	32
 22107   00FEC5  20                 	db	32
 22108   00FEC6  20                 	db	32
 22109   00FEC7  20                 	db	32
 22110   00FEC8  20                 	db	32
 22111   00FEC9  20                 	db	32
 22112   00FECA  20                 	db	32
 22113   00FECB  20                 	db	32
 22114   00FECC  20                 	db	32
 22115   00FECD  20                 	db	32
 22116   00FECE  20                 	db	32
 22117   00FECF  20                 	db	32
 22118   00FED0  20                 	db	32
 22119   00FED1  20                 	db	32
 22120   00FED2  20                 	db	32
 22121   00FED3  20                 	db	32
 22122   00FED4  20                 	db	32
 22123   00FED5  00                 	db	0
 22124   00FED6                     STR_39:
 22125   00FED6  48                 	db	72	;'H'
 22126   00FED7  45                 	db	69	;'E'
 22127   00FED8  4C                 	db	76	;'L'
 22128   00FED9  50                 	db	80	;'P'
 22129   00FEDA  20                 	db	32
 22130   00FEDB  25                 	db	37
 22131   00FEDC  73                 	db	115	;'s'
 22132   00FEDD  20                 	db	32
 22133   00FEDE  20                 	db	32
 22134   00FEDF  20                 	db	32
 22135   00FEE0  20                 	db	32
 22136   00FEE1  20                 	db	32
 22137   00FEE2  20                 	db	32
 22138   00FEE3  20                 	db	32
 22139   00FEE4  20                 	db	32
 22140   00FEE5  20                 	db	32
 22141   00FEE6  20                 	db	32
 22142   00FEE7  20                 	db	32
 22143   00FEE8  00                 	db	0
 22144   00FEE9                     STR_56:
 22145   00FEE9  44                 	db	68	;'D'
 22146   00FEEA  49                 	db	73	;'I'
 22147   00FEEB  53                 	db	83	;'S'
 22148   00FEEC  50                 	db	80	;'P'
 22149   00FEED  4C                 	db	76	;'L'
 22150   00FEEE  41                 	db	65	;'A'
 22151   00FEEF  59                 	db	89	;'Y'
 22152   00FEF0  20                 	db	32
 22153   00FEF1  25                 	db	37
 22154   00FEF2  73                 	db	115	;'s'
 22155   00FEF3  20                 	db	32
 22156   00FEF4  20                 	db	32
 22157   00FEF5  20                 	db	32
 22158   00FEF6  20                 	db	32
 22159   00FEF7  20                 	db	32
 22160   00FEF8  20                 	db	32
 22161   00FEF9  20                 	db	32
 22162   00FEFA  20                 	db	32
 22163   00FEFB  00                 	db	0
 22164   00FEFC                     STR_21:
 22165   00FEFC  53                 	db	83	;'S'
 22166   00FEFD  25                 	db	37
 22167   00FEFE  64                 	db	100	;'d'
 22168   00FEFF  46                 	db	70	;'F'
 22169   00FF00  25                 	db	37
 22170   00FF01  64                 	db	100	;'d'
 22171   00FF02  20                 	db	32
 22172   00FF03  23                 	db	35
 22173   00FF04  25                 	db	37
 22174   00FF05  6C                 	db	108	;'l'
 22175   00FF06  64                 	db	100	;'d'
 22176   00FF07  20                 	db	32
 22177   00FF08  20                 	db	32
 22178   00FF09  20                 	db	32
 22179   00FF0A  20                 	db	32
 22180   00FF0B  20                 	db	32
 22181   00FF0C  20                 	db	32
 22182   00FF0D  20                 	db	32
 22183   00FF0E  00                 	db	0
 22184   00FF0F                     STR_53:
 22185   00FF0F  20                 	db	32
 22186   00FF10  4F                 	db	79	;'O'
 22187   00FF11  70                 	db	112	;'p'
 22188   00FF12  65                 	db	101	;'e'
 22189   00FF13  6E                 	db	110	;'n'
 22190   00FF14  20                 	db	32
 22191   00FF15  4C                 	db	76	;'L'
 22192   00FF16  4C                 	db	76	;'L'
 22193   00FF17  20                 	db	32
 22194   00FF18  20                 	db	32
 22195   00FF19  20                 	db	32
 22196   00FF1A  20                 	db	32
 22197   00FF1B  20                 	db	32
 22198   00FF1C  20                 	db	32
 22199   00FF1D  20                 	db	32
 22200   00FF1E  20                 	db	32
 22201   00FF1F  20                 	db	32
 22202   00FF20  00                 	db	0
 22203   00FF21                     STR_51:
 22204   00FF21  20                 	db	32
 22205   00FF22  50                 	db	80	;'P'
 22206   00FF23  75                 	db	117	;'u'
 22207   00FF24  6D                 	db	109	;'m'
 22208   00FF25  70                 	db	112	;'p'
 22209   00FF26  20                 	db	32
 22210   00FF27  4C                 	db	76	;'L'
 22211   00FF28  4C                 	db	76	;'L'
 22212   00FF29  20                 	db	32
 22213   00FF2A  20                 	db	32
 22214   00FF2B  20                 	db	32
 22215   00FF2C  20                 	db	32
 22216   00FF2D  20                 	db	32
 22217   00FF2E  20                 	db	32
 22218   00FF2F  20                 	db	32
 22219   00FF30  20                 	db	32
 22220   00FF31  20                 	db	32
 22221   00FF32  00                 	db	0
 22222   00FF33                     STR_49:
 22223   00FF33  20                 	db	32
 22224   00FF34  52                 	db	82	;'R'
 22225   00FF35  65                 	db	101	;'e'
 22226   00FF36  61                 	db	97	;'a'
 22227   00FF37  64                 	db	100	;'d'
 22228   00FF38  79                 	db	121	;'y'
 22229   00FF39  20                 	db	32
 22230   00FF3A  4C                 	db	76	;'L'
 22231   00FF3B  4C                 	db	76	;'L'
 22232   00FF3C  20                 	db	32
 22233   00FF3D  20                 	db	32
 22234   00FF3E  20                 	db	32
 22235   00FF3F  20                 	db	32
 22236   00FF40  20                 	db	32
 22237   00FF41  20                 	db	32
 22238   00FF42  20                 	db	32
 22239   00FF43  20                 	db	32
 22240   00FF44  00                 	db	0
 22241   00FF45                     STR_15:
 22242   00FF45  45                 	db	69	;'E'
 22243   00FF46  25                 	db	37
 22244   00FF47  64                 	db	100	;'d'
 22245   00FF48  20                 	db	32
 22246   00FF49  41                 	db	65	;'A'
 22247   00FF4A  25                 	db	37
 22248   00FF4B  64                 	db	100	;'d'
 22249   00FF4C  20                 	db	32
 22250   00FF4D  54                 	db	84	;'T'
 22251   00FF4E  25                 	db	37
 22252   00FF4F  64                 	db	100	;'d'
 22253   00FF50  20                 	db	32
 22254   00FF51  47                 	db	71	;'G'
 22255   00FF52  25                 	db	37
 22256   00FF53  64                 	db	100	;'d'
 22257   00FF54  20                 	db	32
 22258   00FF55  23                 	db	35
 22259   00FF56  00                 	db	0
 22260   00FF57                     STR_8:
 22261   00FF57  20                 	db	32
 22262   00FF58  56                 	db	86	;'V'
 22263   00FF59  54                 	db	84	;'T'
 22264   00FF5A  45                 	db	69	;'E'
 22265   00FF5B  52                 	db	82	;'R'
 22266   00FF5C  4D                 	db	77	;'M'
 22267   00FF5D  20                 	db	32
 22268   00FF5E  23                 	db	35
 22269   00FF5F  32                 	db	50	;'2'
 22270   00FF60  20                 	db	32
 22271   00FF61  20                 	db	32
 22272   00FF62  20                 	db	32
 22273   00FF63  20                 	db	32
 22274   00FF64  20                 	db	32
 22275   00FF65  20                 	db	32
 22276   00FF66  20                 	db	32
 22277   00FF67  00                 	db	0
 22278   00FF68                     STR_4:
 22279   00FF68  20                 	db	32
 22280   00FF69  46                 	db	70	;'F'
 22281   00FF6A  47                 	db	71	;'G'
 22282   00FF6B  42                 	db	66	;'B'
 22283   00FF6C  40                 	db	64	;'@'
 22284   00FF6D  4D                 	db	77	;'M'
 22285   00FF6E  43                 	db	67	;'C'
 22286   00FF6F  48                 	db	72	;'H'
 22287   00FF70  50                 	db	80	;'P'
 22288   00FF71  20                 	db	32
 22289   00FF72  46                 	db	70	;'F'
 22290   00FF73  41                 	db	65	;'A'
 22291   00FF74  42                 	db	66	;'B'
 22292   00FF75  34                 	db	52	;'4'
 22293   00FF76  20                 	db	32
 22294   00FF77  20                 	db	32
 22295   00FF78  00                 	db	0
 22296   00FF79                     STR_5:
 22297   00FF79  20                 	db	32
 22298   00FF7A  53                 	db	83	;'S'
 22299   00FF7B  45                 	db	69	;'E'
 22300   00FF7C  51                 	db	81	;'Q'
 22301   00FF7D  55                 	db	85	;'U'
 22302   00FF7E  45                 	db	69	;'E'
 22303   00FF7F  4E                 	db	78	;'N'
 22304   00FF80  43                 	db	67	;'C'
 22305   00FF81  45                 	db	69	;'E'
 22306   00FF82  20                 	db	32
 22307   00FF83  54                 	db	84	;'T'
 22308   00FF84  45                 	db	69	;'E'
 22309   00FF85  53                 	db	83	;'S'
 22310   00FF86  54                 	db	84	;'T'
 22311   00FF87  20                 	db	32
 22312   00FF88  20                 	db	32
 22313   00FF89  00                 	db	0
 22314   00FF8A                     STR_1:
 22315   00FF8A  20                 	db	32
 22316   00FF8B  52                 	db	82	;'R'
 22317   00FF8C  56                 	db	86	;'V'
 22318   00FF8D  49                 	db	73	;'I'
 22319   00FF8E  20                 	db	32
 22320   00FF8F  48                 	db	72	;'H'
 22321   00FF90  4F                 	db	79	;'O'
 22322   00FF91  53                 	db	83	;'S'
 22323   00FF92  54                 	db	84	;'T'
 22324   00FF93  20                 	db	32
 22325   00FF94  54                 	db	84	;'T'
 22326   00FF95  45                 	db	69	;'E'
 22327   00FF96  53                 	db	83	;'S'
 22328   00FF97  54                 	db	84	;'T'
 22329   00FF98  45                 	db	69	;'E'
 22330   00FF99  52                 	db	82	;'R'
 22331   00FF9A  00                 	db	0
 22332   00FF9B                     STR_9:
 22333   00FF9B  48                 	db	72	;'H'
 22334   00FF9C  32                 	db	50	;'2'
 22335   00FF9D  35                 	db	53	;'5'
 22336   00FF9E  34                 	db	52	;'4'
 22337   00FF9F  20                 	db	32
 22338   00FFA0  25                 	db	37
 22339   00FFA1  64                 	db	100	;'d'
 22340   00FFA2  2C                 	db	44
 22341   00FFA3  20                 	db	32
 22342   00FFA4  54                 	db	84	;'T'
 22343   00FFA5  25                 	db	37
 22344   00FFA6  6C                 	db	108	;'l'
 22345   00FFA7  64                 	db	100	;'d'
 22346   00FFA8  20                 	db	32
 22347   00FFA9  20                 	db	32
 22348   00FFAA  00                 	db	0
 22349   00FFAB                     STR_43:
 22350   00FFAB  76                 	db	118	;'v'
 22351   00FFAC  74                 	db	116	;'t'
 22352   00FFAD  65                 	db	101	;'e'
 22353   00FFAE  72                 	db	114	;'r'
 22354   00FFAF  6D                 	db	109	;'m'
 22355   00FFB0  20                 	db	32
 22356   00FFB1  25                 	db	37
 22357   00FFB2  78                 	db	120	;'x'
 22358   00FFB3  3A                 	db	58	;':'
 22359   00FFB4  25                 	db	37
 22360   00FFB5  78                 	db	120	;'x'
 22361   00FFB6  20                 	db	32
 22362   00FFB7  20                 	db	32
 22363   00FFB8  20                 	db	32
 22364   00FFB9  00                 	db	0
 22365   00FFBA                     STR_2:
 22366   00FFBA  20                 	db	32
 22367   00FFBB  56                 	db	86	;'V'
 22368   00FFBC  65                 	db	101	;'e'
 22369   00FFBD  72                 	db	114	;'r'
 22370   00FFBE  73                 	db	115	;'s'
 22371   00FFBF  69                 	db	105	;'i'
 22372   00FFC0  6F                 	db	111	;'o'
 22373   00FFC1  6E                 	db	110	;'n'
 22374   00FFC2  20                 	db	32
 22375   00FFC3  25                 	db	37
 22376   00FFC4  73                 	db	115	;'s'
 22377   00FFC5  20                 	db	32
 22378   00FFC6  20                 	db	32
 22379   00FFC7  20                 	db	32
 22380   00FFC8  00                 	db	0
 22381   00FFC9                     STR_37:
 22382   00FFC9  4A                 	db	74	;'J'
 22383   00FFCA  61                 	db	97	;'a'
 22384   00FFCB  6E                 	db	110	;'n'
 22385   00FFCC  20                 	db	32
 22386   00FFCD  31                 	db	49	;'1'
 22387   00FFCE  34                 	db	52	;'4'
 22388   00FFCF  20                 	db	32
 22389   00FFD0  32                 	db	50	;'2'
 22390   00FFD1  30                 	db	48	;'0'
 22391   00FFD2  32                 	db	50	;'2'
 22392   00FFD3  35                 	db	53	;'5'
 22393   00FFD4  00                 	db	0
 22394   00FFD5                     STR_41:
 22395   00FFD5  25                 	db	37
 22396   00FFD6  73                 	db	115	;'s'
 22397   00FFD7  20                 	db	32
 22398   00FFD8  20                 	db	32
 22399   00FFD9  20                 	db	32
 22400   00FFDA  20                 	db	32
 22401   00FFDB  20                 	db	32
 22402   00FFDC  20                 	db	32
 22403   00FFDD  20                 	db	32
 22404   00FFDE  00                 	db	0
 22405   00FFDF                     STR_38:
 22406   00FFDF  31                 	db	49	;'1'
 22407   00FFE0  36                 	db	54	;'6'
 22408   00FFE1  3A                 	db	58	;':'
 22409   00FFE2  34                 	db	52	;'4'
 22410   00FFE3  34                 	db	52	;'4'
 22411   00FFE4  3A                 	db	58	;':'
 22412   00FFE5  30                 	db	48	;'0'
 22413   00FFE6  33                 	db	51	;'3'
 22414   00FFE7  00                 	db	0
 22415   00FFE8                     STR_69:
 22416   00FFE8  28                 	db	40
 22417   00FFE9  6E                 	db	110	;'n'
 22418   00FFEA  75                 	db	117	;'u'
 22419   00FFEB  6C                 	db	108	;'l'
 22420   00FFEC  6C                 	db	108	;'l'
 22421   00FFED  29                 	db	41
 22422   00FFEE  00                 	db	0
 22423   00FFEF                     STR_3:
 22424   00FFEF  31                 	db	49	;'1'
 22425   00FFF0  2E                 	db	46
 22426   00FFF1  36                 	db	54	;'6'
 22427   00FFF2  35                 	db	53	;'5'
 22428   00FFF3  47                 	db	71	;'G'
 22429   00FFF4  00                 	db	0
 22430   00FFF5                     STR_22:
 22431   00FFF5  4F                 	db	79	;'O'
 22432   00FFF6  4B                 	db	75	;'K'
 22433   00FFF7  20                 	db	32
 22434   00FFF8  00                 	db	0
 22435   00FFF9                     STR_27:
 22436   00FFF9  25                 	db	37
 22437   00FFFA  63                 	db	99	;'c'
 22438   00FFFB  00                 	db	0
 22439   00FFFC                     STR_26:
 22440   00FFFC  25                 	db	37
 22441   00FFFD  73                 	db	115	;'s'
 22442   00FFFE  00                 	db	0
 22443   00FFFC                     STR_67          equ	STR_26
 22444   00FFFC                     STR_68          equ	STR_26
 22445   00FFF9                     STR_28          equ	STR_27
 22446   00FFEF                     STR_7           equ	STR_3
 22447   00FFEF                     STR_29          equ	STR_3
 22448   00FFEF                     STR_30          equ	STR_3
 22449   00FFEF                     STR_31          equ	STR_3
 22450   00FFEF                     STR_32          equ	STR_3
 22451   00FE5E                     STR_17          equ	STR_10
 22452   00FD21                     STR_24          equ	STR_20
 22453   00FFAB                     STR_44          equ	STR_43
 22454   00FFAB                     STR_45          equ	STR_43
 22455   00FFBA                     STR_6           equ	STR_2
 22456   00FFD5                     STR_42          equ	STR_41
 22457   00FE49                     STR_19          equ	STR_16
 22458   00FDE0                     STR_60          equ	STR_58
 22459   00FE73                     STR_52          equ	STR_50
 22460   00FE73                     STR_54          equ	STR_50
 22461   00FED6                     STR_40          equ	STR_39
 22462   00FED6                     STR_55          equ	STR_39
 22463   00FEC3                     STR_64          equ	STR_63
 22464   00FEC3                     STR_65          equ	STR_63
 22465   00FEC3                     STR_66          equ	STR_63
 22466   00FFFF  00                 	db	0	; dummy byte at the end
 22467   00FB2E                     __smallconst    set	__pmediumconst
 22468   00FB2E                     __mediumconst   set	__pmediumconst
 22469   000003                     __activetblptr  equ	3
 22470                           
 22471                           ; #config settings
 22472                           
 22473                           	psect	cinit
 22474   01569A                     __pcinit:
 22475                           	callstack 0
 22476   01569A                     start_initialization:
 22477                           	callstack 0
 22478   01569A                     __initialization:
 22479                           	callstack 0
 22480                           
 22481                           ; Initialize objects allocated to BIGRAM (956 bytes)
 22482                           ; load TBLPTR registers with __pidataBIGRAM
 22483   01569A  0EAE               	movlw	low __pidataBIGRAM
 22484   01569C  6EF6               	movwf	tblptrl,c
 22485   01569E  0E30               	movlw	high __pidataBIGRAM
 22486   0156A0  6EF7               	movwf	tblptrh,c
 22487   0156A2  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
 22488   0156A4  6EF8               	movwf	tblptru,c
 22489   0156A6  EE03  F01A         	lfsr	0,__pdataBIGRAM
 22490   0156AA  EE20 F3BC          	lfsr	2,956
 22491   0156AE                     copy_data0:
 22492   0156AE  0009               	tblrd		*+
 22493   0156B0  006F FFD7 FFEE     	movff	tablat,postinc0
 22494   0156B6  50DD               	movf	postdec2,w,c
 22495   0156B8  50D9               	movf	fsr2l,w,c
 22496   0156BA  E1F9               	bnz	copy_data0
 22497   0156BC  50DA               	movf	fsr2h,w,c
 22498   0156BE  E1F7               	bnz	copy_data0
 22499                           
 22500                           ; Initialize objects allocated to BANK6 (256 bytes)
 22501                           ; load TBLPTR registers with __pidataBANK6
 22502   0156C0  0E72               	movlw	low __pidataBANK6
 22503   0156C2  6EF6               	movwf	tblptrl,c
 22504   0156C4  0E62               	movlw	high __pidataBANK6
 22505   0156C6  6EF7               	movwf	tblptrh,c
 22506   0156C8  0E01               	movlw	low (__pidataBANK6 shr (0+16))
 22507   0156CA  6EF8               	movwf	tblptru,c
 22508   0156CC  EE01  F200         	lfsr	0,__pdataBANK6
 22509   0156D0  EE20 F100          	lfsr	2,256
 22510   0156D4                     copy_data1:
 22511   0156D4  0009               	tblrd		*+
 22512   0156D6  006F FFD7 FFEE     	movff	tablat,postinc0
 22513   0156DC  50DD               	movf	postdec2,w,c
 22514   0156DE  50D9               	movf	fsr2l,w,c
 22515   0156E0  E1F9               	bnz	copy_data1
 22516   0156E2  50DA               	movf	fsr2h,w,c
 22517   0156E4  E1F7               	bnz	copy_data1
 22518                           
 22519                           ; Initialize objects allocated to BANK2 (59 bytes)
 22520                           ; load TBLPTR registers with __pidataBANK2
 22521   0156E6  0E90               	movlw	low __pidataBANK2
 22522   0156E8  6EF6               	movwf	tblptrl,c
 22523   0156EA  0E78               	movlw	high __pidataBANK2
 22524   0156EC  6EF7               	movwf	tblptrh,c
 22525   0156EE  0E01               	movlw	low (__pidataBANK2 shr (0+16))
 22526   0156F0  6EF8               	movwf	tblptru,c
 22527   0156F2  EE00  F2C3         	lfsr	0,__pdataBANK2
 22528   0156F6  EE20 F03B          	lfsr	2,59
 22529   0156FA                     copy_data2:
 22530   0156FA  0009               	tblrd		*+
 22531   0156FC  006F FFD7 FFEE     	movff	tablat,postinc0
 22532   015702  50DD               	movf	postdec2,w,c
 22533   015704  50D9               	movf	fsr2l,w,c
 22534   015706  E1F9               	bnz	copy_data2
 22535                           
 22536                           ; Initialize objects allocated to BANK1 (191 bytes)
 22537                           ; load TBLPTR registers with __pidataBANK1
 22538   015708  0EEE               	movlw	low __pidataBANK1
 22539   01570A  6EF6               	movwf	tblptrl,c
 22540   01570C  0E68               	movlw	high __pidataBANK1
 22541   01570E  6EF7               	movwf	tblptrh,c
 22542   015710  0E01               	movlw	low (__pidataBANK1 shr (0+16))
 22543   015712  6EF8               	movwf	tblptru,c
 22544   015714  EE00  F100         	lfsr	0,__pdataBANK1
 22545   015718  EE20 F0BF          	lfsr	2,191
 22546   01571C                     copy_data3:
 22547   01571C  0009               	tblrd		*+
 22548   01571E  006F FFD7 FFEE     	movff	tablat,postinc0
 22549   015724  50DD               	movf	postdec2,w,c
 22550   015726  50D9               	movf	fsr2l,w,c
 22551   015728  E1F9               	bnz	copy_data3
 22552                           
 22553                           ; Initialize objects allocated to BANK0 (53 bytes)
 22554                           ; load TBLPTR registers with __pidataBANK0
 22555   01572A  0EAA               	movlw	low __pidataBANK0
 22556   01572C  6EF6               	movwf	tblptrl,c
 22557   01572E  0E79               	movlw	high __pidataBANK0
 22558   015730  6EF7               	movwf	tblptrh,c
 22559   015732  0E01               	movlw	low (__pidataBANK0 shr (0+16))
 22560   015734  6EF8               	movwf	tblptru,c
 22561   015736  EE00  F0C2         	lfsr	0,__pdataBANK0
 22562   01573A  EE20 F035          	lfsr	2,53
 22563   01573E                     copy_data4:
 22564   01573E  0009               	tblrd		*+
 22565   015740  006F FFD7 FFEE     	movff	tablat,postinc0
 22566   015746  50DD               	movf	postdec2,w,c
 22567   015748  50D9               	movf	fsr2l,w,c
 22568   01574A  E1F9               	bnz	copy_data4
 22569                           
 22570                           ; Initialize objects allocated to COMRAM (5 bytes)
 22571                           ; load TBLPTR registers with __pidataCOMRAM
 22572   01574C  0EFA               	movlw	low __pidataCOMRAM
 22573   01574E  6EF6               	movwf	tblptrl,c
 22574   015750  0E80               	movlw	high __pidataCOMRAM
 22575   015752  6EF7               	movwf	tblptrh,c
 22576   015754  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
 22577   015756  6EF8               	movwf	tblptru,c
 22578   015758  EE00  F04E         	lfsr	0,__pdataCOMRAM
 22579   01575C  EE20 F005          	lfsr	2,5
 22580   015760                     copy_data5:
 22581   015760  0009               	tblrd		*+
 22582   015762  006F FFD7 FFEE     	movff	tablat,postinc0
 22583   015768  50DD               	movf	postdec2,w,c
 22584   01576A  50D9               	movf	fsr2l,w,c
 22585   01576C  E1F9               	bnz	copy_data5
 22586                           
 22587                           ; Clear objects allocated to BIGRAM (1306 bytes)
 22588   01576E  EE01  F300         	lfsr	0,__pbssBIGRAM
 22589   015772  EE21 F11A          	lfsr	2,1306
 22590   015776                     clear_0:
 22591   015776  6AEE               	clrf	postinc0,c
 22592   015778  50DD               	movf	postdec2,w,c
 22593   01577A  50D9               	movf	fsr2l,w,c
 22594   01577C  E1FC               	bnz	clear_0
 22595   01577E  50DA               	movf	fsr2h,w,c
 22596   015780  E1FA               	bnz	clear_0
 22597                           
 22598                           ; Clear objects allocated to BANK5 (255 bytes)
 22599   015782  EE01  F100         	lfsr	0,__pbssBANK5
 22600   015786  EE20 F0FF          	lfsr	2,255
 22601   01578A                     clear_1:
 22602   01578A  6AEE               	clrf	postinc0,c
 22603   01578C  50DD               	movf	postdec2,w,c
 22604   01578E  50D9               	movf	fsr2l,w,c
 22605   015790  E1FC               	bnz	clear_1
 22606   015792  50DA               	movf	fsr2h,w,c
 22607   015794  E1FA               	bnz	clear_1
 22608                           
 22609                           ; Clear objects allocated to BANK4 (255 bytes)
 22610   015796  EE01  F000         	lfsr	0,__pbssBANK4
 22611   01579A  EE20 F0FF          	lfsr	2,255
 22612   01579E                     clear_2:
 22613   01579E  6AEE               	clrf	postinc0,c
 22614   0157A0  50DD               	movf	postdec2,w,c
 22615   0157A2  50D9               	movf	fsr2l,w,c
 22616   0157A4  E1FC               	bnz	clear_2
 22617   0157A6  50DA               	movf	fsr2h,w,c
 22618   0157A8  E1FA               	bnz	clear_2
 22619                           
 22620                           ; Clear objects allocated to BANK3 (67 bytes)
 22621   0157AA  EE00  F300         	lfsr	0,__pbssBANK3
 22622   0157AE  0E43               	movlw	67
 22623   0157B0                     clear_3:
 22624   0157B0  6AEE               	clrf	postinc0,c
 22625   0157B2  06E8               	decf	wreg,f,c
 22626   0157B4  E1FD               	bnz	clear_3
 22627                           
 22628                           ; Clear objects allocated to BANK2 (195 bytes)
 22629   0157B6  EE00  F200         	lfsr	0,__pbssBANK2
 22630   0157BA  0EC3               	movlw	195
 22631   0157BC                     clear_4:
 22632   0157BC  6AEE               	clrf	postinc0,c
 22633   0157BE  06E8               	decf	wreg,f,c
 22634   0157C0  E1FD               	bnz	clear_4
 22635                           
 22636                           ; Clear objects allocated to BANK1 (39 bytes)
 22637   0157C2  EE00  F1BF         	lfsr	0,__pbssBANK1
 22638   0157C6  0E27               	movlw	39
 22639   0157C8                     clear_5:
 22640   0157C8  6AEE               	clrf	postinc0,c
 22641   0157CA  06E8               	decf	wreg,f,c
 22642   0157CC  E1FD               	bnz	clear_5
 22643                           
 22644                           ; Clear objects allocated to BANK0 (98 bytes)
 22645   0157CE  EE00  F060         	lfsr	0,__pbssBANK0
 22646   0157D2  0E62               	movlw	98
 22647   0157D4                     clear_6:
 22648   0157D4  6AEE               	clrf	postinc0,c
 22649   0157D6  06E8               	decf	wreg,f,c
 22650   0157D8  E1FD               	bnz	clear_6
 22651                           
 22652                           ; Clear objects allocated to COMRAM (33 bytes)
 22653   0157DA  EE00  F001         	lfsr	0,__pbssCOMRAM
 22654   0157DE  0E21               	movlw	33
 22655   0157E0                     clear_7:
 22656   0157E0  6AEE               	clrf	postinc0,c
 22657   0157E2  06E8               	decf	wreg,f,c
 22658   0157E4  E1FD               	bnz	clear_7
 22659                           
 22660                           ;
 22661                           ; Setup IVTBASE
 22662                           ;
 22663   003FD5                     IVTBASEL        equ	16341
 22664   003FD6                     IVTBASEH        equ	16342
 22665   003FD7                     IVTBASEU        equ	16343
 22666   0157E6  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
 22667   0157E8  6ED5               	movwf	213,c
 22668   0157EA  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
 22669   0157EC  6ED6               	movwf	214,c
 22670   0157EE  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
 22671   0157F0  6ED7               	movwf	215,c
 22672   0157F2                     end_of_initialization:
 22673                           	callstack 0
 22674   0157F2                     __end_of__initialization:
 22675                           	callstack 0
 22676   0157F2  0100               	movlb	0
 22677   0157F4  EFBA  F086         	goto	_main	;jump to C main() function
 22678                           
 22679                           	psect	bssCOMRAM
 22680   000001                     __pbssCOMRAM:
 22681                           	callstack 0
 22682   000001                     r_protocol@b_block:
 22683                           	callstack 0
 22684   000001                     	ds	2
 22685   000003                     TMR5_ISR@CountCallBack:
 22686                           	callstack 0
 22687   000003                     	ds	2
 22688   000005                     _timer5ReloadVal:
 22689                           	callstack 0
 22690   000005                     	ds	2
 22691   000007                     secs_gem_state@equipment:
 22692                           	callstack 0
 22693   000007                     	ds	1
 22694   000008                     secs_gem_state@block:
 22695                           	callstack 0
 22696   000008                     	ds	1
 22697   000009                     t_protocol@requeue:
 22698                           	callstack 0
 22699   000009                     	ds	1
 22700   00000A                     t_protocol@retry:
 22701                           	callstack 0
 22702   00000A                     	ds	1
 22703   00000B                     r_protocol@rxData_l:
 22704                           	callstack 0
 22705   00000B                     	ds	1
 22706   00000C                     m_protocol@rxData_l:
 22707                           	callstack 0
 22708   00000C                     	ds	1
 22709   00000D                     _faker:
 22710                           	callstack 0
 22711   00000D                     	ds	1
 22712   00000E                     _mode_sw:
 22713                           	callstack 0
 22714   00000E                     	ds	1
 22715   00000F                     _uart2RxCount:
 22716                           	callstack 0
 22717   00000F                     	ds	1
 22718   000010                     _uart2RxTail:
 22719                           	callstack 0
 22720   000010                     	ds	1
 22721   000011                     _uart2RxHead:
 22722                           	callstack 0
 22723   000011                     	ds	1
 22724   000012                     _uart2TxBufferRemaining:
 22725                           	callstack 0
 22726   000012                     	ds	1
 22727   000013                     _uart2TxTail:
 22728                           	callstack 0
 22729   000013                     	ds	1
 22730   000014                     _uart2TxHead:
 22731                           	callstack 0
 22732   000014                     	ds	1
 22733   000015                     _uart1RxCount:
 22734                           	callstack 0
 22735   000015                     	ds	1
 22736   000016                     _uart1RxTail:
 22737                           	callstack 0
 22738   000016                     	ds	1
 22739   000017                     _uart1RxHead:
 22740                           	callstack 0
 22741   000017                     	ds	1
 22742   000018                     _uart1TxBufferRemaining:
 22743                           	callstack 0
 22744   000018                     	ds	1
 22745   000019                     _uart1TxTail:
 22746                           	callstack 0
 22747   000019                     	ds	1
 22748   00001A                     _uart1TxHead:
 22749                           	callstack 0
 22750   00001A                     	ds	1
 22751   00001B                     secs_II_message@block:
 22752                           	callstack 0
 22753   00001B                     	ds	7
 22754                           
 22755                           	psect	dataCOMRAM
 22756   00004E                     __pdataCOMRAM:
 22757                           	callstack 0
 22758   00004E                     secs_II_monitor_message@store6_11:
 22759                           	callstack 0
 22760   00004E                     	ds	1
 22761   00004F                     secs_II_monitor_message@store1_13:
 22762                           	callstack 0
 22763   00004F                     	ds	1
 22764   000050                     secs_II_monitor_message@store1_1:
 22765                           	callstack 0
 22766   000050                     	ds	1
 22767   000051                     r_protocol@d:
 22768                           	callstack 0
 22769   000051                     	ds	1
 22770   000052                     r_protocol@retry:
 22771                           	callstack 0
 22772   000052                     	ds	1
 22773                           
 22774                           	psect	bssBANK0
 22775   000060                     __pbssBANK0:
 22776                           	callstack 0
 22777   000060                     _tickCount:
 22778                           	callstack 0
 22779   000060                     	ds	26
 22780   00007A                     _r_block:
 22781                           	callstack 0
 22782   00007A                     	ds	13
 22783   000087                     _spi_link:
 22784                           	callstack 0
 22785   000087                     	ds	12
 22786   000093                     t_protocol@block:
 22787                           	callstack 0
 22788   000093                     	ds	7
 22789   00009A                     wdtdelay@dcount:
 22790                           	callstack 0
 22791   00009A                     	ds	4
 22792   00009E                     _TMR5_InterruptHandler:
 22793                           	callstack 0
 22794   00009E                     	ds	3
 22795   0000A1                     _TMR6_InterruptHandler:
 22796                           	callstack 0
 22797   0000A1                     	ds	3
 22798   0000A4                     _ADCC_ADI_InterruptHandler:
 22799                           	callstack 0
 22800   0000A4                     	ds	3
 22801   0000A7                     _UART1_TxInterruptHandler:
 22802                           	callstack 0
 22803   0000A7                     	ds	3
 22804   0000AA                     _UART1_RxInterruptHandler:
 22805                           	callstack 0
 22806   0000AA                     	ds	3
 22807   0000AD                     _UART2_TxInterruptHandler:
 22808                           	callstack 0
 22809   0000AD                     	ds	3
 22810   0000B0                     _UART2_RxInterruptHandler:
 22811                           	callstack 0
 22812   0000B0                     	ds	3
 22813   0000B3                     _INT2_InterruptHandler:
 22814                           	callstack 0
 22815   0000B3                     	ds	3
 22816   0000B6                     _INT1_InterruptHandler:
 22817                           	callstack 0
 22818   0000B6                     	ds	3
 22819   0000B9                     _INT0_InterruptHandler:
 22820                           	callstack 0
 22821   0000B9                     	ds	3
 22822   0000BC                     run_checksum@sum:
 22823                           	callstack 0
 22824   0000BC                     	ds	2
 22825   0000BE                     _seed:
 22826                           	callstack 0
 22827   0000BE                     	ds	4
 22828                           
 22829                           	psect	dataBANK0
 22830   0000C2                     __pdataBANK0:
 22831                           	callstack 0
 22832   0000C2                     _H33:
 22833                           	callstack 0
 22834   0000C2                     	ds	36
 22835   0000E6                     _H14:
 22836                           	callstack 0
 22837   0000E6                     	ds	17
 22838                           
 22839                           	psect	bssBANK1
 22840   0001BF                     __pbssBANK1:
 22841                           	callstack 0
 22842   0001BF                     _nout:
 22843                           	callstack 0
 22844   0001BF                     	ds	2
 22845   0001C1                     _width:
 22846                           	callstack 0
 22847   0001C1                     	ds	2
 22848   0001C3                     _prec:
 22849                           	callstack 0
 22850   0001C3                     	ds	2
 22851   0001C5                     _flags:
 22852                           	callstack 0
 22853   0001C5                     	ds	1
 22854   0001C6                     _dbuf:
 22855                           	callstack 0
 22856   0001C6                     	ds	32
 22857                           
 22858                           	psect	dataBANK1
 22859   000100                     __pdataBANK1:
 22860                           	callstack 0
 22861   000100                     _H10:
 22862                           	callstack 0
 22863   000100                     	ds	91
 22864   00015B                     _H13:
 22865                           	callstack 0
 22866   00015B                     	ds	64
 22867   00019B                     _H17:
 22868                           	callstack 0
 22869   00019B                     	ds	20
 22870   0001AF                     _port_data:
 22871                           	callstack 0
 22872   0001AF                     	ds	16
 22873                           
 22874                           	psect	bssBANK2
 22875   000200                     __pbssBANK2:
 22876                           	callstack 0
 22877   000200                     _uart2TxBuffer:
 22878                           	callstack 0
 22879   000200                     	ds	64
 22880   000240                     _uart1TxBuffer:
 22881                           	callstack 0
 22882   000240                     	ds	64
 22883   000280                     _ring_buf1:
 22884                           	callstack 0
 22885   000280                     	ds	67
 22886                           
 22887                           	psect	dataBANK2
 22888   0002C3                     __pdataBANK2:
 22889                           	callstack 0
 22890   0002C3                     _H12:
 22891                           	callstack 0
 22892   0002C3                     	ds	30
 22893   0002E1                     _H26:
 22894                           	callstack 0
 22895   0002E1                     	ds	29
 22896                           
 22897                           	psect	bssBANK3
 22898   000300                     __pbssBANK3:
 22899                           	callstack 0
 22900   000300                     _ring_buf2:
 22901                           	callstack 0
 22902   000300                     	ds	67
 22903                           
 22904                           	psect	bssBANK4
 22905   000400                     __pbssBANK4:
 22906                           	callstack 0
 22907   000400                     _uart1RxBuffer:
 22908                           	callstack 0
 22909   000400                     	ds	255
 22910                           
 22911                           	psect	bssBANK5
 22912   000500                     __pbssBANK5:
 22913                           	callstack 0
 22914   000500                     _uart2RxBuffer:
 22915                           	callstack 0
 22916   000500                     	ds	255
 22917                           
 22918                           	psect	dataBANK6
 22919   000600                     __pdataBANK6:
 22920                           	callstack 0
 22921   000600                     _T:
 22922                           	callstack 0
 22923   000600                     	ds	256
 22924                           
 22925                           	psect	bssBIGRAM
 22926   000700                     __pbssBIGRAM:
 22927                           	callstack 0
 22928   000700                     _D@mconfig$F5156:
 22929                           	callstack 0
 22930   000700                     	ds	514
 22931   000902                     _S:
 22932                           	callstack 0
 22933   000902                     	ds	460
 22934   000ACE                     _D:
 22935                           	callstack 0
 22936   000ACE                     	ds	332
 22937                           
 22938                           	psect	dataBIGRAM
 22939   000C1A                     __pdataBIGRAM:
 22940                           	callstack 0
 22941   000C1A                     _V:
 22942                           	callstack 0
 22943   000C1A                     	ds	387
 22944   000D9D                     _H153:
 22945                           	callstack 0
 22946   000D9D                     	ds	312
 22947   000ED5                     _H254:
 22948                           	callstack 0
 22949   000ED5                     	ds	257
 22950                           
 22951                           	psect	cstackBANK1
 22952   0001E6                     __pcstackBANK1:
 22953                           	callstack 0
 22954   0001E6                     ??_TMR6_ISR:
 22955                           
 22956                           ; 1 bytes @ 0x0
 22957   0001E6                     	ds	3
 22958   0001E9                     ??_TMR5_ISR:
 22959                           
 22960                           ; 1 bytes @ 0x3
 22961   0001E9                     	ds	5
 22962                           
 22963                           	psect	cstackBANK0
 22964   0000F7                     __pcstackBANK0:
 22965                           	callstack 0
 22966   0000F7                     ??_UART2_tx_vect_isr:
 22967                           
 22968                           ; 1 bytes @ 0x0
 22969   0000F7                     	ds	2
 22970   0000F9                     ??_UART2_rx_vect_isr:
 22971                           
 22972                           ; 1 bytes @ 0x2
 22973   0000F9                     	ds	2
 22974                           
 22975                           	psect	cstackCOMRAM
 22976   000042                     __pcstackCOMRAM:
 22977                           	callstack 0
 22978   000042                     ??_INT0_ISR:
 22979                           
 22980                           ; 1 bytes @ 0x0
 22981   000042                     	ds	2
 22982   000044                     ??_INT1_ISR:
 22983                           
 22984                           ; 1 bytes @ 0x2
 22985   000044                     	ds	2
 22986   000046                     ??_INT2_ISR:
 22987                           
 22988                           ; 1 bytes @ 0x4
 22989   000046                     	ds	2
 22990   000048                     ??_ADCC_ISR:
 22991                           
 22992                           ; 1 bytes @ 0x6
 22993   000048                     	ds	2
 22994   00004A                     ??_UART1_tx_vect_isr:
 22995                           
 22996                           ; 1 bytes @ 0x8
 22997   00004A                     	ds	2
 22998   00004C                     ??_UART1_rx_vect_isr:
 22999                           
 23000                           ; 1 bytes @ 0xA
 23001   00004C                     	ds	2
 23002   00004E                     
 23003                           ; 1 bytes @ 0xC
 23004 ;;
 23005 ;;Main: autosize = 3, tempsize = 0, incstack = 0, save=0
 23006 ;;
 23007 ;; *************** function _main *****************
 23008 ;; Defined at:
 23009 ;;		line 634 in file "main.c"
 23010 ;; Parameters:    Size  Location     Type
 23011 ;;		None
 23012 ;; Auto vars:     Size  Location     Type
 23013 ;;  s               2  [STACK] PTR unsigned char 
 23014 ;;		 -> D$lcd(512), D@mconfig$F5156(514), 
 23015 ;;  mode            1  [STACK] enum E17274
 23016 ;; Return value:  Size  Location     Type
 23017 ;;                  1  [STACK] void 
 23018 ;; Registers used:
 23019 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 23020 ;; Tracked objects:
 23021 ;;		On entry : 0/0
 23022 ;;		On exit  : 0/0
 23023 ;;		Unchanged: 0/0
 23024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23029 ;;Total ram usage:        0 bytes
 23030 ;; Hardware stack levels required when called: 16
 23031 ;; This function calls:
 23032 ;;		_MyeaDogM_WriteStringAtPos
 23033 ;;		_SYSTEM_Initialize
 23034 ;;		_StartTimer
 23035 ;;		_TimerDone
 23036 ;;		_UART2_Write
 23037 ;;		_WaitMs
 23038 ;;		_check_help
 23039 ;;		_eaDogM_WriteCommand
 23040 ;;		_get_vterm_ptr
 23041 ;;		_hb_message
 23042 ;;		_init_display
 23043 ;;		_m_protocol
 23044 ;;		_mode_lamp_dim
 23045 ;;		_r_protocol
 23046 ;;		_set_display_info
 23047 ;;		_set_vterm
 23048 ;;		_sprintf
 23049 ;;		_srand
 23050 ;;		_t_protocol
 23051 ;;		_update_lcd
 23052 ;; This function is called by:
 23053 ;;		Startup code after reset
 23054 ;; This function uses a reentrant model
 23055 ;;
 23056                           
 23057                           	psect	text0
 23058   010D74                     __ptext0:
 23059                           	callstack 0
 23060   010D74                     _main:
 23061                           	callstack 0
 23062                           
 23063                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23064   010D74  52E6               	movf	postinc1,f,c
 23065   010D76  52E6               	movf	postinc1,f,c
 23066   010D78  52E6               	movf	postinc1,f,c
 23067                           
 23068                           ;main.c: 636:  UI_STATES mode;;main.c: 637:  char * s;;main.c: 640:  SYSTEM_Initialize()
      +                          ;
 23069                           
 23070                           ;incstack = 0
 23071   010D7A  ECEE  F0B9         	call	_SYSTEM_Initialize	;wreg free
 23072                           
 23073                           ; BSR set to: 60
 23074                           ;main.c: 643:  (INTCON0bits.GIEH = 1);
 23075   010D7E  8ED2               	bsf	210,7,c	;volatile
 23076                           
 23077                           ; BSR set to: 60
 23078                           ;main.c: 646:  (INTCON0bits.GIEL = 1);
 23079   010D80  8CD2               	bsf	210,6,c	;volatile
 23080                           
 23081                           ; BSR set to: 60
 23082                           ;main.c: 648:  V.ui_state = UI_STATE_INIT;
 23083   010D82  0E00               	movlw	0
 23084   010D84  006F FFA0  FC1B    	movff	wreg,_V+1	;volatile
 23085                           
 23086                           ; BSR set to: 60
 23087                           ;main.c: 653:  WaitMs(300);
 23088   010D8A  0E2C               	movlw	44
 23089   010D8C  6EE6               	movwf	postinc1,c
 23090   010D8E  0E01               	movlw	1
 23091   010D90  6EE6               	movwf	postinc1,c
 23092   010D92  EC9F  F0BC         	call	_WaitMs	;wreg free
 23093                           
 23094                           ;main.c: 654:  if (PORTBbits.RB0) {
 23095   010D96  A0CB               	btfss	203,0,c	;volatile
 23096   010D98  D004               	goto	l13689
 23097                           
 23098                           ;main.c: 655:   mode = UI_STATE_HOST;
 23099                           ;stkvar	_mode @ sp[(-3)+2]
 23100   010D9A  0EFF               	movlw	-1
 23101   010D9C  6AE3               	clrf	plusw1,c
 23102   010D9E  2AE3               	incf	plusw1,f,c
 23103                           
 23104                           ;main.c: 656:  } else {
 23105   010DA0  D004               	goto	l13691
 23106   010DA2                     l13689:
 23107                           
 23108                           ;main.c: 657:   mode = UI_STATE_LOG;
 23109                           ;stkvar	_mode @ sp[(-3)+2]
 23110   010DA2  0EFF               	movlw	-1
 23111   010DA4  6AE3               	clrf	plusw1,c
 23112   010DA6  80E3               	bsf	plusw1,0,c
 23113   010DA8  82E3               	bsf	plusw1,1,c	;indir
 23114   010DAA                     l13691:
 23115                           
 23116                           ;main.c: 660:  if (mode == UI_STATE_HOST) {
 23117                           ;stkvar	_mode @ sp[(-3)+2]
 23118   010DAA  0EFF               	movlw	-1
 23119   010DAC  04E3               	decf	plusw1,w,c
 23120   010DAE  A4D8               	btfss	status,2,c
 23121   010DB0  D003               	goto	l1382
 23122                           
 23123                           ;main.c: 661:   do { LATDbits.LATD0 = 1; } while(0);
 23124   010DB2  80BD               	bsf	189,0,c	;volatile
 23125                           
 23126                           ;main.c: 662:   V.mode_pwm = 70;
 23127   010DB4  0E46               	movlw	70
 23128   010DB6  D002               	goto	L1
 23129   010DB8                     l1382:
 23130   010DB8  90BD               	bcf	189,0,c	;volatile
 23131                           
 23132                           ;main.c: 665:   V.mode_pwm = 0;
 23133   010DBA  0E00               	movlw	0
 23134   010DBC                     L1:
 23135   010DBC  006F FFA0  FD5F    	movff	wreg,_V+325	;volatile
 23136   010DC2  0E00               	movlw	0
 23137   010DC4  006F FFA0  FD60    	movff	wreg,_V+326	;volatile
 23138                           
 23139                           ;main.c: 667:  mode_lamp_dim(V.mode_pwm);
 23140   010DCA  EE23  F15F         	lfsr	2,_V+325	;volatile
 23141   010DCE  006F FF78  F02C    	movff	postinc2,btemp+10
 23142   010DD4  006F FF74  F02D    	movff	postdec2,btemp+11
 23143   010DDA  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 23144   010DE0  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 23145   010DE6  ECF1  F0BF         	call	_mode_lamp_dim	;wreg free
 23146   010DEA                     l13695:
 23147                           
 23148                           ;main.c: 670:   if (!faker++) {
 23149   010DEA  2A0D               	incf	_faker^0,f,c
 23150   010DEC  040D               	decf	_faker^0,w,c
 23151   010DEE  A4D8               	btfss	status,2,c
 23152   010DF0  EF20  F08C         	goto	l13897
 23153                           
 23154                           ;main.c: 671:   UART2_Write(0x05);
 23155   010DF4  0E05               	movlw	5
 23156   010DF6  6EE6               	movwf	postinc1,c
 23157   010DF8  ECB1  F0BB         	call	_UART2_Write	;wreg free
 23158   010DFC  EF20  F08C         	goto	l13897
 23159   010E00                     l13699:
 23160                           
 23161                           ;main.c: 681:    init_display();
 23162   010E00  EC21  F0B3         	call	_init_display	;wreg free
 23163                           
 23164                           ; BSR set to: 61
 23165                           ;main.c: 682:    eaDogM_WriteCommand(0b00001100);
 23166   010E04  0E0C               	movlw	12
 23167   010E06  6EE6               	movwf	postinc1,c
 23168   010E08  EC3A  F0C0         	call	_eaDogM_WriteCommand	;wreg free
 23169                           
 23170                           ; BSR set to: 0
 23171                           ;main.c: 684:    V.ui_state = mode;
 23172                           ;stkvar	_mode @ sp[(-3)+2]
 23173   010E0C  0EFF               	movlw	-1
 23174   010E0E  006F FF8C  F02D    	movff	plusw1,btemp+11
 23175   010E14  0060  F0B4  FC1B   	movff	btemp+11,_V+1	;volatile
 23176                           
 23177                           ; BSR set to: 0
 23178                           ;main.c: 685:    V.s_state = SEQ_STATE_INIT;
 23179   010E1A  0E00               	movlw	0
 23180   010E1C  006F FFA0  FC1A    	movff	wreg,_V
 23181                           
 23182                           ; BSR set to: 0
 23183                           ;main.c: 686:    srand(1957);
 23184   010E22  0EA5               	movlw	165
 23185   010E24  6EE6               	movwf	postinc1,c
 23186   010E26  0E07               	movlw	7
 23187   010E28  6EE6               	movwf	postinc1,c
 23188   010E2A  EC5B  F0BD         	call	_srand	;wreg free
 23189                           
 23190                           ; BSR set to: 0
 23191                           ;main.c: 687:    set_vterm(0);
 23192   010E2E  0E00               	movlw	0
 23193   010E30  6EE6               	movwf	postinc1,c
 23194   010E32  EC73  F0BF         	call	_set_vterm	;wreg free
 23195                           
 23196                           ;main.c: 688:    sprintf(get_vterm_ptr(0, 0), " RVI HOST TESTER");
 23197   010E36  0E8A               	movlw	low STR_1
 23198   010E38  6EE6               	movwf	postinc1,c
 23199   010E3A  0EFF               	movlw	high STR_1
 23200   010E3C  6EE6               	movwf	postinc1,c
 23201   010E3E  0E00               	movlw	0
 23202   010E40  6EE6               	movwf	postinc1,c
 23203   010E42  0E00               	movlw	0
 23204   010E44  6EE6               	movwf	postinc1,c
 23205   010E46  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 23206   010E4A  0060  F08B  FFE6   	movff	btemp,postinc1
 23207   010E50  0060  F08F  FFE6   	movff	btemp+1,postinc1
 23208   010E56  0E04               	movlw	4
 23209   010E58  6EE6               	movwf	postinc1,c
 23210   010E5A  EC32  F0B2         	call	_sprintf	;wreg free
 23211                           
 23212                           ; BSR set to: 1
 23213                           ;main.c: 689:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "1.65G");
 23214   010E5E  0EEF               	movlw	low STR_3
 23215   010E60  6EE6               	movwf	postinc1,c
 23216   010E62  0EFF               	movlw	high STR_3
 23217   010E64  6EE6               	movwf	postinc1,c
 23218   010E66  0EBA               	movlw	low STR_2
 23219   010E68  6EE6               	movwf	postinc1,c
 23220   010E6A  0EFF               	movlw	high STR_2
 23221   010E6C  6EE6               	movwf	postinc1,c
 23222   010E6E  0E00               	movlw	0
 23223   010E70  6EE6               	movwf	postinc1,c
 23224   010E72  0E01               	movlw	1
 23225   010E74  6EE6               	movwf	postinc1,c
 23226   010E76  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 23227   010E7A  0060  F08B  FFE6   	movff	btemp,postinc1
 23228   010E80  0060  F08F  FFE6   	movff	btemp+1,postinc1
 23229   010E86  0E06               	movlw	6
 23230   010E88  6EE6               	movwf	postinc1,c
 23231   010E8A  EC32  F0B2         	call	_sprintf	;wreg free
 23232                           
 23233                           ; BSR set to: 1
 23234                           ;main.c: 690:    sprintf(get_vterm_ptr(2, 0), " FGB@MCHP FAB4  ");
 23235   010E8E  0E68               	movlw	low STR_4
 23236   010E90  6EE6               	movwf	postinc1,c
 23237   010E92  0EFF               	movlw	high STR_4
 23238   010E94  6EE6               	movwf	postinc1,c
 23239   010E96  0E00               	movlw	0
 23240   010E98  6EE6               	movwf	postinc1,c
 23241   010E9A  0E02               	movlw	2
 23242   010E9C  6EE6               	movwf	postinc1,c
 23243   010E9E  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 23244   010EA2  0060  F08B  FFE6   	movff	btemp,postinc1
 23245   010EA8  0060  F08F  FFE6   	movff	btemp+1,postinc1
 23246   010EAE  0E04               	movlw	4
 23247   010EB0  6EE6               	movwf	postinc1,c
 23248   010EB2  EC32  F0B2         	call	_sprintf	;wreg free
 23249                           
 23250                           ; BSR set to: 1
 23251                           ;main.c: 691:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
 23252   010EB6  0E79               	movlw	low STR_5
 23253   010EB8  6EE6               	movwf	postinc1,c
 23254   010EBA  0EFF               	movlw	high STR_5
 23255   010EBC  6EE6               	movwf	postinc1,c
 23256   010EBE  0E02               	movlw	2
 23257   010EC0  6EE6               	movwf	postinc1,c
 23258   010EC2  0E00               	movlw	0
 23259   010EC4  6EE6               	movwf	postinc1,c
 23260   010EC6  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 23261   010ECA  0060  F08B  FFE6   	movff	btemp,postinc1
 23262   010ED0  0060  F08F  FFE6   	movff	btemp+1,postinc1
 23263   010ED6  0E04               	movlw	4
 23264   010ED8  6EE6               	movwf	postinc1,c
 23265   010EDA  EC32  F0B2         	call	_sprintf	;wreg free
 23266                           
 23267                           ; BSR set to: 1
 23268                           ;main.c: 692:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "1.65G");
 23269   010EDE  0EEF               	movlw	low STR_3
 23270   010EE0  6EE6               	movwf	postinc1,c
 23271   010EE2  0EFF               	movlw	high STR_3
 23272   010EE4  6EE6               	movwf	postinc1,c
 23273   010EE6  0EBA               	movlw	low STR_2
 23274   010EE8  6EE6               	movwf	postinc1,c
 23275   010EEA  0EFF               	movlw	high STR_2
 23276   010EEC  6EE6               	movwf	postinc1,c
 23277   010EEE  0E02               	movlw	2
 23278   010EF0  6EE6               	movwf	postinc1,c
 23279   010EF2  0E01               	movlw	1
 23280   010EF4  6EE6               	movwf	postinc1,c
 23281   010EF6  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 23282   010EFA  0060  F08B  FFE6   	movff	btemp,postinc1
 23283   010F00  0060  F08F  FFE6   	movff	btemp+1,postinc1
 23284   010F06  0E06               	movlw	6
 23285   010F08  6EE6               	movwf	postinc1,c
 23286   010F0A  EC32  F0B2         	call	_sprintf	;wreg free
 23287                           
 23288                           ; BSR set to: 1
 23289                           ;main.c: 693:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
 23290   010F0E  0E57               	movlw	low STR_8
 23291   010F10  6EE6               	movwf	postinc1,c
 23292   010F12  0EFF               	movlw	high STR_8
 23293   010F14  6EE6               	movwf	postinc1,c
 23294   010F16  0E02               	movlw	2
 23295   010F18  6EE6               	movwf	postinc1,c
 23296   010F1A  0E02               	movlw	2
 23297   010F1C  6EE6               	movwf	postinc1,c
 23298   010F1E  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 23299   010F22  0060  F08B  FFE6   	movff	btemp,postinc1
 23300   010F28  0060  F08F  FFE6   	movff	btemp+1,postinc1
 23301   010F2E  0E04               	movlw	4
 23302   010F30  6EE6               	movwf	postinc1,c
 23303   010F32  EC32  F0B2         	call	_sprintf	;wreg free
 23304                           
 23305                           ; BSR set to: 1
 23306                           ;main.c: 694:    update_lcd(0);
 23307   010F36  0E00               	movlw	0
 23308   010F38  6EE6               	movwf	postinc1,c
 23309   010F3A  ECAA  F0B2         	call	_update_lcd	;wreg free
 23310                           
 23311                           ;main.c: 695:    WaitMs(3000);
 23312   010F3E  0EB8               	movlw	184
 23313   010F40  6EE6               	movwf	postinc1,c
 23314   010F42  0E0B               	movlw	11
 23315   010F44  6EE6               	movwf	postinc1,c
 23316   010F46  EC9F  F0BC         	call	_WaitMs	;wreg free
 23317                           
 23318                           ;main.c: 696:    StartTimer(TMR_DISPLAY, 100);
 23319   010F4A  0E64               	movlw	100
 23320   010F4C  6EE6               	movwf	postinc1,c
 23321   010F4E  0E00               	movlw	0
 23322   010F50  6EE6               	movwf	postinc1,c
 23323   010F52  0E0A               	movlw	10
 23324   010F54  6EE6               	movwf	postinc1,c
 23325   010F56  EC2A  F0BC         	call	_StartTimer	;wreg free
 23326                           
 23327                           ;main.c: 697:    StartTimer(TMR_SEQ, 10000);
 23328   010F5A  0E10               	movlw	16
 23329   010F5C  6EE6               	movwf	postinc1,c
 23330   010F5E  0E27               	movlw	39
 23331   010F60  6EE6               	movwf	postinc1,c
 23332   010F62  0E0B               	movlw	11
 23333   010F64  6EE6               	movwf	postinc1,c
 23334   010F66  EC2A  F0BC         	call	_StartTimer	;wreg free
 23335                           
 23336                           ;main.c: 698:    StartTimer(TMR_INFO, 3000);
 23337   010F6A  0EB8               	movlw	184
 23338   010F6C  6EE6               	movwf	postinc1,c
 23339   010F6E  0E0B               	movlw	11
 23340   010F70  6EE6               	movwf	postinc1,c
 23341   010F72  0E07               	movlw	7
 23342   010F74  6EE6               	movwf	postinc1,c
 23343   010F76  EC2A  F0BC         	call	_StartTimer	;wreg free
 23344                           
 23345                           ;main.c: 699:    StartTimer(TMR_FLIPPER, 1500);
 23346   010F7A  0EDC               	movlw	220
 23347   010F7C  6EE6               	movwf	postinc1,c
 23348   010F7E  0E05               	movlw	5
 23349   010F80  6EE6               	movwf	postinc1,c
 23350   010F82  0E0C               	movlw	12
 23351   010F84  6EE6               	movwf	postinc1,c
 23352   010F86  EC2A  F0BC         	call	_StartTimer	;wreg free
 23353                           
 23354                           ;main.c: 700:    StartTimer(TMR_HELPDIS, 3000);
 23355   010F8A  0EB8               	movlw	184
 23356   010F8C  6EE6               	movwf	postinc1,c
 23357   010F8E  0E0B               	movlw	11
 23358   010F90  6EE6               	movwf	postinc1,c
 23359   010F92  0E09               	movlw	9
 23360   010F94  6EE6               	movwf	postinc1,c
 23361   010F96  EC2A  F0BC         	call	_StartTimer	;wreg free
 23362                           
 23363                           ;main.c: 701:    break;
 23364   010F9A  EF36  F08C         	goto	l13899
 23365   010F9E                     l1391:
 23366                           
 23367                           ;main.c: 705:     V.r_l_state = LINK_STATE_IDLE;
 23368   010F9E  0E00               	movlw	0
 23369   010FA0  006F FFA0  FC1F    	movff	wreg,_V+5	;volatile
 23370                           
 23371                           ;main.c: 706:     V.t_l_state = LINK_STATE_IDLE;
 23372   010FA6  0E00               	movlw	0
 23373   010FA8  006F FFA0  FC20    	movff	wreg,_V+6	;volatile
 23374                           
 23375                           ;main.c: 707:     V.s_state = SEQ_STATE_RX;
 23376   010FAE  0E01               	movlw	1
 23377   010FB0  006F FFA0  FC1A    	movff	wreg,_V
 23378                           
 23379                           ;main.c: 708:     if ((V.error == LINK_ERROR_NONE) && (V.abort == LINK_ERROR_NONE)) {
 23380   010FB6  0063  F53F  FFE8   	movff	_V+309,wreg	;volatile
 23381   010FBC  0A0A               	xorlw	10
 23382   010FBE  A4D8               	btfss	status,2,c
 23383   010FC0  D1EE               	goto	l13809
 23384   010FC2  0063  F543  FFE8   	movff	_V+310,wreg	;volatile
 23385   010FC8  0A0A               	xorlw	10
 23386   010FCA  A4D8               	btfss	status,2,c
 23387   010FCC  D1E8               	goto	l13809
 23388                           
 23389                           ;main.c: 709:      if (V.debug)
 23390   010FCE  EE23  F168         	lfsr	2,_V+334	;volatile
 23391   010FD2  AADF               	btfss	indf2,5,c
 23392   010FD4  D027               	goto	l13745
 23393                           
 23394                           ;main.c: 710:       sprintf(get_vterm_ptr(2, 0), "H254 %d, T%ld  ", sizeof(header254), V
      +                          .testing);
 23395   010FD6  EE23  F149         	lfsr	2,_V+303	;volatile
 23396   010FDA  006F FF7B FFE6     	movff	postinc2,postinc1
 23397   010FE0  006F FF7B FFE6     	movff	postinc2,postinc1
 23398   010FE6  006F FF7B FFE6     	movff	postinc2,postinc1
 23399   010FEC  006F FF7B FFE6     	movff	postinc2,postinc1
 23400   010FF2  0E01               	movlw	1
 23401   010FF4  6EE6               	movwf	postinc1,c
 23402   010FF6  0E01               	movlw	1
 23403   010FF8  6EE6               	movwf	postinc1,c
 23404   010FFA  0E9B               	movlw	low STR_9
 23405   010FFC  6EE6               	movwf	postinc1,c
 23406   010FFE  0EFF               	movlw	high STR_9
 23407   011000  6EE6               	movwf	postinc1,c
 23408   011002  0E00               	movlw	0
 23409   011004  6EE6               	movwf	postinc1,c
 23410   011006  0E02               	movlw	2
 23411   011008  6EE6               	movwf	postinc1,c
 23412   01100A  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 23413   01100E  0060  F08B  FFE6   	movff	btemp,postinc1
 23414   011014  0060  F08F  FFE6   	movff	btemp+1,postinc1
 23415   01101A  0E0A               	movlw	10
 23416   01101C  6EE6               	movwf	postinc1,c
 23417   01101E  EC32  F0B2         	call	_sprintf	;wreg free
 23418   011022  D1BD               	goto	l13809
 23419   011024                     l13745:
 23420                           
 23421                           ;main.c: 712:       sprintf(get_vterm_ptr(2, 0), "HOST: %ld G%d      #", V.ticks, V.g_st
      +                          ate);
 23422   011024  EE23  F01C         	lfsr	2,_V+2	;volatile
 23423   011028  50DF               	movf	indf2,w,c
 23424   01102A  6EE6               	movwf	postinc1,c
 23425   01102C  0E00               	movlw	0
 23426   01102E  6EE6               	movwf	postinc1,c
 23427   011030  EE23  F141         	lfsr	2,_V+295	;volatile
 23428   011034  006F FF7B FFE6     	movff	postinc2,postinc1
 23429   01103A  006F FF7B FFE6     	movff	postinc2,postinc1
 23430   011040  006F FF7B FFE6     	movff	postinc2,postinc1
 23431   011046  006F FF7B FFE6     	movff	postinc2,postinc1
 23432   01104C  0E5E               	movlw	low STR_10
 23433   01104E  6EE6               	movwf	postinc1,c
 23434   011050  0EFE               	movlw	high STR_10
 23435   011052  6EE6               	movwf	postinc1,c
 23436   011054  0E00               	movlw	0
 23437   011056  6EE6               	movwf	postinc1,c
 23438   011058  0E02               	movlw	2
 23439   01105A  6EE6               	movwf	postinc1,c
 23440   01105C  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 23441   011060  0060  F08B  FFE6   	movff	btemp,postinc1
 23442   011066  0060  F08F  FFE6   	movff	btemp+1,postinc1
 23443   01106C  0E0A               	movlw	10
 23444   01106E  6EE6               	movwf	postinc1,c
 23445   011070  EC32  F0B2         	call	_sprintf	;wreg free
 23446   011074  D194               	goto	l13809
 23447   011076                     l13747:
 23448                           
 23449                           ;main.c: 723:     if (r_protocol(&V.r_l_state) == LINK_STATE_DONE) {
 23450   011076  0E1F               	movlw	low (_V+5)
 23451   011078  6EE6               	movwf	postinc1,c
 23452   01107A  0E0C               	movlw	high (_V+5)
 23453   01107C  6EE6               	movwf	postinc1,c
 23454   01107E  EC1C  F096         	call	_r_protocol	;wreg free
 23455   011082  0E04               	movlw	4
 23456   011084  1822               	xorwf	btemp^0,w,c
 23457   011086  A4D8               	btfss	status,2,c
 23458   011088  D087               	goto	l13773
 23459                           
 23460                           ;main.c: 724:      set_display_info(DIS_STR);
 23461   01108A  0E00               	movlw	0
 23462   01108C  6EE6               	movwf	postinc1,c
 23463   01108E  EC54  F0BF         	call	_set_display_info	;wreg free
 23464                           
 23465                           ;main.c: 725:      s = get_vterm_ptr(0, 0);
 23466   011092  0E00               	movlw	0
 23467   011094  6EE6               	movwf	postinc1,c
 23468   011096  0E00               	movlw	0
 23469   011098  6EE6               	movwf	postinc1,c
 23470   01109A  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 23471                           
 23472                           ;stkvar	_s @ sp[(-3)+0]
 23473   01109E  0EFE               	movlw	-2
 23474   0110A0  0060  F08F  FFE3   	movff	btemp+1,plusw1
 23475   0110A6  0EFD               	movlw	-3
 23476   0110A8  0060  F08B  FFE3   	movff	btemp,plusw1
 23477                           
 23478                           ;main.c: 726:      if (V.stream == 9) {
 23479   0110AE  0063  F537  FFE8   	movff	_V+307,wreg	;volatile
 23480   0110B4  0A09               	xorlw	9
 23481   0110B6  A4D8               	btfss	status,2,c
 23482   0110B8  D01F               	goto	l1398
 23483                           
 23484                           ;main.c: 727:       V.msg_error = V.function;
 23485   0110BA  0063  F538  FD51   	movff	_V+308,_V+311	;volatile
 23486                           
 23487                           ;main.c: 728:       sprintf(s, " S%dF%d Err         ", V.stream, V.function);
 23488   0110C0  EE23  F14E         	lfsr	2,_V+308	;volatile
 23489   0110C4  50DF               	movf	indf2,w,c
 23490   0110C6  6EE6               	movwf	postinc1,c
 23491   0110C8  0E00               	movlw	0
 23492   0110CA  6EE6               	movwf	postinc1,c
 23493   0110CC  EE23  F14D         	lfsr	2,_V+307	;volatile
 23494   0110D0  50DF               	movf	indf2,w,c
 23495   0110D2  6EE6               	movwf	postinc1,c
 23496   0110D4  0E00               	movlw	0
 23497   0110D6  6EE6               	movwf	postinc1,c
 23498   0110D8  0E1F               	movlw	low STR_11
 23499   0110DA  6EE6               	movwf	postinc1,c
 23500   0110DC  0EFE               	movlw	high STR_11
 23501   0110DE  6EE6               	movwf	postinc1,c
 23502                           
 23503                           ;stkvar	_s @ sp[(-9)+0]
 23504   0110E0  0EF7               	movlw	-9
 23505   0110E2  006F FF8F FFE6     	movff	plusw1,postinc1
 23506   0110E8  006F FF8F FFE6     	movff	plusw1,postinc1
 23507   0110EE  0E08               	movlw	8
 23508   0110F0  6EE6               	movwf	postinc1,c
 23509   0110F2  EC32  F0B2         	call	_sprintf	;wreg free
 23510                           
 23511                           ;main.c: 729:      } else {
 23512   0110F6  D01F               	goto	l13761
 23513   0110F8                     l1398:
 23514                           
 23515                           ;main.c: 730:       V.msg_error = MSG_ERROR_NONE;
 23516   0110F8  0E00               	movlw	0
 23517   0110FA  006F FFA0  FD51    	movff	wreg,_V+311	;volatile
 23518                           
 23519                           ;main.c: 731:       sprintf(s, " S%dF%d #           ", V.stream, V.function);
 23520   011100  EE23  F14E         	lfsr	2,_V+308	;volatile
 23521   011104  50DF               	movf	indf2,w,c
 23522   011106  6EE6               	movwf	postinc1,c
 23523   011108  0E00               	movlw	0
 23524   01110A  6EE6               	movwf	postinc1,c
 23525   01110C  EE23  F14D         	lfsr	2,_V+307	;volatile
 23526   011110  50DF               	movf	indf2,w,c
 23527   011112  6EE6               	movwf	postinc1,c
 23528   011114  0E00               	movlw	0
 23529   011116  6EE6               	movwf	postinc1,c
 23530   011118  0E0A               	movlw	low STR_12
 23531   01111A  6EE6               	movwf	postinc1,c
 23532   01111C  0EFE               	movlw	high STR_12
 23533   01111E  6EE6               	movwf	postinc1,c
 23534                           
 23535                           ;stkvar	_s @ sp[(-9)+0]
 23536   011120  0EF7               	movlw	-9
 23537   011122  006F FF8F FFE6     	movff	plusw1,postinc1
 23538   011128  006F FF8F FFE6     	movff	plusw1,postinc1
 23539   01112E  0E08               	movlw	8
 23540   011130  6EE6               	movwf	postinc1,c
 23541   011132  EC32  F0B2         	call	_sprintf	;wreg free
 23542   011136                     l13761:
 23543                           
 23544                           ; BSR set to: 1
 23545                           ;main.c: 733:      s[16] = 0;
 23546                           ;stkvar	_s @ sp[(-3)+0]
 23547   011136  0EFD               	movlw	-3
 23548   011138  006F FF8C  F02C    	movff	plusw1,btemp+10
 23549   01113E  0EFE               	movlw	-2
 23550   011140  006F FF8C  F02D    	movff	plusw1,btemp+11
 23551   011146  0E10               	movlw	16
 23552   011148  242C               	addwf	(btemp+10)^0,w,c
 23553   01114A  6ED9               	movwf	fsr2l,c
 23554   01114C  0E00               	movlw	0
 23555   01114E  202D               	addwfc	(btemp+11)^0,w,c
 23556   011150  6EDA               	movwf	fsr2h,c
 23557   011152  6ADF               	clrf	indf2,c
 23558                           
 23559                           ; BSR set to: 1
 23560                           ;main.c: 734:      MyeaDogM_WriteStringAtPos(0, 0, s);
 23561                           ;stkvar	_s @ sp[(-3)+0]
 23562   011154  0EFD               	movlw	-3
 23563   011156  006F FF8F FFE6     	movff	plusw1,postinc1
 23564   01115C  006F FF8F FFE6     	movff	plusw1,postinc1
 23565   011162  0E00               	movlw	0
 23566   011164  6EE6               	movwf	postinc1,c
 23567   011166  0E00               	movlw	0
 23568   011168  6EE6               	movwf	postinc1,c
 23569   01116A  EC29  F0B0         	call	_MyeaDogM_WriteStringAtPos	;wreg free
 23570                           
 23571                           ;main.c: 738:      if (V.wbit) {
 23572   01116E  EE23  F167         	lfsr	2,_V+333	;volatile
 23573   011172  A2DF               	btfss	indf2,1,c
 23574   011174  D00D               	goto	l1400
 23575                           
 23576                           ;main.c: 739:       V.s_state = SEQ_STATE_TX;
 23577   011176  0E02               	movlw	2
 23578   011178  006F FFA0  FC1A    	movff	wreg,_V
 23579                           
 23580                           ;main.c: 740:       V.failed_send = 0;
 23581   01117E  EE23  F167         	lfsr	2,_V+333	;volatile
 23582   011182  0E0F               	movlw	-241
 23583   011184  16DF               	andwf	223,f,c
 23584                           
 23585                           ;main.c: 741:       V.t_l_state = LINK_STATE_IDLE;
 23586   011186  0E00               	movlw	0
 23587   011188  006F FFA0  FC20    	movff	wreg,_V+6	;volatile
 23588                           
 23589                           ;main.c: 742:      } else {
 23590   01118E  D004               	goto	l13773
 23591   011190                     l1400:
 23592                           
 23593                           ;main.c: 743:       V.s_state = SEQ_STATE_TRIGGER;
 23594   011190  0E03               	movlw	3
 23595   011192  006F FFA0  FC1A    	movff	wreg,_V
 23596   011198                     l13773:
 23597                           
 23598                           ;main.c: 746:     if (V.r_l_state == LINK_STATE_ERROR)
 23599   011198  0063  F07F  FFE8   	movff	_V+5,wreg	;volatile
 23600   01119E  D011               	goto	L43
 23601   0111A0                     l13777:
 23602                           
 23603                           ;main.c: 753:     if (t_protocol(&V.t_l_state) == LINK_STATE_DONE) {
 23604   0111A0  0E20               	movlw	low (_V+6)
 23605   0111A2  6EE6               	movwf	postinc1,c
 23606   0111A4  0E0C               	movlw	high (_V+6)
 23607   0111A6  6EE6               	movwf	postinc1,c
 23608   0111A8  EC35  F09A         	call	_t_protocol	;wreg free
 23609   0111AC  0E04               	movlw	4
 23610   0111AE  1822               	xorwf	btemp^0,w,c
 23611   0111B0  A4D8               	btfss	status,2,c
 23612   0111B2  D004               	goto	l13781
 23613                           
 23614                           ;main.c: 754:      V.s_state = SEQ_STATE_TRIGGER;
 23615   0111B4  0E03               	movlw	3
 23616   0111B6  006F FFA0  FC1A    	movff	wreg,_V
 23617   0111BC                     l13781:
 23618                           
 23619                           ;main.c: 756:     if (V.t_l_state == LINK_STATE_ERROR)
 23620   0111BC  0063  F083  FFE8   	movff	_V+6,wreg	;volatile
 23621   0111C2                     L43:
 23622   0111C2  0A06               	xorlw	6
 23623   0111C4  A4D8               	btfss	status,2,c
 23624   0111C6  D0EB               	goto	l13809
 23625                           
 23626                           ;main.c: 757:      V.s_state = SEQ_STATE_ERROR;
 23627   0111C8  0E06               	movlw	6
 23628   0111CA  D087               	goto	L2
 23629   0111CC                     l13785:
 23630                           
 23631                           ;main.c: 760:     set_display_info(DIS_STR);
 23632   0111CC  0E00               	movlw	0
 23633   0111CE  6EE6               	movwf	postinc1,c
 23634   0111D0  EC54  F0BF         	call	_set_display_info	;wreg free
 23635                           
 23636                           ;main.c: 761:     s = get_vterm_ptr(0, 0);
 23637   0111D4  0E00               	movlw	0
 23638   0111D6  6EE6               	movwf	postinc1,c
 23639   0111D8  0E00               	movlw	0
 23640   0111DA  6EE6               	movwf	postinc1,c
 23641   0111DC  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 23642                           
 23643                           ;stkvar	_s @ sp[(-3)+0]
 23644   0111E0  0EFE               	movlw	-2
 23645   0111E2  0060  F08F  FFE3   	movff	btemp+1,plusw1
 23646   0111E8  0EFD               	movlw	-3
 23647   0111EA  0060  F08B  FFE3   	movff	btemp,plusw1
 23648                           
 23649                           ;main.c: 762:     if (V.queue) {
 23650   0111F0  EE23  F168         	lfsr	2,_V+334	;volatile
 23651   0111F4  A8DF               	btfss	indf2,4,c
 23652   0111F6  D02E               	goto	l1407
 23653                           
 23654                           ;main.c: 763:      V.r_l_state = LINK_STATE_IDLE;
 23655   0111F8  0E00               	movlw	0
 23656   0111FA  006F FFA0  FC1F    	movff	wreg,_V+5	;volatile
 23657                           
 23658                           ;main.c: 764:      V.t_l_state = LINK_STATE_IDLE;
 23659   011200  0E00               	movlw	0
 23660   011202  006F FFA0  FC20    	movff	wreg,_V+6	;volatile
 23661                           
 23662                           ;main.c: 765:      V.s_state = SEQ_STATE_TX;
 23663   011208  0E02               	movlw	2
 23664   01120A  006F FFA0  FC1A    	movff	wreg,_V
 23665                           
 23666                           ;main.c: 766:      sprintf(s, " S%dF%d # OKQ%d        ", V.stream, V.function, V.e_types
      +                          );
 23667   011210  EE23  F01D         	lfsr	2,_V+3	;volatile
 23668   011214  50DF               	movf	indf2,w,c
 23669   011216  6EE6               	movwf	postinc1,c
 23670   011218  0E00               	movlw	0
 23671   01121A  6EE6               	movwf	postinc1,c
 23672   01121C  EE23  F14E         	lfsr	2,_V+308	;volatile
 23673   011220  50DF               	movf	indf2,w,c
 23674   011222  6EE6               	movwf	postinc1,c
 23675   011224  0E00               	movlw	0
 23676   011226  6EE6               	movwf	postinc1,c
 23677   011228  EE23  F14D         	lfsr	2,_V+307	;volatile
 23678   01122C  50DF               	movf	indf2,w,c
 23679   01122E  6EE6               	movwf	postinc1,c
 23680   011230  0E00               	movlw	0
 23681   011232  6EE6               	movwf	postinc1,c
 23682   011234  0E9C               	movlw	low STR_13
 23683   011236  6EE6               	movwf	postinc1,c
 23684   011238  0EFD               	movlw	high STR_13
 23685   01123A  6EE6               	movwf	postinc1,c
 23686                           
 23687                           ;stkvar	_s @ sp[(-11)+0]
 23688   01123C  0EF5               	movlw	-11
 23689   01123E  006F FF8F FFE6     	movff	plusw1,postinc1
 23690   011244  006F FF8F FFE6     	movff	plusw1,postinc1
 23691   01124A  0E0A               	movlw	10
 23692   01124C  6EE6               	movwf	postinc1,c
 23693   01124E  EC32  F0B2         	call	_sprintf	;wreg free
 23694                           
 23695                           ;main.c: 767:     } else {
 23696   011252  D025               	goto	l13797
 23697   011254                     l1407:
 23698                           
 23699                           ;main.c: 768:      V.s_state = SEQ_STATE_DONE;
 23700   011254  0E05               	movlw	5
 23701   011256  006F FFA0  FC1A    	movff	wreg,_V
 23702                           
 23703                           ;main.c: 769:      sprintf(s, " S%dF%d # OK %d        ", V.stream, V.function, V.e_types
      +                          );
 23704   01125C  EE23  F01D         	lfsr	2,_V+3	;volatile
 23705   011260  50DF               	movf	indf2,w,c
 23706   011262  6EE6               	movwf	postinc1,c
 23707   011264  0E00               	movlw	0
 23708   011266  6EE6               	movwf	postinc1,c
 23709   011268  EE23  F14E         	lfsr	2,_V+308	;volatile
 23710   01126C  50DF               	movf	indf2,w,c
 23711   01126E  6EE6               	movwf	postinc1,c
 23712   011270  0E00               	movlw	0
 23713   011272  6EE6               	movwf	postinc1,c
 23714   011274  EE23  F14D         	lfsr	2,_V+307	;volatile
 23715   011278  50DF               	movf	indf2,w,c
 23716   01127A  6EE6               	movwf	postinc1,c
 23717   01127C  0E00               	movlw	0
 23718   01127E  6EE6               	movwf	postinc1,c
 23719   011280  0E84               	movlw	low STR_14
 23720   011282  6EE6               	movwf	postinc1,c
 23721   011284  0EFD               	movlw	high STR_14
 23722   011286  6EE6               	movwf	postinc1,c
 23723                           
 23724                           ;stkvar	_s @ sp[(-11)+0]
 23725   011288  0EF5               	movlw	-11
 23726   01128A  006F FF8F FFE6     	movff	plusw1,postinc1
 23727   011290  006F FF8F FFE6     	movff	plusw1,postinc1
 23728   011296  0E0A               	movlw	10
 23729   011298  6EE6               	movwf	postinc1,c
 23730   01129A  EC32  F0B2         	call	_sprintf	;wreg free
 23731   01129E                     l13797:
 23732                           
 23733                           ; BSR set to: 1
 23734                           ;main.c: 772:     s[16] = 0;
 23735                           ;stkvar	_s @ sp[(-3)+0]
 23736   01129E  0EFD               	movlw	-3
 23737   0112A0  006F FF8C  F02C    	movff	plusw1,btemp+10
 23738   0112A6  0EFE               	movlw	-2
 23739   0112A8  006F FF8C  F02D    	movff	plusw1,btemp+11
 23740   0112AE  0E10               	movlw	16
 23741   0112B0  242C               	addwf	(btemp+10)^0,w,c
 23742   0112B2  6ED9               	movwf	fsr2l,c
 23743   0112B4  0E00               	movlw	0
 23744   0112B6  202D               	addwfc	(btemp+11)^0,w,c
 23745   0112B8  6EDA               	movwf	fsr2h,c
 23746   0112BA  6ADF               	clrf	indf2,c
 23747                           
 23748                           ; BSR set to: 1
 23749                           ;main.c: 773:     MyeaDogM_WriteStringAtPos(0, 0, s);
 23750                           ;stkvar	_s @ sp[(-3)+0]
 23751   0112BC  0EFD               	movlw	-3
 23752   0112BE  006F FF8F FFE6     	movff	plusw1,postinc1
 23753   0112C4  006F FF8F FFE6     	movff	plusw1,postinc1
 23754   0112CA  0E00               	movlw	0
 23755   0112CC  6EE6               	movwf	postinc1,c
 23756   0112CE  0E00               	movlw	0
 23757   0112D0  6EE6               	movwf	postinc1,c
 23758   0112D2  EC29  F0B0         	call	_MyeaDogM_WriteStringAtPos	;wreg free
 23759                           
 23760                           ;main.c: 774:     break;
 23761   0112D6  D063               	goto	l13809
 23762   0112D8                     l1409:
 23763                           
 23764                           ;main.c: 776:     V.s_state = SEQ_STATE_INIT;
 23765   0112D8  0E00               	movlw	0
 23766   0112DA                     L2:
 23767   0112DA  006F FFA0  FC1A    	movff	wreg,_V
 23768                           
 23769                           ;main.c: 777:     break;
 23770   0112E0  D05E               	goto	l13809
 23771   0112E2                     l1411:
 23772                           
 23773                           ;main.c: 780:     V.s_state = SEQ_STATE_INIT;
 23774   0112E2  0E00               	movlw	0
 23775   0112E4  006F FFA0  FC1A    	movff	wreg,_V
 23776                           
 23777                           ;main.c: 781:     sprintf(get_vterm_ptr(2, 0), "E%d A%d T%d G%d #", V.error, V.abort, V.
      +                          timer_error, V.g_state);
 23778   0112EA  EE23  F01C         	lfsr	2,_V+2	;volatile
 23779   0112EE  50DF               	movf	indf2,w,c
 23780   0112F0  6EE6               	movwf	postinc1,c
 23781   0112F2  0E00               	movlw	0
 23782   0112F4  6EE6               	movwf	postinc1,c
 23783   0112F6  EE23  F15B         	lfsr	2,_V+321	;volatile
 23784   0112FA  006F FF78  F02C    	movff	postinc2,btemp+10
 23785   011300  006F FF74  F02D    	movff	postdec2,btemp+11
 23786   011306  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 23787   01130C  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 23788   011312  EE23  F150         	lfsr	2,_V+310	;volatile
 23789   011316  50DF               	movf	indf2,w,c
 23790   011318  6EE6               	movwf	postinc1,c
 23791   01131A  0E00               	movlw	0
 23792   01131C  6EE6               	movwf	postinc1,c
 23793   01131E  EE23  F14F         	lfsr	2,_V+309	;volatile
 23794   011322  50DF               	movf	indf2,w,c
 23795   011324  6EE6               	movwf	postinc1,c
 23796   011326  0E00               	movlw	0
 23797   011328  6EE6               	movwf	postinc1,c
 23798   01132A  0E45               	movlw	low STR_15
 23799   01132C  6EE6               	movwf	postinc1,c
 23800   01132E  0EFF               	movlw	high STR_15
 23801   011330  6EE6               	movwf	postinc1,c
 23802   011332  0E00               	movlw	0
 23803   011334  6EE6               	movwf	postinc1,c
 23804   011336  0E02               	movlw	2
 23805   011338  6EE6               	movwf	postinc1,c
 23806   01133A  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 23807   01133E  0060  F08B  FFE6   	movff	btemp,postinc1
 23808   011344  0060  F08F  FFE6   	movff	btemp+1,postinc1
 23809   01134A  0E0C               	movlw	12
 23810   01134C  6EE6               	movwf	postinc1,c
 23811   01134E  EC32  F0B2         	call	_sprintf	;wreg free
 23812                           
 23813                           ;main.c: 782:     update_lcd(0);
 23814   011352  0E00               	movlw	0
 23815   011354  6EE6               	movwf	postinc1,c
 23816   011356  ECAA  F0B2         	call	_update_lcd	;wreg free
 23817                           
 23818                           ;main.c: 783:     WaitMs(2000);
 23819   01135A  0ED0               	movlw	208
 23820   01135C  6EE6               	movwf	postinc1,c
 23821   01135E  0E07               	movlw	7
 23822   011360  6EE6               	movwf	postinc1,c
 23823   011362  EC9F  F0BC         	call	_WaitMs	;wreg free
 23824                           
 23825                           ;main.c: 784:     break;
 23826   011366  D01B               	goto	l13809
 23827   011368                     l13807:
 23828   011368  EE23  F01A         	lfsr	2,_V
 23829   01136C  50DF               	movf	indf2,w,c
 23830   01136E  6E2C               	movwf	(btemp+10)^0,c
 23831   011370  6A2D               	clrf	(btemp+11)^0,c
 23832                           
 23833                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23834                           ; Switch size 1, requested type "simple"
 23835                           ; Number of cases is 1, Range of values is 0 to 0
 23836                           ; switch strategies available:
 23837                           ; Name         Instructions Cycles
 23838                           ; simple_byte            4     3 (average)
 23839                           ;	Chosen strategy is simple_byte
 23840   011372  502D               	movf	(btemp+11)^0,w,c
 23841   011374  0A00               	xorlw	0	; case 0
 23842   011376  A4D8               	btfss	status,2,c
 23843   011378  D7B4               	goto	l1411
 23844                           
 23845                           ; Switch size 1, requested type "simple"
 23846                           ; Number of cases is 6, Range of values is 0 to 6
 23847                           ; switch strategies available:
 23848                           ; Name         Instructions Cycles
 23849                           ; simple_byte           19    10 (average)
 23850                           ;	Chosen strategy is simple_byte
 23851   01137A  502C               	movf	(btemp+10)^0,w,c
 23852   01137C  0A00               	xorlw	0	; case 0
 23853   01137E  B4D8               	btfsc	status,2,c
 23854   011380  D60E               	goto	l1391
 23855   011382  0A01               	xorlw	1	; case 1
 23856   011384  B4D8               	btfsc	status,2,c
 23857   011386  D677               	goto	l13747
 23858   011388  0A03               	xorlw	3	; case 2
 23859   01138A  B4D8               	btfsc	status,2,c
 23860   01138C  D709               	goto	l13777
 23861   01138E  0A01               	xorlw	1	; case 3
 23862   011390  B4D8               	btfsc	status,2,c
 23863   011392  D71C               	goto	l13785
 23864   011394  0A06               	xorlw	6	; case 5
 23865   011396  B4D8               	btfsc	status,2,c
 23866   011398  D79F               	goto	l1409
 23867   01139A  0A03               	xorlw	3	; case 6
 23868   01139C  D7A2               	goto	l1411
 23869   01139E                     l13809:
 23870                           
 23871                           ;main.c: 786:    if ((V.error == LINK_ERROR_NONE) && (V.abort == LINK_ERROR_NONE)) {
 23872   01139E  0063  F53F  FFE8   	movff	_V+309,wreg	;volatile
 23873   0113A4  0A0A               	xorlw	10
 23874   0113A6  A4D8               	btfss	status,2,c
 23875   0113A8  D261               	goto	l13899
 23876   0113AA  0063  F543  FFE8   	movff	_V+310,wreg	;volatile
 23877   0113B0  0A0A               	xorlw	10
 23878   0113B2  A4D8               	btfss	status,2,c
 23879   0113B4  D25B               	goto	l13899
 23880                           
 23881                           ;main.c: 787:     if (TimerDone(TMR_DISPLAY)) {
 23882   0113B6  0E0A               	movlw	10
 23883   0113B8  6EE6               	movwf	postinc1,c
 23884   0113BA  ECD7  F0BE         	call	_TimerDone	;wreg free
 23885   0113BE  5022               	movf	btemp^0,w,c
 23886   0113C0  B4D8               	btfsc	status,2,c
 23887   0113C2  D053               	goto	l13821
 23888                           
 23889                           ;main.c: 788:      if (V.debug)
 23890   0113C4  EE23  F168         	lfsr	2,_V+334	;volatile
 23891   0113C8  AADF               	btfss	indf2,5,c
 23892   0113CA  D027               	goto	l13819
 23893                           
 23894                           ;main.c: 789:       sprintf(get_vterm_ptr(2, 0), "H254 %d, T%ld       ", sizeof(header25
      +                          4), V.testing);
 23895   0113CC  EE23  F149         	lfsr	2,_V+303	;volatile
 23896   0113D0  006F FF7B FFE6     	movff	postinc2,postinc1
 23897   0113D6  006F FF7B FFE6     	movff	postinc2,postinc1
 23898   0113DC  006F FF7B FFE6     	movff	postinc2,postinc1
 23899   0113E2  006F FF7B FFE6     	movff	postinc2,postinc1
 23900   0113E8  0E01               	movlw	1
 23901   0113EA  6EE6               	movwf	postinc1,c
 23902   0113EC  0E01               	movlw	1
 23903   0113EE  6EE6               	movwf	postinc1,c
 23904   0113F0  0E49               	movlw	low STR_16
 23905   0113F2  6EE6               	movwf	postinc1,c
 23906   0113F4  0EFE               	movlw	high STR_16
 23907   0113F6  6EE6               	movwf	postinc1,c
 23908   0113F8  0E00               	movlw	0
 23909   0113FA  6EE6               	movwf	postinc1,c
 23910   0113FC  0E02               	movlw	2
 23911   0113FE  6EE6               	movwf	postinc1,c
 23912   011400  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 23913   011404  0060  F08B  FFE6   	movff	btemp,postinc1
 23914   01140A  0060  F08F  FFE6   	movff	btemp+1,postinc1
 23915   011410  0E0A               	movlw	10
 23916   011412  6EE6               	movwf	postinc1,c
 23917   011414  EC32  F0B2         	call	_sprintf	;wreg free
 23918   011418  D028               	goto	l13821
 23919   01141A                     l13819:
 23920                           
 23921                           ;main.c: 791:       sprintf(get_vterm_ptr(2, 0), "HOST: %ld G%d      #", V.ticks, V.g_st
      +                          ate);
 23922   01141A  EE23  F01C         	lfsr	2,_V+2	;volatile
 23923   01141E  50DF               	movf	indf2,w,c
 23924   011420  6EE6               	movwf	postinc1,c
 23925   011422  0E00               	movlw	0
 23926   011424  6EE6               	movwf	postinc1,c
 23927   011426  EE23  F141         	lfsr	2,_V+295	;volatile
 23928   01142A  006F FF7B FFE6     	movff	postinc2,postinc1
 23929   011430  006F FF7B FFE6     	movff	postinc2,postinc1
 23930   011436  006F FF7B FFE6     	movff	postinc2,postinc1
 23931   01143C  006F FF7B FFE6     	movff	postinc2,postinc1
 23932   011442  0E5E               	movlw	low STR_10
 23933   011444  6EE6               	movwf	postinc1,c
 23934   011446  0EFE               	movlw	high STR_10
 23935   011448  6EE6               	movwf	postinc1,c
 23936   01144A  0E00               	movlw	0
 23937   01144C  6EE6               	movwf	postinc1,c
 23938   01144E  0E02               	movlw	2
 23939   011450  6EE6               	movwf	postinc1,c
 23940   011452  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 23941   011456  0060  F08B  FFE6   	movff	btemp,postinc1
 23942   01145C  0060  F08F  FFE6   	movff	btemp+1,postinc1
 23943   011462  0E0A               	movlw	10
 23944   011464  6EE6               	movwf	postinc1,c
 23945   011466  EC32  F0B2         	call	_sprintf	;wreg free
 23946   01146A                     l13821:
 23947                           
 23948                           ;main.c: 797:     if (((V.g_state == GEM_STATE_REMOTE) && (V.s_state == SEQ_STATE_RX) &&
      +                           !V.queue)) {
 23949   01146A  0063  F073  FFE8   	movff	_V+2,wreg	;volatile
 23950   011470  0A04               	xorlw	4
 23951   011472  A4D8               	btfss	status,2,c
 23952   011474  D1FB               	goto	l13899
 23953   011476  0063  F06B  FFE8   	movff	_V,wreg
 23954   01147C  0A01               	xorlw	1
 23955   01147E  A4D8               	btfss	status,2,c
 23956   011480  D1F5               	goto	l13899
 23957   011482  EE23  F168         	lfsr	2,_V+334	;volatile
 23958   011486  B8DF               	btfsc	indf2,4,c
 23959   011488  D1F1               	goto	l13899
 23960                           
 23961                           ;main.c: 798:      if ((V.r_l_state == LINK_STATE_IDLE) && (V.t_l_state == LINK_STATE_ID
      +                          LE)) {
 23962   01148A  EE23  F01F         	lfsr	2,_V+5	;volatile
 23963   01148E  50DF               	movf	indf2,w,c
 23964   011490  A4D8               	btfss	status,2,c
 23965   011492  D1EC               	goto	l13899
 23966   011494  EE23  F020         	lfsr	2,_V+6	;volatile
 23967   011498  50DF               	movf	indf2,w,c
 23968   01149A  A4D8               	btfss	status,2,c
 23969   01149C  D1E7               	goto	l13899
 23970                           
 23971                           ;main.c: 799:       if (TimerDone(TMR_HBIO)) {
 23972   01149E  0E06               	movlw	6
 23973   0114A0  6EE6               	movwf	postinc1,c
 23974   0114A2  ECD7  F0BE         	call	_TimerDone	;wreg free
 23975   0114A6  5022               	movf	btemp^0,w,c
 23976   0114A8  B4D8               	btfsc	status,2,c
 23977   0114AA  D1E0               	goto	l13899
 23978                           
 23979                           ;main.c: 800:        set_display_info(DIS_STR);
 23980   0114AC  0E00               	movlw	0
 23981   0114AE  6EE6               	movwf	postinc1,c
 23982   0114B0  EC54  F0BF         	call	_set_display_info	;wreg free
 23983                           
 23984                           ;main.c: 802:        if (V.stack) {
 23985   0114B4  EE23  F169         	lfsr	2,_V+335	;volatile
 23986   0114B8  50DF               	movf	223,w,c
 23987   0114BA  0B07               	andlw	7
 23988   0114BC  0900               	iorlw	0
 23989   0114BE  B4D8               	btfsc	status,2,c
 23990   0114C0  D013               	goto	l13847
 23991                           
 23992                           ;main.c: 803:         hb_message();
 23993   0114C2  ECC6  F0B9         	call	_hb_message	;wreg free
 23994                           
 23995                           ;main.c: 804:         V.msg_error = MSG_ERROR_NONE;
 23996   0114C6  0E00               	movlw	0
 23997   0114C8  006F FFA0  FD51    	movff	wreg,_V+311	;volatile
 23998                           
 23999                           ;main.c: 805:         V.ping_count = 0;
 24000   0114CE  0E00               	movlw	0
 24001   0114D0  006F FFA0  FD9A    	movff	wreg,_V+384	;volatile
 24002                           
 24003                           ;main.c: 806:         V.error = LINK_ERROR_NONE;
 24004   0114D6  0E0A               	movlw	10
 24005   0114D8  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 24006                           
 24007                           ;main.c: 807:         V.abort = LINK_ERROR_NONE;
 24008   0114DE  0E0A               	movlw	10
 24009   0114E0  006F FFA0  FD50    	movff	wreg,_V+310	;volatile
 24010                           
 24011                           ;main.c: 808:        } else {
 24012   0114E6  D1C2               	goto	l13899
 24013   0114E8                     l13847:
 24014                           
 24015                           ;main.c: 809:         StartTimer(TMR_HBIO, 30000);
 24016   0114E8  0E30               	movlw	48
 24017   0114EA  6EE6               	movwf	postinc1,c
 24018   0114EC  0E75               	movlw	117
 24019   0114EE  6EE6               	movwf	postinc1,c
 24020   0114F0  0E06               	movlw	6
 24021   0114F2  6EE6               	movwf	postinc1,c
 24022   0114F4  EC2A  F0BC         	call	_StartTimer	;wreg free
 24023                           
 24024                           ;main.c: 810:         if (V.ping_count++ > 4) {
 24025   0114F8  EE23  F19A         	lfsr	2,_V+384	;volatile
 24026   0114FC  006F FF7C  F02D    	movff	indf2,btemp+11
 24027   011502  0E01               	movlw	1
 24028   011504  26DF               	addwf	indf2,f,c
 24029   011506  0E04               	movlw	4
 24030   011508  642D               	cpfsgt	(btemp+11)^0,c
 24031   01150A  D03C               	goto	l13863
 24032                           
 24033                           ;main.c: 811:          set_display_info(DIS_STR);
 24034   01150C  0E00               	movlw	0
 24035   01150E  6EE6               	movwf	postinc1,c
 24036   011510  EC54  F0BF         	call	_set_display_info	;wreg free
 24037                           
 24038                           ;main.c: 812:          hb_message();
 24039   011514  ECC6  F0B9         	call	_hb_message	;wreg free
 24040                           
 24041                           ;main.c: 813:          sprintf(get_vterm_ptr(0, 0), "Ping P%d RTO %d    ", V.g_state, V.
      +                          equip_timeout);
 24042   011518  EE23  F161         	lfsr	2,_V+327	;volatile
 24043   01151C  006F FF78  F02C    	movff	postinc2,btemp+10
 24044   011522  006F FF74  F02D    	movff	postdec2,btemp+11
 24045   011528  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 24046   01152E  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 24047   011534  EE23  F01C         	lfsr	2,_V+2	;volatile
 24048   011538  50DF               	movf	indf2,w,c
 24049   01153A  6EE6               	movwf	postinc1,c
 24050   01153C  0E00               	movlw	0
 24051   01153E  6EE6               	movwf	postinc1,c
 24052   011540  0EAF               	movlw	low STR_18
 24053   011542  6EE6               	movwf	postinc1,c
 24054   011544  0EFE               	movlw	high STR_18
 24055   011546  6EE6               	movwf	postinc1,c
 24056   011548  0E00               	movlw	0
 24057   01154A  6EE6               	movwf	postinc1,c
 24058   01154C  0E00               	movlw	0
 24059   01154E  6EE6               	movwf	postinc1,c
 24060   011550  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 24061   011554  0060  F08B  FFE6   	movff	btemp,postinc1
 24062   01155A  0060  F08F  FFE6   	movff	btemp+1,postinc1
 24063   011560  0E08               	movlw	8
 24064   011562  6EE6               	movwf	postinc1,c
 24065   011564  EC32  F0B2         	call	_sprintf	;wreg free
 24066                           
 24067                           ; BSR set to: 1
 24068                           ;main.c: 814:          update_lcd(0);
 24069   011568  0E00               	movlw	0
 24070   01156A  6EE6               	movwf	postinc1,c
 24071   01156C  ECAA  F0B2         	call	_update_lcd	;wreg free
 24072                           
 24073                           ;main.c: 815:          WaitMs(250);
 24074   011570  0EFA               	movlw	250
 24075   011572  6EE6               	movwf	postinc1,c
 24076   011574  0E00               	movlw	0
 24077   011576  6EE6               	movwf	postinc1,c
 24078   011578  EC9F  F0BC         	call	_WaitMs	;wreg free
 24079                           
 24080                           ;main.c: 816:          V.ping_count = 0;
 24081   01157C  0E00               	movlw	0
 24082   01157E  006F FFA0  FD9A    	movff	wreg,_V+384	;volatile
 24083   011584                     l13863:
 24084                           
 24085                           ;main.c: 818:         set_display_info(DIS_STR);
 24086   011584  0E00               	movlw	0
 24087   011586  6EE6               	movwf	postinc1,c
 24088   011588  EC54  F0BF         	call	_set_display_info	;wreg free
 24089   01158C  D16F               	goto	l13899
 24090   01158E                     l1424:
 24091                           
 24092                           ;main.c: 828:     V.m_l_state = LINK_STATE_IDLE;
 24093   01158E  0E00               	movlw	0
 24094   011590  006F FFA0  FC1E    	movff	wreg,_V+4	;volatile
 24095                           
 24096                           ;main.c: 829:     V.s_state = SEQ_STATE_RX;
 24097   011596  0E01               	movlw	1
 24098   011598  006F FFA0  FC1A    	movff	wreg,_V
 24099                           
 24100                           ;main.c: 830:     if (V.debug)
 24101   01159E  EE23  F168         	lfsr	2,_V+334	;volatile
 24102   0115A2  AADF               	btfss	indf2,5,c
 24103   0115A4  D027               	goto	l13869
 24104                           
 24105                           ;main.c: 831:      sprintf(get_vterm_ptr(2, 0), "H254 %d, T%ld       ", sizeof(header254
      +                          ), V.testing);
 24106   0115A6  EE23  F149         	lfsr	2,_V+303	;volatile
 24107   0115AA  006F FF7B FFE6     	movff	postinc2,postinc1
 24108   0115B0  006F FF7B FFE6     	movff	postinc2,postinc1
 24109   0115B6  006F FF7B FFE6     	movff	postinc2,postinc1
 24110   0115BC  006F FF7B FFE6     	movff	postinc2,postinc1
 24111   0115C2  0E01               	movlw	1
 24112   0115C4  6EE6               	movwf	postinc1,c
 24113   0115C6  0E01               	movlw	1
 24114   0115C8  6EE6               	movwf	postinc1,c
 24115   0115CA  0E49               	movlw	low STR_16
 24116   0115CC  6EE6               	movwf	postinc1,c
 24117   0115CE  0EFE               	movlw	high STR_16
 24118   0115D0  6EE6               	movwf	postinc1,c
 24119   0115D2  0E00               	movlw	0
 24120   0115D4  6EE6               	movwf	postinc1,c
 24121   0115D6  0E02               	movlw	2
 24122   0115D8  6EE6               	movwf	postinc1,c
 24123   0115DA  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 24124   0115DE  0060  F08B  FFE6   	movff	btemp,postinc1
 24125   0115E4  0060  F08F  FFE6   	movff	btemp+1,postinc1
 24126   0115EA  0E0A               	movlw	10
 24127   0115EC  6EE6               	movwf	postinc1,c
 24128   0115EE  EC32  F0B2         	call	_sprintf	;wreg free
 24129   0115F2  D0C5               	goto	l13889
 24130   0115F4                     l13869:
 24131                           
 24132                           ;main.c: 833:      sprintf(get_vterm_ptr(2, 0), "LOG: U%d G%d %d %d      #", V.uart, V.g
      +                          _state, V.timer_error, V.checksum_error);
 24133   0115F4  EE23  F159         	lfsr	2,_V+319	;volatile
 24134   0115F8  006F FF78  F02C    	movff	postinc2,btemp+10
 24135   0115FE  006F FF74  F02D    	movff	postdec2,btemp+11
 24136   011604  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 24137   01160A  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 24138   011610  EE23  F15B         	lfsr	2,_V+321	;volatile
 24139   011614  006F FF78  F02C    	movff	postinc2,btemp+10
 24140   01161A  006F FF74  F02D    	movff	postdec2,btemp+11
 24141   011620  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 24142   011626  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 24143   01162C  EE23  F01C         	lfsr	2,_V+2	;volatile
 24144   011630  50DF               	movf	indf2,w,c
 24145   011632  6EE6               	movwf	postinc1,c
 24146   011634  0E00               	movlw	0
 24147   011636  6EE6               	movwf	postinc1,c
 24148   011638  EE23  F197         	lfsr	2,_V+381	;volatile
 24149   01163C  50DF               	movf	indf2,w,c
 24150   01163E  6EE6               	movwf	postinc1,c
 24151   011640  0E00               	movlw	0
 24152   011642  6EE6               	movwf	postinc1,c
 24153   011644  0E21               	movlw	low STR_20
 24154   011646  6EE6               	movwf	postinc1,c
 24155   011648  0EFD               	movlw	high STR_20
 24156   01164A  6EE6               	movwf	postinc1,c
 24157   01164C  0E00               	movlw	0
 24158   01164E  6EE6               	movwf	postinc1,c
 24159   011650  0E02               	movlw	2
 24160   011652  6EE6               	movwf	postinc1,c
 24161   011654  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 24162   011658  0060  F08B  FFE6   	movff	btemp,postinc1
 24163   01165E  0060  F08F  FFE6   	movff	btemp+1,postinc1
 24164   011664  0E0C               	movlw	12
 24165   011666  6EE6               	movwf	postinc1,c
 24166   011668  EC32  F0B2         	call	_sprintf	;wreg free
 24167   01166C  D088               	goto	l13889
 24168   01166E                     l13871:
 24169                           
 24170                           ;main.c: 847:     if (m_protocol(&V.m_l_state) == LINK_STATE_DONE) {
 24171   01166E  0E1E               	movlw	low (_V+4)
 24172   011670  6EE6               	movwf	postinc1,c
 24173   011672  0E0C               	movlw	high (_V+4)
 24174   011674  6EE6               	movwf	postinc1,c
 24175   011676  EC6A  F090         	call	_m_protocol	;wreg free
 24176   01167A  0E04               	movlw	4
 24177   01167C  1822               	xorwf	btemp^0,w,c
 24178   01167E  A4D8               	btfss	status,2,c
 24179   011680  D03B               	goto	l13879
 24180                           
 24181                           ;main.c: 848:      sprintf(V.buf, "S%dF%d #%ld       ", V.stream, V.function, V.ticks);
 24182   011682  EE23  F141         	lfsr	2,_V+295	;volatile
 24183   011686  006F FF7B FFE6     	movff	postinc2,postinc1
 24184   01168C  006F FF7B FFE6     	movff	postinc2,postinc1
 24185   011692  006F FF7B FFE6     	movff	postinc2,postinc1
 24186   011698  006F FF7B FFE6     	movff	postinc2,postinc1
 24187   01169E  EE23  F14E         	lfsr	2,_V+308	;volatile
 24188   0116A2  50DF               	movf	indf2,w,c
 24189   0116A4  6EE6               	movwf	postinc1,c
 24190   0116A6  0E00               	movlw	0
 24191   0116A8  6EE6               	movwf	postinc1,c
 24192   0116AA  EE23  F14D         	lfsr	2,_V+307	;volatile
 24193   0116AE  50DF               	movf	indf2,w,c
 24194   0116B0  6EE6               	movwf	postinc1,c
 24195   0116B2  0E00               	movlw	0
 24196   0116B4  6EE6               	movwf	postinc1,c
 24197   0116B6  0EFC               	movlw	low STR_21
 24198   0116B8  6EE6               	movwf	postinc1,c
 24199   0116BA  0EFE               	movlw	high STR_21
 24200   0116BC  6EE6               	movwf	postinc1,c
 24201   0116BE  0E21               	movlw	low (_V+7)
 24202   0116C0  6EE6               	movwf	postinc1,c
 24203   0116C2  0E0C               	movlw	high (_V+7)
 24204   0116C4  6EE6               	movwf	postinc1,c
 24205   0116C6  0E0C               	movlw	12
 24206   0116C8  6EE6               	movwf	postinc1,c
 24207   0116CA  EC32  F0B2         	call	_sprintf	;wreg free
 24208                           
 24209                           ; BSR set to: 1
 24210                           ;main.c: 849:      V.buf[13] = 0;
 24211   0116CE  0E00               	movlw	0
 24212   0116D0  006F FFA0  FC2E    	movff	wreg,_V+20	;volatile
 24213                           
 24214                           ;main.c: 850:      MyeaDogM_WriteStringAtPos(V.uart - 1, 0, V.buf);
 24215   0116D6  0E21               	movlw	low (_V+7)
 24216   0116D8  6EE6               	movwf	postinc1,c
 24217   0116DA  0E0C               	movlw	high (_V+7)
 24218   0116DC  6EE6               	movwf	postinc1,c
 24219   0116DE  0E00               	movlw	0
 24220   0116E0  6EE6               	movwf	postinc1,c
 24221   0116E2  0063  F65C  F02D   	movff	_V+381,btemp+11	;volatile
 24222   0116E8  042D               	decf	(btemp+11)^0,w,c
 24223   0116EA  6EE6               	movwf	postinc1,c
 24224   0116EC  EC29  F0B0         	call	_MyeaDogM_WriteStringAtPos	;wreg free
 24225                           
 24226                           ;main.c: 851:      V.s_state = SEQ_STATE_TRIGGER;
 24227   0116F0  0E03               	movlw	3
 24228   0116F2  006F FFA0  FC1A    	movff	wreg,_V
 24229   0116F8                     l13879:
 24230                           
 24231                           ;main.c: 853:     if (V.m_l_state == LINK_STATE_ERROR)
 24232   0116F8  0063  F07B  FFE8   	movff	_V+4,wreg	;volatile
 24233   0116FE  0A06               	xorlw	6
 24234   011700  A4D8               	btfss	status,2,c
 24235   011702  D03D               	goto	l13889
 24236                           
 24237                           ;main.c: 854:      V.s_state = SEQ_STATE_ERROR;
 24238   011704  0E06               	movlw	6
 24239   011706  D01F               	goto	L3
 24240   011708                     l1431:
 24241                           
 24242                           ;main.c: 857:     V.s_state = SEQ_STATE_DONE;
 24243   011708  0E05               	movlw	5
 24244   01170A  006F FFA0  FC1A    	movff	wreg,_V
 24245                           
 24246                           ;main.c: 858:     sprintf(V.buf, "OK ");
 24247   011710  0EF5               	movlw	low STR_22
 24248   011712  6EE6               	movwf	postinc1,c
 24249   011714  0EFF               	movlw	high STR_22
 24250   011716  6EE6               	movwf	postinc1,c
 24251   011718  0E21               	movlw	low (_V+7)
 24252   01171A  6EE6               	movwf	postinc1,c
 24253   01171C  0E0C               	movlw	high (_V+7)
 24254   01171E  6EE6               	movwf	postinc1,c
 24255   011720  0E04               	movlw	4
 24256   011722  6EE6               	movwf	postinc1,c
 24257   011724  EC32  F0B2         	call	_sprintf	;wreg free
 24258                           
 24259                           ;main.c: 859:     MyeaDogM_WriteStringAtPos(V.uart - 1, 13, V.buf);
 24260   011728  0E21               	movlw	low (_V+7)
 24261   01172A  6EE6               	movwf	postinc1,c
 24262   01172C  0E0C               	movlw	high (_V+7)
 24263   01172E  6EE6               	movwf	postinc1,c
 24264   011730  0E0D               	movlw	13
 24265   011732  6EE6               	movwf	postinc1,c
 24266   011734  0063  F65C  F02D   	movff	_V+381,btemp+11	;volatile
 24267   01173A  042D               	decf	(btemp+11)^0,w,c
 24268   01173C  6EE6               	movwf	postinc1,c
 24269   01173E  EC29  F0B0         	call	_MyeaDogM_WriteStringAtPos	;wreg free
 24270                           
 24271                           ;main.c: 860:     break;
 24272   011742  D01D               	goto	l13889
 24273   011744                     l1434:
 24274                           
 24275                           ;main.c: 864:     V.s_state = SEQ_STATE_INIT;
 24276   011744  0E00               	movlw	0
 24277   011746                     L3:
 24278   011746  006F FFA0  FC1A    	movff	wreg,_V
 24279                           
 24280                           ;main.c: 865:     break;
 24281   01174C  D018               	goto	l13889
 24282   01174E                     l13887:
 24283   01174E  EE23  F01A         	lfsr	2,_V
 24284   011752  50DF               	movf	indf2,w,c
 24285   011754  6E2C               	movwf	(btemp+10)^0,c
 24286   011756  6A2D               	clrf	(btemp+11)^0,c
 24287                           
 24288                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24289                           ; Switch size 1, requested type "simple"
 24290                           ; Number of cases is 1, Range of values is 0 to 0
 24291                           ; switch strategies available:
 24292                           ; Name         Instructions Cycles
 24293                           ; simple_byte            4     3 (average)
 24294                           ;	Chosen strategy is simple_byte
 24295   011758  502D               	movf	(btemp+11)^0,w,c
 24296   01175A  0A00               	xorlw	0	; case 0
 24297   01175C  A4D8               	btfss	status,2,c
 24298   01175E  D7F2               	goto	l1434
 24299                           
 24300                           ; Switch size 1, requested type "simple"
 24301                           ; Number of cases is 5, Range of values is 0 to 6
 24302                           ; switch strategies available:
 24303                           ; Name         Instructions Cycles
 24304                           ; simple_byte           16     9 (average)
 24305                           ;	Chosen strategy is simple_byte
 24306   011760  502C               	movf	(btemp+10)^0,w,c
 24307   011762  0A00               	xorlw	0	; case 0
 24308   011764  B4D8               	btfsc	status,2,c
 24309   011766  D713               	goto	l1424
 24310   011768  0A01               	xorlw	1	; case 1
 24311   01176A  B4D8               	btfsc	status,2,c
 24312   01176C  D780               	goto	l13871
 24313   01176E  0A02               	xorlw	2	; case 3
 24314   011770  B4D8               	btfsc	status,2,c
 24315   011772  D7CA               	goto	l1431
 24316   011774  0A06               	xorlw	6	; case 5
 24317   011776  B4D8               	btfsc	status,2,c
 24318   011778  D7E5               	goto	l1434
 24319   01177A  0A03               	xorlw	3	; case 6
 24320   01177C  D7E3               	goto	l1434
 24321   01177E                     l13889:
 24322                           
 24323                           ;main.c: 867:    if (V.debug)
 24324   01177E  EE23  F168         	lfsr	2,_V+334	;volatile
 24325   011782  AADF               	btfss	indf2,5,c
 24326   011784  D01B               	goto	l13893
 24327                           
 24328                           ;main.c: 868:     sprintf(get_vterm_ptr(2, 0), "Equip type %d       ", V.e_types);
 24329   011786  EE23  F01D         	lfsr	2,_V+3	;volatile
 24330   01178A  50DF               	movf	indf2,w,c
 24331   01178C  6EE6               	movwf	postinc1,c
 24332   01178E  0E00               	movlw	0
 24333   011790  6EE6               	movwf	postinc1,c
 24334   011792  0E34               	movlw	low STR_23
 24335   011794  6EE6               	movwf	postinc1,c
 24336   011796  0EFE               	movlw	high STR_23
 24337   011798  6EE6               	movwf	postinc1,c
 24338   01179A  0E00               	movlw	0
 24339   01179C  6EE6               	movwf	postinc1,c
 24340   01179E  0E02               	movlw	2
 24341   0117A0  6EE6               	movwf	postinc1,c
 24342   0117A2  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 24343   0117A6  0060  F08B  FFE6   	movff	btemp,postinc1
 24344   0117AC  0060  F08F  FFE6   	movff	btemp+1,postinc1
 24345   0117B2  0E06               	movlw	6
 24346   0117B4  6EE6               	movwf	postinc1,c
 24347   0117B6  EC32  F0B2         	call	_sprintf	;wreg free
 24348   0117BA  D058               	goto	l13899
 24349   0117BC                     l13893:
 24350                           
 24351                           ;main.c: 870:     sprintf(get_vterm_ptr(2, 0), "LOG: U%d G%d %d %d      #", V.uart, V.g_
      +                          state, V.timer_error, V.checksum_error);
 24352   0117BC  EE23  F159         	lfsr	2,_V+319	;volatile
 24353   0117C0  006F FF78  F02C    	movff	postinc2,btemp+10
 24354   0117C6  006F FF74  F02D    	movff	postdec2,btemp+11
 24355   0117CC  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 24356   0117D2  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 24357   0117D8  EE23  F15B         	lfsr	2,_V+321	;volatile
 24358   0117DC  006F FF78  F02C    	movff	postinc2,btemp+10
 24359   0117E2  006F FF74  F02D    	movff	postdec2,btemp+11
 24360   0117E8  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 24361   0117EE  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 24362   0117F4  EE23  F01C         	lfsr	2,_V+2	;volatile
 24363   0117F8  50DF               	movf	indf2,w,c
 24364   0117FA  6EE6               	movwf	postinc1,c
 24365   0117FC  0E00               	movlw	0
 24366   0117FE  6EE6               	movwf	postinc1,c
 24367   011800  EE23  F197         	lfsr	2,_V+381	;volatile
 24368   011804  50DF               	movf	indf2,w,c
 24369   011806  6EE6               	movwf	postinc1,c
 24370   011808  0E00               	movlw	0
 24371   01180A  6EE6               	movwf	postinc1,c
 24372   01180C  0E21               	movlw	low STR_20
 24373   01180E  6EE6               	movwf	postinc1,c
 24374   011810  0EFD               	movlw	high STR_20
 24375   011812  6EE6               	movwf	postinc1,c
 24376   011814  0E00               	movlw	0
 24377   011816  6EE6               	movwf	postinc1,c
 24378   011818  0E02               	movlw	2
 24379   01181A  6EE6               	movwf	postinc1,c
 24380   01181C  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 24381   011820  0060  F08B  FFE6   	movff	btemp,postinc1
 24382   011826  0060  F08F  FFE6   	movff	btemp+1,postinc1
 24383   01182C  0E0C               	movlw	12
 24384   01182E  6EE6               	movwf	postinc1,c
 24385   011830  EC32  F0B2         	call	_sprintf	;wreg free
 24386   011834  D01B               	goto	l13899
 24387   011836                     l1438:
 24388                           
 24389                           ;main.c: 874:    V.ui_state = UI_STATE_INIT;
 24390   011836  0E00               	movlw	0
 24391   011838  006F FFA0  FC1B    	movff	wreg,_V+1	;volatile
 24392                           
 24393                           ;main.c: 875:    break;
 24394   01183E  D016               	goto	l13899
 24395   011840                     l13897:
 24396   011840  EE23  F01B         	lfsr	2,_V+1	;volatile
 24397   011844  50DF               	movf	indf2,w,c
 24398   011846  6E2C               	movwf	(btemp+10)^0,c
 24399   011848  6A2D               	clrf	(btemp+11)^0,c
 24400                           
 24401                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24402                           ; Switch size 1, requested type "simple"
 24403                           ; Number of cases is 1, Range of values is 0 to 0
 24404                           ; switch strategies available:
 24405                           ; Name         Instructions Cycles
 24406                           ; simple_byte            4     3 (average)
 24407                           ;	Chosen strategy is simple_byte
 24408   01184A  502D               	movf	(btemp+11)^0,w,c
 24409   01184C  0A00               	xorlw	0	; case 0
 24410   01184E  A4D8               	btfss	status,2,c
 24411   011850  D7F2               	goto	l1438
 24412                           
 24413                           ; Switch size 1, requested type "simple"
 24414                           ; Number of cases is 4, Range of values is 0 to 4
 24415                           ; switch strategies available:
 24416                           ; Name         Instructions Cycles
 24417                           ; simple_byte           13     7 (average)
 24418                           ;	Chosen strategy is simple_byte
 24419   011852  502C               	movf	(btemp+10)^0,w,c
 24420   011854  0A00               	xorlw	0	; case 0
 24421   011856  B4D8               	btfsc	status,2,c
 24422   011858  EF00  F087         	goto	l13699
 24423   01185C  0A01               	xorlw	1	; case 1
 24424   01185E  B4D8               	btfsc	status,2,c
 24425   011860  D583               	goto	l13807
 24426   011862  0A02               	xorlw	2	; case 3
 24427   011864  B4D8               	btfsc	status,2,c
 24428   011866  D773               	goto	l13887
 24429   011868  0A07               	xorlw	7	; case 4
 24430   01186A  D7E5               	goto	l1438
 24431   01186C                     l13899:
 24432                           
 24433                           ;main.c: 877:   if (V.ticks) {
 24434   01186C  EE23  F141         	lfsr	2,_V+295	;volatile
 24435   011870  50DE               	movf	postinc2,w,c
 24436   011872  10DE               	iorwf	postinc2,w,c
 24437   011874  10DE               	iorwf	postinc2,w,c
 24438   011876  10DE               	iorwf	postinc2,w,c
 24439   011878  B4D8               	btfsc	status,2,c
 24440   01187A  D02C               	goto	l13909
 24441                           
 24442                           ;main.c: 878:    if (V.failed_receive) {
 24443   01187C  EE23  F168         	lfsr	2,_V+334	;volatile
 24444   011880  50DF               	movf	223,w,c
 24445   011882  0B0F               	andlw	15
 24446   011884  0900               	iorlw	0
 24447   011886  B4D8               	btfsc	status,2,c
 24448   011888  D00B               	goto	l1451
 24449                           
 24450                           ;main.c: 879:     do { LATDbits.LATD4 = 0; } while(0);
 24451   01188A  98BD               	bcf	189,4,c	;volatile
 24452                           
 24453                           ;main.c: 880:     do { LATDbits.LATD5 = 1; } while(0);
 24454   01188C  8ABD               	bsf	189,5,c	;volatile
 24455                           
 24456                           ;main.c: 881:     if (V.error == LINK_ERROR_CHECKSUM) {
 24457   01188E  0063  F53F  FFE8   	movff	_V+309,wreg	;volatile
 24458   011894  0A0F               	xorlw	15
 24459   011896  A4D8               	btfss	status,2,c
 24460   011898  D007               	goto	l13905
 24461                           
 24462                           ;main.c: 882:      do { LATFbits.LATF4 = 0; } while(0);
 24463   01189A  98BF               	bcf	191,4,c	;volatile
 24464                           
 24465                           ;main.c: 883:      do { LATFbits.LATF5 = 1; } while(0);
 24466   01189C  8ABF               	bsf	191,5,c	;volatile
 24467   01189E  D004               	goto	l13905
 24468   0118A0                     l1451:
 24469   0118A0  88BD               	bsf	189,4,c	;volatile
 24470                           
 24471                           ;main.c: 887:     do { LATDbits.LATD5 = 0; } while(0);
 24472   0118A2  9ABD               	bcf	189,5,c	;volatile
 24473                           
 24474                           ;main.c: 888:     do { LATFbits.LATF4 = 1; } while(0);
 24475   0118A4  88BF               	bsf	191,4,c	;volatile
 24476                           
 24477                           ;main.c: 889:     do { LATFbits.LATF5 = 0; } while(0);
 24478   0118A6  9ABF               	bcf	191,5,c	;volatile
 24479   0118A8                     l13905:
 24480                           
 24481                           ;main.c: 891:    if (V.failed_send) {
 24482   0118A8  EE23  F167         	lfsr	2,_V+333	;volatile
 24483   0118AC  38DF               	swapf	223,w,c
 24484   0118AE  0B0F               	andlw	15
 24485   0118B0  0900               	iorlw	0
 24486   0118B2  B4D8               	btfsc	status,2,c
 24487   0118B4  D00B               	goto	l1470
 24488                           
 24489                           ;main.c: 892:     do { LATDbits.LATD6 = 0; } while(0);
 24490   0118B6  9CBD               	bcf	189,6,c	;volatile
 24491                           
 24492                           ;main.c: 893:     do { LATDbits.LATD7 = 1; } while(0);
 24493   0118B8  8EBD               	bsf	189,7,c	;volatile
 24494                           
 24495                           ;main.c: 894:     if (V.error == LINK_ERROR_CHECKSUM) {
 24496   0118BA  0063  F53F  FFE8   	movff	_V+309,wreg	;volatile
 24497   0118C0  0A0F               	xorlw	15
 24498   0118C2  A4D8               	btfss	status,2,c
 24499   0118C4  D007               	goto	l13909
 24500                           
 24501                           ;main.c: 895:      do { LATFbits.LATF6 = 0; } while(0);
 24502   0118C6  9CBF               	bcf	191,6,c	;volatile
 24503                           
 24504                           ;main.c: 896:      do { LATFbits.LATF7 = 1; } while(0);
 24505   0118C8  8EBF               	bsf	191,7,c	;volatile
 24506   0118CA  D004               	goto	l13909
 24507   0118CC                     l1470:
 24508   0118CC  8CBD               	bsf	189,6,c	;volatile
 24509                           
 24510                           ;main.c: 900:     do { LATDbits.LATD7 = 0; } while(0);
 24511   0118CE  9EBD               	bcf	189,7,c	;volatile
 24512                           
 24513                           ;main.c: 901:     do { LATFbits.LATF6 = 1; } while(0);
 24514   0118D0  8CBF               	bsf	191,6,c	;volatile
 24515                           
 24516                           ;main.c: 902:     do { LATFbits.LATF7 = 0; } while(0);
 24517   0118D2  9EBF               	bcf	191,7,c	;volatile
 24518   0118D4                     l13909:
 24519                           
 24520                           ;main.c: 906:   if (mode != UI_STATE_LOG)
 24521                           ;stkvar	_mode @ sp[(-3)+2]
 24522   0118D4  0EFF               	movlw	-1
 24523   0118D6  006F FF8C  F022    	movff	plusw1,btemp
 24524   0118DC  0E03               	movlw	3
 24525   0118DE  1822               	xorwf	btemp^0,w,c
 24526   0118E0  B4D8               	btfsc	status,2,c
 24527   0118E2  D061               	goto	l13923
 24528                           
 24529                           ;main.c: 907:    if (TimerDone(TMR_DISPLAY)) {
 24530   0118E4  0E0A               	movlw	10
 24531   0118E6  6EE6               	movwf	postinc1,c
 24532   0118E8  ECD7  F0BE         	call	_TimerDone	;wreg free
 24533   0118EC  5022               	movf	btemp^0,w,c
 24534   0118EE  B4D8               	btfsc	status,2,c
 24535   0118F0  D05A               	goto	l13923
 24536                           
 24537                           ;main.c: 908:     if (TimerDone(TMR_HELPDIS)) {
 24538   0118F2  0E09               	movlw	9
 24539   0118F4  6EE6               	movwf	postinc1,c
 24540   0118F6  ECD7  F0BE         	call	_TimerDone	;wreg free
 24541   0118FA  5022               	movf	btemp^0,w,c
 24542   0118FC  B4D8               	btfsc	status,2,c
 24543   0118FE  D004               	goto	l13917
 24544                           
 24545                           ;main.c: 909:      set_display_info(DIS_STR);
 24546   011900  0E00               	movlw	0
 24547   011902  6EE6               	movwf	postinc1,c
 24548   011904  EC54  F0BF         	call	_set_display_info	;wreg free
 24549   011908                     l13917:
 24550                           
 24551                           ;main.c: 911:     sprintf(get_vterm_ptr(1, 0), "R%d %d, T%d %d C%d %d      #", V.r_l_sta
      +                          te, V.failed_receive, V.t_l_state, V.failed_send, V.checksum_error, V.stack);
 24552   011908  EE23  F169         	lfsr	2,_V+335	;volatile
 24553   01190C  50DF               	movf	223,w,c
 24554   01190E  0B07               	andlw	7
 24555   011910  6EE6               	movwf	postinc1,c
 24556   011912  0E00               	movlw	0
 24557   011914  6EE6               	movwf	postinc1,c
 24558   011916  EE23  F159         	lfsr	2,_V+319	;volatile
 24559   01191A  006F FF78  F02C    	movff	postinc2,btemp+10
 24560   011920  006F FF74  F02D    	movff	postdec2,btemp+11
 24561   011926  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 24562   01192C  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 24563   011932  EE23  F167         	lfsr	2,_V+333	;volatile
 24564   011936  38DF               	swapf	223,w,c
 24565   011938  0B0F               	andlw	15
 24566   01193A  6EE6               	movwf	postinc1,c
 24567   01193C  0E00               	movlw	0
 24568   01193E  6EE6               	movwf	postinc1,c
 24569   011940  EE23  F020         	lfsr	2,_V+6	;volatile
 24570   011944  50DF               	movf	indf2,w,c
 24571   011946  6EE6               	movwf	postinc1,c
 24572   011948  0E00               	movlw	0
 24573   01194A  6EE6               	movwf	postinc1,c
 24574   01194C  EE23  F168         	lfsr	2,_V+334	;volatile
 24575   011950  50DF               	movf	223,w,c
 24576   011952  0B0F               	andlw	15
 24577   011954  6EE6               	movwf	postinc1,c
 24578   011956  0E00               	movlw	0
 24579   011958  6EE6               	movwf	postinc1,c
 24580   01195A  EE23  F01F         	lfsr	2,_V+5	;volatile
 24581   01195E  50DF               	movf	indf2,w,c
 24582   011960  6EE6               	movwf	postinc1,c
 24583   011962  0E00               	movlw	0
 24584   011964  6EE6               	movwf	postinc1,c
 24585   011966  0EB6               	movlw	low STR_25
 24586   011968  6EE6               	movwf	postinc1,c
 24587   01196A  0EFC               	movlw	high STR_25
 24588   01196C  6EE6               	movwf	postinc1,c
 24589   01196E  0E00               	movlw	0
 24590   011970  6EE6               	movwf	postinc1,c
 24591   011972  0E01               	movlw	1
 24592   011974  6EE6               	movwf	postinc1,c
 24593   011976  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 24594   01197A  0060  F08B  FFE6   	movff	btemp,postinc1
 24595   011980  0060  F08F  FFE6   	movff	btemp+1,postinc1
 24596   011986  0E10               	movlw	16
 24597   011988  6EE6               	movwf	postinc1,c
 24598   01198A  EC32  F0B2         	call	_sprintf	;wreg free
 24599                           
 24600                           ; BSR set to: 1
 24601                           ;main.c: 912:     StartTimer(TMR_DISPLAY, 100);
 24602   01198E  0E64               	movlw	100
 24603   011990  6EE6               	movwf	postinc1,c
 24604   011992  0E00               	movlw	0
 24605   011994  6EE6               	movwf	postinc1,c
 24606   011996  0E0A               	movlw	10
 24607   011998  6EE6               	movwf	postinc1,c
 24608   01199A  EC2A  F0BC         	call	_StartTimer	;wreg free
 24609                           
 24610                           ;main.c: 913:     update_lcd(0);
 24611   01199E  0E00               	movlw	0
 24612   0119A0  6EE6               	movwf	postinc1,c
 24613   0119A2  ECAA  F0B2         	call	_update_lcd	;wreg free
 24614   0119A6                     l13923:
 24615                           
 24616                           ;main.c: 919:   check_help(V.flipper);
 24617   0119A6  EE23  F19C         	lfsr	2,_V+386	;volatile
 24618   0119AA  50DF               	movf	indf2,w,c
 24619   0119AC  6EE6               	movwf	postinc1,c
 24620   0119AE  EC22  F0A5         	call	_check_help	;wreg free
 24621                           
 24622                           ;main.c: 924:   if (V.set_sequ) {
 24623   0119B2  EE23  F167         	lfsr	2,_V+333	;volatile
 24624   0119B6  A6DF               	btfss	indf2,3,c
 24625   0119B8  EFF5  F086         	goto	l13695
 24626                           
 24627                           ;main.c: 925:    if (TimerDone(TMR_INFO)) {
 24628   0119BC  0E07               	movlw	7
 24629   0119BE  6EE6               	movwf	postinc1,c
 24630   0119C0  ECD7  F0BE         	call	_TimerDone	;wreg free
 24631   0119C4  5022               	movf	btemp^0,w,c
 24632   0119C6  B4D8               	btfsc	status,2,c
 24633   0119C8  D00D               	goto	l13935
 24634                           
 24635                           ;main.c: 926:     V.set_sequ = 0;
 24636   0119CA  EE23  F167         	lfsr	2,_V+333	;volatile
 24637   0119CE  96DF               	bcf	indf2,3,c
 24638                           
 24639                           ;main.c: 927:     set_vterm(0);
 24640   0119D0  0E00               	movlw	0
 24641   0119D2  6EE6               	movwf	postinc1,c
 24642   0119D4  EC73  F0BF         	call	_set_vterm	;wreg free
 24643                           
 24644                           ;main.c: 928:     update_lcd(0);
 24645   0119D8  0E00               	movlw	0
 24646   0119DA  6EE6               	movwf	postinc1,c
 24647   0119DC  ECAA  F0B2         	call	_update_lcd	;wreg free
 24648                           
 24649                           ;main.c: 929:    } else {
 24650   0119E0  EFF5  F086         	goto	l13695
 24651   0119E4                     l13935:
 24652                           
 24653                           ;main.c: 930:     set_vterm(2);
 24654   0119E4  0E02               	movlw	2
 24655   0119E6  6EE6               	movwf	postinc1,c
 24656   0119E8  EC73  F0BF         	call	_set_vterm	;wreg free
 24657                           
 24658                           ;main.c: 931:     update_lcd(2);
 24659   0119EC  0E02               	movlw	2
 24660   0119EE  6EE6               	movwf	postinc1,c
 24661   0119F0  ECAA  F0B2         	call	_update_lcd	;wreg free
 24662   0119F4  EFF5  F086         	goto	l13695
 24663   0119F8                     __end_of_main:
 24664                           	callstack 0
 24665                           
 24666 ;; *************** function _t_protocol *****************
 24667 ;; Defined at:
 24668 ;;		line 394 in file "gemsecs.c"
 24669 ;; Parameters:    Size  Location     Type
 24670 ;;  t_link          2  [STACK] PTR enum E17017
 24671 ;;		 -> V(387), 
 24672 ;; Auto vars:     Size  Location     Type
 24673 ;;  rxData          1  [STACK] unsigned char 
 24674 ;; Return value:  Size  Location     Type
 24675 ;;                  1  [STACK] enum E17295
 24676 ;; Registers used:
 24677 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 24678 ;; Tracked objects:
 24679 ;;		On entry : 0/3C
 24680 ;;		On exit  : 0/0
 24681 ;;		Unchanged: 0/0
 24682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24687 ;;Total ram usage:        0 bytes
 24688 ;; Hardware stack levels used: 1
 24689 ;; Hardware stack levels required when called: 14
 24690 ;; This function calls:
 24691 ;;		_StartTimer
 24692 ;;		_TimerDone
 24693 ;;		_UART1_Read
 24694 ;;		_UART1_Write
 24695 ;;		_UART1_is_rx_ready
 24696 ;;		_UART1_put_buffer
 24697 ;;		_secs_II_message
 24698 ;;		_secs_send
 24699 ;; This function is called by:
 24700 ;;		_main
 24701 ;; This function uses a reentrant model
 24702 ;;
 24703                           
 24704                           	psect	text1
 24705   01346A                     __ptext1:
 24706                           	callstack 0
 24707   01346A                     _t_protocol:
 24708                           	callstack 0
 24709                           
 24710                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24711   01346A  52E6               	movf	postinc1,f,c
 24712                           
 24713                           ;gemsecs.c: 394: LINK_STATES t_protocol(LINK_STATES * t_link);gemsecs.c: 395: {;gemsecs.
      +                          c: 396:  uint8_t rxData;;gemsecs.c: 397:  static uint8_t retry, requeue = 0;;gemsecs.c: 
      +                          398:  static response_type block;;gemsecs.c: 400:  switch (*t_link) {
 24714                           
 24715                           ;incstack = 0
 24716   01346C  D178               	goto	l13353
 24717   01346E                     l1933:
 24718                           
 24719                           ;gemsecs.c: 403:   V.error = LINK_ERROR_NONE;
 24720   01346E  0E0A               	movlw	10
 24721   013470  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 24722                           
 24723                           ;gemsecs.c: 404:   retry = 3;
 24724   013476  0E03               	movlw	3
 24725   013478  6E0A               	movwf	t_protocol@retry^0,c
 24726                           
 24727                           ;gemsecs.c: 405:   UART1_Write(0x05);
 24728   01347A  0E05               	movlw	5
 24729   01347C  6EE6               	movwf	postinc1,c
 24730   01347E  EC71  F0BB         	call	_UART1_Write	;wreg free
 24731                           
 24732                           ; BSR set to: 57
 24733                           ;gemsecs.c: 406:   StartTimer(TMR_T2, 3000);
 24734   013482  0EB8               	movlw	184
 24735   013484  6EE6               	movwf	postinc1,c
 24736   013486  0E0B               	movlw	11
 24737   013488  6EE6               	movwf	postinc1,c
 24738   01348A  0E02               	movlw	2
 24739   01348C  6EE6               	movwf	postinc1,c
 24740   01348E  EC2A  F0BC         	call	_StartTimer	;wreg free
 24741                           
 24742                           ;gemsecs.c: 407:   *t_link = LINK_STATE_ENQ;
 24743                           ;stkvar	_t_link @ sp[(-1)+-2]
 24744   013492  0EFD               	movlw	-3
 24745   013494  006F FF8F FFD9     	movff	plusw1,fsr2l
 24746   01349A  0EFE               	movlw	-2
 24747   01349C  006F FF8F FFDA     	movff	plusw1,fsr2h
 24748   0134A2  0E01               	movlw	1
 24749   0134A4  D0EE               	goto	L6
 24750   0134A6                     l13247:
 24751                           
 24752                           ;gemsecs.c: 414:   if (TimerDone(TMR_T2)) {
 24753   0134A6  0E02               	movlw	2
 24754   0134A8  6EE6               	movwf	postinc1,c
 24755   0134AA  ECD7  F0BE         	call	_TimerDone	;wreg free
 24756   0134AE  5022               	movf	btemp^0,w,c
 24757   0134B0  B4D8               	btfsc	status,2,c
 24758   0134B2  D030               	goto	l13263
 24759                           
 24760                           ;gemsecs.c: 415:    V.timer_error++;
 24761   0134B4  EE23  F15B         	lfsr	2,_V+321	;volatile
 24762   0134B8  2ADE               	incf	postinc2,f,c
 24763   0134BA  0E00               	movlw	0
 24764   0134BC  22DD               	addwfc	postdec2,f,c
 24765                           
 24766                           ;gemsecs.c: 416:    V.all_errors++;
 24767   0134BE  EE23  F165         	lfsr	2,_V+331	;volatile
 24768   0134C2  2ADE               	incf	postinc2,f,c
 24769   0134C4  0E00               	movlw	0
 24770   0134C6  22DD               	addwfc	postdec2,f,c
 24771                           
 24772                           ;gemsecs.c: 417:    if (!retry--) {
 24773   0134C8  060A               	decf	t_protocol@retry^0,f,c
 24774   0134CA  280A               	incf	t_protocol@retry^0,w,c
 24775   0134CC  A4D8               	btfss	status,2,c
 24776   0134CE  D019               	goto	l13261
 24777                           
 24778                           ;gemsecs.c: 418:     V.error = LINK_ERROR_T2;
 24779   0134D0  0E0C               	movlw	12
 24780   0134D2  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 24781                           
 24782                           ;gemsecs.c: 419:     V.all_errors++;
 24783   0134D8  EE23  F165         	lfsr	2,_V+331	;volatile
 24784   0134DC  2ADE               	incf	postinc2,f,c
 24785   0134DE  0E00               	movlw	0
 24786   0134E0  22DD               	addwfc	postdec2,f,c
 24787                           
 24788                           ;gemsecs.c: 420:     V.failed_send = 1;
 24789   0134E2  EE23  F167         	lfsr	2,_V+333	;volatile
 24790   0134E6  50DF               	movf	223,w,c
 24791   0134E8  0B0F               	andlw	-241
 24792   0134EA  0910               	iorlw	16
 24793   0134EC  6EDF               	movwf	223,c
 24794                           
 24795                           ;gemsecs.c: 421:     *t_link = LINK_STATE_NAK;
 24796                           ;stkvar	_t_link @ sp[(-1)+-2]
 24797   0134EE  0EFD               	movlw	-3
 24798   0134F0  006F FF8F FFD9     	movff	plusw1,fsr2l
 24799   0134F6  0EFE               	movlw	-2
 24800   0134F8  006F FF8F FFDA     	movff	plusw1,fsr2h
 24801   0134FE  0E05               	movlw	5
 24802   013500  D0C0               	goto	L6
 24803   013502                     l13261:
 24804                           
 24805                           ;gemsecs.c: 423:     StartTimer(TMR_T2, 3000);
 24806   013502  0EB8               	movlw	184
 24807   013504  6EE6               	movwf	postinc1,c
 24808   013506  0E0B               	movlw	11
 24809   013508  6EE6               	movwf	postinc1,c
 24810   01350A  0E02               	movlw	2
 24811   01350C  6EE6               	movwf	postinc1,c
 24812   01350E  EC2A  F0BC         	call	_StartTimer	;wreg free
 24813   013512  D14A               	goto	l13355
 24814   013514                     l13263:
 24815                           
 24816                           ;gemsecs.c: 426:    if (UART1_is_rx_ready()) {
 24817   013514  EC70  F0C0         	call	_UART1_is_rx_ready	;wreg free
 24818   013518  5022               	movf	btemp^0,w,c
 24819   01351A  B4D8               	btfsc	status,2,c
 24820   01351C  D145               	goto	l13355
 24821                           
 24822                           ;gemsecs.c: 427:     rxData = UART1_Read();
 24823   01351E  ECEE  F0BB         	call	_UART1_Read	;wreg free
 24824                           
 24825                           ;stkvar	_rxData @ sp[(-1)+0]
 24826   013522  0EFF               	movlw	-1
 24827   013524  0060  F08B  FFE3   	movff	btemp,plusw1
 24828                           
 24829                           ; BSR set to: 57
 24830                           ;gemsecs.c: 428:     if (rxData == 0x04) {
 24831                           ;stkvar	_rxData @ sp[(-1)+0]
 24832   01352A  0EFF               	movlw	-1
 24833   01352C  006F FF8C  F022    	movff	plusw1,btemp
 24834   013532  0E04               	movlw	4
 24835   013534  1822               	xorwf	btemp^0,w,c
 24836   013536  A4D8               	btfss	status,2,c
 24837   013538  D012               	goto	l13273
 24838                           
 24839                           ; BSR set to: 57
 24840                           ;gemsecs.c: 429:      StartTimer(TMR_T3, 5000);
 24841   01353A  0E88               	movlw	136
 24842   01353C  6EE6               	movwf	postinc1,c
 24843   01353E  0E13               	movlw	19
 24844   013540  6EE6               	movwf	postinc1,c
 24845   013542  0E03               	movlw	3
 24846   013544  6EE6               	movwf	postinc1,c
 24847   013546  EC2A  F0BC         	call	_StartTimer	;wreg free
 24848                           
 24849                           ;gemsecs.c: 430:      *t_link = LINK_STATE_EOT;
 24850                           ;stkvar	_t_link @ sp[(-1)+-2]
 24851   01354A  0EFD               	movlw	-3
 24852   01354C  006F FF8F FFD9     	movff	plusw1,fsr2l
 24853   013552  0EFE               	movlw	-2
 24854   013554  006F FF8F FFDA     	movff	plusw1,fsr2h
 24855   01355A  0E02               	movlw	2
 24856   01355C  6EDF               	movwf	indf2,c
 24857   01355E                     l13273:
 24858                           
 24859                           ;gemsecs.c: 432:     if (rxData == 0x05) {
 24860                           ;stkvar	_rxData @ sp[(-1)+0]
 24861   01355E  0EFF               	movlw	-1
 24862   013560  006F FF8C  F022    	movff	plusw1,btemp
 24863   013566  0E05               	movlw	5
 24864   013568  1822               	xorwf	btemp^0,w,c
 24865   01356A  A4D8               	btfss	status,2,c
 24866   01356C  D11D               	goto	l13355
 24867                           
 24868                           ;gemsecs.c: 433:      UART1_put_buffer(0x04);
 24869   01356E  0E04               	movlw	4
 24870   013570  6EE6               	movwf	postinc1,c
 24871   013572  EC47  F0BD         	call	_UART1_put_buffer	;wreg free
 24872                           
 24873                           ; BSR set to: 57
 24874                           ;gemsecs.c: 434:      *t_link = LINK_STATE_DONE;
 24875                           ;stkvar	_t_link @ sp[(-1)+-2]
 24876   013576  0EFD               	movlw	-3
 24877   013578  006F FF8F FFD9     	movff	plusw1,fsr2l
 24878   01357E  0EFE               	movlw	-2
 24879   013580  006F FF8F FFDA     	movff	plusw1,fsr2h
 24880   013586  0E04               	movlw	4
 24881   013588  D07C               	goto	L6
 24882   01358A                     l13279:
 24883                           
 24884                           ;gemsecs.c: 440:   if (!requeue)
 24885   01358A  5009               	movf	t_protocol@requeue^0,w,c
 24886   01358C  A4D8               	btfss	status,2,c
 24887   01358E  D013               	goto	l13283
 24888                           
 24889                           ;gemsecs.c: 441:    block = secs_II_message(V.stream, V.function);
 24890   013590  EE23  F14E         	lfsr	2,_V+308	;volatile
 24891   013594  50DF               	movf	indf2,w,c
 24892   013596  6EE6               	movwf	postinc1,c
 24893   013598  EE23  F14D         	lfsr	2,_V+307	;volatile
 24894   01359C  50DF               	movf	indf2,w,c
 24895   01359E  6EE6               	movwf	postinc1,c
 24896   0135A0  ECFC  F08C         	call	_secs_II_message	;wreg free
 24897   0135A4  EE20  F093         	lfsr	2,t_protocol@block
 24898   0135A8  0E06               	movlw	6
 24899   0135AA                     u9571:
 24900   0135AA  52E5               	movf	postdec1,f,c
 24901   0135AC  006F FF9F FFDB     	movff	indf1,plusw2
 24902   0135B2  06E8               	decf	wreg,f,c
 24903   0135B4  E2FA               	bc	u9571
 24904   0135B6                     l13283:
 24905                           
 24906                           ;gemsecs.c: 443:   if (V.abort == LINK_ERROR_ABORT) {
 24907   0135B6  0063  F543  FFE8   	movff	_V+310,wreg	;volatile
 24908   0135BC  0A11               	xorlw	17
 24909   0135BE  A4D8               	btfss	status,2,c
 24910   0135C0  D025               	goto	l13293
 24911                           
 24912                           ;gemsecs.c: 444:    secs_send((uint8_t*) block.header, block.length, 0, 1);
 24913   0135C2  0E01               	movlw	1
 24914   0135C4  6EE6               	movwf	postinc1,c
 24915   0135C6  0E00               	movlw	0
 24916   0135C8  6EE6               	movwf	postinc1,c
 24917   0135CA  0100               	movlb	0	; () banked
 24918   0135CC  5195               	movf	(t_protocol@block+2)& (0+255),w,b
 24919   0135CE  6EE6               	movwf	postinc1,c
 24920   0135D0  0060  F24F  FFE6   	movff	t_protocol@block,postinc1
 24921   0135D6  0060  F253  FFE6   	movff	t_protocol@block+1,postinc1
 24922   0135DC  EC8F  F0A1         	call	_secs_send	;wreg free
 24923                           
 24924                           ;gemsecs.c: 445:    V.failed_send = 2;
 24925   0135E0  EE23  F167         	lfsr	2,_V+333	;volatile
 24926   0135E4  50DF               	movf	223,w,c
 24927   0135E6  0B0F               	andlw	-241
 24928   0135E8  0920               	iorlw	32
 24929   0135EA  6EDF               	movwf	223,c
 24930                           
 24931                           ;gemsecs.c: 446:    *t_link = LINK_STATE_ERROR;
 24932                           ;stkvar	_t_link @ sp[(-1)+-2]
 24933   0135EC  0EFD               	movlw	-3
 24934   0135EE  006F FF8F FFD9     	movff	plusw1,fsr2l
 24935   0135F4  0EFE               	movlw	-2
 24936   0135F6  006F FF8F FFDA     	movff	plusw1,fsr2h
 24937   0135FC  0E06               	movlw	6
 24938   0135FE  6EDF               	movwf	indf2,c
 24939                           
 24940                           ;gemsecs.c: 447:    V.all_errors++;
 24941   013600  EE23  F165         	lfsr	2,_V+331	;volatile
 24942   013604  2ADE               	incf	postinc2,f,c
 24943   013606  0E00               	movlw	0
 24944   013608  22DD               	addwfc	postdec2,f,c
 24945                           
 24946                           ;gemsecs.c: 448:   } else {
 24947   01360A  D0CE               	goto	l13355
 24948   01360C                     l13293:
 24949                           
 24950                           ;gemsecs.c: 449:    if (!requeue) {
 24951   01360C  5009               	movf	t_protocol@requeue^0,w,c
 24952   01360E  A4D8               	btfss	status,2,c
 24953   013610  D016               	goto	l1947
 24954                           
 24955                           ;gemsecs.c: 450:     secs_send((uint8_t*) block.header, block.length, 0, 1);
 24956   013612  0E01               	movlw	1
 24957   013614  6EE6               	movwf	postinc1,c
 24958   013616  0E00               	movlw	0
 24959   013618  6EE6               	movwf	postinc1,c
 24960   01361A  0100               	movlb	0	; () banked
 24961   01361C  5195               	movf	(t_protocol@block+2)& (0+255),w,b
 24962   01361E  6EE6               	movwf	postinc1,c
 24963   013620  0060  F24F  FFE6   	movff	t_protocol@block,postinc1
 24964   013626  0060  F253  FFE6   	movff	t_protocol@block+1,postinc1
 24965   01362C  EC8F  F0A1         	call	_secs_send	;wreg free
 24966                           
 24967                           ;gemsecs.c: 451:     if (V.queue)
 24968   013630  EE23  F168         	lfsr	2,_V+334	;volatile
 24969   013634  A8DF               	btfss	indf2,4,c
 24970   013636  D016               	goto	l13305
 24971                           
 24972                           ;gemsecs.c: 452:      requeue = 1;
 24973   013638  0E01               	movlw	1
 24974   01363A  6E09               	movwf	t_protocol@requeue^0,c
 24975   01363C  D013               	goto	l13305
 24976   01363E                     l1947:
 24977                           
 24978                           ;gemsecs.c: 454:     requeue = 0;
 24979   01363E  6A09               	clrf	t_protocol@requeue^0,c
 24980                           
 24981                           ;gemsecs.c: 455:     V.queue = 0;
 24982   013640  EE23  F168         	lfsr	2,_V+334	;volatile
 24983   013644  98DF               	bcf	indf2,4,c
 24984                           
 24985                           ;gemsecs.c: 456:     secs_send((uint8_t*) block.reply, block.reply_length, 0, 1);
 24986   013646  0E01               	movlw	1
 24987   013648  6EE6               	movwf	postinc1,c
 24988   01364A  0E00               	movlw	0
 24989   01364C  6EE6               	movwf	postinc1,c
 24990   01364E  0100               	movlb	0	; () banked
 24991   013650  5198               	movf	(t_protocol@block+5)& (0+255),w,b
 24992   013652  6EE6               	movwf	postinc1,c
 24993   013654  0060  F25B  FFE6   	movff	t_protocol@block+3,postinc1
 24994   01365A  0060  F25F  FFE6   	movff	t_protocol@block+4,postinc1
 24995   013660  EC8F  F0A1         	call	_secs_send	;wreg free
 24996   013664                     l13305:
 24997                           
 24998                           ;gemsecs.c: 458:    if (V.error == LINK_ERROR_NONE) {
 24999   013664  0063  F53F  FFE8   	movff	_V+309,wreg	;volatile
 25000   01366A  0A0A               	xorlw	10
 25001   01366C  A4D8               	btfss	status,2,c
 25002   01366E  D00B               	goto	l13309
 25003                           
 25004                           ;gemsecs.c: 459:     *t_link = LINK_STATE_ACK;
 25005                           ;stkvar	_t_link @ sp[(-1)+-2]
 25006   013670  0EFD               	movlw	-3
 25007   013672  006F FF8F FFD9     	movff	plusw1,fsr2l
 25008   013678  0EFE               	movlw	-2
 25009   01367A  006F FF8F FFDA     	movff	plusw1,fsr2h
 25010   013680  0E03               	movlw	3
 25011   013682                     L6:
 25012   013682  6EDF               	movwf	indf2,c
 25013                           
 25014                           ;gemsecs.c: 460:    } else {
 25015   013684  D091               	goto	l13355
 25016   013686                     l13309:
 25017                           
 25018                           ;gemsecs.c: 461:     V.failed_send = 3;
 25019   013686  EE23  F167         	lfsr	2,_V+333	;volatile
 25020   01368A  50DF               	movf	223,w,c
 25021   01368C  0B0F               	andlw	-241
 25022   01368E  0930               	iorlw	48
 25023   013690  D7AC               	goto	L7
 25024   013692                     l13315:
 25025                           
 25026                           ;gemsecs.c: 475:   if (TimerDone(TMR_T3)) {
 25027   013692  0E03               	movlw	3
 25028   013694  6EE6               	movwf	postinc1,c
 25029   013696  ECD7  F0BE         	call	_TimerDone	;wreg free
 25030   01369A  5022               	movf	btemp^0,w,c
 25031   01369C  B4D8               	btfsc	status,2,c
 25032   01369E  D014               	goto	l13325
 25033                           
 25034                           ;gemsecs.c: 476:    V.timer_error++;
 25035   0136A0  EE23  F15B         	lfsr	2,_V+321	;volatile
 25036   0136A4  2ADE               	incf	postinc2,f,c
 25037   0136A6  0E00               	movlw	0
 25038   0136A8  22DD               	addwfc	postdec2,f,c
 25039                           
 25040                           ;gemsecs.c: 477:    V.error = LINK_ERROR_T3;
 25041   0136AA  0E0D               	movlw	13
 25042   0136AC  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 25043                           
 25044                           ;gemsecs.c: 478:    V.all_errors++;
 25045   0136B2  EE23  F165         	lfsr	2,_V+331	;volatile
 25046   0136B6  2ADE               	incf	postinc2,f,c
 25047   0136B8  0E00               	movlw	0
 25048   0136BA  22DD               	addwfc	postdec2,f,c
 25049                           
 25050                           ;gemsecs.c: 479:    V.failed_send = 4;
 25051   0136BC  EE23  F167         	lfsr	2,_V+333	;volatile
 25052   0136C0  50DF               	movf	223,w,c
 25053   0136C2  0B0F               	andlw	-241
 25054   0136C4  0940               	iorlw	64
 25055   0136C6  D712               	goto	L8
 25056   0136C8                     l13325:
 25057                           
 25058                           ;gemsecs.c: 482:    if (UART1_is_rx_ready()) {
 25059   0136C8  EC70  F0C0         	call	_UART1_is_rx_ready	;wreg free
 25060   0136CC  5022               	movf	btemp^0,w,c
 25061   0136CE  B4D8               	btfsc	status,2,c
 25062   0136D0  D06B               	goto	l13355
 25063                           
 25064                           ;gemsecs.c: 483:     rxData = UART1_Read();
 25065   0136D2  ECEE  F0BB         	call	_UART1_Read	;wreg free
 25066                           
 25067                           ;stkvar	_rxData @ sp[(-1)+0]
 25068   0136D6  0EFF               	movlw	-1
 25069   0136D8  0060  F08B  FFE3   	movff	btemp,plusw1
 25070                           
 25071                           ; BSR set to: 57
 25072                           ;gemsecs.c: 484:     if (rxData == 0x06) {
 25073                           ;stkvar	_rxData @ sp[(-1)+0]
 25074   0136DE  0EFF               	movlw	-1
 25075   0136E0  006F FF8C  F022    	movff	plusw1,btemp
 25076   0136E6  0E06               	movlw	6
 25077   0136E8  1822               	xorwf	btemp^0,w,c
 25078   0136EA  A4D8               	btfss	status,2,c
 25079   0136EC  D05D               	goto	l13355
 25080                           
 25081                           ; BSR set to: 57
 25082                           ;gemsecs.c: 485:      V.failed_send = 0;
 25083   0136EE  EE23  F167         	lfsr	2,_V+333	;volatile
 25084   0136F2  0E0F               	movlw	-241
 25085   0136F4  16DF               	andwf	223,f,c
 25086                           
 25087                           ; BSR set to: 57
 25088                           ;gemsecs.c: 486:      *t_link = LINK_STATE_DONE;
 25089                           ;stkvar	_t_link @ sp[(-1)+-2]
 25090   0136F6  0EFD               	movlw	-3
 25091   0136F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 25092   0136FE  0EFE               	movlw	-2
 25093   013700  006F FF8F FFDA     	movff	plusw1,fsr2h
 25094   013706  0E04               	movlw	4
 25095   013708  6EDF               	movwf	indf2,c
 25096   01370A                     l13335:
 25097                           
 25098                           ;gemsecs.c: 487:      V.abort = LINK_ERROR_NONE;
 25099   01370A  0E0A               	movlw	10
 25100   01370C  006F FFA0  FD50    	movff	wreg,_V+310	;volatile
 25101   013712  D04A               	goto	l13355
 25102   013714                     l13337:
 25103                           
 25104                           ;gemsecs.c: 493:   *t_link = LINK_STATE_ERROR;
 25105                           ;stkvar	_t_link @ sp[(-1)+-2]
 25106   013714  0EFD               	movlw	-3
 25107   013716  006F FF8F FFD9     	movff	plusw1,fsr2l
 25108   01371C  0EFE               	movlw	-2
 25109   01371E  006F FF8F FFDA     	movff	plusw1,fsr2h
 25110   013724  0E06               	movlw	6
 25111   013726  6EDF               	movwf	indf2,c
 25112                           
 25113                           ;gemsecs.c: 494:   V.all_errors++;
 25114   013728  EE23  F165         	lfsr	2,_V+331	;volatile
 25115   01372C  2ADE               	incf	postinc2,f,c
 25116   01372E  0E00               	movlw	0
 25117   013730  22DD               	addwfc	postdec2,f,c
 25118                           
 25119                           ;gemsecs.c: 495:   while ((uart1RxCount)) {
 25120   013732  D002               	goto	l13343
 25121   013734                     l13341:
 25122                           
 25123                           ;gemsecs.c: 496:    UART1_Read();
 25124   013734  ECEE  F0BB         	call	_UART1_Read	;wreg free
 25125   013738                     l13343:
 25126                           
 25127                           ;gemsecs.c: 495:   while ((uart1RxCount)) {
 25128   013738  5015               	movf	_uart1RxCount^0,w,c	;volatile
 25129   01373A  B4D8               	btfsc	status,2,c
 25130   01373C  D035               	goto	l13355
 25131   01373E  D7FA               	goto	l13341
 25132   013740                     l13345:
 25133                           
 25134                           ;gemsecs.c: 502:   V.failed_send = 0;
 25135   013740  EE23  F167         	lfsr	2,_V+333	;volatile
 25136   013744  0E0F               	movlw	-241
 25137   013746  16DF               	andwf	223,f,c
 25138   013748  D7E0               	goto	l13335
 25139   01374A                     l13349:
 25140                           
 25141                           ;gemsecs.c: 506:   *t_link = LINK_STATE_IDLE;
 25142                           ;stkvar	_t_link @ sp[(-1)+-2]
 25143   01374A  0EFD               	movlw	-3
 25144   01374C  006F FF8F FFD9     	movff	plusw1,fsr2l
 25145   013752  0EFE               	movlw	-2
 25146   013754  006F FF8F FFDA     	movff	plusw1,fsr2h
 25147   01375A  6ADF               	clrf	indf2,c
 25148                           
 25149                           ;gemsecs.c: 507:   break;
 25150   01375C  D025               	goto	l13355
 25151   01375E                     l13353:
 25152                           
 25153                           ;stkvar	_t_link @ sp[(-1)+-2]
 25154   01375E  0EFD               	movlw	-3
 25155   013760  006F FF8F FFD9     	movff	plusw1,fsr2l
 25156   013766  0EFE               	movlw	-2
 25157   013768  006F FF8F FFDA     	movff	plusw1,fsr2h
 25158   01376E  50DF               	movf	indf2,w,c
 25159   013770  6E2C               	movwf	(btemp+10)^0,c
 25160   013772  6A2D               	clrf	(btemp+11)^0,c
 25161                           
 25162                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25163                           ; Switch size 1, requested type "simple"
 25164                           ; Number of cases is 1, Range of values is 0 to 0
 25165                           ; switch strategies available:
 25166                           ; Name         Instructions Cycles
 25167                           ; simple_byte            4     3 (average)
 25168                           ;	Chosen strategy is simple_byte
 25169   013774  502D               	movf	(btemp+11)^0,w,c
 25170   013776  0A00               	xorlw	0	; case 0
 25171   013778  A4D8               	btfss	status,2,c
 25172   01377A  D7E7               	goto	l13349
 25173                           
 25174                           ; Switch size 1, requested type "simple"
 25175                           ; Number of cases is 7, Range of values is 0 to 6
 25176                           ; switch strategies available:
 25177                           ; Name         Instructions Cycles
 25178                           ; simple_byte           22    12 (average)
 25179                           ;	Chosen strategy is simple_byte
 25180   01377C  502C               	movf	(btemp+10)^0,w,c
 25181   01377E  0A00               	xorlw	0	; case 0
 25182   013780  B4D8               	btfsc	status,2,c
 25183   013782  D675               	goto	l1933
 25184   013784  0A01               	xorlw	1	; case 1
 25185   013786  B4D8               	btfsc	status,2,c
 25186   013788  D68E               	goto	l13247
 25187   01378A  0A03               	xorlw	3	; case 2
 25188   01378C  B4D8               	btfsc	status,2,c
 25189   01378E  D6FD               	goto	l13279
 25190   013790  0A01               	xorlw	1	; case 3
 25191   013792  B4D8               	btfsc	status,2,c
 25192   013794  D77E               	goto	l13315
 25193   013796  0A07               	xorlw	7	; case 4
 25194   013798  B4D8               	btfsc	status,2,c
 25195   01379A  D7D2               	goto	l13345
 25196   01379C  0A01               	xorlw	1	; case 5
 25197   01379E  B4D8               	btfsc	status,2,c
 25198   0137A0  D7B9               	goto	l13337
 25199   0137A2  0A03               	xorlw	3	; case 6
 25200   0137A4  A4D8               	btfss	status,2,c
 25201   0137A6  D7D1               	goto	l13349
 25202   0137A8                     l13355:
 25203                           
 25204                           ;gemsecs.c: 510:  return *t_link;
 25205                           ;stkvar	_t_link @ sp[(-1)+-2]
 25206   0137A8  0EFD               	movlw	-3
 25207   0137AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 25208   0137B0  0EFE               	movlw	-2
 25209   0137B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 25210   0137B8  50DF               	movf	indf2,w,c
 25211   0137BA  6E22               	movwf	btemp^0,c
 25212                           
 25213                           ; _t_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
 25214   0137BC  52E5               	movf	postdec1,f,c
 25215   0137BE  52E5               	movf	postdec1,f,c
 25216   0137C0  52E5               	movf	postdec1,f,c
 25217   0137C2  0012               	return		;funcret
 25218   0137C4                     __end_of_t_protocol:
 25219                           	callstack 0
 25220                           
 25221 ;; *************** function _secs_send *****************
 25222 ;; Defined at:
 25223 ;;		line 514 in file "gemsecs.c"
 25224 ;; Parameters:    Size  Location     Type
 25225 ;;  byte_block      2  [STACK] PTR unsigned char 
 25226 ;;		 -> D$message(156), S$message(36), H153(312), H33(36), 
 25227 ;;		 -> H26(29), H17(20), H14(17), H13(64), 
 25228 ;;		 -> H12(30), H10(91), 
 25229 ;;  length          1  [STACK] const unsigned char 
 25230 ;;  fake            1  [STACK] const _Bool 
 25231 ;;  s_uart          1  [STACK] const unsigned char 
 25232 ;; Auto vars:     Size  Location     Type
 25233 ;;  k               2  [STACK] PTR unsigned char 
 25234 ;;		 -> D$message(156), S$message(36), H153(312), H33(36), 
 25235 ;;		 -> H26(29), H17(20), H14(17), H13(64), 
 25236 ;;		 -> H12(30), H10(91), 
 25237 ;;  checksum        2  [STACK] unsigned short 
 25238 ;;  i               1  [STACK] unsigned char 
 25239 ;; Return value:  Size  Location     Type
 25240 ;;                  1  [STACK] _Bool 
 25241 ;; Registers used:
 25242 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl
 25243 ;; Tracked objects:
 25244 ;;		On entry : 3F/0
 25245 ;;		On exit  : 0/0
 25246 ;;		Unchanged: 0/0
 25247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25252 ;;Total ram usage:        0 bytes
 25253 ;; Hardware stack levels used: 1
 25254 ;; Hardware stack levels required when called: 4
 25255 ;; This function calls:
 25256 ;;		_UART1_Write
 25257 ;;		_UART1_is_tx_ready
 25258 ;;		_UART1_put_buffer
 25259 ;;		_UART2_Write
 25260 ;;		_UART2_is_tx_ready
 25261 ;;		_UART2_put_buffer
 25262 ;;		_block_checksum
 25263 ;; This function is called by:
 25264 ;;		_t_protocol
 25265 ;; This function uses a reentrant model
 25266 ;;
 25267                           
 25268                           	psect	text2
 25269   01431E                     __ptext2:
 25270                           	callstack 0
 25271   01431E                     _secs_send:
 25272                           	callstack 0
 25273                           
 25274                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25275   01431E  0E05               	movlw	5
 25276   014320  26E1               	addwf	fsr1l,f,c
 25277   014322  0E00               	movlw	0
 25278   014324  22E2               	addwfc	fsr1h,f,c
 25279                           
 25280                           ;gemsecs.c: 514: static _Bool secs_send(uint8_t *byte_block, const uint8_t length, const
      +                           _Bool fake, const uint8_t s_uart);gemsecs.c: 515: {;gemsecs.c: 516:  uint8_t i, *k;;gem
      +                          secs.c: 517:  uint16_t checksum;;gemsecs.c: 519:  k = (uint8_t *) byte_block;
 25281                           ;stkvar	_byte_block @ sp[(-5)+-2]
 25282                           
 25283                           ;incstack = 0
 25284   014326  0EF9               	movlw	-7
 25285   014328  006F FF8C  F02C    	movff	plusw1,btemp+10
 25286   01432E  0EFA               	movlw	-6
 25287   014330  006F FF8C  F02D    	movff	plusw1,btemp+11
 25288                           
 25289                           ;stkvar	_k @ sp[(-5)+0]
 25290   014336  0EFC               	movlw	-4
 25291   014338  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 25292   01433E  0EFB               	movlw	-5
 25293   014340  0060  F0B3  FFE3   	movff	btemp+10,plusw1
 25294                           
 25295                           ;gemsecs.c: 521:  ++V.ticks;
 25296   014346  EE23  F141         	lfsr	2,_V+295	;volatile
 25297   01434A  2ADE               	incf	postinc2,f,c
 25298   01434C  0E00               	movlw	0
 25299   01434E  22DE               	addwfc	postinc2,f,c
 25300   014350  22DE               	addwfc	postinc2,f,c
 25301   014352  22DE               	addwfc	postinc2,f,c
 25302                           
 25303                           ;gemsecs.c: 522:  V.error = LINK_ERROR_NONE;
 25304   014354  0E0A               	movlw	10
 25305   014356  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 25306                           
 25307                           ;gemsecs.c: 523:  if ((length - 3) != k[length - 1]) {
 25308                           ;stkvar	_length @ sp[(-5)+-3]
 25309   01435C  0EF8               	movlw	-8
 25310   01435E  50E3               	movf	plusw1,w,c
 25311   014360  6E2C               	movwf	(btemp+10)^0,c
 25312   014362  6A2D               	clrf	(btemp+11)^0,c
 25313                           
 25314                           ;stkvar	_k @ sp[(-5)+0]
 25315   014364  0EFB               	movlw	-5
 25316   014366  50E3               	movf	plusw1,w,c
 25317   014368  262C               	addwf	(btemp+10)^0,f,c
 25318   01436A  0EFC               	movlw	-4
 25319   01436C  50E3               	movf	plusw1,w,c
 25320   01436E  222D               	addwfc	(btemp+11)^0,f,c
 25321   014370  0EFF               	movlw	255
 25322   014372  242C               	addwf	(btemp+10)^0,w,c
 25323   014374  6ED9               	movwf	fsr2l,c
 25324   014376  0EFF               	movlw	255
 25325   014378  202D               	addwfc	(btemp+11)^0,w,c
 25326   01437A  6EDA               	movwf	fsr2h,c
 25327   01437C  50DF               	movf	indf2,w,c
 25328   01437E  6E2C               	movwf	(btemp+10)^0,c
 25329   014380  6A2D               	clrf	(btemp+11)^0,c
 25330                           
 25331                           ;stkvar	_length @ sp[(-5)+-3]
 25332   014382  0EF8               	movlw	-8
 25333   014384  006F FF8C  F02B    	movff	plusw1,btemp+9
 25334   01438A  0EFD               	movlw	253
 25335   01438C  242B               	addwf	(btemp+9)^0,w,c
 25336   01438E  6E28               	movwf	(btemp+6)^0,c
 25337   014390  6A29               	clrf	(btemp+7)^0,c
 25338   014392  0EFF               	movlw	255
 25339   014394  2229               	addwfc	(btemp+7)^0,f,c
 25340   014396  502C               	movf	(btemp+10)^0,w,c
 25341   014398  1828               	xorwf	(btemp+6)^0,w,c
 25342   01439A  E104               	bnz	u6140
 25343   01439C  502D               	movf	(btemp+11)^0,w,c
 25344   01439E  1829               	xorwf	(btemp+7)^0,w,c
 25345   0143A0  B4D8               	btfsc	status,2,c
 25346   0143A2  D010               	goto	l9873
 25347   0143A4                     u6140:
 25348                           
 25349                           ;gemsecs.c: 524:   V.error = LINK_ERROR_SEND;
 25350   0143A4  0E12               	movlw	18
 25351   0143A6  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 25352                           
 25353                           ;gemsecs.c: 525:   V.all_errors++;
 25354   0143AC  EE23  F165         	lfsr	2,_V+331	;volatile
 25355   0143B0  2ADE               	incf	postinc2,f,c
 25356   0143B2  0E00               	movlw	0
 25357   0143B4  22DD               	addwfc	postdec2,f,c
 25358                           
 25359                           ;gemsecs.c: 526:   V.failed_send = 1;
 25360   0143B6  EE23  F167         	lfsr	2,_V+333	;volatile
 25361   0143BA  50DF               	movf	223,w,c
 25362   0143BC  0B0F               	andlw	-241
 25363   0143BE  0910               	iorlw	16
 25364   0143C0  6EDF               	movwf	223,c
 25365   0143C2  D0E6               	goto	l1968
 25366   0143C4                     l9873:
 25367                           
 25368                           ;gemsecs.c: 535:  checksum = block_checksum(&k[2], length - 3);
 25369                           ;stkvar	_length @ sp[(-5)+-3]
 25370   0143C4  0EF8               	movlw	-8
 25371   0143C6  006F FF8C  F02D    	movff	plusw1,btemp+11
 25372   0143CC  0EFD               	movlw	253
 25373   0143CE  242D               	addwf	(btemp+11)^0,w,c
 25374   0143D0  6E2A               	movwf	(btemp+8)^0,c
 25375   0143D2  6A2B               	clrf	(btemp+9)^0,c
 25376   0143D4  0EFF               	movlw	255
 25377   0143D6  222B               	addwfc	(btemp+9)^0,f,c
 25378   0143D8  0060  F0AB  FFE6   	movff	btemp+8,postinc1
 25379   0143DE  0060  F0AF  FFE6   	movff	btemp+9,postinc1
 25380                           
 25381                           ;stkvar	_k @ sp[(-7)+0]
 25382   0143E4  0EF9               	movlw	-7
 25383   0143E6  50E3               	movf	plusw1,w,c
 25384   0143E8  0F02               	addlw	2
 25385   0143EA  6E2C               	movwf	(btemp+10)^0,c
 25386   0143EC  0EFA               	movlw	-6
 25387   0143EE  006F FF8C  F02D    	movff	plusw1,btemp+11
 25388   0143F4  0E00               	movlw	0
 25389   0143F6  222D               	addwfc	(btemp+11)^0,f,c
 25390   0143F8  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 25391   0143FE  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 25392   014404  EC96  F0B3         	call	_block_checksum	;wreg free
 25393                           
 25394                           ;stkvar	_checksum @ sp[(-5)+2]
 25395   014408  0EFD               	movlw	-3
 25396   01440A  0060  F08B  FFE3   	movff	btemp,plusw1
 25397   014410  0EFE               	movlw	-2
 25398   014412  0060  F08F  FFE3   	movff	btemp+1,plusw1
 25399                           
 25400                           ;gemsecs.c: 536:  k[0] = checksum & 0xff;
 25401                           ;stkvar	_checksum @ sp[(-5)+2]
 25402                           ;stkvar	_k @ sp[(-5)+0]
 25403   014418  0EFB               	movlw	-5
 25404   01441A  006F FF8F FFD9     	movff	plusw1,fsr2l
 25405   014420  0EFC               	movlw	-4
 25406   014422  006F FF8F FFDA     	movff	plusw1,fsr2h
 25407   014428  0EFD               	movlw	-3
 25408   01442A  006F FF8F FFDF     	movff	plusw1,indf2
 25409                           
 25410                           ;gemsecs.c: 537:  k[1] = (checksum >> 8)&0xff;
 25411                           ;stkvar	_checksum @ sp[(-5)+2]
 25412   014430  0EFE               	movlw	254
 25413   014432  24E1               	addwf	fsr1l,w,c
 25414   014434  6ED9               	movwf	fsr2l,c
 25415   014436  0EFF               	movlw	255
 25416   014438  20E2               	addwfc	fsr1h,w,c
 25417   01443A  6EDA               	movwf	fsr2h,c
 25418                           
 25419                           ;stkvar	_k @ sp[(-5)+0]
 25420   01443C  0EFB               	movlw	-5
 25421   01443E  006F FF8C  F02C    	movff	plusw1,btemp+10
 25422   014444  0EFC               	movlw	-4
 25423   014446  006F FF8C  F02D    	movff	plusw1,btemp+11
 25424   01444C  0E01               	movlw	1
 25425   01444E  242C               	addwf	(btemp+10)^0,w,c
 25426   014450  6EE9               	movwf	fsr0l,c
 25427   014452  0E00               	movlw	0
 25428   014454  202D               	addwfc	(btemp+11)^0,w,c
 25429   014456  6EEA               	movwf	fsr0h,c
 25430   014458  006F FF7F FFEF     	movff	indf2,indf0
 25431                           
 25432                           ;gemsecs.c: 538:  V.t_checksum = checksum;
 25433                           ;stkvar	_checksum @ sp[(-5)+2]
 25434   01445E  50E1               	movf	fsr1l,w,c
 25435   014460  0FFD               	addlw	-3
 25436   014462  6ED9               	movwf	fsr2l,c
 25437   014464  50E2               	movf	fsr1h,w,c
 25438   014466  6EDA               	movwf	fsr2h,c
 25439   014468  0EFF               	movlw	255
 25440   01446A  22DA               	addwfc	fsr2h,f,c
 25441   01446C  006F FF78  FD57    	movff	postinc2,_V+317	;volatile
 25442   014472  006F FF74  FD58    	movff	postdec2,_V+318	;volatile
 25443                           
 25444                           ;gemsecs.c: 540:  switch (s_uart) {
 25445   014478  D082               	goto	l9919
 25446   01447A                     l9881:
 25447   01447A  EC67  F0C0         	call	_UART2_is_tx_ready	;wreg free
 25448   01447E  5022               	movf	btemp^0,w,c
 25449   014480  B4D8               	btfsc	status,2,c
 25450   014482  D7FB               	goto	l9881
 25451                           
 25452                           ;gemsecs.c: 543:   for (i = length; i > 0; i--) {
 25453                           ;stkvar	_length @ sp[(-5)+-3]
 25454                           ;stkvar	_i @ sp[(-5)+4]
 25455   014484  0EF8               	movlw	-8
 25456   014486  006F FF8C  F022    	movff	plusw1,btemp
 25457   01448C  0EFF               	movlw	-1
 25458   01448E  0060  F08B  FFE3   	movff	btemp,plusw1
 25459   014494                     l9885:
 25460                           
 25461                           ;stkvar	_i @ sp[(-5)+4]
 25462   014494  0EFF               	movlw	-1
 25463   014496  50E3               	movf	plusw1,w,c
 25464   014498  B4D8               	btfsc	status,2,c
 25465   01449A  D07A               	goto	l1968
 25466                           
 25467                           ;gemsecs.c: 544:    if (fake) {
 25468                           ;stkvar	_fake @ sp[(-5)+-4]
 25469   01449C  0EF7               	movlw	-9
 25470   01449E  50E3               	movf	plusw1,w,c
 25471   0144A0  B4D8               	btfsc	status,2,c
 25472   0144A2  D015               	goto	l9893
 25473                           
 25474                           ;gemsecs.c: 545:     UART2_put_buffer(k[i - 1]);
 25475                           ;stkvar	_i @ sp[(-5)+4]
 25476   0144A4  0EFF               	movlw	-1
 25477   0144A6  50E3               	movf	plusw1,w,c
 25478   0144A8  6E2C               	movwf	(btemp+10)^0,c
 25479   0144AA  6A2D               	clrf	(btemp+11)^0,c
 25480                           
 25481                           ;stkvar	_k @ sp[(-5)+0]
 25482   0144AC  0EFB               	movlw	-5
 25483   0144AE  50E3               	movf	plusw1,w,c
 25484   0144B0  262C               	addwf	(btemp+10)^0,f,c
 25485   0144B2  0EFC               	movlw	-4
 25486   0144B4  50E3               	movf	plusw1,w,c
 25487   0144B6  222D               	addwfc	(btemp+11)^0,f,c
 25488   0144B8  0EFF               	movlw	255
 25489   0144BA  242C               	addwf	(btemp+10)^0,w,c
 25490   0144BC  6ED9               	movwf	fsr2l,c
 25491   0144BE  0EFF               	movlw	255
 25492   0144C0  202D               	addwfc	(btemp+11)^0,w,c
 25493   0144C2  6EDA               	movwf	fsr2h,c
 25494   0144C4  50DF               	movf	indf2,w,c
 25495   0144C6  6EE6               	movwf	postinc1,c
 25496   0144C8  EC33  F0BD         	call	_UART2_put_buffer	;wreg free
 25497                           
 25498                           ;gemsecs.c: 546:    } else {
 25499   0144CC  D014               	goto	l9895
 25500   0144CE                     l9893:
 25501                           
 25502                           ;gemsecs.c: 548:     UART2_Write(k[i - 1]);
 25503                           ;stkvar	_i @ sp[(-5)+4]
 25504   0144CE  0EFF               	movlw	-1
 25505   0144D0  50E3               	movf	plusw1,w,c
 25506   0144D2  6E2C               	movwf	(btemp+10)^0,c
 25507   0144D4  6A2D               	clrf	(btemp+11)^0,c
 25508                           
 25509                           ;stkvar	_k @ sp[(-5)+0]
 25510   0144D6  0EFB               	movlw	-5
 25511   0144D8  50E3               	movf	plusw1,w,c
 25512   0144DA  262C               	addwf	(btemp+10)^0,f,c
 25513   0144DC  0EFC               	movlw	-4
 25514   0144DE  50E3               	movf	plusw1,w,c
 25515   0144E0  222D               	addwfc	(btemp+11)^0,f,c
 25516   0144E2  0EFF               	movlw	255
 25517   0144E4  242C               	addwf	(btemp+10)^0,w,c
 25518   0144E6  6ED9               	movwf	fsr2l,c
 25519   0144E8  0EFF               	movlw	255
 25520   0144EA  202D               	addwfc	(btemp+11)^0,w,c
 25521   0144EC  6EDA               	movwf	fsr2h,c
 25522   0144EE  50DF               	movf	indf2,w,c
 25523   0144F0  6EE6               	movwf	postinc1,c
 25524   0144F2  ECB1  F0BB         	call	_UART2_Write	;wreg free
 25525   0144F6                     l9895:
 25526                           
 25527                           ; BSR set to: 57
 25528                           ;gemsecs.c: 550:   }
 25529                           ;stkvar	_i @ sp[(-5)+4]
 25530   0144F6  0EFF               	movlw	-1
 25531   0144F8  06E3               	decf	plusw1,f,c
 25532   0144FA  D7CC               	goto	l9885
 25533   0144FC                     l9899:
 25534   0144FC  EC6A  F0C0         	call	_UART1_is_tx_ready	;wreg free
 25535   014500  5022               	movf	btemp^0,w,c
 25536   014502  B4D8               	btfsc	status,2,c
 25537   014504  D7FB               	goto	l9899
 25538                           
 25539                           ;gemsecs.c: 555:   for (i = length; i > 0; i--) {
 25540                           ;stkvar	_length @ sp[(-5)+-3]
 25541                           ;stkvar	_i @ sp[(-5)+4]
 25542   014506  0EF8               	movlw	-8
 25543   014508  006F FF8C  F022    	movff	plusw1,btemp
 25544   01450E  0EFF               	movlw	-1
 25545   014510  0060  F08B  FFE3   	movff	btemp,plusw1
 25546   014516                     l9903:
 25547                           
 25548                           ;stkvar	_i @ sp[(-5)+4]
 25549   014516  0EFF               	movlw	-1
 25550   014518  50E3               	movf	plusw1,w,c
 25551   01451A  B4D8               	btfsc	status,2,c
 25552   01451C  D039               	goto	l1968
 25553                           
 25554                           ;gemsecs.c: 556:    if (fake) {
 25555                           ;stkvar	_fake @ sp[(-5)+-4]
 25556   01451E  0EF7               	movlw	-9
 25557   014520  50E3               	movf	plusw1,w,c
 25558   014522  B4D8               	btfsc	status,2,c
 25559   014524  D015               	goto	l9911
 25560                           
 25561                           ;gemsecs.c: 557:     UART1_put_buffer(k[i - 1]);
 25562                           ;stkvar	_i @ sp[(-5)+4]
 25563   014526  0EFF               	movlw	-1
 25564   014528  50E3               	movf	plusw1,w,c
 25565   01452A  6E2C               	movwf	(btemp+10)^0,c
 25566   01452C  6A2D               	clrf	(btemp+11)^0,c
 25567                           
 25568                           ;stkvar	_k @ sp[(-5)+0]
 25569   01452E  0EFB               	movlw	-5
 25570   014530  50E3               	movf	plusw1,w,c
 25571   014532  262C               	addwf	(btemp+10)^0,f,c
 25572   014534  0EFC               	movlw	-4
 25573   014536  50E3               	movf	plusw1,w,c
 25574   014538  222D               	addwfc	(btemp+11)^0,f,c
 25575   01453A  0EFF               	movlw	255
 25576   01453C  242C               	addwf	(btemp+10)^0,w,c
 25577   01453E  6ED9               	movwf	fsr2l,c
 25578   014540  0EFF               	movlw	255
 25579   014542  202D               	addwfc	(btemp+11)^0,w,c
 25580   014544  6EDA               	movwf	fsr2h,c
 25581   014546  50DF               	movf	indf2,w,c
 25582   014548  6EE6               	movwf	postinc1,c
 25583   01454A  EC47  F0BD         	call	_UART1_put_buffer	;wreg free
 25584                           
 25585                           ;gemsecs.c: 558:    } else {
 25586   01454E  D014               	goto	l9913
 25587   014550                     l9911:
 25588                           
 25589                           ;gemsecs.c: 560:     UART1_Write(k[i - 1]);
 25590                           ;stkvar	_i @ sp[(-5)+4]
 25591   014550  0EFF               	movlw	-1
 25592   014552  50E3               	movf	plusw1,w,c
 25593   014554  6E2C               	movwf	(btemp+10)^0,c
 25594   014556  6A2D               	clrf	(btemp+11)^0,c
 25595                           
 25596                           ;stkvar	_k @ sp[(-5)+0]
 25597   014558  0EFB               	movlw	-5
 25598   01455A  50E3               	movf	plusw1,w,c
 25599   01455C  262C               	addwf	(btemp+10)^0,f,c
 25600   01455E  0EFC               	movlw	-4
 25601   014560  50E3               	movf	plusw1,w,c
 25602   014562  222D               	addwfc	(btemp+11)^0,f,c
 25603   014564  0EFF               	movlw	255
 25604   014566  242C               	addwf	(btemp+10)^0,w,c
 25605   014568  6ED9               	movwf	fsr2l,c
 25606   01456A  0EFF               	movlw	255
 25607   01456C  202D               	addwfc	(btemp+11)^0,w,c
 25608   01456E  6EDA               	movwf	fsr2h,c
 25609   014570  50DF               	movf	indf2,w,c
 25610   014572  6EE6               	movwf	postinc1,c
 25611   014574  EC71  F0BB         	call	_UART1_Write	;wreg free
 25612   014578                     l9913:
 25613                           
 25614                           ; BSR set to: 57
 25615                           ;gemsecs.c: 562:   }
 25616                           ;stkvar	_i @ sp[(-5)+4]
 25617   014578  0EFF               	movlw	-1
 25618   01457A  06E3               	decf	plusw1,f,c
 25619   01457C  D7CC               	goto	l9903
 25620   01457E                     l9919:
 25621                           
 25622                           ;stkvar	_s_uart @ sp[(-5)+-5]
 25623   01457E  0EF6               	movlw	-10
 25624   014580  50E3               	movf	plusw1,w,c
 25625                           
 25626                           ; Switch size 1, requested type "simple"
 25627                           ; Number of cases is 2, Range of values is 1 to 2
 25628                           ; switch strategies available:
 25629                           ; Name         Instructions Cycles
 25630                           ; simple_byte            7     4 (average)
 25631                           ;	Chosen strategy is simple_byte
 25632   014582  0A01               	xorlw	1	; case 1
 25633   014584  B4D8               	btfsc	status,2,c
 25634   014586  D7BA               	goto	l9899
 25635   014588  0A03               	xorlw	3	; case 2
 25636   01458A  B4D8               	btfsc	status,2,c
 25637   01458C  D776               	goto	l9881
 25638   01458E  D7B6               	goto	l9899
 25639   014590                     l1968:
 25640                           
 25641                           ; _secs_send: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, arg
      +                          size = 5, vargsize = 0
 25642   014590  0EF6               	movlw	246
 25643   014592  26E1               	addwf	fsr1l,f,c
 25644   014594  0EFF               	movlw	255
 25645   014596  22E2               	addwfc	fsr1h,f,c
 25646   014598  0012               	return		;funcret
 25647   01459A                     __end_of_secs_send:
 25648                           	callstack 0
 25649                           
 25650 ;; *************** function _block_checksum *****************
 25651 ;; Defined at:
 25652 ;;		line 26 in file "gemsecs.c"
 25653 ;; Parameters:    Size  Location     Type
 25654 ;;  byte_block      2  [STACK] PTR unsigned char 
 25655 ;;		 -> D$message(156), S$message(36), H153(312), H33(36), 
 25656 ;;		 -> H26(29), H17(20), H14(17), H13(64), 
 25657 ;;		 -> H12(30), H10(91), 
 25658 ;;  byte_count      2  [STACK] const unsigned short 
 25659 ;; Auto vars:     Size  Location     Type
 25660 ;;  i               2  [STACK] unsigned short 
 25661 ;;  sum             2  [STACK] unsigned short 
 25662 ;; Return value:  Size  Location     Type
 25663 ;;                  2  [STACK] unsigned short 
 25664 ;; Registers used:
 25665 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 25666 ;; Tracked objects:
 25667 ;;		On entry : 0/0
 25668 ;;		On exit  : 0/0
 25669 ;;		Unchanged: 0/0
 25670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25675 ;;Total ram usage:        0 bytes
 25676 ;; Hardware stack levels used: 1
 25677 ;; Hardware stack levels required when called: 3
 25678 ;; This function calls:
 25679 ;;		Nothing
 25680 ;; This function is called by:
 25681 ;;		_secs_send
 25682 ;; This function uses a reentrant model
 25683 ;;
 25684                           
 25685                           	psect	text3
 25686   01672C                     __ptext3:
 25687                           	callstack 0
 25688   01672C                     _block_checksum:
 25689                           	callstack 0
 25690                           
 25691                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25692   01672C  52E6               	movf	postinc1,f,c
 25693   01672E  52E6               	movf	postinc1,f,c
 25694   016730  52E6               	movf	postinc1,f,c
 25695   016732  52E6               	movf	postinc1,f,c
 25696                           
 25697                           ;gemsecs.c: 26: uint16_t block_checksum(uint8_t *byte_block, const uint16_t byte_count);
      +                          gemsecs.c: 27: {;gemsecs.c: 28:  uint16_t sum = 0, i;
 25698                           ;stkvar	_sum @ sp[(-4)+2]
 25699                           
 25700                           ;incstack = 0
 25701   016734  0EFE               	movlw	-2
 25702   016736  6AE3               	clrf	plusw1,c
 25703   016738  0EFF               	movlw	-1
 25704   01673A  6AE3               	clrf	plusw1,c
 25705                           
 25706                           ;gemsecs.c: 30:  for (i = 0; i < byte_count; i++) {
 25707                           ;stkvar	_i @ sp[(-4)+0]
 25708   01673C  0EFC               	movlw	-4
 25709   01673E  6AE3               	clrf	plusw1,c
 25710   016740  0EFD               	movlw	-3
 25711   016742  6AE3               	clrf	plusw1,c
 25712                           
 25713                           ;stkvar	_byte_count @ sp[(-4)+-4]
 25714   016744  0EF8               	movlw	-8
 25715   016746  006F FF8C  F022    	movff	plusw1,btemp
 25716   01674C  0EF9               	movlw	-7
 25717   01674E  50E3               	movf	plusw1,w,c
 25718   016750  1022               	iorwf	btemp^0,w,c
 25719   016752  B4D8               	btfsc	status,2,c
 25720   016754  D04F               	goto	u5420
 25721   016756                     l8475:
 25722                           
 25723                           ;gemsecs.c: 31:   sum += byte_block[i];
 25724                           ;stkvar	_i @ sp[(-4)+0]
 25725   016756  0EFC               	movlw	-4
 25726   016758  006F FF8C  F02C    	movff	plusw1,btemp+10
 25727   01675E  0EFD               	movlw	-3
 25728   016760  006F FF8C  F02D    	movff	plusw1,btemp+11
 25729                           
 25730                           ;stkvar	_byte_block @ sp[(-4)+-2]
 25731   016766  0EFA               	movlw	-6
 25732   016768  006F FF8C  F02A    	movff	plusw1,btemp+8
 25733   01676E  0EFB               	movlw	-5
 25734   016770  006F FF8C  F02B    	movff	plusw1,btemp+9
 25735   016776  502C               	movf	(btemp+10)^0,w,c
 25736   016778  242A               	addwf	(btemp+8)^0,w,c
 25737   01677A  6ED9               	movwf	fsr2l,c
 25738   01677C  502D               	movf	(btemp+11)^0,w,c
 25739   01677E  202B               	addwfc	(btemp+9)^0,w,c
 25740   016780  6EDA               	movwf	fsr2h,c
 25741   016782  50DF               	movf	indf2,w,c
 25742   016784  6E2D               	movwf	(btemp+11)^0,c
 25743                           
 25744                           ;stkvar	_sum @ sp[(-4)+2]
 25745   016786  0EFE               	movlw	-2
 25746   016788  50E3               	movf	plusw1,w,c
 25747   01678A  242D               	addwf	(btemp+11)^0,w,c
 25748   01678C  6E22               	movwf	btemp^0,c
 25749   01678E  0EFE               	movlw	-2
 25750   016790  0060  F08B  FFE3   	movff	btemp,plusw1
 25751   016796  6A22               	clrf	btemp^0,c
 25752   016798  0EFF               	movlw	-1
 25753   01679A  50E3               	movf	plusw1,w,c
 25754   01679C  2222               	addwfc	btemp^0,f,c
 25755   01679E  0EFF               	movlw	-1
 25756   0167A0  0060  F08B  FFE3   	movff	btemp,plusw1
 25757                           
 25758                           ;gemsecs.c: 32:  }
 25759                           ;stkvar	_i @ sp[(-4)+0]
 25760   0167A6  0EFC               	movlw	-4
 25761   0167A8  50E3               	movf	plusw1,w,c
 25762   0167AA  0F01               	addlw	1
 25763   0167AC  6E22               	movwf	btemp^0,c
 25764   0167AE  0EFC               	movlw	-4
 25765   0167B0  0060  F08B  FFE3   	movff	btemp,plusw1
 25766   0167B6  6A22               	clrf	btemp^0,c
 25767   0167B8  0EFD               	movlw	-3
 25768   0167BA  50E3               	movf	plusw1,w,c
 25769   0167BC  2022               	addwfc	btemp^0,w,c
 25770   0167BE  6E22               	movwf	btemp^0,c
 25771   0167C0  0EFD               	movlw	-3
 25772   0167C2  0060  F08B  FFE3   	movff	btemp,plusw1
 25773                           
 25774                           ;stkvar	_byte_count @ sp[(-4)+-4]
 25775   0167C8  0EF8               	movlw	-8
 25776   0167CA  006F FF8C  F02C    	movff	plusw1,btemp+10
 25777   0167D0  0EF9               	movlw	-7
 25778   0167D2  006F FF8C  F02D    	movff	plusw1,btemp+11
 25779                           
 25780                           ;stkvar	_i @ sp[(-4)+0]
 25781   0167D8  0EFC               	movlw	-4
 25782   0167DA  006F FF8C  F02A    	movff	plusw1,btemp+8
 25783   0167E0  0EFD               	movlw	-3
 25784   0167E2  006F FF8C  F02B    	movff	plusw1,btemp+9
 25785   0167E8  502C               	movf	(btemp+10)^0,w,c
 25786   0167EA  5C2A               	subwf	(btemp+8)^0,w,c
 25787   0167EC  502D               	movf	(btemp+11)^0,w,c
 25788   0167EE  582B               	subwfb	(btemp+9)^0,w,c
 25789   0167F0  A0D8               	btfss	status,0,c
 25790   0167F2  D7B1               	goto	l8475
 25791   0167F4                     u5420:
 25792                           
 25793                           ;gemsecs.c: 37:  return sum;
 25794                           ;stkvar	_sum @ sp[(-4)+2]
 25795   0167F4  0EFE               	movlw	-2
 25796   0167F6  006F FF8C  F022    	movff	plusw1,btemp
 25797   0167FC  0EFF               	movlw	-1
 25798   0167FE  006F FF8C  F023    	movff	plusw1,btemp+1
 25799                           
 25800                           ; _block_checksum: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
 25801   016804  0EF8               	movlw	248
 25802   016806  26E1               	addwf	fsr1l,f,c
 25803   016808  0EFF               	movlw	255
 25804   01680A  22E2               	addwfc	fsr1h,f,c
 25805   01680C  0012               	return		;funcret
 25806   01680E                     __end_of_block_checksum:
 25807                           	callstack 0
 25808                           
 25809 ;; *************** function _UART2_put_buffer *****************
 25810 ;; Defined at:
 25811 ;;		line 257 in file "mcc_generated_files/uart2.c"
 25812 ;; Parameters:    Size  Location     Type
 25813 ;;  bufData         1  [STACK] unsigned char 
 25814 ;; Auto vars:     Size  Location     Type
 25815 ;;		None
 25816 ;; Return value:  Size  Location     Type
 25817 ;;                  1  [STACK] void 
 25818 ;; Registers used:
 25819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 25820 ;; Tracked objects:
 25821 ;;		On entry : 0/0
 25822 ;;		On exit  : 3F/39
 25823 ;;		Unchanged: 0/0
 25824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25829 ;;Total ram usage:        0 bytes
 25830 ;; Hardware stack levels used: 1
 25831 ;; Hardware stack levels required when called: 3
 25832 ;; This function calls:
 25833 ;;		Nothing
 25834 ;; This function is called by:
 25835 ;;		_secs_send
 25836 ;; This function uses a reentrant model
 25837 ;;
 25838                           
 25839                           	psect	text4
 25840   017A66                     __ptext4:
 25841                           	callstack 0
 25842   017A66                     _UART2_put_buffer:
 25843                           	callstack 25
 25844                           
 25845                           ;mcc_generated_files/uart2.c: 257: void UART2_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart2.c: 258: {;mcc_generated_files/uart2.c: 259:  PIE6bits.U2RXIE = 0;
 25846                           
 25847                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25848                           ;incstack = 0
 25849   017A66  0139               	movlb	57	; () banked
 25850   017A68  9596               	bcf	150,2,b	;volatile
 25851                           
 25852                           ; BSR set to: 57
 25853                           ;mcc_generated_files/uart2.c: 260:  uart2RxBuffer[uart2RxHead++] = bufData;
 25854                           ;stkvar	_bufData @ sp[(0)+-1]
 25855   017A6A  0E00               	movlw	low _uart2RxBuffer
 25856   017A6C  2411               	addwf	_uart2RxHead^0,w,c	;volatile
 25857   017A6E  6ED9               	movwf	fsr2l,c
 25858   017A70  6ADA               	clrf	fsr2h,c
 25859   017A72  0E05               	movlw	high _uart2RxBuffer
 25860   017A74  22DA               	addwfc	fsr2h,f,c
 25861   017A76  0EFF               	movlw	-1
 25862   017A78  006F FF8F FFDF     	movff	plusw1,indf2
 25863                           
 25864                           ; BSR set to: 57
 25865   017A7E  2A11               	incf	_uart2RxHead^0,f,c	;volatile
 25866                           
 25867                           ; BSR set to: 57
 25868                           ;mcc_generated_files/uart2.c: 261:  if (sizeof(uart2RxBuffer) <= uart2RxHead) {
 25869   017A80  2811               	incf	_uart2RxHead^0,w,c
 25870   017A82  B4D8               	btfsc	status,2,c
 25871                           
 25872                           ; BSR set to: 57
 25873                           ;mcc_generated_files/uart2.c: 262:   uart2RxHead = 0;
 25874   017A84  6A11               	clrf	_uart2RxHead^0,c	;volatile
 25875                           
 25876                           ; BSR set to: 57
 25877                           ;mcc_generated_files/uart2.c: 265:  uart2RxCount++;
 25878   017A86  2A0F               	incf	_uart2RxCount^0,f,c	;volatile
 25879                           
 25880                           ; BSR set to: 57
 25881                           ;mcc_generated_files/uart2.c: 266:  PIE6bits.U2RXIE = 1;
 25882   017A88  8596               	bsf	150,2,b	;volatile
 25883                           
 25884                           ; BSR set to: 57
 25885                           ; _UART2_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 25886   017A8A  52E5               	movf	postdec1,f,c
 25887   017A8C  0012               	return		;funcret
 25888   017A8E                     __end_of_UART2_put_buffer:
 25889                           	callstack 0
 25890                           
 25891 ;; *************** function _UART2_is_tx_ready *****************
 25892 ;; Defined at:
 25893 ;;		line 142 in file "mcc_generated_files/uart2.c"
 25894 ;; Parameters:    Size  Location     Type
 25895 ;;		None
 25896 ;; Auto vars:     Size  Location     Type
 25897 ;;		None
 25898 ;; Return value:  Size  Location     Type
 25899 ;;                  1  [STACK] unsigned char 
 25900 ;; Registers used:
 25901 ;;		btemp
 25902 ;; Tracked objects:
 25903 ;;		On entry : 0/0
 25904 ;;		On exit  : 0/0
 25905 ;;		Unchanged: 0/0
 25906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25911 ;;Total ram usage:        0 bytes
 25912 ;; Hardware stack levels used: 1
 25913 ;; Hardware stack levels required when called: 3
 25914 ;; This function calls:
 25915 ;;		Nothing
 25916 ;; This function is called by:
 25917 ;;		_secs_send
 25918 ;; This function uses a reentrant model
 25919 ;;
 25920                           
 25921                           	psect	text5
 25922   0180CE                     __ptext5:
 25923                           	callstack 0
 25924   0180CE                     _UART2_is_tx_ready:
 25925                           	callstack 25
 25926                           
 25927                           ;mcc_generated_files/uart2.c: 144:     return uart2TxBufferRemaining;
 25928                           
 25929                           ; BSR set to: 57
 25930                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25931                           ;incstack = 0
 25932   0180CE  C012  F022         	movff	_uart2TxBufferRemaining,btemp	;volatile
 25933                           
 25934                           ; _UART2_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25935   0180D2  0012               	return		;funcret
 25936   0180D4                     __end_of_UART2_is_tx_ready:
 25937                           	callstack 0
 25938                           
 25939 ;; *************** function _UART2_Write *****************
 25940 ;; Defined at:
 25941 ;;		line 172 in file "mcc_generated_files/uart2.c"
 25942 ;; Parameters:    Size  Location     Type
 25943 ;;  txData          1  [STACK] unsigned char 
 25944 ;; Auto vars:     Size  Location     Type
 25945 ;;		None
 25946 ;; Return value:  Size  Location     Type
 25947 ;;                  1  [STACK] void 
 25948 ;; Registers used:
 25949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 25950 ;; Tracked objects:
 25951 ;;		On entry : 0/3C
 25952 ;;		On exit  : 3F/39
 25953 ;;		Unchanged: 0/0
 25954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25959 ;;Total ram usage:        0 bytes
 25960 ;; Hardware stack levels used: 1
 25961 ;; Hardware stack levels required when called: 3
 25962 ;; This function calls:
 25963 ;;		Nothing
 25964 ;; This function is called by:
 25965 ;;		_main
 25966 ;;		_secs_send
 25967 ;; This function uses a reentrant model
 25968 ;;
 25969                           
 25970                           	psect	text6
 25971   017762                     __ptext6:
 25972                           	callstack 0
 25973   017762                     _UART2_Write:
 25974                           	callstack 25
 25975                           
 25976                           ;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
 25977                           
 25978                           ;mcc_generated_files/uart2.c: 172: void UART2_Write(uint8_t txData);mcc_generated_files/
      +                          uart2.c: 173: {;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
 25979                           
 25980                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25981                           ;incstack = 0
 25982   017762  5012               	movf	_uart2TxBufferRemaining^0,w,c	;volatile
 25983   017764  B4D8               	btfsc	status,2,c
 25984   017766  D7FD               	goto	__ptext6
 25985                           
 25986                           ;mcc_generated_files/uart2.c: 178:     if(0 == PIE6bits.U2TXIE)
 25987   017768  0139               	movlb	57	; () banked
 25988   01776A  B796               	btfsc	150,3,b	;volatile
 25989   01776C  D005               	goto	l711
 25990                           
 25991                           ; BSR set to: 57
 25992                           ;mcc_generated_files/uart2.c: 179:     {;mcc_generated_files/uart2.c: 180:         U2TXB
      +                           = txData;
 25993                           ;stkvar	_txData @ sp[(0)+-1]
 25994   01776E  0EFF               	movlw	-1
 25995   017770  006F FF8F FDD2     	movff	plusw1,15826	;volatile
 25996                           
 25997                           ;mcc_generated_files/uart2.c: 181:     }
 25998   017776  D011               	goto	l8423
 25999   017778                     l711:
 26000                           
 26001                           ; BSR set to: 57
 26002                           ;mcc_generated_files/uart2.c: 183:     {;mcc_generated_files/uart2.c: 184:         PIE6b
      +                          its.U2TXIE = 0;
 26003   017778  9796               	bcf	150,3,b	;volatile
 26004                           
 26005                           ; BSR set to: 57
 26006                           ;mcc_generated_files/uart2.c: 185:         uart2TxBuffer[uart2TxHead++] = txData;
 26007                           ;stkvar	_txData @ sp[(0)+-1]
 26008   01777A  0E00               	movlw	low _uart2TxBuffer
 26009   01777C  2414               	addwf	_uart2TxHead^0,w,c	;volatile
 26010   01777E  6ED9               	movwf	fsr2l,c
 26011   017780  6ADA               	clrf	fsr2h,c
 26012   017782  0E02               	movlw	high _uart2TxBuffer
 26013   017784  22DA               	addwfc	fsr2h,f,c
 26014   017786  0EFF               	movlw	-1
 26015   017788  006F FF8F FFDF     	movff	plusw1,indf2
 26016                           
 26017                           ; BSR set to: 57
 26018   01778E  2A14               	incf	_uart2TxHead^0,f,c	;volatile
 26019                           
 26020                           ; BSR set to: 57
 26021                           ;mcc_generated_files/uart2.c: 186:         if(sizeof(uart2TxBuffer) <= uart2TxHead)
 26022   017790  0E3F               	movlw	63
 26023   017792  6414               	cpfsgt	_uart2TxHead^0,c
 26024   017794  D001               	goto	l8421
 26025                           
 26026                           ; BSR set to: 57
 26027                           ;mcc_generated_files/uart2.c: 187:         {;mcc_generated_files/uart2.c: 188:          
      +                             uart2TxHead = 0;
 26028   017796  6A14               	clrf	_uart2TxHead^0,c	;volatile
 26029   017798                     l8421:
 26030                           
 26031                           ; BSR set to: 57
 26032                           ;mcc_generated_files/uart2.c: 190:         uart2TxBufferRemaining--;
 26033   017798  0612               	decf	_uart2TxBufferRemaining^0,f,c	;volatile
 26034   01779A                     l8423:
 26035                           
 26036                           ; BSR set to: 57
 26037                           ;mcc_generated_files/uart2.c: 192:     PIE6bits.U2TXIE = 1;
 26038   01779A  8796               	bsf	150,3,b	;volatile
 26039                           
 26040                           ; BSR set to: 57
 26041                           ; _UART2_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
 26042   01779C  52E5               	movf	postdec1,f,c
 26043   01779E  0012               	return		;funcret
 26044   0177A0                     __end_of_UART2_Write:
 26045                           	callstack 0
 26046                           
 26047 ;; *************** function _UART1_put_buffer *****************
 26048 ;; Defined at:
 26049 ;;		line 253 in file "mcc_generated_files/uart1.c"
 26050 ;; Parameters:    Size  Location     Type
 26051 ;;  bufData         1  [STACK] unsigned char 
 26052 ;; Auto vars:     Size  Location     Type
 26053 ;;		None
 26054 ;; Return value:  Size  Location     Type
 26055 ;;                  1  [STACK] void 
 26056 ;; Registers used:
 26057 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 26058 ;; Tracked objects:
 26059 ;;		On entry : 0/39
 26060 ;;		On exit  : 3F/39
 26061 ;;		Unchanged: 0/0
 26062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26067 ;;Total ram usage:        0 bytes
 26068 ;; Hardware stack levels used: 1
 26069 ;; Hardware stack levels required when called: 3
 26070 ;; This function calls:
 26071 ;;		Nothing
 26072 ;; This function is called by:
 26073 ;;		_t_protocol
 26074 ;;		_secs_send
 26075 ;; This function uses a reentrant model
 26076 ;;
 26077                           
 26078                           	psect	text7
 26079   017A8E                     __ptext7:
 26080                           	callstack 0
 26081   017A8E                     _UART1_put_buffer:
 26082                           	callstack 25
 26083                           
 26084                           ;mcc_generated_files/uart1.c: 253: void UART1_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart1.c: 254: {;mcc_generated_files/uart1.c: 255:  PIE3bits.U1RXIE = 0;
 26085                           
 26086                           ; BSR set to: 57
 26087                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26088                           ;incstack = 0
 26089   017A8E  0139               	movlb	57	; () banked
 26090   017A90  9793               	bcf	147,3,b	;volatile
 26091                           
 26092                           ; BSR set to: 57
 26093                           ;mcc_generated_files/uart1.c: 256:  uart1RxBuffer[uart1RxHead++] = bufData;
 26094                           ;stkvar	_bufData @ sp[(0)+-1]
 26095   017A92  0E00               	movlw	low _uart1RxBuffer
 26096   017A94  2417               	addwf	_uart1RxHead^0,w,c	;volatile
 26097   017A96  6ED9               	movwf	fsr2l,c
 26098   017A98  6ADA               	clrf	fsr2h,c
 26099   017A9A  0E04               	movlw	high _uart1RxBuffer
 26100   017A9C  22DA               	addwfc	fsr2h,f,c
 26101   017A9E  0EFF               	movlw	-1
 26102   017AA0  006F FF8F FFDF     	movff	plusw1,indf2
 26103                           
 26104                           ; BSR set to: 57
 26105   017AA6  2A17               	incf	_uart1RxHead^0,f,c	;volatile
 26106                           
 26107                           ; BSR set to: 57
 26108                           ;mcc_generated_files/uart1.c: 257:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 26109   017AA8  2817               	incf	_uart1RxHead^0,w,c
 26110   017AAA  B4D8               	btfsc	status,2,c
 26111                           
 26112                           ; BSR set to: 57
 26113                           ;mcc_generated_files/uart1.c: 258:   uart1RxHead = 0;
 26114   017AAC  6A17               	clrf	_uart1RxHead^0,c	;volatile
 26115                           
 26116                           ; BSR set to: 57
 26117                           ;mcc_generated_files/uart1.c: 261:  uart1RxCount++;
 26118   017AAE  2A15               	incf	_uart1RxCount^0,f,c	;volatile
 26119                           
 26120                           ; BSR set to: 57
 26121                           ;mcc_generated_files/uart1.c: 262:  PIE3bits.U1RXIE = 1;
 26122   017AB0  8793               	bsf	147,3,b	;volatile
 26123                           
 26124                           ; BSR set to: 57
 26125                           ; _UART1_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 26126   017AB2  52E5               	movf	postdec1,f,c
 26127   017AB4  0012               	return		;funcret
 26128   017AB6                     __end_of_UART1_put_buffer:
 26129                           	callstack 0
 26130                           
 26131 ;; *************** function _UART1_is_tx_ready *****************
 26132 ;; Defined at:
 26133 ;;		line 152 in file "mcc_generated_files/uart1.c"
 26134 ;; Parameters:    Size  Location     Type
 26135 ;;		None
 26136 ;; Auto vars:     Size  Location     Type
 26137 ;;		None
 26138 ;; Return value:  Size  Location     Type
 26139 ;;                  1  [STACK] unsigned char 
 26140 ;; Registers used:
 26141 ;;		btemp
 26142 ;; Tracked objects:
 26143 ;;		On entry : 0/0
 26144 ;;		On exit  : 0/0
 26145 ;;		Unchanged: 0/0
 26146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26151 ;;Total ram usage:        0 bytes
 26152 ;; Hardware stack levels used: 1
 26153 ;; Hardware stack levels required when called: 3
 26154 ;; This function calls:
 26155 ;;		Nothing
 26156 ;; This function is called by:
 26157 ;;		_secs_send
 26158 ;; This function uses a reentrant model
 26159 ;;
 26160                           
 26161                           	psect	text8
 26162   0180D4                     __ptext8:
 26163                           	callstack 0
 26164   0180D4                     _UART1_is_tx_ready:
 26165                           	callstack 25
 26166                           
 26167                           ;mcc_generated_files/uart1.c: 154:  return uart1TxBufferRemaining;
 26168                           
 26169                           ; BSR set to: 57
 26170                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26171                           ;incstack = 0
 26172   0180D4  C018  F022         	movff	_uart1TxBufferRemaining,btemp	;volatile
 26173                           
 26174                           ; _UART1_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26175   0180D8  0012               	return		;funcret
 26176   0180DA                     __end_of_UART1_is_tx_ready:
 26177                           	callstack 0
 26178                           
 26179 ;; *************** function _secs_II_message *****************
 26180 ;; Defined at:
 26181 ;;		line 922 in file "gemsecs.c"
 26182 ;; Parameters:    Size  Location     Type
 26183 ;;  stream          1  [STACK] const unsigned char 
 26184 ;;  function        1  [STACK] const unsigned char 
 26185 ;; Auto vars:     Size  Location     Type
 26186 ;;  ceid            4  [STACK] unsigned long 
 26187 ;;  i               2  [STACK] unsigned short 
 26188 ;; Return value:  Size  Location     Type
 26189 ;;                  7  [STACK] struct response_type
 26190 ;; Registers used:
 26191 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 26192 ;; Tracked objects:
 26193 ;;		On entry : 0/3C
 26194 ;;		On exit  : 0/0
 26195 ;;		Unchanged: 0/0
 26196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26201 ;;Total ram usage:        0 bytes
 26202 ;; Hardware stack levels used: 1
 26203 ;; Hardware stack levels required when called: 13
 26204 ;; This function calls:
 26205 ;;		_DATAEE_WriteByte
 26206 ;;		_StartTimer
 26207 ;;		_TimerDone
 26208 ;;		_display_info
 26209 ;;		_format_display_text
 26210 ;;		_gem_messages
 26211 ;;		_parse_sid
 26212 ;;		_s10f1_opcmd
 26213 ;;		_s6f11_opcmd
 26214 ;;		_sequence_messages
 26215 ;;		_set_display_info
 26216 ;;		_set_temp_display_help
 26217 ;;		_terminal_format
 26218 ;;		_vterm_sequence
 26219 ;; This function is called by:
 26220 ;;		_t_protocol
 26221 ;; This function uses a reentrant model
 26222 ;;
 26223                           
 26224                           	psect	text9
 26225   0119F8                     __ptext9:
 26226                           	callstack 0
 26227   0119F8                     _secs_II_message:
 26228                           	callstack 0
 26229                           
 26230                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 var
      +                          gsize = 0, retsize = 7 argfudge = 5
 26231   0119F8  0E0B               	movlw	11
 26232   0119FA  26E1               	addwf	fsr1l,f,c
 26233   0119FC  0E00               	movlw	0
 26234   0119FE  22E2               	addwfc	fsr1h,f,c
 26235                           
 26236                           ;gemsecs.c: 922: response_type secs_II_message(const uint8_t stream, const uint8_t funct
      +                          ion);gemsecs.c: 923: {;gemsecs.c: 924:  static response_type block;;gemsecs.c: 925:  uin
      +                          t16_t i = 0;
 26237                           ;stkvar	_i @ sp[(-6)+4]
 26238                           
 26239                           ;incstack = 0
 26240   011A00  0EFE               	movlw	-2
 26241   011A02  6AE3               	clrf	plusw1,c
 26242   011A04  0EFF               	movlw	-1
 26243   011A06  6AE3               	clrf	plusw1,c
 26244   011A08  A8BB               	btfss	187,4,c	;volatile
 26245   011A0A  D002               	goto	u9110
 26246   011A0C  0E01               	movlw	1
 26247   011A0E  D001               	goto	u9116
 26248   011A10                     u9110:
 26249   011A10  0E00               	movlw	0
 26250   011A12                     u9116:
 26251   011A12  0AFF               	xorlw	255
 26252   011A14  6E2D               	movwf	(btemp+11)^0,c
 26253   011A16  3A2D               	swapf	(btemp+11)^0,f,c
 26254   011A18  50BB               	movf	187,w,c	;volatile
 26255   011A1A  182D               	xorwf	(btemp+11)^0,w,c
 26256   011A1C  0BEF               	andlw	-17
 26257   011A1E  182D               	xorwf	(btemp+11)^0,w,c
 26258   011A20  6EBB               	movwf	187,c	;volatile
 26259                           
 26260                           ;gemsecs.c: 928:  V.abort = LINK_ERROR_NONE;
 26261   011A22  0E0A               	movlw	10
 26262   011A24  006F FFA0  FD50    	movff	wreg,_V+310	;volatile
 26263                           
 26264                           ;gemsecs.c: 929:  V.queue = 0;
 26265   011A2A  EE23  F168         	lfsr	2,_V+334	;volatile
 26266   011A2E  98DF               	bcf	indf2,4,c
 26267                           
 26268                           ;gemsecs.c: 930:  block.respond = 0;
 26269   011A30  9021               	bcf	(secs_II_message@block+6)^0,0,c
 26270                           
 26271                           ;gemsecs.c: 932:  if (TimerDone(TMR_HBIO)) {
 26272   011A32  0E06               	movlw	6
 26273   011A34  6EE6               	movwf	postinc1,c
 26274   011A36  ECD7  F0BE         	call	_TimerDone	;wreg free
 26275   011A3A  5022               	movf	btemp^0,w,c
 26276   011A3C  B4D8               	btfsc	status,2,c
 26277   011A3E  D330               	goto	l12953
 26278                           
 26279                           ;gemsecs.c: 933:   if (V.stack) {
 26280   011A40  EE23  F169         	lfsr	2,_V+335	;volatile
 26281   011A44  50DF               	movf	223,w,c
 26282   011A46  0B07               	andlw	7
 26283   011A48  0900               	iorlw	0
 26284   011A4A  B4D8               	btfsc	status,2,c
 26285   011A4C  D02F               	goto	l12647
 26286                           
 26287                           ;gemsecs.c: 934:    gem_messages(&block, V.sid);
 26288   011A4E  EE23  F199         	lfsr	2,_V+383	;volatile
 26289   011A52  50DF               	movf	indf2,w,c
 26290   011A54  6EE6               	movwf	postinc1,c
 26291   011A56  0E1B               	movlw	secs_II_message@block& (0+255)
 26292   011A58  6EE6               	movwf	postinc1,c
 26293   011A5A  ECD7  F0A9         	call	_gem_messages	;wreg free
 26294                           
 26295                           ;gemsecs.c: 935:    if (V.sid >= 10) {
 26296   011A5E  EE23  F199         	lfsr	2,_V+383	;volatile
 26297   011A62  0E09               	movlw	9
 26298   011A64  64DF               	cpfsgt	indf2,c
 26299   011A66  D005               	goto	l12635
 26300                           
 26301                           ;gemsecs.c: 936:     set_display_info(DIS_SEQUENCE_M);
 26302   011A68  0E08               	movlw	8
 26303   011A6A  6EE6               	movwf	postinc1,c
 26304   011A6C  EC54  F0BF         	call	_set_display_info	;wreg free
 26305                           
 26306                           ;gemsecs.c: 937:    } else {
 26307   011A70  D004               	goto	l12637
 26308   011A72                     l12635:
 26309                           
 26310                           ;gemsecs.c: 938:     set_display_info(DIS_SEQUENCE);
 26311   011A72  0E07               	movlw	7
 26312   011A74  6EE6               	movwf	postinc1,c
 26313   011A76  EC54  F0BF         	call	_set_display_info	;wreg free
 26314   011A7A                     l12637:
 26315                           
 26316                           ;gemsecs.c: 940:    vterm_sequence();
 26317   011A7A  ECC3  F093         	call	_vterm_sequence	;wreg free
 26318                           
 26319                           ; BSR set to: 1
 26320                           ;gemsecs.c: 941:    StartTimer(TMR_INFO, 3000);
 26321   011A7E  0EB8               	movlw	184
 26322   011A80  6EE6               	movwf	postinc1,c
 26323   011A82  0E0B               	movlw	11
 26324   011A84  6EE6               	movwf	postinc1,c
 26325   011A86  0E07               	movlw	7
 26326   011A88  6EE6               	movwf	postinc1,c
 26327   011A8A  EC2A  F0BC         	call	_StartTimer	;wreg free
 26328                           
 26329                           ;gemsecs.c: 942:    V.set_sequ = 1;
 26330   011A8E  EE23  F167         	lfsr	2,_V+333	;volatile
 26331   011A92  86DF               	bsf	indf2,3,c
 26332   011A94                     l12643:
 26333                           
 26334                           ;gemsecs.c: 943:    return(block);
 26335   011A94  EE20  F01B         	lfsr	2,secs_II_message@block
 26336                           
 26337                           ;stkvar	?_secs_II_message @ sp[(-6)+-7]
 26338   011A98  0E07               	movlw	7
 26339   011A9A  6E22               	movwf	btemp^0,c
 26340   011A9C  0EF3               	movlw	-13
 26341   011A9E                     us915999:
 26342   011A9E  006F FF7B FFE3     	movff	postinc2,plusw1
 26343   011AA4  28E8               	incf	wreg,w,c
 26344   011AA6  2E22               	decfsz	btemp^0,f,c
 26345   011AA8  D7FA               	bra	us915999
 26346   011AAA  D30F               	goto	l2129
 26347   011AAC                     l12647:
 26348                           
 26349                           ;gemsecs.c: 945:   StartTimer(TMR_HBIO, 5000);
 26350   011AAC  0E88               	movlw	136
 26351   011AAE  6EE6               	movwf	postinc1,c
 26352   011AB0  0E13               	movlw	19
 26353   011AB2  6EE6               	movwf	postinc1,c
 26354   011AB4  0E06               	movlw	6
 26355   011AB6  6EE6               	movwf	postinc1,c
 26356   011AB8  EC2A  F0BC         	call	_StartTimer	;wreg free
 26357   011ABC  D2F1               	goto	l12953
 26358   011ABE                     l12649:
 26359                           
 26360                           ;gemsecs.c: 952:    block.header = (uint8_t*) & H12[0];
 26361   011ABE  0EC3               	movlw	low _H12
 26362   011AC0  6E1B               	movwf	secs_II_message@block^0,c
 26363   011AC2  0E02               	movlw	high _H12
 26364   011AC4  6E1C               	movwf	(secs_II_message@block+1)^0,c
 26365                           
 26366                           ;gemsecs.c: 953:    block.length = sizeof(header12);
 26367   011AC6  0E0F               	movlw	15
 26368   011AC8  6E1D               	movwf	(secs_II_message@block+2)^0,c
 26369                           
 26370                           ;gemsecs.c: 954:    H12[0].block.block.systemb = V.systemb;
 26371   011ACA  0063  F514  F2C7   	movff	_V+299,_H12+4	;volatile
 26372   011AD0  0063  F518  F2C8   	movff	_V+300,_H12+5	;volatile
 26373   011AD6  0063  F51C  F2C9   	movff	_V+301,_H12+6	;volatile
 26374   011ADC  0063  F520  F2CA   	movff	_V+302,_H12+7	;volatile
 26375                           
 26376                           ;gemsecs.c: 955:    H10[0].block.block.systemb = V.ticks;
 26377   011AE2  0063  F504  F102   	movff	_V+295,_H10+2	;volatile
 26378   011AE8  0063  F508  F103   	movff	_V+296,_H10+3	;volatile
 26379   011AEE  0063  F50C  F104   	movff	_V+297,_H10+4	;volatile
 26380   011AF4  0063  F510  F105   	movff	_V+298,_H10+5	;volatile
 26381                           
 26382                           ;gemsecs.c: 956:    block.respond = 1;
 26383   011AFA  8021               	bsf	(secs_II_message@block+6)^0,0,c
 26384                           
 26385                           ;gemsecs.c: 957:    block.reply = (uint8_t*) & H10[0];
 26386   011AFC  0E00               	movlw	low _H10
 26387   011AFE  6E1E               	movwf	(secs_II_message@block+3)^0,c
 26388   011B00  0E01               	movlw	high _H10
 26389   011B02  6E1F               	movwf	(secs_II_message@block+4)^0,c
 26390                           
 26391                           ;gemsecs.c: 958:    block.reply_length = sizeof(header10);
 26392   011B04  0E0D               	movlw	13
 26393   011B06  6E20               	movwf	(secs_II_message@block+5)^0,c
 26394                           
 26395                           ;gemsecs.c: 959:    V.queue = 1;
 26396   011B08  EE23  F168         	lfsr	2,_V+334	;volatile
 26397   011B0C  88DF               	bsf	indf2,4,c
 26398                           
 26399                           ;gemsecs.c: 960:    break;
 26400   011B0E  D7C2               	goto	l12643
 26401   011B10                     l12663:
 26402                           
 26403                           ;gemsecs.c: 962:    block.header = (uint8_t*) & H10[0];
 26404   011B10  0E00               	movlw	low _H10
 26405   011B12  6E1B               	movwf	secs_II_message@block^0,c
 26406   011B14  0E01               	movlw	high _H10
 26407   011B16  6E1C               	movwf	(secs_II_message@block+1)^0,c
 26408                           
 26409                           ;gemsecs.c: 963:    block.length = sizeof(header10);
 26410   011B18  0E0D               	movlw	13
 26411   011B1A  6E1D               	movwf	(secs_II_message@block+2)^0,c
 26412                           
 26413                           ;gemsecs.c: 964:    H10[0].block.block.systemb = V.systemb;
 26414   011B1C  0063  F514  F102   	movff	_V+299,_H10+2	;volatile
 26415   011B22  0063  F518  F103   	movff	_V+300,_H10+3	;volatile
 26416   011B28  0063  F51C  F104   	movff	_V+301,_H10+4	;volatile
 26417   011B2E  0063  F520  F105   	movff	_V+302,_H10+5	;volatile
 26418                           
 26419                           ;gemsecs.c: 965:    break;
 26420   011B34  D7AF               	goto	l12643
 26421   011B36                     l12669:
 26422                           
 26423                           ;gemsecs.c: 967:    block.header = (uint8_t*) & H14[0];
 26424   011B36  0EE6               	movlw	low _H14
 26425   011B38  6E1B               	movwf	secs_II_message@block^0,c
 26426   011B3A  6A1C               	clrf	(secs_II_message@block+1)^0,c
 26427                           
 26428                           ;gemsecs.c: 968:    block.length = sizeof(header14);
 26429   011B3C  0E11               	movlw	17
 26430   011B3E  6E1D               	movwf	(secs_II_message@block+2)^0,c
 26431                           
 26432                           ;gemsecs.c: 969:    H14[0].block.block.systemb = V.systemb;
 26433   011B40  0063  F514  F0EC   	movff	_V+299,_H14+6	;volatile
 26434   011B46  0063  F518  F0ED   	movff	_V+300,_H14+7	;volatile
 26435   011B4C  0063  F51C  F0EE   	movff	_V+301,_H14+8	;volatile
 26436   011B52  0063  F520  F0EF   	movff	_V+302,_H14+9	;volatile
 26437                           
 26438                           ;gemsecs.c: 970:    break;
 26439   011B58  D79D               	goto	l12643
 26440   011B5A                     l12675:
 26441                           
 26442                           ;gemsecs.c: 972:    block.header = (uint8_t*) & H17[0];
 26443   011B5A  0E9B               	movlw	low _H17
 26444   011B5C  6E1B               	movwf	secs_II_message@block^0,c
 26445   011B5E  0E01               	movlw	high _H17
 26446   011B60  6E1C               	movwf	(secs_II_message@block+1)^0,c
 26447                           
 26448                           ;gemsecs.c: 973:    block.length = sizeof(header17);
 26449   011B62  0E14               	movlw	20
 26450   011B64  6E1D               	movwf	(secs_II_message@block+2)^0,c
 26451                           
 26452                           ;gemsecs.c: 974:    H17[0].block.block.systemb = V.systemb;
 26453   011B66  0063  F514  F1A4   	movff	_V+299,_H17+9	;volatile
 26454   011B6C  0063  F518  F1A5   	movff	_V+300,_H17+10	;volatile
 26455   011B72  0063  F51C  F1A6   	movff	_V+301,_H17+11	;volatile
 26456   011B78  0063  F520  F1A7   	movff	_V+302,_H17+12	;volatile
 26457                           
 26458                           ;gemsecs.c: 975:    H12[1].block.block.systemb = V.ticks;
 26459   011B7E  0063  F504  F2D6   	movff	_V+295,_H12+19	;volatile
 26460   011B84  0063  F508  F2D7   	movff	_V+296,_H12+20	;volatile
 26461   011B8A  0063  F50C  F2D8   	movff	_V+297,_H12+21	;volatile
 26462   011B90  0063  F510  F2D9   	movff	_V+298,_H12+22	;volatile
 26463                           
 26464                           ;gemsecs.c: 976:    block.respond = 1;
 26465   011B96  8021               	bsf	(secs_II_message@block+6)^0,0,c
 26466                           
 26467                           ;gemsecs.c: 977:    block.reply = (uint8_t*) & H12[1];
 26468   011B98  0ED2               	movlw	low (_H12+15)
 26469   011B9A  6E1E               	movwf	(secs_II_message@block+3)^0,c
 26470   011B9C  0E02               	movlw	high (_H12+15)
 26471   011B9E  6E1F               	movwf	(secs_II_message@block+4)^0,c
 26472                           
 26473                           ;gemsecs.c: 978:    block.reply_length = sizeof(header12);
 26474   011BA0  0E0F               	movlw	15
 26475   011BA2  D7B1               	goto	L9
 26476   011BA4                     l12689:
 26477                           
 26478                           ;gemsecs.c: 987:    H10[2].block.block.stream = stream;
 26479                           ;stkvar	_stream @ sp[(-6)+-6]
 26480   011BA4  0EF4               	movlw	-12
 26481   011BA6  006F FF8C  F02D    	movff	plusw1,btemp+11
 26482   011BAC  0101               	movlb	1	; () banked
 26483   011BAE  5123               	movf	(_H10+35)& (0+255),w,b
 26484   011BB0  182D               	xorwf	(btemp+11)^0,w,c
 26485   011BB2  0B80               	andlw	-128
 26486   011BB4  182D               	xorwf	(btemp+11)^0,w,c
 26487   011BB6  6F23               	movwf	(_H10+35)& (0+255),b
 26488                           
 26489                           ; BSR set to: 1
 26490                           ;gemsecs.c: 988:    block.header = (uint8_t*) & H10[2];
 26491   011BB8  0E1A               	movlw	low (_H10+26)
 26492   011BBA  6E1B               	movwf	secs_II_message@block^0,c
 26493   011BBC  0E01               	movlw	high (_H10+26)
 26494   011BBE  6E1C               	movwf	(secs_II_message@block+1)^0,c
 26495                           
 26496                           ; BSR set to: 1
 26497                           ;gemsecs.c: 989:    block.length = sizeof(header10);
 26498   011BC0  0E0D               	movlw	13
 26499   011BC2  6E1D               	movwf	(secs_II_message@block+2)^0,c
 26500                           
 26501                           ; BSR set to: 1
 26502                           ;gemsecs.c: 990:    H10[2].block.block.systemb = V.systemb;
 26503   011BC4  0063  F514  F11C   	movff	_V+299,_H10+28	;volatile
 26504   011BCA  0063  F518  F11D   	movff	_V+300,_H10+29	;volatile
 26505   011BD0  0063  F51C  F11E   	movff	_V+301,_H10+30	;volatile
 26506   011BD6  0063  F520  F11F   	movff	_V+302,_H10+31	;volatile
 26507                           
 26508                           ; BSR set to: 1
 26509                           ;gemsecs.c: 991:    V.abort = LINK_ERROR_ABORT;
 26510   011BDC  0E11               	movlw	17
 26511   011BDE  006F FFA0  FD50    	movff	wreg,_V+310	;volatile
 26512                           
 26513                           ; BSR set to: 1
 26514                           ;gemsecs.c: 992:    V.all_errors++;
 26515   011BE4  EE23  F165         	lfsr	2,_V+331	;volatile
 26516   011BE8  D131               	goto	L10
 26517   011BEA                     l12703:
 26518                           
 26519                           ;stkvar	_function @ sp[(-6)+-7]
 26520   011BEA  0EF3               	movlw	-13
 26521   011BEC  50E3               	movf	plusw1,w,c
 26522                           
 26523                           ; Switch size 1, requested type "simple"
 26524                           ; Number of cases is 4, Range of values is 1 to 13
 26525                           ; switch strategies available:
 26526                           ; Name         Instructions Cycles
 26527                           ; simple_byte           13     7 (average)
 26528                           ;	Chosen strategy is simple_byte
 26529   011BEE  0A01               	xorlw	1	; case 1
 26530   011BF0  B4D8               	btfsc	status,2,c
 26531   011BF2  D765               	goto	l12649
 26532   011BF4  0A03               	xorlw	3	; case 2
 26533   011BF6  B4D8               	btfsc	status,2,c
 26534   011BF8  D78B               	goto	l12663
 26535   011BFA  0A01               	xorlw	1	; case 3
 26536   011BFC  B4D8               	btfsc	status,2,c
 26537   011BFE  D79B               	goto	l12669
 26538   011C00  0A0E               	xorlw	14	; case 13
 26539   011C02  B4D8               	btfsc	status,2,c
 26540   011C04  D7AA               	goto	l12675
 26541   011C06  D7CE               	goto	l12689
 26542   011C08                     l12705:
 26543                           
 26544                           ;gemsecs.c: 1000:    block.header = (uint8_t*) & H26[0];
 26545   011C08  0EE1               	movlw	low _H26
 26546   011C0A  6E1B               	movwf	secs_II_message@block^0,c
 26547   011C0C  0E02               	movlw	high _H26
 26548   011C0E  6E1C               	movwf	(secs_II_message@block+1)^0,c
 26549                           
 26550                           ;gemsecs.c: 1001:    block.length = sizeof(header26);
 26551   011C10  0E1D               	movlw	29
 26552   011C12  6E1D               	movwf	(secs_II_message@block+2)^0,c
 26553                           
 26554                           ;gemsecs.c: 1002:    H26[0].block.block.systemb = V.systemb;
 26555   011C14  0063  F514  F2F3   	movff	_V+299,_H26+18	;volatile
 26556   011C1A  0063  F518  F2F4   	movff	_V+300,_H26+19	;volatile
 26557   011C20  0063  F51C  F2F5   	movff	_V+301,_H26+20	;volatile
 26558   011C26  0063  F520  F2F6   	movff	_V+302,_H26+21	;volatile
 26559                           
 26560                           ;gemsecs.c: 1008:    break;
 26561   011C2C  D733               	goto	l12643
 26562   011C2E                     l12711:
 26563                           
 26564                           ;gemsecs.c: 1010:    block.header = (uint8_t*) & H13[3];
 26565   011C2E  0E8B               	movlw	low (_H13+48)
 26566   011C30  6E1B               	movwf	secs_II_message@block^0,c
 26567   011C32  0E01               	movlw	high (_H13+48)
 26568   011C34  6E1C               	movwf	(secs_II_message@block+1)^0,c
 26569                           
 26570                           ;gemsecs.c: 1011:    block.length = sizeof(header13);
 26571   011C36  0E10               	movlw	16
 26572   011C38  6E1D               	movwf	(secs_II_message@block+2)^0,c
 26573                           
 26574                           ;gemsecs.c: 1012:    H13[3].block.block.systemb = V.systemb;
 26575   011C3A  0063  F514  F190   	movff	_V+299,_H13+53	;volatile
 26576   011C40  0063  F518  F191   	movff	_V+300,_H13+54	;volatile
 26577   011C46  0063  F51C  F192   	movff	_V+301,_H13+55	;volatile
 26578   011C4C  0063  F520  F193   	movff	_V+302,_H13+56	;volatile
 26579                           
 26580                           ;gemsecs.c: 1013:    break;
 26581   011C52  D720               	goto	l12643
 26582   011C54                     l12731:
 26583                           
 26584                           ;stkvar	_function @ sp[(-6)+-7]
 26585   011C54  0EF3               	movlw	-13
 26586   011C56  50E3               	movf	plusw1,w,c
 26587                           
 26588                           ; Switch size 1, requested type "simple"
 26589                           ; Number of cases is 2, Range of values is 17 to 25
 26590                           ; switch strategies available:
 26591                           ; Name         Instructions Cycles
 26592                           ; simple_byte            7     4 (average)
 26593                           ;	Chosen strategy is simple_byte
 26594   011C58  0A11               	xorlw	17	; case 17
 26595   011C5A  B4D8               	btfsc	status,2,c
 26596   011C5C  D7D5               	goto	l12705
 26597   011C5E  0A08               	xorlw	8	; case 25
 26598   011C60  B4D8               	btfsc	status,2,c
 26599   011C62  D7E5               	goto	l12711
 26600   011C64  D79F               	goto	l12689
 26601   011C66                     l12733:
 26602                           
 26603                           ;gemsecs.c: 1027:    block.header = (uint8_t*) & H13[2];
 26604   011C66  0E7B               	movlw	low (_H13+32)
 26605   011C68  6E1B               	movwf	secs_II_message@block^0,c
 26606   011C6A  0E01               	movlw	high (_H13+32)
 26607   011C6C  6E1C               	movwf	(secs_II_message@block+1)^0,c
 26608                           
 26609                           ;gemsecs.c: 1028:    block.length = sizeof(header13);
 26610   011C6E  0E10               	movlw	16
 26611   011C70  6E1D               	movwf	(secs_II_message@block+2)^0,c
 26612                           
 26613                           ;gemsecs.c: 1029:    H13[2].block.block.systemb = V.systemb;
 26614   011C72  0063  F514  F180   	movff	_V+299,_H13+37	;volatile
 26615   011C78  0063  F518  F181   	movff	_V+300,_H13+38	;volatile
 26616   011C7E  0063  F51C  F182   	movff	_V+301,_H13+39	;volatile
 26617   011C84  0063  F520  F183   	movff	_V+302,_H13+40	;volatile
 26618                           
 26619                           ;gemsecs.c: 1030:    break;
 26620   011C8A  D704               	goto	l12643
 26621   011C8C                     l12753:
 26622                           
 26623                           ;stkvar	_function @ sp[(-6)+-7]
 26624   011C8C  0EF3               	movlw	-13
 26625   011C8E  50E3               	movf	plusw1,w,c
 26626                           
 26627                           ; Switch size 1, requested type "simple"
 26628                           ; Number of cases is 1, Range of values is 1 to 1
 26629                           ; switch strategies available:
 26630                           ; Name         Instructions Cycles
 26631                           ; simple_byte            4     3 (average)
 26632                           ;	Chosen strategy is simple_byte
 26633   011C90  0A01               	xorlw	1	; case 1
 26634   011C92  B4D8               	btfsc	status,2,c
 26635   011C94  D7E8               	goto	l12733
 26636   011C96  D786               	goto	l12689
 26637   011C98                     l12757:
 26638                           
 26639                           ;gemsecs.c: 1045:    ceid = s6f11_opcmd();
 26640   011C98  ECE4  F0B8         	call	_s6f11_opcmd	;wreg free
 26641   011C9C  C022  F02C         	movff	btemp,btemp+10
 26642   011CA0  C023  F02D         	movff	btemp+1,btemp+11
 26643   011CA4  502C               	movf	(btemp+10)^0,w,c
 26644   011CA6  6E26               	movwf	(btemp+4)^0,c
 26645   011CA8  502D               	movf	(btemp+11)^0,w,c
 26646   011CAA  6E27               	movwf	(btemp+5)^0,c
 26647   011CAC  6A28               	clrf	(btemp+6)^0,c
 26648   011CAE  6A29               	clrf	(btemp+7)^0,c
 26649                           
 26650                           ;stkvar	_ceid @ sp[(-6)+0]
 26651   011CB0  0EFA               	movlw	-6
 26652   011CB2  0060  F09B  FFE3   	movff	btemp+4,plusw1
 26653   011CB8  0EFB               	movlw	-5
 26654   011CBA  0060  F09F  FFE3   	movff	btemp+5,plusw1
 26655   011CC0  0EFC               	movlw	-4
 26656   011CC2  0060  F0A3  FFE3   	movff	btemp+6,plusw1
 26657   011CC8  0EFD               	movlw	-3
 26658   011CCA  0060  F0A7  FFE3   	movff	btemp+7,plusw1
 26659                           
 26660                           ;gemsecs.c: 1046:    switch (V.e_types) {
 26661   011CD0  D03C               	goto	l12775
 26662   011CD2                     l12759:
 26663                           
 26664                           ;gemsecs.c: 1048:     if (ceid == 93 || ceid == 94) {
 26665                           ;stkvar	_ceid @ sp[(-6)+0]
 26666   011CD2  0EFA               	movlw	-6
 26667   011CD4  006F FF8C  F022    	movff	plusw1,btemp
 26668   011CDA  0E5D               	movlw	93
 26669   011CDC  1822               	xorwf	btemp^0,w,c
 26670   011CDE  E10A               	bnz	u9160
 26671   011CE0  0EFB               	movlw	-5
 26672   011CE2  50E3               	movf	plusw1,w,c
 26673   011CE4  E107               	bnz	u9160
 26674   011CE6  0EFC               	movlw	-4
 26675   011CE8  50E3               	movf	plusw1,w,c
 26676   011CEA  E104               	bnz	u9160
 26677   011CEC  0EFD               	movlw	-3
 26678   011CEE  50E3               	movf	plusw1,w,c
 26679   011CF0  B4D8               	btfsc	status,2,c
 26680   011CF2  D011               	goto	u9170
 26681   011CF4                     u9160:
 26682                           
 26683                           ;stkvar	_ceid @ sp[(-6)+0]
 26684   011CF4  0EFA               	movlw	-6
 26685   011CF6  006F FF8C  F022    	movff	plusw1,btemp
 26686   011CFC  0E5E               	movlw	94
 26687   011CFE  1822               	xorwf	btemp^0,w,c
 26688   011D00  E134               	bnz	l12777
 26689   011D02  0EFB               	movlw	-5
 26690   011D04  50E3               	movf	plusw1,w,c
 26691   011D06  E131               	bnz	l12777
 26692   011D08  0EFC               	movlw	-4
 26693   011D0A  50E3               	movf	plusw1,w,c
 26694   011D0C  E12E               	bnz	l12777
 26695   011D0E  0EFD               	movlw	-3
 26696   011D10  50E3               	movf	plusw1,w,c
 26697   011D12  A4D8               	btfss	status,2,c
 26698   011D14  D02A               	goto	l12777
 26699   011D16                     u9170:
 26700                           
 26701                           ;gemsecs.c: 1049:      V.response.host_display_ack = 1;
 26702   011D16  EE23  F190         	lfsr	2,_V+374	;volatile
 26703   011D1A  80DF               	bsf	indf2,0,c
 26704                           
 26705                           ;gemsecs.c: 1050:      V.sid = 10;
 26706   011D1C  0E0A               	movlw	10
 26707   011D1E  006F FFA0  FD99    	movff	wreg,_V+383	;volatile
 26708   011D24  D022               	goto	l12777
 26709   011D26                     l12767:
 26710                           
 26711                           ;gemsecs.c: 1054:     if (ceid == 81) {
 26712                           ;stkvar	_ceid @ sp[(-6)+0]
 26713   011D26  0EFA               	movlw	-6
 26714   011D28  006F FF8C  F022    	movff	plusw1,btemp
 26715   011D2E  0E51               	movlw	81
 26716   011D30  1822               	xorwf	btemp^0,w,c
 26717   011D32  E11B               	bnz	l12777
 26718   011D34  0EFB               	movlw	-5
 26719   011D36  50E3               	movf	plusw1,w,c
 26720   011D38  E118               	bnz	l12777
 26721   011D3A  0EFC               	movlw	-4
 26722   011D3C  50E3               	movf	plusw1,w,c
 26723   011D3E  E115               	bnz	l12777
 26724   011D40  0EFD               	movlw	-3
 26725   011D42  50E3               	movf	plusw1,w,c
 26726   011D44  B4D8               	btfsc	status,2,c
 26727   011D46  D7E7               	goto	u9170
 26728   011D48  D010               	goto	l12777
 26729   011D4A                     l12775:
 26730   011D4A  EE23  F01D         	lfsr	2,_V+3	;volatile
 26731   011D4E  50DF               	movf	indf2,w,c
 26732   011D50  6E2C               	movwf	(btemp+10)^0,c
 26733   011D52  6A2D               	clrf	(btemp+11)^0,c
 26734                           
 26735                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26736                           ; Switch size 1, requested type "simple"
 26737                           ; Number of cases is 1, Range of values is 0 to 0
 26738                           ; switch strategies available:
 26739                           ; Name         Instructions Cycles
 26740                           ; simple_byte            4     3 (average)
 26741                           ;	Chosen strategy is simple_byte
 26742   011D54  502D               	movf	(btemp+11)^0,w,c
 26743   011D56  0A00               	xorlw	0	; case 0
 26744   011D58  A4D8               	btfss	status,2,c
 26745   011D5A  D007               	goto	l12777
 26746                           
 26747                           ; Switch size 1, requested type "simple"
 26748                           ; Number of cases is 2, Range of values is 1 to 2
 26749                           ; switch strategies available:
 26750                           ; Name         Instructions Cycles
 26751                           ; simple_byte            7     4 (average)
 26752                           ;	Chosen strategy is simple_byte
 26753   011D5C  502C               	movf	(btemp+10)^0,w,c
 26754   011D5E  0A01               	xorlw	1	; case 1
 26755   011D60  B4D8               	btfsc	status,2,c
 26756   011D62  D7B7               	goto	l12759
 26757   011D64  0A03               	xorlw	3	; case 2
 26758   011D66  B4D8               	btfsc	status,2,c
 26759   011D68  D7DE               	goto	l12767
 26760   011D6A                     l12777:
 26761                           
 26762                           ;gemsecs.c: 1062:    if (ceid == 93 || ceid == 94) {
 26763                           ;stkvar	_ceid @ sp[(-6)+0]
 26764   011D6A  0EFA               	movlw	-6
 26765   011D6C  006F FF8C  F022    	movff	plusw1,btemp
 26766   011D72  0E5D               	movlw	93
 26767   011D74  1822               	xorwf	btemp^0,w,c
 26768   011D76  E10A               	bnz	u9190
 26769   011D78  0EFB               	movlw	-5
 26770   011D7A  50E3               	movf	plusw1,w,c
 26771   011D7C  E107               	bnz	u9190
 26772   011D7E  0EFC               	movlw	-4
 26773   011D80  50E3               	movf	plusw1,w,c
 26774   011D82  E104               	bnz	u9190
 26775   011D84  0EFD               	movlw	-3
 26776   011D86  50E3               	movf	plusw1,w,c
 26777   011D88  B4D8               	btfsc	status,2,c
 26778   011D8A  D011               	goto	u9200
 26779   011D8C                     u9190:
 26780                           
 26781                           ;stkvar	_ceid @ sp[(-6)+0]
 26782   011D8C  0EFA               	movlw	-6
 26783   011D8E  006F FF8C  F022    	movff	plusw1,btemp
 26784   011D94  0E5E               	movlw	94
 26785   011D96  1822               	xorwf	btemp^0,w,c
 26786   011D98  E10D               	bnz	l12783
 26787   011D9A  0EFB               	movlw	-5
 26788   011D9C  50E3               	movf	plusw1,w,c
 26789   011D9E  E10A               	bnz	l12783
 26790   011DA0  0EFC               	movlw	-4
 26791   011DA2  50E3               	movf	plusw1,w,c
 26792   011DA4  E107               	bnz	l12783
 26793   011DA6  0EFD               	movlw	-3
 26794   011DA8  50E3               	movf	plusw1,w,c
 26795   011DAA  A4D8               	btfss	status,2,c
 26796   011DAC  D003               	goto	l12783
 26797   011DAE                     u9200:
 26798                           
 26799                           ;gemsecs.c: 1063:     V.response.host_display_ack = 1;
 26800   011DAE  EE23  F190         	lfsr	2,_V+374	;volatile
 26801   011DB2  80DF               	bsf	indf2,0,c
 26802   011DB4                     l12783:
 26803                           
 26804                           ;gemsecs.c: 1065:    block.header = (uint8_t*) & H13[0];
 26805   011DB4  0E5B               	movlw	low _H13
 26806   011DB6  6E1B               	movwf	secs_II_message@block^0,c
 26807   011DB8  0E01               	movlw	high _H13
 26808   011DBA  6E1C               	movwf	(secs_II_message@block+1)^0,c
 26809                           
 26810                           ;gemsecs.c: 1066:    block.length = sizeof(header13);
 26811   011DBC  0E10               	movlw	16
 26812   011DBE  6E1D               	movwf	(secs_II_message@block+2)^0,c
 26813                           
 26814                           ;gemsecs.c: 1067:    H13[0].block.block.systemb = V.systemb;
 26815   011DC0  0063  F514  F160   	movff	_V+299,_H13+5	;volatile
 26816   011DC6  0063  F518  F161   	movff	_V+300,_H13+6	;volatile
 26817   011DCC  0063  F51C  F162   	movff	_V+301,_H13+7	;volatile
 26818   011DD2  0063  F520  F163   	movff	_V+302,_H13+8	;volatile
 26819                           
 26820                           ;gemsecs.c: 1068:    H13[0].block.block.function = 12;
 26821   011DD8  0E0C               	movlw	12
 26822   011DDA  D027               	goto	L12
 26823   011DDC                     l12791:
 26824                           
 26825                           ;gemsecs.c: 1071:    block.header = (uint8_t*) & H13[0];
 26826   011DDC  0E5B               	movlw	low _H13
 26827   011DDE  6E1B               	movwf	secs_II_message@block^0,c
 26828   011DE0  0E01               	movlw	high _H13
 26829   011DE2  6E1C               	movwf	(secs_II_message@block+1)^0,c
 26830                           
 26831                           ;gemsecs.c: 1072:    block.length = sizeof(header13);
 26832   011DE4  0E10               	movlw	16
 26833   011DE6  6E1D               	movwf	(secs_II_message@block+2)^0,c
 26834                           
 26835                           ;gemsecs.c: 1073:    H13[0].block.block.systemb = V.systemb;
 26836   011DE8  0063  F514  F160   	movff	_V+299,_H13+5	;volatile
 26837   011DEE  0063  F518  F161   	movff	_V+300,_H13+6	;volatile
 26838   011DF4  0063  F51C  F162   	movff	_V+301,_H13+7	;volatile
 26839   011DFA  0063  F520  F163   	movff	_V+302,_H13+8	;volatile
 26840                           
 26841                           ;gemsecs.c: 1074:    H13[0].block.block.function = 14;
 26842   011E00  0E0E               	movlw	14
 26843   011E02  D013               	goto	L12
 26844   011E04                     l12799:
 26845                           
 26846                           ;gemsecs.c: 1077:    block.header = (uint8_t*) & H13[0];
 26847   011E04  0E5B               	movlw	low _H13
 26848   011E06  6E1B               	movwf	secs_II_message@block^0,c
 26849   011E08  0E01               	movlw	high _H13
 26850   011E0A  6E1C               	movwf	(secs_II_message@block+1)^0,c
 26851                           
 26852                           ;gemsecs.c: 1078:    block.length = sizeof(header13);
 26853   011E0C  0E10               	movlw	16
 26854   011E0E  6E1D               	movwf	(secs_II_message@block+2)^0,c
 26855                           
 26856                           ;gemsecs.c: 1079:    H13[0].block.block.systemb = V.systemb;
 26857   011E10  0063  F514  F160   	movff	_V+299,_H13+5	;volatile
 26858   011E16  0063  F518  F161   	movff	_V+300,_H13+6	;volatile
 26859   011E1C  0063  F51C  F162   	movff	_V+301,_H13+7	;volatile
 26860   011E22  0063  F520  F163   	movff	_V+302,_H13+8	;volatile
 26861                           
 26862                           ;gemsecs.c: 1080:    H13[0].block.block.function = 26;
 26863   011E28  0E1A               	movlw	26
 26864   011E2A                     L12:
 26865   011E2A  0101               	movlb	1	; () banked
 26866   011E2C  6F66               	movwf	(_H13+11)& (0+255),b
 26867                           
 26868                           ;gemsecs.c: 1081:    break;
 26869   011E2E  D632               	goto	l12643
 26870   011E30                     l12821:
 26871                           
 26872                           ;stkvar	_function @ sp[(-6)+-7]
 26873   011E30  0EF3               	movlw	-13
 26874   011E32  50E3               	movf	plusw1,w,c
 26875                           
 26876                           ; Switch size 1, requested type "simple"
 26877                           ; Number of cases is 3, Range of values is 11 to 25
 26878                           ; switch strategies available:
 26879                           ; Name         Instructions Cycles
 26880                           ; simple_byte           10     6 (average)
 26881                           ;	Chosen strategy is simple_byte
 26882   011E34  0A0B               	xorlw	11	; case 11
 26883   011E36  B4D8               	btfsc	status,2,c
 26884   011E38  D72F               	goto	l12757
 26885   011E3A  0A06               	xorlw	6	; case 13
 26886   011E3C  B4D8               	btfsc	status,2,c
 26887   011E3E  D7CE               	goto	l12791
 26888   011E40  0A14               	xorlw	20	; case 25
 26889   011E42  B4D8               	btfsc	status,2,c
 26890   011E44  D7DF               	goto	l12799
 26891   011E46  D6AE               	goto	l12689
 26892   011E48                     l12823:
 26893                           
 26894                           ;gemsecs.c: 1103:    V.equip_timeout++;
 26895   011E48  EE23  F161         	lfsr	2,_V+327	;volatile
 26896   011E4C                     L10:
 26897   011E4C  2ADE               	incf	postinc2,f,c
 26898   011E4E  0E00               	movlw	0
 26899   011E50  22DD               	addwfc	postdec2,f,c
 26900                           
 26901                           ;gemsecs.c: 1104:    break;
 26902   011E52  D620               	goto	l12643
 26903   011E54                     l12839:
 26904                           
 26905                           ;stkvar	_function @ sp[(-6)+-7]
 26906   011E54  0EF3               	movlw	-13
 26907   011E56  50E3               	movf	plusw1,w,c
 26908                           
 26909                           ; Switch size 1, requested type "simple"
 26910                           ; Number of cases is 7, Range of values is 1 to 13
 26911                           ; switch strategies available:
 26912                           ; Name         Instructions Cycles
 26913                           ; simple_byte           22    12 (average)
 26914                           ;	Chosen strategy is simple_byte
 26915   011E58  0A01               	xorlw	1	; case 1
 26916   011E5A  B4D8               	btfsc	status,2,c
 26917   011E5C  D61B               	goto	l12643
 26918   011E5E  0A02               	xorlw	2	; case 3
 26919   011E60  B4D8               	btfsc	status,2,c
 26920   011E62  D618               	goto	l12643
 26921   011E64  0A06               	xorlw	6	; case 5
 26922   011E66  B4D8               	btfsc	status,2,c
 26923   011E68  D615               	goto	l12643
 26924   011E6A  0A02               	xorlw	2	; case 7
 26925   011E6C  B4D8               	btfsc	status,2,c
 26926   011E6E  D612               	goto	l12643
 26927   011E70  0A0E               	xorlw	14	; case 9
 26928   011E72  B4D8               	btfsc	status,2,c
 26929   011E74  D7E9               	goto	l12823
 26930   011E76  0A02               	xorlw	2	; case 11
 26931   011E78  B4D8               	btfsc	status,2,c
 26932   011E7A  D60C               	goto	l12643
 26933   011E7C  0A06               	xorlw	6	; case 13
 26934   011E7E  B4D8               	btfsc	status,2,c
 26935   011E80  D609               	goto	l12643
 26936   011E82  D690               	goto	l12689
 26937   011E84                     l12841:
 26938                           
 26939                           ;gemsecs.c: 1120:   V.set_sequ = 1;
 26940   011E84  EE23  F167         	lfsr	2,_V+333	;volatile
 26941   011E88  86DF               	bsf	indf2,3,c
 26942                           
 26943                           ;gemsecs.c: 1121:   switch (function) {
 26944   011E8A  D104               	goto	l12937
 26945   011E8C                     l12843:
 26946                           
 26947                           ;gemsecs.c: 1123:    block.header = (uint8_t*) & H13[1];
 26948   011E8C  0E6B               	movlw	low (_H13+16)
 26949   011E8E  6E1B               	movwf	secs_II_message@block^0,c
 26950   011E90  0E01               	movlw	high (_H13+16)
 26951   011E92  6E1C               	movwf	(secs_II_message@block+1)^0,c
 26952                           
 26953                           ;gemsecs.c: 1124:    block.length = sizeof(header13);
 26954   011E94  0E10               	movlw	16
 26955   011E96  6E1D               	movwf	(secs_II_message@block+2)^0,c
 26956                           
 26957                           ;gemsecs.c: 1125:    H13[1].block.block.systemb = V.systemb;
 26958   011E98  0063  F514  F170   	movff	_V+299,_H13+21	;volatile
 26959   011E9E  0063  F518  F171   	movff	_V+300,_H13+22	;volatile
 26960   011EA4  0063  F51C  F172   	movff	_V+301,_H13+23	;volatile
 26961   011EAA  0063  F520  F173   	movff	_V+302,_H13+24	;volatile
 26962                           
 26963                           ;gemsecs.c: 1126:    H153[0].block.block.systemb = V.ticks;
 26964   011EB0  EE23  F141         	lfsr	2,_V+295	;volatile
 26965   011EB4  006F FF78  FE2E    	movff	postinc2,_H153+145
 26966   011EBA  006F FF78  FE2F    	movff	postinc2,_H153+146
 26967   011EC0  006F FF78  FE30    	movff	postinc2,_H153+147
 26968   011EC6  006F FF74  FE31    	movff	postdec2,_H153+148
 26969                           
 26970                           ;gemsecs.c: 1127:    set_display_info(DIS_TERM);
 26971   011ECC  0E01               	movlw	1
 26972   011ECE  6EE6               	movwf	postinc1,c
 26973   011ED0  EC54  F0BF         	call	_set_display_info	;wreg free
 26974                           
 26975                           ;gemsecs.c: 1129:    switch (s10f1_opcmd()) {
 26976   011ED4  D0AC               	goto	l12915
 26977   011ED6                     l2185:
 26978                           
 26979                           ;gemsecs.c: 1131:     block.respond = 1;
 26980   011ED6  8021               	bsf	(secs_II_message@block+6)^0,0,c
 26981                           
 26982                           ;gemsecs.c: 1132:     block.reply = (uint8_t*) & H153[1];
 26983   011ED8  0E39               	movlw	low (_H153+156)
 26984   011EDA  6E1E               	movwf	(secs_II_message@block+3)^0,c
 26985   011EDC  0E0E               	movlw	high (_H153+156)
 26986   011EDE  6E1F               	movwf	(secs_II_message@block+4)^0,c
 26987                           
 26988                           ;gemsecs.c: 1133:     block.reply_length = sizeof(header153);
 26989   011EE0  0E9C               	movlw	156
 26990   011EE2  6E20               	movwf	(secs_II_message@block+5)^0,c
 26991                           
 26992                           ;gemsecs.c: 1134:     H153[1].data[138] = V.response.TID;
 26993   011EE4  0063  F62C  FEC5   	movff	_V+369,_H153+296	;volatile
 26994   011EEA                     l12859:
 26995                           
 26996                           ;gemsecs.c: 1135:     V.queue = 1;
 26997   011EEA  EE23  F168         	lfsr	2,_V+334	;volatile
 26998   011EEE  88DF               	bsf	indf2,4,c
 26999                           
 27000                           ;gemsecs.c: 1136:     break;
 27001   011EF0  D0C0               	goto	l12917
 27002   011EF2                     l2187:
 27003                           
 27004                           ;gemsecs.c: 1138:     block.respond = 1;
 27005   011EF2  8021               	bsf	(secs_II_message@block+6)^0,0,c
 27006                           
 27007                           ;gemsecs.c: 1139:     block.reply = (uint8_t*) & H33[0];
 27008   011EF4  0EC2               	movlw	low _H33
 27009   011EF6  6E1E               	movwf	(secs_II_message@block+3)^0,c
 27010   011EF8  6A1F               	clrf	(secs_II_message@block+4)^0,c
 27011                           
 27012                           ;gemsecs.c: 1140:     block.reply_length = sizeof(header33);
 27013   011EFA  0E24               	movlw	36
 27014   011EFC  6E20               	movwf	(secs_II_message@block+5)^0,c
 27015                           
 27016                           ;gemsecs.c: 1141:     V.queue = 1;
 27017   011EFE  EE23  F168         	lfsr	2,_V+334	;volatile
 27018   011F02  88DF               	bsf	indf2,4,c
 27019                           
 27020                           ;gemsecs.c: 1142:     set_display_info(DIS_LOAD);
 27021   011F04  0E03               	movlw	3
 27022   011F06  6EE6               	movwf	postinc1,c
 27023   011F08  EC54  F0BF         	call	_set_display_info	;wreg free
 27024                           
 27025                           ;gemsecs.c: 1143:     break;
 27026   011F0C  D0B2               	goto	l12917
 27027   011F0E                     l2188:
 27028                           
 27029                           ;gemsecs.c: 1145:     block.respond = 1;
 27030   011F0E  8021               	bsf	(secs_II_message@block+6)^0,0,c
 27031                           
 27032                           ;gemsecs.c: 1146:     block.reply = (uint8_t*) & H33[0];
 27033   011F10  0EC2               	movlw	low _H33
 27034   011F12  6E1E               	movwf	(secs_II_message@block+3)^0,c
 27035   011F14  6A1F               	clrf	(secs_II_message@block+4)^0,c
 27036                           
 27037                           ;gemsecs.c: 1147:     block.reply_length = sizeof(header33);
 27038   011F16  0E24               	movlw	36
 27039   011F18  6E20               	movwf	(secs_II_message@block+5)^0,c
 27040                           
 27041                           ;gemsecs.c: 1148:     V.queue = 1;
 27042   011F1A  EE23  F168         	lfsr	2,_V+334	;volatile
 27043   011F1E  88DF               	bsf	indf2,4,c
 27044                           
 27045                           ;gemsecs.c: 1149:     set_display_info(DIS_UNLOAD);
 27046   011F20  0E04               	movlw	4
 27047   011F22  6EE6               	movwf	postinc1,c
 27048   011F24  EC54  F0BF         	call	_set_display_info	;wreg free
 27049                           
 27050                           ;gemsecs.c: 1150:     break;
 27051   011F28  D0A4               	goto	l12917
 27052   011F2A                     l2189:
 27053                           
 27054                           ;gemsecs.c: 1152:     block.respond = 1;
 27055   011F2A  8021               	bsf	(secs_II_message@block+6)^0,0,c
 27056                           
 27057                           ;gemsecs.c: 1153:     block.reply = (uint8_t*) & H33[0];
 27058   011F2C  0EC2               	movlw	low _H33
 27059   011F2E  6E1E               	movwf	(secs_II_message@block+3)^0,c
 27060   011F30  6A1F               	clrf	(secs_II_message@block+4)^0,c
 27061                           
 27062                           ;gemsecs.c: 1154:     block.reply_length = sizeof(header33);
 27063   011F32  0E24               	movlw	36
 27064   011F34  6E20               	movwf	(secs_II_message@block+5)^0,c
 27065                           
 27066                           ;gemsecs.c: 1155:     V.queue = 1;
 27067   011F36  EE23  F168         	lfsr	2,_V+334	;volatile
 27068   011F3A  88DF               	bsf	indf2,4,c
 27069                           
 27070                           ;gemsecs.c: 1156:     set_display_info(DIS_PUMP);
 27071   011F3C  0E05               	movlw	5
 27072   011F3E  6EE6               	movwf	postinc1,c
 27073   011F40  EC54  F0BF         	call	_set_display_info	;wreg free
 27074                           
 27075                           ;gemsecs.c: 1157:     break;
 27076   011F44  D096               	goto	l12917
 27077   011F46                     l12885:
 27078                           
 27079                           ;gemsecs.c: 1159:     parse_sid();
 27080   011F46  ECE7  F0B7         	call	_parse_sid	;wreg free
 27081                           
 27082                           ;gemsecs.c: 1160:     sequence_messages(V.sid);
 27083   011F4A  EE23  F199         	lfsr	2,_V+383	;volatile
 27084   011F4E  50DF               	movf	indf2,w,c
 27085   011F50  6EE6               	movwf	postinc1,c
 27086   011F52  EC63  F09D         	call	_sequence_messages	;wreg free
 27087                           
 27088                           ;gemsecs.c: 1161:     set_display_info(DIS_SEQUENCE);
 27089   011F56  0E07               	movlw	7
 27090   011F58  6EE6               	movwf	postinc1,c
 27091   011F5A  EC54  F0BF         	call	_set_display_info	;wreg free
 27092                           
 27093                           ;gemsecs.c: 1162:     V.sequences++;
 27094   011F5E  EE23  F163         	lfsr	2,_V+329	;volatile
 27095   011F62  2ADE               	incf	postinc2,f,c
 27096   011F64  0E00               	movlw	0
 27097   011F66  22DD               	addwfc	postdec2,f,c
 27098                           
 27099                           ;gemsecs.c: 1163:     break;
 27100   011F68  D084               	goto	l12917
 27101   011F6A                     l2191:
 27102                           
 27103                           ;gemsecs.c: 1165:     block.respond = 1;
 27104   011F6A  8021               	bsf	(secs_II_message@block+6)^0,0,c
 27105                           
 27106                           ;gemsecs.c: 1166:     block.reply = (uint8_t*) & H153[0];
 27107   011F6C  0E9D               	movlw	low _H153
 27108   011F6E  6E1E               	movwf	(secs_II_message@block+3)^0,c
 27109   011F70  0E0D               	movlw	high _H153
 27110   011F72  6E1F               	movwf	(secs_II_message@block+4)^0,c
 27111                           
 27112                           ;gemsecs.c: 1167:     block.reply_length = sizeof(header153);
 27113   011F74  0E9C               	movlw	156
 27114   011F76  6E20               	movwf	(secs_II_message@block+5)^0,c
 27115                           
 27116                           ;gemsecs.c: 1168:     H153[0].data[138] = V.response.TID;
 27117   011F78  0063  F62C  FE29   	movff	_V+369,_H153+140	;volatile
 27118                           
 27119                           ;gemsecs.c: 1169:     terminal_format(display_message);
 27120   011F7E  0E00               	movlw	0
 27121   011F80  6EE6               	movwf	postinc1,c
 27122   011F82  ECCD  F0A2         	call	_terminal_format	;wreg free
 27123                           
 27124                           ; BSR set to: 1
 27125                           ;gemsecs.c: 1170:     format_display_text(V.terminal);
 27126   011F86  0E61               	movlw	low (_V+71)
 27127   011F88  6EE6               	movwf	postinc1,c
 27128   011F8A  0E0C               	movlw	high (_V+71)
 27129   011F8C  6EE6               	movwf	postinc1,c
 27130   011F8E  ECFC  F0AB         	call	_format_display_text	;wreg free
 27131   011F92  D7AB               	goto	l12859
 27132   011F94                     l12905:
 27133                           
 27134                           ;gemsecs.c: 1175:      DATAEE_WriteByte(i, 0xff);
 27135   011F94  0EFF               	movlw	255
 27136   011F96  6EE6               	movwf	postinc1,c
 27137                           
 27138                           ;stkvar	_i @ sp[(-7)+4]
 27139   011F98  0EFD               	movlw	-3
 27140   011F9A  006F FF8F FFE6     	movff	plusw1,postinc1
 27141   011FA0  006F FF8F FFE6     	movff	plusw1,postinc1
 27142   011FA6  EC80  F0B7         	call	_DATAEE_WriteByte	;wreg free
 27143                           
 27144                           ;gemsecs.c: 1176:     } while (++i <= 764);
 27145                           ;stkvar	_i @ sp[(-6)+4]
 27146   011FAA  0EFE               	movlw	-2
 27147   011FAC  50E3               	movf	plusw1,w,c
 27148   011FAE  0F01               	addlw	1
 27149   011FB0  6E22               	movwf	btemp^0,c
 27150   011FB2  0EFE               	movlw	-2
 27151   011FB4  0060  F08B  FFE3   	movff	btemp,plusw1
 27152   011FBA  6A22               	clrf	btemp^0,c
 27153   011FBC  0EFF               	movlw	-1
 27154   011FBE  50E3               	movf	plusw1,w,c
 27155   011FC0  2022               	addwfc	btemp^0,w,c
 27156   011FC2  6E22               	movwf	btemp^0,c
 27157   011FC4  0EFF               	movlw	-1
 27158   011FC6  0060  F08B  FFE3   	movff	btemp,plusw1
 27159   011FCC  0EFE               	movlw	-2
 27160   011FCE  006F FF8C  F022    	movff	plusw1,btemp
 27161   011FD4  0EFD               	movlw	253
 27162   011FD6  5E22               	subwf	btemp^0,f,c
 27163   011FD8  0EFF               	movlw	-1
 27164   011FDA  006F FF8C  F022    	movff	plusw1,btemp
 27165   011FE0  0E02               	movlw	2
 27166   011FE2  5A22               	subwfb	btemp^0,f,c
 27167   011FE4  A0D8               	btfss	status,0,c
 27168   011FE6  D7D6               	goto	l12905
 27169                           
 27170                           ;gemsecs.c: 1177:     V.response.log_num = 0;
 27171   011FE8  0E00               	movlw	0
 27172   011FEA  006F FFA0  FD95    	movff	wreg,_V+379	;volatile
 27173   011FF0  0E00               	movlw	0
 27174   011FF2  006F FFA0  FD96    	movff	wreg,_V+380	;volatile
 27175                           
 27176                           ;gemsecs.c: 1178:     V.response.log_seq = 0;
 27177   011FF8  0E00               	movlw	0
 27178   011FFA  006F FFA0  FD8F    	movff	wreg,_V+373	;volatile
 27179                           
 27180                           ;gemsecs.c: 1179:     set_display_info(DIS_LOG);
 27181   012000  0E02               	movlw	2
 27182   012002  6EE6               	movwf	postinc1,c
 27183   012004  EC54  F0BF         	call	_set_display_info	;wreg free
 27184                           
 27185                           ;gemsecs.c: 1180:     break;
 27186   012008  D034               	goto	l12917
 27187   01200A                     l12911:
 27188                           
 27189                           ;gemsecs.c: 1182:     V.debug = !V.debug;
 27190   01200A  EE23  F168         	lfsr	2,_V+334	;volatile
 27191   01200E  BADF               	btfsc	indf2,5,c
 27192   012010  D003               	goto	u9220
 27193   012012  6A2D               	clrf	(btemp+11)^0,c
 27194   012014  2A2D               	incf	(btemp+11)^0,f,c
 27195   012016  D001               	goto	u9238
 27196   012018                     u9220:
 27197   012018  6A2D               	clrf	(btemp+11)^0,c
 27198   01201A                     u9238:
 27199   01201A  EE23  F168         	lfsr	2,_V+334	;volatile
 27200   01201E  3A2D               	swapf	(btemp+11)^0,f,c
 27201   012020  462D               	rlncf	(btemp+11)^0,f,c
 27202   012022  50DF               	movf	223,w,c
 27203   012024  182D               	xorwf	(btemp+11)^0,w,c
 27204   012026  0BDF               	andlw	-33
 27205   012028  182D               	xorwf	(btemp+11)^0,w,c
 27206   01202A  6EDF               	movwf	223,c
 27207   01202C  D022               	goto	l12917
 27208   01202E                     l12915:
 27209   01202E  ECFF  F0A3         	call	_s10f1_opcmd	;wreg free
 27210   012032  5022               	movf	btemp^0,w,c
 27211   012034  6E2C               	movwf	(btemp+10)^0,c
 27212   012036  6A2D               	clrf	(btemp+11)^0,c
 27213                           
 27214                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27215                           ; Switch size 1, requested type "simple"
 27216                           ; Number of cases is 1, Range of values is 0 to 0
 27217                           ; switch strategies available:
 27218                           ; Name         Instructions Cycles
 27219                           ; simple_byte            4     3 (average)
 27220                           ;	Chosen strategy is simple_byte
 27221   012038  502D               	movf	(btemp+11)^0,w,c
 27222   01203A  0A00               	xorlw	0	; case 0
 27223   01203C  A4D8               	btfss	status,2,c
 27224   01203E  D019               	goto	l12917
 27225                           
 27226                           ; Switch size 1, requested type "simple"
 27227                           ; Number of cases is 8, Range of values is 0 to 11
 27228                           ; switch strategies available:
 27229                           ; Name         Instructions Cycles
 27230                           ; simple_byte           25    13 (average)
 27231                           ;	Chosen strategy is simple_byte
 27232   012040  502C               	movf	(btemp+10)^0,w,c
 27233   012042  0A00               	xorlw	0	; case 0
 27234   012044  B4D8               	btfsc	status,2,c
 27235   012046  D791               	goto	l2191
 27236   012048  0A01               	xorlw	1	; case 1
 27237   01204A  B4D8               	btfsc	status,2,c
 27238   01204C  D744               	goto	l2185
 27239   01204E  0A04               	xorlw	4	; case 5
 27240   012050  B4D8               	btfsc	status,2,c
 27241   012052  D7DB               	goto	l12911
 27242   012054  0A03               	xorlw	3	; case 6
 27243   012056  B4D8               	btfsc	status,2,c
 27244   012058  D79D               	goto	l12905
 27245   01205A  0A01               	xorlw	1	; case 7
 27246   01205C  B4D8               	btfsc	status,2,c
 27247   01205E  D749               	goto	l2187
 27248   012060  0A0F               	xorlw	15	; case 8
 27249   012062  B4D8               	btfsc	status,2,c
 27250   012064  D754               	goto	l2188
 27251   012066  0A01               	xorlw	1	; case 9
 27252   012068  B4D8               	btfsc	status,2,c
 27253   01206A  D75F               	goto	l2189
 27254   01206C  0A02               	xorlw	2	; case 11
 27255   01206E  B4D8               	btfsc	status,2,c
 27256   012070  D76A               	goto	l12885
 27257   012072                     l12917:
 27258                           
 27259                           ;gemsecs.c: 1186:    set_temp_display_help(display_info());
 27260   012072  EC5F  F0C0         	call	_display_info	;wreg free
 27261   012076  5022               	movf	btemp^0,w,c
 27262   012078  6EE6               	movwf	postinc1,c
 27263   01207A  EC28  F0C0         	call	_set_temp_display_help	;wreg free
 27264                           
 27265                           ;gemsecs.c: 1187:    vterm_sequence();
 27266   01207E  ECC3  F093         	call	_vterm_sequence	;wreg free
 27267                           
 27268                           ; BSR set to: 1
 27269                           ;gemsecs.c: 1188:    StartTimer(TMR_INFO, 3000);
 27270   012082  0EB8               	movlw	184
 27271   012084  6EE6               	movwf	postinc1,c
 27272   012086  0E0B               	movlw	11
 27273   012088  6EE6               	movwf	postinc1,c
 27274   01208A  0E07               	movlw	7
 27275   01208C  6EE6               	movwf	postinc1,c
 27276   01208E  EC2A  F0BC         	call	_StartTimer	;wreg free
 27277                           
 27278                           ;gemsecs.c: 1189:    break;
 27279   012092  D500               	goto	l12643
 27280   012094                     l12937:
 27281                           
 27282                           ;stkvar	_function @ sp[(-6)+-7]
 27283   012094  0EF3               	movlw	-13
 27284   012096  50E3               	movf	plusw1,w,c
 27285                           
 27286                           ; Switch size 1, requested type "simple"
 27287                           ; Number of cases is 1, Range of values is 1 to 1
 27288                           ; switch strategies available:
 27289                           ; Name         Instructions Cycles
 27290                           ; simple_byte            4     3 (average)
 27291                           ;	Chosen strategy is simple_byte
 27292   012098  0A01               	xorlw	1	; case 1
 27293   01209A  B4D8               	btfsc	status,2,c
 27294   01209C  D6F7               	goto	l12843
 27295   01209E  D582               	goto	l12689
 27296   0120A0                     l12953:
 27297                           
 27298                           ;stkvar	_stream @ sp[(-6)+-6]
 27299   0120A0  0EF4               	movlw	-12
 27300   0120A2  50E3               	movf	plusw1,w,c
 27301                           
 27302                           ; Switch size 1, requested type "simple"
 27303                           ; Number of cases is 6, Range of values is 1 to 10
 27304                           ; switch strategies available:
 27305                           ; Name         Instructions Cycles
 27306                           ; simple_byte           19    10 (average)
 27307                           ;	Chosen strategy is simple_byte
 27308   0120A4  0A01               	xorlw	1	; case 1
 27309   0120A6  B4D8               	btfsc	status,2,c
 27310   0120A8  D5A0               	goto	l12703
 27311   0120AA  0A03               	xorlw	3	; case 2
 27312   0120AC  B4D8               	btfsc	status,2,c
 27313   0120AE  D5D2               	goto	l12731
 27314   0120B0  0A07               	xorlw	7	; case 5
 27315   0120B2  B4D8               	btfsc	status,2,c
 27316   0120B4  D5EB               	goto	l12753
 27317   0120B6  0A03               	xorlw	3	; case 6
 27318   0120B8  B4D8               	btfsc	status,2,c
 27319   0120BA  D6BA               	goto	l12821
 27320   0120BC  0A0F               	xorlw	15	; case 9
 27321   0120BE  B4D8               	btfsc	status,2,c
 27322   0120C0  D6C9               	goto	l12839
 27323   0120C2  0A03               	xorlw	3	; case 10
 27324   0120C4  B4D8               	btfsc	status,2,c
 27325   0120C6  D6DE               	goto	l12841
 27326   0120C8  D56D               	goto	l12689
 27327   0120CA                     l2129:
 27328                           
 27329                           ; _secs_II_message: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          7, argsize = 7, vargsize = 0
 27330   0120CA  0EFA               	movlw	250
 27331   0120CC  26E1               	addwf	fsr1l,f,c
 27332   0120CE  0EFF               	movlw	255
 27333   0120D0  22E2               	addwfc	fsr1h,f,c
 27334   0120D2  0012               	return		;funcret
 27335   0120D4                     __end_of_secs_II_message:
 27336                           	callstack 0
 27337                           
 27338 ;; *************** function _vterm_sequence *****************
 27339 ;; Defined at:
 27340 ;;		line 132 in file "mconfig.c"
 27341 ;; Parameters:    Size  Location     Type
 27342 ;;		None
 27343 ;; Auto vars:     Size  Location     Type
 27344 ;;		None
 27345 ;; Return value:  Size  Location     Type
 27346 ;;                  1  [STACK] void 
 27347 ;; Registers used:
 27348 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 27349 ;; Tracked objects:
 27350 ;;		On entry : 0/3C
 27351 ;;		On exit  : 3F/1
 27352 ;;		Unchanged: 0/0
 27353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27358 ;;Total ram usage:        0 bytes
 27359 ;; Hardware stack levels used: 1
 27360 ;; Hardware stack levels required when called: 12
 27361 ;; This function calls:
 27362 ;;		_get_vterm_ptr
 27363 ;;		_sprintf
 27364 ;; This function is called by:
 27365 ;;		_secs_II_message
 27366 ;; This function uses a reentrant model
 27367 ;;
 27368                           
 27369                           	psect	text10
 27370   012786                     __ptext10:
 27371                           	callstack 0
 27372   012786                     _vterm_sequence:
 27373                           	callstack 16
 27374                           
 27375                           ;mconfig.c: 134:  sprintf(get_vterm_ptr(2, 2), " Mesg %d Stack %d      ", V.msg_error, V
      +                          .stack);
 27376                           
 27377                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27378                           ;incstack = 0
 27379   012786  EE23  F169         	lfsr	2,_V+335	;volatile
 27380   01278A  50DF               	movf	223,w,c
 27381   01278C  0B07               	andlw	7
 27382   01278E  6EE6               	movwf	postinc1,c
 27383   012790  0E00               	movlw	0
 27384   012792  6EE6               	movwf	postinc1,c
 27385   012794  EE23  F151         	lfsr	2,_V+311	;volatile
 27386   012798  50DF               	movf	indf2,w,c
 27387   01279A  6EE6               	movwf	postinc1,c
 27388   01279C  0E00               	movlw	0
 27389   01279E  6EE6               	movwf	postinc1,c
 27390   0127A0  0E54               	movlw	low STR_46
 27391   0127A2  6EE6               	movwf	postinc1,c
 27392   0127A4  0EFD               	movlw	high STR_46
 27393   0127A6  6EE6               	movwf	postinc1,c
 27394   0127A8  0E02               	movlw	2
 27395   0127AA  6EE6               	movwf	postinc1,c
 27396   0127AC  0E02               	movlw	2
 27397   0127AE  6EE6               	movwf	postinc1,c
 27398   0127B0  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 27399   0127B4  0060  F08B  FFE6   	movff	btemp,postinc1
 27400   0127BA  0060  F08F  FFE6   	movff	btemp+1,postinc1
 27401   0127C0  0E08               	movlw	8
 27402   0127C2  6EE6               	movwf	postinc1,c
 27403   0127C4  EC32  F0B2         	call	_sprintf	;wreg free
 27404                           
 27405                           ;mconfig.c: 135:  switch (V.response.info) {
 27406   0127C8  D213               	goto	l12405
 27407   0127CA                     l12385:
 27408                           
 27409                           ; BSR set to: 1
 27410                           ;mconfig.c: 137:   sprintf(get_vterm_ptr(0, 2), " S%dF%d log    %d    ", V.stream, V.fun
      +                          ction, V.response.log_seq & 0x03);
 27411                           ; multi bank
 27412   0127CA  010D               	movlb	(_V+373) shr (0+8)	;volatile
 27413   0127CC  518F               	movf	(_V+373)& (0+255),w,b	;volatile
 27414   0127CE  0B03               	andlw	3
 27415   0127D0  6EE6               	movwf	postinc1,c
 27416   0127D2  0E00               	movlw	0
 27417   0127D4  6EE6               	movwf	postinc1,c
 27418   0127D6  EE23  F14E         	lfsr	2,_V+308	;volatile
 27419   0127DA  50DF               	movf	indf2,w,c
 27420   0127DC  6EE6               	movwf	postinc1,c
 27421   0127DE  0E00               	movlw	0
 27422   0127E0  6EE6               	movwf	postinc1,c
 27423   0127E2  EE23  F14D         	lfsr	2,_V+307	;volatile
 27424   0127E6  50DF               	movf	indf2,w,c
 27425   0127E8  6EE6               	movwf	postinc1,c
 27426   0127EA  0E00               	movlw	0
 27427   0127EC  6EE6               	movwf	postinc1,c
 27428   0127EE  0ECA               	movlw	low STR_47
 27429   0127F0  6EE6               	movwf	postinc1,c
 27430   0127F2  0EFD               	movlw	high STR_47
 27431   0127F4  6EE6               	movwf	postinc1,c
 27432   0127F6  0E02               	movlw	2
 27433   0127F8  6EE6               	movwf	postinc1,c
 27434   0127FA  0E00               	movlw	0
 27435   0127FC  6EE6               	movwf	postinc1,c
 27436   0127FE  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 27437   012802  0060  F08B  FFE6   	movff	btemp,postinc1
 27438   012808  0060  F08F  FFE6   	movff	btemp+1,postinc1
 27439   01280E  0E0A               	movlw	10
 27440   012810  6EE6               	movwf	postinc1,c
 27441   012812  EC32  F0B2         	call	_sprintf	;wreg free
 27442                           
 27443                           ;mconfig.c: 138:   sprintf(get_vterm_ptr(1, 2), " Stored #%d        ", V.response.log_nu
      +                          m);
 27444   012816  EE23  F195         	lfsr	2,_V+379	;volatile
 27445   01281A  006F FF78  F02C    	movff	postinc2,btemp+10
 27446   012820  006F FF74  F02D    	movff	postdec2,btemp+11
 27447   012826  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 27448   01282C  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 27449   012832  0E87               	movlw	low STR_48
 27450   012834  6EE6               	movwf	postinc1,c
 27451   012836  0EFE               	movlw	high STR_48
 27452   012838  6EE6               	movwf	postinc1,c
 27453   01283A  0E02               	movlw	2
 27454   01283C  6EE6               	movwf	postinc1,c
 27455   01283E  0E01               	movlw	1
 27456   012840  6EE6               	movwf	postinc1,c
 27457   012842  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 27458   012846  0060  F08B  FFE6   	movff	btemp,postinc1
 27459   01284C  0060  F08F  FFE6   	movff	btemp+1,postinc1
 27460   012852  0E06               	movlw	6
 27461   012854  6EE6               	movwf	postinc1,c
 27462   012856  EC32  F0B2         	call	_sprintf	;wreg free
 27463                           
 27464                           ;mconfig.c: 139:   break;
 27465   01285A  0012               	return	
 27466   01285C                     l12387:
 27467                           
 27468                           ; BSR set to: 1
 27469                           ;mconfig.c: 141:   sprintf(get_vterm_ptr(0, 2), " Ready LL        ");
 27470   01285C  0E33               	movlw	low STR_49
 27471   01285E  6EE6               	movwf	postinc1,c
 27472   012860  0EFF               	movlw	high STR_49
 27473   012862  6EE6               	movwf	postinc1,c
 27474   012864  0E02               	movlw	2
 27475   012866  6EE6               	movwf	postinc1,c
 27476   012868  0E00               	movlw	0
 27477   01286A  6EE6               	movwf	postinc1,c
 27478   01286C  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 27479   012870  0060  F08B  FFE6   	movff	btemp,postinc1
 27480   012876  0060  F08F  FFE6   	movff	btemp+1,postinc1
 27481   01287C  0E04               	movlw	4
 27482   01287E  6EE6               	movwf	postinc1,c
 27483   012880  EC32  F0B2         	call	_sprintf	;wreg free
 27484                           
 27485                           ;mconfig.c: 142:   sprintf(get_vterm_ptr(1, 2), " S2F41 #%c         ", V.response.mcode)
      +                          ;
 27486   012884  EE23  F18C         	lfsr	2,_V+370	;volatile
 27487   012888  50DF               	movf	indf2,w,c
 27488   01288A  6EE6               	movwf	postinc1,c
 27489   01288C  0E00               	movlw	0
 27490   01288E  6EE6               	movwf	postinc1,c
 27491   012890  0E73               	movlw	low STR_50
 27492   012892  6EE6               	movwf	postinc1,c
 27493   012894  0EFE               	movlw	high STR_50
 27494   012896  6EE6               	movwf	postinc1,c
 27495   012898  0E02               	movlw	2
 27496   01289A  6EE6               	movwf	postinc1,c
 27497   01289C  0E01               	movlw	1
 27498   01289E  6EE6               	movwf	postinc1,c
 27499   0128A0  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 27500   0128A4  0060  F08B  FFE6   	movff	btemp,postinc1
 27501   0128AA  0060  F08F  FFE6   	movff	btemp+1,postinc1
 27502   0128B0  0E06               	movlw	6
 27503   0128B2  6EE6               	movwf	postinc1,c
 27504   0128B4  EC32  F0B2         	call	_sprintf	;wreg free
 27505                           
 27506                           ;mconfig.c: 143:   break;
 27507   0128B8  0012               	return	
 27508   0128BA                     l12389:
 27509                           
 27510                           ; BSR set to: 1
 27511                           ;mconfig.c: 145:   sprintf(get_vterm_ptr(0, 2), " Pump LL         ");
 27512   0128BA  0E21               	movlw	low STR_51
 27513   0128BC  6EE6               	movwf	postinc1,c
 27514   0128BE  0EFF               	movlw	high STR_51
 27515   0128C0  6EE6               	movwf	postinc1,c
 27516   0128C2  0E02               	movlw	2
 27517   0128C4  6EE6               	movwf	postinc1,c
 27518   0128C6  0E00               	movlw	0
 27519   0128C8  6EE6               	movwf	postinc1,c
 27520   0128CA  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 27521   0128CE  0060  F08B  FFE6   	movff	btemp,postinc1
 27522   0128D4  0060  F08F  FFE6   	movff	btemp+1,postinc1
 27523   0128DA  0E04               	movlw	4
 27524   0128DC  6EE6               	movwf	postinc1,c
 27525   0128DE  EC32  F0B2         	call	_sprintf	;wreg free
 27526                           
 27527                           ;mconfig.c: 146:   sprintf(get_vterm_ptr(1, 2), " S2F41 #%c         ", V.response.mcode)
      +                          ;
 27528   0128E2  EE23  F18C         	lfsr	2,_V+370	;volatile
 27529   0128E6  50DF               	movf	indf2,w,c
 27530   0128E8  6EE6               	movwf	postinc1,c
 27531   0128EA  0E00               	movlw	0
 27532   0128EC  6EE6               	movwf	postinc1,c
 27533   0128EE  0E73               	movlw	low STR_50
 27534   0128F0  6EE6               	movwf	postinc1,c
 27535   0128F2  0EFE               	movlw	high STR_50
 27536   0128F4  6EE6               	movwf	postinc1,c
 27537   0128F6  0E02               	movlw	2
 27538   0128F8  6EE6               	movwf	postinc1,c
 27539   0128FA  0E01               	movlw	1
 27540   0128FC  6EE6               	movwf	postinc1,c
 27541   0128FE  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 27542   012902  0060  F08B  FFE6   	movff	btemp,postinc1
 27543   012908  0060  F08F  FFE6   	movff	btemp+1,postinc1
 27544   01290E  0E06               	movlw	6
 27545   012910  6EE6               	movwf	postinc1,c
 27546   012912  EC32  F0B2         	call	_sprintf	;wreg free
 27547                           
 27548                           ;mconfig.c: 147:   break;
 27549   012916  0012               	return	
 27550   012918                     l12391:
 27551                           
 27552                           ; BSR set to: 1
 27553                           ;mconfig.c: 149:   sprintf(get_vterm_ptr(0, 2), " Open LL         ");
 27554   012918  0E0F               	movlw	low STR_53
 27555   01291A  6EE6               	movwf	postinc1,c
 27556   01291C  0EFF               	movlw	high STR_53
 27557   01291E  6EE6               	movwf	postinc1,c
 27558   012920  0E02               	movlw	2
 27559   012922  6EE6               	movwf	postinc1,c
 27560   012924  0E00               	movlw	0
 27561   012926  6EE6               	movwf	postinc1,c
 27562   012928  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 27563   01292C  0060  F08B  FFE6   	movff	btemp,postinc1
 27564   012932  0060  F08F  FFE6   	movff	btemp+1,postinc1
 27565   012938  0E04               	movlw	4
 27566   01293A  6EE6               	movwf	postinc1,c
 27567   01293C  EC32  F0B2         	call	_sprintf	;wreg free
 27568                           
 27569                           ;mconfig.c: 150:   sprintf(get_vterm_ptr(1, 2), " S2F41 #%c         ", V.response.mcode)
      +                          ;
 27570   012940  EE23  F18C         	lfsr	2,_V+370	;volatile
 27571   012944  50DF               	movf	indf2,w,c
 27572   012946  6EE6               	movwf	postinc1,c
 27573   012948  0E00               	movlw	0
 27574   01294A  6EE6               	movwf	postinc1,c
 27575   01294C  0E73               	movlw	low STR_50
 27576   01294E  6EE6               	movwf	postinc1,c
 27577   012950  0EFE               	movlw	high STR_50
 27578   012952  6EE6               	movwf	postinc1,c
 27579   012954  0E02               	movlw	2
 27580   012956  6EE6               	movwf	postinc1,c
 27581   012958  0E01               	movlw	1
 27582   01295A  6EE6               	movwf	postinc1,c
 27583   01295C  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 27584   012960  0060  F08B  FFE6   	movff	btemp,postinc1
 27585   012966  0060  F08F  FFE6   	movff	btemp+1,postinc1
 27586   01296C  0E06               	movlw	6
 27587   01296E  6EE6               	movwf	postinc1,c
 27588   012970  EC32  F0B2         	call	_sprintf	;wreg free
 27589                           
 27590                           ;mconfig.c: 151:   break;
 27591   012974  0012               	return	
 27592   012976                     l12393:
 27593                           
 27594                           ; BSR set to: 1
 27595                           ;mconfig.c: 153:   sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 27596   012976  0EC9               	movlw	low STR_37
 27597   012978  6EE6               	movwf	postinc1,c
 27598   01297A  0EFF               	movlw	high STR_37
 27599   01297C  6EE6               	movwf	postinc1,c
 27600   01297E  0ED6               	movlw	low STR_39
 27601   012980  6EE6               	movwf	postinc1,c
 27602   012982  0EFE               	movlw	high STR_39
 27603   012984  6EE6               	movwf	postinc1,c
 27604   012986  0E01               	movlw	1
 27605   012988  6EE6               	movwf	postinc1,c
 27606   01298A  0E00               	movlw	0
 27607   01298C  6EE6               	movwf	postinc1,c
 27608   01298E  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 27609   012992  0060  F08B  FFE6   	movff	btemp,postinc1
 27610   012998  0060  F08F  FFE6   	movff	btemp+1,postinc1
 27611   01299E  0E06               	movlw	6
 27612   0129A0  6EE6               	movwf	postinc1,c
 27613   0129A2  EC32  F0B2         	call	_sprintf	;wreg free
 27614                           
 27615                           ;mconfig.c: 154:   sprintf(get_vterm_ptr(1, 1), "DISPLAY %s        ", build_time);
 27616   0129A6  0EDF               	movlw	low STR_38
 27617   0129A8  6EE6               	movwf	postinc1,c
 27618   0129AA  0EFF               	movlw	high STR_38
 27619   0129AC  6EE6               	movwf	postinc1,c
 27620   0129AE  0EE9               	movlw	low STR_56
 27621   0129B0  6EE6               	movwf	postinc1,c
 27622   0129B2  0EFE               	movlw	high STR_56
 27623   0129B4  6EE6               	movwf	postinc1,c
 27624   0129B6  0E01               	movlw	1
 27625   0129B8  6EE6               	movwf	postinc1,c
 27626   0129BA  0E01               	movlw	1
 27627   0129BC  6EE6               	movwf	postinc1,c
 27628   0129BE  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 27629   0129C2  0060  F08B  FFE6   	movff	btemp,postinc1
 27630   0129C8  0060  F08F  FFE6   	movff	btemp+1,postinc1
 27631   0129CE  0E06               	movlw	6
 27632   0129D0  6EE6               	movwf	postinc1,c
 27633   0129D2  EC32  F0B2         	call	_sprintf	;wreg free
 27634                           
 27635                           ;mconfig.c: 155:   break;
 27636   0129D6  0012               	return	
 27637   0129D8                     l12395:
 27638                           
 27639                           ; BSR set to: 1
 27640                           ;mconfig.c: 157:   sprintf(get_vterm_ptr(0, 2), " Load-lock num %d      ", V.llid);
 27641   0129D8  EE23  F198         	lfsr	2,_V+382	;volatile
 27642   0129DC  50DF               	movf	indf2,w,c
 27643   0129DE  6EE6               	movwf	postinc1,c
 27644   0129E0  0E00               	movlw	0
 27645   0129E2  6EE6               	movwf	postinc1,c
 27646   0129E4  0E6C               	movlw	low STR_57
 27647   0129E6  6EE6               	movwf	postinc1,c
 27648   0129E8  0EFD               	movlw	high STR_57
 27649   0129EA  6EE6               	movwf	postinc1,c
 27650   0129EC  0E02               	movlw	2
 27651   0129EE  6EE6               	movwf	postinc1,c
 27652   0129F0  0E00               	movlw	0
 27653   0129F2  6EE6               	movwf	postinc1,c
 27654   0129F4  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 27655   0129F8  0060  F08B  FFE6   	movff	btemp,postinc1
 27656   0129FE  0060  F08F  FFE6   	movff	btemp+1,postinc1
 27657   012A04  0E06               	movlw	6
 27658   012A06  6EE6               	movwf	postinc1,c
 27659   012A08  EC32  F0B2         	call	_sprintf	;wreg free
 27660                           
 27661                           ;mconfig.c: 158:   sprintf(get_vterm_ptr(1, 2), " SEQUENCE %d        ", V.sequences);
 27662   012A0C  EE23  F163         	lfsr	2,_V+329	;volatile
 27663   012A10  006F FF78  F02C    	movff	postinc2,btemp+10
 27664   012A16  006F FF74  F02D    	movff	postdec2,btemp+11
 27665   012A1C  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 27666   012A22  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 27667   012A28  0EE0               	movlw	low STR_58
 27668   012A2A  6EE6               	movwf	postinc1,c
 27669   012A2C  0EFD               	movlw	high STR_58
 27670   012A2E  6EE6               	movwf	postinc1,c
 27671   012A30  0E02               	movlw	2
 27672   012A32  6EE6               	movwf	postinc1,c
 27673   012A34  0E01               	movlw	1
 27674   012A36  6EE6               	movwf	postinc1,c
 27675   012A38  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 27676   012A3C  0060  F08B  FFE6   	movff	btemp,postinc1
 27677   012A42  0060  F08F  FFE6   	movff	btemp+1,postinc1
 27678   012A48  0E06               	movlw	6
 27679   012A4A  6EE6               	movwf	postinc1,c
 27680   012A4C  EC32  F0B2         	call	_sprintf	;wreg free
 27681                           
 27682                           ;mconfig.c: 159:   break;
 27683   012A50  0012               	return	
 27684   012A52                     l12397:
 27685                           
 27686                           ; BSR set to: 1
 27687                           ;mconfig.c: 161:   sprintf(get_vterm_ptr(0, 2), " Display num %d      ", V.response.mesg
      +                          id);
 27688   012A52  EE23  F18A         	lfsr	2,_V+368	;volatile
 27689   012A56  50DF               	movf	indf2,w,c
 27690   012A58  6EE6               	movwf	postinc1,c
 27691   012A5A  0E00               	movlw	0
 27692   012A5C  6EE6               	movwf	postinc1,c
 27693   012A5E  0EB4               	movlw	low STR_59
 27694   012A60  6EE6               	movwf	postinc1,c
 27695   012A62  0EFD               	movlw	high STR_59
 27696   012A64  6EE6               	movwf	postinc1,c
 27697   012A66  0E02               	movlw	2
 27698   012A68  6EE6               	movwf	postinc1,c
 27699   012A6A  0E00               	movlw	0
 27700   012A6C  6EE6               	movwf	postinc1,c
 27701   012A6E  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 27702   012A72  0060  F08B  FFE6   	movff	btemp,postinc1
 27703   012A78  0060  F08F  FFE6   	movff	btemp+1,postinc1
 27704   012A7E  0E06               	movlw	6
 27705   012A80  6EE6               	movwf	postinc1,c
 27706   012A82  EC32  F0B2         	call	_sprintf	;wreg free
 27707                           
 27708                           ;mconfig.c: 162:   sprintf(get_vterm_ptr(1, 2), " SEQUENCE %d        ", V.sequences);
 27709   012A86  EE23  F163         	lfsr	2,_V+329	;volatile
 27710   012A8A  006F FF78  F02C    	movff	postinc2,btemp+10
 27711   012A90  006F FF74  F02D    	movff	postdec2,btemp+11
 27712   012A96  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 27713   012A9C  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 27714   012AA2  0EE0               	movlw	low STR_58
 27715   012AA4  6EE6               	movwf	postinc1,c
 27716   012AA6  0EFD               	movlw	high STR_58
 27717   012AA8  6EE6               	movwf	postinc1,c
 27718   012AAA  0E02               	movlw	2
 27719   012AAC  6EE6               	movwf	postinc1,c
 27720   012AAE  0E01               	movlw	1
 27721   012AB0  6EE6               	movwf	postinc1,c
 27722   012AB2  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 27723   012AB6  0060  F08B  FFE6   	movff	btemp,postinc1
 27724   012ABC  0060  F08F  FFE6   	movff	btemp+1,postinc1
 27725   012AC2  0E06               	movlw	6
 27726   012AC4  6EE6               	movwf	postinc1,c
 27727   012AC6  EC32  F0B2         	call	_sprintf	;wreg free
 27728                           
 27729                           ;mconfig.c: 163:   break;
 27730   012ACA  0012               	return	
 27731   012ACC                     l12399:
 27732                           
 27733                           ; BSR set to: 1
 27734                           ;mconfig.c: 165:   sprintf(get_vterm_ptr(0, 2), " Terminal %d             ", V.response.
      +                          TID);
 27735   012ACC  EE23  F18B         	lfsr	2,_V+369	;volatile
 27736   012AD0  50DF               	movf	indf2,w,c
 27737   012AD2  6EE6               	movwf	postinc1,c
 27738   012AD4  0E00               	movlw	0
 27739   012AD6  6EE6               	movwf	postinc1,c
 27740   012AD8  0ED3               	movlw	low STR_61
 27741   012ADA  6EE6               	movwf	postinc1,c
 27742   012ADC  0EFC               	movlw	high STR_61
 27743   012ADE  6EE6               	movwf	postinc1,c
 27744   012AE0  0E02               	movlw	2
 27745   012AE2  6EE6               	movwf	postinc1,c
 27746   012AE4  0E00               	movlw	0
 27747   012AE6  6EE6               	movwf	postinc1,c
 27748   012AE8  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 27749   012AEC  0060  F08B  FFE6   	movff	btemp,postinc1
 27750   012AF2  0060  F08F  FFE6   	movff	btemp+1,postinc1
 27751   012AF8  0E06               	movlw	6
 27752   012AFA  6EE6               	movwf	postinc1,c
 27753   012AFC  EC32  F0B2         	call	_sprintf	;wreg free
 27754                           
 27755                           ;mconfig.c: 166:   sprintf(get_vterm_ptr(1, 2), " CMD %c %c Len %d       ", V.response.m
      +                          code, V.response.mparm, V.response.cmdlen);
 27756   012B00  EE23  F18E         	lfsr	2,_V+372	;volatile
 27757   012B04  50DF               	movf	indf2,w,c
 27758   012B06  6EE6               	movwf	postinc1,c
 27759   012B08  0E00               	movlw	0
 27760   012B0A  6EE6               	movwf	postinc1,c
 27761   012B0C  EE23  F18D         	lfsr	2,_V+371	;volatile
 27762   012B10  50DF               	movf	indf2,w,c
 27763   012B12  6EE6               	movwf	postinc1,c
 27764   012B14  0E00               	movlw	0
 27765   012B16  6EE6               	movwf	postinc1,c
 27766   012B18  EE23  F18C         	lfsr	2,_V+370	;volatile
 27767   012B1C  50DF               	movf	indf2,w,c
 27768   012B1E  6EE6               	movwf	postinc1,c
 27769   012B20  0E00               	movlw	0
 27770   012B22  6EE6               	movwf	postinc1,c
 27771   012B24  0E3B               	movlw	low STR_62
 27772   012B26  6EE6               	movwf	postinc1,c
 27773   012B28  0EFD               	movlw	high STR_62
 27774   012B2A  6EE6               	movwf	postinc1,c
 27775   012B2C  0E02               	movlw	2
 27776   012B2E  6EE6               	movwf	postinc1,c
 27777   012B30  0E01               	movlw	1
 27778   012B32  6EE6               	movwf	postinc1,c
 27779   012B34  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 27780   012B38  0060  F08B  FFE6   	movff	btemp,postinc1
 27781   012B3E  0060  F08F  FFE6   	movff	btemp+1,postinc1
 27782   012B44  0E0A               	movlw	10
 27783   012B46  6EE6               	movwf	postinc1,c
 27784   012B48  EC32  F0B2         	call	_sprintf	;wreg free
 27785                           
 27786                           ;mconfig.c: 167:   break;
 27787   012B4C  0012               	return	
 27788   012B4E                     l12401:
 27789                           
 27790                           ; BSR set to: 1
 27791                           ;mconfig.c: 170:   sprintf(get_vterm_ptr(0, 0), "                  ");
 27792   012B4E  0EC3               	movlw	low STR_63
 27793   012B50  6EE6               	movwf	postinc1,c
 27794   012B52  0EFE               	movlw	high STR_63
 27795   012B54  6EE6               	movwf	postinc1,c
 27796   012B56  0E00               	movlw	0
 27797   012B58  6EE6               	movwf	postinc1,c
 27798   012B5A  0E00               	movlw	0
 27799   012B5C  6EE6               	movwf	postinc1,c
 27800   012B5E  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 27801   012B62  0060  F08B  FFE6   	movff	btemp,postinc1
 27802   012B68  0060  F08F  FFE6   	movff	btemp+1,postinc1
 27803   012B6E  0E04               	movlw	4
 27804   012B70  6EE6               	movwf	postinc1,c
 27805   012B72  EC32  F0B2         	call	_sprintf	;wreg free
 27806                           
 27807                           ;mconfig.c: 171:   sprintf(get_vterm_ptr(1, 0), "                  ");
 27808   012B76  0EC3               	movlw	low STR_63
 27809   012B78  6EE6               	movwf	postinc1,c
 27810   012B7A  0EFE               	movlw	high STR_63
 27811   012B7C  6EE6               	movwf	postinc1,c
 27812   012B7E  0E00               	movlw	0
 27813   012B80  6EE6               	movwf	postinc1,c
 27814   012B82  0E01               	movlw	1
 27815   012B84  6EE6               	movwf	postinc1,c
 27816   012B86  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 27817   012B8A  0060  F08B  FFE6   	movff	btemp,postinc1
 27818   012B90  0060  F08F  FFE6   	movff	btemp+1,postinc1
 27819   012B96  0E04               	movlw	4
 27820   012B98  6EE6               	movwf	postinc1,c
 27821   012B9A  EC32  F0B2         	call	_sprintf	;wreg free
 27822                           
 27823                           ;mconfig.c: 172:   sprintf(get_vterm_ptr(0, 2), "                  ");
 27824   012B9E  0EC3               	movlw	low STR_63
 27825   012BA0  6EE6               	movwf	postinc1,c
 27826   012BA2  0EFE               	movlw	high STR_63
 27827   012BA4  6EE6               	movwf	postinc1,c
 27828   012BA6  0E02               	movlw	2
 27829   012BA8  6EE6               	movwf	postinc1,c
 27830   012BAA  0E00               	movlw	0
 27831   012BAC  6EE6               	movwf	postinc1,c
 27832   012BAE  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 27833   012BB2  0060  F08B  FFE6   	movff	btemp,postinc1
 27834   012BB8  0060  F08F  FFE6   	movff	btemp+1,postinc1
 27835   012BBE  0E04               	movlw	4
 27836   012BC0  6EE6               	movwf	postinc1,c
 27837   012BC2  EC32  F0B2         	call	_sprintf	;wreg free
 27838                           
 27839                           ;mconfig.c: 173:   sprintf(get_vterm_ptr(1, 2), "                  ");
 27840   012BC6  0EC3               	movlw	low STR_63
 27841   012BC8  6EE6               	movwf	postinc1,c
 27842   012BCA  0EFE               	movlw	high STR_63
 27843   012BCC  6EE6               	movwf	postinc1,c
 27844   012BCE  0E02               	movlw	2
 27845   012BD0  6EE6               	movwf	postinc1,c
 27846   012BD2  0E01               	movlw	1
 27847   012BD4  6EE6               	movwf	postinc1,c
 27848   012BD6  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 27849   012BDA  0060  F08B  FFE6   	movff	btemp,postinc1
 27850   012BE0  0060  F08F  FFE6   	movff	btemp+1,postinc1
 27851   012BE6  0E04               	movlw	4
 27852   012BE8  6EE6               	movwf	postinc1,c
 27853   012BEA  EC32  F0B2         	call	_sprintf	;wreg free
 27854                           
 27855                           ;mconfig.c: 174:   break;
 27856   012BEE  0012               	return	
 27857   012BF0                     l12405:
 27858                           
 27859                           ; BSR set to: 1
 27860   012BF0  EE23  F191         	lfsr	2,_V+375	;volatile
 27861   012BF4  50DF               	movf	indf2,w,c
 27862   012BF6  6E2C               	movwf	(btemp+10)^0,c
 27863   012BF8  6A2D               	clrf	(btemp+11)^0,c
 27864                           
 27865                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27866                           ; Switch size 1, requested type "simple"
 27867                           ; Number of cases is 1, Range of values is 0 to 0
 27868                           ; switch strategies available:
 27869                           ; Name         Instructions Cycles
 27870                           ; simple_byte            4     3 (average)
 27871                           ;	Chosen strategy is simple_byte
 27872   012BFA  502D               	movf	(btemp+11)^0,w,c
 27873   012BFC  0A00               	xorlw	0	; case 0
 27874   012BFE  A4D8               	btfss	status,2,c
 27875   012C00  D7A6               	goto	l12401
 27876                           
 27877                           ; BSR set to: 1
 27878                           ; Switch size 1, requested type "simple"
 27879                           ; Number of cases is 9, Range of values is 1 to 10
 27880                           ; switch strategies available:
 27881                           ; Name         Instructions Cycles
 27882                           ; simple_byte           28    15 (average)
 27883                           ;	Chosen strategy is simple_byte
 27884   012C02  502C               	movf	(btemp+10)^0,w,c
 27885   012C04  0A01               	xorlw	1	; case 1
 27886   012C06  B4D8               	btfsc	status,2,c
 27887   012C08  D761               	goto	l12399
 27888   012C0A  0A03               	xorlw	3	; case 2
 27889   012C0C  B4D8               	btfsc	status,2,c
 27890   012C0E  D5DD               	goto	l12385
 27891   012C10  0A01               	xorlw	1	; case 3
 27892   012C12  B4D8               	btfsc	status,2,c
 27893   012C14  D623               	goto	l12387
 27894   012C16  0A07               	xorlw	7	; case 4
 27895   012C18  B4D8               	btfsc	status,2,c
 27896   012C1A  D67E               	goto	l12391
 27897   012C1C  0A01               	xorlw	1	; case 5
 27898   012C1E  B4D8               	btfsc	status,2,c
 27899   012C20  D64C               	goto	l12389
 27900   012C22  0A03               	xorlw	3	; case 6
 27901   012C24  B4D8               	btfsc	status,2,c
 27902   012C26  D6A7               	goto	l12393
 27903   012C28  0A01               	xorlw	1	; case 7
 27904   012C2A  B4D8               	btfsc	status,2,c
 27905   012C2C  D6D5               	goto	l12395
 27906   012C2E  0A0F               	xorlw	15	; case 8
 27907   012C30  B4D8               	btfsc	status,2,c
 27908   012C32  D70F               	goto	l12397
 27909   012C34  0A02               	xorlw	2	; case 10
 27910   012C36  D78B               	goto	l12401
 27911   012C38                     __end_of_vterm_sequence:
 27912                           	callstack 0
 27913                           
 27914 ;; *************** function _s6f11_opcmd *****************
 27915 ;; Defined at:
 27916 ;;		line 877 in file "gemsecs.c"
 27917 ;; Parameters:    Size  Location     Type
 27918 ;;		None
 27919 ;; Auto vars:     Size  Location     Type
 27920 ;;		None
 27921 ;; Return value:  Size  Location     Type
 27922 ;;                  2  [STACK] unsigned short 
 27923 ;; Registers used:
 27924 ;;		wreg, fsr2l, fsr2h, status,2, btemp, btemp+1, btemp+10, btemp+11
 27925 ;; Tracked objects:
 27926 ;;		On entry : 0/3C
 27927 ;;		On exit  : 0/0
 27928 ;;		Unchanged: 0/0
 27929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27934 ;;Total ram usage:        0 bytes
 27935 ;; Hardware stack levels used: 1
 27936 ;; Hardware stack levels required when called: 3
 27937 ;; This function calls:
 27938 ;;		Nothing
 27939 ;; This function is called by:
 27940 ;;		_secs_II_message
 27941 ;; This function uses a reentrant model
 27942 ;;
 27943                           
 27944                           	psect	text11
 27945   0171C8                     __ptext11:
 27946                           	callstack 0
 27947   0171C8                     _s6f11_opcmd:
 27948                           	callstack 25
 27949                           
 27950                           ;gemsecs.c: 879:  V.response.ceid = V.response.ack[9];
 27951                           
 27952                           ; BSR set to: 1
 27953                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27954                           ;incstack = 0
 27955   0171C8  EE23  F173         	lfsr	2,_V+345	;volatile
 27956   0171CC  50DF               	movf	indf2,w,c
 27957   0171CE  6E2C               	movwf	(btemp+10)^0,c
 27958   0171D0  6A2D               	clrf	(btemp+11)^0,c
 27959   0171D2  0060  F0B0  FD93   	movff	btemp+10,_V+377	;volatile
 27960   0171D8  0060  F0B4  FD94   	movff	btemp+11,_V+378	;volatile
 27961                           
 27962                           ;gemsecs.c: 880:  V.response.ceid = H254[0].data[(sizeof(H254[0].data) - 1) - 9];
 27963   0171DE  EE23  F3C1         	lfsr	2,_H254+236
 27964   0171E2  50DF               	movf	indf2,w,c
 27965   0171E4  6E2C               	movwf	(btemp+10)^0,c
 27966   0171E6  6A2D               	clrf	(btemp+11)^0,c
 27967   0171E8  0060  F0B0  FD93   	movff	btemp+10,_V+377	;volatile
 27968   0171EE  0060  F0B4  FD94   	movff	btemp+11,_V+378	;volatile
 27969                           
 27970                           ;gemsecs.c: 882:  V.testing = (sizeof(H254[0].data) - 1) - 9;
 27971   0171F4  0EEA               	movlw	234
 27972   0171F6  006F FFA0  FD49    	movff	wreg,_V+303	;volatile
 27973   0171FC  0E00               	movlw	0
 27974   0171FE  006F FFA0  FD4A    	movff	wreg,_V+304	;volatile
 27975   017204  0E00               	movlw	0
 27976   017206  006F FFA0  FD4B    	movff	wreg,_V+305	;volatile
 27977   01720C  0E00               	movlw	0
 27978   01720E  006F FFA0  FD4C    	movff	wreg,_V+306	;volatile
 27979                           
 27980                           ;gemsecs.c: 884:  return V.response.ceid;
 27981   017214  EE23  F193         	lfsr	2,_V+377	;volatile
 27982   017218  006F FF78  F022    	movff	postinc2,btemp
 27983   01721E  006F FF74  F023    	movff	postdec2,btemp+1
 27984                           
 27985                           ; _s6f11_opcmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 27986   017224  0012               	return		;funcret
 27987   017226                     __end_of_s6f11_opcmd:
 27988                           	callstack 0
 27989                           
 27990 ;; *************** function _s10f1_opcmd *****************
 27991 ;; Defined at:
 27992 ;;		line 759 in file "gemsecs.c"
 27993 ;; Parameters:    Size  Location     Type
 27994 ;;		None
 27995 ;; Auto vars:     Size  Location     Type
 27996 ;;		None
 27997 ;; Return value:  Size  Location     Type
 27998 ;;                  1  [STACK] enum E16945
 27999 ;; Registers used:
 28000 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 28001 ;; Tracked objects:
 28002 ;;		On entry : 0/3C
 28003 ;;		On exit  : 3E/0
 28004 ;;		Unchanged: 0/0
 28005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28010 ;;Total ram usage:        0 bytes
 28011 ;; Hardware stack levels used: 1
 28012 ;; Hardware stack levels required when called: 12
 28013 ;; This function calls:
 28014 ;;		_parse_ll
 28015 ;;		_sprintf
 28016 ;; This function is called by:
 28017 ;;		_secs_II_message
 28018 ;; This function uses a reentrant model
 28019 ;;
 28020                           
 28021                           	psect	text12
 28022   0147FE                     __ptext12:
 28023                           	callstack 0
 28024   0147FE                     _s10f1_opcmd:
 28025                           	callstack 16
 28026                           
 28027                           ;gemsecs.c: 761:  sprintf(V.info, " Terminal          ");
 28028                           
 28029                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28030                           ;incstack = 0
 28031   0147FE  0E9B               	movlw	low STR_33
 28032   014800  6EE6               	movwf	postinc1,c
 28033   014802  0EFE               	movlw	high STR_33
 28034   014804  6EE6               	movwf	postinc1,c
 28035   014806  0E01               	movlw	low (_V+231)
 28036   014808  6EE6               	movwf	postinc1,c
 28037   01480A  0E0D               	movlw	high (_V+231)
 28038   01480C  6EE6               	movwf	postinc1,c
 28039   01480E  0E04               	movlw	4
 28040   014810  6EE6               	movwf	postinc1,c
 28041   014812  EC32  F0B2         	call	_sprintf	;wreg free
 28042                           
 28043                           ; BSR set to: 1
 28044                           ;gemsecs.c: 762:  V.response.cmdlen = V.response.ack[6];
 28045   014816  0063  F5C0  FD8E   	movff	_V+342,_V+372	;volatile
 28046                           
 28047                           ; BSR set to: 1
 28048                           ;gemsecs.c: 763:  V.response.TID = V.response.ack[4];
 28049   01481C  0063  F5B8  FD8B   	movff	_V+340,_V+369	;volatile
 28050                           
 28051                           ; BSR set to: 1
 28052                           ;gemsecs.c: 764:  V.response.mcode = V.response.ack[7];
 28053   014822  0063  F5C4  FD8C   	movff	_V+343,_V+370	;volatile
 28054                           
 28055                           ; BSR set to: 1
 28056                           ;gemsecs.c: 765:  V.response.mparm = V.response.ack[8];
 28057   014828  0063  F5C8  FD8D   	movff	_V+344,_V+371	;volatile
 28058                           
 28059                           ; BSR set to: 1
 28060                           ;gemsecs.c: 767:  if (V.response.cmdlen == 0)
 28061   01482E  EE23  F18E         	lfsr	2,_V+372	;volatile
 28062   014832  50DF               	movf	indf2,w,c
 28063   014834  A4D8               	btfss	status,2,c
 28064   014836  D003               	goto	l12237
 28065                           
 28066                           ; BSR set to: 1
 28067                           ;gemsecs.c: 768:   return CODE_ERR;
 28068   014838  0E0C               	movlw	12
 28069   01483A  6E22               	movwf	btemp^0,c
 28070   01483C  0012               	return	
 28071   01483E                     l12237:
 28072                           
 28073                           ; BSR set to: 1
 28074                           ;gemsecs.c: 770:  if (V.response.mcode == 'M' || V.response.mcode == 'm')
 28075   01483E  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28076   014844  0A4D               	xorlw	77
 28077   014846  B4D8               	btfsc	status,2,c
 28078   014848  D006               	goto	u8810
 28079                           
 28080                           ; BSR set to: 1
 28081   01484A  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28082   014850  0A6D               	xorlw	109
 28083   014852  A4D8               	btfss	status,2,c
 28084   014854  D003               	goto	l12245
 28085   014856                     u8810:
 28086                           
 28087                           ; BSR set to: 1
 28088                           ;gemsecs.c: 771:   return CODE_TS;
 28089   014856  0E00               	movlw	0
 28090   014858  6E22               	movwf	btemp^0,c
 28091   01485A  0012               	return	
 28092   01485C                     l12245:
 28093                           
 28094                           ; BSR set to: 1
 28095                           ;gemsecs.c: 773:  if (V.response.mcode == 'C' || V.response.mcode == 'c') {
 28096   01485C  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28097   014862  0A43               	xorlw	67
 28098   014864  B4D8               	btfsc	status,2,c
 28099   014866  D006               	goto	u8830
 28100                           
 28101                           ; BSR set to: 1
 28102   014868  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28103   01486E  0A63               	xorlw	99
 28104   014870  A4D8               	btfss	status,2,c
 28105   014872  D01E               	goto	l12263
 28106   014874                     u8830:
 28107                           
 28108                           ; BSR set to: 1
 28109                           ;gemsecs.c: 774:   parse_ll();
 28110   014874  ECB4  F0B7         	call	_parse_ll	;wreg free
 28111                           
 28112                           ;gemsecs.c: 776:   switch (V.e_types) {
 28113   014878  D008               	goto	l12257
 28114   01487A                     l12251:
 28115                           
 28116                           ; BSR set to: 0
 28117                           ;gemsecs.c: 778:    H33[0].data[18] = '1';
 28118   01487A  0E31               	movlw	49
 28119   01487C  6FD6               	movwf	(_H33+20)& (0+255),b
 28120                           
 28121                           ;gemsecs.c: 779:    H33[0].data[17] = '6';
 28122   01487E  0E36               	movlw	54
 28123   014880  D029               	goto	L14
 28124   014882                     l12253:
 28125                           
 28126                           ; BSR set to: 0
 28127                           ;gemsecs.c: 782:    H33[0].data[18] = '1';
 28128   014882  0E31               	movlw	49
 28129   014884  6FD6               	movwf	(_H33+20)& (0+255),b
 28130                           
 28131                           ;gemsecs.c: 783:    H33[0].data[17] = '0';
 28132   014886  0E30               	movlw	48
 28133   014888  D025               	goto	L14
 28134   01488A                     l12257:
 28135                           
 28136                           ; BSR set to: 0
 28137   01488A  EE23  F01D         	lfsr	2,_V+3	;volatile
 28138   01488E  50DF               	movf	indf2,w,c
 28139   014890  6E2C               	movwf	(btemp+10)^0,c
 28140   014892  6A2D               	clrf	(btemp+11)^0,c
 28141                           
 28142                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28143                           ; Switch size 1, requested type "simple"
 28144                           ; Number of cases is 1, Range of values is 0 to 0
 28145                           ; switch strategies available:
 28146                           ; Name         Instructions Cycles
 28147                           ; simple_byte            4     3 (average)
 28148                           ;	Chosen strategy is simple_byte
 28149   014894  502D               	movf	(btemp+11)^0,w,c
 28150   014896  0A00               	xorlw	0	; case 0
 28151   014898  A4D8               	btfss	status,2,c
 28152   01489A  D007               	goto	l12259
 28153                           
 28154                           ; BSR set to: 0
 28155                           ; Switch size 1, requested type "simple"
 28156                           ; Number of cases is 2, Range of values is 1 to 2
 28157                           ; switch strategies available:
 28158                           ; Name         Instructions Cycles
 28159                           ; simple_byte            7     4 (average)
 28160                           ;	Chosen strategy is simple_byte
 28161   01489C  502C               	movf	(btemp+10)^0,w,c
 28162   01489E  0A01               	xorlw	1	; case 1
 28163   0148A0  B4D8               	btfsc	status,2,c
 28164   0148A2  D7EB               	goto	l12251
 28165   0148A4  0A03               	xorlw	3	; case 2
 28166   0148A6  B4D8               	btfsc	status,2,c
 28167   0148A8  D7EC               	goto	l12253
 28168   0148AA                     l12259:
 28169                           
 28170                           ; BSR set to: 0
 28171                           ;gemsecs.c: 789:   return CODE_LOAD;
 28172   0148AA  0E07               	movlw	7
 28173   0148AC  6E22               	movwf	btemp^0,c
 28174   0148AE  0012               	return	
 28175   0148B0                     l12263:
 28176                           
 28177                           ; BSR set to: 1
 28178                           ;gemsecs.c: 792:  if (V.response.mcode == 'R' || V.response.mcode == 'r') {
 28179   0148B0  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28180   0148B6  0A52               	xorlw	82
 28181   0148B8  B4D8               	btfsc	status,2,c
 28182   0148BA  D006               	goto	u8850
 28183                           
 28184                           ; BSR set to: 1
 28185   0148BC  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28186   0148C2  0A72               	xorlw	114
 28187   0148C4  A4D8               	btfss	status,2,c
 28188   0148C6  D016               	goto	l12281
 28189   0148C8                     u8850:
 28190                           
 28191                           ; BSR set to: 1
 28192                           ;gemsecs.c: 793:   parse_ll();
 28193   0148C8  ECB4  F0B7         	call	_parse_ll	;wreg free
 28194                           
 28195                           ;gemsecs.c: 795:   switch (V.e_types) {
 28196   0148CC  D005               	goto	l12275
 28197   0148CE                     l12269:
 28198                           
 28199                           ; BSR set to: 0
 28200                           ;gemsecs.c: 797:    H33[0].data[18] = '1';
 28201   0148CE  0E31               	movlw	49
 28202   0148D0  6FD6               	movwf	(_H33+20)& (0+255),b
 28203                           
 28204                           ;gemsecs.c: 798:    H33[0].data[17] = '7';
 28205   0148D2  0E37               	movlw	55
 28206   0148D4                     L14:
 28207   0148D4  6FD5               	movwf	(_H33+19)& (0+255),b
 28208                           
 28209                           ;gemsecs.c: 799:    break;
 28210   0148D6  D7E9               	goto	l12259
 28211   0148D8                     l12275:
 28212                           
 28213                           ; BSR set to: 0
 28214   0148D8  EE23  F01D         	lfsr	2,_V+3	;volatile
 28215   0148DC  50DF               	movf	indf2,w,c
 28216   0148DE  6E2C               	movwf	(btemp+10)^0,c
 28217   0148E0  6A2D               	clrf	(btemp+11)^0,c
 28218                           
 28219                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28220                           ; Switch size 1, requested type "simple"
 28221                           ; Number of cases is 1, Range of values is 0 to 0
 28222                           ; switch strategies available:
 28223                           ; Name         Instructions Cycles
 28224                           ; simple_byte            4     3 (average)
 28225                           ;	Chosen strategy is simple_byte
 28226   0148E2  502D               	movf	(btemp+11)^0,w,c
 28227   0148E4  0A00               	xorlw	0	; case 0
 28228   0148E6  A4D8               	btfss	status,2,c
 28229   0148E8  D7E0               	goto	l12259
 28230                           
 28231                           ; BSR set to: 0
 28232                           ; Switch size 1, requested type "simple"
 28233                           ; Number of cases is 2, Range of values is 1 to 2
 28234                           ; switch strategies available:
 28235                           ; Name         Instructions Cycles
 28236                           ; simple_byte            7     4 (average)
 28237                           ;	Chosen strategy is simple_byte
 28238   0148EA  502C               	movf	(btemp+10)^0,w,c
 28239   0148EC  0A01               	xorlw	1	; case 1
 28240   0148EE  B4D8               	btfsc	status,2,c
 28241   0148F0  D7EE               	goto	l12269
 28242   0148F2  D7D8               	goto	L15
 28243   0148F4                     l12281:
 28244                           
 28245                           ; BSR set to: 1
 28246                           ;gemsecs.c: 811:  if (V.response.mcode == 'P' || V.response.mcode == 'p') {
 28247   0148F4  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28248   0148FA  0A50               	xorlw	80
 28249   0148FC  B4D8               	btfsc	status,2,c
 28250   0148FE  D006               	goto	u8870
 28251                           
 28252                           ; BSR set to: 1
 28253   014900  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28254   014906  0A70               	xorlw	112
 28255   014908  A4D8               	btfss	status,2,c
 28256   01490A  D01F               	goto	l12299
 28257   01490C                     u8870:
 28258                           
 28259                           ; BSR set to: 1
 28260                           ;gemsecs.c: 812:   parse_ll();
 28261   01490C  ECB4  F0B7         	call	_parse_ll	;wreg free
 28262                           
 28263                           ;gemsecs.c: 814:   switch (V.e_types) {
 28264   014910  D009               	goto	l12293
 28265   014912                     l12287:
 28266                           
 28267                           ; BSR set to: 0
 28268                           ;gemsecs.c: 816:    H33[0].data[18] = '1';
 28269   014912  0E31               	movlw	49
 28270   014914  6FD6               	movwf	(_H33+20)& (0+255),b
 28271                           
 28272                           ;gemsecs.c: 817:    H33[0].data[17] = '8';
 28273   014916  0E38               	movlw	56
 28274   014918  D003               	goto	L16
 28275   01491A                     l12289:
 28276                           
 28277                           ; BSR set to: 0
 28278                           ;gemsecs.c: 820:    H33[0].data[18] = '1';
 28279   01491A  0E31               	movlw	49
 28280   01491C  6FD6               	movwf	(_H33+20)& (0+255),b
 28281                           
 28282                           ;gemsecs.c: 821:    H33[0].data[17] = '0';
 28283   01491E  0E30               	movlw	48
 28284   014920                     L16:
 28285   014920  6FD5               	movwf	(_H33+19)& (0+255),b
 28286                           
 28287                           ;gemsecs.c: 822:    break;
 28288   014922  D010               	goto	l12295
 28289   014924                     l12293:
 28290                           
 28291                           ; BSR set to: 0
 28292   014924  EE23  F01D         	lfsr	2,_V+3	;volatile
 28293   014928  50DF               	movf	indf2,w,c
 28294   01492A  6E2C               	movwf	(btemp+10)^0,c
 28295   01492C  6A2D               	clrf	(btemp+11)^0,c
 28296                           
 28297                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28298                           ; Switch size 1, requested type "simple"
 28299                           ; Number of cases is 1, Range of values is 0 to 0
 28300                           ; switch strategies available:
 28301                           ; Name         Instructions Cycles
 28302                           ; simple_byte            4     3 (average)
 28303                           ;	Chosen strategy is simple_byte
 28304   01492E  502D               	movf	(btemp+11)^0,w,c
 28305   014930  0A00               	xorlw	0	; case 0
 28306   014932  A4D8               	btfss	status,2,c
 28307   014934  D007               	goto	l12295
 28308                           
 28309                           ; BSR set to: 0
 28310                           ; Switch size 1, requested type "simple"
 28311                           ; Number of cases is 2, Range of values is 1 to 2
 28312                           ; switch strategies available:
 28313                           ; Name         Instructions Cycles
 28314                           ; simple_byte            7     4 (average)
 28315                           ;	Chosen strategy is simple_byte
 28316   014936  502C               	movf	(btemp+10)^0,w,c
 28317   014938  0A01               	xorlw	1	; case 1
 28318   01493A  B4D8               	btfsc	status,2,c
 28319   01493C  D7EA               	goto	l12287
 28320   01493E  0A03               	xorlw	3	; case 2
 28321   014940  B4D8               	btfsc	status,2,c
 28322   014942  D7EB               	goto	l12289
 28323   014944                     l12295:
 28324                           
 28325                           ; BSR set to: 0
 28326                           ;gemsecs.c: 827:   return CODE_PUMP;
 28327   014944  0E09               	movlw	9
 28328   014946  6E22               	movwf	btemp^0,c
 28329   014948  0012               	return	
 28330   01494A                     l12299:
 28331                           
 28332                           ; BSR set to: 1
 28333                           ;gemsecs.c: 830:  if (V.response.mcode == 'O' || V.response.mcode == 'o') {
 28334   01494A  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28335   014950  0A4F               	xorlw	79
 28336   014952  B4D8               	btfsc	status,2,c
 28337   014954  D006               	goto	u8890
 28338                           
 28339                           ; BSR set to: 1
 28340   014956  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28341   01495C  0A6F               	xorlw	111
 28342   01495E  A4D8               	btfss	status,2,c
 28343   014960  D01F               	goto	l12317
 28344   014962                     u8890:
 28345                           
 28346                           ; BSR set to: 1
 28347                           ;gemsecs.c: 831:   parse_ll();
 28348   014962  ECB4  F0B7         	call	_parse_ll	;wreg free
 28349                           
 28350                           ;gemsecs.c: 833:   switch (V.e_types) {
 28351   014966  D009               	goto	l12311
 28352   014968                     l12305:
 28353                           
 28354                           ; BSR set to: 0
 28355                           ;gemsecs.c: 835:    H33[0].data[18] = '1';
 28356   014968  0E31               	movlw	49
 28357   01496A  6FD6               	movwf	(_H33+20)& (0+255),b
 28358                           
 28359                           ;gemsecs.c: 836:    H33[0].data[17] = '2';
 28360   01496C  0E32               	movlw	50
 28361   01496E  D003               	goto	L17
 28362   014970                     l12307:
 28363                           
 28364                           ; BSR set to: 0
 28365                           ;gemsecs.c: 839:    H33[0].data[18] = '1';
 28366   014970  0E31               	movlw	49
 28367   014972  6FD6               	movwf	(_H33+20)& (0+255),b
 28368                           
 28369                           ;gemsecs.c: 840:    H33[0].data[17] = '0';
 28370   014974  0E30               	movlw	48
 28371   014976                     L17:
 28372   014976  6FD5               	movwf	(_H33+19)& (0+255),b
 28373                           
 28374                           ;gemsecs.c: 841:    break;
 28375   014978  D010               	goto	l12313
 28376   01497A                     l12311:
 28377                           
 28378                           ; BSR set to: 0
 28379   01497A  EE23  F01D         	lfsr	2,_V+3	;volatile
 28380   01497E  50DF               	movf	indf2,w,c
 28381   014980  6E2C               	movwf	(btemp+10)^0,c
 28382   014982  6A2D               	clrf	(btemp+11)^0,c
 28383                           
 28384                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28385                           ; Switch size 1, requested type "simple"
 28386                           ; Number of cases is 1, Range of values is 0 to 0
 28387                           ; switch strategies available:
 28388                           ; Name         Instructions Cycles
 28389                           ; simple_byte            4     3 (average)
 28390                           ;	Chosen strategy is simple_byte
 28391   014984  502D               	movf	(btemp+11)^0,w,c
 28392   014986  0A00               	xorlw	0	; case 0
 28393   014988  A4D8               	btfss	status,2,c
 28394   01498A  D007               	goto	l12313
 28395                           
 28396                           ; BSR set to: 0
 28397                           ; Switch size 1, requested type "simple"
 28398                           ; Number of cases is 2, Range of values is 1 to 2
 28399                           ; switch strategies available:
 28400                           ; Name         Instructions Cycles
 28401                           ; simple_byte            7     4 (average)
 28402                           ;	Chosen strategy is simple_byte
 28403   01498C  502C               	movf	(btemp+10)^0,w,c
 28404   01498E  0A01               	xorlw	1	; case 1
 28405   014990  B4D8               	btfsc	status,2,c
 28406   014992  D7EA               	goto	l12305
 28407   014994  0A03               	xorlw	3	; case 2
 28408   014996  B4D8               	btfsc	status,2,c
 28409   014998  D7EB               	goto	l12307
 28410   01499A                     l12313:
 28411                           
 28412                           ; BSR set to: 0
 28413                           ;gemsecs.c: 846:   return CODE_UNLOAD;
 28414   01499A  0E08               	movlw	8
 28415   01499C  6E22               	movwf	btemp^0,c
 28416   01499E  0012               	return	
 28417   0149A0                     l12317:
 28418                           
 28419                           ; BSR set to: 1
 28420                           ;gemsecs.c: 849:  if (V.response.mcode == 'L' || V.response.mcode == 'l') {
 28421   0149A0  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28422   0149A6  0A4C               	xorlw	76
 28423   0149A8  B4D8               	btfsc	status,2,c
 28424   0149AA  D006               	goto	u8910
 28425                           
 28426                           ; BSR set to: 1
 28427   0149AC  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28428   0149B2  0A6C               	xorlw	108
 28429   0149B4  A4D8               	btfss	status,2,c
 28430   0149B6  D00F               	goto	l12327
 28431   0149B8                     u8910:
 28432                           
 28433                           ; BSR set to: 1
 28434                           ;gemsecs.c: 850:   sprintf(V.info, " Log file reset          ");
 28435   0149B8  0E07               	movlw	low STR_34
 28436   0149BA  6EE6               	movwf	postinc1,c
 28437   0149BC  0EFD               	movlw	high STR_34
 28438   0149BE  6EE6               	movwf	postinc1,c
 28439   0149C0  0E01               	movlw	low (_V+231)
 28440   0149C2  6EE6               	movwf	postinc1,c
 28441   0149C4  0E0D               	movlw	high (_V+231)
 28442   0149C6  6EE6               	movwf	postinc1,c
 28443   0149C8  0E04               	movlw	4
 28444   0149CA  6EE6               	movwf	postinc1,c
 28445   0149CC  EC32  F0B2         	call	_sprintf	;wreg free
 28446                           
 28447                           ; BSR set to: 1
 28448                           ;gemsecs.c: 851:   return CODE_LOG;
 28449   0149D0  0E06               	movlw	6
 28450   0149D2  6E22               	movwf	btemp^0,c
 28451   0149D4  0012               	return	
 28452   0149D6                     l12327:
 28453                           
 28454                           ; BSR set to: 1
 28455                           ;gemsecs.c: 854:  if (V.response.mcode == 'S' || V.response.mcode == 's') {
 28456   0149D6  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28457   0149DC  0A53               	xorlw	83
 28458   0149DE  B4D8               	btfsc	status,2,c
 28459   0149E0  D006               	goto	u8930
 28460                           
 28461                           ; BSR set to: 1
 28462   0149E2  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28463   0149E8  0A73               	xorlw	115
 28464   0149EA  A4D8               	btfss	status,2,c
 28465   0149EC  D010               	goto	l12339
 28466   0149EE                     u8930:
 28467                           
 28468                           ; BSR set to: 1
 28469   0149EE  EE23  F01D         	lfsr	2,_V+3	;volatile
 28470   0149F2  50DF               	movf	indf2,w,c
 28471   0149F4  6E2C               	movwf	(btemp+10)^0,c
 28472   0149F6  6A2D               	clrf	(btemp+11)^0,c
 28473                           
 28474                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28475                           ; Switch size 1, requested type "simple"
 28476                           ; Number of cases is 1, Range of values is 0 to 0
 28477                           ; switch strategies available:
 28478                           ; Name         Instructions Cycles
 28479                           ; simple_byte            4     3 (average)
 28480                           ;	Chosen strategy is simple_byte
 28481   0149F8  502D               	movf	(btemp+11)^0,w,c
 28482   0149FA  0A00               	xorlw	0	; case 0
 28483   0149FC  A4D8               	btfss	status,2,c
 28484   0149FE  D004               	goto	l12335
 28485                           
 28486                           ; BSR set to: 1
 28487                           ; Switch size 1, requested type "simple"
 28488                           ; Number of cases is 2, Range of values is 1 to 2
 28489                           ; switch strategies available:
 28490                           ; Name         Instructions Cycles
 28491                           ; simple_byte            7     4 (average)
 28492                           ;	Chosen strategy is simple_byte
 28493   014A00  502C               	movf	(btemp+10)^0,w,c
 28494   014A02  0A01               	xorlw	1	; case 1
 28495   014A04  A4D8               	btfss	status,2,c
 28496   014A06  0A03               	xorlw	3	; case 2
 28497   014A08                     l12335:
 28498                           
 28499                           ; BSR set to: 1
 28500                           ;gemsecs.c: 863:   return CODE_SEQUENCE;
 28501   014A08  0E0B               	movlw	11
 28502   014A0A  6E22               	movwf	btemp^0,c
 28503   014A0C  0012               	return	
 28504   014A0E                     l12339:
 28505                           
 28506                           ; BSR set to: 1
 28507                           ;gemsecs.c: 866:  if (V.response.mcode == 'D' || V.response.mcode == 'd') {
 28508   014A0E  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28509   014A14  0A44               	xorlw	68
 28510   014A16  B4D8               	btfsc	status,2,c
 28511   014A18  D006               	goto	u8950
 28512                           
 28513                           ; BSR set to: 1
 28514   014A1A  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28515   014A20  0A64               	xorlw	100
 28516   014A22  A4D8               	btfss	status,2,c
 28517   014A24  D718               	goto	u8810
 28518   014A26                     u8950:
 28519                           
 28520                           ; BSR set to: 1
 28521                           ;gemsecs.c: 867:   sprintf(V.info, " Debug Toggle            ");
 28522   014A26  0EED               	movlw	low STR_35
 28523   014A28  6EE6               	movwf	postinc1,c
 28524   014A2A  0EFC               	movlw	high STR_35
 28525   014A2C  6EE6               	movwf	postinc1,c
 28526   014A2E  0E01               	movlw	low (_V+231)
 28527   014A30  6EE6               	movwf	postinc1,c
 28528   014A32  0E0D               	movlw	high (_V+231)
 28529   014A34  6EE6               	movwf	postinc1,c
 28530   014A36  0E04               	movlw	4
 28531   014A38  6EE6               	movwf	postinc1,c
 28532   014A3A  EC32  F0B2         	call	_sprintf	;wreg free
 28533                           
 28534                           ; BSR set to: 1
 28535                           ;gemsecs.c: 868:   return CODE_DEBUG;
 28536   014A3E  0E05               	movlw	5
 28537   014A40  6E22               	movwf	btemp^0,c
 28538                           
 28539                           ; _s10f1_opcmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 28540   014A42  0012               	return		;funcret
 28541   014A44                     __end_of_s10f1_opcmd:
 28542                           	callstack 0
 28543                           
 28544 ;; *************** function _parse_ll *****************
 28545 ;; Defined at:
 28546 ;;		line 704 in file "gemsecs.c"
 28547 ;; Parameters:    Size  Location     Type
 28548 ;;		None
 28549 ;; Auto vars:     Size  Location     Type
 28550 ;;		None
 28551 ;; Return value:  Size  Location     Type
 28552 ;;                  1  [STACK] void 
 28553 ;; Registers used:
 28554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, btemp
 28555 ;; Tracked objects:
 28556 ;;		On entry : 3F/1
 28557 ;;		On exit  : 3F/0
 28558 ;;		Unchanged: 0/0
 28559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28564 ;;Total ram usage:        0 bytes
 28565 ;; Hardware stack levels used: 1
 28566 ;; Hardware stack levels required when called: 3
 28567 ;; This function calls:
 28568 ;;		Nothing
 28569 ;; This function is called by:
 28570 ;;		_s10f1_opcmd
 28571 ;; This function uses a reentrant model
 28572 ;;
 28573                           
 28574                           	psect	text13
 28575   016F68                     __ptext13:
 28576                           	callstack 0
 28577   016F68                     _parse_ll:
 28578                           	callstack 24
 28579                           
 28580                           ;gemsecs.c: 706:  if (V.response.cmdlen > 1) {
 28581                           
 28582                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28583                           ;incstack = 0
 28584   016F68  EE23  F18E         	lfsr	2,_V+372	;volatile
 28585   016F6C  0E01               	movlw	1
 28586   016F6E  64DF               	cpfsgt	indf2,c
 28587   016F70  D005               	goto	l8339
 28588   016F72  D008               	goto	l8343
 28589   016F74                     l2027:
 28590                           
 28591                           ;gemsecs.c: 717:    H33[0].data[0] = V.response.mparm & 0x03;
 28592                           ; multi bank
 28593   016F74  010D               	movlb	(_V+371) shr (0+8)	;volatile
 28594   016F76  518D               	movf	(_V+371)& (0+255),w,b	;volatile
 28595   016F78  0B03               	andlw	3
 28596   016F7A  D001               	goto	L18
 28597   016F7C                     l8339:
 28598                           
 28599                           ;gemsecs.c: 720:    H33[0].data[0] = 0x01;
 28600   016F7C  0E01               	movlw	1
 28601   016F7E                     L18:
 28602   016F7E  0100               	movlb	0	; () banked
 28603   016F80  6FC4               	movwf	(_H33+2)& (0+255),b
 28604                           
 28605                           ;gemsecs.c: 721:    break;
 28606   016F82  D01F               	goto	l8347
 28607   016F84                     l8343:
 28608   016F84  EE23  F18D         	lfsr	2,_V+371	;volatile
 28609   016F88  50DF               	movf	indf2,w,c
 28610                           
 28611                           ; Switch size 1, requested type "simple"
 28612                           ; Number of cases is 9, Range of values is 49 to 99
 28613                           ; switch strategies available:
 28614                           ; Name         Instructions Cycles
 28615                           ; simple_byte           28    15 (average)
 28616                           ;	Chosen strategy is simple_byte
 28617   016F8A  0A31               	xorlw	49	; case 49
 28618   016F8C  B4D8               	btfsc	status,2,c
 28619   016F8E  D7F2               	goto	l2027
 28620   016F90  0A03               	xorlw	3	; case 50
 28621   016F92  B4D8               	btfsc	status,2,c
 28622   016F94  D7EF               	goto	l2027
 28623   016F96  0A01               	xorlw	1	; case 51
 28624   016F98  B4D8               	btfsc	status,2,c
 28625   016F9A  D7EC               	goto	l2027
 28626   016F9C  0A72               	xorlw	114	; case 65
 28627   016F9E  B4D8               	btfsc	status,2,c
 28628   016FA0  D7E9               	goto	l2027
 28629   016FA2  0A03               	xorlw	3	; case 66
 28630   016FA4  B4D8               	btfsc	status,2,c
 28631   016FA6  D7E6               	goto	l2027
 28632   016FA8  0A01               	xorlw	1	; case 67
 28633   016FAA  B4D8               	btfsc	status,2,c
 28634   016FAC  D7E3               	goto	l2027
 28635   016FAE  0A22               	xorlw	34	; case 97
 28636   016FB0  B4D8               	btfsc	status,2,c
 28637   016FB2  D7E0               	goto	l2027
 28638   016FB4  0A03               	xorlw	3	; case 98
 28639   016FB6  B4D8               	btfsc	status,2,c
 28640   016FB8  D7DD               	goto	l2027
 28641   016FBA  0A01               	xorlw	1	; case 99
 28642   016FBC  B4D8               	btfsc	status,2,c
 28643   016FBE  D7DA               	goto	l2027
 28644   016FC0  D7DD               	goto	l8339
 28645   016FC2                     l8347:
 28646                           
 28647                           ; BSR set to: 0
 28648                           ;gemsecs.c: 726:  V.llid = H33[0].data[0];
 28649   016FC2  EE23  F198         	lfsr	2,_V+382	;volatile
 28650   016FC6  0060  F313  FFDF   	movff	_H33+2,indf2
 28651                           
 28652                           ; BSR set to: 0
 28653                           ; _parse_ll: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
 28654   016FCC  0012               	return		;funcret
 28655   016FCE                     __end_of_parse_ll:
 28656                           	callstack 0
 28657                           
 28658 ;; *************** function _parse_sid *****************
 28659 ;; Defined at:
 28660 ;;		line 732 in file "gemsecs.c"
 28661 ;; Parameters:    Size  Location     Type
 28662 ;;		None
 28663 ;; Auto vars:     Size  Location     Type
 28664 ;;		None
 28665 ;; Return value:  Size  Location     Type
 28666 ;;                  1  [STACK] void 
 28667 ;; Registers used:
 28668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
 28669 ;; Tracked objects:
 28670 ;;		On entry : 0/0
 28671 ;;		On exit  : 0/0
 28672 ;;		Unchanged: 0/0
 28673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28678 ;;Total ram usage:        0 bytes
 28679 ;; Hardware stack levels used: 1
 28680 ;; Hardware stack levels required when called: 3
 28681 ;; This function calls:
 28682 ;;		Nothing
 28683 ;; This function is called by:
 28684 ;;		_secs_II_message
 28685 ;; This function uses a reentrant model
 28686 ;;
 28687                           
 28688                           	psect	text14
 28689   016FCE                     __ptext14:
 28690                           	callstack 0
 28691   016FCE                     _parse_sid:
 28692                           	callstack 25
 28693                           
 28694                           ;gemsecs.c: 734:  if (V.response.cmdlen > 1) {
 28695                           
 28696                           ; BSR set to: 0
 28697                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28698                           ;incstack = 0
 28699   016FCE  EE23  F18E         	lfsr	2,_V+372	;volatile
 28700   016FD2  0E01               	movlw	1
 28701   016FD4  64DF               	cpfsgt	indf2,c
 28702   016FD6  D00A               	goto	l2051
 28703   016FD8  D00E               	goto	l8611
 28704   016FDA                     l2044:
 28705                           
 28706                           ;gemsecs.c: 745:    V.sid = V.response.mparm & 0x03;
 28707   016FDA  0063  F634  F02D   	movff	_V+371,btemp+11	;volatile
 28708   016FE0  0E03               	movlw	3
 28709   016FE2  162D               	andwf	(btemp+11)^0,f,c
 28710   016FE4  0060  F0B4  FD99   	movff	btemp+11,_V+383	;volatile
 28711                           
 28712                           ;gemsecs.c: 746:    break;
 28713   016FEA  0012               	return	
 28714   016FEC                     l2051:
 28715                           
 28716                           ;gemsecs.c: 748:    V.sid = 0x01;
 28717   016FEC  0E01               	movlw	1
 28718   016FEE  006F FFA0  FD99    	movff	wreg,_V+383	;volatile
 28719                           
 28720                           ;gemsecs.c: 749:    break;
 28721   016FF4  0012               	return	
 28722   016FF6                     l8611:
 28723   016FF6  EE23  F18D         	lfsr	2,_V+371	;volatile
 28724   016FFA  50DF               	movf	indf2,w,c
 28725                           
 28726                           ; Switch size 1, requested type "simple"
 28727                           ; Number of cases is 9, Range of values is 49 to 99
 28728                           ; switch strategies available:
 28729                           ; Name         Instructions Cycles
 28730                           ; simple_byte           28    15 (average)
 28731                           ;	Chosen strategy is simple_byte
 28732   016FFC  0A31               	xorlw	49	; case 49
 28733   016FFE  B4D8               	btfsc	status,2,c
 28734   017000  D7EC               	goto	l2044
 28735   017002  0A03               	xorlw	3	; case 50
 28736   017004  B4D8               	btfsc	status,2,c
 28737   017006  D7E9               	goto	l2044
 28738   017008  0A01               	xorlw	1	; case 51
 28739   01700A  B4D8               	btfsc	status,2,c
 28740   01700C  D7E6               	goto	l2044
 28741   01700E  0A72               	xorlw	114	; case 65
 28742   017010  B4D8               	btfsc	status,2,c
 28743   017012  D7E3               	goto	l2044
 28744   017014  0A03               	xorlw	3	; case 66
 28745   017016  B4D8               	btfsc	status,2,c
 28746   017018  D7E0               	goto	l2044
 28747   01701A  0A01               	xorlw	1	; case 67
 28748   01701C  B4D8               	btfsc	status,2,c
 28749   01701E  D7DD               	goto	l2044
 28750   017020  0A22               	xorlw	34	; case 97
 28751   017022  B4D8               	btfsc	status,2,c
 28752   017024  D7DA               	goto	l2044
 28753   017026  0A03               	xorlw	3	; case 98
 28754   017028  B4D8               	btfsc	status,2,c
 28755   01702A  D7D7               	goto	l2044
 28756   01702C  0A01               	xorlw	1	; case 99
 28757   01702E  B4D8               	btfsc	status,2,c
 28758   017030  D7D4               	goto	l2044
 28759   017032  D7DC               	goto	l2051
 28760   017034                     __end_of_parse_sid:
 28761                           	callstack 0
 28762                           
 28763 ;; *************** function _gem_messages *****************
 28764 ;; Defined at:
 28765 ;;		line 890 in file "gemsecs.c"
 28766 ;; Parameters:    Size  Location     Type
 28767 ;;  block           1  [STACK] PTR struct response_type
 28768 ;;		 -> secs_II_message@block(7), 
 28769 ;;  sid             1  [STACK] const unsigned char 
 28770 ;; Auto vars:     Size  Location     Type
 28771 ;;		None
 28772 ;; Return value:  Size  Location     Type
 28773 ;;                  1  [STACK] _Bool 
 28774 ;; Registers used:
 28775 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, pro
      +dh
 28776 ;; Tracked objects:
 28777 ;;		On entry : 0/3C
 28778 ;;		On exit  : 0/0
 28779 ;;		Unchanged: 0/0
 28780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28785 ;;Total ram usage:        0 bytes
 28786 ;; Hardware stack levels used: 1
 28787 ;; Hardware stack levels required when called: 4
 28788 ;; This function calls:
 28789 ;;		_StartTimer
 28790 ;; This function is called by:
 28791 ;;		_secs_II_message
 28792 ;; This function uses a reentrant model
 28793 ;;
 28794                           
 28795                           	psect	text15
 28796   0153AE                     __ptext15:
 28797                           	callstack 0
 28798   0153AE                     _gem_messages:
 28799                           	callstack 24
 28800                           
 28801                           ;gemsecs.c: 890: _Bool gem_messages(response_type *block, const uint8_t sid);gemsecs.c: 
      +                          891: {;gemsecs.c: 892:  if (!V.stack)
 28802                           
 28803                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28804                           ;incstack = 0
 28805   0153AE  EE23  F169         	lfsr	2,_V+335	;volatile
 28806   0153B2  50DF               	movf	223,w,c
 28807   0153B4  0B07               	andlw	7
 28808   0153B6  0900               	iorlw	0
 28809   0153B8  B4D8               	btfsc	status,2,c
 28810   0153BA  D0B9               	goto	l2113
 28811   0153BC  D0A4               	goto	l8811
 28812   0153BE                     l8787:
 28813                           
 28814                           ;gemsecs.c: 897:   StartTimer(TMR_HBIO, S[V.stack - 1].delay);
 28815   0153BE  EE23  F169         	lfsr	2,_V+335	;volatile
 28816   0153C2  50DF               	movf	223,w,c
 28817   0153C4  0B07               	andlw	7
 28818   0153C6  0D2E               	mullw	46
 28819   0153C8  0EFF               	movlw	low (_S+65533)
 28820   0153CA  24F3               	addwf	243,w,c
 28821   0153CC  6ED9               	movwf	fsr2l,c
 28822   0153CE  0E08               	movlw	high (_S+65533)
 28823   0153D0  20F4               	addwfc	prodh,w,c
 28824   0153D2  6EDA               	movwf	fsr2h,c
 28825   0153D4  006F FF78  F02C    	movff	postinc2,btemp+10
 28826   0153DA  006F FF74  F02D    	movff	postdec2,btemp+11
 28827   0153E0  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 28828   0153E6  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 28829   0153EC  0E06               	movlw	6
 28830   0153EE  6EE6               	movwf	postinc1,c
 28831   0153F0  EC2A  F0BC         	call	_StartTimer	;wreg free
 28832                           
 28833                           ;gemsecs.c: 898:   *block = S[V.stack - 1].block;
 28834   0153F4  EE23  F169         	lfsr	2,_V+335	;volatile
 28835   0153F8  50DF               	movf	223,w,c
 28836   0153FA  0B07               	andlw	7
 28837   0153FC  0D2E               	mullw	46
 28838   0153FE  0EF8               	movlw	low (_S+65526)
 28839   015400  24F3               	addwf	243,w,c
 28840   015402  6ED9               	movwf	fsr2l,c
 28841   015404  0E08               	movlw	high (_S+65526)
 28842   015406  20F4               	addwfc	prodh,w,c
 28843   015408  6EDA               	movwf	fsr2h,c
 28844                           
 28845                           ;stkvar	_block @ sp[(0)+-1]
 28846   01540A  0EFF               	movlw	-1
 28847   01540C  50E3               	movf	plusw1,w,c
 28848   01540E  6EE9               	movwf	fsr0l,c
 28849   015410  6AEA               	clrf	fsr0h,c
 28850   015412  0E06               	movlw	6
 28851   015414                     u5721:
 28852   015414  006F FF6F FFEB     	movff	plusw2,plusw0
 28853   01541A  06E8               	decf	wreg,f,c
 28854   01541C  E2FB               	bc	u5721
 28855                           
 28856                           ;gemsecs.c: 899:   S[V.stack - 1].message.block.block.systemb = V.ticks;
 28857   01541E  EE23  F141         	lfsr	2,_V+295	;volatile
 28858   015422  EE03  F169         	lfsr	0,_V+335	;volatile
 28859   015426  50EF               	movf	239,w,c
 28860   015428  0B07               	andlw	7
 28861   01542A  0D2E               	mullw	46
 28862   01542C  0EED               	movlw	low (_S+65515)
 28863   01542E  24F3               	addwf	243,w,c
 28864   015430  6EE9               	movwf	fsr0l,c
 28865   015432  0E08               	movlw	high (_S+65515)
 28866   015434  20F4               	addwfc	prodh,w,c
 28867   015436  6EEA               	movwf	fsr0h,c
 28868   015438  006F FF7B FFEE     	movff	postinc2,postinc0
 28869   01543E  006F FF7B FFEE     	movff	postinc2,postinc0
 28870   015444  006F FF7B FFEE     	movff	postinc2,postinc0
 28871   01544A  006F FF7B FFEE     	movff	postinc2,postinc0
 28872                           
 28873                           ;gemsecs.c: 900:   V.llid = S[V.stack - 1].message.data[0];
 28874   015450  EE23  F169         	lfsr	2,_V+335	;volatile
 28875   015454  50DF               	movf	223,w,c
 28876   015456  0B07               	andlw	7
 28877   015458  0D2E               	mullw	46
 28878   01545A  0ED6               	movlw	low (_S+65492)
 28879   01545C  24F3               	addwf	243,w,c
 28880   01545E  6ED9               	movwf	fsr2l,c
 28881   015460  0E08               	movlw	high (_S+65492)
 28882   015462  20F4               	addwfc	prodh,w,c
 28883   015464  6EDA               	movwf	fsr2h,c
 28884   015466  50DF               	movf	indf2,w,c
 28885   015468  6E2D               	movwf	(btemp+11)^0,c
 28886   01546A  0060  F0B4  FD98   	movff	btemp+11,_V+382	;volatile
 28887                           
 28888                           ;gemsecs.c: 901:   break;
 28889   015470  D053               	goto	l8813
 28890   015472                     l8795:
 28891                           
 28892                           ;gemsecs.c: 903:   StartTimer(TMR_HBIO, D[V.stack - 1].delay);
 28893   015472  EE23  F169         	lfsr	2,_V+335	;volatile
 28894   015476  50DF               	movf	223,w,c
 28895   015478  0B07               	andlw	7
 28896   01547A  0DA6               	mullw	166
 28897   01547C  0ECB               	movlw	low (_D+65533)
 28898   01547E  24F3               	addwf	243,w,c
 28899   015480  6ED9               	movwf	fsr2l,c
 28900   015482  0E0A               	movlw	high (_D+65533)
 28901   015484  20F4               	addwfc	prodh,w,c
 28902   015486  6EDA               	movwf	fsr2h,c
 28903   015488  006F FF78  F02C    	movff	postinc2,btemp+10
 28904   01548E  006F FF74  F02D    	movff	postdec2,btemp+11
 28905   015494  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 28906   01549A  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 28907   0154A0  0E06               	movlw	6
 28908   0154A2  6EE6               	movwf	postinc1,c
 28909   0154A4  EC2A  F0BC         	call	_StartTimer	;wreg free
 28910                           
 28911                           ;gemsecs.c: 904:   *block = D[V.stack - 1].block;
 28912   0154A8  EE23  F169         	lfsr	2,_V+335	;volatile
 28913   0154AC  50DF               	movf	223,w,c
 28914   0154AE  0B07               	andlw	7
 28915   0154B0  0DA6               	mullw	166
 28916   0154B2  0EC4               	movlw	low (_D+65526)
 28917   0154B4  24F3               	addwf	243,w,c
 28918   0154B6  6ED9               	movwf	fsr2l,c
 28919   0154B8  0E0A               	movlw	high (_D+65526)
 28920   0154BA  20F4               	addwfc	prodh,w,c
 28921   0154BC  6EDA               	movwf	fsr2h,c
 28922                           
 28923                           ;stkvar	_block @ sp[(0)+-1]
 28924   0154BE  0EFF               	movlw	-1
 28925   0154C0  50E3               	movf	plusw1,w,c
 28926   0154C2  6EE9               	movwf	fsr0l,c
 28927   0154C4  6AEA               	clrf	fsr0h,c
 28928   0154C6  0E06               	movlw	6
 28929   0154C8                     u5731:
 28930   0154C8  006F FF6F FFEB     	movff	plusw2,plusw0
 28931   0154CE  06E8               	decf	wreg,f,c
 28932   0154D0  E2FB               	bc	u5731
 28933                           
 28934                           ;gemsecs.c: 905:   D[V.stack - 1].message.block.block.systemb = V.ticks;
 28935   0154D2  EE23  F141         	lfsr	2,_V+295	;volatile
 28936   0154D6  EE03  F169         	lfsr	0,_V+335	;volatile
 28937   0154DA  50EF               	movf	239,w,c
 28938   0154DC  0B07               	andlw	7
 28939   0154DE  0DA6               	mullw	166
 28940   0154E0  0EB9               	movlw	low (_D+65515)
 28941   0154E2  24F3               	addwf	243,w,c
 28942   0154E4  6EE9               	movwf	fsr0l,c
 28943   0154E6  0E0A               	movlw	high (_D+65515)
 28944   0154E8  20F4               	addwfc	prodh,w,c
 28945   0154EA  6EEA               	movwf	fsr0h,c
 28946   0154EC  006F FF7B FFEE     	movff	postinc2,postinc0
 28947   0154F2  006F FF7B FFEE     	movff	postinc2,postinc0
 28948   0154F8  006F FF7B FFEE     	movff	postinc2,postinc0
 28949   0154FE  006F FF7B FFEE     	movff	postinc2,postinc0
 28950                           
 28951                           ;gemsecs.c: 906:   break;
 28952   015504  D009               	goto	l8813
 28953   015506                     l8811:
 28954                           
 28955                           ;stkvar	_sid @ sp[(0)+-2]
 28956   015506  0EFE               	movlw	-2
 28957   015508  50E3               	movf	plusw1,w,c
 28958                           
 28959                           ; Switch size 1, requested type "simple"
 28960                           ; Number of cases is 2, Range of values is 1 to 10
 28961                           ; switch strategies available:
 28962                           ; Name         Instructions Cycles
 28963                           ; simple_byte            7     4 (average)
 28964                           ;	Chosen strategy is simple_byte
 28965   01550A  0A01               	xorlw	1	; case 1
 28966   01550C  B4D8               	btfsc	status,2,c
 28967   01550E  D757               	goto	l8787
 28968   015510  0A0B               	xorlw	11	; case 10
 28969   015512  B4D8               	btfsc	status,2,c
 28970   015514  D7AE               	goto	l8795
 28971   015516  D753               	goto	l8787
 28972   015518                     l8813:
 28973                           
 28974                           ;gemsecs.c: 915:  V.stack--;
 28975   015518  EE23  F169         	lfsr	2,_V+335	;volatile
 28976   01551C  50DF               	movf	223,w,c
 28977   01551E  0B07               	andlw	7
 28978   015520  6E2D               	movwf	(btemp+11)^0,c
 28979   015522  062D               	decf	(btemp+11)^0,f,c
 28980   015524  50DF               	movf	223,w,c
 28981   015526  182D               	xorwf	(btemp+11)^0,w,c
 28982   015528  0BF8               	andlw	-8
 28983   01552A  182D               	xorwf	(btemp+11)^0,w,c
 28984   01552C  6EDF               	movwf	223,c
 28985   01552E                     l2113:
 28986                           
 28987                           ; _gem_messages: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
 28988   01552E  52E5               	movf	postdec1,f,c
 28989   015530  52E5               	movf	postdec1,f,c
 28990   015532  0012               	return		;funcret
 28991   015534                     __end_of_gem_messages:
 28992                           	callstack 0
 28993                           
 28994 ;; *************** function _srand *****************
 28995 ;; Defined at:
 28996 ;;		line 6 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/rand.c"
 28997 ;; Parameters:    Size  Location     Type
 28998 ;;  s               2  [STACK] unsigned int 
 28999 ;; Auto vars:     Size  Location     Type
 29000 ;;		None
 29001 ;; Return value:  Size  Location     Type
 29002 ;;                  1  [STACK] void 
 29003 ;; Registers used:
 29004 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
 29005 ;; Tracked objects:
 29006 ;;		On entry : 3F/0
 29007 ;;		On exit  : 3F/0
 29008 ;;		Unchanged: 0/0
 29009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29014 ;;Total ram usage:        0 bytes
 29015 ;; Hardware stack levels used: 1
 29016 ;; Hardware stack levels required when called: 3
 29017 ;; This function calls:
 29018 ;;		Nothing
 29019 ;; This function is called by:
 29020 ;;		_main
 29021 ;; This function uses a reentrant model
 29022 ;;
 29023                           
 29024                           	psect	text16
 29025   017AB6                     __ptext16:
 29026                           	callstack 0
 29027   017AB6                     _srand:
 29028                           	callstack 27
 29029                           
 29030                           ;stkvar	_s @ sp[(0)+-2]
 29031                           
 29032                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29033                           ;incstack = 0
 29034   017AB6  0EFE               	movlw	-2
 29035   017AB8  50E3               	movf	plusw1,w,c
 29036   017ABA  0FFF               	addlw	255
 29037   017ABC  6E2C               	movwf	(btemp+10)^0,c
 29038   017ABE  0EFF               	movlw	-1
 29039   017AC0  006F FF8C  F02D    	movff	plusw1,btemp+11
 29040   017AC6  0EFF               	movlw	255
 29041   017AC8  222D               	addwfc	(btemp+11)^0,f,c
 29042   017ACA  C02C  F0BE         	movff	btemp+10,_seed
 29043   017ACE  C02D  F0BF         	movff	btemp+11,_seed+1
 29044   017AD2  0100               	movlb	0	; () banked
 29045   017AD4  6BC0               	clrf	(_seed+2)& (0+255),b
 29046   017AD6  6BC1               	clrf	(_seed+3)& (0+255),b
 29047                           
 29048                           ; BSR set to: 0
 29049                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
 29050   017AD8  52E5               	movf	postdec1,f,c
 29051   017ADA  52E5               	movf	postdec1,f,c
 29052   017ADC  0012               	return		;funcret
 29053   017ADE                     __end_of_srand:
 29054                           	callstack 0
 29055                           
 29056 ;; *************** function _r_protocol *****************
 29057 ;; Defined at:
 29058 ;;		line 259 in file "gemsecs.c"
 29059 ;; Parameters:    Size  Location     Type
 29060 ;;  r_link          2  [STACK] PTR enum E17017
 29061 ;;		 -> V(387), 
 29062 ;; Auto vars:     Size  Location     Type
 29063 ;;  rxData          1  [STACK] unsigned char 
 29064 ;; Return value:  Size  Location     Type
 29065 ;;                  1  [STACK] enum E17295
 29066 ;; Registers used:
 29067 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 29068 ;; Tracked objects:
 29069 ;;		On entry : 0/3C
 29070 ;;		On exit  : 0/0
 29071 ;;		Unchanged: 0/0
 29072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29077 ;;Total ram usage:        0 bytes
 29078 ;; Hardware stack levels used: 1
 29079 ;; Hardware stack levels required when called: 14
 29080 ;; This function calls:
 29081 ;;		_StartTimer
 29082 ;;		_TimerDone
 29083 ;;		_UART1_Read
 29084 ;;		_UART1_Write
 29085 ;;		_UART1_is_rx_ready
 29086 ;;		_WaitMs
 29087 ;;		_run_checksum
 29088 ;;		_secs_II_monitor_message
 29089 ;;		_secs_gem_state
 29090 ;; This function is called by:
 29091 ;;		_main
 29092 ;; This function uses a reentrant model
 29093 ;;
 29094                           
 29095                           	psect	text17
 29096   012C38                     __ptext17:
 29097                           	callstack 0
 29098   012C38                     _r_protocol:
 29099                           	callstack 0
 29100                           
 29101                           ; BSR set to: 0
 29102                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29103   012C38  52E6               	movf	postinc1,f,c
 29104                           
 29105                           ;gemsecs.c: 259: LINK_STATES r_protocol(LINK_STATES * r_link);gemsecs.c: 260: {;gemsecs.
      +                          c: 261:  uint8_t rxData;;gemsecs.c: 262:  static uint8_t rxData_l = 0, retry = 3, *b_blo
      +                          ck, d = 1;;gemsecs.c: 264:  switch (*r_link) {
 29106                           
 29107                           ;incstack = 0
 29108   012C3A  D206               	goto	l13199
 29109   012C3C                     l13051:
 29110                           
 29111                           ;gemsecs.c: 266:   if (UART1_is_rx_ready()) {
 29112   012C3C  EC70  F0C0         	call	_UART1_is_rx_ready	;wreg free
 29113   012C40  5022               	movf	btemp^0,w,c
 29114   012C42  B4D8               	btfsc	status,2,c
 29115   012C44  D226               	goto	l13201
 29116                           
 29117                           ;gemsecs.c: 267:    rxData = UART1_Read();
 29118   012C46  ECEE  F0BB         	call	_UART1_Read	;wreg free
 29119                           
 29120                           ;stkvar	_rxData @ sp[(-1)+0]
 29121   012C4A  0EFF               	movlw	-1
 29122   012C4C  0060  F08B  FFE3   	movff	btemp,plusw1
 29123                           
 29124                           ; BSR set to: 57
 29125                           ;gemsecs.c: 268:    if (rxData == 0x05) {
 29126                           ;stkvar	_rxData @ sp[(-1)+0]
 29127   012C52  0EFF               	movlw	-1
 29128   012C54  006F FF8C  F022    	movff	plusw1,btemp
 29129   012C5A  0E05               	movlw	5
 29130   012C5C  1822               	xorwf	btemp^0,w,c
 29131   012C5E  A4D8               	btfss	status,2,c
 29132   012C60  D218               	goto	l13201
 29133                           
 29134                           ; BSR set to: 57
 29135                           
 29136                           ;gemsecs.c: 270:     do { LATEbits.LATE1 = 1; } while(0);
 29137   012C62  82BE               	bsf	190,1,c	;volatile
 29138                           
 29139                           ; BSR set to: 57
 29140                           ;gemsecs.c: 271:     V.error = LINK_ERROR_NONE;
 29141   012C64  0E0A               	movlw	10
 29142   012C66  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 29143                           
 29144                           ; BSR set to: 57
 29145                           ;gemsecs.c: 272:     *r_link = LINK_STATE_ENQ;
 29146                           ;stkvar	_r_link @ sp[(-1)+-2]
 29147   012C6C  0EFD               	movlw	-3
 29148   012C6E  006F FF8F FFD9     	movff	plusw1,fsr2l
 29149   012C74  0EFE               	movlw	-2
 29150   012C76  006F FF8F FFDA     	movff	plusw1,fsr2h
 29151   012C7C  0E01               	movlw	1
 29152   012C7E  6EDF               	movwf	indf2,c
 29153                           
 29154                           ; BSR set to: 57
 29155                           ;gemsecs.c: 273:     if (TimerDone(TMR_HBIO))
 29156   012C80  0E06               	movlw	6
 29157   012C82  6EE6               	movwf	postinc1,c
 29158   012C84  ECD7  F0BE         	call	_TimerDone	;wreg free
 29159   012C88  5022               	movf	btemp^0,w,c
 29160   012C8A  B4D8               	btfsc	status,2,c
 29161   012C8C  D202               	goto	l13201
 29162                           
 29163                           ;gemsecs.c: 274:      StartTimer(TMR_HBIO, 5000);
 29164   012C8E  0E88               	movlw	136
 29165   012C90  6EE6               	movwf	postinc1,c
 29166   012C92  0E13               	movlw	19
 29167   012C94  6EE6               	movwf	postinc1,c
 29168   012C96  0E06               	movlw	6
 29169   012C98  6EE6               	movwf	postinc1,c
 29170   012C9A  EC2A  F0BC         	call	_StartTimer	;wreg free
 29171                           
 29172                           ;gemsecs.c: 275:    }
 29173   012C9E  D1F9               	goto	l13201
 29174   012CA0                     l1892:
 29175                           
 29176                           ;gemsecs.c: 279:   rxData_l = 0;
 29177   012CA0  6A0B               	clrf	r_protocol@rxData_l^0,c
 29178                           
 29179                           ;gemsecs.c: 280:   d = 1;
 29180   012CA2  0E01               	movlw	1
 29181   012CA4  6E51               	movwf	r_protocol@d^0,c
 29182                           
 29183                           ;gemsecs.c: 281:   b_block = (uint8_t*) & H254[0];
 29184   012CA6  0ED5               	movlw	low _H254
 29185   012CA8  6E01               	movwf	r_protocol@b_block^0,c
 29186   012CAA  0E0E               	movlw	high _H254
 29187   012CAC  6E02               	movwf	(r_protocol@b_block+1)^0,c
 29188                           
 29189                           ;gemsecs.c: 282:   UART1_Write(0x04);
 29190   012CAE  0E04               	movlw	4
 29191   012CB0  6EE6               	movwf	postinc1,c
 29192   012CB2  EC71  F0BB         	call	_UART1_Write	;wreg free
 29193                           
 29194                           ; BSR set to: 57
 29195                           ;gemsecs.c: 283:   StartTimer(TMR_T2, 3000);
 29196   012CB6  0EB8               	movlw	184
 29197   012CB8  6EE6               	movwf	postinc1,c
 29198   012CBA  0E0B               	movlw	11
 29199   012CBC  6EE6               	movwf	postinc1,c
 29200   012CBE  0E02               	movlw	2
 29201   012CC0  6EE6               	movwf	postinc1,c
 29202   012CC2  EC2A  F0BC         	call	_StartTimer	;wreg free
 29203                           
 29204                           ;gemsecs.c: 284:   *r_link = LINK_STATE_EOT;
 29205                           ;stkvar	_r_link @ sp[(-1)+-2]
 29206   012CC6  0EFD               	movlw	-3
 29207   012CC8  006F FF8F FFD9     	movff	plusw1,fsr2l
 29208   012CCE  0EFE               	movlw	-2
 29209   012CD0  006F FF8F FFDA     	movff	plusw1,fsr2h
 29210   012CD6  0E02               	movlw	2
 29211   012CD8  D02D               	goto	L19
 29212   012CDA                     l13073:
 29213                           
 29214                           ;gemsecs.c: 294:   if (TimerDone(TMR_T2)) {
 29215   012CDA  0E02               	movlw	2
 29216   012CDC  6EE6               	movwf	postinc1,c
 29217   012CDE  ECD7  F0BE         	call	_TimerDone	;wreg free
 29218   012CE2  5022               	movf	btemp^0,w,c
 29219   012CE4  B4D8               	btfsc	status,2,c
 29220   012CE6  D032               	goto	l13089
 29221                           
 29222                           ;gemsecs.c: 295:    V.timer_error++;
 29223   012CE8  EE23  F15B         	lfsr	2,_V+321	;volatile
 29224   012CEC  2ADE               	incf	postinc2,f,c
 29225   012CEE  0E00               	movlw	0
 29226   012CF0  22DD               	addwfc	postdec2,f,c
 29227                           
 29228                           ;gemsecs.c: 296:    V.all_errors++;
 29229   012CF2  EE23  F165         	lfsr	2,_V+331	;volatile
 29230   012CF6  2ADE               	incf	postinc2,f,c
 29231   012CF8  0E00               	movlw	0
 29232   012CFA  22DD               	addwfc	postdec2,f,c
 29233                           
 29234                           ;gemsecs.c: 297:    if (!retry--) {
 29235   012CFC  0652               	decf	r_protocol@retry^0,f,c
 29236   012CFE  2852               	incf	r_protocol@retry^0,w,c
 29237   012D00  A4D8               	btfss	status,2,c
 29238   012D02  D01A               	goto	l13087
 29239                           
 29240                           ;gemsecs.c: 298:     V.error = LINK_ERROR_T2;
 29241   012D04  0E0C               	movlw	12
 29242   012D06  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 29243                           
 29244                           ;gemsecs.c: 299:     V.failed_receive = 1;
 29245   012D0C  EE23  F168         	lfsr	2,_V+334	;volatile
 29246   012D10  50DF               	movf	223,w,c
 29247   012D12  0BF0               	andlw	-16
 29248   012D14  0901               	iorlw	1
 29249   012D16  6EDF               	movwf	223,c
 29250                           
 29251                           ;gemsecs.c: 300:     V.all_errors++;
 29252   012D18  EE23  F165         	lfsr	2,_V+331	;volatile
 29253   012D1C  2ADE               	incf	postinc2,f,c
 29254   012D1E  0E00               	movlw	0
 29255   012D20  22DD               	addwfc	postdec2,f,c
 29256   012D22                     l13085:
 29257                           
 29258                           ;gemsecs.c: 301:     *r_link = LINK_STATE_NAK;
 29259                           ;stkvar	_r_link @ sp[(-1)+-2]
 29260   012D22  0EFD               	movlw	-3
 29261   012D24  006F FF8F FFD9     	movff	plusw1,fsr2l
 29262   012D2A  0EFE               	movlw	-2
 29263   012D2C  006F FF8F FFDA     	movff	plusw1,fsr2h
 29264   012D32  0E05               	movlw	5
 29265   012D34                     L19:
 29266   012D34  6EDF               	movwf	indf2,c
 29267                           
 29268                           ;gemsecs.c: 302:    } else {
 29269   012D36  D1AD               	goto	l13201
 29270   012D38                     l13087:
 29271                           
 29272                           ;gemsecs.c: 303:     *r_link = LINK_STATE_IDLE;
 29273                           ;stkvar	_r_link @ sp[(-1)+-2]
 29274   012D38  0EFD               	movlw	-3
 29275   012D3A  006F FF8F FFD9     	movff	plusw1,fsr2l
 29276   012D40  0EFE               	movlw	-2
 29277   012D42  006F FF8F FFDA     	movff	plusw1,fsr2h
 29278   012D48  6ADF               	clrf	indf2,c
 29279   012D4A  D1A3               	goto	l13201
 29280   012D4C                     l13089:
 29281                           
 29282                           ;gemsecs.c: 306:    if (UART1_is_rx_ready()) {
 29283   012D4C  EC70  F0C0         	call	_UART1_is_rx_ready	;wreg free
 29284   012D50  5022               	movf	btemp^0,w,c
 29285   012D52  B4D8               	btfsc	status,2,c
 29286   012D54  D19E               	goto	l13201
 29287                           
 29288                           ;gemsecs.c: 307:     rxData = UART1_Read();
 29289   012D56  ECEE  F0BB         	call	_UART1_Read	;wreg free
 29290                           
 29291                           ;stkvar	_rxData @ sp[(-1)+0]
 29292   012D5A  0EFF               	movlw	-1
 29293   012D5C  0060  F08B  FFE3   	movff	btemp,plusw1
 29294                           
 29295                           ; BSR set to: 57
 29296                           ;gemsecs.c: 308:     if (rxData_l == 0) {
 29297   012D62  500B               	movf	r_protocol@rxData_l^0,w,c
 29298   012D64  A4D8               	btfss	status,2,c
 29299   012D66  D01C               	goto	l13103
 29300                           
 29301                           ; BSR set to: 57
 29302                           ;gemsecs.c: 309:      r_block.length = rxData;
 29303                           ;stkvar	_rxData @ sp[(-1)+0]
 29304   012D68  0EFF               	movlw	-1
 29305   012D6A  006F FF8C  F086    	movff	plusw1,_r_block+12
 29306                           
 29307                           ; BSR set to: 57
 29308                           ;gemsecs.c: 310:      run_checksum(0, 1);
 29309   012D70  0E01               	movlw	1
 29310   012D72  6EE6               	movwf	postinc1,c
 29311   012D74  0E00               	movlw	0
 29312   012D76  6EE6               	movwf	postinc1,c
 29313   012D78  EC6F  F0BD         	call	_run_checksum	;wreg free
 29314                           
 29315                           ; BSR set to: 0
 29316                           ;gemsecs.c: 311:      rxData_l++;
 29317   012D7C  2A0B               	incf	r_protocol@rxData_l^0,f,c
 29318                           
 29319                           ; BSR set to: 0
 29320                           ;gemsecs.c: 312:      b_block[sizeof(header254) - rxData_l] = rxData;
 29321                           ;stkvar	_rxData @ sp[(-1)+0]
 29322   012D7E  500B               	movf	r_protocol@rxData_l^0,w,c
 29323   012D80  5C01               	subwf	r_protocol@b_block^0,w,c
 29324   012D82  6E2C               	movwf	(btemp+10)^0,c
 29325   012D84  0E00               	movlw	0
 29326   012D86  5802               	subwfb	(r_protocol@b_block+1)^0,w,c
 29327   012D88  6E2D               	movwf	(btemp+11)^0,c
 29328   012D8A  0E01               	movlw	1
 29329   012D8C  242C               	addwf	(btemp+10)^0,w,c
 29330   012D8E  6ED9               	movwf	fsr2l,c
 29331   012D90  0E01               	movlw	1
 29332   012D92  202D               	addwfc	(btemp+11)^0,w,c
 29333   012D94  6EDA               	movwf	fsr2h,c
 29334   012D96  0EFF               	movlw	-1
 29335   012D98  006F FF8F FFDF     	movff	plusw1,indf2
 29336                           
 29337                           ;gemsecs.c: 313:     } else {
 29338   012D9E  D179               	goto	l13201
 29339   012DA0                     l13103:
 29340                           
 29341                           ; BSR set to: 57
 29342                           ;gemsecs.c: 317:      if (rxData_l <= sizeof(block10))
 29343   012DA0  0E0B               	movlw	11
 29344   012DA2  600B               	cpfslt	r_protocol@rxData_l^0,c
 29345   012DA4  D00C               	goto	l13107
 29346                           
 29347                           ; BSR set to: 57
 29348                           ;gemsecs.c: 318:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
 29349                           ;stkvar	_rxData @ sp[(-1)+0]
 29350   012DA6  500B               	movf	r_protocol@rxData_l^0,w,c
 29351   012DA8  0819               	sublw	low (_H10+25)
 29352   012DAA  6ED9               	movwf	fsr2l,c
 29353   012DAC  0E00               	movlw	0
 29354   012DAE  A0D8               	btfss	status,0,c
 29355   012DB0  2AE8               	incf	wreg,f,c
 29356   012DB2  0801               	sublw	high (_H10+25)
 29357   012DB4  6EDA               	movwf	fsr2h,c
 29358   012DB6  0EFF               	movlw	-1
 29359   012DB8  006F FF8F FFDF     	movff	plusw1,indf2
 29360   012DBE                     l13107:
 29361                           
 29362                           ; BSR set to: 57
 29363                           ;gemsecs.c: 320:      if (d <= 16) {
 29364   012DBE  0E11               	movlw	17
 29365   012DC0  6051               	cpfslt	r_protocol@d^0,c
 29366   012DC2  D01C               	goto	l13115
 29367                           
 29368                           ; BSR set to: 57
 29369                           ;gemsecs.c: 321:       if (rxData_l == sizeof(block10) + d) {
 29370   012DC4  500B               	movf	r_protocol@rxData_l^0,w,c
 29371   012DC6  6E2C               	movwf	(btemp+10)^0,c
 29372   012DC8  6A2D               	clrf	(btemp+11)^0,c
 29373   012DCA  5051               	movf	r_protocol@d^0,w,c
 29374   012DCC  6E2A               	movwf	(btemp+8)^0,c
 29375   012DCE  6A2B               	clrf	(btemp+9)^0,c
 29376   012DD0  0E0A               	movlw	10
 29377   012DD2  262A               	addwf	(btemp+8)^0,f,c
 29378   012DD4  0E00               	movlw	0
 29379   012DD6  222B               	addwfc	(btemp+9)^0,f,c
 29380   012DD8  502C               	movf	(btemp+10)^0,w,c
 29381   012DDA  182A               	xorwf	(btemp+8)^0,w,c
 29382   012DDC  E10F               	bnz	l13115
 29383   012DDE  502D               	movf	(btemp+11)^0,w,c
 29384   012DE0  182B               	xorwf	(btemp+9)^0,w,c
 29385   012DE2  A4D8               	btfss	status,2,c
 29386   012DE4  D00B               	goto	l13115
 29387                           
 29388                           ; BSR set to: 57
 29389                           ;gemsecs.c: 322:        V.response.ack[d - 1] = rxData;
 29390                           ;stkvar	_rxData @ sp[(-1)+0]
 29391   012DE6  0E69               	movlw	low (_V+335)
 29392   012DE8  2451               	addwf	r_protocol@d^0,w,c
 29393   012DEA  6ED9               	movwf	fsr2l,c
 29394   012DEC  6ADA               	clrf	fsr2h,c
 29395   012DEE  0E0D               	movlw	high (_V+335)
 29396   012DF0  22DA               	addwfc	fsr2h,f,c
 29397   012DF2  0EFF               	movlw	-1
 29398   012DF4  006F FF8F FFDF     	movff	plusw1,indf2
 29399                           
 29400                           ; BSR set to: 57
 29401                           ;gemsecs.c: 323:        d++;
 29402   012DFA  2A51               	incf	r_protocol@d^0,f,c
 29403   012DFC                     l13115:
 29404                           
 29405                           ; BSR set to: 57
 29406                           ;gemsecs.c: 327:      if (rxData_l <= r_block.length)
 29407   012DFC  500B               	movf	r_protocol@rxData_l^0,w,c
 29408   012DFE  0100               	movlb	0	; () banked
 29409   012E00  5D86               	subwf	(_r_block+12)& (0+255),w,b
 29410   012E02  A0D8               	btfss	status,0,c
 29411   012E04  D00D               	goto	l13119
 29412                           
 29413                           ; BSR set to: 0
 29414                           ;gemsecs.c: 328:       V.r_checksum = run_checksum(rxData, 0);
 29415   012E06  0E00               	movlw	0
 29416   012E08  6EE6               	movwf	postinc1,c
 29417                           
 29418                           ;stkvar	_rxData @ sp[(-2)+0]
 29419   012E0A  0EFE               	movlw	-2
 29420   012E0C  50E3               	movf	plusw1,w,c
 29421   012E0E  6EE6               	movwf	postinc1,c
 29422   012E10  EC6F  F0BD         	call	_run_checksum	;wreg free
 29423   012E14  0060  F088  FD55   	movff	btemp,_V+315	;volatile
 29424   012E1A  0060  F08C  FD56   	movff	btemp+1,_V+316	;volatile
 29425   012E20                     l13119:
 29426                           
 29427                           ; BSR set to: 0
 29428                           ;gemsecs.c: 330:      if (rxData_l == r_block.length + 1)
 29429   012E20  500B               	movf	r_protocol@rxData_l^0,w,c
 29430   012E22  6E2C               	movwf	(btemp+10)^0,c
 29431   012E24  6A2D               	clrf	(btemp+11)^0,c
 29432   012E26  5186               	movf	(_r_block+12)& (0+255),w,b
 29433   012E28  6E2A               	movwf	(btemp+8)^0,c
 29434   012E2A  6A2B               	clrf	(btemp+9)^0,c
 29435   012E2C  0E01               	movlw	1
 29436   012E2E  262A               	addwf	(btemp+8)^0,f,c
 29437   012E30  0E00               	movlw	0
 29438   012E32  222B               	addwfc	(btemp+9)^0,f,c
 29439   012E34  502C               	movf	(btemp+10)^0,w,c
 29440   012E36  182A               	xorwf	(btemp+8)^0,w,c
 29441   012E38  E109               	bnz	l13123
 29442   012E3A  502D               	movf	(btemp+11)^0,w,c
 29443   012E3C  182B               	xorwf	(btemp+9)^0,w,c
 29444   012E3E  A4D8               	btfss	status,2,c
 29445   012E40  D005               	goto	l13123
 29446                           
 29447                           ; BSR set to: 0
 29448                           ;gemsecs.c: 331:       H10[1].checksum = (uint16_t) rxData << 8;
 29449                           ;stkvar	_rxData @ sp[(-1)+0]
 29450   012E42  0EFF               	movlw	-1
 29451   012E44  50E3               	movf	plusw1,w,c
 29452   012E46  0101               	movlb	1	; () banked
 29453   012E48  6F0E               	movwf	(_H10+14)& (0+255),b
 29454   012E4A  6B0D               	clrf	(_H10+13)& (0+255),b
 29455   012E4C                     l13123:
 29456                           
 29457                           ;gemsecs.c: 332:      if (rxData_l == r_block.length + 2)
 29458   012E4C  500B               	movf	r_protocol@rxData_l^0,w,c
 29459   012E4E  6E2C               	movwf	(btemp+10)^0,c
 29460   012E50  6A2D               	clrf	(btemp+11)^0,c
 29461   012E52  0100               	movlb	0	; () banked
 29462   012E54  5186               	movf	(_r_block+12)& (0+255),w,b
 29463   012E56  6E2A               	movwf	(btemp+8)^0,c
 29464   012E58  6A2B               	clrf	(btemp+9)^0,c
 29465   012E5A  0E02               	movlw	2
 29466   012E5C  262A               	addwf	(btemp+8)^0,f,c
 29467   012E5E  0E00               	movlw	0
 29468   012E60  222B               	addwfc	(btemp+9)^0,f,c
 29469   012E62  502C               	movf	(btemp+10)^0,w,c
 29470   012E64  182A               	xorwf	(btemp+8)^0,w,c
 29471   012E66  E10A               	bnz	l13127
 29472   012E68  502D               	movf	(btemp+11)^0,w,c
 29473   012E6A  182B               	xorwf	(btemp+9)^0,w,c
 29474   012E6C  A4D8               	btfss	status,2,c
 29475   012E6E  D006               	goto	l13127
 29476                           
 29477                           ; BSR set to: 0
 29478                           ;gemsecs.c: 333:       H10[1].checksum += rxData;
 29479                           ;stkvar	_rxData @ sp[(-1)+0]
 29480   012E70  0EFF               	movlw	-1
 29481   012E72  50E3               	movf	plusw1,w,c
 29482   012E74  0101               	movlb	1	; () banked
 29483   012E76  270D               	addwf	(_H10+13)& (0+255),f,b
 29484   012E78  0E00               	movlw	0
 29485   012E7A  230E               	addwfc	(_H10+14)& (0+255),f,b
 29486   012E7C                     l13127:
 29487                           
 29488                           ;gemsecs.c: 335:      rxData_l++;
 29489   012E7C  2A0B               	incf	r_protocol@rxData_l^0,f,c
 29490                           
 29491                           ;gemsecs.c: 336:      b_block[sizeof(header254) - rxData_l] = rxData;
 29492                           ;stkvar	_rxData @ sp[(-1)+0]
 29493   012E7E  500B               	movf	r_protocol@rxData_l^0,w,c
 29494   012E80  5C01               	subwf	r_protocol@b_block^0,w,c
 29495   012E82  6E2C               	movwf	(btemp+10)^0,c
 29496   012E84  0E00               	movlw	0
 29497   012E86  5802               	subwfb	(r_protocol@b_block+1)^0,w,c
 29498   012E88  6E2D               	movwf	(btemp+11)^0,c
 29499   012E8A  0E01               	movlw	1
 29500   012E8C  242C               	addwf	(btemp+10)^0,w,c
 29501   012E8E  6ED9               	movwf	fsr2l,c
 29502   012E90  0E01               	movlw	1
 29503   012E92  202D               	addwfc	(btemp+11)^0,w,c
 29504   012E94  6EDA               	movwf	fsr2h,c
 29505   012E96  0EFF               	movlw	-1
 29506   012E98  006F FF8F FFDF     	movff	plusw1,indf2
 29507                           
 29508                           ;gemsecs.c: 337:      if (rxData_l > (r_block.length + 2)) {
 29509   012E9E  500B               	movf	r_protocol@rxData_l^0,w,c
 29510   012EA0  6E2C               	movwf	(btemp+10)^0,c
 29511   012EA2  6A2D               	clrf	(btemp+11)^0,c
 29512   012EA4  0100               	movlb	0	; () banked
 29513   012EA6  5186               	movf	(_r_block+12)& (0+255),w,b
 29514   012EA8  6E2A               	movwf	(btemp+8)^0,c
 29515   012EAA  6A2B               	clrf	(btemp+9)^0,c
 29516   012EAC  0E02               	movlw	2
 29517   012EAE  262A               	addwf	(btemp+8)^0,f,c
 29518   012EB0  0E00               	movlw	0
 29519   012EB2  222B               	addwfc	(btemp+9)^0,f,c
 29520   012EB4  502C               	movf	(btemp+10)^0,w,c
 29521   012EB6  5C2A               	subwf	(btemp+8)^0,w,c
 29522   012EB8  502B               	movf	(btemp+9)^0,w,c
 29523   012EBA  0A80               	xorlw	128
 29524   012EBC  6E22               	movwf	btemp^0,c
 29525   012EBE  502D               	movf	(btemp+11)^0,w,c
 29526   012EC0  0A80               	xorlw	128
 29527   012EC2  5822               	subwfb	btemp^0,w,c
 29528   012EC4  B0D8               	btfsc	status,0,c
 29529   012EC6  D0E5               	goto	l13201
 29530                           
 29531                           ; BSR set to: 0
 29532                           ;gemsecs.c: 338:       if (V.r_checksum == H10[1].checksum) {
 29533   012EC8  EE23  F155         	lfsr	2,_V+315	;volatile
 29534   012ECC  0101               	movlb	1	; () banked
 29535   012ECE  510D               	movf	(_H10+13)& (0+255),w,b
 29536   012ED0  18DE               	xorwf	postinc2,w,c
 29537   012ED2  E112               	bnz	l13141
 29538   012ED4  510E               	movf	(_H10+14)& (0+255),w,b
 29539   012ED6  18DE               	xorwf	postinc2,w,c
 29540   012ED8  A4D8               	btfss	status,2,c
 29541   012EDA  D00E               	goto	l13141
 29542                           
 29543                           ; BSR set to: 1
 29544                           ;gemsecs.c: 339:        *r_link = LINK_STATE_ACK;
 29545                           ;stkvar	_r_link @ sp[(-1)+-2]
 29546   012EDC  0EFD               	movlw	-3
 29547   012EDE  006F FF8F FFD9     	movff	plusw1,fsr2l
 29548   012EE4  0EFE               	movlw	-2
 29549   012EE6  006F FF8F FFDA     	movff	plusw1,fsr2h
 29550   012EEC  0E03               	movlw	3
 29551   012EEE  6EDF               	movwf	indf2,c
 29552                           
 29553                           ; BSR set to: 1
 29554   012EF0  82BE               	bsf	190,1,c	;volatile
 29555   012EF2  D0CF               	goto	l13201
 29556   012EF4                     l13139:
 29557   012EF4  ECEE  F0BB         	call	_UART1_Read	;wreg free
 29558   012EF8                     l13141:
 29559                           
 29560                           ;gemsecs.c: 342:        while (UART1_is_rx_ready())
 29561   012EF8  EC70  F0C0         	call	_UART1_is_rx_ready	;wreg free
 29562   012EFC  5022               	movf	btemp^0,w,c
 29563   012EFE  A4D8               	btfss	status,2,c
 29564   012F00  D7F9               	goto	l13139
 29565                           
 29566                           ;gemsecs.c: 344:        WaitMs(500);
 29567   012F02  0EF4               	movlw	244
 29568   012F04  6EE6               	movwf	postinc1,c
 29569   012F06  0E01               	movlw	1
 29570   012F08  6EE6               	movwf	postinc1,c
 29571   012F0A  EC9F  F0BC         	call	_WaitMs	;wreg free
 29572                           
 29573                           ;gemsecs.c: 345:        V.error = LINK_ERROR_CHECKSUM;
 29574   012F0E  0E0F               	movlw	15
 29575   012F10  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 29576                           
 29577                           ;gemsecs.c: 346:        V.checksum_error++;
 29578   012F16  EE23  F159         	lfsr	2,_V+319	;volatile
 29579   012F1A  2ADE               	incf	postinc2,f,c
 29580   012F1C  0E00               	movlw	0
 29581   012F1E  22DD               	addwfc	postdec2,f,c
 29582                           
 29583                           ;gemsecs.c: 347:        V.all_errors++;
 29584   012F20  EE23  F165         	lfsr	2,_V+331	;volatile
 29585   012F24  2ADE               	incf	postinc2,f,c
 29586   012F26  0E00               	movlw	0
 29587   012F28  22DD               	addwfc	postdec2,f,c
 29588                           
 29589                           ;gemsecs.c: 348:        V.failed_receive = 2;
 29590   012F2A  EE23  F168         	lfsr	2,_V+334	;volatile
 29591   012F2E  50DF               	movf	223,w,c
 29592   012F30  0BF0               	andlw	-16
 29593   012F32  0902               	iorlw	2
 29594   012F34  6EDF               	movwf	223,c
 29595   012F36  D6F5               	goto	l13085
 29596   012F38                     l13155:
 29597                           
 29598                           ;gemsecs.c: 357:   UART1_Write(0x06);
 29599   012F38  0E06               	movlw	6
 29600   012F3A  6EE6               	movwf	postinc1,c
 29601   012F3C  EC71  F0BB         	call	_UART1_Write	;wreg free
 29602                           
 29603                           ; BSR set to: 57
 29604                           ;gemsecs.c: 358:   V.stream = H10[1].block.block.stream;
 29605   012F40  0101               	movlb	1	; () banked
 29606   012F42  5116               	movf	(_H10+22)& (0+255),w,b
 29607   012F44  0B7F               	andlw	127
 29608   012F46  6E2D               	movwf	(btemp+11)^0,c
 29609   012F48  0060  F0B4  FD4D   	movff	btemp+11,_V+307	;volatile
 29610                           
 29611                           ; BSR set to: 1
 29612                           ;gemsecs.c: 359:   V.function = H10[1].block.block.function;
 29613   012F4E  EE23  F14E         	lfsr	2,_V+308	;volatile
 29614   012F52  0060  F457  FFDF   	movff	_H10+21,indf2
 29615                           
 29616                           ; BSR set to: 1
 29617                           ;gemsecs.c: 360:   V.systemb = H10[1].block.block.systemb;
 29618   012F58  EE20  F10F         	lfsr	2,_H10+15
 29619   012F5C  006F FF78  FD45    	movff	postinc2,_V+299	;volatile
 29620   012F62  006F FF78  FD46    	movff	postinc2,_V+300	;volatile
 29621   012F68  006F FF78  FD47    	movff	postinc2,_V+301	;volatile
 29622   012F6E  006F FF74  FD48    	movff	postdec2,_V+302	;volatile
 29623                           
 29624                           ; BSR set to: 1
 29625                           ;gemsecs.c: 361:   V.rbit = H10[1].block.block.rbit;
 29626   012F74  EE23  F167         	lfsr	2,_V+333	;volatile
 29627   012F78  BF18               	btfsc	(_H10+24)& (0+255),7,b
 29628   012F7A  D002               	bra	u9405
 29629   012F7C  90DF               	bcf	indf2,0,c
 29630   012F7E  D001               	bra	u9406
 29631   012F80                     u9405:
 29632   012F80  80DF               	bsf	indf2,0,c
 29633   012F82                     u9406:
 29634                           
 29635                           ;gemsecs.c: 362:   V.wbit = H10[1].block.block.wbit;
 29636   012F82  EE23  F167         	lfsr	2,_V+333	;volatile
 29637   012F86  0101               	movlb	1	; () banked
 29638   012F88  BF16               	btfsc	(_H10+22)& (0+255),7,b
 29639   012F8A  D002               	bra	u9415
 29640   012F8C  92DF               	bcf	indf2,1,c
 29641   012F8E  D001               	bra	u9416
 29642   012F90                     u9415:
 29643   012F90  82DF               	bsf	indf2,1,c
 29644   012F92                     u9416:
 29645                           
 29646                           ;gemsecs.c: 363:   V.ebit = H10[1].block.block.ebit;
 29647   012F92  EE23  F167         	lfsr	2,_V+333	;volatile
 29648   012F96  0101               	movlb	1	; () banked
 29649   012F98  BF14               	btfsc	(_H10+20)& (0+255),7,b
 29650   012F9A  D002               	bra	u9425
 29651   012F9C  94DF               	bcf	indf2,2,c
 29652   012F9E  D001               	bra	u9426
 29653   012FA0                     u9425:
 29654   012FA0  84DF               	bsf	indf2,2,c
 29655   012FA2                     u9426:
 29656                           
 29657                           ;gemsecs.c: 364:   secs_II_monitor_message(V.stream, V.function, 500);
 29658   012FA2  0EF4               	movlw	244
 29659   012FA4  6EE6               	movwf	postinc1,c
 29660   012FA6  0E01               	movlw	1
 29661   012FA8  6EE6               	movwf	postinc1,c
 29662   012FAA  EE23  F14E         	lfsr	2,_V+308	;volatile
 29663   012FAE  50DF               	movf	indf2,w,c
 29664   012FB0  6EE6               	movwf	postinc1,c
 29665   012FB2  EE23  F14D         	lfsr	2,_V+307	;volatile
 29666   012FB6  50DF               	movf	indf2,w,c
 29667   012FB8  6EE6               	movwf	postinc1,c
 29668   012FBA  EC9B  F0AF         	call	_secs_II_monitor_message	;wreg free
 29669                           
 29670                           ;gemsecs.c: 365:   V.g_state = secs_gem_state(V.stream, V.function);
 29671   012FBE  EE23  F14E         	lfsr	2,_V+308	;volatile
 29672   012FC2  50DF               	movf	indf2,w,c
 29673   012FC4  6EE6               	movwf	postinc1,c
 29674   012FC6  EE23  F14D         	lfsr	2,_V+307	;volatile
 29675   012FCA  50DF               	movf	indf2,w,c
 29676   012FCC  6EE6               	movwf	postinc1,c
 29677   012FCE  EC33  F0A8         	call	_secs_gem_state	;wreg free
 29678   012FD2  0060  F088  FC1C   	movff	btemp,_V+2	;volatile
 29679                           
 29680                           ;gemsecs.c: 366:   V.failed_receive = 0;
 29681   012FD8  EE23  F168         	lfsr	2,_V+334	;volatile
 29682   012FDC  0EF0               	movlw	-16
 29683   012FDE  16DF               	andwf	223,f,c
 29684                           
 29685                           ;gemsecs.c: 367:   *r_link = LINK_STATE_DONE;
 29686                           ;stkvar	_r_link @ sp[(-1)+-2]
 29687   012FE0  0EFD               	movlw	-3
 29688   012FE2  006F FF8F FFD9     	movff	plusw1,fsr2l
 29689   012FE8  0EFE               	movlw	-2
 29690   012FEA  006F FF8F FFDA     	movff	plusw1,fsr2h
 29691   012FF0  0E04               	movlw	4
 29692   012FF2  6EDF               	movwf	indf2,c
 29693                           
 29694                           ;gemsecs.c: 368:   V.abort = LINK_ERROR_NONE;
 29695   012FF4  0E0A               	movlw	10
 29696   012FF6  006F FFA0  FD50    	movff	wreg,_V+310	;volatile
 29697                           
 29698                           ;gemsecs.c: 370:   break;
 29699   012FFC  D04A               	goto	l13201
 29700   012FFE                     l13179:
 29701                           
 29702                           ;gemsecs.c: 372:   UART1_Write(0x15);
 29703   012FFE  0E15               	movlw	21
 29704   013000  6EE6               	movwf	postinc1,c
 29705   013002  EC71  F0BB         	call	_UART1_Write	;wreg free
 29706                           
 29707                           ; BSR set to: 57
 29708                           ;gemsecs.c: 373:   *r_link = LINK_STATE_ERROR;
 29709                           ;stkvar	_r_link @ sp[(-1)+-2]
 29710   013006  0EFD               	movlw	-3
 29711   013008  006F FF8F FFD9     	movff	plusw1,fsr2l
 29712   01300E  0EFE               	movlw	-2
 29713   013010  006F FF8F FFDA     	movff	plusw1,fsr2h
 29714   013016  0E06               	movlw	6
 29715   013018  6EDF               	movwf	indf2,c
 29716                           
 29717                           ; BSR set to: 57
 29718                           ;gemsecs.c: 374:   V.all_errors++;
 29719   01301A  EE23  F165         	lfsr	2,_V+331	;volatile
 29720   01301E  2ADE               	incf	postinc2,f,c
 29721   013020  0E00               	movlw	0
 29722   013022  22DD               	addwfc	postdec2,f,c
 29723                           
 29724                           ;gemsecs.c: 375:   while ((uart1RxCount)) {
 29725   013024  D002               	goto	l13187
 29726   013026                     l13185:
 29727                           
 29728                           ; BSR set to: 57
 29729                           ;gemsecs.c: 376:    UART1_Read();
 29730   013026  ECEE  F0BB         	call	_UART1_Read	;wreg free
 29731   01302A                     l13187:
 29732                           
 29733                           ; BSR set to: 57
 29734                           ;gemsecs.c: 375:   while ((uart1RxCount)) {
 29735   01302A  5015               	movf	_uart1RxCount^0,w,c	;volatile
 29736   01302C  A4D8               	btfss	status,2,c
 29737   01302E  D7FB               	goto	l13185
 29738                           
 29739                           ; BSR set to: 57
 29740                           ;gemsecs.c: 378:   retry = 3;
 29741   013030  0E03               	movlw	3
 29742   013032  6E52               	movwf	r_protocol@retry^0,c
 29743                           
 29744                           ;gemsecs.c: 379:   break;
 29745   013034  D02E               	goto	l13201
 29746   013036                     l13191:
 29747                           
 29748                           ;gemsecs.c: 383:   V.failed_receive = 0;
 29749   013036  EE23  F168         	lfsr	2,_V+334	;volatile
 29750   01303A  0EF0               	movlw	-16
 29751   01303C  16DF               	andwf	223,f,c
 29752                           
 29753                           ;gemsecs.c: 384:   V.abort = LINK_ERROR_NONE;
 29754   01303E  0E0A               	movlw	10
 29755   013040  006F FFA0  FD50    	movff	wreg,_V+310	;volatile
 29756   013046  D678               	goto	l13087
 29757   013048                     l13199:
 29758                           
 29759                           ;stkvar	_r_link @ sp[(-1)+-2]
 29760   013048  0EFD               	movlw	-3
 29761   01304A  006F FF8F FFD9     	movff	plusw1,fsr2l
 29762   013050  0EFE               	movlw	-2
 29763   013052  006F FF8F FFDA     	movff	plusw1,fsr2h
 29764   013058  50DF               	movf	indf2,w,c
 29765   01305A  6E2C               	movwf	(btemp+10)^0,c
 29766   01305C  6A2D               	clrf	(btemp+11)^0,c
 29767                           
 29768                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 29769                           ; Switch size 1, requested type "simple"
 29770                           ; Number of cases is 1, Range of values is 0 to 0
 29771                           ; switch strategies available:
 29772                           ; Name         Instructions Cycles
 29773                           ; simple_byte            4     3 (average)
 29774                           ;	Chosen strategy is simple_byte
 29775   01305E  502D               	movf	(btemp+11)^0,w,c
 29776   013060  0A00               	xorlw	0	; case 0
 29777   013062  A4D8               	btfss	status,2,c
 29778   013064  D669               	goto	l13087
 29779                           
 29780                           ; Switch size 1, requested type "simple"
 29781                           ; Number of cases is 7, Range of values is 0 to 6
 29782                           ; switch strategies available:
 29783                           ; Name         Instructions Cycles
 29784                           ; simple_byte           22    12 (average)
 29785                           ;	Chosen strategy is simple_byte
 29786   013066  502C               	movf	(btemp+10)^0,w,c
 29787   013068  0A00               	xorlw	0	; case 0
 29788   01306A  B4D8               	btfsc	status,2,c
 29789   01306C  D5E7               	goto	l13051
 29790   01306E  0A01               	xorlw	1	; case 1
 29791   013070  B4D8               	btfsc	status,2,c
 29792   013072  D616               	goto	l1892
 29793   013074  0A03               	xorlw	3	; case 2
 29794   013076  B4D8               	btfsc	status,2,c
 29795   013078  D630               	goto	l13073
 29796   01307A  0A01               	xorlw	1	; case 3
 29797   01307C  B4D8               	btfsc	status,2,c
 29798   01307E  D75C               	goto	l13155
 29799   013080  0A07               	xorlw	7	; case 4
 29800   013082  B4D8               	btfsc	status,2,c
 29801   013084  D7D8               	goto	l13191
 29802   013086  0A01               	xorlw	1	; case 5
 29803   013088  B4D8               	btfsc	status,2,c
 29804   01308A  D7B9               	goto	l13179
 29805   01308C  0A03               	xorlw	3	; case 6
 29806   01308E  A4D8               	btfss	status,2,c
 29807   013090  D653               	goto	l13087
 29808   013092                     l13201:
 29809                           
 29810                           ;gemsecs.c: 391:  return *r_link;
 29811                           ;stkvar	_r_link @ sp[(-1)+-2]
 29812   013092  0EFD               	movlw	-3
 29813   013094  006F FF8F FFD9     	movff	plusw1,fsr2l
 29814   01309A  0EFE               	movlw	-2
 29815   01309C  006F FF8F FFDA     	movff	plusw1,fsr2h
 29816   0130A2  50DF               	movf	indf2,w,c
 29817   0130A4  6E22               	movwf	btemp^0,c
 29818                           
 29819                           ; _r_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
 29820   0130A6  52E5               	movf	postdec1,f,c
 29821   0130A8  52E5               	movf	postdec1,f,c
 29822   0130AA  52E5               	movf	postdec1,f,c
 29823   0130AC  0012               	return		;funcret
 29824   0130AE                     __end_of_r_protocol:
 29825                           	callstack 0
 29826                           
 29827 ;; *************** function _UART1_Write *****************
 29828 ;; Defined at:
 29829 ;;		line 180 in file "mcc_generated_files/uart1.c"
 29830 ;; Parameters:    Size  Location     Type
 29831 ;;  txData          1  [STACK] unsigned char 
 29832 ;; Auto vars:     Size  Location     Type
 29833 ;;		None
 29834 ;; Return value:  Size  Location     Type
 29835 ;;                  1  [STACK] void 
 29836 ;; Registers used:
 29837 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 29838 ;; Tracked objects:
 29839 ;;		On entry : 0/3C
 29840 ;;		On exit  : 3F/39
 29841 ;;		Unchanged: 0/0
 29842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29847 ;;Total ram usage:        0 bytes
 29848 ;; Hardware stack levels used: 1
 29849 ;; Hardware stack levels required when called: 3
 29850 ;; This function calls:
 29851 ;;		Nothing
 29852 ;; This function is called by:
 29853 ;;		_r_protocol
 29854 ;;		_t_protocol
 29855 ;;		_secs_send
 29856 ;; This function uses a reentrant model
 29857 ;;
 29858                           
 29859                           	psect	text18
 29860   0176E2                     __ptext18:
 29861                           	callstack 0
 29862   0176E2                     _UART1_Write:
 29863                           	callstack 25
 29864                           
 29865                           ;mcc_generated_files/uart1.c: 182:  while (0 == uart1TxBufferRemaining) {
 29866                           
 29867                           ;mcc_generated_files/uart1.c: 180: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 181: {;mcc_generated_files/uart1.c: 182:  while (0 == uart1TxBufferRemaining) {
 29868                           
 29869                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29870                           ;incstack = 0
 29871   0176E2  5018               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
 29872   0176E4  B4D8               	btfsc	status,2,c
 29873   0176E6  D7FD               	goto	__ptext18
 29874                           
 29875                           ;mcc_generated_files/uart1.c: 185:  if (0 == PIE3bits.U1TXIE) {
 29876   0176E8  0139               	movlb	57	; () banked
 29877   0176EA  B993               	btfsc	147,4,b	;volatile
 29878   0176EC  D005               	goto	l589
 29879                           
 29880                           ; BSR set to: 57
 29881                           ;mcc_generated_files/uart1.c: 186:   U1TXB = txData;
 29882                           ;stkvar	_txData @ sp[(0)+-1]
 29883   0176EE  0EFF               	movlw	-1
 29884   0176F0  006F FF8F FDEA     	movff	plusw1,15850	;volatile
 29885                           
 29886                           ;mcc_generated_files/uart1.c: 187:  } else {
 29887   0176F6  D011               	goto	l8381
 29888   0176F8                     l589:
 29889                           
 29890                           ; BSR set to: 57
 29891                           ;mcc_generated_files/uart1.c: 188:   PIE3bits.U1TXIE = 0;
 29892   0176F8  9993               	bcf	147,4,b	;volatile
 29893                           
 29894                           ; BSR set to: 57
 29895                           ;mcc_generated_files/uart1.c: 189:   uart1TxBuffer[uart1TxHead++] = txData;
 29896                           ;stkvar	_txData @ sp[(0)+-1]
 29897   0176FA  0E40               	movlw	low _uart1TxBuffer
 29898   0176FC  241A               	addwf	_uart1TxHead^0,w,c	;volatile
 29899   0176FE  6ED9               	movwf	fsr2l,c
 29900   017700  6ADA               	clrf	fsr2h,c
 29901   017702  0E02               	movlw	high _uart1TxBuffer
 29902   017704  22DA               	addwfc	fsr2h,f,c
 29903   017706  0EFF               	movlw	-1
 29904   017708  006F FF8F FFDF     	movff	plusw1,indf2
 29905                           
 29906                           ; BSR set to: 57
 29907   01770E  2A1A               	incf	_uart1TxHead^0,f,c	;volatile
 29908                           
 29909                           ; BSR set to: 57
 29910                           ;mcc_generated_files/uart1.c: 190:   if (sizeof(uart1TxBuffer) <= uart1TxHead) {
 29911   017710  0E3F               	movlw	63
 29912   017712  641A               	cpfsgt	_uart1TxHead^0,c
 29913   017714  D001               	goto	l8379
 29914                           
 29915                           ; BSR set to: 57
 29916                           ;mcc_generated_files/uart1.c: 191:    uart1TxHead = 0;
 29917   017716  6A1A               	clrf	_uart1TxHead^0,c	;volatile
 29918   017718                     l8379:
 29919                           
 29920                           ; BSR set to: 57
 29921                           ;mcc_generated_files/uart1.c: 193:   uart1TxBufferRemaining--;
 29922   017718  0618               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
 29923   01771A                     l8381:
 29924                           
 29925                           ; BSR set to: 57
 29926                           ;mcc_generated_files/uart1.c: 195:  PIE3bits.U1TXIE = 1;
 29927   01771A  8993               	bsf	147,4,b	;volatile
 29928                           
 29929                           ; BSR set to: 57
 29930   01771C  92BE               	bcf	190,1,c	;volatile
 29931                           
 29932                           ; BSR set to: 57
 29933                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
 29934   01771E  52E5               	movf	postdec1,f,c
 29935   017720  0012               	return		;funcret
 29936   017722                     __end_of_UART1_Write:
 29937                           	callstack 0
 29938                           
 29939 ;; *************** function _m_protocol *****************
 29940 ;; Defined at:
 29941 ;;		line 54 in file "gemsecs.c"
 29942 ;; Parameters:    Size  Location     Type
 29943 ;;  m_link          2  [STACK] PTR enum E17017
 29944 ;;		 -> V(387), 
 29945 ;; Auto vars:     Size  Location     Type
 29946 ;;  rxData          1  [STACK] unsigned char 
 29947 ;; Return value:  Size  Location     Type
 29948 ;;                  1  [STACK] enum E17295
 29949 ;; Registers used:
 29950 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 29951 ;; Tracked objects:
 29952 ;;		On entry : 0/3C
 29953 ;;		On exit  : 0/0
 29954 ;;		Unchanged: 0/0
 29955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29960 ;;Total ram usage:        0 bytes
 29961 ;; Hardware stack levels used: 1
 29962 ;; Hardware stack levels required when called: 14
 29963 ;; This function calls:
 29964 ;;		_StartTimer
 29965 ;;		_TimerDone
 29966 ;;		_UART1_Read
 29967 ;;		_UART1_is_rx_ready
 29968 ;;		_UART2_Read
 29969 ;;		_UART2_is_rx_ready
 29970 ;;		_WaitMs
 29971 ;;		_run_checksum
 29972 ;;		_secs_II_monitor_message
 29973 ;;		_secs_gem_state
 29974 ;; This function is called by:
 29975 ;;		_main
 29976 ;; This function uses a reentrant model
 29977 ;;
 29978                           
 29979                           	psect	text19
 29980   0120D4                     __ptext19:
 29981                           	callstack 0
 29982   0120D4                     _m_protocol:
 29983                           	callstack 0
 29984                           
 29985                           ; BSR set to: 57
 29986                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29987   0120D4  52E6               	movf	postinc1,f,c
 29988                           
 29989                           ;gemsecs.c: 54: LINK_STATES m_protocol(LINK_STATES *m_link);gemsecs.c: 55: {;gemsecs.c: 
      +                          56:  uint8_t rxData;;gemsecs.c: 57:  static uint8_t rxData_l = 0, *b_block = (uint8_t*) 
      +                          & H254[0];;gemsecs.c: 59:  switch (*m_link) {
 29990                           
 29991                           ;incstack = 0
 29992   0120D6  D324               	goto	l13595
 29993   0120D8                     l13365:
 29994                           
 29995                           ;gemsecs.c: 64:   if (UART1_is_rx_ready()) {
 29996   0120D8  EC70  F0C0         	call	_UART1_is_rx_ready	;wreg free
 29997   0120DC  5022               	movf	btemp^0,w,c
 29998   0120DE  B4D8               	btfsc	status,2,c
 29999   0120E0  D028               	goto	l13379
 30000                           
 30001                           ;gemsecs.c: 65:    rxData = UART1_Read();
 30002   0120E2  ECEE  F0BB         	call	_UART1_Read	;wreg free
 30003                           
 30004                           ;stkvar	_rxData @ sp[(-1)+0]
 30005   0120E6  0EFF               	movlw	-1
 30006   0120E8  0060  F08B  FFE3   	movff	btemp,plusw1
 30007                           
 30008                           ; BSR set to: 57
 30009                           ;gemsecs.c: 66:    if (rxData == 0x05) {
 30010                           ;stkvar	_rxData @ sp[(-1)+0]
 30011   0120EE  0EFF               	movlw	-1
 30012   0120F0  006F FF8C  F022    	movff	plusw1,btemp
 30013   0120F6  0E05               	movlw	5
 30014   0120F8  1822               	xorwf	btemp^0,w,c
 30015   0120FA  A4D8               	btfss	status,2,c
 30016   0120FC  D01A               	goto	l13379
 30017                           
 30018                           ; BSR set to: 57
 30019                           ;gemsecs.c: 68:     V.uart = 1;
 30020   0120FE  0E01               	movlw	1
 30021   012100  006F FFA0  FD97    	movff	wreg,_V+381	;volatile
 30022                           
 30023                           ; BSR set to: 57
 30024                           ;gemsecs.c: 69:     StartTimer(TMR_T2, 3000);
 30025   012106  0EB8               	movlw	184
 30026   012108  6EE6               	movwf	postinc1,c
 30027   01210A  0E0B               	movlw	11
 30028   01210C  6EE6               	movwf	postinc1,c
 30029   01210E  0E02               	movlw	2
 30030   012110  6EE6               	movwf	postinc1,c
 30031   012112  EC2A  F0BC         	call	_StartTimer	;wreg free
 30032                           
 30033                           ;gemsecs.c: 70:     V.error = LINK_ERROR_NONE;
 30034   012116  0E0A               	movlw	10
 30035   012118  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 30036                           
 30037                           ;gemsecs.c: 71:     *m_link = LINK_STATE_ENQ;
 30038                           ;stkvar	_m_link @ sp[(-1)+-2]
 30039   01211E  0EFD               	movlw	-3
 30040   012120  006F FF8F FFD9     	movff	plusw1,fsr2l
 30041   012126  0EFE               	movlw	-2
 30042   012128  006F FF8F FFDA     	movff	plusw1,fsr2h
 30043   01212E  0E01               	movlw	1
 30044   012130  6EDF               	movwf	indf2,c
 30045   012132                     l13379:
 30046                           
 30047                           ;gemsecs.c: 74:   if (UART2_is_rx_ready()) {
 30048   012132  EC6D  F0C0         	call	_UART2_is_rx_ready	;wreg free
 30049   012136  5022               	movf	btemp^0,w,c
 30050   012138  B4D8               	btfsc	status,2,c
 30051   01213A  D317               	goto	l13597
 30052                           
 30053                           ;gemsecs.c: 75:    rxData = UART2_Read();
 30054   01213C  ECD0  F0BB         	call	_UART2_Read	;wreg free
 30055                           
 30056                           ;stkvar	_rxData @ sp[(-1)+0]
 30057   012140  0EFF               	movlw	-1
 30058   012142  0060  F08B  FFE3   	movff	btemp,plusw1
 30059                           
 30060                           ; BSR set to: 57
 30061                           ;gemsecs.c: 76:    if (rxData == 0x05) {
 30062                           ;stkvar	_rxData @ sp[(-1)+0]
 30063   012148  0EFF               	movlw	-1
 30064   01214A  006F FF8C  F022    	movff	plusw1,btemp
 30065   012150  0E05               	movlw	5
 30066   012152  1822               	xorwf	btemp^0,w,c
 30067   012154  A4D8               	btfss	status,2,c
 30068   012156  D309               	goto	l13597
 30069                           
 30070                           ; BSR set to: 57
 30071                           ;gemsecs.c: 78:     V.uart = 2;
 30072   012158  0E02               	movlw	2
 30073   01215A  006F FFA0  FD97    	movff	wreg,_V+381	;volatile
 30074                           
 30075                           ; BSR set to: 57
 30076                           ;gemsecs.c: 79:     StartTimer(TMR_T2, 3000);
 30077   012160  0EB8               	movlw	184
 30078   012162  6EE6               	movwf	postinc1,c
 30079   012164  0E0B               	movlw	11
 30080   012166  6EE6               	movwf	postinc1,c
 30081   012168  0E02               	movlw	2
 30082   01216A  6EE6               	movwf	postinc1,c
 30083   01216C  EC2A  F0BC         	call	_StartTimer	;wreg free
 30084                           
 30085                           ;gemsecs.c: 80:     V.error = LINK_ERROR_NONE;
 30086   012170  0E0A               	movlw	10
 30087   012172  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 30088                           
 30089                           ;gemsecs.c: 81:     *m_link = LINK_STATE_ENQ;
 30090                           ;stkvar	_m_link @ sp[(-1)+-2]
 30091   012178  0EFD               	movlw	-3
 30092   01217A  006F FF8F FFD9     	movff	plusw1,fsr2l
 30093   012180  0EFE               	movlw	-2
 30094   012182  006F FF8F FFDA     	movff	plusw1,fsr2h
 30095   012188  0E01               	movlw	1
 30096   01218A  D29E               	goto	L25
 30097   01218C                     l1826:
 30098                           
 30099                           ;gemsecs.c: 86:   rxData_l = 0;
 30100   01218C  6A0C               	clrf	m_protocol@rxData_l^0,c
 30101                           
 30102                           ;gemsecs.c: 87:   if (TimerDone(TMR_T2)) {
 30103   01218E  0E02               	movlw	2
 30104   012190  6EE6               	movwf	postinc1,c
 30105   012192  ECD7  F0BE         	call	_TimerDone	;wreg free
 30106   012196  5022               	movf	btemp^0,w,c
 30107   012198  B4D8               	btfsc	status,2,c
 30108   01219A  D01E               	goto	l13403
 30109                           
 30110                           ;gemsecs.c: 88:    V.error = LINK_ERROR_T2;
 30111   01219C  0E0C               	movlw	12
 30112   01219E  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 30113                           
 30114                           ;gemsecs.c: 89:    V.all_errors++;
 30115   0121A4  EE23  F165         	lfsr	2,_V+331	;volatile
 30116   0121A8  2ADE               	incf	postinc2,f,c
 30117   0121AA  0E00               	movlw	0
 30118   0121AC  22DD               	addwfc	postdec2,f,c
 30119                           
 30120                           ;gemsecs.c: 90:    V.timer_error++;
 30121   0121AE  EE23  F15B         	lfsr	2,_V+321	;volatile
 30122   0121B2  2ADE               	incf	postinc2,f,c
 30123   0121B4  0E00               	movlw	0
 30124   0121B6  22DD               	addwfc	postdec2,f,c
 30125                           
 30126                           ;gemsecs.c: 91:    V.failed_receive = 2;
 30127   0121B8  EE23  F168         	lfsr	2,_V+334	;volatile
 30128   0121BC  50DF               	movf	223,w,c
 30129   0121BE  0BF0               	andlw	-16
 30130   0121C0  0902               	iorlw	2
 30131   0121C2  6EDF               	movwf	223,c
 30132                           
 30133                           ;gemsecs.c: 92:    *m_link = LINK_STATE_NAK;
 30134                           ;stkvar	_m_link @ sp[(-1)+-2]
 30135   0121C4  0EFD               	movlw	-3
 30136   0121C6  006F FF8F FFD9     	movff	plusw1,fsr2l
 30137   0121CC  0EFE               	movlw	-2
 30138   0121CE  006F FF8F FFDA     	movff	plusw1,fsr2h
 30139   0121D4  0E05               	movlw	5
 30140   0121D6  D278               	goto	L25
 30141   0121D8                     l13403:
 30142                           
 30143                           ;gemsecs.c: 110:    if (V.uart == 2 && UART1_is_rx_ready()) {
 30144   0121D8  0063  F65F  FFE8   	movff	_V+381,wreg	;volatile
 30145   0121DE  0A02               	xorlw	2
 30146   0121E0  A4D8               	btfss	status,2,c
 30147   0121E2  D029               	goto	l13417
 30148   0121E4  EC70  F0C0         	call	_UART1_is_rx_ready	;wreg free
 30149   0121E8  5022               	movf	btemp^0,w,c
 30150   0121EA  B4D8               	btfsc	status,2,c
 30151   0121EC  D024               	goto	l13417
 30152                           
 30153                           ;gemsecs.c: 111:     rxData = UART1_Read();
 30154   0121EE  ECEE  F0BB         	call	_UART1_Read	;wreg free
 30155                           
 30156                           ;stkvar	_rxData @ sp[(-1)+0]
 30157   0121F2  0EFF               	movlw	-1
 30158   0121F4  0060  F08B  FFE3   	movff	btemp,plusw1
 30159                           
 30160                           ; BSR set to: 57
 30161                           ;gemsecs.c: 112:     if (rxData == 0x04) {
 30162                           ;stkvar	_rxData @ sp[(-1)+0]
 30163   0121FA  0EFF               	movlw	-1
 30164   0121FC  006F FF8C  F022    	movff	plusw1,btemp
 30165   012202  0E04               	movlw	4
 30166   012204  1822               	xorwf	btemp^0,w,c
 30167   012206  A4D8               	btfss	status,2,c
 30168   012208  D016               	goto	l13417
 30169                           
 30170                           ; BSR set to: 57
 30171                           ;gemsecs.c: 113:      StartTimer(TMR_T2, 3000);
 30172   01220A  0EB8               	movlw	184
 30173   01220C  6EE6               	movwf	postinc1,c
 30174   01220E  0E0B               	movlw	11
 30175   012210  6EE6               	movwf	postinc1,c
 30176   012212  0E02               	movlw	2
 30177   012214  6EE6               	movwf	postinc1,c
 30178   012216  EC2A  F0BC         	call	_StartTimer	;wreg free
 30179                           
 30180                           ;gemsecs.c: 114:      V.error = LINK_ERROR_NONE;
 30181   01221A  0E0A               	movlw	10
 30182   01221C  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 30183                           
 30184                           ;gemsecs.c: 115:      *m_link = LINK_STATE_EOT;
 30185                           ;stkvar	_m_link @ sp[(-1)+-2]
 30186   012222  0EFD               	movlw	-3
 30187   012224  006F FF8F FFD9     	movff	plusw1,fsr2l
 30188   01222A  0EFE               	movlw	-2
 30189   01222C  006F FF8F FFDA     	movff	plusw1,fsr2h
 30190   012232  0E02               	movlw	2
 30191   012234  6EDF               	movwf	indf2,c
 30192   012236                     l13417:
 30193                           
 30194                           ;gemsecs.c: 118:    if (V.uart == 1 && UART2_is_rx_ready()) {
 30195   012236  0063  F65F  FFE8   	movff	_V+381,wreg	;volatile
 30196   01223C  0A01               	xorlw	1
 30197   01223E  A4D8               	btfss	status,2,c
 30198   012240  D294               	goto	l13597
 30199   012242  EC6D  F0C0         	call	_UART2_is_rx_ready	;wreg free
 30200   012246  5022               	movf	btemp^0,w,c
 30201   012248  B4D8               	btfsc	status,2,c
 30202   01224A  D28F               	goto	l13597
 30203                           
 30204                           ;gemsecs.c: 119:     rxData = UART2_Read();
 30205   01224C  ECD0  F0BB         	call	_UART2_Read	;wreg free
 30206                           
 30207                           ;stkvar	_rxData @ sp[(-1)+0]
 30208   012250  0EFF               	movlw	-1
 30209   012252  0060  F08B  FFE3   	movff	btemp,plusw1
 30210                           
 30211                           ; BSR set to: 57
 30212                           ;gemsecs.c: 120:     if (rxData == 0x04) {
 30213                           ;stkvar	_rxData @ sp[(-1)+0]
 30214   012258  0EFF               	movlw	-1
 30215   01225A  006F FF8C  F022    	movff	plusw1,btemp
 30216   012260  0E04               	movlw	4
 30217   012262  1822               	xorwf	btemp^0,w,c
 30218   012264  A4D8               	btfss	status,2,c
 30219   012266  D281               	goto	l13597
 30220                           
 30221                           ; BSR set to: 57
 30222                           ;gemsecs.c: 121:      StartTimer(TMR_T2, 3000);
 30223   012268  0EB8               	movlw	184
 30224   01226A  6EE6               	movwf	postinc1,c
 30225   01226C  0E0B               	movlw	11
 30226   01226E  6EE6               	movwf	postinc1,c
 30227   012270  0E02               	movlw	2
 30228   012272  6EE6               	movwf	postinc1,c
 30229   012274  EC2A  F0BC         	call	_StartTimer	;wreg free
 30230                           
 30231                           ;gemsecs.c: 122:      V.error = LINK_ERROR_NONE;
 30232   012278  0E0A               	movlw	10
 30233   01227A  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 30234                           
 30235                           ;gemsecs.c: 123:      *m_link = LINK_STATE_EOT;
 30236                           ;stkvar	_m_link @ sp[(-1)+-2]
 30237   012280  0EFD               	movlw	-3
 30238   012282  006F FF8F FFD9     	movff	plusw1,fsr2l
 30239   012288  0EFE               	movlw	-2
 30240   01228A  006F FF8F FFDA     	movff	plusw1,fsr2h
 30241   012290  0E02               	movlw	2
 30242   012292  D21A               	goto	L25
 30243   012294                     l13431:
 30244                           
 30245                           ;gemsecs.c: 130:   if (TimerDone(TMR_T2)) {
 30246   012294  0E02               	movlw	2
 30247   012296  6EE6               	movwf	postinc1,c
 30248   012298  ECD7  F0BE         	call	_TimerDone	;wreg free
 30249   01229C  5022               	movf	btemp^0,w,c
 30250   01229E  B4D8               	btfsc	status,2,c
 30251   0122A0  D00C               	goto	l13441
 30252                           
 30253                           ;gemsecs.c: 131:    V.error = LINK_ERROR_T2;
 30254   0122A2  0E0C               	movlw	12
 30255   0122A4  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 30256                           
 30257                           ;gemsecs.c: 132:    V.timer_error++;
 30258   0122AA  EE23  F15B         	lfsr	2,_V+321	;volatile
 30259   0122AE  2ADE               	incf	postinc2,f,c
 30260   0122B0  0E00               	movlw	0
 30261   0122B2  22DD               	addwfc	postdec2,f,c
 30262                           
 30263                           ;gemsecs.c: 133:    V.all_errors++;
 30264   0122B4  EE23  F165         	lfsr	2,_V+331	;volatile
 30265   0122B8  D77C               	goto	L23
 30266   0122BA                     l13441:
 30267                           
 30268                           ;gemsecs.c: 137:    if (V.uart == 1 && UART1_is_rx_ready()) {
 30269   0122BA  0063  F65F  FFE8   	movff	_V+381,wreg	;volatile
 30270   0122C0  0A01               	xorlw	1
 30271   0122C2  A4D8               	btfss	status,2,c
 30272   0122C4  D0D6               	goto	l13499
 30273   0122C6  EC70  F0C0         	call	_UART1_is_rx_ready	;wreg free
 30274   0122CA  5022               	movf	btemp^0,w,c
 30275   0122CC  B4D8               	btfsc	status,2,c
 30276   0122CE  D0D1               	goto	l13499
 30277                           
 30278                           ;gemsecs.c: 138:     rxData = UART1_Read();
 30279   0122D0  ECEE  F0BB         	call	_UART1_Read	;wreg free
 30280                           
 30281                           ;stkvar	_rxData @ sp[(-1)+0]
 30282   0122D4  0EFF               	movlw	-1
 30283   0122D6  0060  F08B  FFE3   	movff	btemp,plusw1
 30284                           
 30285                           ; BSR set to: 57
 30286                           ;gemsecs.c: 139:     if (rxData_l == 0) {
 30287   0122DC  500C               	movf	m_protocol@rxData_l^0,w,c
 30288   0122DE  A4D8               	btfss	status,2,c
 30289   0122E0  D018               	goto	l13457
 30290                           
 30291                           ; BSR set to: 57
 30292                           ;gemsecs.c: 140:      r_block.length = rxData;
 30293                           ;stkvar	_rxData @ sp[(-1)+0]
 30294   0122E2  0EFF               	movlw	-1
 30295   0122E4  006F FF8C  F086    	movff	plusw1,_r_block+12
 30296                           
 30297                           ; BSR set to: 57
 30298                           ;gemsecs.c: 141:      run_checksum(0, 1);
 30299   0122EA  0E01               	movlw	1
 30300   0122EC  6EE6               	movwf	postinc1,c
 30301   0122EE  0E00               	movlw	0
 30302   0122F0  6EE6               	movwf	postinc1,c
 30303   0122F2  EC6F  F0BD         	call	_run_checksum	;wreg free
 30304                           
 30305                           ; BSR set to: 0
 30306                           ;gemsecs.c: 142:      rxData_l++;
 30307   0122F6  2A0C               	incf	m_protocol@rxData_l^0,f,c
 30308                           
 30309                           ; BSR set to: 0
 30310                           ;gemsecs.c: 143:      b_block[sizeof(header254) - rxData_l] = rxData;
 30311                           ;stkvar	_rxData @ sp[(-1)+0]
 30312   0122F8  500C               	movf	m_protocol@rxData_l^0,w,c
 30313   0122FA  08D6               	sublw	low (_H254+257)
 30314   0122FC  6ED9               	movwf	fsr2l,c
 30315   0122FE  0E00               	movlw	0
 30316   012300  A0D8               	btfss	status,0,c
 30317   012302  2AE8               	incf	wreg,f,c
 30318   012304  080F               	sublw	high (_H254+257)
 30319   012306  6EDA               	movwf	fsr2h,c
 30320   012308  0EFF               	movlw	-1
 30321   01230A  006F FF8F FFDF     	movff	plusw1,indf2
 30322                           
 30323                           ;gemsecs.c: 144:     } else {
 30324   012310  D0B0               	goto	l13499
 30325   012312                     l13457:
 30326                           
 30327                           ; BSR set to: 57
 30328                           ;gemsecs.c: 148:      if (rxData_l <= sizeof(block10))
 30329   012312  0E0B               	movlw	11
 30330   012314  600C               	cpfslt	m_protocol@rxData_l^0,c
 30331   012316  D00C               	goto	l13461
 30332                           
 30333                           ; BSR set to: 57
 30334                           ;gemsecs.c: 149:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
 30335                           ;stkvar	_rxData @ sp[(-1)+0]
 30336   012318  500C               	movf	m_protocol@rxData_l^0,w,c
 30337   01231A  0819               	sublw	low (_H10+25)
 30338   01231C  6ED9               	movwf	fsr2l,c
 30339   01231E  0E00               	movlw	0
 30340   012320  A0D8               	btfss	status,0,c
 30341   012322  2AE8               	incf	wreg,f,c
 30342   012324  0801               	sublw	high (_H10+25)
 30343   012326  6EDA               	movwf	fsr2h,c
 30344   012328  0EFF               	movlw	-1
 30345   01232A  006F FF8F FFDF     	movff	plusw1,indf2
 30346   012330                     l13461:
 30347                           
 30348                           ; BSR set to: 57
 30349                           ;gemsecs.c: 150:      if (rxData_l <= r_block.length)
 30350   012330  500C               	movf	m_protocol@rxData_l^0,w,c
 30351   012332  0100               	movlb	0	; () banked
 30352   012334  5D86               	subwf	(_r_block+12)& (0+255),w,b
 30353   012336  A0D8               	btfss	status,0,c
 30354   012338  D00D               	goto	l13465
 30355                           
 30356                           ; BSR set to: 0
 30357                           ;gemsecs.c: 151:       V.r_checksum = run_checksum(rxData, 0);
 30358   01233A  0E00               	movlw	0
 30359   01233C  6EE6               	movwf	postinc1,c
 30360                           
 30361                           ;stkvar	_rxData @ sp[(-2)+0]
 30362   01233E  0EFE               	movlw	-2
 30363   012340  50E3               	movf	plusw1,w,c
 30364   012342  6EE6               	movwf	postinc1,c
 30365   012344  EC6F  F0BD         	call	_run_checksum	;wreg free
 30366   012348  0060  F088  FD55   	movff	btemp,_V+315	;volatile
 30367   01234E  0060  F08C  FD56   	movff	btemp+1,_V+316	;volatile
 30368   012354                     l13465:
 30369                           
 30370                           ; BSR set to: 0
 30371                           ;gemsecs.c: 153:      if (rxData_l == r_block.length + 1)
 30372   012354  500C               	movf	m_protocol@rxData_l^0,w,c
 30373   012356  6E2C               	movwf	(btemp+10)^0,c
 30374   012358  6A2D               	clrf	(btemp+11)^0,c
 30375   01235A  5186               	movf	(_r_block+12)& (0+255),w,b
 30376   01235C  6E2A               	movwf	(btemp+8)^0,c
 30377   01235E  6A2B               	clrf	(btemp+9)^0,c
 30378   012360  0E01               	movlw	1
 30379   012362  262A               	addwf	(btemp+8)^0,f,c
 30380   012364  0E00               	movlw	0
 30381   012366  222B               	addwfc	(btemp+9)^0,f,c
 30382   012368  502C               	movf	(btemp+10)^0,w,c
 30383   01236A  182A               	xorwf	(btemp+8)^0,w,c
 30384   01236C  E109               	bnz	l13469
 30385   01236E  502D               	movf	(btemp+11)^0,w,c
 30386   012370  182B               	xorwf	(btemp+9)^0,w,c
 30387   012372  A4D8               	btfss	status,2,c
 30388   012374  D005               	goto	l13469
 30389                           
 30390                           ; BSR set to: 0
 30391                           ;gemsecs.c: 154:       H10[1].checksum = (uint16_t) rxData << 8;
 30392                           ;stkvar	_rxData @ sp[(-1)+0]
 30393   012376  0EFF               	movlw	-1
 30394   012378  50E3               	movf	plusw1,w,c
 30395   01237A  0101               	movlb	1	; () banked
 30396   01237C  6F0E               	movwf	(_H10+14)& (0+255),b
 30397   01237E  6B0D               	clrf	(_H10+13)& (0+255),b
 30398   012380                     l13469:
 30399                           
 30400                           ;gemsecs.c: 155:      if (rxData_l == r_block.length + 2)
 30401   012380  500C               	movf	m_protocol@rxData_l^0,w,c
 30402   012382  6E2C               	movwf	(btemp+10)^0,c
 30403   012384  6A2D               	clrf	(btemp+11)^0,c
 30404   012386  0100               	movlb	0	; () banked
 30405   012388  5186               	movf	(_r_block+12)& (0+255),w,b
 30406   01238A  6E2A               	movwf	(btemp+8)^0,c
 30407   01238C  6A2B               	clrf	(btemp+9)^0,c
 30408   01238E  0E02               	movlw	2
 30409   012390  262A               	addwf	(btemp+8)^0,f,c
 30410   012392  0E00               	movlw	0
 30411   012394  222B               	addwfc	(btemp+9)^0,f,c
 30412   012396  502C               	movf	(btemp+10)^0,w,c
 30413   012398  182A               	xorwf	(btemp+8)^0,w,c
 30414   01239A  E10A               	bnz	l13473
 30415   01239C  502D               	movf	(btemp+11)^0,w,c
 30416   01239E  182B               	xorwf	(btemp+9)^0,w,c
 30417   0123A0  A4D8               	btfss	status,2,c
 30418   0123A2  D006               	goto	l13473
 30419                           
 30420                           ; BSR set to: 0
 30421                           ;gemsecs.c: 156:       H10[1].checksum += rxData;
 30422                           ;stkvar	_rxData @ sp[(-1)+0]
 30423   0123A4  0EFF               	movlw	-1
 30424   0123A6  50E3               	movf	plusw1,w,c
 30425   0123A8  0101               	movlb	1	; () banked
 30426   0123AA  270D               	addwf	(_H10+13)& (0+255),f,b
 30427   0123AC  0E00               	movlw	0
 30428   0123AE  230E               	addwfc	(_H10+14)& (0+255),f,b
 30429   0123B0                     l13473:
 30430                           
 30431                           ;gemsecs.c: 158:      rxData_l++;
 30432   0123B0  2A0C               	incf	m_protocol@rxData_l^0,f,c
 30433                           
 30434                           ;gemsecs.c: 159:      b_block[sizeof(header254) - rxData_l] = rxData;
 30435                           ;stkvar	_rxData @ sp[(-1)+0]
 30436   0123B2  500C               	movf	m_protocol@rxData_l^0,w,c
 30437   0123B4  08D6               	sublw	low (_H254+257)
 30438   0123B6  6ED9               	movwf	fsr2l,c
 30439   0123B8  0E00               	movlw	0
 30440   0123BA  A0D8               	btfss	status,0,c
 30441   0123BC  2AE8               	incf	wreg,f,c
 30442   0123BE  080F               	sublw	high (_H254+257)
 30443   0123C0  6EDA               	movwf	fsr2h,c
 30444   0123C2  0EFF               	movlw	-1
 30445   0123C4  006F FF8F FFDF     	movff	plusw1,indf2
 30446                           
 30447                           ;gemsecs.c: 160:      if (rxData_l > (r_block.length + 2)) {
 30448   0123CA  500C               	movf	m_protocol@rxData_l^0,w,c
 30449   0123CC  6E2C               	movwf	(btemp+10)^0,c
 30450   0123CE  6A2D               	clrf	(btemp+11)^0,c
 30451   0123D0  0100               	movlb	0	; () banked
 30452   0123D2  5186               	movf	(_r_block+12)& (0+255),w,b
 30453   0123D4  6E2A               	movwf	(btemp+8)^0,c
 30454   0123D6  6A2B               	clrf	(btemp+9)^0,c
 30455   0123D8  0E02               	movlw	2
 30456   0123DA  262A               	addwf	(btemp+8)^0,f,c
 30457   0123DC  0E00               	movlw	0
 30458   0123DE  222B               	addwfc	(btemp+9)^0,f,c
 30459   0123E0  502C               	movf	(btemp+10)^0,w,c
 30460   0123E2  5C2A               	subwf	(btemp+8)^0,w,c
 30461   0123E4  502B               	movf	(btemp+9)^0,w,c
 30462   0123E6  0A80               	xorlw	128
 30463   0123E8  6E22               	movwf	btemp^0,c
 30464   0123EA  502D               	movf	(btemp+11)^0,w,c
 30465   0123EC  0A80               	xorlw	128
 30466   0123EE  5822               	subwfb	btemp^0,w,c
 30467   0123F0  B0D8               	btfsc	status,0,c
 30468   0123F2  D03F               	goto	l13499
 30469                           
 30470                           ; BSR set to: 0
 30471                           ;gemsecs.c: 161:       if (V.r_checksum == H10[1].checksum) {
 30472   0123F4  EE23  F155         	lfsr	2,_V+315	;volatile
 30473   0123F8  0101               	movlb	1	; () banked
 30474   0123FA  510D               	movf	(_H10+13)& (0+255),w,b
 30475   0123FC  18DE               	xorwf	postinc2,w,c
 30476   0123FE  E110               	bnz	l13485
 30477   012400  510E               	movf	(_H10+14)& (0+255),w,b
 30478   012402  18DE               	xorwf	postinc2,w,c
 30479   012404  A4D8               	btfss	status,2,c
 30480   012406  D00C               	goto	l13485
 30481                           
 30482                           ; BSR set to: 1
 30483                           ;gemsecs.c: 162:        *m_link = LINK_STATE_ACK;
 30484                           ;stkvar	_m_link @ sp[(-1)+-2]
 30485   012408  0EFD               	movlw	-3
 30486   01240A  006F FF8F FFD9     	movff	plusw1,fsr2l
 30487   012410  0EFE               	movlw	-2
 30488   012412  006F FF8F FFDA     	movff	plusw1,fsr2h
 30489   012418  0E03               	movlw	3
 30490   01241A  D02A               	goto	L24
 30491   01241C                     l13483:
 30492   01241C  ECEE  F0BB         	call	_UART1_Read	;wreg free
 30493   012420                     l13485:
 30494                           
 30495                           ;gemsecs.c: 164:        while (UART1_is_rx_ready())
 30496   012420  EC70  F0C0         	call	_UART1_is_rx_ready	;wreg free
 30497   012424  5022               	movf	btemp^0,w,c
 30498   012426  A4D8               	btfss	status,2,c
 30499   012428  D7F9               	goto	l13483
 30500                           
 30501                           ;gemsecs.c: 166:        WaitMs(500);
 30502   01242A  0EF4               	movlw	244
 30503   01242C  6EE6               	movwf	postinc1,c
 30504   01242E  0E01               	movlw	1
 30505   012430  6EE6               	movwf	postinc1,c
 30506   012432  EC9F  F0BC         	call	_WaitMs	;wreg free
 30507                           
 30508                           ;gemsecs.c: 167:        V.error = LINK_ERROR_CHECKSUM;
 30509   012436  0E0F               	movlw	15
 30510   012438  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 30511                           
 30512                           ;gemsecs.c: 168:        V.checksum_error++;
 30513   01243E  EE23  F159         	lfsr	2,_V+319	;volatile
 30514   012442  2ADE               	incf	postinc2,f,c
 30515   012444  0E00               	movlw	0
 30516   012446  22DD               	addwfc	postdec2,f,c
 30517                           
 30518                           ;gemsecs.c: 169:        V.all_errors++;
 30519   012448  EE23  F165         	lfsr	2,_V+331	;volatile
 30520   01244C  2ADE               	incf	postinc2,f,c
 30521   01244E  0E00               	movlw	0
 30522   012450  22DD               	addwfc	postdec2,f,c
 30523                           
 30524                           ;gemsecs.c: 170:        V.failed_receive = 3;
 30525   012452  EE23  F168         	lfsr	2,_V+334	;volatile
 30526   012456  50DF               	movf	223,w,c
 30527   012458  0BF0               	andlw	-16
 30528   01245A  0903               	iorlw	3
 30529   01245C  6EDF               	movwf	223,c
 30530                           
 30531                           ;gemsecs.c: 171:        *m_link = LINK_STATE_NAK;
 30532                           ;stkvar	_m_link @ sp[(-1)+-2]
 30533   01245E  0EFD               	movlw	-3
 30534   012460  006F FF8F FFD9     	movff	plusw1,fsr2l
 30535   012466  0EFE               	movlw	-2
 30536   012468  006F FF8F FFDA     	movff	plusw1,fsr2h
 30537   01246E  0E05               	movlw	5
 30538   012470                     L24:
 30539   012470  6EDF               	movwf	indf2,c
 30540   012472                     l13499:
 30541                           
 30542                           ;gemsecs.c: 177:    if (V.uart == 2 && UART2_is_rx_ready()) {
 30543   012472  0063  F65F  FFE8   	movff	_V+381,wreg	;volatile
 30544   012478  0A02               	xorlw	2
 30545   01247A  A4D8               	btfss	status,2,c
 30546   01247C  D176               	goto	l13597
 30547   01247E  EC6D  F0C0         	call	_UART2_is_rx_ready	;wreg free
 30548   012482  5022               	movf	btemp^0,w,c
 30549   012484  B4D8               	btfsc	status,2,c
 30550   012486  D171               	goto	l13597
 30551                           
 30552                           ;gemsecs.c: 178:     rxData = UART2_Read();
 30553   012488  ECD0  F0BB         	call	_UART2_Read	;wreg free
 30554                           
 30555                           ;stkvar	_rxData @ sp[(-1)+0]
 30556   01248C  0EFF               	movlw	-1
 30557   01248E  0060  F08B  FFE3   	movff	btemp,plusw1
 30558                           
 30559                           ; BSR set to: 57
 30560                           ;gemsecs.c: 179:     if (rxData_l == 0) {
 30561   012494  500C               	movf	m_protocol@rxData_l^0,w,c
 30562   012496  A4D8               	btfss	status,2,c
 30563   012498  D018               	goto	l13515
 30564                           
 30565                           ; BSR set to: 57
 30566                           ;gemsecs.c: 180:      r_block.length = rxData;
 30567                           ;stkvar	_rxData @ sp[(-1)+0]
 30568   01249A  0EFF               	movlw	-1
 30569   01249C  006F FF8C  F086    	movff	plusw1,_r_block+12
 30570                           
 30571                           ; BSR set to: 57
 30572                           ;gemsecs.c: 181:      run_checksum(0, 1);
 30573   0124A2  0E01               	movlw	1
 30574   0124A4  6EE6               	movwf	postinc1,c
 30575   0124A6  0E00               	movlw	0
 30576   0124A8  6EE6               	movwf	postinc1,c
 30577   0124AA  EC6F  F0BD         	call	_run_checksum	;wreg free
 30578                           
 30579                           ; BSR set to: 0
 30580                           ;gemsecs.c: 182:      rxData_l++;
 30581   0124AE  2A0C               	incf	m_protocol@rxData_l^0,f,c
 30582                           
 30583                           ; BSR set to: 0
 30584                           ;gemsecs.c: 183:      b_block[sizeof(header254) - rxData_l] = rxData;
 30585                           ;stkvar	_rxData @ sp[(-1)+0]
 30586   0124B0  500C               	movf	m_protocol@rxData_l^0,w,c
 30587   0124B2  08D6               	sublw	low (_H254+257)
 30588   0124B4  6ED9               	movwf	fsr2l,c
 30589   0124B6  0E00               	movlw	0
 30590   0124B8  A0D8               	btfss	status,0,c
 30591   0124BA  2AE8               	incf	wreg,f,c
 30592   0124BC  080F               	sublw	high (_H254+257)
 30593   0124BE  6EDA               	movwf	fsr2h,c
 30594   0124C0  0EFF               	movlw	-1
 30595   0124C2  006F FF8F FFDF     	movff	plusw1,indf2
 30596                           
 30597                           ;gemsecs.c: 184:     } else {
 30598   0124C8  D150               	goto	l13597
 30599   0124CA                     l13515:
 30600                           
 30601                           ; BSR set to: 57
 30602                           ;gemsecs.c: 188:      if (rxData_l <= sizeof(block10))
 30603   0124CA  0E0B               	movlw	11
 30604   0124CC  600C               	cpfslt	m_protocol@rxData_l^0,c
 30605   0124CE  D00C               	goto	l13519
 30606                           
 30607                           ; BSR set to: 57
 30608                           ;gemsecs.c: 189:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
 30609                           ;stkvar	_rxData @ sp[(-1)+0]
 30610   0124D0  500C               	movf	m_protocol@rxData_l^0,w,c
 30611   0124D2  0819               	sublw	low (_H10+25)
 30612   0124D4  6ED9               	movwf	fsr2l,c
 30613   0124D6  0E00               	movlw	0
 30614   0124D8  A0D8               	btfss	status,0,c
 30615   0124DA  2AE8               	incf	wreg,f,c
 30616   0124DC  0801               	sublw	high (_H10+25)
 30617   0124DE  6EDA               	movwf	fsr2h,c
 30618   0124E0  0EFF               	movlw	-1
 30619   0124E2  006F FF8F FFDF     	movff	plusw1,indf2
 30620   0124E8                     l13519:
 30621                           
 30622                           ; BSR set to: 57
 30623                           ;gemsecs.c: 190:      if (rxData_l <= r_block.length)
 30624   0124E8  500C               	movf	m_protocol@rxData_l^0,w,c
 30625   0124EA  0100               	movlb	0	; () banked
 30626   0124EC  5D86               	subwf	(_r_block+12)& (0+255),w,b
 30627   0124EE  A0D8               	btfss	status,0,c
 30628   0124F0  D00D               	goto	l13523
 30629                           
 30630                           ; BSR set to: 0
 30631                           ;gemsecs.c: 191:       V.r_checksum = run_checksum(rxData, 0);
 30632   0124F2  0E00               	movlw	0
 30633   0124F4  6EE6               	movwf	postinc1,c
 30634                           
 30635                           ;stkvar	_rxData @ sp[(-2)+0]
 30636   0124F6  0EFE               	movlw	-2
 30637   0124F8  50E3               	movf	plusw1,w,c
 30638   0124FA  6EE6               	movwf	postinc1,c
 30639   0124FC  EC6F  F0BD         	call	_run_checksum	;wreg free
 30640   012500  0060  F088  FD55   	movff	btemp,_V+315	;volatile
 30641   012506  0060  F08C  FD56   	movff	btemp+1,_V+316	;volatile
 30642   01250C                     l13523:
 30643                           
 30644                           ; BSR set to: 0
 30645                           ;gemsecs.c: 193:      if (rxData_l == r_block.length + 1)
 30646   01250C  500C               	movf	m_protocol@rxData_l^0,w,c
 30647   01250E  6E2C               	movwf	(btemp+10)^0,c
 30648   012510  6A2D               	clrf	(btemp+11)^0,c
 30649   012512  5186               	movf	(_r_block+12)& (0+255),w,b
 30650   012514  6E2A               	movwf	(btemp+8)^0,c
 30651   012516  6A2B               	clrf	(btemp+9)^0,c
 30652   012518  0E01               	movlw	1
 30653   01251A  262A               	addwf	(btemp+8)^0,f,c
 30654   01251C  0E00               	movlw	0
 30655   01251E  222B               	addwfc	(btemp+9)^0,f,c
 30656   012520  502C               	movf	(btemp+10)^0,w,c
 30657   012522  182A               	xorwf	(btemp+8)^0,w,c
 30658   012524  E109               	bnz	l13527
 30659   012526  502D               	movf	(btemp+11)^0,w,c
 30660   012528  182B               	xorwf	(btemp+9)^0,w,c
 30661   01252A  A4D8               	btfss	status,2,c
 30662   01252C  D005               	goto	l13527
 30663                           
 30664                           ; BSR set to: 0
 30665                           ;gemsecs.c: 194:       H10[1].checksum = (uint16_t) rxData << 8;
 30666                           ;stkvar	_rxData @ sp[(-1)+0]
 30667   01252E  0EFF               	movlw	-1
 30668   012530  50E3               	movf	plusw1,w,c
 30669   012532  0101               	movlb	1	; () banked
 30670   012534  6F0E               	movwf	(_H10+14)& (0+255),b
 30671   012536  6B0D               	clrf	(_H10+13)& (0+255),b
 30672   012538                     l13527:
 30673                           
 30674                           ;gemsecs.c: 195:      if (rxData_l == r_block.length + 2)
 30675   012538  500C               	movf	m_protocol@rxData_l^0,w,c
 30676   01253A  6E2C               	movwf	(btemp+10)^0,c
 30677   01253C  6A2D               	clrf	(btemp+11)^0,c
 30678   01253E  0100               	movlb	0	; () banked
 30679   012540  5186               	movf	(_r_block+12)& (0+255),w,b
 30680   012542  6E2A               	movwf	(btemp+8)^0,c
 30681   012544  6A2B               	clrf	(btemp+9)^0,c
 30682   012546  0E02               	movlw	2
 30683   012548  262A               	addwf	(btemp+8)^0,f,c
 30684   01254A  0E00               	movlw	0
 30685   01254C  222B               	addwfc	(btemp+9)^0,f,c
 30686   01254E  502C               	movf	(btemp+10)^0,w,c
 30687   012550  182A               	xorwf	(btemp+8)^0,w,c
 30688   012552  E10A               	bnz	l13531
 30689   012554  502D               	movf	(btemp+11)^0,w,c
 30690   012556  182B               	xorwf	(btemp+9)^0,w,c
 30691   012558  A4D8               	btfss	status,2,c
 30692   01255A  D006               	goto	l13531
 30693                           
 30694                           ; BSR set to: 0
 30695                           ;gemsecs.c: 196:       H10[1].checksum += rxData;
 30696                           ;stkvar	_rxData @ sp[(-1)+0]
 30697   01255C  0EFF               	movlw	-1
 30698   01255E  50E3               	movf	plusw1,w,c
 30699   012560  0101               	movlb	1	; () banked
 30700   012562  270D               	addwf	(_H10+13)& (0+255),f,b
 30701   012564  0E00               	movlw	0
 30702   012566  230E               	addwfc	(_H10+14)& (0+255),f,b
 30703   012568                     l13531:
 30704                           
 30705                           ;gemsecs.c: 198:      rxData_l++;
 30706   012568  2A0C               	incf	m_protocol@rxData_l^0,f,c
 30707                           
 30708                           ;gemsecs.c: 199:      b_block[sizeof(header254) - rxData_l] = rxData;
 30709                           ;stkvar	_rxData @ sp[(-1)+0]
 30710   01256A  500C               	movf	m_protocol@rxData_l^0,w,c
 30711   01256C  08D6               	sublw	low (_H254+257)
 30712   01256E  6ED9               	movwf	fsr2l,c
 30713   012570  0E00               	movlw	0
 30714   012572  A0D8               	btfss	status,0,c
 30715   012574  2AE8               	incf	wreg,f,c
 30716   012576  080F               	sublw	high (_H254+257)
 30717   012578  6EDA               	movwf	fsr2h,c
 30718   01257A  0EFF               	movlw	-1
 30719   01257C  006F FF8F FFDF     	movff	plusw1,indf2
 30720                           
 30721                           ;gemsecs.c: 200:      if (rxData_l > (r_block.length + 2)) {
 30722   012582  500C               	movf	m_protocol@rxData_l^0,w,c
 30723   012584  6E2C               	movwf	(btemp+10)^0,c
 30724   012586  6A2D               	clrf	(btemp+11)^0,c
 30725   012588  0100               	movlb	0	; () banked
 30726   01258A  5186               	movf	(_r_block+12)& (0+255),w,b
 30727   01258C  6E2A               	movwf	(btemp+8)^0,c
 30728   01258E  6A2B               	clrf	(btemp+9)^0,c
 30729   012590  0E02               	movlw	2
 30730   012592  262A               	addwf	(btemp+8)^0,f,c
 30731   012594  0E00               	movlw	0
 30732   012596  222B               	addwfc	(btemp+9)^0,f,c
 30733   012598  502C               	movf	(btemp+10)^0,w,c
 30734   01259A  5C2A               	subwf	(btemp+8)^0,w,c
 30735   01259C  502B               	movf	(btemp+9)^0,w,c
 30736   01259E  0A80               	xorlw	128
 30737   0125A0  6E22               	movwf	btemp^0,c
 30738   0125A2  502D               	movf	(btemp+11)^0,w,c
 30739   0125A4  0A80               	xorlw	128
 30740   0125A6  5822               	subwfb	btemp^0,w,c
 30741   0125A8  B0D8               	btfsc	status,0,c
 30742   0125AA  D0DF               	goto	l13597
 30743                           
 30744                           ; BSR set to: 0
 30745                           ;gemsecs.c: 201:       if (V.r_checksum == H10[1].checksum) {
 30746   0125AC  EE23  F155         	lfsr	2,_V+315	;volatile
 30747   0125B0  0101               	movlb	1	; () banked
 30748   0125B2  510D               	movf	(_H10+13)& (0+255),w,b
 30749   0125B4  18DE               	xorwf	postinc2,w,c
 30750   0125B6  E110               	bnz	l13543
 30751   0125B8  510E               	movf	(_H10+14)& (0+255),w,b
 30752   0125BA  18DE               	xorwf	postinc2,w,c
 30753   0125BC  A4D8               	btfss	status,2,c
 30754   0125BE  D00C               	goto	l13543
 30755                           
 30756                           ; BSR set to: 1
 30757                           ;gemsecs.c: 202:        *m_link = LINK_STATE_ACK;
 30758                           ;stkvar	_m_link @ sp[(-1)+-2]
 30759   0125C0  0EFD               	movlw	-3
 30760   0125C2  006F FF8F FFD9     	movff	plusw1,fsr2l
 30761   0125C8  0EFE               	movlw	-2
 30762   0125CA  006F FF8F FFDA     	movff	plusw1,fsr2h
 30763   0125D0  0E03               	movlw	3
 30764   0125D2  D07A               	goto	L25
 30765   0125D4                     l13541:
 30766   0125D4  ECD0  F0BB         	call	_UART2_Read	;wreg free
 30767   0125D8                     l13543:
 30768                           
 30769                           ;gemsecs.c: 204:        while (UART2_is_rx_ready())
 30770   0125D8  EC6D  F0C0         	call	_UART2_is_rx_ready	;wreg free
 30771   0125DC  5022               	movf	btemp^0,w,c
 30772   0125DE  A4D8               	btfss	status,2,c
 30773   0125E0  D7F9               	goto	l13541
 30774                           
 30775                           ;gemsecs.c: 206:        WaitMs(500);
 30776   0125E2  0EF4               	movlw	244
 30777   0125E4  6EE6               	movwf	postinc1,c
 30778   0125E6  0E01               	movlw	1
 30779   0125E8  6EE6               	movwf	postinc1,c
 30780   0125EA  EC9F  F0BC         	call	_WaitMs	;wreg free
 30781                           
 30782                           ;gemsecs.c: 207:        V.error = LINK_ERROR_CHECKSUM;
 30783   0125EE  0E0F               	movlw	15
 30784   0125F0  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 30785                           
 30786                           ;gemsecs.c: 208:        V.checksum_error++;
 30787   0125F6  EE23  F159         	lfsr	2,_V+319	;volatile
 30788   0125FA  2ADE               	incf	postinc2,f,c
 30789   0125FC  0E00               	movlw	0
 30790   0125FE  22DD               	addwfc	postdec2,f,c
 30791                           
 30792                           ;gemsecs.c: 209:        V.all_errors++;
 30793   012600  EE23  F165         	lfsr	2,_V+331	;volatile
 30794   012604  2ADE               	incf	postinc2,f,c
 30795   012606  0E00               	movlw	0
 30796   012608  22DD               	addwfc	postdec2,f,c
 30797                           
 30798                           ;gemsecs.c: 210:        V.failed_receive = 4;
 30799   01260A  EE23  F168         	lfsr	2,_V+334	;volatile
 30800   01260E  50DF               	movf	223,w,c
 30801   012610  0BF0               	andlw	-16
 30802   012612  0904               	iorlw	4
 30803   012614  D5D6               	goto	L26
 30804   012616                     l13557:
 30805                           
 30806                           ;gemsecs.c: 222:   V.stream = H10[1].block.block.stream;
 30807   012616  0101               	movlb	1	; () banked
 30808   012618  5116               	movf	(_H10+22)& (0+255),w,b
 30809   01261A  0B7F               	andlw	127
 30810   01261C  6E2D               	movwf	(btemp+11)^0,c
 30811   01261E  0060  F0B4  FD4D   	movff	btemp+11,_V+307	;volatile
 30812                           
 30813                           ; BSR set to: 1
 30814                           ;gemsecs.c: 223:   V.function = H10[1].block.block.function;
 30815   012624  EE23  F14E         	lfsr	2,_V+308	;volatile
 30816   012628  0060  F457  FFDF   	movff	_H10+21,indf2
 30817                           
 30818                           ; BSR set to: 1
 30819                           ;gemsecs.c: 224:   V.systemb = H10[1].block.block.systemb;
 30820   01262E  EE20  F10F         	lfsr	2,_H10+15
 30821   012632  006F FF78  FD45    	movff	postinc2,_V+299	;volatile
 30822   012638  006F FF78  FD46    	movff	postinc2,_V+300	;volatile
 30823   01263E  006F FF78  FD47    	movff	postinc2,_V+301	;volatile
 30824   012644  006F FF74  FD48    	movff	postdec2,_V+302	;volatile
 30825                           
 30826                           ; BSR set to: 1
 30827                           ;gemsecs.c: 225:   V.rbit = H10[1].block.block.rbit;
 30828   01264A  EE23  F167         	lfsr	2,_V+333	;volatile
 30829   01264E  BF18               	btfsc	(_H10+24)& (0+255),7,b
 30830   012650  D002               	bra	u9985
 30831   012652  90DF               	bcf	indf2,0,c
 30832   012654  D001               	bra	u9986
 30833   012656                     u9985:
 30834   012656  80DF               	bsf	indf2,0,c
 30835   012658                     u9986:
 30836                           
 30837                           ;gemsecs.c: 226:   V.wbit = H10[1].block.block.wbit;
 30838   012658  EE23  F167         	lfsr	2,_V+333	;volatile
 30839   01265C  0101               	movlb	1	; () banked
 30840   01265E  BF16               	btfsc	(_H10+22)& (0+255),7,b
 30841   012660  D002               	bra	u9995
 30842   012662  92DF               	bcf	indf2,1,c
 30843   012664  D001               	bra	u9996
 30844   012666                     u9995:
 30845   012666  82DF               	bsf	indf2,1,c
 30846   012668                     u9996:
 30847                           
 30848                           ;gemsecs.c: 227:   V.ebit = H10[1].block.block.ebit;
 30849   012668  EE23  F167         	lfsr	2,_V+333	;volatile
 30850   01266C  0101               	movlb	1	; () banked
 30851   01266E  BF14               	btfsc	(_H10+20)& (0+255),7,b
 30852   012670  D002               	bra	u10005
 30853   012672  94DF               	bcf	indf2,2,c
 30854   012674  D001               	bra	u10006
 30855   012676                     u10005:
 30856   012676  84DF               	bsf	indf2,2,c
 30857   012678                     u10006:
 30858                           
 30859                           ;gemsecs.c: 228:   V.failed_receive = 0;
 30860   012678  EE23  F168         	lfsr	2,_V+334	;volatile
 30861   01267C  0EF0               	movlw	-16
 30862   01267E  16DF               	andwf	223,f,c
 30863                           
 30864                           ;gemsecs.c: 229:   secs_II_monitor_message(V.stream, V.function, 1000);
 30865   012680  0EE8               	movlw	232
 30866   012682  6EE6               	movwf	postinc1,c
 30867   012684  0E03               	movlw	3
 30868   012686  6EE6               	movwf	postinc1,c
 30869   012688  EE23  F14E         	lfsr	2,_V+308	;volatile
 30870   01268C  50DF               	movf	indf2,w,c
 30871   01268E  6EE6               	movwf	postinc1,c
 30872   012690  EE23  F14D         	lfsr	2,_V+307	;volatile
 30873   012694  50DF               	movf	indf2,w,c
 30874   012696  6EE6               	movwf	postinc1,c
 30875   012698  EC9B  F0AF         	call	_secs_II_monitor_message	;wreg free
 30876                           
 30877                           ;gemsecs.c: 230:   V.g_state = secs_gem_state(V.stream, V.function);
 30878   01269C  EE23  F14E         	lfsr	2,_V+308	;volatile
 30879   0126A0  50DF               	movf	indf2,w,c
 30880   0126A2  6EE6               	movwf	postinc1,c
 30881   0126A4  EE23  F14D         	lfsr	2,_V+307	;volatile
 30882   0126A8  50DF               	movf	indf2,w,c
 30883   0126AA  6EE6               	movwf	postinc1,c
 30884   0126AC  EC33  F0A8         	call	_secs_gem_state	;wreg free
 30885   0126B0  0060  F088  FC1C   	movff	btemp,_V+2	;volatile
 30886                           
 30887                           ;gemsecs.c: 231:   *m_link = LINK_STATE_DONE;
 30888                           ;stkvar	_m_link @ sp[(-1)+-2]
 30889   0126B6  0EFD               	movlw	-3
 30890   0126B8  006F FF8F FFD9     	movff	plusw1,fsr2l
 30891   0126BE  0EFE               	movlw	-2
 30892   0126C0  006F FF8F FFDA     	movff	plusw1,fsr2h
 30893   0126C6  0E04               	movlw	4
 30894   0126C8                     L25:
 30895   0126C8  6EDF               	movwf	indf2,c
 30896                           
 30897                           ;gemsecs.c: 234:   break;
 30898   0126CA  D04F               	goto	l13597
 30899   0126CC                     l13577:
 30900                           
 30901                           ;gemsecs.c: 236:   *m_link = LINK_STATE_ERROR;
 30902                           ;stkvar	_m_link @ sp[(-1)+-2]
 30903   0126CC  0EFD               	movlw	-3
 30904   0126CE  006F FF8F FFD9     	movff	plusw1,fsr2l
 30905   0126D4  0EFE               	movlw	-2
 30906   0126D6  006F FF8F FFDA     	movff	plusw1,fsr2h
 30907   0126DC  0E06               	movlw	6
 30908   0126DE  6EDF               	movwf	indf2,c
 30909                           
 30910                           ;gemsecs.c: 237:   V.all_errors++;
 30911   0126E0  EE23  F165         	lfsr	2,_V+331	;volatile
 30912   0126E4  2ADE               	incf	postinc2,f,c
 30913   0126E6  0E00               	movlw	0
 30914   0126E8  22DD               	addwfc	postdec2,f,c
 30915                           
 30916                           ;gemsecs.c: 238:   while ((uart1RxCount)) {
 30917   0126EA  D002               	goto	l13583
 30918   0126EC                     l13581:
 30919                           
 30920                           ;gemsecs.c: 239:    UART1_Read();
 30921   0126EC  ECEE  F0BB         	call	_UART1_Read	;wreg free
 30922   0126F0                     l13583:
 30923                           
 30924                           ;gemsecs.c: 238:   while ((uart1RxCount)) {
 30925   0126F0  5015               	movf	_uart1RxCount^0,w,c	;volatile
 30926   0126F2  B4D8               	btfsc	status,2,c
 30927   0126F4  D003               	goto	l13587
 30928   0126F6  D7FA               	goto	l13581
 30929   0126F8                     l13585:
 30930                           
 30931                           ;gemsecs.c: 242:    UART2_Read();
 30932   0126F8  ECD0  F0BB         	call	_UART2_Read	;wreg free
 30933   0126FC                     l13587:
 30934                           
 30935                           ;gemsecs.c: 241:   while ((uart2RxCount)) {
 30936   0126FC  500F               	movf	_uart2RxCount^0,w,c	;volatile
 30937   0126FE  B4D8               	btfsc	status,2,c
 30938   012700  D034               	goto	l13597
 30939   012702  D7FA               	goto	l13585
 30940   012704                     l13589:
 30941                           
 30942                           ;gemsecs.c: 248:   V.failed_receive = 0;
 30943   012704  EE23  F168         	lfsr	2,_V+334	;volatile
 30944   012708  0EF0               	movlw	-16
 30945   01270A  16DF               	andwf	223,f,c
 30946   01270C                     l13591:
 30947                           
 30948                           ;gemsecs.c: 252:   *m_link = LINK_STATE_IDLE;
 30949                           ;stkvar	_m_link @ sp[(-1)+-2]
 30950   01270C  0EFD               	movlw	-3
 30951   01270E  006F FF8F FFD9     	movff	plusw1,fsr2l
 30952   012714  0EFE               	movlw	-2
 30953   012716  006F FF8F FFDA     	movff	plusw1,fsr2h
 30954   01271C  6ADF               	clrf	indf2,c
 30955                           
 30956                           ;gemsecs.c: 253:   break;
 30957   01271E  D025               	goto	l13597
 30958   012720                     l13595:
 30959                           
 30960                           ;stkvar	_m_link @ sp[(-1)+-2]
 30961   012720  0EFD               	movlw	-3
 30962   012722  006F FF8F FFD9     	movff	plusw1,fsr2l
 30963   012728  0EFE               	movlw	-2
 30964   01272A  006F FF8F FFDA     	movff	plusw1,fsr2h
 30965   012730  50DF               	movf	indf2,w,c
 30966   012732  6E2C               	movwf	(btemp+10)^0,c
 30967   012734  6A2D               	clrf	(btemp+11)^0,c
 30968                           
 30969                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30970                           ; Switch size 1, requested type "simple"
 30971                           ; Number of cases is 1, Range of values is 0 to 0
 30972                           ; switch strategies available:
 30973                           ; Name         Instructions Cycles
 30974                           ; simple_byte            4     3 (average)
 30975                           ;	Chosen strategy is simple_byte
 30976   012736  502D               	movf	(btemp+11)^0,w,c
 30977   012738  0A00               	xorlw	0	; case 0
 30978   01273A  A4D8               	btfss	status,2,c
 30979   01273C  D7E7               	goto	l13591
 30980                           
 30981                           ; Switch size 1, requested type "simple"
 30982                           ; Number of cases is 7, Range of values is 0 to 6
 30983                           ; switch strategies available:
 30984                           ; Name         Instructions Cycles
 30985                           ; simple_byte           22    12 (average)
 30986                           ;	Chosen strategy is simple_byte
 30987   01273E  502C               	movf	(btemp+10)^0,w,c
 30988   012740  0A00               	xorlw	0	; case 0
 30989   012742  B4D8               	btfsc	status,2,c
 30990   012744  D4C9               	goto	l13365
 30991   012746  0A01               	xorlw	1	; case 1
 30992   012748  B4D8               	btfsc	status,2,c
 30993   01274A  D520               	goto	l1826
 30994   01274C  0A03               	xorlw	3	; case 2
 30995   01274E  B4D8               	btfsc	status,2,c
 30996   012750  D5A1               	goto	l13431
 30997   012752  0A01               	xorlw	1	; case 3
 30998   012754  B4D8               	btfsc	status,2,c
 30999   012756  D75F               	goto	l13557
 31000   012758  0A07               	xorlw	7	; case 4
 31001   01275A  B4D8               	btfsc	status,2,c
 31002   01275C  D7D3               	goto	l13589
 31003   01275E  0A01               	xorlw	1	; case 5
 31004   012760  B4D8               	btfsc	status,2,c
 31005   012762  D7B4               	goto	l13577
 31006   012764  0A03               	xorlw	3	; case 6
 31007   012766  A4D8               	btfss	status,2,c
 31008   012768  D7D1               	goto	l13591
 31009   01276A                     l13597:
 31010                           
 31011                           ;gemsecs.c: 256:  return *m_link;
 31012                           ;stkvar	_m_link @ sp[(-1)+-2]
 31013   01276A  0EFD               	movlw	-3
 31014   01276C  006F FF8F FFD9     	movff	plusw1,fsr2l
 31015   012772  0EFE               	movlw	-2
 31016   012774  006F FF8F FFDA     	movff	plusw1,fsr2h
 31017   01277A  50DF               	movf	indf2,w,c
 31018   01277C  6E22               	movwf	btemp^0,c
 31019                           
 31020                           ; _m_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
 31021   01277E  52E5               	movf	postdec1,f,c
 31022   012780  52E5               	movf	postdec1,f,c
 31023   012782  52E5               	movf	postdec1,f,c
 31024   012784  0012               	return		;funcret
 31025   012786                     __end_of_m_protocol:
 31026                           	callstack 0
 31027                           
 31028 ;; *************** function _secs_gem_state *****************
 31029 ;; Defined at:
 31030 ;;		line 1308 in file "gemsecs.c"
 31031 ;; Parameters:    Size  Location     Type
 31032 ;;  stream          1  [STACK] const unsigned char 
 31033 ;;  function        1  [STACK] const unsigned char 
 31034 ;; Auto vars:     Size  Location     Type
 31035 ;;		None
 31036 ;; Return value:  Size  Location     Type
 31037 ;;                  1  [STACK] enum E17003
 31038 ;; Registers used:
 31039 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 31040 ;; Tracked objects:
 31041 ;;		On entry : 0/1
 31042 ;;		On exit  : 0/0
 31043 ;;		Unchanged: 0/0
 31044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31049 ;;Total ram usage:        0 bytes
 31050 ;; Hardware stack levels used: 1
 31051 ;; Hardware stack levels required when called: 13
 31052 ;; This function calls:
 31053 ;;		_StartTimer
 31054 ;;		_TimerDone
 31055 ;;		_format_display_text
 31056 ;;		_sequence_messages
 31057 ;;		_set_display_info
 31058 ;;		_terminal_format
 31059 ;; This function is called by:
 31060 ;;		_m_protocol
 31061 ;;		_r_protocol
 31062 ;; This function uses a reentrant model
 31063 ;;
 31064                           
 31065                           	psect	text20
 31066   015066                     __ptext20:
 31067                           	callstack 0
 31068   015066                     _secs_gem_state:
 31069                           	callstack 16
 31070                           
 31071                           ;gemsecs.c: 1308: GEM_STATES secs_gem_state(const uint8_t stream, const uint8_t function
      +                          );gemsecs.c: 1309: {;gemsecs.c: 1310:  static GEM_STATES block = GEM_STATE_DISABLE;;gems
      +                          ecs.c: 1311:  static GEM_EQUIP equipment = GEM_GENERIC;;gemsecs.c: 1313:  switch (stream
      +                          ) {
 31072                           
 31073                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31074                           ;incstack = 0
 31075   015066  D0C3               	goto	l12607
 31076   015068                     l12503:
 31077                           
 31078                           ;gemsecs.c: 1320:    if (block != GEM_STATE_REMOTE) {
 31079   015068  0E04               	movlw	4
 31080   01506A  1808               	xorwf	secs_gem_state@block^0,w,c
 31081   01506C  B4D8               	btfsc	status,2,c
 31082   01506E  D030               	goto	l12523
 31083                           
 31084                           ;gemsecs.c: 1321:     if (TimerDone(TMR_HBIO)) {
 31085   015070  0E06               	movlw	6
 31086   015072  6EE6               	movwf	postinc1,c
 31087   015074  ECD7  F0BE         	call	_TimerDone	;wreg free
 31088   015078  5022               	movf	btemp^0,w,c
 31089   01507A  B4D8               	btfsc	status,2,c
 31090   01507C  D008               	goto	l12509
 31091                           
 31092                           ;gemsecs.c: 1322:      StartTimer(TMR_HBIO, 30000);
 31093   01507E  0E30               	movlw	48
 31094   015080  6EE6               	movwf	postinc1,c
 31095   015082  0E75               	movlw	117
 31096   015084  6EE6               	movwf	postinc1,c
 31097   015086  0E06               	movlw	6
 31098   015088  6EE6               	movwf	postinc1,c
 31099   01508A  EC2A  F0BC         	call	_StartTimer	;wreg free
 31100   01508E                     l12509:
 31101                           
 31102                           ;gemsecs.c: 1324:     terminal_format(display_online);
 31103   01508E  0E01               	movlw	1
 31104   015090  6EE6               	movwf	postinc1,c
 31105   015092  ECCD  F0A2         	call	_terminal_format	;wreg free
 31106                           
 31107                           ; BSR set to: 1
 31108                           ;gemsecs.c: 1325:     format_display_text(V.terminal);
 31109   015096  0E61               	movlw	low (_V+71)
 31110   015098  6EE6               	movwf	postinc1,c
 31111   01509A  0E0C               	movlw	high (_V+71)
 31112   01509C  6EE6               	movwf	postinc1,c
 31113   01509E  ECFC  F0AB         	call	_format_display_text	;wreg free
 31114                           
 31115                           ;gemsecs.c: 1326:     V.response.mesgid = 1;
 31116   0150A2  0E01               	movlw	1
 31117   0150A4  006F FFA0  FD8A    	movff	wreg,_V+368	;volatile
 31118                           
 31119                           ;gemsecs.c: 1327:     V.sequences++;
 31120   0150AA  EE23  F163         	lfsr	2,_V+329	;volatile
 31121   0150AE  2ADE               	incf	postinc2,f,c
 31122   0150B0  0E00               	movlw	0
 31123   0150B2  22DD               	addwfc	postdec2,f,c
 31124                           
 31125                           ;gemsecs.c: 1328:     V.sid = 10;
 31126   0150B4  0E0A               	movlw	10
 31127   0150B6  006F FFA0  FD99    	movff	wreg,_V+383	;volatile
 31128                           
 31129                           ;gemsecs.c: 1329:     sequence_messages(V.sid);
 31130   0150BC  EE23  F199         	lfsr	2,_V+383	;volatile
 31131   0150C0  50DF               	movf	indf2,w,c
 31132   0150C2  6EE6               	movwf	postinc1,c
 31133   0150C4  EC63  F09D         	call	_sequence_messages	;wreg free
 31134                           
 31135                           ;gemsecs.c: 1330:     set_display_info(DIS_SEQUENCE_M);
 31136   0150C8  0E08               	movlw	8
 31137   0150CA  6EE6               	movwf	postinc1,c
 31138   0150CC  EC54  F0BF         	call	_set_display_info	;wreg free
 31139   0150D0                     l12523:
 31140                           
 31141                           ;gemsecs.c: 1333:    block = GEM_STATE_REMOTE;
 31142   0150D0  0E04               	movlw	4
 31143   0150D2                     L29:
 31144   0150D2  6E08               	movwf	secs_gem_state@block^0,c
 31145   0150D4                     l12525:
 31146                           
 31147                           ;gemsecs.c: 1334:    V.ticker = 0;
 31148   0150D4  0E00               	movlw	0
 31149   0150D6  D087               	goto	L30
 31150   0150D8                     l12527:
 31151                           
 31152                           ;gemsecs.c: 1342:      equipment = GEM_VII80;
 31153   0150D8  0E01               	movlw	1
 31154   0150DA  D00A               	goto	L28
 31155   0150DC                     l2258:
 31156                           
 31157                           ;gemsecs.c: 1345:      equipment = GEM_GENERIC;
 31158   0150DC  6A07               	clrf	secs_gem_state@equipment^0,c
 31159                           
 31160                           ;gemsecs.c: 1346:      break;
 31161   0150DE  D01E               	goto	l12543
 31162   0150E0                     l12531:
 31163   0150E0  EE23  F16F         	lfsr	2,_V+341	;volatile
 31164   0150E4  50DF               	movf	indf2,w,c
 31165                           
 31166                           ; Switch size 1, requested type "simple"
 31167                           ; Number of cases is 1, Range of values is 73 to 73
 31168                           ; switch strategies available:
 31169                           ; Name         Instructions Cycles
 31170                           ; simple_byte            4     3 (average)
 31171                           ;	Chosen strategy is simple_byte
 31172   0150E6  0A49               	xorlw	73	; case 73
 31173   0150E8  B4D8               	btfsc	status,2,c
 31174   0150EA  D7F6               	goto	l12527
 31175   0150EC  D7F7               	goto	l2258
 31176   0150EE                     l12533:
 31177                           
 31178                           ;gemsecs.c: 1353:      equipment = GEM_E220;
 31179   0150EE  0E02               	movlw	2
 31180   0150F0                     L28:
 31181   0150F0  6E07               	movwf	secs_gem_state@equipment^0,c
 31182                           
 31183                           ;gemsecs.c: 1354:      break;
 31184   0150F2  D014               	goto	l12543
 31185   0150F4                     l12537:
 31186   0150F4  EE23  F16F         	lfsr	2,_V+341	;volatile
 31187   0150F8  50DF               	movf	indf2,w,c
 31188                           
 31189                           ; Switch size 1, requested type "simple"
 31190                           ; Number of cases is 2, Range of values is 50 to 53
 31191                           ; switch strategies available:
 31192                           ; Name         Instructions Cycles
 31193                           ; simple_byte            7     4 (average)
 31194                           ;	Chosen strategy is simple_byte
 31195   0150FA  0A32               	xorlw	50	; case 50
 31196   0150FC  B4D8               	btfsc	status,2,c
 31197   0150FE  D7F7               	goto	l12533
 31198   015100  0A07               	xorlw	7	; case 53
 31199   015102  B4D8               	btfsc	status,2,c
 31200   015104  D7F4               	goto	l12533
 31201   015106  D7EA               	goto	l2258
 31202   015108                     l12541:
 31203   015108  EE23  F16E         	lfsr	2,_V+340	;volatile
 31204   01510C  50DF               	movf	indf2,w,c
 31205                           
 31206                           ; Switch size 1, requested type "simple"
 31207                           ; Number of cases is 2, Range of values is 69 to 86
 31208                           ; switch strategies available:
 31209                           ; Name         Instructions Cycles
 31210                           ; simple_byte            7     4 (average)
 31211                           ;	Chosen strategy is simple_byte
 31212   01510E  0A45               	xorlw	69	; case 69
 31213   015110  B4D8               	btfsc	status,2,c
 31214   015112  D7F0               	goto	l12537
 31215   015114  0A13               	xorlw	19	; case 86
 31216   015116  B4D8               	btfsc	status,2,c
 31217   015118  D7E3               	goto	l12531
 31218   01511A  D7E0               	goto	l2258
 31219   01511C                     l12543:
 31220                           
 31221                           ;gemsecs.c: 1365:    if (block != GEM_STATE_REMOTE) {
 31222   01511C  0E04               	movlw	4
 31223   01511E  1808               	xorwf	secs_gem_state@block^0,w,c
 31224   015120  B4D8               	btfsc	status,2,c
 31225   015122  D7D8               	goto	l12525
 31226                           
 31227                           ;gemsecs.c: 1366:     terminal_format(display_online);
 31228   015124  0E01               	movlw	1
 31229   015126  6EE6               	movwf	postinc1,c
 31230   015128  ECCD  F0A2         	call	_terminal_format	;wreg free
 31231                           
 31232                           ; BSR set to: 1
 31233                           ;gemsecs.c: 1367:     format_display_text(V.terminal);
 31234   01512C  0E61               	movlw	low (_V+71)
 31235   01512E  6EE6               	movwf	postinc1,c
 31236   015130  0E0C               	movlw	high (_V+71)
 31237   015132  6EE6               	movwf	postinc1,c
 31238   015134  ECFC  F0AB         	call	_format_display_text	;wreg free
 31239                           
 31240                           ;gemsecs.c: 1368:     V.response.mesgid = 1;
 31241   015138  0E01               	movlw	1
 31242   01513A  006F FFA0  FD8A    	movff	wreg,_V+368	;volatile
 31243                           
 31244                           ;gemsecs.c: 1369:     V.sequences++;
 31245   015140  EE23  F163         	lfsr	2,_V+329	;volatile
 31246   015144  2ADE               	incf	postinc2,f,c
 31247   015146  0E00               	movlw	0
 31248   015148  22DD               	addwfc	postdec2,f,c
 31249                           
 31250                           ;gemsecs.c: 1370:     V.sid = 11;
 31251   01514A  0E0B               	movlw	11
 31252   01514C  006F FFA0  FD99    	movff	wreg,_V+383	;volatile
 31253                           
 31254                           ;gemsecs.c: 1371:     sequence_messages(V.sid);
 31255   015152  EE23  F199         	lfsr	2,_V+383	;volatile
 31256   015156  50DF               	movf	indf2,w,c
 31257   015158  6EE6               	movwf	postinc1,c
 31258   01515A  EC63  F09D         	call	_sequence_messages	;wreg free
 31259                           
 31260                           ;gemsecs.c: 1372:     set_display_info(DIS_SEQUENCE_M);
 31261   01515E  0E08               	movlw	8
 31262   015160  6EE6               	movwf	postinc1,c
 31263   015162  EC54  F0BF         	call	_set_display_info	;wreg free
 31264                           
 31265                           ;gemsecs.c: 1373:     block = GEM_STATE_COMM;
 31266   015166  0E01               	movlw	1
 31267   015168  D7B4               	goto	L29
 31268   01516A                     l12563:
 31269                           
 31270                           ;gemsecs.c: 1378:    if (block != GEM_STATE_REMOTE)
 31271   01516A  0E04               	movlw	4
 31272   01516C  1808               	xorwf	secs_gem_state@block^0,w,c
 31273   01516E  B4D8               	btfsc	status,2,c
 31274   015170  D002               	goto	l12567
 31275   015172                     u9070:
 31276                           
 31277                           ;gemsecs.c: 1379:     block = GEM_STATE_COMM;
 31278   015172  0E01               	movlw	1
 31279   015174  6E08               	movwf	secs_gem_state@block^0,c
 31280   015176                     l12567:
 31281                           
 31282                           ;gemsecs.c: 1380:    V.ticker = 15;
 31283   015176  0E0F               	movlw	15
 31284   015178  D036               	goto	L30
 31285   01517A                     l12569:
 31286                           
 31287                           ;gemsecs.c: 1386:    block = GEM_STATE_OFFLINE;
 31288   01517A  0E02               	movlw	2
 31289   01517C  D7AA               	goto	L29
 31290   01517E                     l12573:
 31291                           
 31292                           ;gemsecs.c: 1393:    block = GEM_STATE_ONLINE;
 31293   01517E  0E03               	movlw	3
 31294   015180  D7A8               	goto	L29
 31295   015182                     l12577:
 31296                           
 31297                           ;gemsecs.c: 1397:    if (block == GEM_STATE_DISABLE) {
 31298   015182  5008               	movf	secs_gem_state@block^0,w,c
 31299   015184  B4D8               	btfsc	status,2,c
 31300   015186  D7F5               	goto	u9070
 31301   015188  D03E               	goto	l12609
 31302   01518A                     l12585:
 31303                           
 31304                           ;stkvar	_function @ sp[(0)+-2]
 31305   01518A  0EFE               	movlw	-2
 31306   01518C  50E3               	movf	plusw1,w,c
 31307                           
 31308                           ; Switch size 1, requested type "simple"
 31309                           ; Number of cases is 5, Range of values is 2 to 18
 31310                           ; switch strategies available:
 31311                           ; Name         Instructions Cycles
 31312                           ; simple_byte           16     9 (average)
 31313                           ;	Chosen strategy is simple_byte
 31314   01518E  0A02               	xorlw	2	; case 2
 31315   015190  B4D8               	btfsc	status,2,c
 31316   015192  D76A               	goto	l12503
 31317   015194  0A0F               	xorlw	15	; case 13
 31318   015196  B4D8               	btfsc	status,2,c
 31319   015198  D7B7               	goto	l12541
 31320   01519A  0A03               	xorlw	3	; case 14
 31321   01519C  B4D8               	btfsc	status,2,c
 31322   01519E  D7E5               	goto	l12563
 31323   0151A0  0A1E               	xorlw	30	; case 16
 31324   0151A2  B4D8               	btfsc	status,2,c
 31325   0151A4  D7EA               	goto	l12569
 31326   0151A6  0A02               	xorlw	2	; case 18
 31327   0151A8  B4D8               	btfsc	status,2,c
 31328   0151AA  D7E9               	goto	l12573
 31329   0151AC  D7EA               	goto	l12577
 31330   0151AE                     l12587:
 31331                           
 31332                           ;gemsecs.c: 1407:    V.alarm = function;
 31333                           ;stkvar	_function @ sp[(0)+-2]
 31334   0151AE  0EFE               	movlw	-2
 31335   0151B0  006F FF8C  F02D    	movff	plusw1,btemp+11
 31336   0151B6  0060  F0B4  FD53   	movff	btemp+11,_V+313	;volatile
 31337                           
 31338                           ;gemsecs.c: 1408:    break;
 31339   0151BC  D024               	goto	l12609
 31340   0151BE                     l12591:
 31341                           
 31342                           ;gemsecs.c: 1414:    V.alarm = function;
 31343                           ;stkvar	_function @ sp[(0)+-2]
 31344   0151BE  0EFE               	movlw	-2
 31345   0151C0  006F FF8C  F02D    	movff	plusw1,btemp+11
 31346   0151C6  0060  F0B4  FD53   	movff	btemp+11,_V+313	;volatile
 31347                           
 31348                           ;gemsecs.c: 1415:    if (V.ticker != 45)
 31349   0151CC  0063  F66F  FFE8   	movff	_V+385,wreg	;volatile
 31350   0151D2  0A2D               	xorlw	45
 31351   0151D4  A4D8               	btfss	status,2,c
 31352   0151D6  D7CF               	goto	l12567
 31353   0151D8  D016               	goto	l12609
 31354   0151DA                     l12599:
 31355                           
 31356                           ;gemsecs.c: 1421:   if (block == GEM_STATE_DISABLE) {
 31357   0151DA  5008               	movf	secs_gem_state@block^0,w,c
 31358   0151DC  A4D8               	btfss	status,2,c
 31359   0151DE  D013               	goto	l12609
 31360                           
 31361                           ;gemsecs.c: 1422:    block = GEM_STATE_COMM;
 31362   0151E0  0E01               	movlw	1
 31363   0151E2  6E08               	movwf	secs_gem_state@block^0,c
 31364                           
 31365                           ;gemsecs.c: 1423:    V.ticker = 45;
 31366   0151E4  0E2D               	movlw	45
 31367   0151E6                     L30:
 31368   0151E6  006F FFA0  FD9B    	movff	wreg,_V+385	;volatile
 31369   0151EC  D00C               	goto	l12609
 31370   0151EE                     l12607:
 31371                           
 31372                           ;stkvar	_stream @ sp[(0)+-1]
 31373   0151EE  0EFF               	movlw	-1
 31374   0151F0  50E3               	movf	plusw1,w,c
 31375                           
 31376                           ; Switch size 1, requested type "simple"
 31377                           ; Number of cases is 3, Range of values is 1 to 9
 31378                           ; switch strategies available:
 31379                           ; Name         Instructions Cycles
 31380                           ; simple_byte           10     6 (average)
 31381                           ;	Chosen strategy is simple_byte
 31382   0151F2  0A01               	xorlw	1	; case 1
 31383   0151F4  B4D8               	btfsc	status,2,c
 31384   0151F6  D7C9               	goto	l12585
 31385   0151F8  0A04               	xorlw	4	; case 5
 31386   0151FA  B4D8               	btfsc	status,2,c
 31387   0151FC  D7D8               	goto	l12587
 31388   0151FE  0A0C               	xorlw	12	; case 9
 31389   015200  B4D8               	btfsc	status,2,c
 31390   015202  D7DD               	goto	l12591
 31391   015204  D7EA               	goto	l12599
 31392   015206                     l12609:
 31393                           
 31394                           ;gemsecs.c: 1428:  V.e_types = equipment;
 31395   015206  EE23  F01D         	lfsr	2,_V+3	;volatile
 31396   01520A  0060  F01F  FFDF   	movff	secs_gem_state@equipment,indf2
 31397                           
 31398                           ;gemsecs.c: 1429:  return(block);
 31399   015210  C008  F022         	movff	secs_gem_state@block,btemp
 31400                           
 31401                           ; _secs_gem_state: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2
      +                          , argsize = 2, vargsize = 0
 31402   015214  52E5               	movf	postdec1,f,c
 31403   015216  52E5               	movf	postdec1,f,c
 31404   015218  0012               	return		;funcret
 31405   01521A                     __end_of_secs_gem_state:
 31406                           	callstack 0
 31407                           
 31408 ;; *************** function _terminal_format *****************
 31409 ;; Defined at:
 31410 ;;		line 651 in file "gemsecs.c"
 31411 ;; Parameters:    Size  Location     Type
 31412 ;;  t_format        1  [STACK] enum E17472
 31413 ;; Auto vars:     Size  Location     Type
 31414 ;;		None
 31415 ;; Return value:  Size  Location     Type
 31416 ;;                  1  [STACK] void 
 31417 ;; Registers used:
 31418 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 31419 ;; Tracked objects:
 31420 ;;		On entry : 0/0
 31421 ;;		On exit  : 3F/1
 31422 ;;		Unchanged: 0/0
 31423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31428 ;;Total ram usage:        0 bytes
 31429 ;; Hardware stack levels used: 1
 31430 ;; Hardware stack levels required when called: 12
 31431 ;; This function calls:
 31432 ;;		_sprintf
 31433 ;; This function is called by:
 31434 ;;		_secs_II_message
 31435 ;;		_secs_gem_state
 31436 ;; This function uses a reentrant model
 31437 ;;
 31438                           
 31439                           	psect	text21
 31440   01459A                     __ptext21:
 31441                           	callstack 0
 31442   01459A                     _terminal_format:
 31443                           	callstack 16
 31444                           
 31445                           ;gemsecs.c: 651: void terminal_format(DISPLAY_TYPES t_format);gemsecs.c: 652: {;gemsecs.
      +                          c: 653:  switch (t_format) {
 31446                           
 31447                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31448                           ;incstack = 0
 31449   01459A  D11C               	goto	l12215
 31450   01459C                     l12205:
 31451                           
 31452                           ;gemsecs.c: 655:   sprintf(V.terminal, msg0,
 31453   01459C  0EEF               	movlw	low STR_3
 31454   01459E  6EE6               	movwf	postinc1,c
 31455   0145A0  0EFF               	movlw	high STR_3
 31456   0145A2  6EE6               	movwf	postinc1,c
 31457   0145A4  EE23  F159         	lfsr	2,_V+319	;volatile
 31458   0145A8  006F FF78  F02C    	movff	postinc2,btemp+10
 31459   0145AE  006F FF74  F02D    	movff	postdec2,btemp+11
 31460   0145B4  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 31461   0145BA  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 31462   0145C0  EE23  F167         	lfsr	2,_V+333	;volatile
 31463   0145C4  38DF               	swapf	223,w,c
 31464   0145C6  0B0F               	andlw	15
 31465   0145C8  6EE6               	movwf	postinc1,c
 31466   0145CA  0E00               	movlw	0
 31467   0145CC  6EE6               	movwf	postinc1,c
 31468   0145CE  EE23  F020         	lfsr	2,_V+6	;volatile
 31469   0145D2  50DF               	movf	indf2,w,c
 31470   0145D4  6EE6               	movwf	postinc1,c
 31471   0145D6  0E00               	movlw	0
 31472   0145D8  6EE6               	movwf	postinc1,c
 31473   0145DA  EE23  F168         	lfsr	2,_V+334	;volatile
 31474   0145DE  50DF               	movf	223,w,c
 31475   0145E0  0B0F               	andlw	15
 31476   0145E2  6EE6               	movwf	postinc1,c
 31477   0145E4  0E00               	movlw	0
 31478   0145E6  6EE6               	movwf	postinc1,c
 31479   0145E8  EE23  F01F         	lfsr	2,_V+5	;volatile
 31480   0145EC  50DF               	movf	indf2,w,c
 31481   0145EE  6EE6               	movwf	postinc1,c
 31482   0145F0  0E00               	movlw	0
 31483   0145F2  6EE6               	movwf	postinc1,c
 31484   0145F4  EE23  F165         	lfsr	2,_V+331	;volatile
 31485   0145F8  006F FF78  F02C    	movff	postinc2,btemp+10
 31486   0145FE  006F FF74  F02D    	movff	postdec2,btemp+11
 31487   014604  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 31488   01460A  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 31489   014610  0E77               	movlw	low _msg0
 31490   014612  6EE6               	movwf	postinc1,c
 31491   014614  0EFB               	movlw	high _msg0
 31492   014616  6EE6               	movwf	postinc1,c
 31493   014618  0E61               	movlw	low (_V+71)
 31494   01461A  6EE6               	movwf	postinc1,c
 31495   01461C  0E0C               	movlw	high (_V+71)
 31496   01461E  6EE6               	movwf	postinc1,c
 31497   014620  0E12               	movlw	18
 31498   014622  6EE6               	movwf	postinc1,c
 31499   014624  EC32  F0B2         	call	_sprintf	;wreg free
 31500                           
 31501                           ;gemsecs.c: 657:   break;
 31502   014628  D0E8               	goto	l2010
 31503   01462A                     l12207:
 31504                           
 31505                           ;gemsecs.c: 659:   sprintf(V.terminal, msg1,
 31506   01462A  0EEF               	movlw	low STR_3
 31507   01462C  6EE6               	movwf	postinc1,c
 31508   01462E  0EFF               	movlw	high STR_3
 31509   014630  6EE6               	movwf	postinc1,c
 31510   014632  EE23  F159         	lfsr	2,_V+319	;volatile
 31511   014636  006F FF78  F02C    	movff	postinc2,btemp+10
 31512   01463C  006F FF74  F02D    	movff	postdec2,btemp+11
 31513   014642  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 31514   014648  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 31515   01464E  EE23  F167         	lfsr	2,_V+333	;volatile
 31516   014652  38DF               	swapf	223,w,c
 31517   014654  0B0F               	andlw	15
 31518   014656  6EE6               	movwf	postinc1,c
 31519   014658  0E00               	movlw	0
 31520   01465A  6EE6               	movwf	postinc1,c
 31521   01465C  EE23  F020         	lfsr	2,_V+6	;volatile
 31522   014660  50DF               	movf	indf2,w,c
 31523   014662  6EE6               	movwf	postinc1,c
 31524   014664  0E00               	movlw	0
 31525   014666  6EE6               	movwf	postinc1,c
 31526   014668  EE23  F168         	lfsr	2,_V+334	;volatile
 31527   01466C  50DF               	movf	223,w,c
 31528   01466E  0B0F               	andlw	15
 31529   014670  6EE6               	movwf	postinc1,c
 31530   014672  0E00               	movlw	0
 31531   014674  6EE6               	movwf	postinc1,c
 31532   014676  EE23  F01F         	lfsr	2,_V+5	;volatile
 31533   01467A  50DF               	movf	indf2,w,c
 31534   01467C  6EE6               	movwf	postinc1,c
 31535   01467E  0E00               	movlw	0
 31536   014680  6EE6               	movwf	postinc1,c
 31537   014682  EE23  F165         	lfsr	2,_V+331	;volatile
 31538   014686  006F FF78  F02C    	movff	postinc2,btemp+10
 31539   01468C  006F FF74  F02D    	movff	postdec2,btemp+11
 31540   014692  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 31541   014698  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 31542   01469E  0ED0               	movlw	low _msg1
 31543   0146A0  6EE6               	movwf	postinc1,c
 31544   0146A2  0EFB               	movlw	high _msg1
 31545   0146A4  6EE6               	movwf	postinc1,c
 31546   0146A6  0E61               	movlw	low (_V+71)
 31547   0146A8  6EE6               	movwf	postinc1,c
 31548   0146AA  0E0C               	movlw	high (_V+71)
 31549   0146AC  6EE6               	movwf	postinc1,c
 31550   0146AE  0E12               	movlw	18
 31551   0146B0  6EE6               	movwf	postinc1,c
 31552   0146B2  EC32  F0B2         	call	_sprintf	;wreg free
 31553                           
 31554                           ;gemsecs.c: 661:   break;
 31555   0146B6  D0A1               	goto	l2010
 31556   0146B8                     l12209:
 31557                           
 31558                           ;gemsecs.c: 663:   sprintf(V.terminal, msg2,
 31559   0146B8  0EEF               	movlw	low STR_3
 31560   0146BA  6EE6               	movwf	postinc1,c
 31561   0146BC  0EFF               	movlw	high STR_3
 31562   0146BE  6EE6               	movwf	postinc1,c
 31563   0146C0  EE23  F159         	lfsr	2,_V+319	;volatile
 31564   0146C4  006F FF78  F02C    	movff	postinc2,btemp+10
 31565   0146CA  006F FF74  F02D    	movff	postdec2,btemp+11
 31566   0146D0  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 31567   0146D6  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 31568   0146DC  EE23  F167         	lfsr	2,_V+333	;volatile
 31569   0146E0  38DF               	swapf	223,w,c
 31570   0146E2  0B0F               	andlw	15
 31571   0146E4  6EE6               	movwf	postinc1,c
 31572   0146E6  0E00               	movlw	0
 31573   0146E8  6EE6               	movwf	postinc1,c
 31574   0146EA  EE23  F020         	lfsr	2,_V+6	;volatile
 31575   0146EE  50DF               	movf	indf2,w,c
 31576   0146F0  6EE6               	movwf	postinc1,c
 31577   0146F2  0E00               	movlw	0
 31578   0146F4  6EE6               	movwf	postinc1,c
 31579   0146F6  EE23  F168         	lfsr	2,_V+334	;volatile
 31580   0146FA  50DF               	movf	223,w,c
 31581   0146FC  0B0F               	andlw	15
 31582   0146FE  6EE6               	movwf	postinc1,c
 31583   014700  0E00               	movlw	0
 31584   014702  6EE6               	movwf	postinc1,c
 31585   014704  EE23  F01F         	lfsr	2,_V+5	;volatile
 31586   014708  50DF               	movf	indf2,w,c
 31587   01470A  6EE6               	movwf	postinc1,c
 31588   01470C  0E00               	movlw	0
 31589   01470E  6EE6               	movwf	postinc1,c
 31590   014710  EE23  F165         	lfsr	2,_V+331	;volatile
 31591   014714  006F FF78  F02C    	movff	postinc2,btemp+10
 31592   01471A  006F FF74  F02D    	movff	postdec2,btemp+11
 31593   014720  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 31594   014726  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 31595   01472C  0E28               	movlw	low _msg2
 31596   01472E  6EE6               	movwf	postinc1,c
 31597   014730  0EFC               	movlw	high _msg2
 31598   014732  6EE6               	movwf	postinc1,c
 31599   014734  0E61               	movlw	low (_V+71)
 31600   014736  6EE6               	movwf	postinc1,c
 31601   014738  0E0C               	movlw	high (_V+71)
 31602   01473A  6EE6               	movwf	postinc1,c
 31603   01473C  0E12               	movlw	18
 31604   01473E  6EE6               	movwf	postinc1,c
 31605   014740  EC32  F0B2         	call	_sprintf	;wreg free
 31606                           
 31607                           ;gemsecs.c: 665:   break;
 31608   014744  D05A               	goto	l2010
 31609   014746                     l12211:
 31610                           
 31611                           ;gemsecs.c: 667:   sprintf(V.terminal, msg99,
 31612   014746  0EEF               	movlw	low STR_3
 31613   014748  6EE6               	movwf	postinc1,c
 31614   01474A  0EFF               	movlw	high STR_3
 31615   01474C  6EE6               	movwf	postinc1,c
 31616   01474E  EE23  F159         	lfsr	2,_V+319	;volatile
 31617   014752  006F FF78  F02C    	movff	postinc2,btemp+10
 31618   014758  006F FF74  F02D    	movff	postdec2,btemp+11
 31619   01475E  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 31620   014764  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 31621   01476A  EE23  F167         	lfsr	2,_V+333	;volatile
 31622   01476E  38DF               	swapf	223,w,c
 31623   014770  0B0F               	andlw	15
 31624   014772  6EE6               	movwf	postinc1,c
 31625   014774  0E00               	movlw	0
 31626   014776  6EE6               	movwf	postinc1,c
 31627   014778  EE23  F020         	lfsr	2,_V+6	;volatile
 31628   01477C  50DF               	movf	indf2,w,c
 31629   01477E  6EE6               	movwf	postinc1,c
 31630   014780  0E00               	movlw	0
 31631   014782  6EE6               	movwf	postinc1,c
 31632   014784  EE23  F168         	lfsr	2,_V+334	;volatile
 31633   014788  50DF               	movf	223,w,c
 31634   01478A  0B0F               	andlw	15
 31635   01478C  6EE6               	movwf	postinc1,c
 31636   01478E  0E00               	movlw	0
 31637   014790  6EE6               	movwf	postinc1,c
 31638   014792  EE23  F01F         	lfsr	2,_V+5	;volatile
 31639   014796  50DF               	movf	indf2,w,c
 31640   014798  6EE6               	movwf	postinc1,c
 31641   01479A  0E00               	movlw	0
 31642   01479C  6EE6               	movwf	postinc1,c
 31643   01479E  EE23  F165         	lfsr	2,_V+331	;volatile
 31644   0147A2  006F FF78  F02C    	movff	postinc2,btemp+10
 31645   0147A8  006F FF74  F02D    	movff	postdec2,btemp+11
 31646   0147AE  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 31647   0147B4  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 31648   0147BA  0E7E               	movlw	low _msg99
 31649   0147BC  6EE6               	movwf	postinc1,c
 31650   0147BE  0EFC               	movlw	high _msg99
 31651   0147C0  6EE6               	movwf	postinc1,c
 31652   0147C2  0E61               	movlw	low (_V+71)
 31653   0147C4  6EE6               	movwf	postinc1,c
 31654   0147C6  0E0C               	movlw	high (_V+71)
 31655   0147C8  6EE6               	movwf	postinc1,c
 31656   0147CA  0E12               	movlw	18
 31657   0147CC  6EE6               	movwf	postinc1,c
 31658   0147CE  EC32  F0B2         	call	_sprintf	;wreg free
 31659                           
 31660                           ;gemsecs.c: 669:   break;
 31661   0147D2  D013               	goto	l2010
 31662   0147D4                     l12215:
 31663                           
 31664                           ;stkvar	_t_format @ sp[(0)+-1]
 31665   0147D4  0EFF               	movlw	-1
 31666   0147D6  50E3               	movf	plusw1,w,c
 31667   0147D8  6E2C               	movwf	(btemp+10)^0,c
 31668   0147DA  6A2D               	clrf	(btemp+11)^0,c
 31669                           
 31670                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31671                           ; Switch size 1, requested type "simple"
 31672                           ; Number of cases is 1, Range of values is 0 to 0
 31673                           ; switch strategies available:
 31674                           ; Name         Instructions Cycles
 31675                           ; simple_byte            4     3 (average)
 31676                           ;	Chosen strategy is simple_byte
 31677   0147DC  502D               	movf	(btemp+11)^0,w,c
 31678   0147DE  0A00               	xorlw	0	; case 0
 31679   0147E0  A4D8               	btfss	status,2,c
 31680   0147E2  D7B1               	goto	l12211
 31681                           
 31682                           ; Switch size 1, requested type "simple"
 31683                           ; Number of cases is 3, Range of values is 0 to 2
 31684                           ; switch strategies available:
 31685                           ; Name         Instructions Cycles
 31686                           ; simple_byte           10     6 (average)
 31687                           ;	Chosen strategy is simple_byte
 31688   0147E4  502C               	movf	(btemp+10)^0,w,c
 31689   0147E6  0A00               	xorlw	0	; case 0
 31690   0147E8  B4D8               	btfsc	status,2,c
 31691   0147EA  D6D8               	goto	l12205
 31692   0147EC  0A01               	xorlw	1	; case 1
 31693   0147EE  B4D8               	btfsc	status,2,c
 31694   0147F0  D71C               	goto	l12207
 31695   0147F2  0A03               	xorlw	3	; case 2
 31696   0147F4  B4D8               	btfsc	status,2,c
 31697   0147F6  D760               	goto	l12209
 31698   0147F8  D7A6               	goto	l12211
 31699   0147FA                     l2010:
 31700                           
 31701                           ; BSR set to: 1
 31702                           ; _terminal_format: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
 31703   0147FA  52E5               	movf	postdec1,f,c
 31704   0147FC  0012               	return		;funcret
 31705   0147FE                     __end_of_terminal_format:
 31706                           	callstack 0
 31707                           
 31708 ;; *************** function _sequence_messages *****************
 31709 ;; Defined at:
 31710 ;;		line 587 in file "gemsecs.c"
 31711 ;; Parameters:    Size  Location     Type
 31712 ;;  sid             1  [STACK] const unsigned char 
 31713 ;; Auto vars:     Size  Location     Type
 31714 ;;		None
 31715 ;; Return value:  Size  Location     Type
 31716 ;;                  1  [STACK] _Bool 
 31717 ;; Registers used:
 31718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, t
      +blptrh, tblptru, prodl, prodh
 31719 ;; Tracked objects:
 31720 ;;		On entry : 0/0
 31721 ;;		On exit  : 0/0
 31722 ;;		Unchanged: 0/0
 31723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31728 ;;Total ram usage:        0 bytes
 31729 ;; Hardware stack levels used: 1
 31730 ;; Hardware stack levels required when called: 4
 31731 ;; This function calls:
 31732 ;;		_StartTimer
 31733 ;; This function is called by:
 31734 ;;		_secs_II_message
 31735 ;;		_secs_gem_state
 31736 ;; This function uses a reentrant model
 31737 ;;
 31738                           
 31739                           	psect	text22
 31740   013AC6                     __ptext22:
 31741                           	callstack 0
 31742   013AC6                     _sequence_messages:
 31743                           	callstack 24
 31744                           
 31745                           ;gemsecs.c: 587: _Bool sequence_messages(const uint8_t sid);gemsecs.c: 588: {;gemsecs.c:
      +                           589:  V.msg_error = MSG_ERROR_NONE;
 31746                           
 31747                           ; BSR set to: 1
 31748                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31749                           ;incstack = 0
 31750   013AC6  0E00               	movlw	0
 31751   013AC8  006F FFA0  FD51    	movff	wreg,_V+311	;volatile
 31752                           
 31753                           ;gemsecs.c: 590:  switch (sid) {
 31754   013ACE  D164               	goto	l8561
 31755   013AD0                     l1996:
 31756                           
 31757                           ;gemsecs.c: 592:   S[0].stack = 6;
 31758   013AD0  0E06               	movlw	6
 31759   013AD2  006F FFA0  F92F    	movff	wreg,_S+45
 31760                           
 31761                           ;gemsecs.c: 593:   S[0].message = HC33[1];
 31762   013AD8  0E53               	movlw	low (_HC33+36)
 31763   013ADA  6EF6               	movwf	tblptrl,c
 31764   013ADC  0EFB               	movlw	high (_HC33+36)
 31765   013ADE  6EF7               	movwf	tblptrh,c
 31766   013AE0                     	if	0	;tblptru may be non-zero
 31767   013AE0                     	endif
 31768   013AE0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 31769   013AE0  0E00               	movlw	low (__pmediumconst shr (0+16))
 31770   013AE2  6EF8               	movwf	tblptru,c
 31771   013AE4                     	endif
 31772   013AE4  EE22  F102         	lfsr	2,_S
 31773   013AE8  0E23               	movlw	35
 31774   013AEA                     u5430:
 31775   013AEA  0009               	tblrd		*+
 31776   013AEC  006F FFD7 FFDE     	movff	tablat,postinc2
 31777   013AF2  06E8               	decf	wreg,f,c
 31778   013AF4  E2FA               	bc	u5430
 31779                           
 31780                           ;gemsecs.c: 594:   S[1].message = HC33[1];
 31781   013AF6  0E53               	movlw	low (_HC33+36)
 31782   013AF8  6EF6               	movwf	tblptrl,c
 31783   013AFA  0EFB               	movlw	high (_HC33+36)
 31784   013AFC  6EF7               	movwf	tblptrh,c
 31785   013AFE                     	if	0	;tblptru may be non-zero
 31786   013AFE                     	endif
 31787   013AFE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 31788   013AFE  0E00               	movlw	low (__pmediumconst shr (0+16))
 31789   013B00  6EF8               	movwf	tblptru,c
 31790   013B02                     	endif
 31791   013B02  EE22  F130         	lfsr	2,_S+46
 31792   013B06  0E23               	movlw	35
 31793   013B08                     u5440:
 31794   013B08  0009               	tblrd		*+
 31795   013B0A  006F FFD7 FFDE     	movff	tablat,postinc2
 31796   013B10  06E8               	decf	wreg,f,c
 31797   013B12  E2FA               	bc	u5440
 31798                           
 31799                           ;gemsecs.c: 595:   S[2].message = HC33[1];
 31800   013B14  0E53               	movlw	low (_HC33+36)
 31801   013B16  6EF6               	movwf	tblptrl,c
 31802   013B18  0EFB               	movlw	high (_HC33+36)
 31803   013B1A  6EF7               	movwf	tblptrh,c
 31804   013B1C                     	if	0	;tblptru may be non-zero
 31805   013B1C                     	endif
 31806   013B1C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 31807   013B1C  0E00               	movlw	low (__pmediumconst shr (0+16))
 31808   013B1E  6EF8               	movwf	tblptru,c
 31809   013B20                     	endif
 31810   013B20  EE22  F15E         	lfsr	2,_S+92
 31811   013B24  0E23               	movlw	35
 31812   013B26                     u5450:
 31813   013B26  0009               	tblrd		*+
 31814   013B28  006F FFD7 FFDE     	movff	tablat,postinc2
 31815   013B2E  06E8               	decf	wreg,f,c
 31816   013B30  E2FA               	bc	u5450
 31817                           
 31818                           ;gemsecs.c: 596:   S[3].message = HC33[0];
 31819   013B32  0E2F               	movlw	low _HC33
 31820   013B34  6EF6               	movwf	tblptrl,c
 31821   013B36                     	if	1	;There is more than 1 active tblptr byte
 31822   013B36  0EFB               	movlw	high _HC33
 31823   013B38  6EF7               	movwf	tblptrh,c
 31824   013B3A                     	endif
 31825   013B3A                     	if	1	;There are 3 active tblptr bytes
 31826   013B3A  0E00               	movlw	low (_HC33 shr (0+16))
 31827   013B3C  6EF8               	movwf	tblptru,c
 31828   013B3E                     	endif
 31829   013B3E  EE22  F18C         	lfsr	2,_S+138
 31830   013B42  0E23               	movlw	35
 31831   013B44                     u5460:
 31832   013B44  0009               	tblrd		*+
 31833   013B46  006F FFD7 FFDE     	movff	tablat,postinc2
 31834   013B4C  06E8               	decf	wreg,f,c
 31835   013B4E  E2FA               	bc	u5460
 31836                           
 31837                           ;gemsecs.c: 597:   S[4].message = HC33[0];
 31838   013B50  0E2F               	movlw	low _HC33
 31839   013B52  6EF6               	movwf	tblptrl,c
 31840   013B54                     	if	1	;There is more than 1 active tblptr byte
 31841   013B54  0EFB               	movlw	high _HC33
 31842   013B56  6EF7               	movwf	tblptrh,c
 31843   013B58                     	endif
 31844   013B58                     	if	1	;There are 3 active tblptr bytes
 31845   013B58  0E00               	movlw	low (_HC33 shr (0+16))
 31846   013B5A  6EF8               	movwf	tblptru,c
 31847   013B5C                     	endif
 31848   013B5C  EE22  F1BA         	lfsr	2,_S+184
 31849   013B60  0E23               	movlw	35
 31850   013B62                     u5470:
 31851   013B62  0009               	tblrd		*+
 31852   013B64  006F FFD7 FFDE     	movff	tablat,postinc2
 31853   013B6A  06E8               	decf	wreg,f,c
 31854   013B6C  E2FA               	bc	u5470
 31855                           
 31856                           ;gemsecs.c: 598:   S[5].message = HC33[0];
 31857   013B6E  0E2F               	movlw	low _HC33
 31858   013B70  6EF6               	movwf	tblptrl,c
 31859   013B72                     	if	1	;There is more than 1 active tblptr byte
 31860   013B72  0EFB               	movlw	high _HC33
 31861   013B74  6EF7               	movwf	tblptrh,c
 31862   013B76                     	endif
 31863   013B76                     	if	1	;There are 3 active tblptr bytes
 31864   013B76  0E00               	movlw	low (_HC33 shr (0+16))
 31865   013B78  6EF8               	movwf	tblptru,c
 31866   013B7A                     	endif
 31867   013B7A  EE22  F1E8         	lfsr	2,_S+230
 31868   013B7E  0E23               	movlw	35
 31869   013B80                     u5480:
 31870   013B80  0009               	tblrd		*+
 31871   013B82  006F FFD7 FFDE     	movff	tablat,postinc2
 31872   013B88  06E8               	decf	wreg,f,c
 31873   013B8A  E2FA               	bc	u5480
 31874                           
 31875                           ;gemsecs.c: 600:   S[0].message.data[0] = 0x01;
 31876   013B8C  0E01               	movlw	1
 31877   013B8E  006F FFA0  F904    	movff	wreg,_S+2
 31878                           
 31879                           ;gemsecs.c: 601:   S[1].message.data[0] = 0x02;
 31880   013B94  0E02               	movlw	2
 31881   013B96  006F FFA0  F932    	movff	wreg,_S+48
 31882                           
 31883                           ;gemsecs.c: 602:   S[2].message.data[0] = 0x03;
 31884   013B9C  0E03               	movlw	3
 31885   013B9E  006F FFA0  F960    	movff	wreg,_S+94
 31886                           
 31887                           ;gemsecs.c: 603:   S[3].message.data[0] = 0x01;
 31888   013BA4  0E01               	movlw	1
 31889   013BA6  006F FFA0  F98E    	movff	wreg,_S+140
 31890                           
 31891                           ;gemsecs.c: 604:   S[4].message.data[0] = 0x02;
 31892   013BAC  0E02               	movlw	2
 31893   013BAE  006F FFA0  F9BC    	movff	wreg,_S+186
 31894                           
 31895                           ;gemsecs.c: 605:   S[5].message.data[0] = 0x03;
 31896   013BB4  0E03               	movlw	3
 31897   013BB6  006F FFA0  F9EA    	movff	wreg,_S+232
 31898                           
 31899                           ;gemsecs.c: 607:   S[0].delay = 10000;
 31900   013BBC  0E10               	movlw	16
 31901   013BBE  006F FFA0  F92D    	movff	wreg,_S+43
 31902   013BC4  0E27               	movlw	39
 31903   013BC6  006F FFA0  F92E    	movff	wreg,_S+44
 31904                           
 31905                           ;gemsecs.c: 608:   S[1].delay = 10000;
 31906   013BCC  0E10               	movlw	16
 31907   013BCE  006F FFA0  F95B    	movff	wreg,_S+89
 31908   013BD4  0E27               	movlw	39
 31909   013BD6  006F FFA0  F95C    	movff	wreg,_S+90
 31910                           
 31911                           ;gemsecs.c: 609:   S[2].delay = 10000;
 31912   013BDC  0E10               	movlw	16
 31913   013BDE  006F FFA0  F989    	movff	wreg,_S+135
 31914   013BE4  0E27               	movlw	39
 31915   013BE6  006F FFA0  F98A    	movff	wreg,_S+136
 31916                           
 31917                           ;gemsecs.c: 610:   S[3].delay = 10000;
 31918   013BEC  0E10               	movlw	16
 31919   013BEE  006F FFA0  F9B7    	movff	wreg,_S+181
 31920   013BF4  0E27               	movlw	39
 31921   013BF6  006F FFA0  F9B8    	movff	wreg,_S+182
 31922                           
 31923                           ;gemsecs.c: 611:   S[4].delay = 10000;
 31924   013BFC  0E10               	movlw	16
 31925   013BFE  006F FFA0  F9E5    	movff	wreg,_S+227
 31926   013C04  0E27               	movlw	39
 31927   013C06  006F FFA0  F9E6    	movff	wreg,_S+228
 31928                           
 31929                           ;gemsecs.c: 612:   S[5].delay = 10000;
 31930   013C0C  0E10               	movlw	16
 31931   013C0E  006F FFA0  FA13    	movff	wreg,_S+273
 31932   013C14  0E27               	movlw	39
 31933   013C16  006F FFA0  FA14    	movff	wreg,_S+274
 31934                           
 31935                           ;gemsecs.c: 614:   S[0].block.header = (uint8_t*) & S[0].message;
 31936   013C1C  0E02               	movlw	low _S
 31937   013C1E  006F FFA0  F926    	movff	wreg,_S+36
 31938   013C24  0E09               	movlw	high _S
 31939   013C26  006F FFA0  F927    	movff	wreg,_S+37
 31940                           
 31941                           ;gemsecs.c: 615:   S[0].block.length = sizeof(header33);
 31942   013C2C  0E24               	movlw	36
 31943   013C2E  006F FFA0  F928    	movff	wreg,_S+38
 31944                           
 31945                           ;gemsecs.c: 616:   S[1].block.header = (uint8_t*) & S[1].message;
 31946   013C34  0E30               	movlw	low (_S+46)
 31947   013C36  006F FFA0  F954    	movff	wreg,_S+82
 31948   013C3C  0E09               	movlw	high (_S+46)
 31949   013C3E  006F FFA0  F955    	movff	wreg,_S+83
 31950                           
 31951                           ;gemsecs.c: 617:   S[1].block.length = sizeof(header33);
 31952   013C44  0E24               	movlw	36
 31953   013C46  006F FFA0  F956    	movff	wreg,_S+84
 31954                           
 31955                           ;gemsecs.c: 618:   S[2].block.header = (uint8_t*) & S[2].message;
 31956   013C4C  0E5E               	movlw	low (_S+92)
 31957   013C4E  006F FFA0  F982    	movff	wreg,_S+128
 31958   013C54  0E09               	movlw	high (_S+92)
 31959   013C56  006F FFA0  F983    	movff	wreg,_S+129
 31960                           
 31961                           ;gemsecs.c: 619:   S[2].block.length = sizeof(header33);
 31962   013C5C  0E24               	movlw	36
 31963   013C5E  006F FFA0  F984    	movff	wreg,_S+130
 31964                           
 31965                           ;gemsecs.c: 620:   S[3].block.header = (uint8_t*) & S[3].message;
 31966   013C64  0E8C               	movlw	low (_S+138)
 31967   013C66  006F FFA0  F9B0    	movff	wreg,_S+174
 31968   013C6C  0E09               	movlw	high (_S+138)
 31969   013C6E  006F FFA0  F9B1    	movff	wreg,_S+175
 31970                           
 31971                           ;gemsecs.c: 621:   S[3].block.length = sizeof(header33);
 31972   013C74  0E24               	movlw	36
 31973   013C76  006F FFA0  F9B2    	movff	wreg,_S+176
 31974                           
 31975                           ;gemsecs.c: 622:   S[4].block.header = (uint8_t*) & S[4].message;
 31976   013C7C  0EBA               	movlw	low (_S+184)
 31977   013C7E  006F FFA0  F9DE    	movff	wreg,_S+220
 31978   013C84  0E09               	movlw	high (_S+184)
 31979   013C86  006F FFA0  F9DF    	movff	wreg,_S+221
 31980                           
 31981                           ;gemsecs.c: 623:   S[4].block.length = sizeof(header33);
 31982   013C8C  0E24               	movlw	36
 31983   013C8E  006F FFA0  F9E0    	movff	wreg,_S+222
 31984                           
 31985                           ;gemsecs.c: 624:   S[5].block.header = (uint8_t*) & S[5].message;
 31986   013C94  0EE8               	movlw	low (_S+230)
 31987   013C96  006F FFA0  FA0C    	movff	wreg,_S+266
 31988   013C9C  0E09               	movlw	high (_S+230)
 31989   013C9E  006F FFA0  FA0D    	movff	wreg,_S+267
 31990                           
 31991                           ;gemsecs.c: 625:   S[5].block.length = sizeof(header33);
 31992   013CA4  0E24               	movlw	36
 31993   013CA6  006F FFA0  FA0E    	movff	wreg,_S+268
 31994                           
 31995                           ;gemsecs.c: 626:   V.stack = S[0].stack;
 31996   013CAC  0062  F4BC  F02D   	movff	_S+45,btemp+11
 31997   013CB2  EE23  F169         	lfsr	2,_V+335	;volatile
 31998   013CB6  50DF               	movf	223,w,c
 31999   013CB8  182D               	xorwf	(btemp+11)^0,w,c
 32000   013CBA  0BF8               	andlw	-8
 32001   013CBC  182D               	xorwf	(btemp+11)^0,w,c
 32002   013CBE  6EDF               	movwf	223,c
 32003                           
 32004                           ;gemsecs.c: 627:   StartTimer(TMR_HBIO, S[V.stack - 1].delay);
 32005   013CC0  EE23  F169         	lfsr	2,_V+335	;volatile
 32006   013CC4  50DF               	movf	223,w,c
 32007   013CC6  0B07               	andlw	7
 32008   013CC8  0D2E               	mullw	46
 32009   013CCA  0EFF               	movlw	low (_S+65533)
 32010   013CCC  24F3               	addwf	243,w,c
 32011   013CCE  6ED9               	movwf	fsr2l,c
 32012   013CD0  0E08               	movlw	high (_S+65533)
 32013   013CD2  20F4               	addwfc	prodh,w,c
 32014   013CD4  6EDA               	movwf	fsr2h,c
 32015   013CD6  006F FF78  F02C    	movff	postinc2,btemp+10
 32016   013CDC  006F FF74  F02D    	movff	postdec2,btemp+11
 32017   013CE2  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 32018   013CE8  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 32019   013CEE  0E06               	movlw	6
 32020   013CF0  6EE6               	movwf	postinc1,c
 32021   013CF2  EC2A  F0BC         	call	_StartTimer	;wreg free
 32022                           
 32023                           ;gemsecs.c: 628:   break;
 32024   013CF6  D05C               	goto	l2001
 32025   013CF8                     l1999:
 32026                           
 32027                           ;gemsecs.c: 631:   D[0].stack = 1;
 32028   013CF8  0E01               	movlw	1
 32029   013CFA  006F FFA0  FB73    	movff	wreg,_D+165
 32030                           
 32031                           ;gemsecs.c: 632:   D[0].message = H153[0];
 32032   013D00  EE23  F19D         	lfsr	2,_H153
 32033   013D04  EE02  F2CE         	lfsr	0,_D
 32034   013D08  0E9B               	movlw	155
 32035   013D0A                     u5491:
 32036   013D0A  006F FF7B FFEE     	movff	postinc2,postinc0
 32037   013D10  06E8               	decf	wreg,f,c
 32038   013D12  E2FB               	bc	u5491
 32039   013D14  0E9C               	movlw	156
 32040   013D16  5ED9               	subwf	fsr2l,f,c
 32041   013D18  5EE9               	subwf	fsr0l,f,c
 32042                           
 32043                           ;gemsecs.c: 633:   D[0].delay = 5000;
 32044   013D1A  0E88               	movlw	136
 32045   013D1C  006F FFA0  FB71    	movff	wreg,_D+163
 32046   013D22  0E13               	movlw	19
 32047   013D24  006F FFA0  FB72    	movff	wreg,_D+164
 32048                           
 32049                           ;gemsecs.c: 634:   D[0].block.header = (uint8_t*) & D[0].message;
 32050   013D2A  0ECE               	movlw	low _D
 32051   013D2C  006F FFA0  FB6A    	movff	wreg,_D+156
 32052   013D32  0E0A               	movlw	high _D
 32053   013D34  006F FFA0  FB6B    	movff	wreg,_D+157
 32054                           
 32055                           ;gemsecs.c: 635:   D[0].block.length = sizeof(header153);
 32056   013D3A  0E9C               	movlw	156
 32057   013D3C  006F FFA0  FB6C    	movff	wreg,_D+158
 32058                           
 32059                           ;gemsecs.c: 636:   V.stack = D[0].stack;
 32060   013D42  0062  FDCC  F02D   	movff	_D+165,btemp+11
 32061   013D48  EE23  F169         	lfsr	2,_V+335	;volatile
 32062   013D4C  50DF               	movf	223,w,c
 32063   013D4E  182D               	xorwf	(btemp+11)^0,w,c
 32064   013D50  0BF8               	andlw	-8
 32065   013D52  182D               	xorwf	(btemp+11)^0,w,c
 32066   013D54  6EDF               	movwf	223,c
 32067                           
 32068                           ;gemsecs.c: 637:   StartTimer(TMR_HBIO, D[V.stack - 1].delay);
 32069   013D56  EE23  F169         	lfsr	2,_V+335	;volatile
 32070   013D5A  50DF               	movf	223,w,c
 32071   013D5C  0B07               	andlw	7
 32072   013D5E  0DA6               	mullw	166
 32073   013D60  0ECB               	movlw	low (_D+65533)
 32074   013D62  24F3               	addwf	243,w,c
 32075   013D64  6ED9               	movwf	fsr2l,c
 32076   013D66  0E0A               	movlw	high (_D+65533)
 32077   013D68  20F4               	addwfc	prodh,w,c
 32078   013D6A  6EDA               	movwf	fsr2h,c
 32079   013D6C  006F FF78  F02C    	movff	postinc2,btemp+10
 32080   013D72  006F FF74  F02D    	movff	postdec2,btemp+11
 32081   013D78  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 32082   013D7E  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 32083   013D84  0E06               	movlw	6
 32084   013D86  6EE6               	movwf	postinc1,c
 32085   013D88  EC2A  F0BC         	call	_StartTimer	;wreg free
 32086                           
 32087                           ;gemsecs.c: 638:   break;
 32088   013D8C  D011               	goto	l2001
 32089   013D8E                     l8553:
 32090                           
 32091                           ;gemsecs.c: 640:   V.stack = 0;
 32092   013D8E  EE23  F169         	lfsr	2,_V+335	;volatile
 32093   013D92  0EF8               	movlw	-8
 32094   013D94  16DF               	andwf	223,f,c
 32095   013D96  D00C               	goto	l2001
 32096   013D98                     l8561:
 32097                           
 32098                           ;stkvar	_sid @ sp[(0)+-1]
 32099   013D98  0EFF               	movlw	-1
 32100   013D9A  50E3               	movf	plusw1,w,c
 32101                           
 32102                           ; Switch size 1, requested type "simple"
 32103                           ; Number of cases is 3, Range of values is 1 to 11
 32104                           ; switch strategies available:
 32105                           ; Name         Instructions Cycles
 32106                           ; simple_byte           10     6 (average)
 32107                           ;	Chosen strategy is simple_byte
 32108   013D9C  0A01               	xorlw	1	; case 1
 32109   013D9E  B4D8               	btfsc	status,2,c
 32110   013DA0  D697               	goto	l1996
 32111   013DA2  0A0B               	xorlw	11	; case 10
 32112   013DA4  B4D8               	btfsc	status,2,c
 32113   013DA6  D7A8               	goto	l1999
 32114   013DA8  0A01               	xorlw	1	; case 11
 32115   013DAA  B4D8               	btfsc	status,2,c
 32116   013DAC  D7A5               	goto	l1999
 32117   013DAE  D7EF               	goto	l8553
 32118   013DB0                     l2001:
 32119                           
 32120                           ; _sequence_messages: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 32121   013DB0  52E5               	movf	postdec1,f,c
 32122   013DB2  0012               	return		;funcret
 32123   013DB4                     __end_of_sequence_messages:
 32124                           	callstack 0
 32125                           
 32126 ;; *************** function _format_display_text *****************
 32127 ;; Defined at:
 32128 ;;		line 677 in file "gemsecs.c"
 32129 ;; Parameters:    Size  Location     Type
 32130 ;;  data            2  [STACK] PTR const unsigned char 
 32131 ;;		 -> V$terminal(160), V(387), 
 32132 ;; Auto vars:     Size  Location     Type
 32133 ;;  j               2  [STACK] short 
 32134 ;;  k               2  [STACK] unsigned short 
 32135 ;;  i               2  [STACK] short 
 32136 ;;  z               2  [STACK] short 
 32137 ;; Return value:  Size  Location     Type
 32138 ;;                  2  [STACK] unsigned short 
 32139 ;; Registers used:
 32140 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
 32141 ;; Tracked objects:
 32142 ;;		On entry : 3F/1
 32143 ;;		On exit  : 0/0
 32144 ;;		Unchanged: 0/0
 32145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32150 ;;Total ram usage:        0 bytes
 32151 ;; Hardware stack levels used: 1
 32152 ;; Hardware stack levels required when called: 4
 32153 ;; This function calls:
 32154 ;;		_strlen
 32155 ;; This function is called by:
 32156 ;;		_secs_II_message
 32157 ;;		_secs_gem_state
 32158 ;; This function uses a reentrant model
 32159 ;;
 32160                           
 32161                           	psect	text23
 32162   0157F8                     __ptext23:
 32163                           	callstack 0
 32164   0157F8                     _format_display_text:
 32165                           	callstack 0
 32166                           
 32167                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32168   0157F8  0E08               	movlw	8
 32169   0157FA  26E1               	addwf	fsr1l,f,c
 32170   0157FC  0E00               	movlw	0
 32171   0157FE  22E2               	addwfc	fsr1h,f,c
 32172                           
 32173                           ;gemsecs.c: 677: uint16_t format_display_text(const char *data);gemsecs.c: 678: {;gemsec
      +                          s.c: 679:  int16_t j, i = 0, z = 0;
 32174                           ;stkvar	_i @ sp[(-8)+4]
 32175                           
 32176                           ;incstack = 0
 32177   015800  0EFC               	movlw	-4
 32178   015802  6AE3               	clrf	plusw1,c
 32179   015804  0EFD               	movlw	-3
 32180   015806  6AE3               	clrf	plusw1,c
 32181                           
 32182                           ;stkvar	_z @ sp[(-8)+6]
 32183   015808  0EFE               	movlw	-2
 32184   01580A  6AE3               	clrf	plusw1,c
 32185   01580C  0EFF               	movlw	-1
 32186   01580E  6AE3               	clrf	plusw1,c
 32187                           
 32188                           ;gemsecs.c: 680:  uint16_t k;;gemsecs.c: 682:  k = (uint16_t) strlen(data);
 32189                           ;stkvar	_data @ sp[(-8)+-2]
 32190   015810  0EF6               	movlw	-10
 32191   015812  006F FF8F FFE6     	movff	plusw1,postinc1
 32192   015818  006F FF8F FFE6     	movff	plusw1,postinc1
 32193   01581E  EC09  F0B7         	call	_strlen	;wreg free
 32194                           
 32195                           ;stkvar	_k @ sp[(-8)+2]
 32196   015822  0EFA               	movlw	-6
 32197   015824  0060  F08B  FFE3   	movff	btemp,plusw1
 32198   01582A  0EFB               	movlw	-5
 32199   01582C  0060  F08F  FFE3   	movff	btemp+1,plusw1
 32200                           
 32201                           ;gemsecs.c: 684:  if (!k)
 32202                           ;stkvar	_k @ sp[(-8)+2]
 32203   015832  0EFA               	movlw	-6
 32204   015834  006F FF8C  F022    	movff	plusw1,btemp
 32205   01583A  0EFB               	movlw	-5
 32206   01583C  50E3               	movf	plusw1,w,c
 32207   01583E  1022               	iorwf	btemp^0,w,c
 32208   015840  B4D8               	btfsc	status,2,c
 32209   015842  D082               	goto	u5520
 32210                           
 32211                           ;gemsecs.c: 690:  for (j = 135; j >= z; j--) {
 32212   015844  0E87               	movlw	135
 32213   015846  6E2C               	movwf	(btemp+10)^0,c
 32214   015848  0E00               	movlw	0
 32215   01584A  6E2D               	movwf	(btemp+11)^0,c
 32216                           
 32217                           ;stkvar	_j @ sp[(-8)+0]
 32218   01584C  0EF8               	movlw	-8
 32219   01584E  0060  F0B3  FFE3   	movff	btemp+10,plusw1
 32220   015854  0EF9               	movlw	-7
 32221   015856  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 32222   01585C  D062               	goto	l8601
 32223   01585E                     l8591:
 32224                           
 32225                           ;gemsecs.c: 691:   if (i < k) {
 32226                           ;stkvar	_k @ sp[(-8)+2]
 32227                           ;stkvar	_i @ sp[(-8)+4]
 32228   01585E  50E1               	movf	fsr1l,w,c
 32229   015860  0FFC               	addlw	-4
 32230   015862  6ED9               	movwf	fsr2l,c
 32231   015864  50E2               	movf	fsr1h,w,c
 32232   015866  6EDA               	movwf	fsr2h,c
 32233   015868  0EFF               	movlw	255
 32234   01586A  22DA               	addwfc	fsr2h,f,c
 32235   01586C  0EFA               	movlw	-6
 32236   01586E  50E3               	movf	plusw1,w,c
 32237   015870  5CDE               	subwf	postinc2,w,c
 32238   015872  0EFB               	movlw	-5
 32239   015874  50E3               	movf	plusw1,w,c
 32240   015876  58DE               	subwfb	postinc2,w,c
 32241   015878  B0D8               	btfsc	status,0,c
 32242   01587A  D039               	goto	l8597
 32243                           
 32244                           ;gemsecs.c: 692:    H153[0].data[j] = data[i++];
 32245                           ;stkvar	_i @ sp[(-8)+4]
 32246   01587C  0EFC               	movlw	-4
 32247   01587E  006F FF8C  F02C    	movff	plusw1,btemp+10
 32248   015884  0EFD               	movlw	-3
 32249   015886  006F FF8C  F02D    	movff	plusw1,btemp+11
 32250                           
 32251                           ;stkvar	_data @ sp[(-8)+-2]
 32252   01588C  0EF6               	movlw	-10
 32253   01588E  006F FF8C  F02A    	movff	plusw1,btemp+8
 32254   015894  0EF7               	movlw	-9
 32255   015896  006F FF8C  F02B    	movff	plusw1,btemp+9
 32256   01589C  502C               	movf	(btemp+10)^0,w,c
 32257   01589E  242A               	addwf	(btemp+8)^0,w,c
 32258   0158A0  6ED9               	movwf	fsr2l,c
 32259   0158A2  502D               	movf	(btemp+11)^0,w,c
 32260   0158A4  202B               	addwfc	(btemp+9)^0,w,c
 32261   0158A6  6EDA               	movwf	fsr2h,c
 32262                           
 32263                           ;stkvar	_j @ sp[(-8)+0]
 32264   0158A8  0EF8               	movlw	-8
 32265   0158AA  006F FF8C  F02C    	movff	plusw1,btemp+10
 32266   0158B0  0EF9               	movlw	-7
 32267   0158B2  006F FF8C  F02D    	movff	plusw1,btemp+11
 32268   0158B8  0E9F               	movlw	low (_H153+2)
 32269   0158BA  242C               	addwf	(btemp+10)^0,w,c
 32270   0158BC  6EE9               	movwf	fsr0l,c
 32271   0158BE  0E0D               	movlw	high (_H153+2)
 32272   0158C0  202D               	addwfc	(btemp+11)^0,w,c
 32273   0158C2  6EEA               	movwf	fsr0h,c
 32274   0158C4  006F FF7F FFEF     	movff	indf2,indf0
 32275                           
 32276                           ;stkvar	_i @ sp[(-8)+4]
 32277   0158CA  0EFC               	movlw	-4
 32278   0158CC  50E3               	movf	plusw1,w,c
 32279   0158CE  0F01               	addlw	1
 32280   0158D0  6E22               	movwf	btemp^0,c
 32281   0158D2  0EFC               	movlw	-4
 32282   0158D4  0060  F08B  FFE3   	movff	btemp,plusw1
 32283   0158DA  6A22               	clrf	btemp^0,c
 32284   0158DC  0EFD               	movlw	-3
 32285   0158DE  50E3               	movf	plusw1,w,c
 32286   0158E0  2022               	addwfc	btemp^0,w,c
 32287   0158E2  6E22               	movwf	btemp^0,c
 32288   0158E4  0EFD               	movlw	-3
 32289   0158E6  0060  F08B  FFE3   	movff	btemp,plusw1
 32290                           
 32291                           ;gemsecs.c: 693:   } else {
 32292   0158EC  D010               	goto	l8599
 32293   0158EE                     l8597:
 32294                           
 32295                           ;gemsecs.c: 694:    H153[0].data[j] = ' ';
 32296                           ;stkvar	_j @ sp[(-8)+0]
 32297   0158EE  0EF8               	movlw	-8
 32298   0158F0  006F FF8C  F02C    	movff	plusw1,btemp+10
 32299   0158F6  0EF9               	movlw	-7
 32300   0158F8  006F FF8C  F02D    	movff	plusw1,btemp+11
 32301   0158FE  0E9F               	movlw	low (_H153+2)
 32302   015900  242C               	addwf	(btemp+10)^0,w,c
 32303   015902  6ED9               	movwf	fsr2l,c
 32304   015904  0E0D               	movlw	high (_H153+2)
 32305   015906  202D               	addwfc	(btemp+11)^0,w,c
 32306   015908  6EDA               	movwf	fsr2h,c
 32307   01590A  0E20               	movlw	32
 32308   01590C  6EDF               	movwf	indf2,c
 32309   01590E                     l8599:
 32310                           
 32311                           ;gemsecs.c: 697:  }
 32312                           ;stkvar	_j @ sp[(-8)+0]
 32313   01590E  50E1               	movf	fsr1l,w,c
 32314   015910  0FF8               	addlw	-8
 32315   015912  6ED9               	movwf	fsr2l,c
 32316   015914  50E2               	movf	fsr1h,w,c
 32317   015916  6EDA               	movwf	fsr2h,c
 32318   015918  0EFF               	movlw	255
 32319   01591A  22DA               	addwfc	fsr2h,f,c
 32320   01591C  06DE               	decf	postinc2,f,c
 32321   01591E  0E00               	movlw	0
 32322   015920  5ADD               	subwfb	postdec2,f,c
 32323   015922                     l8601:
 32324                           
 32325                           ;stkvar	_z @ sp[(-8)+6]
 32326                           ;stkvar	_j @ sp[(-8)+0]
 32327   015922  50E1               	movf	fsr1l,w,c
 32328   015924  0FF8               	addlw	-8
 32329   015926  6ED9               	movwf	fsr2l,c
 32330   015928  50E2               	movf	fsr1h,w,c
 32331   01592A  6EDA               	movwf	fsr2h,c
 32332   01592C  0EFF               	movlw	255
 32333   01592E  22DA               	addwfc	fsr2h,f,c
 32334   015930  0EFE               	movlw	-2
 32335   015932  50E3               	movf	plusw1,w,c
 32336   015934  5CDE               	subwf	postinc2,w,c
 32337   015936  50DE               	movf	postinc2,w,c
 32338   015938  0A80               	xorlw	128
 32339   01593A  6E22               	movwf	btemp^0,c
 32340   01593C  0EFF               	movlw	-1
 32341   01593E  50E3               	movf	plusw1,w,c
 32342   015940  0A80               	xorlw	128
 32343   015942  5822               	subwfb	btemp^0,w,c
 32344   015944  B0D8               	btfsc	status,0,c
 32345   015946  D78B               	goto	l8591
 32346   015948                     u5520:
 32347                           
 32348                           ; _format_display_text: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 2, argsize = 2, vargsize = 0
 32349   015948  0EF6               	movlw	246
 32350   01594A  26E1               	addwf	fsr1l,f,c
 32351   01594C  0EFF               	movlw	255
 32352   01594E  22E2               	addwfc	fsr1h,f,c
 32353   015950  0012               	return		;funcret
 32354   015952                     __end_of_format_display_text:
 32355                           	callstack 0
 32356                           
 32357 ;; *************** function _secs_II_monitor_message *****************
 32358 ;; Defined at:
 32359 ;;		line 1236 in file "gemsecs.c"
 32360 ;; Parameters:    Size  Location     Type
 32361 ;;  stream          1  [STACK] const unsigned char 
 32362 ;;  function        1  [STACK] const unsigned char 
 32363 ;;  dtime           2  [STACK] const unsigned short 
 32364 ;; Auto vars:     Size  Location     Type
 32365 ;;  msg_data        2  [STACK] PTR unsigned char 
 32366 ;;		 -> H254(257), 
 32367 ;; Return value:  Size  Location     Type
 32368 ;;                  1  [STACK] void 
 32369 ;; Registers used:
 32370 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 32371 ;; Tracked objects:
 32372 ;;		On entry : 0/1
 32373 ;;		On exit  : 0/0
 32374 ;;		Unchanged: 0/0
 32375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32380 ;;Total ram usage:        0 bytes
 32381 ;; Hardware stack levels used: 1
 32382 ;; Hardware stack levels required when called: 13
 32383 ;; This function calls:
 32384 ;;		_ee_logger
 32385 ;; This function is called by:
 32386 ;;		_m_protocol
 32387 ;;		_r_protocol
 32388 ;; This function uses a reentrant model
 32389 ;;
 32390                           
 32391                           	psect	text24
 32392   015F36                     __ptext24:
 32393                           	callstack 0
 32394   015F36                     _secs_II_monitor_message:
 32395                           	callstack 0
 32396                           
 32397                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32398   015F36  52E6               	movf	postinc1,f,c
 32399   015F38  52E6               	movf	postinc1,f,c
 32400                           
 32401                           ;gemsecs.c: 1236: void secs_II_monitor_message(const uint8_t stream, const uint8_t funct
      +                          ion, const uint16_t dtime);gemsecs.c: 1237: {;gemsecs.c: 1238:  uint8_t * msg_data = (ui
      +                          nt8_t*) & H254[0];
 32402                           ;stkvar	_msg_data @ sp[(-2)+0]
 32403                           
 32404                           ;incstack = 0
 32405   015F3A  0E0E               	movlw	high _H254
 32406   015F3C  6E22               	movwf	btemp^0,c
 32407   015F3E  0EFF               	movlw	-1
 32408   015F40  0060  F08B  FFE3   	movff	btemp,plusw1
 32409   015F46  0ED5               	movlw	low _H254
 32410   015F48  6E22               	movwf	btemp^0,c
 32411   015F4A  0EFE               	movlw	-2
 32412   015F4C  0060  F08B  FFE3   	movff	btemp,plusw1
 32413                           
 32414                           ;gemsecs.c: 1239:  static uint8_t store1_1 = 1, store1_13 = 1, store6_11 = 1;;gemsecs.c:
      +                           1242:  ++V.ticks;
 32415   015F52  EE23  F141         	lfsr	2,_V+295	;volatile
 32416   015F56  2ADE               	incf	postinc2,f,c
 32417   015F58  0E00               	movlw	0
 32418   015F5A  22DE               	addwfc	postinc2,f,c
 32419   015F5C  22DE               	addwfc	postinc2,f,c
 32420   015F5E  22DE               	addwfc	postinc2,f,c
 32421                           
 32422                           ;gemsecs.c: 1243:  switch (stream) {
 32423   015F60  D068               	goto	l12499
 32424   015F62                     l12461:
 32425                           
 32426                           ;gemsecs.c: 1247:    if (!store1_1)
 32427   015F62  5050               	movf	secs_II_monitor_message@store1_1^0,w,c
 32428   015F64  B4D8               	btfsc	status,2,c
 32429   015F66  D070               	goto	l2238
 32430                           
 32431                           ;gemsecs.c: 1249:    store1_1 = 0;
 32432   015F68  6A50               	clrf	secs_II_monitor_message@store1_1^0,c
 32433   015F6A                     l12465:
 32434                           
 32435                           ;gemsecs.c: 1251:    ee_logger(stream, function, dtime, msg_data);
 32436                           ;stkvar	_msg_data @ sp[(-2)+0]
 32437   015F6A  0EFE               	movlw	-2
 32438   015F6C  006F FF8F FFE6     	movff	plusw1,postinc1
 32439   015F72  006F FF8F FFE6     	movff	plusw1,postinc1
 32440                           
 32441                           ;stkvar	_dtime @ sp[(-4)+-4]
 32442   015F78  0EF8               	movlw	-8
 32443   015F7A  006F FF8F FFE6     	movff	plusw1,postinc1
 32444   015F80  006F FF8F FFE6     	movff	plusw1,postinc1
 32445                           
 32446                           ;stkvar	_function @ sp[(-6)+-2]
 32447   015F86  0EF8               	movlw	-8
 32448   015F88  50E3               	movf	plusw1,w,c
 32449   015F8A  6EE6               	movwf	postinc1,c
 32450                           
 32451                           ;stkvar	_stream @ sp[(-7)+-1]
 32452   015F8C  0EF8               	movlw	-8
 32453   015F8E  50E3               	movf	plusw1,w,c
 32454   015F90  6EE6               	movwf	postinc1,c
 32455   015F92  EC79  F0AE         	call	_ee_logger	;wreg free
 32456                           
 32457                           ;gemsecs.c: 1252:    break;
 32458   015F96  D058               	goto	l2238
 32459   015F98                     l12467:
 32460                           
 32461                           ;gemsecs.c: 1254:    if (!store1_13)
 32462   015F98  504F               	movf	secs_II_monitor_message@store1_13^0,w,c
 32463   015F9A  B4D8               	btfsc	status,2,c
 32464   015F9C  D055               	goto	l2238
 32465                           
 32466                           ;gemsecs.c: 1256:    store1_13 = 0;
 32467   015F9E  6A4F               	clrf	secs_II_monitor_message@store1_13^0,c
 32468   015FA0  D7E4               	goto	l12465
 32469   015FA2                     l12475:
 32470                           
 32471                           ;stkvar	_function @ sp[(-2)+-2]
 32472   015FA2  0EFC               	movlw	-4
 32473   015FA4  50E3               	movf	plusw1,w,c
 32474                           
 32475                           ; Switch size 1, requested type "simple"
 32476                           ; Number of cases is 2, Range of values is 1 to 13
 32477                           ; switch strategies available:
 32478                           ; Name         Instructions Cycles
 32479                           ; simple_byte            7     4 (average)
 32480                           ;	Chosen strategy is simple_byte
 32481   015FA6  0A01               	xorlw	1	; case 1
 32482   015FA8  B4D8               	btfsc	status,2,c
 32483   015FAA  D7DB               	goto	l12461
 32484   015FAC  0A0C               	xorlw	12	; case 13
 32485   015FAE  B4D8               	btfsc	status,2,c
 32486   015FB0  D7F3               	goto	l12467
 32487   015FB2  D04A               	goto	l2238
 32488   015FB4                     l12477:
 32489                           
 32490                           ;gemsecs.c: 1269:    ee_logger(stream, function, dtime, msg_data);
 32491                           ;stkvar	_msg_data @ sp[(-2)+0]
 32492   015FB4  0EFE               	movlw	-2
 32493   015FB6  006F FF8F FFE6     	movff	plusw1,postinc1
 32494   015FBC  006F FF8F FFE6     	movff	plusw1,postinc1
 32495                           
 32496                           ;stkvar	_dtime @ sp[(-4)+-4]
 32497   015FC2  0EF8               	movlw	-8
 32498   015FC4  006F FF8F FFE6     	movff	plusw1,postinc1
 32499   015FCA  006F FF8F FFE6     	movff	plusw1,postinc1
 32500                           
 32501                           ;stkvar	_function @ sp[(-6)+-2]
 32502   015FD0  0EF8               	movlw	-8
 32503   015FD2  50E3               	movf	plusw1,w,c
 32504   015FD4  6EE6               	movwf	postinc1,c
 32505                           
 32506                           ;stkvar	_stream @ sp[(-7)+-1]
 32507   015FD6  0EF8               	movlw	-8
 32508   015FD8  50E3               	movf	plusw1,w,c
 32509   015FDA  6EE6               	movwf	postinc1,c
 32510   015FDC  EC79  F0AE         	call	_ee_logger	;wreg free
 32511                           
 32512                           ;gemsecs.c: 1270:    if (function == 42) {
 32513                           ;stkvar	_function @ sp[(-2)+-2]
 32514   015FE0  0EFC               	movlw	-4
 32515   015FE2  006F FF8C  F022    	movff	plusw1,btemp
 32516   015FE8  0E2A               	movlw	42
 32517   015FEA  1822               	xorwf	btemp^0,w,c
 32518   015FEC  A4D8               	btfss	status,2,c
 32519   015FEE  D01B               	goto	l12495
 32520                           
 32521                           ;gemsecs.c: 1275:     V.msg_ret = 0;
 32522   015FF0  0E00               	movlw	0
 32523   015FF2  006F FFA0  FD52    	movff	wreg,_V+312	;volatile
 32524                           
 32525                           ;gemsecs.c: 1276:     V.msg_error = MSG_ERROR_NONE;
 32526   015FF8  0E00               	movlw	0
 32527   015FFA  006F FFA0  FD51    	movff	wreg,_V+311	;volatile
 32528                           
 32529                           ;gemsecs.c: 1277:     V.response.info = DIS_STR;
 32530   016000  0E00               	movlw	0
 32531   016002  006F FFA0  FD91    	movff	wreg,_V+375	;volatile
 32532   016008  D00E               	goto	l12495
 32533   01600A                     l12485:
 32534                           
 32535                           ;stkvar	_function @ sp[(-2)+-2]
 32536   01600A  0EFC               	movlw	-4
 32537   01600C  50E3               	movf	plusw1,w,c
 32538                           
 32539                           ; Switch size 1, requested type "simple"
 32540                           ; Number of cases is 2, Range of values is 41 to 42
 32541                           ; switch strategies available:
 32542                           ; Name         Instructions Cycles
 32543                           ; simple_byte            7     4 (average)
 32544                           ;	Chosen strategy is simple_byte
 32545   01600E  0A29               	xorlw	41	; case 41
 32546   016010  B4D8               	btfsc	status,2,c
 32547   016012  D7D0               	goto	l12477
 32548   016014  0A03               	xorlw	3	; case 42
 32549   016016  B4D8               	btfsc	status,2,c
 32550   016018  D7CD               	goto	l12477
 32551                           
 32552                           ;gemsecs.c: 1285:   switch (function) {
 32553                           
 32554                           ;gemsecs.c: 1284:  case 6:
 32555   01601A  D005               	goto	l12495
 32556   01601C                     l12487:
 32557                           
 32558                           ;gemsecs.c: 1287:    if (!store6_11)
 32559   01601C  504E               	movf	secs_II_monitor_message@store6_11^0,w,c
 32560   01601E  B4D8               	btfsc	status,2,c
 32561   016020  D013               	goto	l2238
 32562                           
 32563                           ;gemsecs.c: 1289:    store6_11 = 0;
 32564   016022  6A4E               	clrf	secs_II_monitor_message@store6_11^0,c
 32565   016024  D7A2               	goto	l12465
 32566   016026                     l12495:
 32567                           
 32568                           ;stkvar	_function @ sp[(-2)+-2]
 32569   016026  0EFC               	movlw	-4
 32570   016028  50E3               	movf	plusw1,w,c
 32571                           
 32572                           ; Switch size 1, requested type "simple"
 32573                           ; Number of cases is 1, Range of values is 11 to 11
 32574                           ; switch strategies available:
 32575                           ; Name         Instructions Cycles
 32576                           ; simple_byte            4     3 (average)
 32577                           ;	Chosen strategy is simple_byte
 32578   01602A  0A0B               	xorlw	11	; case 11
 32579   01602C  B4D8               	btfsc	status,2,c
 32580   01602E  D7F6               	goto	l12487
 32581   016030  D00B               	goto	l2238
 32582   016032                     l12499:
 32583                           
 32584                           ;stkvar	_stream @ sp[(-2)+-1]
 32585   016032  0EFD               	movlw	-3
 32586   016034  50E3               	movf	plusw1,w,c
 32587                           
 32588                           ; Switch size 1, requested type "simple"
 32589                           ; Number of cases is 3, Range of values is 1 to 6
 32590                           ; switch strategies available:
 32591                           ; Name         Instructions Cycles
 32592                           ; simple_byte           10     6 (average)
 32593                           ;	Chosen strategy is simple_byte
 32594   016036  0A01               	xorlw	1	; case 1
 32595   016038  B4D8               	btfsc	status,2,c
 32596   01603A  D7B3               	goto	l12475
 32597   01603C  0A03               	xorlw	3	; case 2
 32598   01603E  B4D8               	btfsc	status,2,c
 32599   016040  D7E4               	goto	l12485
 32600   016042  0A04               	xorlw	4	; case 6
 32601   016044  B4D8               	btfsc	status,2,c
 32602   016046  D7EF               	goto	l12495
 32603   016048                     l2238:
 32604                           
 32605                           ; _secs_II_monitor_message: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 32606   016048  0EFA               	movlw	250
 32607   01604A  26E1               	addwf	fsr1l,f,c
 32608   01604C  0EFF               	movlw	255
 32609   01604E  22E2               	addwfc	fsr1h,f,c
 32610   016050  0012               	return		;funcret
 32611   016052                     __end_of_secs_II_monitor_message:
 32612                           	callstack 0
 32613                           
 32614 ;; *************** function _ee_logger *****************
 32615 ;; Defined at:
 32616 ;;		line 1216 in file "gemsecs.c"
 32617 ;; Parameters:    Size  Location     Type
 32618 ;;  stream          1  [STACK] const unsigned char 
 32619 ;;  function        1  [STACK] const unsigned char 
 32620 ;;  dtime           2  [STACK] const unsigned short 
 32621 ;;  msg_data        2  [STACK] PTR unsigned char 
 32622 ;;		 -> H254(257), 
 32623 ;; Auto vars:     Size  Location     Type
 32624 ;;  i               2  [STACK] unsigned short 
 32625 ;; Return value:  Size  Location     Type
 32626 ;;                  1  [STACK] void 
 32627 ;; Registers used:
 32628 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 32629 ;; Tracked objects:
 32630 ;;		On entry : 0/1
 32631 ;;		On exit  : 0/0
 32632 ;;		Unchanged: 0/0
 32633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32638 ;;Total ram usage:        0 bytes
 32639 ;; Hardware stack levels used: 1
 32640 ;; Hardware stack levels required when called: 12
 32641 ;; This function calls:
 32642 ;;		_DATAEE_WriteByte
 32643 ;;		_StartTimer
 32644 ;;		_sprintf
 32645 ;; This function is called by:
 32646 ;;		_secs_II_monitor_message
 32647 ;; This function uses a reentrant model
 32648 ;;
 32649                           
 32650                           	psect	text25
 32651   015CF2                     __ptext25:
 32652                           	callstack 0
 32653   015CF2                     _ee_logger:
 32654                           	callstack 0
 32655                           
 32656                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32657   015CF2  52E6               	movf	postinc1,f,c
 32658   015CF4  52E6               	movf	postinc1,f,c
 32659                           
 32660                           ;gemsecs.c: 1216: static void ee_logger(const uint8_t stream, const uint8_t function, co
      +                          nst uint16_t dtime, uint8_t *msg_data);gemsecs.c: 1217: {;gemsecs.c: 1218:  uint16_t i =
      +                           0;
 32661                           ;stkvar	_i @ sp[(-2)+0]
 32662                           
 32663                           ;incstack = 0
 32664   015CF6  0EFE               	movlw	-2
 32665   015CF8  6AE3               	clrf	plusw1,c
 32666   015CFA  0EFF               	movlw	-1
 32667   015CFC  6AE3               	clrf	plusw1,c
 32668   015CFE                     l12413:
 32669                           
 32670                           ;gemsecs.c: 1221:   DATAEE_WriteByte(i + ((V.response.log_seq & 0x03) << 8), msg_data[25
      +                          4 + 2 - i]);
 32671                           ;stkvar	_i @ sp[(-2)+0]
 32672                           ;stkvar	_msg_data @ sp[(-2)+-6]
 32673   015CFE  0EF8               	movlw	-8
 32674   015D00  006F FF8C  F02C    	movff	plusw1,btemp+10
 32675   015D06  0EF9               	movlw	-7
 32676   015D08  006F FF8C  F02D    	movff	plusw1,btemp+11
 32677   015D0E  0EFE               	movlw	-2
 32678   015D10  50E3               	movf	plusw1,w,c
 32679   015D12  5E2C               	subwf	(btemp+10)^0,f,c
 32680   015D14  0EFF               	movlw	-1
 32681   015D16  50E3               	movf	plusw1,w,c
 32682   015D18  5A2D               	subwfb	(btemp+11)^0,f,c
 32683   015D1A  0E00               	movlw	0
 32684   015D1C  242C               	addwf	(btemp+10)^0,w,c
 32685   015D1E  6ED9               	movwf	fsr2l,c
 32686   015D20  0E01               	movlw	1
 32687   015D22  202D               	addwfc	(btemp+11)^0,w,c
 32688   015D24  6EDA               	movwf	fsr2h,c
 32689   015D26  50DF               	movf	indf2,w,c
 32690   015D28  6EE6               	movwf	postinc1,c
 32691                           
 32692                           ;stkvar	_i @ sp[(-3)+0]
 32693                           ; multi bank
 32694   015D2A  010D               	movlb	(_V+373) shr (0+8)	;volatile
 32695   015D2C  518F               	movf	(_V+373)& (0+255),w,b	;volatile
 32696   015D2E  0B03               	andlw	3
 32697   015D30  6E2D               	movwf	(btemp+11)^0,c
 32698   015D32  6A2C               	clrf	(btemp+10)^0,c
 32699   015D34  0EFD               	movlw	-3
 32700   015D36  50E3               	movf	plusw1,w,c
 32701   015D38  262C               	addwf	(btemp+10)^0,f,c
 32702   015D3A  0EFE               	movlw	-2
 32703   015D3C  50E3               	movf	plusw1,w,c
 32704   015D3E  222D               	addwfc	(btemp+11)^0,f,c
 32705   015D40  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 32706   015D46  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 32707   015D4C  EC80  F0B7         	call	_DATAEE_WriteByte	;wreg free
 32708                           
 32709                           ;gemsecs.c: 1222:  } while (++i <= 255);
 32710                           ;stkvar	_i @ sp[(-2)+0]
 32711   015D50  0EFE               	movlw	-2
 32712   015D52  50E3               	movf	plusw1,w,c
 32713   015D54  0F01               	addlw	1
 32714   015D56  6E22               	movwf	btemp^0,c
 32715   015D58  0EFE               	movlw	-2
 32716   015D5A  0060  F08B  FFE3   	movff	btemp,plusw1
 32717   015D60  6A22               	clrf	btemp^0,c
 32718   015D62  0EFF               	movlw	-1
 32719   015D64  50E3               	movf	plusw1,w,c
 32720   015D66  2022               	addwfc	btemp^0,w,c
 32721   015D68  6E22               	movwf	btemp^0,c
 32722   015D6A  0EFF               	movlw	-1
 32723   015D6C  0060  F08B  FFE3   	movff	btemp,plusw1
 32724   015D72  0EFF               	movlw	-1
 32725   015D74  04E3               	decf	plusw1,w,c
 32726   015D76  A0D8               	btfss	status,0,c
 32727   015D78  D7C2               	goto	l12413
 32728                           
 32729                           ;gemsecs.c: 1224:  sprintf(V.info, "Saved S%dF%d %d     ", stream, function, V.response.
      +                          log_num);
 32730   015D7A  EE23  F195         	lfsr	2,_V+379	;volatile
 32731   015D7E  006F FF78  F02C    	movff	postinc2,btemp+10
 32732   015D84  006F FF74  F02D    	movff	postdec2,btemp+11
 32733   015D8A  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 32734   015D90  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 32735                           
 32736                           ;stkvar	_function @ sp[(-4)+-2]
 32737   015D96  0EFA               	movlw	-6
 32738   015D98  50E3               	movf	plusw1,w,c
 32739   015D9A  6EE6               	movwf	postinc1,c
 32740   015D9C  0E00               	movlw	0
 32741   015D9E  6EE6               	movwf	postinc1,c
 32742                           
 32743                           ;stkvar	_stream @ sp[(-6)+-1]
 32744   015DA0  0EF9               	movlw	-7
 32745   015DA2  50E3               	movf	plusw1,w,c
 32746   015DA4  6EE6               	movwf	postinc1,c
 32747   015DA6  0E00               	movlw	0
 32748   015DA8  6EE6               	movwf	postinc1,c
 32749   015DAA  0EF5               	movlw	low STR_36
 32750   015DAC  6EE6               	movwf	postinc1,c
 32751   015DAE  0EFD               	movlw	high STR_36
 32752   015DB0  6EE6               	movwf	postinc1,c
 32753   015DB2  0E01               	movlw	low (_V+231)
 32754   015DB4  6EE6               	movwf	postinc1,c
 32755   015DB6  0E0D               	movlw	high (_V+231)
 32756   015DB8  6EE6               	movwf	postinc1,c
 32757   015DBA  0E0A               	movlw	10
 32758   015DBC  6EE6               	movwf	postinc1,c
 32759   015DBE  EC32  F0B2         	call	_sprintf	;wreg free
 32760                           
 32761                           ; BSR set to: 1
 32762                           ;gemsecs.c: 1225:  StartTimer(TMR_INFO, dtime);
 32763                           ;stkvar	_dtime @ sp[(-2)+-4]
 32764   015DC2  0EFA               	movlw	-6
 32765   015DC4  006F FF8F FFE6     	movff	plusw1,postinc1
 32766   015DCA  006F FF8F FFE6     	movff	plusw1,postinc1
 32767   015DD0  0E07               	movlw	7
 32768   015DD2  6EE6               	movwf	postinc1,c
 32769   015DD4  EC2A  F0BC         	call	_StartTimer	;wreg free
 32770                           
 32771                           ;gemsecs.c: 1226:  V.response.info = DIS_LOG;
 32772   015DD8  0E02               	movlw	2
 32773   015DDA  006F FFA0  FD91    	movff	wreg,_V+375	;volatile
 32774                           
 32775                           ;gemsecs.c: 1227:  V.response.log_num++;
 32776   015DE0  EE23  F195         	lfsr	2,_V+379	;volatile
 32777   015DE4  2ADE               	incf	postinc2,f,c
 32778   015DE6  0E00               	movlw	0
 32779   015DE8  22DD               	addwfc	postdec2,f,c
 32780                           
 32781                           ;gemsecs.c: 1228:  V.response.log_seq++;
 32782   015DEA  0063  F63F  FFE8   	movff	_V+373,wreg	;volatile
 32783   015DF0  0F01               	addlw	1
 32784   015DF2  006F FFA0  FD8F    	movff	wreg,_V+373	;volatile
 32785                           
 32786                           ;gemsecs.c: 1229:  if (V.response.log_seq >= 3)
 32787   015DF8  EE23  F18F         	lfsr	2,_V+373	;volatile
 32788   015DFC  0E02               	movlw	2
 32789   015DFE  64DF               	cpfsgt	indf2,c
 32790   015E00  D004               	goto	l2205
 32791                           
 32792                           ;gemsecs.c: 1230:   V.response.log_seq = 0;
 32793   015E02  0E00               	movlw	0
 32794   015E04  006F FFA0  FD8F    	movff	wreg,_V+373	;volatile
 32795   015E0A                     l2205:
 32796                           
 32797                           ; _ee_logger: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 32798   015E0A  0EF8               	movlw	248
 32799   015E0C  26E1               	addwf	fsr1l,f,c
 32800   015E0E  0EFF               	movlw	255
 32801   015E10  22E2               	addwfc	fsr1h,f,c
 32802   015E12  0012               	return		;funcret
 32803   015E14                     __end_of_ee_logger:
 32804                           	callstack 0
 32805                           
 32806 ;; *************** function _DATAEE_WriteByte *****************
 32807 ;; Defined at:
 32808 ;;		line 172 in file "mcc_generated_files/memory.c"
 32809 ;; Parameters:    Size  Location     Type
 32810 ;;  bAdd            2  [STACK] unsigned short 
 32811 ;;  bData           1  [STACK] unsigned char 
 32812 ;; Auto vars:     Size  Location     Type
 32813 ;;  GIEBitValue     1  [STACK] unsigned char 
 32814 ;; Return value:  Size  Location     Type
 32815 ;;                  1  [STACK] void 
 32816 ;; Registers used:
 32817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 32818 ;; Tracked objects:
 32819 ;;		On entry : 0/3C
 32820 ;;		On exit  : 0/0
 32821 ;;		Unchanged: 0/0
 32822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32827 ;;Total ram usage:        0 bytes
 32828 ;; Hardware stack levels used: 1
 32829 ;; Hardware stack levels required when called: 3
 32830 ;; This function calls:
 32831 ;;		Nothing
 32832 ;; This function is called by:
 32833 ;;		_secs_II_message
 32834 ;;		_ee_logger
 32835 ;; This function uses a reentrant model
 32836 ;;
 32837                           
 32838                           	psect	text26
 32839   016F00                     __ptext26:
 32840                           	callstack 0
 32841   016F00                     _DATAEE_WriteByte:
 32842                           	callstack 0
 32843                           
 32844                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32845   016F00  52E6               	movf	postinc1,f,c
 32846                           
 32847                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 32848                           
 32849                           ;incstack = 0
 32850   016F02  AED2               	btfss	210,7,c	;volatile
 32851   016F04  D003               	goto	u5230
 32852   016F06  6A2D               	clrf	(btemp+11)^0,c
 32853   016F08  2A2D               	incf	(btemp+11)^0,f,c
 32854   016F0A  D001               	goto	u5238
 32855   016F0C                     u5230:
 32856   016F0C  6A2D               	clrf	(btemp+11)^0,c
 32857   016F0E                     u5238:
 32858                           
 32859                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 32860   016F0E  0EFF               	movlw	-1
 32861   016F10  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 32862                           
 32863                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 32864                           ;stkvar	_bAdd @ sp[(-1)+-2]
 32865   016F16  0EFE               	movlw	254
 32866   016F18  24E1               	addwf	fsr1l,w,c
 32867   016F1A  6ED9               	movwf	fsr2l,c
 32868   016F1C  0EFF               	movlw	255
 32869   016F1E  20E2               	addwfc	fsr1h,w,c
 32870   016F20  6EDA               	movwf	fsr2h,c
 32871   016F22  50DF               	movf	indf2,w,c
 32872   016F24  0B03               	andlw	3
 32873   016F26  0139               	movlb	57	; () banked
 32874   016F28  6FE1               	movwf	225,b	;volatile
 32875                           
 32876                           ; BSR set to: 57
 32877                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 32878                           ;stkvar	_bAdd @ sp[(-1)+-2]
 32879   016F2A  0EFD               	movlw	-3
 32880   016F2C  006F FF8F F9E0     	movff	plusw1,14816	;volatile
 32881                           
 32882                           ; BSR set to: 57
 32883                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 32884                           ;stkvar	_bData @ sp[(-1)+-3]
 32885   016F32  0EFC               	movlw	-4
 32886   016F34  006F FF8F F9E3     	movff	plusw1,14819	;volatile
 32887                           
 32888                           ; BSR set to: 57
 32889                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 32890   016F3A  0E3F               	movlw	-193
 32891   016F3C  17E5               	andwf	229,f,b	;volsfr
 32892                           
 32893                           ; BSR set to: 57
 32894                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 32895   016F3E  85E5               	bsf	229,2,b	;volsfr
 32896                           
 32897                           ; BSR set to: 57
 32898                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 32899   016F40  9ED2               	bcf	210,7,c	;volatile
 32900                           
 32901                           ; BSR set to: 57
 32902                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 32903   016F42  0E55               	movlw	85
 32904   016F44  6FE6               	movwf	230,b	;volsfr
 32905                           
 32906                           ; BSR set to: 57
 32907                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 32908   016F46  0EAA               	movlw	170
 32909   016F48  6FE6               	movwf	230,b	;volsfr
 32910                           
 32911                           ; BSR set to: 57
 32912                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 32913   016F4A  83E5               	bsf	229,1,b	;volsfr
 32914   016F4C                     l1080:
 32915                           
 32916                           ; BSR set to: 57
 32917                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 32918   016F4C  B3E5               	btfsc	229,1,b	;volsfr
 32919   016F4E  D7FE               	goto	l1080
 32920                           
 32921                           ; BSR set to: 57
 32922                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 32923   016F50  95E5               	bcf	229,2,b	;volsfr
 32924                           
 32925                           ; BSR set to: 57
 32926                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 32927                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 32928   016F52  0EFF               	movlw	-1
 32929   016F54  B0E3               	btfsc	plusw1,0,c
 32930   016F56  D002               	bra	u5255
 32931   016F58  9ED2               	bcf	210,7,c	;volatile
 32932   016F5A  D001               	bra	u5256
 32933   016F5C                     u5255:
 32934   016F5C  8ED2               	bsf	210,7,c	;volatile
 32935   016F5E                     u5256:
 32936                           
 32937                           ; _DATAEE_WriteByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 32938   016F5E  52E5               	movf	postdec1,f,c
 32939   016F60  52E5               	movf	postdec1,f,c
 32940   016F62  52E5               	movf	postdec1,f,c
 32941   016F64  52E5               	movf	postdec1,f,c
 32942   016F66  0012               	return		;funcret
 32943   016F68                     __end_of_DATAEE_WriteByte:
 32944                           	callstack 0
 32945                           
 32946 ;; *************** function _run_checksum *****************
 32947 ;; Defined at:
 32948 ;;		line 43 in file "gemsecs.c"
 32949 ;; Parameters:    Size  Location     Type
 32950 ;;  byte_block      1  [STACK] const unsigned char 
 32951 ;;  clear           1  [STACK] const _Bool 
 32952 ;; Auto vars:     Size  Location     Type
 32953 ;;		None
 32954 ;; Return value:  Size  Location     Type
 32955 ;;                  2  [STACK] unsigned short 
 32956 ;; Registers used:
 32957 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 32958 ;; Tracked objects:
 32959 ;;		On entry : 6/39
 32960 ;;		On exit  : 3F/0
 32961 ;;		Unchanged: 0/0
 32962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32967 ;;Total ram usage:        0 bytes
 32968 ;; Hardware stack levels used: 1
 32969 ;; Hardware stack levels required when called: 3
 32970 ;; This function calls:
 32971 ;;		Nothing
 32972 ;; This function is called by:
 32973 ;;		_m_protocol
 32974 ;;		_r_protocol
 32975 ;; This function uses a reentrant model
 32976 ;;
 32977                           
 32978                           	psect	text27
 32979   017ADE                     __ptext27:
 32980                           	callstack 0
 32981   017ADE                     _run_checksum:
 32982                           	callstack 26
 32983                           
 32984                           ;gemsecs.c: 43: uint16_t run_checksum(const uint8_t byte_block, const _Bool clear);gemse
      +                          cs.c: 44: {;gemsecs.c: 45:  static uint16_t sum = 0;;gemsecs.c: 47:  if (clear)
 32985                           ;stkvar	_clear @ sp[(0)+-2]
 32986                           
 32987                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32988                           ;incstack = 0
 32989   017ADE  0EFE               	movlw	-2
 32990   017AE0  50E3               	movf	plusw1,w,c
 32991   017AE2  B4D8               	btfsc	status,2,c
 32992   017AE4  D003               	goto	l9337
 32993                           
 32994                           ;gemsecs.c: 48:   sum = 0;
 32995   017AE6  0100               	movlb	0	; () banked
 32996   017AE8  6BBC               	clrf	run_checksum@sum& (0+255),b
 32997   017AEA  6BBD               	clrf	(run_checksum@sum+1)& (0+255),b
 32998   017AEC                     l9337:
 32999                           
 33000                           ;gemsecs.c: 50:  sum += byte_block;
 33001                           ;stkvar	_byte_block @ sp[(0)+-1]
 33002   017AEC  0EFF               	movlw	-1
 33003   017AEE  50E3               	movf	plusw1,w,c
 33004   017AF0  0100               	movlb	0	; () banked
 33005   017AF2  27BC               	addwf	run_checksum@sum& (0+255),f,b
 33006   017AF4  0E00               	movlw	0
 33007   017AF6  23BD               	addwfc	(run_checksum@sum+1)& (0+255),f,b
 33008                           
 33009                           ; BSR set to: 0
 33010                           ;gemsecs.c: 51:  return sum;
 33011   017AF8  C0BC  F022         	movff	run_checksum@sum,btemp
 33012   017AFC  C0BD  F023         	movff	run_checksum@sum+1,btemp+1
 33013                           
 33014                           ; BSR set to: 0
 33015                           ; _run_checksum: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
 33016   017B00  52E5               	movf	postdec1,f,c
 33017   017B02  52E5               	movf	postdec1,f,c
 33018   017B04  0012               	return		;funcret
 33019   017B06                     __end_of_run_checksum:
 33020                           	callstack 0
 33021                           
 33022 ;; *************** function _UART2_is_rx_ready *****************
 33023 ;; Defined at:
 33024 ;;		line 137 in file "mcc_generated_files/uart2.c"
 33025 ;; Parameters:    Size  Location     Type
 33026 ;;		None
 33027 ;; Auto vars:     Size  Location     Type
 33028 ;;		None
 33029 ;; Return value:  Size  Location     Type
 33030 ;;                  1  [STACK] unsigned char 
 33031 ;; Registers used:
 33032 ;;		btemp
 33033 ;; Tracked objects:
 33034 ;;		On entry : 0/3C
 33035 ;;		On exit  : 0/0
 33036 ;;		Unchanged: 0/0
 33037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33042 ;;Total ram usage:        0 bytes
 33043 ;; Hardware stack levels used: 1
 33044 ;; Hardware stack levels required when called: 3
 33045 ;; This function calls:
 33046 ;;		Nothing
 33047 ;; This function is called by:
 33048 ;;		_m_protocol
 33049 ;; This function uses a reentrant model
 33050 ;;
 33051                           
 33052                           	psect	text28
 33053   0180DA                     __ptext28:
 33054                           	callstack 0
 33055   0180DA                     _UART2_is_rx_ready:
 33056                           	callstack 26
 33057                           
 33058                           ;mcc_generated_files/uart2.c: 139:     return uart2RxCount;
 33059                           
 33060                           ; BSR set to: 0
 33061                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33062                           ;incstack = 0
 33063   0180DA  C00F  F022         	movff	_uart2RxCount,btemp	;volatile
 33064                           
 33065                           ; _UART2_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33066   0180DE  0012               	return		;funcret
 33067   0180E0                     __end_of_UART2_is_rx_ready:
 33068                           	callstack 0
 33069                           
 33070 ;; *************** function _UART2_Read *****************
 33071 ;; Defined at:
 33072 ;;		line 152 in file "mcc_generated_files/uart2.c"
 33073 ;; Parameters:    Size  Location     Type
 33074 ;;		None
 33075 ;; Auto vars:     Size  Location     Type
 33076 ;;  readValue       1  [STACK] unsigned char 
 33077 ;; Return value:  Size  Location     Type
 33078 ;;                  1  [STACK] unsigned char 
 33079 ;; Registers used:
 33080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
 33081 ;; Tracked objects:
 33082 ;;		On entry : 0/3C
 33083 ;;		On exit  : 3F/39
 33084 ;;		Unchanged: 0/0
 33085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33090 ;;Total ram usage:        0 bytes
 33091 ;; Hardware stack levels used: 1
 33092 ;; Hardware stack levels required when called: 3
 33093 ;; This function calls:
 33094 ;;		Nothing
 33095 ;; This function is called by:
 33096 ;;		_m_protocol
 33097 ;; This function uses a reentrant model
 33098 ;;
 33099                           
 33100                           	psect	text29
 33101   0177A0                     __ptext29:
 33102                           	callstack 0
 33103   0177A0                     _UART2_Read:
 33104                           	callstack 0
 33105                           
 33106                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33107   0177A0  52E6               	movf	postinc1,f,c
 33108   0177A2                     
 33109                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
 33110                           
 33111                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
 33112   0177A2  500F               	movf	_uart2RxCount^0,w,c	;volatile
 33113   0177A4  B4D8               	btfsc	status,2,c
 33114   0177A6  D7FD               	goto	l9253
 33115                           
 33116                           ;mcc_generated_files/uart2.c: 160:     readValue = uart2RxBuffer[uart2RxTail++];
 33117   0177A8  0E00               	movlw	low _uart2RxBuffer
 33118   0177AA  2410               	addwf	_uart2RxTail^0,w,c	;volatile
 33119   0177AC  6ED9               	movwf	fsr2l,c
 33120   0177AE  6ADA               	clrf	fsr2h,c
 33121   0177B0  0E05               	movlw	high _uart2RxBuffer
 33122   0177B2  22DA               	addwfc	fsr2h,f,c
 33123   0177B4  50DF               	movf	indf2,w,c
 33124   0177B6  6E2D               	movwf	(btemp+11)^0,c
 33125                           
 33126                           ;stkvar	_readValue @ sp[(-1)+0]
 33127   0177B8  0EFF               	movlw	-1
 33128   0177BA  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 33129   0177C0  2A10               	incf	_uart2RxTail^0,f,c	;volatile
 33130                           
 33131                           ;mcc_generated_files/uart2.c: 161:     if(sizeof(uart2RxBuffer) <= uart2RxTail)
 33132   0177C2  2810               	incf	_uart2RxTail^0,w,c
 33133   0177C4  B4D8               	btfsc	status,2,c
 33134                           
 33135                           ;mcc_generated_files/uart2.c: 162:     {;mcc_generated_files/uart2.c: 163:         uart2
      +                          RxTail = 0;
 33136   0177C6  6A10               	clrf	_uart2RxTail^0,c	;volatile
 33137                           
 33138                           ;mcc_generated_files/uart2.c: 165:     PIE6bits.U2RXIE = 0;
 33139                           
 33140                           ;mcc_generated_files/uart2.c: 164:     }
 33141   0177C8  0139               	movlb	57	; () banked
 33142   0177CA  9596               	bcf	150,2,b	;volatile
 33143                           
 33144                           ; BSR set to: 57
 33145                           ;mcc_generated_files/uart2.c: 166:     uart2RxCount--;
 33146   0177CC  060F               	decf	_uart2RxCount^0,f,c	;volatile
 33147                           
 33148                           ; BSR set to: 57
 33149                           ;mcc_generated_files/uart2.c: 167:     PIE6bits.U2RXIE = 1;
 33150   0177CE  8596               	bsf	150,2,b	;volatile
 33151                           
 33152                           ; BSR set to: 57
 33153                           ;mcc_generated_files/uart2.c: 169:     return readValue;
 33154                           ;stkvar	_readValue @ sp[(-1)+0]
 33155   0177D0  0EFF               	movlw	-1
 33156   0177D2  006F FF8C  F022    	movff	plusw1,btemp
 33157                           
 33158                           ; BSR set to: 57
 33159                           ; _UART2_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 33160   0177D8  52E5               	movf	postdec1,f,c
 33161   0177DA  0012               	return		;funcret
 33162   0177DC                     __end_of_UART2_Read:
 33163                           	callstack 0
 33164                           
 33165 ;; *************** function _UART1_is_rx_ready *****************
 33166 ;; Defined at:
 33167 ;;		line 147 in file "mcc_generated_files/uart1.c"
 33168 ;; Parameters:    Size  Location     Type
 33169 ;;		None
 33170 ;; Auto vars:     Size  Location     Type
 33171 ;;		None
 33172 ;; Return value:  Size  Location     Type
 33173 ;;                  1  [STACK] unsigned char 
 33174 ;; Registers used:
 33175 ;;		btemp
 33176 ;; Tracked objects:
 33177 ;;		On entry : 0/3C
 33178 ;;		On exit  : 0/0
 33179 ;;		Unchanged: 0/0
 33180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33185 ;;Total ram usage:        0 bytes
 33186 ;; Hardware stack levels used: 1
 33187 ;; Hardware stack levels required when called: 3
 33188 ;; This function calls:
 33189 ;;		Nothing
 33190 ;; This function is called by:
 33191 ;;		_m_protocol
 33192 ;;		_r_protocol
 33193 ;;		_t_protocol
 33194 ;; This function uses a reentrant model
 33195 ;;
 33196                           
 33197                           	psect	text30
 33198   0180E0                     __ptext30:
 33199                           	callstack 0
 33200   0180E0                     _UART1_is_rx_ready:
 33201                           	callstack 26
 33202                           
 33203                           ;mcc_generated_files/uart1.c: 149:  return uart1RxCount;
 33204                           
 33205                           ; BSR set to: 57
 33206                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33207                           ;incstack = 0
 33208   0180E0  C015  F022         	movff	_uart1RxCount,btemp	;volatile
 33209                           
 33210                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33211   0180E4  0012               	return		;funcret
 33212   0180E6                     __end_of_UART1_is_rx_ready:
 33213                           	callstack 0
 33214                           
 33215 ;; *************** function _UART1_Read *****************
 33216 ;; Defined at:
 33217 ;;		line 162 in file "mcc_generated_files/uart1.c"
 33218 ;; Parameters:    Size  Location     Type
 33219 ;;		None
 33220 ;; Auto vars:     Size  Location     Type
 33221 ;;  readValue       1  [STACK] unsigned char 
 33222 ;; Return value:  Size  Location     Type
 33223 ;;                  1  [STACK] unsigned char 
 33224 ;; Registers used:
 33225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
 33226 ;; Tracked objects:
 33227 ;;		On entry : 0/3C
 33228 ;;		On exit  : 3F/39
 33229 ;;		Unchanged: 0/0
 33230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33235 ;;Total ram usage:        0 bytes
 33236 ;; Hardware stack levels used: 1
 33237 ;; Hardware stack levels required when called: 3
 33238 ;; This function calls:
 33239 ;;		Nothing
 33240 ;; This function is called by:
 33241 ;;		_m_protocol
 33242 ;;		_r_protocol
 33243 ;;		_t_protocol
 33244 ;; This function uses a reentrant model
 33245 ;;
 33246                           
 33247                           	psect	text31
 33248   0177DC                     __ptext31:
 33249                           	callstack 0
 33250   0177DC                     _UART1_Read:
 33251                           	callstack 0
 33252                           
 33253                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33254   0177DC  52E6               	movf	postinc1,f,c
 33255   0177DE                     
 33256                           ;mcc_generated_files/uart1.c: 166:  while (0 == uart1RxCount) {
 33257                           
 33258                           ;mcc_generated_files/uart1.c: 166:  while (0 == uart1RxCount) {
 33259   0177DE  5015               	movf	_uart1RxCount^0,w,c	;volatile
 33260   0177E0  B4D8               	btfsc	status,2,c
 33261   0177E2  D7FD               	goto	l9229
 33262                           
 33263                           ;mcc_generated_files/uart1.c: 169:  readValue = uart1RxBuffer[uart1RxTail++];
 33264   0177E4  0E00               	movlw	low _uart1RxBuffer
 33265   0177E6  2416               	addwf	_uart1RxTail^0,w,c	;volatile
 33266   0177E8  6ED9               	movwf	fsr2l,c
 33267   0177EA  6ADA               	clrf	fsr2h,c
 33268   0177EC  0E04               	movlw	high _uart1RxBuffer
 33269   0177EE  22DA               	addwfc	fsr2h,f,c
 33270   0177F0  50DF               	movf	indf2,w,c
 33271   0177F2  6E2D               	movwf	(btemp+11)^0,c
 33272                           
 33273                           ;stkvar	_readValue @ sp[(-1)+0]
 33274   0177F4  0EFF               	movlw	-1
 33275   0177F6  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 33276   0177FC  2A16               	incf	_uart1RxTail^0,f,c	;volatile
 33277                           
 33278                           ;mcc_generated_files/uart1.c: 170:  if (sizeof(uart1RxBuffer) <= uart1RxTail) {
 33279   0177FE  2816               	incf	_uart1RxTail^0,w,c
 33280   017800  B4D8               	btfsc	status,2,c
 33281                           
 33282                           ;mcc_generated_files/uart1.c: 171:   uart1RxTail = 0;
 33283   017802  6A16               	clrf	_uart1RxTail^0,c	;volatile
 33284                           
 33285                           ;mcc_generated_files/uart1.c: 173:  PIE3bits.U1RXIE = 0;
 33286                           
 33287                           ;mcc_generated_files/uart1.c: 172:  }
 33288   017804  0139               	movlb	57	; () banked
 33289   017806  9793               	bcf	147,3,b	;volatile
 33290                           
 33291                           ; BSR set to: 57
 33292                           ;mcc_generated_files/uart1.c: 174:  uart1RxCount--;
 33293   017808  0615               	decf	_uart1RxCount^0,f,c	;volatile
 33294                           
 33295                           ; BSR set to: 57
 33296                           ;mcc_generated_files/uart1.c: 175:  PIE3bits.U1RXIE = 1;
 33297   01780A  8793               	bsf	147,3,b	;volatile
 33298                           
 33299                           ; BSR set to: 57
 33300                           ;mcc_generated_files/uart1.c: 177:  return readValue;
 33301                           ;stkvar	_readValue @ sp[(-1)+0]
 33302   01780C  0EFF               	movlw	-1
 33303   01780E  006F FF8C  F022    	movff	plusw1,btemp
 33304                           
 33305                           ; BSR set to: 57
 33306                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 33307   017814  52E5               	movf	postdec1,f,c
 33308   017816  0012               	return		;funcret
 33309   017818                     __end_of_UART1_Read:
 33310                           	callstack 0
 33311                           
 33312 ;; *************** function _init_display *****************
 33313 ;; Defined at:
 33314 ;;		line 37 in file "eadog.c"
 33315 ;; Parameters:    Size  Location     Type
 33316 ;;		None
 33317 ;; Auto vars:     Size  Location     Type
 33318 ;;		None
 33319 ;; Return value:  Size  Location     Type
 33320 ;;                  1  [STACK] void 
 33321 ;; Registers used:
 33322 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 33323 ;; Tracked objects:
 33324 ;;		On entry : 0/3C
 33325 ;;		On exit  : 3F/3D
 33326 ;;		Unchanged: 0/0
 33327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33332 ;;Total ram usage:        0 bytes
 33333 ;; Hardware stack levels used: 1
 33334 ;; Hardware stack levels required when called: 5
 33335 ;; This function calls:
 33336 ;;		_ringBufS_init
 33337 ;;		_send_lcd_cmd
 33338 ;;		_send_lcd_cmd_long
 33339 ;;		_wdtdelay
 33340 ;; This function is called by:
 33341 ;;		_main
 33342 ;; This function uses a reentrant model
 33343 ;;
 33344                           
 33345                           	psect	text32
 33346   016642                     __ptext32:
 33347                           	callstack 0
 33348   016642                     _init_display:
 33349                           	callstack 25
 33350                           
 33351                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
 33352                           
 33353                           ; BSR set to: 57
 33354                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33355                           ;incstack = 0
 33356   016642  0E80               	movlw	low _ring_buf1
 33357   016644  0100               	movlb	0	; () banked
 33358   016646  6F8D               	movwf	(_spi_link+6)& (0+255),b	;volatile
 33359   016648  0E02               	movlw	high _ring_buf1
 33360   01664A  6F8E               	movwf	(_spi_link+7)& (0+255),b	;volatile
 33361                           
 33362                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
 33363   01664C  0E00               	movlw	low _ring_buf2
 33364   01664E  6F8B               	movwf	(_spi_link+4)& (0+255),b	;volatile
 33365   016650  0E03               	movlw	high _ring_buf2
 33366   016652  6F8C               	movwf	(_spi_link+5)& (0+255),b	;volatile
 33367                           
 33368                           ; BSR set to: 0
 33369                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
 33370   016654  0060  F237  FFE6   	movff	_spi_link+6,postinc1
 33371   01665A  0060  F23B  FFE6   	movff	_spi_link+7,postinc1
 33372   016660  ECAB  F0BD         	call	_ringBufS_init	;wreg free
 33373                           
 33374                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
 33375   016664  0060  F22F  FFE6   	movff	_spi_link+4,postinc1
 33376   01666A  0060  F233  FFE6   	movff	_spi_link+5,postinc1
 33377   016670  ECAB  F0BD         	call	_ringBufS_init	;wreg free
 33378                           
 33379                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
 33380   016674  84BE               	bsf	190,2,c	;volatile
 33381   016676  84BC               	bsf	188,2,c	;volatile
 33382                           
 33383                           ;eadog.c: 46:  wdtdelay(350000);
 33384   016678  0E30               	movlw	48
 33385   01667A  6EE6               	movwf	postinc1,c
 33386   01667C  0E57               	movlw	87
 33387   01667E  6EE6               	movwf	postinc1,c
 33388   016680  0E05               	movlw	5
 33389   016682  6EE6               	movwf	postinc1,c
 33390   016684  0E00               	movlw	0
 33391   016686  6EE6               	movwf	postinc1,c
 33392   016688  EC6F  F0B9         	call	_wdtdelay	;wreg free
 33393                           
 33394                           ; BSR set to: 0
 33395                           ;eadog.c: 47:  send_lcd_cmd(0x39);
 33396   01668C  0E39               	movlw	57
 33397   01668E  6EE6               	movwf	postinc1,c
 33398   016690  EC97  F0BD         	call	_send_lcd_cmd	;wreg free
 33399                           
 33400                           ; BSR set to: 0
 33401                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
 33402   016694  0E1D               	movlw	29
 33403   016696  6EE6               	movwf	postinc1,c
 33404   016698  EC97  F0BD         	call	_send_lcd_cmd	;wreg free
 33405                           
 33406                           ; BSR set to: 0
 33407                           ;eadog.c: 49:  send_lcd_cmd(0x50);
 33408   01669C  0E50               	movlw	80
 33409   01669E  6EE6               	movwf	postinc1,c
 33410   0166A0  EC97  F0BD         	call	_send_lcd_cmd	;wreg free
 33411                           
 33412                           ; BSR set to: 0
 33413                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
 33414   0166A4  0E6C               	movlw	108
 33415   0166A6  6EE6               	movwf	postinc1,c
 33416   0166A8  EC97  F0BD         	call	_send_lcd_cmd	;wreg free
 33417                           
 33418                           ; BSR set to: 0
 33419                           ;eadog.c: 51:  send_lcd_cmd(0x76);
 33420   0166AC  0E76               	movlw	118
 33421   0166AE  6EE6               	movwf	postinc1,c
 33422   0166B0  EC97  F0BD         	call	_send_lcd_cmd	;wreg free
 33423                           
 33424                           ; BSR set to: 0
 33425                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
 33426   0166B4  0E38               	movlw	56
 33427   0166B6  6EE6               	movwf	postinc1,c
 33428   0166B8  EC83  F0BD         	call	_send_lcd_cmd_long	;wreg free
 33429                           
 33430                           ; BSR set to: 0
 33431                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
 33432   0166BC  0E0F               	movlw	15
 33433   0166BE  6EE6               	movwf	postinc1,c
 33434   0166C0  EC97  F0BD         	call	_send_lcd_cmd	;wreg free
 33435                           
 33436                           ; BSR set to: 0
 33437                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
 33438   0166C4  0E01               	movlw	1
 33439   0166C6  6EE6               	movwf	postinc1,c
 33440   0166C8  EC83  F0BD         	call	_send_lcd_cmd_long	;wreg free
 33441                           
 33442                           ; BSR set to: 0
 33443                           ;eadog.c: 55:  send_lcd_cmd(0x02);
 33444   0166CC  0E02               	movlw	2
 33445   0166CE  6EE6               	movwf	postinc1,c
 33446   0166D0  EC97  F0BD         	call	_send_lcd_cmd	;wreg free
 33447                           
 33448                           ; BSR set to: 0
 33449                           ;eadog.c: 56:  send_lcd_cmd(0x06);
 33450   0166D4  0E06               	movlw	6
 33451   0166D6  6EE6               	movwf	postinc1,c
 33452   0166D8  EC97  F0BD         	call	_send_lcd_cmd	;wreg free
 33453                           
 33454                           ; BSR set to: 0
 33455                           ;eadog.c: 57:  wdtdelay(30);
 33456   0166DC  0E1E               	movlw	30
 33457   0166DE  6EE6               	movwf	postinc1,c
 33458   0166E0  0E00               	movlw	0
 33459   0166E2  6EE6               	movwf	postinc1,c
 33460   0166E4  0E00               	movlw	0
 33461   0166E6  6EE6               	movwf	postinc1,c
 33462   0166E8  0E00               	movlw	0
 33463   0166EA  6EE6               	movwf	postinc1,c
 33464   0166EC  EC6F  F0B9         	call	_wdtdelay	;wreg free
 33465                           
 33466                           ; BSR set to: 0
 33467                           ;eadog.c: 58:  SPI1CON2 = 0x02;
 33468   0166F0  0E02               	movlw	2
 33469   0166F2  013D               	movlb	61	; () banked
 33470   0166F4  6F16               	movwf	22,b	;volatile
 33471                           
 33472                           ; BSR set to: 61
 33473                           ;eadog.c: 59:  SPI1CON1 = 0x40;
 33474   0166F6  0E40               	movlw	64
 33475   0166F8  6F15               	movwf	21,b	;volatile
 33476                           
 33477                           ; BSR set to: 61
 33478                           ;eadog.c: 60:  SPI1CON0 = 0x83;
 33479   0166FA  0E83               	movlw	131
 33480   0166FC  6F14               	movwf	20,b	;volatile
 33481                           
 33482                           ; BSR set to: 61
 33483                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
 33484   0166FE  931A               	bcf	26,1,b	;volatile
 33485                           
 33486                           ; BSR set to: 61
 33487                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
 33488   016700  0E3F               	movlw	-193
 33489   016702  013B               	movlb	59	; () banked
 33490   016704  17FD               	andwf	253,f,b	;volatile
 33491                           
 33492                           ; BSR set to: 59
 33493                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
 33494   016706  9BFD               	bcf	253,5,b	;volatile
 33495                           
 33496                           ; BSR set to: 59
 33497                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
 33498   016708  51FD               	movf	253,w,b	;volatile
 33499   01670A  0BF9               	andlw	-7
 33500   01670C  0902               	iorlw	2
 33501   01670E  6FFD               	movwf	253,b	;volatile
 33502                           
 33503                           ; BSR set to: 59
 33504                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
 33505   016710  0EE7               	movlw	-25
 33506   016712  17FD               	andwf	253,f,b	;volatile
 33507                           
 33508                           ; BSR set to: 59
 33509                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
 33510   016714  81FD               	bsf	253,0,b	;volatile
 33511                           
 33512                           ; BSR set to: 59
 33513                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
 33514   016716  0E80               	movlw	low _ring_buf1
 33515   016718  6FF9               	movwf	249,b	;volatile
 33516   01671A  0E02               	movlw	high _ring_buf1
 33517   01671C  6FFA               	movwf	250,b	;volatile
 33518   01671E  0E00               	movlw	low (_ring_buf1 shr (0+16))
 33519   016720  6FFB               	movwf	251,b	;volatile
 33520                           
 33521                           ; BSR set to: 59
 33522                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
 33523   016722  9BFC               	bcf	252,5,b	;volatile
 33524                           
 33525                           ; BSR set to: 59
 33526                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
 33527   016724  013D               	movlb	61	; () banked
 33528   016726  831A               	bsf	26,1,b	;volatile
 33529                           
 33530                           ; BSR set to: 61
 33531                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
 33532   016728  94BE               	bcf	190,2,c	;volatile
 33533                           
 33534                           ; BSR set to: 61
 33535                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 33536   01672A  0012               	return		;funcret
 33537   01672C                     __end_of_init_display:
 33538                           	callstack 0
 33539                           
 33540 ;; *************** function _send_lcd_cmd_long *****************
 33541 ;; Defined at:
 33542 ;;		line 114 in file "eadog.c"
 33543 ;; Parameters:    Size  Location     Type
 33544 ;;  cmd             1  [STACK] const unsigned char 
 33545 ;; Auto vars:     Size  Location     Type
 33546 ;;		None
 33547 ;; Return value:  Size  Location     Type
 33548 ;;                  1  [STACK] void 
 33549 ;; Registers used:
 33550 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 33551 ;; Tracked objects:
 33552 ;;		On entry : 3F/0
 33553 ;;		On exit  : 3F/0
 33554 ;;		Unchanged: 0/0
 33555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33560 ;;Total ram usage:        0 bytes
 33561 ;; Hardware stack levels used: 1
 33562 ;; Hardware stack levels required when called: 4
 33563 ;; This function calls:
 33564 ;;		_SPI1_Exchange8bit
 33565 ;;		_wdtdelay
 33566 ;; This function is called by:
 33567 ;;		_init_display
 33568 ;; This function uses a reentrant model
 33569 ;;
 33570                           
 33571                           	psect	text33
 33572   017B06                     __ptext33:
 33573                           	callstack 0
 33574   017B06                     _send_lcd_cmd_long:
 33575                           	callstack 25
 33576                           
 33577                           ; BSR set to: 61
 33578                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33579                           ;incstack = 0
 33580                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
 33581   017B06  92BC               	bcf	188,1,c	;volatile
 33582                           
 33583                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
 33584   017B08  94BC               	bcf	188,2,c	;volatile
 33585                           
 33586                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
 33587                           ;stkvar	_cmd @ sp[(0)+-1]
 33588   017B0A  0EFF               	movlw	-1
 33589   017B0C  50E3               	movf	plusw1,w,c
 33590   017B0E  6EE6               	movwf	postinc1,c
 33591   017B10  EC64  F0BF         	call	_SPI1_Exchange8bit	;wreg free
 33592                           
 33593                           ; BSR set to: 57
 33594                           ;eadog.c: 119:  wdtdelay(800);
 33595   017B14  0E20               	movlw	32
 33596   017B16  6EE6               	movwf	postinc1,c
 33597   017B18  0E03               	movlw	3
 33598   017B1A  6EE6               	movwf	postinc1,c
 33599   017B1C  0E00               	movlw	0
 33600   017B1E  6EE6               	movwf	postinc1,c
 33601   017B20  0E00               	movlw	0
 33602   017B22  6EE6               	movwf	postinc1,c
 33603   017B24  EC6F  F0B9         	call	_wdtdelay	;wreg free
 33604                           
 33605                           ; BSR set to: 0
 33606   017B28  82BC               	bsf	188,1,c	;volatile
 33607                           
 33608                           ; BSR set to: 0
 33609                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 33610   017B2A  52E5               	movf	postdec1,f,c
 33611   017B2C  0012               	return		;funcret
 33612   017B2E                     __end_of_send_lcd_cmd_long:
 33613                           	callstack 0
 33614                           
 33615 ;; *************** function _send_lcd_cmd *****************
 33616 ;; Defined at:
 33617 ;;		line 102 in file "eadog.c"
 33618 ;; Parameters:    Size  Location     Type
 33619 ;;  cmd             1  [STACK] const unsigned char 
 33620 ;; Auto vars:     Size  Location     Type
 33621 ;;		None
 33622 ;; Return value:  Size  Location     Type
 33623 ;;                  1  [STACK] void 
 33624 ;; Registers used:
 33625 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 33626 ;; Tracked objects:
 33627 ;;		On entry : 3F/0
 33628 ;;		On exit  : 3F/0
 33629 ;;		Unchanged: 0/0
 33630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33635 ;;Total ram usage:        0 bytes
 33636 ;; Hardware stack levels used: 1
 33637 ;; Hardware stack levels required when called: 4
 33638 ;; This function calls:
 33639 ;;		_SPI1_Exchange8bit
 33640 ;;		_wdtdelay
 33641 ;; This function is called by:
 33642 ;;		_init_display
 33643 ;; This function uses a reentrant model
 33644 ;;
 33645                           
 33646                           	psect	text34
 33647   017B2E                     __ptext34:
 33648                           	callstack 0
 33649   017B2E                     _send_lcd_cmd:
 33650                           	callstack 25
 33651                           
 33652                           ; BSR set to: 0
 33653                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33654                           ;incstack = 0
 33655                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
 33656   017B2E  92BC               	bcf	188,1,c	;volatile
 33657                           
 33658                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
 33659   017B30  94BC               	bcf	188,2,c	;volatile
 33660                           
 33661                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
 33662                           ;stkvar	_cmd @ sp[(0)+-1]
 33663   017B32  0EFF               	movlw	-1
 33664   017B34  50E3               	movf	plusw1,w,c
 33665   017B36  6EE6               	movwf	postinc1,c
 33666   017B38  EC64  F0BF         	call	_SPI1_Exchange8bit	;wreg free
 33667                           
 33668                           ; BSR set to: 57
 33669                           ;eadog.c: 107:  wdtdelay(30);
 33670   017B3C  0E1E               	movlw	30
 33671   017B3E  6EE6               	movwf	postinc1,c
 33672   017B40  0E00               	movlw	0
 33673   017B42  6EE6               	movwf	postinc1,c
 33674   017B44  0E00               	movlw	0
 33675   017B46  6EE6               	movwf	postinc1,c
 33676   017B48  0E00               	movlw	0
 33677   017B4A  6EE6               	movwf	postinc1,c
 33678   017B4C  EC6F  F0B9         	call	_wdtdelay	;wreg free
 33679                           
 33680                           ; BSR set to: 0
 33681   017B50  82BC               	bsf	188,1,c	;volatile
 33682                           
 33683                           ; BSR set to: 0
 33684                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
 33685   017B52  52E5               	movf	postdec1,f,c
 33686   017B54  0012               	return		;funcret
 33687   017B56                     __end_of_send_lcd_cmd:
 33688                           	callstack 0
 33689                           
 33690 ;; *************** function _SPI1_Exchange8bit *****************
 33691 ;; Defined at:
 33692 ;;		line 79 in file "mcc_generated_files/spi1.c"
 33693 ;; Parameters:    Size  Location     Type
 33694 ;;  data            1  [STACK] unsigned char 
 33695 ;; Auto vars:     Size  Location     Type
 33696 ;;		None
 33697 ;; Return value:  Size  Location     Type
 33698 ;;                  1  [STACK] unsigned char 
 33699 ;; Registers used:
 33700 ;;		wreg, fsr1l, fsr1h, status,2, btemp
 33701 ;; Tracked objects:
 33702 ;;		On entry : 0/0
 33703 ;;		On exit  : 3F/39
 33704 ;;		Unchanged: 0/0
 33705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33710 ;;Total ram usage:        0 bytes
 33711 ;; Hardware stack levels used: 1
 33712 ;; Hardware stack levels required when called: 3
 33713 ;; This function calls:
 33714 ;;		Nothing
 33715 ;; This function is called by:
 33716 ;;		_send_lcd_cmd
 33717 ;;		_send_lcd_cmd_long
 33718 ;; This function uses a reentrant model
 33719 ;;
 33720                           
 33721                           	psect	text35
 33722   017EC8                     __ptext35:
 33723                           	callstack 0
 33724   017EC8                     _SPI1_Exchange8bit:
 33725                           	callstack 25
 33726                           
 33727                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
 33728                           
 33729                           ; BSR set to: 0
 33730                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33731                           ;incstack = 0
 33732   017EC8  0E01               	movlw	1
 33733   017ECA  013D               	movlb	61	; () banked
 33734   017ECC  6F12               	movwf	18,b	;volatile
 33735                           
 33736                           ; BSR set to: 61
 33737                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
 33738                           ;stkvar	_data @ sp[(0)+-1]
 33739   017ECE  0EFF               	movlw	-1
 33740   017ED0  006F FF8F FD11     	movff	plusw1,15633	;volatile
 33741   017ED6                     l863:
 33742                           
 33743                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
 33744   017ED6  0139               	movlb	57	; () banked
 33745   017ED8  A9A2               	btfss	162,4,b	;volatile
 33746   017EDA  D7FD               	goto	l863
 33747                           
 33748                           ; BSR set to: 57
 33749                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
 33750   017EDC  006F F440  F022    	movff	15632,btemp	;volatile
 33751                           
 33752                           ; BSR set to: 57
 33753                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 33754   017EE2  52E5               	movf	postdec1,f,c
 33755   017EE4  0012               	return		;funcret
 33756   017EE6                     __end_of_SPI1_Exchange8bit:
 33757                           	callstack 0
 33758                           
 33759 ;; *************** function _ringBufS_init *****************
 33760 ;; Defined at:
 33761 ;;		line 22 in file "ringbufs.c"
 33762 ;; Parameters:    Size  Location     Type
 33763 ;;  _this           2  [STACK] PTR volatile struct ring
 33764 ;;		 -> ring_buf2(67), ring_buf1(67), 
 33765 ;; Auto vars:     Size  Location     Type
 33766 ;;		None
 33767 ;; Return value:  Size  Location     Type
 33768 ;;                  1  [STACK] void 
 33769 ;; Registers used:
 33770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 33771 ;; Tracked objects:
 33772 ;;		On entry : 0/0
 33773 ;;		On exit  : 0/0
 33774 ;;		Unchanged: 0/0
 33775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33780 ;;Total ram usage:        0 bytes
 33781 ;; Hardware stack levels used: 1
 33782 ;; Hardware stack levels required when called: 4
 33783 ;; This function calls:
 33784 ;;		_memset
 33785 ;; This function is called by:
 33786 ;;		_init_display
 33787 ;; This function uses a reentrant model
 33788 ;;
 33789                           
 33790                           	psect	text36
 33791   017B56                     __ptext36:
 33792                           	callstack 0
 33793   017B56                     _ringBufS_init:
 33794                           	callstack 25
 33795                           
 33796                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
 33797                           
 33798                           ; BSR set to: 57
 33799                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33800                           ;incstack = 0
 33801   017B56  0E43               	movlw	67
 33802   017B58  6EE6               	movwf	postinc1,c
 33803   017B5A  0E00               	movlw	0
 33804   017B5C  6EE6               	movwf	postinc1,c
 33805   017B5E  0E00               	movlw	0
 33806   017B60  6EE6               	movwf	postinc1,c
 33807   017B62  0E00               	movlw	0
 33808   017B64  6EE6               	movwf	postinc1,c
 33809                           
 33810                           ;stkvar	__this @ sp[(-4)+-2]
 33811   017B66  0EFA               	movlw	-6
 33812   017B68  006F FF8F FFE6     	movff	plusw1,postinc1
 33813   017B6E  006F FF8F FFE6     	movff	plusw1,postinc1
 33814   017B74  EC27  F0B6         	call	_memset	;wreg free
 33815                           
 33816                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 33817   017B78  52E5               	movf	postdec1,f,c
 33818   017B7A  52E5               	movf	postdec1,f,c
 33819   017B7C  0012               	return		;funcret
 33820   017B7E                     __end_of_ringBufS_init:
 33821                           	callstack 0
 33822                           
 33823 ;; *************** function _hb_message *****************
 33824 ;; Defined at:
 33825 ;;		line 572 in file "gemsecs.c"
 33826 ;; Parameters:    Size  Location     Type
 33827 ;;		None
 33828 ;; Auto vars:     Size  Location     Type
 33829 ;;		None
 33830 ;; Return value:  Size  Location     Type
 33831 ;;                  1  [STACK] void 
 33832 ;; Registers used:
 33833 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33834 ;; Tracked objects:
 33835 ;;		On entry : 0/3C
 33836 ;;		On exit  : 0/0
 33837 ;;		Unchanged: 0/0
 33838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33843 ;;Total ram usage:        0 bytes
 33844 ;; Hardware stack levels used: 1
 33845 ;; Hardware stack levels required when called: 3
 33846 ;; This function calls:
 33847 ;;		Nothing
 33848 ;; This function is called by:
 33849 ;;		_main
 33850 ;; This function uses a reentrant model
 33851 ;;
 33852                           
 33853                           	psect	text37
 33854   01738C                     __ptext37:
 33855                           	callstack 0
 33856   01738C                     _hb_message:
 33857                           	callstack 27
 33858                           
 33859                           ;gemsecs.c: 574:  V.ping++;
 33860                           
 33861                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33862                           ;incstack = 0
 33863   01738C  EE23  F15D         	lfsr	2,_V+323	;volatile
 33864   017390  2ADE               	incf	postinc2,f,c
 33865   017392  0E00               	movlw	0
 33866   017394  22DD               	addwfc	postdec2,f,c
 33867                           
 33868                           ;gemsecs.c: 575:  V.s_state = SEQ_STATE_TX;
 33869   017396  0E02               	movlw	2
 33870   017398  006F FFA0  FC1A    	movff	wreg,_V
 33871                           
 33872                           ;gemsecs.c: 576:  V.failed_send = 0;
 33873   01739E  EE23  F167         	lfsr	2,_V+333	;volatile
 33874   0173A2  0E0F               	movlw	-241
 33875   0173A4  16DF               	andwf	223,f,c
 33876                           
 33877                           ;gemsecs.c: 577:  V.t_l_state = LINK_STATE_IDLE;
 33878   0173A6  0E00               	movlw	0
 33879   0173A8  006F FFA0  FC20    	movff	wreg,_V+6	;volatile
 33880                           
 33881                           ;gemsecs.c: 578:  if (V.msg_error == MSG_ERROR_NONE) {
 33882   0173AE  EE23  F151         	lfsr	2,_V+311	;volatile
 33883   0173B2  50DF               	movf	indf2,w,c
 33884   0173B4  A4D8               	btfss	status,2,c
 33885   0173B6  D009               	goto	l1990
 33886                           
 33887                           ;gemsecs.c: 579:   V.stream = 1;
 33888   0173B8  0E01               	movlw	1
 33889   0173BA  006F FFA0  FD4D    	movff	wreg,_V+307	;volatile
 33890                           
 33891                           ;gemsecs.c: 580:   V.function = 2;
 33892   0173C0  0E02               	movlw	2
 33893   0173C2  006F FFA0  FD4E    	movff	wreg,_V+308	;volatile
 33894                           
 33895                           ;gemsecs.c: 581:  } else {
 33896   0173C8  0012               	return	
 33897   0173CA                     l1990:
 33898                           
 33899                           ;gemsecs.c: 582:   V.stream = 1;
 33900   0173CA  0E01               	movlw	1
 33901   0173CC  006F FFA0  FD4D    	movff	wreg,_V+307	;volatile
 33902                           
 33903                           ;gemsecs.c: 583:   V.function = 14;
 33904   0173D2  0E0E               	movlw	14
 33905   0173D4  006F FFA0  FD4E    	movff	wreg,_V+308	;volatile
 33906                           
 33907                           ; _hb_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 33908   0173DA  0012               	return		;funcret
 33909   0173DC                     __end_of_hb_message:
 33910                           	callstack 0
 33911                           
 33912 ;; *************** function _eaDogM_WriteCommand *****************
 33913 ;; Defined at:
 33914 ;;		line 160 in file "eadog.c"
 33915 ;; Parameters:    Size  Location     Type
 33916 ;;  cmd             1  [STACK] const unsigned char 
 33917 ;; Auto vars:     Size  Location     Type
 33918 ;;		None
 33919 ;; Return value:  Size  Location     Type
 33920 ;;                  1  [STACK] void 
 33921 ;; Registers used:
 33922 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 33923 ;; Tracked objects:
 33924 ;;		On entry : 3F/3D
 33925 ;;		On exit  : 3F/0
 33926 ;;		Unchanged: 0/0
 33927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33932 ;;Total ram usage:        0 bytes
 33933 ;; Hardware stack levels used: 1
 33934 ;; Hardware stack levels required when called: 13
 33935 ;; This function calls:
 33936 ;;		_send_lcd_cmd_dma
 33937 ;; This function is called by:
 33938 ;;		_main
 33939 ;; This function uses a reentrant model
 33940 ;;
 33941                           
 33942                           	psect	text38
 33943   018074                     __ptext38:
 33944                           	callstack 0
 33945   018074                     _eaDogM_WriteCommand:
 33946                           	callstack 17
 33947                           
 33948                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
 33949                           ;stkvar	_cmd @ sp[(0)+-1]
 33950                           
 33951                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33952                           ;incstack = 0
 33953   018074  0EFF               	movlw	-1
 33954   018076  50E3               	movf	plusw1,w,c
 33955   018078  6EE6               	movwf	postinc1,c
 33956   01807A  EC9C  F0B9         	call	_send_lcd_cmd_dma	;wreg free
 33957                           
 33958                           ; BSR set to: 0
 33959                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
 33960   01807E  52E5               	movf	postdec1,f,c
 33961   018080  0012               	return		;funcret
 33962   018082                     __end_of_eaDogM_WriteCommand:
 33963                           	callstack 0
 33964                           
 33965 ;; *************** function _check_help *****************
 33966 ;; Defined at:
 33967 ;;		line 40 in file "mconfig.c"
 33968 ;; Parameters:    Size  Location     Type
 33969 ;;  flipper         1  [STACK] _Bool 
 33970 ;; Auto vars:     Size  Location     Type
 33971 ;;		None
 33972 ;; Return value:  Size  Location     Type
 33973 ;;                  1  [STACK] void 
 33974 ;; Registers used:
 33975 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 33976 ;; Tracked objects:
 33977 ;;		On entry : 0/1
 33978 ;;		On exit  : 0/0
 33979 ;;		Unchanged: 0/0
 33980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33985 ;;Total ram usage:        0 bytes
 33986 ;; Hardware stack levels used: 1
 33987 ;; Hardware stack levels required when called: 15
 33988 ;; This function calls:
 33989 ;;		_StartTimer
 33990 ;;		_TimerDone
 33991 ;;		_display_help
 33992 ;;		_display_info
 33993 ;;		_get_vterm_ptr
 33994 ;;		_help_button
 33995 ;;		_mode_lamp_bright
 33996 ;;		_mode_lamp_dim
 33997 ;;		_set_display_info
 33998 ;;		_set_temp_display_help
 33999 ;;		_set_vterm
 34000 ;;		_sprintf
 34001 ;;		_update_lcd
 34002 ;;		_vterm_dump
 34003 ;; This function is called by:
 34004 ;;		_main
 34005 ;; This function uses a reentrant model
 34006 ;;
 34007                           
 34008                           	psect	text39
 34009   014A44                     __ptext39:
 34010                           	callstack 0
 34011   014A44                     _check_help:
 34012                           	callstack 15
 34013                           
 34014                           ;mconfig.c: 40: void check_help(_Bool flipper);mconfig.c: 41: {;mconfig.c: 45:  if (help
      +                          _button() && display_info() != DIS_HELP) {
 34015                           
 34016                           ; BSR set to: 0
 34017                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34018                           ;incstack = 0
 34019   014A44  EC0C  F0BC         	call	_help_button	;wreg free
 34020   014A48  5022               	movf	btemp^0,w,c
 34021   014A4A  B4D8               	btfsc	status,2,c
 34022   014A4C  D0CC               	goto	l13637
 34023   014A4E  EC5F  F0C0         	call	_display_info	;wreg free
 34024   014A52  0E06               	movlw	6
 34025   014A54  1822               	xorwf	btemp^0,w,c
 34026   014A56  B4D8               	btfsc	status,2,c
 34027   014A58  D0C6               	goto	l13637
 34028                           
 34029                           ;mconfig.c: 46:   StartTimer(TMR_FLIPPER, 1500);
 34030   014A5A  0EDC               	movlw	220
 34031   014A5C  6EE6               	movwf	postinc1,c
 34032   014A5E  0E05               	movlw	5
 34033   014A60  6EE6               	movwf	postinc1,c
 34034   014A62  0E0C               	movlw	12
 34035   014A64  6EE6               	movwf	postinc1,c
 34036   014A66  EC2A  F0BC         	call	_StartTimer	;wreg free
 34037                           
 34038                           ;mconfig.c: 47:   if (V.debug)
 34039   014A6A  EE23  F168         	lfsr	2,_V+334	;volatile
 34040   014A6E  BADF               	btfsc	indf2,5,c
 34041                           
 34042                           ;mconfig.c: 48:    vterm_dump();
 34043   014A70  EC50  F0AD         	call	_vterm_dump	;wreg free
 34044                           
 34045                           ;mconfig.c: 50:   set_vterm(1);
 34046   014A74  0E01               	movlw	1
 34047   014A76  6EE6               	movwf	postinc1,c
 34048   014A78  EC73  F0BF         	call	_set_vterm	;wreg free
 34049                           
 34050                           ;mconfig.c: 51:   set_temp_display_help(display_info());
 34051   014A7C  EC5F  F0C0         	call	_display_info	;wreg free
 34052   014A80  5022               	movf	btemp^0,w,c
 34053   014A82  6EE6               	movwf	postinc1,c
 34054   014A84  EC28  F0C0         	call	_set_temp_display_help	;wreg free
 34055                           
 34056                           ;mconfig.c: 52:   set_display_info(DIS_HELP);
 34057   014A88  0E06               	movlw	6
 34058   014A8A  6EE6               	movwf	postinc1,c
 34059   014A8C  EC54  F0BF         	call	_set_display_info	;wreg free
 34060                           
 34061                           ;mconfig.c: 53:   if (flipper) {
 34062                           ;stkvar	_flipper @ sp[(0)+-1]
 34063   014A90  0EFF               	movlw	-1
 34064   014A92  50E3               	movf	plusw1,w,c
 34065   014A94  B4D8               	btfsc	status,2,c
 34066   014A96  D019               	goto	l13625
 34067                           
 34068                           ;mconfig.c: 54:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 34069   014A98  0EC9               	movlw	low STR_37
 34070   014A9A  6EE6               	movwf	postinc1,c
 34071   014A9C  0EFF               	movlw	high STR_37
 34072   014A9E  6EE6               	movwf	postinc1,c
 34073   014AA0  0ED6               	movlw	low STR_39
 34074   014AA2  6EE6               	movwf	postinc1,c
 34075   014AA4  0EFE               	movlw	high STR_39
 34076   014AA6  6EE6               	movwf	postinc1,c
 34077   014AA8  0E01               	movlw	1
 34078   014AAA  6EE6               	movwf	postinc1,c
 34079   014AAC  0E00               	movlw	0
 34080   014AAE  6EE6               	movwf	postinc1,c
 34081   014AB0  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 34082   014AB4  0060  F08B  FFE6   	movff	btemp,postinc1
 34083   014ABA  0060  F08F  FFE6   	movff	btemp+1,postinc1
 34084   014AC0  0E06               	movlw	6
 34085   014AC2  6EE6               	movwf	postinc1,c
 34086   014AC4  EC32  F0B2         	call	_sprintf	;wreg free
 34087                           
 34088                           ;mconfig.c: 55:   } else {
 34089   014AC8  D018               	goto	l2381
 34090   014ACA                     l13625:
 34091                           
 34092                           ;mconfig.c: 56:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
 34093   014ACA  0EDF               	movlw	low STR_38
 34094   014ACC  6EE6               	movwf	postinc1,c
 34095   014ACE  0EFF               	movlw	high STR_38
 34096   014AD0  6EE6               	movwf	postinc1,c
 34097   014AD2  0ED6               	movlw	low STR_39
 34098   014AD4  6EE6               	movwf	postinc1,c
 34099   014AD6  0EFE               	movlw	high STR_39
 34100   014AD8  6EE6               	movwf	postinc1,c
 34101   014ADA  0E01               	movlw	1
 34102   014ADC  6EE6               	movwf	postinc1,c
 34103   014ADE  0E00               	movlw	0
 34104   014AE0  6EE6               	movwf	postinc1,c
 34105   014AE2  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 34106   014AE6  0060  F08B  FFE6   	movff	btemp,postinc1
 34107   014AEC  0060  F08F  FFE6   	movff	btemp+1,postinc1
 34108   014AF2  0E06               	movlw	6
 34109   014AF4  6EE6               	movwf	postinc1,c
 34110   014AF6  EC32  F0B2         	call	_sprintf	;wreg free
 34111   014AFA                     l2381:
 34112                           
 34113                           ; BSR set to: 1
 34114                           ;mconfig.c: 58:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 34115   014AFA  EE23  F169         	lfsr	2,_V+335	;volatile
 34116   014AFE  30DF               	rrcf	223,w,c
 34117   014B00  32E8               	rrcf	wreg,f,c
 34118   014B02  32E8               	rrcf	wreg,f,c
 34119   014B04  0B03               	andlw	3
 34120   014B06  0D40               	mullw	64
 34121   014B08  0E20               	movlw	low (_T+32)
 34122   014B0A  24F3               	addwf	243,w,c
 34123   014B0C  6E2C               	movwf	(btemp+10)^0,c
 34124   014B0E  0E06               	movlw	high (_T+32)
 34125   014B10  20F4               	addwfc	prodh,w,c
 34126   014B12  6E2D               	movwf	(btemp+11)^0,c
 34127   014B14  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 34128   014B1A  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 34129   014B20  0ED5               	movlw	low STR_41
 34130   014B22  6EE6               	movwf	postinc1,c
 34131   014B24  0EFF               	movlw	high STR_41
 34132   014B26  6EE6               	movwf	postinc1,c
 34133   014B28  0E01               	movlw	1
 34134   014B2A  6EE6               	movwf	postinc1,c
 34135   014B2C  0E01               	movlw	1
 34136   014B2E  6EE6               	movwf	postinc1,c
 34137   014B30  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 34138   014B34  0060  F08B  FFE6   	movff	btemp,postinc1
 34139   014B3A  0060  F08F  FFE6   	movff	btemp+1,postinc1
 34140   014B40  0E06               	movlw	6
 34141   014B42  6EE6               	movwf	postinc1,c
 34142   014B44  EC32  F0B2         	call	_sprintf	;wreg free
 34143                           
 34144                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 34145   014B48  EE23  F169         	lfsr	2,_V+335	;volatile
 34146   014B4C  30DF               	rrcf	223,w,c
 34147   014B4E  32E8               	rrcf	wreg,f,c
 34148   014B50  32E8               	rrcf	wreg,f,c
 34149   014B52  0B03               	andlw	3
 34150   014B54  0D40               	mullw	64
 34151   014B56  0E00               	movlw	low _T
 34152   014B58  24F3               	addwf	243,w,c
 34153   014B5A  6E2C               	movwf	(btemp+10)^0,c
 34154   014B5C  0E06               	movlw	high _T
 34155   014B5E  20F4               	addwfc	prodh,w,c
 34156   014B60  6E2D               	movwf	(btemp+11)^0,c
 34157   014B62  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 34158   014B68  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 34159   014B6E  0ED5               	movlw	low STR_41
 34160   014B70  6EE6               	movwf	postinc1,c
 34161   014B72  0EFF               	movlw	high STR_41
 34162   014B74  6EE6               	movwf	postinc1,c
 34163   014B76  0E01               	movlw	1
 34164   014B78  6EE6               	movwf	postinc1,c
 34165   014B7A  0E02               	movlw	2
 34166   014B7C  6EE6               	movwf	postinc1,c
 34167   014B7E  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 34168   014B82  0060  F08B  FFE6   	movff	btemp,postinc1
 34169   014B88  0060  F08F  FFE6   	movff	btemp+1,postinc1
 34170   014B8E  0E06               	movlw	6
 34171   014B90  6EE6               	movwf	postinc1,c
 34172   014B92  EC32  F0B2         	call	_sprintf	;wreg free
 34173                           
 34174                           ; BSR set to: 1
 34175                           ;mconfig.c: 60:   V.help_id++;
 34176   014B96  EE23  F169         	lfsr	2,_V+335	;volatile
 34177   014B9A  30DF               	rrcf	223,w,c
 34178   014B9C  6E2D               	movwf	(btemp+11)^0,c
 34179   014B9E  322D               	rrcf	(btemp+11)^0,f,c
 34180   014BA0  302D               	rrcf	(btemp+11)^0,w,c
 34181   014BA2  0B03               	andlw	3
 34182   014BA4  6E2D               	movwf	(btemp+11)^0,c
 34183   014BA6  2A2D               	incf	(btemp+11)^0,f,c
 34184   014BA8  362D               	rlcf	(btemp+11)^0,f,c
 34185   014BAA  362D               	rlcf	(btemp+11)^0,f,c
 34186   014BAC  362D               	rlcf	(btemp+11)^0,f,c
 34187   014BAE  50DF               	movf	223,w,c
 34188   014BB0  182D               	xorwf	(btemp+11)^0,w,c
 34189   014BB2  0BE7               	andlw	-25
 34190   014BB4  182D               	xorwf	(btemp+11)^0,w,c
 34191   014BB6  6EDF               	movwf	223,c
 34192                           
 34193                           ; BSR set to: 1
 34194                           ;mconfig.c: 61:   StartTimer(TMR_HELPDIS, 3000);
 34195   014BB8  0EB8               	movlw	184
 34196   014BBA  6EE6               	movwf	postinc1,c
 34197   014BBC  0E0B               	movlw	11
 34198   014BBE  6EE6               	movwf	postinc1,c
 34199   014BC0  0E09               	movlw	9
 34200   014BC2  6EE6               	movwf	postinc1,c
 34201   014BC4  EC2A  F0BC         	call	_StartTimer	;wreg free
 34202                           
 34203                           ;mconfig.c: 62:   StartTimer(TMR_INFO, 3000);
 34204   014BC8  0EB8               	movlw	184
 34205   014BCA  6EE6               	movwf	postinc1,c
 34206   014BCC  0E0B               	movlw	11
 34207   014BCE  6EE6               	movwf	postinc1,c
 34208   014BD0  0E07               	movlw	7
 34209   014BD2  6EE6               	movwf	postinc1,c
 34210   014BD4  EC2A  F0BC         	call	_StartTimer	;wreg free
 34211                           
 34212                           ;mconfig.c: 63:   mode_lamp_bright();
 34213   014BD8  EC41  F0C0         	call	_mode_lamp_bright	;wreg free
 34214                           
 34215                           ;mconfig.c: 64:   update_lcd(1);
 34216   014BDC  0E01               	movlw	1
 34217   014BDE  6EE6               	movwf	postinc1,c
 34218   014BE0  ECAA  F0B2         	call	_update_lcd	;wreg free
 34219                           
 34220                           ;mconfig.c: 65:  } else {
 34221   014BE4  D03F               	goto	l2385
 34222   014BE6                     l13637:
 34223                           
 34224                           ;mconfig.c: 66:   if (TimerDone(TMR_HELPDIS)) {
 34225   014BE6  0E09               	movlw	9
 34226   014BE8  6EE6               	movwf	postinc1,c
 34227   014BEA  ECD7  F0BE         	call	_TimerDone	;wreg free
 34228   014BEE  5022               	movf	btemp^0,w,c
 34229   014BF0  B4D8               	btfsc	status,2,c
 34230   014BF2  D038               	goto	l2385
 34231                           
 34232                           ;mconfig.c: 67:    set_vterm(0);
 34233   014BF4  0E00               	movlw	0
 34234   014BF6  6EE6               	movwf	postinc1,c
 34235   014BF8  EC73  F0BF         	call	_set_vterm	;wreg free
 34236                           
 34237                           ;mconfig.c: 68:    V.help = 0;
 34238   014BFC  EE23  F168         	lfsr	2,_V+334	;volatile
 34239   014C00  9CDF               	bcf	indf2,6,c
 34240                           
 34241                           ;mconfig.c: 69:    set_display_info(display_help());
 34242   014C02  EC63  F0C0         	call	_display_help	;wreg free
 34243   014C06  5022               	movf	btemp^0,w,c
 34244   014C08  6EE6               	movwf	postinc1,c
 34245   014C0A  EC54  F0BF         	call	_set_display_info	;wreg free
 34246                           
 34247                           ;mconfig.c: 70:    mode_lamp_dim(V.mode_pwm);
 34248   014C0E  EE23  F15F         	lfsr	2,_V+325	;volatile
 34249   014C12  006F FF78  F02C    	movff	postinc2,btemp+10
 34250   014C18  006F FF74  F02D    	movff	postdec2,btemp+11
 34251   014C1E  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 34252   014C24  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 34253   014C2A  ECF1  F0BF         	call	_mode_lamp_dim	;wreg free
 34254                           
 34255                           ;mconfig.c: 71:    if (TimerDone(TMR_FLIPPER)) {
 34256   014C2E  0E0C               	movlw	12
 34257   014C30  6EE6               	movwf	postinc1,c
 34258   014C32  ECD7  F0BE         	call	_TimerDone	;wreg free
 34259   014C36  5022               	movf	btemp^0,w,c
 34260   014C38  B4D8               	btfsc	status,2,c
 34261   014C3A  D014               	goto	l2385
 34262                           
 34263                           ;mconfig.c: 72:     V.flipper = !V.flipper;
 34264   014C3C  EE23  F19C         	lfsr	2,_V+386	;volatile
 34265   014C40  50DF               	movf	indf2,w,c
 34266   014C42  A4D8               	btfss	status,2,c
 34267   014C44  D003               	goto	u10090
 34268   014C46  6A2D               	clrf	(btemp+11)^0,c
 34269   014C48  2A2D               	incf	(btemp+11)^0,f,c
 34270   014C4A  D001               	goto	u10108
 34271   014C4C                     u10090:
 34272   014C4C  6A2D               	clrf	(btemp+11)^0,c
 34273   014C4E                     u10108:
 34274   014C4E  0060  F0B4  FD9C   	movff	btemp+11,_V+386	;volatile
 34275                           
 34276                           ;mconfig.c: 73:     StartTimer(TMR_FLIPPER, 1500);
 34277   014C54  0EDC               	movlw	220
 34278   014C56  6EE6               	movwf	postinc1,c
 34279   014C58  0E05               	movlw	5
 34280   014C5A  6EE6               	movwf	postinc1,c
 34281   014C5C  0E0C               	movlw	12
 34282   014C5E  6EE6               	movwf	postinc1,c
 34283   014C60  EC2A  F0BC         	call	_StartTimer	;wreg free
 34284   014C64                     l2385:
 34285                           
 34286                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 34287   014C64  52E5               	movf	postdec1,f,c
 34288   014C66  0012               	return		;funcret
 34289   014C68                     __end_of_check_help:
 34290                           	callstack 0
 34291                           
 34292 ;; *************** function _vterm_dump *****************
 34293 ;; Defined at:
 34294 ;;		line 118 in file "mconfig.c"
 34295 ;; Parameters:    Size  Location     Type
 34296 ;;		None
 34297 ;; Auto vars:     Size  Location     Type
 34298 ;;		None
 34299 ;; Return value:  Size  Location     Type
 34300 ;;                  1  [STACK] void 
 34301 ;; Registers used:
 34302 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 34303 ;; Tracked objects:
 34304 ;;		On entry : 0/1
 34305 ;;		On exit  : 0/0
 34306 ;;		Unchanged: 0/0
 34307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34312 ;;Total ram usage:        0 bytes
 34313 ;; Hardware stack levels used: 1
 34314 ;; Hardware stack levels required when called: 14
 34315 ;; This function calls:
 34316 ;;		_WaitMs
 34317 ;;		_eaDogM_WriteStringAtPos
 34318 ;;		_get_vterm_ptr
 34319 ;;		_sprintf
 34320 ;;		_wait_lcd_done
 34321 ;; This function is called by:
 34322 ;;		_check_help
 34323 ;; This function uses a reentrant model
 34324 ;;
 34325                           
 34326                           	psect	text40
 34327   015AA0                     __ptext40:
 34328                           	callstack 0
 34329   015AA0                     _vterm_dump:
 34330                           	callstack 15
 34331                           
 34332                           ;mconfig.c: 120:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 34333                           
 34334                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34335                           ;incstack = 0
 34336   015AA0  0E01               	movlw	1
 34337   015AA2  6EE6               	movwf	postinc1,c
 34338   015AA4  0E00               	movlw	0
 34339   015AA6  6EE6               	movwf	postinc1,c
 34340   015AA8  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 34341   015AAC  0060  F08B  FFE6   	movff	btemp,postinc1
 34342   015AB2  0060  F08F  FFE6   	movff	btemp+1,postinc1
 34343   015AB8  0E00               	movlw	0
 34344   015ABA  6EE6               	movwf	postinc1,c
 34345   015ABC  0E00               	movlw	0
 34346   015ABE  6EE6               	movwf	postinc1,c
 34347   015AC0  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 34348   015AC4  0060  F08B  FFE6   	movff	btemp,postinc1
 34349   015ACA  0060  F08F  FFE6   	movff	btemp+1,postinc1
 34350   015AD0  0EAB               	movlw	low STR_43
 34351   015AD2  6EE6               	movwf	postinc1,c
 34352   015AD4  0EFF               	movlw	high STR_43
 34353   015AD6  6EE6               	movwf	postinc1,c
 34354   015AD8  0E21               	movlw	low (_V+7)
 34355   015ADA  6EE6               	movwf	postinc1,c
 34356   015ADC  0E0C               	movlw	high (_V+7)
 34357   015ADE  6EE6               	movwf	postinc1,c
 34358   015AE0  0E08               	movlw	8
 34359   015AE2  6EE6               	movwf	postinc1,c
 34360   015AE4  EC32  F0B2         	call	_sprintf	;wreg free
 34361                           
 34362                           ; BSR set to: 1
 34363                           ;mconfig.c: 121:  wait_lcd_done();
 34364   015AE8  ECBC  F0BF         	call	_wait_lcd_done	;wreg free
 34365                           
 34366                           ; BSR set to: 0
 34367                           ;mconfig.c: 122:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 34368   015AEC  0E21               	movlw	low (_V+7)
 34369   015AEE  6EE6               	movwf	postinc1,c
 34370   015AF0  0E0C               	movlw	high (_V+7)
 34371   015AF2  6EE6               	movwf	postinc1,c
 34372   015AF4  0E00               	movlw	0
 34373   015AF6  6EE6               	movwf	postinc1,c
 34374   015AF8  0E00               	movlw	0
 34375   015AFA  6EE6               	movwf	postinc1,c
 34376   015AFC  ECBA  F0BC         	call	_eaDogM_WriteStringAtPos	;wreg free
 34377                           
 34378                           ; BSR set to: 59
 34379                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 34380   015B00  0E01               	movlw	1
 34381   015B02  6EE6               	movwf	postinc1,c
 34382   015B04  0E01               	movlw	1
 34383   015B06  6EE6               	movwf	postinc1,c
 34384   015B08  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 34385   015B0C  0060  F08B  FFE6   	movff	btemp,postinc1
 34386   015B12  0060  F08F  FFE6   	movff	btemp+1,postinc1
 34387   015B18  0E00               	movlw	0
 34388   015B1A  6EE6               	movwf	postinc1,c
 34389   015B1C  0E01               	movlw	1
 34390   015B1E  6EE6               	movwf	postinc1,c
 34391   015B20  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 34392   015B24  0060  F08B  FFE6   	movff	btemp,postinc1
 34393   015B2A  0060  F08F  FFE6   	movff	btemp+1,postinc1
 34394   015B30  0EAB               	movlw	low STR_43
 34395   015B32  6EE6               	movwf	postinc1,c
 34396   015B34  0EFF               	movlw	high STR_43
 34397   015B36  6EE6               	movwf	postinc1,c
 34398   015B38  0E21               	movlw	low (_V+7)
 34399   015B3A  6EE6               	movwf	postinc1,c
 34400   015B3C  0E0C               	movlw	high (_V+7)
 34401   015B3E  6EE6               	movwf	postinc1,c
 34402   015B40  0E08               	movlw	8
 34403   015B42  6EE6               	movwf	postinc1,c
 34404   015B44  EC32  F0B2         	call	_sprintf	;wreg free
 34405                           
 34406                           ; BSR set to: 1
 34407                           ;mconfig.c: 124:  wait_lcd_done();
 34408   015B48  ECBC  F0BF         	call	_wait_lcd_done	;wreg free
 34409                           
 34410                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 34411   015B4C  0E21               	movlw	low (_V+7)
 34412   015B4E  6EE6               	movwf	postinc1,c
 34413   015B50  0E0C               	movlw	high (_V+7)
 34414   015B52  6EE6               	movwf	postinc1,c
 34415   015B54  0E00               	movlw	0
 34416   015B56  6EE6               	movwf	postinc1,c
 34417   015B58  0E01               	movlw	1
 34418   015B5A  6EE6               	movwf	postinc1,c
 34419   015B5C  ECBA  F0BC         	call	_eaDogM_WriteStringAtPos	;wreg free
 34420                           
 34421                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 34422   015B60  0E01               	movlw	1
 34423   015B62  6EE6               	movwf	postinc1,c
 34424   015B64  0E02               	movlw	2
 34425   015B66  6EE6               	movwf	postinc1,c
 34426   015B68  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 34427   015B6C  0060  F08B  FFE6   	movff	btemp,postinc1
 34428   015B72  0060  F08F  FFE6   	movff	btemp+1,postinc1
 34429   015B78  0E00               	movlw	0
 34430   015B7A  6EE6               	movwf	postinc1,c
 34431   015B7C  0E02               	movlw	2
 34432   015B7E  6EE6               	movwf	postinc1,c
 34433   015B80  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 34434   015B84  0060  F08B  FFE6   	movff	btemp,postinc1
 34435   015B8A  0060  F08F  FFE6   	movff	btemp+1,postinc1
 34436   015B90  0EAB               	movlw	low STR_43
 34437   015B92  6EE6               	movwf	postinc1,c
 34438   015B94  0EFF               	movlw	high STR_43
 34439   015B96  6EE6               	movwf	postinc1,c
 34440   015B98  0E21               	movlw	low (_V+7)
 34441   015B9A  6EE6               	movwf	postinc1,c
 34442   015B9C  0E0C               	movlw	high (_V+7)
 34443   015B9E  6EE6               	movwf	postinc1,c
 34444   015BA0  0E08               	movlw	8
 34445   015BA2  6EE6               	movwf	postinc1,c
 34446   015BA4  EC32  F0B2         	call	_sprintf	;wreg free
 34447                           
 34448                           ; BSR set to: 1
 34449                           ;mconfig.c: 127:  wait_lcd_done();
 34450   015BA8  ECBC  F0BF         	call	_wait_lcd_done	;wreg free
 34451                           
 34452                           ; BSR set to: 0
 34453                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 34454   015BAC  0E21               	movlw	low (_V+7)
 34455   015BAE  6EE6               	movwf	postinc1,c
 34456   015BB0  0E0C               	movlw	high (_V+7)
 34457   015BB2  6EE6               	movwf	postinc1,c
 34458   015BB4  0E00               	movlw	0
 34459   015BB6  6EE6               	movwf	postinc1,c
 34460   015BB8  0E02               	movlw	2
 34461   015BBA  6EE6               	movwf	postinc1,c
 34462   015BBC  ECBA  F0BC         	call	_eaDogM_WriteStringAtPos	;wreg free
 34463                           
 34464                           ; BSR set to: 59
 34465                           ;mconfig.c: 129:  WaitMs(3000);
 34466   015BC0  0EB8               	movlw	184
 34467   015BC2  6EE6               	movwf	postinc1,c
 34468   015BC4  0E0B               	movlw	11
 34469   015BC6  6EE6               	movwf	postinc1,c
 34470   015BC8  EC9F  F0BC         	call	_WaitMs	;wreg free
 34471                           
 34472                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 34473   015BCC  0012               	return		;funcret
 34474   015BCE                     __end_of_vterm_dump:
 34475                           	callstack 0
 34476                           
 34477 ;; *************** function _WaitMs *****************
 34478 ;; Defined at:
 34479 ;;		line 32 in file "timers.c"
 34480 ;; Parameters:    Size  Location     Type
 34481 ;;  numMilliseco    2  [STACK] const unsigned short 
 34482 ;; Auto vars:     Size  Location     Type
 34483 ;;		None
 34484 ;; Return value:  Size  Location     Type
 34485 ;;                  1  [STACK] void 
 34486 ;; Registers used:
 34487 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 34488 ;; Tracked objects:
 34489 ;;		On entry : 0/3C
 34490 ;;		On exit  : 0/0
 34491 ;;		Unchanged: 0/0
 34492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34497 ;;Total ram usage:        0 bytes
 34498 ;; Hardware stack levels used: 1
 34499 ;; Hardware stack levels required when called: 4
 34500 ;; This function calls:
 34501 ;;		_StartTimer
 34502 ;;		_TimerDone
 34503 ;; This function is called by:
 34504 ;;		_main
 34505 ;;		_m_protocol
 34506 ;;		_r_protocol
 34507 ;;		_vterm_dump
 34508 ;; This function uses a reentrant model
 34509 ;;
 34510                           
 34511                           	psect	text41
 34512   01793E                     __ptext41:
 34513                           	callstack 0
 34514   01793E                     _WaitMs:
 34515                           	callstack 25
 34516                           
 34517                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 34518                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 34519                           
 34520                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34521                           ;incstack = 0
 34522   01793E  0EFE               	movlw	-2
 34523   017940  006F FF8F FFE6     	movff	plusw1,postinc1
 34524   017946  006F FF8F FFE6     	movff	plusw1,postinc1
 34525   01794C  0E00               	movlw	0
 34526   01794E  6EE6               	movwf	postinc1,c
 34527   017950  EC2A  F0BC         	call	_StartTimer	;wreg free
 34528                           
 34529                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 34530   017954  D005               	goto	l8457
 34531   017956                     l2301:
 34532                           
 34533                           ;timers.c: 36:   __nop();
 34534   017956  0000               	nop	
 34535                           
 34536                           ;timers.c: 37:   __nop();
 34537   017958  0000               	nop	
 34538                           
 34539                           ;timers.c: 38:   __nop();
 34540   01795A  0000               	nop	
 34541                           
 34542                           ;timers.c: 39:   __nop();
 34543   01795C  0000               	nop	
 34544   01795E  0004               	clrwdt		;# 
 34545   017960                     l8457:
 34546                           
 34547                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 34548   017960  0E00               	movlw	0
 34549   017962  6EE6               	movwf	postinc1,c
 34550   017964  ECD7  F0BE         	call	_TimerDone	;wreg free
 34551   017968  5022               	movf	btemp^0,w,c
 34552   01796A  B4D8               	btfsc	status,2,c
 34553   01796C  D7F4               	goto	l2301
 34554                           
 34555                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 34556   01796E  52E5               	movf	postdec1,f,c
 34557   017970  52E5               	movf	postdec1,f,c
 34558   017972  0012               	return		;funcret
 34559   017974                     __end_of_WaitMs:
 34560                           	callstack 0
 34561                           
 34562 ;; *************** function _set_vterm *****************
 34563 ;; Defined at:
 34564 ;;		line 104 in file "mconfig.c"
 34565 ;; Parameters:    Size  Location     Type
 34566 ;;  vterm           1  [STACK] unsigned char 
 34567 ;; Auto vars:     Size  Location     Type
 34568 ;;		None
 34569 ;; Return value:  Size  Location     Type
 34570 ;;                  1  [STACK] unsigned char 
 34571 ;; Registers used:
 34572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 34573 ;; Tracked objects:
 34574 ;;		On entry : 0/0
 34575 ;;		On exit  : 0/0
 34576 ;;		Unchanged: 0/0
 34577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34582 ;;Total ram usage:        0 bytes
 34583 ;; Hardware stack levels used: 1
 34584 ;; Hardware stack levels required when called: 3
 34585 ;; This function calls:
 34586 ;;		Nothing
 34587 ;; This function is called by:
 34588 ;;		_main
 34589 ;;		_check_help
 34590 ;; This function uses a reentrant model
 34591 ;;
 34592                           
 34593                           	psect	text42
 34594   017EE6                     __ptext42:
 34595                           	callstack 0
 34596   017EE6                     _set_vterm:
 34597                           	callstack 27
 34598                           
 34599                           ;mconfig.c: 104: uint8_t set_vterm(uint8_t vterm);mconfig.c: 105: {;mconfig.c: 106:  D.v
      +                          term = vterm & 0x03;
 34600                           ;stkvar	_vterm @ sp[(0)+-1]
 34601                           
 34602                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34603                           ;incstack = 0
 34604   017EE6  0EFF               	movlw	-1
 34605   017EE8  006F FF8C  F02D    	movff	plusw1,btemp+11
 34606   017EEE  0E03               	movlw	3
 34607   017EF0  162D               	andwf	(btemp+11)^0,f,c
 34608   017EF2  EE22  F100         	lfsr	2,_D@mconfig$F5156+512
 34609   017EF6  50DF               	movf	223,w,c
 34610   017EF8  182D               	xorwf	(btemp+11)^0,w,c
 34611   017EFA  0BFE               	andlw	-2
 34612   017EFC  182D               	xorwf	(btemp+11)^0,w,c
 34613   017EFE  6EDF               	movwf	223,c
 34614                           
 34615                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 34616   017F00  52E5               	movf	postdec1,f,c
 34617   017F02  0012               	return		;funcret
 34618   017F04                     __end_of_set_vterm:
 34619                           	callstack 0
 34620                           
 34621 ;; *************** function _set_temp_display_help *****************
 34622 ;; Defined at:
 34623 ;;		line 237 in file "mconfig.c"
 34624 ;; Parameters:    Size  Location     Type
 34625 ;;  new_response    1  [STACK] const enum E16750
 34626 ;; Auto vars:     Size  Location     Type
 34627 ;;		None
 34628 ;; Return value:  Size  Location     Type
 34629 ;;                  1  [STACK] enum E16960
 34630 ;; Registers used:
 34631 ;;		wreg, fsr1l, fsr1h, btemp+11
 34632 ;; Tracked objects:
 34633 ;;		On entry : 0/0
 34634 ;;		On exit  : 0/0
 34635 ;;		Unchanged: 0/0
 34636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34641 ;;Total ram usage:        0 bytes
 34642 ;; Hardware stack levels used: 1
 34643 ;; Hardware stack levels required when called: 3
 34644 ;; This function calls:
 34645 ;;		Nothing
 34646 ;; This function is called by:
 34647 ;;		_secs_II_message
 34648 ;;		_check_help
 34649 ;; This function uses a reentrant model
 34650 ;;
 34651                           
 34652                           	psect	text43
 34653   018050                     __ptext43:
 34654                           	callstack 0
 34655   018050                     _set_temp_display_help:
 34656                           	callstack 25
 34657                           
 34658                           ;mconfig.c: 242:  V.response.help_temp = new_response_info;
 34659                           ;stkvar	_new_response_info @ sp[(0)+-1]
 34660                           
 34661                           ;mconfig.c: 237: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 238: {;mconfig.c: 239:  static D_CODES old_info;;mconfig.c: 241:  old_info = V.respon
      +                          se.help_temp;
 34662                           
 34663                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34664                           ;incstack = 0
 34665   018050  0EFF               	movlw	-1
 34666   018052  006F FF8C  F02D    	movff	plusw1,btemp+11
 34667   018058  0060  F0B4  FD92   	movff	btemp+11,_V+376	;volatile
 34668                           
 34669                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 34670   01805E  52E5               	movf	postdec1,f,c
 34671   018060  0012               	return		;funcret
 34672   018062                     __end_of_set_temp_display_help:
 34673                           	callstack 0
 34674                           
 34675 ;; *************** function _set_display_info *****************
 34676 ;; Defined at:
 34677 ;;		line 226 in file "mconfig.c"
 34678 ;; Parameters:    Size  Location     Type
 34679 ;;  new_response    1  [STACK] const enum E16750
 34680 ;; Auto vars:     Size  Location     Type
 34681 ;;		None
 34682 ;; Return value:  Size  Location     Type
 34683 ;;                  1  [STACK] enum E17238
 34684 ;; Registers used:
 34685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
 34686 ;; Tracked objects:
 34687 ;;		On entry : 0/3C
 34688 ;;		On exit  : 0/0
 34689 ;;		Unchanged: 0/0
 34690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34695 ;;Total ram usage:        0 bytes
 34696 ;; Hardware stack levels used: 1
 34697 ;; Hardware stack levels required when called: 4
 34698 ;; This function calls:
 34699 ;;		_TimerDone
 34700 ;; This function is called by:
 34701 ;;		_main
 34702 ;;		_secs_II_message
 34703 ;;		_secs_gem_state
 34704 ;;		_check_help
 34705 ;; This function uses a reentrant model
 34706 ;;
 34707                           
 34708                           	psect	text44
 34709   017EA8                     __ptext44:
 34710                           	callstack 0
 34711   017EA8                     _set_display_info:
 34712                           	callstack 24
 34713                           
 34714                           ;mconfig.c: 226: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 22
      +                          7: {;mconfig.c: 228:  static D_CODES old_info = DIS_STR;;mconfig.c: 230:  if (TimerDone(
      +                          TMR_INFO)) {
 34715                           
 34716                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34717                           ;incstack = 0
 34718   017EA8  0E07               	movlw	7
 34719   017EAA  6EE6               	movwf	postinc1,c
 34720   017EAC  ECD7  F0BE         	call	_TimerDone	;wreg free
 34721   017EB0  5022               	movf	btemp^0,w,c
 34722   017EB2  B4D8               	btfsc	status,2,c
 34723   017EB4  D007               	goto	l2438
 34724                           
 34725                           ;mconfig.c: 232:   V.response.info = new_response_info;
 34726                           ;stkvar	_new_response_info @ sp[(0)+-1]
 34727                           
 34728                           ;mconfig.c: 231:   old_info = V.response.info;
 34729   017EB6  0EFF               	movlw	-1
 34730   017EB8  006F FF8C  F02D    	movff	plusw1,btemp+11
 34731   017EBE  0060  F0B4  FD91   	movff	btemp+11,_V+375	;volatile
 34732   017EC4                     l2438:
 34733                           
 34734                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 34735   017EC4  52E5               	movf	postdec1,f,c
 34736   017EC6  0012               	return		;funcret
 34737   017EC8                     __end_of_set_display_info:
 34738                           	callstack 0
 34739                           
 34740 ;; *************** function _mode_lamp_dim *****************
 34741 ;; Defined at:
 34742 ;;		line 13 in file "mconfig.c"
 34743 ;; Parameters:    Size  Location     Type
 34744 ;;  level           2  [STACK] const unsigned short 
 34745 ;; Auto vars:     Size  Location     Type
 34746 ;;		None
 34747 ;; Return value:  Size  Location     Type
 34748 ;;                  1  [STACK] void 
 34749 ;; Registers used:
 34750 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 34751 ;; Tracked objects:
 34752 ;;		On entry : 0/3C
 34753 ;;		On exit  : 0/0
 34754 ;;		Unchanged: 0/0
 34755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34760 ;;Total ram usage:        0 bytes
 34761 ;; Hardware stack levels used: 1
 34762 ;; Hardware stack levels required when called: 4
 34763 ;; This function calls:
 34764 ;;		_PWM8_LoadDutyValue
 34765 ;; This function is called by:
 34766 ;;		_main
 34767 ;;		_check_help
 34768 ;; This function uses a reentrant model
 34769 ;;
 34770                           
 34771                           	psect	text45
 34772   017FE2                     __ptext45:
 34773                           	callstack 0
 34774   017FE2                     _mode_lamp_dim:
 34775                           	callstack 26
 34776                           
 34777                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 34778                           ;stkvar	_level @ sp[(0)+-2]
 34779                           
 34780                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34781                           ;incstack = 0
 34782   017FE2  0EFE               	movlw	-2
 34783   017FE4  006F FF8F FFE6     	movff	plusw1,postinc1
 34784   017FEA  006F FF8F FFE6     	movff	plusw1,postinc1
 34785   017FF0  ECC8  F0BA         	call	_PWM8_LoadDutyValue	;wreg free
 34786                           
 34787                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 34788   017FF4  52E5               	movf	postdec1,f,c
 34789   017FF6  52E5               	movf	postdec1,f,c
 34790   017FF8  0012               	return		;funcret
 34791   017FFA                     __end_of_mode_lamp_dim:
 34792                           	callstack 0
 34793                           
 34794 ;; *************** function _mode_lamp_bright *****************
 34795 ;; Defined at:
 34796 ;;		line 18 in file "mconfig.c"
 34797 ;; Parameters:    Size  Location     Type
 34798 ;;		None
 34799 ;; Auto vars:     Size  Location     Type
 34800 ;;		None
 34801 ;; Return value:  Size  Location     Type
 34802 ;;                  1  [STACK] void 
 34803 ;; Registers used:
 34804 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 34805 ;; Tracked objects:
 34806 ;;		On entry : 0/1
 34807 ;;		On exit  : 0/0
 34808 ;;		Unchanged: 0/0
 34809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34814 ;;Total ram usage:        0 bytes
 34815 ;; Hardware stack levels used: 1
 34816 ;; Hardware stack levels required when called: 4
 34817 ;; This function calls:
 34818 ;;		_PWM8_LoadDutyValue
 34819 ;; This function is called by:
 34820 ;;		_check_help
 34821 ;; This function uses a reentrant model
 34822 ;;
 34823                           
 34824                           	psect	text46
 34825   018082                     __ptext46:
 34826                           	callstack 0
 34827   018082                     _mode_lamp_bright:
 34828                           	callstack 25
 34829                           
 34830                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 34831                           
 34832                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34833                           ;incstack = 0
 34834   018082  0E2C               	movlw	44
 34835   018084  6EE6               	movwf	postinc1,c
 34836   018086  0E01               	movlw	1
 34837   018088  6EE6               	movwf	postinc1,c
 34838   01808A  ECC8  F0BA         	call	_PWM8_LoadDutyValue	;wreg free
 34839                           
 34840                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 34841   01808E  0012               	return		;funcret
 34842   018090                     __end_of_mode_lamp_bright:
 34843                           	callstack 0
 34844                           
 34845 ;; *************** function _PWM8_LoadDutyValue *****************
 34846 ;; Defined at:
 34847 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 34848 ;; Parameters:    Size  Location     Type
 34849 ;;  dutyValue       2  [STACK] unsigned short 
 34850 ;; Auto vars:     Size  Location     Type
 34851 ;;		None
 34852 ;; Return value:  Size  Location     Type
 34853 ;;                  1  [STACK] void 
 34854 ;; Registers used:
 34855 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 34856 ;; Tracked objects:
 34857 ;;		On entry : 0/3C
 34858 ;;		On exit  : 0/0
 34859 ;;		Unchanged: 0/0
 34860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34865 ;;Total ram usage:        0 bytes
 34866 ;; Hardware stack levels used: 1
 34867 ;; Hardware stack levels required when called: 3
 34868 ;; This function calls:
 34869 ;;		Nothing
 34870 ;; This function is called by:
 34871 ;;		_mode_lamp_dim
 34872 ;;		_mode_lamp_bright
 34873 ;; This function uses a reentrant model
 34874 ;;
 34875                           
 34876                           	psect	text47
 34877   017590                     __ptext47:
 34878                           	callstack 0
 34879   017590                     _PWM8_LoadDutyValue:
 34880                           	callstack 26
 34881                           
 34882                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 34883                           ;stkvar	_dutyValue @ sp[(0)+-2]
 34884                           
 34885                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34886                           ;incstack = 0
 34887   017590  0EFE               	movlw	-2
 34888   017592  006F FF8C  F02C    	movff	plusw1,btemp+10
 34889   017598  0EFF               	movlw	-1
 34890   01759A  006F FF8C  F02D    	movff	plusw1,btemp+11
 34891   0175A0  90D8               	bcf	status,0,c
 34892   0175A2  322D               	rrcf	(btemp+11)^0,f,c
 34893   0175A4  322C               	rrcf	(btemp+10)^0,f,c
 34894   0175A6  90D8               	bcf	status,0,c
 34895   0175A8  322D               	rrcf	(btemp+11)^0,f,c
 34896   0175AA  322C               	rrcf	(btemp+10)^0,f,c
 34897   0175AC  502C               	movf	(btemp+10)^0,w,c
 34898   0175AE  6E61               	movwf	97,c	;volatile
 34899                           
 34900                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 34901                           ;stkvar	_dutyValue @ sp[(0)+-2]
 34902   0175B0  0EFE               	movlw	-2
 34903   0175B2  006F FF8C  F02D    	movff	plusw1,btemp+11
 34904   0175B8  0E03               	movlw	3
 34905   0175BA  162D               	andwf	(btemp+11)^0,f,c
 34906   0175BC  0E06               	movlw	6
 34907   0175BE  6E22               	movwf	btemp^0,c
 34908   0175C0                     u5385:
 34909   0175C0  90D8               	bcf	status,0,c
 34910   0175C2  362D               	rlcf	(btemp+11)^0,f,c
 34911   0175C4  2E22               	decfsz	btemp^0,f,c
 34912   0175C6  D7FC               	goto	u5385
 34913   0175C8  502D               	movf	(btemp+11)^0,w,c
 34914   0175CA  6E60               	movwf	96,c	;volatile
 34915                           
 34916                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 34917   0175CC  52E5               	movf	postdec1,f,c
 34918   0175CE  52E5               	movf	postdec1,f,c
 34919   0175D0  0012               	return		;funcret
 34920   0175D2                     __end_of_PWM8_LoadDutyValue:
 34921                           	callstack 0
 34922                           
 34923 ;; *************** function _help_button *****************
 34924 ;; Defined at:
 34925 ;;		line 26 in file "mconfig.c"
 34926 ;; Parameters:    Size  Location     Type
 34927 ;;		None
 34928 ;; Auto vars:     Size  Location     Type
 34929 ;;		None
 34930 ;; Return value:  Size  Location     Type
 34931 ;;                  1  [STACK] _Bool 
 34932 ;; Registers used:
 34933 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 34934 ;; Tracked objects:
 34935 ;;		On entry : 0/1
 34936 ;;		On exit  : 0/0
 34937 ;;		Unchanged: 0/0
 34938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34943 ;;Total ram usage:        0 bytes
 34944 ;; Hardware stack levels used: 1
 34945 ;; Hardware stack levels required when called: 4
 34946 ;; This function calls:
 34947 ;;		_StartTimer
 34948 ;;		_TimerDone
 34949 ;; This function is called by:
 34950 ;;		_check_help
 34951 ;; This function uses a reentrant model
 34952 ;;
 34953                           
 34954                           	psect	text48
 34955   017818                     __ptext48:
 34956                           	callstack 0
 34957   017818                     _help_button:
 34958                           	callstack 25
 34959                           
 34960                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 34961                           
 34962                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34963                           ;incstack = 0
 34964   017818  B0CB               	btfsc	203,0,c	;volatile
 34965   01781A  D00D               	goto	l9933
 34966                           
 34967                           ;mconfig.c: 29:   V.help = 1;
 34968   01781C  EE23  F168         	lfsr	2,_V+334	;volatile
 34969   017820  8CDF               	bsf	indf2,6,c
 34970                           
 34971                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 34972   017822  0E08               	movlw	8
 34973   017824  6EE6               	movwf	postinc1,c
 34974   017826  ECD7  F0BE         	call	_TimerDone	;wreg free
 34975   01782A  5022               	movf	btemp^0,w,c
 34976   01782C  B4D8               	btfsc	status,2,c
 34977   01782E  D003               	goto	l9933
 34978                           
 34979                           ;mconfig.c: 31:    return 1;
 34980   017830  0E01               	movlw	1
 34981   017832  6E22               	movwf	btemp^0,c
 34982   017834  0012               	return	
 34983   017836                     l9933:
 34984                           
 34985                           ;mconfig.c: 34:  if (!V.help)
 34986   017836  EE23  F168         	lfsr	2,_V+334	;volatile
 34987   01783A  BCDF               	btfsc	indf2,6,c
 34988   01783C  D008               	goto	l9937
 34989                           
 34990                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 34991   01783E  0E2C               	movlw	44
 34992   017840  6EE6               	movwf	postinc1,c
 34993   017842  0E01               	movlw	1
 34994   017844  6EE6               	movwf	postinc1,c
 34995   017846  0E08               	movlw	8
 34996   017848  6EE6               	movwf	postinc1,c
 34997   01784A  EC2A  F0BC         	call	_StartTimer	;wreg free
 34998   01784E                     l9937:
 34999                           
 35000                           ;mconfig.c: 37:  return 0;
 35001   01784E  0E00               	movlw	0
 35002   017850  6E22               	movwf	btemp^0,c
 35003                           
 35004                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 35005   017852  0012               	return		;funcret
 35006   017854                     __end_of_help_button:
 35007                           	callstack 0
 35008                           
 35009 ;; *************** function _StartTimer *****************
 35010 ;; Defined at:
 35011 ;;		line 12 in file "timers.c"
 35012 ;; Parameters:    Size  Location     Type
 35013 ;;  timer           1  [STACK] const unsigned char 
 35014 ;;  count           2  [STACK] const unsigned short 
 35015 ;; Auto vars:     Size  Location     Type
 35016 ;;		None
 35017 ;; Return value:  Size  Location     Type
 35018 ;;                  1  [STACK] void 
 35019 ;; Registers used:
 35020 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 35021 ;; Tracked objects:
 35022 ;;		On entry : 0/1
 35023 ;;		On exit  : 0/0
 35024 ;;		Unchanged: 0/0
 35025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35030 ;;Total ram usage:        0 bytes
 35031 ;; Hardware stack levels used: 1
 35032 ;; Hardware stack levels required when called: 3
 35033 ;; This function calls:
 35034 ;;		Nothing
 35035 ;; This function is called by:
 35036 ;;		_main
 35037 ;;		_m_protocol
 35038 ;;		_r_protocol
 35039 ;;		_t_protocol
 35040 ;;		_sequence_messages
 35041 ;;		_gem_messages
 35042 ;;		_secs_II_message
 35043 ;;		_ee_logger
 35044 ;;		_secs_gem_state
 35045 ;;		_WaitMs
 35046 ;;		_help_button
 35047 ;;		_check_help
 35048 ;; This function uses a reentrant model
 35049 ;;
 35050                           
 35051                           	psect	text49
 35052   017854                     __ptext49:
 35053                           	callstack 0
 35054   017854                     _StartTimer:
 35055                           	callstack 24
 35056                           
 35057                           ;timers.c: 12: __attribute__((inline)) void StartTimer(const uint8_t timer, const uint16
      +                          _t count);timers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
 35058                           ;stkvar	_count @ sp[(0)+-3]
 35059                           
 35060                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35061                           ;incstack = 0
 35062   017854  0EFD               	movlw	-3
 35063   017856  006F FF8C  F02C    	movff	plusw1,btemp+10
 35064   01785C  0EFE               	movlw	-2
 35065   01785E  006F FF8C  F02D    	movff	plusw1,btemp+11
 35066   017864  90D8               	bcf	status,0,c
 35067   017866  342C               	rlcf	(btemp+10)^0,w,c
 35068   017868  6E2A               	movwf	(btemp+8)^0,c
 35069   01786A  342D               	rlcf	(btemp+11)^0,w,c
 35070   01786C  6E2B               	movwf	(btemp+9)^0,c
 35071                           
 35072                           ;stkvar	_timer @ sp[(0)+-1]
 35073   01786E  0EFF               	movlw	-1
 35074   017870  50E3               	movf	plusw1,w,c
 35075   017872  0D02               	mullw	2
 35076   017874  50F3               	movf	243,w,c
 35077   017876  0F60               	addlw	low _tickCount
 35078   017878  6ED9               	movwf	fsr2l,c
 35079   01787A  6ADA               	clrf	fsr2h,c
 35080   01787C  0060  F0AB  FFDE   	movff	btemp+8,postinc2
 35081   017882  0060  F0AF  FFDD   	movff	btemp+9,postdec2
 35082                           
 35083                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 35084   017888  52E5               	movf	postdec1,f,c
 35085   01788A  52E5               	movf	postdec1,f,c
 35086   01788C  52E5               	movf	postdec1,f,c
 35087   01788E  0012               	return		;funcret
 35088   017890                     __end_of_StartTimer:
 35089                           	callstack 0
 35090                           
 35091 ;; *************** function _display_info *****************
 35092 ;; Defined at:
 35093 ;;		line 216 in file "mconfig.c"
 35094 ;; Parameters:    Size  Location     Type
 35095 ;;		None
 35096 ;; Auto vars:     Size  Location     Type
 35097 ;;		None
 35098 ;; Return value:  Size  Location     Type
 35099 ;;                  1  [STACK] enum E16960
 35100 ;; Registers used:
 35101 ;;		btemp
 35102 ;; Tracked objects:
 35103 ;;		On entry : 0/0
 35104 ;;		On exit  : 0/0
 35105 ;;		Unchanged: 0/0
 35106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35111 ;;Total ram usage:        0 bytes
 35112 ;; Hardware stack levels used: 1
 35113 ;; Hardware stack levels required when called: 3
 35114 ;; This function calls:
 35115 ;;		Nothing
 35116 ;; This function is called by:
 35117 ;;		_secs_II_message
 35118 ;;		_check_help
 35119 ;; This function uses a reentrant model
 35120 ;;
 35121                           
 35122                           	psect	text50
 35123   0180BE                     __ptext50:
 35124                           	callstack 0
 35125   0180BE                     _display_info:
 35126                           	callstack 25
 35127                           
 35128                           ;mconfig.c: 218:  return V.response.info;
 35129                           
 35130                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35131                           ;incstack = 0
 35132   0180BE  0063  F644  F022   	movff	_V+375,btemp	;volatile
 35133                           
 35134                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 35135   0180C4  0012               	return		;funcret
 35136   0180C6                     __end_of_display_info:
 35137                           	callstack 0
 35138                           
 35139 ;; *************** function _display_help *****************
 35140 ;; Defined at:
 35141 ;;		line 221 in file "mconfig.c"
 35142 ;; Parameters:    Size  Location     Type
 35143 ;;		None
 35144 ;; Auto vars:     Size  Location     Type
 35145 ;;		None
 35146 ;; Return value:  Size  Location     Type
 35147 ;;                  1  [STACK] enum E16750
 35148 ;; Registers used:
 35149 ;;		btemp
 35150 ;; Tracked objects:
 35151 ;;		On entry : 0/1
 35152 ;;		On exit  : 0/0
 35153 ;;		Unchanged: 0/0
 35154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35159 ;;Total ram usage:        0 bytes
 35160 ;; Hardware stack levels used: 1
 35161 ;; Hardware stack levels required when called: 3
 35162 ;; This function calls:
 35163 ;;		Nothing
 35164 ;; This function is called by:
 35165 ;;		_check_help
 35166 ;; This function uses a reentrant model
 35167 ;;
 35168                           
 35169                           	psect	text51
 35170   0180C6                     __ptext51:
 35171                           	callstack 0
 35172   0180C6                     _display_help:
 35173                           	callstack 26
 35174                           
 35175                           ;mconfig.c: 223:  return V.response.help_temp;
 35176                           
 35177                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35178                           ;incstack = 0
 35179   0180C6  0063  F648  F022   	movff	_V+376,btemp	;volatile
 35180                           
 35181                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 35182   0180CC  0012               	return		;funcret
 35183   0180CE                     __end_of_display_help:
 35184                           	callstack 0
 35185                           
 35186 ;; *************** function _SYSTEM_Initialize *****************
 35187 ;; Defined at:
 35188 ;;		line 50 in file "mcc_generated_files/mcc.c"
 35189 ;; Parameters:    Size  Location     Type
 35190 ;;		None
 35191 ;; Auto vars:     Size  Location     Type
 35192 ;;		None
 35193 ;; Return value:  Size  Location     Type
 35194 ;;                  1  [STACK] void 
 35195 ;; Registers used:
 35196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 35197 ;; Tracked objects:
 35198 ;;		On entry : 0/0
 35199 ;;		On exit  : 3F/3C
 35200 ;;		Unchanged: 0/0
 35201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35206 ;;Total ram usage:        0 bytes
 35207 ;; Hardware stack levels used: 1
 35208 ;; Hardware stack levels required when called: 5
 35209 ;; This function calls:
 35210 ;;		_ADCC_Initialize
 35211 ;;		_CLC1_Initialize
 35212 ;;		_CLKREF_Initialize
 35213 ;;		_DMA1_Initialize
 35214 ;;		_DMA2_Initialize
 35215 ;;		_DSM_Initialize
 35216 ;;		_EXT_INT_Initialize
 35217 ;;		_INTERRUPT_Initialize
 35218 ;;		_NCO1_Initialize
 35219 ;;		_OSCILLATOR_Initialize
 35220 ;;		_PIN_MANAGER_Initialize
 35221 ;;		_PMD_Initialize
 35222 ;;		_PWM8_Initialize
 35223 ;;		_SPI1_Initialize
 35224 ;;		_TMR2_Initialize
 35225 ;;		_TMR5_Initialize
 35226 ;;		_TMR6_Initialize
 35227 ;;		_UART1_Initialize
 35228 ;;		_UART2_Initialize
 35229 ;; This function is called by:
 35230 ;;		_main
 35231 ;; This function uses a reentrant model
 35232 ;;
 35233                           
 35234                           	psect	text52
 35235   0173DC                     __ptext52:
 35236                           	callstack 0
 35237   0173DC                     _SYSTEM_Initialize:
 35238                           	callstack 25
 35239                           
 35240                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 35241                           
 35242                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35243                           ;incstack = 0
 35244   0173DC  EC1A  F0B8         	call	_INTERRUPT_Initialize	;wreg free
 35245                           
 35246                           ; BSR set to: 57
 35247                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 35248   0173E0  EC1E  F0C0         	call	_PMD_Initialize	;wreg free
 35249                           
 35250                           ; BSR set to: 57
 35251                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 35252   0173E4  EC2C  F0B5         	call	_PIN_MANAGER_Initialize	;wreg free
 35253                           
 35254                           ; BSR set to: 58
 35255                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 35256   0173E8  EC13  F0C0         	call	_OSCILLATOR_Initialize	;wreg free
 35257                           
 35258                           ; BSR set to: 57
 35259                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 35260   0173EC  EC3B  F0BA         	call	_ADCC_Initialize	;wreg free
 35261                           
 35262                           ;mcc_generated_files/mcc.c: 57:     NCO1_Initialize();
 35263   0173F0  ECA0  F0BF         	call	_NCO1_Initialize	;wreg free
 35264                           
 35265                           ; BSR set to: 63
 35266                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 35267   0173F4  ECCA  F0BF         	call	_TMR2_Initialize	;wreg free
 35268                           
 35269                           ; BSR set to: 57
 35270                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 35271   0173F8  EC08  F0C0         	call	_PWM8_Initialize	;wreg free
 35272                           
 35273                           ; BSR set to: 63
 35274                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 35275   0173FC  EC15  F0BA         	call	_EXT_INT_Initialize	;wreg free
 35276                           
 35277                           ; BSR set to: 57
 35278                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 35279   017400  EC0F  F0BE         	call	_TMR6_Initialize	;wreg free
 35280                           
 35281                           ;mcc_generated_files/mcc.c: 62:     CLC1_Initialize();
 35282   017404  EC43  F0BF         	call	_CLC1_Initialize	;wreg free
 35283                           
 35284                           ; BSR set to: 60
 35285                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 35286   017408  ECA6  F0BA         	call	_TMR5_Initialize	;wreg free
 35287                           
 35288                           ;mcc_generated_files/mcc.c: 64:     DSM_Initialize();
 35289   01740C  ECAE  F0BF         	call	_DSM_Initialize	;wreg free
 35290                           
 35291                           ; BSR set to: 60
 35292                           ;mcc_generated_files/mcc.c: 65:     UART1_Initialize();
 35293   017410  EC81  F0B8         	call	_UART1_Initialize	;wreg free
 35294                           
 35295                           ; BSR set to: 57
 35296                           ;mcc_generated_files/mcc.c: 66:     UART2_Initialize();
 35297   017414  EC13  F0B9         	call	_UART2_Initialize	;wreg free
 35298                           
 35299                           ; BSR set to: 57
 35300                           ;mcc_generated_files/mcc.c: 67:     SPI1_Initialize();
 35301   017418  ECFD  F0BF         	call	_SPI1_Initialize	;wreg free
 35302                           
 35303                           ; BSR set to: 61
 35304                           ;mcc_generated_files/mcc.c: 68:     DMA2_Initialize();
 35305   01741C  EC42  F0B9         	call	_DMA2_Initialize	;wreg free
 35306                           
 35307                           ; BSR set to: 59
 35308                           ;mcc_generated_files/mcc.c: 69:     DMA1_Initialize();
 35309   017420  EC4B  F0B7         	call	_DMA1_Initialize	;wreg free
 35310                           
 35311                           ; BSR set to: 59
 35312                           ;mcc_generated_files/mcc.c: 70:     CLKREF_Initialize();
 35313   017424  EC48  F0C0         	call	_CLKREF_Initialize	;wreg free
 35314                           
 35315                           ; BSR set to: 60
 35316                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35317   017428  0012               	return		;funcret
 35318   01742A                     __end_of_SYSTEM_Initialize:
 35319                           	callstack 0
 35320                           
 35321 ;; *************** function _UART2_Initialize *****************
 35322 ;; Defined at:
 35323 ;;		line 78 in file "mcc_generated_files/uart2.c"
 35324 ;; Parameters:    Size  Location     Type
 35325 ;;		None
 35326 ;; Auto vars:     Size  Location     Type
 35327 ;;		None
 35328 ;; Return value:  Size  Location     Type
 35329 ;;                  1  [STACK] void 
 35330 ;; Registers used:
 35331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 35332 ;; Tracked objects:
 35333 ;;		On entry : 3F/39
 35334 ;;		On exit  : 3F/39
 35335 ;;		Unchanged: 0/0
 35336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35341 ;;Total ram usage:        0 bytes
 35342 ;; Hardware stack levels used: 1
 35343 ;; Hardware stack levels required when called: 4
 35344 ;; This function calls:
 35345 ;;		_UART2_SetRxInterruptHandler
 35346 ;;		_UART2_SetTxInterruptHandler
 35347 ;; This function is called by:
 35348 ;;		_SYSTEM_Initialize
 35349 ;; This function uses a reentrant model
 35350 ;;
 35351                           
 35352                           	psect	text53
 35353   017226                     __ptext53:
 35354                           	callstack 0
 35355   017226                     _UART2_Initialize:
 35356                           	callstack 25
 35357                           
 35358                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 35359                           
 35360                           ; BSR set to: 60
 35361                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35362                           ;incstack = 0
 35363   017226  0139               	movlb	57	; () banked
 35364   017228  9596               	bcf	150,2,b	;volatile
 35365                           
 35366                           ; BSR set to: 57
 35367                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 35368   01722A  0E22               	movlw	low _UART2_Receive_ISR
 35369   01722C  6EE6               	movwf	postinc1,c
 35370   01722E  0E7F               	movlw	high _UART2_Receive_ISR
 35371   017230  6EE6               	movwf	postinc1,c
 35372   017232  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 35373   017234  6EE6               	movwf	postinc1,c
 35374   017236  ECD3  F0BD         	call	_UART2_SetRxInterruptHandler	;wreg free
 35375                           
 35376                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 35377   01723A  0139               	movlb	57	; () banked
 35378   01723C  9796               	bcf	150,3,b	;volatile
 35379                           
 35380                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 35381   01723E  0E3A               	movlw	low _UART2_Transmit_ISR
 35382   017240  6EE6               	movwf	postinc1,c
 35383   017242  0E7A               	movlw	high _UART2_Transmit_ISR
 35384   017244  6EE6               	movwf	postinc1,c
 35385   017246  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 35386   017248  6EE6               	movwf	postinc1,c
 35387   01724A  ECBF  F0BD         	call	_UART2_SetTxInterruptHandler	;wreg free
 35388                           
 35389                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 35390   01724E  013D               	movlb	61	; () banked
 35391   017250  6BD4               	clrf	212,b	;volatile
 35392                           
 35393                           ; BSR set to: 61
 35394                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 35395   017252  6BD6               	clrf	214,b	;volatile
 35396                           
 35397                           ; BSR set to: 61
 35398                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 35399   017254  6BD8               	clrf	216,b	;volatile
 35400                           
 35401                           ; BSR set to: 61
 35402                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 35403   017256  0EB0               	movlw	176
 35404   017258  6FDA               	movwf	218,b	;volatile
 35405                           
 35406                           ; BSR set to: 61
 35407                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 35408   01725A  0E80               	movlw	128
 35409   01725C  6FDB               	movwf	219,b	;volatile
 35410                           
 35411                           ; BSR set to: 61
 35412                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 35413   01725E  6BDC               	clrf	220,b	;volatile
 35414                           
 35415                           ; BSR set to: 61
 35416                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 35417   017260  0E82               	movlw	130
 35418   017262  6FDD               	movwf	221,b	;volatile
 35419                           
 35420                           ; BSR set to: 61
 35421                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 35422   017264  0E06               	movlw	6
 35423   017266  6FDE               	movwf	222,b	;volatile
 35424                           
 35425                           ; BSR set to: 61
 35426                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 35427   017268  6BDF               	clrf	223,b	;volatile
 35428                           
 35429                           ; BSR set to: 61
 35430                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 35431   01726A  6BE0               	clrf	224,b	;volatile
 35432                           
 35433                           ; BSR set to: 61
 35434                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 35435   01726C  6BE1               	clrf	225,b	;volatile
 35436                           
 35437                           ; BSR set to: 61
 35438                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 35439   01726E  6BE2               	clrf	226,b	;volatile
 35440                           
 35441                           ; BSR set to: 61
 35442                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 35443   017270  6A14               	clrf	_uart2TxHead^0,c	;volatile
 35444                           
 35445                           ; BSR set to: 61
 35446                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 35447   017272  6A13               	clrf	_uart2TxTail^0,c	;volatile
 35448                           
 35449                           ; BSR set to: 61
 35450                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 35451   017274  0E40               	movlw	64
 35452   017276  6E12               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 35453                           
 35454                           ; BSR set to: 61
 35455                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 35456   017278  6A11               	clrf	_uart2RxHead^0,c	;volatile
 35457                           
 35458                           ; BSR set to: 61
 35459                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 35460   01727A  6A10               	clrf	_uart2RxTail^0,c	;volatile
 35461                           
 35462                           ; BSR set to: 61
 35463                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 35464   01727C  6A0F               	clrf	_uart2RxCount^0,c	;volatile
 35465                           
 35466                           ; BSR set to: 61
 35467                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 35468   01727E  0139               	movlb	57	; () banked
 35469   017280  8596               	bsf	150,2,b	;volatile
 35470                           
 35471                           ; BSR set to: 57
 35472                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 35473   017282  0012               	return		;funcret
 35474   017284                     __end_of_UART2_Initialize:
 35475                           	callstack 0
 35476                           
 35477 ;; *************** function _UART2_SetTxInterruptHandler *****************
 35478 ;; Defined at:
 35479 ;;		line 252 in file "mcc_generated_files/uart2.c"
 35480 ;; Parameters:    Size  Location     Type
 35481 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 35482 ;;		 -> UART2_Transmit_ISR(1), 
 35483 ;; Auto vars:     Size  Location     Type
 35484 ;;		None
 35485 ;; Return value:  Size  Location     Type
 35486 ;;                  1  [STACK] void 
 35487 ;; Registers used:
 35488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 35489 ;; Tracked objects:
 35490 ;;		On entry : 3F/39
 35491 ;;		On exit  : 0/0
 35492 ;;		Unchanged: 0/0
 35493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35498 ;;Total ram usage:        0 bytes
 35499 ;; Hardware stack levels used: 1
 35500 ;; Hardware stack levels required when called: 3
 35501 ;; This function calls:
 35502 ;;		Nothing
 35503 ;; This function is called by:
 35504 ;;		_UART2_Initialize
 35505 ;; This function uses a reentrant model
 35506 ;;
 35507                           
 35508                           	psect	text54
 35509   017B7E                     __ptext54:
 35510                           	callstack 0
 35511   017B7E                     _UART2_SetTxInterruptHandler:
 35512                           	callstack 25
 35513                           
 35514                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 35515                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 35516                           
 35517                           ; BSR set to: 57
 35518                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35519                           ;incstack = 0
 35520   017B7E  50E1               	movf	fsr1l,w,c
 35521   017B80  0FFD               	addlw	-3
 35522   017B82  6ED9               	movwf	fsr2l,c
 35523   017B84  50E2               	movf	fsr1h,w,c
 35524   017B86  6EDA               	movwf	fsr2h,c
 35525   017B88  0EFF               	movlw	255
 35526   017B8A  22DA               	addwfc	fsr2h,f,c
 35527   017B8C  006F FF78  F0AD    	movff	postinc2,_UART2_TxInterruptHandler
 35528   017B92  006F FF78  F0AE    	movff	postinc2,_UART2_TxInterruptHandler+1
 35529   017B98  006F FF74  F0AF    	movff	postdec2,_UART2_TxInterruptHandler+2
 35530                           
 35531                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 35532   017B9E  52E5               	movf	postdec1,f,c
 35533   017BA0  52E5               	movf	postdec1,f,c
 35534   017BA2  52E5               	movf	postdec1,f,c
 35535   017BA4  0012               	return		;funcret
 35536   017BA6                     __end_of_UART2_SetTxInterruptHandler:
 35537                           	callstack 0
 35538                           
 35539 ;; *************** function _UART2_SetRxInterruptHandler *****************
 35540 ;; Defined at:
 35541 ;;		line 248 in file "mcc_generated_files/uart2.c"
 35542 ;; Parameters:    Size  Location     Type
 35543 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 35544 ;;		 -> UART2_Receive_ISR(1), 
 35545 ;; Auto vars:     Size  Location     Type
 35546 ;;		None
 35547 ;; Return value:  Size  Location     Type
 35548 ;;                  1  [STACK] void 
 35549 ;; Registers used:
 35550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 35551 ;; Tracked objects:
 35552 ;;		On entry : 3F/39
 35553 ;;		On exit  : 0/0
 35554 ;;		Unchanged: 0/0
 35555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35560 ;;Total ram usage:        0 bytes
 35561 ;; Hardware stack levels used: 1
 35562 ;; Hardware stack levels required when called: 3
 35563 ;; This function calls:
 35564 ;;		Nothing
 35565 ;; This function is called by:
 35566 ;;		_UART2_Initialize
 35567 ;; This function uses a reentrant model
 35568 ;;
 35569                           
 35570                           	psect	text55
 35571   017BA6                     __ptext55:
 35572                           	callstack 0
 35573   017BA6                     _UART2_SetRxInterruptHandler:
 35574                           	callstack 25
 35575                           
 35576                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 35577                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 35578                           
 35579                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35580                           ;incstack = 0
 35581   017BA6  50E1               	movf	fsr1l,w,c
 35582   017BA8  0FFD               	addlw	-3
 35583   017BAA  6ED9               	movwf	fsr2l,c
 35584   017BAC  50E2               	movf	fsr1h,w,c
 35585   017BAE  6EDA               	movwf	fsr2h,c
 35586   017BB0  0EFF               	movlw	255
 35587   017BB2  22DA               	addwfc	fsr2h,f,c
 35588   017BB4  006F FF78  F0B0    	movff	postinc2,_UART2_RxInterruptHandler
 35589   017BBA  006F FF78  F0B1    	movff	postinc2,_UART2_RxInterruptHandler+1
 35590   017BC0  006F FF74  F0B2    	movff	postdec2,_UART2_RxInterruptHandler+2
 35591                           
 35592                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 35593   017BC6  52E5               	movf	postdec1,f,c
 35594   017BC8  52E5               	movf	postdec1,f,c
 35595   017BCA  52E5               	movf	postdec1,f,c
 35596   017BCC  0012               	return		;funcret
 35597   017BCE                     __end_of_UART2_SetRxInterruptHandler:
 35598                           	callstack 0
 35599                           
 35600 ;; *************** function _UART1_Initialize *****************
 35601 ;; Defined at:
 35602 ;;		line 79 in file "mcc_generated_files/uart1.c"
 35603 ;; Parameters:    Size  Location     Type
 35604 ;;		None
 35605 ;; Auto vars:     Size  Location     Type
 35606 ;;		None
 35607 ;; Return value:  Size  Location     Type
 35608 ;;                  1  [STACK] void 
 35609 ;; Registers used:
 35610 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 35611 ;; Tracked objects:
 35612 ;;		On entry : 3F/3C
 35613 ;;		On exit  : 3F/39
 35614 ;;		Unchanged: 0/0
 35615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35620 ;;Total ram usage:        0 bytes
 35621 ;; Hardware stack levels used: 1
 35622 ;; Hardware stack levels required when called: 4
 35623 ;; This function calls:
 35624 ;;		_UART1_SetRxInterruptHandler
 35625 ;;		_UART1_SetTxInterruptHandler
 35626 ;; This function is called by:
 35627 ;;		_SYSTEM_Initialize
 35628 ;; This function uses a reentrant model
 35629 ;;
 35630                           
 35631                           	psect	text56
 35632   017102                     __ptext56:
 35633                           	callstack 0
 35634   017102                     _UART1_Initialize:
 35635                           	callstack 25
 35636                           
 35637                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 35638                           
 35639                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35640                           ;incstack = 0
 35641   017102  0139               	movlb	57	; () banked
 35642   017104  9793               	bcf	147,3,b	;volatile
 35643                           
 35644                           ; BSR set to: 57
 35645                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 35646   017106  0E04               	movlw	low _UART1_Receive_ISR
 35647   017108  6EE6               	movwf	postinc1,c
 35648   01710A  0E7F               	movlw	high _UART1_Receive_ISR
 35649   01710C  6EE6               	movwf	postinc1,c
 35650   01710E  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 35651   017110  6EE6               	movwf	postinc1,c
 35652   017112  ECFB  F0BD         	call	_UART1_SetRxInterruptHandler	;wreg free
 35653                           
 35654                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 35655   017116  0139               	movlb	57	; () banked
 35656   017118  9993               	bcf	147,4,b	;volatile
 35657                           
 35658                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 35659   01711A  0E0E               	movlw	low _UART1_Transmit_ISR
 35660   01711C  6EE6               	movwf	postinc1,c
 35661   01711E  0E7A               	movlw	high _UART1_Transmit_ISR
 35662   017120  6EE6               	movwf	postinc1,c
 35663   017122  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 35664   017124  6EE6               	movwf	postinc1,c
 35665   017126  ECE7  F0BD         	call	_UART1_SetTxInterruptHandler	;wreg free
 35666                           
 35667                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 35668   01712A  013D               	movlb	61	; () banked
 35669   01712C  6BEC               	clrf	236,b	;volatile
 35670                           
 35671                           ; BSR set to: 61
 35672                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 35673   01712E  6BED               	clrf	237,b	;volatile
 35674                           
 35675                           ; BSR set to: 61
 35676                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 35677   017130  6BEE               	clrf	238,b	;volatile
 35678                           
 35679                           ; BSR set to: 61
 35680                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 35681   017132  6BEF               	clrf	239,b	;volatile
 35682                           
 35683                           ; BSR set to: 61
 35684                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 35685   017134  6BF0               	clrf	240,b	;volatile
 35686                           
 35687                           ; BSR set to: 61
 35688                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 35689   017136  6BF1               	clrf	241,b	;volatile
 35690                           
 35691                           ; BSR set to: 61
 35692                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 35693   017138  0EB0               	movlw	176
 35694   01713A  6FF2               	movwf	242,b	;volatile
 35695                           
 35696                           ; BSR set to: 61
 35697                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 35698   01713C  0E80               	movlw	128
 35699   01713E  6FF3               	movwf	243,b	;volatile
 35700                           
 35701                           ; BSR set to: 61
 35702                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 35703   017140  6BF4               	clrf	244,b	;volatile
 35704                           
 35705                           ; BSR set to: 61
 35706                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 35707   017142  0E82               	movlw	130
 35708   017144  6FF5               	movwf	245,b	;volatile
 35709                           
 35710                           ; BSR set to: 61
 35711                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 35712   017146  0E06               	movlw	6
 35713   017148  6FF6               	movwf	246,b	;volatile
 35714                           
 35715                           ; BSR set to: 61
 35716                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 35717   01714A  6BF7               	clrf	247,b	;volatile
 35718                           
 35719                           ; BSR set to: 61
 35720                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 35721   01714C  6BF8               	clrf	248,b	;volatile
 35722                           
 35723                           ; BSR set to: 61
 35724                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 35725   01714E  6BF9               	clrf	249,b	;volatile
 35726                           
 35727                           ; BSR set to: 61
 35728                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 35729   017150  6BFA               	clrf	250,b	;volatile
 35730                           
 35731                           ; BSR set to: 61
 35732                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 35733   017152  6A1A               	clrf	_uart1TxHead^0,c	;volatile
 35734                           
 35735                           ; BSR set to: 61
 35736                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 35737   017154  6A19               	clrf	_uart1TxTail^0,c	;volatile
 35738                           
 35739                           ; BSR set to: 61
 35740                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 35741   017156  0E40               	movlw	64
 35742   017158  6E18               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 35743                           
 35744                           ; BSR set to: 61
 35745                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 35746   01715A  6A17               	clrf	_uart1RxHead^0,c	;volatile
 35747                           
 35748                           ; BSR set to: 61
 35749                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 35750   01715C  6A16               	clrf	_uart1RxTail^0,c	;volatile
 35751                           
 35752                           ; BSR set to: 61
 35753                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 35754   01715E  6A15               	clrf	_uart1RxCount^0,c	;volatile
 35755                           
 35756                           ; BSR set to: 61
 35757                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 35758   017160  0139               	movlb	57	; () banked
 35759   017162  8793               	bsf	147,3,b	;volatile
 35760                           
 35761                           ; BSR set to: 57
 35762                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 35763   017164  0012               	return		;funcret
 35764   017166                     __end_of_UART1_Initialize:
 35765                           	callstack 0
 35766                           
 35767 ;; *************** function _UART1_SetTxInterruptHandler *****************
 35768 ;; Defined at:
 35769 ;;		line 247 in file "mcc_generated_files/uart1.c"
 35770 ;; Parameters:    Size  Location     Type
 35771 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 35772 ;;		 -> UART1_Transmit_ISR(1), 
 35773 ;; Auto vars:     Size  Location     Type
 35774 ;;		None
 35775 ;; Return value:  Size  Location     Type
 35776 ;;                  1  [STACK] void 
 35777 ;; Registers used:
 35778 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 35779 ;; Tracked objects:
 35780 ;;		On entry : 3F/39
 35781 ;;		On exit  : 0/0
 35782 ;;		Unchanged: 0/0
 35783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35788 ;;Total ram usage:        0 bytes
 35789 ;; Hardware stack levels used: 1
 35790 ;; Hardware stack levels required when called: 3
 35791 ;; This function calls:
 35792 ;;		Nothing
 35793 ;; This function is called by:
 35794 ;;		_UART1_Initialize
 35795 ;; This function uses a reentrant model
 35796 ;;
 35797                           
 35798                           	psect	text57
 35799   017BCE                     __ptext57:
 35800                           	callstack 0
 35801   017BCE                     _UART1_SetTxInterruptHandler:
 35802                           	callstack 25
 35803                           
 35804                           ;mcc_generated_files/uart1.c: 247: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 248: {;mcc_generated_files/uart1.c: 249:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 35805                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 35806                           
 35807                           ; BSR set to: 57
 35808                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35809                           ;incstack = 0
 35810   017BCE  50E1               	movf	fsr1l,w,c
 35811   017BD0  0FFD               	addlw	-3
 35812   017BD2  6ED9               	movwf	fsr2l,c
 35813   017BD4  50E2               	movf	fsr1h,w,c
 35814   017BD6  6EDA               	movwf	fsr2h,c
 35815   017BD8  0EFF               	movlw	255
 35816   017BDA  22DA               	addwfc	fsr2h,f,c
 35817   017BDC  006F FF78  F0A7    	movff	postinc2,_UART1_TxInterruptHandler
 35818   017BE2  006F FF78  F0A8    	movff	postinc2,_UART1_TxInterruptHandler+1
 35819   017BE8  006F FF74  F0A9    	movff	postdec2,_UART1_TxInterruptHandler+2
 35820                           
 35821                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 35822   017BEE  52E5               	movf	postdec1,f,c
 35823   017BF0  52E5               	movf	postdec1,f,c
 35824   017BF2  52E5               	movf	postdec1,f,c
 35825   017BF4  0012               	return		;funcret
 35826   017BF6                     __end_of_UART1_SetTxInterruptHandler:
 35827                           	callstack 0
 35828                           
 35829 ;; *************** function _UART1_SetRxInterruptHandler *****************
 35830 ;; Defined at:
 35831 ;;		line 242 in file "mcc_generated_files/uart1.c"
 35832 ;; Parameters:    Size  Location     Type
 35833 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 35834 ;;		 -> UART1_Receive_ISR(1), 
 35835 ;; Auto vars:     Size  Location     Type
 35836 ;;		None
 35837 ;; Return value:  Size  Location     Type
 35838 ;;                  1  [STACK] void 
 35839 ;; Registers used:
 35840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 35841 ;; Tracked objects:
 35842 ;;		On entry : 3F/39
 35843 ;;		On exit  : 0/0
 35844 ;;		Unchanged: 0/0
 35845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35850 ;;Total ram usage:        0 bytes
 35851 ;; Hardware stack levels used: 1
 35852 ;; Hardware stack levels required when called: 3
 35853 ;; This function calls:
 35854 ;;		Nothing
 35855 ;; This function is called by:
 35856 ;;		_UART1_Initialize
 35857 ;; This function uses a reentrant model
 35858 ;;
 35859                           
 35860                           	psect	text58
 35861   017BF6                     __ptext58:
 35862                           	callstack 0
 35863   017BF6                     _UART1_SetRxInterruptHandler:
 35864                           	callstack 25
 35865                           
 35866                           ;mcc_generated_files/uart1.c: 242: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 243: {;mcc_generated_files/uart1.c: 244:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 35867                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 35868                           
 35869                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35870                           ;incstack = 0
 35871   017BF6  50E1               	movf	fsr1l,w,c
 35872   017BF8  0FFD               	addlw	-3
 35873   017BFA  6ED9               	movwf	fsr2l,c
 35874   017BFC  50E2               	movf	fsr1h,w,c
 35875   017BFE  6EDA               	movwf	fsr2h,c
 35876   017C00  0EFF               	movlw	255
 35877   017C02  22DA               	addwfc	fsr2h,f,c
 35878   017C04  006F FF78  F0AA    	movff	postinc2,_UART1_RxInterruptHandler
 35879   017C0A  006F FF78  F0AB    	movff	postinc2,_UART1_RxInterruptHandler+1
 35880   017C10  006F FF74  F0AC    	movff	postdec2,_UART1_RxInterruptHandler+2
 35881                           
 35882                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 35883   017C16  52E5               	movf	postdec1,f,c
 35884   017C18  52E5               	movf	postdec1,f,c
 35885   017C1A  52E5               	movf	postdec1,f,c
 35886   017C1C  0012               	return		;funcret
 35887   017C1E                     __end_of_UART1_SetRxInterruptHandler:
 35888                           	callstack 0
 35889                           
 35890 ;; *************** function _TMR6_Initialize *****************
 35891 ;; Defined at:
 35892 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 35893 ;; Parameters:    Size  Location     Type
 35894 ;;		None
 35895 ;; Auto vars:     Size  Location     Type
 35896 ;;		None
 35897 ;; Return value:  Size  Location     Type
 35898 ;;                  1  [STACK] void 
 35899 ;; Registers used:
 35900 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 35901 ;; Tracked objects:
 35902 ;;		On entry : 3F/39
 35903 ;;		On exit  : 0/0
 35904 ;;		Unchanged: 0/0
 35905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35910 ;;Total ram usage:        0 bytes
 35911 ;; Hardware stack levels used: 1
 35912 ;; Hardware stack levels required when called: 4
 35913 ;; This function calls:
 35914 ;;		_TMR6_SetInterruptHandler
 35915 ;; This function is called by:
 35916 ;;		_SYSTEM_Initialize
 35917 ;; This function uses a reentrant model
 35918 ;;
 35919                           
 35920                           	psect	text59
 35921   017C1E                     __ptext59:
 35922                           	callstack 0
 35923   017C1E                     _TMR6_Initialize:
 35924                           	callstack 25
 35925                           
 35926                           ;mcc_generated_files/tmr6.c: 75:  T6CLKCON = 0x01;
 35927                           
 35928                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35929                           ;incstack = 0
 35930   017C1E  0E01               	movlw	1
 35931   017C20  6E96               	movwf	150,c	;volatile
 35932                           
 35933                           ;mcc_generated_files/tmr6.c: 78:  T6HLT = 0x00;
 35934   017C22  6A95               	clrf	149,c	;volatile
 35935                           
 35936                           ;mcc_generated_files/tmr6.c: 81:  T6RST = 0x00;
 35937   017C24  6A97               	clrf	151,c	;volatile
 35938                           
 35939                           ;mcc_generated_files/tmr6.c: 84:  T6PR = 0x03;
 35940   017C26  0E03               	movlw	3
 35941   017C28  6E93               	movwf	147,c	;volatile
 35942                           
 35943                           ;mcc_generated_files/tmr6.c: 87:  T6TMR = 0x00;
 35944   017C2A  6A92               	clrf	146,c	;volatile
 35945                           
 35946                           ;mcc_generated_files/tmr6.c: 90:  PIR9bits.TMR6IF = 0;
 35947   017C2C  0139               	movlb	57	; () banked
 35948   017C2E  91A9               	bcf	169,0,b	;volatile
 35949                           
 35950                           ; BSR set to: 57
 35951                           ;mcc_generated_files/tmr6.c: 93:  PIE9bits.TMR6IE = 1;
 35952   017C30  8199               	bsf	153,0,b	;volatile
 35953                           
 35954                           ; BSR set to: 57
 35955                           ;mcc_generated_files/tmr6.c: 96:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
 35956   017C32  0E06               	movlw	low _TMR6_DefaultInterruptHandler
 35957   017C34  6EE6               	movwf	postinc1,c
 35958   017C36  0E75               	movlw	high _TMR6_DefaultInterruptHandler
 35959   017C38  6EE6               	movwf	postinc1,c
 35960   017C3A  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 35961   017C3C  6EE6               	movwf	postinc1,c
 35962   017C3E  EC23  F0BE         	call	_TMR6_SetInterruptHandler	;wreg free
 35963                           
 35964                           ;mcc_generated_files/tmr6.c: 99:  T6CON = 0xFF;
 35965   017C42  6894               	setf	148,c	;volatile
 35966                           
 35967                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35968   017C44  0012               	return		;funcret
 35969   017C46                     __end_of_TMR6_Initialize:
 35970                           	callstack 0
 35971                           
 35972 ;; *************** function _TMR6_SetInterruptHandler *****************
 35973 ;; Defined at:
 35974 ;;		line 191 in file "mcc_generated_files/tmr6.c"
 35975 ;; Parameters:    Size  Location     Type
 35976 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 35977 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 35978 ;; Auto vars:     Size  Location     Type
 35979 ;;		None
 35980 ;; Return value:  Size  Location     Type
 35981 ;;                  1  [STACK] void 
 35982 ;; Registers used:
 35983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 35984 ;; Tracked objects:
 35985 ;;		On entry : 3F/39
 35986 ;;		On exit  : 0/0
 35987 ;;		Unchanged: 0/0
 35988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35993 ;;Total ram usage:        0 bytes
 35994 ;; Hardware stack levels used: 1
 35995 ;; Hardware stack levels required when called: 3
 35996 ;; This function calls:
 35997 ;;		Nothing
 35998 ;; This function is called by:
 35999 ;;		_TMR6_Initialize
 36000 ;; This function uses a reentrant model
 36001 ;;
 36002                           
 36003                           	psect	text60
 36004   017C46                     __ptext60:
 36005                           	callstack 0
 36006   017C46                     _TMR6_SetInterruptHandler:
 36007                           	callstack 25
 36008                           
 36009                           ;mcc_generated_files/tmr6.c: 191: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 192: {;mcc_generated_files/tmr6.c: 193:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
 36010                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 36011                           
 36012                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36013                           ;incstack = 0
 36014   017C46  50E1               	movf	fsr1l,w,c
 36015   017C48  0FFD               	addlw	-3
 36016   017C4A  6ED9               	movwf	fsr2l,c
 36017   017C4C  50E2               	movf	fsr1h,w,c
 36018   017C4E  6EDA               	movwf	fsr2h,c
 36019   017C50  0EFF               	movlw	255
 36020   017C52  22DA               	addwfc	fsr2h,f,c
 36021   017C54  006F FF78  F0A1    	movff	postinc2,_TMR6_InterruptHandler
 36022   017C5A  006F FF78  F0A2    	movff	postinc2,_TMR6_InterruptHandler+1
 36023   017C60  006F FF74  F0A3    	movff	postdec2,_TMR6_InterruptHandler+2
 36024                           
 36025                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 36026   017C66  52E5               	movf	postdec1,f,c
 36027   017C68  52E5               	movf	postdec1,f,c
 36028   017C6A  52E5               	movf	postdec1,f,c
 36029   017C6C  0012               	return		;funcret
 36030   017C6E                     __end_of_TMR6_SetInterruptHandler:
 36031                           	callstack 0
 36032                           
 36033 ;; *************** function _TMR5_Initialize *****************
 36034 ;; Defined at:
 36035 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 36036 ;; Parameters:    Size  Location     Type
 36037 ;;		None
 36038 ;; Auto vars:     Size  Location     Type
 36039 ;;		None
 36040 ;; Return value:  Size  Location     Type
 36041 ;;                  1  [STACK] void 
 36042 ;; Registers used:
 36043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 36044 ;; Tracked objects:
 36045 ;;		On entry : 3F/3C
 36046 ;;		On exit  : 0/0
 36047 ;;		Unchanged: 0/0
 36048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36053 ;;Total ram usage:        0 bytes
 36054 ;; Hardware stack levels used: 1
 36055 ;; Hardware stack levels required when called: 4
 36056 ;; This function calls:
 36057 ;;		_TMR5_SetInterruptHandler
 36058 ;; This function is called by:
 36059 ;;		_SYSTEM_Initialize
 36060 ;; This function uses a reentrant model
 36061 ;;
 36062                           
 36063                           	psect	text61
 36064   01754C                     __ptext61:
 36065                           	callstack 0
 36066   01754C                     _TMR5_Initialize:
 36067                           	callstack 25
 36068                           
 36069                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 36070                           
 36071                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36072                           ;incstack = 0
 36073   01754C  6A9B               	clrf	155,c	;volatile
 36074                           
 36075                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 36076   01754E  6A9C               	clrf	156,c	;volatile
 36077                           
 36078                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 36079   017550  0E01               	movlw	1
 36080   017552  6E9D               	movwf	157,c	;volatile
 36081                           
 36082                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 36083   017554  0E63               	movlw	99
 36084   017556  6E99               	movwf	153,c	;volatile
 36085                           
 36086                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 36087   017558  0EC0               	movlw	192
 36088   01755A  6E98               	movwf	152,c	;volatile
 36089                           
 36090                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 36091   01755C  5098               	movf	152,w,c	;volatile
 36092   01755E  006F FE64  F022    	movff	16281,btemp	;volatile
 36093   017564  6A23               	clrf	(btemp+1)^0,c
 36094   017566  C022  F023         	movff	btemp,btemp+1
 36095   01756A  6A22               	clrf	btemp^0,c
 36096   01756C  1022               	iorwf	btemp^0,w,c
 36097   01756E  6E05               	movwf	_timer5ReloadVal^0,c	;volatile
 36098   017570  5023               	movf	(btemp+1)^0,w,c
 36099   017572  6E06               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 36100                           
 36101                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 36102   017574  0139               	movlb	57	; () banked
 36103   017576  9DA8               	bcf	168,6,b	;volatile
 36104                           
 36105                           ; BSR set to: 57
 36106                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 36107   017578  8D98               	bsf	152,6,b	;volatile
 36108                           
 36109                           ; BSR set to: 57
 36110                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 36111   01757A  0EC8               	movlw	low _TMR5_DefaultInterruptHandler
 36112   01757C  6EE6               	movwf	postinc1,c
 36113   01757E  0E7F               	movlw	high _TMR5_DefaultInterruptHandler
 36114   017580  6EE6               	movwf	postinc1,c
 36115   017582  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 36116   017584  6EE6               	movwf	postinc1,c
 36117   017586  EC37  F0BE         	call	_TMR5_SetInterruptHandler	;wreg free
 36118                           
 36119                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 36120   01758A  0E31               	movlw	49
 36121   01758C  6E9A               	movwf	154,c	;volatile
 36122                           
 36123                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 36124   01758E  0012               	return		;funcret
 36125   017590                     __end_of_TMR5_Initialize:
 36126                           	callstack 0
 36127                           
 36128 ;; *************** function _TMR5_SetInterruptHandler *****************
 36129 ;; Defined at:
 36130 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 36131 ;; Parameters:    Size  Location     Type
 36132 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 36133 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 36134 ;; Auto vars:     Size  Location     Type
 36135 ;;		None
 36136 ;; Return value:  Size  Location     Type
 36137 ;;                  1  [STACK] void 
 36138 ;; Registers used:
 36139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 36140 ;; Tracked objects:
 36141 ;;		On entry : 3F/39
 36142 ;;		On exit  : 0/0
 36143 ;;		Unchanged: 0/0
 36144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36149 ;;Total ram usage:        0 bytes
 36150 ;; Hardware stack levels used: 1
 36151 ;; Hardware stack levels required when called: 3
 36152 ;; This function calls:
 36153 ;;		Nothing
 36154 ;; This function is called by:
 36155 ;;		_TMR5_Initialize
 36156 ;; This function uses a reentrant model
 36157 ;;
 36158                           
 36159                           	psect	text62
 36160   017C6E                     __ptext62:
 36161                           	callstack 0
 36162   017C6E                     _TMR5_SetInterruptHandler:
 36163                           	callstack 25
 36164                           
 36165                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 36166                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 36167                           
 36168                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36169                           ;incstack = 0
 36170   017C6E  50E1               	movf	fsr1l,w,c
 36171   017C70  0FFD               	addlw	-3
 36172   017C72  6ED9               	movwf	fsr2l,c
 36173   017C74  50E2               	movf	fsr1h,w,c
 36174   017C76  6EDA               	movwf	fsr2h,c
 36175   017C78  0EFF               	movlw	255
 36176   017C7A  22DA               	addwfc	fsr2h,f,c
 36177   017C7C  006F FF78  F09E    	movff	postinc2,_TMR5_InterruptHandler
 36178   017C82  006F FF78  F09F    	movff	postinc2,_TMR5_InterruptHandler+1
 36179   017C88  006F FF74  F0A0    	movff	postdec2,_TMR5_InterruptHandler+2
 36180                           
 36181                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 36182   017C8E  52E5               	movf	postdec1,f,c
 36183   017C90  52E5               	movf	postdec1,f,c
 36184   017C92  52E5               	movf	postdec1,f,c
 36185   017C94  0012               	return		;funcret
 36186   017C96                     __end_of_TMR5_SetInterruptHandler:
 36187                           	callstack 0
 36188                           
 36189 ;; *************** function _TMR2_Initialize *****************
 36190 ;; Defined at:
 36191 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 36192 ;; Parameters:    Size  Location     Type
 36193 ;;		None
 36194 ;; Auto vars:     Size  Location     Type
 36195 ;;		None
 36196 ;; Return value:  Size  Location     Type
 36197 ;;                  1  [STACK] void 
 36198 ;; Registers used:
 36199 ;;		wreg, status,2
 36200 ;; Tracked objects:
 36201 ;;		On entry : 3F/3F
 36202 ;;		On exit  : 3F/39
 36203 ;;		Unchanged: 0/0
 36204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36209 ;;Total ram usage:        0 bytes
 36210 ;; Hardware stack levels used: 1
 36211 ;; Hardware stack levels required when called: 3
 36212 ;; This function calls:
 36213 ;;		Nothing
 36214 ;; This function is called by:
 36215 ;;		_SYSTEM_Initialize
 36216 ;; This function uses a reentrant model
 36217 ;;
 36218                           
 36219                           	psect	text63
 36220   017F94                     __ptext63:
 36221                           	callstack 0
 36222   017F94                     _TMR2_Initialize:
 36223                           	callstack 26
 36224                           
 36225                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 36226                           
 36227                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36228                           ;incstack = 0
 36229   017F94  0E01               	movlw	1
 36230   017F96  6EAE               	movwf	174,c	;volatile
 36231                           
 36232                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 36233   017F98  6AAD               	clrf	173,c	;volatile
 36234                           
 36235                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x11;
 36236   017F9A  0E11               	movlw	17
 36237   017F9C  6EAF               	movwf	175,c	;volatile
 36238                           
 36239                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 36240   017F9E  0E63               	movlw	99
 36241   017FA0  6EAB               	movwf	171,c	;volatile
 36242                           
 36243                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 36244   017FA2  6AAA               	clrf	170,c	;volatile
 36245                           
 36246                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 36247   017FA4  0139               	movlb	57	; () banked
 36248   017FA6  95A4               	bcf	164,2,b	;volatile
 36249                           
 36250                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 36251   017FA8  0EC0               	movlw	192
 36252   017FAA  6EAC               	movwf	172,c	;volatile
 36253                           
 36254                           ; BSR set to: 57
 36255                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 36256   017FAC  0012               	return		;funcret
 36257   017FAE                     __end_of_TMR2_Initialize:
 36258                           	callstack 0
 36259                           
 36260 ;; *************** function _SPI1_Initialize *****************
 36261 ;; Defined at:
 36262 ;;		line 64 in file "mcc_generated_files/spi1.c"
 36263 ;; Parameters:    Size  Location     Type
 36264 ;;		None
 36265 ;; Auto vars:     Size  Location     Type
 36266 ;;		None
 36267 ;; Return value:  Size  Location     Type
 36268 ;;                  1  [STACK] void 
 36269 ;; Registers used:
 36270 ;;		wreg, status,2
 36271 ;; Tracked objects:
 36272 ;;		On entry : 3F/39
 36273 ;;		On exit  : 3F/3D
 36274 ;;		Unchanged: 0/0
 36275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36280 ;;Total ram usage:        0 bytes
 36281 ;; Hardware stack levels used: 1
 36282 ;; Hardware stack levels required when called: 3
 36283 ;; This function calls:
 36284 ;;		Nothing
 36285 ;; This function is called by:
 36286 ;;		_SYSTEM_Initialize
 36287 ;; This function uses a reentrant model
 36288 ;;
 36289                           
 36290                           	psect	text64
 36291   017FFA                     __ptext64:
 36292                           	callstack 0
 36293   017FFA                     _SPI1_Initialize:
 36294                           	callstack 26
 36295                           
 36296                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 36297                           
 36298                           ; BSR set to: 57
 36299                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36300                           ;incstack = 0
 36301   017FFA  0E40               	movlw	64
 36302   017FFC  013D               	movlb	61	; () banked
 36303   017FFE  6F15               	movwf	21,b	;volatile
 36304                           
 36305                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 36306   018000  0E03               	movlw	3
 36307   018002  6F16               	movwf	22,b	;volatile
 36308                           
 36309                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 36310   018004  0E4F               	movlw	79
 36311   018006  6F19               	movwf	25,b	;volatile
 36312                           
 36313                           ; BSR set to: 61
 36314                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 36315   018008  6B1C               	clrf	28,b	;volatile
 36316                           
 36317                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 36318   01800A  0E83               	movlw	131
 36319   01800C  6F14               	movwf	20,b	;volatile
 36320                           
 36321                           ; BSR set to: 61
 36322                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 36323   01800E  0012               	return		;funcret
 36324   018010                     __end_of_SPI1_Initialize:
 36325                           	callstack 0
 36326                           
 36327 ;; *************** function _PWM8_Initialize *****************
 36328 ;; Defined at:
 36329 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 36330 ;; Parameters:    Size  Location     Type
 36331 ;;		None
 36332 ;; Auto vars:     Size  Location     Type
 36333 ;;		None
 36334 ;; Return value:  Size  Location     Type
 36335 ;;                  1  [STACK] void 
 36336 ;; Registers used:
 36337 ;;		wreg, status,2
 36338 ;; Tracked objects:
 36339 ;;		On entry : 3F/39
 36340 ;;		On exit  : 3F/3F
 36341 ;;		Unchanged: 0/0
 36342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36347 ;;Total ram usage:        0 bytes
 36348 ;; Hardware stack levels used: 1
 36349 ;; Hardware stack levels required when called: 3
 36350 ;; This function calls:
 36351 ;;		Nothing
 36352 ;; This function is called by:
 36353 ;;		_SYSTEM_Initialize
 36354 ;; This function uses a reentrant model
 36355 ;;
 36356                           
 36357                           	psect	text65
 36358   018010                     __ptext65:
 36359                           	callstack 0
 36360   018010                     _PWM8_Initialize:
 36361                           	callstack 26
 36362                           
 36363                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 36364                           
 36365                           ; BSR set to: 61
 36366                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36367                           ;incstack = 0
 36368   018010  0E80               	movlw	128
 36369   018012  6E62               	movwf	98,c	;volatile
 36370                           
 36371                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 36372   018014  6A61               	clrf	97,c	;volatile
 36373                           
 36374                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 36375   018016  0E40               	movlw	64
 36376   018018  6E60               	movwf	96,c	;volatile
 36377                           
 36378                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 36379   01801A  013F               	movlb	63	; () banked
 36380   01801C  515F               	movf	95,w,b	;volatile
 36381   01801E  0B3F               	andlw	-193
 36382   018020  0940               	iorlw	64
 36383   018022  6F5F               	movwf	95,b	;volatile
 36384                           
 36385                           ; BSR set to: 63
 36386                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 36387   018024  0012               	return		;funcret
 36388   018026                     __end_of_PWM8_Initialize:
 36389                           	callstack 0
 36390                           
 36391 ;; *************** function _PMD_Initialize *****************
 36392 ;; Defined at:
 36393 ;;		line 91 in file "mcc_generated_files/mcc.c"
 36394 ;; Parameters:    Size  Location     Type
 36395 ;;		None
 36396 ;; Auto vars:     Size  Location     Type
 36397 ;;		None
 36398 ;; Return value:  Size  Location     Type
 36399 ;;                  1  [STACK] void 
 36400 ;; Registers used:
 36401 ;;		None
 36402 ;; Tracked objects:
 36403 ;;		On entry : 3F/39
 36404 ;;		On exit  : 3F/39
 36405 ;;		Unchanged: 0/0
 36406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36411 ;;Total ram usage:        0 bytes
 36412 ;; Hardware stack levels used: 1
 36413 ;; Hardware stack levels required when called: 3
 36414 ;; This function calls:
 36415 ;;		Nothing
 36416 ;; This function is called by:
 36417 ;;		_SYSTEM_Initialize
 36418 ;; This function uses a reentrant model
 36419 ;;
 36420                           
 36421                           	psect	text66
 36422   01803C                     __ptext66:
 36423                           	callstack 0
 36424   01803C                     _PMD_Initialize:
 36425                           	callstack 26
 36426                           
 36427                           ;mcc_generated_files/mcc.c: 94:     PMD0 = 0x00;
 36428                           
 36429                           ; BSR set to: 63
 36430                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36431                           ;incstack = 0
 36432   01803C  0139               	movlb	57	; () banked
 36433   01803E  6BC0               	clrf	192,b	;volatile
 36434                           
 36435                           ;mcc_generated_files/mcc.c: 96:     PMD1 = 0x00;
 36436   018040  6BC1               	clrf	193,b	;volatile
 36437                           
 36438                           ;mcc_generated_files/mcc.c: 98:     PMD2 = 0x00;
 36439   018042  6BC2               	clrf	194,b	;volatile
 36440                           
 36441                           ;mcc_generated_files/mcc.c: 100:     PMD3 = 0x00;
 36442   018044  6BC3               	clrf	195,b	;volatile
 36443                           
 36444                           ;mcc_generated_files/mcc.c: 102:     PMD4 = 0x00;
 36445   018046  6BC4               	clrf	196,b	;volatile
 36446                           
 36447                           ;mcc_generated_files/mcc.c: 104:     PMD5 = 0x00;
 36448   018048  6BC5               	clrf	197,b	;volatile
 36449                           
 36450                           ;mcc_generated_files/mcc.c: 106:     PMD6 = 0x00;
 36451   01804A  6BC6               	clrf	198,b	;volatile
 36452                           
 36453                           ;mcc_generated_files/mcc.c: 108:     PMD7 = 0x00;
 36454   01804C  6BC7               	clrf	199,b	;volatile
 36455                           
 36456                           ; BSR set to: 57
 36457                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 36458   01804E  0012               	return		;funcret
 36459   018050                     __end_of_PMD_Initialize:
 36460                           	callstack 0
 36461                           
 36462 ;; *************** function _PIN_MANAGER_Initialize *****************
 36463 ;; Defined at:
 36464 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 36465 ;; Parameters:    Size  Location     Type
 36466 ;;		None
 36467 ;; Auto vars:     Size  Location     Type
 36468 ;;		None
 36469 ;; Return value:  Size  Location     Type
 36470 ;;                  1  [STACK] void 
 36471 ;; Registers used:
 36472 ;;		wreg, status,2
 36473 ;; Tracked objects:
 36474 ;;		On entry : 3F/39
 36475 ;;		On exit  : 3F/3A
 36476 ;;		Unchanged: 0/0
 36477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36482 ;;Total ram usage:        0 bytes
 36483 ;; Hardware stack levels used: 1
 36484 ;; Hardware stack levels required when called: 3
 36485 ;; This function calls:
 36486 ;;		Nothing
 36487 ;; This function is called by:
 36488 ;;		_SYSTEM_Initialize
 36489 ;; This function uses a reentrant model
 36490 ;;
 36491                           
 36492                           	psect	text67
 36493   016A58                     __ptext67:
 36494                           	callstack 0
 36495   016A58                     _PIN_MANAGER_Initialize:
 36496                           	callstack 26
 36497                           
 36498                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 36499                           
 36500                           ; BSR set to: 57
 36501                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36502                           ;incstack = 0
 36503   016A58  0E07               	movlw	7
 36504   016A5A  6EBE               	movwf	190,c	;volatile
 36505                           
 36506                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 36507   016A5C  6ABD               	clrf	189,c	;volatile
 36508                           
 36509                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 36510   016A5E  6ABA               	clrf	186,c	;volatile
 36511                           
 36512                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 36513   016A60  6ABF               	clrf	191,c	;volatile
 36514                           
 36515                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 36516   016A62  6ABB               	clrf	187,c	;volatile
 36517                           
 36518                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x06;
 36519   016A64  0E06               	movlw	6
 36520   016A66  6EBC               	movwf	188,c	;volatile
 36521                           
 36522                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 36523   016A68  6AC6               	clrf	198,c	;volatile
 36524                           
 36525                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 36526   016A6A  0E0F               	movlw	15
 36527   016A6C  6EC7               	movwf	199,c	;volatile
 36528                           
 36529                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0x8F;
 36530   016A6E  0E8F               	movlw	143
 36531   016A70  6EC2               	movwf	194,c	;volatile
 36532                           
 36533                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0x8F;
 36534   016A72  0E8F               	movlw	143
 36535   016A74  6EC3               	movwf	195,c	;volatile
 36536                           
 36537                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x91;
 36538   016A76  0E91               	movlw	145
 36539   016A78  6EC4               	movwf	196,c	;volatile
 36540                           
 36541                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 36542   016A7A  0E0C               	movlw	12
 36543   016A7C  6EC5               	movwf	197,c	;volatile
 36544                           
 36545                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 36546   016A7E  013A               	movlb	58	; () banked
 36547   016A80  6B70               	clrf	112,b	;volatile
 36548                           
 36549                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x01;
 36550   016A82  0E01               	movlw	1
 36551   016A84  6F60               	movwf	96,b	;volatile
 36552                           
 36553                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x08;
 36554   016A86  0E08               	movlw	8
 36555   016A88  6F50               	movwf	80,b	;volatile
 36556                           
 36557                           ; BSR set to: 58
 36558                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 36559   016A8A  6B80               	clrf	128,b	;volatile
 36560                           
 36561                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x0F;
 36562   016A8C  0E0F               	movlw	15
 36563   016A8E  6F90               	movwf	144,b	;volatile
 36564                           
 36565                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0x8F;
 36566   016A90  0E8F               	movlw	143
 36567   016A92  6F40               	movwf	64,b	;volatile
 36568                           
 36569                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0xFC;
 36570   016A94  0EFC               	movlw	252
 36571   016A96  6F71               	movwf	113,b	;volatile
 36572                           
 36573                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0xF0;
 36574   016A98  0EF0               	movlw	240
 36575   016A9A  6F91               	movwf	145,b	;volatile
 36576                           
 36577                           ; BSR set to: 58
 36578                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 36579   016A9C  6B81               	clrf	129,b	;volatile
 36580                           
 36581                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 36582   016A9E  0E87               	movlw	135
 36583   016AA0  6F51               	movwf	81,b	;volatile
 36584                           
 36585                           ; BSR set to: 58
 36586                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 36587   016AA2  6B41               	clrf	65,b	;volatile
 36588                           
 36589                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x90;
 36590   016AA4  0E90               	movlw	144
 36591   016AA6  6F61               	movwf	97,b	;volatile
 36592                           
 36593                           ; BSR set to: 58
 36594                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 36595   016AA8  6B82               	clrf	130,b	;volatile
 36596                           
 36597                           ; BSR set to: 58
 36598                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 36599   016AAA  6B92               	clrf	146,b	;volatile
 36600                           
 36601                           ; BSR set to: 58
 36602                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 36603   016AAC  6B42               	clrf	66,b	;volatile
 36604                           
 36605                           ; BSR set to: 58
 36606                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 36607   016AAE  6B52               	clrf	82,b	;volatile
 36608                           
 36609                           ; BSR set to: 58
 36610                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 36611   016AB0  6B62               	clrf	98,b	;volatile
 36612                           
 36613                           ; BSR set to: 58
 36614                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 36615   016AB2  6B72               	clrf	114,b	;volatile
 36616                           
 36617                           ; BSR set to: 58
 36618                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 36619   016AB4  6943               	setf	67,b	;volatile
 36620                           
 36621                           ; BSR set to: 58
 36622                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 36623   016AB6  6953               	setf	83,b	;volatile
 36624                           
 36625                           ; BSR set to: 58
 36626                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 36627   016AB8  6963               	setf	99,b	;volatile
 36628                           
 36629                           ; BSR set to: 58
 36630                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 36631   016ABA  6973               	setf	115,b	;volatile
 36632                           
 36633                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 36634   016ABC  0E07               	movlw	7
 36635   016ABE  6F83               	movwf	131,b	;volatile
 36636                           
 36637                           ; BSR set to: 58
 36638                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 36639   016AC0  6993               	setf	147,b	;volatile
 36640                           
 36641                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 36642   016AC2  0E0F               	movlw	15
 36643   016AC4  6FE8               	movwf	232,b	;volatile
 36644                           
 36645                           ;mcc_generated_files/pin_manager.c: 127:     RB6PPS = 0x16;
 36646   016AC6  0E16               	movlw	22
 36647   016AC8  6F0E               	movwf	14,b	;volatile
 36648                           
 36649                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x1E;
 36650   016ACA  0E1E               	movlw	30
 36651   016ACC  6F13               	movwf	19,b	;volatile
 36652                           
 36653                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x08;
 36654   016ACE  0E08               	movlw	8
 36655   016AD0  6FC0               	movwf	192,b	;volatile
 36656                           
 36657                           ;mcc_generated_files/pin_manager.c: 130:     INT2PPS = 0x0A;
 36658   016AD2  0E0A               	movlw	10
 36659   016AD4  6FC2               	movwf	194,b	;volatile
 36660                           
 36661                           ;mcc_generated_files/pin_manager.c: 131:     INT1PPS = 0x09;
 36662   016AD6  0E09               	movlw	9
 36663   016AD8  6FC1               	movwf	193,b	;volatile
 36664                           
 36665                           ;mcc_generated_files/pin_manager.c: 132:     U1RXPPS = 0x17;
 36666   016ADA  0E17               	movlw	23
 36667   016ADC  6FE5               	movwf	229,b	;volatile
 36668                           
 36669                           ;mcc_generated_files/pin_manager.c: 133:     SPI1SCKPPS = 0x13;
 36670   016ADE  0E13               	movlw	19
 36671   016AE0  6FDE               	movwf	222,b	;volatile
 36672                           
 36673                           ;mcc_generated_files/pin_manager.c: 134:     RA4PPS = 0x01;
 36674   016AE2  0E01               	movlw	1
 36675   016AE4  6F04               	movwf	4,b	;volatile
 36676                           
 36677                           ;mcc_generated_files/pin_manager.c: 135:     RA5PPS = 0x26;
 36678   016AE6  0E26               	movlw	38
 36679   016AE8  6F05               	movwf	5,b	;volatile
 36680                           
 36681                           ;mcc_generated_files/pin_manager.c: 136:     RA6PPS = 0x28;
 36682   016AEA  0E28               	movlw	40
 36683   016AEC  6F06               	movwf	6,b	;volatile
 36684                           
 36685                           ;mcc_generated_files/pin_manager.c: 137:     RD1PPS = 0x10;
 36686   016AEE  0E10               	movlw	16
 36687   016AF0  6F19               	movwf	25,b	;volatile
 36688                           
 36689                           ;mcc_generated_files/pin_manager.c: 138:     RC5PPS = 0x1F;
 36690   016AF2  0E1F               	movlw	31
 36691   016AF4  6F15               	movwf	21,b	;volatile
 36692                           
 36693                           ;mcc_generated_files/pin_manager.c: 139:     RC6PPS = 0x13;
 36694   016AF6  0E13               	movlw	19
 36695   016AF8  6F16               	movwf	22,b	;volatile
 36696                           
 36697                           ;mcc_generated_files/pin_manager.c: 140:     SPI1SDIPPS = 0x14;
 36698   016AFA  0E14               	movlw	20
 36699   016AFC  6FDF               	movwf	223,b	;volatile
 36700                           
 36701                           ; BSR set to: 58
 36702                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 36703   016AFE  0012               	return		;funcret
 36704   016B00                     __end_of_PIN_MANAGER_Initialize:
 36705                           	callstack 0
 36706                           
 36707 ;; *************** function _OSCILLATOR_Initialize *****************
 36708 ;; Defined at:
 36709 ;;		line 73 in file "mcc_generated_files/mcc.c"
 36710 ;; Parameters:    Size  Location     Type
 36711 ;;		None
 36712 ;; Auto vars:     Size  Location     Type
 36713 ;;		None
 36714 ;; Return value:  Size  Location     Type
 36715 ;;                  1  [STACK] void 
 36716 ;; Registers used:
 36717 ;;		wreg, status,2
 36718 ;; Tracked objects:
 36719 ;;		On entry : 3F/3A
 36720 ;;		On exit  : 3F/39
 36721 ;;		Unchanged: 0/0
 36722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36727 ;;Total ram usage:        0 bytes
 36728 ;; Hardware stack levels used: 1
 36729 ;; Hardware stack levels required when called: 3
 36730 ;; This function calls:
 36731 ;;		Nothing
 36732 ;; This function is called by:
 36733 ;;		_SYSTEM_Initialize
 36734 ;; This function uses a reentrant model
 36735 ;;
 36736                           
 36737                           	psect	text68
 36738   018026                     __ptext68:
 36739                           	callstack 0
 36740   018026                     _OSCILLATOR_Initialize:
 36741                           	callstack 26
 36742                           
 36743                           ;mcc_generated_files/mcc.c: 76:     OSCCON1 = 0x20;
 36744                           
 36745                           ; BSR set to: 58
 36746                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36747                           ;incstack = 0
 36748   018026  0E20               	movlw	32
 36749   018028  0139               	movlb	57	; () banked
 36750   01802A  6FD9               	movwf	217,b	;volatile
 36751                           
 36752                           ; BSR set to: 57
 36753                           ;mcc_generated_files/mcc.c: 78:     OSCCON3 = 0x00;
 36754   01802C  6BDB               	clrf	219,b	;volatile
 36755                           
 36756                           ; BSR set to: 57
 36757                           ;mcc_generated_files/mcc.c: 80:     OSCEN = 0x00;
 36758   01802E  6BDD               	clrf	221,b	;volatile
 36759                           
 36760                           ;mcc_generated_files/mcc.c: 82:     OSCFRQ = 0x02;
 36761   018030  0E02               	movlw	2
 36762   018032  6FDF               	movwf	223,b	;volatile
 36763                           
 36764                           ; BSR set to: 57
 36765                           ;mcc_generated_files/mcc.c: 84:     OSCTUNE = 0x00;
 36766   018034  6BDE               	clrf	222,b	;volatile
 36767   018036                     l200:
 36768                           
 36769                           ; BSR set to: 57
 36770                           ;mcc_generated_files/mcc.c: 86:     while(PLLR == 0)
 36771   018036  B1DC               	btfsc	220,0,b	;volatile
 36772   018038  0012               	return	
 36773   01803A  D7FD               	goto	l200
 36774   01803C                     __end_of_OSCILLATOR_Initialize:
 36775                           	callstack 0
 36776                           
 36777 ;; *************** function _NCO1_Initialize *****************
 36778 ;; Defined at:
 36779 ;;		line 58 in file "mcc_generated_files/nco1.c"
 36780 ;; Parameters:    Size  Location     Type
 36781 ;;		None
 36782 ;; Auto vars:     Size  Location     Type
 36783 ;;		None
 36784 ;; Return value:  Size  Location     Type
 36785 ;;                  1  [STACK] void 
 36786 ;; Registers used:
 36787 ;;		wreg, status,2
 36788 ;; Tracked objects:
 36789 ;;		On entry : 0/39
 36790 ;;		On exit  : 3F/3F
 36791 ;;		Unchanged: 0/0
 36792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36797 ;;Total ram usage:        0 bytes
 36798 ;; Hardware stack levels used: 1
 36799 ;; Hardware stack levels required when called: 3
 36800 ;; This function calls:
 36801 ;;		Nothing
 36802 ;; This function is called by:
 36803 ;;		_SYSTEM_Initialize
 36804 ;; This function uses a reentrant model
 36805 ;;
 36806                           
 36807                           	psect	text69
 36808   017F40                     __ptext69:
 36809                           	callstack 0
 36810   017F40                     _NCO1_Initialize:
 36811                           	callstack 26
 36812                           
 36813                           ;mcc_generated_files/nco1.c: 62:     NCO1CON = 0x00;
 36814                           
 36815                           ; BSR set to: 57
 36816                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36817                           ;incstack = 0
 36818   017F40  013F               	movlb	63	; () banked
 36819   017F42  6B3E               	clrf	62,b	;volatile
 36820                           
 36821                           ;mcc_generated_files/nco1.c: 64:     NCO1CLK = 0x00;
 36822   017F44  6B3F               	clrf	63,b	;volatile
 36823                           
 36824                           ;mcc_generated_files/nco1.c: 66:     NCO1ACCU = 0x00;
 36825   017F46  6B3A               	clrf	58,b	;volatile
 36826                           
 36827                           ;mcc_generated_files/nco1.c: 68:     NCO1ACCH = 0x00;
 36828   017F48  6B39               	clrf	57,b	;volatile
 36829                           
 36830                           ;mcc_generated_files/nco1.c: 70:     NCO1ACCL = 0x00;
 36831   017F4A  6B38               	clrf	56,b	;volatile
 36832                           
 36833                           ; BSR set to: 63
 36834                           ;mcc_generated_files/nco1.c: 72:     NCO1INCU = 0x06;
 36835   017F4C  0E06               	movlw	6
 36836   017F4E  6F3D               	movwf	61,b	;volatile
 36837                           
 36838                           ;mcc_generated_files/nco1.c: 74:     NCO1INCH = 0xC7;
 36839   017F50  0EC7               	movlw	199
 36840   017F52  6F3C               	movwf	60,b	;volatile
 36841                           
 36842                           ;mcc_generated_files/nco1.c: 76:     NCO1INCL = 0xAE;
 36843   017F54  0EAE               	movlw	174
 36844   017F56  6F3B               	movwf	59,b	;volatile
 36845                           
 36846                           ; BSR set to: 63
 36847                           ;mcc_generated_files/nco1.c: 79:     NCO1CONbits.EN = 1;
 36848   017F58  8F3E               	bsf	62,7,b	;volatile
 36849                           
 36850                           ; BSR set to: 63
 36851                           ; _NCO1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 36852   017F5A  0012               	return		;funcret
 36853   017F5C                     __end_of_NCO1_Initialize:
 36854                           	callstack 0
 36855                           
 36856 ;; *************** function _INTERRUPT_Initialize *****************
 36857 ;; Defined at:
 36858 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 36859 ;; Parameters:    Size  Location     Type
 36860 ;;		None
 36861 ;; Auto vars:     Size  Location     Type
 36862 ;;  state           1  [STACK] _Bool 
 36863 ;; Return value:  Size  Location     Type
 36864 ;;                  1  [STACK] void 
 36865 ;; Registers used:
 36866 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 36867 ;; Tracked objects:
 36868 ;;		On entry : 0/0
 36869 ;;		On exit  : 3F/39
 36870 ;;		Unchanged: 0/0
 36871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36876 ;;Total ram usage:        0 bytes
 36877 ;; Hardware stack levels used: 1
 36878 ;; Hardware stack levels required when called: 3
 36879 ;; This function calls:
 36880 ;;		Nothing
 36881 ;; This function is called by:
 36882 ;;		_SYSTEM_Initialize
 36883 ;; This function uses a reentrant model
 36884 ;;
 36885                           
 36886                           	psect	text70
 36887   017034                     __ptext70:
 36888                           	callstack 0
 36889   017034                     _INTERRUPT_Initialize:
 36890                           	callstack 0
 36891                           
 36892                           ; BSR set to: 63
 36893                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36894   017034  52E6               	movf	postinc1,f,c
 36895                           
 36896                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 36897                           
 36898                           ;incstack = 0
 36899   017036  8AD2               	bsf	210,5,c	;volatile
 36900                           
 36901                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 36902   017038  AED2               	btfss	16338,7,c	;volatile
 36903   01703A  D003               	goto	u5760
 36904   01703C  6A2D               	clrf	(btemp+11)^0,c
 36905   01703E  2A2D               	incf	(btemp+11)^0,f,c
 36906   017040  D001               	goto	u5778
 36907   017042                     u5760:
 36908   017042  6A2D               	clrf	(btemp+11)^0,c
 36909   017044                     u5778:
 36910                           
 36911                           ;stkvar	_state @ sp[(-1)+0]
 36912   017044  0EFF               	movlw	-1
 36913   017046  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 36914                           
 36915                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 36916   01704C  9ED2               	bcf	16338,7,c	;volatile
 36917                           
 36918                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 36919   01704E  0E55               	movlw	85
 36920   017050  6ED4               	movwf	212,c	;volatile
 36921                           
 36922                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 36923   017052  0EAA               	movlw	170
 36924   017054  6ED4               	movwf	212,c	;volatile
 36925                           
 36926                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 36927   017056  90D4               	bcf	212,0,c	;volatile
 36928                           
 36929                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 36930   017058  0138               	movlb	56	; () banked
 36931   01705A  6B9F               	clrf	159,b	;volatile
 36932                           
 36933                           ; BSR set to: 56
 36934                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 36935   01705C  6B9E               	clrf	158,b	;volatile
 36936                           
 36937                           ; BSR set to: 56
 36938                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 36939   01705E  0E08               	movlw	8
 36940   017060  6F9D               	movwf	157,b	;volatile
 36941                           
 36942                           ; BSR set to: 56
 36943                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 36944   017062  0E55               	movlw	85
 36945   017064  6ED4               	movwf	212,c	;volatile
 36946                           
 36947                           ; BSR set to: 56
 36948                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 36949   017066  0EAA               	movlw	170
 36950   017068  6ED4               	movwf	212,c	;volatile
 36951                           
 36952                           ; BSR set to: 56
 36953                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 36954   01706A  80D4               	bsf	212,0,c	;volatile
 36955                           
 36956                           ; BSR set to: 56
 36957                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 36958                           ;stkvar	_state @ sp[(-1)+0]
 36959   01706C  0EFF               	movlw	-1
 36960   01706E  B0E3               	btfsc	plusw1,0,c
 36961   017070  D002               	bra	u5785
 36962   017072  9ED2               	bcf	16338,7,c	;volatile
 36963   017074  D001               	bra	u5786
 36964   017076                     u5785:
 36965   017076  8ED2               	bsf	16338,7,c	;volatile
 36966   017078                     u5786:
 36967                           
 36968                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 36969   017078  0139               	movlb	57	; () banked
 36970   01707A  8782               	bsf	130,3,b	;volatile
 36971                           
 36972                           ; BSR set to: 57
 36973                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 36974   01707C  8382               	bsf	130,1,b	;volatile
 36975                           
 36976                           ; BSR set to: 57
 36977                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 36978   01707E  8182               	bsf	130,0,b	;volatile
 36979                           
 36980                           ; BSR set to: 57
 36981                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 36982   017080  8582               	bsf	130,2,b	;volatile
 36983                           
 36984                           ; BSR set to: 57
 36985                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 36986   017082  8786               	bsf	134,3,b	;volatile
 36987                           
 36988                           ; BSR set to: 57
 36989                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 36990   017084  8586               	bsf	134,2,b	;volatile
 36991                           
 36992                           ; BSR set to: 57
 36993                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 36994   017086  8983               	bsf	131,4,b	;volatile
 36995                           
 36996                           ; BSR set to: 57
 36997                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 36998   017088  8783               	bsf	131,3,b	;volatile
 36999                           
 37000                           ; BSR set to: 57
 37001                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 37002   01708A  8181               	bsf	129,0,b	;volatile
 37003                           
 37004                           ; BSR set to: 57
 37005                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 37006   01708C  8185               	bsf	133,0,b	;volatile
 37007                           
 37008                           ; BSR set to: 57
 37009                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR7bits.INT2IP = 1;
 37010   01708E  8B87               	bsf	135,5,b	;volatile
 37011                           
 37012                           ; BSR set to: 57
 37013                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR9bits.TMR6IP = 1;
 37014   017090  8189               	bsf	137,0,b	;volatile
 37015                           
 37016                           ; BSR set to: 57
 37017                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR8bits.TMR5IP = 1;
 37018   017092  8D88               	bsf	136,6,b	;volatile
 37019                           
 37020                           ; BSR set to: 57
 37021                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADIP = 1;
 37022   017094  8581               	bsf	129,2,b	;volatile
 37023                           
 37024                           ; BSR set to: 57
 37025                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 37026   017096  52E5               	movf	postdec1,f,c
 37027   017098  0012               	return		;funcret
 37028   01709A                     __end_of_INTERRUPT_Initialize:
 37029                           	callstack 0
 37030                           
 37031 ;; *************** function _EXT_INT_Initialize *****************
 37032 ;; Defined at:
 37033 ;;		line 119 in file "mcc_generated_files/ext_int.c"
 37034 ;; Parameters:    Size  Location     Type
 37035 ;;		None
 37036 ;; Auto vars:     Size  Location     Type
 37037 ;;		None
 37038 ;; Return value:  Size  Location     Type
 37039 ;;                  1  [STACK] void 
 37040 ;; Registers used:
 37041 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 37042 ;; Tracked objects:
 37043 ;;		On entry : 3F/3F
 37044 ;;		On exit  : 3F/39
 37045 ;;		Unchanged: 0/0
 37046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37051 ;;Total ram usage:        0 bytes
 37052 ;; Hardware stack levels used: 1
 37053 ;; Hardware stack levels required when called: 4
 37054 ;; This function calls:
 37055 ;;		_INT0_SetInterruptHandler
 37056 ;;		_INT1_SetInterruptHandler
 37057 ;;		_INT2_SetInterruptHandler
 37058 ;; This function is called by:
 37059 ;;		_SYSTEM_Initialize
 37060 ;; This function uses a reentrant model
 37061 ;;
 37062                           
 37063                           	psect	text71
 37064   01742A                     __ptext71:
 37065                           	callstack 0
 37066   01742A                     _EXT_INT_Initialize:
 37067                           	callstack 25
 37068                           
 37069                           ;mcc_generated_files/ext_int.c: 124:  (PIR1bits.INT0IF = 0);
 37070                           
 37071                           ; BSR set to: 57
 37072                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37073                           ;incstack = 0
 37074   01742A  0139               	movlb	57	; () banked
 37075   01742C  91A1               	bcf	161,0,b	;volatile
 37076                           
 37077                           ;mcc_generated_files/ext_int.c: 125:  (INTCON0bits.INT0EDG = 0);
 37078   01742E  90D2               	bcf	210,0,c	;volatile
 37079                           
 37080                           ; BSR set to: 57
 37081                           ;mcc_generated_files/ext_int.c: 127:  INT0_SetInterruptHandler(INT0_DefaultInterruptHand
      +                          ler);
 37082   017430  0E00               	movlw	low _INT0_DefaultInterruptHandler
 37083   017432  6EE6               	movwf	postinc1,c
 37084   017434  0E81               	movlw	high _INT0_DefaultInterruptHandler
 37085   017436  6EE6               	movwf	postinc1,c
 37086   017438  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 37087   01743A  6EE6               	movwf	postinc1,c
 37088   01743C  EC73  F0BE         	call	_INT0_SetInterruptHandler	;wreg free
 37089                           
 37090                           ;mcc_generated_files/ext_int.c: 128:  (PIE1bits.INT0IE = 1);
 37091   017440  0139               	movlb	57	; () banked
 37092   017442  8191               	bsf	145,0,b	;volatile
 37093                           
 37094                           ; BSR set to: 57
 37095                           ;mcc_generated_files/ext_int.c: 133:  (PIR5bits.INT1IF = 0);
 37096   017444  91A5               	bcf	165,0,b	;volatile
 37097                           
 37098                           ; BSR set to: 57
 37099                           ;mcc_generated_files/ext_int.c: 134:  (INTCON0bits.INT1EDG = 0);
 37100   017446  92D2               	bcf	210,1,c	;volatile
 37101                           
 37102                           ;mcc_generated_files/ext_int.c: 136:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 37103   017448  0E02               	movlw	low _INT1_DefaultInterruptHandler
 37104   01744A  6EE6               	movwf	postinc1,c
 37105   01744C  0E81               	movlw	high _INT1_DefaultInterruptHandler
 37106   01744E  6EE6               	movwf	postinc1,c
 37107   017450  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 37108   017452  6EE6               	movwf	postinc1,c
 37109   017454  EC5F  F0BE         	call	_INT1_SetInterruptHandler	;wreg free
 37110                           
 37111                           ;mcc_generated_files/ext_int.c: 137:  (PIE5bits.INT1IE = 1);
 37112   017458  0139               	movlb	57	; () banked
 37113   01745A  8195               	bsf	149,0,b	;volatile
 37114                           
 37115                           ; BSR set to: 57
 37116                           ;mcc_generated_files/ext_int.c: 142:  (PIR7bits.INT2IF = 0);
 37117   01745C  9BA7               	bcf	167,5,b	;volatile
 37118                           
 37119                           ; BSR set to: 57
 37120                           ;mcc_generated_files/ext_int.c: 143:  (INTCON0bits.INT2EDG = 0);
 37121   01745E  94D2               	bcf	210,2,c	;volatile
 37122                           
 37123                           ;mcc_generated_files/ext_int.c: 145:  INT2_SetInterruptHandler(INT2_DefaultInterruptHand
      +                          ler);
 37124   017460  0E04               	movlw	low _INT2_DefaultInterruptHandler
 37125   017462  6EE6               	movwf	postinc1,c
 37126   017464  0E81               	movlw	high _INT2_DefaultInterruptHandler
 37127   017466  6EE6               	movwf	postinc1,c
 37128   017468  0E01               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 37129   01746A  6EE6               	movwf	postinc1,c
 37130   01746C  EC4B  F0BE         	call	_INT2_SetInterruptHandler	;wreg free
 37131                           
 37132                           ;mcc_generated_files/ext_int.c: 146:  (PIE7bits.INT2IE = 1);
 37133   017470  0139               	movlb	57	; () banked
 37134   017472  8B97               	bsf	151,5,b	;volatile
 37135                           
 37136                           ; BSR set to: 57
 37137                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 37138   017474  0012               	return		;funcret
 37139   017476                     __end_of_EXT_INT_Initialize:
 37140                           	callstack 0
 37141                           
 37142 ;; *************** function _INT2_SetInterruptHandler *****************
 37143 ;; Defined at:
 37144 ;;		line 108 in file "mcc_generated_files/ext_int.c"
 37145 ;; Parameters:    Size  Location     Type
 37146 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 37147 ;;		 -> INT2_DefaultInterruptHandler(1), 
 37148 ;; Auto vars:     Size  Location     Type
 37149 ;;		None
 37150 ;; Return value:  Size  Location     Type
 37151 ;;                  1  [STACK] void 
 37152 ;; Registers used:
 37153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 37154 ;; Tracked objects:
 37155 ;;		On entry : 3F/39
 37156 ;;		On exit  : 0/0
 37157 ;;		Unchanged: 0/0
 37158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37163 ;;Total ram usage:        0 bytes
 37164 ;; Hardware stack levels used: 1
 37165 ;; Hardware stack levels required when called: 3
 37166 ;; This function calls:
 37167 ;;		Nothing
 37168 ;; This function is called by:
 37169 ;;		_EXT_INT_Initialize
 37170 ;; This function uses a reentrant model
 37171 ;;
 37172                           
 37173                           	psect	text72
 37174   017C96                     __ptext72:
 37175                           	callstack 0
 37176   017C96                     _INT2_SetInterruptHandler:
 37177                           	callstack 25
 37178                           
 37179                           ;mcc_generated_files/ext_int.c: 108: void INT2_SetInterruptHandler(void (* InterruptHand
      +                          ler)(void));mcc_generated_files/ext_int.c: 109: {;mcc_generated_files/ext_int.c: 110:  I
      +                          NT2_InterruptHandler = InterruptHandler;
 37180                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 37181                           
 37182                           ; BSR set to: 57
 37183                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37184                           ;incstack = 0
 37185   017C96  50E1               	movf	fsr1l,w,c
 37186   017C98  0FFD               	addlw	-3
 37187   017C9A  6ED9               	movwf	fsr2l,c
 37188   017C9C  50E2               	movf	fsr1h,w,c
 37189   017C9E  6EDA               	movwf	fsr2h,c
 37190   017CA0  0EFF               	movlw	255
 37191   017CA2  22DA               	addwfc	fsr2h,f,c
 37192   017CA4  006F FF78  F0B3    	movff	postinc2,_INT2_InterruptHandler
 37193   017CAA  006F FF78  F0B4    	movff	postinc2,_INT2_InterruptHandler+1
 37194   017CB0  006F FF74  F0B5    	movff	postdec2,_INT2_InterruptHandler+2
 37195                           
 37196                           ; _INT2_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 37197   017CB6  52E5               	movf	postdec1,f,c
 37198   017CB8  52E5               	movf	postdec1,f,c
 37199   017CBA  52E5               	movf	postdec1,f,c
 37200   017CBC  0012               	return		;funcret
 37201   017CBE                     __end_of_INT2_SetInterruptHandler:
 37202                           	callstack 0
 37203                           
 37204 ;; *************** function _INT1_SetInterruptHandler *****************
 37205 ;; Defined at:
 37206 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 37207 ;; Parameters:    Size  Location     Type
 37208 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 37209 ;;		 -> INT1_DefaultInterruptHandler(1), 
 37210 ;; Auto vars:     Size  Location     Type
 37211 ;;		None
 37212 ;; Return value:  Size  Location     Type
 37213 ;;                  1  [STACK] void 
 37214 ;; Registers used:
 37215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 37216 ;; Tracked objects:
 37217 ;;		On entry : 3F/39
 37218 ;;		On exit  : 0/0
 37219 ;;		Unchanged: 0/0
 37220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37225 ;;Total ram usage:        0 bytes
 37226 ;; Hardware stack levels used: 1
 37227 ;; Hardware stack levels required when called: 3
 37228 ;; This function calls:
 37229 ;;		Nothing
 37230 ;; This function is called by:
 37231 ;;		_EXT_INT_Initialize
 37232 ;; This function uses a reentrant model
 37233 ;;
 37234                           
 37235                           	psect	text73
 37236   017CBE                     __ptext73:
 37237                           	callstack 0
 37238   017CBE                     _INT1_SetInterruptHandler:
 37239                           	callstack 25
 37240                           
 37241                           ;mcc_generated_files/ext_int.c: 81: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 82: {;mcc_generated_files/ext_int.c: 83:  INT1
      +                          _InterruptHandler = InterruptHandler;
 37242                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 37243                           
 37244                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37245                           ;incstack = 0
 37246   017CBE  50E1               	movf	fsr1l,w,c
 37247   017CC0  0FFD               	addlw	-3
 37248   017CC2  6ED9               	movwf	fsr2l,c
 37249   017CC4  50E2               	movf	fsr1h,w,c
 37250   017CC6  6EDA               	movwf	fsr2h,c
 37251   017CC8  0EFF               	movlw	255
 37252   017CCA  22DA               	addwfc	fsr2h,f,c
 37253   017CCC  006F FF78  F0B6    	movff	postinc2,_INT1_InterruptHandler
 37254   017CD2  006F FF78  F0B7    	movff	postinc2,_INT1_InterruptHandler+1
 37255   017CD8  006F FF74  F0B8    	movff	postdec2,_INT1_InterruptHandler+2
 37256                           
 37257                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 37258   017CDE  52E5               	movf	postdec1,f,c
 37259   017CE0  52E5               	movf	postdec1,f,c
 37260   017CE2  52E5               	movf	postdec1,f,c
 37261   017CE4  0012               	return		;funcret
 37262   017CE6                     __end_of_INT1_SetInterruptHandler:
 37263                           	callstack 0
 37264                           
 37265 ;; *************** function _INT0_SetInterruptHandler *****************
 37266 ;; Defined at:
 37267 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 37268 ;; Parameters:    Size  Location     Type
 37269 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 37270 ;;		 -> INT0_DefaultInterruptHandler(1), 
 37271 ;; Auto vars:     Size  Location     Type
 37272 ;;		None
 37273 ;; Return value:  Size  Location     Type
 37274 ;;                  1  [STACK] void 
 37275 ;; Registers used:
 37276 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 37277 ;; Tracked objects:
 37278 ;;		On entry : 3F/39
 37279 ;;		On exit  : 0/0
 37280 ;;		Unchanged: 0/0
 37281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37286 ;;Total ram usage:        0 bytes
 37287 ;; Hardware stack levels used: 1
 37288 ;; Hardware stack levels required when called: 3
 37289 ;; This function calls:
 37290 ;;		Nothing
 37291 ;; This function is called by:
 37292 ;;		_EXT_INT_Initialize
 37293 ;; This function uses a reentrant model
 37294 ;;
 37295                           
 37296                           	psect	text74
 37297   017CE6                     __ptext74:
 37298                           	callstack 0
 37299   017CE6                     _INT0_SetInterruptHandler:
 37300                           	callstack 25
 37301                           
 37302                           ;mcc_generated_files/ext_int.c: 54: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 55: {;mcc_generated_files/ext_int.c: 56:  INT0
      +                          _InterruptHandler = InterruptHandler;
 37303                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 37304                           
 37305                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37306                           ;incstack = 0
 37307   017CE6  50E1               	movf	fsr1l,w,c
 37308   017CE8  0FFD               	addlw	-3
 37309   017CEA  6ED9               	movwf	fsr2l,c
 37310   017CEC  50E2               	movf	fsr1h,w,c
 37311   017CEE  6EDA               	movwf	fsr2h,c
 37312   017CF0  0EFF               	movlw	255
 37313   017CF2  22DA               	addwfc	fsr2h,f,c
 37314   017CF4  006F FF78  F0B9    	movff	postinc2,_INT0_InterruptHandler
 37315   017CFA  006F FF78  F0BA    	movff	postinc2,_INT0_InterruptHandler+1
 37316   017D00  006F FF74  F0BB    	movff	postdec2,_INT0_InterruptHandler+2
 37317                           
 37318                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 37319   017D06  52E5               	movf	postdec1,f,c
 37320   017D08  52E5               	movf	postdec1,f,c
 37321   017D0A  52E5               	movf	postdec1,f,c
 37322   017D0C  0012               	return		;funcret
 37323   017D0E                     __end_of_INT0_SetInterruptHandler:
 37324                           	callstack 0
 37325                           
 37326 ;; *************** function _DSM_Initialize *****************
 37327 ;; Defined at:
 37328 ;;		line 58 in file "mcc_generated_files/dsm.c"
 37329 ;; Parameters:    Size  Location     Type
 37330 ;;		None
 37331 ;; Auto vars:     Size  Location     Type
 37332 ;;		None
 37333 ;; Return value:  Size  Location     Type
 37334 ;;                  1  [STACK] void 
 37335 ;; Registers used:
 37336 ;;		wreg, status,2
 37337 ;; Tracked objects:
 37338 ;;		On entry : 0/3C
 37339 ;;		On exit  : 3F/3C
 37340 ;;		Unchanged: 0/0
 37341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37346 ;;Total ram usage:        0 bytes
 37347 ;; Hardware stack levels used: 1
 37348 ;; Hardware stack levels required when called: 3
 37349 ;; This function calls:
 37350 ;;		Nothing
 37351 ;; This function is called by:
 37352 ;;		_SYSTEM_Initialize
 37353 ;; This function uses a reentrant model
 37354 ;;
 37355                           
 37356                           	psect	text75
 37357   017F5C                     __ptext75:
 37358                           	callstack 0
 37359   017F5C                     _DSM_Initialize:
 37360                           	callstack 26
 37361                           
 37362                           ;mcc_generated_files/dsm.c: 63:     MD1CON0bits.MD1OPOL = 0;
 37363                           
 37364                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37365                           ;incstack = 0
 37366   017F5C  013C               	movlb	60	; () banked
 37367   017F5E  99FA               	bcf	250,4,b	;volatile
 37368                           
 37369                           ;mcc_generated_files/dsm.c: 66:     MD1CON1bits.MD1CLSYNC = 1;
 37370   017F60  81FB               	bsf	251,0,b	;volatile
 37371                           
 37372                           ;mcc_generated_files/dsm.c: 69:     MD1CON1bits.MD1CLPOL = 0;
 37373   017F62  93FB               	bcf	251,1,b	;volatile
 37374                           
 37375                           ;mcc_generated_files/dsm.c: 72:     MD1CON1bits.MD1CHSYNC = 1;
 37376   017F64  89FB               	bsf	251,4,b	;volatile
 37377                           
 37378                           ;mcc_generated_files/dsm.c: 75:     MD1CON1bits.MD1CHPOL = 0;
 37379   017F66  9BFB               	bcf	251,5,b	;volatile
 37380                           
 37381                           ; BSR set to: 60
 37382                           ;mcc_generated_files/dsm.c: 78:     MD1SRC = 0x13;
 37383   017F68  0E13               	movlw	19
 37384   017F6A  6FFC               	movwf	252,b	;volatile
 37385                           
 37386                           ;mcc_generated_files/dsm.c: 81:     MD1CARH = 0x0E;
 37387   017F6C  0E0E               	movlw	14
 37388   017F6E  6FFE               	movwf	254,b	;volatile
 37389                           
 37390                           ;mcc_generated_files/dsm.c: 84:     MD1CARL = 0x04;
 37391   017F70  0E04               	movlw	4
 37392   017F72  6FFD               	movwf	253,b	;volatile
 37393                           
 37394                           ; BSR set to: 60
 37395                           ;mcc_generated_files/dsm.c: 87:     MD1CON0bits.MD1EN = 1;
 37396   017F74  8FFA               	bsf	250,7,b	;volatile
 37397                           
 37398                           ; BSR set to: 60
 37399                           ; _DSM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 37400   017F76  0012               	return		;funcret
 37401   017F78                     __end_of_DSM_Initialize:
 37402                           	callstack 0
 37403                           
 37404 ;; *************** function _DMA2_Initialize *****************
 37405 ;; Defined at:
 37406 ;;		line 61 in file "mcc_generated_files/dma2.c"
 37407 ;; Parameters:    Size  Location     Type
 37408 ;;		None
 37409 ;; Auto vars:     Size  Location     Type
 37410 ;;		None
 37411 ;; Return value:  Size  Location     Type
 37412 ;;                  1  [STACK] void 
 37413 ;; Registers used:
 37414 ;;		wreg, status,2
 37415 ;; Tracked objects:
 37416 ;;		On entry : 3F/3D
 37417 ;;		On exit  : 3F/3B
 37418 ;;		Unchanged: 0/0
 37419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37424 ;;Total ram usage:        0 bytes
 37425 ;; Hardware stack levels used: 1
 37426 ;; Hardware stack levels required when called: 3
 37427 ;; This function calls:
 37428 ;;		Nothing
 37429 ;; This function is called by:
 37430 ;;		_SYSTEM_Initialize
 37431 ;; This function uses a reentrant model
 37432 ;;
 37433                           
 37434                           	psect	text76
 37435   017284                     __ptext76:
 37436                           	callstack 0
 37437   017284                     _DMA2_Initialize:
 37438                           	callstack 26
 37439                           
 37440                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 37441                           
 37442                           ; BSR set to: 60
 37443                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37444                           ;incstack = 0
 37445   017284  0E00               	movlw	0
 37446   017286  013B               	movlb	59	; () banked
 37447   017288  6FD9               	movwf	217,b	;volatile
 37448   01728A  0E10               	movlw	16
 37449   01728C  6FDA               	movwf	218,b	;volatile
 37450   01728E  0E00               	movlw	0
 37451   017290  6FDB               	movwf	219,b	;volatile
 37452                           
 37453                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 37454   017292  0E3F               	movlw	63
 37455   017294  6FD1               	movwf	209,b	;volatile
 37456   017296  0EBB               	movlw	187
 37457   017298  6FD0               	movwf	208,b	;volatile
 37458                           
 37459                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 37460   01729A  0E03               	movlw	3
 37461   01729C  6FDD               	movwf	221,b	;volatile
 37462                           
 37463                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 37464   01729E  0E00               	movlw	0
 37465   0172A0  6FD8               	movwf	216,b	;volatile
 37466   0172A2  0E01               	movlw	1
 37467   0172A4  6FD7               	movwf	215,b	;volatile
 37468                           
 37469                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 37470   0172A6  0E00               	movlw	0
 37471   0172A8  6FCF               	movwf	207,b	;volatile
 37472   0172AA  0E01               	movlw	1
 37473   0172AC  6FCE               	movwf	206,b	;volatile
 37474                           
 37475                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 37476   0172AE  0E46               	movlw	70
 37477   0172B0  6FDF               	movwf	223,b	;volatile
 37478                           
 37479                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 37480   0172B2  0E3D               	movlw	61
 37481   0172B4  6FDE               	movwf	222,b	;volatile
 37482                           
 37483                           ; BSR set to: 59
 37484                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 37485   0172B6  0139               	movlb	57	; () banked
 37486   0172B8  97A5               	bcf	165,3,b	;volatile
 37487                           
 37488                           ; BSR set to: 57
 37489                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 37490   0172BA  95A5               	bcf	165,2,b	;volatile
 37491                           
 37492                           ; BSR set to: 57
 37493                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 37494   0172BC  9BA5               	bcf	165,5,b	;volatile
 37495                           
 37496                           ; BSR set to: 57
 37497                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 37498   0172BE  99A5               	bcf	165,4,b	;volatile
 37499                           
 37500                           ; BSR set to: 57
 37501                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 37502   0172C0  9795               	bcf	149,3,b	;volatile
 37503                           
 37504                           ; BSR set to: 57
 37505                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 37506   0172C2  9595               	bcf	149,2,b	;volatile
 37507                           
 37508                           ; BSR set to: 57
 37509                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 37510   0172C4  9B95               	bcf	149,5,b	;volatile
 37511                           
 37512                           ; BSR set to: 57
 37513                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 37514   0172C6  9995               	bcf	149,4,b	;volatile
 37515   0172C8  9ED2               	bcf	16338,7,c	;# 
 37516   0172CA  0139               	banksel	14831	;# 
 37517   0172CC  0E55               	movlw	85	;# 
 37518   0172CE  6FEF               	movwf	14831,b	;# 
 37519   0172D0  0EAA               	movlw	170	;# 
 37520   0172D2  6FEF               	movwf	14831,b	;# 
 37521   0172D4  81EF               	bsf	14831,0,b	;# 
 37522   0172D6  8ED2               	bsf	16338,7,c	;# 
 37523                           
 37524                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 37525   0172D8  013B               	movlb	59	; () banked
 37526   0172DA  6BDC               	clrf	220,b	;volatile
 37527                           
 37528                           ; BSR set to: 59
 37529                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 37530   0172DC  0012               	return		;funcret
 37531   0172DE                     __end_of_DMA2_Initialize:
 37532                           	callstack 0
 37533                           
 37534 ;; *************** function _DMA1_Initialize *****************
 37535 ;; Defined at:
 37536 ;;		line 86 in file "mcc_generated_files/dma1.c"
 37537 ;; Parameters:    Size  Location     Type
 37538 ;;		None
 37539 ;; Auto vars:     Size  Location     Type
 37540 ;;		None
 37541 ;; Return value:  Size  Location     Type
 37542 ;;                  1  [STACK] void 
 37543 ;; Registers used:
 37544 ;;		wreg, status,2
 37545 ;; Tracked objects:
 37546 ;;		On entry : 3F/3B
 37547 ;;		On exit  : 3F/3B
 37548 ;;		Unchanged: 0/0
 37549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37554 ;;Total ram usage:        0 bytes
 37555 ;; Hardware stack levels used: 1
 37556 ;; Hardware stack levels required when called: 3
 37557 ;; This function calls:
 37558 ;;		Nothing
 37559 ;; This function is called by:
 37560 ;;		_SYSTEM_Initialize
 37561 ;; This function uses a reentrant model
 37562 ;;
 37563                           
 37564                           	psect	text77
 37565   016E96                     __ptext77:
 37566                           	callstack 0
 37567   016E96                     _DMA1_Initialize:
 37568                           	callstack 26
 37569                           
 37570                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 37571                           
 37572                           ; BSR set to: 59
 37573                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37574                           ;incstack = 0
 37575   016E96  0E00               	movlw	0
 37576   016E98  013B               	movlb	59	; () banked
 37577   016E9A  6FF9               	movwf	249,b	;volatile
 37578   016E9C  0E10               	movlw	16
 37579   016E9E  6FFA               	movwf	250,b	;volatile
 37580   016EA0  0E00               	movlw	0
 37581   016EA2  6FFB               	movwf	251,b	;volatile
 37582                           
 37583                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 37584   016EA4  0E3D               	movlw	61
 37585   016EA6  6FF1               	movwf	241,b	;volatile
 37586   016EA8  0E11               	movlw	17
 37587   016EAA  6FF0               	movwf	240,b	;volatile
 37588                           
 37589                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 37590   016EAC  0E03               	movlw	3
 37591   016EAE  6FFD               	movwf	253,b	;volatile
 37592                           
 37593                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 37594   016EB0  0E00               	movlw	0
 37595   016EB2  6FF8               	movwf	248,b	;volatile
 37596   016EB4  0E01               	movlw	1
 37597   016EB6  6FF7               	movwf	247,b	;volatile
 37598                           
 37599                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 37600   016EB8  0E00               	movlw	0
 37601   016EBA  6FEF               	movwf	239,b	;volatile
 37602   016EBC  0E01               	movlw	1
 37603   016EBE  6FEE               	movwf	238,b	;volatile
 37604                           
 37605                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 37606   016EC0  0E15               	movlw	21
 37607   016EC2  6FFF               	movwf	255,b	;volatile
 37608                           
 37609                           ; BSR set to: 59
 37610                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 37611   016EC4  6BFE               	clrf	254,b	;volatile
 37612                           
 37613                           ; BSR set to: 59
 37614                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 37615   016EC6  0139               	movlb	57	; () banked
 37616   016EC8  93A2               	bcf	162,1,b	;volatile
 37617                           
 37618                           ; BSR set to: 57
 37619                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 37620   016ECA  91A2               	bcf	162,0,b	;volatile
 37621                           
 37622                           ; BSR set to: 57
 37623                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 37624   016ECC  97A2               	bcf	162,3,b	;volatile
 37625                           
 37626                           ; BSR set to: 57
 37627                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 37628   016ECE  95A2               	bcf	162,2,b	;volatile
 37629                           
 37630                           ; BSR set to: 57
 37631                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 37632   016ED0  8392               	bsf	146,1,b	;volatile
 37633                           
 37634                           ; BSR set to: 57
 37635                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 37636   016ED2  8192               	bsf	146,0,b	;volatile
 37637                           
 37638                           ; BSR set to: 57
 37639                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 37640   016ED4  8792               	bsf	146,3,b	;volatile
 37641                           
 37642                           ; BSR set to: 57
 37643                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 37644   016ED6  8592               	bsf	146,2,b	;volatile
 37645                           
 37646                           ; BSR set to: 57
 37647                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 37648   016ED8  6BF1               	clrf	241,b	;volatile
 37649                           
 37650                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 37651   016EDA  0E01               	movlw	1
 37652   016EDC  6FF2               	movwf	242,b	;volatile
 37653                           
 37654                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 37655   016EDE  0E04               	movlw	4
 37656   016EE0  6FF3               	movwf	243,b	;volatile
 37657                           
 37658                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 37659   016EE2  0E02               	movlw	2
 37660   016EE4  6FF4               	movwf	244,b	;volatile
 37661                           
 37662                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 37663   016EE6  0E03               	movlw	3
 37664   016EE8  6FF7               	movwf	247,b	;volatile
 37665   016EEA  9ED2               	bcf	16338,7,c	;# 
 37666   016EEC  0139               	banksel	14831	;# 
 37667   016EEE  0E55               	movlw	85	;# 
 37668   016EF0  6FEF               	movwf	14831,b	;# 
 37669   016EF2  0EAA               	movlw	170	;# 
 37670   016EF4  6FEF               	movwf	14831,b	;# 
 37671   016EF6  81EF               	bsf	14831,0,b	;# 
 37672   016EF8  8ED2               	bsf	16338,7,c	;# 
 37673                           
 37674                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 37675   016EFA  013B               	movlb	59	; () banked
 37676   016EFC  6BFC               	clrf	252,b	;volatile
 37677                           
 37678                           ; BSR set to: 59
 37679                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 37680   016EFE  0012               	return		;funcret
 37681   016F00                     __end_of_DMA1_Initialize:
 37682                           	callstack 0
 37683                           
 37684 ;; *************** function _CLKREF_Initialize *****************
 37685 ;; Defined at:
 37686 ;;		line 58 in file "mcc_generated_files/clkref.c"
 37687 ;; Parameters:    Size  Location     Type
 37688 ;;		None
 37689 ;; Auto vars:     Size  Location     Type
 37690 ;;		None
 37691 ;; Return value:  Size  Location     Type
 37692 ;;                  1  [STACK] void 
 37693 ;; Registers used:
 37694 ;;		wreg, status,2
 37695 ;; Tracked objects:
 37696 ;;		On entry : 3F/3B
 37697 ;;		On exit  : 3F/3C
 37698 ;;		Unchanged: 0/0
 37699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37704 ;;Total ram usage:        0 bytes
 37705 ;; Hardware stack levels used: 1
 37706 ;; Hardware stack levels required when called: 3
 37707 ;; This function calls:
 37708 ;;		Nothing
 37709 ;; This function is called by:
 37710 ;;		_SYSTEM_Initialize
 37711 ;; This function uses a reentrant model
 37712 ;;
 37713                           
 37714                           	psect	text78
 37715   018090                     __ptext78:
 37716                           	callstack 0
 37717   018090                     _CLKREF_Initialize:
 37718                           	callstack 26
 37719                           
 37720                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 37721                           
 37722                           ; BSR set to: 59
 37723                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37724                           ;incstack = 0
 37725   018090  013C               	movlb	60	; () banked
 37726   018092  6BE6               	clrf	230,b	;volatile
 37727                           
 37728                           ; BSR set to: 60
 37729                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 37730   018094  0E94               	movlw	148
 37731   018096  6FE5               	movwf	229,b	;volatile
 37732                           
 37733                           ; BSR set to: 60
 37734                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 37735   018098  0012               	return		;funcret
 37736   01809A                     __end_of_CLKREF_Initialize:
 37737                           	callstack 0
 37738                           
 37739 ;; *************** function _CLC1_Initialize *****************
 37740 ;; Defined at:
 37741 ;;		line 58 in file "mcc_generated_files/clc1.c"
 37742 ;; Parameters:    Size  Location     Type
 37743 ;;		None
 37744 ;; Auto vars:     Size  Location     Type
 37745 ;;		None
 37746 ;; Return value:  Size  Location     Type
 37747 ;;                  1  [STACK] void 
 37748 ;; Registers used:
 37749 ;;		wreg, status,2
 37750 ;; Tracked objects:
 37751 ;;		On entry : 0/39
 37752 ;;		On exit  : 3F/3C
 37753 ;;		Unchanged: 0/0
 37754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37759 ;;Total ram usage:        0 bytes
 37760 ;; Hardware stack levels used: 1
 37761 ;; Hardware stack levels required when called: 3
 37762 ;; This function calls:
 37763 ;;		Nothing
 37764 ;; This function is called by:
 37765 ;;		_SYSTEM_Initialize
 37766 ;; This function uses a reentrant model
 37767 ;;
 37768                           
 37769                           	psect	text79
 37770   017E86                     __ptext79:
 37771                           	callstack 0
 37772   017E86                     _CLC1_Initialize:
 37773                           	callstack 26
 37774                           
 37775                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x00;
 37776                           
 37777                           ; BSR set to: 60
 37778                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37779                           ;incstack = 0
 37780   017E86  013C               	movlb	60	; () banked
 37781   017E88  6B75               	clrf	117,b	;volatile
 37782                           
 37783                           ; BSR set to: 60
 37784                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x04;
 37785   017E8A  0E04               	movlw	4
 37786   017E8C  6F76               	movwf	118,b	;volatile
 37787                           
 37788                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x04;
 37789   017E8E  0E04               	movlw	4
 37790   017E90  6F77               	movwf	119,b	;volatile
 37791                           
 37792                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x04;
 37793   017E92  0E04               	movlw	4
 37794   017E94  6F78               	movwf	120,b	;volatile
 37795                           
 37796                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x04;
 37797   017E96  0E04               	movlw	4
 37798   017E98  6F79               	movwf	121,b	;volatile
 37799                           
 37800                           ; BSR set to: 60
 37801                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x00;
 37802   017E9A  6B7A               	clrf	122,b	;volatile
 37803                           
 37804                           ; BSR set to: 60
 37805                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
 37806   017E9C  6B7B               	clrf	123,b	;volatile
 37807                           
 37808                           ; BSR set to: 60
 37809                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
 37810   017E9E  6B7C               	clrf	124,b	;volatile
 37811                           
 37812                           ; BSR set to: 60
 37813                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
 37814   017EA0  6B7D               	clrf	125,b	;volatile
 37815                           
 37816                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x81;
 37817   017EA2  0E81               	movlw	129
 37818   017EA4  6F74               	movwf	116,b	;volatile
 37819                           
 37820                           ; BSR set to: 60
 37821                           ; _CLC1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 37822   017EA6  0012               	return		;funcret
 37823   017EA8                     __end_of_CLC1_Initialize:
 37824                           	callstack 0
 37825                           
 37826 ;; *************** function _ADCC_Initialize *****************
 37827 ;; Defined at:
 37828 ;;		line 64 in file "mcc_generated_files/adcc.c"
 37829 ;; Parameters:    Size  Location     Type
 37830 ;;		None
 37831 ;; Auto vars:     Size  Location     Type
 37832 ;;		None
 37833 ;; Return value:  Size  Location     Type
 37834 ;;                  1  [STACK] void 
 37835 ;; Registers used:
 37836 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 37837 ;; Tracked objects:
 37838 ;;		On entry : 3F/39
 37839 ;;		On exit  : 0/0
 37840 ;;		Unchanged: 0/0
 37841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37846 ;;Total ram usage:        0 bytes
 37847 ;; Hardware stack levels used: 1
 37848 ;; Hardware stack levels required when called: 4
 37849 ;; This function calls:
 37850 ;;		_ADCC_SetADIInterruptHandler
 37851 ;; This function is called by:
 37852 ;;		_SYSTEM_Initialize
 37853 ;; This function uses a reentrant model
 37854 ;;
 37855                           
 37856                           	psect	text80
 37857   017476                     __ptext80:
 37858                           	callstack 0
 37859   017476                     _ADCC_Initialize:
 37860                           	callstack 25
 37861                           
 37862                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 37863                           
 37864                           ; BSR set to: 60
 37865                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37866                           ;incstack = 0
 37867   017476  013E               	movlb	62	; () banked
 37868   017478  6BDE               	clrf	222,b	;volatile
 37869                           
 37870                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 37871   01747A  6BDF               	clrf	223,b	;volatile
 37872                           
 37873                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 37874   01747C  6BE0               	clrf	224,b	;volatile
 37875                           
 37876                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 37877   01747E  6BE1               	clrf	225,b	;volatile
 37878                           
 37879                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 37880   017480  6BE4               	clrf	228,b	;volatile
 37881                           
 37882                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 37883   017482  6BE5               	clrf	229,b	;volatile
 37884                           
 37885                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 37886   017484  6BEA               	clrf	234,b	;volatile
 37887                           
 37888                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 37889   017486  6BEC               	clrf	236,b	;volatile
 37890                           
 37891                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 37892   017488  6BF1               	clrf	241,b	;volatile
 37893                           
 37894                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 37895   01748A  6BF3               	clrf	243,b	;volatile
 37896                           
 37897                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 37898   01748C  6BF4               	clrf	244,b	;volatile
 37899                           
 37900                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 37901   01748E  6BF5               	clrf	245,b	;volatile
 37902                           
 37903                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 37904   017490  6BF6               	clrf	246,b	;volatile
 37905                           
 37906                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 37907   017492  6BF7               	clrf	247,b	;volatile
 37908                           
 37909                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 37910   017494  6BF9               	clrf	249,b	;volatile
 37911                           
 37912                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 37913   017496  6BFA               	clrf	250,b	;volatile
 37914                           
 37915                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 37916   017498  6BFB               	clrf	251,b	;volatile
 37917                           
 37918                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 37919   01749A  6BFC               	clrf	252,b	;volatile
 37920                           
 37921                           ; BSR set to: 62
 37922                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 37923   01749C  0E02               	movlw	2
 37924   01749E  6FFD               	movwf	253,b	;volatile
 37925                           
 37926                           ; BSR set to: 62
 37927                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 37928   0174A0  6BFE               	clrf	254,b	;volatile
 37929                           
 37930                           ; BSR set to: 62
 37931                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 37932   0174A2  6BFF               	clrf	255,b	;volatile
 37933                           
 37934                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 37935   0174A4  0E94               	movlw	148
 37936   0174A6  6FF8               	movwf	248,b	;volatile
 37937                           
 37938                           ; BSR set to: 62
 37939                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 37940   0174A8  0139               	movlb	57	; () banked
 37941   0174AA  95A1               	bcf	161,2,b	;volatile
 37942                           
 37943                           ; BSR set to: 57
 37944                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 37945   0174AC  8591               	bsf	145,2,b	;volatile
 37946                           
 37947                           ; BSR set to: 57
 37948                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 37949   0174AE  0E06               	movlw	low _ADCC_DefaultInterruptHandler
 37950   0174B0  6EE6               	movwf	postinc1,c
 37951   0174B2  0E81               	movlw	high _ADCC_DefaultInterruptHandler
 37952   0174B4  6EE6               	movwf	postinc1,c
 37953   0174B6  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 37954   0174B8  6EE6               	movwf	postinc1,c
 37955   0174BA  EC87  F0BE         	call	_ADCC_SetADIInterruptHandler	;wreg free
 37956                           
 37957                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 37958   0174BE  0012               	return		;funcret
 37959   0174C0                     __end_of_ADCC_Initialize:
 37960                           	callstack 0
 37961                           
 37962 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 37963 ;; Defined at:
 37964 ;;		line 316 in file "mcc_generated_files/adcc.c"
 37965 ;; Parameters:    Size  Location     Type
 37966 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 37967 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 37968 ;; Auto vars:     Size  Location     Type
 37969 ;;		None
 37970 ;; Return value:  Size  Location     Type
 37971 ;;                  1  [STACK] void 
 37972 ;; Registers used:
 37973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 37974 ;; Tracked objects:
 37975 ;;		On entry : 3F/39
 37976 ;;		On exit  : 0/0
 37977 ;;		Unchanged: 0/0
 37978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37983 ;;Total ram usage:        0 bytes
 37984 ;; Hardware stack levels used: 1
 37985 ;; Hardware stack levels required when called: 3
 37986 ;; This function calls:
 37987 ;;		Nothing
 37988 ;; This function is called by:
 37989 ;;		_ADCC_Initialize
 37990 ;; This function uses a reentrant model
 37991 ;;
 37992                           
 37993                           	psect	text81
 37994   017D0E                     __ptext81:
 37995                           	callstack 0
 37996   017D0E                     _ADCC_SetADIInterruptHandler:
 37997                           	callstack 25
 37998                           
 37999                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 38000                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 38001                           
 38002                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38003                           ;incstack = 0
 38004   017D0E  50E1               	movf	fsr1l,w,c
 38005   017D10  0FFD               	addlw	-3
 38006   017D12  6ED9               	movwf	fsr2l,c
 38007   017D14  50E2               	movf	fsr1h,w,c
 38008   017D16  6EDA               	movwf	fsr2h,c
 38009   017D18  0EFF               	movlw	255
 38010   017D1A  22DA               	addwfc	fsr2h,f,c
 38011   017D1C  006F FF78  F0A4    	movff	postinc2,_ADCC_ADI_InterruptHandler
 38012   017D22  006F FF78  F0A5    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 38013   017D28  006F FF74  F0A6    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 38014                           
 38015                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 38016   017D2E  52E5               	movf	postdec1,f,c
 38017   017D30  52E5               	movf	postdec1,f,c
 38018   017D32  52E5               	movf	postdec1,f,c
 38019   017D34  0012               	return		;funcret
 38020   017D36                     __end_of_ADCC_SetADIInterruptHandler:
 38021                           	callstack 0
 38022                           
 38023 ;; *************** function _MyeaDogM_WriteStringAtPos *****************
 38024 ;; Defined at:
 38025 ;;		line 181 in file "mconfig.c"
 38026 ;; Parameters:    Size  Location     Type
 38027 ;;  r               1  [STACK] const unsigned char 
 38028 ;;  c               1  [STACK] const unsigned char 
 38029 ;;  strPtr          2  [STACK] PTR unsigned char 
 38030 ;;		 -> D$lcd(512), D@mconfig$F5156(514), V(387), 
 38031 ;; Auto vars:     Size  Location     Type
 38032 ;;		None
 38033 ;; Return value:  Size  Location     Type
 38034 ;;                  1  [STACK] void 
 38035 ;; Registers used:
 38036 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 38037 ;; Tracked objects:
 38038 ;;		On entry : 3F/1
 38039 ;;		On exit  : 0/0
 38040 ;;		Unchanged: 0/0
 38041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38046 ;;Total ram usage:        0 bytes
 38047 ;; Hardware stack levels used: 1
 38048 ;; Hardware stack levels required when called: 15
 38049 ;; This function calls:
 38050 ;;		_TimerDone
 38051 ;;		_eaDogM_WriteStringAtPos
 38052 ;;		_get_vterm_ptr
 38053 ;;		_sprintf
 38054 ;;		_update_lcd
 38055 ;;		_wait_lcd_done
 38056 ;; This function is called by:
 38057 ;;		_main
 38058 ;; This function uses a reentrant model
 38059 ;;
 38060                           
 38061                           	psect	text82
 38062   016052                     __ptext82:
 38063                           	callstack 0
 38064   016052                     _MyeaDogM_WriteStringAtPos:
 38065                           	callstack 15
 38066                           
 38067                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38068                           ;incstack = 0
 38069                           ;mconfig.c: 181: void MyeaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *
      +                          strPtr);mconfig.c: 182: {;mconfig.c: 184:  do { LATBbits.LATB5 = ~LATBbits.LATB5; } whil
      +                          e(0);
 38070   016052  AABB               	btfss	187,5,c	;volatile
 38071   016054  D002               	goto	u9440
 38072   016056  0E01               	movlw	1
 38073   016058  D001               	goto	u9446
 38074   01605A                     u9440:
 38075   01605A  0E00               	movlw	0
 38076   01605C                     u9446:
 38077   01605C  0AFF               	xorlw	255
 38078   01605E  6E2D               	movwf	(btemp+11)^0,c
 38079   016060  3A2D               	swapf	(btemp+11)^0,f,c
 38080   016062  462D               	rlncf	(btemp+11)^0,f,c
 38081   016064  50BB               	movf	187,w,c	;volatile
 38082   016066  182D               	xorwf	(btemp+11)^0,w,c
 38083   016068  0BDF               	andlw	-33
 38084   01606A  182D               	xorwf	(btemp+11)^0,w,c
 38085   01606C  6EBB               	movwf	187,c	;volatile
 38086                           
 38087                           ;mconfig.c: 185:  wait_lcd_done();
 38088   01606E  ECBC  F0BF         	call	_wait_lcd_done	;wreg free
 38089                           
 38090                           ; BSR set to: 0
 38091                           ;mconfig.c: 186:  if (V.response.info == DIS_STR) {
 38092   016072  EE23  F191         	lfsr	2,_V+375	;volatile
 38093   016076  50DF               	movf	indf2,w,c
 38094   016078  A4D8               	btfss	status,2,c
 38095   01607A  D010               	goto	l13217
 38096                           
 38097                           ; BSR set to: 0
 38098                           ;mconfig.c: 187:   eaDogM_WriteStringAtPos(r, c, strPtr);
 38099                           ;stkvar	_strPtr @ sp[(0)+-4]
 38100   01607C  0EFC               	movlw	-4
 38101   01607E  006F FF8F FFE6     	movff	plusw1,postinc1
 38102   016084  006F FF8F FFE6     	movff	plusw1,postinc1
 38103                           
 38104                           ;stkvar	_c @ sp[(-2)+-2]
 38105   01608A  0EFC               	movlw	-4
 38106   01608C  50E3               	movf	plusw1,w,c
 38107   01608E  6EE6               	movwf	postinc1,c
 38108                           
 38109                           ;stkvar	_r @ sp[(-3)+-1]
 38110   016090  0EFC               	movlw	-4
 38111   016092  50E3               	movf	plusw1,w,c
 38112   016094  6EE6               	movwf	postinc1,c
 38113   016096  ECBA  F0BC         	call	_eaDogM_WriteStringAtPos	;wreg free
 38114                           
 38115                           ;mconfig.c: 188:  } else {
 38116   01609A  D059               	goto	l13233
 38117   01609C                     l13217:
 38118                           
 38119                           ; BSR set to: 0
 38120                           ;mconfig.c: 189:   if (V.response.info == DIS_HELP) {
 38121   01609C  0063  F647  FFE8   	movff	_V+375,wreg	;volatile
 38122   0160A2  0A06               	xorlw	6
 38123   0160A4  A4D8               	btfss	status,2,c
 38124   0160A6  D01D               	goto	l13221
 38125                           
 38126                           ; BSR set to: 0
 38127                           ;mconfig.c: 190:    sprintf(get_vterm_ptr(2, 1), "%s", V.info);
 38128   0160A8  0E01               	movlw	low (_V+231)
 38129   0160AA  6EE6               	movwf	postinc1,c
 38130   0160AC  0E0D               	movlw	high (_V+231)
 38131   0160AE  6EE6               	movwf	postinc1,c
 38132   0160B0  0EFC               	movlw	low STR_26
 38133   0160B2  6EE6               	movwf	postinc1,c
 38134   0160B4  0EFF               	movlw	high STR_26
 38135   0160B6  6EE6               	movwf	postinc1,c
 38136   0160B8  0E01               	movlw	1
 38137   0160BA  6EE6               	movwf	postinc1,c
 38138   0160BC  0E02               	movlw	2
 38139   0160BE  6EE6               	movwf	postinc1,c
 38140   0160C0  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 38141   0160C4  0060  F08B  FFE6   	movff	btemp,postinc1
 38142   0160CA  0060  F08F  FFE6   	movff	btemp+1,postinc1
 38143   0160D0  0E06               	movlw	6
 38144   0160D2  6EE6               	movwf	postinc1,c
 38145   0160D4  EC32  F0B2         	call	_sprintf	;wreg free
 38146                           
 38147                           ;mconfig.c: 191:    update_lcd(1);
 38148   0160D8  0E01               	movlw	1
 38149   0160DA  6EE6               	movwf	postinc1,c
 38150   0160DC  ECAA  F0B2         	call	_update_lcd	;wreg free
 38151                           
 38152                           ;mconfig.c: 192:   } else {
 38153   0160E0  D026               	goto	l13227
 38154   0160E2                     l13221:
 38155                           
 38156                           ; BSR set to: 0
 38157                           ;mconfig.c: 193:    if ((V.response.info != DIS_STR)) {
 38158   0160E2  EE23  F191         	lfsr	2,_V+375	;volatile
 38159   0160E6  50DF               	movf	indf2,w,c
 38160   0160E8  B4D8               	btfsc	status,2,c
 38161   0160EA  D005               	goto	l13225
 38162                           
 38163                           ; BSR set to: 0
 38164                           ;mconfig.c: 194:     update_lcd(2);
 38165   0160EC  0E02               	movlw	2
 38166   0160EE  6EE6               	movwf	postinc1,c
 38167   0160F0  ECAA  F0B2         	call	_update_lcd	;wreg free
 38168                           
 38169                           ;mconfig.c: 195:    } else {
 38170   0160F4  D01C               	goto	l13227
 38171   0160F6                     l13225:
 38172                           
 38173                           ; BSR set to: 0
 38174                           ;mconfig.c: 196:     sprintf(get_vterm_ptr(2, 0), "%s", V.info);
 38175   0160F6  0E01               	movlw	low (_V+231)
 38176   0160F8  6EE6               	movwf	postinc1,c
 38177   0160FA  0E0D               	movlw	high (_V+231)
 38178   0160FC  6EE6               	movwf	postinc1,c
 38179   0160FE  0EFC               	movlw	low STR_26
 38180   016100  6EE6               	movwf	postinc1,c
 38181   016102  0EFF               	movlw	high STR_26
 38182   016104  6EE6               	movwf	postinc1,c
 38183   016106  0E00               	movlw	0
 38184   016108  6EE6               	movwf	postinc1,c
 38185   01610A  0E02               	movlw	2
 38186   01610C  6EE6               	movwf	postinc1,c
 38187   01610E  EC66  F0BC         	call	_get_vterm_ptr	;wreg free
 38188   016112  0060  F08B  FFE6   	movff	btemp,postinc1
 38189   016118  0060  F08F  FFE6   	movff	btemp+1,postinc1
 38190   01611E  0E06               	movlw	6
 38191   016120  6EE6               	movwf	postinc1,c
 38192   016122  EC32  F0B2         	call	_sprintf	;wreg free
 38193                           
 38194                           ;mconfig.c: 197:     update_lcd(0);
 38195   016126  0E00               	movlw	0
 38196   016128  6EE6               	movwf	postinc1,c
 38197   01612A  ECAA  F0B2         	call	_update_lcd	;wreg free
 38198   01612E                     l13227:
 38199                           
 38200                           ;mconfig.c: 201:   if ((V.response.info != DIS_STR) && TimerDone(TMR_INFO))
 38201   01612E  EE23  F191         	lfsr	2,_V+375	;volatile
 38202   016132  50DF               	movf	indf2,w,c
 38203   016134  B4D8               	btfsc	status,2,c
 38204   016136  D00B               	goto	l13233
 38205   016138  0E07               	movlw	7
 38206   01613A  6EE6               	movwf	postinc1,c
 38207   01613C  ECD7  F0BE         	call	_TimerDone	;wreg free
 38208   016140  5022               	movf	btemp^0,w,c
 38209   016142  B4D8               	btfsc	status,2,c
 38210   016144  D004               	goto	l13233
 38211                           
 38212                           ;mconfig.c: 202:    V.response.info = DIS_STR;
 38213   016146  0E00               	movlw	0
 38214   016148  006F FFA0  FD91    	movff	wreg,_V+375	;volatile
 38215   01614E                     l13233:
 38216                           
 38217                           ;mconfig.c: 208:  if (D.last_info == DIS_HELP && V.response.info != DIS_HELP) {
 38218   01614E  0062  F407  FFE8   	movff	_D@mconfig$F5156+513,wreg
 38219   016154  0A06               	xorlw	6
 38220                           
 38221                           ;mconfig.c: 212:  D.last_info = V.response.info;
 38222                           
 38223                           ;mconfig.c: 210:  }
 38224   016156  0063  F644  F901   	movff	_V+375,_D@mconfig$F5156+513	;volatile
 38225                           
 38226                           ; _MyeaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 4, argsize = 4, vargsize = 0
 38227   01615C  52E5               	movf	postdec1,f,c
 38228   01615E  52E5               	movf	postdec1,f,c
 38229   016160  52E5               	movf	postdec1,f,c
 38230   016162  52E5               	movf	postdec1,f,c
 38231   016164  0012               	return		;funcret
 38232   016166                     __end_of_MyeaDogM_WriteStringAtPos:
 38233                           	callstack 0
 38234                           
 38235 ;; *************** function _update_lcd *****************
 38236 ;; Defined at:
 38237 ;;		line 82 in file "mconfig.c"
 38238 ;; Parameters:    Size  Location     Type
 38239 ;;  vterm           1  [STACK] unsigned char 
 38240 ;; Auto vars:     Size  Location     Type
 38241 ;;		None
 38242 ;; Return value:  Size  Location     Type
 38243 ;;                  1  [STACK] unsigned char 
 38244 ;; Registers used:
 38245 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 38246 ;; Tracked objects:
 38247 ;;		On entry : 0/1
 38248 ;;		On exit  : 0/0
 38249 ;;		Unchanged: 0/0
 38250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38255 ;;Total ram usage:        0 bytes
 38256 ;; Hardware stack levels used: 1
 38257 ;; Hardware stack levels required when called: 14
 38258 ;; This function calls:
 38259 ;;		_eaDogM_WriteStringAtPos
 38260 ;;		_wait_lcd_done
 38261 ;; This function is called by:
 38262 ;;		_main
 38263 ;;		_check_help
 38264 ;;		_MyeaDogM_WriteStringAtPos
 38265 ;; This function uses a reentrant model
 38266 ;;
 38267                           
 38268                           	psect	text83
 38269   016554                     __ptext83:
 38270                           	callstack 0
 38271   016554                     _update_lcd:
 38272                           	callstack 16
 38273                           
 38274                           ;mconfig.c: 82: uint8_t update_lcd(uint8_t vterm);mconfig.c: 83: {;mconfig.c: 84:  vterm
      +                           = vterm & 0x03;
 38275                           ;stkvar	_vterm @ sp[(0)+-1]
 38276                           
 38277                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38278                           ;incstack = 0
 38279   016554  0EFF               	movlw	-1
 38280   016556  006F FF8C  F022    	movff	plusw1,btemp
 38281   01655C  0E03               	movlw	3
 38282   01655E  1622               	andwf	btemp^0,f,c
 38283   016560  0EFF               	movlw	-1
 38284   016562  0060  F08B  FFE3   	movff	btemp,plusw1
 38285                           
 38286                           ;mconfig.c: 86:  if (D.vterm >= 1 && vterm == 0)
 38287   016568  EE22  F100         	lfsr	2,_D@mconfig$F5156+512
 38288   01656C  A0DF               	btfss	indf2,0,c
 38289   01656E  D004               	goto	l12439
 38290                           
 38291                           ;stkvar	_vterm @ sp[(0)+-1]
 38292   016570  0EFF               	movlw	-1
 38293   016572  50E3               	movf	plusw1,w,c
 38294   016574  B4D8               	btfsc	status,2,c
 38295   016576  D063               	goto	l2389
 38296   016578                     l12439:
 38297                           
 38298                           ;mconfig.c: 89:  D.lcd[vterm][0][16] = 0;
 38299                           ;stkvar	_vterm @ sp[(0)+-1]
 38300   016578  0EFF               	movlw	-1
 38301   01657A  50E3               	movf	plusw1,w,c
 38302   01657C  0D80               	mullw	128
 38303   01657E  0E10               	movlw	low (_D@mconfig$F5156+16)
 38304   016580  24F3               	addwf	243,w,c
 38305   016582  6ED9               	movwf	fsr2l,c
 38306   016584  0E07               	movlw	high (_D@mconfig$F5156+16)
 38307   016586  20F4               	addwfc	prodh,w,c
 38308   016588  6EDA               	movwf	fsr2h,c
 38309   01658A  6ADF               	clrf	indf2,c
 38310                           
 38311                           ;mconfig.c: 90:  D.lcd[vterm][1][16] = 0;
 38312                           ;stkvar	_vterm @ sp[(0)+-1]
 38313   01658C  0EFF               	movlw	-1
 38314   01658E  50E3               	movf	plusw1,w,c
 38315   016590  0D80               	mullw	128
 38316   016592  0E30               	movlw	low (_D@mconfig$F5156+48)
 38317   016594  24F3               	addwf	243,w,c
 38318   016596  6ED9               	movwf	fsr2l,c
 38319   016598  0E07               	movlw	high (_D@mconfig$F5156+48)
 38320   01659A  20F4               	addwfc	prodh,w,c
 38321   01659C  6EDA               	movwf	fsr2h,c
 38322   01659E  6ADF               	clrf	indf2,c
 38323                           
 38324                           ;mconfig.c: 91:  D.lcd[vterm][2][16] = 0;
 38325                           ;stkvar	_vterm @ sp[(0)+-1]
 38326   0165A0  0EFF               	movlw	-1
 38327   0165A2  50E3               	movf	plusw1,w,c
 38328   0165A4  0D80               	mullw	128
 38329   0165A6  0E50               	movlw	low (_D@mconfig$F5156+80)
 38330   0165A8  24F3               	addwf	243,w,c
 38331   0165AA  6ED9               	movwf	fsr2l,c
 38332   0165AC  0E07               	movlw	high (_D@mconfig$F5156+80)
 38333   0165AE  20F4               	addwfc	prodh,w,c
 38334   0165B0  6EDA               	movwf	fsr2h,c
 38335   0165B2  6ADF               	clrf	indf2,c
 38336                           
 38337                           ;mconfig.c: 92:  wait_lcd_done();
 38338   0165B4  ECBC  F0BF         	call	_wait_lcd_done	;wreg free
 38339                           
 38340                           ; BSR set to: 0
 38341                           ;mconfig.c: 93:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 38342                           ;stkvar	_vterm @ sp[(0)+-1]
 38343   0165B8  0EFF               	movlw	-1
 38344   0165BA  50E3               	movf	plusw1,w,c
 38345   0165BC  0D80               	mullw	128
 38346   0165BE  0E00               	movlw	low _D@mconfig$F5156
 38347   0165C0  24F3               	addwf	243,w,c
 38348   0165C2  6E2C               	movwf	(btemp+10)^0,c
 38349   0165C4  0E07               	movlw	high _D@mconfig$F5156
 38350   0165C6  20F4               	addwfc	prodh,w,c
 38351   0165C8  6E2D               	movwf	(btemp+11)^0,c
 38352   0165CA  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 38353   0165D0  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 38354   0165D6  0E00               	movlw	0
 38355   0165D8  6EE6               	movwf	postinc1,c
 38356   0165DA  0E00               	movlw	0
 38357   0165DC  6EE6               	movwf	postinc1,c
 38358   0165DE  ECBA  F0BC         	call	_eaDogM_WriteStringAtPos	;wreg free
 38359                           
 38360                           ; BSR set to: 59
 38361                           ;mconfig.c: 94:  wait_lcd_done();
 38362   0165E2  ECBC  F0BF         	call	_wait_lcd_done	;wreg free
 38363                           
 38364                           ; BSR set to: 0
 38365                           ;mconfig.c: 95:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 38366                           ;stkvar	_vterm @ sp[(0)+-1]
 38367   0165E6  0EFF               	movlw	-1
 38368   0165E8  50E3               	movf	plusw1,w,c
 38369   0165EA  0D80               	mullw	128
 38370   0165EC  0E20               	movlw	low (_D@mconfig$F5156+32)
 38371   0165EE  24F3               	addwf	243,w,c
 38372   0165F0  6E2C               	movwf	(btemp+10)^0,c
 38373   0165F2  0E07               	movlw	high (_D@mconfig$F5156+32)
 38374   0165F4  20F4               	addwfc	prodh,w,c
 38375   0165F6  6E2D               	movwf	(btemp+11)^0,c
 38376   0165F8  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 38377   0165FE  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 38378   016604  0E00               	movlw	0
 38379   016606  6EE6               	movwf	postinc1,c
 38380   016608  0E01               	movlw	1
 38381   01660A  6EE6               	movwf	postinc1,c
 38382   01660C  ECBA  F0BC         	call	_eaDogM_WriteStringAtPos	;wreg free
 38383                           
 38384                           ; BSR set to: 59
 38385                           ;mconfig.c: 96:  wait_lcd_done();
 38386   016610  ECBC  F0BF         	call	_wait_lcd_done	;wreg free
 38387                           
 38388                           ; BSR set to: 0
 38389                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 38390                           ;stkvar	_vterm @ sp[(0)+-1]
 38391   016614  0EFF               	movlw	-1
 38392   016616  50E3               	movf	plusw1,w,c
 38393   016618  0D80               	mullw	128
 38394   01661A  0E40               	movlw	low (_D@mconfig$F5156+64)
 38395   01661C  24F3               	addwf	243,w,c
 38396   01661E  6E2C               	movwf	(btemp+10)^0,c
 38397   016620  0E07               	movlw	high (_D@mconfig$F5156+64)
 38398   016622  20F4               	addwfc	prodh,w,c
 38399   016624  6E2D               	movwf	(btemp+11)^0,c
 38400   016626  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 38401   01662C  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 38402   016632  0E00               	movlw	0
 38403   016634  6EE6               	movwf	postinc1,c
 38404   016636  0E02               	movlw	2
 38405   016638  6EE6               	movwf	postinc1,c
 38406   01663A  ECBA  F0BC         	call	_eaDogM_WriteStringAtPos	;wreg free
 38407   01663E                     l2389:
 38408                           
 38409                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 38410   01663E  52E5               	movf	postdec1,f,c
 38411   016640  0012               	return		;funcret
 38412   016642                     __end_of_update_lcd:
 38413                           	callstack 0
 38414                           
 38415 ;; *************** function _eaDogM_WriteStringAtPos *****************
 38416 ;; Defined at:
 38417 ;;		line 252 in file "eadog.c"
 38418 ;; Parameters:    Size  Location     Type
 38419 ;;  r               1  [STACK] const unsigned char 
 38420 ;;  c               1  [STACK] const unsigned char 
 38421 ;;  strPtr          2  [STACK] PTR unsigned char 
 38422 ;;		 -> D$lcd(512), D@mconfig$F5156(514), V(387), 
 38423 ;; Auto vars:     Size  Location     Type
 38424 ;;		None
 38425 ;; Return value:  Size  Location     Type
 38426 ;;                  1  [STACK] void 
 38427 ;; Registers used:
 38428 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 38429 ;; Tracked objects:
 38430 ;;		On entry : 3F/0
 38431 ;;		On exit  : 3F/3B
 38432 ;;		Unchanged: 0/0
 38433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38438 ;;Total ram usage:        0 bytes
 38439 ;; Hardware stack levels used: 1
 38440 ;; Hardware stack levels required when called: 13
 38441 ;; This function calls:
 38442 ;;		_eaDogM_WriteString
 38443 ;;		_send_lcd_cmd_dma
 38444 ;; This function is called by:
 38445 ;;		_update_lcd
 38446 ;;		_vterm_dump
 38447 ;;		_MyeaDogM_WriteStringAtPos
 38448 ;; This function uses a reentrant model
 38449 ;;
 38450                           
 38451                           	psect	text84
 38452   017974                     __ptext84:
 38453                           	callstack 0
 38454   017974                     _eaDogM_WriteStringAtPos:
 38455                           	callstack 16
 38456                           
 38457                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
 38458                           ;stkvar	_c @ sp[(0)+-2]
 38459                           
 38460                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38461                           ;incstack = 0
 38462   017974  0EFE               	movlw	-2
 38463   017976  006F FF8C  F02D    	movff	plusw1,btemp+11
 38464                           
 38465                           ;stkvar	_r @ sp[(0)+-1]
 38466   01797C  0EFF               	movlw	-1
 38467   01797E  50E3               	movf	plusw1,w,c
 38468   017980  0D10               	mullw	16
 38469   017982  50F3               	movf	243,w,c
 38470   017984  242D               	addwf	(btemp+11)^0,w,c
 38471   017986  0F80               	addlw	128
 38472   017988  6EE6               	movwf	postinc1,c
 38473   01798A  EC9C  F0B9         	call	_send_lcd_cmd_dma	;wreg free
 38474                           
 38475                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
 38476                           ;stkvar	_strPtr @ sp[(0)+-4]
 38477   01798E  0EFC               	movlw	-4
 38478   017990  006F FF8F FFE6     	movff	plusw1,postinc1
 38479   017996  006F FF8F FFE6     	movff	plusw1,postinc1
 38480   01799C  ECD4  F0B5         	call	_eaDogM_WriteString	;wreg free
 38481                           
 38482                           ; BSR set to: 59
 38483                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 38484   0179A0  52E5               	movf	postdec1,f,c
 38485   0179A2  52E5               	movf	postdec1,f,c
 38486   0179A4  52E5               	movf	postdec1,f,c
 38487   0179A6  52E5               	movf	postdec1,f,c
 38488   0179A8  0012               	return		;funcret
 38489   0179AA                     __end_of_eaDogM_WriteStringAtPos:
 38490                           	callstack 0
 38491                           
 38492 ;; *************** function _send_lcd_cmd_dma *****************
 38493 ;; Defined at:
 38494 ;;		line 205 in file "eadog.c"
 38495 ;; Parameters:    Size  Location     Type
 38496 ;;  strPtr          1  [STACK] unsigned char 
 38497 ;; Auto vars:     Size  Location     Type
 38498 ;;		None
 38499 ;; Return value:  Size  Location     Type
 38500 ;;                  1  [STACK] void 
 38501 ;; Registers used:
 38502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 38503 ;; Tracked objects:
 38504 ;;		On entry : 0/3D
 38505 ;;		On exit  : 3F/0
 38506 ;;		Unchanged: 0/0
 38507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38512 ;;Total ram usage:        0 bytes
 38513 ;; Hardware stack levels used: 1
 38514 ;; Hardware stack levels required when called: 12
 38515 ;; This function calls:
 38516 ;;		_printf
 38517 ;;		_ringBufS_flush
 38518 ;;		_start_lcd
 38519 ;;		_wait_lcd_done
 38520 ;;		_wait_lcd_set
 38521 ;; This function is called by:
 38522 ;;		_eaDogM_WriteCommand
 38523 ;;		_eaDogM_WriteStringAtPos
 38524 ;; This function uses a reentrant model
 38525 ;;
 38526                           
 38527                           	psect	text85
 38528   017338                     __ptext85:
 38529                           	callstack 0
 38530   017338                     _send_lcd_cmd_dma:
 38531                           	callstack 16
 38532                           
 38533                           ; BSR set to: 59
 38534                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38535                           ;incstack = 0
 38536                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 207:  do {
      +                           LATEbits.LATE2 = 1; } while(0);
 38537   017338  84BE               	bsf	190,2,c	;volatile
 38538                           
 38539                           ;eadog.c: 208:  wait_lcd_set();
 38540   01733A  EC73  F0C0         	call	_wait_lcd_set	;wreg free
 38541                           
 38542                           ; BSR set to: 0
 38543                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
 38544   01733E  0E00               	movlw	0
 38545   017340  6EE6               	movwf	postinc1,c
 38546   017342  0060  F237  FFE6   	movff	_spi_link+6,postinc1
 38547   017348  0060  F23B  FFE6   	movff	_spi_link+7,postinc1
 38548   01734E  ECC3  F0B6         	call	_ringBufS_flush	;wreg free
 38549   017352  92BC               	bcf	188,1,c	;volatile
 38550   017354  94BC               	bcf	188,2,c	;volatile
 38551                           
 38552                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
 38553   017356  013B               	movlb	59	; () banked
 38554   017358  9FFC               	bcf	252,7,b	;volatile
 38555                           
 38556                           ; BSR set to: 59
 38557                           ;eadog.c: 214:  DMA1SSZ = 1;
 38558   01735A  0E00               	movlw	0
 38559   01735C  6FF8               	movwf	248,b	;volatile
 38560   01735E  0E01               	movlw	1
 38561   017360  6FF7               	movwf	247,b	;volatile
 38562                           
 38563                           ; BSR set to: 59
 38564                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
 38565   017362  8FFC               	bsf	252,7,b	;volatile
 38566                           
 38567                           ; BSR set to: 59
 38568                           ;eadog.c: 216:  printf("%c", strPtr);
 38569                           ;stkvar	_strPtr @ sp[(0)+-1]
 38570   017364  0EFF               	movlw	-1
 38571   017366  50E3               	movf	plusw1,w,c
 38572   017368  6EE6               	movwf	postinc1,c
 38573   01736A  0E00               	movlw	0
 38574   01736C  6EE6               	movwf	postinc1,c
 38575   01736E  0EF9               	movlw	low STR_27
 38576   017370  6EE6               	movwf	postinc1,c
 38577   017372  0EFF               	movlw	high STR_27
 38578   017374  6EE6               	movwf	postinc1,c
 38579   017376  0E04               	movlw	4
 38580   017378  6EE6               	movwf	postinc1,c
 38581   01737A  ECB3  F0B8         	call	_printf	;wreg free
 38582                           
 38583                           ; BSR set to: 1
 38584                           ;eadog.c: 217:  start_lcd();
 38585   01737E  EC76  F0C0         	call	_start_lcd	;wreg free
 38586                           
 38587                           ; BSR set to: 59
 38588                           ;eadog.c: 218:  wait_lcd_done();
 38589   017382  ECBC  F0BF         	call	_wait_lcd_done	;wreg free
 38590                           
 38591                           ; BSR set to: 0
 38592   017386  82BC               	bsf	188,1,c	;volatile
 38593                           
 38594                           ; BSR set to: 0
 38595                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 38596   017388  52E5               	movf	postdec1,f,c
 38597   01738A  0012               	return		;funcret
 38598   01738C                     __end_of_send_lcd_cmd_dma:
 38599                           	callstack 0
 38600                           
 38601 ;; *************** function _wait_lcd_done *****************
 38602 ;; Defined at:
 38603 ;;		line 141 in file "eadog.c"
 38604 ;; Parameters:    Size  Location     Type
 38605 ;;		None
 38606 ;; Auto vars:     Size  Location     Type
 38607 ;;		None
 38608 ;; Return value:  Size  Location     Type
 38609 ;;                  1  [STACK] void 
 38610 ;; Registers used:
 38611 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 38612 ;; Tracked objects:
 38613 ;;		On entry : 0/1
 38614 ;;		On exit  : 3F/0
 38615 ;;		Unchanged: 0/0
 38616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38621 ;;Total ram usage:        0 bytes
 38622 ;; Hardware stack levels used: 1
 38623 ;; Hardware stack levels required when called: 4
 38624 ;; This function calls:
 38625 ;;		_wdtdelay
 38626 ;; This function is called by:
 38627 ;;		_send_lcd_cmd_dma
 38628 ;;		_update_lcd
 38629 ;;		_vterm_dump
 38630 ;;		_MyeaDogM_WriteStringAtPos
 38631 ;; This function uses a reentrant model
 38632 ;;
 38633                           
 38634                           	psect	text86
 38635   017F78                     __ptext86:
 38636                           	callstack 0
 38637   017F78                     _wait_lcd_done:
 38638                           	callstack 25
 38639                           
 38640                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
 38641                           
 38642                           ; BSR set to: 0
 38643                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38644                           ;incstack = 0
 38645   017F78  0100               	movlb	0	; () banked
 38646   017F7A  B787               	btfsc	_spi_link& (0+255),3,b	;volatile
 38647   017F7C  D7FD               	goto	__ptext86
 38648                           
 38649                           ; BSR set to: 0
 38650                           ;eadog.c: 144:  wdtdelay(50);
 38651   017F7E  0E32               	movlw	50
 38652   017F80  6EE6               	movwf	postinc1,c
 38653   017F82  0E00               	movlw	0
 38654   017F84  6EE6               	movwf	postinc1,c
 38655   017F86  0E00               	movlw	0
 38656   017F88  6EE6               	movwf	postinc1,c
 38657   017F8A  0E00               	movlw	0
 38658   017F8C  6EE6               	movwf	postinc1,c
 38659   017F8E  EC6F  F0B9         	call	_wdtdelay	;wreg free
 38660                           
 38661                           ; BSR set to: 0
 38662                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 38663   017F92  0012               	return		;funcret
 38664   017F94                     __end_of_wait_lcd_done:
 38665                           	callstack 0
 38666                           
 38667 ;; *************** function _wdtdelay *****************
 38668 ;; Defined at:
 38669 ;;		line 22 in file "eadog.c"
 38670 ;; Parameters:    Size  Location     Type
 38671 ;;  delay           4  [STACK] const unsigned long 
 38672 ;; Auto vars:     Size  Location     Type
 38673 ;;		None
 38674 ;; Return value:  Size  Location     Type
 38675 ;;                  1  [STACK] void 
 38676 ;; Registers used:
 38677 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 38678 ;; Tracked objects:
 38679 ;;		On entry : 0/0
 38680 ;;		On exit  : 3F/0
 38681 ;;		Unchanged: 0/0
 38682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38687 ;;Total ram usage:        0 bytes
 38688 ;; Hardware stack levels used: 1
 38689 ;; Hardware stack levels required when called: 3
 38690 ;; This function calls:
 38691 ;;		Nothing
 38692 ;; This function is called by:
 38693 ;;		_init_display
 38694 ;;		_send_lcd_cmd
 38695 ;;		_send_lcd_cmd_long
 38696 ;;		_wait_lcd_done
 38697 ;; This function uses a reentrant model
 38698 ;;
 38699                           
 38700                           	psect	text87
 38701   0172DE                     __ptext87:
 38702                           	callstack 0
 38703   0172DE                     _wdtdelay:
 38704                           	callstack 25
 38705                           
 38706                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
 38707                           
 38708                           ; BSR set to: 0
 38709                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38710                           ;incstack = 0
 38711   0172DE  0100               	movlb	0	; () banked
 38712   0172E0  6B9A               	clrf	wdtdelay@dcount& (0+255),b
 38713   0172E2  6B9B               	clrf	(wdtdelay@dcount+1)& (0+255),b
 38714   0172E4  6B9C               	clrf	(wdtdelay@dcount+2)& (0+255),b
 38715   0172E6  6B9D               	clrf	(wdtdelay@dcount+3)& (0+255),b
 38716   0172E8                     l1553:
 38717                           
 38718                           ; BSR set to: 0
 38719                           ;eadog.c: 27:   __nop();
 38720   0172E8  0000               	nop	
 38721   0172EA  0004               	clrwdt		;# 
 38722                           
 38723                           ;eadog.c: 29:  };
 38724   0172EC  0E01               	movlw	1
 38725   0172EE  0100               	movlb	0	; () banked
 38726   0172F0  279A               	addwf	wdtdelay@dcount& (0+255),f,b
 38727   0172F2  0E00               	movlw	0
 38728   0172F4  239B               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 38729   0172F6  239C               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 38730   0172F8  239D               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 38731                           
 38732                           ; BSR set to: 0
 38733                           ;stkvar	_delay @ sp[(0)+-4]
 38734   0172FA  0EFC               	movlw	-4
 38735   0172FC  006F FF8C  F022    	movff	plusw1,btemp
 38736   017302  519A               	movf	wdtdelay@dcount& (0+255),w,b
 38737   017304  5C22               	subwf	btemp^0,w,c
 38738   017306  0EFD               	movlw	-3
 38739   017308  006F FF8C  F022    	movff	plusw1,btemp
 38740   01730E  519B               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 38741   017310  5822               	subwfb	btemp^0,w,c
 38742   017312  0EFE               	movlw	-2
 38743   017314  006F FF8C  F022    	movff	plusw1,btemp
 38744   01731A  519C               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 38745   01731C  5822               	subwfb	btemp^0,w,c
 38746   01731E  0EFF               	movlw	-1
 38747   017320  006F FF8C  F022    	movff	plusw1,btemp
 38748   017326  519D               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 38749   017328  5822               	subwfb	btemp^0,w,c
 38750   01732A  B0D8               	btfsc	status,0,c
 38751   01732C  D7DD               	goto	l1553
 38752                           
 38753                           ; BSR set to: 0
 38754                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 38755   01732E  52E5               	movf	postdec1,f,c
 38756   017330  52E5               	movf	postdec1,f,c
 38757   017332  52E5               	movf	postdec1,f,c
 38758   017334  52E5               	movf	postdec1,f,c
 38759   017336  0012               	return		;funcret
 38760   017338                     __end_of_wdtdelay:
 38761                           	callstack 0
 38762                           
 38763 ;; *************** function _eaDogM_WriteString *****************
 38764 ;; Defined at:
 38765 ;;		line 184 in file "eadog.c"
 38766 ;; Parameters:    Size  Location     Type
 38767 ;;  strPtr          2  [STACK] PTR unsigned char 
 38768 ;;		 -> D$lcd(512), D@mconfig$F5156(514), V(387), 
 38769 ;; Auto vars:     Size  Location     Type
 38770 ;;		None
 38771 ;; Return value:  Size  Location     Type
 38772 ;;                  1  [STACK] void 
 38773 ;; Registers used:
 38774 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 38775 ;; Tracked objects:
 38776 ;;		On entry : 3F/0
 38777 ;;		On exit  : 3F/3B
 38778 ;;		Unchanged: 0/0
 38779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38784 ;;Total ram usage:        0 bytes
 38785 ;; Hardware stack levels used: 1
 38786 ;; Hardware stack levels required when called: 12
 38787 ;; This function calls:
 38788 ;;		_printf
 38789 ;;		_ringBufS_flush
 38790 ;;		_start_lcd
 38791 ;;		_strlen
 38792 ;;		_wait_lcd_set
 38793 ;; This function is called by:
 38794 ;;		_eaDogM_WriteStringAtPos
 38795 ;; This function uses a reentrant model
 38796 ;;
 38797                           
 38798                           	psect	text88
 38799   016BA8                     __ptext88:
 38800                           	callstack 0
 38801   016BA8                     _eaDogM_WriteString:
 38802                           	callstack 16
 38803                           
 38804                           ; BSR set to: 0
 38805                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38806                           ;incstack = 0
 38807                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 186:  do {
      +                           LATEbits.LATE2 = 1; } while(0);
 38808   016BA8  84BE               	bsf	190,2,c	;volatile
 38809                           
 38810                           ;eadog.c: 187:  wait_lcd_set();
 38811   016BAA  EC73  F0C0         	call	_wait_lcd_set	;wreg free
 38812                           
 38813                           ; BSR set to: 0
 38814                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
 38815   016BAE  0E00               	movlw	0
 38816   016BB0  6EE6               	movwf	postinc1,c
 38817   016BB2  0060  F237  FFE6   	movff	_spi_link+6,postinc1
 38818   016BB8  0060  F23B  FFE6   	movff	_spi_link+7,postinc1
 38819   016BBE  ECC3  F0B6         	call	_ringBufS_flush	;wreg free
 38820   016BC2  94BC               	bcf	188,2,c	;volatile
 38821                           
 38822                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 38823                           ;stkvar	_strPtr @ sp[(0)+-2]
 38824   016BC4  0EFE               	movlw	-2
 38825   016BC6  006F FF8F FFE6     	movff	plusw1,postinc1
 38826   016BCC  006F FF8F FFE6     	movff	plusw1,postinc1
 38827   016BD2  EC09  F0B7         	call	_strlen	;wreg free
 38828   016BD6  5023               	movf	(btemp+1)^0,w,c
 38829   016BD8  E104               	bnz	u8780
 38830   016BDA  0E41               	movlw	65
 38831   016BDC  5C22               	subwf	btemp^0,w,c
 38832   016BDE  A0D8               	btfss	status,0,c
 38833   016BE0  D00F               	goto	l12191
 38834   016BE2                     u8780:
 38835                           
 38836                           ;stkvar	_strPtr @ sp[(0)+-2]
 38837   016BE2  0EFE               	movlw	-2
 38838   016BE4  006F FF8C  F02C    	movff	plusw1,btemp+10
 38839   016BEA  0EFF               	movlw	-1
 38840   016BEC  006F FF8C  F02D    	movff	plusw1,btemp+11
 38841   016BF2  0E40               	movlw	64
 38842   016BF4  242C               	addwf	(btemp+10)^0,w,c
 38843   016BF6  6ED9               	movwf	fsr2l,c
 38844   016BF8  0E00               	movlw	0
 38845   016BFA  202D               	addwfc	(btemp+11)^0,w,c
 38846   016BFC  6EDA               	movwf	fsr2h,c
 38847   016BFE  6ADF               	clrf	indf2,c
 38848   016C00                     l12191:
 38849                           
 38850                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
 38851   016C00  013B               	movlb	59	; () banked
 38852   016C02  9FFC               	bcf	252,7,b	;volatile
 38853                           
 38854                           ; BSR set to: 59
 38855                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
 38856                           ;stkvar	_strPtr @ sp[(0)+-2]
 38857   016C04  0EFE               	movlw	-2
 38858   016C06  006F FF8F FFE6     	movff	plusw1,postinc1
 38859   016C0C  006F FF8F FFE6     	movff	plusw1,postinc1
 38860   016C12  EC09  F0B7         	call	_strlen	;wreg free
 38861   016C16  0060  F08B  FBF7   	movff	btemp,15351	;volatile
 38862   016C1C  0060  F08F  FBF8   	movff	btemp+1,15352	;volatile
 38863                           
 38864                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
 38865   016C22  013B               	movlb	59	; () banked
 38866   016C24  8FFC               	bsf	252,7,b	;volatile
 38867                           
 38868                           ; BSR set to: 59
 38869                           ;eadog.c: 195:  printf("%s", strPtr);
 38870                           ;stkvar	_strPtr @ sp[(0)+-2]
 38871   016C26  0EFE               	movlw	-2
 38872   016C28  006F FF8F FFE6     	movff	plusw1,postinc1
 38873   016C2E  006F FF8F FFE6     	movff	plusw1,postinc1
 38874   016C34  0EFC               	movlw	low STR_26
 38875   016C36  6EE6               	movwf	postinc1,c
 38876   016C38  0EFF               	movlw	high STR_26
 38877   016C3A  6EE6               	movwf	postinc1,c
 38878   016C3C  0E04               	movlw	4
 38879   016C3E  6EE6               	movwf	postinc1,c
 38880   016C40  ECB3  F0B8         	call	_printf	;wreg free
 38881                           
 38882                           ; BSR set to: 1
 38883                           ;eadog.c: 196:  start_lcd();
 38884   016C44  EC76  F0C0         	call	_start_lcd	;wreg free
 38885                           
 38886                           ; BSR set to: 59
 38887                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 38888   016C48  52E5               	movf	postdec1,f,c
 38889   016C4A  52E5               	movf	postdec1,f,c
 38890   016C4C  0012               	return		;funcret
 38891   016C4E                     __end_of_eaDogM_WriteString:
 38892                           	callstack 0
 38893                           
 38894 ;; *************** function _wait_lcd_set *****************
 38895 ;; Defined at:
 38896 ;;		line 131 in file "eadog.c"
 38897 ;; Parameters:    Size  Location     Type
 38898 ;;		None
 38899 ;; Auto vars:     Size  Location     Type
 38900 ;;		None
 38901 ;; Return value:  Size  Location     Type
 38902 ;;                  1  [STACK] void 
 38903 ;; Registers used:
 38904 ;;		None
 38905 ;; Tracked objects:
 38906 ;;		On entry : 0/3D
 38907 ;;		On exit  : 3F/0
 38908 ;;		Unchanged: 0/0
 38909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38914 ;;Total ram usage:        0 bytes
 38915 ;; Hardware stack levels used: 1
 38916 ;; Hardware stack levels required when called: 3
 38917 ;; This function calls:
 38918 ;;		Nothing
 38919 ;; This function is called by:
 38920 ;;		_eaDogM_WriteString
 38921 ;;		_send_lcd_cmd_dma
 38922 ;; This function uses a reentrant model
 38923 ;;
 38924                           
 38925                           	psect	text89
 38926   0180E6                     __ptext89:
 38927                           	callstack 0
 38928   0180E6                     _wait_lcd_set:
 38929                           	callstack 24
 38930                           
 38931                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
 38932                           
 38933                           ; BSR set to: 59
 38934                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38935                           ;incstack = 0
 38936   0180E6  0100               	movlb	0	; () banked
 38937   0180E8  8787               	bsf	_spi_link& (0+255),3,b	;volatile
 38938                           
 38939                           ; BSR set to: 0
 38940                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 38941   0180EA  0012               	return		;funcret
 38942   0180EC                     __end_of_wait_lcd_set:
 38943                           	callstack 0
 38944                           
 38945 ;; *************** function _start_lcd *****************
 38946 ;; Defined at:
 38947 ;;		line 126 in file "eadog.c"
 38948 ;; Parameters:    Size  Location     Type
 38949 ;;		None
 38950 ;; Auto vars:     Size  Location     Type
 38951 ;;		None
 38952 ;; Return value:  Size  Location     Type
 38953 ;;                  1  [STACK] void 
 38954 ;; Registers used:
 38955 ;;		None
 38956 ;; Tracked objects:
 38957 ;;		On entry : 3F/1
 38958 ;;		On exit  : 3F/3B
 38959 ;;		Unchanged: 0/0
 38960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38965 ;;Total ram usage:        0 bytes
 38966 ;; Hardware stack levels used: 1
 38967 ;; Hardware stack levels required when called: 3
 38968 ;; This function calls:
 38969 ;;		Nothing
 38970 ;; This function is called by:
 38971 ;;		_eaDogM_WriteString
 38972 ;;		_send_lcd_cmd_dma
 38973 ;; This function uses a reentrant model
 38974 ;;
 38975                           
 38976                           	psect	text90
 38977   0180EC                     __ptext90:
 38978                           	callstack 0
 38979   0180EC                     _start_lcd:
 38980                           	callstack 24
 38981                           
 38982                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
 38983                           
 38984                           ; BSR set to: 0
 38985                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38986                           ;incstack = 0
 38987   0180EC  013B               	movlb	59	; () banked
 38988   0180EE  8DFC               	bsf	252,6,b	;volatile
 38989                           
 38990                           ; BSR set to: 59
 38991                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 38992   0180F0  0012               	return		;funcret
 38993   0180F2                     __end_of_start_lcd:
 38994                           	callstack 0
 38995                           
 38996 ;; *************** function _ringBufS_flush *****************
 38997 ;; Defined at:
 38998 ;;		line 76 in file "ringbufs.c"
 38999 ;; Parameters:    Size  Location     Type
 39000 ;;  _this           2  [STACK] PTR struct ringBufS_t
 39001 ;;		 -> ring_buf1(67), 
 39002 ;;  clearBuffer     1  [STACK] const char 
 39003 ;; Auto vars:     Size  Location     Type
 39004 ;;		None
 39005 ;; Return value:  Size  Location     Type
 39006 ;;                  1  [STACK] void 
 39007 ;; Registers used:
 39008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 39009 ;; Tracked objects:
 39010 ;;		On entry : 3F/0
 39011 ;;		On exit  : 0/0
 39012 ;;		Unchanged: 0/0
 39013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39018 ;;Total ram usage:        0 bytes
 39019 ;; Hardware stack levels used: 1
 39020 ;; Hardware stack levels required when called: 4
 39021 ;; This function calls:
 39022 ;;		_memset
 39023 ;; This function is called by:
 39024 ;;		_eaDogM_WriteString
 39025 ;;		_send_lcd_cmd_dma
 39026 ;; This function uses a reentrant model
 39027 ;;
 39028                           
 39029                           	psect	text91
 39030   016D86                     __ptext91:
 39031                           	callstack 0
 39032   016D86                     _ringBufS_flush:
 39033                           	callstack 23
 39034                           
 39035                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 39036                           ;stkvar	__this @ sp[(0)+-2]
 39037                           
 39038                           ; BSR set to: 59
 39039                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39040                           ;incstack = 0
 39041   016D86  0EFE               	movlw	-2
 39042   016D88  006F FF8C  F02C    	movff	plusw1,btemp+10
 39043   016D8E  0EFF               	movlw	-1
 39044   016D90  006F FF8C  F02D    	movff	plusw1,btemp+11
 39045   016D96  0E42               	movlw	66
 39046   016D98  242C               	addwf	(btemp+10)^0,w,c
 39047   016D9A  6ED9               	movwf	fsr2l,c
 39048   016D9C  0E00               	movlw	0
 39049   016D9E  202D               	addwfc	(btemp+11)^0,w,c
 39050   016DA0  6EDA               	movwf	fsr2h,c
 39051   016DA2  6ADF               	clrf	indf2,c
 39052                           
 39053                           ;ringbufs.c: 79:  _this->head = 0;
 39054                           ;stkvar	__this @ sp[(0)+-2]
 39055   016DA4  0EFE               	movlw	-2
 39056   016DA6  006F FF8C  F02C    	movff	plusw1,btemp+10
 39057   016DAC  0EFF               	movlw	-1
 39058   016DAE  006F FF8C  F02D    	movff	plusw1,btemp+11
 39059   016DB4  0E40               	movlw	64
 39060   016DB6  242C               	addwf	(btemp+10)^0,w,c
 39061   016DB8  6ED9               	movwf	fsr2l,c
 39062   016DBA  0E00               	movlw	0
 39063   016DBC  202D               	addwfc	(btemp+11)^0,w,c
 39064   016DBE  6EDA               	movwf	fsr2h,c
 39065   016DC0  6ADF               	clrf	indf2,c
 39066                           
 39067                           ;ringbufs.c: 80:  _this->tail = 0;
 39068                           ;stkvar	__this @ sp[(0)+-2]
 39069   016DC2  0EFE               	movlw	-2
 39070   016DC4  006F FF8C  F02C    	movff	plusw1,btemp+10
 39071   016DCA  0EFF               	movlw	-1
 39072   016DCC  006F FF8C  F02D    	movff	plusw1,btemp+11
 39073   016DD2  0E41               	movlw	65
 39074   016DD4  242C               	addwf	(btemp+10)^0,w,c
 39075   016DD6  6ED9               	movwf	fsr2l,c
 39076   016DD8  0E00               	movlw	0
 39077   016DDA  202D               	addwfc	(btemp+11)^0,w,c
 39078   016DDC  6EDA               	movwf	fsr2h,c
 39079   016DDE  6ADF               	clrf	indf2,c
 39080                           
 39081                           ;ringbufs.c: 81:  if (clearBuffer) {
 39082                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 39083   016DE0  0EFD               	movlw	-3
 39084   016DE2  50E3               	movf	plusw1,w,c
 39085   016DE4  B4D8               	btfsc	status,2,c
 39086   016DE6  D011               	goto	l1699
 39087                           
 39088                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 39089   016DE8  0E40               	movlw	64
 39090   016DEA  6EE6               	movwf	postinc1,c
 39091   016DEC  0E00               	movlw	0
 39092   016DEE  6EE6               	movwf	postinc1,c
 39093   016DF0  0E00               	movlw	0
 39094   016DF2  6EE6               	movwf	postinc1,c
 39095   016DF4  0E00               	movlw	0
 39096   016DF6  6EE6               	movwf	postinc1,c
 39097                           
 39098                           ;stkvar	__this @ sp[(-4)+-2]
 39099   016DF8  0EFA               	movlw	-6
 39100   016DFA  006F FF8F FFE6     	movff	plusw1,postinc1
 39101   016E00  006F FF8F FFE6     	movff	plusw1,postinc1
 39102   016E06  EC27  F0B6         	call	_memset	;wreg free
 39103   016E0A                     l1699:
 39104                           
 39105                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 39106   016E0A  52E5               	movf	postdec1,f,c
 39107   016E0C  52E5               	movf	postdec1,f,c
 39108   016E0E  52E5               	movf	postdec1,f,c
 39109   016E10  0012               	return		;funcret
 39110   016E12                     __end_of_ringBufS_flush:
 39111                           	callstack 0
 39112                           
 39113 ;; *************** function _memset *****************
 39114 ;; Defined at:
 39115 ;;		line 3 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/memset.c"
 39116 ;; Parameters:    Size  Location     Type
 39117 ;;  dest            2  [STACK] PTR void 
 39118 ;;		 -> ring_buf2(67), ring_buf1(67), 
 39119 ;;  c               2  [STACK] int 
 39120 ;;  n               2  [STACK] unsigned int 
 39121 ;; Auto vars:     Size  Location     Type
 39122 ;;  p               2  [STACK] PTR unsigned char 
 39123 ;;		 -> ring_buf2(67), ring_buf1(67), 
 39124 ;; Return value:  Size  Location     Type
 39125 ;;                  2  [STACK] PTR void 
 39126 ;; Registers used:
 39127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 39128 ;; Tracked objects:
 39129 ;;		On entry : 0/0
 39130 ;;		On exit  : 0/0
 39131 ;;		Unchanged: 0/0
 39132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39137 ;;Total ram usage:        0 bytes
 39138 ;; Hardware stack levels used: 1
 39139 ;; Hardware stack levels required when called: 3
 39140 ;; This function calls:
 39141 ;;		Nothing
 39142 ;; This function is called by:
 39143 ;;		_ringBufS_init
 39144 ;;		_ringBufS_flush
 39145 ;; This function uses a reentrant model
 39146 ;;
 39147                           
 39148                           	psect	text92
 39149   016C4E                     __ptext92:
 39150                           	callstack 0
 39151   016C4E                     _memset:
 39152                           	callstack 0
 39153                           
 39154                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39155   016C4E  52E6               	movf	postinc1,f,c
 39156   016C50  52E6               	movf	postinc1,f,c
 39157                           
 39158                           ;stkvar	_dest @ sp[(-2)+-2]
 39159                           
 39160                           ;incstack = 0
 39161   016C52  0EFC               	movlw	-4
 39162   016C54  006F FF8C  F02C    	movff	plusw1,btemp+10
 39163   016C5A  0EFD               	movlw	-3
 39164   016C5C  006F FF8C  F02D    	movff	plusw1,btemp+11
 39165                           
 39166                           ;stkvar	_p @ sp[(-2)+0]
 39167   016C62  0EFF               	movlw	-1
 39168   016C64  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 39169   016C6A  0EFE               	movlw	-2
 39170   016C6C  0060  F0B3  FFE3   	movff	btemp+10,plusw1
 39171   016C72  D01D               	goto	l12125
 39172   016C74                     l12121:
 39173                           
 39174                           ;stkvar	_c @ sp[(-2)+-4]
 39175                           ;stkvar	_p @ sp[(-2)+0]
 39176   016C74  0EFE               	movlw	-2
 39177   016C76  006F FF8F FFD9     	movff	plusw1,fsr2l
 39178   016C7C  0EFF               	movlw	-1
 39179   016C7E  006F FF8F FFDA     	movff	plusw1,fsr2h
 39180   016C84  0EFA               	movlw	-6
 39181   016C86  006F FF8F FFDF     	movff	plusw1,indf2
 39182                           
 39183                           ;stkvar	_p @ sp[(-2)+0]
 39184   016C8C  0EFE               	movlw	-2
 39185   016C8E  50E3               	movf	plusw1,w,c
 39186   016C90  0F01               	addlw	1
 39187   016C92  6E22               	movwf	btemp^0,c
 39188   016C94  0EFE               	movlw	-2
 39189   016C96  0060  F08B  FFE3   	movff	btemp,plusw1
 39190   016C9C  6A22               	clrf	btemp^0,c
 39191   016C9E  0EFF               	movlw	-1
 39192   016CA0  50E3               	movf	plusw1,w,c
 39193   016CA2  2022               	addwfc	btemp^0,w,c
 39194   016CA4  6E22               	movwf	btemp^0,c
 39195   016CA6  0EFF               	movlw	-1
 39196   016CA8  0060  F08B  FFE3   	movff	btemp,plusw1
 39197   016CAE                     l12125:
 39198                           
 39199                           ;stkvar	_n @ sp[(-2)+-6]
 39200   016CAE  0EF8               	movlw	-8
 39201   016CB0  006F FF8C  F022    	movff	plusw1,btemp
 39202   016CB6  0E01               	movlw	1
 39203   016CB8  5E22               	subwf	btemp^0,f,c
 39204   016CBA  0EF8               	movlw	-8
 39205   016CBC  0060  F08B  FFE3   	movff	btemp,plusw1
 39206   016CC2  0EF9               	movlw	-7
 39207   016CC4  006F FF8C  F022    	movff	plusw1,btemp
 39208   016CCA  0E00               	movlw	0
 39209   016CCC  5A22               	subwfb	btemp^0,f,c
 39210   016CCE  0EF9               	movlw	-7
 39211   016CD0  0060  F08B  FFE3   	movff	btemp,plusw1
 39212   016CD6  0EF8               	movlw	-8
 39213   016CD8  28E3               	incf	plusw1,w,c
 39214   016CDA  E1CC               	bnz	l12121
 39215   016CDC  0EF9               	movlw	-7
 39216   016CDE  28E3               	incf	plusw1,w,c
 39217   016CE0  A4D8               	btfss	status,2,c
 39218   016CE2  D7C8               	goto	l12121
 39219                           
 39220                           ; _memset: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 39221   016CE4  0EF8               	movlw	248
 39222   016CE6  26E1               	addwf	fsr1l,f,c
 39223   016CE8  0EFF               	movlw	255
 39224   016CEA  22E2               	addwfc	fsr1h,f,c
 39225   016CEC  0012               	return		;funcret
 39226   016CEE                     __end_of_memset:
 39227                           	callstack 0
 39228                           
 39229 ;; *************** function _printf *****************
 39230 ;; Defined at:
 39231 ;;		line 5 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/printf.c"
 39232 ;; Parameters:    Size  Location     Type
 39233 ;;  fmt             2  [STACK] PTR const unsigned char 
 39234 ;;		 -> STR_28(3), STR_27(3), STR_26(3), 
 39235 ;; Auto vars:     Size  Location     Type
 39236 ;;  ap              2  [STACK] PTR void [1]
 39237 ;;		 -> ?_printf(2), ?_sprintf(2), 
 39238 ;;  ret             2    0        int 
 39239 ;; Return value:  Size  Location     Type
 39240 ;;                  2  [STACK] int 
 39241 ;; Registers used:
 39242 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 39243 ;; Tracked objects:
 39244 ;;		On entry : 3F/3B
 39245 ;;		On exit  : 3F/1
 39246 ;;		Unchanged: 0/0
 39247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39252 ;;Total ram usage:        0 bytes
 39253 ;; Hardware stack levels used: 1
 39254 ;; Hardware stack levels required when called: 11
 39255 ;; This function calls:
 39256 ;;		_vfprintf
 39257 ;; This function is called by:
 39258 ;;		_eaDogM_WriteString
 39259 ;;		_send_lcd_cmd_dma
 39260 ;; This function uses a reentrant model
 39261 ;;
 39262                           
 39263                           	psect	text93
 39264   017166                     __ptext93:
 39265                           	callstack 0
 39266   017166                     _printf:
 39267                           	callstack 0
 39268                           
 39269                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39270   017166  52E6               	movf	postinc1,f,c
 39271   017168  52E6               	movf	postinc1,f,c
 39272                           
 39273                           ;stkvar	?_printf @ sp[(-2)+-3]
 39274                           
 39275                           ;incstack = 0
 39276   01716A  0EFB               	movlw	251
 39277   01716C  24E1               	addwf	fsr1l,w,c
 39278   01716E  6E2C               	movwf	(btemp+10)^0,c
 39279   017170  0EFF               	movlw	255
 39280   017172  20E2               	addwfc	fsr1h,w,c
 39281   017174  6E2D               	movwf	(btemp+11)^0,c
 39282                           
 39283                           ;stkvar	_ap @ sp[(-2)+0]
 39284   017176  0EFF               	movlw	-1
 39285   017178  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 39286   01717E  0EFE               	movlw	-2
 39287   017180  0060  F0B3  FFE3   	movff	btemp+10,plusw1
 39288                           
 39289                           ;stkvar	_ap @ sp[(-2)+0]
 39290   017186  0EFE               	movlw	254
 39291   017188  24E1               	addwf	fsr1l,w,c
 39292   01718A  6E22               	movwf	btemp^0,c
 39293   01718C  0EFF               	movlw	255
 39294   01718E  20E2               	addwfc	fsr1h,w,c
 39295   017190  6E23               	movwf	(btemp+1)^0,c
 39296   017192  0060  F08B  FFE6   	movff	btemp,postinc1
 39297   017198  0060  F08F  FFE6   	movff	btemp+1,postinc1
 39298                           
 39299                           ;stkvar	_fmt @ sp[(-4)+-3]
 39300   01719E  0EF9               	movlw	-7
 39301   0171A0  006F FF8F FFE6     	movff	plusw1,postinc1
 39302   0171A6  006F FF8F FFE6     	movff	plusw1,postinc1
 39303   0171AC  0E00               	movlw	0
 39304   0171AE  6EE6               	movwf	postinc1,c
 39305   0171B0  0E00               	movlw	0
 39306   0171B2  6EE6               	movwf	postinc1,c
 39307   0171B4  EC80  F0B5         	call	_vfprintf	;wreg free
 39308                           
 39309                           ; BSR set to: 1
 39310                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 39311   0171B8  52E5               	movf	postdec1,f,c
 39312   0171BA  52E5               	movf	postdec1,f,c
 39313   0171BC  52E5               	movf	postdec1,f,c
 39314   0171BE  50E7               	movf	indf1,w,c
 39315   0171C0  5EE1               	subwf	fsr1l,f,c
 39316   0171C2  0E00               	movlw	0
 39317   0171C4  5AE2               	subwfb	fsr1h,f,c
 39318   0171C6  0012               	return		;funcret
 39319   0171C8                     __end_of_printf:
 39320                           	callstack 0
 39321                           
 39322 ;; *************** function _sprintf *****************
 39323 ;; Defined at:
 39324 ;;		line 9 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/nf_sprintf.c"
 39325 ;; Parameters:    Size  Location     Type
 39326 ;;  s               2  [STACK] PTR unsigned char 
 39327 ;;		 -> D$lcd(512), D@mconfig$F5156(514), V(387), 
 39328 ;;  fmt             2  [STACK] PTR const unsigned char 
 39329 ;;		 -> STR_68(3), STR_67(3), STR_66(19), STR_65(19), 
 39330 ;;		 -> STR_64(19), STR_63(19), STR_62(25), STR_61(26), 
 39331 ;;		 -> STR_60(21), STR_59(22), STR_58(21), STR_57(24), 
 39332 ;;		 -> STR_56(19), STR_55(19), STR_54(20), STR_53(18), 
 39333 ;;		 -> STR_52(20), STR_51(18), STR_50(20), STR_49(18), 
 39334 ;;		 -> STR_48(20), STR_47(22), STR_46(24), STR_45(15), 
 39335 ;;		 -> STR_44(15), STR_43(15), STR_42(10), STR_41(10), 
 39336 ;;		 -> STR_40(19), STR_39(19), STR_36(21), STR_35(26), 
 39337 ;;		 -> STR_34(26), STR_33(20), msg99(56), msg2(86), 
 39338 ;;		 -> msg1(88), msg0(89), STR_25(29), STR_24(26), 
 39339 ;;		 -> STR_23(21), STR_22(4), STR_21(19), STR_20(26), 
 39340 ;;		 -> STR_19(21), STR_18(20), STR_17(21), STR_16(21), 
 39341 ;;		 -> STR_15(18), STR_14(24), STR_13(24), STR_12(21), 
 39342 ;;		 -> STR_11(21), STR_10(21), STR_9(16), STR_8(17), 
 39343 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
 39344 ;;		 -> STR_1(17), 
 39345 ;; Auto vars:     Size  Location     Type
 39346 ;;  f              11  [STACK] struct _IO_FILE
 39347 ;;  ap              2  [STACK] PTR void [1]
 39348 ;;		 -> ?_printf(2), ?_sprintf(2), 
 39349 ;;  ret             2    0        int 
 39350 ;; Return value:  Size  Location     Type
 39351 ;;                  2  [STACK] int 
 39352 ;; Registers used:
 39353 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 39354 ;; Tracked objects:
 39355 ;;		On entry : 0/0
 39356 ;;		On exit  : 3F/1
 39357 ;;		Unchanged: 0/0
 39358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39363 ;;Total ram usage:        0 bytes
 39364 ;; Hardware stack levels used: 1
 39365 ;; Hardware stack levels required when called: 11
 39366 ;; This function calls:
 39367 ;;		_vfprintf
 39368 ;; This function is called by:
 39369 ;;		_main
 39370 ;;		_terminal_format
 39371 ;;		_s10f1_opcmd
 39372 ;;		_ee_logger
 39373 ;;		_check_help
 39374 ;;		_vterm_dump
 39375 ;;		_vterm_sequence
 39376 ;;		_MyeaDogM_WriteStringAtPos
 39377 ;; This function uses a reentrant model
 39378 ;;
 39379                           
 39380                           	psect	text94
 39381   016464                     __ptext94:
 39382                           	callstack 0
 39383   016464                     _sprintf:
 39384                           	callstack 0
 39385                           
 39386                           ; BSR set to: 1
 39387                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 18, argsize = 4 v
      +                          argsize = 0, retsize = 0 argfudge = 0
 39388   016464  0E0D               	movlw	13
 39389   016466  26E1               	addwf	fsr1l,f,c
 39390   016468  0E00               	movlw	0
 39391   01646A  22E2               	addwfc	fsr1h,f,c
 39392                           
 39393                           ;stkvar	?_sprintf @ sp[(-13)+-3]
 39394                           
 39395                           ;incstack = 0
 39396   01646C  0EEE               	movlw	238
 39397   01646E  24E1               	addwf	fsr1l,w,c
 39398   016470  6E2C               	movwf	(btemp+10)^0,c
 39399   016472  0EFF               	movlw	255
 39400   016474  20E2               	addwfc	fsr1h,w,c
 39401   016476  6E2D               	movwf	(btemp+11)^0,c
 39402                           
 39403                           ;stkvar	_ap @ sp[(-13)+11]
 39404   016478  0EFF               	movlw	-1
 39405   01647A  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 39406   016480  0EFE               	movlw	-2
 39407   016482  0060  F0B3  FFE3   	movff	btemp+10,plusw1
 39408                           
 39409                           ;stkvar	_s @ sp[(-13)+-3]
 39410   016488  0EF0               	movlw	-16
 39411   01648A  006F FF8C  F02C    	movff	plusw1,btemp+10
 39412   016490  0EF1               	movlw	-15
 39413   016492  006F FF8C  F02D    	movff	plusw1,btemp+11
 39414                           
 39415                           ;stkvar	_f @ sp[(-13)+0]
 39416   016498  0EF4               	movlw	-12
 39417   01649A  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 39418   0164A0  0EF3               	movlw	-13
 39419   0164A2  0060  F0B3  FFE3   	movff	btemp+10,plusw1
 39420                           
 39421                           ;stkvar	_f @ sp[(-13)+0]
 39422   0164A8  0EF5               	movlw	245
 39423   0164AA  24E1               	addwf	fsr1l,w,c
 39424   0164AC  6ED9               	movwf	fsr2l,c
 39425   0164AE  0EFF               	movlw	255
 39426   0164B0  20E2               	addwfc	fsr1h,w,c
 39427   0164B2  6EDA               	movwf	fsr2h,c
 39428   0164B4  6ADE               	clrf	postinc2,c
 39429   0164B6  6ADD               	clrf	postdec2,c
 39430                           
 39431                           ;stkvar	_f @ sp[(-13)+0]
 39432   0164B8  0EFC               	movlw	252
 39433   0164BA  24E1               	addwf	fsr1l,w,c
 39434   0164BC  6ED9               	movwf	fsr2l,c
 39435   0164BE  0EFF               	movlw	255
 39436   0164C0  20E2               	addwfc	fsr1h,w,c
 39437   0164C2  6EDA               	movwf	fsr2h,c
 39438   0164C4  6ADE               	clrf	postinc2,c
 39439   0164C6  6ADD               	clrf	postdec2,c
 39440                           
 39441                           ;stkvar	_ap @ sp[(-13)+11]
 39442   0164C8  0EFE               	movlw	254
 39443   0164CA  24E1               	addwf	fsr1l,w,c
 39444   0164CC  6E22               	movwf	btemp^0,c
 39445   0164CE  0EFF               	movlw	255
 39446   0164D0  20E2               	addwfc	fsr1h,w,c
 39447   0164D2  6E23               	movwf	(btemp+1)^0,c
 39448   0164D4  0060  F08B  FFE6   	movff	btemp,postinc1
 39449   0164DA  0060  F08F  FFE6   	movff	btemp+1,postinc1
 39450                           
 39451                           ;stkvar	_fmt @ sp[(-15)+-5]
 39452   0164E0  0EEC               	movlw	-20
 39453   0164E2  006F FF8F FFE6     	movff	plusw1,postinc1
 39454   0164E8  006F FF8F FFE6     	movff	plusw1,postinc1
 39455                           
 39456                           ;stkvar	_f @ sp[(-17)+0]
 39457   0164EE  0EEF               	movlw	239
 39458   0164F0  24E1               	addwf	fsr1l,w,c
 39459   0164F2  6E22               	movwf	btemp^0,c
 39460   0164F4  0EFF               	movlw	255
 39461   0164F6  20E2               	addwfc	fsr1h,w,c
 39462   0164F8  6E23               	movwf	(btemp+1)^0,c
 39463   0164FA  0060  F08B  FFE6   	movff	btemp,postinc1
 39464   016500  0060  F08F  FFE6   	movff	btemp+1,postinc1
 39465   016506  EC80  F0B5         	call	_vfprintf	;wreg free
 39466                           
 39467                           ; BSR set to: 1
 39468                           ;stkvar	_f @ sp[(-13)+0]
 39469   01650A  0EF5               	movlw	245
 39470   01650C  24E1               	addwf	fsr1l,w,c
 39471   01650E  6ED9               	movwf	fsr2l,c
 39472   016510  0EFF               	movlw	255
 39473   016512  20E2               	addwfc	fsr1h,w,c
 39474   016514  6EDA               	movwf	fsr2h,c
 39475   016516  006F FF78  F02C    	movff	postinc2,btemp+10
 39476   01651C  006F FF74  F02D    	movff	postdec2,btemp+11
 39477                           
 39478                           ;stkvar	_s @ sp[(-13)+-3]
 39479   016522  0EF0               	movlw	-16
 39480   016524  006F FF8C  F02A    	movff	plusw1,btemp+8
 39481   01652A  0EF1               	movlw	-15
 39482   01652C  006F FF8C  F02B    	movff	plusw1,btemp+9
 39483   016532  502C               	movf	(btemp+10)^0,w,c
 39484   016534  242A               	addwf	(btemp+8)^0,w,c
 39485   016536  6ED9               	movwf	fsr2l,c
 39486   016538  502D               	movf	(btemp+11)^0,w,c
 39487   01653A  202B               	addwfc	(btemp+9)^0,w,c
 39488   01653C  6EDA               	movwf	fsr2h,c
 39489   01653E  6ADF               	clrf	indf2,c
 39490                           
 39491                           ; BSR set to: 1
 39492                           ; _sprintf: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 18, arg
      +                          size = 4, vargsize = 0
 39493   016540  0EF3               	movlw	243
 39494   016542  26E1               	addwf	fsr1l,f,c
 39495   016544  0EFF               	movlw	255
 39496   016546  22E2               	addwfc	fsr1h,f,c
 39497   016548  52E5               	movf	postdec1,f,c
 39498   01654A  50E7               	movf	indf1,w,c
 39499   01654C  5EE1               	subwf	fsr1l,f,c
 39500   01654E  0E00               	movlw	0
 39501   016550  5AE2               	subwfb	fsr1h,f,c
 39502   016552  0012               	return		;funcret
 39503   016554                     __end_of_sprintf:
 39504                           	callstack 0
 39505                           
 39506 ;; *************** function _vfprintf *****************
 39507 ;; Defined at:
 39508 ;;		line 1817 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c"
 39509 ;; Parameters:    Size  Location     Type
 39510 ;;  fp              2  [STACK] PTR struct _IO_FILE
 39511 ;;		 -> f(11), NULL(0), 
 39512 ;;  fmt             2  [STACK] PTR const unsigned char 
 39513 ;;		 -> STR_68(3), STR_67(3), STR_66(19), STR_65(19), 
 39514 ;;		 -> STR_64(19), STR_63(19), STR_62(25), STR_61(26), 
 39515 ;;		 -> STR_60(21), STR_59(22), STR_58(21), STR_57(24), 
 39516 ;;		 -> STR_56(19), STR_55(19), STR_54(20), STR_53(18), 
 39517 ;;		 -> STR_52(20), STR_51(18), STR_50(20), STR_49(18), 
 39518 ;;		 -> STR_48(20), STR_47(22), STR_46(24), STR_45(15), 
 39519 ;;		 -> STR_44(15), STR_43(15), STR_42(10), STR_41(10), 
 39520 ;;		 -> STR_40(19), STR_39(19), STR_36(21), STR_35(26), 
 39521 ;;		 -> STR_34(26), STR_33(20), msg99(56), msg2(86), 
 39522 ;;		 -> msg1(88), msg0(89), STR_28(3), STR_27(3), 
 39523 ;;		 -> STR_26(3), STR_25(29), STR_24(26), STR_23(21), 
 39524 ;;		 -> STR_22(4), STR_21(19), STR_20(26), STR_19(21), 
 39525 ;;		 -> STR_18(20), STR_17(21), STR_16(21), STR_15(18), 
 39526 ;;		 -> STR_14(24), STR_13(24), STR_12(21), STR_11(21), 
 39527 ;;		 -> STR_10(21), STR_9(16), STR_8(17), STR_6(15), 
 39528 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 39529 ;;  ap              2  [STACK] PTR PTR void 
 39530 ;;		 -> ap(2), ap(2), 
 39531 ;; Auto vars:     Size  Location     Type
 39532 ;;  cfmt            2  [STACK] PTR unsigned char 
 39533 ;;		 -> STR_68(3), STR_67(3), STR_66(19), STR_65(19), 
 39534 ;;		 -> STR_64(19), STR_63(19), STR_62(25), STR_61(26), 
 39535 ;;		 -> STR_60(21), STR_59(22), STR_58(21), STR_57(24), 
 39536 ;;		 -> STR_56(19), STR_55(19), STR_54(20), STR_53(18), 
 39537 ;;		 -> STR_52(20), STR_51(18), STR_50(20), STR_49(18), 
 39538 ;;		 -> STR_48(20), STR_47(22), STR_46(24), STR_45(15), 
 39539 ;;		 -> STR_44(15), STR_43(15), STR_42(10), STR_41(10), 
 39540 ;;		 -> STR_40(19), STR_39(19), STR_36(21), STR_35(26), 
 39541 ;;		 -> STR_34(26), STR_33(20), msg99(56), msg2(86), 
 39542 ;;		 -> msg1(88), msg0(89), STR_28(3), STR_27(3), 
 39543 ;;		 -> STR_26(3), STR_25(29), STR_24(26), STR_23(21), 
 39544 ;;		 -> STR_22(4), STR_21(19), STR_20(26), STR_19(21), 
 39545 ;;		 -> STR_18(20), STR_17(21), STR_16(21), STR_15(18), 
 39546 ;;		 -> STR_14(24), STR_13(24), STR_12(21), STR_11(21), 
 39547 ;;		 -> STR_10(21), STR_9(16), STR_8(17), STR_6(15), 
 39548 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 39549 ;; Return value:  Size  Location     Type
 39550 ;;                  2  [STACK] int 
 39551 ;; Registers used:
 39552 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 39553 ;; Tracked objects:
 39554 ;;		On entry : 0/3B
 39555 ;;		On exit  : 3F/1
 39556 ;;		Unchanged: 0/0
 39557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39562 ;;Total ram usage:        0 bytes
 39563 ;; Hardware stack levels used: 1
 39564 ;; Hardware stack levels required when called: 10
 39565 ;; This function calls:
 39566 ;;		_vfpfcnvrt
 39567 ;; This function is called by:
 39568 ;;		_sprintf
 39569 ;;		_printf
 39570 ;; This function uses a reentrant model
 39571 ;;
 39572                           
 39573                           	psect	text95
 39574   016B00                     __ptext95:
 39575                           	callstack 0
 39576   016B00                     _vfprintf:
 39577                           	callstack 0
 39578                           
 39579                           ; BSR set to: 1
 39580                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39581   016B00  52E6               	movf	postinc1,f,c
 39582   016B02  52E6               	movf	postinc1,f,c
 39583                           
 39584                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1817: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1
      +                          818: {;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1820:     char *cfmt;;/
      +                          opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1822:     cfmt = (char *)fmt;
 39585                           ;stkvar	_fmt @ sp[(-2)+-4]
 39586                           
 39587                           ;incstack = 0
 39588   016B04  0EFA               	movlw	-6
 39589   016B06  006F FF8C  F02C    	movff	plusw1,btemp+10
 39590   016B0C  0EFB               	movlw	-5
 39591   016B0E  006F FF8C  F02D    	movff	plusw1,btemp+11
 39592                           
 39593                           ;stkvar	_cfmt @ sp[(-2)+0]
 39594   016B14  0EFF               	movlw	-1
 39595   016B16  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 39596   016B1C  0EFE               	movlw	-2
 39597   016B1E  0060  F0B3  FFE3   	movff	btemp+10,plusw1
 39598                           
 39599                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1824:     nout = 0;
 39600   016B24  0101               	movlb	1	; () banked
 39601   016B26  6BBF               	clrf	_nout& (0+255),b
 39602   016B28  6BC0               	clrf	(_nout+1)& (0+255),b
 39603                           
 39604                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1826:     while (*cfmt) {
 39605   016B2A  D021               	goto	l12133
 39606   016B2C                     l12131:
 39607                           
 39608                           ; BSR set to: 1
 39609                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1828:         nout +=
 39610                           ;stkvar	_ap @ sp[(-2)+-6]
 39611   016B2C  0EF8               	movlw	-8
 39612   016B2E  006F FF8F FFE6     	movff	plusw1,postinc1
 39613   016B34  006F FF8F FFE6     	movff	plusw1,postinc1
 39614                           
 39615                           ;stkvar	_cfmt @ sp[(-4)+0]
 39616   016B3A  0EFC               	movlw	252
 39617   016B3C  24E1               	addwf	fsr1l,w,c
 39618   016B3E  6E22               	movwf	btemp^0,c
 39619   016B40  0EFF               	movlw	255
 39620   016B42  20E2               	addwfc	fsr1h,w,c
 39621   016B44  6E23               	movwf	(btemp+1)^0,c
 39622   016B46  0060  F08B  FFE6   	movff	btemp,postinc1
 39623   016B4C  0060  F08F  FFE6   	movff	btemp+1,postinc1
 39624                           
 39625                           ;stkvar	_fp @ sp[(-6)+-2]
 39626   016B52  0EF8               	movlw	-8
 39627   016B54  006F FF8F FFE6     	movff	plusw1,postinc1
 39628   016B5A  006F FF8F FFE6     	movff	plusw1,postinc1
 39629   016B60  EC00  F080         	call	_vfpfcnvrt	;wreg free
 39630   016B64  5022               	movf	btemp^0,w,c
 39631   016B66  0101               	movlb	1	; () banked
 39632   016B68  27BF               	addwf	_nout& (0+255),f,b
 39633   016B6A  5023               	movf	(btemp+1)^0,w,c
 39634   016B6C  23C0               	addwfc	(_nout+1)& (0+255),f,b
 39635   016B6E                     l12133:
 39636                           
 39637                           ; BSR set to: 1
 39638                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1826:     while (*cfmt) {
 39639                           ;stkvar	_cfmt @ sp[(-2)+0]
 39640   016B6E  50E1               	movf	fsr1l,w,c
 39641   016B70  0FFE               	addlw	-2
 39642   016B72  6ED9               	movwf	fsr2l,c
 39643   016B74  50E2               	movf	fsr1h,w,c
 39644   016B76  6EDA               	movwf	fsr2h,c
 39645   016B78  0EFF               	movlw	255
 39646   016B7A  22DA               	addwfc	fsr2h,f,c
 39647   016B7C  006F FF7B FFF6     	movff	postinc2,tblptrl
 39648   016B82  006F FF77 FFF7     	movff	postdec2,tblptrh
 39649   016B88                     	if	0	;tblptru may be non-zero
 39650   016B88                     	endif
 39651   016B88                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 39652   016B88  0E00               	movlw	low (__pmediumconst shr (0+16))
 39653   016B8A  6EF8               	movwf	tblptru,c
 39654   016B8C                     	endif
 39655   016B8C  0008               	tblrd		*
 39656   016B8E  50F5               	movf	tablat,w,c
 39657   016B90  0900               	iorlw	0
 39658   016B92  A4D8               	btfss	status,2,c
 39659   016B94  D7CB               	goto	l12131
 39660                           
 39661                           ; BSR set to: 1
 39662                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1835:  return 0;
 39663   016B96  0E00               	movlw	0
 39664   016B98  6E22               	movwf	btemp^0,c
 39665   016B9A  0E00               	movlw	0
 39666   016B9C  6E23               	movwf	(btemp+1)^0,c
 39667                           
 39668                           ; BSR set to: 1
 39669                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 39670   016B9E  0EF8               	movlw	248
 39671   016BA0  26E1               	addwf	fsr1l,f,c
 39672   016BA2  0EFF               	movlw	255
 39673   016BA4  22E2               	addwfc	fsr1h,f,c
 39674   016BA6  0012               	return		;funcret
 39675   016BA8                     __end_of_vfprintf:
 39676                           	callstack 0
 39677                           
 39678 ;; *************** function _vfpfcnvrt *****************
 39679 ;; Defined at:
 39680 ;;		line 1177 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c"
 39681 ;; Parameters:    Size  Location     Type
 39682 ;;  fp              2  [STACK] PTR struct _IO_FILE
 39683 ;;		 -> f(11), NULL(0), 
 39684 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 39685 ;;		 -> cfmt(2), 
 39686 ;;  ap              2  [STACK] PTR PTR void 
 39687 ;;		 -> ap(2), ap(2), 
 39688 ;; Auto vars:     Size  Location     Type
 39689 ;;  convarg         4  [STACK] struct .
 39690 ;;  cp              2  [STACK] PTR unsigned char 
 39691 ;;		 -> STR_68(3), STR_67(3), STR_66(19), STR_65(19), 
 39692 ;;		 -> STR_64(19), STR_63(19), STR_62(25), STR_61(26), 
 39693 ;;		 -> STR_60(21), STR_59(22), STR_58(21), STR_57(24), 
 39694 ;;		 -> STR_56(19), STR_55(19), STR_54(20), STR_53(18), 
 39695 ;;		 -> STR_52(20), STR_51(18), STR_50(20), STR_49(18), 
 39696 ;;		 -> STR_48(20), STR_47(22), STR_46(24), STR_45(15), 
 39697 ;;		 -> STR_44(15), STR_43(15), STR_42(10), STR_41(10), 
 39698 ;;		 -> STR_40(19), STR_39(19), STR_36(21), STR_35(26), 
 39699 ;;		 -> STR_34(26), STR_33(20), msg99(56), msg2(86), 
 39700 ;;		 -> msg1(88), msg0(89), STR_28(3), STR_27(3), 
 39701 ;;		 -> STR_26(3), STR_25(29), STR_24(26), STR_23(21), 
 39702 ;;		 -> STR_22(4), STR_21(19), STR_20(26), STR_19(21), 
 39703 ;;		 -> STR_18(20), STR_17(21), STR_16(21), STR_15(18), 
 39704 ;;		 -> STR_14(24), STR_13(24), STR_12(21), STR_11(21), 
 39705 ;;		 -> STR_10(21), STR_9(16), STR_8(17), STR_6(15), 
 39706 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 39707 ;;  c               1  [STACK] unsigned char 
 39708 ;;  done            1  [STACK] _Bool 
 39709 ;; Return value:  Size  Location     Type
 39710 ;;                  2  [STACK] int 
 39711 ;; Registers used:
 39712 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 39713 ;; Tracked objects:
 39714 ;;		On entry : 0/1
 39715 ;;		On exit  : 0/0
 39716 ;;		Unchanged: 0/0
 39717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39722 ;;Total ram usage:        0 bytes
 39723 ;; Hardware stack levels used: 1
 39724 ;; Hardware stack levels required when called: 9
 39725 ;; This function calls:
 39726 ;;		_ctoa
 39727 ;;		_dtoa
 39728 ;;		_fputc
 39729 ;;		_otoa
 39730 ;;		_read_prec_or_width
 39731 ;;		_stoa
 39732 ;;		_utoa
 39733 ;;		_xtoa
 39734 ;; This function is called by:
 39735 ;;		_vfprintf
 39736 ;; This function uses a reentrant model
 39737 ;;
 39738                           
 39739                           	psect	text96
 39740   010000                     __ptext96:
 39741                           	callstack 0
 39742   010000                     _vfpfcnvrt:
 39743                           	callstack 0
 39744                           
 39745                           ; BSR set to: 1
 39746                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39747   010000  0E08               	movlw	8
 39748   010002  26E1               	addwf	fsr1l,f,c
 39749   010004  0E00               	movlw	0
 39750   010006  22E2               	addwfc	fsr1h,f,c
 39751                           
 39752                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1177: vfpfcnvrt(FILE *fp, cha
      +                          r *fmt[], va_list ap);/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1178: {;
      +                          /opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1179:     char c, *cp;;/opt/mi
      +                          crochip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1180:     _Bool done;;/opt/microchip/
      +                          xc8/v3.00/pic/sources/c99/common/doprnt.c: 1188:  } convarg;;/opt/microchip/xc8/v3.00/pi
      +                          c/sources/c99/common/doprnt.c: 1201:     if ((*fmt)[0] == '%') {
 39753                           ;stkvar	_fmt @ sp[(-8)+-4]
 39754                           
 39755                           ;incstack = 0
 39756   010008  0EF4               	movlw	-12
 39757   01000A  006F FF8F FFD9     	movff	plusw1,fsr2l
 39758   010010  0EF5               	movlw	-11
 39759   010012  006F FF8F FFDA     	movff	plusw1,fsr2h
 39760   010018  006F FF7B FFF6     	movff	postinc2,tblptrl
 39761   01001E  006F FF77 FFF7     	movff	postdec2,tblptrh
 39762   010024                     	if	0	;tblptru may be non-zero
 39763   010024                     	endif
 39764   010024                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 39765   010024  0E00               	movlw	low (__pmediumconst shr (0+16))
 39766   010026  6EF8               	movwf	tblptru,c
 39767   010028                     	endif
 39768   010028  0008               	tblrd		*
 39769   01002A  50F5               	movf	tablat,w,c
 39770   01002C  0A25               	xorlw	37
 39771   01002E  A4D8               	btfss	status,2,c
 39772   010030  EF8B  F086         	goto	l12111
 39773                           
 39774                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1202:         ++*fmt;
 39775                           ;stkvar	_fmt @ sp[(-8)+-4]
 39776   010034  0EF4               	movlw	-12
 39777   010036  006F FF8F FFD9     	movff	plusw1,fsr2l
 39778   01003C  0EF5               	movlw	-11
 39779   01003E  006F FF8F FFDA     	movff	plusw1,fsr2h
 39780   010044  2ADE               	incf	postinc2,f,c
 39781   010046  0E00               	movlw	0
 39782   010048  22DD               	addwfc	postdec2,f,c
 39783                           
 39784                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1204:         flags = width =
      +                           0;
 39785   01004A  0E00               	movlw	0
 39786   01004C  0101               	movlb	1	; () banked
 39787   01004E  6FC2               	movwf	(_width+1)& (0+255),b
 39788   010050  0E00               	movlw	0
 39789   010052  6FC1               	movwf	_width& (0+255),b
 39790   010054  C1C1  F1C5         	movff	_width,_flags
 39791                           
 39792                           ; BSR set to: 1
 39793                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1205:         prec = -1;
 39794   010058  69C3               	setf	_prec& (0+255),b
 39795   01005A  69C4               	setf	(_prec+1)& (0+255),b
 39796                           
 39797                           ; BSR set to: 1
 39798                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1209:         done = 0;
 39799                           ;stkvar	_done @ sp[(-8)+7]
 39800   01005C  0EFF               	movlw	-1
 39801   01005E  6AE3               	clrf	plusw1,c
 39802                           
 39803                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1210:         while (!done) {
 39804   010060  D040               	goto	l11919
 39805   010062                     l11893:
 39806                           
 39807                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1214:                     fla
      +                          gs |= (1 << 0);
 39808   010062  0101               	movlb	1	; () banked
 39809   010064  81C5               	bsf	_flags& (0+255),0,b
 39810   010066                     l11895:
 39811                           
 39812                           ; BSR set to: 1
 39813                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1215:                     ++*
      +                          fmt;
 39814                           ;stkvar	_fmt @ sp[(-8)+-4]
 39815   010066  0EF4               	movlw	-12
 39816   010068  006F FF8F FFD9     	movff	plusw1,fsr2l
 39817   01006E  0EF5               	movlw	-11
 39818   010070  006F FF8F FFDA     	movff	plusw1,fsr2h
 39819   010076  2ADE               	incf	postinc2,f,c
 39820   010078  0E00               	movlw	0
 39821   01007A  22DD               	addwfc	postdec2,f,c
 39822                           
 39823                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1216:                     bre
      +                          ak;
 39824   01007C  D032               	goto	l11919
 39825   01007E                     l11897:
 39826                           
 39827                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1220:                     fla
      +                          gs |= (1 << 1);
 39828   01007E  0101               	movlb	1	; () banked
 39829   010080  83C5               	bsf	_flags& (0+255),1,b
 39830   010082  D7F1               	goto	l11895
 39831   010084                     l11901:
 39832                           
 39833                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1226:                     fla
      +                          gs |= (1 << 2);
 39834   010084  0101               	movlb	1	; () banked
 39835   010086  85C5               	bsf	_flags& (0+255),2,b
 39836   010088  D7EE               	goto	l11895
 39837   01008A                     l11905:
 39838                           
 39839                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1232:                     fla
      +                          gs |= (1 << 3);
 39840   01008A  0101               	movlb	1	; () banked
 39841   01008C  87C5               	bsf	_flags& (0+255),3,b
 39842   01008E  D7EB               	goto	l11895
 39843   010090                     l11909:
 39844                           
 39845                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1238:                     fla
      +                          gs |= (1 << 4);
 39846   010090  0101               	movlb	1	; () banked
 39847   010092  89C5               	bsf	_flags& (0+255),4,b
 39848   010094  D7E8               	goto	l11895
 39849   010096                     l11913:
 39850                           
 39851                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1243:                     don
      +                          e = 1;
 39852                           ;stkvar	_done @ sp[(-8)+7]
 39853   010096  0EFF               	movlw	-1
 39854   010098  6AE3               	clrf	plusw1,c
 39855   01009A  2AE3               	incf	plusw1,f,c
 39856                           
 39857                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1244:                     bre
      +                          ak;
 39858   01009C  D022               	goto	l11919
 39859   01009E                     l11917:
 39860                           
 39861                           ;stkvar	_fmt @ sp[(-8)+-4]
 39862   01009E  0EF4               	movlw	-12
 39863   0100A0  006F FF8F FFD9     	movff	plusw1,fsr2l
 39864   0100A6  0EF5               	movlw	-11
 39865   0100A8  006F FF8F FFDA     	movff	plusw1,fsr2h
 39866   0100AE  006F FF7B FFF6     	movff	postinc2,tblptrl
 39867   0100B4  006F FF77 FFF7     	movff	postdec2,tblptrh
 39868   0100BA                     	if	0	;tblptru may be non-zero
 39869   0100BA                     	endif
 39870   0100BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 39871   0100BA  0E00               	movlw	low (__pmediumconst shr (0+16))
 39872   0100BC  6EF8               	movwf	tblptru,c
 39873   0100BE                     	endif
 39874   0100BE  0008               	tblrd		*
 39875   0100C0  50F5               	movf	tablat,w,c
 39876                           
 39877                           ; Switch size 1, requested type "simple"
 39878                           ; Number of cases is 5, Range of values is 32 to 48
 39879                           ; switch strategies available:
 39880                           ; Name         Instructions Cycles
 39881                           ; simple_byte           16     9 (average)
 39882                           ;	Chosen strategy is simple_byte
 39883   0100C2  0A20               	xorlw	32	; case 32
 39884   0100C4  B4D8               	btfsc	status,2,c
 39885   0100C6  D7E1               	goto	l11905
 39886   0100C8  0A03               	xorlw	3	; case 35
 39887   0100CA  B4D8               	btfsc	status,2,c
 39888   0100CC  D7E1               	goto	l11909
 39889   0100CE  0A08               	xorlw	8	; case 43
 39890   0100D0  B4D8               	btfsc	status,2,c
 39891   0100D2  D7D8               	goto	l11901
 39892   0100D4  0A06               	xorlw	6	; case 45
 39893   0100D6  B4D8               	btfsc	status,2,c
 39894   0100D8  D7C4               	goto	l11893
 39895   0100DA  0A1D               	xorlw	29	; case 48
 39896   0100DC  B4D8               	btfsc	status,2,c
 39897   0100DE  D7CF               	goto	l11897
 39898   0100E0  D7DA               	goto	l11913
 39899   0100E2                     l11919:
 39900                           
 39901                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1210:         while (!done) {
 39902                           ;stkvar	_done @ sp[(-8)+7]
 39903   0100E2  0EFF               	movlw	-1
 39904   0100E4  50E3               	movf	plusw1,w,c
 39905   0100E6  B4D8               	btfsc	status,2,c
 39906   0100E8  D7DA               	goto	l11917
 39907                           
 39908                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1248:         if (flags & (1 
      +                          << 0)) {
 39909   0100EA  0101               	movlb	1	; () banked
 39910   0100EC  B1C5               	btfsc	_flags& (0+255),0,b
 39911                           
 39912                           ; BSR set to: 1
 39913                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1249:             flags &= ~(
      +                          1 << 1);
 39914   0100EE  93C5               	bcf	_flags& (0+255),1,b
 39915                           
 39916                           ; BSR set to: 1
 39917                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1256:   width = read_prec_or_
      +                          width(fmt, ap);
 39918                           ;stkvar	_ap @ sp[(-8)+-6]
 39919   0100F0  0EF2               	movlw	-14
 39920   0100F2  006F FF8F FFE6     	movff	plusw1,postinc1
 39921   0100F8  006F FF8F FFE6     	movff	plusw1,postinc1
 39922                           
 39923                           ;stkvar	_fmt @ sp[(-10)+-4]
 39924   0100FE  0EF2               	movlw	-14
 39925   010100  006F FF8F FFE6     	movff	plusw1,postinc1
 39926   010106  006F FF8F FFE6     	movff	plusw1,postinc1
 39927   01010C  ECA9  F0AC         	call	_read_prec_or_width	;wreg free
 39928   010110  C022  F1C1         	movff	btemp,_width
 39929   010114  C023  F1C2         	movff	btemp+1,_width+1
 39930                           
 39931                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1257:   if (width < 0) {
 39932   010118  0101               	movlb	1	; () banked
 39933   01011A  AFC2               	btfss	(_width+1)& (0+255),7,b
 39934   01011C  D005               	goto	l11929
 39935                           
 39936                           ; BSR set to: 1
 39937                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1258:    flags |= (1 << 0);
 39938   01011E  81C5               	bsf	_flags& (0+255),0,b
 39939                           
 39940                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1259:    width = -width;
 39941   010120  6DC1               	negf	_width& (0+255),b
 39942   010122  1FC2               	comf	(_width+1)& (0+255),f,b
 39943   010124  B0D8               	btfsc	status,0,c
 39944   010126  2BC2               	incf	(_width+1)& (0+255),f,b
 39945   010128                     l11929:
 39946                           
 39947                           ; BSR set to: 1
 39948                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1265:         if ((*fmt)[0] =
      +                          = '.') {
 39949                           ;stkvar	_fmt @ sp[(-8)+-4]
 39950   010128  0EF4               	movlw	-12
 39951   01012A  006F FF8F FFD9     	movff	plusw1,fsr2l
 39952   010130  0EF5               	movlw	-11
 39953   010132  006F FF8F FFDA     	movff	plusw1,fsr2h
 39954   010138  006F FF7B FFF6     	movff	postinc2,tblptrl
 39955   01013E  006F FF77 FFF7     	movff	postdec2,tblptrh
 39956   010144                     	if	0	;tblptru may be non-zero
 39957   010144                     	endif
 39958   010144                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 39959   010144  0E00               	movlw	low (__pmediumconst shr (0+16))
 39960   010146  6EF8               	movwf	tblptru,c
 39961   010148                     	endif
 39962   010148  0008               	tblrd		*
 39963   01014A  50F5               	movf	tablat,w,c
 39964   01014C  0A2E               	xorlw	46
 39965   01014E  A4D8               	btfss	status,2,c
 39966   010150  D01F               	goto	l11935
 39967                           
 39968                           ; BSR set to: 1
 39969                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1266:             ++*fmt;
 39970                           ;stkvar	_fmt @ sp[(-8)+-4]
 39971   010152  0EF4               	movlw	-12
 39972   010154  006F FF8F FFD9     	movff	plusw1,fsr2l
 39973   01015A  0EF5               	movlw	-11
 39974   01015C  006F FF8F FFDA     	movff	plusw1,fsr2h
 39975   010162  2ADE               	incf	postinc2,f,c
 39976   010164  0E00               	movlw	0
 39977   010166  22DD               	addwfc	postdec2,f,c
 39978                           
 39979                           ; BSR set to: 1
 39980                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1267:    prec = read_prec_or_
      +                          width(fmt, ap);
 39981                           ;stkvar	_ap @ sp[(-8)+-6]
 39982   010168  0EF2               	movlw	-14
 39983   01016A  006F FF8F FFE6     	movff	plusw1,postinc1
 39984   010170  006F FF8F FFE6     	movff	plusw1,postinc1
 39985                           
 39986                           ;stkvar	_fmt @ sp[(-10)+-4]
 39987   010176  0EF2               	movlw	-14
 39988   010178  006F FF8F FFE6     	movff	plusw1,postinc1
 39989   01017E  006F FF8F FFE6     	movff	plusw1,postinc1
 39990   010184  ECA9  F0AC         	call	_read_prec_or_width	;wreg free
 39991   010188  C022  F1C3         	movff	btemp,_prec
 39992   01018C  C023  F1C4         	movff	btemp+1,_prec+1
 39993   010190                     l11935:
 39994                           
 39995                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1273:         if ((*fmt)[0] =
      +                          = 'c') {
 39996                           ;stkvar	_fmt @ sp[(-8)+-4]
 39997   010190  0EF4               	movlw	-12
 39998   010192  006F FF8F FFD9     	movff	plusw1,fsr2l
 39999   010198  0EF5               	movlw	-11
 40000   01019A  006F FF8F FFDA     	movff	plusw1,fsr2h
 40001   0101A0  006F FF7B FFF6     	movff	postinc2,tblptrl
 40002   0101A6  006F FF77 FFF7     	movff	postdec2,tblptrh
 40003   0101AC                     	if	0	;tblptru may be non-zero
 40004   0101AC                     	endif
 40005   0101AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40006   0101AC  0E00               	movlw	low (__pmediumconst shr (0+16))
 40007   0101AE  6EF8               	movwf	tblptru,c
 40008   0101B0                     	endif
 40009   0101B0  0008               	tblrd		*
 40010   0101B2  50F5               	movf	tablat,w,c
 40011   0101B4  0A63               	xorlw	99
 40012   0101B6  A4D8               	btfss	status,2,c
 40013   0101B8  D037               	goto	l11945
 40014                           
 40015                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1274:             ++*fmt;
 40016                           ;stkvar	_fmt @ sp[(-8)+-4]
 40017   0101BA  0EF4               	movlw	-12
 40018   0101BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 40019   0101C2  0EF5               	movlw	-11
 40020   0101C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 40021   0101CA  2ADE               	incf	postinc2,f,c
 40022   0101CC  0E00               	movlw	0
 40023   0101CE  22DD               	addwfc	postdec2,f,c
 40024                           
 40025                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1275:             c = (unsign
      +                          ed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 40026                           ;stkvar	_ap @ sp[(-8)+-6]
 40027   0101D0  0EF2               	movlw	-14
 40028   0101D2  006F FF8F FFD9     	movff	plusw1,fsr2l
 40029   0101D8  0EF3               	movlw	-13
 40030   0101DA  006F FF8F FFDA     	movff	plusw1,fsr2h
 40031   0101E0  0E02               	movlw	2
 40032   0101E2  5EDE               	subwf	postinc2,f,c
 40033   0101E4  0E00               	movlw	0
 40034   0101E6  5ADD               	subwfb	postdec2,f,c
 40035   0101E8  006F FF78  F02C    	movff	postinc2,btemp+10
 40036   0101EE  006F FF74  F02D    	movff	postdec2,btemp+11
 40037   0101F4  0060  F0B3  FFD9   	movff	btemp+10,fsr2l
 40038   0101FA  0060  F0B7  FFDA   	movff	btemp+11,fsr2h
 40039   010200  50DF               	movf	indf2,w,c
 40040   010202  6E2D               	movwf	(btemp+11)^0,c
 40041                           
 40042                           ;stkvar	_c @ sp[(-8)+6]
 40043   010204  0EFE               	movlw	-2
 40044   010206  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 40045                           
 40046                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1284:             return (int
      +                          ) ctoa(fp, c);
 40047                           ;stkvar	_c @ sp[(-8)+6]
 40048   01020C  0EFE               	movlw	-2
 40049   01020E  50E3               	movf	plusw1,w,c
 40050   010210  6EE6               	movwf	postinc1,c
 40051                           
 40052                           ;stkvar	_fp @ sp[(-9)+-2]
 40053   010212  0EF5               	movlw	-11
 40054   010214  006F FF8F FFE6     	movff	plusw1,postinc1
 40055   01021A  006F FF8F FFE6     	movff	plusw1,postinc1
 40056   010220  EC0A  F0AF         	call	_ctoa	;wreg free
 40057   010224  EFB5  F086         	goto	l3303
 40058   010228                     l11945:
 40059                           
 40060                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1291:   cp = *fmt;
 40061                           ;stkvar	_fmt @ sp[(-8)+-4]
 40062   010228  0EF4               	movlw	-12
 40063   01022A  006F FF8F FFD9     	movff	plusw1,fsr2l
 40064   010230  0EF5               	movlw	-11
 40065   010232  006F FF8F FFDA     	movff	plusw1,fsr2h
 40066   010238  006F FF78  F02C    	movff	postinc2,btemp+10
 40067   01023E  006F FF74  F02D    	movff	postdec2,btemp+11
 40068                           
 40069                           ;stkvar	_cp @ sp[(-8)+4]
 40070   010244  0EFD               	movlw	-3
 40071   010246  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 40072   01024C  0EFC               	movlw	-4
 40073   01024E  0060  F0B3  FFE3   	movff	btemp+10,plusw1
 40074                           
 40075                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1293:   c = *cp;
 40076                           ;stkvar	_cp @ sp[(-8)+4]
 40077   010254  50E1               	movf	fsr1l,w,c
 40078   010256  0FFC               	addlw	-4
 40079   010258  6ED9               	movwf	fsr2l,c
 40080   01025A  50E2               	movf	fsr1h,w,c
 40081   01025C  6EDA               	movwf	fsr2h,c
 40082   01025E  0EFF               	movlw	255
 40083   010260  22DA               	addwfc	fsr2h,f,c
 40084   010262  006F FF7B FFF6     	movff	postinc2,tblptrl
 40085   010268  006F FF77 FFF7     	movff	postdec2,tblptrh
 40086   01026E                     	if	0	;tblptru may be non-zero
 40087   01026E                     	endif
 40088   01026E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40089   01026E  0E00               	movlw	low (__pmediumconst shr (0+16))
 40090   010270  6EF8               	movwf	tblptru,c
 40091   010272                     	endif
 40092                           
 40093                           ;stkvar	_c @ sp[(-8)+6]
 40094   010272  0008               	tblrd		*
 40095   010274  0EFE               	movlw	-2
 40096   010276  006F FFD7 FFE3     	movff	tablat,plusw1
 40097                           
 40098                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1294:   switch(c) {
 40099   01027C  D045               	goto	l11967
 40100   01027E                     l11949:
 40101                           
 40102                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1298:     cp++;
 40103                           ;stkvar	_cp @ sp[(-8)+4]
 40104   01027E  0EFC               	movlw	-4
 40105   010280  50E3               	movf	plusw1,w,c
 40106   010282  0F01               	addlw	1
 40107   010284  6E22               	movwf	btemp^0,c
 40108   010286  0EFC               	movlw	-4
 40109   010288  0060  F08B  FFE3   	movff	btemp,plusw1
 40110   01028E  6A22               	clrf	btemp^0,c
 40111   010290  0EFD               	movlw	-3
 40112   010292  50E3               	movf	plusw1,w,c
 40113   010294  2022               	addwfc	btemp^0,w,c
 40114   010296  6E22               	movwf	btemp^0,c
 40115   010298  0EFD               	movlw	-3
 40116   01029A  0060  F08B  FFE3   	movff	btemp,plusw1
 40117                           
 40118                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1300:     if (*cp == 'h') {
 40119                           ;stkvar	_cp @ sp[(-8)+4]
 40120   0102A0  50E1               	movf	fsr1l,w,c
 40121   0102A2  0FFC               	addlw	-4
 40122   0102A4  6ED9               	movwf	fsr2l,c
 40123   0102A6  50E2               	movf	fsr1h,w,c
 40124   0102A8  6EDA               	movwf	fsr2h,c
 40125   0102AA  0EFF               	movlw	255
 40126   0102AC  22DA               	addwfc	fsr2h,f,c
 40127   0102AE  006F FF7B FFF6     	movff	postinc2,tblptrl
 40128   0102B4  006F FF77 FFF7     	movff	postdec2,tblptrh
 40129   0102BA                     	if	0	;tblptru may be non-zero
 40130   0102BA                     	endif
 40131   0102BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40132   0102BA  0E00               	movlw	low (__pmediumconst shr (0+16))
 40133   0102BC  6EF8               	movwf	tblptru,c
 40134   0102BE                     	endif
 40135   0102BE  0008               	tblrd		*
 40136   0102C0  50F5               	movf	tablat,w,c
 40137   0102C2  0A68               	xorlw	104
 40138   0102C4  A4D8               	btfss	status,2,c
 40139   0102C6  D044               	goto	l11969
 40140                           
 40141                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1301:      c = 'H';
 40142                           ;stkvar	_c @ sp[(-8)+6]
 40143   0102C8  0EFE               	movlw	-2
 40144   0102CA  6AE3               	clrf	plusw1,c
 40145   0102CC  86E3               	bsf	plusw1,3,c
 40146   0102CE  8CE3               	bsf	plusw1,6,c	;indir
 40147   0102D0                     l11955:
 40148                           
 40149                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1302:      cp++;
 40150                           ;stkvar	_cp @ sp[(-8)+4]
 40151   0102D0  0EFC               	movlw	-4
 40152   0102D2  50E3               	movf	plusw1,w,c
 40153   0102D4  0F01               	addlw	1
 40154   0102D6  6E22               	movwf	btemp^0,c
 40155   0102D8  0EFC               	movlw	-4
 40156   0102DA  0060  F08B  FFE3   	movff	btemp,plusw1
 40157   0102E0  6A22               	clrf	btemp^0,c
 40158   0102E2  0EFD               	movlw	-3
 40159   0102E4  50E3               	movf	plusw1,w,c
 40160   0102E6  2022               	addwfc	btemp^0,w,c
 40161   0102E8  6E22               	movwf	btemp^0,c
 40162   0102EA  0EFD               	movlw	-3
 40163   0102EC  0060  F08B  FFE3   	movff	btemp,plusw1
 40164   0102F2  D02E               	goto	l11969
 40165   0102F4                     l3314:
 40166                           
 40167                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1350:     c = 'i';
 40168   0102F4  0E69               	movlw	105
 40169   0102F6  6E2D               	movwf	(btemp+11)^0,c
 40170                           
 40171                           ;stkvar	_c @ sp[(-8)+6]
 40172   0102F8  0EFE               	movlw	-2
 40173   0102FA  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 40174                           
 40175                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1351:     break;
 40176   010300  D027               	goto	l11969
 40177   010302                     l11963:
 40178                           
 40179                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1353:     c = 0;
 40180                           ;stkvar	_c @ sp[(-8)+6]
 40181   010302  0EFE               	movlw	-2
 40182   010304  6AE3               	clrf	plusw1,c
 40183                           
 40184                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1354:     break;
 40185   010306  D024               	goto	l11969
 40186   010308                     l11967:
 40187                           
 40188                           ;stkvar	_c @ sp[(-8)+6]
 40189   010308  0EFE               	movlw	-2
 40190   01030A  50E3               	movf	plusw1,w,c
 40191                           
 40192                           ; Switch size 1, requested type "simple"
 40193                           ; Number of cases is 11, Range of values is 88 to 122
 40194                           ; switch strategies available:
 40195                           ; Name         Instructions Cycles
 40196                           ; simple_byte           34    18 (average)
 40197                           ;	Chosen strategy is simple_byte
 40198   01030C  0A58               	xorlw	88	; case 88
 40199   01030E  B4D8               	btfsc	status,2,c
 40200   010310  D7F1               	goto	l3314
 40201   010312  0A3C               	xorlw	60	; case 100
 40202   010314  B4D8               	btfsc	status,2,c
 40203   010316  D7EE               	goto	l3314
 40204   010318  0A0C               	xorlw	12	; case 104
 40205   01031A  B4D8               	btfsc	status,2,c
 40206   01031C  D7B0               	goto	l11949
 40207   01031E  0A01               	xorlw	1	; case 105
 40208   010320  B4D8               	btfsc	status,2,c
 40209   010322  D7E8               	goto	l3314
 40210   010324  0A05               	xorlw	5	; case 108
 40211   010326  B4D8               	btfsc	status,2,c
 40212   010328  D7D3               	goto	l11955
 40213   01032A  0A02               	xorlw	2	; case 110
 40214   01032C  B4D8               	btfsc	status,2,c
 40215   01032E  D7E2               	goto	l3314
 40216   010330  0A01               	xorlw	1	; case 111
 40217   010332  B4D8               	btfsc	status,2,c
 40218   010334  D7DF               	goto	l3314
 40219   010336  0A1B               	xorlw	27	; case 116
 40220   010338  B4D8               	btfsc	status,2,c
 40221   01033A  D7CA               	goto	l11955
 40222   01033C  0A01               	xorlw	1	; case 117
 40223   01033E  B4D8               	btfsc	status,2,c
 40224   010340  D7D9               	goto	l3314
 40225   010342  0A0D               	xorlw	13	; case 120
 40226   010344  B4D8               	btfsc	status,2,c
 40227   010346  D7D6               	goto	l3314
 40228   010348  0A02               	xorlw	2	; case 122
 40229   01034A  B4D8               	btfsc	status,2,c
 40230   01034C  D7C1               	goto	l11955
 40231   01034E  D7D9               	goto	l11963
 40232   010350                     l11969:
 40233                           
 40234                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1361:   if (*cp == 'd' || *cp
      +                           == 'i') {
 40235                           ;stkvar	_cp @ sp[(-8)+4]
 40236   010350  50E1               	movf	fsr1l,w,c
 40237   010352  0FFC               	addlw	-4
 40238   010354  6ED9               	movwf	fsr2l,c
 40239   010356  50E2               	movf	fsr1h,w,c
 40240   010358  6EDA               	movwf	fsr2h,c
 40241   01035A  0EFF               	movlw	255
 40242   01035C  22DA               	addwfc	fsr2h,f,c
 40243   01035E  006F FF7B FFF6     	movff	postinc2,tblptrl
 40244   010364  006F FF77 FFF7     	movff	postdec2,tblptrh
 40245   01036A                     	if	0	;tblptru may be non-zero
 40246   01036A                     	endif
 40247   01036A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40248   01036A  0E00               	movlw	low (__pmediumconst shr (0+16))
 40249   01036C  6EF8               	movwf	tblptru,c
 40250   01036E                     	endif
 40251   01036E  0008               	tblrd		*
 40252   010370  50F5               	movf	tablat,w,c
 40253   010372  0A64               	xorlw	100
 40254   010374  B4D8               	btfsc	status,2,c
 40255   010376  D0D2               	goto	l11987
 40256                           
 40257                           ;stkvar	_cp @ sp[(-8)+4]
 40258   010378  50E1               	movf	fsr1l,w,c
 40259   01037A  0FFC               	addlw	-4
 40260   01037C  6ED9               	movwf	fsr2l,c
 40261   01037E  50E2               	movf	fsr1h,w,c
 40262   010380  6EDA               	movwf	fsr2h,c
 40263   010382  0EFF               	movlw	255
 40264   010384  22DA               	addwfc	fsr2h,f,c
 40265   010386  006F FF7B FFF6     	movff	postinc2,tblptrl
 40266   01038C  006F FF77 FFF7     	movff	postdec2,tblptrh
 40267   010392                     	if	0	;tblptru may be non-zero
 40268   010392                     	endif
 40269   010392                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40270   010392  0E00               	movlw	low (__pmediumconst shr (0+16))
 40271   010394  6EF8               	movwf	tblptru,c
 40272   010396                     	endif
 40273   010396  0008               	tblrd		*
 40274   010398  50F5               	movf	tablat,w,c
 40275   01039A  0A69               	xorlw	105
 40276   01039C  B4D8               	btfsc	status,2,c
 40277   01039E  D0BE               	goto	l11987
 40278   0103A0  D100               	goto	l11995
 40279   0103A2                     l11977:
 40280                           
 40281                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1374:      convarg.sint = (vf
      +                          pf_sint_t)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 40282                           ;stkvar	_ap @ sp[(-8)+-6]
 40283   0103A2  0EF2               	movlw	-14
 40284   0103A4  006F FF8F FFD9     	movff	plusw1,fsr2l
 40285   0103AA  0EF3               	movlw	-13
 40286   0103AC  006F FF8F FFDA     	movff	plusw1,fsr2h
 40287   0103B2  0E02               	movlw	2
 40288   0103B4  5EDE               	subwf	postinc2,f,c
 40289   0103B6  0E00               	movlw	0
 40290   0103B8  5ADD               	subwfb	postdec2,f,c
 40291   0103BA  006F FF78  F02C    	movff	postinc2,btemp+10
 40292   0103C0  006F FF74  F02D    	movff	postdec2,btemp+11
 40293   0103C6  0060  F0B3  FFD9   	movff	btemp+10,fsr2l
 40294   0103CC  0060  F0B7  FFDA   	movff	btemp+11,fsr2h
 40295   0103D2  50DF               	movf	indf2,w,c
 40296   0103D4  6E2A               	movwf	(btemp+8)^0,c
 40297   0103D6  0E00               	movlw	0
 40298   0103D8  BE2A               	btfsc	(btemp+8)^0,7,c
 40299   0103DA  0EFF               	movlw	255
 40300   0103DC  6E2B               	movwf	(btemp+9)^0,c
 40301   0103DE  6E2C               	movwf	(btemp+10)^0,c
 40302   0103E0  6E2D               	movwf	(btemp+11)^0,c
 40303   0103E2  D024               	goto	L31
 40304   0103E4                     l11979:
 40305                           
 40306                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1379:      convarg.sint = (vf
      +                          pf_sint_t)(*(long *)__va_arg(*(long **)ap, (long)0));
 40307                           ;stkvar	_ap @ sp[(-8)+-6]
 40308   0103E4  0EF2               	movlw	-14
 40309   0103E6  006F FF8F FFD9     	movff	plusw1,fsr2l
 40310   0103EC  0EF3               	movlw	-13
 40311   0103EE  006F FF8F FFDA     	movff	plusw1,fsr2h
 40312   0103F4  0E04               	movlw	4
 40313   0103F6  5EDE               	subwf	postinc2,f,c
 40314   0103F8  0E00               	movlw	0
 40315   0103FA  5ADD               	subwfb	postdec2,f,c
 40316   0103FC  006F FF78  F02C    	movff	postinc2,btemp+10
 40317   010402  006F FF74  F02D    	movff	postdec2,btemp+11
 40318   010408  0060  F0B3  FFD9   	movff	btemp+10,fsr2l
 40319   01040E  0060  F0B7  FFDA   	movff	btemp+11,fsr2h
 40320   010414  006F FF78  F02A    	movff	postinc2,btemp+8
 40321   01041A  006F FF78  F02B    	movff	postinc2,btemp+9
 40322   010420  006F FF78  F02C    	movff	postinc2,btemp+10
 40323   010426  006F FF78  F02D    	movff	postinc2,btemp+11
 40324   01042C                     L31:
 40325                           
 40326                           ;stkvar	_convarg @ sp[(-8)+0]
 40327   01042C  0EF8               	movlw	-8
 40328   01042E  0060  F0AB  FFE3   	movff	btemp+8,plusw1
 40329   010434  0EF9               	movlw	-7
 40330   010436  0060  F0AF  FFE3   	movff	btemp+9,plusw1
 40331   01043C  0EFA               	movlw	-6
 40332   01043E  0060  F0B3  FFE3   	movff	btemp+10,plusw1
 40333   010444  0EFB               	movlw	-5
 40334   010446  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 40335                           
 40336                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1380:      break;
 40337   01044C  D07B               	goto	l11989
 40338   01044E                     l11981:
 40339                           
 40340                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1389:      convarg.sint = (vf
      +                          pf_sint_t)(*(ptrdiff_t *)__va_arg(*(ptrdiff_t **)ap, (ptrdiff_t)0));
 40341                           ;stkvar	_ap @ sp[(-8)+-6]
 40342   01044E  0EF2               	movlw	-14
 40343   010450  006F FF8F FFD9     	movff	plusw1,fsr2l
 40344   010456  0EF3               	movlw	-13
 40345   010458  006F FF8F FFDA     	movff	plusw1,fsr2h
 40346   01045E  0E02               	movlw	2
 40347   010460  5EDE               	subwf	postinc2,f,c
 40348   010462  0E00               	movlw	0
 40349   010464  5ADD               	subwfb	postdec2,f,c
 40350   010466  006F FF78  F02C    	movff	postinc2,btemp+10
 40351   01046C  006F FF74  F02D    	movff	postdec2,btemp+11
 40352   010472  0060  F0B3  FFD9   	movff	btemp+10,fsr2l
 40353   010478  0060  F0B7  FFDA   	movff	btemp+11,fsr2h
 40354   01047E  006F FF78  F02C    	movff	postinc2,btemp+10
 40355   010484  006F FF74  F02D    	movff	postdec2,btemp+11
 40356                           
 40357                           ;stkvar	_convarg @ sp[(-8)+0]
 40358   01048A  0EF8               	movlw	-8
 40359   01048C  0060  F0B3  FFE3   	movff	btemp+10,plusw1
 40360   010492  0EF9               	movlw	-7
 40361   010494  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 40362   01049A  6A22               	clrf	btemp^0,c
 40363   01049C  BEE3               	btfsc	plusw1,7,c
 40364   01049E  6822               	setf	btemp^0,c
 40365   0104A0  0EFA               	movlw	-6
 40366   0104A2  0060  F08B  FFE3   	movff	btemp,plusw1
 40367   0104A8  0EFB               	movlw	-5
 40368   0104AA  0060  F08B  FFE3   	movff	btemp,plusw1
 40369                           
 40370                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1390:      break;
 40371   0104B0  D049               	goto	l11989
 40372   0104B2                     l11983:
 40373                           
 40374                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1399:      convarg.sint = (vf
      +                          pf_sint_t)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 40375                           ;stkvar	_ap @ sp[(-8)+-6]
 40376   0104B2  0EF2               	movlw	-14
 40377   0104B4  006F FF8F FFD9     	movff	plusw1,fsr2l
 40378   0104BA  0EF3               	movlw	-13
 40379   0104BC  006F FF8F FFDA     	movff	plusw1,fsr2h
 40380   0104C2  0E02               	movlw	2
 40381   0104C4  5EDE               	subwf	postinc2,f,c
 40382   0104C6  0E00               	movlw	0
 40383   0104C8  5ADD               	subwfb	postdec2,f,c
 40384   0104CA  006F FF78  F02C    	movff	postinc2,btemp+10
 40385   0104D0  006F FF74  F02D    	movff	postdec2,btemp+11
 40386   0104D6  0060  F0B3  FFD9   	movff	btemp+10,fsr2l
 40387   0104DC  0060  F0B7  FFDA   	movff	btemp+11,fsr2h
 40388   0104E2  006F FF78  F02C    	movff	postinc2,btemp+10
 40389   0104E8  006F FF74  F02D    	movff	postdec2,btemp+11
 40390   0104EE  502C               	movf	(btemp+10)^0,w,c
 40391   0104F0  6E26               	movwf	(btemp+4)^0,c
 40392   0104F2  502D               	movf	(btemp+11)^0,w,c
 40393   0104F4  6E27               	movwf	(btemp+5)^0,c
 40394   0104F6  6A28               	clrf	(btemp+6)^0,c
 40395   0104F8  6A29               	clrf	(btemp+7)^0,c
 40396                           
 40397                           ;stkvar	_convarg @ sp[(-8)+0]
 40398   0104FA  0EF8               	movlw	-8
 40399   0104FC  0060  F09B  FFE3   	movff	btemp+4,plusw1
 40400   010502  0EF9               	movlw	-7
 40401   010504  0060  F09F  FFE3   	movff	btemp+5,plusw1
 40402   01050A  0EFA               	movlw	-6
 40403   01050C  0060  F0A3  FFE3   	movff	btemp+6,plusw1
 40404   010512  0EFB               	movlw	-5
 40405   010514  0060  F0A7  FFE3   	movff	btemp+7,plusw1
 40406                           
 40407                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1400:      break;
 40408   01051A  D014               	goto	l11989
 40409   01051C                     l11987:
 40410                           
 40411                           ;stkvar	_c @ sp[(-8)+6]
 40412   01051C  0EFE               	movlw	-2
 40413   01051E  50E3               	movf	plusw1,w,c
 40414                           
 40415                           ; Switch size 1, requested type "simple"
 40416                           ; Number of cases is 6, Range of values is 72 to 122
 40417                           ; switch strategies available:
 40418                           ; Name         Instructions Cycles
 40419                           ; simple_byte           19    10 (average)
 40420                           ;	Chosen strategy is simple_byte
 40421   010520  0A48               	xorlw	72	; case 72
 40422   010522  B4D8               	btfsc	status,2,c
 40423   010524  D73E               	goto	l11977
 40424   010526  0A20               	xorlw	32	; case 104
 40425   010528  B4D8               	btfsc	status,2,c
 40426   01052A  D791               	goto	l11981
 40427   01052C  0A01               	xorlw	1	; case 105
 40428   01052E  B4D8               	btfsc	status,2,c
 40429   010530  D78E               	goto	l11981
 40430   010532  0A05               	xorlw	5	; case 108
 40431   010534  B4D8               	btfsc	status,2,c
 40432   010536  D756               	goto	l11979
 40433   010538  0A18               	xorlw	24	; case 116
 40434   01053A  B4D8               	btfsc	status,2,c
 40435   01053C  D788               	goto	l11981
 40436   01053E  0A0E               	xorlw	14	; case 122
 40437   010540  B4D8               	btfsc	status,2,c
 40438   010542  D7B7               	goto	l11983
 40439   010544                     l11989:
 40440                           
 40441                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1406:    *fmt = cp+1;
 40442                           ;stkvar	_cp @ sp[(-8)+4]
 40443   010544  0EFC               	movlw	-4
 40444   010546  50E3               	movf	plusw1,w,c
 40445   010548  0F01               	addlw	1
 40446   01054A  6E2C               	movwf	(btemp+10)^0,c
 40447   01054C  0EFD               	movlw	-3
 40448   01054E  006F FF8C  F02D    	movff	plusw1,btemp+11
 40449   010554  0E00               	movlw	0
 40450   010556  222D               	addwfc	(btemp+11)^0,f,c
 40451                           
 40452                           ;stkvar	_fmt @ sp[(-8)+-4]
 40453   010558  0EF4               	movlw	-12
 40454   01055A  006F FF8F FFD9     	movff	plusw1,fsr2l
 40455   010560  0EF5               	movlw	-11
 40456   010562  006F FF8F FFDA     	movff	plusw1,fsr2h
 40457   010568  0060  F0B3  FFDE   	movff	btemp+10,postinc2
 40458   01056E  0060  F0B7  FFDD   	movff	btemp+11,postdec2
 40459                           
 40460                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1432:    return (int) dtoa(fp
      +                          , convarg.sint);
 40461                           ;stkvar	_convarg @ sp[(-8)+0]
 40462   010574  0EF8               	movlw	-8
 40463   010576  006F FF8F FFE6     	movff	plusw1,postinc1
 40464   01057C  006F FF8F FFE6     	movff	plusw1,postinc1
 40465   010582  006F FF8F FFE6     	movff	plusw1,postinc1
 40466   010588  006F FF8F FFE6     	movff	plusw1,postinc1
 40467                           
 40468                           ;stkvar	_fp @ sp[(-12)+-2]
 40469   01058E  0EF2               	movlw	-14
 40470   010590  006F FF8F FFE6     	movff	plusw1,postinc1
 40471   010596  006F FF8F FFE6     	movff	plusw1,postinc1
 40472   01059C  ECDA  F09E         	call	_dtoa	;wreg free
 40473   0105A0  D3E4               	goto	l3303
 40474   0105A2                     l11995:
 40475                           
 40476                           ;stkvar	_cp @ sp[(-8)+4]
 40477   0105A2  50E1               	movf	fsr1l,w,c
 40478   0105A4  0FFC               	addlw	-4
 40479   0105A6  6ED9               	movwf	fsr2l,c
 40480   0105A8  50E2               	movf	fsr1h,w,c
 40481   0105AA  6EDA               	movwf	fsr2h,c
 40482   0105AC  0EFF               	movlw	255
 40483   0105AE  22DA               	addwfc	fsr2h,f,c
 40484   0105B0  006F FF7B FFF6     	movff	postinc2,tblptrl
 40485   0105B6  006F FF77 FFF7     	movff	postdec2,tblptrh
 40486   0105BC                     	if	0	;tblptru may be non-zero
 40487   0105BC                     	endif
 40488   0105BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40489   0105BC  0E00               	movlw	low (__pmediumconst shr (0+16))
 40490   0105BE  6EF8               	movwf	tblptru,c
 40491   0105C0                     	endif
 40492   0105C0  0008               	tblrd		*
 40493   0105C2  50F5               	movf	tablat,w,c
 40494   0105C4  0A78               	xorlw	120
 40495   0105C6  B4D8               	btfsc	status,2,c
 40496   0105C8  D0F7               	goto	l12017
 40497                           
 40498                           ;stkvar	_cp @ sp[(-8)+4]
 40499   0105CA  50E1               	movf	fsr1l,w,c
 40500   0105CC  0FFC               	addlw	-4
 40501   0105CE  6ED9               	movwf	fsr2l,c
 40502   0105D0  50E2               	movf	fsr1h,w,c
 40503   0105D2  6EDA               	movwf	fsr2h,c
 40504   0105D4  0EFF               	movlw	255
 40505   0105D6  22DA               	addwfc	fsr2h,f,c
 40506   0105D8  006F FF7B FFF6     	movff	postinc2,tblptrl
 40507   0105DE  006F FF77 FFF7     	movff	postdec2,tblptrh
 40508   0105E4                     	if	0	;tblptru may be non-zero
 40509   0105E4                     	endif
 40510   0105E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40511   0105E4  0E00               	movlw	low (__pmediumconst shr (0+16))
 40512   0105E6  6EF8               	movwf	tblptru,c
 40513   0105E8                     	endif
 40514   0105E8  0008               	tblrd		*
 40515   0105EA  50F5               	movf	tablat,w,c
 40516   0105EC  0A58               	xorlw	88
 40517   0105EE  B4D8               	btfsc	status,2,c
 40518   0105F0  D0E3               	goto	l12017
 40519                           
 40520                           ;stkvar	_cp @ sp[(-8)+4]
 40521   0105F2  50E1               	movf	fsr1l,w,c
 40522   0105F4  0FFC               	addlw	-4
 40523   0105F6  6ED9               	movwf	fsr2l,c
 40524   0105F8  50E2               	movf	fsr1h,w,c
 40525   0105FA  6EDA               	movwf	fsr2h,c
 40526   0105FC  0EFF               	movlw	255
 40527   0105FE  22DA               	addwfc	fsr2h,f,c
 40528   010600  006F FF7B FFF6     	movff	postinc2,tblptrl
 40529   010606  006F FF77 FFF7     	movff	postdec2,tblptrh
 40530   01060C                     	if	0	;tblptru may be non-zero
 40531   01060C                     	endif
 40532   01060C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40533   01060C  0E00               	movlw	low (__pmediumconst shr (0+16))
 40534   01060E  6EF8               	movwf	tblptru,c
 40535   010610                     	endif
 40536   010610  0008               	tblrd		*
 40537   010612  50F5               	movf	tablat,w,c
 40538   010614  0A6F               	xorlw	111
 40539   010616  B4D8               	btfsc	status,2,c
 40540   010618  D0CF               	goto	l12017
 40541                           
 40542                           ;stkvar	_cp @ sp[(-8)+4]
 40543   01061A  50E1               	movf	fsr1l,w,c
 40544   01061C  0FFC               	addlw	-4
 40545   01061E  6ED9               	movwf	fsr2l,c
 40546   010620  50E2               	movf	fsr1h,w,c
 40547   010622  6EDA               	movwf	fsr2h,c
 40548   010624  0EFF               	movlw	255
 40549   010626  22DA               	addwfc	fsr2h,f,c
 40550   010628  006F FF7B FFF6     	movff	postinc2,tblptrl
 40551   01062E  006F FF77 FFF7     	movff	postdec2,tblptrh
 40552   010634                     	if	0	;tblptru may be non-zero
 40553   010634                     	endif
 40554   010634                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40555   010634  0E00               	movlw	low (__pmediumconst shr (0+16))
 40556   010636  6EF8               	movwf	tblptru,c
 40557   010638                     	endif
 40558   010638  0008               	tblrd		*
 40559   01063A  50F5               	movf	tablat,w,c
 40560   01063C  0A75               	xorlw	117
 40561   01063E  B4D8               	btfsc	status,2,c
 40562   010640  D0BB               	goto	l12017
 40563   010642  D15B               	goto	l12037
 40564   010644                     l12007:
 40565                           
 40566                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1465:      convarg.uint = (vf
      +                          pf_uint_t)(unsigned char)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)
      +                          0));
 40567                           ;stkvar	_ap @ sp[(-8)+-6]
 40568   010644  0EF2               	movlw	-14
 40569   010646  006F FF8F FFD9     	movff	plusw1,fsr2l
 40570   01064C  0EF3               	movlw	-13
 40571   01064E  006F FF8F FFDA     	movff	plusw1,fsr2h
 40572   010654  0E02               	movlw	2
 40573   010656  5EDE               	subwf	postinc2,f,c
 40574   010658  0E00               	movlw	0
 40575   01065A  5ADD               	subwfb	postdec2,f,c
 40576   01065C  006F FF78  F02C    	movff	postinc2,btemp+10
 40577   010662  006F FF74  F02D    	movff	postdec2,btemp+11
 40578   010668  0060  F0B3  FFD9   	movff	btemp+10,fsr2l
 40579   01066E  0060  F0B7  FFDA   	movff	btemp+11,fsr2h
 40580   010674  50DF               	movf	indf2,w,c
 40581   010676  6E2D               	movwf	(btemp+11)^0,c
 40582   010678  C02D  F026         	movff	btemp+11,btemp+4
 40583   01067C  6A27               	clrf	(btemp+5)^0,c
 40584   01067E  D089               	goto	L33
 40585   010680                     l12009:
 40586                           
 40587                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1470:      convarg.uint = (vf
      +                          pf_uint_t)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 40588                           ;stkvar	_ap @ sp[(-8)+-6]
 40589   010680  0EF2               	movlw	-14
 40590   010682  006F FF8F FFD9     	movff	plusw1,fsr2l
 40591   010688  0EF3               	movlw	-13
 40592   01068A  006F FF8F FFDA     	movff	plusw1,fsr2h
 40593   010690  0E04               	movlw	4
 40594   010692  5EDE               	subwf	postinc2,f,c
 40595   010694  0E00               	movlw	0
 40596   010696  5ADD               	subwfb	postdec2,f,c
 40597   010698  006F FF78  F02C    	movff	postinc2,btemp+10
 40598   01069E  006F FF74  F02D    	movff	postdec2,btemp+11
 40599   0106A4  0060  F0B3  FFD9   	movff	btemp+10,fsr2l
 40600   0106AA  0060  F0B7  FFDA   	movff	btemp+11,fsr2h
 40601   0106B0  006F FF78  F02A    	movff	postinc2,btemp+8
 40602   0106B6  006F FF78  F02B    	movff	postinc2,btemp+9
 40603   0106BC  006F FF78  F02C    	movff	postinc2,btemp+10
 40604   0106C2  006F FF78  F02D    	movff	postinc2,btemp+11
 40605                           
 40606                           ;stkvar	_convarg @ sp[(-8)+0]
 40607   0106C8  0EF8               	movlw	-8
 40608   0106CA  0060  F0AB  FFE3   	movff	btemp+8,plusw1
 40609   0106D0  0EF9               	movlw	-7
 40610   0106D2  0060  F0AF  FFE3   	movff	btemp+9,plusw1
 40611   0106D8  0EFA               	movlw	-6
 40612   0106DA  0060  F0B3  FFE3   	movff	btemp+10,plusw1
 40613   0106E0  0EFB               	movlw	-5
 40614   0106E2  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 40615                           
 40616                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1471:      break;
 40617   0106E8  D07B               	goto	l12019
 40618   0106EA                     l12011:
 40619                           
 40620                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1480:      convarg.uint = (vf
      +                          pf_uint_t)(*(ptrdiff_t *)__va_arg(*(ptrdiff_t **)ap, (ptrdiff_t)0));
 40621                           ;stkvar	_ap @ sp[(-8)+-6]
 40622   0106EA  0EF2               	movlw	-14
 40623   0106EC  006F FF8F FFD9     	movff	plusw1,fsr2l
 40624   0106F2  0EF3               	movlw	-13
 40625   0106F4  006F FF8F FFDA     	movff	plusw1,fsr2h
 40626   0106FA  0E02               	movlw	2
 40627   0106FC  5EDE               	subwf	postinc2,f,c
 40628   0106FE  0E00               	movlw	0
 40629   010700  5ADD               	subwfb	postdec2,f,c
 40630   010702  006F FF78  F02C    	movff	postinc2,btemp+10
 40631   010708  006F FF74  F02D    	movff	postdec2,btemp+11
 40632   01070E  0060  F0B3  FFD9   	movff	btemp+10,fsr2l
 40633   010714  0060  F0B7  FFDA   	movff	btemp+11,fsr2h
 40634   01071A  006F FF78  F02C    	movff	postinc2,btemp+10
 40635   010720  006F FF74  F02D    	movff	postdec2,btemp+11
 40636                           
 40637                           ;stkvar	_convarg @ sp[(-8)+0]
 40638   010726  0EF8               	movlw	-8
 40639   010728  0060  F0B3  FFE3   	movff	btemp+10,plusw1
 40640   01072E  0EF9               	movlw	-7
 40641   010730  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 40642   010736  6A22               	clrf	btemp^0,c
 40643   010738  BEE3               	btfsc	plusw1,7,c
 40644   01073A  6822               	setf	btemp^0,c
 40645   01073C  0EFA               	movlw	-6
 40646   01073E  0060  F08B  FFE3   	movff	btemp,plusw1
 40647   010744  0EFB               	movlw	-5
 40648   010746  0060  F08B  FFE3   	movff	btemp,plusw1
 40649                           
 40650                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1481:      break;
 40651   01074C  D049               	goto	l12019
 40652   01074E                     l12013:
 40653                           
 40654                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1490:      convarg.uint = (vf
      +                          pf_uint_t)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 40655                           ;stkvar	_ap @ sp[(-8)+-6]
 40656   01074E  0EF2               	movlw	-14
 40657   010750  006F FF8F FFD9     	movff	plusw1,fsr2l
 40658   010756  0EF3               	movlw	-13
 40659   010758  006F FF8F FFDA     	movff	plusw1,fsr2h
 40660   01075E  0E02               	movlw	2
 40661   010760  5EDE               	subwf	postinc2,f,c
 40662   010762  0E00               	movlw	0
 40663   010764  5ADD               	subwfb	postdec2,f,c
 40664   010766  006F FF78  F02C    	movff	postinc2,btemp+10
 40665   01076C  006F FF74  F02D    	movff	postdec2,btemp+11
 40666   010772  0060  F0B3  FFD9   	movff	btemp+10,fsr2l
 40667   010778  0060  F0B7  FFDA   	movff	btemp+11,fsr2h
 40668   01077E  006F FF78  F02C    	movff	postinc2,btemp+10
 40669   010784  006F FF74  F02D    	movff	postdec2,btemp+11
 40670   01078A  502C               	movf	(btemp+10)^0,w,c
 40671   01078C  6E26               	movwf	(btemp+4)^0,c
 40672   01078E  502D               	movf	(btemp+11)^0,w,c
 40673   010790  6E27               	movwf	(btemp+5)^0,c
 40674   010792                     L33:
 40675   010792  6A28               	clrf	(btemp+6)^0,c
 40676   010794  6A29               	clrf	(btemp+7)^0,c
 40677                           
 40678                           ;stkvar	_convarg @ sp[(-8)+0]
 40679   010796  0EF8               	movlw	-8
 40680   010798  0060  F09B  FFE3   	movff	btemp+4,plusw1
 40681   01079E  0EF9               	movlw	-7
 40682   0107A0  0060  F09F  FFE3   	movff	btemp+5,plusw1
 40683   0107A6  0EFA               	movlw	-6
 40684   0107A8  0060  F0A3  FFE3   	movff	btemp+6,plusw1
 40685   0107AE  0EFB               	movlw	-5
 40686   0107B0  0060  F0A7  FFE3   	movff	btemp+7,plusw1
 40687                           
 40688                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1491:      break;
 40689   0107B6  D014               	goto	l12019
 40690   0107B8                     l12017:
 40691                           
 40692                           ;stkvar	_c @ sp[(-8)+6]
 40693   0107B8  0EFE               	movlw	-2
 40694   0107BA  50E3               	movf	plusw1,w,c
 40695                           
 40696                           ; Switch size 1, requested type "simple"
 40697                           ; Number of cases is 6, Range of values is 72 to 122
 40698                           ; switch strategies available:
 40699                           ; Name         Instructions Cycles
 40700                           ; simple_byte           19    10 (average)
 40701                           ;	Chosen strategy is simple_byte
 40702   0107BC  0A48               	xorlw	72	; case 72
 40703   0107BE  B4D8               	btfsc	status,2,c
 40704   0107C0  D741               	goto	l12007
 40705   0107C2  0A20               	xorlw	32	; case 104
 40706   0107C4  B4D8               	btfsc	status,2,c
 40707   0107C6  D7C3               	goto	l12013
 40708   0107C8  0A01               	xorlw	1	; case 105
 40709   0107CA  B4D8               	btfsc	status,2,c
 40710   0107CC  D7C0               	goto	l12013
 40711   0107CE  0A05               	xorlw	5	; case 108
 40712   0107D0  B4D8               	btfsc	status,2,c
 40713   0107D2  D756               	goto	l12009
 40714   0107D4  0A18               	xorlw	24	; case 116
 40715   0107D6  B4D8               	btfsc	status,2,c
 40716   0107D8  D788               	goto	l12011
 40717   0107DA  0A0E               	xorlw	14	; case 122
 40718   0107DC  B4D8               	btfsc	status,2,c
 40719   0107DE  D7B7               	goto	l12013
 40720   0107E0                     l12019:
 40721                           
 40722                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1497:    *fmt = cp+1;
 40723                           ;stkvar	_cp @ sp[(-8)+4]
 40724   0107E0  0EFC               	movlw	-4
 40725   0107E2  50E3               	movf	plusw1,w,c
 40726   0107E4  0F01               	addlw	1
 40727   0107E6  6E2C               	movwf	(btemp+10)^0,c
 40728   0107E8  0EFD               	movlw	-3
 40729   0107EA  006F FF8C  F02D    	movff	plusw1,btemp+11
 40730   0107F0  0E00               	movlw	0
 40731   0107F2  222D               	addwfc	(btemp+11)^0,f,c
 40732                           
 40733                           ;stkvar	_fmt @ sp[(-8)+-4]
 40734   0107F4  0EF4               	movlw	-12
 40735   0107F6  006F FF8F FFD9     	movff	plusw1,fsr2l
 40736   0107FC  0EF5               	movlw	-11
 40737   0107FE  006F FF8F FFDA     	movff	plusw1,fsr2h
 40738   010804  0060  F0B3  FFDE   	movff	btemp+10,postinc2
 40739   01080A  0060  F0B7  FFDD   	movff	btemp+11,postdec2
 40740                           
 40741                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1498:    switch (*cp) {
 40742   010810  D057               	goto	l12035
 40743   010812                     l12021:
 40744                           
 40745                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1519:      return (int) otoa(
      +                          fp, convarg.uint);
 40746                           ;stkvar	_convarg @ sp[(-8)+0]
 40747   010812  0EF8               	movlw	-8
 40748   010814  006F FF8F FFE6     	movff	plusw1,postinc1
 40749   01081A  006F FF8F FFE6     	movff	plusw1,postinc1
 40750   010820  006F FF8F FFE6     	movff	plusw1,postinc1
 40751   010826  006F FF8F FFE6     	movff	plusw1,postinc1
 40752                           
 40753                           ;stkvar	_fp @ sp[(-12)+-2]
 40754   01082C  0EF2               	movlw	-14
 40755   01082E  006F FF8F FFE6     	movff	plusw1,postinc1
 40756   010834  006F FF8F FFE6     	movff	plusw1,postinc1
 40757   01083A  EC34  F0A6         	call	_otoa	;wreg free
 40758   01083E  D295               	goto	l3303
 40759   010840                     l12025:
 40760                           
 40761                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1542:      return (int) utoa(
      +                          fp, convarg.uint);
 40762                           ;stkvar	_convarg @ sp[(-8)+0]
 40763   010840  0EF8               	movlw	-8
 40764   010842  006F FF8F FFE6     	movff	plusw1,postinc1
 40765   010848  006F FF8F FFE6     	movff	plusw1,postinc1
 40766   01084E  006F FF8F FFE6     	movff	plusw1,postinc1
 40767   010854  006F FF8F FFE6     	movff	plusw1,postinc1
 40768                           
 40769                           ;stkvar	_fp @ sp[(-12)+-2]
 40770   01085A  0EF2               	movlw	-14
 40771   01085C  006F FF8F FFE6     	movff	plusw1,postinc1
 40772   010862  006F FF8F FFE6     	movff	plusw1,postinc1
 40773   010868  EC3C  F0A7         	call	_utoa	;wreg free
 40774   01086C  D27E               	goto	l3303
 40775   01086E                     l12029:
 40776                           
 40777                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1586:      return (int) xtoa(
      +                          fp,convarg.uint,*cp);
 40778                           ;stkvar	_cp @ sp[(-8)+4]
 40779   01086E  50E1               	movf	fsr1l,w,c
 40780   010870  0FFC               	addlw	-4
 40781   010872  6ED9               	movwf	fsr2l,c
 40782   010874  50E2               	movf	fsr1h,w,c
 40783   010876  6EDA               	movwf	fsr2h,c
 40784   010878  0EFF               	movlw	255
 40785   01087A  22DA               	addwfc	fsr2h,f,c
 40786   01087C  006F FF7B FFF6     	movff	postinc2,tblptrl
 40787   010882  006F FF77 FFF7     	movff	postdec2,tblptrh
 40788   010888                     	if	0	;tblptru may be non-zero
 40789   010888                     	endif
 40790   010888                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40791   010888  0E00               	movlw	low (__pmediumconst shr (0+16))
 40792   01088A  6EF8               	movwf	tblptru,c
 40793   01088C                     	endif
 40794   01088C  0008               	tblrd		*
 40795   01088E  50F5               	movf	tablat,w,c
 40796   010890  6EE6               	movwf	postinc1,c
 40797                           
 40798                           ;stkvar	_convarg @ sp[(-9)+0]
 40799   010892  0EF7               	movlw	-9
 40800   010894  006F FF8F FFE6     	movff	plusw1,postinc1
 40801   01089A  006F FF8F FFE6     	movff	plusw1,postinc1
 40802   0108A0  006F FF8F FFE6     	movff	plusw1,postinc1
 40803   0108A6  006F FF8F FFE6     	movff	plusw1,postinc1
 40804                           
 40805                           ;stkvar	_fp @ sp[(-13)+-2]
 40806   0108AC  0EF1               	movlw	-15
 40807   0108AE  006F FF8F FFE6     	movff	plusw1,postinc1
 40808   0108B4  006F FF8F FFE6     	movff	plusw1,postinc1
 40809   0108BA  ECE2  F09B         	call	_xtoa	;wreg free
 40810   0108BE  D255               	goto	l3303
 40811   0108C0                     l12035:
 40812                           
 40813                           ;stkvar	_cp @ sp[(-8)+4]
 40814   0108C0  50E1               	movf	fsr1l,w,c
 40815   0108C2  0FFC               	addlw	-4
 40816   0108C4  6ED9               	movwf	fsr2l,c
 40817   0108C6  50E2               	movf	fsr1h,w,c
 40818   0108C8  6EDA               	movwf	fsr2h,c
 40819   0108CA  0EFF               	movlw	255
 40820   0108CC  22DA               	addwfc	fsr2h,f,c
 40821   0108CE  006F FF7B FFF6     	movff	postinc2,tblptrl
 40822   0108D4  006F FF77 FFF7     	movff	postdec2,tblptrh
 40823   0108DA                     	if	0	;tblptru may be non-zero
 40824   0108DA                     	endif
 40825   0108DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40826   0108DA  0E00               	movlw	low (__pmediumconst shr (0+16))
 40827   0108DC  6EF8               	movwf	tblptru,c
 40828   0108DE                     	endif
 40829   0108DE  0008               	tblrd		*
 40830   0108E0  50F5               	movf	tablat,w,c
 40831                           
 40832                           ; Switch size 1, requested type "simple"
 40833                           ; Number of cases is 4, Range of values is 88 to 120
 40834                           ; switch strategies available:
 40835                           ; Name         Instructions Cycles
 40836                           ; simple_byte           13     7 (average)
 40837                           ;	Chosen strategy is simple_byte
 40838   0108E2  0A58               	xorlw	88	; case 88
 40839   0108E4  B4D8               	btfsc	status,2,c
 40840   0108E6  D7C3               	goto	l12029
 40841   0108E8  0A37               	xorlw	55	; case 111
 40842   0108EA  B4D8               	btfsc	status,2,c
 40843   0108EC  D792               	goto	l12021
 40844   0108EE  0A1A               	xorlw	26	; case 117
 40845   0108F0  B4D8               	btfsc	status,2,c
 40846   0108F2  D7A6               	goto	l12025
 40847   0108F4  0A0D               	xorlw	13	; case 120
 40848   0108F6  B4D8               	btfsc	status,2,c
 40849   0108F8  D7BA               	goto	l12029
 40850   0108FA                     l12037:
 40851                           
 40852                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1595:   if (*cp == 'n') {
 40853                           ;stkvar	_cp @ sp[(-8)+4]
 40854   0108FA  50E1               	movf	fsr1l,w,c
 40855   0108FC  0FFC               	addlw	-4
 40856   0108FE  6ED9               	movwf	fsr2l,c
 40857   010900  50E2               	movf	fsr1h,w,c
 40858   010902  6EDA               	movwf	fsr2h,c
 40859   010904  0EFF               	movlw	255
 40860   010906  22DA               	addwfc	fsr2h,f,c
 40861   010908  006F FF7B FFF6     	movff	postinc2,tblptrl
 40862   01090E  006F FF77 FFF7     	movff	postdec2,tblptrh
 40863   010914                     	if	0	;tblptru may be non-zero
 40864   010914                     	endif
 40865   010914                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40866   010914  0E00               	movlw	low (__pmediumconst shr (0+16))
 40867   010916  6EF8               	movwf	tblptru,c
 40868   010918                     	endif
 40869   010918  0008               	tblrd		*
 40870   01091A  50F5               	movf	tablat,w,c
 40871   01091C  0A6E               	xorlw	110
 40872   01091E  B4D8               	btfsc	status,2,c
 40873   010920  D07C               	goto	l12055
 40874   010922  D0A9               	goto	l12063
 40875   010924                     l12045:
 40876                           
 40877                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1608:      *(*(signed char* *
      +                          )__va_arg(*(signed char* **)ap, (signed char*)0)) = (signed char) nout;
 40878                           ;stkvar	_ap @ sp[(-8)+-6]
 40879   010924  0EF2               	movlw	-14
 40880   010926  006F FF8F FFD9     	movff	plusw1,fsr2l
 40881   01092C  0EF3               	movlw	-13
 40882   01092E  006F FF8F FFDA     	movff	plusw1,fsr2h
 40883   010934  0E02               	movlw	2
 40884   010936  5EDE               	subwf	postinc2,f,c
 40885   010938  0E00               	movlw	0
 40886   01093A  5ADD               	subwfb	postdec2,f,c
 40887   01093C  006F FF78  F02C    	movff	postinc2,btemp+10
 40888   010942  006F FF74  F02D    	movff	postdec2,btemp+11
 40889   010948  0060  F0B3  FFD9   	movff	btemp+10,fsr2l
 40890   01094E  0060  F0B7  FFDA   	movff	btemp+11,fsr2h
 40891   010954  006F FF7B FFE9     	movff	postinc2,fsr0l
 40892   01095A  006F FF7B FFEA     	movff	postinc2,fsr0h
 40893   010960  0060  F6FF  FFEF   	movff	_nout,indf0
 40894                           
 40895                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1609:      break;
 40896   010966  D06D               	goto	l12057
 40897   010968                     l12047:
 40898                           
 40899                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1613:      *(*(long* *)__va_a
      +                          rg(*(long* **)ap, (long*)0)) = (long) nout;
 40900   010968  C1BF  F02A         	movff	_nout,btemp+8
 40901   01096C  C1C0  F02B         	movff	_nout+1,btemp+9
 40902   010970  0E00               	movlw	0
 40903   010972  BE2B               	btfsc	(btemp+9)^0,7,c
 40904   010974  0EFF               	movlw	255
 40905   010976  6E2C               	movwf	(btemp+10)^0,c
 40906   010978  6E2D               	movwf	(btemp+11)^0,c
 40907                           
 40908                           ;stkvar	_ap @ sp[(-8)+-6]
 40909   01097A  0EF2               	movlw	-14
 40910   01097C  006F FF8F FFD9     	movff	plusw1,fsr2l
 40911   010982  0EF3               	movlw	-13
 40912   010984  006F FF8F FFDA     	movff	plusw1,fsr2h
 40913   01098A  0E02               	movlw	2
 40914   01098C  5EDE               	subwf	postinc2,f,c
 40915   01098E  0E00               	movlw	0
 40916   010990  5ADD               	subwfb	postdec2,f,c
 40917   010992  006F FF78  F028    	movff	postinc2,btemp+6
 40918   010998  006F FF74  F029    	movff	postdec2,btemp+7
 40919   01099E  0060  F0A3  FFD9   	movff	btemp+6,fsr2l
 40920   0109A4  0060  F0A7  FFDA   	movff	btemp+7,fsr2h
 40921   0109AA  006F FF7B FFE9     	movff	postinc2,fsr0l
 40922   0109B0  006F FF7B FFEA     	movff	postinc2,fsr0h
 40923   0109B6  0060  F0AB  FFEE   	movff	btemp+8,postinc0
 40924   0109BC  0060  F0AF  FFEE   	movff	btemp+9,postinc0
 40925   0109C2  0060  F0B3  FFEE   	movff	btemp+10,postinc0
 40926   0109C8  0060  F0B7  FFEF   	movff	btemp+11,indf0
 40927                           
 40928                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1614:      break;
 40929   0109CE  D039               	goto	l12057
 40930   0109D0                     l12049:
 40931                           
 40932                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1633:      *(*(size_t* *)__va
      +                          _arg(*(size_t* **)ap, (size_t*)0)) = (size_t) nout;
 40933                           ;stkvar	_ap @ sp[(-8)+-6]
 40934                           
 40935                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1624:      break;
 40936                           
 40937                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1623:      *(*(ptrdiff_t* *)_
      +                          _va_arg(*(ptrdiff_t* **)ap, (ptrdiff_t*)0)) = (ptrdiff_t) nout;
 40938                           ;stkvar	_ap @ sp[(-8)+-6]
 40939   0109D0  0EF2               	movlw	-14
 40940   0109D2  006F FF8F FFD9     	movff	plusw1,fsr2l
 40941   0109D8  0EF3               	movlw	-13
 40942   0109DA  006F FF8F FFDA     	movff	plusw1,fsr2h
 40943   0109E0  0E02               	movlw	2
 40944   0109E2  5EDE               	subwf	postinc2,f,c
 40945   0109E4  0E00               	movlw	0
 40946   0109E6  5ADD               	subwfb	postdec2,f,c
 40947   0109E8  006F FF78  F02C    	movff	postinc2,btemp+10
 40948   0109EE  006F FF74  F02D    	movff	postdec2,btemp+11
 40949   0109F4  0060  F0B3  FFD9   	movff	btemp+10,fsr2l
 40950   0109FA  0060  F0B7  FFDA   	movff	btemp+11,fsr2h
 40951   010A00  006F FF7B FFE9     	movff	postinc2,fsr0l
 40952   010A06  006F FF7B FFEA     	movff	postinc2,fsr0h
 40953   010A0C  0060  F6FF  FFEE   	movff	_nout,postinc0
 40954   010A12  0060  F703  FFEF   	movff	_nout+1,indf0
 40955                           
 40956                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1634:      break;
 40957   010A18  D014               	goto	l12057
 40958   010A1A                     l12055:
 40959                           
 40960                           ;stkvar	_c @ sp[(-8)+6]
 40961   010A1A  0EFE               	movlw	-2
 40962   010A1C  50E3               	movf	plusw1,w,c
 40963                           
 40964                           ; Switch size 1, requested type "simple"
 40965                           ; Number of cases is 6, Range of values is 72 to 122
 40966                           ; switch strategies available:
 40967                           ; Name         Instructions Cycles
 40968                           ; simple_byte           19    10 (average)
 40969                           ;	Chosen strategy is simple_byte
 40970   010A1E  0A48               	xorlw	72	; case 72
 40971   010A20  B4D8               	btfsc	status,2,c
 40972   010A22  D780               	goto	l12045
 40973   010A24  0A20               	xorlw	32	; case 104
 40974   010A26  B4D8               	btfsc	status,2,c
 40975   010A28  D7D3               	goto	l12049
 40976   010A2A  0A01               	xorlw	1	; case 105
 40977   010A2C  B4D8               	btfsc	status,2,c
 40978   010A2E  D7D0               	goto	l12049
 40979   010A30  0A05               	xorlw	5	; case 108
 40980   010A32  B4D8               	btfsc	status,2,c
 40981   010A34  D799               	goto	l12047
 40982   010A36  0A18               	xorlw	24	; case 116
 40983   010A38  B4D8               	btfsc	status,2,c
 40984   010A3A  D7CA               	goto	l12049
 40985   010A3C  0A0E               	xorlw	14	; case 122
 40986   010A3E  B4D8               	btfsc	status,2,c
 40987   010A40  D7C7               	goto	l12049
 40988   010A42                     l12057:
 40989                           
 40990                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1640:    *fmt = cp+1;
 40991                           ;stkvar	_cp @ sp[(-8)+4]
 40992   010A42  0EFC               	movlw	-4
 40993   010A44  50E3               	movf	plusw1,w,c
 40994   010A46  0F01               	addlw	1
 40995   010A48  6E2C               	movwf	(btemp+10)^0,c
 40996   010A4A  0EFD               	movlw	-3
 40997   010A4C  006F FF8C  F02D    	movff	plusw1,btemp+11
 40998   010A52  0E00               	movlw	0
 40999   010A54  222D               	addwfc	(btemp+11)^0,f,c
 41000                           
 41001                           ;stkvar	_fmt @ sp[(-8)+-4]
 41002   010A56  0EF4               	movlw	-12
 41003   010A58  006F FF8F FFD9     	movff	plusw1,fsr2l
 41004   010A5E  0EF5               	movlw	-11
 41005   010A60  006F FF8F FFDA     	movff	plusw1,fsr2h
 41006   010A66  0060  F0B3  FFDE   	movff	btemp+10,postinc2
 41007   010A6C  0060  F0B7  FFDD   	movff	btemp+11,postdec2
 41008   010A72                     l12059:
 41009                           
 41010                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1641:    return (int) 0;
 41011   010A72  0E00               	movlw	0
 41012   010A74  D140               	goto	L34
 41013   010A76                     l12063:
 41014                           
 41015                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1648:         if ((*fmt)[0] =
      +                          = 'p') {
 41016                           ;stkvar	_fmt @ sp[(-8)+-4]
 41017   010A76  0EF4               	movlw	-12
 41018   010A78  006F FF8F FFD9     	movff	plusw1,fsr2l
 41019   010A7E  0EF5               	movlw	-11
 41020   010A80  006F FF8F FFDA     	movff	plusw1,fsr2h
 41021   010A86  006F FF7B FFF6     	movff	postinc2,tblptrl
 41022   010A8C  006F FF77 FFF7     	movff	postdec2,tblptrh
 41023   010A92                     	if	0	;tblptru may be non-zero
 41024   010A92                     	endif
 41025   010A92                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 41026   010A92  0E00               	movlw	low (__pmediumconst shr (0+16))
 41027   010A94  6EF8               	movwf	tblptru,c
 41028   010A96                     	endif
 41029   010A96  0008               	tblrd		*
 41030   010A98  50F5               	movf	tablat,w,c
 41031   010A9A  0A70               	xorlw	112
 41032   010A9C  A4D8               	btfss	status,2,c
 41033   010A9E  D047               	goto	l12071
 41034                           
 41035                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1649:             ++*fmt;
 41036                           ;stkvar	_fmt @ sp[(-8)+-4]
 41037   010AA0  0EF4               	movlw	-12
 41038   010AA2  006F FF8F FFD9     	movff	plusw1,fsr2l
 41039   010AA8  0EF5               	movlw	-11
 41040   010AAA  006F FF8F FFDA     	movff	plusw1,fsr2h
 41041   010AB0  2ADE               	incf	postinc2,f,c
 41042   010AB2  0E00               	movlw	0
 41043   010AB4  22DD               	addwfc	postdec2,f,c
 41044                           
 41045                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1650:             return (int
      +                          ) xtoa(fp,(vfpf_uint_t)(uintptr_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)),'x');
 41046   010AB6  0E78               	movlw	120
 41047   010AB8  6EE6               	movwf	postinc1,c
 41048                           
 41049                           ;stkvar	_ap @ sp[(-9)+-6]
 41050   010ABA  0EF1               	movlw	-15
 41051   010ABC  006F FF8F FFD9     	movff	plusw1,fsr2l
 41052   010AC2  0EF2               	movlw	-14
 41053   010AC4  006F FF8F FFDA     	movff	plusw1,fsr2h
 41054   010ACA  0E02               	movlw	2
 41055   010ACC  5EDE               	subwf	postinc2,f,c
 41056   010ACE  0E00               	movlw	0
 41057   010AD0  5ADD               	subwfb	postdec2,f,c
 41058   010AD2  006F FF78  F02C    	movff	postinc2,btemp+10
 41059   010AD8  006F FF74  F02D    	movff	postdec2,btemp+11
 41060   010ADE  0060  F0B3  FFD9   	movff	btemp+10,fsr2l
 41061   010AE4  0060  F0B7  FFDA   	movff	btemp+11,fsr2h
 41062   010AEA  006F FF78  F02C    	movff	postinc2,btemp+10
 41063   010AF0  006F FF74  F02D    	movff	postdec2,btemp+11
 41064   010AF6  502C               	movf	(btemp+10)^0,w,c
 41065   010AF8  6E26               	movwf	(btemp+4)^0,c
 41066   010AFA  502D               	movf	(btemp+11)^0,w,c
 41067   010AFC  6E27               	movwf	(btemp+5)^0,c
 41068   010AFE  6A28               	clrf	(btemp+6)^0,c
 41069   010B00  6A29               	clrf	(btemp+7)^0,c
 41070   010B02  0060  F09B  FFE6   	movff	btemp+4,postinc1
 41071   010B08  0060  F09F  FFE6   	movff	btemp+5,postinc1
 41072   010B0E  0060  F0A3  FFE6   	movff	btemp+6,postinc1
 41073   010B14  0060  F0A7  FFE6   	movff	btemp+7,postinc1
 41074                           
 41075                           ;stkvar	_fp @ sp[(-13)+-2]
 41076   010B1A  0EF1               	movlw	-15
 41077   010B1C  006F FF8F FFE6     	movff	plusw1,postinc1
 41078   010B22  006F FF8F FFE6     	movff	plusw1,postinc1
 41079   010B28  ECE2  F09B         	call	_xtoa	;wreg free
 41080   010B2C  D11E               	goto	l3303
 41081   010B2E                     l12071:
 41082                           
 41083                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1656:   done = 0;
 41084                           ;stkvar	_done @ sp[(-8)+7]
 41085   010B2E  0EFF               	movlw	-1
 41086   010B30  6AE3               	clrf	plusw1,c
 41087                           
 41088                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1657:   if ((*fmt)[0] == 's')
      +                           {
 41089                           ;stkvar	_fmt @ sp[(-8)+-4]
 41090   010B32  0EF4               	movlw	-12
 41091   010B34  006F FF8F FFD9     	movff	plusw1,fsr2l
 41092   010B3A  0EF5               	movlw	-11
 41093   010B3C  006F FF8F FFDA     	movff	plusw1,fsr2h
 41094   010B42  006F FF7B FFF6     	movff	postinc2,tblptrl
 41095   010B48  006F FF77 FFF7     	movff	postdec2,tblptrh
 41096   010B4E                     	if	0	;tblptru may be non-zero
 41097   010B4E                     	endif
 41098   010B4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 41099   010B4E  0E00               	movlw	low (__pmediumconst shr (0+16))
 41100   010B50  6EF8               	movwf	tblptru,c
 41101   010B52                     	endif
 41102   010B52  0008               	tblrd		*
 41103   010B54  50F5               	movf	tablat,w,c
 41104   010B56  0A73               	xorlw	115
 41105   010B58  A4D8               	btfss	status,2,c
 41106   010B5A  D00F               	goto	l12079
 41107                           
 41108                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1658:    ++*fmt;
 41109                           ;stkvar	_fmt @ sp[(-8)+-4]
 41110   010B5C  0EF4               	movlw	-12
 41111   010B5E  006F FF8F FFD9     	movff	plusw1,fsr2l
 41112   010B64  0EF5               	movlw	-11
 41113   010B66  006F FF8F FFDA     	movff	plusw1,fsr2h
 41114   010B6C  2ADE               	incf	postinc2,f,c
 41115   010B6E  0E00               	movlw	0
 41116   010B70  22DD               	addwfc	postdec2,f,c
 41117                           
 41118                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1659:    done = 1;
 41119                           ;stkvar	_done @ sp[(-8)+7]
 41120   010B72  0EFF               	movlw	-1
 41121   010B74  6AE3               	clrf	plusw1,c
 41122   010B76  2AE3               	incf	plusw1,f,c
 41123                           
 41124                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1660:   }
 41125   010B78  D05E               	goto	l12089
 41126   010B7A                     l12079:
 41127                           
 41128                           ;stkvar	_fmt @ sp[(-8)+-4]
 41129   010B7A  0EF4               	movlw	-12
 41130   010B7C  006F FF8F FFD9     	movff	plusw1,fsr2l
 41131   010B82  0EF5               	movlw	-11
 41132   010B84  006F FF8F FFDA     	movff	plusw1,fsr2h
 41133   010B8A  006F FF7B FFF6     	movff	postinc2,tblptrl
 41134   010B90  006F FF77 FFF7     	movff	postdec2,tblptrh
 41135   010B96                     	if	0	;tblptru may be non-zero
 41136   010B96                     	endif
 41137   010B96                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 41138   010B96  0E00               	movlw	low (__pmediumconst shr (0+16))
 41139   010B98  6EF8               	movwf	tblptru,c
 41140   010B9A                     	endif
 41141   010B9A  0008               	tblrd		*
 41142   010B9C  50F5               	movf	tablat,w,c
 41143   010B9E  0A6C               	xorlw	108
 41144   010BA0  A4D8               	btfss	status,2,c
 41145   010BA2  D049               	goto	l12089
 41146                           
 41147                           ;stkvar	_fmt @ sp[(-8)+-4]
 41148   010BA4  0EF4               	movlw	-12
 41149   010BA6  006F FF8F FFD9     	movff	plusw1,fsr2l
 41150   010BAC  0EF5               	movlw	-11
 41151   010BAE  006F FF8F FFDA     	movff	plusw1,fsr2h
 41152   010BB4  006F FF78  F02C    	movff	postinc2,btemp+10
 41153   010BBA  006F FF74  F02D    	movff	postdec2,btemp+11
 41154   010BC0  0E01               	movlw	1
 41155   010BC2  262C               	addwf	(btemp+10)^0,f,c
 41156   010BC4  0E00               	movlw	0
 41157   010BC6  222D               	addwfc	(btemp+11)^0,f,c
 41158   010BC8  0060  F0B3  FFF6   	movff	btemp+10,tblptrl
 41159   010BCE  0060  F0B7  FFF7   	movff	btemp+11,tblptrh
 41160   010BD4                     	if	0	;tblptru may be non-zero
 41161   010BD4                     	endif
 41162   010BD4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 41163   010BD4  0E00               	movlw	low (__pmediumconst shr (0+16))
 41164   010BD6  6EF8               	movwf	tblptru,c
 41165   010BD8                     	endif
 41166   010BD8  0008               	tblrd		*
 41167   010BDA  50F5               	movf	tablat,w,c
 41168   010BDC  0A6C               	xorlw	108
 41169   010BDE  A4D8               	btfss	status,2,c
 41170   010BE0  D02A               	goto	l12089
 41171                           
 41172                           ;stkvar	_fmt @ sp[(-8)+-4]
 41173   010BE2  0EF4               	movlw	-12
 41174   010BE4  006F FF8F FFD9     	movff	plusw1,fsr2l
 41175   010BEA  0EF5               	movlw	-11
 41176   010BEC  006F FF8F FFDA     	movff	plusw1,fsr2h
 41177   010BF2  006F FF78  F02C    	movff	postinc2,btemp+10
 41178   010BF8  006F FF74  F02D    	movff	postdec2,btemp+11
 41179   010BFE  0E02               	movlw	2
 41180   010C00  262C               	addwf	(btemp+10)^0,f,c
 41181   010C02  0E00               	movlw	0
 41182   010C04  222D               	addwfc	(btemp+11)^0,f,c
 41183   010C06  0060  F0B3  FFF6   	movff	btemp+10,tblptrl
 41184   010C0C  0060  F0B7  FFF7   	movff	btemp+11,tblptrh
 41185   010C12                     	if	0	;tblptru may be non-zero
 41186   010C12                     	endif
 41187   010C12                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 41188   010C12  0E00               	movlw	low (__pmediumconst shr (0+16))
 41189   010C14  6EF8               	movwf	tblptru,c
 41190   010C16                     	endif
 41191   010C16  0008               	tblrd		*
 41192   010C18  50F5               	movf	tablat,w,c
 41193   010C1A  0A73               	xorlw	115
 41194   010C1C  A4D8               	btfss	status,2,c
 41195   010C1E  D00B               	goto	l12089
 41196                           
 41197                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1662:    *fmt += 3;
 41198                           ;stkvar	_fmt @ sp[(-8)+-4]
 41199   010C20  0EF4               	movlw	-12
 41200   010C22  006F FF8F FFD9     	movff	plusw1,fsr2l
 41201   010C28  0EF5               	movlw	-11
 41202   010C2A  006F FF8F FFDA     	movff	plusw1,fsr2h
 41203   010C30  0E03               	movlw	3
 41204   010C32  26DE               	addwf	postinc2,f,c
 41205   010C34  D79C               	goto	L35
 41206   010C36                     l12089:
 41207                           
 41208                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1665:   if (done) {
 41209                           ;stkvar	_done @ sp[(-8)+7]
 41210   010C36  0EFF               	movlw	-1
 41211   010C38  50E3               	movf	plusw1,w,c
 41212   010C3A  B4D8               	btfsc	status,2,c
 41213   010C3C  D02E               	goto	l12095
 41214                           
 41215                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1682:    return (int) stoa(fp
      +                          , (*(char * *)__va_arg(*(char * **)ap, (char *)0)));
 41216                           ;stkvar	_ap @ sp[(-8)+-6]
 41217   010C3E  0EF2               	movlw	-14
 41218   010C40  006F FF8F FFD9     	movff	plusw1,fsr2l
 41219   010C46  0EF3               	movlw	-13
 41220   010C48  006F FF8F FFDA     	movff	plusw1,fsr2h
 41221   010C4E  0E02               	movlw	2
 41222   010C50  5EDE               	subwf	postinc2,f,c
 41223   010C52  0E00               	movlw	0
 41224   010C54  5ADD               	subwfb	postdec2,f,c
 41225   010C56  006F FF78  F02C    	movff	postinc2,btemp+10
 41226   010C5C  006F FF74  F02D    	movff	postdec2,btemp+11
 41227   010C62  0060  F0B3  FFD9   	movff	btemp+10,fsr2l
 41228   010C68  0060  F0B7  FFDA   	movff	btemp+11,fsr2h
 41229   010C6E  006F FF78  F02C    	movff	postinc2,btemp+10
 41230   010C74  006F FF74  F02D    	movff	postdec2,btemp+11
 41231   010C7A  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 41232   010C80  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 41233                           
 41234                           ;stkvar	_fp @ sp[(-10)+-2]
 41235   010C86  0EF4               	movlw	-12
 41236   010C88  006F FF8F FFE6     	movff	plusw1,postinc1
 41237   010C8E  006F FF8F FFE6     	movff	plusw1,postinc1
 41238   010C94  EC41  F0A0         	call	_stoa	;wreg free
 41239   010C98  D068               	goto	l3303
 41240   010C9A                     l12095:
 41241                           
 41242                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1798:         if ((*fmt)[0] =
      +                          = '%') {
 41243                           ;stkvar	_fmt @ sp[(-8)+-4]
 41244   010C9A  0EF4               	movlw	-12
 41245   010C9C  006F FF8F FFD9     	movff	plusw1,fsr2l
 41246   010CA2  0EF5               	movlw	-11
 41247   010CA4  006F FF8F FFDA     	movff	plusw1,fsr2h
 41248   010CAA  006F FF7B FFF6     	movff	postinc2,tblptrl
 41249   010CB0  006F FF77 FFF7     	movff	postdec2,tblptrh
 41250   010CB6                     	if	0	;tblptru may be non-zero
 41251   010CB6                     	endif
 41252   010CB6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 41253   010CB6  0E00               	movlw	low (__pmediumconst shr (0+16))
 41254   010CB8  6EF8               	movwf	tblptru,c
 41255   010CBA                     	endif
 41256   010CBA  0008               	tblrd		*
 41257   010CBC  50F5               	movf	tablat,w,c
 41258   010CBE  0A25               	xorlw	37
 41259   010CC0  A4D8               	btfss	status,2,c
 41260   010CC2  D01D               	goto	l12105
 41261                           
 41262                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1799:             ++*fmt;
 41263                           ;stkvar	_fmt @ sp[(-8)+-4]
 41264   010CC4  0EF4               	movlw	-12
 41265   010CC6  006F FF8F FFD9     	movff	plusw1,fsr2l
 41266   010CCC  0EF5               	movlw	-11
 41267   010CCE  006F FF8F FFDA     	movff	plusw1,fsr2h
 41268   010CD4  2ADE               	incf	postinc2,f,c
 41269   010CD6  0E00               	movlw	0
 41270   010CD8  22DD               	addwfc	postdec2,f,c
 41271                           
 41272                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1800:             fputc((int)
      +                          '%', fp);
 41273                           ;stkvar	_fp @ sp[(-8)+-2]
 41274   010CDA  0EF6               	movlw	-10
 41275   010CDC  006F FF8F FFE6     	movff	plusw1,postinc1
 41276   010CE2  006F FF8F FFE6     	movff	plusw1,postinc1
 41277   010CE8  0E25               	movlw	37
 41278   010CEA  6EE6               	movwf	postinc1,c
 41279   010CEC  0E00               	movlw	0
 41280   010CEE  6EE6               	movwf	postinc1,c
 41281   010CF0  ECE7  F0AD         	call	_fputc	;wreg free
 41282   010CF4                     l12101:
 41283                           
 41284                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1801:             return (int
      +                          ) 1;
 41285   010CF4  0E01               	movlw	1
 41286   010CF6                     L34:
 41287   010CF6  6E22               	movwf	btemp^0,c
 41288   010CF8  0E00               	movlw	0
 41289   010CFA  6E23               	movwf	(btemp+1)^0,c
 41290   010CFC  D036               	goto	l3303
 41291   010CFE                     l12105:
 41292                           
 41293                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1806:         ++*fmt;
 41294                           ;stkvar	_fmt @ sp[(-8)+-4]
 41295   010CFE  0EF4               	movlw	-12
 41296   010D00  006F FF8F FFD9     	movff	plusw1,fsr2l
 41297   010D06  0EF5               	movlw	-11
 41298   010D08  006F FF8F FFDA     	movff	plusw1,fsr2h
 41299   010D0E  2ADE               	incf	postinc2,f,c
 41300   010D10  0E00               	movlw	0
 41301   010D12  22DD               	addwfc	postdec2,f,c
 41302   010D14  D6AE               	goto	l12059
 41303   010D16                     l12111:
 41304                           
 41305                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1811:     fputc((int)(*fmt)[0
      +                          ], fp);
 41306                           ;stkvar	_fp @ sp[(-8)+-2]
 41307   010D16  0EF6               	movlw	-10
 41308   010D18  006F FF8F FFE6     	movff	plusw1,postinc1
 41309   010D1E  006F FF8F FFE6     	movff	plusw1,postinc1
 41310                           
 41311                           ;stkvar	_fmt @ sp[(-10)+-4]
 41312   010D24  0EF2               	movlw	-14
 41313   010D26  006F FF8F FFD9     	movff	plusw1,fsr2l
 41314   010D2C  0EF3               	movlw	-13
 41315   010D2E  006F FF8F FFDA     	movff	plusw1,fsr2h
 41316   010D34  006F FF7B FFF6     	movff	postinc2,tblptrl
 41317   010D3A  006F FF77 FFF7     	movff	postdec2,tblptrh
 41318   010D40                     	if	0	;tblptru may be non-zero
 41319   010D40                     	endif
 41320   010D40                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 41321   010D40  0E00               	movlw	low (__pmediumconst shr (0+16))
 41322   010D42  6EF8               	movwf	tblptru,c
 41323   010D44                     	endif
 41324   010D44  0008               	tblrd		*
 41325   010D46  50F5               	movf	tablat,w,c
 41326   010D48  6EE6               	movwf	postinc1,c
 41327   010D4A  0E00               	movlw	0
 41328   010D4C  6EE6               	movwf	postinc1,c
 41329   010D4E  ECE7  F0AD         	call	_fputc	;wreg free
 41330                           
 41331                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1812:     ++*fmt;
 41332                           ;stkvar	_fmt @ sp[(-8)+-4]
 41333   010D52  0EF4               	movlw	-12
 41334   010D54  006F FF8F FFD9     	movff	plusw1,fsr2l
 41335   010D5A  0EF5               	movlw	-11
 41336   010D5C  006F FF8F FFDA     	movff	plusw1,fsr2h
 41337   010D62  2ADE               	incf	postinc2,f,c
 41338   010D64  0E00               	movlw	0
 41339   010D66  22DD               	addwfc	postdec2,f,c
 41340   010D68  D7C5               	goto	l12101
 41341   010D6A                     l3303:
 41342                           
 41343                           ; _vfpfcnvrt: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 41344   010D6A  0EF2               	movlw	242
 41345   010D6C  26E1               	addwf	fsr1l,f,c
 41346   010D6E  0EFF               	movlw	255
 41347   010D70  22E2               	addwfc	fsr1h,f,c
 41348   010D72  0012               	return		;funcret
 41349   010D74                     __end_of_vfpfcnvrt:
 41350                           	callstack 0
 41351                           
 41352 ;; *************** function _xtoa *****************
 41353 ;; Defined at:
 41354 ;;		line 1052 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c"
 41355 ;; Parameters:    Size  Location     Type
 41356 ;;  fp              2  [STACK] PTR struct _IO_FILE
 41357 ;;		 -> f(11), NULL(0), 
 41358 ;;  d               4  [STACK] unsigned long 
 41359 ;;  x               1  [STACK] unsigned char 
 41360 ;; Auto vars:     Size  Location     Type
 41361 ;;  i               2  [STACK] int 
 41362 ;;  w               2  [STACK] int 
 41363 ;;  p               2  [STACK] int 
 41364 ;;  c               1  [STACK] unsigned char 
 41365 ;;  d_nonzero       1  [STACK] _Bool 
 41366 ;;  a               1  [STACK] unsigned char 
 41367 ;; Return value:  Size  Location     Type
 41368 ;;                  2  [STACK] int 
 41369 ;; Registers used:
 41370 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
 41371 ;; Tracked objects:
 41372 ;;		On entry : 0/1
 41373 ;;		On exit  : 0/0
 41374 ;;		Unchanged: 0/0
 41375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41380 ;;Total ram usage:        0 bytes
 41381 ;; Hardware stack levels used: 1
 41382 ;; Hardware stack levels required when called: 8
 41383 ;; This function calls:
 41384 ;;		_pad
 41385 ;; This function is called by:
 41386 ;;		_vfpfcnvrt
 41387 ;; This function uses a reentrant model
 41388 ;;
 41389                           
 41390                           	psect	text97
 41391   0137C4                     __ptext97:
 41392                           	callstack 0
 41393   0137C4                     _xtoa:
 41394                           	callstack 0
 41395                           
 41396                           ; autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 41397   0137C4  0E0B               	movlw	11
 41398   0137C6  26E1               	addwf	fsr1l,f,c
 41399   0137C8  0E00               	movlw	0
 41400   0137CA  22E2               	addwfc	fsr1h,f,c
 41401                           
 41402                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1076:     if (!(prec < 0)) {
 41403                           
 41404                           ;incstack = 0
 41405   0137CC  0101               	movlb	1	; () banked
 41406   0137CE  AFC4               	btfss	(_prec+1)& (0+255),7,b
 41407                           
 41408                           ; BSR set to: 1
 41409                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1077:         flags &= ~(1 <<
      +                           1);
 41410   0137D0  93C5               	bcf	_flags& (0+255),1,b
 41411                           
 41412                           ; BSR set to: 1
 41413                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1080:     p = (0 <= prec) ? p
      +                          rec : 1;
 41414   0137D2  AFC4               	btfss	(_prec+1)& (0+255),7,b
 41415   0137D4  D00D               	goto	l11821
 41416                           
 41417                           ; BSR set to: 1
 41418   0137D6  0E01               	movlw	1
 41419   0137D8  6E2C               	movwf	(btemp+10)^0,c
 41420   0137DA  0E00               	movlw	0
 41421   0137DC  6E2D               	movwf	(btemp+11)^0,c
 41422                           
 41423                           ;stkvar	_p @ sp[(-11)+6]
 41424   0137DE  0EFB               	movlw	-5
 41425   0137E0  0060  F0B3  FFE3   	movff	btemp+10,plusw1
 41426   0137E6  0EFC               	movlw	-4
 41427   0137E8  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 41428   0137EE  D008               	goto	l3260
 41429   0137F0                     l11821:
 41430                           
 41431                           ; BSR set to: 1
 41432                           ;stkvar	_p @ sp[(-11)+6]
 41433   0137F0  0EFB               	movlw	-5
 41434   0137F2  0060  F70F  FFE3   	movff	_prec,plusw1
 41435   0137F8  0EFC               	movlw	-4
 41436   0137FA  0060  F713  FFE3   	movff	_prec+1,plusw1
 41437   013800                     l3260:
 41438                           
 41439                           ; BSR set to: 1
 41440                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1082:     w = width;
 41441                           ;stkvar	_w @ sp[(-11)+4]
 41442   013800  0EF9               	movlw	-7
 41443   013802  0060  F707  FFE3   	movff	_width,plusw1
 41444   013808  0EFA               	movlw	-6
 41445   01380A  0060  F70B  FFE3   	movff	_width+1,plusw1
 41446                           
 41447                           ; BSR set to: 1
 41448                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1084:  d_nonzero = d != 0;
 41449                           ;stkvar	_d @ sp[(-11)+-6]
 41450   013810  0EEF               	movlw	-17
 41451   013812  50E3               	movf	plusw1,w,c
 41452   013814  E10A               	bnz	u8391
 41453   013816  0EF0               	movlw	-16
 41454   013818  50E3               	movf	plusw1,w,c
 41455   01381A  E107               	bnz	u8391
 41456   01381C  0EF1               	movlw	-15
 41457   01381E  50E3               	movf	plusw1,w,c
 41458   013820  E104               	bnz	u8391
 41459   013822  0EF2               	movlw	-14
 41460   013824  50E3               	movf	plusw1,w,c
 41461   013826  B4D8               	btfsc	status,2,c
 41462   013828  D003               	goto	u8390
 41463   01382A                     u8391:
 41464   01382A  6A2D               	clrf	(btemp+11)^0,c
 41465   01382C  2A2D               	incf	(btemp+11)^0,f,c
 41466   01382E  D001               	goto	u8408
 41467   013830                     u8390:
 41468   013830  6A2D               	clrf	(btemp+11)^0,c
 41469   013832                     u8408:
 41470                           
 41471                           ;stkvar	_d_nonzero @ sp[(-11)+9]
 41472   013832  0EFE               	movlw	-2
 41473   013834  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 41474                           
 41475                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1085:     if ((flags & (1 << 
      +                          4)) && d_nonzero) {
 41476   01383A  0101               	movlb	1	; () banked
 41477   01383C  A9C5               	btfss	_flags& (0+255),4,b
 41478   01383E  D00F               	goto	l11831
 41479                           
 41480                           ; BSR set to: 1
 41481                           ;stkvar	_d_nonzero @ sp[(-11)+9]
 41482   013840  0EFE               	movlw	-2
 41483   013842  50E3               	movf	plusw1,w,c
 41484   013844  B4D8               	btfsc	status,2,c
 41485   013846  D00B               	goto	l11831
 41486                           
 41487                           ; BSR set to: 1
 41488                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1086:         w -= 2;
 41489                           ;stkvar	_w @ sp[(-11)+4]
 41490   013848  50E1               	movf	fsr1l,w,c
 41491   01384A  0FF9               	addlw	-7
 41492   01384C  6ED9               	movwf	fsr2l,c
 41493   01384E  50E2               	movf	fsr1h,w,c
 41494   013850  6EDA               	movwf	fsr2h,c
 41495   013852  0EFF               	movlw	255
 41496   013854  22DA               	addwfc	fsr2h,f,c
 41497   013856  0EFE               	movlw	254
 41498   013858  26DE               	addwf	postinc2,f,c
 41499   01385A  0EFF               	movlw	255
 41500   01385C  22DD               	addwfc	postdec2,f,c
 41501   01385E                     l11831:
 41502                           
 41503                           ; BSR set to: 1
 41504                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1091:  a = x == 'x' ? 'a' : '
      +                          A';
 41505                           ;stkvar	_x @ sp[(-11)+-7]
 41506   01385E  0EEE               	movlw	-18
 41507   013860  006F FF8C  F022    	movff	plusw1,btemp
 41508   013866  0E78               	movlw	120
 41509   013868  1822               	xorwf	btemp^0,w,c
 41510   01386A  B4D8               	btfsc	status,2,c
 41511   01386C  D002               	goto	l11835
 41512                           
 41513                           ; BSR set to: 1
 41514   01386E  0E41               	movlw	65
 41515   013870  D001               	goto	L36
 41516   013872                     l11835:
 41517                           
 41518                           ; BSR set to: 1
 41519   013872  0E61               	movlw	97
 41520   013874                     L36:
 41521   013874  6E2C               	movwf	(btemp+10)^0,c
 41522   013876  0E00               	movlw	0
 41523   013878  6E2D               	movwf	(btemp+11)^0,c
 41524                           
 41525                           ;stkvar	_xtoa$5788 @ sp[(-11)+0]
 41526   01387A  0EF5               	movlw	-11
 41527   01387C  0060  F0B3  FFE3   	movff	btemp+10,plusw1
 41528   013882  0EF6               	movlw	-10
 41529   013884  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 41530                           
 41531                           ; BSR set to: 1
 41532                           ;stkvar	_xtoa$5788 @ sp[(-11)+0]
 41533                           ;stkvar	_a @ sp[(-11)+10]
 41534   01388A  0EF5               	movlw	-11
 41535   01388C  006F FF8C  F022    	movff	plusw1,btemp
 41536   013892  0EFF               	movlw	-1
 41537   013894  0060  F08B  FFE3   	movff	btemp,plusw1
 41538                           
 41539                           ; BSR set to: 1
 41540                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1095:     i = sizeof(dbuf) - 
      +                          1;
 41541   01389A  0E1F               	movlw	31
 41542   01389C  6E2C               	movwf	(btemp+10)^0,c
 41543   01389E  0E00               	movlw	0
 41544   0138A0  6E2D               	movwf	(btemp+11)^0,c
 41545                           
 41546                           ;stkvar	_i @ sp[(-11)+2]
 41547   0138A2  0EF7               	movlw	-9
 41548   0138A4  0060  F0B3  FFE3   	movff	btemp+10,plusw1
 41549   0138AA  0EF8               	movlw	-8
 41550   0138AC  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 41551                           
 41552                           ; BSR set to: 1
 41553                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1096:     dbuf[i] = '\0';
 41554   0138B2  6BE5               	clrf	(_dbuf+31)& (0+255),b
 41555                           
 41556                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1097:     while (!(i < 2) && 
      +                          (d != 0
 41557   0138B4  D070               	goto	l11859
 41558   0138B6                     l11843:
 41559                           
 41560                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1106:     )) {;/opt/microchip
      +                          /xc8/v3.00/pic/sources/c99/common/doprnt.c: 1107:         --i;
 41561                           ;stkvar	_i @ sp[(-11)+2]
 41562   0138B6  50E1               	movf	fsr1l,w,c
 41563   0138B8  0FF7               	addlw	-9
 41564   0138BA  6ED9               	movwf	fsr2l,c
 41565   0138BC  50E2               	movf	fsr1h,w,c
 41566   0138BE  6EDA               	movwf	fsr2h,c
 41567   0138C0  0EFF               	movlw	255
 41568   0138C2  22DA               	addwfc	fsr2h,f,c
 41569   0138C4  06DE               	decf	postinc2,f,c
 41570   0138C6  0E00               	movlw	0
 41571   0138C8  5ADD               	subwfb	postdec2,f,c
 41572                           
 41573                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1108:         c = d & 0x0f;
 41574                           ;stkvar	_d @ sp[(-11)+-6]
 41575   0138CA  0EEF               	movlw	-17
 41576   0138CC  006F FF8C  F02D    	movff	plusw1,btemp+11
 41577   0138D2  0E0F               	movlw	15
 41578   0138D4  162D               	andwf	(btemp+11)^0,f,c
 41579                           
 41580                           ;stkvar	_c @ sp[(-11)+8]
 41581   0138D6  0EFD               	movlw	-3
 41582   0138D8  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 41583                           
 41584                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1109:   if (c < 10) {
 41585                           ;stkvar	_c @ sp[(-11)+8]
 41586   0138DE  0EFD               	movlw	-3
 41587   0138E0  006F FF8C  F022    	movff	plusw1,btemp
 41588   0138E6  0E0A               	movlw	10
 41589   0138E8  6022               	cpfslt	btemp^0,c
 41590   0138EA  D00B               	goto	l11851
 41591                           
 41592                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1110:    c += '0';
 41593                           ;stkvar	_c @ sp[(-11)+8]
 41594   0138EC  0EFD               	movlw	-3
 41595   0138EE  006F FF8C  F022    	movff	plusw1,btemp
 41596   0138F4  0E30               	movlw	48
 41597   0138F6  2622               	addwf	btemp^0,f,c
 41598   0138F8  0EFD               	movlw	-3
 41599   0138FA  0060  F08B  FFE3   	movff	btemp,plusw1
 41600                           
 41601                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1111:   }
 41602   013900  D00F               	goto	l3269
 41603   013902                     l11851:
 41604                           
 41605                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1114:    c += a - 10;
 41606   013902  0EF6               	movlw	246
 41607   013904  6E2D               	movwf	(btemp+11)^0,c
 41608                           
 41609                           ;stkvar	_a @ sp[(-11)+10]
 41610   013906  0EFF               	movlw	-1
 41611   013908  50E3               	movf	plusw1,w,c
 41612   01390A  242D               	addwf	(btemp+11)^0,w,c
 41613   01390C  6E2C               	movwf	(btemp+10)^0,c
 41614                           
 41615                           ;stkvar	_c @ sp[(-11)+8]
 41616   01390E  50E1               	movf	fsr1l,w,c
 41617   013910  0FFD               	addlw	-3
 41618   013912  6ED9               	movwf	fsr2l,c
 41619   013914  50E2               	movf	fsr1h,w,c
 41620   013916  6EDA               	movwf	fsr2h,c
 41621   013918  0EFF               	movlw	255
 41622   01391A  22DA               	addwfc	fsr2h,f,c
 41623   01391C  502C               	movf	(btemp+10)^0,w,c
 41624   01391E  26DF               	addwf	indf2,f,c
 41625   013920                     l3269:
 41626                           
 41627                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1121:   dbuf[i] = c;
 41628                           ;stkvar	_c @ sp[(-11)+8]
 41629                           ;stkvar	_i @ sp[(-11)+2]
 41630   013920  0EF7               	movlw	-9
 41631   013922  006F FF8C  F02C    	movff	plusw1,btemp+10
 41632   013928  0EF8               	movlw	-8
 41633   01392A  006F FF8C  F02D    	movff	plusw1,btemp+11
 41634   013930  0EC6               	movlw	low _dbuf
 41635   013932  242C               	addwf	(btemp+10)^0,w,c
 41636   013934  6ED9               	movwf	fsr2l,c
 41637   013936  0E01               	movlw	high _dbuf
 41638   013938  202D               	addwfc	(btemp+11)^0,w,c
 41639   01393A  6EDA               	movwf	fsr2h,c
 41640   01393C  0EFD               	movlw	-3
 41641   01393E  006F FF8F FFDF     	movff	plusw1,indf2
 41642                           
 41643                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1123:         --p;
 41644                           ;stkvar	_p @ sp[(-11)+6]
 41645   013944  50E1               	movf	fsr1l,w,c
 41646   013946  0FFB               	addlw	-5
 41647   013948  6ED9               	movwf	fsr2l,c
 41648   01394A  50E2               	movf	fsr1h,w,c
 41649   01394C  6EDA               	movwf	fsr2h,c
 41650   01394E  0EFF               	movlw	255
 41651   013950  22DA               	addwfc	fsr2h,f,c
 41652   013952  06DE               	decf	postinc2,f,c
 41653   013954  0E00               	movlw	0
 41654   013956  5ADD               	subwfb	postdec2,f,c
 41655                           
 41656                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1127:         --w;
 41657                           ;stkvar	_w @ sp[(-11)+4]
 41658   013958  50E1               	movf	fsr1l,w,c
 41659   01395A  0FF9               	addlw	-7
 41660   01395C  6ED9               	movwf	fsr2l,c
 41661   01395E  50E2               	movf	fsr1h,w,c
 41662   013960  6EDA               	movwf	fsr2h,c
 41663   013962  0EFF               	movlw	255
 41664   013964  22DA               	addwfc	fsr2h,f,c
 41665   013966  06DE               	decf	postinc2,f,c
 41666   013968  0E00               	movlw	0
 41667   01396A  5ADD               	subwfb	postdec2,f,c
 41668                           
 41669                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1128:         d = d >> 4;
 41670   01396C  0E04               	movlw	4
 41671   01396E  6E2D               	movwf	(btemp+11)^0,c
 41672                           
 41673                           ;stkvar	_d @ sp[(-11)+-6]
 41674   013970  50E1               	movf	fsr1l,w,c
 41675   013972  0FEF               	addlw	-17
 41676   013974  6ED9               	movwf	fsr2l,c
 41677   013976  50E2               	movf	fsr1h,w,c
 41678   013978  6EDA               	movwf	fsr2h,c
 41679   01397A  0EFF               	movlw	255
 41680   01397C  22DA               	addwfc	fsr2h,f,c
 41681   01397E  282D               	incf	(btemp+11)^0,w,c
 41682   013980  52DE               	movf	postinc2,f,c
 41683   013982  D007               	goto	u8450
 41684   013984                     u8455:
 41685   013984  52DE               	movf	postinc2,f,c
 41686   013986  52DE               	movf	postinc2,f,c
 41687   013988  90D8               	bcf	status,0,c
 41688   01398A  32DD               	rrcf	postdec2,f,c
 41689   01398C  32DD               	rrcf	postdec2,f,c
 41690   01398E  32DD               	rrcf	postdec2,f,c
 41691   013990  32DE               	rrcf	postinc2,f,c
 41692   013992                     u8450:
 41693   013992  2EE8               	decfsz	wreg,f,c
 41694   013994  D7F7               	goto	u8455
 41695   013996                     l11859:
 41696                           
 41697                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1097:     while (!(i < 2) && 
      +                          (d != 0
 41698                           ;stkvar	_i @ sp[(-11)+2]
 41699   013996  0EF8               	movlw	-8
 41700   013998  BEE3               	btfsc	plusw1,7,c
 41701   01399A  D02F               	goto	u8500
 41702   01399C  0EF8               	movlw	-8
 41703   01399E  50E3               	movf	plusw1,w,c
 41704   0139A0  E108               	bnz	u8460
 41705   0139A2  0EF7               	movlw	-9
 41706   0139A4  006F FF8C  F022    	movff	plusw1,btemp
 41707   0139AA  0E02               	movlw	2
 41708   0139AC  5E22               	subwf	btemp^0,f,c
 41709   0139AE  A0D8               	btfss	status,0,c
 41710   0139B0  D024               	goto	u8500
 41711   0139B2                     u8460:
 41712                           
 41713                           ;stkvar	_d @ sp[(-11)+-6]
 41714   0139B2  0EEF               	movlw	-17
 41715   0139B4  50E3               	movf	plusw1,w,c
 41716   0139B6  E109               	bnz	u8471
 41717   0139B8  0EF0               	movlw	-16
 41718   0139BA  50E3               	movf	plusw1,w,c
 41719   0139BC  E106               	bnz	u8471
 41720   0139BE  0EF1               	movlw	-15
 41721   0139C0  50E3               	movf	plusw1,w,c
 41722   0139C2  E103               	bnz	u8471
 41723   0139C4  0EF2               	movlw	-14
 41724   0139C6  50E3               	movf	plusw1,w,c
 41725   0139C8  A4D8               	btfss	status,2,c
 41726   0139CA                     u8471:
 41727   0139CA  D775               	goto	l11843
 41728                           
 41729                           ;stkvar	_p @ sp[(-11)+6]
 41730   0139CC  0EFC               	movlw	-4
 41731   0139CE  BEE3               	btfsc	plusw1,7,c
 41732   0139D0  D007               	goto	u8480
 41733   0139D2  0EFC               	movlw	-4
 41734   0139D4  50E3               	movf	plusw1,w,c
 41735   0139D6  E103               	bnz	u8481
 41736   0139D8  0EFB               	movlw	-5
 41737   0139DA  04E3               	decf	plusw1,w,c
 41738   0139DC  B0D8               	btfsc	status,0,c
 41739   0139DE                     u8481:
 41740   0139DE  D76B               	goto	l11843
 41741   0139E0                     u8480:
 41742                           
 41743                           ;stkvar	_w @ sp[(-11)+4]
 41744   0139E0  0EFA               	movlw	-6
 41745   0139E2  BEE3               	btfsc	plusw1,7,c
 41746   0139E4  D00A               	goto	u8500
 41747   0139E6  0EFA               	movlw	-6
 41748   0139E8  50E3               	movf	plusw1,w,c
 41749   0139EA  E104               	bnz	u8490
 41750   0139EC  0EF9               	movlw	-7
 41751   0139EE  04E3               	decf	plusw1,w,c
 41752   0139F0  A0D8               	btfss	status,0,c
 41753   0139F2  D003               	goto	u8500
 41754   0139F4                     u8490:
 41755   0139F4  0101               	movlb	1	; () banked
 41756   0139F6  B3C5               	btfsc	_flags& (0+255),1,b
 41757   0139F8  D75E               	goto	l11843
 41758   0139FA                     u8500:
 41759                           
 41760                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1133:     if ((flags & (1 << 
      +                          4)) && d_nonzero
 41761   0139FA  0101               	movlb	1	; () banked
 41762   0139FC  A9C5               	btfss	_flags& (0+255),4,b
 41763   0139FE  D03E               	goto	l11879
 41764                           
 41765                           ; BSR set to: 1
 41766                           ;stkvar	_d_nonzero @ sp[(-11)+9]
 41767   013A00  0EFE               	movlw	-2
 41768   013A02  50E3               	movf	plusw1,w,c
 41769   013A04  B4D8               	btfsc	status,2,c
 41770   013A06  D03A               	goto	l11879
 41771                           
 41772                           ; BSR set to: 1
 41773   013A08  51C3               	movf	_prec& (0+255),w,b
 41774   013A0A  11C4               	iorwf	(_prec+1)& (0+255),w,b
 41775   013A0C  B4D8               	btfsc	status,2,c
 41776   013A0E  D036               	goto	l11879
 41777                           
 41778                           ; BSR set to: 1
 41779                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1137:     ) {;/opt/microchip/
      +                          xc8/v3.00/pic/sources/c99/common/doprnt.c: 1138:         --i;
 41780                           ;stkvar	_i @ sp[(-11)+2]
 41781   013A10  50E1               	movf	fsr1l,w,c
 41782   013A12  0FF7               	addlw	-9
 41783   013A14  6ED9               	movwf	fsr2l,c
 41784   013A16  50E2               	movf	fsr1h,w,c
 41785   013A18  6EDA               	movwf	fsr2h,c
 41786   013A1A  0EFF               	movlw	255
 41787   013A1C  22DA               	addwfc	fsr2h,f,c
 41788   013A1E  06DE               	decf	postinc2,f,c
 41789   013A20  0E00               	movlw	0
 41790   013A22  5ADD               	subwfb	postdec2,f,c
 41791                           
 41792                           ; BSR set to: 1
 41793                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1140:         dbuf[i] = x;
 41794                           ;stkvar	_x @ sp[(-11)+-7]
 41795                           ;stkvar	_i @ sp[(-11)+2]
 41796   013A24  0EF7               	movlw	-9
 41797   013A26  006F FF8C  F02C    	movff	plusw1,btemp+10
 41798   013A2C  0EF8               	movlw	-8
 41799   013A2E  006F FF8C  F02D    	movff	plusw1,btemp+11
 41800   013A34  0EC6               	movlw	low _dbuf
 41801   013A36  242C               	addwf	(btemp+10)^0,w,c
 41802   013A38  6ED9               	movwf	fsr2l,c
 41803   013A3A  0E01               	movlw	high _dbuf
 41804   013A3C  202D               	addwfc	(btemp+11)^0,w,c
 41805   013A3E  6EDA               	movwf	fsr2h,c
 41806   013A40  0EEE               	movlw	-18
 41807   013A42  006F FF8F FFDF     	movff	plusw1,indf2
 41808                           
 41809                           ; BSR set to: 1
 41810                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1146:         --i;
 41811                           ;stkvar	_i @ sp[(-11)+2]
 41812   013A48  50E1               	movf	fsr1l,w,c
 41813   013A4A  0FF7               	addlw	-9
 41814   013A4C  6ED9               	movwf	fsr2l,c
 41815   013A4E  50E2               	movf	fsr1h,w,c
 41816   013A50  6EDA               	movwf	fsr2h,c
 41817   013A52  0EFF               	movlw	255
 41818   013A54  22DA               	addwfc	fsr2h,f,c
 41819   013A56  06DE               	decf	postinc2,f,c
 41820   013A58  0E00               	movlw	0
 41821   013A5A  5ADD               	subwfb	postdec2,f,c
 41822                           
 41823                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1147:         dbuf[i] = '0';
 41824                           ;stkvar	_i @ sp[(-11)+2]
 41825   013A5C  0EF7               	movlw	-9
 41826   013A5E  006F FF8C  F02C    	movff	plusw1,btemp+10
 41827   013A64  0EF8               	movlw	-8
 41828   013A66  006F FF8C  F02D    	movff	plusw1,btemp+11
 41829   013A6C  0EC6               	movlw	low _dbuf
 41830   013A6E  242C               	addwf	(btemp+10)^0,w,c
 41831   013A70  6ED9               	movwf	fsr2l,c
 41832   013A72  0E01               	movlw	high _dbuf
 41833   013A74  202D               	addwfc	(btemp+11)^0,w,c
 41834   013A76  6EDA               	movwf	fsr2h,c
 41835   013A78  0E30               	movlw	48
 41836   013A7A  6EDF               	movwf	indf2,c
 41837   013A7C                     l11879:
 41838                           
 41839                           ; BSR set to: 1
 41840                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1152:     return (int) pad(fp
      +                          , &dbuf[i], w);
 41841                           ;stkvar	_w @ sp[(-11)+4]
 41842   013A7C  0EF9               	movlw	-7
 41843   013A7E  006F FF8F FFE6     	movff	plusw1,postinc1
 41844   013A84  006F FF8F FFE6     	movff	plusw1,postinc1
 41845                           
 41846                           ;stkvar	_i @ sp[(-13)+2]
 41847   013A8A  0EC6               	movlw	low _dbuf
 41848   013A8C  6E2C               	movwf	(btemp+10)^0,c
 41849   013A8E  0E01               	movlw	high _dbuf
 41850   013A90  6E2D               	movwf	(btemp+11)^0,c
 41851   013A92  0EF5               	movlw	-11
 41852   013A94  50E3               	movf	plusw1,w,c
 41853   013A96  262C               	addwf	(btemp+10)^0,f,c
 41854   013A98  0EF6               	movlw	-10
 41855   013A9A  50E3               	movf	plusw1,w,c
 41856   013A9C  222D               	addwfc	(btemp+11)^0,f,c
 41857   013A9E  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 41858   013AA4  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 41859                           
 41860                           ;stkvar	_fp @ sp[(-15)+-2]
 41861   013AAA  0EEF               	movlw	-17
 41862   013AAC  006F FF8F FFE6     	movff	plusw1,postinc1
 41863   013AB2  006F FF8F FFE6     	movff	plusw1,postinc1
 41864   013AB8  ECB9  F0B1         	call	_pad	;wreg free
 41865                           
 41866                           ; _xtoa: autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize
      +                           = 7, vargsize = 0
 41867   013ABC  0EEE               	movlw	238
 41868   013ABE  26E1               	addwf	fsr1l,f,c
 41869   013AC0  0EFF               	movlw	255
 41870   013AC2  22E2               	addwfc	fsr1h,f,c
 41871   013AC4  0012               	return		;funcret
 41872   013AC6                     __end_of_xtoa:
 41873                           	callstack 0
 41874                           
 41875 ;; *************** function _utoa *****************
 41876 ;; Defined at:
 41877 ;;		line 1001 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c"
 41878 ;; Parameters:    Size  Location     Type
 41879 ;;  fp              2  [STACK] PTR struct _IO_FILE
 41880 ;;		 -> f(11), NULL(0), 
 41881 ;;  d               4  [STACK] unsigned long 
 41882 ;; Auto vars:     Size  Location     Type
 41883 ;;  i               2  [STACK] int 
 41884 ;;  w               2  [STACK] int 
 41885 ;;  p               2  [STACK] int 
 41886 ;; Return value:  Size  Location     Type
 41887 ;;                  2  [STACK] int 
 41888 ;; Registers used:
 41889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl
 41890 ;; Tracked objects:
 41891 ;;		On entry : 0/1
 41892 ;;		On exit  : 0/0
 41893 ;;		Unchanged: 0/0
 41894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41899 ;;Total ram usage:        0 bytes
 41900 ;; Hardware stack levels used: 1
 41901 ;; Hardware stack levels required when called: 8
 41902 ;; This function calls:
 41903 ;;		___lldiv
 41904 ;;		___llmod
 41905 ;;		_pad
 41906 ;; This function is called by:
 41907 ;;		_vfpfcnvrt
 41908 ;; This function uses a reentrant model
 41909 ;;
 41910                           
 41911                           	psect	text98
 41912   014E78                     __ptext98:
 41913                           	callstack 0
 41914   014E78                     _utoa:
 41915                           	callstack 0
 41916                           
 41917                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41918   014E78  0E06               	movlw	6
 41919   014E7A  26E1               	addwf	fsr1l,f,c
 41920   014E7C  0E00               	movlw	0
 41921   014E7E  22E2               	addwfc	fsr1h,f,c
 41922                           
 41923                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1001: static int utoa(FILE *f
      +                          p, vfpf_uint_t d);/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1002: {;/opt
      +                          /microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1003:     int i, w;;/opt/microchip
      +                          /xc8/v3.00/pic/sources/c99/common/doprnt.c: 1005:  int p;;/opt/microchip/xc8/v3.00/pic/s
      +                          ources/c99/common/doprnt.c: 1013:     if (!(prec < 0)) {
 41924                           
 41925                           ;incstack = 0
 41926   014E80  0101               	movlb	1	; () banked
 41927   014E82  AFC4               	btfss	(_prec+1)& (0+255),7,b
 41928                           
 41929                           ; BSR set to: 1
 41930                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1014:         flags &= ~(1 <<
      +                           1);
 41931   014E84  93C5               	bcf	_flags& (0+255),1,b
 41932                           
 41933                           ; BSR set to: 1
 41934                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1017:     p = (0 <= prec) ? p
      +                          rec : 1;
 41935   014E86  AFC4               	btfss	(_prec+1)& (0+255),7,b
 41936   014E88  D00D               	goto	l11781
 41937                           
 41938                           ; BSR set to: 1
 41939   014E8A  0E01               	movlw	1
 41940   014E8C  6E2C               	movwf	(btemp+10)^0,c
 41941   014E8E  0E00               	movlw	0
 41942   014E90  6E2D               	movwf	(btemp+11)^0,c
 41943                           
 41944                           ;stkvar	_p @ sp[(-6)+4]
 41945   014E92  0EFE               	movlw	-2
 41946   014E94  0060  F0B3  FFE3   	movff	btemp+10,plusw1
 41947   014E9A  0EFF               	movlw	-1
 41948   014E9C  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 41949   014EA2  D008               	goto	l3245
 41950   014EA4                     l11781:
 41951                           
 41952                           ; BSR set to: 1
 41953                           ;stkvar	_p @ sp[(-6)+4]
 41954   014EA4  0EFE               	movlw	-2
 41955   014EA6  0060  F70F  FFE3   	movff	_prec,plusw1
 41956   014EAC  0EFF               	movlw	-1
 41957   014EAE  0060  F713  FFE3   	movff	_prec+1,plusw1
 41958   014EB4                     l3245:
 41959                           
 41960                           ; BSR set to: 1
 41961                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1019:     w = width;
 41962                           ;stkvar	_w @ sp[(-6)+2]
 41963   014EB4  0EFC               	movlw	-4
 41964   014EB6  0060  F707  FFE3   	movff	_width,plusw1
 41965   014EBC  0EFD               	movlw	-3
 41966   014EBE  0060  F70B  FFE3   	movff	_width+1,plusw1
 41967                           
 41968                           ; BSR set to: 1
 41969                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1022:     i = sizeof(dbuf) - 
      +                          1;
 41970   014EC4  0E1F               	movlw	31
 41971   014EC6  6E2C               	movwf	(btemp+10)^0,c
 41972   014EC8  0E00               	movlw	0
 41973   014ECA  6E2D               	movwf	(btemp+11)^0,c
 41974                           
 41975                           ;stkvar	_i @ sp[(-6)+0]
 41976   014ECC  0EFA               	movlw	-6
 41977   014ECE  0060  F0B3  FFE3   	movff	btemp+10,plusw1
 41978   014ED4  0EFB               	movlw	-5
 41979   014ED6  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 41980                           
 41981                           ; BSR set to: 1
 41982                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1023:     dbuf[i] = '\0';
 41983   014EDC  6BE5               	clrf	(_dbuf+31)& (0+255),b
 41984                           
 41985                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1024:     while (i && (d != 0
 41986   014EDE  D071               	goto	l11797
 41987   014EE0                     l11787:
 41988                           
 41989                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1033:     )) {;/opt/microchip
      +                          /xc8/v3.00/pic/sources/c99/common/doprnt.c: 1034:         --i;
 41990                           ;stkvar	_i @ sp[(-6)+0]
 41991   014EE0  50E1               	movf	fsr1l,w,c
 41992   014EE2  0FFA               	addlw	-6
 41993   014EE4  6ED9               	movwf	fsr2l,c
 41994   014EE6  50E2               	movf	fsr1h,w,c
 41995   014EE8  6EDA               	movwf	fsr2h,c
 41996   014EEA  0EFF               	movlw	255
 41997   014EEC  22DA               	addwfc	fsr2h,f,c
 41998   014EEE  06DE               	decf	postinc2,f,c
 41999   014EF0  0E00               	movlw	0
 42000   014EF2  5ADD               	subwfb	postdec2,f,c
 42001                           
 42002                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1035:         dbuf[i] = '0' +
      +                           (d % 10);
 42003   014EF4  0E0A               	movlw	10
 42004   014EF6  6EE6               	movwf	postinc1,c
 42005   014EF8  0E00               	movlw	0
 42006   014EFA  6EE6               	movwf	postinc1,c
 42007   014EFC  0E00               	movlw	0
 42008   014EFE  6EE6               	movwf	postinc1,c
 42009   014F00  0E00               	movlw	0
 42010   014F02  6EE6               	movwf	postinc1,c
 42011                           
 42012                           ;stkvar	_d @ sp[(-10)+-6]
 42013   014F04  0EF0               	movlw	-16
 42014   014F06  006F FF8F FFE6     	movff	plusw1,postinc1
 42015   014F0C  006F FF8F FFE6     	movff	plusw1,postinc1
 42016   014F12  006F FF8F FFE6     	movff	plusw1,postinc1
 42017   014F18  006F FF8F FFE6     	movff	plusw1,postinc1
 42018   014F1E  EC07  F0B4         	call	___llmod	;wreg free
 42019   014F22  C022  F02D         	movff	btemp,btemp+11
 42020   014F26  0E30               	movlw	48
 42021   014F28  262D               	addwf	(btemp+11)^0,f,c
 42022                           
 42023                           ;stkvar	_i @ sp[(-6)+0]
 42024   014F2A  0EFA               	movlw	-6
 42025   014F2C  006F FF8C  F02A    	movff	plusw1,btemp+8
 42026   014F32  0EFB               	movlw	-5
 42027   014F34  006F FF8C  F02B    	movff	plusw1,btemp+9
 42028   014F3A  0EC6               	movlw	low _dbuf
 42029   014F3C  242A               	addwf	(btemp+8)^0,w,c
 42030   014F3E  6ED9               	movwf	fsr2l,c
 42031   014F40  0E01               	movlw	high _dbuf
 42032   014F42  202B               	addwfc	(btemp+9)^0,w,c
 42033   014F44  6EDA               	movwf	fsr2h,c
 42034   014F46  0060  F0B7  FFDF   	movff	btemp+11,indf2
 42035                           
 42036                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1037:         --p;
 42037                           ;stkvar	_p @ sp[(-6)+4]
 42038   014F4C  50E1               	movf	fsr1l,w,c
 42039   014F4E  0FFE               	addlw	-2
 42040   014F50  6ED9               	movwf	fsr2l,c
 42041   014F52  50E2               	movf	fsr1h,w,c
 42042   014F54  6EDA               	movwf	fsr2h,c
 42043   014F56  0EFF               	movlw	255
 42044   014F58  22DA               	addwfc	fsr2h,f,c
 42045   014F5A  06DE               	decf	postinc2,f,c
 42046   014F5C  0E00               	movlw	0
 42047   014F5E  5ADD               	subwfb	postdec2,f,c
 42048                           
 42049                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1041:         --w;
 42050                           ;stkvar	_w @ sp[(-6)+2]
 42051   014F60  50E1               	movf	fsr1l,w,c
 42052   014F62  0FFC               	addlw	-4
 42053   014F64  6ED9               	movwf	fsr2l,c
 42054   014F66  50E2               	movf	fsr1h,w,c
 42055   014F68  6EDA               	movwf	fsr2h,c
 42056   014F6A  0EFF               	movlw	255
 42057   014F6C  22DA               	addwfc	fsr2h,f,c
 42058   014F6E  06DE               	decf	postinc2,f,c
 42059   014F70  0E00               	movlw	0
 42060   014F72  5ADD               	subwfb	postdec2,f,c
 42061                           
 42062                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1042:         d = d / 10;
 42063   014F74  0E0A               	movlw	10
 42064   014F76  6EE6               	movwf	postinc1,c
 42065   014F78  0E00               	movlw	0
 42066   014F7A  6EE6               	movwf	postinc1,c
 42067   014F7C  0E00               	movlw	0
 42068   014F7E  6EE6               	movwf	postinc1,c
 42069   014F80  0E00               	movlw	0
 42070   014F82  6EE6               	movwf	postinc1,c
 42071                           
 42072                           ;stkvar	_d @ sp[(-10)+-6]
 42073   014F84  0EF0               	movlw	-16
 42074   014F86  006F FF8F FFE6     	movff	plusw1,postinc1
 42075   014F8C  006F FF8F FFE6     	movff	plusw1,postinc1
 42076   014F92  006F FF8F FFE6     	movff	plusw1,postinc1
 42077   014F98  006F FF8F FFE6     	movff	plusw1,postinc1
 42078   014F9E  ECB3  F0B0         	call	___lldiv	;wreg free
 42079                           
 42080                           ;stkvar	_d @ sp[(-6)+-6]
 42081   014FA2  0EF4               	movlw	-12
 42082   014FA4  0060  F08B  FFE3   	movff	btemp,plusw1
 42083   014FAA  0EF5               	movlw	-11
 42084   014FAC  0060  F08F  FFE3   	movff	btemp+1,plusw1
 42085   014FB2  0EF6               	movlw	-10
 42086   014FB4  0060  F093  FFE3   	movff	btemp+2,plusw1
 42087   014FBA  0EF7               	movlw	-9
 42088   014FBC  0060  F097  FFE3   	movff	btemp+3,plusw1
 42089   014FC2                     l11797:
 42090                           
 42091                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1024:     while (i && (d != 0
 42092                           ;stkvar	_i @ sp[(-6)+0]
 42093   014FC2  0EFA               	movlw	-6
 42094   014FC4  006F FF8C  F022    	movff	plusw1,btemp
 42095   014FCA  0EFB               	movlw	-5
 42096   014FCC  50E3               	movf	plusw1,w,c
 42097   014FCE  1022               	iorwf	btemp^0,w,c
 42098   014FD0  B4D8               	btfsc	status,2,c
 42099   014FD2  D024               	goto	u8360
 42100                           
 42101                           ;stkvar	_d @ sp[(-6)+-6]
 42102   014FD4  0EF4               	movlw	-12
 42103   014FD6  50E3               	movf	plusw1,w,c
 42104   014FD8  E183               	bnz	l11787
 42105   014FDA  0EF5               	movlw	-11
 42106   014FDC  50E3               	movf	plusw1,w,c
 42107   014FDE  E180               	bnz	l11787
 42108   014FE0  0EF6               	movlw	-10
 42109   014FE2  50E3               	movf	plusw1,w,c
 42110   014FE4  E103               	bnz	u8331
 42111   014FE6  0EF7               	movlw	-9
 42112   014FE8  50E3               	movf	plusw1,w,c
 42113   014FEA  A4D8               	btfss	status,2,c
 42114   014FEC                     u8331:
 42115   014FEC  D779               	goto	l11787
 42116                           
 42117                           ;stkvar	_p @ sp[(-6)+4]
 42118   014FEE  0EFF               	movlw	-1
 42119   014FF0  BEE3               	btfsc	plusw1,7,c
 42120   014FF2  D007               	goto	u8340
 42121   014FF4  0EFF               	movlw	-1
 42122   014FF6  50E3               	movf	plusw1,w,c
 42123   014FF8  E103               	bnz	u8341
 42124   014FFA  0EFE               	movlw	-2
 42125   014FFC  04E3               	decf	plusw1,w,c
 42126   014FFE  B0D8               	btfsc	status,0,c
 42127   015000                     u8341:
 42128   015000  D76F               	goto	l11787
 42129   015002                     u8340:
 42130                           
 42131                           ;stkvar	_w @ sp[(-6)+2]
 42132   015002  0EFD               	movlw	-3
 42133   015004  BEE3               	btfsc	plusw1,7,c
 42134   015006  D00A               	goto	u8360
 42135   015008  0EFD               	movlw	-3
 42136   01500A  50E3               	movf	plusw1,w,c
 42137   01500C  E104               	bnz	u8350
 42138   01500E  0EFC               	movlw	-4
 42139   015010  04E3               	decf	plusw1,w,c
 42140   015012  A0D8               	btfss	status,0,c
 42141   015014  D003               	goto	u8360
 42142   015016                     u8350:
 42143   015016  0101               	movlb	1	; () banked
 42144   015018  B3C5               	btfsc	_flags& (0+255),1,b
 42145   01501A  D762               	goto	l11787
 42146   01501C                     u8360:
 42147                           
 42148                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1046:     return (int) pad(fp
      +                          , &dbuf[i], w);
 42149                           ;stkvar	_w @ sp[(-6)+2]
 42150   01501C  0EFC               	movlw	-4
 42151   01501E  006F FF8F FFE6     	movff	plusw1,postinc1
 42152   015024  006F FF8F FFE6     	movff	plusw1,postinc1
 42153                           
 42154                           ;stkvar	_i @ sp[(-8)+0]
 42155   01502A  0EC6               	movlw	low _dbuf
 42156   01502C  6E2C               	movwf	(btemp+10)^0,c
 42157   01502E  0E01               	movlw	high _dbuf
 42158   015030  6E2D               	movwf	(btemp+11)^0,c
 42159   015032  0EF8               	movlw	-8
 42160   015034  50E3               	movf	plusw1,w,c
 42161   015036  262C               	addwf	(btemp+10)^0,f,c
 42162   015038  0EF9               	movlw	-7
 42163   01503A  50E3               	movf	plusw1,w,c
 42164   01503C  222D               	addwfc	(btemp+11)^0,f,c
 42165   01503E  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 42166   015044  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 42167                           
 42168                           ;stkvar	_fp @ sp[(-10)+-2]
 42169   01504A  0EF4               	movlw	-12
 42170   01504C  006F FF8F FFE6     	movff	plusw1,postinc1
 42171   015052  006F FF8F FFE6     	movff	plusw1,postinc1
 42172   015058  ECB9  F0B1         	call	_pad	;wreg free
 42173                           
 42174                           ; _utoa: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize 
      +                          = 6, vargsize = 0
 42175   01505C  0EF4               	movlw	244
 42176   01505E  26E1               	addwf	fsr1l,f,c
 42177   015060  0EFF               	movlw	255
 42178   015062  22E2               	addwfc	fsr1h,f,c
 42179   015064  0012               	return		;funcret
 42180   015066                     __end_of_utoa:
 42181                           	callstack 0
 42182                           
 42183 ;; *************** function ___llmod *****************
 42184 ;; Defined at:
 42185 ;;		line 7 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/llmod.c"
 42186 ;; Parameters:    Size  Location     Type
 42187 ;;  dividend        4  [STACK] unsigned long 
 42188 ;;  divisor         4  [STACK] unsigned long 
 42189 ;; Auto vars:     Size  Location     Type
 42190 ;;  counter         1  [STACK] unsigned char 
 42191 ;; Return value:  Size  Location     Type
 42192 ;;                  4  [STACK] unsigned long 
 42193 ;; Registers used:
 42194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 42195 ;; Tracked objects:
 42196 ;;		On entry : 0/1
 42197 ;;		On exit  : 0/0
 42198 ;;		Unchanged: 0/0
 42199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 42200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42204 ;;Total ram usage:        0 bytes
 42205 ;; Hardware stack levels used: 1
 42206 ;; Hardware stack levels required when called: 3
 42207 ;; This function calls:
 42208 ;;		Nothing
 42209 ;; This function is called by:
 42210 ;;		_utoa
 42211 ;; This function uses a reentrant model
 42212 ;;
 42213                           
 42214                           	psect	text99
 42215   01680E                     __ptext99:
 42216                           	callstack 0
 42217   01680E                     ___llmod:
 42218                           	callstack 0
 42219                           
 42220                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 42221   01680E  52E6               	movf	postinc1,f,c
 42222                           
 42223                           ;stkvar	_divisor @ sp[(-1)+-8]
 42224                           
 42225                           ;incstack = 0
 42226   016810  0EF7               	movlw	-9
 42227   016812  50E3               	movf	plusw1,w,c
 42228   016814  E10A               	bnz	u4210
 42229   016816  0EF8               	movlw	-8
 42230   016818  50E3               	movf	plusw1,w,c
 42231   01681A  E107               	bnz	u4210
 42232   01681C  0EF9               	movlw	-7
 42233   01681E  50E3               	movf	plusw1,w,c
 42234   016820  E104               	bnz	u4210
 42235   016822  0EFA               	movlw	-6
 42236   016824  50E3               	movf	plusw1,w,c
 42237   016826  B4D8               	btfsc	status,2,c
 42238   016828  D04D               	goto	u4240
 42239   01682A                     u4210:
 42240                           
 42241                           ;stkvar	_counter @ sp[(-1)+0]
 42242   01682A  0EFF               	movlw	-1
 42243   01682C  6AE3               	clrf	plusw1,c
 42244   01682E  D00A               	goto	L37
 42245   016830                     l7591:
 42246                           
 42247                           ;stkvar	_divisor @ sp[(-1)+-8]
 42248   016830  90D8               	bcf	status,0,c
 42249   016832  0EF7               	movlw	-9
 42250   016834  36E3               	rlcf	plusw1,f,c
 42251   016836  0EF8               	movlw	-8
 42252   016838  36E3               	rlcf	plusw1,f,c
 42253   01683A  0EF9               	movlw	-7
 42254   01683C  36E3               	rlcf	plusw1,f,c
 42255   01683E  0EFA               	movlw	-6
 42256   016840  36E3               	rlcf	plusw1,f,c
 42257                           
 42258                           ;stkvar	_counter @ sp[(-1)+0]
 42259   016842  0EFF               	movlw	-1
 42260   016844                     L37:
 42261   016844  2AE3               	incf	plusw1,f,c
 42262                           
 42263                           ;stkvar	_divisor @ sp[(-1)+-8]
 42264   016846  0EFA               	movlw	-6
 42265   016848  AEE3               	btfss	plusw1,7,c
 42266   01684A  D7F2               	goto	l7591
 42267   01684C                     u4220:
 42268                           
 42269                           ;stkvar	_divisor @ sp[(-1)+-8]
 42270                           ;stkvar	_dividend @ sp[(-1)+-4]
 42271   01684C  50E1               	movf	fsr1l,w,c
 42272   01684E  0FFB               	addlw	-5
 42273   016850  6ED9               	movwf	fsr2l,c
 42274   016852  50E2               	movf	fsr1h,w,c
 42275   016854  6EDA               	movwf	fsr2h,c
 42276   016856  0EFF               	movlw	255
 42277   016858  22DA               	addwfc	fsr2h,f,c
 42278   01685A  0EF7               	movlw	-9
 42279   01685C  50E3               	movf	plusw1,w,c
 42280   01685E  5CDE               	subwf	postinc2,w,c
 42281   016860  0EF8               	movlw	-8
 42282   016862  50E3               	movf	plusw1,w,c
 42283   016864  58DE               	subwfb	postinc2,w,c
 42284   016866  0EF9               	movlw	-7
 42285   016868  50E3               	movf	plusw1,w,c
 42286   01686A  58DE               	subwfb	postinc2,w,c
 42287   01686C  0EFA               	movlw	-6
 42288   01686E  50E3               	movf	plusw1,w,c
 42289   016870  58DE               	subwfb	postinc2,w,c
 42290   016872  A0D8               	btfss	status,0,c
 42291   016874  D013               	goto	l7599
 42292                           
 42293                           ;stkvar	_divisor @ sp[(-1)+-8]
 42294                           ;stkvar	_dividend @ sp[(-1)+-4]
 42295   016876  50E1               	movf	fsr1l,w,c
 42296   016878  0FFB               	addlw	-5
 42297   01687A  6ED9               	movwf	fsr2l,c
 42298   01687C  50E2               	movf	fsr1h,w,c
 42299   01687E  6EDA               	movwf	fsr2h,c
 42300   016880  0EFF               	movlw	255
 42301   016882  22DA               	addwfc	fsr2h,f,c
 42302   016884  0EF7               	movlw	-9
 42303   016886  50E3               	movf	plusw1,w,c
 42304   016888  5EDE               	subwf	postinc2,f,c
 42305   01688A  0EF8               	movlw	-8
 42306   01688C  50E3               	movf	plusw1,w,c
 42307   01688E  5ADE               	subwfb	postinc2,f,c
 42308   016890  0EF9               	movlw	-7
 42309   016892  50E3               	movf	plusw1,w,c
 42310   016894  5ADE               	subwfb	postinc2,f,c
 42311   016896  0EFA               	movlw	-6
 42312   016898  50E3               	movf	plusw1,w,c
 42313   01689A  5ADE               	subwfb	postinc2,f,c
 42314   01689C                     l7599:
 42315                           
 42316                           ;stkvar	_divisor @ sp[(-1)+-8]
 42317   01689C  90D8               	bcf	status,0,c
 42318   01689E  0EFA               	movlw	-6
 42319   0168A0  32E3               	rrcf	plusw1,f,c
 42320   0168A2  0EF9               	movlw	-7
 42321   0168A4  32E3               	rrcf	plusw1,f,c
 42322   0168A6  0EF8               	movlw	-8
 42323   0168A8  32E3               	rrcf	plusw1,f,c
 42324   0168AA  0EF7               	movlw	-9
 42325   0168AC  32E3               	rrcf	plusw1,f,c
 42326                           
 42327                           ;stkvar	_counter @ sp[(-1)+0]
 42328   0168AE  0EFF               	movlw	-1
 42329   0168B0  50E3               	movf	plusw1,w,c
 42330   0168B2  6E22               	movwf	btemp^0,c
 42331   0168B4  0E01               	movlw	1
 42332   0168B6  5E22               	subwf	btemp^0,f,c
 42333   0168B8  0EFF               	movlw	-1
 42334   0168BA  0060  F08B  FFE3   	movff	btemp,plusw1
 42335   0168C0  A4D8               	btfss	status,2,c
 42336   0168C2  D7C4               	goto	u4220
 42337   0168C4                     u4240:
 42338                           
 42339                           ;stkvar	_dividend @ sp[(-1)+-4]
 42340   0168C4  0EFB               	movlw	-5
 42341   0168C6  006F FF8C  F022    	movff	plusw1,btemp
 42342   0168CC  0EFC               	movlw	-4
 42343   0168CE  006F FF8C  F023    	movff	plusw1,btemp+1
 42344   0168D4  0EFD               	movlw	-3
 42345   0168D6  006F FF8C  F024    	movff	plusw1,btemp+2
 42346   0168DC  0EFE               	movlw	-2
 42347   0168DE  006F FF8C  F025    	movff	plusw1,btemp+3
 42348                           
 42349                           ; ___llmod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 42350   0168E4  0EF7               	movlw	247
 42351   0168E6  26E1               	addwf	fsr1l,f,c
 42352   0168E8  0EFF               	movlw	255
 42353   0168EA  22E2               	addwfc	fsr1h,f,c
 42354   0168EC  0012               	return		;funcret
 42355   0168EE                     __end_of___llmod:
 42356                           	callstack 0
 42357                           
 42358 ;; *************** function ___lldiv *****************
 42359 ;; Defined at:
 42360 ;;		line 7 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/__lldiv.c"
 42361 ;; Parameters:    Size  Location     Type
 42362 ;;  dividend        4  [STACK] unsigned long 
 42363 ;;  divisor         4  [STACK] unsigned long 
 42364 ;; Auto vars:     Size  Location     Type
 42365 ;;  quotient        4  [STACK] unsigned long 
 42366 ;;  counter         1  [STACK] unsigned char 
 42367 ;; Return value:  Size  Location     Type
 42368 ;;                  4  [STACK] unsigned long 
 42369 ;; Registers used:
 42370 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 42371 ;; Tracked objects:
 42372 ;;		On entry : 0/1
 42373 ;;		On exit  : 0/0
 42374 ;;		Unchanged: 0/0
 42375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 42376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42380 ;;Total ram usage:        0 bytes
 42381 ;; Hardware stack levels used: 1
 42382 ;; Hardware stack levels required when called: 3
 42383 ;; This function calls:
 42384 ;;		Nothing
 42385 ;; This function is called by:
 42386 ;;		_utoa
 42387 ;; This function uses a reentrant model
 42388 ;;
 42389                           
 42390                           	psect	text100
 42391   016166                     __ptext100:
 42392                           	callstack 0
 42393   016166                     ___lldiv:
 42394                           	callstack 0
 42395                           
 42396                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 42397   016166  0E05               	movlw	5
 42398   016168  26E1               	addwf	fsr1l,f,c
 42399   01616A  0E00               	movlw	0
 42400   01616C  22E2               	addwfc	fsr1h,f,c
 42401                           
 42402                           ;stkvar	_quotient @ sp[(-5)+0]
 42403                           
 42404                           ;incstack = 0
 42405   01616E  0EFB               	movlw	-5
 42406   016170  6AE3               	clrf	plusw1,c
 42407   016172  0EFC               	movlw	-4
 42408   016174  6AE3               	clrf	plusw1,c
 42409   016176  0EFD               	movlw	-3
 42410   016178  6AE3               	clrf	plusw1,c
 42411   01617A  0EFE               	movlw	-2
 42412   01617C  6AE3               	clrf	plusw1,c
 42413                           
 42414                           ;stkvar	_divisor @ sp[(-5)+-8]
 42415   01617E  0EF3               	movlw	-13
 42416   016180  50E3               	movf	plusw1,w,c
 42417   016182  E10A               	bnz	u3970
 42418   016184  0EF4               	movlw	-12
 42419   016186  50E3               	movf	plusw1,w,c
 42420   016188  E107               	bnz	u3970
 42421   01618A  0EF5               	movlw	-11
 42422   01618C  50E3               	movf	plusw1,w,c
 42423   01618E  E104               	bnz	u3970
 42424   016190  0EF6               	movlw	-10
 42425   016192  50E3               	movf	plusw1,w,c
 42426   016194  B4D8               	btfsc	status,2,c
 42427   016196  D058               	goto	u4000
 42428   016198                     u3970:
 42429                           
 42430                           ;stkvar	_counter @ sp[(-5)+4]
 42431   016198  0EFF               	movlw	-1
 42432   01619A  6AE3               	clrf	plusw1,c
 42433   01619C  D00A               	goto	L38
 42434   01619E                     l7487:
 42435                           
 42436                           ;stkvar	_divisor @ sp[(-5)+-8]
 42437   01619E  90D8               	bcf	status,0,c
 42438   0161A0  0EF3               	movlw	-13
 42439   0161A2  36E3               	rlcf	plusw1,f,c
 42440   0161A4  0EF4               	movlw	-12
 42441   0161A6  36E3               	rlcf	plusw1,f,c
 42442   0161A8  0EF5               	movlw	-11
 42443   0161AA  36E3               	rlcf	plusw1,f,c
 42444   0161AC  0EF6               	movlw	-10
 42445   0161AE  36E3               	rlcf	plusw1,f,c
 42446                           
 42447                           ;stkvar	_counter @ sp[(-5)+4]
 42448   0161B0  0EFF               	movlw	-1
 42449   0161B2                     L38:
 42450   0161B2  2AE3               	incf	plusw1,f,c
 42451                           
 42452                           ;stkvar	_divisor @ sp[(-5)+-8]
 42453   0161B4  0EF6               	movlw	-10
 42454   0161B6  AEE3               	btfss	plusw1,7,c
 42455   0161B8  D7F2               	goto	l7487
 42456   0161BA                     u3980:
 42457                           
 42458                           ;stkvar	_quotient @ sp[(-5)+0]
 42459   0161BA  90D8               	bcf	status,0,c
 42460   0161BC  0EFB               	movlw	-5
 42461   0161BE  36E3               	rlcf	plusw1,f,c
 42462   0161C0  0EFC               	movlw	-4
 42463   0161C2  36E3               	rlcf	plusw1,f,c
 42464   0161C4  0EFD               	movlw	-3
 42465   0161C6  36E3               	rlcf	plusw1,f,c
 42466   0161C8  0EFE               	movlw	-2
 42467   0161CA  36E3               	rlcf	plusw1,f,c
 42468                           
 42469                           ;stkvar	_divisor @ sp[(-5)+-8]
 42470                           ;stkvar	_dividend @ sp[(-5)+-4]
 42471   0161CC  50E1               	movf	fsr1l,w,c
 42472   0161CE  0FF7               	addlw	-9
 42473   0161D0  6ED9               	movwf	fsr2l,c
 42474   0161D2  50E2               	movf	fsr1h,w,c
 42475   0161D4  6EDA               	movwf	fsr2h,c
 42476   0161D6  0EFF               	movlw	255
 42477   0161D8  22DA               	addwfc	fsr2h,f,c
 42478   0161DA  0EF3               	movlw	-13
 42479   0161DC  50E3               	movf	plusw1,w,c
 42480   0161DE  5CDE               	subwf	postinc2,w,c
 42481   0161E0  0EF4               	movlw	-12
 42482   0161E2  50E3               	movf	plusw1,w,c
 42483   0161E4  58DE               	subwfb	postinc2,w,c
 42484   0161E6  0EF5               	movlw	-11
 42485   0161E8  50E3               	movf	plusw1,w,c
 42486   0161EA  58DE               	subwfb	postinc2,w,c
 42487   0161EC  0EF6               	movlw	-10
 42488   0161EE  50E3               	movf	plusw1,w,c
 42489   0161F0  58DE               	subwfb	postinc2,w,c
 42490   0161F2  A0D8               	btfss	status,0,c
 42491   0161F4  D015               	goto	l7499
 42492                           
 42493                           ;stkvar	_divisor @ sp[(-5)+-8]
 42494                           ;stkvar	_dividend @ sp[(-5)+-4]
 42495   0161F6  50E1               	movf	fsr1l,w,c
 42496   0161F8  0FF7               	addlw	-9
 42497   0161FA  6ED9               	movwf	fsr2l,c
 42498   0161FC  50E2               	movf	fsr1h,w,c
 42499   0161FE  6EDA               	movwf	fsr2h,c
 42500   016200  0EFF               	movlw	255
 42501   016202  22DA               	addwfc	fsr2h,f,c
 42502   016204  0EF3               	movlw	-13
 42503   016206  50E3               	movf	plusw1,w,c
 42504   016208  5EDE               	subwf	postinc2,f,c
 42505   01620A  0EF4               	movlw	-12
 42506   01620C  50E3               	movf	plusw1,w,c
 42507   01620E  5ADE               	subwfb	postinc2,f,c
 42508   016210  0EF5               	movlw	-11
 42509   016212  50E3               	movf	plusw1,w,c
 42510   016214  5ADE               	subwfb	postinc2,f,c
 42511   016216  0EF6               	movlw	-10
 42512   016218  50E3               	movf	plusw1,w,c
 42513   01621A  5ADE               	subwfb	postinc2,f,c
 42514                           
 42515                           ;stkvar	_quotient @ sp[(-5)+0]
 42516   01621C  0EFB               	movlw	-5
 42517   01621E  80E3               	bsf	plusw1,0,c
 42518   016220                     l7499:
 42519                           
 42520                           ;stkvar	_divisor @ sp[(-5)+-8]
 42521   016220  90D8               	bcf	status,0,c
 42522   016222  0EF6               	movlw	-10
 42523   016224  32E3               	rrcf	plusw1,f,c
 42524   016226  0EF5               	movlw	-11
 42525   016228  32E3               	rrcf	plusw1,f,c
 42526   01622A  0EF4               	movlw	-12
 42527   01622C  32E3               	rrcf	plusw1,f,c
 42528   01622E  0EF3               	movlw	-13
 42529   016230  32E3               	rrcf	plusw1,f,c
 42530                           
 42531                           ;stkvar	_counter @ sp[(-5)+4]
 42532   016232  0EFF               	movlw	-1
 42533   016234  50E3               	movf	plusw1,w,c
 42534   016236  6E22               	movwf	btemp^0,c
 42535   016238  0E01               	movlw	1
 42536   01623A  5E22               	subwf	btemp^0,f,c
 42537   01623C  0EFF               	movlw	-1
 42538   01623E  0060  F08B  FFE3   	movff	btemp,plusw1
 42539   016244  A4D8               	btfss	status,2,c
 42540   016246  D7B9               	goto	u3980
 42541   016248                     u4000:
 42542                           
 42543                           ;stkvar	_quotient @ sp[(-5)+0]
 42544   016248  0EFB               	movlw	-5
 42545   01624A  006F FF8C  F022    	movff	plusw1,btemp
 42546   016250  0EFC               	movlw	-4
 42547   016252  006F FF8C  F023    	movff	plusw1,btemp+1
 42548   016258  0EFD               	movlw	-3
 42549   01625A  006F FF8C  F024    	movff	plusw1,btemp+2
 42550   016260  0EFE               	movlw	-2
 42551   016262  006F FF8C  F025    	movff	plusw1,btemp+3
 42552                           
 42553                           ; ___lldiv: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 42554   016268  0EF3               	movlw	243
 42555   01626A  26E1               	addwf	fsr1l,f,c
 42556   01626C  0EFF               	movlw	255
 42557   01626E  22E2               	addwfc	fsr1h,f,c
 42558   016270  0012               	return		;funcret
 42559   016272                     __end_of___lldiv:
 42560                           	callstack 0
 42561                           
 42562 ;; *************** function _stoa *****************
 42563 ;; Defined at:
 42564 ;;		line 942 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c"
 42565 ;; Parameters:    Size  Location     Type
 42566 ;;  fp              2  [STACK] PTR struct _IO_FILE
 42567 ;;		 -> f(11), NULL(0), 
 42568 ;;  s               2  [STACK] PTR unsigned char 
 42569 ;;		 -> ?_printf(2), ?_sprintf(2), STR_38(9), STR_37(12), 
 42570 ;;		 -> D$lcd(512), D@mconfig$F5156(514), STR_32(6), STR_31(6), 
 42571 ;;		 -> STR_30(6), STR_29(6), STR_7(6), STR_3(6), 
 42572 ;;		 -> T(256), V(387), 
 42573 ;; Auto vars:     Size  Location     Type
 42574 ;;  l               2  [STACK] int 
 42575 ;;  cp              2  [STACK] PTR unsigned char 
 42576 ;;		 -> ?_printf(2), STR_69(7), ?_sprintf(2), STR_38(9), 
 42577 ;;		 -> STR_37(12), D$lcd(512), D@mconfig$F5156(514), STR_32(6), 
 42578 ;;		 -> STR_31(6), STR_30(6), STR_29(6), STR_7(6), 
 42579 ;;		 -> STR_3(6), T(256), V(387), 
 42580 ;;  w               2  [STACK] int 
 42581 ;;  p               2  [STACK] int 
 42582 ;; Return value:  Size  Location     Type
 42583 ;;                  2  [STACK] int 
 42584 ;; Registers used:
 42585 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 42586 ;; Tracked objects:
 42587 ;;		On entry : 0/1
 42588 ;;		On exit  : 0/0
 42589 ;;		Unchanged: 0/0
 42590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 42591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42595 ;;Total ram usage:        0 bytes
 42596 ;; Hardware stack levels used: 1
 42597 ;; Hardware stack levels required when called: 6
 42598 ;; This function calls:
 42599 ;;		_fputc
 42600 ;; This function is called by:
 42601 ;;		_vfpfcnvrt
 42602 ;; This function uses a reentrant model
 42603 ;;
 42604                           
 42605                           	psect	text101
 42606   014082                     __ptext101:
 42607                           	callstack 0
 42608   014082                     _stoa:
 42609                           	callstack 0
 42610                           
 42611                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 42612   014082  0E08               	movlw	8
 42613   014084  26E1               	addwf	fsr1l,f,c
 42614   014086  0E00               	movlw	0
 42615   014088  22E2               	addwfc	fsr1h,f,c
 42616                           
 42617                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 942: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 943: {;/opt/microch
      +                          ip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 944:     char *cp;;/opt/microchip/xc8/v3.0
      +                          0/pic/sources/c99/common/doprnt.c: 945:     int l, p;;/opt/microchip/xc8/v3.00/pic/sourc
      +                          es/c99/common/doprnt.c: 947:  int w;;/opt/microchip/xc8/v3.00/pic/sources/c99/common/dop
      +                          rnt.c: 951:     cp = s;
 42618                           ;stkvar	_s @ sp[(-8)+-4]
 42619                           
 42620                           ;incstack = 0
 42621   01408A  0EF4               	movlw	-12
 42622   01408C  006F FF8C  F02C    	movff	plusw1,btemp+10
 42623   014092  0EF5               	movlw	-11
 42624   014094  006F FF8C  F02D    	movff	plusw1,btemp+11
 42625                           
 42626                           ;stkvar	_cp @ sp[(-8)+2]
 42627   01409A  0EFB               	movlw	-5
 42628   01409C  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 42629   0140A2  0EFA               	movlw	-6
 42630   0140A4  0060  F0B3  FFE3   	movff	btemp+10,plusw1
 42631                           
 42632                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 952:     if (!cp) {
 42633                           ;stkvar	_cp @ sp[(-8)+2]
 42634   0140AA  0EFA               	movlw	-6
 42635   0140AC  006F FF8C  F022    	movff	plusw1,btemp
 42636   0140B2  0EFB               	movlw	-5
 42637   0140B4  50E3               	movf	plusw1,w,c
 42638   0140B6  1022               	iorwf	btemp^0,w,c
 42639   0140B8  A4D8               	btfss	status,2,c
 42640   0140BA  D00C               	goto	l11729
 42641                           
 42642                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 953:         cp = "(null)";
 42643                           ;stkvar	_cp @ sp[(-8)+2]
 42644   0140BC  0EFF               	movlw	high STR_69
 42645   0140BE  6E22               	movwf	btemp^0,c
 42646   0140C0  0EFB               	movlw	-5
 42647   0140C2  0060  F08B  FFE3   	movff	btemp,plusw1
 42648   0140C8  0EE8               	movlw	low STR_69
 42649   0140CA  6E22               	movwf	btemp^0,c
 42650   0140CC  0EFA               	movlw	-6
 42651   0140CE  0060  F08B  FFE3   	movff	btemp,plusw1
 42652   0140D4                     l11729:
 42653                           
 42654                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 957:  for (l = 0; cp[l] != '\
      +                          0'; l++) {
 42655                           ;stkvar	_l @ sp[(-8)+0]
 42656   0140D4  0EF8               	movlw	-8
 42657   0140D6  6AE3               	clrf	plusw1,c
 42658   0140D8  0EF9               	movlw	-7
 42659   0140DA  6AE3               	clrf	plusw1,c
 42660   0140DC  D011               	goto	l11733
 42661   0140DE                     l11731:
 42662                           
 42663                           ;stkvar	_l @ sp[(-8)+0]
 42664   0140DE  0EF8               	movlw	-8
 42665   0140E0  50E3               	movf	plusw1,w,c
 42666   0140E2  0F01               	addlw	1
 42667   0140E4  6E22               	movwf	btemp^0,c
 42668   0140E6  0EF8               	movlw	-8
 42669   0140E8  0060  F08B  FFE3   	movff	btemp,plusw1
 42670   0140EE  6A22               	clrf	btemp^0,c
 42671   0140F0  0EF9               	movlw	-7
 42672   0140F2  50E3               	movf	plusw1,w,c
 42673   0140F4  2022               	addwfc	btemp^0,w,c
 42674   0140F6  6E22               	movwf	btemp^0,c
 42675   0140F8  0EF9               	movlw	-7
 42676   0140FA  0060  F08B  FFE3   	movff	btemp,plusw1
 42677   014100                     l11733:
 42678                           
 42679                           ;stkvar	_l @ sp[(-8)+0]
 42680                           ;stkvar	_cp @ sp[(-8)+2]
 42681   014100  0EFA               	movlw	-6
 42682   014102  006F FF8C  F02C    	movff	plusw1,btemp+10
 42683   014108  0EFB               	movlw	-5
 42684   01410A  006F FF8C  F02D    	movff	plusw1,btemp+11
 42685   014110  0EF8               	movlw	-8
 42686   014112  50E3               	movf	plusw1,w,c
 42687   014114  262C               	addwf	(btemp+10)^0,f,c
 42688   014116  0EF9               	movlw	-7
 42689   014118  50E3               	movf	plusw1,w,c
 42690   01411A  222D               	addwfc	(btemp+11)^0,f,c
 42691   01411C  0060  F0B3  FFF6   	movff	btemp+10,tblptrl
 42692   014122  0060  F0B7  FFF7   	movff	btemp+11,tblptrh
 42693   014128  0E00               	movlw	low (__pmediumconst shr (0+16))
 42694   01412A  6EF8               	movwf	tblptru,c
 42695   01412C  0E1F               	movlw	(high __ramtop+-1)
 42696   01412E  64F7               	cpfsgt	tblptrh,c
 42697   014130  D003               	bra	u8207
 42698   014132  0008               	tblrd		*
 42699   014134  50F5               	movf	tablat,w,c
 42700   014136  D007               	bra	u8200
 42701   014138                     u8207:
 42702   014138  006F FFDB FFE9     	movff	tblptrl,fsr0l
 42703   01413E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 42704   014144  50EF               	movf	indf0,w,c
 42705   014146                     u8200:
 42706   014146  0900               	iorlw	0
 42707   014148  A4D8               	btfss	status,2,c
 42708   01414A  D7C9               	goto	l11731
 42709                           
 42710                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 961:  if (!(prec < 0) && (pre
      +                          c < l)) {
 42711   01414C  0101               	movlb	1	; () banked
 42712   01414E  BFC4               	btfsc	(_prec+1)& (0+255),7,b
 42713   014150  D014               	goto	l11741
 42714                           
 42715                           ; BSR set to: 1
 42716                           ;stkvar	_l @ sp[(-8)+0]
 42717   014152  0EF8               	movlw	-8
 42718   014154  50E3               	movf	plusw1,w,c
 42719   014156  5DC3               	subwf	_prec& (0+255),w,b
 42720   014158  51C4               	movf	(_prec+1)& (0+255),w,b
 42721   01415A  0A80               	xorlw	128
 42722   01415C  6E22               	movwf	btemp^0,c
 42723   01415E  0EF9               	movlw	-7
 42724   014160  50E3               	movf	plusw1,w,c
 42725   014162  0A80               	xorlw	128
 42726   014164  5822               	subwfb	btemp^0,w,c
 42727   014166  B0D8               	btfsc	status,0,c
 42728   014168  D008               	goto	l11741
 42729                           
 42730                           ; BSR set to: 1
 42731                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 962:   l = prec;
 42732                           ;stkvar	_l @ sp[(-8)+0]
 42733   01416A  0EF8               	movlw	-8
 42734   01416C  0060  F70F  FFE3   	movff	_prec,plusw1
 42735   014172  0EF9               	movlw	-7
 42736   014174  0060  F713  FFE3   	movff	_prec+1,plusw1
 42737   01417A                     l11741:
 42738                           
 42739                           ; BSR set to: 1
 42740                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 965:     p = l;
 42741                           ;stkvar	_l @ sp[(-8)+0]
 42742                           ;stkvar	_p @ sp[(-8)+6]
 42743   01417A  0EF8               	movlw	-8
 42744   01417C  006F FF8C  F022    	movff	plusw1,btemp
 42745   014182  0EFE               	movlw	-2
 42746   014184  0060  F08B  FFE3   	movff	btemp,plusw1
 42747   01418A  0EF9               	movlw	-7
 42748   01418C  006F FF8C  F022    	movff	plusw1,btemp
 42749   014192  0EFF               	movlw	-1
 42750   014194  0060  F08B  FFE3   	movff	btemp,plusw1
 42751                           
 42752                           ; BSR set to: 1
 42753                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 969:     w = width;
 42754                           ;stkvar	_w @ sp[(-8)+4]
 42755   01419A  0EFC               	movlw	-4
 42756   01419C  0060  F707  FFE3   	movff	_width,plusw1
 42757   0141A2  0EFD               	movlw	-3
 42758   0141A4  0060  F70B  FFE3   	movff	_width+1,plusw1
 42759                           
 42760                           ; BSR set to: 1
 42761                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 970:     if (!(flags & (1 << 
      +                          0))) {
 42762   0141AA  A1C5               	btfss	_flags& (0+255),0,b
 42763   0141AC  D01F               	goto	l11753
 42764   0141AE  D066               	goto	l11759
 42765   0141B0                     l11749:
 42766                           
 42767                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 972:             fputc(' ', f
      +                          p);
 42768                           ;stkvar	_fp @ sp[(-8)+-2]
 42769   0141B0  0EF6               	movlw	-10
 42770   0141B2  006F FF8F FFE6     	movff	plusw1,postinc1
 42771   0141B8  006F FF8F FFE6     	movff	plusw1,postinc1
 42772   0141BE  0E20               	movlw	32
 42773   0141C0  6EE6               	movwf	postinc1,c
 42774   0141C2  0E00               	movlw	0
 42775   0141C4  6EE6               	movwf	postinc1,c
 42776   0141C6  ECE7  F0AD         	call	_fputc	;wreg free
 42777                           
 42778                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 973:             ++l;
 42779                           ;stkvar	_l @ sp[(-8)+0]
 42780   0141CA  0EF8               	movlw	-8
 42781   0141CC  50E3               	movf	plusw1,w,c
 42782   0141CE  0F01               	addlw	1
 42783   0141D0  6E22               	movwf	btemp^0,c
 42784   0141D2  0EF8               	movlw	-8
 42785   0141D4  0060  F08B  FFE3   	movff	btemp,plusw1
 42786   0141DA  6A22               	clrf	btemp^0,c
 42787   0141DC  0EF9               	movlw	-7
 42788   0141DE  50E3               	movf	plusw1,w,c
 42789   0141E0  2022               	addwfc	btemp^0,w,c
 42790   0141E2  6E22               	movwf	btemp^0,c
 42791   0141E4  0EF9               	movlw	-7
 42792   0141E6  0060  F08B  FFE3   	movff	btemp,plusw1
 42793   0141EC                     l11753:
 42794                           
 42795                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 971:         while (l < w) {
 42796                           ;stkvar	_w @ sp[(-8)+4]
 42797                           ;stkvar	_l @ sp[(-8)+0]
 42798   0141EC  50E1               	movf	fsr1l,w,c
 42799   0141EE  0FF8               	addlw	-8
 42800   0141F0  6ED9               	movwf	fsr2l,c
 42801   0141F2  50E2               	movf	fsr1h,w,c
 42802   0141F4  6EDA               	movwf	fsr2h,c
 42803   0141F6  0EFF               	movlw	255
 42804   0141F8  22DA               	addwfc	fsr2h,f,c
 42805   0141FA  0EFC               	movlw	-4
 42806   0141FC  50E3               	movf	plusw1,w,c
 42807   0141FE  5CDE               	subwf	postinc2,w,c
 42808   014200  50DE               	movf	postinc2,w,c
 42809   014202  0A80               	xorlw	128
 42810   014204  6E22               	movwf	btemp^0,c
 42811   014206  0EFD               	movlw	-3
 42812   014208  50E3               	movf	plusw1,w,c
 42813   01420A  0A80               	xorlw	128
 42814   01420C  5822               	subwfb	btemp^0,w,c
 42815   01420E  B0D8               	btfsc	status,0,c
 42816   014210  D035               	goto	l11759
 42817   014212  D7CE               	goto	l11749
 42818   014214                     l11755:
 42819                           
 42820                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 980:         fputc(*cp, fp);
 42821                           ;stkvar	_fp @ sp[(-8)+-2]
 42822   014214  0EF6               	movlw	-10
 42823   014216  006F FF8F FFE6     	movff	plusw1,postinc1
 42824   01421C  006F FF8F FFE6     	movff	plusw1,postinc1
 42825                           
 42826                           ;stkvar	_cp @ sp[(-10)+2]
 42827   014222  0EF8               	movlw	-8
 42828   014224  006F FF8F FFF6     	movff	plusw1,tblptrl
 42829   01422A  0EF9               	movlw	-7
 42830   01422C  006F FF8F FFF7     	movff	plusw1,tblptrh
 42831   014232  0E00               	movlw	low (__pmediumconst shr (0+16))
 42832   014234  6EF8               	movwf	tblptru,c
 42833   014236  0E1F               	movlw	(high __ramtop+-1)
 42834   014238  64F7               	cpfsgt	tblptrh,c
 42835   01423A  D003               	bra	u8267
 42836   01423C  0008               	tblrd		*
 42837   01423E  50F5               	movf	tablat,w,c
 42838   014240  D007               	bra	u8260
 42839   014242                     u8267:
 42840   014242  006F FFDB FFE9     	movff	tblptrl,fsr0l
 42841   014248  006F FFDF FFEA     	movff	tblptrh,fsr0h
 42842   01424E  50EF               	movf	indf0,w,c
 42843   014250                     u8260:
 42844   014250  6EE6               	movwf	postinc1,c
 42845   014252  0E00               	movlw	0
 42846   014254  6EE6               	movwf	postinc1,c
 42847   014256  ECE7  F0AD         	call	_fputc	;wreg free
 42848                           
 42849                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 981:         ++cp;
 42850                           ;stkvar	_cp @ sp[(-8)+2]
 42851   01425A  0EFA               	movlw	-6
 42852   01425C  50E3               	movf	plusw1,w,c
 42853   01425E  0F01               	addlw	1
 42854   014260  6E22               	movwf	btemp^0,c
 42855   014262  0EFA               	movlw	-6
 42856   014264  0060  F08B  FFE3   	movff	btemp,plusw1
 42857   01426A  6A22               	clrf	btemp^0,c
 42858   01426C  0EFB               	movlw	-5
 42859   01426E  50E3               	movf	plusw1,w,c
 42860   014270  2022               	addwfc	btemp^0,w,c
 42861   014272  6E22               	movwf	btemp^0,c
 42862   014274  0EFB               	movlw	-5
 42863   014276  0060  F08B  FFE3   	movff	btemp,plusw1
 42864   01427C                     l11759:
 42865                           
 42866                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 979:     while (p--) {
 42867                           ;stkvar	_p @ sp[(-8)+6]
 42868   01427C  50E1               	movf	fsr1l,w,c
 42869   01427E  0FFE               	addlw	-2
 42870   014280  6ED9               	movwf	fsr2l,c
 42871   014282  50E2               	movf	fsr1h,w,c
 42872   014284  6EDA               	movwf	fsr2h,c
 42873   014286  0EFF               	movlw	255
 42874   014288  22DA               	addwfc	fsr2h,f,c
 42875   01428A  06DE               	decf	postinc2,f,c
 42876   01428C  0E00               	movlw	0
 42877   01428E  5ADD               	subwfb	postdec2,f,c
 42878   014290  28DE               	incf	postinc2,w,c
 42879   014292  E1C0               	bnz	l11755
 42880   014294  28DE               	incf	postinc2,w,c
 42881   014296  A4D8               	btfss	status,2,c
 42882   014298  D7BD               	goto	l11755
 42883                           
 42884                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 986:     if (flags & (1 << 0)
      +                          ) {
 42885   01429A  0101               	movlb	1	; () banked
 42886   01429C  B1C5               	btfsc	_flags& (0+255),0,b
 42887   01429E  D01F               	goto	l11767
 42888   0142A0  D031               	goto	u8290
 42889   0142A2                     l11763:
 42890                           
 42891                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 988:             fputc(' ', f
      +                          p);
 42892                           ;stkvar	_fp @ sp[(-8)+-2]
 42893   0142A2  0EF6               	movlw	-10
 42894   0142A4  006F FF8F FFE6     	movff	plusw1,postinc1
 42895   0142AA  006F FF8F FFE6     	movff	plusw1,postinc1
 42896   0142B0  0E20               	movlw	32
 42897   0142B2  6EE6               	movwf	postinc1,c
 42898   0142B4  0E00               	movlw	0
 42899   0142B6  6EE6               	movwf	postinc1,c
 42900   0142B8  ECE7  F0AD         	call	_fputc	;wreg free
 42901                           
 42902                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 989:             ++l;
 42903                           ;stkvar	_l @ sp[(-8)+0]
 42904   0142BC  0EF8               	movlw	-8
 42905   0142BE  50E3               	movf	plusw1,w,c
 42906   0142C0  0F01               	addlw	1
 42907   0142C2  6E22               	movwf	btemp^0,c
 42908   0142C4  0EF8               	movlw	-8
 42909   0142C6  0060  F08B  FFE3   	movff	btemp,plusw1
 42910   0142CC  6A22               	clrf	btemp^0,c
 42911   0142CE  0EF9               	movlw	-7
 42912   0142D0  50E3               	movf	plusw1,w,c
 42913   0142D2  2022               	addwfc	btemp^0,w,c
 42914   0142D4  6E22               	movwf	btemp^0,c
 42915   0142D6  0EF9               	movlw	-7
 42916   0142D8  0060  F08B  FFE3   	movff	btemp,plusw1
 42917   0142DE                     l11767:
 42918                           
 42919                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 987:         while (l < w) {
 42920                           ;stkvar	_w @ sp[(-8)+4]
 42921                           ;stkvar	_l @ sp[(-8)+0]
 42922   0142DE  50E1               	movf	fsr1l,w,c
 42923   0142E0  0FF8               	addlw	-8
 42924   0142E2  6ED9               	movwf	fsr2l,c
 42925   0142E4  50E2               	movf	fsr1h,w,c
 42926   0142E6  6EDA               	movwf	fsr2h,c
 42927   0142E8  0EFF               	movlw	255
 42928   0142EA  22DA               	addwfc	fsr2h,f,c
 42929   0142EC  0EFC               	movlw	-4
 42930   0142EE  50E3               	movf	plusw1,w,c
 42931   0142F0  5CDE               	subwf	postinc2,w,c
 42932   0142F2  50DE               	movf	postinc2,w,c
 42933   0142F4  0A80               	xorlw	128
 42934   0142F6  6E22               	movwf	btemp^0,c
 42935   0142F8  0EFD               	movlw	-3
 42936   0142FA  50E3               	movf	plusw1,w,c
 42937   0142FC  0A80               	xorlw	128
 42938   0142FE  5822               	subwfb	btemp^0,w,c
 42939   014300  A0D8               	btfss	status,0,c
 42940   014302  D7CF               	goto	l11763
 42941   014304                     u8290:
 42942                           
 42943                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 995:     return l;
 42944                           ;stkvar	_l @ sp[(-8)+0]
 42945   014304  0EF8               	movlw	-8
 42946   014306  006F FF8C  F022    	movff	plusw1,btemp
 42947   01430C  0EF9               	movlw	-7
 42948   01430E  006F FF8C  F023    	movff	plusw1,btemp+1
 42949                           
 42950                           ; _stoa: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize 
      +                          = 4, vargsize = 0
 42951   014314  0EF4               	movlw	244
 42952   014316  26E1               	addwf	fsr1l,f,c
 42953   014318  0EFF               	movlw	255
 42954   01431A  22E2               	addwfc	fsr1h,f,c
 42955   01431C  0012               	return		;funcret
 42956   01431E                     __end_of_stoa:
 42957                           	callstack 0
 42958                           
 42959 ;; *************** function _read_prec_or_width *****************
 42960 ;; Defined at:
 42961 ;;		line 1158 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c"
 42962 ;; Parameters:    Size  Location     Type
 42963 ;;  fmt             2  [STACK] PTR PTR const unsigned c
 42964 ;;		 -> cfmt(2), 
 42965 ;;  ap              2  [STACK] PTR PTR void [1]
 42966 ;;		 -> ap(2), ap(2), 
 42967 ;; Auto vars:     Size  Location     Type
 42968 ;;  c               1  [STACK] unsigned char 
 42969 ;;  n               2  [STACK] int 
 42970 ;; Return value:  Size  Location     Type
 42971 ;;                  2  [STACK] int 
 42972 ;; Registers used:
 42973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 42974 ;; Tracked objects:
 42975 ;;		On entry : 3F/1
 42976 ;;		On exit  : 0/0
 42977 ;;		Unchanged: 0/0
 42978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 42979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42983 ;;Total ram usage:        0 bytes
 42984 ;; Hardware stack levels used: 1
 42985 ;; Hardware stack levels required when called: 3
 42986 ;; This function calls:
 42987 ;;		Nothing
 42988 ;; This function is called by:
 42989 ;;		_vfpfcnvrt
 42990 ;; This function uses a reentrant model
 42991 ;;
 42992                           
 42993                           	psect	text102
 42994   015952                     __ptext102:
 42995                           	callstack 0
 42996   015952                     _read_prec_or_width:
 42997                           	callstack 0
 42998                           
 42999                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43000   015952  52E6               	movf	postinc1,f,c
 43001   015954  52E6               	movf	postinc1,f,c
 43002   015956  52E6               	movf	postinc1,f,c
 43003                           
 43004                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1159:     int n = 0;
 43005                           ;stkvar	_n @ sp[(-3)+1]
 43006                           
 43007                           ;incstack = 0
 43008   015958  0EFE               	movlw	-2
 43009   01595A  6AE3               	clrf	plusw1,c
 43010   01595C  0EFF               	movlw	-1
 43011   01595E  6AE3               	clrf	plusw1,c
 43012                           
 43013                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1160:     if ((*fmt)[0] == '*
      +                          ') {
 43014                           ;stkvar	_fmt @ sp[(-3)+-2]
 43015   015960  0EFB               	movlw	-5
 43016   015962  006F FF8F FFD9     	movff	plusw1,fsr2l
 43017   015968  0EFC               	movlw	-4
 43018   01596A  006F FF8F FFDA     	movff	plusw1,fsr2h
 43019   015970  006F FF7B FFF6     	movff	postinc2,tblptrl
 43020   015976  006F FF77 FFF7     	movff	postdec2,tblptrh
 43021   01597C                     	if	0	;tblptru may be non-zero
 43022   01597C                     	endif
 43023   01597C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 43024   01597C  0E00               	movlw	low (__pmediumconst shr (0+16))
 43025   01597E  6EF8               	movwf	tblptru,c
 43026   015980                     	endif
 43027   015980  0008               	tblrd		*
 43028   015982  50F5               	movf	tablat,w,c
 43029   015984  0A2A               	xorlw	42
 43030   015986  A4D8               	btfss	status,2,c
 43031   015988  D05D               	goto	l7951
 43032                           
 43033                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1161:         ++*fmt;
 43034                           ;stkvar	_fmt @ sp[(-3)+-2]
 43035   01598A  0EFB               	movlw	-5
 43036   01598C  006F FF8F FFD9     	movff	plusw1,fsr2l
 43037   015992  0EFC               	movlw	-4
 43038   015994  006F FF8F FFDA     	movff	plusw1,fsr2h
 43039   01599A  2ADE               	incf	postinc2,f,c
 43040   01599C  0E00               	movlw	0
 43041   01599E  22DD               	addwfc	postdec2,f,c
 43042                           
 43043                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1162:         n = (*(int *)__
      +                          va_arg(*(int **)*ap, (int)0));
 43044                           ;stkvar	_ap @ sp[(-3)+-4]
 43045   0159A0  0EF9               	movlw	-7
 43046   0159A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 43047   0159A8  0EFA               	movlw	-6
 43048   0159AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 43049   0159B0  0E02               	movlw	2
 43050   0159B2  5EDE               	subwf	postinc2,f,c
 43051   0159B4  0E00               	movlw	0
 43052   0159B6  5ADD               	subwfb	postdec2,f,c
 43053   0159B8  006F FF78  F02C    	movff	postinc2,btemp+10
 43054   0159BE  006F FF74  F02D    	movff	postdec2,btemp+11
 43055   0159C4  0060  F0B3  FFD9   	movff	btemp+10,fsr2l
 43056   0159CA  0060  F0B7  FFDA   	movff	btemp+11,fsr2h
 43057   0159D0  006F FF78  F02C    	movff	postinc2,btemp+10
 43058   0159D6  006F FF74  F02D    	movff	postdec2,btemp+11
 43059                           
 43060                           ;stkvar	_n @ sp[(-3)+1]
 43061   0159DC  0EFE               	movlw	-2
 43062   0159DE  0060  F0B3  FFE3   	movff	btemp+10,plusw1
 43063   0159E4  0EFF               	movlw	-1
 43064   0159E6  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 43065                           
 43066                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1163:     } else {
 43067   0159EC  D04C               	goto	u4960
 43068   0159EE                     l7947:
 43069                           
 43070                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1166:             n = n * 10 
      +                          + c;
 43071                           ;stkvar	_n @ sp[(-3)+1]
 43072   0159EE  0EFE               	movlw	-2
 43073   0159F0  006F FF8C  F02C    	movff	plusw1,btemp+10
 43074   0159F6  0EFF               	movlw	-1
 43075   0159F8  006F FF8C  F02D    	movff	plusw1,btemp+11
 43076   0159FE  0E0A               	movlw	10
 43077   015A00  022C               	mulwf	(btemp+10)^0,c
 43078   015A02  006F FFCC  F02A    	movff	prodl,btemp+8
 43079   015A08  006F FFD0  F02B    	movff	prodh,btemp+9
 43080   015A0E  022D               	mulwf	(btemp+11)^0,c
 43081   015A10  50F3               	movf	prodl,w,c
 43082   015A12  262B               	addwf	(btemp+9)^0,f,c
 43083                           
 43084                           ;stkvar	_c @ sp[(-3)+0]
 43085   015A14  0EFD               	movlw	-3
 43086   015A16  50E3               	movf	plusw1,w,c
 43087   015A18  262A               	addwf	(btemp+8)^0,f,c
 43088   015A1A  0E00               	movlw	0
 43089   015A1C  222B               	addwfc	(btemp+9)^0,f,c
 43090                           
 43091                           ;stkvar	_n @ sp[(-3)+1]
 43092   015A1E  0EFE               	movlw	-2
 43093   015A20  0060  F0AB  FFE3   	movff	btemp+8,plusw1
 43094   015A26  0EFF               	movlw	-1
 43095   015A28  0060  F0AF  FFE3   	movff	btemp+9,plusw1
 43096                           
 43097                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1167:             ++*fmt;
 43098                           ;stkvar	_fmt @ sp[(-3)+-2]
 43099   015A2E  0EFB               	movlw	-5
 43100   015A30  006F FF8F FFD9     	movff	plusw1,fsr2l
 43101   015A36  0EFC               	movlw	-4
 43102   015A38  006F FF8F FFDA     	movff	plusw1,fsr2h
 43103   015A3E  2ADE               	incf	postinc2,f,c
 43104   015A40  0E00               	movlw	0
 43105   015A42  22DD               	addwfc	postdec2,f,c
 43106   015A44                     l7951:
 43107                           
 43108                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1165:         while ((c = ((u
      +                          nsigned)(*fmt)[0]) - '0') < 10) {
 43109                           ;stkvar	_fmt @ sp[(-3)+-2]
 43110   015A44  0EFB               	movlw	-5
 43111   015A46  006F FF8F FFD9     	movff	plusw1,fsr2l
 43112   015A4C  0EFC               	movlw	-4
 43113   015A4E  006F FF8F FFDA     	movff	plusw1,fsr2h
 43114   015A54  006F FF7B FFF6     	movff	postinc2,tblptrl
 43115   015A5A  006F FF77 FFF7     	movff	postdec2,tblptrh
 43116   015A60                     	if	0	;tblptru may be non-zero
 43117   015A60                     	endif
 43118   015A60                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 43119   015A60  0E00               	movlw	low (__pmediumconst shr (0+16))
 43120   015A62  6EF8               	movwf	tblptru,c
 43121   015A64                     	endif
 43122   015A64  0008               	tblrd		*
 43123   015A66  006F FFD4  F02D    	movff	tablat,btemp+11
 43124   015A6C  0ED0               	movlw	208
 43125   015A6E  262D               	addwf	(btemp+11)^0,f,c
 43126                           
 43127                           ;stkvar	_c @ sp[(-3)+0]
 43128   015A70  0EFD               	movlw	-3
 43129   015A72  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 43130   015A78  0EFD               	movlw	-3
 43131   015A7A  006F FF8C  F022    	movff	plusw1,btemp
 43132   015A80  0E09               	movlw	9
 43133   015A82  6422               	cpfsgt	btemp^0,c
 43134   015A84  D7B4               	goto	l7947
 43135   015A86                     u4960:
 43136                           
 43137                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1170:     return n;
 43138                           ;stkvar	_n @ sp[(-3)+1]
 43139   015A86  0EFE               	movlw	-2
 43140   015A88  006F FF8C  F022    	movff	plusw1,btemp
 43141   015A8E  0EFF               	movlw	-1
 43142   015A90  006F FF8C  F023    	movff	plusw1,btemp+1
 43143                           
 43144                           ; _read_prec_or_width: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 4, argsize = 4, vargsize = 0
 43145   015A96  0EF9               	movlw	249
 43146   015A98  26E1               	addwf	fsr1l,f,c
 43147   015A9A  0EFF               	movlw	255
 43148   015A9C  22E2               	addwfc	fsr1h,f,c
 43149   015A9E  0012               	return		;funcret
 43150   015AA0                     __end_of_read_prec_or_width:
 43151                           	callstack 0
 43152                           
 43153 ;; *************** function _otoa *****************
 43154 ;; Defined at:
 43155 ;;		line 872 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c"
 43156 ;; Parameters:    Size  Location     Type
 43157 ;;  fp              2  [STACK] PTR struct _IO_FILE
 43158 ;;		 -> f(11), NULL(0), 
 43159 ;;  d               4  [STACK] unsigned long 
 43160 ;; Auto vars:     Size  Location     Type
 43161 ;;  i               2  [STACK] int 
 43162 ;;  w               2  [STACK] int 
 43163 ;;  p               2  [STACK] int 
 43164 ;;  t               1  [STACK] unsigned char 
 43165 ;; Return value:  Size  Location     Type
 43166 ;;                  2  [STACK] int 
 43167 ;; Registers used:
 43168 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
 43169 ;; Tracked objects:
 43170 ;;		On entry : 0/1
 43171 ;;		On exit  : 0/0
 43172 ;;		Unchanged: 0/0
 43173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43178 ;;Total ram usage:        0 bytes
 43179 ;; Hardware stack levels used: 1
 43180 ;; Hardware stack levels required when called: 8
 43181 ;; This function calls:
 43182 ;;		_pad
 43183 ;; This function is called by:
 43184 ;;		_vfpfcnvrt
 43185 ;; This function uses a reentrant model
 43186 ;;
 43187                           
 43188                           	psect	text103
 43189   014C68                     __ptext103:
 43190                           	callstack 0
 43191   014C68                     _otoa:
 43192                           	callstack 0
 43193                           
 43194                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43195   014C68  0E07               	movlw	7
 43196   014C6A  26E1               	addwf	fsr1l,f,c
 43197   014C6C  0E00               	movlw	0
 43198   014C6E  22E2               	addwfc	fsr1h,f,c
 43199                           
 43200                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 872: static int otoa(FILE *fp
      +                          , vfpf_uint_t d);/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 873: {;/opt/m
      +                          icrochip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 875:  char t;;/opt/microchip/xc8/v3.
      +                          00/pic/sources/c99/common/doprnt.c: 877:     int i, w;;/opt/microchip/xc8/v3.00/pic/sour
      +                          ces/c99/common/doprnt.c: 879:  int p;;/opt/microchip/xc8/v3.00/pic/sources/c99/common/do
      +                          prnt.c: 887:     if (!(prec < 0)) {
 43201                           
 43202                           ;incstack = 0
 43203   014C70  0101               	movlb	1	; () banked
 43204   014C72  AFC4               	btfss	(_prec+1)& (0+255),7,b
 43205                           
 43206                           ; BSR set to: 1
 43207                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 888:         flags &= ~(1 << 
      +                          1);
 43208   014C74  93C5               	bcf	_flags& (0+255),1,b
 43209                           
 43210                           ; BSR set to: 1
 43211                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 891:     p = (0 <= prec) ? pr
      +                          ec : 1;
 43212   014C76  AFC4               	btfss	(_prec+1)& (0+255),7,b
 43213   014C78  D00D               	goto	l11679
 43214                           
 43215                           ; BSR set to: 1
 43216   014C7A  0E01               	movlw	1
 43217   014C7C  6E2C               	movwf	(btemp+10)^0,c
 43218   014C7E  0E00               	movlw	0
 43219   014C80  6E2D               	movwf	(btemp+11)^0,c
 43220                           
 43221                           ;stkvar	_p @ sp[(-7)+4]
 43222   014C82  0EFD               	movlw	-3
 43223   014C84  0060  F0B3  FFE3   	movff	btemp+10,plusw1
 43224   014C8A  0EFE               	movlw	-2
 43225   014C8C  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 43226   014C92  D008               	goto	l3207
 43227   014C94                     l11679:
 43228                           
 43229                           ; BSR set to: 1
 43230                           ;stkvar	_p @ sp[(-7)+4]
 43231   014C94  0EFD               	movlw	-3
 43232   014C96  0060  F70F  FFE3   	movff	_prec,plusw1
 43233   014C9C  0EFE               	movlw	-2
 43234   014C9E  0060  F713  FFE3   	movff	_prec+1,plusw1
 43235   014CA4                     l3207:
 43236                           
 43237                           ; BSR set to: 1
 43238                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 893:     w = width;
 43239                           ;stkvar	_w @ sp[(-7)+2]
 43240   014CA4  0EFB               	movlw	-5
 43241   014CA6  0060  F707  FFE3   	movff	_width,plusw1
 43242   014CAC  0EFC               	movlw	-4
 43243   014CAE  0060  F70B  FFE3   	movff	_width+1,plusw1
 43244                           
 43245                           ; BSR set to: 1
 43246                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 896:     i = sizeof(dbuf) - 1
      +                          ;
 43247   014CB4  0E1F               	movlw	31
 43248   014CB6  6E2C               	movwf	(btemp+10)^0,c
 43249   014CB8  0E00               	movlw	0
 43250   014CBA  6E2D               	movwf	(btemp+11)^0,c
 43251                           
 43252                           ;stkvar	_i @ sp[(-7)+0]
 43253   014CBC  0EF9               	movlw	-7
 43254   014CBE  0060  F0B3  FFE3   	movff	btemp+10,plusw1
 43255   014CC4  0EFA               	movlw	-6
 43256   014CC6  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 43257                           
 43258                           ; BSR set to: 1
 43259                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 897:     dbuf[i] = '\0';
 43260   014CCC  6BE5               	clrf	(_dbuf+31)& (0+255),b
 43261                           
 43262                           ; BSR set to: 1
 43263                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 899:     t = 0;
 43264                           ;stkvar	_t @ sp[(-7)+6]
 43265   014CCE  0EFF               	movlw	-1
 43266   014CD0  6AE3               	clrf	plusw1,c
 43267                           
 43268                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 901:     while (!(i < 1) && (
      +                          d != 0
 43269   014CD2  D04F               	goto	l11699
 43270   014CD4                     l11687:
 43271                           
 43272                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 910:     )) {;/opt/microchip/
      +                          xc8/v3.00/pic/sources/c99/common/doprnt.c: 911:         --i;
 43273                           ;stkvar	_i @ sp[(-7)+0]
 43274   014CD4  50E1               	movf	fsr1l,w,c
 43275   014CD6  0FF9               	addlw	-7
 43276   014CD8  6ED9               	movwf	fsr2l,c
 43277   014CDA  50E2               	movf	fsr1h,w,c
 43278   014CDC  6EDA               	movwf	fsr2h,c
 43279   014CDE  0EFF               	movlw	255
 43280   014CE0  22DA               	addwfc	fsr2h,f,c
 43281   014CE2  06DE               	decf	postinc2,f,c
 43282   014CE4  0E00               	movlw	0
 43283   014CE6  5ADD               	subwfb	postdec2,f,c
 43284                           
 43285                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 913:         t = d & 07;
 43286                           ;stkvar	_d @ sp[(-7)+-6]
 43287   014CE8  0EF3               	movlw	-13
 43288   014CEA  006F FF8C  F02D    	movff	plusw1,btemp+11
 43289   014CF0  0E07               	movlw	7
 43290   014CF2  162D               	andwf	(btemp+11)^0,f,c
 43291                           
 43292                           ;stkvar	_t @ sp[(-7)+6]
 43293   014CF4  0EFF               	movlw	-1
 43294   014CF6  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 43295                           
 43296                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 914:         dbuf[i] = (char)
      +                          ((int)'0' + t);
 43297                           ;stkvar	_i @ sp[(-7)+0]
 43298   014CFC  0EF9               	movlw	-7
 43299   014CFE  006F FF8C  F02C    	movff	plusw1,btemp+10
 43300   014D04  0EFA               	movlw	-6
 43301   014D06  006F FF8C  F02D    	movff	plusw1,btemp+11
 43302   014D0C  0EC6               	movlw	low _dbuf
 43303   014D0E  242C               	addwf	(btemp+10)^0,w,c
 43304   014D10  6ED9               	movwf	fsr2l,c
 43305   014D12  0E01               	movlw	high _dbuf
 43306   014D14  202D               	addwfc	(btemp+11)^0,w,c
 43307   014D16  6EDA               	movwf	fsr2h,c
 43308                           
 43309                           ;stkvar	_t @ sp[(-7)+6]
 43310   014D18  0EFF               	movlw	-1
 43311   014D1A  50E3               	movf	plusw1,w,c
 43312   014D1C  0F30               	addlw	48
 43313   014D1E  6EDF               	movwf	indf2,c
 43314                           
 43315                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 919:         --p;
 43316                           ;stkvar	_p @ sp[(-7)+4]
 43317   014D20  50E1               	movf	fsr1l,w,c
 43318   014D22  0FFD               	addlw	-3
 43319   014D24  6ED9               	movwf	fsr2l,c
 43320   014D26  50E2               	movf	fsr1h,w,c
 43321   014D28  6EDA               	movwf	fsr2h,c
 43322   014D2A  0EFF               	movlw	255
 43323   014D2C  22DA               	addwfc	fsr2h,f,c
 43324   014D2E  06DE               	decf	postinc2,f,c
 43325   014D30  0E00               	movlw	0
 43326   014D32  5ADD               	subwfb	postdec2,f,c
 43327                           
 43328                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 923:         --w;
 43329                           ;stkvar	_w @ sp[(-7)+2]
 43330   014D34  50E1               	movf	fsr1l,w,c
 43331   014D36  0FFB               	addlw	-5
 43332   014D38  6ED9               	movwf	fsr2l,c
 43333   014D3A  50E2               	movf	fsr1h,w,c
 43334   014D3C  6EDA               	movwf	fsr2h,c
 43335   014D3E  0EFF               	movlw	255
 43336   014D40  22DA               	addwfc	fsr2h,f,c
 43337   014D42  06DE               	decf	postinc2,f,c
 43338   014D44  0E00               	movlw	0
 43339   014D46  5ADD               	subwfb	postdec2,f,c
 43340                           
 43341                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 924:         d = d >> 3;
 43342   014D48  0E03               	movlw	3
 43343   014D4A  6E2D               	movwf	(btemp+11)^0,c
 43344                           
 43345                           ;stkvar	_d @ sp[(-7)+-6]
 43346   014D4C  50E1               	movf	fsr1l,w,c
 43347   014D4E  0FF3               	addlw	-13
 43348   014D50  6ED9               	movwf	fsr2l,c
 43349   014D52  50E2               	movf	fsr1h,w,c
 43350   014D54  6EDA               	movwf	fsr2h,c
 43351   014D56  0EFF               	movlw	255
 43352   014D58  22DA               	addwfc	fsr2h,f,c
 43353   014D5A  282D               	incf	(btemp+11)^0,w,c
 43354   014D5C  52DE               	movf	postinc2,f,c
 43355   014D5E  D007               	goto	u8100
 43356   014D60                     u8105:
 43357   014D60  52DE               	movf	postinc2,f,c
 43358   014D62  52DE               	movf	postinc2,f,c
 43359   014D64  90D8               	bcf	status,0,c
 43360   014D66  32DD               	rrcf	postdec2,f,c
 43361   014D68  32DD               	rrcf	postdec2,f,c
 43362   014D6A  32DD               	rrcf	postdec2,f,c
 43363   014D6C  32DE               	rrcf	postinc2,f,c
 43364   014D6E                     u8100:
 43365   014D6E  2EE8               	decfsz	wreg,f,c
 43366   014D70  D7F7               	goto	u8105
 43367   014D72                     l11699:
 43368                           
 43369                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 901:     while (!(i < 1) && (
      +                          d != 0
 43370                           ;stkvar	_i @ sp[(-7)+0]
 43371   014D72  0EFA               	movlw	-6
 43372   014D74  BEE3               	btfsc	plusw1,7,c
 43373   014D76  D02B               	goto	u8150
 43374   014D78  0EFA               	movlw	-6
 43375   014D7A  50E3               	movf	plusw1,w,c
 43376   014D7C  E104               	bnz	u8110
 43377   014D7E  0EF9               	movlw	-7
 43378   014D80  04E3               	decf	plusw1,w,c
 43379   014D82  A0D8               	btfss	status,0,c
 43380   014D84  D024               	goto	u8150
 43381   014D86                     u8110:
 43382                           
 43383                           ;stkvar	_d @ sp[(-7)+-6]
 43384   014D86  0EF3               	movlw	-13
 43385   014D88  50E3               	movf	plusw1,w,c
 43386   014D8A  E1A4               	bnz	l11687
 43387   014D8C  0EF4               	movlw	-12
 43388   014D8E  50E3               	movf	plusw1,w,c
 43389   014D90  E1A1               	bnz	l11687
 43390   014D92  0EF5               	movlw	-11
 43391   014D94  50E3               	movf	plusw1,w,c
 43392   014D96  E19E               	bnz	l11687
 43393   014D98  0EF6               	movlw	-10
 43394   014D9A  50E3               	movf	plusw1,w,c
 43395   014D9C  A4D8               	btfss	status,2,c
 43396   014D9E  D79A               	goto	l11687
 43397                           
 43398                           ;stkvar	_p @ sp[(-7)+4]
 43399   014DA0  0EFE               	movlw	-2
 43400   014DA2  BEE3               	btfsc	plusw1,7,c
 43401   014DA4  D007               	goto	u8130
 43402   014DA6  0EFE               	movlw	-2
 43403   014DA8  50E3               	movf	plusw1,w,c
 43404   014DAA  E194               	bnz	l11687
 43405   014DAC  0EFD               	movlw	-3
 43406   014DAE  04E3               	decf	plusw1,w,c
 43407   014DB0  B0D8               	btfsc	status,0,c
 43408   014DB2  D790               	goto	l11687
 43409   014DB4                     u8130:
 43410                           
 43411                           ;stkvar	_w @ sp[(-7)+2]
 43412   014DB4  0EFC               	movlw	-4
 43413   014DB6  BEE3               	btfsc	plusw1,7,c
 43414   014DB8  D00A               	goto	u8150
 43415   014DBA  0EFC               	movlw	-4
 43416   014DBC  50E3               	movf	plusw1,w,c
 43417   014DBE  E104               	bnz	u8140
 43418   014DC0  0EFB               	movlw	-5
 43419   014DC2  04E3               	decf	plusw1,w,c
 43420   014DC4  A0D8               	btfss	status,0,c
 43421   014DC6  D003               	goto	u8150
 43422   014DC8                     u8140:
 43423   014DC8  0101               	movlb	1	; () banked
 43424   014DCA  B3C5               	btfsc	_flags& (0+255),1,b
 43425   014DCC  D783               	goto	l11687
 43426   014DCE                     u8150:
 43427                           
 43428                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 929:     if ((t || prec == 0)
      +                           && (flags & (1 << 4))) {
 43429                           ;stkvar	_t @ sp[(-7)+6]
 43430   014DCE  0EFF               	movlw	-1
 43431   014DD0  50E3               	movf	plusw1,w,c
 43432   014DD2  A4D8               	btfss	status,2,c
 43433   014DD4  D005               	goto	u8170
 43434   014DD6  0101               	movlb	1	; () banked
 43435   014DD8  51C3               	movf	_prec& (0+255),w,b
 43436   014DDA  11C4               	iorwf	(_prec+1)& (0+255),w,b
 43437   014DDC  A4D8               	btfss	status,2,c
 43438   014DDE  D027               	goto	l11719
 43439   014DE0                     u8170:
 43440   014DE0  0101               	movlb	1	; () banked
 43441   014DE2  A9C5               	btfss	_flags& (0+255),4,b
 43442   014DE4  D024               	goto	l11719
 43443                           
 43444                           ; BSR set to: 1
 43445                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 930:         --i;
 43446                           ;stkvar	_i @ sp[(-7)+0]
 43447   014DE6  50E1               	movf	fsr1l,w,c
 43448   014DE8  0FF9               	addlw	-7
 43449   014DEA  6ED9               	movwf	fsr2l,c
 43450   014DEC  50E2               	movf	fsr1h,w,c
 43451   014DEE  6EDA               	movwf	fsr2h,c
 43452   014DF0  0EFF               	movlw	255
 43453   014DF2  22DA               	addwfc	fsr2h,f,c
 43454   014DF4  06DE               	decf	postinc2,f,c
 43455   014DF6  0E00               	movlw	0
 43456   014DF8  5ADD               	subwfb	postdec2,f,c
 43457                           
 43458                           ; BSR set to: 1
 43459                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 931:         dbuf[i] = '0';
 43460                           ;stkvar	_i @ sp[(-7)+0]
 43461   014DFA  0EF9               	movlw	-7
 43462   014DFC  006F FF8C  F02C    	movff	plusw1,btemp+10
 43463   014E02  0EFA               	movlw	-6
 43464   014E04  006F FF8C  F02D    	movff	plusw1,btemp+11
 43465   014E0A  0EC6               	movlw	low _dbuf
 43466   014E0C  242C               	addwf	(btemp+10)^0,w,c
 43467   014E0E  6ED9               	movwf	fsr2l,c
 43468   014E10  0E01               	movlw	high _dbuf
 43469   014E12  202D               	addwfc	(btemp+11)^0,w,c
 43470   014E14  6EDA               	movwf	fsr2h,c
 43471   014E16  0E30               	movlw	48
 43472   014E18  6EDF               	movwf	indf2,c
 43473                           
 43474                           ; BSR set to: 1
 43475                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 932:         --w;
 43476                           ;stkvar	_w @ sp[(-7)+2]
 43477   014E1A  50E1               	movf	fsr1l,w,c
 43478   014E1C  0FFB               	addlw	-5
 43479   014E1E  6ED9               	movwf	fsr2l,c
 43480   014E20  50E2               	movf	fsr1h,w,c
 43481   014E22  6EDA               	movwf	fsr2h,c
 43482   014E24  0EFF               	movlw	255
 43483   014E26  22DA               	addwfc	fsr2h,f,c
 43484   014E28  06DE               	decf	postinc2,f,c
 43485   014E2A  0E00               	movlw	0
 43486   014E2C  5ADD               	subwfb	postdec2,f,c
 43487   014E2E                     l11719:
 43488                           
 43489                           ; BSR set to: 1
 43490                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 937:     return (int) pad(fp,
      +                           &dbuf[i], w);
 43491                           ;stkvar	_w @ sp[(-7)+2]
 43492   014E2E  0EFB               	movlw	-5
 43493   014E30  006F FF8F FFE6     	movff	plusw1,postinc1
 43494   014E36  006F FF8F FFE6     	movff	plusw1,postinc1
 43495                           
 43496                           ;stkvar	_i @ sp[(-9)+0]
 43497   014E3C  0EC6               	movlw	low _dbuf
 43498   014E3E  6E2C               	movwf	(btemp+10)^0,c
 43499   014E40  0E01               	movlw	high _dbuf
 43500   014E42  6E2D               	movwf	(btemp+11)^0,c
 43501   014E44  0EF7               	movlw	-9
 43502   014E46  50E3               	movf	plusw1,w,c
 43503   014E48  262C               	addwf	(btemp+10)^0,f,c
 43504   014E4A  0EF8               	movlw	-8
 43505   014E4C  50E3               	movf	plusw1,w,c
 43506   014E4E  222D               	addwfc	(btemp+11)^0,f,c
 43507   014E50  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 43508   014E56  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 43509                           
 43510                           ;stkvar	_fp @ sp[(-11)+-2]
 43511   014E5C  0EF3               	movlw	-13
 43512   014E5E  006F FF8F FFE6     	movff	plusw1,postinc1
 43513   014E64  006F FF8F FFE6     	movff	plusw1,postinc1
 43514   014E6A  ECB9  F0B1         	call	_pad	;wreg free
 43515                           
 43516                           ; _otoa: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize 
      +                          = 6, vargsize = 0
 43517   014E6E  0EF3               	movlw	243
 43518   014E70  26E1               	addwf	fsr1l,f,c
 43519   014E72  0EFF               	movlw	255
 43520   014E74  22E2               	addwfc	fsr1h,f,c
 43521   014E76  0012               	return		;funcret
 43522   014E78                     __end_of_otoa:
 43523                           	callstack 0
 43524                           
 43525 ;; *************** function _dtoa *****************
 43526 ;; Defined at:
 43527 ;;		line 513 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c"
 43528 ;; Parameters:    Size  Location     Type
 43529 ;;  fp              2  [STACK] PTR struct _IO_FILE
 43530 ;;		 -> f(11), NULL(0), 
 43531 ;;  d               4  [STACK] long 
 43532 ;; Auto vars:     Size  Location     Type
 43533 ;;  i               2  [STACK] int 
 43534 ;;  w               2  [STACK] int 
 43535 ;;  p               2  [STACK] int 
 43536 ;;  s               1  [STACK] unsigned char 
 43537 ;; Return value:  Size  Location     Type
 43538 ;;                  2  [STACK] int 
 43539 ;; Registers used:
 43540 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl
 43541 ;; Tracked objects:
 43542 ;;		On entry : 0/1
 43543 ;;		On exit  : 0/0
 43544 ;;		Unchanged: 0/0
 43545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43550 ;;Total ram usage:        0 bytes
 43551 ;; Hardware stack levels used: 1
 43552 ;; Hardware stack levels required when called: 8
 43553 ;; This function calls:
 43554 ;;		___aldiv
 43555 ;;		___almod
 43556 ;;		_abs
 43557 ;;		_pad
 43558 ;; This function is called by:
 43559 ;;		_vfpfcnvrt
 43560 ;; This function uses a reentrant model
 43561 ;;
 43562                           
 43563                           	psect	text104
 43564   013DB4                     __ptext104:
 43565                           	callstack 0
 43566   013DB4                     _dtoa:
 43567                           	callstack 0
 43568                           
 43569                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43570   013DB4  0E09               	movlw	9
 43571   013DB6  26E1               	addwf	fsr1l,f,c
 43572   013DB8  0E00               	movlw	0
 43573   013DBA  22E2               	addwfc	fsr1h,f,c
 43574                           
 43575                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 513: static int dtoa(FILE *fp
      +                          , vfpf_sint_t d);/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 514: {;/opt/m
      +                          icrochip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 515:  char s;;/opt/microchip/xc8/v3.
      +                          00/pic/sources/c99/common/doprnt.c: 516:     int i, w;;/opt/microchip/xc8/v3.00/pic/sour
      +                          ces/c99/common/doprnt.c: 518:  int p;;/opt/microchip/xc8/v3.00/pic/sources/c99/common/do
      +                          prnt.c: 524:     s = d < 0 ? 1 : 0;
 43576                           ;stkvar	_d @ sp[(-9)+-6]
 43577                           
 43578                           ;incstack = 0
 43579   013DBC  0EF4               	movlw	-12
 43580   013DBE  AEE3               	btfss	plusw1,7,c
 43581   013DC0  D003               	goto	u7940
 43582   013DC2  6A2D               	clrf	(btemp+11)^0,c
 43583   013DC4  2A2D               	incf	(btemp+11)^0,f,c
 43584   013DC6  D001               	goto	u7958
 43585   013DC8                     u7940:
 43586   013DC8  6A2D               	clrf	(btemp+11)^0,c
 43587   013DCA                     u7958:
 43588                           
 43589                           ;stkvar	_s @ sp[(-9)+8]
 43590   013DCA  0EFF               	movlw	-1
 43591   013DCC  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 43592                           
 43593                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 529:     if (!(prec < 0)) {
 43594   013DD2  0101               	movlb	1	; () banked
 43595   013DD4  AFC4               	btfss	(_prec+1)& (0+255),7,b
 43596                           
 43597                           ; BSR set to: 1
 43598                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 530:         flags &= ~(1 << 
      +                          1);
 43599   013DD6  93C5               	bcf	_flags& (0+255),1,b
 43600                           
 43601                           ; BSR set to: 1
 43602                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 533:     p = (0 <= prec) ? pr
      +                          ec : 1;
 43603   013DD8  AFC4               	btfss	(_prec+1)& (0+255),7,b
 43604   013DDA  D00D               	goto	l11617
 43605                           
 43606                           ; BSR set to: 1
 43607   013DDC  0E01               	movlw	1
 43608   013DDE  6E2C               	movwf	(btemp+10)^0,c
 43609   013DE0  0E00               	movlw	0
 43610   013DE2  6E2D               	movwf	(btemp+11)^0,c
 43611                           
 43612                           ;stkvar	_p @ sp[(-9)+6]
 43613   013DE4  0EFD               	movlw	-3
 43614   013DE6  0060  F0B3  FFE3   	movff	btemp+10,plusw1
 43615   013DEC  0EFE               	movlw	-2
 43616   013DEE  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 43617   013DF4  D008               	goto	l3182
 43618   013DF6                     l11617:
 43619                           
 43620                           ; BSR set to: 1
 43621                           ;stkvar	_p @ sp[(-9)+6]
 43622   013DF6  0EFD               	movlw	-3
 43623   013DF8  0060  F70F  FFE3   	movff	_prec,plusw1
 43624   013DFE  0EFE               	movlw	-2
 43625   013E00  0060  F713  FFE3   	movff	_prec+1,plusw1
 43626   013E06                     l3182:
 43627                           
 43628                           ; BSR set to: 1
 43629                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 535:     w = width;
 43630                           ;stkvar	_w @ sp[(-9)+4]
 43631   013E06  0EFB               	movlw	-5
 43632   013E08  0060  F707  FFE3   	movff	_width,plusw1
 43633   013E0E  0EFC               	movlw	-4
 43634   013E10  0060  F70B  FFE3   	movff	_width+1,plusw1
 43635                           
 43636                           ; BSR set to: 1
 43637                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 536:     if (s
 43638                           ;stkvar	_s @ sp[(-9)+8]
 43639   013E16  0EFF               	movlw	-1
 43640   013E18  50E3               	movf	plusw1,w,c
 43641   013E1A  A4D8               	btfss	status,2,c
 43642   013E1C  D002               	goto	u7990
 43643                           
 43644                           ; BSR set to: 1
 43645   013E1E  A5C5               	btfss	_flags& (0+255),2,b
 43646   013E20  D025               	goto	l3183
 43647   013E22                     u7990:
 43648                           
 43649                           ; BSR set to: 1
 43650                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 540:     ) {;/opt/microchip/x
      +                          c8/v3.00/pic/sources/c99/common/doprnt.c: 541:         --w;
 43651                           ;stkvar	_w @ sp[(-9)+4]
 43652   013E22  50E1               	movf	fsr1l,w,c
 43653   013E24  0FFB               	addlw	-5
 43654   013E26  6ED9               	movwf	fsr2l,c
 43655   013E28  50E2               	movf	fsr1h,w,c
 43656   013E2A  6EDA               	movwf	fsr2h,c
 43657   013E2C  0EFF               	movlw	255
 43658   013E2E  22DA               	addwfc	fsr2h,f,c
 43659   013E30  06DE               	decf	postinc2,f,c
 43660   013E32  0E00               	movlw	0
 43661   013E34  5ADD               	subwfb	postdec2,f,c
 43662                           
 43663                           ; BSR set to: 1
 43664                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 542:   s = s ? '-' : '+';
 43665                           ;stkvar	_s @ sp[(-9)+8]
 43666   013E36  0EFF               	movlw	-1
 43667   013E38  50E3               	movf	plusw1,w,c
 43668   013E3A  A4D8               	btfss	status,2,c
 43669   013E3C  D002               	goto	l11629
 43670                           
 43671                           ; BSR set to: 1
 43672   013E3E  0E2B               	movlw	43
 43673   013E40  D001               	goto	L39
 43674   013E42                     l11629:
 43675                           
 43676                           ; BSR set to: 1
 43677   013E42  0E2D               	movlw	45
 43678   013E44                     L39:
 43679   013E44  6E2C               	movwf	(btemp+10)^0,c
 43680   013E46  0E00               	movlw	0
 43681   013E48  6E2D               	movwf	(btemp+11)^0,c
 43682                           
 43683                           ;stkvar	_dtoa$5755 @ sp[(-9)+0]
 43684   013E4A  0EF7               	movlw	-9
 43685   013E4C  0060  F0B3  FFE3   	movff	btemp+10,plusw1
 43686   013E52  0EF8               	movlw	-8
 43687   013E54  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 43688                           
 43689                           ; BSR set to: 1
 43690                           ;stkvar	_dtoa$5755 @ sp[(-9)+0]
 43691                           ;stkvar	_s @ sp[(-9)+8]
 43692   013E5A  0EF7               	movlw	-9
 43693   013E5C  006F FF8C  F022    	movff	plusw1,btemp
 43694   013E62  0EFF               	movlw	-1
 43695   013E64  0060  F08B  FFE3   	movff	btemp,plusw1
 43696                           
 43697                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 543:     }
 43698   013E6A  D00F               	goto	l11637
 43699   013E6C                     l3183:
 43700                           
 43701                           ; BSR set to: 1
 43702   013E6C  A7C5               	btfss	_flags& (0+255),3,b
 43703   013E6E  D00D               	goto	l11637
 43704                           
 43705                           ; BSR set to: 1
 43706                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 546:         --w;
 43707                           ;stkvar	_w @ sp[(-9)+4]
 43708   013E70  50E1               	movf	fsr1l,w,c
 43709   013E72  0FFB               	addlw	-5
 43710   013E74  6ED9               	movwf	fsr2l,c
 43711   013E76  50E2               	movf	fsr1h,w,c
 43712   013E78  6EDA               	movwf	fsr2h,c
 43713   013E7A  0EFF               	movlw	255
 43714   013E7C  22DA               	addwfc	fsr2h,f,c
 43715   013E7E  06DE               	decf	postinc2,f,c
 43716   013E80  0E00               	movlw	0
 43717   013E82  5ADD               	subwfb	postdec2,f,c
 43718                           
 43719                           ; BSR set to: 1
 43720                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 547:   s = ' ';
 43721                           ;stkvar	_s @ sp[(-9)+8]
 43722   013E84  0EFF               	movlw	-1
 43723   013E86  6AE3               	clrf	plusw1,c
 43724   013E88  8AE3               	bsf	plusw1,5,c
 43725   013E8A                     l11637:
 43726                           
 43727                           ; BSR set to: 1
 43728                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 552:     i = sizeof(dbuf) - 1
      +                          ;
 43729   013E8A  0E1F               	movlw	31
 43730   013E8C  6E2C               	movwf	(btemp+10)^0,c
 43731   013E8E  0E00               	movlw	0
 43732   013E90  6E2D               	movwf	(btemp+11)^0,c
 43733                           
 43734                           ;stkvar	_i @ sp[(-9)+2]
 43735   013E92  0EF9               	movlw	-7
 43736   013E94  0060  F0B3  FFE3   	movff	btemp+10,plusw1
 43737   013E9A  0EFA               	movlw	-6
 43738   013E9C  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 43739                           
 43740                           ; BSR set to: 1
 43741                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 553:     dbuf[i] = '\0';
 43742   013EA2  6BE5               	clrf	(_dbuf+31)& (0+255),b
 43743                           
 43744                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 554:     while (!(i < 1) && (
      +                          d != 0
 43745   013EA4  D07B               	goto	l11651
 43746   013EA6                     l11641:
 43747                           
 43748                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 563:     )) {;/opt/microchip/
      +                          xc8/v3.00/pic/sources/c99/common/doprnt.c: 564:         --i;
 43749                           ;stkvar	_i @ sp[(-9)+2]
 43750   013EA6  50E1               	movf	fsr1l,w,c
 43751   013EA8  0FF9               	addlw	-7
 43752   013EAA  6ED9               	movwf	fsr2l,c
 43753   013EAC  50E2               	movf	fsr1h,w,c
 43754   013EAE  6EDA               	movwf	fsr2h,c
 43755   013EB0  0EFF               	movlw	255
 43756   013EB2  22DA               	addwfc	fsr2h,f,c
 43757   013EB4  06DE               	decf	postinc2,f,c
 43758   013EB6  0E00               	movlw	0
 43759   013EB8  5ADD               	subwfb	postdec2,f,c
 43760                           
 43761                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 565:         dbuf[i] = (char)
      +                          ((int)'0' + abs(d % 10));
 43762   013EBA  0E0A               	movlw	10
 43763   013EBC  6EE6               	movwf	postinc1,c
 43764   013EBE  0E00               	movlw	0
 43765   013EC0  6EE6               	movwf	postinc1,c
 43766   013EC2  0E00               	movlw	0
 43767   013EC4  6EE6               	movwf	postinc1,c
 43768   013EC6  0E00               	movlw	0
 43769   013EC8  6EE6               	movwf	postinc1,c
 43770                           
 43771                           ;stkvar	_d @ sp[(-13)+-6]
 43772   013ECA  0EED               	movlw	-19
 43773   013ECC  006F FF8F FFE6     	movff	plusw1,postinc1
 43774   013ED2  006F FF8F FFE6     	movff	plusw1,postinc1
 43775   013ED8  006F FF8F FFE6     	movff	plusw1,postinc1
 43776   013EDE  006F FF8F FFE6     	movff	plusw1,postinc1
 43777   013EE4  EC9A  F0AA         	call	___almod	;wreg free
 43778   013EE8  C022  F02C         	movff	btemp,btemp+10
 43779   013EEC  C023  F02D         	movff	btemp+1,btemp+11
 43780   013EF0  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 43781   013EF6  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 43782   013EFC  EC83  F0BC         	call	_abs	;wreg free
 43783   013F00  0E30               	movlw	48
 43784   013F02  2622               	addwf	btemp^0,f,c
 43785                           
 43786                           ;stkvar	_i @ sp[(-9)+2]
 43787   013F04  0EF9               	movlw	-7
 43788   013F06  006F FF8C  F02C    	movff	plusw1,btemp+10
 43789   013F0C  0EFA               	movlw	-6
 43790   013F0E  006F FF8C  F02D    	movff	plusw1,btemp+11
 43791   013F14  0EC6               	movlw	low _dbuf
 43792   013F16  242C               	addwf	(btemp+10)^0,w,c
 43793   013F18  6ED9               	movwf	fsr2l,c
 43794   013F1A  0E01               	movlw	high _dbuf
 43795   013F1C  202D               	addwfc	(btemp+11)^0,w,c
 43796   013F1E  6EDA               	movwf	fsr2h,c
 43797   013F20  0060  F08B  FFDF   	movff	btemp,indf2
 43798                           
 43799                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 567:         --p;
 43800                           ;stkvar	_p @ sp[(-9)+6]
 43801   013F26  50E1               	movf	fsr1l,w,c
 43802   013F28  0FFD               	addlw	-3
 43803   013F2A  6ED9               	movwf	fsr2l,c
 43804   013F2C  50E2               	movf	fsr1h,w,c
 43805   013F2E  6EDA               	movwf	fsr2h,c
 43806   013F30  0EFF               	movlw	255
 43807   013F32  22DA               	addwfc	fsr2h,f,c
 43808   013F34  06DE               	decf	postinc2,f,c
 43809   013F36  0E00               	movlw	0
 43810   013F38  5ADD               	subwfb	postdec2,f,c
 43811                           
 43812                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 571:         --w;
 43813                           ;stkvar	_w @ sp[(-9)+4]
 43814   013F3A  50E1               	movf	fsr1l,w,c
 43815   013F3C  0FFB               	addlw	-5
 43816   013F3E  6ED9               	movwf	fsr2l,c
 43817   013F40  50E2               	movf	fsr1h,w,c
 43818   013F42  6EDA               	movwf	fsr2h,c
 43819   013F44  0EFF               	movlw	255
 43820   013F46  22DA               	addwfc	fsr2h,f,c
 43821   013F48  06DE               	decf	postinc2,f,c
 43822   013F4A  0E00               	movlw	0
 43823   013F4C  5ADD               	subwfb	postdec2,f,c
 43824                           
 43825                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 572:         d = d / 10;
 43826   013F4E  0E0A               	movlw	10
 43827   013F50  6EE6               	movwf	postinc1,c
 43828   013F52  0E00               	movlw	0
 43829   013F54  6EE6               	movwf	postinc1,c
 43830   013F56  0E00               	movlw	0
 43831   013F58  6EE6               	movwf	postinc1,c
 43832   013F5A  0E00               	movlw	0
 43833   013F5C  6EE6               	movwf	postinc1,c
 43834                           
 43835                           ;stkvar	_d @ sp[(-13)+-6]
 43836   013F5E  0EED               	movlw	-19
 43837   013F60  006F FF8F FFE6     	movff	plusw1,postinc1
 43838   013F66  006F FF8F FFE6     	movff	plusw1,postinc1
 43839   013F6C  006F FF8F FFE6     	movff	plusw1,postinc1
 43840   013F72  006F FF8F FFE6     	movff	plusw1,postinc1
 43841   013F78  EC0D  F0A9         	call	___aldiv	;wreg free
 43842                           
 43843                           ;stkvar	_d @ sp[(-9)+-6]
 43844   013F7C  0EF1               	movlw	-15
 43845   013F7E  0060  F08B  FFE3   	movff	btemp,plusw1
 43846   013F84  0EF2               	movlw	-14
 43847   013F86  0060  F08F  FFE3   	movff	btemp+1,plusw1
 43848   013F8C  0EF3               	movlw	-13
 43849   013F8E  0060  F093  FFE3   	movff	btemp+2,plusw1
 43850   013F94  0EF4               	movlw	-12
 43851   013F96  0060  F097  FFE3   	movff	btemp+3,plusw1
 43852   013F9C                     l11651:
 43853                           
 43854                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 554:     while (!(i < 1) && (
      +                          d != 0
 43855                           ;stkvar	_i @ sp[(-9)+2]
 43856   013F9C  0EFA               	movlw	-6
 43857   013F9E  BEE3               	btfsc	plusw1,7,c
 43858   013FA0  D02B               	goto	u8060
 43859   013FA2  0EFA               	movlw	-6
 43860   013FA4  50E3               	movf	plusw1,w,c
 43861   013FA6  E104               	bnz	u8020
 43862   013FA8  0EF9               	movlw	-7
 43863   013FAA  04E3               	decf	plusw1,w,c
 43864   013FAC  A0D8               	btfss	status,0,c
 43865   013FAE  D024               	goto	u8060
 43866   013FB0                     u8020:
 43867                           
 43868                           ;stkvar	_d @ sp[(-9)+-6]
 43869   013FB0  0EF1               	movlw	-15
 43870   013FB2  50E3               	movf	plusw1,w,c
 43871   013FB4  E109               	bnz	u8031
 43872   013FB6  0EF2               	movlw	-14
 43873   013FB8  50E3               	movf	plusw1,w,c
 43874   013FBA  E106               	bnz	u8031
 43875   013FBC  0EF3               	movlw	-13
 43876   013FBE  50E3               	movf	plusw1,w,c
 43877   013FC0  E103               	bnz	u8031
 43878   013FC2  0EF4               	movlw	-12
 43879   013FC4  50E3               	movf	plusw1,w,c
 43880   013FC6  A4D8               	btfss	status,2,c
 43881   013FC8                     u8031:
 43882   013FC8  D76E               	goto	l11641
 43883                           
 43884                           ;stkvar	_p @ sp[(-9)+6]
 43885   013FCA  0EFE               	movlw	-2
 43886   013FCC  BEE3               	btfsc	plusw1,7,c
 43887   013FCE  D007               	goto	u8040
 43888   013FD0  0EFE               	movlw	-2
 43889   013FD2  50E3               	movf	plusw1,w,c
 43890   013FD4  E103               	bnz	u8041
 43891   013FD6  0EFD               	movlw	-3
 43892   013FD8  04E3               	decf	plusw1,w,c
 43893   013FDA  B0D8               	btfsc	status,0,c
 43894   013FDC                     u8041:
 43895   013FDC  D764               	goto	l11641
 43896   013FDE                     u8040:
 43897                           
 43898                           ;stkvar	_w @ sp[(-9)+4]
 43899   013FDE  0EFC               	movlw	-4
 43900   013FE0  BEE3               	btfsc	plusw1,7,c
 43901   013FE2  D00A               	goto	u8060
 43902   013FE4  0EFC               	movlw	-4
 43903   013FE6  50E3               	movf	plusw1,w,c
 43904   013FE8  E104               	bnz	u8050
 43905   013FEA  0EFB               	movlw	-5
 43906   013FEC  04E3               	decf	plusw1,w,c
 43907   013FEE  A0D8               	btfss	status,0,c
 43908   013FF0  D003               	goto	u8060
 43909   013FF2                     u8050:
 43910   013FF2  0101               	movlb	1	; () banked
 43911   013FF4  B3C5               	btfsc	_flags& (0+255),1,b
 43912   013FF6  D757               	goto	l11641
 43913   013FF8                     u8060:
 43914                           
 43915                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 576:     if (s != 0) {
 43916                           ;stkvar	_s @ sp[(-9)+8]
 43917   013FF8  0EFF               	movlw	-1
 43918   013FFA  50E3               	movf	plusw1,w,c
 43919   013FFC  B4D8               	btfsc	status,2,c
 43920   013FFE  D01C               	goto	l11667
 43921                           
 43922                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 577:         --i;
 43923                           ;stkvar	_i @ sp[(-9)+2]
 43924   014000  50E1               	movf	fsr1l,w,c
 43925   014002  0FF9               	addlw	-7
 43926   014004  6ED9               	movwf	fsr2l,c
 43927   014006  50E2               	movf	fsr1h,w,c
 43928   014008  6EDA               	movwf	fsr2h,c
 43929   01400A  0EFF               	movlw	255
 43930   01400C  22DA               	addwfc	fsr2h,f,c
 43931   01400E  06DE               	decf	postinc2,f,c
 43932   014010  0E00               	movlw	0
 43933   014012  5ADD               	subwfb	postdec2,f,c
 43934                           
 43935                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 578:         dbuf[i] = s;
 43936                           ;stkvar	_s @ sp[(-9)+8]
 43937                           ;stkvar	_i @ sp[(-9)+2]
 43938   014014  0EF9               	movlw	-7
 43939   014016  006F FF8C  F02C    	movff	plusw1,btemp+10
 43940   01401C  0EFA               	movlw	-6
 43941   01401E  006F FF8C  F02D    	movff	plusw1,btemp+11
 43942   014024  0EC6               	movlw	low _dbuf
 43943   014026  242C               	addwf	(btemp+10)^0,w,c
 43944   014028  6ED9               	movwf	fsr2l,c
 43945   01402A  0E01               	movlw	high _dbuf
 43946   01402C  202D               	addwfc	(btemp+11)^0,w,c
 43947   01402E  6EDA               	movwf	fsr2h,c
 43948   014030  0EFF               	movlw	-1
 43949   014032  006F FF8F FFDF     	movff	plusw1,indf2
 43950   014038                     l11667:
 43951                           
 43952                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 582:     return (int) pad(fp,
      +                           &dbuf[i], w);
 43953                           ;stkvar	_w @ sp[(-9)+4]
 43954   014038  0EFB               	movlw	-5
 43955   01403A  006F FF8F FFE6     	movff	plusw1,postinc1
 43956   014040  006F FF8F FFE6     	movff	plusw1,postinc1
 43957                           
 43958                           ;stkvar	_i @ sp[(-11)+2]
 43959   014046  0EC6               	movlw	low _dbuf
 43960   014048  6E2C               	movwf	(btemp+10)^0,c
 43961   01404A  0E01               	movlw	high _dbuf
 43962   01404C  6E2D               	movwf	(btemp+11)^0,c
 43963   01404E  0EF7               	movlw	-9
 43964   014050  50E3               	movf	plusw1,w,c
 43965   014052  262C               	addwf	(btemp+10)^0,f,c
 43966   014054  0EF8               	movlw	-8
 43967   014056  50E3               	movf	plusw1,w,c
 43968   014058  222D               	addwfc	(btemp+11)^0,f,c
 43969   01405A  0060  F0B3  FFE6   	movff	btemp+10,postinc1
 43970   014060  0060  F0B7  FFE6   	movff	btemp+11,postinc1
 43971                           
 43972                           ;stkvar	_fp @ sp[(-13)+-2]
 43973   014066  0EF1               	movlw	-15
 43974   014068  006F FF8F FFE6     	movff	plusw1,postinc1
 43975   01406E  006F FF8F FFE6     	movff	plusw1,postinc1
 43976   014074  ECB9  F0B1         	call	_pad	;wreg free
 43977                           
 43978                           ; _dtoa: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize 
      +                          = 6, vargsize = 0
 43979   014078  0EF1               	movlw	241
 43980   01407A  26E1               	addwf	fsr1l,f,c
 43981   01407C  0EFF               	movlw	255
 43982   01407E  22E2               	addwfc	fsr1h,f,c
 43983   014080  0012               	return		;funcret
 43984   014082                     __end_of_dtoa:
 43985                           	callstack 0
 43986                           
 43987 ;; *************** function _pad *****************
 43988 ;; Defined at:
 43989 ;;		line 193 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c"
 43990 ;; Parameters:    Size  Location     Type
 43991 ;;  fp              2  [STACK] PTR struct _IO_FILE
 43992 ;;		 -> f(11), NULL(0), 
 43993 ;;  buf             2  [STACK] PTR unsigned char 
 43994 ;;		 -> dbuf(32), 
 43995 ;;  p               2  [STACK] int 
 43996 ;; Auto vars:     Size  Location     Type
 43997 ;;  i               2  [STACK] int 
 43998 ;; Return value:  Size  Location     Type
 43999 ;;                  2  [STACK] int 
 44000 ;; Registers used:
 44001 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
 44002 ;; Tracked objects:
 44003 ;;		On entry : 0/1
 44004 ;;		On exit  : 0/0
 44005 ;;		Unchanged: 0/0
 44006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44011 ;;Total ram usage:        0 bytes
 44012 ;; Hardware stack levels used: 1
 44013 ;; Hardware stack levels required when called: 7
 44014 ;; This function calls:
 44015 ;;		_fputc
 44016 ;;		_fputs
 44017 ;;		_strlen
 44018 ;; This function is called by:
 44019 ;;		_dtoa
 44020 ;;		_otoa
 44021 ;;		_utoa
 44022 ;;		_xtoa
 44023 ;; This function uses a reentrant model
 44024 ;;
 44025                           
 44026                           	psect	text105
 44027   016372                     __ptext105:
 44028                           	callstack 0
 44029   016372                     _pad:
 44030                           	callstack 0
 44031                           
 44032                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44033   016372  52E6               	movf	postinc1,f,c
 44034   016374  52E6               	movf	postinc1,f,c
 44035                           
 44036                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 193: static int pad(FILE *fp,
      +                           char *buf, int p);/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 194: {;/opt
      +                          /microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 195:     int i;;/opt/microchip/xc8
      +                          /v3.00/pic/sources/c99/common/doprnt.c: 199:     if (flags & (1 << 0)) {
 44037                           
 44038                           ;incstack = 0
 44039   016376  0101               	movlb	1	; () banked
 44040   016378  A1C5               	btfss	_flags& (0+255),0,b
 44041   01637A  D010               	goto	l11563
 44042                           
 44043                           ; BSR set to: 1
 44044                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 200:         fputs((const cha
      +                          r *)buf, fp);
 44045                           ;stkvar	_fp @ sp[(-2)+-2]
 44046   01637C  0EFC               	movlw	-4
 44047   01637E  006F FF8F FFE6     	movff	plusw1,postinc1
 44048   016384  006F FF8F FFE6     	movff	plusw1,postinc1
 44049                           
 44050                           ;stkvar	_buf @ sp[(-4)+-4]
 44051   01638A  0EF8               	movlw	-8
 44052   01638C  006F FF8F FFE6     	movff	plusw1,postinc1
 44053   016392  006F FF8F FFE6     	movff	plusw1,postinc1
 44054   016398  EC77  F0B6         	call	_fputs	;wreg free
 44055   01639C                     l11563:
 44056                           
 44057                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 205:  if (p < 0) {
 44058                           ;stkvar	_p @ sp[(-2)+-6]
 44059   01639C  0EF9               	movlw	-7
 44060   01639E  AEE3               	btfss	plusw1,7,c
 44061   0163A0  D004               	goto	l3154
 44062                           
 44063                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 206:   p = 0;
 44064                           ;stkvar	_p @ sp[(-2)+-6]
 44065   0163A2  0EF8               	movlw	-8
 44066   0163A4  6AE3               	clrf	plusw1,c
 44067   0163A6  0EF9               	movlw	-7
 44068   0163A8  6AE3               	clrf	plusw1,c
 44069   0163AA                     l3154:
 44070                           
 44071                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 208:     i = 0;
 44072                           ;stkvar	_i @ sp[(-2)+0]
 44073   0163AA  0EFE               	movlw	-2
 44074   0163AC  6AE3               	clrf	plusw1,c
 44075   0163AE  0EFF               	movlw	-1
 44076   0163B0  6AE3               	clrf	plusw1,c
 44077                           
 44078                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 209:     while (i < p) {
 44079   0163B2  D01E               	goto	l11571
 44080   0163B4                     l11567:
 44081                           
 44082                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 210:         fputc(' ', fp);
 44083                           ;stkvar	_fp @ sp[(-2)+-2]
 44084   0163B4  0EFC               	movlw	-4
 44085   0163B6  006F FF8F FFE6     	movff	plusw1,postinc1
 44086   0163BC  006F FF8F FFE6     	movff	plusw1,postinc1
 44087   0163C2  0E20               	movlw	32
 44088   0163C4  6EE6               	movwf	postinc1,c
 44089   0163C6  0E00               	movlw	0
 44090   0163C8  6EE6               	movwf	postinc1,c
 44091   0163CA  ECE7  F0AD         	call	_fputc	;wreg free
 44092                           
 44093                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 211:         ++i;
 44094                           ;stkvar	_i @ sp[(-2)+0]
 44095   0163CE  0EFE               	movlw	-2
 44096   0163D0  50E3               	movf	plusw1,w,c
 44097   0163D2  0F01               	addlw	1
 44098   0163D4  6E22               	movwf	btemp^0,c
 44099   0163D6  0EFE               	movlw	-2
 44100   0163D8  0060  F08B  FFE3   	movff	btemp,plusw1
 44101   0163DE  6A22               	clrf	btemp^0,c
 44102   0163E0  0EFF               	movlw	-1
 44103   0163E2  50E3               	movf	plusw1,w,c
 44104   0163E4  2022               	addwfc	btemp^0,w,c
 44105   0163E6  6E22               	movwf	btemp^0,c
 44106   0163E8  0EFF               	movlw	-1
 44107   0163EA  0060  F08B  FFE3   	movff	btemp,plusw1
 44108   0163F0                     l11571:
 44109                           
 44110                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 209:     while (i < p) {
 44111                           ;stkvar	_p @ sp[(-2)+-6]
 44112                           ;stkvar	_i @ sp[(-2)+0]
 44113   0163F0  50E1               	movf	fsr1l,w,c
 44114   0163F2  0FFE               	addlw	-2
 44115   0163F4  6ED9               	movwf	fsr2l,c
 44116   0163F6  50E2               	movf	fsr1h,w,c
 44117   0163F8  6EDA               	movwf	fsr2h,c
 44118   0163FA  0EFF               	movlw	255
 44119   0163FC  22DA               	addwfc	fsr2h,f,c
 44120   0163FE  0EF8               	movlw	-8
 44121   016400  50E3               	movf	plusw1,w,c
 44122   016402  5CDE               	subwf	postinc2,w,c
 44123   016404  50DE               	movf	postinc2,w,c
 44124   016406  0A80               	xorlw	128
 44125   016408  6E22               	movwf	btemp^0,c
 44126   01640A  0EF9               	movlw	-7
 44127   01640C  50E3               	movf	plusw1,w,c
 44128   01640E  0A80               	xorlw	128
 44129   016410  5822               	subwfb	btemp^0,w,c
 44130   016412  A0D8               	btfss	status,0,c
 44131   016414  D7CF               	goto	l11567
 44132                           
 44133                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 216:     if (!(flags & (1 << 
      +                          0))) {
 44134   016416  0101               	movlb	1	; () banked
 44135   016418  B1C5               	btfsc	_flags& (0+255),0,b
 44136   01641A  D010               	goto	l11575
 44137                           
 44138                           ; BSR set to: 1
 44139                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 218:         fputs((const cha
      +                          r *)buf, fp);
 44140                           ;stkvar	_fp @ sp[(-2)+-2]
 44141   01641C  0EFC               	movlw	-4
 44142   01641E  006F FF8F FFE6     	movff	plusw1,postinc1
 44143   016424  006F FF8F FFE6     	movff	plusw1,postinc1
 44144                           
 44145                           ;stkvar	_buf @ sp[(-4)+-4]
 44146   01642A  0EF8               	movlw	-8
 44147   01642C  006F FF8F FFE6     	movff	plusw1,postinc1
 44148   016432  006F FF8F FFE6     	movff	plusw1,postinc1
 44149   016438  EC77  F0B6         	call	_fputs	;wreg free
 44150   01643C                     l11575:
 44151                           
 44152                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 224:     return (int)(strlen(
      +                          buf) + (size_t)p);
 44153                           ;stkvar	_p @ sp[(-2)+-6]
 44154                           ;stkvar	_buf @ sp[(-2)+-4]
 44155   01643C  0EFA               	movlw	-6
 44156   01643E  006F FF8F FFE6     	movff	plusw1,postinc1
 44157   016444  006F FF8F FFE6     	movff	plusw1,postinc1
 44158   01644A  EC09  F0B7         	call	_strlen	;wreg free
 44159   01644E  0EF8               	movlw	-8
 44160   016450  50E3               	movf	plusw1,w,c
 44161   016452  2622               	addwf	btemp^0,f,c
 44162   016454  0EF9               	movlw	-7
 44163   016456  50E3               	movf	plusw1,w,c
 44164   016458  2223               	addwfc	(btemp+1)^0,f,c
 44165                           
 44166                           ; _pad: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 44167   01645A  0EF8               	movlw	248
 44168   01645C  26E1               	addwf	fsr1l,f,c
 44169   01645E  0EFF               	movlw	255
 44170   016460  22E2               	addwfc	fsr1h,f,c
 44171   016462  0012               	return		;funcret
 44172   016464                     __end_of_pad:
 44173                           	callstack 0
 44174                           
 44175 ;; *************** function _strlen *****************
 44176 ;; Defined at:
 44177 ;;		line 5 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/strlen.c"
 44178 ;; Parameters:    Size  Location     Type
 44179 ;;  s               2  [STACK] PTR const unsigned char 
 44180 ;;		 -> dbuf(32), D$lcd(512), D@mconfig$F5156(514), V$terminal(160), 
 44181 ;;		 -> V(387), 
 44182 ;; Auto vars:     Size  Location     Type
 44183 ;;  a               2  [STACK] PTR const unsigned char 
 44184 ;;		 -> dbuf(32), D$lcd(512), D@mconfig$F5156(514), V$terminal(160), 
 44185 ;;		 -> V(387), 
 44186 ;; Return value:  Size  Location     Type
 44187 ;;                  2  [STACK] unsigned int 
 44188 ;; Registers used:
 44189 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 44190 ;; Tracked objects:
 44191 ;;		On entry : 0/1
 44192 ;;		On exit  : 0/0
 44193 ;;		Unchanged: 0/0
 44194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44199 ;;Total ram usage:        0 bytes
 44200 ;; Hardware stack levels used: 1
 44201 ;; Hardware stack levels required when called: 3
 44202 ;; This function calls:
 44203 ;;		Nothing
 44204 ;; This function is called by:
 44205 ;;		_eaDogM_WriteString
 44206 ;;		_format_display_text
 44207 ;;		_pad
 44208 ;; This function uses a reentrant model
 44209 ;;
 44210                           
 44211                           	psect	text106
 44212   016E12                     __ptext106:
 44213                           	callstack 0
 44214   016E12                     _strlen:
 44215                           	callstack 0
 44216                           
 44217                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44218   016E12  52E6               	movf	postinc1,f,c
 44219   016E14  52E6               	movf	postinc1,f,c
 44220                           
 44221                           ;stkvar	_s @ sp[(-2)+-2]
 44222                           
 44223                           ;incstack = 0
 44224   016E16  0EFC               	movlw	-4
 44225   016E18  006F FF8C  F02C    	movff	plusw1,btemp+10
 44226   016E1E  0EFD               	movlw	-3
 44227   016E20  006F FF8C  F02D    	movff	plusw1,btemp+11
 44228                           
 44229                           ;stkvar	_a @ sp[(-2)+0]
 44230   016E26  0EFF               	movlw	-1
 44231   016E28  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 44232   016E2E  0EFE               	movlw	-2
 44233   016E30  0060  F0B3  FFE3   	movff	btemp+10,plusw1
 44234   016E36  D011               	goto	l7467
 44235   016E38                     l7465:
 44236                           
 44237                           ;stkvar	_s @ sp[(-2)+-2]
 44238   016E38  0EFC               	movlw	-4
 44239   016E3A  50E3               	movf	plusw1,w,c
 44240   016E3C  0F01               	addlw	1
 44241   016E3E  6E22               	movwf	btemp^0,c
 44242   016E40  0EFC               	movlw	-4
 44243   016E42  0060  F08B  FFE3   	movff	btemp,plusw1
 44244   016E48  6A22               	clrf	btemp^0,c
 44245   016E4A  0EFD               	movlw	-3
 44246   016E4C  50E3               	movf	plusw1,w,c
 44247   016E4E  2022               	addwfc	btemp^0,w,c
 44248   016E50  6E22               	movwf	btemp^0,c
 44249   016E52  0EFD               	movlw	-3
 44250   016E54  0060  F08B  FFE3   	movff	btemp,plusw1
 44251   016E5A                     l7467:
 44252                           
 44253                           ;stkvar	_s @ sp[(-2)+-2]
 44254   016E5A  0EFC               	movlw	-4
 44255   016E5C  006F FF8F FFD9     	movff	plusw1,fsr2l
 44256   016E62  0EFD               	movlw	-3
 44257   016E64  006F FF8F FFDA     	movff	plusw1,fsr2h
 44258   016E6A  50DF               	movf	indf2,w,c
 44259   016E6C  A4D8               	btfss	status,2,c
 44260   016E6E  D7E4               	goto	l7465
 44261                           
 44262                           ;stkvar	_a @ sp[(-2)+0]
 44263                           ;stkvar	_s @ sp[(-2)+-2]
 44264   016E70  0EFC               	movlw	-4
 44265   016E72  006F FF8C  F022    	movff	plusw1,btemp
 44266   016E78  0EFD               	movlw	-3
 44267   016E7A  006F FF8C  F023    	movff	plusw1,btemp+1
 44268   016E80  0EFE               	movlw	-2
 44269   016E82  50E3               	movf	plusw1,w,c
 44270   016E84  5E22               	subwf	btemp^0,f,c
 44271   016E86  0EFF               	movlw	-1
 44272   016E88  50E3               	movf	plusw1,w,c
 44273   016E8A  5A23               	subwfb	(btemp+1)^0,f,c
 44274                           
 44275                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 44276   016E8C  52E5               	movf	postdec1,f,c
 44277   016E8E  52E5               	movf	postdec1,f,c
 44278   016E90  52E5               	movf	postdec1,f,c
 44279   016E92  52E5               	movf	postdec1,f,c
 44280   016E94  0012               	return		;funcret
 44281   016E96                     __end_of_strlen:
 44282                           	callstack 0
 44283                           
 44284 ;; *************** function _fputs *****************
 44285 ;; Defined at:
 44286 ;;		line 8 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/nf_fputs.c"
 44287 ;; Parameters:    Size  Location     Type
 44288 ;;  s               2  [STACK] PTR const unsigned char 
 44289 ;;		 -> dbuf(32), 
 44290 ;;  fp              2  [STACK] PTR struct _IO_FILE
 44291 ;;		 -> f(11), NULL(0), 
 44292 ;; Auto vars:     Size  Location     Type
 44293 ;;  i               2  [STACK] int 
 44294 ;;  c               1  [STACK] unsigned char 
 44295 ;; Return value:  Size  Location     Type
 44296 ;;                  2  [STACK] int 
 44297 ;; Registers used:
 44298 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 44299 ;; Tracked objects:
 44300 ;;		On entry : 3F/1
 44301 ;;		On exit  : 0/0
 44302 ;;		Unchanged: 0/0
 44303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44308 ;;Total ram usage:        0 bytes
 44309 ;; Hardware stack levels used: 1
 44310 ;; Hardware stack levels required when called: 6
 44311 ;; This function calls:
 44312 ;;		_fputc
 44313 ;; This function is called by:
 44314 ;;		_pad
 44315 ;; This function uses a reentrant model
 44316 ;;
 44317                           
 44318                           	psect	text107
 44319   016CEE                     __ptext107:
 44320                           	callstack 0
 44321   016CEE                     _fputs:
 44322                           	callstack 0
 44323                           
 44324                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44325   016CEE  52E6               	movf	postinc1,f,c
 44326   016CF0  52E6               	movf	postinc1,f,c
 44327   016CF2  52E6               	movf	postinc1,f,c
 44328                           
 44329                           ;stkvar	_i @ sp[(-3)+0]
 44330                           
 44331                           ;incstack = 0
 44332   016CF4  0EFD               	movlw	-3
 44333   016CF6  6AE3               	clrf	plusw1,c
 44334   016CF8  0EFE               	movlw	-2
 44335   016CFA  6AE3               	clrf	plusw1,c
 44336   016CFC  D01F               	goto	l11557
 44337   016CFE                     l11553:
 44338                           
 44339                           ;stkvar	_fp @ sp[(-3)+-4]
 44340   016CFE  0EF9               	movlw	-7
 44341   016D00  006F FF8F FFE6     	movff	plusw1,postinc1
 44342   016D06  006F FF8F FFE6     	movff	plusw1,postinc1
 44343                           
 44344                           ;stkvar	_c @ sp[(-5)+2]
 44345   016D0C  0EFD               	movlw	-3
 44346   016D0E  50E3               	movf	plusw1,w,c
 44347   016D10  6EE6               	movwf	postinc1,c
 44348   016D12  0E00               	movlw	0
 44349   016D14  6EE6               	movwf	postinc1,c
 44350   016D16  ECE7  F0AD         	call	_fputc	;wreg free
 44351                           
 44352                           ;stkvar	_i @ sp[(-3)+0]
 44353   016D1A  0EFD               	movlw	-3
 44354   016D1C  50E3               	movf	plusw1,w,c
 44355   016D1E  0F01               	addlw	1
 44356   016D20  6E22               	movwf	btemp^0,c
 44357   016D22  0EFD               	movlw	-3
 44358   016D24  0060  F08B  FFE3   	movff	btemp,plusw1
 44359   016D2A  6A22               	clrf	btemp^0,c
 44360   016D2C  0EFE               	movlw	-2
 44361   016D2E  50E3               	movf	plusw1,w,c
 44362   016D30  2022               	addwfc	btemp^0,w,c
 44363   016D32  6E22               	movwf	btemp^0,c
 44364   016D34  0EFE               	movlw	-2
 44365   016D36  0060  F08B  FFE3   	movff	btemp,plusw1
 44366   016D3C                     l11557:
 44367                           
 44368                           ;stkvar	_i @ sp[(-3)+0]
 44369   016D3C  0EFD               	movlw	-3
 44370   016D3E  006F FF8C  F02C    	movff	plusw1,btemp+10
 44371   016D44  0EFE               	movlw	-2
 44372   016D46  006F FF8C  F02D    	movff	plusw1,btemp+11
 44373                           
 44374                           ;stkvar	_s @ sp[(-3)+-2]
 44375   016D4C  0EFB               	movlw	-5
 44376   016D4E  006F FF8C  F02A    	movff	plusw1,btemp+8
 44377   016D54  0EFC               	movlw	-4
 44378   016D56  006F FF8C  F02B    	movff	plusw1,btemp+9
 44379   016D5C  502C               	movf	(btemp+10)^0,w,c
 44380   016D5E  242A               	addwf	(btemp+8)^0,w,c
 44381   016D60  6ED9               	movwf	fsr2l,c
 44382   016D62  502D               	movf	(btemp+11)^0,w,c
 44383   016D64  202B               	addwfc	(btemp+9)^0,w,c
 44384   016D66  6EDA               	movwf	fsr2h,c
 44385   016D68  50DF               	movf	indf2,w,c
 44386   016D6A  6E2D               	movwf	(btemp+11)^0,c
 44387                           
 44388                           ;stkvar	_c @ sp[(-3)+2]
 44389   016D6C  0EFF               	movlw	-1
 44390   016D6E  0060  F0B7  FFE3   	movff	btemp+11,plusw1
 44391   016D74  0EFF               	movlw	-1
 44392   016D76  50E3               	movf	plusw1,w,c
 44393   016D78  A4D8               	btfss	status,2,c
 44394   016D7A  D7C1               	goto	l11553
 44395                           
 44396                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 44397   016D7C  0EF9               	movlw	249
 44398   016D7E  26E1               	addwf	fsr1l,f,c
 44399   016D80  0EFF               	movlw	255
 44400   016D82  22E2               	addwfc	fsr1h,f,c
 44401   016D84  0012               	return		;funcret
 44402   016D86                     __end_of_fputs:
 44403                           	callstack 0
 44404                           
 44405 ;; *************** function _abs *****************
 44406 ;; Defined at:
 44407 ;;		line 1 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/abs.c"
 44408 ;; Parameters:    Size  Location     Type
 44409 ;;  a               2  [STACK] int 
 44410 ;; Auto vars:     Size  Location     Type
 44411 ;;		None
 44412 ;; Return value:  Size  Location     Type
 44413 ;;                  2  [STACK] int 
 44414 ;; Registers used:
 44415 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 44416 ;; Tracked objects:
 44417 ;;		On entry : 0/1
 44418 ;;		On exit  : 0/0
 44419 ;;		Unchanged: 0/0
 44420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44425 ;;Total ram usage:        0 bytes
 44426 ;; Hardware stack levels used: 1
 44427 ;; Hardware stack levels required when called: 3
 44428 ;; This function calls:
 44429 ;;		Nothing
 44430 ;; This function is called by:
 44431 ;;		_dtoa
 44432 ;; This function uses a reentrant model
 44433 ;;
 44434                           
 44435                           	psect	text108
 44436   017906                     __ptext108:
 44437                           	callstack 0
 44438   017906                     _abs:
 44439                           	callstack 20
 44440                           
 44441                           ;stkvar	_a @ sp[(0)+-2]
 44442                           
 44443                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44444                           ;incstack = 0
 44445   017906  0EFF               	movlw	-1
 44446   017908  BEE3               	btfsc	plusw1,7,c
 44447   01790A  D009               	goto	l7631
 44448                           
 44449                           ;stkvar	_a @ sp[(0)+-2]
 44450   01790C  0EFE               	movlw	-2
 44451   01790E  006F FF8C  F022    	movff	plusw1,btemp
 44452   017914  0EFF               	movlw	-1
 44453   017916  006F FF8C  F023    	movff	plusw1,btemp+1
 44454   01791C  D00D               	goto	l3374
 44455   01791E                     l7631:
 44456                           
 44457                           ;stkvar	_a @ sp[(0)+-2]
 44458   01791E  0EFE               	movlw	-2
 44459   017920  006F FF8C  F022    	movff	plusw1,btemp
 44460   017926  1E22               	comf	btemp^0,f,c
 44461   017928  0EFF               	movlw	-1
 44462   01792A  006F FF8C  F023    	movff	plusw1,btemp+1
 44463   017930  1E23               	comf	(btemp+1)^0,f,c
 44464   017932  2A22               	incf	btemp^0,f,c
 44465   017934  B4D8               	btfsc	status,2,c
 44466   017936  2A23               	incf	(btemp+1)^0,f,c
 44467   017938                     l3374:
 44468                           
 44469                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 44470   017938  52E5               	movf	postdec1,f,c
 44471   01793A  52E5               	movf	postdec1,f,c
 44472   01793C  0012               	return		;funcret
 44473   01793E                     __end_of_abs:
 44474                           	callstack 0
 44475                           
 44476 ;; *************** function ___almod *****************
 44477 ;; Defined at:
 44478 ;;		line 7 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/almod.c"
 44479 ;; Parameters:    Size  Location     Type
 44480 ;;  dividend        4  [STACK] long 
 44481 ;;  divisor         4  [STACK] long 
 44482 ;; Auto vars:     Size  Location     Type
 44483 ;;  sign            1  [STACK] unsigned char 
 44484 ;;  counter         1  [STACK] unsigned char 
 44485 ;; Return value:  Size  Location     Type
 44486 ;;                  4  [STACK] long 
 44487 ;; Registers used:
 44488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 44489 ;; Tracked objects:
 44490 ;;		On entry : 0/1
 44491 ;;		On exit  : 0/0
 44492 ;;		Unchanged: 0/0
 44493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44498 ;;Total ram usage:        0 bytes
 44499 ;; Hardware stack levels used: 1
 44500 ;; Hardware stack levels required when called: 3
 44501 ;; This function calls:
 44502 ;;		Nothing
 44503 ;; This function is called by:
 44504 ;;		_dtoa
 44505 ;; This function uses a reentrant model
 44506 ;;
 44507                           
 44508                           	psect	text109
 44509   015534                     __ptext109:
 44510                           	callstack 0
 44511   015534                     ___almod:
 44512                           	callstack 0
 44513                           
 44514                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44515   015534  52E6               	movf	postinc1,f,c
 44516   015536  52E6               	movf	postinc1,f,c
 44517                           
 44518                           ;stkvar	_sign @ sp[(-2)+0]
 44519                           
 44520                           ;incstack = 0
 44521   015538  0EFE               	movlw	-2
 44522   01553A  6AE3               	clrf	plusw1,c
 44523                           
 44524                           ;stkvar	_dividend @ sp[(-2)+-4]
 44525   01553C  0EFD               	movlw	-3
 44526   01553E  AEE3               	btfss	plusw1,7,c
 44527   015540  D014               	goto	l7559
 44528                           
 44529                           ;stkvar	_dividend @ sp[(-2)+-4]
 44530                           ;stkvar	_dividend @ sp[(-2)+-4]
 44531   015542  0EFA               	movlw	-6
 44532   015544  6CE3               	negf	plusw1,c
 44533   015546  0EFB               	movlw	-5
 44534   015548  1EE3               	comf	plusw1,f,c
 44535   01554A  0EFC               	movlw	-4
 44536   01554C  1EE3               	comf	plusw1,f,c
 44537   01554E  0EFD               	movlw	-3
 44538   015550  1EE3               	comf	plusw1,f,c
 44539   015552  E308               	bnc	u4120
 44540   015554  0EFB               	movlw	-5
 44541   015556  2AE3               	incf	plusw1,f,c
 44542   015558  E305               	bnc	u4120
 44543   01555A  0EFC               	movlw	-4
 44544   01555C  2AE3               	incf	plusw1,f,c
 44545   01555E  E302               	bnc	u4120
 44546   015560  0EFD               	movlw	-3
 44547   015562  2AE3               	incf	plusw1,f,c
 44548   015564                     u4120:
 44549                           
 44550                           ;stkvar	_sign @ sp[(-2)+0]
 44551   015564  0EFE               	movlw	-2
 44552   015566  6AE3               	clrf	plusw1,c
 44553   015568  2AE3               	incf	plusw1,f,c
 44554   01556A                     l7559:
 44555                           
 44556                           ;stkvar	_divisor @ sp[(-2)+-8]
 44557   01556A  0EF9               	movlw	-7
 44558   01556C  AEE3               	btfss	plusw1,7,c
 44559   01556E  D011               	goto	u4140
 44560                           
 44561                           ;stkvar	_divisor @ sp[(-2)+-8]
 44562                           ;stkvar	_divisor @ sp[(-2)+-8]
 44563   015570  0EF6               	movlw	-10
 44564   015572  6CE3               	negf	plusw1,c
 44565   015574  0EF7               	movlw	-9
 44566   015576  1EE3               	comf	plusw1,f,c
 44567   015578  0EF8               	movlw	-8
 44568   01557A  1EE3               	comf	plusw1,f,c
 44569   01557C  0EF9               	movlw	-7
 44570   01557E  1EE3               	comf	plusw1,f,c
 44571   015580  E308               	bnc	u4140
 44572   015582  0EF7               	movlw	-9
 44573   015584  2AE3               	incf	plusw1,f,c
 44574   015586  E305               	bnc	u4140
 44575   015588  0EF8               	movlw	-8
 44576   01558A  2AE3               	incf	plusw1,f,c
 44577   01558C  E302               	bnc	u4140
 44578   01558E  0EF9               	movlw	-7
 44579   015590  2AE3               	incf	plusw1,f,c
 44580   015592                     u4140:
 44581                           
 44582                           ;stkvar	_divisor @ sp[(-2)+-8]
 44583   015592  0EF6               	movlw	-10
 44584   015594  50E3               	movf	plusw1,w,c
 44585   015596  E10A               	bnz	u4150
 44586   015598  0EF7               	movlw	-9
 44587   01559A  50E3               	movf	plusw1,w,c
 44588   01559C  E107               	bnz	u4150
 44589   01559E  0EF8               	movlw	-8
 44590   0155A0  50E3               	movf	plusw1,w,c
 44591   0155A2  E104               	bnz	u4150
 44592   0155A4  0EF9               	movlw	-7
 44593   0155A6  50E3               	movf	plusw1,w,c
 44594   0155A8  B4D8               	btfsc	status,2,c
 44595   0155AA  D04D               	goto	u4180
 44596   0155AC                     u4150:
 44597                           
 44598                           ;stkvar	_counter @ sp[(-2)+1]
 44599   0155AC  0EFF               	movlw	-1
 44600   0155AE  6AE3               	clrf	plusw1,c
 44601   0155B0  D00A               	goto	L40
 44602   0155B2                     l7567:
 44603                           
 44604                           ;stkvar	_divisor @ sp[(-2)+-8]
 44605   0155B2  90D8               	bcf	status,0,c
 44606   0155B4  0EF6               	movlw	-10
 44607   0155B6  36E3               	rlcf	plusw1,f,c
 44608   0155B8  0EF7               	movlw	-9
 44609   0155BA  36E3               	rlcf	plusw1,f,c
 44610   0155BC  0EF8               	movlw	-8
 44611   0155BE  36E3               	rlcf	plusw1,f,c
 44612   0155C0  0EF9               	movlw	-7
 44613   0155C2  36E3               	rlcf	plusw1,f,c
 44614                           
 44615                           ;stkvar	_counter @ sp[(-2)+1]
 44616   0155C4  0EFF               	movlw	-1
 44617   0155C6                     L40:
 44618   0155C6  2AE3               	incf	plusw1,f,c
 44619                           
 44620                           ;stkvar	_divisor @ sp[(-2)+-8]
 44621   0155C8  0EF9               	movlw	-7
 44622   0155CA  AEE3               	btfss	plusw1,7,c
 44623   0155CC  D7F2               	goto	l7567
 44624   0155CE                     u4160:
 44625                           
 44626                           ;stkvar	_divisor @ sp[(-2)+-8]
 44627                           ;stkvar	_dividend @ sp[(-2)+-4]
 44628   0155CE  50E1               	movf	fsr1l,w,c
 44629   0155D0  0FFA               	addlw	-6
 44630   0155D2  6ED9               	movwf	fsr2l,c
 44631   0155D4  50E2               	movf	fsr1h,w,c
 44632   0155D6  6EDA               	movwf	fsr2h,c
 44633   0155D8  0EFF               	movlw	255
 44634   0155DA  22DA               	addwfc	fsr2h,f,c
 44635   0155DC  0EF6               	movlw	-10
 44636   0155DE  50E3               	movf	plusw1,w,c
 44637   0155E0  5CDE               	subwf	postinc2,w,c
 44638   0155E2  0EF7               	movlw	-9
 44639   0155E4  50E3               	movf	plusw1,w,c
 44640   0155E6  58DE               	subwfb	postinc2,w,c
 44641   0155E8  0EF8               	movlw	-8
 44642   0155EA  50E3               	movf	plusw1,w,c
 44643   0155EC  58DE               	subwfb	postinc2,w,c
 44644   0155EE  0EF9               	movlw	-7
 44645   0155F0  50E3               	movf	plusw1,w,c
 44646   0155F2  58DE               	subwfb	postinc2,w,c
 44647   0155F4  A0D8               	btfss	status,0,c
 44648   0155F6  D013               	goto	l7575
 44649                           
 44650                           ;stkvar	_divisor @ sp[(-2)+-8]
 44651                           ;stkvar	_dividend @ sp[(-2)+-4]
 44652   0155F8  50E1               	movf	fsr1l,w,c
 44653   0155FA  0FFA               	addlw	-6
 44654   0155FC  6ED9               	movwf	fsr2l,c
 44655   0155FE  50E2               	movf	fsr1h,w,c
 44656   015600  6EDA               	movwf	fsr2h,c
 44657   015602  0EFF               	movlw	255
 44658   015604  22DA               	addwfc	fsr2h,f,c
 44659   015606  0EF6               	movlw	-10
 44660   015608  50E3               	movf	plusw1,w,c
 44661   01560A  5EDE               	subwf	postinc2,f,c
 44662   01560C  0EF7               	movlw	-9
 44663   01560E  50E3               	movf	plusw1,w,c
 44664   015610  5ADE               	subwfb	postinc2,f,c
 44665   015612  0EF8               	movlw	-8
 44666   015614  50E3               	movf	plusw1,w,c
 44667   015616  5ADE               	subwfb	postinc2,f,c
 44668   015618  0EF9               	movlw	-7
 44669   01561A  50E3               	movf	plusw1,w,c
 44670   01561C  5ADE               	subwfb	postinc2,f,c
 44671   01561E                     l7575:
 44672                           
 44673                           ;stkvar	_divisor @ sp[(-2)+-8]
 44674   01561E  90D8               	bcf	status,0,c
 44675   015620  0EF9               	movlw	-7
 44676   015622  32E3               	rrcf	plusw1,f,c
 44677   015624  0EF8               	movlw	-8
 44678   015626  32E3               	rrcf	plusw1,f,c
 44679   015628  0EF7               	movlw	-9
 44680   01562A  32E3               	rrcf	plusw1,f,c
 44681   01562C  0EF6               	movlw	-10
 44682   01562E  32E3               	rrcf	plusw1,f,c
 44683                           
 44684                           ;stkvar	_counter @ sp[(-2)+1]
 44685   015630  0EFF               	movlw	-1
 44686   015632  50E3               	movf	plusw1,w,c
 44687   015634  6E22               	movwf	btemp^0,c
 44688   015636  0E01               	movlw	1
 44689   015638  5E22               	subwf	btemp^0,f,c
 44690   01563A  0EFF               	movlw	-1
 44691   01563C  0060  F08B  FFE3   	movff	btemp,plusw1
 44692   015642  A4D8               	btfss	status,2,c
 44693   015644  D7C4               	goto	u4160
 44694   015646                     u4180:
 44695                           
 44696                           ;stkvar	_sign @ sp[(-2)+0]
 44697   015646  0EFE               	movlw	-2
 44698   015648  50E3               	movf	plusw1,w,c
 44699   01564A  B4D8               	btfsc	status,2,c
 44700   01564C  D011               	goto	u4200
 44701                           
 44702                           ;stkvar	_dividend @ sp[(-2)+-4]
 44703                           ;stkvar	_dividend @ sp[(-2)+-4]
 44704   01564E  0EFA               	movlw	-6
 44705   015650  6CE3               	negf	plusw1,c
 44706   015652  0EFB               	movlw	-5
 44707   015654  1EE3               	comf	plusw1,f,c
 44708   015656  0EFC               	movlw	-4
 44709   015658  1EE3               	comf	plusw1,f,c
 44710   01565A  0EFD               	movlw	-3
 44711   01565C  1EE3               	comf	plusw1,f,c
 44712   01565E  E308               	bnc	u4200
 44713   015660  0EFB               	movlw	-5
 44714   015662  2AE3               	incf	plusw1,f,c
 44715   015664  E305               	bnc	u4200
 44716   015666  0EFC               	movlw	-4
 44717   015668  2AE3               	incf	plusw1,f,c
 44718   01566A  E302               	bnc	u4200
 44719   01566C  0EFD               	movlw	-3
 44720   01566E  2AE3               	incf	plusw1,f,c
 44721   015670                     u4200:
 44722                           
 44723                           ;stkvar	_dividend @ sp[(-2)+-4]
 44724   015670  0EFA               	movlw	-6
 44725   015672  006F FF8C  F022    	movff	plusw1,btemp
 44726   015678  0EFB               	movlw	-5
 44727   01567A  006F FF8C  F023    	movff	plusw1,btemp+1
 44728   015680  0EFC               	movlw	-4
 44729   015682  006F FF8C  F024    	movff	plusw1,btemp+2
 44730   015688  0EFD               	movlw	-3
 44731   01568A  006F FF8C  F025    	movff	plusw1,btemp+3
 44732                           
 44733                           ; ___almod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 44734   015690  0EF6               	movlw	246
 44735   015692  26E1               	addwf	fsr1l,f,c
 44736   015694  0EFF               	movlw	255
 44737   015696  22E2               	addwfc	fsr1h,f,c
 44738   015698  0012               	return		;funcret
 44739   01569A                     __end_of___almod:
 44740                           	callstack 0
 44741                           
 44742 ;; *************** function ___aldiv *****************
 44743 ;; Defined at:
 44744 ;;		line 7 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/aldiv.c"
 44745 ;; Parameters:    Size  Location     Type
 44746 ;;  dividend        4  [STACK] long 
 44747 ;;  divisor         4  [STACK] long 
 44748 ;; Auto vars:     Size  Location     Type
 44749 ;;  quotient        4  [STACK] long 
 44750 ;;  sign            1  [STACK] unsigned char 
 44751 ;;  counter         1  [STACK] unsigned char 
 44752 ;; Return value:  Size  Location     Type
 44753 ;;                  4  [STACK] long 
 44754 ;; Registers used:
 44755 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 44756 ;; Tracked objects:
 44757 ;;		On entry : 0/1
 44758 ;;		On exit  : 0/0
 44759 ;;		Unchanged: 0/0
 44760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44765 ;;Total ram usage:        0 bytes
 44766 ;; Hardware stack levels used: 1
 44767 ;; Hardware stack levels required when called: 3
 44768 ;; This function calls:
 44769 ;;		Nothing
 44770 ;; This function is called by:
 44771 ;;		_dtoa
 44772 ;; This function uses a reentrant model
 44773 ;;
 44774                           
 44775                           	psect	text110
 44776   01521A                     __ptext110:
 44777                           	callstack 0
 44778   01521A                     ___aldiv:
 44779                           	callstack 0
 44780                           
 44781                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44782   01521A  0E06               	movlw	6
 44783   01521C  26E1               	addwf	fsr1l,f,c
 44784   01521E  0E00               	movlw	0
 44785   015220  22E2               	addwfc	fsr1h,f,c
 44786                           
 44787                           ;stkvar	_sign @ sp[(-6)+4]
 44788                           
 44789                           ;incstack = 0
 44790   015222  0EFE               	movlw	-2
 44791   015224  6AE3               	clrf	plusw1,c
 44792                           
 44793                           ;stkvar	_divisor @ sp[(-6)+-8]
 44794   015226  0EF5               	movlw	-11
 44795   015228  AEE3               	btfss	plusw1,7,c
 44796   01522A  D014               	goto	l7515
 44797                           
 44798                           ;stkvar	_divisor @ sp[(-6)+-8]
 44799                           ;stkvar	_divisor @ sp[(-6)+-8]
 44800   01522C  0EF2               	movlw	-14
 44801   01522E  6CE3               	negf	plusw1,c
 44802   015230  0EF3               	movlw	-13
 44803   015232  1EE3               	comf	plusw1,f,c
 44804   015234  0EF4               	movlw	-12
 44805   015236  1EE3               	comf	plusw1,f,c
 44806   015238  0EF5               	movlw	-11
 44807   01523A  1EE3               	comf	plusw1,f,c
 44808   01523C  E308               	bnc	u4020
 44809   01523E  0EF3               	movlw	-13
 44810   015240  2AE3               	incf	plusw1,f,c
 44811   015242  E305               	bnc	u4020
 44812   015244  0EF4               	movlw	-12
 44813   015246  2AE3               	incf	plusw1,f,c
 44814   015248  E302               	bnc	u4020
 44815   01524A  0EF5               	movlw	-11
 44816   01524C  2AE3               	incf	plusw1,f,c
 44817   01524E                     u4020:
 44818                           
 44819                           ;stkvar	_sign @ sp[(-6)+4]
 44820   01524E  0EFE               	movlw	-2
 44821   015250  6AE3               	clrf	plusw1,c
 44822   015252  2AE3               	incf	plusw1,f,c
 44823   015254                     l7515:
 44824                           
 44825                           ;stkvar	_dividend @ sp[(-6)+-4]
 44826   015254  0EF9               	movlw	-7
 44827   015256  AEE3               	btfss	plusw1,7,c
 44828   015258  D013               	goto	l7521
 44829                           
 44830                           ;stkvar	_dividend @ sp[(-6)+-4]
 44831                           ;stkvar	_dividend @ sp[(-6)+-4]
 44832   01525A  0EF6               	movlw	-10
 44833   01525C  6CE3               	negf	plusw1,c
 44834   01525E  0EF7               	movlw	-9
 44835   015260  1EE3               	comf	plusw1,f,c
 44836   015262  0EF8               	movlw	-8
 44837   015264  1EE3               	comf	plusw1,f,c
 44838   015266  0EF9               	movlw	-7
 44839   015268  1EE3               	comf	plusw1,f,c
 44840   01526A  E308               	bnc	u4040
 44841   01526C  0EF7               	movlw	-9
 44842   01526E  2AE3               	incf	plusw1,f,c
 44843   015270  E305               	bnc	u4040
 44844   015272  0EF8               	movlw	-8
 44845   015274  2AE3               	incf	plusw1,f,c
 44846   015276  E302               	bnc	u4040
 44847   015278  0EF9               	movlw	-7
 44848   01527A  2AE3               	incf	plusw1,f,c
 44849   01527C                     u4040:
 44850                           
 44851                           ;stkvar	_sign @ sp[(-6)+4]
 44852   01527C  0EFE               	movlw	-2
 44853   01527E  70E3               	btg	plusw1,0,c
 44854   015280                     l7521:
 44855                           
 44856                           ;stkvar	_quotient @ sp[(-6)+0]
 44857   015280  0EFA               	movlw	-6
 44858   015282  6AE3               	clrf	plusw1,c
 44859   015284  0EFB               	movlw	-5
 44860   015286  6AE3               	clrf	plusw1,c
 44861   015288  0EFC               	movlw	-4
 44862   01528A  6AE3               	clrf	plusw1,c
 44863   01528C  0EFD               	movlw	-3
 44864   01528E  6AE3               	clrf	plusw1,c
 44865                           
 44866                           ;stkvar	_divisor @ sp[(-6)+-8]
 44867   015290  0EF2               	movlw	-14
 44868   015292  50E3               	movf	plusw1,w,c
 44869   015294  E10A               	bnz	u4050
 44870   015296  0EF3               	movlw	-13
 44871   015298  50E3               	movf	plusw1,w,c
 44872   01529A  E107               	bnz	u4050
 44873   01529C  0EF4               	movlw	-12
 44874   01529E  50E3               	movf	plusw1,w,c
 44875   0152A0  E104               	bnz	u4050
 44876   0152A2  0EF5               	movlw	-11
 44877   0152A4  50E3               	movf	plusw1,w,c
 44878   0152A6  B4D8               	btfsc	status,2,c
 44879   0152A8  D058               	goto	u4080
 44880   0152AA                     u4050:
 44881                           
 44882                           ;stkvar	_counter @ sp[(-6)+5]
 44883   0152AA  0EFF               	movlw	-1
 44884   0152AC  6AE3               	clrf	plusw1,c
 44885   0152AE  D00A               	goto	L41
 44886   0152B0                     l7527:
 44887                           
 44888                           ;stkvar	_divisor @ sp[(-6)+-8]
 44889   0152B0  90D8               	bcf	status,0,c
 44890   0152B2  0EF2               	movlw	-14
 44891   0152B4  36E3               	rlcf	plusw1,f,c
 44892   0152B6  0EF3               	movlw	-13
 44893   0152B8  36E3               	rlcf	plusw1,f,c
 44894   0152BA  0EF4               	movlw	-12
 44895   0152BC  36E3               	rlcf	plusw1,f,c
 44896   0152BE  0EF5               	movlw	-11
 44897   0152C0  36E3               	rlcf	plusw1,f,c
 44898                           
 44899                           ;stkvar	_counter @ sp[(-6)+5]
 44900   0152C2  0EFF               	movlw	-1
 44901   0152C4                     L41:
 44902   0152C4  2AE3               	incf	plusw1,f,c
 44903                           
 44904                           ;stkvar	_divisor @ sp[(-6)+-8]
 44905   0152C6  0EF5               	movlw	-11
 44906   0152C8  AEE3               	btfss	plusw1,7,c
 44907   0152CA  D7F2               	goto	l7527
 44908   0152CC                     u4060:
 44909                           
 44910                           ;stkvar	_quotient @ sp[(-6)+0]
 44911   0152CC  90D8               	bcf	status,0,c
 44912   0152CE  0EFA               	movlw	-6
 44913   0152D0  36E3               	rlcf	plusw1,f,c
 44914   0152D2  0EFB               	movlw	-5
 44915   0152D4  36E3               	rlcf	plusw1,f,c
 44916   0152D6  0EFC               	movlw	-4
 44917   0152D8  36E3               	rlcf	plusw1,f,c
 44918   0152DA  0EFD               	movlw	-3
 44919   0152DC  36E3               	rlcf	plusw1,f,c
 44920                           
 44921                           ;stkvar	_divisor @ sp[(-6)+-8]
 44922                           ;stkvar	_dividend @ sp[(-6)+-4]
 44923   0152DE  50E1               	movf	fsr1l,w,c
 44924   0152E0  0FF6               	addlw	-10
 44925   0152E2  6ED9               	movwf	fsr2l,c
 44926   0152E4  50E2               	movf	fsr1h,w,c
 44927   0152E6  6EDA               	movwf	fsr2h,c
 44928   0152E8  0EFF               	movlw	255
 44929   0152EA  22DA               	addwfc	fsr2h,f,c
 44930   0152EC  0EF2               	movlw	-14
 44931   0152EE  50E3               	movf	plusw1,w,c
 44932   0152F0  5CDE               	subwf	postinc2,w,c
 44933   0152F2  0EF3               	movlw	-13
 44934   0152F4  50E3               	movf	plusw1,w,c
 44935   0152F6  58DE               	subwfb	postinc2,w,c
 44936   0152F8  0EF4               	movlw	-12
 44937   0152FA  50E3               	movf	plusw1,w,c
 44938   0152FC  58DE               	subwfb	postinc2,w,c
 44939   0152FE  0EF5               	movlw	-11
 44940   015300  50E3               	movf	plusw1,w,c
 44941   015302  58DE               	subwfb	postinc2,w,c
 44942   015304  A0D8               	btfss	status,0,c
 44943   015306  D015               	goto	l7539
 44944                           
 44945                           ;stkvar	_divisor @ sp[(-6)+-8]
 44946                           ;stkvar	_dividend @ sp[(-6)+-4]
 44947   015308  50E1               	movf	fsr1l,w,c
 44948   01530A  0FF6               	addlw	-10
 44949   01530C  6ED9               	movwf	fsr2l,c
 44950   01530E  50E2               	movf	fsr1h,w,c
 44951   015310  6EDA               	movwf	fsr2h,c
 44952   015312  0EFF               	movlw	255
 44953   015314  22DA               	addwfc	fsr2h,f,c
 44954   015316  0EF2               	movlw	-14
 44955   015318  50E3               	movf	plusw1,w,c
 44956   01531A  5EDE               	subwf	postinc2,f,c
 44957   01531C  0EF3               	movlw	-13
 44958   01531E  50E3               	movf	plusw1,w,c
 44959   015320  5ADE               	subwfb	postinc2,f,c
 44960   015322  0EF4               	movlw	-12
 44961   015324  50E3               	movf	plusw1,w,c
 44962   015326  5ADE               	subwfb	postinc2,f,c
 44963   015328  0EF5               	movlw	-11
 44964   01532A  50E3               	movf	plusw1,w,c
 44965   01532C  5ADE               	subwfb	postinc2,f,c
 44966                           
 44967                           ;stkvar	_quotient @ sp[(-6)+0]
 44968   01532E  0EFA               	movlw	-6
 44969   015330  80E3               	bsf	plusw1,0,c
 44970   015332                     l7539:
 44971                           
 44972                           ;stkvar	_divisor @ sp[(-6)+-8]
 44973   015332  90D8               	bcf	status,0,c
 44974   015334  0EF5               	movlw	-11
 44975   015336  32E3               	rrcf	plusw1,f,c
 44976   015338  0EF4               	movlw	-12
 44977   01533A  32E3               	rrcf	plusw1,f,c
 44978   01533C  0EF3               	movlw	-13
 44979   01533E  32E3               	rrcf	plusw1,f,c
 44980   015340  0EF2               	movlw	-14
 44981   015342  32E3               	rrcf	plusw1,f,c
 44982                           
 44983                           ;stkvar	_counter @ sp[(-6)+5]
 44984   015344  0EFF               	movlw	-1
 44985   015346  50E3               	movf	plusw1,w,c
 44986   015348  6E22               	movwf	btemp^0,c
 44987   01534A  0E01               	movlw	1
 44988   01534C  5E22               	subwf	btemp^0,f,c
 44989   01534E  0EFF               	movlw	-1
 44990   015350  0060  F08B  FFE3   	movff	btemp,plusw1
 44991   015356  A4D8               	btfss	status,2,c
 44992   015358  D7B9               	goto	u4060
 44993   01535A                     u4080:
 44994                           
 44995                           ;stkvar	_sign @ sp[(-6)+4]
 44996   01535A  0EFE               	movlw	-2
 44997   01535C  50E3               	movf	plusw1,w,c
 44998   01535E  B4D8               	btfsc	status,2,c
 44999   015360  D011               	goto	u4100
 45000                           
 45001                           ;stkvar	_quotient @ sp[(-6)+0]
 45002                           ;stkvar	_quotient @ sp[(-6)+0]
 45003   015362  0EFA               	movlw	-6
 45004   015364  6CE3               	negf	plusw1,c
 45005   015366  0EFB               	movlw	-5
 45006   015368  1EE3               	comf	plusw1,f,c
 45007   01536A  0EFC               	movlw	-4
 45008   01536C  1EE3               	comf	plusw1,f,c
 45009   01536E  0EFD               	movlw	-3
 45010   015370  1EE3               	comf	plusw1,f,c
 45011   015372  E308               	bnc	u4100
 45012   015374  0EFB               	movlw	-5
 45013   015376  2AE3               	incf	plusw1,f,c
 45014   015378  E305               	bnc	u4100
 45015   01537A  0EFC               	movlw	-4
 45016   01537C  2AE3               	incf	plusw1,f,c
 45017   01537E  E302               	bnc	u4100
 45018   015380  0EFD               	movlw	-3
 45019   015382  2AE3               	incf	plusw1,f,c
 45020   015384                     u4100:
 45021                           
 45022                           ;stkvar	_quotient @ sp[(-6)+0]
 45023   015384  0EFA               	movlw	-6
 45024   015386  006F FF8C  F022    	movff	plusw1,btemp
 45025   01538C  0EFB               	movlw	-5
 45026   01538E  006F FF8C  F023    	movff	plusw1,btemp+1
 45027   015394  0EFC               	movlw	-4
 45028   015396  006F FF8C  F024    	movff	plusw1,btemp+2
 45029   01539C  0EFD               	movlw	-3
 45030   01539E  006F FF8C  F025    	movff	plusw1,btemp+3
 45031                           
 45032                           ; ___aldiv: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 45033   0153A4  0EF2               	movlw	242
 45034   0153A6  26E1               	addwf	fsr1l,f,c
 45035   0153A8  0EFF               	movlw	255
 45036   0153AA  22E2               	addwfc	fsr1h,f,c
 45037   0153AC  0012               	return		;funcret
 45038   0153AE                     __end_of___aldiv:
 45039                           	callstack 0
 45040                           
 45041 ;; *************** function _ctoa *****************
 45042 ;; Defined at:
 45043 ;;		line 476 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c"
 45044 ;; Parameters:    Size  Location     Type
 45045 ;;  fp              2  [STACK] PTR struct _IO_FILE
 45046 ;;		 -> f(11), NULL(0), 
 45047 ;;  c               1  [STACK] unsigned char 
 45048 ;; Auto vars:     Size  Location     Type
 45049 ;;  w               2  [STACK] int 
 45050 ;;  l               2  [STACK] int 
 45051 ;; Return value:  Size  Location     Type
 45052 ;;                  2  [STACK] int 
 45053 ;; Registers used:
 45054 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
 45055 ;; Tracked objects:
 45056 ;;		On entry : 0/1
 45057 ;;		On exit  : 0/0
 45058 ;;		Unchanged: 0/0
 45059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45064 ;;Total ram usage:        0 bytes
 45065 ;; Hardware stack levels used: 1
 45066 ;; Hardware stack levels required when called: 6
 45067 ;; This function calls:
 45068 ;;		_fputc
 45069 ;; This function is called by:
 45070 ;;		_vfpfcnvrt
 45071 ;; This function uses a reentrant model
 45072 ;;
 45073                           
 45074                           	psect	text111
 45075   015E14                     __ptext111:
 45076                           	callstack 0
 45077   015E14                     _ctoa:
 45078                           	callstack 0
 45079                           
 45080                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45081   015E14  52E6               	movf	postinc1,f,c
 45082   015E16  52E6               	movf	postinc1,f,c
 45083   015E18  52E6               	movf	postinc1,f,c
 45084   015E1A  52E6               	movf	postinc1,f,c
 45085                           
 45086                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 476: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 477: {;/opt/microchi
      +                          p/xc8/v3.00/pic/sources/c99/common/doprnt.c: 478:     int l,w;;/opt/microchip/xc8/v3.00/
      +                          pic/sources/c99/common/doprnt.c: 481:     w = width ? width - 1 : width;
 45087                           
 45088                           ;incstack = 0
 45089   015E1C  0101               	movlb	1	; () banked
 45090   015E1E  51C1               	movf	_width& (0+255),w,b
 45091   015E20  11C2               	iorwf	(_width+1)& (0+255),w,b
 45092   015E22  A4D8               	btfss	status,2,c
 45093   015E24  D009               	goto	l11583
 45094                           
 45095                           ; BSR set to: 1
 45096                           ;stkvar	_w @ sp[(-4)+0]
 45097   015E26  0EFC               	movlw	-4
 45098   015E28  0060  F707  FFE3   	movff	_width,plusw1
 45099   015E2E  0EFD               	movlw	-3
 45100   015E30  0060  F70B  FFE3   	movff	_width+1,plusw1
 45101   015E36  D012               	goto	l11585
 45102   015E38                     l11583:
 45103                           
 45104                           ; BSR set to: 1
 45105   015E38  C1C1  F02C         	movff	_width,btemp+10
 45106   015E3C  C1C2  F02D         	movff	_width+1,btemp+11
 45107   015E40  0EFF               	movlw	255
 45108   015E42  242C               	addwf	(btemp+10)^0,w,c
 45109   015E44  6E2A               	movwf	(btemp+8)^0,c
 45110   015E46  0EFF               	movlw	255
 45111   015E48  202D               	addwfc	(btemp+11)^0,w,c
 45112   015E4A  6E2B               	movwf	(btemp+9)^0,c
 45113                           
 45114                           ;stkvar	_w @ sp[(-4)+0]
 45115   015E4C  0EFC               	movlw	-4
 45116   015E4E  0060  F0AB  FFE3   	movff	btemp+8,plusw1
 45117   015E54  0EFD               	movlw	-3
 45118   015E56  0060  F0AF  FFE3   	movff	btemp+9,plusw1
 45119   015E5C                     l11585:
 45120                           
 45121                           ; BSR set to: 1
 45122                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 485:     if (flags & (1 << 0)
      +                          ) {
 45123   015E5C  A1C5               	btfss	_flags& (0+255),0,b
 45124   015E5E  D00E               	goto	l11589
 45125                           
 45126                           ; BSR set to: 1
 45127                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 486:         fputc(c, fp);
 45128                           ;stkvar	_fp @ sp[(-4)+-2]
 45129   015E60  0EFA               	movlw	-6
 45130   015E62  006F FF8F FFE6     	movff	plusw1,postinc1
 45131   015E68  006F FF8F FFE6     	movff	plusw1,postinc1
 45132                           
 45133                           ;stkvar	_c @ sp[(-6)+-3]
 45134   015E6E  0EF7               	movlw	-9
 45135   015E70  50E3               	movf	plusw1,w,c
 45136   015E72  6EE6               	movwf	postinc1,c
 45137   015E74  0E00               	movlw	0
 45138   015E76  6EE6               	movwf	postinc1,c
 45139   015E78  ECE7  F0AD         	call	_fputc	;wreg free
 45140   015E7C                     l11589:
 45141                           
 45142                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 491:     w = (w < 0) ? 0 : w;
 45143                           ;stkvar	_w @ sp[(-4)+0]
 45144   015E7C  0EFD               	movlw	-3
 45145   015E7E  AEE3               	btfss	plusw1,7,c
 45146   015E80  D004               	goto	l3170
 45147                           
 45148                           ;stkvar	_w @ sp[(-4)+0]
 45149   015E82  0EFC               	movlw	-4
 45150   015E84  6AE3               	clrf	plusw1,c
 45151   015E86  0EFD               	movlw	-3
 45152   015E88  6AE3               	clrf	plusw1,c
 45153   015E8A                     l3170:
 45154                           
 45155                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 492:     l = 0;
 45156                           ;stkvar	_l @ sp[(-4)+2]
 45157   015E8A  0EFE               	movlw	-2
 45158   015E8C  6AE3               	clrf	plusw1,c
 45159   015E8E  0EFF               	movlw	-1
 45160   015E90  6AE3               	clrf	plusw1,c
 45161                           
 45162                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 493:     while (l < w) {
 45163   015E92  D01E               	goto	l11599
 45164   015E94                     l11595:
 45165                           
 45166                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 494:         fputc(' ', fp);
 45167                           ;stkvar	_fp @ sp[(-4)+-2]
 45168   015E94  0EFA               	movlw	-6
 45169   015E96  006F FF8F FFE6     	movff	plusw1,postinc1
 45170   015E9C  006F FF8F FFE6     	movff	plusw1,postinc1
 45171   015EA2  0E20               	movlw	32
 45172   015EA4  6EE6               	movwf	postinc1,c
 45173   015EA6  0E00               	movlw	0
 45174   015EA8  6EE6               	movwf	postinc1,c
 45175   015EAA  ECE7  F0AD         	call	_fputc	;wreg free
 45176                           
 45177                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 495:         ++l;
 45178                           ;stkvar	_l @ sp[(-4)+2]
 45179   015EAE  0EFE               	movlw	-2
 45180   015EB0  50E3               	movf	plusw1,w,c
 45181   015EB2  0F01               	addlw	1
 45182   015EB4  6E22               	movwf	btemp^0,c
 45183   015EB6  0EFE               	movlw	-2
 45184   015EB8  0060  F08B  FFE3   	movff	btemp,plusw1
 45185   015EBE  6A22               	clrf	btemp^0,c
 45186   015EC0  0EFF               	movlw	-1
 45187   015EC2  50E3               	movf	plusw1,w,c
 45188   015EC4  2022               	addwfc	btemp^0,w,c
 45189   015EC6  6E22               	movwf	btemp^0,c
 45190   015EC8  0EFF               	movlw	-1
 45191   015ECA  0060  F08B  FFE3   	movff	btemp,plusw1
 45192   015ED0                     l11599:
 45193                           
 45194                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 493:     while (l < w) {
 45195                           ;stkvar	_w @ sp[(-4)+0]
 45196                           ;stkvar	_l @ sp[(-4)+2]
 45197   015ED0  50E1               	movf	fsr1l,w,c
 45198   015ED2  0FFE               	addlw	-2
 45199   015ED4  6ED9               	movwf	fsr2l,c
 45200   015ED6  50E2               	movf	fsr1h,w,c
 45201   015ED8  6EDA               	movwf	fsr2h,c
 45202   015EDA  0EFF               	movlw	255
 45203   015EDC  22DA               	addwfc	fsr2h,f,c
 45204   015EDE  0EFC               	movlw	-4
 45205   015EE0  50E3               	movf	plusw1,w,c
 45206   015EE2  5CDE               	subwf	postinc2,w,c
 45207   015EE4  50DE               	movf	postinc2,w,c
 45208   015EE6  0A80               	xorlw	128
 45209   015EE8  6E22               	movwf	btemp^0,c
 45210   015EEA  0EFD               	movlw	-3
 45211   015EEC  50E3               	movf	plusw1,w,c
 45212   015EEE  0A80               	xorlw	128
 45213   015EF0  5822               	subwfb	btemp^0,w,c
 45214   015EF2  A0D8               	btfss	status,0,c
 45215   015EF4  D7CF               	goto	l11595
 45216                           
 45217                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 499:     if (!(flags & (1 << 
      +                          0))) {
 45218   015EF6  0101               	movlb	1	; () banked
 45219   015EF8  B1C5               	btfsc	_flags& (0+255),0,b
 45220   015EFA  D00E               	goto	l11603
 45221                           
 45222                           ; BSR set to: 1
 45223                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 501:         fputc(c, fp);
 45224                           ;stkvar	_fp @ sp[(-4)+-2]
 45225   015EFC  0EFA               	movlw	-6
 45226   015EFE  006F FF8F FFE6     	movff	plusw1,postinc1
 45227   015F04  006F FF8F FFE6     	movff	plusw1,postinc1
 45228                           
 45229                           ;stkvar	_c @ sp[(-6)+-3]
 45230   015F0A  0EF7               	movlw	-9
 45231   015F0C  50E3               	movf	plusw1,w,c
 45232   015F0E  6EE6               	movwf	postinc1,c
 45233   015F10  0E00               	movlw	0
 45234   015F12  6EE6               	movwf	postinc1,c
 45235   015F14  ECE7  F0AD         	call	_fputc	;wreg free
 45236   015F18                     l11603:
 45237                           
 45238                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 507:     return l+1;
 45239                           ;stkvar	_l @ sp[(-4)+2]
 45240   015F18  0EFE               	movlw	-2
 45241   015F1A  50E3               	movf	plusw1,w,c
 45242   015F1C  0F01               	addlw	1
 45243   015F1E  6E22               	movwf	btemp^0,c
 45244   015F20  0EFF               	movlw	-1
 45245   015F22  006F FF8C  F023    	movff	plusw1,btemp+1
 45246   015F28  0E00               	movlw	0
 45247   015F2A  2223               	addwfc	(btemp+1)^0,f,c
 45248                           
 45249                           ; _ctoa: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 45250   015F2C  0EF9               	movlw	249
 45251   015F2E  26E1               	addwf	fsr1l,f,c
 45252   015F30  0EFF               	movlw	255
 45253   015F32  22E2               	addwfc	fsr1h,f,c
 45254   015F34  0012               	return		;funcret
 45255   015F36                     __end_of_ctoa:
 45256                           	callstack 0
 45257                           
 45258 ;; *************** function _fputc *****************
 45259 ;; Defined at:
 45260 ;;		line 8 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/nf_fputc.c"
 45261 ;; Parameters:    Size  Location     Type
 45262 ;;  c               2  [STACK] int 
 45263 ;;  fp              2  [STACK] PTR struct _IO_FILE
 45264 ;;		 -> f(11), NULL(0), 
 45265 ;; Auto vars:     Size  Location     Type
 45266 ;;		None
 45267 ;; Return value:  Size  Location     Type
 45268 ;;                  2  [STACK] int 
 45269 ;; Registers used:
 45270 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 45271 ;; Tracked objects:
 45272 ;;		On entry : 0/1
 45273 ;;		On exit  : 0/0
 45274 ;;		Unchanged: 0/0
 45275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45280 ;;Total ram usage:        0 bytes
 45281 ;; Hardware stack levels used: 1
 45282 ;; Hardware stack levels required when called: 5
 45283 ;; This function calls:
 45284 ;;		_putch
 45285 ;; This function is called by:
 45286 ;;		_pad
 45287 ;;		_ctoa
 45288 ;;		_stoa
 45289 ;;		_vfpfcnvrt
 45290 ;;		_fputs
 45291 ;; This function uses a reentrant model
 45292 ;;
 45293                           
 45294                           	psect	text112
 45295   015BCE                     __ptext112:
 45296                           	callstack 0
 45297   015BCE                     _fputc:
 45298                           	callstack 16
 45299                           
 45300                           ;stkvar	_fp @ sp[(0)+-4]
 45301                           
 45302                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45303                           ;incstack = 0
 45304   015BCE  0EFC               	movlw	-4
 45305   015BD0  006F FF8C  F022    	movff	plusw1,btemp
 45306   015BD6  0EFD               	movlw	-3
 45307   015BD8  50E3               	movf	plusw1,w,c
 45308   015BDA  1022               	iorwf	btemp^0,w,c
 45309   015BDC  B4D8               	btfsc	status,2,c
 45310   015BDE  D009               	goto	u7810
 45311                           
 45312                           ;stkvar	_fp @ sp[(0)+-4]
 45313   015BE0  0EFC               	movlw	-4
 45314   015BE2  006F FF8C  F022    	movff	plusw1,btemp
 45315   015BE8  0EFD               	movlw	-3
 45316   015BEA  50E3               	movf	plusw1,w,c
 45317   015BEC  1022               	iorwf	btemp^0,w,c
 45318   015BEE  A4D8               	btfss	status,2,c
 45319   015BF0  D006               	goto	l11541
 45320   015BF2                     u7810:
 45321                           
 45322                           ;stkvar	_c @ sp[(0)+-2]
 45323   015BF2  0EFE               	movlw	-2
 45324   015BF4  50E3               	movf	plusw1,w,c
 45325   015BF6  6EE6               	movwf	postinc1,c
 45326   015BF8  ECD7  F0BF         	call	_putch	;wreg free
 45327   015BFC  D075               	goto	l3386
 45328   015BFE                     l11541:
 45329                           
 45330                           ;stkvar	_fp @ sp[(0)+-4]
 45331   015BFE  0EFC               	movlw	-4
 45332   015C00  006F FF8C  F02C    	movff	plusw1,btemp+10
 45333   015C06  0EFD               	movlw	-3
 45334   015C08  006F FF8C  F02D    	movff	plusw1,btemp+11
 45335   015C0E  0E09               	movlw	9
 45336   015C10  242C               	addwf	(btemp+10)^0,w,c
 45337   015C12  6ED9               	movwf	fsr2l,c
 45338   015C14  0E00               	movlw	0
 45339   015C16  202D               	addwfc	(btemp+11)^0,w,c
 45340   015C18  6EDA               	movwf	fsr2h,c
 45341   015C1A  50DE               	movf	postinc2,w,c
 45342   015C1C  10DE               	iorwf	postinc2,w,c
 45343   015C1E  B4D8               	btfsc	status,2,c
 45344   015C20  D026               	goto	u7830
 45345                           
 45346                           ;stkvar	_fp @ sp[(0)+-4]
 45347   015C22  0EFC               	movlw	-4
 45348   015C24  006F FF8C  F02C    	movff	plusw1,btemp+10
 45349   015C2A  0EFD               	movlw	-3
 45350   015C2C  006F FF8C  F02D    	movff	plusw1,btemp+11
 45351   015C32  0E09               	movlw	9
 45352   015C34  242C               	addwf	(btemp+10)^0,w,c
 45353   015C36  6ED9               	movwf	fsr2l,c
 45354   015C38  0E00               	movlw	0
 45355   015C3A  202D               	addwfc	(btemp+11)^0,w,c
 45356   015C3C  6EDA               	movwf	fsr2h,c
 45357                           
 45358                           ;stkvar	_fp @ sp[(0)+-4]
 45359   015C3E  0EFC               	movlw	-4
 45360   015C40  006F FF8C  F02C    	movff	plusw1,btemp+10
 45361   015C46  0EFD               	movlw	-3
 45362   015C48  006F FF8C  F02D    	movff	plusw1,btemp+11
 45363   015C4E  0E02               	movlw	2
 45364   015C50  242C               	addwf	(btemp+10)^0,w,c
 45365   015C52  6EE9               	movwf	fsr0l,c
 45366   015C54  0E00               	movlw	0
 45367   015C56  202D               	addwfc	(btemp+11)^0,w,c
 45368   015C58  6EEA               	movwf	fsr0h,c
 45369   015C5A  50DE               	movf	postinc2,w,c
 45370   015C5C  5CEE               	subwf	postinc0,w,c
 45371   015C5E  50EE               	movf	postinc0,w,c
 45372   015C60  0A80               	xorlw	128
 45373   015C62  6E22               	movwf	btemp^0,c
 45374   015C64  50DE               	movf	postinc2,w,c
 45375   015C66  0A80               	xorlw	128
 45376   015C68  5822               	subwfb	btemp^0,w,c
 45377   015C6A  B0D8               	btfsc	status,0,c
 45378   015C6C  D03D               	goto	l3386
 45379   015C6E                     u7830:
 45380                           
 45381                           ;stkvar	_c @ sp[(0)+-2]
 45382                           ;stkvar	_fp @ sp[(0)+-4]
 45383   015C6E  0EFC               	movlw	-4
 45384   015C70  006F FF8C  F02C    	movff	plusw1,btemp+10
 45385   015C76  0EFD               	movlw	-3
 45386   015C78  006F FF8C  F02D    	movff	plusw1,btemp+11
 45387   015C7E  0E02               	movlw	2
 45388   015C80  242C               	addwf	(btemp+10)^0,w,c
 45389   015C82  6ED9               	movwf	fsr2l,c
 45390   015C84  0E00               	movlw	0
 45391   015C86  202D               	addwfc	(btemp+11)^0,w,c
 45392   015C88  6EDA               	movwf	fsr2h,c
 45393   015C8A  006F FF78  F02C    	movff	postinc2,btemp+10
 45394   015C90  006F FF74  F02D    	movff	postdec2,btemp+11
 45395                           
 45396                           ;stkvar	_fp @ sp[(0)+-4]
 45397   015C96  0EFC               	movlw	-4
 45398   015C98  006F FF8F FFD9     	movff	plusw1,fsr2l
 45399   015C9E  0EFD               	movlw	-3
 45400   015CA0  006F FF8F FFDA     	movff	plusw1,fsr2h
 45401   015CA6  006F FF78  F02A    	movff	postinc2,btemp+8
 45402   015CAC  006F FF74  F02B    	movff	postdec2,btemp+9
 45403   015CB2  502C               	movf	(btemp+10)^0,w,c
 45404   015CB4  242A               	addwf	(btemp+8)^0,w,c
 45405   015CB6  6ED9               	movwf	fsr2l,c
 45406   015CB8  502D               	movf	(btemp+11)^0,w,c
 45407   015CBA  202B               	addwfc	(btemp+9)^0,w,c
 45408   015CBC  6EDA               	movwf	fsr2h,c
 45409   015CBE  0EFE               	movlw	-2
 45410   015CC0  006F FF8F FFDF     	movff	plusw1,indf2
 45411                           
 45412                           ;stkvar	_fp @ sp[(0)+-4]
 45413   015CC6  0EFC               	movlw	-4
 45414   015CC8  006F FF8C  F02C    	movff	plusw1,btemp+10
 45415   015CCE  0EFD               	movlw	-3
 45416   015CD0  006F FF8C  F02D    	movff	plusw1,btemp+11
 45417   015CD6  0E02               	movlw	2
 45418   015CD8  242C               	addwf	(btemp+10)^0,w,c
 45419   015CDA  6ED9               	movwf	fsr2l,c
 45420   015CDC  0E00               	movlw	0
 45421   015CDE  202D               	addwfc	(btemp+11)^0,w,c
 45422   015CE0  6EDA               	movwf	fsr2h,c
 45423   015CE2  2ADE               	incf	postinc2,f,c
 45424   015CE4  0E00               	movlw	0
 45425   015CE6  22DD               	addwfc	postdec2,f,c
 45426   015CE8                     l3386:
 45427                           
 45428                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 45429   015CE8  52E5               	movf	postdec1,f,c
 45430   015CEA  52E5               	movf	postdec1,f,c
 45431   015CEC  52E5               	movf	postdec1,f,c
 45432   015CEE  52E5               	movf	postdec1,f,c
 45433   015CF0  0012               	return		;funcret
 45434   015CF2                     __end_of_fputc:
 45435                           	callstack 0
 45436                           
 45437 ;; *************** function _putch *****************
 45438 ;; Defined at:
 45439 ;;		line 155 in file "eadog.c"
 45440 ;; Parameters:    Size  Location     Type
 45441 ;;  c               1  [STACK] unsigned char 
 45442 ;; Auto vars:     Size  Location     Type
 45443 ;;		None
 45444 ;; Return value:  Size  Location     Type
 45445 ;;                  1  [STACK] void 
 45446 ;; Registers used:
 45447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 45448 ;; Tracked objects:
 45449 ;;		On entry : 0/1
 45450 ;;		On exit  : 0/0
 45451 ;;		Unchanged: 0/0
 45452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45457 ;;Total ram usage:        0 bytes
 45458 ;; Hardware stack levels used: 1
 45459 ;; Hardware stack levels required when called: 4
 45460 ;; This function calls:
 45461 ;;		_ringBufS_put_dma
 45462 ;; This function is called by:
 45463 ;;		_fputc
 45464 ;; This function uses a reentrant model
 45465 ;;
 45466                           
 45467                           	psect	text113
 45468   017FAE                     __ptext113:
 45469                           	callstack 0
 45470   017FAE                     _putch:
 45471                           	callstack 16
 45472                           
 45473                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 45474                           ;stkvar	_c @ sp[(0)+-1]
 45475                           
 45476                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45477                           ;incstack = 0
 45478   017FAE  0EFF               	movlw	-1
 45479   017FB0  50E3               	movf	plusw1,w,c
 45480   017FB2  6EE6               	movwf	postinc1,c
 45481   017FB4  0060  F237  FFE6   	movff	_spi_link+6,postinc1
 45482   017FBA  0060  F23B  FFE6   	movff	_spi_link+7,postinc1
 45483   017FC0  ECD7  F0B4         	call	_ringBufS_put_dma	;wreg free
 45484                           
 45485                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 45486   017FC4  52E5               	movf	postdec1,f,c
 45487   017FC6  0012               	return		;funcret
 45488   017FC8                     __end_of_putch:
 45489                           	callstack 0
 45490                           
 45491 ;; *************** function _ringBufS_put_dma *****************
 45492 ;; Defined at:
 45493 ;;		line 67 in file "ringbufs.c"
 45494 ;; Parameters:    Size  Location     Type
 45495 ;;  _this           2  [STACK] PTR struct ringBufS_t
 45496 ;;		 -> ring_buf1(67), 
 45497 ;;  c               1  [STACK] const unsigned char 
 45498 ;; Auto vars:     Size  Location     Type
 45499 ;;		None
 45500 ;; Return value:  Size  Location     Type
 45501 ;;                  1  [STACK] void 
 45502 ;; Registers used:
 45503 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 45504 ;; Tracked objects:
 45505 ;;		On entry : 0/1
 45506 ;;		On exit  : 0/0
 45507 ;;		Unchanged: 0/0
 45508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45513 ;;Total ram usage:        0 bytes
 45514 ;; Hardware stack levels used: 1
 45515 ;; Hardware stack levels required when called: 3
 45516 ;; This function calls:
 45517 ;;		Nothing
 45518 ;; This function is called by:
 45519 ;;		_putch
 45520 ;; This function uses a reentrant model
 45521 ;;
 45522                           
 45523                           	psect	text114
 45524   0169AE                     __ptext114:
 45525                           	callstack 0
 45526   0169AE                     _ringBufS_put_dma:
 45527                           	callstack 16
 45528                           
 45529                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 45530                           ;stkvar	__this @ sp[(0)+-2]
 45531                           
 45532                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45533                           ;incstack = 0
 45534   0169AE  0EFE               	movlw	-2
 45535   0169B0  006F FF8C  F02C    	movff	plusw1,btemp+10
 45536   0169B6  0EFF               	movlw	-1
 45537   0169B8  006F FF8C  F02D    	movff	plusw1,btemp+11
 45538   0169BE  0E42               	movlw	66
 45539   0169C0  242C               	addwf	(btemp+10)^0,w,c
 45540   0169C2  6ED9               	movwf	fsr2l,c
 45541   0169C4  0E00               	movlw	0
 45542   0169C6  202D               	addwfc	(btemp+11)^0,w,c
 45543   0169C8  6EDA               	movwf	fsr2h,c
 45544   0169CA  0E40               	movlw	64
 45545   0169CC  60DF               	cpfslt	indf2,c
 45546   0169CE  D040               	goto	l1695
 45547                           
 45548                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 45549                           ;stkvar	_c @ sp[(0)+-3]
 45550                           ;stkvar	__this @ sp[(0)+-2]
 45551   0169D0  0EFE               	movlw	-2
 45552   0169D2  006F FF8C  F02C    	movff	plusw1,btemp+10
 45553   0169D8  0EFF               	movlw	-1
 45554   0169DA  006F FF8C  F02D    	movff	plusw1,btemp+11
 45555   0169E0  0E40               	movlw	64
 45556   0169E2  242C               	addwf	(btemp+10)^0,w,c
 45557   0169E4  6ED9               	movwf	fsr2l,c
 45558   0169E6  0E00               	movlw	0
 45559   0169E8  202D               	addwfc	(btemp+11)^0,w,c
 45560   0169EA  6EDA               	movwf	fsr2h,c
 45561   0169EC  50DF               	movf	indf2,w,c
 45562   0169EE  6E2D               	movwf	(btemp+11)^0,c
 45563                           
 45564                           ;stkvar	__this @ sp[(0)+-2]
 45565   0169F0  0EFE               	movlw	-2
 45566   0169F2  006F FF8C  F02A    	movff	plusw1,btemp+8
 45567   0169F8  0EFF               	movlw	-1
 45568   0169FA  006F FF8C  F02B    	movff	plusw1,btemp+9
 45569   016A00  502D               	movf	(btemp+11)^0,w,c
 45570   016A02  242A               	addwf	(btemp+8)^0,w,c
 45571   016A04  6ED9               	movwf	fsr2l,c
 45572   016A06  0E00               	movlw	0
 45573   016A08  202B               	addwfc	(btemp+9)^0,w,c
 45574   016A0A  6EDA               	movwf	fsr2h,c
 45575   016A0C  0EFD               	movlw	-3
 45576   016A0E  006F FF8F FFDF     	movff	plusw1,indf2
 45577                           
 45578                           ;ringbufs.c: 71:   ++_this->head;
 45579                           ;stkvar	__this @ sp[(0)+-2]
 45580   016A14  0EFE               	movlw	-2
 45581   016A16  006F FF8C  F02C    	movff	plusw1,btemp+10
 45582   016A1C  0EFF               	movlw	-1
 45583   016A1E  006F FF8C  F02D    	movff	plusw1,btemp+11
 45584   016A24  0E40               	movlw	64
 45585   016A26  242C               	addwf	(btemp+10)^0,w,c
 45586   016A28  6ED9               	movwf	fsr2l,c
 45587   016A2A  0E00               	movlw	0
 45588   016A2C  202D               	addwfc	(btemp+11)^0,w,c
 45589   016A2E  6EDA               	movwf	fsr2h,c
 45590   016A30  2ADF               	incf	indf2,f,c
 45591                           
 45592                           ;ringbufs.c: 72:   ++_this->count;
 45593                           ;stkvar	__this @ sp[(0)+-2]
 45594   016A32  0EFE               	movlw	-2
 45595   016A34  006F FF8C  F02C    	movff	plusw1,btemp+10
 45596   016A3A  0EFF               	movlw	-1
 45597   016A3C  006F FF8C  F02D    	movff	plusw1,btemp+11
 45598   016A42  0E42               	movlw	66
 45599   016A44  242C               	addwf	(btemp+10)^0,w,c
 45600   016A46  6ED9               	movwf	fsr2l,c
 45601   016A48  0E00               	movlw	0
 45602   016A4A  202D               	addwfc	(btemp+11)^0,w,c
 45603   016A4C  6EDA               	movwf	fsr2h,c
 45604   016A4E  2ADF               	incf	indf2,f,c
 45605   016A50                     l1695:
 45606                           
 45607                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 45608   016A50  52E5               	movf	postdec1,f,c
 45609   016A52  52E5               	movf	postdec1,f,c
 45610   016A54  52E5               	movf	postdec1,f,c
 45611   016A56  0012               	return		;funcret
 45612   016A58                     __end_of_ringBufS_put_dma:
 45613                           	callstack 0
 45614                           
 45615 ;; *************** function _get_vterm_ptr *****************
 45616 ;; Defined at:
 45617 ;;		line 113 in file "mconfig.c"
 45618 ;; Parameters:    Size  Location     Type
 45619 ;;  line            1  [STACK] unsigned char 
 45620 ;;  vterm           1  [STACK] unsigned char 
 45621 ;; Auto vars:     Size  Location     Type
 45622 ;;		None
 45623 ;; Return value:  Size  Location     Type
 45624 ;;                  2  [STACK] PTR unsigned char 
 45625 ;; Registers used:
 45626 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 45627 ;; Tracked objects:
 45628 ;;		On entry : 0/0
 45629 ;;		On exit  : 0/0
 45630 ;;		Unchanged: 0/0
 45631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45636 ;;Total ram usage:        0 bytes
 45637 ;; Hardware stack levels used: 1
 45638 ;; Hardware stack levels required when called: 3
 45639 ;; This function calls:
 45640 ;;		Nothing
 45641 ;; This function is called by:
 45642 ;;		_main
 45643 ;;		_check_help
 45644 ;;		_vterm_dump
 45645 ;;		_vterm_sequence
 45646 ;;		_MyeaDogM_WriteStringAtPos
 45647 ;; This function uses a reentrant model
 45648 ;;
 45649                           
 45650                           	psect	text115
 45651   0178CC                     __ptext115:
 45652                           	callstack 0
 45653   0178CC                     _get_vterm_ptr:
 45654                           	callstack 24
 45655                           
 45656                           ;mconfig.c: 113: char * get_vterm_ptr(uint8_t line, uint8_t vterm);mconfig.c: 114: {;mco
      +                          nfig.c: 115:  return D.lcd[vterm & 0x03][line & 0x03];
 45657                           ;stkvar	_line @ sp[(0)+-1]
 45658                           
 45659                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45660                           ;incstack = 0
 45661   0178CC  0EFF               	movlw	-1
 45662   0178CE  50E3               	movf	plusw1,w,c
 45663   0178D0  0B03               	andlw	3
 45664   0178D2  0D20               	mullw	32
 45665   0178D4  006F FFCC  F02C    	movff	prodl,btemp+10
 45666   0178DA  006F FFD0  F02D    	movff	prodh,btemp+11
 45667                           
 45668                           ;stkvar	_vterm @ sp[(0)+-2]
 45669   0178E0  0EFE               	movlw	-2
 45670   0178E2  50E3               	movf	plusw1,w,c
 45671   0178E4  0B03               	andlw	3
 45672   0178E6  0D80               	mullw	128
 45673   0178E8  0E00               	movlw	low _D@mconfig$F5156
 45674   0178EA  24F3               	addwf	243,w,c
 45675   0178EC  6E2A               	movwf	(btemp+8)^0,c
 45676   0178EE  0E07               	movlw	high _D@mconfig$F5156
 45677   0178F0  20F4               	addwfc	prodh,w,c
 45678   0178F2  6E2B               	movwf	(btemp+9)^0,c
 45679   0178F4  502C               	movf	(btemp+10)^0,w,c
 45680   0178F6  242A               	addwf	(btemp+8)^0,w,c
 45681   0178F8  6E22               	movwf	btemp^0,c
 45682   0178FA  502D               	movf	(btemp+11)^0,w,c
 45683   0178FC  202B               	addwfc	(btemp+9)^0,w,c
 45684   0178FE  6E23               	movwf	(btemp+1)^0,c
 45685                           
 45686                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 45687   017900  52E5               	movf	postdec1,f,c
 45688   017902  52E5               	movf	postdec1,f,c
 45689   017904  0012               	return		;funcret
 45690   017906                     __end_of_get_vterm_ptr:
 45691                           	callstack 0
 45692                           
 45693 ;; *************** function _TimerDone *****************
 45694 ;; Defined at:
 45695 ;;		line 20 in file "timers.c"
 45696 ;; Parameters:    Size  Location     Type
 45697 ;;  timer           1  [STACK] const unsigned char 
 45698 ;; Auto vars:     Size  Location     Type
 45699 ;;		None
 45700 ;; Return value:  Size  Location     Type
 45701 ;;                  1  [STACK] _Bool 
 45702 ;; Registers used:
 45703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 45704 ;; Tracked objects:
 45705 ;;		On entry : 0/3C
 45706 ;;		On exit  : 0/0
 45707 ;;		Unchanged: 0/0
 45708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45713 ;;Total ram usage:        0 bytes
 45714 ;; Hardware stack levels used: 1
 45715 ;; Hardware stack levels required when called: 3
 45716 ;; This function calls:
 45717 ;;		Nothing
 45718 ;; This function is called by:
 45719 ;;		_main
 45720 ;;		_m_protocol
 45721 ;;		_r_protocol
 45722 ;;		_t_protocol
 45723 ;;		_secs_II_message
 45724 ;;		_secs_gem_state
 45725 ;;		_WaitMs
 45726 ;;		_help_button
 45727 ;;		_check_help
 45728 ;;		_MyeaDogM_WriteStringAtPos
 45729 ;;		_set_display_info
 45730 ;; This function uses a reentrant model
 45731 ;;
 45732                           
 45733                           	psect	text116
 45734   017DAE                     __ptext116:
 45735                           	callstack 0
 45736   017DAE                     _TimerDone:
 45737                           	callstack 24
 45738                           
 45739                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45740                           ;incstack = 0
 45741   017DAE  0004               	clrwdt		;# 
 45742                           
 45743                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 45744                           ;stkvar	_timer @ sp[(0)+-1]
 45745   017DB0  0EFF               	movlw	-1
 45746   017DB2  50E3               	movf	plusw1,w,c
 45747   017DB4  0D02               	mullw	2
 45748   017DB6  50F3               	movf	243,w,c
 45749   017DB8  0F60               	addlw	low _tickCount
 45750   017DBA  6ED9               	movwf	fsr2l,c
 45751   017DBC  6ADA               	clrf	fsr2h,c
 45752   017DBE  50DE               	movf	postinc2,w,c
 45753   017DC0  10DE               	iorwf	postinc2,w,c
 45754   017DC2  A4D8               	btfss	status,2,c
 45755   017DC4  D002               	goto	l8291
 45756                           
 45757                           ;timers.c: 24:   return 1;
 45758   017DC6  0E01               	movlw	1
 45759   017DC8  D001               	goto	L42
 45760   017DCA                     l8291:
 45761                           
 45762                           ;timers.c: 26:  return 0;
 45763   017DCA  0E00               	movlw	0
 45764   017DCC                     L42:
 45765   017DCC  6E22               	movwf	btemp^0,c
 45766                           
 45767                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 45768   017DCE  52E5               	movf	postdec1,f,c
 45769   017DD0  0012               	return		;funcret
 45770   017DD2                     __end_of_TimerDone:
 45771                           	callstack 0
 45772                           
 45773 ;; *************** function _INT0_ISR *****************
 45774 ;; Defined at:
 45775 ;;		line 38 in file "mcc_generated_files/ext_int.c"
 45776 ;; Parameters:    Size  Location     Type
 45777 ;;		None
 45778 ;; Auto vars:     Size  Location     Type
 45779 ;;		None
 45780 ;; Return value:  Size  Location     Type
 45781 ;;                  1    wreg      void 
 45782 ;; Registers used:
 45783 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl
 45784 ;; Tracked objects:
 45785 ;;		On entry : 0/0
 45786 ;;		On exit  : 0/0
 45787 ;;		Unchanged: 0/0
 45788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45791 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45792 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45793 ;;Total ram usage:        2 bytes
 45794 ;; Hardware stack levels used: 1
 45795 ;; Hardware stack levels required when called: 2
 45796 ;; This function calls:
 45797 ;;		_INT0_CallBack
 45798 ;; This function is called by:
 45799 ;;		Interrupt level 2
 45800 ;; This function uses a non-reentrant model
 45801 ;;
 45802                           
 45803                           	psect	text117
 45804   017D38                     __ptext117:
 45805                           	callstack 0
 45806   017D38                     _INT0_ISR:
 45807                           	callstack 15
 45808                           
 45809                           ;incstack = 0
 45810   017D38  006F FFE8  F042    	movff	pclath,??_INT0_ISR
 45811   017D3E  006F FFEC  F043    	movff	pclatu,??_INT0_ISR+1
 45812   017D44  EE15  F3EB         	lfsr	1,___inthi_sp
 45813                           
 45814                           ;mcc_generated_files/ext_int.c: 40:  (PIR1bits.INT0IF = 0);
 45815   017D48  0139               	movlb	57	; () banked
 45816   017D4A  91A1               	bcf	161,0,b	;volatile
 45817                           
 45818                           ; BSR set to: 57
 45819                           ;mcc_generated_files/ext_int.c: 43:  INT0_CallBack();
 45820   017D4C  ECE9  F0BE         	call	_INT0_CallBack	;wreg free
 45821   017D50  0060  F10F  FFFB   	movff	??_INT0_ISR+1,pclatu
 45822   017D56  0060  F10B  FFFA   	movff	??_INT0_ISR,pclath
 45823   017D5C  0011               	retfie		f
 45824   017D5E                     __end_of_INT0_ISR:
 45825                           	callstack 0
 45826                           
 45827 ;; *************** function _INT0_CallBack *****************
 45828 ;; Defined at:
 45829 ;;		line 46 in file "mcc_generated_files/ext_int.c"
 45830 ;; Parameters:    Size  Location     Type
 45831 ;;		None
 45832 ;; Auto vars:     Size  Location     Type
 45833 ;;		None
 45834 ;; Return value:  Size  Location     Type
 45835 ;;                  1  [STACK] void 
 45836 ;; Registers used:
 45837 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl
 45838 ;; Tracked objects:
 45839 ;;		On entry : 3F/39
 45840 ;;		On exit  : 0/0
 45841 ;;		Unchanged: 0/0
 45842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45847 ;;Total ram usage:        0 bytes
 45848 ;; Hardware stack levels used: 1
 45849 ;; Hardware stack levels required when called: 1
 45850 ;; This function calls:
 45851 ;;		NULL
 45852 ;;		_INT0_DefaultInterruptHandler
 45853 ;; This function is called by:
 45854 ;;		_INT0_ISR
 45855 ;; This function uses a reentrant model
 45856 ;;
 45857                           
 45858                           	psect	text118
 45859   017DD2                     __ptext118:
 45860                           	callstack 0
 45861   017DD2                     _INT0_CallBack:
 45862                           	callstack 15
 45863                           
 45864                           ;mcc_generated_files/ext_int.c: 49:  if (INT0_InterruptHandler) {
 45865                           
 45866                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45867                           ;incstack = 0
 45868   017DD2  0100               	movlb	0	; () banked
 45869   017DD4  51B9               	movf	_INT0_InterruptHandler& (0+255),w,b
 45870   017DD6  11BA               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 45871   017DD8  11BB               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 45872   017DDA  B4D8               	btfsc	status,2,c
 45873   017DDC  0012               	return	
 45874                           
 45875                           ; BSR set to: 0
 45876                           ;mcc_generated_files/ext_int.c: 50:   INT0_InterruptHandler();
 45877   017DDE  D801               	call	u625_48
 45878   017DE0  0012               	return	
 45879   017DE2                     u625_48:
 45880   017DE2  0005               	push	
 45881   017DE4  6EFA               	movwf	pclath,c
 45882   017DE6  51B9               	movf	_INT0_InterruptHandler& (0+255),w,b
 45883   017DE8  6EFD               	movwf	tosl,c
 45884   017DEA  51BA               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 45885   017DEC  6EFE               	movwf	tosh,c
 45886   017DEE  51BB               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 45887   017DF0  6EFF               	movwf	tosu,c
 45888   017DF2  50FA               	movf	pclath,w,c
 45889   017DF4  0012               	return		;indir
 45890   017DF6                     __end_of_INT0_CallBack:
 45891                           	callstack 0
 45892                           
 45893 ;; *************** function _INT0_DefaultInterruptHandler *****************
 45894 ;; Defined at:
 45895 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 45896 ;; Parameters:    Size  Location     Type
 45897 ;;		None
 45898 ;; Auto vars:     Size  Location     Type
 45899 ;;		None
 45900 ;; Return value:  Size  Location     Type
 45901 ;;                  1  [STACK] void 
 45902 ;; Registers used:
 45903 ;;		None
 45904 ;; Tracked objects:
 45905 ;;		On entry : 3F/0
 45906 ;;		On exit  : 0/0
 45907 ;;		Unchanged: 0/0
 45908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45913 ;;Total ram usage:        0 bytes
 45914 ;; Hardware stack levels used: 1
 45915 ;; This function calls:
 45916 ;;		Nothing
 45917 ;; This function is called by:
 45918 ;;		_EXT_INT_Initialize
 45919 ;;		_INT0_CallBack
 45920 ;; This function uses a reentrant model
 45921 ;;
 45922                           
 45923                           	psect	text119
 45924   018100                     __ptext119:
 45925                           	callstack 0
 45926   018100                     _INT0_DefaultInterruptHandler:
 45927                           	callstack 15
 45928                           
 45929                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 45930                           
 45931                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45932                           ;incstack = 0
 45933   018100  0012               	return		;funcret
 45934   018102                     __end_of_INT0_DefaultInterruptHandler:
 45935                           	callstack 0
 45936                           
 45937 ;; *************** function _INT1_ISR *****************
 45938 ;; Defined at:
 45939 ;;		line 65 in file "mcc_generated_files/ext_int.c"
 45940 ;; Parameters:    Size  Location     Type
 45941 ;;		None
 45942 ;; Auto vars:     Size  Location     Type
 45943 ;;		None
 45944 ;; Return value:  Size  Location     Type
 45945 ;;                  1    wreg      void 
 45946 ;; Registers used:
 45947 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl
 45948 ;; Tracked objects:
 45949 ;;		On entry : 0/0
 45950 ;;		On exit  : 0/0
 45951 ;;		Unchanged: 0/0
 45952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45955 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45956 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45957 ;;Total ram usage:        2 bytes
 45958 ;; Hardware stack levels used: 1
 45959 ;; Hardware stack levels required when called: 2
 45960 ;; This function calls:
 45961 ;;		_INT1_CallBack
 45962 ;; This function is called by:
 45963 ;;		Interrupt level 2
 45964 ;; This function uses a non-reentrant model
 45965 ;;
 45966                           
 45967                           	psect	text120
 45968   017D60                     __ptext120:
 45969                           	callstack 0
 45970   017D60                     _INT1_ISR:
 45971                           	callstack 15
 45972                           
 45973                           ;incstack = 0
 45974   017D60  006F FFE8  F044    	movff	pclath,??_INT1_ISR
 45975   017D66  006F FFEC  F045    	movff	pclatu,??_INT1_ISR+1
 45976   017D6C  EE15  F3EB         	lfsr	1,___inthi_sp
 45977                           
 45978                           ;mcc_generated_files/ext_int.c: 67:  (PIR5bits.INT1IF = 0);
 45979   017D70  0139               	movlb	57	; () banked
 45980   017D72  91A5               	bcf	165,0,b	;volatile
 45981                           
 45982                           ; BSR set to: 57
 45983                           ;mcc_generated_files/ext_int.c: 70:  INT1_CallBack();
 45984   017D74  ECFB  F0BE         	call	_INT1_CallBack	;wreg free
 45985   017D78  0060  F117  FFFB   	movff	??_INT1_ISR+1,pclatu
 45986   017D7E  0060  F113  FFFA   	movff	??_INT1_ISR,pclath
 45987   017D84  0011               	retfie		f
 45988   017D86                     __end_of_INT1_ISR:
 45989                           	callstack 0
 45990                           
 45991 ;; *************** function _INT1_CallBack *****************
 45992 ;; Defined at:
 45993 ;;		line 73 in file "mcc_generated_files/ext_int.c"
 45994 ;; Parameters:    Size  Location     Type
 45995 ;;		None
 45996 ;; Auto vars:     Size  Location     Type
 45997 ;;		None
 45998 ;; Return value:  Size  Location     Type
 45999 ;;                  1  [STACK] void 
 46000 ;; Registers used:
 46001 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl
 46002 ;; Tracked objects:
 46003 ;;		On entry : 3F/39
 46004 ;;		On exit  : 0/0
 46005 ;;		Unchanged: 0/0
 46006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46011 ;;Total ram usage:        0 bytes
 46012 ;; Hardware stack levels used: 1
 46013 ;; Hardware stack levels required when called: 1
 46014 ;; This function calls:
 46015 ;;		NULL
 46016 ;;		_INT1_DefaultInterruptHandler
 46017 ;; This function is called by:
 46018 ;;		_INT1_ISR
 46019 ;; This function uses a reentrant model
 46020 ;;
 46021                           
 46022                           	psect	text121
 46023   017DF6                     __ptext121:
 46024                           	callstack 0
 46025   017DF6                     _INT1_CallBack:
 46026                           	callstack 15
 46027                           
 46028                           ;mcc_generated_files/ext_int.c: 76:  if (INT1_InterruptHandler) {
 46029                           
 46030                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46031                           ;incstack = 0
 46032   017DF6  0100               	movlb	0	; () banked
 46033   017DF8  51B6               	movf	_INT1_InterruptHandler& (0+255),w,b
 46034   017DFA  11B7               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 46035   017DFC  11B8               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 46036   017DFE  B4D8               	btfsc	status,2,c
 46037   017E00  0012               	return	
 46038                           
 46039                           ; BSR set to: 0
 46040                           ;mcc_generated_files/ext_int.c: 77:   INT1_InterruptHandler();
 46041   017E02  D801               	call	u627_48
 46042   017E04  0012               	return	
 46043   017E06                     u627_48:
 46044   017E06  0005               	push	
 46045   017E08  6EFA               	movwf	pclath,c
 46046   017E0A  51B6               	movf	_INT1_InterruptHandler& (0+255),w,b
 46047   017E0C  6EFD               	movwf	tosl,c
 46048   017E0E  51B7               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 46049   017E10  6EFE               	movwf	tosh,c
 46050   017E12  51B8               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 46051   017E14  6EFF               	movwf	tosu,c
 46052   017E16  50FA               	movf	pclath,w,c
 46053   017E18  0012               	return		;indir
 46054   017E1A                     __end_of_INT1_CallBack:
 46055                           	callstack 0
 46056                           
 46057 ;; *************** function _INT1_DefaultInterruptHandler *****************
 46058 ;; Defined at:
 46059 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 46060 ;; Parameters:    Size  Location     Type
 46061 ;;		None
 46062 ;; Auto vars:     Size  Location     Type
 46063 ;;		None
 46064 ;; Return value:  Size  Location     Type
 46065 ;;                  1  [STACK] void 
 46066 ;; Registers used:
 46067 ;;		None
 46068 ;; Tracked objects:
 46069 ;;		On entry : 3F/0
 46070 ;;		On exit  : 0/0
 46071 ;;		Unchanged: 0/0
 46072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46077 ;;Total ram usage:        0 bytes
 46078 ;; Hardware stack levels used: 1
 46079 ;; This function calls:
 46080 ;;		Nothing
 46081 ;; This function is called by:
 46082 ;;		_EXT_INT_Initialize
 46083 ;;		_INT1_CallBack
 46084 ;; This function uses a reentrant model
 46085 ;;
 46086                           
 46087                           	psect	text122
 46088   018102                     __ptext122:
 46089                           	callstack 0
 46090   018102                     _INT1_DefaultInterruptHandler:
 46091                           	callstack 15
 46092                           
 46093                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 46094                           
 46095                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46096                           ;incstack = 0
 46097   018102  0012               	return		;funcret
 46098   018104                     __end_of_INT1_DefaultInterruptHandler:
 46099                           	callstack 0
 46100                           
 46101 ;; *************** function _INT2_ISR *****************
 46102 ;; Defined at:
 46103 ;;		line 92 in file "mcc_generated_files/ext_int.c"
 46104 ;; Parameters:    Size  Location     Type
 46105 ;;		None
 46106 ;; Auto vars:     Size  Location     Type
 46107 ;;		None
 46108 ;; Return value:  Size  Location     Type
 46109 ;;                  1    wreg      void 
 46110 ;; Registers used:
 46111 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl
 46112 ;; Tracked objects:
 46113 ;;		On entry : 0/0
 46114 ;;		On exit  : 0/0
 46115 ;;		Unchanged: 0/0
 46116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46119 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46120 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46121 ;;Total ram usage:        2 bytes
 46122 ;; Hardware stack levels used: 1
 46123 ;; Hardware stack levels required when called: 2
 46124 ;; This function calls:
 46125 ;;		_INT2_CallBack
 46126 ;; This function is called by:
 46127 ;;		Interrupt level 2
 46128 ;; This function uses a non-reentrant model
 46129 ;;
 46130                           
 46131                           	psect	text123
 46132   017D88                     __ptext123:
 46133                           	callstack 0
 46134   017D88                     _INT2_ISR:
 46135                           	callstack 15
 46136                           
 46137                           ;incstack = 0
 46138   017D88  006F FFE8  F046    	movff	pclath,??_INT2_ISR
 46139   017D8E  006F FFEC  F047    	movff	pclatu,??_INT2_ISR+1
 46140   017D94  EE15  F3EB         	lfsr	1,___inthi_sp
 46141                           
 46142                           ;mcc_generated_files/ext_int.c: 94:  (PIR7bits.INT2IF = 0);
 46143   017D98  0139               	movlb	57	; () banked
 46144   017D9A  9BA7               	bcf	167,5,b	;volatile
 46145                           
 46146                           ; BSR set to: 57
 46147                           ;mcc_generated_files/ext_int.c: 97:  INT2_CallBack();
 46148   017D9C  EC0D  F0BF         	call	_INT2_CallBack	;wreg free
 46149   017DA0  0060  F11F  FFFB   	movff	??_INT2_ISR+1,pclatu
 46150   017DA6  0060  F11B  FFFA   	movff	??_INT2_ISR,pclath
 46151   017DAC  0011               	retfie		f
 46152   017DAE                     __end_of_INT2_ISR:
 46153                           	callstack 0
 46154                           
 46155 ;; *************** function _INT2_CallBack *****************
 46156 ;; Defined at:
 46157 ;;		line 100 in file "mcc_generated_files/ext_int.c"
 46158 ;; Parameters:    Size  Location     Type
 46159 ;;		None
 46160 ;; Auto vars:     Size  Location     Type
 46161 ;;		None
 46162 ;; Return value:  Size  Location     Type
 46163 ;;                  1  [STACK] void 
 46164 ;; Registers used:
 46165 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl
 46166 ;; Tracked objects:
 46167 ;;		On entry : 3F/39
 46168 ;;		On exit  : 0/0
 46169 ;;		Unchanged: 0/0
 46170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46175 ;;Total ram usage:        0 bytes
 46176 ;; Hardware stack levels used: 1
 46177 ;; Hardware stack levels required when called: 1
 46178 ;; This function calls:
 46179 ;;		NULL
 46180 ;;		_INT2_DefaultInterruptHandler
 46181 ;; This function is called by:
 46182 ;;		_INT2_ISR
 46183 ;; This function uses a reentrant model
 46184 ;;
 46185                           
 46186                           	psect	text124
 46187   017E1A                     __ptext124:
 46188                           	callstack 0
 46189   017E1A                     _INT2_CallBack:
 46190                           	callstack 15
 46191                           
 46192                           ;mcc_generated_files/ext_int.c: 103:  if (INT2_InterruptHandler) {
 46193                           
 46194                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46195                           ;incstack = 0
 46196   017E1A  0100               	movlb	0	; () banked
 46197   017E1C  51B3               	movf	_INT2_InterruptHandler& (0+255),w,b
 46198   017E1E  11B4               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
 46199   017E20  11B5               	iorwf	(_INT2_InterruptHandler+2)& (0+255),w,b
 46200   017E22  B4D8               	btfsc	status,2,c
 46201   017E24  0012               	return	
 46202                           
 46203                           ; BSR set to: 0
 46204                           ;mcc_generated_files/ext_int.c: 104:   INT2_InterruptHandler();
 46205   017E26  D801               	call	u629_48
 46206   017E28  0012               	return	
 46207   017E2A                     u629_48:
 46208   017E2A  0005               	push	
 46209   017E2C  6EFA               	movwf	pclath,c
 46210   017E2E  51B3               	movf	_INT2_InterruptHandler& (0+255),w,b
 46211   017E30  6EFD               	movwf	tosl,c
 46212   017E32  51B4               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
 46213   017E34  6EFE               	movwf	tosh,c
 46214   017E36  51B5               	movf	(_INT2_InterruptHandler+2)& (0+255),w,b
 46215   017E38  6EFF               	movwf	tosu,c
 46216   017E3A  50FA               	movf	pclath,w,c
 46217   017E3C  0012               	return		;indir
 46218   017E3E                     __end_of_INT2_CallBack:
 46219                           	callstack 0
 46220                           
 46221 ;; *************** function _INT2_DefaultInterruptHandler *****************
 46222 ;; Defined at:
 46223 ;;		line 113 in file "mcc_generated_files/ext_int.c"
 46224 ;; Parameters:    Size  Location     Type
 46225 ;;		None
 46226 ;; Auto vars:     Size  Location     Type
 46227 ;;		None
 46228 ;; Return value:  Size  Location     Type
 46229 ;;                  1  [STACK] void 
 46230 ;; Registers used:
 46231 ;;		None
 46232 ;; Tracked objects:
 46233 ;;		On entry : 3F/0
 46234 ;;		On exit  : 0/0
 46235 ;;		Unchanged: 0/0
 46236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46241 ;;Total ram usage:        0 bytes
 46242 ;; Hardware stack levels used: 1
 46243 ;; This function calls:
 46244 ;;		Nothing
 46245 ;; This function is called by:
 46246 ;;		_EXT_INT_Initialize
 46247 ;;		_INT2_CallBack
 46248 ;; This function uses a reentrant model
 46249 ;;
 46250                           
 46251                           	psect	text125
 46252   018104                     __ptext125:
 46253                           	callstack 0
 46254   018104                     _INT2_DefaultInterruptHandler:
 46255                           	callstack 15
 46256                           
 46257                           ; _INT2_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 46258                           
 46259                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46260                           ;incstack = 0
 46261   018104  0012               	return		;funcret
 46262   018106                     __end_of_INT2_DefaultInterruptHandler:
 46263                           	callstack 0
 46264                           
 46265 ;; *************** function _Default_ISR *****************
 46266 ;; Defined at:
 46267 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 46268 ;; Parameters:    Size  Location     Type
 46269 ;;		None
 46270 ;; Auto vars:     Size  Location     Type
 46271 ;;		None
 46272 ;; Return value:  Size  Location     Type
 46273 ;;                  1    wreg      void 
 46274 ;; Registers used:
 46275 ;;		None
 46276 ;; Tracked objects:
 46277 ;;		On entry : 0/0
 46278 ;;		On exit  : 0/0
 46279 ;;		Unchanged: 0/0
 46280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46285 ;;Total ram usage:        0 bytes
 46286 ;; Hardware stack levels used: 1
 46287 ;; This function calls:
 46288 ;;		Nothing
 46289 ;; This function is called by:
 46290 ;;		Interrupt level 2
 46291 ;; This function uses a non-reentrant model
 46292 ;;
 46293                           
 46294                           	psect	text126
 46295   0180F4                     __ptext126:
 46296                           	callstack 0
 46297   0180F4                     _Default_ISR:
 46298                           	callstack 17
 46299                           
 46300                           ;incstack = 0
 46301   0180F4  EE15  F3EB         	lfsr	1,___inthi_sp
 46302   0180F8  0011               	retfie		f
 46303   0180FA                     __end_of_Default_ISR:
 46304                           	callstack 0
 46305                           
 46306 ;; *************** function _ADCC_ISR *****************
 46307 ;; Defined at:
 46308 ;;		line 307 in file "mcc_generated_files/adcc.c"
 46309 ;; Parameters:    Size  Location     Type
 46310 ;;		None
 46311 ;; Auto vars:     Size  Location     Type
 46312 ;;		None
 46313 ;; Return value:  Size  Location     Type
 46314 ;;                  1    wreg      void 
 46315 ;; Registers used:
 46316 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl
 46317 ;; Tracked objects:
 46318 ;;		On entry : 0/0
 46319 ;;		On exit  : 0/0
 46320 ;;		Unchanged: 0/0
 46321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46324 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46325 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46326 ;;Total ram usage:        2 bytes
 46327 ;; Hardware stack levels used: 1
 46328 ;; Hardware stack levels required when called: 1
 46329 ;; This function calls:
 46330 ;;		NULL
 46331 ;;		_ADCC_DefaultInterruptHandler
 46332 ;; This function is called by:
 46333 ;;		Interrupt level 2
 46334 ;; This function uses a non-reentrant model
 46335 ;;
 46336                           
 46337                           	psect	text127
 46338   0174C0                     __ptext127:
 46339                           	callstack 0
 46340   0174C0                     _ADCC_ISR:
 46341                           	callstack 16
 46342                           
 46343                           ;incstack = 0
 46344   0174C0  006F FFE8  F048    	movff	pclath,??_ADCC_ISR
 46345   0174C6  006F FFEC  F049    	movff	pclatu,??_ADCC_ISR+1
 46346   0174CC  EE15  F3EB         	lfsr	1,___inthi_sp
 46347                           
 46348                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 46349   0174D0  0139               	movlb	57	; () banked
 46350   0174D2  95A1               	bcf	161,2,b	;volatile
 46351                           
 46352                           ; BSR set to: 57
 46353                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 46354   0174D4  0100               	movlb	0	; () banked
 46355   0174D6  51A4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 46356   0174D8  11A5               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 46357   0174DA  11A6               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 46358   0174DC  B4D8               	btfsc	status,2,c
 46359   0174DE  D00C               	goto	i2u730_49
 46360                           
 46361                           ; BSR set to: 0
 46362                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 46363   0174E0  D801               	call	i2u730_48
 46364   0174E2  D00A               	goto	i2u730_49
 46365   0174E4                     i2u730_48:
 46366   0174E4  0005               	push	
 46367   0174E6  6EFA               	movwf	pclath,c
 46368   0174E8  51A4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 46369   0174EA  6EFD               	movwf	tosl,c
 46370   0174EC  51A5               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 46371   0174EE  6EFE               	movwf	tosh,c
 46372   0174F0  51A6               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 46373   0174F2  6EFF               	movwf	tosu,c
 46374   0174F4  50FA               	movf	pclath,w,c
 46375   0174F6  0012               	return		;indir
 46376   0174F8                     i2u730_49:
 46377   0174F8  0060  F127  FFFB   	movff	??_ADCC_ISR+1,pclatu
 46378   0174FE  0060  F123  FFFA   	movff	??_ADCC_ISR,pclath
 46379   017504  0011               	retfie		f
 46380   017506                     __end_of_ADCC_ISR:
 46381                           	callstack 0
 46382                           
 46383 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 46384 ;; Defined at:
 46385 ;;		line 320 in file "mcc_generated_files/adcc.c"
 46386 ;; Parameters:    Size  Location     Type
 46387 ;;		None
 46388 ;; Auto vars:     Size  Location     Type
 46389 ;;		None
 46390 ;; Return value:  Size  Location     Type
 46391 ;;                  1  [STACK] void 
 46392 ;; Registers used:
 46393 ;;		None
 46394 ;; Tracked objects:
 46395 ;;		On entry : 3F/0
 46396 ;;		On exit  : 0/0
 46397 ;;		Unchanged: 0/0
 46398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46403 ;;Total ram usage:        0 bytes
 46404 ;; Hardware stack levels used: 1
 46405 ;; This function calls:
 46406 ;;		Nothing
 46407 ;; This function is called by:
 46408 ;;		_ADCC_Initialize
 46409 ;;		_ADCC_ISR
 46410 ;; This function uses a reentrant model
 46411 ;;
 46412                           
 46413                           	psect	text128
 46414   018106                     __ptext128:
 46415                           	callstack 0
 46416   018106                     _ADCC_DefaultInterruptHandler:
 46417                           	callstack 16
 46418                           
 46419                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 46420                           
 46421                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46422                           ;incstack = 0
 46423   018106  0012               	return		;funcret
 46424   018108                     __end_of_ADCC_DefaultInterruptHandler:
 46425                           	callstack 0
 46426                           
 46427 ;; *************** function _UART1_tx_vect_isr *****************
 46428 ;; Defined at:
 46429 ;;		line 200 in file "mcc_generated_files/uart1.c"
 46430 ;; Parameters:    Size  Location     Type
 46431 ;;		None
 46432 ;; Auto vars:     Size  Location     Type
 46433 ;;		None
 46434 ;; Return value:  Size  Location     Type
 46435 ;;                  1    wreg      void 
 46436 ;; Registers used:
 46437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl
 46438 ;; Tracked objects:
 46439 ;;		On entry : 0/0
 46440 ;;		On exit  : 0/0
 46441 ;;		Unchanged: 0/0
 46442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46445 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46446 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46447 ;;Total ram usage:        2 bytes
 46448 ;; Hardware stack levels used: 1
 46449 ;; Hardware stack levels required when called: 1
 46450 ;; This function calls:
 46451 ;;		NULL
 46452 ;;		_UART1_Transmit_ISR
 46453 ;; This function is called by:
 46454 ;;		Interrupt level 2
 46455 ;; This function uses a non-reentrant model
 46456 ;;
 46457                           
 46458                           	psect	text129
 46459   0175D4                     __ptext129:
 46460                           	callstack 0
 46461   0175D4                     _UART1_tx_vect_isr:
 46462                           	callstack 16
 46463                           
 46464                           ;incstack = 0
 46465   0175D4  006F FFE8  F04A    	movff	pclath,??_UART1_tx_vect_isr
 46466   0175DA  006F FFEC  F04B    	movff	pclatu,??_UART1_tx_vect_isr+1
 46467   0175E0  EE15  F3EB         	lfsr	1,___inthi_sp
 46468                           
 46469                           ;mcc_generated_files/uart1.c: 202:  if (UART1_TxInterruptHandler) {
 46470   0175E4  0100               	movlb	0	; () banked
 46471   0175E6  51A7               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 46472   0175E8  11A8               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 46473   0175EA  11A9               	iorwf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 46474   0175EC  B4D8               	btfsc	status,2,c
 46475   0175EE  D00C               	goto	i2u732_49
 46476                           
 46477                           ; BSR set to: 0
 46478                           ;mcc_generated_files/uart1.c: 203:   UART1_TxInterruptHandler();
 46479   0175F0  D801               	call	i2u732_48
 46480   0175F2  D00A               	goto	i2u732_49
 46481   0175F4                     i2u732_48:
 46482   0175F4  0005               	push	
 46483   0175F6  6EFA               	movwf	pclath,c
 46484   0175F8  51A7               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 46485   0175FA  6EFD               	movwf	tosl,c
 46486   0175FC  51A8               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 46487   0175FE  6EFE               	movwf	tosh,c
 46488   017600  51A9               	movf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 46489   017602  6EFF               	movwf	tosu,c
 46490   017604  50FA               	movf	pclath,w,c
 46491   017606  0012               	return		;indir
 46492   017608                     i2u732_49:
 46493   017608  0060  F12F  FFFB   	movff	??_UART1_tx_vect_isr+1,pclatu
 46494   01760E  0060  F12B  FFFA   	movff	??_UART1_tx_vect_isr,pclath
 46495   017614  0011               	retfie		f
 46496   017616                     __end_of_UART1_tx_vect_isr:
 46497                           	callstack 0
 46498                           
 46499 ;; *************** function _UART1_Transmit_ISR *****************
 46500 ;; Defined at:
 46501 ;;		line 214 in file "mcc_generated_files/uart1.c"
 46502 ;; Parameters:    Size  Location     Type
 46503 ;;		None
 46504 ;; Auto vars:     Size  Location     Type
 46505 ;;		None
 46506 ;; Return value:  Size  Location     Type
 46507 ;;                  1  [STACK] void 
 46508 ;; Registers used:
 46509 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 46510 ;; Tracked objects:
 46511 ;;		On entry : 3F/0
 46512 ;;		On exit  : 3B/39
 46513 ;;		Unchanged: 0/0
 46514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46519 ;;Total ram usage:        0 bytes
 46520 ;; Hardware stack levels used: 1
 46521 ;; This function calls:
 46522 ;;		Nothing
 46523 ;; This function is called by:
 46524 ;;		_UART1_Initialize
 46525 ;;		_UART1_tx_vect_isr
 46526 ;; This function uses a reentrant model
 46527 ;;
 46528                           
 46529                           	psect	text130
 46530   017A0E                     __ptext130:
 46531                           	callstack 0
 46532   017A0E                     _UART1_Transmit_ISR:
 46533                           	callstack 16
 46534                           
 46535                           ;mcc_generated_files/uart1.c: 217:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 46536                           
 46537                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46538                           ;incstack = 0
 46539   017A0E  0E40               	movlw	64
 46540   017A10  6018               	cpfslt	_uart1TxBufferRemaining^0,c
 46541   017A12  D010               	goto	l609
 46542                           
 46543                           ;mcc_generated_files/uart1.c: 218:   U1TXB = uart1TxBuffer[uart1TxTail++];
 46544   017A14  0E40               	movlw	low _uart1TxBuffer
 46545   017A16  2419               	addwf	_uart1TxTail^0,w,c	;volatile
 46546   017A18  6ED9               	movwf	fsr2l,c
 46547   017A1A  6ADA               	clrf	fsr2h,c
 46548   017A1C  0E02               	movlw	high _uart1TxBuffer
 46549   017A1E  22DA               	addwfc	fsr2h,f,c
 46550   017A20  50DF               	movf	indf2,w,c
 46551   017A22  013D               	movlb	61	; () banked
 46552   017A24  6FEA               	movwf	234,b	;volatile
 46553                           
 46554                           ; BSR set to: 61
 46555   017A26  2A19               	incf	_uart1TxTail^0,f,c	;volatile
 46556                           
 46557                           ; BSR set to: 61
 46558                           ;mcc_generated_files/uart1.c: 219:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 46559   017A28  0E3F               	movlw	63
 46560   017A2A  6419               	cpfsgt	_uart1TxTail^0,c
 46561   017A2C  D001               	goto	l10021
 46562                           
 46563                           ; BSR set to: 61
 46564                           ;mcc_generated_files/uart1.c: 220:    uart1TxTail = 0;
 46565   017A2E  6A19               	clrf	_uart1TxTail^0,c	;volatile
 46566   017A30                     l10021:
 46567                           
 46568                           ; BSR set to: 61
 46569                           ;mcc_generated_files/uart1.c: 222:   uart1TxBufferRemaining++;
 46570   017A30  2A18               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 46571                           
 46572                           ;mcc_generated_files/uart1.c: 223:  } else {
 46573   017A32  0012               	return	
 46574   017A34                     l609:
 46575                           
 46576                           ;mcc_generated_files/uart1.c: 224:   PIE3bits.U1TXIE = 0;
 46577   017A34  0139               	movlb	57	; () banked
 46578   017A36  9993               	bcf	147,4,b	;volatile
 46579                           
 46580                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 46581   017A38  0012               	return		;funcret
 46582   017A3A                     __end_of_UART1_Transmit_ISR:
 46583                           	callstack 0
 46584                           
 46585 ;; *************** function _UART1_rx_vect_isr *****************
 46586 ;; Defined at:
 46587 ;;		line 207 in file "mcc_generated_files/uart1.c"
 46588 ;; Parameters:    Size  Location     Type
 46589 ;;		None
 46590 ;; Auto vars:     Size  Location     Type
 46591 ;;		None
 46592 ;; Return value:  Size  Location     Type
 46593 ;;                  1    wreg      void 
 46594 ;; Registers used:
 46595 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl
 46596 ;; Tracked objects:
 46597 ;;		On entry : 0/0
 46598 ;;		On exit  : 0/0
 46599 ;;		Unchanged: 0/0
 46600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46603 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46604 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46605 ;;Total ram usage:        2 bytes
 46606 ;; Hardware stack levels used: 1
 46607 ;; Hardware stack levels required when called: 1
 46608 ;; This function calls:
 46609 ;;		NULL
 46610 ;;		_UART1_Receive_ISR
 46611 ;; This function is called by:
 46612 ;;		Interrupt level 2
 46613 ;; This function uses a non-reentrant model
 46614 ;;
 46615                           
 46616                           	psect	text131
 46617   017618                     __ptext131:
 46618                           	callstack 0
 46619   017618                     _UART1_rx_vect_isr:
 46620                           	callstack 16
 46621                           
 46622                           ;incstack = 0
 46623   017618  006F FFE8  F04C    	movff	pclath,??_UART1_rx_vect_isr
 46624   01761E  006F FFEC  F04D    	movff	pclatu,??_UART1_rx_vect_isr+1
 46625   017624  EE15  F3EB         	lfsr	1,___inthi_sp
 46626                           
 46627                           ;mcc_generated_files/uart1.c: 209:  if (UART1_RxInterruptHandler) {
 46628   017628  0100               	movlb	0	; () banked
 46629   01762A  51AA               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 46630   01762C  11AB               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 46631   01762E  11AC               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 46632   017630  B4D8               	btfsc	status,2,c
 46633   017632  D00C               	goto	i2u734_49
 46634                           
 46635                           ; BSR set to: 0
 46636                           ;mcc_generated_files/uart1.c: 210:   UART1_RxInterruptHandler();
 46637   017634  D801               	call	i2u734_48
 46638   017636  D00A               	goto	i2u734_49
 46639   017638                     i2u734_48:
 46640   017638  0005               	push	
 46641   01763A  6EFA               	movwf	pclath,c
 46642   01763C  51AA               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 46643   01763E  6EFD               	movwf	tosl,c
 46644   017640  51AB               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 46645   017642  6EFE               	movwf	tosh,c
 46646   017644  51AC               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 46647   017646  6EFF               	movwf	tosu,c
 46648   017648  50FA               	movf	pclath,w,c
 46649   01764A  0012               	return		;indir
 46650   01764C                     i2u734_49:
 46651   01764C  0060  F137  FFFB   	movff	??_UART1_rx_vect_isr+1,pclatu
 46652   017652  0060  F133  FFFA   	movff	??_UART1_rx_vect_isr,pclath
 46653   017658  0011               	retfie		f
 46654   01765A                     __end_of_UART1_rx_vect_isr:
 46655                           	callstack 0
 46656                           
 46657 ;; *************** function _UART1_Receive_ISR *****************
 46658 ;; Defined at:
 46659 ;;		line 230 in file "mcc_generated_files/uart1.c"
 46660 ;; Parameters:    Size  Location     Type
 46661 ;;		None
 46662 ;; Auto vars:     Size  Location     Type
 46663 ;;		None
 46664 ;; Return value:  Size  Location     Type
 46665 ;;                  1  [STACK] void 
 46666 ;; Registers used:
 46667 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 46668 ;; Tracked objects:
 46669 ;;		On entry : 3F/0
 46670 ;;		On exit  : 0/0
 46671 ;;		Unchanged: 0/0
 46672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46677 ;;Total ram usage:        0 bytes
 46678 ;; Hardware stack levels used: 1
 46679 ;; This function calls:
 46680 ;;		Nothing
 46681 ;; This function is called by:
 46682 ;;		_UART1_Initialize
 46683 ;;		_UART1_rx_vect_isr
 46684 ;; This function uses a reentrant model
 46685 ;;
 46686                           
 46687                           	psect	text132
 46688   017F04                     __ptext132:
 46689                           	callstack 0
 46690   017F04                     _UART1_Receive_ISR:
 46691                           	callstack 16
 46692                           
 46693                           ;mcc_generated_files/uart1.c: 233:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 46694                           
 46695                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46696                           ;incstack = 0
 46697   017F04  0E00               	movlw	low _uart1RxBuffer
 46698   017F06  2417               	addwf	_uart1RxHead^0,w,c	;volatile
 46699   017F08  6ED9               	movwf	fsr2l,c
 46700   017F0A  6ADA               	clrf	fsr2h,c
 46701   017F0C  0E04               	movlw	high _uart1RxBuffer
 46702   017F0E  22DA               	addwfc	fsr2h,f,c
 46703   017F10  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 46704   017F16  2A17               	incf	_uart1RxHead^0,f,c	;volatile
 46705                           
 46706                           ;mcc_generated_files/uart1.c: 234:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 46707   017F18  2817               	incf	_uart1RxHead^0,w,c
 46708   017F1A  B4D8               	btfsc	status,2,c
 46709                           
 46710                           ;mcc_generated_files/uart1.c: 235:   uart1RxHead = 0;
 46711   017F1C  6A17               	clrf	_uart1RxHead^0,c	;volatile
 46712                           
 46713                           ;mcc_generated_files/uart1.c: 237:  uart1RxCount++;
 46714   017F1E  2A15               	incf	_uart1RxCount^0,f,c	;volatile
 46715                           
 46716                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 46717   017F20  0012               	return		;funcret
 46718   017F22                     __end_of_UART1_Receive_ISR:
 46719                           	callstack 0
 46720                           
 46721 ;; *************** function _UART2_tx_vect_isr *****************
 46722 ;; Defined at:
 46723 ;;		line 195 in file "mcc_generated_files/uart2.c"
 46724 ;; Parameters:    Size  Location     Type
 46725 ;;		None
 46726 ;; Auto vars:     Size  Location     Type
 46727 ;;		None
 46728 ;; Return value:  Size  Location     Type
 46729 ;;                  1    wreg      void 
 46730 ;; Registers used:
 46731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl
 46732 ;; Tracked objects:
 46733 ;;		On entry : 0/0
 46734 ;;		On exit  : 0/0
 46735 ;;		Unchanged: 0/0
 46736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46739 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46740 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46741 ;;Total ram usage:        2 bytes
 46742 ;; Hardware stack levels used: 1
 46743 ;; Hardware stack levels required when called: 1
 46744 ;; This function calls:
 46745 ;;		NULL
 46746 ;;		_UART2_Transmit_ISR
 46747 ;; This function is called by:
 46748 ;;		Interrupt level 2
 46749 ;; This function uses a non-reentrant model
 46750 ;;
 46751                           
 46752                           	psect	text133
 46753   01765C                     __ptext133:
 46754                           	callstack 0
 46755   01765C                     _UART2_tx_vect_isr:
 46756                           	callstack 16
 46757                           
 46758                           ;incstack = 0
 46759   01765C  006F FFE8  F0F7    	movff	pclath,??_UART2_tx_vect_isr
 46760   017662  006F FFEC  F0F8    	movff	pclatu,??_UART2_tx_vect_isr+1
 46761   017668  EE15  F3EB         	lfsr	1,___inthi_sp
 46762                           
 46763                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 46764   01766C  0100               	movlb	0	; () banked
 46765   01766E  51AD               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 46766   017670  11AE               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 46767   017672  11AF               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 46768   017674  B4D8               	btfsc	status,2,c
 46769   017676  D00C               	goto	i2u1012_49
 46770                           
 46771                           ; BSR set to: 0
 46772                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 46773   017678  D801               	call	i2u1012_48
 46774   01767A  D00A               	goto	i2u1012_49
 46775   01767C                     i2u1012_48:
 46776   01767C  0005               	push	
 46777   01767E  6EFA               	movwf	pclath,c
 46778   017680  51AD               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 46779   017682  6EFD               	movwf	tosl,c
 46780   017684  51AE               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 46781   017686  6EFE               	movwf	tosh,c
 46782   017688  51AF               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 46783   01768A  6EFF               	movwf	tosu,c
 46784   01768C  50FA               	movf	pclath,w,c
 46785   01768E  0012               	return		;indir
 46786   017690                     i2u1012_49:
 46787   017690  0060  F3E3  FFFB   	movff	??_UART2_tx_vect_isr+1,pclatu
 46788   017696  0060  F3DF  FFFA   	movff	??_UART2_tx_vect_isr,pclath
 46789   01769C  0011               	retfie		f
 46790   01769E                     __end_of_UART2_tx_vect_isr:
 46791                           	callstack 0
 46792                           
 46793 ;; *************** function _UART2_Transmit_ISR *****************
 46794 ;; Defined at:
 46795 ;;		line 213 in file "mcc_generated_files/uart2.c"
 46796 ;; Parameters:    Size  Location     Type
 46797 ;;		None
 46798 ;; Auto vars:     Size  Location     Type
 46799 ;;		None
 46800 ;; Return value:  Size  Location     Type
 46801 ;;                  1  [STACK] void 
 46802 ;; Registers used:
 46803 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 46804 ;; Tracked objects:
 46805 ;;		On entry : 3F/0
 46806 ;;		On exit  : 3B/39
 46807 ;;		Unchanged: 0/0
 46808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46813 ;;Total ram usage:        0 bytes
 46814 ;; Hardware stack levels used: 1
 46815 ;; This function calls:
 46816 ;;		Nothing
 46817 ;; This function is called by:
 46818 ;;		_UART2_Initialize
 46819 ;;		_UART2_tx_vect_isr
 46820 ;; This function uses a reentrant model
 46821 ;;
 46822                           
 46823                           	psect	text134
 46824   017A3A                     __ptext134:
 46825                           	callstack 0
 46826   017A3A                     _UART2_Transmit_ISR:
 46827                           	callstack 16
 46828                           
 46829                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 46830                           
 46831                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46832                           ;incstack = 0
 46833   017A3A  0E40               	movlw	64
 46834   017A3C  6012               	cpfslt	_uart2TxBufferRemaining^0,c
 46835   017A3E  D010               	goto	l729
 46836                           
 46837                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 46838   017A40  0E00               	movlw	low _uart2TxBuffer
 46839   017A42  2413               	addwf	_uart2TxTail^0,w,c	;volatile
 46840   017A44  6ED9               	movwf	fsr2l,c
 46841   017A46  6ADA               	clrf	fsr2h,c
 46842   017A48  0E02               	movlw	high _uart2TxBuffer
 46843   017A4A  22DA               	addwfc	fsr2h,f,c
 46844   017A4C  50DF               	movf	indf2,w,c
 46845   017A4E  013D               	movlb	61	; () banked
 46846   017A50  6FD2               	movwf	210,b	;volatile
 46847                           
 46848                           ; BSR set to: 61
 46849   017A52  2A13               	incf	_uart2TxTail^0,f,c	;volatile
 46850                           
 46851                           ; BSR set to: 61
 46852                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 46853   017A54  0E3F               	movlw	63
 46854   017A56  6413               	cpfsgt	_uart2TxTail^0,c
 46855   017A58  D001               	goto	l10043
 46856                           
 46857                           ; BSR set to: 61
 46858                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 46859   017A5A  6A13               	clrf	_uart2TxTail^0,c	;volatile
 46860   017A5C                     l10043:
 46861                           
 46862                           ; BSR set to: 61
 46863                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 46864   017A5C  2A12               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 46865                           
 46866                           ;mcc_generated_files/uart2.c: 224:     }
 46867   017A5E  0012               	return	
 46868   017A60                     l729:
 46869                           
 46870                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 46871   017A60  0139               	movlb	57	; () banked
 46872   017A62  9796               	bcf	150,3,b	;volatile
 46873                           
 46874                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 46875   017A64  0012               	return		;funcret
 46876   017A66                     __end_of_UART2_Transmit_ISR:
 46877                           	callstack 0
 46878                           
 46879 ;; *************** function _UART2_rx_vect_isr *****************
 46880 ;; Defined at:
 46881 ;;		line 203 in file "mcc_generated_files/uart2.c"
 46882 ;; Parameters:    Size  Location     Type
 46883 ;;		None
 46884 ;; Auto vars:     Size  Location     Type
 46885 ;;		None
 46886 ;; Return value:  Size  Location     Type
 46887 ;;                  1    wreg      void 
 46888 ;; Registers used:
 46889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl
 46890 ;; Tracked objects:
 46891 ;;		On entry : 0/0
 46892 ;;		On exit  : 0/0
 46893 ;;		Unchanged: 0/0
 46894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46897 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46898 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46899 ;;Total ram usage:        2 bytes
 46900 ;; Hardware stack levels used: 1
 46901 ;; Hardware stack levels required when called: 1
 46902 ;; This function calls:
 46903 ;;		NULL
 46904 ;;		_UART2_Receive_ISR
 46905 ;; This function is called by:
 46906 ;;		Interrupt level 2
 46907 ;; This function uses a non-reentrant model
 46908 ;;
 46909                           
 46910                           	psect	text135
 46911   0176A0                     __ptext135:
 46912                           	callstack 0
 46913   0176A0                     _UART2_rx_vect_isr:
 46914                           	callstack 16
 46915                           
 46916                           ;incstack = 0
 46917   0176A0  006F FFE8  F0F9    	movff	pclath,??_UART2_rx_vect_isr
 46918   0176A6  006F FFEC  F0FA    	movff	pclatu,??_UART2_rx_vect_isr+1
 46919   0176AC  EE15  F3EB         	lfsr	1,___inthi_sp
 46920                           
 46921                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 46922   0176B0  0100               	movlb	0	; () banked
 46923   0176B2  51B0               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 46924   0176B4  11B1               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 46925   0176B6  11B2               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 46926   0176B8  B4D8               	btfsc	status,2,c
 46927   0176BA  D00C               	goto	i2u1014_49
 46928                           
 46929                           ; BSR set to: 0
 46930                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 46931   0176BC  D801               	call	i2u1014_48
 46932   0176BE  D00A               	goto	i2u1014_49
 46933   0176C0                     i2u1014_48:
 46934   0176C0  0005               	push	
 46935   0176C2  6EFA               	movwf	pclath,c
 46936   0176C4  51B0               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 46937   0176C6  6EFD               	movwf	tosl,c
 46938   0176C8  51B1               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 46939   0176CA  6EFE               	movwf	tosh,c
 46940   0176CC  51B2               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 46941   0176CE  6EFF               	movwf	tosu,c
 46942   0176D0  50FA               	movf	pclath,w,c
 46943   0176D2  0012               	return		;indir
 46944   0176D4                     i2u1014_49:
 46945   0176D4  0060  F3EB  FFFB   	movff	??_UART2_rx_vect_isr+1,pclatu
 46946   0176DA  0060  F3E7  FFFA   	movff	??_UART2_rx_vect_isr,pclath
 46947   0176E0  0011               	retfie		f
 46948   0176E2                     __end_of_UART2_rx_vect_isr:
 46949                           	callstack 0
 46950                           
 46951 ;; *************** function _UART2_Receive_ISR *****************
 46952 ;; Defined at:
 46953 ;;		line 233 in file "mcc_generated_files/uart2.c"
 46954 ;; Parameters:    Size  Location     Type
 46955 ;;		None
 46956 ;; Auto vars:     Size  Location     Type
 46957 ;;		None
 46958 ;; Return value:  Size  Location     Type
 46959 ;;                  1  [STACK] void 
 46960 ;; Registers used:
 46961 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 46962 ;; Tracked objects:
 46963 ;;		On entry : 3F/0
 46964 ;;		On exit  : 0/0
 46965 ;;		Unchanged: 0/0
 46966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46971 ;;Total ram usage:        0 bytes
 46972 ;; Hardware stack levels used: 1
 46973 ;; This function calls:
 46974 ;;		Nothing
 46975 ;; This function is called by:
 46976 ;;		_UART2_Initialize
 46977 ;;		_UART2_rx_vect_isr
 46978 ;; This function uses a reentrant model
 46979 ;;
 46980                           
 46981                           	psect	text136
 46982   017F22                     __ptext136:
 46983                           	callstack 0
 46984   017F22                     _UART2_Receive_ISR:
 46985                           	callstack 16
 46986                           
 46987                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 46988                           
 46989                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46990                           ;incstack = 0
 46991   017F22  0E00               	movlw	low _uart2RxBuffer
 46992   017F24  2411               	addwf	_uart2RxHead^0,w,c	;volatile
 46993   017F26  6ED9               	movwf	fsr2l,c
 46994   017F28  6ADA               	clrf	fsr2h,c
 46995   017F2A  0E05               	movlw	high _uart2RxBuffer
 46996   017F2C  22DA               	addwfc	fsr2h,f,c
 46997   017F2E  006F F743 FFDF     	movff	15824,indf2	;volatile
 46998   017F34  2A11               	incf	_uart2RxHead^0,f,c	;volatile
 46999                           
 47000                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 47001   017F36  2811               	incf	_uart2RxHead^0,w,c
 47002   017F38  B4D8               	btfsc	status,2,c
 47003                           
 47004                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 47005   017F3A  6A11               	clrf	_uart2RxHead^0,c	;volatile
 47006                           
 47007                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 47008   017F3C  2A0F               	incf	_uart2RxCount^0,f,c	;volatile
 47009                           
 47010                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 47011   017F3E  0012               	return		;funcret
 47012   017F40                     __end_of_UART2_Receive_ISR:
 47013                           	callstack 0
 47014                           
 47015 ;; *************** function _TMR6_ISR *****************
 47016 ;; Defined at:
 47017 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 47018 ;; Parameters:    Size  Location     Type
 47019 ;;		None
 47020 ;; Auto vars:     Size  Location     Type
 47021 ;;		None
 47022 ;; Return value:  Size  Location     Type
 47023 ;;                  1    wreg      void 
 47024 ;; Registers used:
 47025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, tosl, prodl, prodh
 47026 ;; Tracked objects:
 47027 ;;		On entry : 0/0
 47028 ;;		On exit  : 0/0
 47029 ;;		Unchanged: 0/0
 47030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47033 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47034 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47035 ;;Total ram usage:        3 bytes
 47036 ;; Hardware stack levels used: 1
 47037 ;; Hardware stack levels required when called: 2
 47038 ;; This function calls:
 47039 ;;		_TMR6_CallBack
 47040 ;; This function is called by:
 47041 ;;		Interrupt level 2
 47042 ;; This function uses a non-reentrant model
 47043 ;;
 47044                           
 47045                           	psect	text137
 47046   0179E0                     __ptext137:
 47047                           	callstack 0
 47048   0179E0                     _TMR6_ISR:
 47049                           	callstack 15
 47050                           
 47051                           ;incstack = 0
 47052   0179E0  006F FFE8  F1E6    	movff	pclath,??_TMR6_ISR
 47053   0179E6  006F FFEC  F1E7    	movff	pclatu,??_TMR6_ISR+1
 47054   0179EC  C022  F1E8         	movff	btemp,??_TMR6_ISR+2
 47055   0179F0  EE15  F3EB         	lfsr	1,___inthi_sp
 47056                           
 47057                           ;mcc_generated_files/tmr6.c: 175:  PIR9bits.TMR6IF = 0;
 47058   0179F4  0139               	movlb	57	; () banked
 47059   0179F6  91A9               	bcf	169,0,b	;volatile
 47060                           
 47061                           ; BSR set to: 57
 47062                           ;mcc_generated_files/tmr6.c: 179:  TMR6_CallBack();
 47063   0179F8  EC1F  F0BF         	call	_TMR6_CallBack	;wreg free
 47064   0179FC  C1E8  F022         	movff	??_TMR6_ISR+2,btemp
 47065   017A00  0060  F79F  FFFB   	movff	??_TMR6_ISR+1,pclatu
 47066   017A06  0060  F79B  FFFA   	movff	??_TMR6_ISR,pclath
 47067   017A0C  0011               	retfie		f
 47068   017A0E                     __end_of_TMR6_ISR:
 47069                           	callstack 0
 47070                           
 47071 ;; *************** function _TMR6_CallBack *****************
 47072 ;; Defined at:
 47073 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 47074 ;; Parameters:    Size  Location     Type
 47075 ;;		None
 47076 ;; Auto vars:     Size  Location     Type
 47077 ;;		None
 47078 ;; Return value:  Size  Location     Type
 47079 ;;                  1  [STACK] void 
 47080 ;; Registers used:
 47081 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, tosl, prodl, prodh
 47082 ;; Tracked objects:
 47083 ;;		On entry : 3F/39
 47084 ;;		On exit  : 0/0
 47085 ;;		Unchanged: 0/0
 47086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47091 ;;Total ram usage:        0 bytes
 47092 ;; Hardware stack levels used: 1
 47093 ;; Hardware stack levels required when called: 1
 47094 ;; This function calls:
 47095 ;;		NULL
 47096 ;;		_TMR6_DefaultInterruptHandler
 47097 ;; This function is called by:
 47098 ;;		_TMR6_ISR
 47099 ;; This function uses a reentrant model
 47100 ;;
 47101                           
 47102                           	psect	text138
 47103   017E3E                     __ptext138:
 47104                           	callstack 0
 47105   017E3E                     _TMR6_CallBack:
 47106                           	callstack 15
 47107                           
 47108                           ;mcc_generated_files/tmr6.c: 186:  if (TMR6_InterruptHandler) {
 47109                           
 47110                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47111                           ;incstack = 0
 47112   017E3E  0100               	movlb	0	; () banked
 47113   017E40  51A1               	movf	_TMR6_InterruptHandler& (0+255),w,b
 47114   017E42  11A2               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 47115   017E44  11A3               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 47116   017E46  B4D8               	btfsc	status,2,c
 47117   017E48  0012               	return	
 47118                           
 47119                           ; BSR set to: 0
 47120                           ;mcc_generated_files/tmr6.c: 187:   TMR6_InterruptHandler();
 47121   017E4A  D801               	call	u637_48
 47122   017E4C  0012               	return	
 47123   017E4E                     u637_48:
 47124   017E4E  0005               	push	
 47125   017E50  6EFA               	movwf	pclath,c
 47126   017E52  51A1               	movf	_TMR6_InterruptHandler& (0+255),w,b
 47127   017E54  6EFD               	movwf	tosl,c
 47128   017E56  51A2               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 47129   017E58  6EFE               	movwf	tosh,c
 47130   017E5A  51A3               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 47131   017E5C  6EFF               	movwf	tosu,c
 47132   017E5E  50FA               	movf	pclath,w,c
 47133   017E60  0012               	return		;indir
 47134   017E62                     __end_of_TMR6_CallBack:
 47135                           	callstack 0
 47136                           
 47137 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 47138 ;; Defined at:
 47139 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 47140 ;; Parameters:    Size  Location     Type
 47141 ;;		None
 47142 ;; Auto vars:     Size  Location     Type
 47143 ;;  i               1  [STACK] unsigned char 
 47144 ;; Return value:  Size  Location     Type
 47145 ;;                  1  [STACK] void 
 47146 ;; Registers used:
 47147 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 47148 ;; Tracked objects:
 47149 ;;		On entry : 3F/0
 47150 ;;		On exit  : 0/0
 47151 ;;		Unchanged: 0/0
 47152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47157 ;;Total ram usage:        0 bytes
 47158 ;; Hardware stack levels used: 1
 47159 ;; This function calls:
 47160 ;;		Nothing
 47161 ;; This function is called by:
 47162 ;;		_TMR6_Initialize
 47163 ;;		_TMR6_CallBack
 47164 ;; This function uses a reentrant model
 47165 ;;
 47166                           
 47167                           	psect	text139
 47168   017506                     __ptext139:
 47169                           	callstack 0
 47170   017506                     _TMR6_DefaultInterruptHandler:
 47171                           	callstack 0
 47172                           
 47173                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47174   017506  52E6               	movf	postinc1,f,c
 47175                           
 47176                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 47177                           ;stkvar	_i @ sp[(-1)+0]
 47178                           
 47179                           ;incstack = 0
 47180   017508  0EFF               	movlw	-1
 47181   01750A  6AE3               	clrf	plusw1,c
 47182   01750C                     l9279:
 47183                           
 47184                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 47185                           ;stkvar	_i @ sp[(-1)+0]
 47186   01750C  0EFF               	movlw	-1
 47187   01750E  50E3               	movf	plusw1,w,c
 47188   017510  0D02               	mullw	2
 47189   017512  50F3               	movf	243,w,c
 47190   017514  0F60               	addlw	low _tickCount
 47191   017516  6ED9               	movwf	fsr2l,c
 47192   017518  6ADA               	clrf	fsr2h,c
 47193   01751A  50DE               	movf	postinc2,w,c
 47194   01751C  10DE               	iorwf	postinc2,w,c
 47195   01751E  B4D8               	btfsc	status,2,c
 47196   017520  D00A               	goto	l9283
 47197                           
 47198                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 47199                           ;stkvar	_i @ sp[(-1)+0]
 47200   017522  0EFF               	movlw	-1
 47201   017524  50E3               	movf	plusw1,w,c
 47202   017526  0D02               	mullw	2
 47203   017528  50F3               	movf	243,w,c
 47204   01752A  0F60               	addlw	low _tickCount
 47205   01752C  6ED9               	movwf	fsr2l,c
 47206   01752E  6ADA               	clrf	fsr2h,c
 47207   017530  06DE               	decf	postinc2,f,c
 47208   017532  0E00               	movlw	0
 47209   017534  5ADD               	subwfb	postdec2,f,c
 47210   017536                     l9283:
 47211                           
 47212                           ;mcc_generated_files/tmr6.c: 207:  }
 47213                           ;stkvar	_i @ sp[(-1)+0]
 47214   017536  0EFF               	movlw	-1
 47215   017538  2AE3               	incf	plusw1,f,c
 47216                           
 47217                           ;stkvar	_i @ sp[(-1)+0]
 47218   01753A  0EFF               	movlw	-1
 47219   01753C  006F FF8C  F022    	movff	plusw1,btemp
 47220   017542  0E0C               	movlw	12
 47221   017544  6422               	cpfsgt	btemp^0,c
 47222   017546  D7E2               	goto	l9279
 47223                           
 47224                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 47225   017548  52E5               	movf	postdec1,f,c
 47226   01754A  0012               	return		;funcret
 47227   01754C                     __end_of_TMR6_DefaultInterruptHandler:
 47228                           	callstack 0
 47229                           
 47230 ;; *************** function _DMA1_DMASCNT_ISR *****************
 47231 ;; Defined at:
 47232 ;;		line 126 in file "mcc_generated_files/dma1.c"
 47233 ;; Parameters:    Size  Location     Type
 47234 ;;		None
 47235 ;; Auto vars:     Size  Location     Type
 47236 ;;		None
 47237 ;; Return value:  Size  Location     Type
 47238 ;;                  1    wreg      void 
 47239 ;; Registers used:
 47240 ;;		None
 47241 ;; Tracked objects:
 47242 ;;		On entry : 0/0
 47243 ;;		On exit  : 3F/0
 47244 ;;		Unchanged: 0/0
 47245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47250 ;;Total ram usage:        0 bytes
 47251 ;; Hardware stack levels used: 1
 47252 ;; This function calls:
 47253 ;;		Nothing
 47254 ;; This function is called by:
 47255 ;;		Interrupt level 2
 47256 ;; This function uses a non-reentrant model
 47257 ;;
 47258                           
 47259                           	psect	text140
 47260   018064                     __ptext140:
 47261                           	callstack 0
 47262   018064                     _DMA1_DMASCNT_ISR:
 47263                           	callstack 17
 47264                           
 47265                           ;incstack = 0
 47266   018064  EE15  F3EB         	lfsr	1,___inthi_sp
 47267                           
 47268                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 47269   018068  0139               	movlb	57	; () banked
 47270   01806A  91A2               	bcf	162,0,b	;volatile
 47271                           
 47272                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 47273   01806C  0100               	movlb	0	; () banked
 47274   01806E  9787               	bcf	_spi_link& (0+255),3,b	;volatile
 47275                           
 47276                           ; BSR set to: 0
 47277                           
 47278                           ;mcc_generated_files/dma1.c: 131:  do { LATEbits.LATE2 = 0; } while(0);
 47279   018070  94BE               	bcf	190,2,c	;volatile
 47280                           
 47281                           ; BSR set to: 0
 47282   018072  0011               	retfie		f
 47283   018074                     __end_of_DMA1_DMASCNT_ISR:
 47284                           	callstack 0
 47285                           
 47286 ;; *************** function _DMA1_DMADCNT_ISR *****************
 47287 ;; Defined at:
 47288 ;;		line 134 in file "mcc_generated_files/dma1.c"
 47289 ;; Parameters:    Size  Location     Type
 47290 ;;		None
 47291 ;; Auto vars:     Size  Location     Type
 47292 ;;		None
 47293 ;; Return value:  Size  Location     Type
 47294 ;;                  1    wreg      void 
 47295 ;; Registers used:
 47296 ;;		None
 47297 ;; Tracked objects:
 47298 ;;		On entry : 0/0
 47299 ;;		On exit  : 3F/39
 47300 ;;		Unchanged: 0/0
 47301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47306 ;;Total ram usage:        0 bytes
 47307 ;; Hardware stack levels used: 1
 47308 ;; This function calls:
 47309 ;;		Nothing
 47310 ;; This function is called by:
 47311 ;;		Interrupt level 2
 47312 ;; This function uses a non-reentrant model
 47313 ;;
 47314                           
 47315                           	psect	text141
 47316   01809C                     __ptext141:
 47317                           	callstack 0
 47318   01809C                     _DMA1_DMADCNT_ISR:
 47319                           	callstack 17
 47320                           
 47321                           ; BSR set to: 0
 47322                           ;incstack = 0
 47323   01809C  EE15  F3EB         	lfsr	1,___inthi_sp
 47324                           
 47325                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 47326   0180A0  0139               	movlb	57	; () banked
 47327   0180A2  93A2               	bcf	162,1,b	;volatile
 47328                           
 47329                           ; BSR set to: 57
 47330   0180A4  0011               	retfie		f
 47331   0180A6                     __end_of_DMA1_DMADCNT_ISR:
 47332                           	callstack 0
 47333                           
 47334 ;; *************** function _DMA1_DMAA_ISR *****************
 47335 ;; Defined at:
 47336 ;;		line 144 in file "mcc_generated_files/dma1.c"
 47337 ;; Parameters:    Size  Location     Type
 47338 ;;		None
 47339 ;; Auto vars:     Size  Location     Type
 47340 ;;		None
 47341 ;; Return value:  Size  Location     Type
 47342 ;;                  1    wreg      void 
 47343 ;; Registers used:
 47344 ;;		None
 47345 ;; Tracked objects:
 47346 ;;		On entry : 0/0
 47347 ;;		On exit  : 3F/39
 47348 ;;		Unchanged: 0/0
 47349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47354 ;;Total ram usage:        0 bytes
 47355 ;; Hardware stack levels used: 1
 47356 ;; This function calls:
 47357 ;;		Nothing
 47358 ;; This function is called by:
 47359 ;;		Interrupt level 2
 47360 ;; This function uses a non-reentrant model
 47361 ;;
 47362                           
 47363                           	psect	text142
 47364   0180A8                     __ptext142:
 47365                           	callstack 0
 47366   0180A8                     _DMA1_DMAA_ISR:
 47367                           	callstack 17
 47368                           
 47369                           ; BSR set to: 57
 47370                           ;incstack = 0
 47371   0180A8  EE15  F3EB         	lfsr	1,___inthi_sp
 47372                           
 47373                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 47374   0180AC  0139               	movlb	57	; () banked
 47375   0180AE  97A2               	bcf	162,3,b	;volatile
 47376                           
 47377                           ; BSR set to: 57
 47378   0180B0  0011               	retfie		f
 47379   0180B2                     __end_of_DMA1_DMAA_ISR:
 47380                           	callstack 0
 47381                           
 47382 ;; *************** function _DMA1_DMAOR_ISR *****************
 47383 ;; Defined at:
 47384 ;;		line 155 in file "mcc_generated_files/dma1.c"
 47385 ;; Parameters:    Size  Location     Type
 47386 ;;		None
 47387 ;; Auto vars:     Size  Location     Type
 47388 ;;		None
 47389 ;; Return value:  Size  Location     Type
 47390 ;;                  1    wreg      void 
 47391 ;; Registers used:
 47392 ;;		None
 47393 ;; Tracked objects:
 47394 ;;		On entry : 0/0
 47395 ;;		On exit  : 3F/39
 47396 ;;		Unchanged: 0/0
 47397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47402 ;;Total ram usage:        0 bytes
 47403 ;; Hardware stack levels used: 1
 47404 ;; This function calls:
 47405 ;;		Nothing
 47406 ;; This function is called by:
 47407 ;;		Interrupt level 2
 47408 ;; This function uses a non-reentrant model
 47409 ;;
 47410                           
 47411                           	psect	text143
 47412   0180B4                     __ptext143:
 47413                           	callstack 0
 47414   0180B4                     _DMA1_DMAOR_ISR:
 47415                           	callstack 17
 47416                           
 47417                           ; BSR set to: 57
 47418                           ;incstack = 0
 47419   0180B4  EE15  F3EB         	lfsr	1,___inthi_sp
 47420                           
 47421                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 47422   0180B8  0139               	movlb	57	; () banked
 47423   0180BA  95A2               	bcf	162,2,b	;volatile
 47424                           
 47425                           ; BSR set to: 57
 47426   0180BC  0011               	retfie		f
 47427   0180BE                     __end_of_DMA1_DMAOR_ISR:
 47428                           	callstack 0
 47429                           
 47430 ;; *************** function _TMR5_ISR *****************
 47431 ;; Defined at:
 47432 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 47433 ;; Parameters:    Size  Location     Type
 47434 ;;		None
 47435 ;; Auto vars:     Size  Location     Type
 47436 ;;		None
 47437 ;; Return value:  Size  Location     Type
 47438 ;;                  1    wreg      void 
 47439 ;; Registers used:
 47440 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp+11, tosl
 47441 ;; Tracked objects:
 47442 ;;		On entry : 0/0
 47443 ;;		On exit  : 0/0
 47444 ;;		Unchanged: 0/0
 47445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47448 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47449 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47450 ;;Total ram usage:        5 bytes
 47451 ;; Hardware stack levels used: 1
 47452 ;; Hardware stack levels required when called: 2
 47453 ;; This function calls:
 47454 ;;		_TMR5_CallBack
 47455 ;;		_TMR5_WriteTimer
 47456 ;; This function is called by:
 47457 ;;		Interrupt level 2
 47458 ;; This function uses a non-reentrant model
 47459 ;;
 47460                           
 47461                           	psect	text144
 47462   01709C                     __ptext144:
 47463                           	callstack 0
 47464   01709C                     _TMR5_ISR:
 47465                           	callstack 15
 47466                           
 47467                           ; BSR set to: 57
 47468                           ;incstack = 0
 47469   01709C  006F FFE8  F1EB    	movff	pclath,??_TMR5_ISR+2
 47470   0170A2  006F FFEC  F1EC    	movff	pclatu,??_TMR5_ISR+3
 47471   0170A8  C02D  F1ED         	movff	btemp+11,??_TMR5_ISR+4
 47472   0170AC  EE15  F3EB         	lfsr	1,___inthi_sp
 47473                           
 47474                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 47475   0170B0  0139               	movlb	57	; () banked
 47476   0170B2  9DA8               	bcf	168,6,b	;volatile
 47477                           
 47478                           ; BSR set to: 57
 47479                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 47480   0170B4  0060  F017  FFE6   	movff	_timer5ReloadVal,postinc1
 47481   0170BA  0060  F01B  FFE6   	movff	_timer5ReloadVal+1,postinc1
 47482   0170C0  EC91  F0BB         	call	_TMR5_WriteTimer	;wreg free
 47483                           
 47484                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 47485   0170C4  EE23  F19B         	lfsr	2,_V+385	;volatile
 47486   0170C8  50DF               	movf	indf2,w,c
 47487   0170CA  0101               	movlb	1	; () banked
 47488   0170CC  6FE9               	movwf	??_TMR5_ISR& (0+255),b
 47489   0170CE  6BEA               	clrf	(??_TMR5_ISR+1)& (0+255),b
 47490   0170D0  0E05               	movlw	5
 47491   0170D2  27E9               	addwf	??_TMR5_ISR& (0+255),f,b
 47492   0170D4  0E00               	movlw	0
 47493   0170D6  23EA               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 47494   0170D8  4A03               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 47495   0170DA  2A04               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 47496   0170DC  51E9               	movf	??_TMR5_ISR& (0+255),w,b
 47497   0170DE  5C03               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 47498   0170E0  51EA               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 47499   0170E2  5804               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 47500   0170E4  A0D8               	btfss	status,0,c
 47501   0170E6  D004               	goto	i2l1157
 47502                           
 47503                           ; BSR set to: 1
 47504                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 47505   0170E8  EC31  F0BF         	call	_TMR5_CallBack	;wreg free
 47506                           
 47507                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 47508   0170EC  6A03               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 47509   0170EE  6A04               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 47510   0170F0                     i2l1157:
 47511   0170F0  C1ED  F02D         	movff	??_TMR5_ISR+4,btemp+11
 47512   0170F4  0060  F7B3  FFFB   	movff	??_TMR5_ISR+3,pclatu
 47513   0170FA  0060  F7AF  FFFA   	movff	??_TMR5_ISR+2,pclath
 47514   017100  0011               	retfie		f
 47515   017102                     __end_of_TMR5_ISR:
 47516                           	callstack 0
 47517                           
 47518 ;; *************** function _TMR5_WriteTimer *****************
 47519 ;; Defined at:
 47520 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 47521 ;; Parameters:    Size  Location     Type
 47522 ;;  timerVal        2  [STACK] unsigned short 
 47523 ;; Auto vars:     Size  Location     Type
 47524 ;;		None
 47525 ;; Return value:  Size  Location     Type
 47526 ;;                  1  [STACK] void 
 47527 ;; Registers used:
 47528 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 47529 ;; Tracked objects:
 47530 ;;		On entry : 3F/39
 47531 ;;		On exit  : 0/0
 47532 ;;		Unchanged: 0/0
 47533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47538 ;;Total ram usage:        0 bytes
 47539 ;; Hardware stack levels used: 1
 47540 ;; This function calls:
 47541 ;;		Nothing
 47542 ;; This function is called by:
 47543 ;;		_TMR5_ISR
 47544 ;; This function uses a reentrant model
 47545 ;;
 47546                           
 47547                           	psect	text145
 47548   017722                     __ptext145:
 47549                           	callstack 0
 47550   017722                     _TMR5_WriteTimer:
 47551                           	callstack 16
 47552                           
 47553                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 47554                           
 47555                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47556                           ;incstack = 0
 47557   017722  A49A               	btfss	154,2,c	;volatile
 47558   017724  D00F               	goto	l10069
 47559                           
 47560                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 47561   017726  909A               	bcf	154,0,c	;volatile
 47562                           
 47563                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 47564                           ;stkvar	_timerVal @ sp[(0)+-2]
 47565   017728  0EFF               	movlw	255
 47566   01772A  24E1               	addwf	fsr1l,w,c
 47567   01772C  6ED9               	movwf	fsr2l,c
 47568   01772E  0EFF               	movlw	255
 47569   017730  20E2               	addwfc	fsr1h,w,c
 47570   017732  6EDA               	movwf	fsr2h,c
 47571   017734  50DF               	movf	indf2,w,c
 47572   017736  6E99               	movwf	153,c	;volatile
 47573                           
 47574                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 47575                           ;stkvar	_timerVal @ sp[(0)+-2]
 47576   017738  0EFE               	movlw	-2
 47577   01773A  006F FF8F FF98     	movff	plusw1,16280	;volatile
 47578                           
 47579                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 47580   017740  809A               	bsf	154,0,c	;volatile
 47581                           
 47582                           ;mcc_generated_files/tmr5.c: 142:  } else {
 47583   017742  D00C               	goto	l1140
 47584   017744                     l10069:
 47585                           
 47586                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 47587                           ;stkvar	_timerVal @ sp[(0)+-2]
 47588   017744  0EFF               	movlw	255
 47589   017746  24E1               	addwf	fsr1l,w,c
 47590   017748  6ED9               	movwf	fsr2l,c
 47591   01774A  0EFF               	movlw	255
 47592   01774C  20E2               	addwfc	fsr1h,w,c
 47593   01774E  6EDA               	movwf	fsr2h,c
 47594   017750  50DF               	movf	indf2,w,c
 47595   017752  6E99               	movwf	153,c	;volatile
 47596                           
 47597                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 47598                           ;stkvar	_timerVal @ sp[(0)+-2]
 47599   017754  0EFE               	movlw	-2
 47600   017756  006F FF8F FF98     	movff	plusw1,16280	;volatile
 47601   01775C                     l1140:
 47602                           
 47603                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 47604   01775C  52E5               	movf	postdec1,f,c
 47605   01775E  52E5               	movf	postdec1,f,c
 47606   017760  0012               	return		;funcret
 47607   017762                     __end_of_TMR5_WriteTimer:
 47608                           	callstack 0
 47609                           
 47610 ;; *************** function _TMR5_CallBack *****************
 47611 ;; Defined at:
 47612 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 47613 ;; Parameters:    Size  Location     Type
 47614 ;;		None
 47615 ;; Auto vars:     Size  Location     Type
 47616 ;;		None
 47617 ;; Return value:  Size  Location     Type
 47618 ;;                  1  [STACK] void 
 47619 ;; Registers used:
 47620 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, btemp+11, tosl
 47621 ;; Tracked objects:
 47622 ;;		On entry : 3F/1
 47623 ;;		On exit  : 0/0
 47624 ;;		Unchanged: 0/0
 47625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47630 ;;Total ram usage:        0 bytes
 47631 ;; Hardware stack levels used: 1
 47632 ;; Hardware stack levels required when called: 1
 47633 ;; This function calls:
 47634 ;;		NULL
 47635 ;;		_TMR5_DefaultInterruptHandler
 47636 ;; This function is called by:
 47637 ;;		_TMR5_ISR
 47638 ;; This function uses a reentrant model
 47639 ;;
 47640                           
 47641                           	psect	text146
 47642   017E62                     __ptext146:
 47643                           	callstack 0
 47644   017E62                     _TMR5_CallBack:
 47645                           	callstack 15
 47646                           
 47647                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 47648                           
 47649                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47650                           ;incstack = 0
 47651   017E62  0100               	movlb	0	; () banked
 47652   017E64  519E               	movf	_TMR5_InterruptHandler& (0+255),w,b
 47653   017E66  119F               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 47654   017E68  11A0               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 47655   017E6A  B4D8               	btfsc	status,2,c
 47656   017E6C  0012               	return	
 47657                           
 47658                           ; BSR set to: 0
 47659                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 47660   017E6E  D801               	call	u640_48
 47661   017E70  0012               	return	
 47662   017E72                     u640_48:
 47663   017E72  0005               	push	
 47664   017E74  6EFA               	movwf	pclath,c
 47665   017E76  519E               	movf	_TMR5_InterruptHandler& (0+255),w,b
 47666   017E78  6EFD               	movwf	tosl,c
 47667   017E7A  519F               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 47668   017E7C  6EFE               	movwf	tosh,c
 47669   017E7E  51A0               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 47670   017E80  6EFF               	movwf	tosu,c
 47671   017E82  50FA               	movf	pclath,w,c
 47672   017E84  0012               	return		;indir
 47673   017E86                     __end_of_TMR5_CallBack:
 47674                           	callstack 0
 47675                           
 47676 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 47677 ;; Defined at:
 47678 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 47679 ;; Parameters:    Size  Location     Type
 47680 ;;		None
 47681 ;; Auto vars:     Size  Location     Type
 47682 ;;		None
 47683 ;; Return value:  Size  Location     Type
 47684 ;;                  1  [STACK] void 
 47685 ;; Registers used:
 47686 ;;		wreg, status,2, status,0, btemp+11
 47687 ;; Tracked objects:
 47688 ;;		On entry : 3F/0
 47689 ;;		On exit  : 0/0
 47690 ;;		Unchanged: 0/0
 47691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47696 ;;Total ram usage:        0 bytes
 47697 ;; Hardware stack levels used: 1
 47698 ;; This function calls:
 47699 ;;		Nothing
 47700 ;; This function is called by:
 47701 ;;		_TMR5_Initialize
 47702 ;;		_TMR5_CallBack
 47703 ;; This function uses a reentrant model
 47704 ;;
 47705                           
 47706                           	psect	text147
 47707   017FC8                     __ptext147:
 47708                           	callstack 0
 47709   017FC8                     _TMR5_DefaultInterruptHandler:
 47710                           	callstack 15
 47711                           
 47712                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 47713                           
 47714                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47715                           ;incstack = 0
 47716   017FC8  A0BE               	btfss	190,0,c	;volatile
 47717   017FCA  D002               	goto	u586_40
 47718   017FCC  0E01               	movlw	1
 47719   017FCE  D001               	goto	u586_46
 47720   017FD0                     u586_40:
 47721   017FD0  0E00               	movlw	0
 47722   017FD2                     u586_46:
 47723   017FD2  0AFF               	xorlw	255
 47724   017FD4  6E2D               	movwf	(btemp+11)^0,c
 47725   017FD6  50BE               	movf	190,w,c	;volatile
 47726   017FD8  182D               	xorwf	(btemp+11)^0,w,c
 47727   017FDA  0BFE               	andlw	-2
 47728   017FDC  182D               	xorwf	(btemp+11)^0,w,c
 47729   017FDE  6EBE               	movwf	190,c	;volatile
 47730                           
 47731                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 47732   017FE0  0012               	return		;funcret
 47733   017FE2                     __end_of_TMR5_DefaultInterruptHandler:
 47734                           	callstack 0
 47735                           
 47736                           ;
 47737                           ; H/W Interrupt Vector Table @ 0x8
 47738                           ;
 47739                           
 47740                           	psect	ivt0x8
 47741   000008                     __pivt0x8:
 47742                           	callstack 0
 47743   000008                     ivt0x8_base:
 47744                           	callstack 0
 47745                           
 47746                           ; Vector 0 : SWINT
 47747   000008  603D               	dw	_Default_ISR shr (0+2)
 47748                           
 47749                           ; Vector 1 : HLVD
 47750   00000A  603D               	dw	_Default_ISR shr (0+2)
 47751                           
 47752                           ; Vector 2 : OSF
 47753   00000C  603D               	dw	_Default_ISR shr (0+2)
 47754                           
 47755                           ; Vector 3 : CSW
 47756   00000E  603D               	dw	_Default_ISR shr (0+2)
 47757                           
 47758                           ; Vector 4 : NVM
 47759   000010  603D               	dw	_Default_ISR shr (0+2)
 47760                           
 47761                           ; Vector 5 : SCAN
 47762   000012  603D               	dw	_Default_ISR shr (0+2)
 47763                           
 47764                           ; Vector 6 : CRC
 47765   000014  603D               	dw	_Default_ISR shr (0+2)
 47766                           
 47767                           ; Vector 7 : IOC
 47768   000016  603D               	dw	_Default_ISR shr (0+2)
 47769                           
 47770                           ; Vector 8 : INT0
 47771   000018  5F4E               	dw	_INT0_ISR shr (0+2)
 47772                           
 47773                           ; Vector 9 : ZCD
 47774   00001A  603D               	dw	_Default_ISR shr (0+2)
 47775                           
 47776                           ; Vector 10 : AD
 47777   00001C  5D30               	dw	_ADCC_ISR shr (0+2)
 47778                           
 47779                           ; Vector 11 : ADT
 47780   00001E  603D               	dw	_Default_ISR shr (0+2)
 47781                           
 47782                           ; Vector 12 : CMP1
 47783   000020  603D               	dw	_Default_ISR shr (0+2)
 47784                           
 47785                           ; Vector 13 : SMT1
 47786   000022  603D               	dw	_Default_ISR shr (0+2)
 47787                           
 47788                           ; Vector 14 : SMT1PRA
 47789   000024  603D               	dw	_Default_ISR shr (0+2)
 47790                           
 47791                           ; Vector 15 : SMT1PRW
 47792   000026  603D               	dw	_Default_ISR shr (0+2)
 47793                           
 47794                           ; Vector 16 : DMA1SCNT
 47795   000028  6019               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 47796                           
 47797                           ; Vector 17 : DMA1DCNT
 47798   00002A  6027               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 47799                           
 47800                           ; Vector 18 : DMA1OR
 47801   00002C  602D               	dw	_DMA1_DMAOR_ISR shr (0+2)
 47802                           
 47803                           ; Vector 19 : DMA1A
 47804   00002E  602A               	dw	_DMA1_DMAA_ISR shr (0+2)
 47805                           
 47806                           ; Vector 20 : SPI1RX
 47807   000030  603D               	dw	_Default_ISR shr (0+2)
 47808                           
 47809                           ; Vector 21 : SPI1TX
 47810   000032  603D               	dw	_Default_ISR shr (0+2)
 47811                           
 47812                           ; Vector 22 : SPI1
 47813   000034  603D               	dw	_Default_ISR shr (0+2)
 47814                           
 47815                           ; Vector 23 : I2C1RX
 47816   000036  603D               	dw	_Default_ISR shr (0+2)
 47817                           
 47818                           ; Vector 24 : I2C1TX
 47819   000038  603D               	dw	_Default_ISR shr (0+2)
 47820                           
 47821                           ; Vector 25 : I2C1
 47822   00003A  603D               	dw	_Default_ISR shr (0+2)
 47823                           
 47824                           ; Vector 26 : I2C1E
 47825   00003C  603D               	dw	_Default_ISR shr (0+2)
 47826                           
 47827                           ; Vector 27 : U1RX
 47828   00003E  5D86               	dw	_UART1_rx_vect_isr shr (0+2)
 47829                           
 47830                           ; Vector 28 : U1TX
 47831   000040  5D75               	dw	_UART1_tx_vect_isr shr (0+2)
 47832                           
 47833                           ; Vector 29 : U1E
 47834   000042  603D               	dw	_Default_ISR shr (0+2)
 47835                           
 47836                           ; Vector 30 : U1
 47837   000044  603D               	dw	_Default_ISR shr (0+2)
 47838                           
 47839                           ; Vector 31 : TMR0
 47840   000046  603D               	dw	_Default_ISR shr (0+2)
 47841                           
 47842                           ; Vector 32 : TMR1
 47843   000048  603D               	dw	_Default_ISR shr (0+2)
 47844                           
 47845                           ; Vector 33 : TMR1G
 47846   00004A  603D               	dw	_Default_ISR shr (0+2)
 47847                           
 47848                           ; Vector 34 : TMR2
 47849   00004C  603D               	dw	_Default_ISR shr (0+2)
 47850                           
 47851                           ; Vector 35 : CCP1
 47852   00004E  603D               	dw	_Default_ISR shr (0+2)
 47853                           
 47854                           ; Vector 36 : Undefined
 47855   000050  002B               	dw	ivt0x8_undefint shr (0+2)
 47856                           
 47857                           ; Vector 37 : NCO1
 47858   000052  603D               	dw	_Default_ISR shr (0+2)
 47859                           
 47860                           ; Vector 38 : CWG1
 47861   000054  603D               	dw	_Default_ISR shr (0+2)
 47862                           
 47863                           ; Vector 39 : CLC1
 47864   000056  603D               	dw	_Default_ISR shr (0+2)
 47865                           
 47866                           ; Vector 40 : INT1
 47867   000058  5F58               	dw	_INT1_ISR shr (0+2)
 47868                           
 47869                           ; Vector 41 : CMP2
 47870   00005A  603D               	dw	_Default_ISR shr (0+2)
 47871                           
 47872                           ; Vector 42 : DMA2SCNT
 47873   00005C  603D               	dw	_Default_ISR shr (0+2)
 47874                           
 47875                           ; Vector 43 : DMA2DCNT
 47876   00005E  603D               	dw	_Default_ISR shr (0+2)
 47877                           
 47878                           ; Vector 44 : DMA2OR
 47879   000060  603D               	dw	_Default_ISR shr (0+2)
 47880                           
 47881                           ; Vector 45 : DMA2A
 47882   000062  603D               	dw	_Default_ISR shr (0+2)
 47883                           
 47884                           ; Vector 46 : I2C2RX
 47885   000064  603D               	dw	_Default_ISR shr (0+2)
 47886                           
 47887                           ; Vector 47 : I2C2TX
 47888   000066  603D               	dw	_Default_ISR shr (0+2)
 47889                           
 47890                           ; Vector 48 : I2C2
 47891   000068  603D               	dw	_Default_ISR shr (0+2)
 47892                           
 47893                           ; Vector 49 : I2C2E
 47894   00006A  603D               	dw	_Default_ISR shr (0+2)
 47895                           
 47896                           ; Vector 50 : U2RX
 47897   00006C  5DA8               	dw	_UART2_rx_vect_isr shr (0+2)
 47898                           
 47899                           ; Vector 51 : U2TX
 47900   00006E  5D97               	dw	_UART2_tx_vect_isr shr (0+2)
 47901                           
 47902                           ; Vector 52 : U2E
 47903   000070  603D               	dw	_Default_ISR shr (0+2)
 47904                           
 47905                           ; Vector 53 : U2
 47906   000072  603D               	dw	_Default_ISR shr (0+2)
 47907                           
 47908                           ; Vector 54 : TMR3
 47909   000074  603D               	dw	_Default_ISR shr (0+2)
 47910                           
 47911                           ; Vector 55 : TMR3G
 47912   000076  603D               	dw	_Default_ISR shr (0+2)
 47913                           
 47914                           ; Vector 56 : TMR4
 47915   000078  603D               	dw	_Default_ISR shr (0+2)
 47916                           
 47917                           ; Vector 57 : CCP2
 47918   00007A  603D               	dw	_Default_ISR shr (0+2)
 47919                           
 47920                           ; Vector 58 : Undefined
 47921   00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 47922                           
 47923                           ; Vector 59 : CWG2
 47924   00007E  603D               	dw	_Default_ISR shr (0+2)
 47925                           
 47926                           ; Vector 60 : CLC2
 47927   000080  603D               	dw	_Default_ISR shr (0+2)
 47928                           
 47929                           ; Vector 61 : INT2
 47930   000082  5F62               	dw	_INT2_ISR shr (0+2)
 47931                           
 47932                           ; Vector 62 : Undefined
 47933   000084  002B               	dw	ivt0x8_undefint shr (0+2)
 47934                           
 47935                           ; Vector 63 : Undefined
 47936   000086  002B               	dw	ivt0x8_undefint shr (0+2)
 47937                           
 47938                           ; Vector 64 : Undefined
 47939   000088  002B               	dw	ivt0x8_undefint shr (0+2)
 47940                           
 47941                           ; Vector 65 : Undefined
 47942   00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 47943                           
 47944                           ; Vector 66 : Undefined
 47945   00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 47946                           
 47947                           ; Vector 67 : Undefined
 47948   00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 47949                           
 47950                           ; Vector 68 : Undefined
 47951   000090  002B               	dw	ivt0x8_undefint shr (0+2)
 47952                           
 47953                           ; Vector 69 : Undefined
 47954   000092  002B               	dw	ivt0x8_undefint shr (0+2)
 47955                           
 47956                           ; Vector 70 : TMR5
 47957   000094  5C27               	dw	_TMR5_ISR shr (0+2)
 47958                           
 47959                           ; Vector 71 : TMR5G
 47960   000096  603D               	dw	_Default_ISR shr (0+2)
 47961                           
 47962                           ; Vector 72 : TMR6
 47963   000098  5E78               	dw	_TMR6_ISR shr (0+2)
 47964                           
 47965                           ; Vector 73 : CCP3
 47966   00009A  603D               	dw	_Default_ISR shr (0+2)
 47967                           
 47968                           ; Vector 74 : CWG3
 47969   00009C  603D               	dw	_Default_ISR shr (0+2)
 47970                           
 47971                           ; Vector 75 : CLC3
 47972   00009E  603D               	dw	_Default_ISR shr (0+2)
 47973                           
 47974                           ; Vector 76 : Undefined
 47975   0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 47976                           
 47977                           ; Vector 77 : Undefined
 47978   0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 47979                           
 47980                           ; Vector 78 : Undefined
 47981   0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 47982                           
 47983                           ; Vector 79 : Undefined
 47984   0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 47985                           
 47986                           ; Vector 80 : CCP4
 47987   0000A8  603D               	dw	_Default_ISR shr (0+2)
 47988                           
 47989                           ; Vector 81 : CLC4
 47990   0000AA  603D               	dw	_Default_ISR shr (0+2)
 47991   0000AC                     ivt0x8_undefint:
 47992                           	callstack 0
 47993   0000AC  00FF               	reset	
 47994                           
 47995                           	psect	rparam
 47996   000001                     ___rparam_used  equ	1
 47997   000000                     ___param_bank   equ	0
 47998   000000                     __Lparam        equ	__Lrparam
 47999   000000                     __Hparam        equ	__Hrparam
 48000                           
 48001                           	psect	temp
 48002   000022                     btemp:
 48003                           	callstack 0
 48004   000022                     	ds	32
 48005   000022                     wtemp0          set	btemp
 48006   000024                     wtemp1          set	btemp+2
 48007   000026                     wtemp2          set	btemp+4
 48008   000028                     wtemp3          set	btemp+6
 48009   00002A                     wtemp4          set	btemp+8
 48010   00002C                     wtemp5          set	btemp+10
 48011   000023                     wtemp8          set	btemp+1
 48012   000022                     ttemp0          set	btemp
 48013   000025                     ttemp1          set	btemp+3
 48014   000028                     ttemp2          set	btemp+6
 48015   00002B                     ttemp3          set	btemp+9
 48016   000023                     ttemp5          set	btemp+1
 48017   000026                     ttemp6          set	btemp+4
 48018   00002A                     ttemp7          set	btemp+8
 48019   000022                     ltemp0          set	btemp
 48020   000026                     ltemp1          set	btemp+4
 48021   00002A                     ltemp2          set	btemp+8
 48022   000022                     lltemp0         set	btemp
 48023   00002A                     lltemp1         set	btemp+8
 48024   000032                     lltemp2         set	btemp+16
 48025   00003A                     lltemp3         set	btemp+24
 48026                           
 48027                           	psect	idloc
 48028                           
 48029                           ;Config register IDLOC0 @ 0x200000
 48030                           ;	unspecified, using default values
 48031   200000                     	org	2097152
 48032   200000  FFFF               	dw	65535
 48033                           
 48034                           ;Config register IDLOC1 @ 0x200002
 48035                           ;	unspecified, using default values
 48036   200002                     	org	2097154
 48037   200002  FFFF               	dw	65535
 48038                           
 48039                           ;Config register IDLOC2 @ 0x200004
 48040                           ;	unspecified, using default values
 48041   200004                     	org	2097156
 48042   200004  FFFF               	dw	65535
 48043                           
 48044                           ;Config register IDLOC3 @ 0x200006
 48045                           ;	unspecified, using default values
 48046   200006                     	org	2097158
 48047   200006  FFFF               	dw	65535
 48048                           
 48049                           ;Config register IDLOC4 @ 0x200008
 48050                           ;	unspecified, using default values
 48051   200008                     	org	2097160
 48052   200008  FFFF               	dw	65535
 48053                           
 48054                           ;Config register IDLOC5 @ 0x20000A
 48055                           ;	unspecified, using default values
 48056   20000A                     	org	2097162
 48057   20000A  FFFF               	dw	65535
 48058                           
 48059                           ;Config register IDLOC6 @ 0x20000C
 48060                           ;	unspecified, using default values
 48061   20000C                     	org	2097164
 48062   20000C  FFFF               	dw	65535
 48063                           
 48064                           ;Config register IDLOC7 @ 0x20000E
 48065                           ;	unspecified, using default values
 48066   20000E                     	org	2097166
 48067   20000E  FFFF               	dw	65535
 48068                           
 48069                           	psect	config
 48070                           
 48071                           ;Config register CONFIG1L @ 0x300000
 48072                           ;	External Oscillator Selection
 48073                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz; PFM set to high power
 48074                           ;	Reset Oscillator Selection
 48075                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 48076   300000                     	org	3145728
 48077   300000  AF                 	db	175
 48078                           
 48079                           ;Config register CONFIG1H @ 0x300001
 48080                           ;	Clock out Enable bit
 48081                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 48082                           ;	PRLOCKED One-Way Set Enable bit
 48083                           ;	PR1WAY = OFF, PRLOCK bit can be set and cleared repeatedly
 48084                           ;	Clock Switch Enable bit
 48085                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 48086                           ;	Fail-Safe Clock Monitor Enable bit
 48087                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 48088   300001                     	org	3145729
 48089   300001  FD                 	db	253
 48090                           
 48091                           ;Config register CONFIG2L @ 0x300002
 48092                           ;	MCLR Enable bit
 48093                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 48094                           ;	Power-up timer selection bits
 48095                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 48096                           ;	Multi-vector enable bit
 48097                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 48098                           ;	IVTLOCK bit One-way set enable bit
 48099                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 48100                           ;	Low Power BOR Enable bit
 48101                           ;	LPBOREN = OFF, ULPBOR disabled
 48102                           ;	Brown-out Reset Enable bits
 48103                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 48104   300002                     	org	3145730
 48105   300002  FF                 	db	255
 48106                           
 48107                           ;Config register CONFIG2H @ 0x300003
 48108                           ;	Brown-out Reset Voltage Selection bits
 48109                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 48110                           ;	ZCD Disable bit
 48111                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 48112                           ;	PPSLOCK bit One-Way Set Enable bit
 48113                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 48114                           ;	Stack Full/Underflow Reset Enable bit
 48115                           ;	STVREN = ON, Stack full/underflow will cause Reset
 48116                           ;	Debugger Enable bit
 48117                           ;	DEBUG = OFF, Background debugger disabled
 48118                           ;	Extended Instruction Set Enable bit
 48119                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 48120   300003                     	org	3145731
 48121   300003  FF                 	db	255
 48122                           
 48123                           ;Config register CONFIG3L @ 0x300004
 48124                           ;	WDT Period selection bits
 48125                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 48126                           ;	WDT operating mode
 48127                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 48128   300004                     	org	3145732
 48129   300004  9F                 	db	159
 48130                           
 48131                           ;Config register CONFIG3H @ 0x300005
 48132                           ;	WDT Window Select bits
 48133                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 48134                           ;	WDT input clock selector
 48135                           ;	WDTCCS = SC, Software Control
 48136   300005                     	org	3145733
 48137   300005  FF                 	db	255
 48138                           
 48139                           ;Config register CONFIG4L @ 0x300006
 48140                           ;	Boot Block Size selection bits
 48141                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 48142                           ;	Boot Block enable bit
 48143                           ;	BBEN = OFF, Boot block disabled
 48144                           ;	Storage Area Flash enable bit
 48145                           ;	SAFEN = OFF, SAF disabled
 48146                           ;	Application Block write protection bit
 48147                           ;	WRTAPP = OFF, Application Block not write protected
 48148   300006                     	org	3145734
 48149   300006  FF                 	db	255
 48150                           
 48151                           ;Config register CONFIG4H @ 0x300007
 48152                           ;	Boot Block Write Protection bit
 48153                           ;	WRTB = OFF, Boot Block not write-protected
 48154                           ;	Configuration Register Write Protection bit
 48155                           ;	WRTC = OFF, Configuration registers not write-protected
 48156                           ;	Data EEPROM Write Protection bit
 48157                           ;	WRTD = OFF, Data EEPROM not write-protected
 48158                           ;	SAF Write protection bit
 48159                           ;	WRTSAF = OFF, SAF not Write Protected
 48160                           ;	Low Voltage Programming Enable bit
 48161                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 48162   300007                     	org	3145735
 48163   300007  FF                 	db	255
 48164                           
 48165                           ;Config register CONFIG5L @ 0x300008
 48166                           ;	PFM and Data EEPROM Code Protection bit
 48167                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 48168   300008                     	org	3145736
 48169   300008  FF                 	db	255
 48170                           
 48171                           ;Config register CONFIG5H @ 0x300009
 48172                           ;	unspecified, using default values
 48173   300009                     	org	3145737
 48174   300009  FF                 	db	255
 48175                           tosu	equ	0x3FFF
 48176                           tosh	equ	0x3FFE
 48177                           tosl	equ	0x3FFD
 48178                           stkptr	equ	0x3FFC
 48179                           pclatu	equ	0x3FFB
 48180                           pclath	equ	0x3FFA
 48181                           pcl	equ	0x3FF9
 48182                           tblptru	equ	0x3FF8
 48183                           tblptrh	equ	0x3FF7
 48184                           tblptrl	equ	0x3FF6
 48185                           tablat	equ	0x3FF5
 48186                           prodh	equ	0x3FF4
 48187                           prodl	equ	0x3FF3
 48188                           indf0	equ	0x3FEF
 48189                           postinc0	equ	0x3FEE
 48190                           postdec0	equ	0x3FED
 48191                           preinc0	equ	0x3FEC
 48192                           plusw0	equ	0x3FEB
 48193                           fsr0h	equ	0x3FEA
 48194                           fsr0l	equ	0x3FE9
 48195                           wreg	equ	0x3FE8
 48196                           indf1	equ	0x3FE7
 48197                           postinc1	equ	0x3FE6
 48198                           postdec1	equ	0x3FE5
 48199                           preinc1	equ	0x3FE4
 48200                           plusw1	equ	0x3FE3
 48201                           fsr1h	equ	0x3FE2
 48202                           fsr1l	equ	0x3FE1
 48203                           bsr	equ	0x3FE0
 48204                           indf2	equ	0x3FDF
 48205                           postinc2	equ	0x3FDE
 48206                           postdec2	equ	0x3FDD
 48207                           preinc2	equ	0x3FDC
 48208                           plusw2	equ	0x3FDB
 48209                           fsr2h	equ	0x3FDA
 48210                           fsr2l	equ	0x3FD9
 48211                           status	equ	0x3FD8

Data Sizes:
    Strings     841
    Constant    391
    Data        1520
    BSS         2248
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     12      50
    BANK0           160      4     155
    BANK1           256      8     238
    BANK2           256      0     254
    BANK3           256      0      67
    BANK4           256      0     255
    BANK5           256      0     255
    BANK6           256      0     256
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    a	PTR const unsigned char  size(2) Largest target is 514
		 -> D$lcd(BIGRAM[512]), D@mconfig$F5156(BIGRAM[514]), dbuf(BANK1[32]), V(BIGRAM[387]), 
		 -> V$terminal(BIGRAM[160]), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), NULL(), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    ap	PTR PTR void [1] size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    block	PTR struct response_type size(1) Largest target is 9
		 -> secs_II_message@block(COMRAM[7]), 

    buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_37(CODE[12]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_38(CODE[9]), 

    byte_block	PTR unsigned char  size(2) Largest target is 312
		 -> D$message(BIGRAM[156]), H10(BANK1[91]), H12(BANK2[30]), H13(BANK1[64]), 
		 -> H14(BANK0[17]), H153(BIGRAM[312]), H17(BANK1[20]), H26(BANK2[29]), 
		 -> H33(BANK0[36]), S$message(BIGRAM[36]), 

    byte_block	PTR unsigned char  size(2) Largest target is 312
		 -> D$message(BIGRAM[156]), H10(BANK1[91]), H12(BANK2[30]), H13(BANK1[64]), 
		 -> H14(BANK0[17]), H153(BIGRAM[312]), H17(BANK1[20]), H26(BANK2[29]), 
		 -> H33(BANK0[36]), S$message(BIGRAM[36]), 

    cfmt	PTR unsigned char  size(2) Largest target is 89
		 -> msg0(CODE[89]), msg1(CODE[88]), msg2(CODE[86]), msg99(CODE[56]), 
		 -> STR_1(CODE[17]), STR_10(CODE[21]), STR_11(CODE[21]), STR_12(CODE[21]), 
		 -> STR_13(CODE[24]), STR_14(CODE[24]), STR_15(CODE[18]), STR_16(CODE[21]), 
		 -> STR_17(CODE[21]), STR_18(CODE[20]), STR_19(CODE[21]), STR_2(CODE[15]), 
		 -> STR_20(CODE[26]), STR_21(CODE[19]), STR_22(CODE[4]), STR_23(CODE[21]), 
		 -> STR_24(CODE[26]), STR_25(CODE[29]), STR_26(CODE[3]), STR_27(CODE[3]), 
		 -> STR_28(CODE[3]), STR_33(CODE[20]), STR_34(CODE[26]), STR_35(CODE[26]), 
		 -> STR_36(CODE[21]), STR_39(CODE[19]), STR_4(CODE[17]), STR_40(CODE[19]), 
		 -> STR_41(CODE[10]), STR_42(CODE[10]), STR_43(CODE[15]), STR_44(CODE[15]), 
		 -> STR_45(CODE[15]), STR_46(CODE[24]), STR_47(CODE[22]), STR_48(CODE[20]), 
		 -> STR_49(CODE[18]), STR_5(CODE[17]), STR_50(CODE[20]), STR_51(CODE[18]), 
		 -> STR_52(CODE[20]), STR_53(CODE[18]), STR_54(CODE[20]), STR_55(CODE[19]), 
		 -> STR_56(CODE[19]), STR_57(CODE[24]), STR_58(CODE[21]), STR_59(CODE[22]), 
		 -> STR_6(CODE[15]), STR_60(CODE[21]), STR_61(CODE[26]), STR_62(CODE[25]), 
		 -> STR_63(CODE[19]), STR_64(CODE[19]), STR_65(CODE[19]), STR_66(CODE[19]), 
		 -> STR_67(CODE[3]), STR_68(CODE[3]), STR_8(CODE[17]), STR_9(CODE[16]), 

    cp	PTR unsigned char  size(2) Largest target is 89
		 -> msg0(CODE[89]), msg1(CODE[88]), msg2(CODE[86]), msg99(CODE[56]), 
		 -> STR_1(CODE[17]), STR_10(CODE[21]), STR_11(CODE[21]), STR_12(CODE[21]), 
		 -> STR_13(CODE[24]), STR_14(CODE[24]), STR_15(CODE[18]), STR_16(CODE[21]), 
		 -> STR_17(CODE[21]), STR_18(CODE[20]), STR_19(CODE[21]), STR_2(CODE[15]), 
		 -> STR_20(CODE[26]), STR_21(CODE[19]), STR_22(CODE[4]), STR_23(CODE[21]), 
		 -> STR_24(CODE[26]), STR_25(CODE[29]), STR_26(CODE[3]), STR_27(CODE[3]), 
		 -> STR_28(CODE[3]), STR_33(CODE[20]), STR_34(CODE[26]), STR_35(CODE[26]), 
		 -> STR_36(CODE[21]), STR_39(CODE[19]), STR_4(CODE[17]), STR_40(CODE[19]), 
		 -> STR_41(CODE[10]), STR_42(CODE[10]), STR_43(CODE[15]), STR_44(CODE[15]), 
		 -> STR_45(CODE[15]), STR_46(CODE[24]), STR_47(CODE[22]), STR_48(CODE[20]), 
		 -> STR_49(CODE[18]), STR_5(CODE[17]), STR_50(CODE[20]), STR_51(CODE[18]), 
		 -> STR_52(CODE[20]), STR_53(CODE[18]), STR_54(CODE[20]), STR_55(CODE[19]), 
		 -> STR_56(CODE[19]), STR_57(CODE[24]), STR_58(CODE[21]), STR_59(CODE[22]), 
		 -> STR_6(CODE[15]), STR_60(CODE[21]), STR_61(CODE[26]), STR_62(CODE[25]), 
		 -> STR_63(CODE[19]), STR_64(CODE[19]), STR_65(CODE[19]), STR_66(CODE[19]), 
		 -> STR_67(CODE[3]), STR_68(CODE[3]), STR_8(CODE[17]), STR_9(CODE[16]), 

    cp	PTR unsigned char  size(2) Largest target is 514
		 -> D$lcd(BIGRAM[512]), D@mconfig$F5156(BIGRAM[514]), ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 
		 -> STR_29(CODE[6]), STR_3(CODE[6]), STR_30(CODE[6]), STR_31(CODE[6]), 
		 -> STR_32(CODE[6]), STR_37(CODE[12]), STR_38(CODE[9]), STR_69(CODE[7]), 
		 -> STR_7(CODE[6]), T(BANK6[256]), V(BIGRAM[387]), 

    D$block$header	PTR unsigned char  size(2) Largest target is 156
		 -> D$message(BIGRAM[156]), H10(BANK1[91]), H12(BANK2[30]), H13(BANK1[64]), 
		 -> H14(BANK0[17]), H17(BANK1[20]), H26(BANK2[29]), S$message(BIGRAM[36]), 

    D$block$reply	PTR unsigned char  size(2) Largest target is 312
		 -> H10(BANK1[91]), H12(BANK2[30]), H153(BIGRAM[312]), H33(BANK0[36]), 

    D$message$data$header	PTR unsigned char  size(2) Largest target is 336
		 -> D(BIGRAM[332]), D$message(BIGRAM[156]), D$message$checksum(BIGRAM[2]), H10(BANK1[91]), 
		 -> H12(BANK2[30]), H13(BANK1[64]), H14(BANK0[17]), H17(BANK1[20]), 
		 -> H26(BANK2[29]), S$message(BIGRAM[36]), 

    D$message$data$reply	PTR unsigned char  size(2) Largest target is 312
		 -> H10(BANK1[91]), H12(BANK2[30]), H153(BIGRAM[312]), H33(BANK0[36]), 

    data	PTR const unsigned char  size(2) Largest target is 387
		 -> V(BIGRAM[387]), V$terminal(BIGRAM[160]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), ring_buf2(BANK3[67]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 514
		 -> D$lcd(BIGRAM[512]), D@mconfig$F5156(BIGRAM[514]), V(BIGRAM[387]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    F17672$header	PTR unsigned char  size(2) Largest target is 156
		 -> D$message(BIGRAM[156]), H10(BANK1[91]), H12(BANK2[30]), H13(BANK1[64]), 
		 -> H14(BANK0[17]), H17(BANK1[20]), H26(BANK2[29]), S$message(BIGRAM[36]), 

    F17672$reply	PTR unsigned char  size(2) Largest target is 312
		 -> H10(BANK1[91]), H12(BANK2[30]), H153(BIGRAM[312]), H33(BANK0[36]), 

    F17702$header	PTR unsigned char  size(2) Largest target is 156
		 -> D$message(BIGRAM[156]), H10(BANK1[91]), H12(BANK2[30]), H13(BANK1[64]), 
		 -> H14(BANK0[17]), H17(BANK1[20]), H26(BANK2[29]), S$message(BIGRAM[36]), 

    F17702$reply	PTR unsigned char  size(2) Largest target is 312
		 -> H10(BANK1[91]), H12(BANK2[30]), H153(BIGRAM[312]), H33(BANK0[36]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_26(CODE[3]), STR_27(CODE[3]), STR_28(CODE[3]), 

    fmt	PTR const unsigned char  size(2) Largest target is 89
		 -> msg0(CODE[89]), msg1(CODE[88]), msg2(CODE[86]), msg99(CODE[56]), 
		 -> STR_1(CODE[17]), STR_10(CODE[21]), STR_11(CODE[21]), STR_12(CODE[21]), 
		 -> STR_13(CODE[24]), STR_14(CODE[24]), STR_15(CODE[18]), STR_16(CODE[21]), 
		 -> STR_17(CODE[21]), STR_18(CODE[20]), STR_19(CODE[21]), STR_2(CODE[15]), 
		 -> STR_20(CODE[26]), STR_21(CODE[19]), STR_22(CODE[4]), STR_23(CODE[21]), 
		 -> STR_24(CODE[26]), STR_25(CODE[29]), STR_33(CODE[20]), STR_34(CODE[26]), 
		 -> STR_35(CODE[26]), STR_36(CODE[21]), STR_39(CODE[19]), STR_4(CODE[17]), 
		 -> STR_40(CODE[19]), STR_41(CODE[10]), STR_42(CODE[10]), STR_43(CODE[15]), 
		 -> STR_44(CODE[15]), STR_45(CODE[15]), STR_46(CODE[24]), STR_47(CODE[22]), 
		 -> STR_48(CODE[20]), STR_49(CODE[18]), STR_5(CODE[17]), STR_50(CODE[20]), 
		 -> STR_51(CODE[18]), STR_52(CODE[20]), STR_53(CODE[18]), STR_54(CODE[20]), 
		 -> STR_55(CODE[19]), STR_56(CODE[19]), STR_57(CODE[24]), STR_58(CODE[21]), 
		 -> STR_59(CODE[22]), STR_6(CODE[15]), STR_60(CODE[21]), STR_61(CODE[26]), 
		 -> STR_62(CODE[25]), STR_63(CODE[19]), STR_64(CODE[19]), STR_65(CODE[19]), 
		 -> STR_66(CODE[19]), STR_67(CODE[3]), STR_68(CODE[3]), STR_8(CODE[17]), 
		 -> STR_9(CODE[16]), 

    fmt	PTR const unsigned char  size(2) Largest target is 89
		 -> msg0(CODE[89]), msg1(CODE[88]), msg2(CODE[86]), msg99(CODE[56]), 
		 -> STR_1(CODE[17]), STR_10(CODE[21]), STR_11(CODE[21]), STR_12(CODE[21]), 
		 -> STR_13(CODE[24]), STR_14(CODE[24]), STR_15(CODE[18]), STR_16(CODE[21]), 
		 -> STR_17(CODE[21]), STR_18(CODE[20]), STR_19(CODE[21]), STR_2(CODE[15]), 
		 -> STR_20(CODE[26]), STR_21(CODE[19]), STR_22(CODE[4]), STR_23(CODE[21]), 
		 -> STR_24(CODE[26]), STR_25(CODE[29]), STR_26(CODE[3]), STR_27(CODE[3]), 
		 -> STR_28(CODE[3]), STR_33(CODE[20]), STR_34(CODE[26]), STR_35(CODE[26]), 
		 -> STR_36(CODE[21]), STR_39(CODE[19]), STR_4(CODE[17]), STR_40(CODE[19]), 
		 -> STR_41(CODE[10]), STR_42(CODE[10]), STR_43(CODE[15]), STR_44(CODE[15]), 
		 -> STR_45(CODE[15]), STR_46(CODE[24]), STR_47(CODE[22]), STR_48(CODE[20]), 
		 -> STR_49(CODE[18]), STR_5(CODE[17]), STR_50(CODE[20]), STR_51(CODE[18]), 
		 -> STR_52(CODE[20]), STR_53(CODE[18]), STR_54(CODE[20]), STR_55(CODE[19]), 
		 -> STR_56(CODE[19]), STR_57(CODE[24]), STR_58(CODE[21]), STR_59(CODE[22]), 
		 -> STR_6(CODE[15]), STR_60(CODE[21]), STR_61(CODE[26]), STR_62(CODE[25]), 
		 -> STR_63(CODE[19]), STR_64(CODE[19]), STR_65(CODE[19]), STR_66(CODE[19]), 
		 -> STR_67(CODE[3]), STR_68(CODE[3]), STR_8(CODE[17]), STR_9(CODE[16]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> f(STACK[11]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> f(STACK[11]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> f(STACK[11]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> f(STACK[11]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> f(STACK[11]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> f(STACK[11]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> f(STACK[11]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> f(STACK[11]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> f(STACK[11]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> f(STACK[11]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> f(STACK[11]), NULL(NULL[0]), 

    fp$.$buffer	PTR unsigned char  size(2) Largest target is 514
		 -> D@mconfig$F5156(BIGRAM[514]), V(BIGRAM[387]), 

    fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), NULL(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    k	PTR unsigned char  size(2) Largest target is 312
		 -> D$message(BIGRAM[156]), H10(BANK1[91]), H12(BANK2[30]), H13(BANK1[64]), 
		 -> H14(BANK0[17]), H153(BIGRAM[312]), H17(BANK1[20]), H26(BANK2[29]), 
		 -> H33(BANK0[36]), S$message(BIGRAM[36]), 

    m_link	PTR enum E17017 size(2) Largest target is 387
		 -> V(BIGRAM[387]), 

    m_protocol@b_block	PTR unsigned char  size(2) Largest target is 257
		 -> H254(BIGRAM[257]), 

    msg_data	PTR unsigned char  size(2) Largest target is 257
		 -> H254(BIGRAM[257]), 

    msg_data	PTR unsigned char  size(2) Largest target is 257
		 -> H254(BIGRAM[257]), 

    p	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), ring_buf2(BANK3[67]), 

    r_link	PTR enum E17017 size(2) Largest target is 387
		 -> V(BIGRAM[387]), 

    r_protocol@b_block	PTR unsigned char  size(2) Largest target is 257
		 -> H254(BIGRAM[257]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 514
		 -> D$lcd(BIGRAM[512]), D@mconfig$F5156(BIGRAM[514]), 

    s	PTR const unsigned char  size(2) Largest target is 514
		 -> D$lcd(BIGRAM[512]), D@mconfig$F5156(BIGRAM[514]), dbuf(BANK1[32]), V(BIGRAM[387]), 
		 -> V$terminal(BIGRAM[160]), 

    s	PTR unsigned char  size(2) Largest target is 514
		 -> D$lcd(BIGRAM[512]), D@mconfig$F5156(BIGRAM[514]), V(BIGRAM[387]), 

    s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    s	PTR unsigned char  size(2) Largest target is 514
		 -> D$lcd(BIGRAM[512]), D@mconfig$F5156(BIGRAM[514]), ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 
		 -> STR_29(CODE[6]), STR_3(CODE[6]), STR_30(CODE[6]), STR_31(CODE[6]), 
		 -> STR_32(CODE[6]), STR_37(CODE[12]), STR_38(CODE[9]), STR_7(CODE[6]), 
		 -> T(BANK6[256]), V(BIGRAM[387]), 

    S$block$header	PTR unsigned char  size(2) Largest target is 156
		 -> D$message(BIGRAM[156]), H10(BANK1[91]), H12(BANK2[30]), H13(BANK1[64]), 
		 -> H14(BANK0[17]), H17(BANK1[20]), H26(BANK2[29]), S$message(BIGRAM[36]), 

    S$block$reply	PTR unsigned char  size(2) Largest target is 312
		 -> H10(BANK1[91]), H12(BANK2[30]), H153(BIGRAM[312]), H33(BANK0[36]), 

    S$message$data$header	PTR unsigned char  size(2) Largest target is 480
		 -> D$message(BIGRAM[156]), H10(BANK1[91]), H12(BANK2[30]), H13(BANK1[64]), 
		 -> H14(BANK0[17]), H17(BANK1[20]), H26(BANK2[29]), S(BIGRAM[460]), 
		 -> S$message(BIGRAM[36]), S$message$checksum(BIGRAM[2]), 

    S$message$data$reply	PTR unsigned char  size(2) Largest target is 312
		 -> H10(BANK1[91]), H12(BANK2[30]), H153(BIGRAM[312]), H33(BANK0[36]), 

    S1867spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    S1867spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    S3224response_type$header	PTR unsigned char  size(2) Largest target is 156
		 -> D$message(BIGRAM[156]), H10(BANK1[91]), H12(BANK2[30]), H13(BANK1[64]), 
		 -> H14(BANK0[17]), H17(BANK1[20]), H26(BANK2[29]), S$message(BIGRAM[36]), 

    S3224response_type$reply	PTR unsigned char  size(2) Largest target is 312
		 -> H10(BANK1[91]), H12(BANK2[30]), H153(BIGRAM[312]), H33(BANK0[36]), 

    S5669$buffer	PTR unsigned char  size(2) Largest target is 514
		 -> D@mconfig$F5156(BIGRAM[514]), V(BIGRAM[387]), 

    S5669$source	PTR const unsigned char  size(2) Largest target is 0

    ?_secs_II_message$header	PTR unsigned char  size(2) Largest target is 156
		 -> D$message(BIGRAM[156]), H10(BANK1[91]), H12(BANK2[30]), H13(BANK1[64]), 
		 -> H14(BANK0[17]), H17(BANK1[20]), H26(BANK2[29]), S$message(BIGRAM[36]), 

    ?_secs_II_message$reply	PTR unsigned char  size(2) Largest target is 312
		 -> H10(BANK1[91]), H12(BANK2[30]), H153(BIGRAM[312]), H33(BANK0[36]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 514
		 -> D$lcd(BIGRAM[512]), D@mconfig$F5156(BIGRAM[514]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), ring_buf2(BANK3[67]), 

    spi_link$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    spi_link$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 514
		 -> D$lcd(BIGRAM[512]), D@mconfig$F5156(BIGRAM[514]), V(BIGRAM[387]), 

    strPtr	PTR unsigned char  size(2) Largest target is 514
		 -> D$lcd(BIGRAM[512]), D@mconfig$F5156(BIGRAM[514]), V(BIGRAM[387]), 

    strPtr	PTR unsigned char  size(2) Largest target is 514
		 -> D$lcd(BIGRAM[512]), D@mconfig$F5156(BIGRAM[514]), V(BIGRAM[387]), 

    t_link	PTR enum E17017 size(2) Largest target is 387
		 -> V(BIGRAM[387]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), ring_buf2(BANK3[67]), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), NULL(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), NULL(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), NULL(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), NULL(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), NULL(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), NULL(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  360257
          _MyeaDogM_WriteStringAtPos
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                        _UART2_Write
                             _WaitMs
                         _check_help
                _eaDogM_WriteCommand
                      _get_vterm_ptr
                         _hb_message
                       _init_display
                         _m_protocol
                      _mode_lamp_dim
                         _r_protocol
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                         _t_protocol
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _t_protocol                                           3     1      2   50232
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                   _UART1_put_buffer
                    _secs_II_message
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_send                                           10     5      5     913
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART1_put_buffer
                        _UART2_Write
                  _UART2_is_tx_ready
                   _UART2_put_buffer
                     _block_checksum
 ---------------------------------------------------------------------------------
 (3) _block_checksum                                       8     4      4     158
 ---------------------------------------------------------------------------------
 (3) _UART2_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART2_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART2_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _UART1_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _secs_II_message                                     13     6      7   48661
                   _DATAEE_WriteByte
                         _StartTimer
                          _TimerDone
                       _display_info
                _format_display_text
                       _gem_messages
                          _parse_sid
                        _s10f1_opcmd
                        _s6f11_opcmd
                  _sequence_messages
                   _set_display_info
              _set_temp_display_help
                    _terminal_format
                     _vterm_sequence
 ---------------------------------------------------------------------------------
 (3) _vterm_sequence                                       0     0      0   15770
                      _get_vterm_ptr
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _s6f11_opcmd                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _s10f1_opcmd                                          0     0      0   15726
                           _parse_ll
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _parse_ll                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _parse_sid                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _gem_messages                                         2     0      2     132
                         _StartTimer
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _r_protocol                                           3     1      2   34014
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                             _WaitMs
                       _run_checksum
            _secs_II_monitor_message
                     _secs_gem_state
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _m_protocol                                           3     1      2   34412
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                  _UART1_is_rx_ready
                         _UART2_Read
                  _UART2_is_rx_ready
                             _WaitMs
                       _run_checksum
            _secs_II_monitor_message
                     _secs_gem_state
 ---------------------------------------------------------------------------------
 (2) _secs_gem_state                                       2     0      2   16385
                         _StartTimer
                          _TimerDone
                _format_display_text
                  _sequence_messages
                   _set_display_info
                    _terminal_format
 ---------------------------------------------------------------------------------
 (3) _terminal_format                                      1     0      1   15757
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sequence_messages                                    1     0      1      66
                         _StartTimer
 ---------------------------------------------------------------------------------
 (3) _format_display_text                                 10     8      2     328
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _secs_II_monitor_message                              6     2      4   16734
                          _ee_logger
 ---------------------------------------------------------------------------------
 (3) _ee_logger                                            8     2      6   16080
                   _DATAEE_WriteByte
                         _StartTimer
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3      90
 ---------------------------------------------------------------------------------
 (2) _run_checksum                                         2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _UART2_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART2_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0     388
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2     168
                             _memset
 ---------------------------------------------------------------------------------
 (1) _hb_message                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   15899
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _check_help                                           1     0      1   96233
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   47870
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (3) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                    _CLC1_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                     _DSM_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      66
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DSM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      22
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (1) _MyeaDogM_WriteStringAtPos                            4     0      4   80129
                          _TimerDone
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                         _update_lcd
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   32232
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   31968
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   15868
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   16007
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3     292
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                               8     2      6     137
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   15501
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             33    15     18   15726
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   15294
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           14     8      6   14980
                               _ctoa
                               _dtoa
                              _fputc
                               _otoa
                 _read_prec_or_width
                               _stoa
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                18    11      7    2325
                                _pad
 ---------------------------------------------------------------------------------
 (7) _utoa                                                12     6      6    2303
                            ___lldiv
                            ___llmod
                                _pad
 ---------------------------------------------------------------------------------
 (8) ___llmod                                              9     1      8     159
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             13     5      8     162
 ---------------------------------------------------------------------------------
 (7) _stoa                                                12     8      4    1060
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _read_prec_or_width                                   7     3      4     180
 ---------------------------------------------------------------------------------
 (7) _otoa                                                13     7      6    2056
                                _pad
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                15     9      6    2885
                            ___aldiv
                            ___almod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                  8     2      6    1617
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___almod                                             10     2      8     296
 ---------------------------------------------------------------------------------
 (8) ___aldiv                                             14     6      8     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3     828
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (4) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (4) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT0_ISR                                            2     2      0       0
                                              0 COMRAM     2     2      0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT0_CallBack                                       0     0      0       0
                                NULL *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            2     2      0       0
                                              2 COMRAM     2     2      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0       0
                                NULL *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT2_ISR                                            2     2      0       0
                                              4 COMRAM     2     2      0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT2_CallBack                                       0     0      0       0
                                NULL *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _ADCC_ISR                                            2     2      0       0
                                              6 COMRAM     2     2      0
                                NULL *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (15) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _UART1_tx_vect_isr                                   2     2      0       0
                                              8 COMRAM     2     2      0
                                NULL *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (15) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _UART1_rx_vect_isr                                   2     2      0       0
                                             10 COMRAM     2     2      0
                                NULL *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (15) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _UART2_tx_vect_isr                                   2     2      0       0
                                              0 BANK0      2     2      0
                                NULL *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (15) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _UART2_rx_vect_isr                                   2     2      0       0
                                              2 BANK0      2     2      0
                                NULL *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (15) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR6_ISR                                            3     3      0      90
                                              0 BANK1      3     3      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR6_CallBack                                       0     0      0      90
                                NULL *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            5     5      0      90
                                              3 BANK1      5     5      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                                NULL *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MyeaDogM_WriteStringAtPos
     _TimerDone
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _ctoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _dtoa
                 ___aldiv
                 ___almod
                 _abs
                 _pad
                   _fputc
                   _fputs
                     _fputc
                   _strlen
               _fputc
               _otoa
                 _pad
               _read_prec_or_width
               _stoa
                 _fputc
               _utoa
                 ___lldiv
                 ___llmod
                 _pad
               _xtoa
                 _pad
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
         _ringBufS_flush
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _get_vterm_ptr
     _sprintf
       _vfprintf
     _update_lcd
       _eaDogM_WriteStringAtPos
       _wait_lcd_done
     _wait_lcd_done
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLC1_Initialize
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _DSM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _UART2_Write
   _WaitMs
     _StartTimer
     _TimerDone
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
     _update_lcd
     _vterm_dump
       _WaitMs
       _eaDogM_WriteStringAtPos
       _get_vterm_ptr
       _sprintf
       _wait_lcd_done
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
   _get_vterm_ptr
   _hb_message
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _m_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_is_rx_ready
     _UART2_Read
     _UART2_is_rx_ready
     _WaitMs
     _run_checksum
     _secs_II_monitor_message
       _ee_logger
         _DATAEE_WriteByte
         _StartTimer
         _sprintf
     _secs_gem_state
       _StartTimer
       _TimerDone
       _format_display_text
         _strlen
       _sequence_messages
         _StartTimer
       _set_display_info
       _terminal_format
         _sprintf
   _mode_lamp_dim
   _r_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _WaitMs
     _run_checksum
     _secs_II_monitor_message
     _secs_gem_state
   _set_display_info
   _set_vterm
   _sprintf
   _srand
   _t_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_put_buffer
     _secs_II_message
       _DATAEE_WriteByte
       _StartTimer
       _TimerDone
       _display_info
       _format_display_text
       _gem_messages
         _StartTimer
       _parse_sid
       _s10f1_opcmd
         _parse_ll
         _sprintf
       _s6f11_opcmd
       _sequence_messages
       _set_display_info
       _set_temp_display_help
       _terminal_format
       _vterm_sequence
         _get_vterm_ptr
         _sprintf
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _UART2_Write
       _UART2_is_tx_ready
       _UART2_put_buffer
       _block_checksum
   _update_lcd

 _INT0_ISR (ROOT)
   _INT0_CallBack
     NULL(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     NULL(Fake) *
     _INT1_DefaultInterruptHandler *

 _INT2_ISR (ROOT)
   _INT2_CallBack
     NULL(Fake) *
     _INT2_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   NULL(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   NULL(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   NULL(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   NULL(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   NULL(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     NULL(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     NULL(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0    2262     27.6%
BITBIGSFRlh       1448      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0     256    100.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0     255     99.6%
BITBANK4           256      0       0      0.0%
BANK4              256      0     255     99.6%
BITBANK3           256      0       0      0.0%
BANK3              256      0      67     26.2%
BITBANK2           256      0       0      0.0%
BANK2              256      0     254     99.2%
BITBANK1           256      0       0      0.0%
BANK1              256      8     238     93.0%
BITBIGSFRlllllh    227      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      4     155     96.9%
BITBIGSFRllllll    157      0       0      0.0%
BITBIGSFRh          80      0       0      0.0%
BITCOMRAM           63      0       0      0.0%
COMRAM              63     12      50     79.4%
BITBIGSFRlllh       61      0       0      0.0%
BITBIGSFRllh        36      0       0      0.0%
BITBIGSFRllllh      31      0       0      0.0%
STACK                0      0     122      0.0%
DATA                 0      0    3914      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Jan 14 16:56:28 2025

                   _SPI1_Exchange8bit 7EC8              __end_of_set_display_info 7EC8  
                                   _D 0ACE                                     _S 0902  
                                   _T 0600                                     _V 0C1A  
    __end_of_TMR5_SetInterruptHandler 7C96             __end_of_UART2_is_rx_ready 80E0  
           __end_of_UART2_is_tx_ready 80D4                                   _H10 0100  
                                 _H12 02C3                                   _H13 015B  
                                 _H14 00E6                                   _H17 019B  
                                 _H33 00C2                                   _H26 02E1  
                                 l200 8036                                   l711 7778  
                                 l609 7A34                                   l729 7A60  
                                 l589 76F8                                   l863 7ED6  
                                 _GIE 1FE97                                   _abs 7906  
                                 _pad 6372                                   fsr0 3FE9  
                                 fsr2 3FD9                       _TMR2_Initialize 7F94  
                                 prod 3FF3                                   tosl 3FFD  
                                 wreg 3FE8                         _INT0_CallBack 7DD2  
                        _run_checksum 7ADE                    _UART1_Transmit_ISR 7A0E  
                 __end_of_s10f1_opcmd 4A44                         _INT1_CallBack 7DF6  
                                _H153 0D9D                                  _H254 0ED5  
                                l2001 3DB0                                  l2010 47FA  
                                l1140 775C                                  l1080 6F4C  
                                l1400 1190                                  l2113 552E  
                                l2051 6FEC                                  l2027 6F74  
                                l1411 12E2                                  l2044 6FDA  
                                l2301 7956                                  l2205 5E0A  
                                l1431 1708                                  l1407 1254  
                                l1424 158E                                  l2129 20CA  
                                l1409 12D8                                  l1434 1744  
                                l1451 18A0                                  l2238 6048  
                                l1470 18CC                                  l1438 1836  
                                l1382 0DB8                                  l3207 4CA4  
                                l3303 0D6A                                  l2191 1F6A  
                                l1391 0F9E                                  l1553 72E8  
                                l2185 1ED6                                  l3170 5E8A  
                                l3154 63AA                                  l3314 02F4  
                                l2258 50DC                                  l2187 1EF2  
                                l3260 3800                                  l2188 1F0E  
                                l3245 4EB4                                  l2381 4AFA  
                                l2189 1F2A                                  l3182 3E06  
                                l2438 7EC4                                  l1398 10F8  
                                l3183 3E6C                                  l2385 4C64  
                                l1826 218C                                  l3269 3920  
                                l2389 663E                                  l1933 346E  
                                l3374 7938                                  l1695 6A50  
                                l3386 5CE8                                  l1699 6E0A  
                                l1947 363E                                  l1892 2CA0  
                                l1990 73CA                                  l1968 4590  
                                l1996 3AD0                                  _HC33 FB2F  
                                l1999 3CF8                                  l7521 5280  
                                l7515 5254                                  l8421 7798  
                                l7527 52B0                                  l7631 791E  
                                l8343 6F84                                  l8423 779A  
                                l7465 6E38                                  l8601 5922  
                                l8291 7DCA                                  l7539 5332  
                                l7467 6E5A                                  l8611 6FF6  
                                l8347 6FC2                                  l8339 6F7C  
                                l9229 77DE                                  l9253 77A2  
                                l8381 771A                                  l7575 561E  
                                l7567 55B2                                  l7559 556A  
                                l7487 619E                                  l7591 6830  
                                l8457 7960                                  l9337 7AEC  
                                l8553 3D8E                                  l8561 3D98  
                                l9283 7536                                  l7499 6220  
                                l8379 7718                                  l8811 5506  
                                l8475 6756                                  l8813 5518  
                                l9279 750C                                  l7951 5A44  
                                l7599 689C                                  l8591 585E  
                                l7947 59EE                                  l8597 58EE  
                                l8599 590E                                  l9911 4550  
                                l9903 4516                                  l9913 4578  
                                l8795 5472                                  l8787 53BE  
                                l9933 7836                                  l9919 457E  
                                STR_1 FF8A                                  STR_2 FFBA  
                                l9937 784E                                  l9881 447A  
                                l9873 43C4                                  STR_3 FFEF  
                                STR_4 FF68                                  STR_5 FF79  
                                STR_6 FFBA                                  l9893 44CE  
                                l9885 4494                                  STR_7 FFEF  
                                STR_8 FF57                                  l9895 44F6  
                                STR_9 FF9B                                  l9899 44FC  
                                _LATA 3FBA                                  _LATB 3FBB  
                                _LATC 3FBC                                  u4000 6248  
                                _LATD 3FBD                                  _LATE 3FBE  
                                _LATF 3FBF                                  u4100 5384  
                                u4020 524E                                  u4040 527C  
                                u4200 5670                                  u4120 5564  
                                u4050 52AA                                  u4210 682A  
                                _T2PR 3FAB                                  u4060 52CC  
                                u4140 5592                                  u4220 684C  
                                u4150 55AC                                  u4080 535A  
                                u4160 55CE                                  u4240 68C4  
                                u4180 5646                                  u5230 6F0C  
                                _T6PR 3F93                                  u5420 67F4  
                                u6140 43A4                                  _PMD0 39C0  
                                _PMD1 39C1                                  u5238 6F0E  
                                u5430 3AEA                                  _PMD2 39C2  
                                u5255 6F5C                                  _PMD3 39C3  
                                u5256 6F5E                                  u5520 5948  
                                u5440 3B08                                  _PMD4 39C4  
                                _PMD5 39C5                                  u5450 3B26  
                                _PMD6 39C6                                  _PMD7 39C7  
                                u8020 3FB0                                  u8100 4D6E  
                                u5460 3B44                                  u8110 4D86  
                                u5470 3B62                                  u8031 3FC8  
                                u8040 3FDE                                  u8200 4146  
                                u5480 3B80                                  u8041 3FDC  
                                u8105 4D60                                  u5385 75C0  
                                u5721 5414                                  u8050 3FF2  
                                u8130 4DB4                                  u3970 6198  
                                u5491 3D0A                                  u5731 54C8  
                                u8060 3FF8                                  u8140 4DC8  
                                u3980 61BA                                  u8150 4DCE  
                                u9110 1A10                                  u8207 4138  
                                u4960 5A86                                  u5760 7042  
                                u9200 1DAE                                  u8170 4DE0  
                                u8331 4FEC                                  u8260 4250  
                                u8340 5002                                  u8500 39FA  
                                u9220 2018                                  u9116 1A12  
                                u8341 5000                                  u8350 5016  
                                u9070 5172                                  u8360 501C  
                                u8408 3832                                  u9160 1CF4  
                                u5785 7076                                  u7810 5BF2  
                                u8290 4304                                  u8450 3992  
                                u5786 7078                                  u5778 7044  
                                u9170 1D16                                  u8267 4242  
                                u8460 39B2                                  u9405 2F80  
                                u7830 5C6E                                  u8390 3830  
                                u9406 2F82                                  u9238 201A  
                                u9190 1D8C                                  u8471 39CA  
                                u8455 3984                                  u8391 382A  
                                u9415 2F90                                  u8480 39E0  
                                u9440 605A                                  u9416 2F92  
                                u8481 39DE                                  u9425 2FA0  
                                u8490 39F4                                  u9426 2FA2  
                                u8810 4856                                  u7940 3DC8  
                                u9446 605C                                  u8910 49B8  
                                u8830 4874                                  u8930 49EE  
                                u8850 48C8                                  _PLLR 1CEE0  
                                u9571 35AA                                  u8780 6BE2  
                                u7990 3E22                                  u7958 3DCA  
                                u8950 4A26                                  u8870 490C  
                                u8890 4962                                  u9985 2656  
                                u9986 2658                                  u9995 2666  
                                u9996 2668                                  _WPUA 3A41  
                                _WPUB 3A51                                  _WPUC 3A61  
                                _WPUD 3A71                                  _WPUE 3A81  
                                _WPUF 3A91                         _INT2_CallBack 7E1A  
                    __end_of_ADCC_ISR 7506                                  _dbuf 01C6  
                                _ctoa 5E14                                  _main 0D74  
                                _dtoa 3DB4                                  _msg0 FB77  
                                _msg1 FBD0                                  _msg2 FC28  
                                _seed 00BE                                  _prec 01C3  
                                _otoa 4C68                                  _nout 01BF  
                                fsr0h 3FEA                                  fsr1h 3FE2  
                                indf0 3FEF                                  fsr2h 3FDA  
                                fsr0l 3FE9                                  indf1 3FE7  
                                indf2 3FDF                                  fsr1l 3FE1  
                                fsr2l 3FD9                                  _stoa 4082  
                                btemp 0022                                  _utoa 4E78  
                                _xtoa 37C4                                  prodh 3FF4  
                                prodl 3FF3                                  start 00AE  
                     _timer5ReloadVal 0005             __end_of_SPI1_Exchange8bit 7EE6  
                   _UART1_rx_vect_isr 7618                          ___param_bank 0000  
                  ?_UART1_rx_vect_isr 0042                      __end_of_INT0_ISR 7D5E  
                    __end_of_INT1_ISR 7D86                      __end_of_INT2_ISR 7DAE  
            __end_of_ringBufS_put_dma 6A58         __end_of_OSCILLATOR_Initialize 803C  
                               l10021 7A30                                 l10043 7A5C  
                               l12011 06EA                                 l10069 7744  
                               l12101 0CF4                                 l12021 0812  
                               l12013 074E                                 l12007 0644  
                               l12111 0D16                                 l12105 0CFE  
                               l12025 0840                                 l12009 0680  
                               l12017 07B8                                 l12121 6C74  
                               l12035 08C0                                 l12019 07E0  
                               l12131 6B2C                                 l12211 4746  
                               l12045 0924                                 l12029 086E  
                               l12037 08FA                                 l12133 6B6E  
                               l12125 6CAE                                 l12205 459C  
                               l12071 0B2E                                 l12047 0968  
                               l12055 0A1A                                 l12063 0A76  
                               l12207 462A                                 l12215 47D4  
                               l13103 2DA0                                 l12311 497A  
                               l12049 09D0                                 l12057 0A42  
                               l12209 46B8                                 l13201 3092  
                               l12313 499A                                 l12305 4968  
                               l12401 2B4E                                 l11603 5F18  
                               l12059 0A72                                 l13123 2E4C  
                               l13115 2DFC                                 l13107 2DBE  
                               l13051 2C3C                                 l12307 4970  
                               l12251 487A                                 l11541 5BFE  
                               l13221 60E2                                 l12413 5CFE  
                               l13141 2EF8                                 l12317 49A0  
                               l12253 4882                                 l12245 485C  
                               l12237 483E                                 l12405 2BF0  
                               l12095 0C9A                                 l12079 0B7A  
                               l12191 6C00                                 l12503 5068  
                               l13127 2E7C                                 l13119 2E20  
                               l12335 4A08                                 l12327 49D6  
                               l12263 48B0                                 l11553 6CFE  
                               l11641 3EA6                                 l11617 3DF6  
                               l12089 0C36                                 l13225 60F6  
                               l13233 614E                                 l13217 609C  
                               l13073 2CDA                                 l12281 48F4  
                               l12257 488A                                 l13305 3664  
                               l11571 63F0                                 l11563 639C  
                               l11651 3F9C                                 l11731 40DE  
                               l13227 612E                                 l12531 50E0  
                               l12523 50D0                                 l13403 21D8  
                               l13155 2F38                                 l13139 2EF4  
                               l12339 4A0E                                 l12275 48D8  
                               l12259 48AA                                 l13315 3692  
                               l11557 6D3C                                 l11637 3E8A  
                               l11629 3E42                                 l11741 417A  
                               l11733 4100                                 l11821 37F0  
                               l11901 0084                                 l12461 5F62  
                               l12541 5108                                 l12533 50EE  
                               l12525 50D4                                 l12509 508E  
                               l13085 2D22                                 l12293 4924  
                               l12269 48CE                                 l13341 3734  
                               l13325 36C8                                 l13309 3686  
                               l13261 3502                                 PRLOCK 39EF  
                               l11583 5E38                                 l11575 643C  
                               l11567 63B4                                 l11719 4E2E  
                               l11831 385E                                 l12439 6578  
                               l12543 511C                                 l12527 50D8  
                               l12607 51EE                                 l13431 2294  
                               l13191 3036                                 l13087 2D38  
                               l12295 4944                                 l12287 4912  
                               l12391 2918                                 l12711 1C2E  
                               l12703 1BEA                                 l13343 3738  
                               l13335 370A                                 l13263 3514  
                               l13247 34A6                                 l11585 5E5C  
                               l11753 41EC                                 l11729 40D4  
                               l11913 0096                                 l11905 008A  
                               l12465 5F6A                                 l12537 50F4  
                               l12609 5206                                 l13441 22BA  
                               l13417 2236                                 l13185 3026  
                               l13089 2D4C                                 l12289 491A  
                               l12393 2976                                 l12385 27CA  
                               l12705 1C08                                 l13345 3740  
                               l13337 3714                                 l13273 355E  
                               l13353 375E                                 l11595 5E94  
                               l11667 4038                                 l11763 42A2  
                               l11755 4214                                 l11851 3902  
                               l11843 38B6                                 l11835 3872  
                               l12475 5FA2                                 l12467 5F98  
                               l12563 516A                                 l13531 2568  
                               l13523 250C                                 l13515 24CA  
                               l13187 302A                                 l13179 2FFE  
                               l12299 494A                                 l12395 29D8  
                               l12387 285C                                 l12731 1C54  
                               l12643 1A94                                 l12635 1A72  
                               l13283 35B6                                 l13355 37A8  
                               l11589 5E7C                                 l11749 41B0  
                               l11781 4EA4                                 l11917 009E  
                               l11909 0090                                 l12485 600A  
                               l12477 5FB4                                 l12573 517E  
                               l13541 25D4                                 l13461 2330  
                               l13365 20D8                                 l12397 2A52  
                               l12389 28BA                                 l12821 1E30  
                               l12733 1C66                                 l12637 1A7A  
                               l13349 374A                                 l13293 360C  
                               l11599 5ED0                                 l11687 4CD4  
                               l11679 4C94                                 l11767 42DE  
                               l11759 427C                                 l11935 0190  
                               l11919 00E2                                 l12487 601C  
                               l12495 6026                                 l12591 51BE  
                               l12567 5176                                 l13543 25D8  
                               l13527 2538                                 l13519 24E8  
                               l13199 3048                                 l12399 2ACC  
                               l12911 200A                                 l12823 1E48  
                               l12663 1B10                                 l12647 1AAC  
                               l13279 358A                                 l11945 0228  
                               l11929 0128                                 l13625 4ACA  
                               l12585 518A                                 l12577 5182  
                               l12569 517A                                 l13473 23B0  
                               l13465 2354                                 l13457 2312  
                               l12905 1F94                                 l12841 1E84  
                               l12753 1C8C                                 l12649 1ABE  
                               l11699 4D72                                 l11787 4EE0  
                               l11859 3996                                 l11963 0302  
                               l11955 02D0                                 l12499 6032  
                               l12587 51AE                                 l13483 241C  
                               l13379 2132                                 l12915 202E  
                               l12843 1E8C                                 l12675 1B5A  
                               l11797 4FC2                                 l11981 044E  
                               l11949 027E                                 l11893 0062  
                               l13637 4BE6                                 l13581 26EC  
                               l13557 2616                                 l13485 2420  
                               l13469 2380                                 l12917 2072  
                               l12757 1C98                                 l12669 1B36  
                               l13821 146A                                 l11879 3A7C  
                               l11983 04B2                                 l11967 0308  
                               l11895 0066                                 l12599 51DA  
                               l13591 270C                                 l13583 26F0  
                               l12839 1E54                                 l12791 1DDC  
                               l12783 1DB4                                 l12767 1D26  
                               l12759 1CD2                                 l12775 1D4A  
                               l13807 1368                                 l11977 03A2  
                               l11969 0350                                 l11897 007E  
                               l13585 26F8                                 l13577 26CC  
                               l12937 2094                                 l12777 1D6A  
                               l12689 1BA4                                 l12953 20A0  
                               l13905 18A8                                 l13761 1136  
                               l13745 1024                                 l13809 139E  
                               l11979 03E4                                 l11995 05A2  
                               l11987 051C                                 l13587 26FC  
                               l13499 2472                                 l13595 2720  
                               l12859 1EEA                                 l13923 19A6  
                               l13819 141A                                 l13747 1076  
                               l13691 0DAA                                 l11989 0544  
                               l13589 2704                                 l13597 276A  
                               l12885 1F46                                 l13917 1908  
                               l13909 18D4                                 l13781 11BC  
                               l13773 1198                                 l12799 1E04  
                               l13935 19E4                                 l13871 166E  
                               l13863 1584                                 l13847 14E8  
                               l13695 0DEA                                 l13785 11CC  
                               l13777 11A0                                 l13689 0DA2  
                               l13699 0E00                                 l13893 17BC  
                               l13869 15F4                                 l13797 129E  
                               l13887 174E                                 l13879 16F8  
                               l13889 177E                                 l13897 1840  
                               l13899 186C                       __end_of___aldiv 53AE  
                               _ADCAP 3EF5                                 _ADACT 3EFE  
                     __end_of___almod 569A                                 _ADCLK 3EFF  
                               _ADPCH 3EF1                                 _ADREF 3EFD  
                               STR_10 FE5E                                 STR_11 FE1F  
                               STR_12 FE0A                                 STR_20 FD21  
                               STR_21 FEFC                                 STR_13 FD9C  
                               STR_30 FFEF                                 STR_22 FFF5  
                               STR_14 FD84                                 STR_31 FFEF  
                               STR_15 FF45                                 STR_23 FE34  
                               STR_40 FED6                                 STR_24 FD21  
                               STR_32 FFEF                                 STR_16 FE49  
                               STR_17 FE5E                                 STR_41 FFD5  
                               STR_33 FE9B                                 STR_25 FCB6  
                               STR_42 FFD5                                 STR_26 FFFC  
                               STR_18 FEAF                                 STR_50 FE73  
                               STR_34 FD07                                 STR_19 FE49  
                               STR_27 FFF9                                 STR_43 FFAB  
                               STR_51 FF21                                 STR_35 FCED  
                               STR_52 FE73                                 STR_60 FDE0  
                               STR_44 FFAB                                 STR_36 FDF5  
                               STR_45 FFAB                                 STR_29 FFEF  
                               STR_37 FFC9                                 STR_53 FF0F  
                               STR_61 FCD3                                 STR_54 FE73  
                               STR_38 FFDF                                 STR_46 FD54  
                               STR_62 FD3B                                 STR_55 FED6  
                               STR_39 FED6                                 STR_63 FEC3  
                               STR_47 FDCA                                 STR_64 FEC3  
                               STR_56 FEE9                                 STR_48 FE87  
                               _ADRPT 3EEC                                 STR_65 FEC3  
                               STR_49 FF33                                 STR_57 FD6C  
                               STR_66 FEC3                                 STR_58 FDE0  
                               STR_67 FFFC                                 STR_59 FDB4  
                               STR_68 FFFC                                 STR_69 FFE8  
                     __end_of___lldiv 6272                                 u10005 2676  
                               u10006 2678                                 u10108 4C4E  
                               u10090 4C4C                       __end_of___llmod 68EE  
                               _U1P1H 3DED                                 _U1P2H 3DEF  
                               _U1P1L 3DEC                                 _U1P3H 3DF1  
                               _T2CON 3FAC                                 _U1P2L 3DEE  
                               _U1P3L 3DF0                                 _U2P1L 3DD4  
                               _U2P2L 3DD6                                 _U2P3L 3DD8  
                               _T5CLK 3F9D                                 _T2HLT 3FAD  
                               _T5CON 3F9A                                 _T6CON 3F94  
                               _T6HLT 3F95                                 _T2TMR 3FAA  
                               _U1UIR 3DF8                                 _T2RST 3FAF  
                               _U1RXB 3DE8                                 _U2UIR 3DE0  
                               _U1TXB 3DEA                                 _U2RXB 3DD0  
                               _U2TXB 3DD2                                 _T6TMR 3F92  
                               _T6RST 3F97                   ??_UART1_rx_vect_isr 004C  
                               _ISRPR 39F1                                 _OSCEN 39DD  
             secs_gem_state@equipment 0007                                 _TMR5H 3F99  
                               _TMR5L 3F98                                 _TRISA 3FC2  
                               _TRISB 3FC3                                 _TRISC 3FC4  
                               _TRISD 3FC5                                 _TRISE 3FC6  
                               _TRISF 3FC7                           _Default_ISR 80F4  
                   _UART1_tx_vect_isr 75D4                      __end_of_TMR5_ISR 7102  
                        _DMA1CON0bits 3BFC                      __end_of_TMR6_ISR 7A0E  
                        _DMA1CON1bits 3BFD                                 _faker 000D  
                  r_protocol@rxData_l 000B                                 _flags 01C5  
                               _msg99 FC7E                                 _fputc 5BCE  
                               _fputs 6CEE                    ?_UART1_tx_vect_isr 0042  
                               _srand 7AB6                                 _width 01C1  
                               _putch 7FAE              _INT1_SetInterruptHandler 7CBE  
                               pclath 3FFA                                 pclatu 3FFB  
                               tablat 3FF5                                 ltemp0 0022  
                               ltemp1 0026                                 ltemp2 002A  
                               plusw0 3FEB                                 plusw1 3FE3  
                               plusw2 3FDB                                 ttemp0 0022  
                               ttemp1 0025                                 ttemp2 0028  
                               ttemp3 002B                                 ttemp5 0023  
                               ttemp6 0026                                 ttemp7 002A  
                      _secs_gem_state 5066                                 status 3FD8  
 __end_of_UART1_SetRxInterruptHandler 7C1E           _UART1_SetRxInterruptHandler 7BF6  
                               wtemp0 0022                                 wtemp1 0024  
                               wtemp2 0026                                 wtemp3 0028  
                               wtemp4 002A                                 wtemp5 002C  
                               wtemp8 0023                       __end_of_sprintf 6554  
                 ??_UART1_tx_vect_isr 004A             __end_of_UART1_rx_vect_isr 765A  
                        __end_of_HC33 FB77                       _TMR5_Initialize 754C  
               __end_of_ringBufS_init 7B7E                       __initialization 569A  
                   _UART2_rx_vect_isr 76A0                          __end_of_ctoa 5F36  
                        __end_of_main 19F8                          __end_of_dtoa 4082  
                        __end_of_msg0 FBD0                          __end_of_msg1 FC28  
                        __end_of_msg2 FC7E                          __end_of_otoa 4E78  
                        __end_of_stoa 431E                          __end_of_utoa 5066  
                        __end_of_xtoa 3AC6                    ?_UART2_rx_vect_isr 0042  
             __end_of_TMR2_Initialize 7FAE      secs_II_monitor_message@store1_13 004F  
    secs_II_monitor_message@store6_11 004E              _TMR5_SetInterruptHandler 7C6E  
                       __activetblptr 0003                           _s10f1_opcmd 47FE  
                 ??_UART2_rx_vect_isr 00F9             __end_of_UART1_tx_vect_isr 7616  
                              INTCON0 3FD2            __end_of_read_prec_or_width 5AA0  
                     _TMR6_Initialize 7C1E                       _PWM8_Initialize 8010  
                    _UART1_Initialize 7102                     _UART2_tx_vect_isr 765C  
                  _UART2_Transmit_ISR 7A3A                                _ADACCU 3EEA  
                              _ADACQH 3EF4                                _ADACQL 3EF3  
                              _ADCON0 3EF8                                _ADCON1 3EF9  
                              _ADCON2 3EFA                                _ADCON3 3EFB  
                              _ADLTHH 3EDF                  __end_of_gem_messages 5534  
                              _ADLTHL 3EDE                                _ADPREH 3EF7  
                              _ADPREL 3EF6                                _DMA1PR 39F3  
                              _DMA2PR 39F4                                _ADSTAT 3EFC  
                              _ADUTHH 3EE1                                _ADUTHL 3EE0  
                  _PWM8_LoadDutyValue 7590                                _ANSELA 3A40  
                              _ANSELB 3A50                                _ANSELC 3A60  
                              _ANSELD 3A70                                _ANSELE 3A80  
                              _ANSELF 3A90                    ?_UART2_tx_vect_isr 0042  
                              _MD1SRC 3CFC                __end_of_secs_gem_state 521A  
                              _U1CON0 3DF2                                _U1CON1 3DF3  
                              _U1CON2 3DF4                                _U1BRGH 3DF6  
                              _U1FIFO 3DF7                                _U2CON0 3DDA  
                              _U2CON1 3DDB                                _U1BRGL 3DF5  
                              _U2CON2 3DDC                                _U2BRGH 3DDE  
                              _U2FIFO 3DDF                                _U2BRGL 3DDD  
                              _T5GATE 3F9C                                _T5GCON 3F9B  
                              _MAINPR 39F2                                _RA4PPS 3A04  
                              _RA5PPS 3A05                                _RA6PPS 3A06  
                              _RC3PPS 3A13                                _RD1PPS 3A19  
                              _RB6PPS 3A0E                                _RC5PPS 3A15  
                              _ODCONA 3A42                                _ODCONB 3A52  
                              _ODCONC 3A62                                _RC6PPS 3A16  
                              _ODCOND 3A72                                _ODCONE 3A82  
                              _ODCONF 3A92                                i2l1157 70F0  
                    _mode_lamp_bright 8082                                _SCANPR 39F7  
                              _IVTADH 389E                                _IVTADL 389D  
                              _IVTADU 389F                                u640_48 7E72  
                              u625_48 7DE2                                u627_48 7E06  
                              _OSCFRQ 39DF                                u637_48 7E4E  
                              u629_48 7E2A                                u586_40 7FD0  
                              u586_46 7FD2                                _NVMDAT 39E3  
           _MyeaDogM_WriteStringAtPos 6052              __end_of_send_lcd_cmd_dma 738C  
                 ??_UART2_tx_vect_isr 00F7             __end_of_UART2_rx_vect_isr 76E2  
                 __end_of_s6f11_opcmd 7226                     _CLKREF_Initialize 8090  
                    _UART2_Initialize 7226                                _WaitMs 793E  
                        _CCPTMRS1bits 3F5F                        _ringBufS_flush 6D86  
                              _memset 6C4E                                clear_0 5776  
                              clear_1 578A                                clear_2 579E  
                              clear_3 57B0                                clear_4 57BC  
                              clear_5 57C8                                clear_6 57D4  
                              clear_7 57E0                                isa$std 0001  
                              _printf 7166                    _eaDogM_WriteString 6BA8  
                    __end_of_parse_ll 6FCE                             ?_ADCC_ISR 0042  
                              _strlen 6E12                          __pdataBIGRAM 0C1A  
                     _ADCC_Initialize 7476                        _PMD_Initialize 803C  
__end_of_INT2_DefaultInterruptHandler 8106          _INT2_DefaultInterruptHandler 8104  
                        __pdataCOMRAM 004E             __end_of_UART2_tx_vect_isr 769E  
                              lltemp0 0022                                lltemp1 002A  
                              lltemp2 0032                                lltemp3 003A  
                        __mediumconst FB2E               _secs_II_monitor_message 5F36  
                              tblptrh 3FF7                                tblptrl 3FF6  
                              tblptru 3FF8                      __end_of_wdtdelay 7338  
                    __end_of_vfprintf 6BA8                            _StartTimer 7854  
                     _CLC1_Initialize 7E86               __end_of_TMR5_Initialize 7590  
                   _SYSTEM_Initialize 73DC                            __accesstop 0060  
             __end_of__initialization 57F2                             ?_INT0_ISR 0042  
                           ?_INT1_ISR 0042                             ?_INT2_ISR 0042  
                __end_of_display_help 80CE                  __end_of_display_info 80C6  
           __end_of_CLKREF_Initialize 809A                         ___rparam_used 0001  
                     _TMR5_WriteTimer 7722                 _set_temp_display_help 8050  
              __end_of_ringBufS_flush 6E12                        __pcstackCOMRAM 0042  
                          ___inthi_sp 17EB                          __pidataBANK0 79AA  
                        __pidataBANK1 68EE                          __pidataBANK2 7890  
                        __pidataBANK6 6272                             ?_TMR5_ISR 0042  
                           ?_TMR6_ISR 0042                         __end_of_msg99 FCB6  
                    _DATAEE_WriteByte 6F00                        ivt0x8_undefint 00AC  
                       __end_of_fputc 5CF2                         __end_of_fputs 6D86  
     secs_II_monitor_message@store1_1 0050                         __end_of_srand 7ADE  
               __end_of_TMR5_CallBack 7E86                         __end_of_putch 7FC8  
             __end_of_PWM8_Initialize 8026               __end_of_TMR6_Initialize 7C46  
              __end_of_PMD_Initialize 8050                            ??_ADCC_ISR 0048  
               __end_of_TMR6_CallBack 7E62                         _DMA1_DMAA_ISR 80A8  
    __end_of_INT2_SetInterruptHandler 7CBE              _UART2_RxInterruptHandler 00B0  
           __end_of_SYSTEM_Initialize 742A                        _DSM_Initialize 7F5C  
         __end_of_format_display_text 5952                            __pbssBANK0 0060  
                          __pbssBANK1 01BF                            __pbssBANK2 0200  
                          __pbssBANK3 0300                            __pbssBANK4 0400  
                          __pbssBANK5 0500                            _check_help 4A44  
                         _s6f11_opcmd 71C8                 _INT0_InterruptHandler 00B9  
                          ??_INT0_ISR 0042                            ??_INT1_ISR 0044  
                          ??_INT2_ISR 0046                     __end_of_TimerDone 7DD2  
                    _DMA1_DMADCNT_ISR 809C                               IVTBASEH 3FD6  
                             IVTBASEL 3FD5                               IVTBASEU 3FD7  
                          _hb_message 738C                 __end_of_wait_lcd_done 7F94  
    __end_of_TMR6_SetInterruptHandler 7C6E               __end_of_ADCC_Initialize 74C0  
                          ??_TMR5_ISR 01E9                            ??_TMR6_ISR 01E6  
                             _CLC1CON 3C74                               _CLC1POL 3C75  
                             _DMA1DSA 3BF0                               _DMA2DSA 3BD0  
                             _DMA1DSZ 3BEE                               _DMA2DSZ 3BCE  
                             _DMA1SSA 3BF9                               _DMA2SSA 3BD9  
                             _DMA1SSZ 3BF7                               _DMA2SSZ 3BD7  
                             _ADSTPTH 3EE5                               _ADSTPTL 3EE4  
                             _MD1CARH 3CFE                               _MD1CARL 3CFD  
                   _UART1_Receive_ISR 7F04                               _CLKRCLK 3CE6  
                             _CLKRCON 3CE5                               _NCO1CLK 3F3F  
                      ?_DMA1_DMAA_ISR 0042                      _DMA1_DMASCNT_ISR 8064  
                             _NCO1CON 3F3E                               _U1ERRIE 3DFA  
                             _U1ERRIR 3DF9               __end_of_CLC1_Initialize 7EA8  
                             _U2ERRIE 3DE2                               _U2ERRIR 3DE1  
                             _INT0PPS 3AC0                               _INT1PPS 3AC1  
                             _INT2PPS 3AC2                          ?_Default_ISR 0042  
                             _U1RXPPS 3AE5                               _U2RXPPS 3AE8  
                             _OSCCON1 39D9                               _OSCCON3 39DB  
                             _IVTLOCK 3FD4                               _SPI1CLK 3D1C  
                         r_protocol@d 0051                               _SPI1RXB 3D10  
                             _NVMADRH 39E1                               _NVMADRL 39E0  
                             _SPI1TXB 3D11                               _OSCTUNE 39DE  
                             _NVMCON2 39E6                               _PWM8DCH 3F61  
                             _PWM8DCL 3F60                               _PWM8CON 3F62  
              __end_of_DSM_Initialize 7F78                               _SLRCONA 3A43  
                             _SLRCONB 3A53                               _SLRCONC 3A63  
                             _SLRCOND 3A73                               _SLRCONE 3A83  
                             _SLRCONF 3A93               __end_of_TMR5_WriteTimer 7762  
                   __end_of_ee_logger 5E14                    __end_of_UART1_Read 7818  
                  __end_of_UART2_Read 77DC                               __Hparam 0000  
                       _mode_lamp_dim 7FE2                               __Lparam 0000  
            __end_of_UART1_Initialize 7166                               ___aldiv 521A  
                             ___almod 5534                            _m_protocol 20D4  
                             ___lldiv 6166                               ___llmod 680E  
                        _gem_messages 53AE             __end_of_UART1_Receive_ISR 7F22  
                __end_of_init_display 672C                               __pcinit 569A  
            __end_of_mode_lamp_bright 8090                   _eaDogM_WriteCommand 8074  
                             __ramtop 2000                               __ptext0 0D74  
                             __ptext1 346A                               __ptext2 431E  
                             __ptext3 672C                               __ptext4 7A66  
                             __ptext5 80CE                               __ptext6 7762  
                             __ptext7 7A8E                               __ptext8 80D4  
                             __ptext9 19F8                     _UART2_Receive_ISR 7F22  
               _OSCILLATOR_Initialize 8026                               _r_block 007A  
                             us915999 1A9E                               _mode_sw 000E  
                           _T5CONbits 3F9A              __end_of_UART2_Initialize 7284  
                  m_protocol@rxData_l 000C                     __end_of_parse_sid 7034  
                             _sprintf 6464                  end_of_initialization 57F2  
                   __end_of_secs_send 459A              _INT2_SetInterruptHandler 7C96  
                          _r_protocol 2C38   __end_of_UART1_SetTxInterruptHandler 7BF6  
         _UART1_SetTxInterruptHandler 7BCE       __end_of_secs_II_monitor_message 6052  
 __end_of_UART2_SetRxInterruptHandler 7BCE           _UART2_SetRxInterruptHandler 7BA6  
                           i2u1012_48 767C                             i2u1012_49 7690  
                           i2u1014_48 76C0                             i2u1014_49 76D4  
                  _read_prec_or_width 5952                     __end_of_set_vterm 7F04  
                          _t_protocol 346A                     __end_of_vfpfcnvrt 0D74  
                           _SPI1TCNTL 3D12                               postdec1 3FE5  
                             postdec2 3FDD                               postinc0 3FEE  
                             postinc1 3FE6                               postinc2 3FDE  
                   __end_of_start_lcd 80F2             __end_of_UART2_Receive_ISR 7F40  
                      wdtdelay@dcount 009A                       ??_DMA1_DMAA_ISR 004E  
                      _block_checksum 672C                 _INT1_InterruptHandler 00B6  
                           _PORTBbits 3FCB              _TMR6_SetInterruptHandler 7C46  
                        _display_help 80C6                 _TMR5_InterruptHandler 009E  
                        _display_info 80BE   __end_of_ADCC_SetADIInterruptHandler 7D36  
         _ADCC_SetADIInterruptHandler 7D0E                            _update_lcd 6554  
            __end_of_DATAEE_WriteByte 6F68                       _DMA1_Initialize 6E96  
                     _SPI1_Initialize 7FFA                 __end_of_get_vterm_ptr 7906  
                     _terminal_format 459A                      _UART1_put_buffer 7A8E  
                   r_protocol@b_block 0001                     _sequence_messages 3AC6  
                      __end_of_WaitMs 7974          __end_of_INTERRUPT_Initialize 709A  
              __end_of_block_checksum 680E                            _vterm_dump 5AA0  
__end_of_INT0_DefaultInterruptHandler 8102          _INT0_DefaultInterruptHandler 8100  
                     _DMA2_Initialize 7284                         __pidataBIGRAM 30AE  
                       __pidataCOMRAM 80FA                        __end_of_memset 6CEE  
                      __end_of_printf 71C8              __end_of_DMA1_DMADCNT_ISR 80A6  
                    _UART2_put_buffer 7A66                 __end_of_INT0_CallBack 7DF6  
                      __end_of_strlen 6E96                   start_initialization 569A  
__end_of_TMR5_DefaultInterruptHandler 7FE2          _TMR5_DefaultInterruptHandler 7FC8  
                         __end_of_abs 793E                 __end_of_INT1_CallBack 7E1A  
                         __end_of_pad 6464                  __end_of_send_lcd_cmd 7B56  
                          ivt0x8_base 0008                 __end_of_INT2_CallBack 7E3E  
                secs_II_message@block 001B                         _uart1RxBuffer 0400  
                       _uart2RxBuffer 0500                         _uart1TxBuffer 0240  
            __end_of_DMA1_DMASCNT_ISR 8074                         _uart2TxBuffer 0200  
                      _DMA1_DMAOR_ISR 80B4             __end_of_sequence_messages 3DB4  
                           _TimerDone 7DAE                         _ringBufS_init 7B56  
                         _MD1CON0bits 3CFA                           _MD1CON1bits 3CFB  
                         __pdataBANK0 00C2                           __pdataBANK1 0100  
                         __pdataBANK2 02C3                           __pdataBANK6 0600  
          __end_of_EXT_INT_Initialize 7476                       run_checksum@sum 00BC  
                 __end_of_help_button 7854       __end_of_eaDogM_WriteStringAtPos 79AA  
                         __pbssBIGRAM 0700               __end_of_DMA1_Initialize 6F00  
                         __pbssCOMRAM 0001      __end_of_INT0_SetInterruptHandler 7D0E  
                       __pcstackBANK0 00F7                         __pcstackBANK1 01E6  
             __end_of_SPI1_Initialize 8010              _UART1_RxInterruptHandler 00AA  
            _UART2_TxInterruptHandler 00AD               __end_of_terminal_format 47FE  
                        _init_display 6642                __end_of_DMA1_DMAOR_ISR 80BE  
               _INT2_InterruptHandler 00B3                 _TMR6_InterruptHandler 00A1  
                           _ee_logger 5CF2               __end_of_DMA2_Initialize 72DE  
              _PIN_MANAGER_Initialize 6A58                  __end_of_wait_lcd_set 80EC  
                       __pmediumconst FB2E                             __ptext100 6166  
                           __ptext101 4082                             __ptext110 521A  
                           __ptext102 5952                             __ptext111 5E14  
                           __ptext103 4C68                             __ptext120 7D60  
                           __ptext112 5BCE                             __ptext104 3DB4  
                           __ptext121 7DF6                             __ptext113 7FAE  
                           __ptext105 6372                             __ptext130 7A0E  
                           __ptext122 8102                             __ptext114 69AE  
                           __ptext106 6E12                             __ptext131 7618  
                           __ptext123 7D88                             __ptext115 78CC  
                           __ptext107 6CEE                             __ptext140 8064  
                           __ptext132 7F04                             __ptext124 7E1A  
                           __ptext116 7DAE                             __ptext108 7906  
                           __ptext141 809C                             __ptext133 765C  
                           __ptext125 8104                             __ptext117 7D38  
                           __ptext109 5534                             __ptext142 80A8  
                           __ptext134 7A3A                             __ptext126 80F4  
                           __ptext118 7DD2                             __ptext143 80B4  
                           __ptext135 76A0                             __ptext127 74C0  
                           __ptext119 8100                             __ptext144 709C  
                           __ptext136 7F22                             __ptext128 8106  
                           __ptext145 7722                             __ptext137 79E0  
                           __ptext129 75D4                             __ptext146 7E62  
                           __ptext138 7E3E                             __ptext147 7FC8  
                           __ptext139 7506                    __end_of_StartTimer 7890  
                            _ADCC_ISR 74C0                           __smallconst FB2E  
                            _CLC1GLS0 3C7A                              _CLC1GLS1 3C7B  
                            _CLC1GLS2 3C7C                              _CLC1GLS3 3C7D  
                            _CLC1SEL0 3C76                              _CLC1SEL1 3C77  
                            _CLC1SEL2 3C78                              _CLC1SEL3 3C79  
                            _DMA1CON0 3BFC                              _DMA1CON1 3BFD  
                            _DMA1AIRQ 3BFE                              _DMA2CON0 3BDC  
                            _DMA2CON1 3BDD                              _DMA2AIRQ 3BDE  
                            _DMA1SIRQ 3BFF                              _DMA2SIRQ 3BDF  
                         _NCO1CONbits 3F3E                        _vterm_sequence 2786  
                            _T2CLKCON 3FAE                              _NCO1ACCH 3F39  
                            _NCO1ACCL 3F38                              _NCO1ACCU 3F3A  
                _INTERRUPT_Initialize 7034                              _T6CLKCON 3F96  
                            _NCO1INCH 3F3C                              _NCO1INCL 3F3B  
                            _NCO1INCU 3F3D                             _parse_sid 6FCE  
                     ?_DMA1_DMAOR_ISR 0042                              _INT0_ISR 7D38  
                            _INT1_ISR 7D60                              _INT2_ISR 7D88  
                            _LATBbits 3FBB                              _LATCbits 3FBC  
                            _LATDbits 3FBD                              _LATEbits 3FBE  
                            _LATFbits 3FBF                             _secs_send 431E  
                            _IPR1bits 3981                              _IPR2bits 3982  
                            _PIE1bits 3991                              _IPR3bits 3983  
                            _PIE2bits 3992                              _IPR5bits 3985  
                            _PIE3bits 3993                             _tickCount 0060  
                            _IPR6bits 3986                              _PIE5bits 3995  
                            _IPR7bits 3987                              _IPR8bits 3988  
                            _PIE6bits 3996                              _PIE7bits 3997  
                            _IPR9bits 3989                              _PIE8bits 3998  
                            _PIE9bits 3999                             _ring_buf1 0280  
                           _ring_buf2 0300                              _PIR1bits 39A1  
                            _PIR2bits 39A2                              _SPI1BAUD 3D19  
                            _PIR4bits 39A4                              _SPI1CON0 3D14  
                            _SPI1CON1 3D15                              _SPI1CON2 3D16  
                            _PIR5bits 39A5                              i2u730_48 74E4  
                            i2u730_49 74F8                              i2u732_48 75F4  
                            i2u732_49 7608                              _PIR7bits 39A7  
                            i2u734_48 7638                              i2u734_49 764C  
                            _PIR8bits 39A8                              _PIR9bits 39A9  
                           _set_vterm 7EE6                           _help_button 7818  
          __end_of_UART1_Transmit_ISR 7A3A                              _TMR5_ISR 709C  
                            _TMR6_ISR 79E0                             _port_data 01AF  
                           _vfpfcnvrt 0000                          _SPI1INTFbits 3D1A  
                       _TMR5_CallBack 7E62                    __end_of_check_help 4C68  
                           _start_lcd 80EC                         _TMR6_CallBack 7E3E  
            __end_of_UART1_put_buffer 7AB6                __end_of_vterm_sequence 2C38  
                 __end_of_UART1_Write 7722                   __end_of_UART2_Write 77A0  
                    _set_display_info 7EA8                    __end_of_hb_message 73DC  
                         _INTCON0bits 3FD2                             copy_data0 56AE  
                           copy_data1 56D4                             copy_data2 56FA  
                           copy_data3 571C                             copy_data4 573E  
                           copy_data5 5760              _INT0_SetInterruptHandler 7CE6  
              _uart1TxBufferRemaining 0018   __end_of_UART2_SetTxInterruptHandler 7BA6  
         _UART2_SetTxInterruptHandler 7B7E                          _uart1RxCount 0015  
            __end_of_UART2_put_buffer 7A8E                          _uart2RxCount 000F  
                            __Hrparam 0000                  __end_of_run_checksum 7B06  
                            __Lrparam 0000                         _wait_lcd_done 7F78  
                        _send_lcd_cmd 7B2E                       _NCO1_Initialize 7F40  
               __end_of_DMA1_DMAA_ISR 80B2                     ?_DMA1_DMADCNT_ISR 0042  
         __end_of_eaDogM_WriteCommand 8082                              __pivt0x8 0008  
                  ??_DMA1_DMADCNT_ISR 004E                              __ptext10 2786  
                            __ptext11 71C8                              __ptext20 5066  
                            __ptext12 47FE                              __ptext21 459A  
                            __ptext13 6F68                              __ptext30 80E0  
                            __ptext22 3AC6                              __ptext14 6FCE  
                            __ptext31 77DC                              __ptext23 57F8  
                            __ptext15 53AE                              __ptext40 5AA0  
                            __ptext32 6642                              __ptext24 5F36  
                            __ptext16 7AB6                              __ptext41 793E  
                            __ptext33 7B06                              __ptext25 5CF2  
                            __ptext17 2C38                              __ptext50 80BE  
                            __ptext42 7EE6                              __ptext34 7B2E  
                            __ptext26 6F00                              __ptext18 76E2  
                            __ptext51 80C6                              __ptext43 8050  
                            __ptext35 7EC8                              __ptext27 7ADE  
                            __ptext19 20D4                              __ptext60 7C46  
                            __ptext52 73DC                              __ptext44 7EA8  
                            __ptext36 7B56                              __ptext28 80DA  
                            __ptext61 754C                              __ptext53 7226  
                            __ptext45 7FE2                              __ptext37 738C  
                            __ptext29 77A0                              __ptext70 7034  
                            __ptext62 7C6E                              __ptext54 7B7E  
                            __ptext46 8082                              __ptext38 8074  
                            __ptext71 742A                              __ptext63 7F94  
                            __ptext55 7BA6                              __ptext47 7590  
                            __ptext39 4A44                              __ptext80 7476  
                            __ptext72 7C96                              __ptext64 7FFA  
                            __ptext56 7102                              __ptext48 7818  
                            __ptext81 7D0E                              __ptext73 7CBE  
                            __ptext65 8010                              __ptext57 7BCE  
                            __ptext49 7854                              __ptext90 80EC  
                            __ptext82 6052                              __ptext74 7CE6  
                            __ptext66 803C                              __ptext58 7BF6  
                            __ptext91 6D86                              __ptext83 6554  
                            __ptext75 7F5C                              __ptext67 6A58  
                            __ptext59 7C1E                              __ptext92 6C4E  
                            __ptext84 7974                              __ptext76 7284  
                            __ptext68 8026                              __ptext93 7166  
                            __ptext85 7338                              __ptext77 6E96  
                            __ptext69 7F40                              __ptext94 6464  
                            __ptext86 7F78                              __ptext78 8090  
                            __ptext95 6B00                              __ptext87 72DE  
                            __ptext79 7E86                              __ptext96 0000  
                            __ptext88 6BA8                              __ptext97 37C4  
                            __ptext89 80E6                              __ptext98 4E78  
                            __ptext99 680E                       _secs_II_message 19F8  
                    _ringBufS_put_dma 69AE                    __end_of_m_protocol 2786  
                            _parse_ll 6F68                     ?_DMA1_DMASCNT_ISR 0042  
                         _IVTLOCKbits 3FD4             _ADCC_ADI_InterruptHandler 00A4  
                  ??_DMA1_DMASCNT_ISR 004E                              isa$xinst 0000  
                            _spi_link 0087                              _wdtdelay 72DE  
          __end_of_UART2_Transmit_ISR 7A66                              _vfprintf 6B00  
                 secs_gem_state@block 0008                     _UART1_is_rx_ready 80E0  
          __end_of_PWM8_LoadDutyValue 75D2                           _UART1_Write 76E2  
__end_of_INT1_DefaultInterruptHandler 8104          _INT1_DefaultInterruptHandler 8102  
                         _UART2_Write 7762                     _UART1_is_tx_ready 80D4  
                     r_protocol@retry 0052                     t_protocol@requeue 0009  
   __end_of_MyeaDogM_WriteStringAtPos 6166                         ??_Default_ISR 0048  
                  __end_of_r_protocol 30AE                           _uart1RxHead 0017  
                         _uart1TxHead 001A                           _uart2RxHead 0011  
                         _uart1RxTail 0016                           _NVMCON1bits 39E5  
                 _format_display_text 57F8                           _uart2TxHead 0014  
                         _uart1TxTail 0019                           _uart2RxTail 0010  
                         _uart2TxTail 0013                       _D@mconfig$F5156 0700  
                        _wait_lcd_set 80E6                    _EXT_INT_Initialize 742A  
__end_of_TMR6_DefaultInterruptHandler 754C          _TMR6_DefaultInterruptHandler 7506  
                  __end_of_t_protocol 37C4  __end_of_ADCC_DefaultInterruptHandler 8108  
        _ADCC_DefaultInterruptHandler 8106                              intlevel2 0000  
                   _send_lcd_cmd_long 7B06         __end_of_set_temp_display_help 8062  
          __end_of_eaDogM_WriteString 6C4E                 __end_of_mode_lamp_dim 7FFA  
             __end_of_NCO1_Initialize 7F5C                            _SPI1SCKPPS 3ADE  
                          _SPI1SDIPPS 3ADF             __end_of_UART1_is_rx_ready 80E6  
                          _UART1_Read 77DC                            _UART2_Read 77A0  
                  __end_of_update_lcd 6642             __end_of_UART1_is_tx_ready 80DA  
                   _UART2_is_rx_ready 80DA                _uart2TxBufferRemaining 0012  
                   _UART2_is_tx_ready 80CE                      _send_lcd_cmd_dma 7338  
               TMR5_ISR@CountCallBack 0003               __end_of_secs_II_message 20D4  
    __end_of_INT1_SetInterruptHandler 7CE6                       t_protocol@block 0093  
                    ??_DMA1_DMAOR_ISR 004E              _UART1_TxInterruptHandler 00A7  
                     t_protocol@retry 000A             __end_of_send_lcd_cmd_long 7B2E  
                 __end_of_Default_ISR 80FA        __end_of_PIN_MANAGER_Initialize 6B00  
                  __end_of_vterm_dump 5BCE               _eaDogM_WriteStringAtPos 7974  
                       _get_vterm_ptr 78CC  
