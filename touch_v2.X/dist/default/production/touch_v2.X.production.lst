

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Jan 14 06:51:42 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	idataBIGRAM,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	idataBANK0,global,class=CODE,space=0,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,space=0,delta=1,noexec
     9                           	psect	idataBANK2,global,class=CODE,space=0,delta=1,noexec
    10                           	psect	idataBANK6,global,class=CODE,space=0,delta=1,noexec
    11                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    23                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    24                           	psect	dataBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    25                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    28                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    29                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    30                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=3
    47                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    75                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    76                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    77                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    78                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    79                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1,inline
    80                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1,inline
    81                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1,inline
    82                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    83                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    84                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    85                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    86                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    87                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    88                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    89                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1
    90                           	psect	text60,global,reloc=2,class=CODE,space=0,delta=1
    91                           	psect	text61,global,reloc=2,class=CODE,space=0,delta=1
    92                           	psect	text62,global,reloc=2,class=CODE,space=0,delta=1
    93                           	psect	text63,global,reloc=2,class=CODE,space=0,delta=1
    94                           	psect	text64,global,reloc=2,class=CODE,space=0,delta=1
    95                           	psect	text65,global,reloc=2,class=CODE,space=0,delta=1
    96                           	psect	text66,global,reloc=2,class=CODE,space=0,delta=1
    97                           	psect	text67,global,reloc=2,class=CODE,space=0,delta=1
    98                           	psect	text68,global,reloc=2,class=CODE,space=0,delta=1
    99                           	psect	text69,global,reloc=2,class=CODE,space=0,delta=1
   100                           	psect	text70,global,reloc=2,class=CODE,space=0,delta=1
   101                           	psect	text71,global,reloc=2,class=CODE,space=0,delta=1
   102                           	psect	text72,global,reloc=2,class=CODE,space=0,delta=1
   103                           	psect	text73,global,reloc=2,class=CODE,space=0,delta=1
   104                           	psect	text74,global,reloc=2,class=CODE,space=0,delta=1
   105                           	psect	text75,global,reloc=2,class=CODE,space=0,delta=1
   106                           	psect	text76,global,reloc=2,class=CODE,space=0,delta=1
   107                           	psect	text77,global,reloc=2,class=CODE,space=0,delta=1
   108                           	psect	text78,global,reloc=2,class=CODE,space=0,delta=1
   109                           	psect	text79,global,reloc=2,class=CODE,space=0,delta=1
   110                           	psect	text80,global,reloc=2,class=CODE,space=0,delta=1
   111                           	psect	text81,global,reloc=2,class=CODE,space=0,delta=1
   112                           	psect	text82,global,reloc=2,class=CODE,space=0,delta=1
   113                           	psect	text83,global,reloc=2,class=CODE,space=0,delta=1
   114                           	psect	text84,global,reloc=2,class=CODE,space=0,delta=1
   115                           	psect	text85,global,reloc=2,class=CODE,space=0,delta=1
   116                           	psect	text86,global,reloc=2,class=CODE,space=0,delta=1
   117                           	psect	text87,global,reloc=2,class=CODE,space=0,delta=1
   118                           	psect	text88,global,reloc=2,class=CODE,space=0,delta=1
   119                           	psect	text89,global,reloc=2,class=CODE,space=0,delta=1
   120                           	psect	text90,global,reloc=2,class=CODE,space=0,delta=1
   121                           	psect	text91,global,reloc=2,class=CODE,space=0,delta=1
   122                           	psect	text92,global,reloc=2,class=CODE,space=0,delta=1,group=3
   123                           	psect	text93,global,reloc=2,class=CODE,space=0,delta=1,group=3
   124                           	psect	text94,global,reloc=2,class=CODE,space=0,delta=1,group=3
   125                           	psect	text95,global,reloc=2,class=CODE,space=0,delta=1,group=1
   126                           	psect	text96,global,reloc=2,class=CODE,space=0,delta=1,group=1
   127                           	psect	text97,global,reloc=2,class=CODE,space=0,delta=1,group=1
   128                           	psect	text98,global,reloc=2,class=CODE,space=0,delta=1,group=1
   129                           	psect	text99,global,reloc=2,class=CODE,space=0,delta=1,group=2
   130                           	psect	text100,global,reloc=2,class=CODE,space=0,delta=1,group=2
   131                           	psect	text101,global,reloc=2,class=CODE,space=0,delta=1,group=1
   132                           	psect	text102,global,reloc=2,class=CODE,space=0,delta=1,group=1
   133                           	psect	text103,global,reloc=2,class=CODE,space=0,delta=1,group=1
   134                           	psect	text104,global,reloc=2,class=CODE,space=0,delta=1,group=1
   135                           	psect	text105,global,reloc=2,class=CODE,space=0,delta=1,group=1
   136                           	psect	text106,global,reloc=2,class=CODE,space=0,delta=1,group=3
   137                           	psect	text107,global,reloc=2,class=CODE,space=0,delta=1,group=3
   138                           	psect	text108,global,reloc=2,class=CODE,space=0,delta=1,group=3
   139                           	psect	text109,global,reloc=2,class=CODE,space=0,delta=1,group=2
   140                           	psect	text110,global,reloc=2,class=CODE,space=0,delta=1,group=2
   141                           	psect	text111,global,reloc=2,class=CODE,space=0,delta=1,group=1
   142                           	psect	text112,global,reloc=2,class=CODE,space=0,delta=1,group=3
   143                           	psect	text113,global,reloc=2,class=CODE,space=0,delta=1
   144                           	psect	text114,global,reloc=2,class=CODE,space=0,delta=1
   145                           	psect	text115,global,reloc=2,class=CODE,space=0,delta=1
   146                           	psect	text116,global,reloc=2,class=CODE,space=0,delta=1,inline
   147                           	psect	text117,global,reloc=4,class=CODE,space=0,delta=1
   148                           	psect	text118,global,reloc=2,class=CODE,space=0,delta=1
   149                           	psect	text119,global,reloc=2,class=CODE,space=0,delta=1
   150                           	psect	text120,global,reloc=4,class=CODE,space=0,delta=1
   151                           	psect	text121,global,reloc=2,class=CODE,space=0,delta=1
   152                           	psect	text122,global,reloc=2,class=CODE,space=0,delta=1
   153                           	psect	text123,global,reloc=4,class=CODE,space=0,delta=1
   154                           	psect	text124,global,reloc=2,class=CODE,space=0,delta=1
   155                           	psect	text125,global,reloc=2,class=CODE,space=0,delta=1
   156                           	psect	text126,global,reloc=4,class=CODE,space=0,delta=1
   157                           	psect	text127,global,reloc=4,class=CODE,space=0,delta=1
   158                           	psect	text128,global,reloc=2,class=CODE,space=0,delta=1
   159                           	psect	text129,global,reloc=4,class=CODE,space=0,delta=1
   160                           	psect	text130,global,reloc=2,class=CODE,space=0,delta=1
   161                           	psect	text131,global,reloc=4,class=CODE,space=0,delta=1
   162                           	psect	text132,global,reloc=2,class=CODE,space=0,delta=1
   163                           	psect	text133,global,reloc=4,class=CODE,space=0,delta=1
   164                           	psect	text134,global,reloc=2,class=CODE,space=0,delta=1
   165                           	psect	text135,global,reloc=4,class=CODE,space=0,delta=1
   166                           	psect	text136,global,reloc=2,class=CODE,space=0,delta=1
   167                           	psect	text137,global,reloc=4,class=CODE,space=0,delta=1
   168                           	psect	text138,global,reloc=2,class=CODE,space=0,delta=1
   169                           	psect	text139,global,reloc=2,class=CODE,space=0,delta=1
   170                           	psect	text140,global,reloc=4,class=CODE,space=0,delta=1
   171                           	psect	text141,global,reloc=4,class=CODE,space=0,delta=1
   172                           	psect	text142,global,reloc=4,class=CODE,space=0,delta=1
   173                           	psect	text143,global,reloc=4,class=CODE,space=0,delta=1
   174                           	psect	text144,global,reloc=4,class=CODE,space=0,delta=1
   175                           	psect	text145,global,reloc=2,class=CODE,space=0,delta=1
   176                           	psect	text146,global,reloc=2,class=CODE,space=0,delta=1
   177                           	psect	text147,global,reloc=2,class=CODE,space=0,delta=1
   178                           	psect	ivt0x8,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
   179                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   180                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   181                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
   182                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   183                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   184   000000                     
   185                           ; Generated 13/12/2024 GMT
   186                           ; 
   187                           ; Copyright © 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
   188                           ; All rights reserved.
   189                           ; 
   190                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   191                           ; 
   192                           ; Redistribution and use in source and binary forms, with or without modification, are
   193                           ; permitted provided that the following conditions are met:
   194                           ; 
   195                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   196                           ;        conditions and the following disclaimer.
   197                           ; 
   198                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   199                           ;        of conditions and the following disclaimer in the documentation and/or other
   200                           ;        materials provided with the distribution. Publication is not required when
   201                           ;        this file is used in an embedded application.
   202                           ; 
   203                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   204                           ;        software without specific prior written permission.
   205                           ; 
   206                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   207                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   208                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   209                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   210                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   211                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   212                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   213                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   214                           ; 
   215                           ; 
   216                           ; Code-generator required, PIC18F57K42 Definitions
   217                           ; 
   218                           ; SFR Addresses
   219   003FE0                     bsr             equ	16352
   220   003FE9                     fsr0            equ	16361
   221   003FEA                     fsr0h           equ	16362
   222   003FE9                     fsr0l           equ	16361
   223   003FE1                     fsr1            equ	16353
   224   003FE2                     fsr1h           equ	16354
   225   003FE1                     fsr1l           equ	16353
   226   003FD9                     fsr2            equ	16345
   227   003FDA                     fsr2h           equ	16346
   228   003FD9                     fsr2l           equ	16345
   229   003FEF                     indf0           equ	16367
   230   003FE7                     indf1           equ	16359
   231   003FDF                     indf2           equ	16351
   232   003FD2                     intcon          equ	16338
   233   0039E5                     nvmcon          equ	14821
   234   003FF9                     pcl             equ	16377
   235   003FFA                     pclath          equ	16378
   236   003FFB                     pclatu          equ	16379
   237   003FEB                     plusw0          equ	16363
   238   003FE3                     plusw1          equ	16355
   239   003FDB                     plusw2          equ	16347
   240   003FED                     postdec0        equ	16365
   241   003FE5                     postdec1        equ	16357
   242   003FDD                     postdec2        equ	16349
   243   003FEE                     postinc0        equ	16366
   244   003FE6                     postinc1        equ	16358
   245   003FDE                     postinc2        equ	16350
   246   003FEC                     preinc0         equ	16364
   247   003FE4                     preinc1         equ	16356
   248   003FDC                     preinc2         equ	16348
   249   003FF3                     prod            equ	16371
   250   003FF4                     prodh           equ	16372
   251   003FF3                     prodl           equ	16371
   252   003FD8                     status          equ	16344
   253   003FF5                     tablat          equ	16373
   254   003FF6                     tblptr          equ	16374
   255   003FF7                     tblptrh         equ	16375
   256   003FF6                     tblptrl         equ	16374
   257   003FF8                     tblptru         equ	16376
   258   003FFD                     tosl            equ	16381
   259   003FE8                     wreg            equ	16360
   260   003880                     STATUS_CSHAD    equ	14464	;# 
   261   003881                     WREG_CSHAD      equ	14465	;# 
   262   003882                     BSR_CSHAD       equ	14466	;# 
   263   003883                     SHADCON         equ	14467	;# 
   264   003884                     STATUS_SHAD     equ	14468	;# 
   265   003885                     WREG_SHAD       equ	14469	;# 
   266   003886                     BSR_SHAD        equ	14470	;# 
   267   003887                     PCLATH_SHAD     equ	14471	;# 
   268   003888                     PCLATU_SHAD     equ	14472	;# 
   269   003889                     FSR0SH          equ	14473	;# 
   270   003889                     FSR0L_SHAD      equ	14473	;# 
   271   00388A                     FSR0H_SHAD      equ	14474	;# 
   272   00388B                     FSR1SH          equ	14475	;# 
   273   00388B                     FSR1L_SHAD      equ	14475	;# 
   274   00388C                     FSR1H_SHAD      equ	14476	;# 
   275   00388D                     FSR2SH          equ	14477	;# 
   276   00388D                     FSR2L_SHAD      equ	14477	;# 
   277   00388E                     FSR2H_SHAD      equ	14478	;# 
   278   00388F                     PRODSH          equ	14479	;# 
   279   00388F                     PRODL_SHAD      equ	14479	;# 
   280   003890                     PRODH_SHAD      equ	14480	;# 
   281   00389D                     IVTADL          equ	14493	;# 
   282   00389E                     IVTADH          equ	14494	;# 
   283   00389F                     IVTADU          equ	14495	;# 
   284   00395B                     WDTCON0         equ	14683	;# 
   285   00395C                     WDTCON1         equ	14684	;# 
   286   00395D                     WDTPSL          equ	14685	;# 
   287   00395E                     WDTPSH          equ	14686	;# 
   288   00395F                     WDTTMR          equ	14687	;# 
   289   003960                     CRCDATA         equ	14688	;# 
   290   003960                     CRCDATL         equ	14688	;# 
   291   003961                     CRCDATH         equ	14689	;# 
   292   003962                     CRCACC          equ	14690	;# 
   293   003962                     CRCACCL         equ	14690	;# 
   294   003963                     CRCACCH         equ	14691	;# 
   295   003964                     CRCSHFT         equ	14692	;# 
   296   003964                     CRCSHIFTL       equ	14692	;# 
   297   003965                     CRCSHIFTH       equ	14693	;# 
   298   003966                     CRCXOR          equ	14694	;# 
   299   003966                     CRCXORL         equ	14694	;# 
   300   003967                     CRCXORH         equ	14695	;# 
   301   003968                     CRCCON0         equ	14696	;# 
   302   003969                     CRCCON1         equ	14697	;# 
   303   003976                     SCANLADR        equ	14710	;# 
   304   003976                     SCANLADRL       equ	14710	;# 
   305   003977                     SCANLADRH       equ	14711	;# 
   306   003978                     SCANLADRU       equ	14712	;# 
   307   003979                     SCANHADR        equ	14713	;# 
   308   003979                     SCANHADRL       equ	14713	;# 
   309   00397A                     SCANHADRH       equ	14714	;# 
   310   00397B                     SCANHADRU       equ	14715	;# 
   311   00397C                     SCANCON0        equ	14716	;# 
   312   00397D                     SCANTRIG        equ	14717	;# 
   313   003980                     IPR0            equ	14720	;# 
   314   003981                     IPR1            equ	14721	;# 
   315   003982                     IPR2            equ	14722	;# 
   316   003983                     IPR3            equ	14723	;# 
   317   003984                     IPR4            equ	14724	;# 
   318   003985                     IPR5            equ	14725	;# 
   319   003986                     IPR6            equ	14726	;# 
   320   003987                     IPR7            equ	14727	;# 
   321   003988                     IPR8            equ	14728	;# 
   322   003989                     IPR9            equ	14729	;# 
   323   00398A                     IPR10           equ	14730	;# 
   324   003990                     PIE0            equ	14736	;# 
   325   003991                     PIE1            equ	14737	;# 
   326   003992                     PIE2            equ	14738	;# 
   327   003993                     PIE3            equ	14739	;# 
   328   003994                     PIE4            equ	14740	;# 
   329   003995                     PIE5            equ	14741	;# 
   330   003996                     PIE6            equ	14742	;# 
   331   003997                     PIE7            equ	14743	;# 
   332   003998                     PIE8            equ	14744	;# 
   333   003999                     PIE9            equ	14745	;# 
   334   00399A                     PIE10           equ	14746	;# 
   335   0039A0                     PIR0            equ	14752	;# 
   336   0039A1                     PIR1            equ	14753	;# 
   337   0039A2                     PIR2            equ	14754	;# 
   338   0039A3                     PIR3            equ	14755	;# 
   339   0039A4                     PIR4            equ	14756	;# 
   340   0039A5                     PIR5            equ	14757	;# 
   341   0039A6                     PIR6            equ	14758	;# 
   342   0039A7                     PIR7            equ	14759	;# 
   343   0039A8                     PIR8            equ	14760	;# 
   344   0039A9                     PIR9            equ	14761	;# 
   345   0039AA                     PIR10           equ	14762	;# 
   346   0039C0                     PMD0            equ	14784	;# 
   347   0039C1                     PMD1            equ	14785	;# 
   348   0039C2                     PMD2            equ	14786	;# 
   349   0039C3                     PMD3            equ	14787	;# 
   350   0039C4                     PMD4            equ	14788	;# 
   351   0039C5                     PMD5            equ	14789	;# 
   352   0039C6                     PMD6            equ	14790	;# 
   353   0039C7                     PMD7            equ	14791	;# 
   354   0039D0                     BORCON          equ	14800	;# 
   355   0039D1                     VREGCON         equ	14801	;# 
   356   0039D8                     CPUDOZE         equ	14808	;# 
   357   0039D9                     OSCCON1         equ	14809	;# 
   358   0039DA                     OSCCON2         equ	14810	;# 
   359   0039DB                     OSCCON3         equ	14811	;# 
   360   0039DC                     OSCSTAT         equ	14812	;# 
   361   0039DC                     OSCSTAT1        equ	14812	;# 
   362   0039DD                     OSCEN           equ	14813	;# 
   363   0039DE                     OSCTUNE         equ	14814	;# 
   364   0039DF                     OSCFRQ          equ	14815	;# 
   365   0039E0                     NVMADRL         equ	14816	;# 
   366   0039E1                     NVMADRH         equ	14817	;# 
   367   0039E3                     NVMDAT          equ	14819	;# 
   368   0039E5                     NVMCON1         equ	14821	;# 
   369   0039E6                     NVMCON2         equ	14822	;# 
   370   0039EF                     PRLOCK          equ	14831	;# 
   371   0039F1                     ISRPR           equ	14833	;# 
   372   0039F2                     MAINPR          equ	14834	;# 
   373   0039F3                     DMA1PR          equ	14835	;# 
   374   0039F4                     DMA2PR          equ	14836	;# 
   375   0039F7                     SCANPR          equ	14839	;# 
   376   003A00                     RA0PPS          equ	14848	;# 
   377   003A01                     RA1PPS          equ	14849	;# 
   378   003A02                     RA2PPS          equ	14850	;# 
   379   003A03                     RA3PPS          equ	14851	;# 
   380   003A04                     RA4PPS          equ	14852	;# 
   381   003A05                     RA5PPS          equ	14853	;# 
   382   003A06                     RA6PPS          equ	14854	;# 
   383   003A07                     RA7PPS          equ	14855	;# 
   384   003A08                     RB0PPS          equ	14856	;# 
   385   003A09                     RB1PPS          equ	14857	;# 
   386   003A0A                     RB2PPS          equ	14858	;# 
   387   003A0B                     RB3PPS          equ	14859	;# 
   388   003A0C                     RB4PPS          equ	14860	;# 
   389   003A0D                     RB5PPS          equ	14861	;# 
   390   003A0E                     RB6PPS          equ	14862	;# 
   391   003A0F                     RB7PPS          equ	14863	;# 
   392   003A10                     RC0PPS          equ	14864	;# 
   393   003A11                     RC1PPS          equ	14865	;# 
   394   003A12                     RC2PPS          equ	14866	;# 
   395   003A13                     RC3PPS          equ	14867	;# 
   396   003A14                     RC4PPS          equ	14868	;# 
   397   003A15                     RC5PPS          equ	14869	;# 
   398   003A16                     RC6PPS          equ	14870	;# 
   399   003A17                     RC7PPS          equ	14871	;# 
   400   003A18                     RD0PPS          equ	14872	;# 
   401   003A19                     RD1PPS          equ	14873	;# 
   402   003A1A                     RD2PPS          equ	14874	;# 
   403   003A1B                     RD3PPS          equ	14875	;# 
   404   003A1C                     RD4PPS          equ	14876	;# 
   405   003A1D                     RD5PPS          equ	14877	;# 
   406   003A1E                     RD6PPS          equ	14878	;# 
   407   003A1F                     RD7PPS          equ	14879	;# 
   408   003A20                     RE0PPS          equ	14880	;# 
   409   003A21                     RE1PPS          equ	14881	;# 
   410   003A22                     RE2PPS          equ	14882	;# 
   411   003A28                     RF0PPS          equ	14888	;# 
   412   003A29                     RF1PPS          equ	14889	;# 
   413   003A2A                     RF2PPS          equ	14890	;# 
   414   003A2B                     RF3PPS          equ	14891	;# 
   415   003A2C                     RF4PPS          equ	14892	;# 
   416   003A2D                     RF5PPS          equ	14893	;# 
   417   003A2E                     RF6PPS          equ	14894	;# 
   418   003A2F                     RF7PPS          equ	14895	;# 
   419   003A40                     ANSELA          equ	14912	;# 
   420   003A41                     WPUA            equ	14913	;# 
   421   003A42                     ODCONA          equ	14914	;# 
   422   003A43                     SLRCONA         equ	14915	;# 
   423   003A44                     INLVLA          equ	14916	;# 
   424   003A45                     IOCAP           equ	14917	;# 
   425   003A46                     IOCAN           equ	14918	;# 
   426   003A47                     IOCAF           equ	14919	;# 
   427   003A50                     ANSELB          equ	14928	;# 
   428   003A51                     WPUB            equ	14929	;# 
   429   003A52                     ODCONB          equ	14930	;# 
   430   003A53                     SLRCONB         equ	14931	;# 
   431   003A54                     INLVLB          equ	14932	;# 
   432   003A55                     IOCBP           equ	14933	;# 
   433   003A56                     IOCBN           equ	14934	;# 
   434   003A57                     IOCBF           equ	14935	;# 
   435   003A5A                     RB1I2C          equ	14938	;# 
   436   003A5B                     RB2I2C          equ	14939	;# 
   437   003A60                     ANSELC          equ	14944	;# 
   438   003A61                     WPUC            equ	14945	;# 
   439   003A62                     ODCONC          equ	14946	;# 
   440   003A63                     SLRCONC         equ	14947	;# 
   441   003A64                     INLVLC          equ	14948	;# 
   442   003A65                     IOCCP           equ	14949	;# 
   443   003A66                     IOCCN           equ	14950	;# 
   444   003A67                     IOCCF           equ	14951	;# 
   445   003A6A                     RC3I2C          equ	14954	;# 
   446   003A6B                     RC4I2C          equ	14955	;# 
   447   003A70                     ANSELD          equ	14960	;# 
   448   003A71                     WPUD            equ	14961	;# 
   449   003A72                     ODCOND          equ	14962	;# 
   450   003A73                     SLRCOND         equ	14963	;# 
   451   003A74                     INLVLD          equ	14964	;# 
   452   003A7A                     RD0I2C          equ	14970	;# 
   453   003A7B                     RD1I2C          equ	14971	;# 
   454   003A80                     ANSELE          equ	14976	;# 
   455   003A81                     WPUE            equ	14977	;# 
   456   003A82                     ODCONE          equ	14978	;# 
   457   003A83                     SLRCONE         equ	14979	;# 
   458   003A84                     INLVLE          equ	14980	;# 
   459   003A85                     IOCEP           equ	14981	;# 
   460   003A86                     IOCEN           equ	14982	;# 
   461   003A87                     IOCEF           equ	14983	;# 
   462   003A90                     ANSELF          equ	14992	;# 
   463   003A91                     WPUF            equ	14993	;# 
   464   003A92                     ODCONF          equ	14994	;# 
   465   003A93                     SLRCONF         equ	14995	;# 
   466   003A94                     INLVLF          equ	14996	;# 
   467   003ABF                     PPSLOCK         equ	15039	;# 
   468   003AC0                     INT0PPS         equ	15040	;# 
   469   003AC1                     INT1PPS         equ	15041	;# 
   470   003AC2                     INT2PPS         equ	15042	;# 
   471   003AC3                     T0CKIPPS        equ	15043	;# 
   472   003AC4                     T1CKIPPS        equ	15044	;# 
   473   003AC5                     T1GPPS          equ	15045	;# 
   474   003AC6                     T3CKIPPS        equ	15046	;# 
   475   003AC7                     T3GPPS          equ	15047	;# 
   476   003AC8                     T5CKIPPS        equ	15048	;# 
   477   003AC9                     T5GPPS          equ	15049	;# 
   478   003ACA                     T2INPPS         equ	15050	;# 
   479   003ACB                     T4INPPS         equ	15051	;# 
   480   003ACC                     T6INPPS         equ	15052	;# 
   481   003ACD                     CCP1PPS         equ	15053	;# 
   482   003ACE                     CCP2PPS         equ	15054	;# 
   483   003ACF                     CCP3PPS         equ	15055	;# 
   484   003AD0                     CCP4PPS         equ	15056	;# 
   485   003AD1                     SMT1WINPPS      equ	15057	;# 
   486   003AD2                     SMT1SIGPPS      equ	15058	;# 
   487   003AD3                     CWG1INPPS       equ	15059	;# 
   488   003AD4                     CWG2INPPS       equ	15060	;# 
   489   003AD5                     CWG3INPPS       equ	15061	;# 
   490   003AD6                     MD1CARLPPS      equ	15062	;# 
   491   003AD7                     MD1CARHPPS      equ	15063	;# 
   492   003AD8                     MD1SRCPPS       equ	15064	;# 
   493   003AD9                     CLCIN0PPS       equ	15065	;# 
   494   003ADA                     CLCIN1PPS       equ	15066	;# 
   495   003ADB                     CLCIN2PPS       equ	15067	;# 
   496   003ADC                     CLCIN3PPS       equ	15068	;# 
   497   003ADD                     ADACTPPS        equ	15069	;# 
   498   003ADE                     SPI1SCKPPS      equ	15070	;# 
   499   003ADF                     SPI1SDIPPS      equ	15071	;# 
   500   003AE0                     SPI1SSPPS       equ	15072	;# 
   501   003AE1                     I2C1SCLPPS      equ	15073	;# 
   502   003AE2                     I2C1SDAPPS      equ	15074	;# 
   503   003AE3                     I2C2SCLPPS      equ	15075	;# 
   504   003AE4                     I2C2SDAPPS      equ	15076	;# 
   505   003AE5                     U1RXPPS         equ	15077	;# 
   506   003AE6                     U1CTSPPS        equ	15078	;# 
   507   003AE8                     U2RXPPS         equ	15080	;# 
   508   003AE9                     U2CTSPPS        equ	15081	;# 
   509   003BC9                     DMA2BUF         equ	15305	;# 
   510   003BCA                     DMA2DCNT        equ	15306	;# 
   511   003BCA                     DMA2DCNTL       equ	15306	;# 
   512   003BCB                     DMA2DCNTH       equ	15307	;# 
   513   003BCC                     DMA2DPTR        equ	15308	;# 
   514   003BCC                     DMA2DPTRL       equ	15308	;# 
   515   003BCD                     DMA2DPTRH       equ	15309	;# 
   516   003BCE                     DMA2DSZ         equ	15310	;# 
   517   003BCE                     DMA2DSZL        equ	15310	;# 
   518   003BCF                     DMA2DSZH        equ	15311	;# 
   519   003BD0                     DMA2DSA         equ	15312	;# 
   520   003BD0                     DMA2DSAL        equ	15312	;# 
   521   003BD1                     DMA2DSAH        equ	15313	;# 
   522   003BD2                     DMA2SCNT        equ	15314	;# 
   523   003BD2                     DMA2SCNTL       equ	15314	;# 
   524   003BD3                     DMA2SCNTH       equ	15315	;# 
   525   003BD4                     DMA2SPTR        equ	15316	;# 
   526   003BD4                     DMA2SPTRL       equ	15316	;# 
   527   003BD5                     DMA2SPTRH       equ	15317	;# 
   528   003BD6                     DMA2SPTRU       equ	15318	;# 
   529   003BD7                     DMA2SSZ         equ	15319	;# 
   530   003BD7                     DMA2SSZL        equ	15319	;# 
   531   003BD8                     DMA2SSZH        equ	15320	;# 
   532   003BD9                     DMA2SSA         equ	15321	;# 
   533   003BD9                     DMA2SSAL        equ	15321	;# 
   534   003BDA                     DMA2SSAH        equ	15322	;# 
   535   003BDB                     DMA2SSAU        equ	15323	;# 
   536   003BDC                     DMA2CON0        equ	15324	;# 
   537   003BDD                     DMA2CON1        equ	15325	;# 
   538   003BDE                     DMA2AIRQ        equ	15326	;# 
   539   003BDF                     DMA2SIRQ        equ	15327	;# 
   540   003BE9                     DMA1BUF         equ	15337	;# 
   541   003BEA                     DMA1DCNT        equ	15338	;# 
   542   003BEA                     DMA1DCNTL       equ	15338	;# 
   543   003BEB                     DMA1DCNTH       equ	15339	;# 
   544   003BEC                     DMA1DPTR        equ	15340	;# 
   545   003BEC                     DMA1DPTRL       equ	15340	;# 
   546   003BED                     DMA1DPTRH       equ	15341	;# 
   547   003BEE                     DMA1DSZ         equ	15342	;# 
   548   003BEE                     DMA1DSZL        equ	15342	;# 
   549   003BEF                     DMA1DSZH        equ	15343	;# 
   550   003BF0                     DMA1DSA         equ	15344	;# 
   551   003BF0                     DMA1DSAL        equ	15344	;# 
   552   003BF1                     DMA1DSAH        equ	15345	;# 
   553   003BF2                     DMA1SCNT        equ	15346	;# 
   554   003BF2                     DMA1SCNTL       equ	15346	;# 
   555   003BF3                     DMA1SCNTH       equ	15347	;# 
   556   003BF4                     DMA1SPTR        equ	15348	;# 
   557   003BF4                     DMA1SPTRL       equ	15348	;# 
   558   003BF5                     DMA1SPTRH       equ	15349	;# 
   559   003BF6                     DMA1SPTRU       equ	15350	;# 
   560   003BF7                     DMA1SSZ         equ	15351	;# 
   561   003BF7                     DMA1SSZL        equ	15351	;# 
   562   003BF8                     DMA1SSZH        equ	15352	;# 
   563   003BF9                     DMA1SSA         equ	15353	;# 
   564   003BF9                     DMA1SSAL        equ	15353	;# 
   565   003BFA                     DMA1SSAH        equ	15354	;# 
   566   003BFB                     DMA1SSAU        equ	15355	;# 
   567   003BFC                     DMA1CON0        equ	15356	;# 
   568   003BFD                     DMA1CON1        equ	15357	;# 
   569   003BFE                     DMA1AIRQ        equ	15358	;# 
   570   003BFF                     DMA1SIRQ        equ	15359	;# 
   571   003C56                     CLC4CON         equ	15446	;# 
   572   003C57                     CLC4POL         equ	15447	;# 
   573   003C58                     CLC4SEL0        equ	15448	;# 
   574   003C59                     CLC4SEL1        equ	15449	;# 
   575   003C5A                     CLC4SEL2        equ	15450	;# 
   576   003C5B                     CLC4SEL3        equ	15451	;# 
   577   003C5C                     CLC4GLS0        equ	15452	;# 
   578   003C5D                     CLC4GLS1        equ	15453	;# 
   579   003C5E                     CLC4GLS2        equ	15454	;# 
   580   003C5F                     CLC4GLS3        equ	15455	;# 
   581   003C60                     CLC3CON         equ	15456	;# 
   582   003C61                     CLC3POL         equ	15457	;# 
   583   003C62                     CLC3SEL0        equ	15458	;# 
   584   003C63                     CLC3SEL1        equ	15459	;# 
   585   003C64                     CLC3SEL2        equ	15460	;# 
   586   003C65                     CLC3SEL3        equ	15461	;# 
   587   003C66                     CLC3GLS0        equ	15462	;# 
   588   003C67                     CLC3GLS1        equ	15463	;# 
   589   003C68                     CLC3GLS2        equ	15464	;# 
   590   003C69                     CLC3GLS3        equ	15465	;# 
   591   003C6A                     CLC2CON         equ	15466	;# 
   592   003C6B                     CLC2POL         equ	15467	;# 
   593   003C6C                     CLC2SEL0        equ	15468	;# 
   594   003C6D                     CLC2SEL1        equ	15469	;# 
   595   003C6E                     CLC2SEL2        equ	15470	;# 
   596   003C6F                     CLC2SEL3        equ	15471	;# 
   597   003C70                     CLC2GLS0        equ	15472	;# 
   598   003C71                     CLC2GLS1        equ	15473	;# 
   599   003C72                     CLC2GLS2        equ	15474	;# 
   600   003C73                     CLC2GLS3        equ	15475	;# 
   601   003C74                     CLC1CON         equ	15476	;# 
   602   003C75                     CLC1POL         equ	15477	;# 
   603   003C76                     CLC1SEL0        equ	15478	;# 
   604   003C77                     CLC1SEL1        equ	15479	;# 
   605   003C78                     CLC1SEL2        equ	15480	;# 
   606   003C79                     CLC1SEL3        equ	15481	;# 
   607   003C7A                     CLC1GLS0        equ	15482	;# 
   608   003C7B                     CLC1GLS1        equ	15483	;# 
   609   003C7C                     CLC1GLS2        equ	15484	;# 
   610   003C7D                     CLC1GLS3        equ	15485	;# 
   611   003C7E                     CLCDATA0        equ	15486	;# 
   612   003CE5                     CLKRCON         equ	15589	;# 
   613   003CE6                     CLKRCLK         equ	15590	;# 
   614   003CFA                     MD1CON0         equ	15610	;# 
   615   003CFB                     MD1CON1         equ	15611	;# 
   616   003CFC                     MD1SRC          equ	15612	;# 
   617   003CFD                     MD1CARL         equ	15613	;# 
   618   003CFE                     MD1CARH         equ	15614	;# 
   619   003D10                     SPI1RXB         equ	15632	;# 
   620   003D11                     SPI1TXB         equ	15633	;# 
   621   003D12                     SPI1TCNT        equ	15634	;# 
   622   003D12                     SPI1TCNTL       equ	15634	;# 
   623   003D13                     SPI1TCNTH       equ	15635	;# 
   624   003D14                     SPI1CON0        equ	15636	;# 
   625   003D15                     SPI1CON1        equ	15637	;# 
   626   003D16                     SPI1CON2        equ	15638	;# 
   627   003D17                     SPI1STATUS      equ	15639	;# 
   628   003D18                     SPI1TWIDTH      equ	15640	;# 
   629   003D19                     SPI1BAUD        equ	15641	;# 
   630   003D1A                     SPI1INTF        equ	15642	;# 
   631   003D1B                     SPI1INTE        equ	15643	;# 
   632   003D1C                     SPI1CLK         equ	15644	;# 
   633   003D54                     I2C2RXB         equ	15700	;# 
   634   003D55                     I2C2TXB         equ	15701	;# 
   635   003D56                     I2C2CNT         equ	15702	;# 
   636   003D57                     I2C2ADB0        equ	15703	;# 
   637   003D58                     I2C2ADB1        equ	15704	;# 
   638   003D59                     I2C2ADR0        equ	15705	;# 
   639   003D5A                     I2C2ADR1        equ	15706	;# 
   640   003D5B                     I2C2ADR2        equ	15707	;# 
   641   003D5C                     I2C2ADR3        equ	15708	;# 
   642   003D5D                     I2C2CON0        equ	15709	;# 
   643   003D5E                     I2C2CON1        equ	15710	;# 
   644   003D5F                     I2C2CON2        equ	15711	;# 
   645   003D60                     I2C2ERR         equ	15712	;# 
   646   003D61                     I2C2STAT0       equ	15713	;# 
   647   003D62                     I2C2STAT1       equ	15714	;# 
   648   003D63                     I2C2PIR         equ	15715	;# 
   649   003D64                     I2C2PIE         equ	15716	;# 
   650   003D65                     I2C2CLK         equ	15717	;# 
   651   003D66                     I2C2BTO         equ	15718	;# 
   652   003D6A                     I2C1RXB         equ	15722	;# 
   653   003D6B                     I2C1TXB         equ	15723	;# 
   654   003D6C                     I2C1CNT         equ	15724	;# 
   655   003D6D                     I2C1ADB0        equ	15725	;# 
   656   003D6E                     I2C1ADB1        equ	15726	;# 
   657   003D6F                     I2C1ADR0        equ	15727	;# 
   658   003D70                     I2C1ADR1        equ	15728	;# 
   659   003D71                     I2C1ADR2        equ	15729	;# 
   660   003D72                     I2C1ADR3        equ	15730	;# 
   661   003D73                     I2C1CON0        equ	15731	;# 
   662   003D74                     I2C1CON1        equ	15732	;# 
   663   003D75                     I2C1CON2        equ	15733	;# 
   664   003D76                     I2C1ERR         equ	15734	;# 
   665   003D77                     I2C1STAT0       equ	15735	;# 
   666   003D78                     I2C1STAT1       equ	15736	;# 
   667   003D79                     I2C1PIR         equ	15737	;# 
   668   003D7A                     I2C1PIE         equ	15738	;# 
   669   003D7B                     I2C1CLK         equ	15739	;# 
   670   003D7C                     I2C1BTO         equ	15740	;# 
   671   003DD0                     U2RXB           equ	15824	;# 
   672   003DD0                     U2RXBL          equ	15824	;# 
   673   003DD2                     U2TXB           equ	15826	;# 
   674   003DD2                     U2TXBL          equ	15826	;# 
   675   003DD4                     U2P1            equ	15828	;# 
   676   003DD4                     U2P1L           equ	15828	;# 
   677   003DD6                     U2P2            equ	15830	;# 
   678   003DD6                     U2P2L           equ	15830	;# 
   679   003DD8                     U2P3            equ	15832	;# 
   680   003DD8                     U2P3L           equ	15832	;# 
   681   003DDA                     U2CON0          equ	15834	;# 
   682   003DDB                     U2CON1          equ	15835	;# 
   683   003DDC                     U2CON2          equ	15836	;# 
   684   003DDD                     U2BRG           equ	15837	;# 
   685   003DDD                     U2BRGL          equ	15837	;# 
   686   003DDE                     U2BRGH          equ	15838	;# 
   687   003DDF                     U2FIFO          equ	15839	;# 
   688   003DE0                     U2UIR           equ	15840	;# 
   689   003DE1                     U2ERRIR         equ	15841	;# 
   690   003DE2                     U2ERRIE         equ	15842	;# 
   691   003DE8                     U1RXB           equ	15848	;# 
   692   003DE8                     U1RXBL          equ	15848	;# 
   693   003DE9                     U1RXCHK         equ	15849	;# 
   694   003DEA                     U1TXB           equ	15850	;# 
   695   003DEA                     U1TXBL          equ	15850	;# 
   696   003DEB                     U1TXCHK         equ	15851	;# 
   697   003DEC                     U1P1            equ	15852	;# 
   698   003DEC                     U1P1L           equ	15852	;# 
   699   003DED                     U1P1H           equ	15853	;# 
   700   003DEE                     U1P2            equ	15854	;# 
   701   003DEE                     U1P2L           equ	15854	;# 
   702   003DEF                     U1P2H           equ	15855	;# 
   703   003DF0                     U1P3            equ	15856	;# 
   704   003DF0                     U1P3L           equ	15856	;# 
   705   003DF1                     U1P3H           equ	15857	;# 
   706   003DF2                     U1CON0          equ	15858	;# 
   707   003DF3                     U1CON1          equ	15859	;# 
   708   003DF4                     U1CON2          equ	15860	;# 
   709   003DF5                     U1BRG           equ	15861	;# 
   710   003DF5                     U1BRGL          equ	15861	;# 
   711   003DF6                     U1BRGH          equ	15862	;# 
   712   003DF7                     U1FIFO          equ	15863	;# 
   713   003DF8                     U1UIR           equ	15864	;# 
   714   003DF9                     U1ERRIR         equ	15865	;# 
   715   003DFA                     U1ERRIE         equ	15866	;# 
   716   003E9C                     DAC1CON1        equ	16028	;# 
   717   003E9E                     DAC1CON0        equ	16030	;# 
   718   003EB8                     CM2CON0         equ	16056	;# 
   719   003EB9                     CM2CON1         equ	16057	;# 
   720   003EBA                     CM2NCH          equ	16058	;# 
   721   003EBB                     CM2PCH          equ	16059	;# 
   722   003EBC                     CM1CON0         equ	16060	;# 
   723   003EBD                     CM1CON1         equ	16061	;# 
   724   003EBE                     CM1NCH          equ	16062	;# 
   725   003EBF                     CM1PCH          equ	16063	;# 
   726   003EC0                     CMOUT           equ	16064	;# 
   727   003EC1                     FVRCON          equ	16065	;# 
   728   003EC3                     ZCDCON          equ	16067	;# 
   729   003EC9                     HLVDCON0        equ	16073	;# 
   730   003ECA                     HLVDCON1        equ	16074	;# 
   731   003ED7                     ADCP            equ	16087	;# 
   732   003EDE                     ADLTH           equ	16094	;# 
   733   003EDE                     ADLTHL          equ	16094	;# 
   734   003EDF                     ADLTHH          equ	16095	;# 
   735   003EE0                     ADUTH           equ	16096	;# 
   736   003EE0                     ADUTHL          equ	16096	;# 
   737   003EE1                     ADUTHH          equ	16097	;# 
   738   003EE2                     ADERR           equ	16098	;# 
   739   003EE2                     ADERRL          equ	16098	;# 
   740   003EE3                     ADERRH          equ	16099	;# 
   741   003EE4                     ADSTPT          equ	16100	;# 
   742   003EE4                     ADSTPTL         equ	16100	;# 
   743   003EE5                     ADSTPTH         equ	16101	;# 
   744   003EE6                     ADFLTR          equ	16102	;# 
   745   003EE6                     ADFLTRL         equ	16102	;# 
   746   003EE7                     ADFLTRH         equ	16103	;# 
   747   003EE8                     ADACC           equ	16104	;# 
   748   003EE8                     ADACCL          equ	16104	;# 
   749   003EE9                     ADACCH          equ	16105	;# 
   750   003EEA                     ADACCU          equ	16106	;# 
   751   003EEB                     ADCNT           equ	16107	;# 
   752   003EEC                     ADRPT           equ	16108	;# 
   753   003EED                     ADPREV          equ	16109	;# 
   754   003EED                     ADPREVL         equ	16109	;# 
   755   003EEE                     ADPREVH         equ	16110	;# 
   756   003EEF                     ADRES           equ	16111	;# 
   757   003EEF                     ADRESL          equ	16111	;# 
   758   003EF0                     ADRESH          equ	16112	;# 
   759   003EF1                     ADPCH           equ	16113	;# 
   760   003EF3                     ADACQ           equ	16115	;# 
   761   003EF3                     ADACQL          equ	16115	;# 
   762   003EF4                     ADACQH          equ	16116	;# 
   763   003EF5                     ADCAP           equ	16117	;# 
   764   003EF6                     ADPRE           equ	16118	;# 
   765   003EF6                     ADPREL          equ	16118	;# 
   766   003EF7                     ADPREH          equ	16119	;# 
   767   003EF8                     ADCON0          equ	16120	;# 
   768   003EF9                     ADCON1          equ	16121	;# 
   769   003EFA                     ADCON2          equ	16122	;# 
   770   003EFB                     ADCON3          equ	16123	;# 
   771   003EFC                     ADSTAT          equ	16124	;# 
   772   003EFD                     ADREF           equ	16125	;# 
   773   003EFE                     ADACT           equ	16126	;# 
   774   003EFF                     ADCLK           equ	16127	;# 
   775   003F12                     SMT1TMR         equ	16146	;# 
   776   003F12                     SMT1TMRL        equ	16146	;# 
   777   003F13                     SMT1TMRH        equ	16147	;# 
   778   003F14                     SMT1TMRU        equ	16148	;# 
   779   003F15                     SMT1CPR         equ	16149	;# 
   780   003F15                     SMT1CPRL        equ	16149	;# 
   781   003F16                     SMT1CPRH        equ	16150	;# 
   782   003F17                     SMT1CPRU        equ	16151	;# 
   783   003F18                     SMT1CPW         equ	16152	;# 
   784   003F18                     SMT1CPWL        equ	16152	;# 
   785   003F19                     SMT1CPWH        equ	16153	;# 
   786   003F1A                     SMT1CPWU        equ	16154	;# 
   787   003F1B                     SMT1PR          equ	16155	;# 
   788   003F1B                     SMT1PRL         equ	16155	;# 
   789   003F1C                     SMT1PRH         equ	16156	;# 
   790   003F1D                     SMT1PRU         equ	16157	;# 
   791   003F1E                     SMT1CON0        equ	16158	;# 
   792   003F1F                     SMT1CON1        equ	16159	;# 
   793   003F20                     SMT1STAT        equ	16160	;# 
   794   003F21                     SMT1CLK         equ	16161	;# 
   795   003F22                     SMT1SIG         equ	16162	;# 
   796   003F23                     SMT1WIN         equ	16163	;# 
   797   003F38                     NCO1ACC         equ	16184	;# 
   798   003F38                     NCO1ACCL        equ	16184	;# 
   799   003F39                     NCO1ACCH        equ	16185	;# 
   800   003F3A                     NCO1ACCU        equ	16186	;# 
   801   003F3B                     NCO1INC         equ	16187	;# 
   802   003F3B                     NCO1INCL        equ	16187	;# 
   803   003F3C                     NCO1INCH        equ	16188	;# 
   804   003F3D                     NCO1INCU        equ	16189	;# 
   805   003F3E                     NCO1CON         equ	16190	;# 
   806   003F3F                     NCO1CLK         equ	16191	;# 
   807   003F40                     CWG3CLK         equ	16192	;# 
   808   003F40                     CWG3CLKCON      equ	16192	;# 
   809   003F41                     CWG3ISM         equ	16193	;# 
   810   003F41                     CWG3DAT         equ	16193	;# 
   811   003F42                     CWG3DBR         equ	16194	;# 
   812   003F43                     CWG3DBF         equ	16195	;# 
   813   003F44                     CWG3CON0        equ	16196	;# 
   814   003F45                     CWG3CON1        equ	16197	;# 
   815   003F46                     CWG3AS0         equ	16198	;# 
   816   003F47                     CWG3AS1         equ	16199	;# 
   817   003F48                     CWG3STR         equ	16200	;# 
   818   003F49                     CWG2CLK         equ	16201	;# 
   819   003F49                     CWG2CLKCON      equ	16201	;# 
   820   003F4A                     CWG2ISM         equ	16202	;# 
   821   003F4A                     CWG2DAT         equ	16202	;# 
   822   003F4B                     CWG2DBR         equ	16203	;# 
   823   003F4C                     CWG2DBF         equ	16204	;# 
   824   003F4D                     CWG2CON0        equ	16205	;# 
   825   003F4E                     CWG2CON1        equ	16206	;# 
   826   003F4F                     CWG2AS0         equ	16207	;# 
   827   003F50                     CWG2AS1         equ	16208	;# 
   828   003F51                     CWG2STR         equ	16209	;# 
   829   003F52                     CWG1CLK         equ	16210	;# 
   830   003F52                     CWG1CLKCON      equ	16210	;# 
   831   003F53                     CWG1ISM         equ	16211	;# 
   832   003F53                     CWG1DAT         equ	16211	;# 
   833   003F54                     CWG1DBR         equ	16212	;# 
   834   003F55                     CWG1DBF         equ	16213	;# 
   835   003F56                     CWG1CON0        equ	16214	;# 
   836   003F57                     CWG1CON1        equ	16215	;# 
   837   003F58                     CWG1AS0         equ	16216	;# 
   838   003F59                     CWG1AS1         equ	16217	;# 
   839   003F5A                     CWG1STR         equ	16218	;# 
   840   003F5E                     CCPTMRS0        equ	16222	;# 
   841   003F5F                     CCPTMRS1        equ	16223	;# 
   842   003F60                     PWM8DC          equ	16224	;# 
   843   003F60                     PWM8DCL         equ	16224	;# 
   844   003F61                     PWM8DCH         equ	16225	;# 
   845   003F62                     PWM8CON         equ	16226	;# 
   846   003F64                     PWM7DC          equ	16228	;# 
   847   003F64                     PWM7DCL         equ	16228	;# 
   848   003F65                     PWM7DCH         equ	16229	;# 
   849   003F66                     PWM7CON         equ	16230	;# 
   850   003F68                     PWM6DC          equ	16232	;# 
   851   003F68                     PWM6DCL         equ	16232	;# 
   852   003F69                     PWM6DCH         equ	16233	;# 
   853   003F6A                     PWM6CON         equ	16234	;# 
   854   003F6C                     PWM5DC          equ	16236	;# 
   855   003F6C                     PWM5DCL         equ	16236	;# 
   856   003F6D                     PWM5DCH         equ	16237	;# 
   857   003F6E                     PWM5CON         equ	16238	;# 
   858   003F70                     CCPR4           equ	16240	;# 
   859   003F70                     CCPR4L          equ	16240	;# 
   860   003F71                     CCPR4H          equ	16241	;# 
   861   003F72                     CCP4CON         equ	16242	;# 
   862   003F73                     CCP4CAP         equ	16243	;# 
   863   003F74                     CCPR3           equ	16244	;# 
   864   003F74                     CCPR3L          equ	16244	;# 
   865   003F75                     CCPR3H          equ	16245	;# 
   866   003F76                     CCP3CON         equ	16246	;# 
   867   003F77                     CCP3CAP         equ	16247	;# 
   868   003F78                     CCPR2           equ	16248	;# 
   869   003F78                     CCPR2L          equ	16248	;# 
   870   003F79                     CCPR2H          equ	16249	;# 
   871   003F7A                     CCP2CON         equ	16250	;# 
   872   003F7B                     CCP2CAP         equ	16251	;# 
   873   003F7C                     CCPR1           equ	16252	;# 
   874   003F7C                     CCPR1L          equ	16252	;# 
   875   003F7D                     CCPR1H          equ	16253	;# 
   876   003F7E                     CCP1CON         equ	16254	;# 
   877   003F7F                     CCP1CAP         equ	16255	;# 
   878   003F92                     T6TMR           equ	16274	;# 
   879   003F92                     TMR6            equ	16274	;# 
   880   003F93                     T6PR            equ	16275	;# 
   881   003F93                     PR6             equ	16275	;# 
   882   003F94                     T6CON           equ	16276	;# 
   883   003F95                     T6HLT           equ	16277	;# 
   884   003F96                     T6CLKCON        equ	16278	;# 
   885   003F96                     T6CLK           equ	16278	;# 
   886   003F97                     T6RST           equ	16279	;# 
   887   003F98                     TMR5            equ	16280	;# 
   888   003F98                     TMR5L           equ	16280	;# 
   889   003F99                     TMR5H           equ	16281	;# 
   890   003F9A                     T5CON           equ	16282	;# 
   891   003F9A                     TMR5CON         equ	16282	;# 
   892   003F9B                     T5GCON          equ	16283	;# 
   893   003F9B                     TMR5GCON        equ	16283	;# 
   894   003F9C                     T5GATE          equ	16284	;# 
   895   003F9C                     TMR5GATE        equ	16284	;# 
   896   003F9D                     T5CLK           equ	16285	;# 
   897   003F9D                     TMR5CLK         equ	16285	;# 
   898   003F9D                     PR5             equ	16285	;# 
   899   003F9E                     T4TMR           equ	16286	;# 
   900   003F9E                     TMR4            equ	16286	;# 
   901   003F9F                     T4PR            equ	16287	;# 
   902   003F9F                     PR4             equ	16287	;# 
   903   003FA0                     T4CON           equ	16288	;# 
   904   003FA1                     T4HLT           equ	16289	;# 
   905   003FA2                     T4CLKCON        equ	16290	;# 
   906   003FA2                     T4CLK           equ	16290	;# 
   907   003FA3                     T4RST           equ	16291	;# 
   908   003FA4                     TMR3            equ	16292	;# 
   909   003FA4                     TMR3L           equ	16292	;# 
   910   003FA5                     TMR3H           equ	16293	;# 
   911   003FA6                     T3CON           equ	16294	;# 
   912   003FA6                     TMR3CON         equ	16294	;# 
   913   003FA7                     T3GCON          equ	16295	;# 
   914   003FA7                     TMR3GCON        equ	16295	;# 
   915   003FA8                     T3GATE          equ	16296	;# 
   916   003FA8                     TMR3GATE        equ	16296	;# 
   917   003FA9                     T3CLK           equ	16297	;# 
   918   003FA9                     TMR3CLK         equ	16297	;# 
   919   003FA9                     PR3             equ	16297	;# 
   920   003FAA                     T2TMR           equ	16298	;# 
   921   003FAA                     TMR2            equ	16298	;# 
   922   003FAB                     T2PR            equ	16299	;# 
   923   003FAB                     PR2             equ	16299	;# 
   924   003FAC                     T2CON           equ	16300	;# 
   925   003FAD                     T2HLT           equ	16301	;# 
   926   003FAE                     T2CLKCON        equ	16302	;# 
   927   003FAE                     T2CLK           equ	16302	;# 
   928   003FAF                     T2RST           equ	16303	;# 
   929   003FB0                     TMR1            equ	16304	;# 
   930   003FB0                     TMR1L           equ	16304	;# 
   931   003FB1                     TMR1H           equ	16305	;# 
   932   003FB2                     T1CON           equ	16306	;# 
   933   003FB2                     TMR1CON         equ	16306	;# 
   934   003FB3                     T1GCON          equ	16307	;# 
   935   003FB3                     TMR1GCON        equ	16307	;# 
   936   003FB4                     T1GATE          equ	16308	;# 
   937   003FB4                     TMR1GATE        equ	16308	;# 
   938   003FB5                     T1CLK           equ	16309	;# 
   939   003FB5                     TMR1CLK         equ	16309	;# 
   940   003FB5                     PR1             equ	16309	;# 
   941   003FB6                     TMR0L           equ	16310	;# 
   942   003FB6                     TMR0            equ	16310	;# 
   943   003FB7                     TMR0H           equ	16311	;# 
   944   003FB7                     PR0             equ	16311	;# 
   945   003FB8                     T0CON0          equ	16312	;# 
   946   003FB9                     T0CON1          equ	16313	;# 
   947   003FBA                     LATA            equ	16314	;# 
   948   003FBB                     LATB            equ	16315	;# 
   949   003FBC                     LATC            equ	16316	;# 
   950   003FBD                     LATD            equ	16317	;# 
   951   003FBE                     LATE            equ	16318	;# 
   952   003FBF                     LATF            equ	16319	;# 
   953   003FC2                     TRISA           equ	16322	;# 
   954   003FC3                     TRISB           equ	16323	;# 
   955   003FC4                     TRISC           equ	16324	;# 
   956   003FC5                     TRISD           equ	16325	;# 
   957   003FC6                     TRISE           equ	16326	;# 
   958   003FC7                     TRISF           equ	16327	;# 
   959   003FCA                     PORTA           equ	16330	;# 
   960   003FCB                     PORTB           equ	16331	;# 
   961   003FCC                     PORTC           equ	16332	;# 
   962   003FCD                     PORTD           equ	16333	;# 
   963   003FCE                     PORTE           equ	16334	;# 
   964   003FCF                     PORTF           equ	16335	;# 
   965   003FD2                     INTCON0         equ	16338	;# 
   966   003FD3                     INTCON1         equ	16339	;# 
   967   003FD4                     IVTLOCK         equ	16340	;# 
   968   003FD5                     IVTBASE         equ	16341	;# 
   969   003FD5                     IVTBASEL        equ	16341	;# 
   970   003FD6                     IVTBASEH        equ	16342	;# 
   971   003FD7                     IVTBASEU        equ	16343	;# 
   972   003FD8                     STATUS          equ	16344	;# 
   973   003FD9                     FSR2            equ	16345	;# 
   974   003FD9                     FSR2L           equ	16345	;# 
   975   003FDA                     FSR2H           equ	16346	;# 
   976   003FDB                     PLUSW2          equ	16347	;# 
   977   003FDC                     PREINC2         equ	16348	;# 
   978   003FDD                     POSTDEC2        equ	16349	;# 
   979   003FDE                     POSTINC2        equ	16350	;# 
   980   003FDF                     INDF2           equ	16351	;# 
   981   003FE0                     BSR             equ	16352	;# 
   982   003FE1                     FSR1            equ	16353	;# 
   983   003FE1                     FSR1L           equ	16353	;# 
   984   003FE2                     FSR1H           equ	16354	;# 
   985   003FE3                     PLUSW1          equ	16355	;# 
   986   003FE4                     PREINC1         equ	16356	;# 
   987   003FE5                     POSTDEC1        equ	16357	;# 
   988   003FE6                     POSTINC1        equ	16358	;# 
   989   003FE7                     INDF1           equ	16359	;# 
   990   003FE8                     WREG            equ	16360	;# 
   991   003FE9                     FSR0            equ	16361	;# 
   992   003FE9                     FSR0L           equ	16361	;# 
   993   003FEA                     FSR0H           equ	16362	;# 
   994   003FEB                     PLUSW0          equ	16363	;# 
   995   003FEC                     PREINC0         equ	16364	;# 
   996   003FED                     POSTDEC0        equ	16365	;# 
   997   003FEE                     POSTINC0        equ	16366	;# 
   998   003FEF                     INDF0           equ	16367	;# 
   999   003FF0                     PCON0           equ	16368	;# 
  1000   003FF1                     PCON1           equ	16369	;# 
  1001   003FF3                     PROD            equ	16371	;# 
  1002   003FF3                     PRODL           equ	16371	;# 
  1003   003FF4                     PRODH           equ	16372	;# 
  1004   003FF5                     TABLAT          equ	16373	;# 
  1005   003FF6                     TBLPTR          equ	16374	;# 
  1006   003FF6                     TBLPTRL         equ	16374	;# 
  1007   003FF7                     TBLPTRH         equ	16375	;# 
  1008   003FF8                     TBLPTRU         equ	16376	;# 
  1009   003FF9                     PCLAT           equ	16377	;# 
  1010   003FF9                     PCL             equ	16377	;# 
  1011   003FFA                     PCLATH          equ	16378	;# 
  1012   003FFB                     PCLATU          equ	16379	;# 
  1013   003FFC                     STKPTR          equ	16380	;# 
  1014   003FFD                     TOS             equ	16381	;# 
  1015   003FFD                     TOSL            equ	16381	;# 
  1016   003FFE                     TOSH            equ	16382	;# 
  1017   003FFF                     TOSU            equ	16383	;# 
  1018   003880                     STATUS_CSHAD    equ	14464	;# 
  1019   003881                     WREG_CSHAD      equ	14465	;# 
  1020   003882                     BSR_CSHAD       equ	14466	;# 
  1021   003883                     SHADCON         equ	14467	;# 
  1022   003884                     STATUS_SHAD     equ	14468	;# 
  1023   003885                     WREG_SHAD       equ	14469	;# 
  1024   003886                     BSR_SHAD        equ	14470	;# 
  1025   003887                     PCLATH_SHAD     equ	14471	;# 
  1026   003888                     PCLATU_SHAD     equ	14472	;# 
  1027   003889                     FSR0SH          equ	14473	;# 
  1028   003889                     FSR0L_SHAD      equ	14473	;# 
  1029   00388A                     FSR0H_SHAD      equ	14474	;# 
  1030   00388B                     FSR1SH          equ	14475	;# 
  1031   00388B                     FSR1L_SHAD      equ	14475	;# 
  1032   00388C                     FSR1H_SHAD      equ	14476	;# 
  1033   00388D                     FSR2SH          equ	14477	;# 
  1034   00388D                     FSR2L_SHAD      equ	14477	;# 
  1035   00388E                     FSR2H_SHAD      equ	14478	;# 
  1036   00388F                     PRODSH          equ	14479	;# 
  1037   00388F                     PRODL_SHAD      equ	14479	;# 
  1038   003890                     PRODH_SHAD      equ	14480	;# 
  1039   00389D                     IVTADL          equ	14493	;# 
  1040   00389E                     IVTADH          equ	14494	;# 
  1041   00389F                     IVTADU          equ	14495	;# 
  1042   00395B                     WDTCON0         equ	14683	;# 
  1043   00395C                     WDTCON1         equ	14684	;# 
  1044   00395D                     WDTPSL          equ	14685	;# 
  1045   00395E                     WDTPSH          equ	14686	;# 
  1046   00395F                     WDTTMR          equ	14687	;# 
  1047   003960                     CRCDATA         equ	14688	;# 
  1048   003960                     CRCDATL         equ	14688	;# 
  1049   003961                     CRCDATH         equ	14689	;# 
  1050   003962                     CRCACC          equ	14690	;# 
  1051   003962                     CRCACCL         equ	14690	;# 
  1052   003963                     CRCACCH         equ	14691	;# 
  1053   003964                     CRCSHFT         equ	14692	;# 
  1054   003964                     CRCSHIFTL       equ	14692	;# 
  1055   003965                     CRCSHIFTH       equ	14693	;# 
  1056   003966                     CRCXOR          equ	14694	;# 
  1057   003966                     CRCXORL         equ	14694	;# 
  1058   003967                     CRCXORH         equ	14695	;# 
  1059   003968                     CRCCON0         equ	14696	;# 
  1060   003969                     CRCCON1         equ	14697	;# 
  1061   003976                     SCANLADR        equ	14710	;# 
  1062   003976                     SCANLADRL       equ	14710	;# 
  1063   003977                     SCANLADRH       equ	14711	;# 
  1064   003978                     SCANLADRU       equ	14712	;# 
  1065   003979                     SCANHADR        equ	14713	;# 
  1066   003979                     SCANHADRL       equ	14713	;# 
  1067   00397A                     SCANHADRH       equ	14714	;# 
  1068   00397B                     SCANHADRU       equ	14715	;# 
  1069   00397C                     SCANCON0        equ	14716	;# 
  1070   00397D                     SCANTRIG        equ	14717	;# 
  1071   003980                     IPR0            equ	14720	;# 
  1072   003981                     IPR1            equ	14721	;# 
  1073   003982                     IPR2            equ	14722	;# 
  1074   003983                     IPR3            equ	14723	;# 
  1075   003984                     IPR4            equ	14724	;# 
  1076   003985                     IPR5            equ	14725	;# 
  1077   003986                     IPR6            equ	14726	;# 
  1078   003987                     IPR7            equ	14727	;# 
  1079   003988                     IPR8            equ	14728	;# 
  1080   003989                     IPR9            equ	14729	;# 
  1081   00398A                     IPR10           equ	14730	;# 
  1082   003990                     PIE0            equ	14736	;# 
  1083   003991                     PIE1            equ	14737	;# 
  1084   003992                     PIE2            equ	14738	;# 
  1085   003993                     PIE3            equ	14739	;# 
  1086   003994                     PIE4            equ	14740	;# 
  1087   003995                     PIE5            equ	14741	;# 
  1088   003996                     PIE6            equ	14742	;# 
  1089   003997                     PIE7            equ	14743	;# 
  1090   003998                     PIE8            equ	14744	;# 
  1091   003999                     PIE9            equ	14745	;# 
  1092   00399A                     PIE10           equ	14746	;# 
  1093   0039A0                     PIR0            equ	14752	;# 
  1094   0039A1                     PIR1            equ	14753	;# 
  1095   0039A2                     PIR2            equ	14754	;# 
  1096   0039A3                     PIR3            equ	14755	;# 
  1097   0039A4                     PIR4            equ	14756	;# 
  1098   0039A5                     PIR5            equ	14757	;# 
  1099   0039A6                     PIR6            equ	14758	;# 
  1100   0039A7                     PIR7            equ	14759	;# 
  1101   0039A8                     PIR8            equ	14760	;# 
  1102   0039A9                     PIR9            equ	14761	;# 
  1103   0039AA                     PIR10           equ	14762	;# 
  1104   0039C0                     PMD0            equ	14784	;# 
  1105   0039C1                     PMD1            equ	14785	;# 
  1106   0039C2                     PMD2            equ	14786	;# 
  1107   0039C3                     PMD3            equ	14787	;# 
  1108   0039C4                     PMD4            equ	14788	;# 
  1109   0039C5                     PMD5            equ	14789	;# 
  1110   0039C6                     PMD6            equ	14790	;# 
  1111   0039C7                     PMD7            equ	14791	;# 
  1112   0039D0                     BORCON          equ	14800	;# 
  1113   0039D1                     VREGCON         equ	14801	;# 
  1114   0039D8                     CPUDOZE         equ	14808	;# 
  1115   0039D9                     OSCCON1         equ	14809	;# 
  1116   0039DA                     OSCCON2         equ	14810	;# 
  1117   0039DB                     OSCCON3         equ	14811	;# 
  1118   0039DC                     OSCSTAT         equ	14812	;# 
  1119   0039DC                     OSCSTAT1        equ	14812	;# 
  1120   0039DD                     OSCEN           equ	14813	;# 
  1121   0039DE                     OSCTUNE         equ	14814	;# 
  1122   0039DF                     OSCFRQ          equ	14815	;# 
  1123   0039E0                     NVMADRL         equ	14816	;# 
  1124   0039E1                     NVMADRH         equ	14817	;# 
  1125   0039E3                     NVMDAT          equ	14819	;# 
  1126   0039E5                     NVMCON1         equ	14821	;# 
  1127   0039E6                     NVMCON2         equ	14822	;# 
  1128   0039EF                     PRLOCK          equ	14831	;# 
  1129   0039F1                     ISRPR           equ	14833	;# 
  1130   0039F2                     MAINPR          equ	14834	;# 
  1131   0039F3                     DMA1PR          equ	14835	;# 
  1132   0039F4                     DMA2PR          equ	14836	;# 
  1133   0039F7                     SCANPR          equ	14839	;# 
  1134   003A00                     RA0PPS          equ	14848	;# 
  1135   003A01                     RA1PPS          equ	14849	;# 
  1136   003A02                     RA2PPS          equ	14850	;# 
  1137   003A03                     RA3PPS          equ	14851	;# 
  1138   003A04                     RA4PPS          equ	14852	;# 
  1139   003A05                     RA5PPS          equ	14853	;# 
  1140   003A06                     RA6PPS          equ	14854	;# 
  1141   003A07                     RA7PPS          equ	14855	;# 
  1142   003A08                     RB0PPS          equ	14856	;# 
  1143   003A09                     RB1PPS          equ	14857	;# 
  1144   003A0A                     RB2PPS          equ	14858	;# 
  1145   003A0B                     RB3PPS          equ	14859	;# 
  1146   003A0C                     RB4PPS          equ	14860	;# 
  1147   003A0D                     RB5PPS          equ	14861	;# 
  1148   003A0E                     RB6PPS          equ	14862	;# 
  1149   003A0F                     RB7PPS          equ	14863	;# 
  1150   003A10                     RC0PPS          equ	14864	;# 
  1151   003A11                     RC1PPS          equ	14865	;# 
  1152   003A12                     RC2PPS          equ	14866	;# 
  1153   003A13                     RC3PPS          equ	14867	;# 
  1154   003A14                     RC4PPS          equ	14868	;# 
  1155   003A15                     RC5PPS          equ	14869	;# 
  1156   003A16                     RC6PPS          equ	14870	;# 
  1157   003A17                     RC7PPS          equ	14871	;# 
  1158   003A18                     RD0PPS          equ	14872	;# 
  1159   003A19                     RD1PPS          equ	14873	;# 
  1160   003A1A                     RD2PPS          equ	14874	;# 
  1161   003A1B                     RD3PPS          equ	14875	;# 
  1162   003A1C                     RD4PPS          equ	14876	;# 
  1163   003A1D                     RD5PPS          equ	14877	;# 
  1164   003A1E                     RD6PPS          equ	14878	;# 
  1165   003A1F                     RD7PPS          equ	14879	;# 
  1166   003A20                     RE0PPS          equ	14880	;# 
  1167   003A21                     RE1PPS          equ	14881	;# 
  1168   003A22                     RE2PPS          equ	14882	;# 
  1169   003A28                     RF0PPS          equ	14888	;# 
  1170   003A29                     RF1PPS          equ	14889	;# 
  1171   003A2A                     RF2PPS          equ	14890	;# 
  1172   003A2B                     RF3PPS          equ	14891	;# 
  1173   003A2C                     RF4PPS          equ	14892	;# 
  1174   003A2D                     RF5PPS          equ	14893	;# 
  1175   003A2E                     RF6PPS          equ	14894	;# 
  1176   003A2F                     RF7PPS          equ	14895	;# 
  1177   003A40                     ANSELA          equ	14912	;# 
  1178   003A41                     WPUA            equ	14913	;# 
  1179   003A42                     ODCONA          equ	14914	;# 
  1180   003A43                     SLRCONA         equ	14915	;# 
  1181   003A44                     INLVLA          equ	14916	;# 
  1182   003A45                     IOCAP           equ	14917	;# 
  1183   003A46                     IOCAN           equ	14918	;# 
  1184   003A47                     IOCAF           equ	14919	;# 
  1185   003A50                     ANSELB          equ	14928	;# 
  1186   003A51                     WPUB            equ	14929	;# 
  1187   003A52                     ODCONB          equ	14930	;# 
  1188   003A53                     SLRCONB         equ	14931	;# 
  1189   003A54                     INLVLB          equ	14932	;# 
  1190   003A55                     IOCBP           equ	14933	;# 
  1191   003A56                     IOCBN           equ	14934	;# 
  1192   003A57                     IOCBF           equ	14935	;# 
  1193   003A5A                     RB1I2C          equ	14938	;# 
  1194   003A5B                     RB2I2C          equ	14939	;# 
  1195   003A60                     ANSELC          equ	14944	;# 
  1196   003A61                     WPUC            equ	14945	;# 
  1197   003A62                     ODCONC          equ	14946	;# 
  1198   003A63                     SLRCONC         equ	14947	;# 
  1199   003A64                     INLVLC          equ	14948	;# 
  1200   003A65                     IOCCP           equ	14949	;# 
  1201   003A66                     IOCCN           equ	14950	;# 
  1202   003A67                     IOCCF           equ	14951	;# 
  1203   003A6A                     RC3I2C          equ	14954	;# 
  1204   003A6B                     RC4I2C          equ	14955	;# 
  1205   003A70                     ANSELD          equ	14960	;# 
  1206   003A71                     WPUD            equ	14961	;# 
  1207   003A72                     ODCOND          equ	14962	;# 
  1208   003A73                     SLRCOND         equ	14963	;# 
  1209   003A74                     INLVLD          equ	14964	;# 
  1210   003A7A                     RD0I2C          equ	14970	;# 
  1211   003A7B                     RD1I2C          equ	14971	;# 
  1212   003A80                     ANSELE          equ	14976	;# 
  1213   003A81                     WPUE            equ	14977	;# 
  1214   003A82                     ODCONE          equ	14978	;# 
  1215   003A83                     SLRCONE         equ	14979	;# 
  1216   003A84                     INLVLE          equ	14980	;# 
  1217   003A85                     IOCEP           equ	14981	;# 
  1218   003A86                     IOCEN           equ	14982	;# 
  1219   003A87                     IOCEF           equ	14983	;# 
  1220   003A90                     ANSELF          equ	14992	;# 
  1221   003A91                     WPUF            equ	14993	;# 
  1222   003A92                     ODCONF          equ	14994	;# 
  1223   003A93                     SLRCONF         equ	14995	;# 
  1224   003A94                     INLVLF          equ	14996	;# 
  1225   003ABF                     PPSLOCK         equ	15039	;# 
  1226   003AC0                     INT0PPS         equ	15040	;# 
  1227   003AC1                     INT1PPS         equ	15041	;# 
  1228   003AC2                     INT2PPS         equ	15042	;# 
  1229   003AC3                     T0CKIPPS        equ	15043	;# 
  1230   003AC4                     T1CKIPPS        equ	15044	;# 
  1231   003AC5                     T1GPPS          equ	15045	;# 
  1232   003AC6                     T3CKIPPS        equ	15046	;# 
  1233   003AC7                     T3GPPS          equ	15047	;# 
  1234   003AC8                     T5CKIPPS        equ	15048	;# 
  1235   003AC9                     T5GPPS          equ	15049	;# 
  1236   003ACA                     T2INPPS         equ	15050	;# 
  1237   003ACB                     T4INPPS         equ	15051	;# 
  1238   003ACC                     T6INPPS         equ	15052	;# 
  1239   003ACD                     CCP1PPS         equ	15053	;# 
  1240   003ACE                     CCP2PPS         equ	15054	;# 
  1241   003ACF                     CCP3PPS         equ	15055	;# 
  1242   003AD0                     CCP4PPS         equ	15056	;# 
  1243   003AD1                     SMT1WINPPS      equ	15057	;# 
  1244   003AD2                     SMT1SIGPPS      equ	15058	;# 
  1245   003AD3                     CWG1INPPS       equ	15059	;# 
  1246   003AD4                     CWG2INPPS       equ	15060	;# 
  1247   003AD5                     CWG3INPPS       equ	15061	;# 
  1248   003AD6                     MD1CARLPPS      equ	15062	;# 
  1249   003AD7                     MD1CARHPPS      equ	15063	;# 
  1250   003AD8                     MD1SRCPPS       equ	15064	;# 
  1251   003AD9                     CLCIN0PPS       equ	15065	;# 
  1252   003ADA                     CLCIN1PPS       equ	15066	;# 
  1253   003ADB                     CLCIN2PPS       equ	15067	;# 
  1254   003ADC                     CLCIN3PPS       equ	15068	;# 
  1255   003ADD                     ADACTPPS        equ	15069	;# 
  1256   003ADE                     SPI1SCKPPS      equ	15070	;# 
  1257   003ADF                     SPI1SDIPPS      equ	15071	;# 
  1258   003AE0                     SPI1SSPPS       equ	15072	;# 
  1259   003AE1                     I2C1SCLPPS      equ	15073	;# 
  1260   003AE2                     I2C1SDAPPS      equ	15074	;# 
  1261   003AE3                     I2C2SCLPPS      equ	15075	;# 
  1262   003AE4                     I2C2SDAPPS      equ	15076	;# 
  1263   003AE5                     U1RXPPS         equ	15077	;# 
  1264   003AE6                     U1CTSPPS        equ	15078	;# 
  1265   003AE8                     U2RXPPS         equ	15080	;# 
  1266   003AE9                     U2CTSPPS        equ	15081	;# 
  1267   003BC9                     DMA2BUF         equ	15305	;# 
  1268   003BCA                     DMA2DCNT        equ	15306	;# 
  1269   003BCA                     DMA2DCNTL       equ	15306	;# 
  1270   003BCB                     DMA2DCNTH       equ	15307	;# 
  1271   003BCC                     DMA2DPTR        equ	15308	;# 
  1272   003BCC                     DMA2DPTRL       equ	15308	;# 
  1273   003BCD                     DMA2DPTRH       equ	15309	;# 
  1274   003BCE                     DMA2DSZ         equ	15310	;# 
  1275   003BCE                     DMA2DSZL        equ	15310	;# 
  1276   003BCF                     DMA2DSZH        equ	15311	;# 
  1277   003BD0                     DMA2DSA         equ	15312	;# 
  1278   003BD0                     DMA2DSAL        equ	15312	;# 
  1279   003BD1                     DMA2DSAH        equ	15313	;# 
  1280   003BD2                     DMA2SCNT        equ	15314	;# 
  1281   003BD2                     DMA2SCNTL       equ	15314	;# 
  1282   003BD3                     DMA2SCNTH       equ	15315	;# 
  1283   003BD4                     DMA2SPTR        equ	15316	;# 
  1284   003BD4                     DMA2SPTRL       equ	15316	;# 
  1285   003BD5                     DMA2SPTRH       equ	15317	;# 
  1286   003BD6                     DMA2SPTRU       equ	15318	;# 
  1287   003BD7                     DMA2SSZ         equ	15319	;# 
  1288   003BD7                     DMA2SSZL        equ	15319	;# 
  1289   003BD8                     DMA2SSZH        equ	15320	;# 
  1290   003BD9                     DMA2SSA         equ	15321	;# 
  1291   003BD9                     DMA2SSAL        equ	15321	;# 
  1292   003BDA                     DMA2SSAH        equ	15322	;# 
  1293   003BDB                     DMA2SSAU        equ	15323	;# 
  1294   003BDC                     DMA2CON0        equ	15324	;# 
  1295   003BDD                     DMA2CON1        equ	15325	;# 
  1296   003BDE                     DMA2AIRQ        equ	15326	;# 
  1297   003BDF                     DMA2SIRQ        equ	15327	;# 
  1298   003BE9                     DMA1BUF         equ	15337	;# 
  1299   003BEA                     DMA1DCNT        equ	15338	;# 
  1300   003BEA                     DMA1DCNTL       equ	15338	;# 
  1301   003BEB                     DMA1DCNTH       equ	15339	;# 
  1302   003BEC                     DMA1DPTR        equ	15340	;# 
  1303   003BEC                     DMA1DPTRL       equ	15340	;# 
  1304   003BED                     DMA1DPTRH       equ	15341	;# 
  1305   003BEE                     DMA1DSZ         equ	15342	;# 
  1306   003BEE                     DMA1DSZL        equ	15342	;# 
  1307   003BEF                     DMA1DSZH        equ	15343	;# 
  1308   003BF0                     DMA1DSA         equ	15344	;# 
  1309   003BF0                     DMA1DSAL        equ	15344	;# 
  1310   003BF1                     DMA1DSAH        equ	15345	;# 
  1311   003BF2                     DMA1SCNT        equ	15346	;# 
  1312   003BF2                     DMA1SCNTL       equ	15346	;# 
  1313   003BF3                     DMA1SCNTH       equ	15347	;# 
  1314   003BF4                     DMA1SPTR        equ	15348	;# 
  1315   003BF4                     DMA1SPTRL       equ	15348	;# 
  1316   003BF5                     DMA1SPTRH       equ	15349	;# 
  1317   003BF6                     DMA1SPTRU       equ	15350	;# 
  1318   003BF7                     DMA1SSZ         equ	15351	;# 
  1319   003BF7                     DMA1SSZL        equ	15351	;# 
  1320   003BF8                     DMA1SSZH        equ	15352	;# 
  1321   003BF9                     DMA1SSA         equ	15353	;# 
  1322   003BF9                     DMA1SSAL        equ	15353	;# 
  1323   003BFA                     DMA1SSAH        equ	15354	;# 
  1324   003BFB                     DMA1SSAU        equ	15355	;# 
  1325   003BFC                     DMA1CON0        equ	15356	;# 
  1326   003BFD                     DMA1CON1        equ	15357	;# 
  1327   003BFE                     DMA1AIRQ        equ	15358	;# 
  1328   003BFF                     DMA1SIRQ        equ	15359	;# 
  1329   003C56                     CLC4CON         equ	15446	;# 
  1330   003C57                     CLC4POL         equ	15447	;# 
  1331   003C58                     CLC4SEL0        equ	15448	;# 
  1332   003C59                     CLC4SEL1        equ	15449	;# 
  1333   003C5A                     CLC4SEL2        equ	15450	;# 
  1334   003C5B                     CLC4SEL3        equ	15451	;# 
  1335   003C5C                     CLC4GLS0        equ	15452	;# 
  1336   003C5D                     CLC4GLS1        equ	15453	;# 
  1337   003C5E                     CLC4GLS2        equ	15454	;# 
  1338   003C5F                     CLC4GLS3        equ	15455	;# 
  1339   003C60                     CLC3CON         equ	15456	;# 
  1340   003C61                     CLC3POL         equ	15457	;# 
  1341   003C62                     CLC3SEL0        equ	15458	;# 
  1342   003C63                     CLC3SEL1        equ	15459	;# 
  1343   003C64                     CLC3SEL2        equ	15460	;# 
  1344   003C65                     CLC3SEL3        equ	15461	;# 
  1345   003C66                     CLC3GLS0        equ	15462	;# 
  1346   003C67                     CLC3GLS1        equ	15463	;# 
  1347   003C68                     CLC3GLS2        equ	15464	;# 
  1348   003C69                     CLC3GLS3        equ	15465	;# 
  1349   003C6A                     CLC2CON         equ	15466	;# 
  1350   003C6B                     CLC2POL         equ	15467	;# 
  1351   003C6C                     CLC2SEL0        equ	15468	;# 
  1352   003C6D                     CLC2SEL1        equ	15469	;# 
  1353   003C6E                     CLC2SEL2        equ	15470	;# 
  1354   003C6F                     CLC2SEL3        equ	15471	;# 
  1355   003C70                     CLC2GLS0        equ	15472	;# 
  1356   003C71                     CLC2GLS1        equ	15473	;# 
  1357   003C72                     CLC2GLS2        equ	15474	;# 
  1358   003C73                     CLC2GLS3        equ	15475	;# 
  1359   003C74                     CLC1CON         equ	15476	;# 
  1360   003C75                     CLC1POL         equ	15477	;# 
  1361   003C76                     CLC1SEL0        equ	15478	;# 
  1362   003C77                     CLC1SEL1        equ	15479	;# 
  1363   003C78                     CLC1SEL2        equ	15480	;# 
  1364   003C79                     CLC1SEL3        equ	15481	;# 
  1365   003C7A                     CLC1GLS0        equ	15482	;# 
  1366   003C7B                     CLC1GLS1        equ	15483	;# 
  1367   003C7C                     CLC1GLS2        equ	15484	;# 
  1368   003C7D                     CLC1GLS3        equ	15485	;# 
  1369   003C7E                     CLCDATA0        equ	15486	;# 
  1370   003CE5                     CLKRCON         equ	15589	;# 
  1371   003CE6                     CLKRCLK         equ	15590	;# 
  1372   003CFA                     MD1CON0         equ	15610	;# 
  1373   003CFB                     MD1CON1         equ	15611	;# 
  1374   003CFC                     MD1SRC          equ	15612	;# 
  1375   003CFD                     MD1CARL         equ	15613	;# 
  1376   003CFE                     MD1CARH         equ	15614	;# 
  1377   003D10                     SPI1RXB         equ	15632	;# 
  1378   003D11                     SPI1TXB         equ	15633	;# 
  1379   003D12                     SPI1TCNT        equ	15634	;# 
  1380   003D12                     SPI1TCNTL       equ	15634	;# 
  1381   003D13                     SPI1TCNTH       equ	15635	;# 
  1382   003D14                     SPI1CON0        equ	15636	;# 
  1383   003D15                     SPI1CON1        equ	15637	;# 
  1384   003D16                     SPI1CON2        equ	15638	;# 
  1385   003D17                     SPI1STATUS      equ	15639	;# 
  1386   003D18                     SPI1TWIDTH      equ	15640	;# 
  1387   003D19                     SPI1BAUD        equ	15641	;# 
  1388   003D1A                     SPI1INTF        equ	15642	;# 
  1389   003D1B                     SPI1INTE        equ	15643	;# 
  1390   003D1C                     SPI1CLK         equ	15644	;# 
  1391   003D54                     I2C2RXB         equ	15700	;# 
  1392   003D55                     I2C2TXB         equ	15701	;# 
  1393   003D56                     I2C2CNT         equ	15702	;# 
  1394   003D57                     I2C2ADB0        equ	15703	;# 
  1395   003D58                     I2C2ADB1        equ	15704	;# 
  1396   003D59                     I2C2ADR0        equ	15705	;# 
  1397   003D5A                     I2C2ADR1        equ	15706	;# 
  1398   003D5B                     I2C2ADR2        equ	15707	;# 
  1399   003D5C                     I2C2ADR3        equ	15708	;# 
  1400   003D5D                     I2C2CON0        equ	15709	;# 
  1401   003D5E                     I2C2CON1        equ	15710	;# 
  1402   003D5F                     I2C2CON2        equ	15711	;# 
  1403   003D60                     I2C2ERR         equ	15712	;# 
  1404   003D61                     I2C2STAT0       equ	15713	;# 
  1405   003D62                     I2C2STAT1       equ	15714	;# 
  1406   003D63                     I2C2PIR         equ	15715	;# 
  1407   003D64                     I2C2PIE         equ	15716	;# 
  1408   003D65                     I2C2CLK         equ	15717	;# 
  1409   003D66                     I2C2BTO         equ	15718	;# 
  1410   003D6A                     I2C1RXB         equ	15722	;# 
  1411   003D6B                     I2C1TXB         equ	15723	;# 
  1412   003D6C                     I2C1CNT         equ	15724	;# 
  1413   003D6D                     I2C1ADB0        equ	15725	;# 
  1414   003D6E                     I2C1ADB1        equ	15726	;# 
  1415   003D6F                     I2C1ADR0        equ	15727	;# 
  1416   003D70                     I2C1ADR1        equ	15728	;# 
  1417   003D71                     I2C1ADR2        equ	15729	;# 
  1418   003D72                     I2C1ADR3        equ	15730	;# 
  1419   003D73                     I2C1CON0        equ	15731	;# 
  1420   003D74                     I2C1CON1        equ	15732	;# 
  1421   003D75                     I2C1CON2        equ	15733	;# 
  1422   003D76                     I2C1ERR         equ	15734	;# 
  1423   003D77                     I2C1STAT0       equ	15735	;# 
  1424   003D78                     I2C1STAT1       equ	15736	;# 
  1425   003D79                     I2C1PIR         equ	15737	;# 
  1426   003D7A                     I2C1PIE         equ	15738	;# 
  1427   003D7B                     I2C1CLK         equ	15739	;# 
  1428   003D7C                     I2C1BTO         equ	15740	;# 
  1429   003DD0                     U2RXB           equ	15824	;# 
  1430   003DD0                     U2RXBL          equ	15824	;# 
  1431   003DD2                     U2TXB           equ	15826	;# 
  1432   003DD2                     U2TXBL          equ	15826	;# 
  1433   003DD4                     U2P1            equ	15828	;# 
  1434   003DD4                     U2P1L           equ	15828	;# 
  1435   003DD6                     U2P2            equ	15830	;# 
  1436   003DD6                     U2P2L           equ	15830	;# 
  1437   003DD8                     U2P3            equ	15832	;# 
  1438   003DD8                     U2P3L           equ	15832	;# 
  1439   003DDA                     U2CON0          equ	15834	;# 
  1440   003DDB                     U2CON1          equ	15835	;# 
  1441   003DDC                     U2CON2          equ	15836	;# 
  1442   003DDD                     U2BRG           equ	15837	;# 
  1443   003DDD                     U2BRGL          equ	15837	;# 
  1444   003DDE                     U2BRGH          equ	15838	;# 
  1445   003DDF                     U2FIFO          equ	15839	;# 
  1446   003DE0                     U2UIR           equ	15840	;# 
  1447   003DE1                     U2ERRIR         equ	15841	;# 
  1448   003DE2                     U2ERRIE         equ	15842	;# 
  1449   003DE8                     U1RXB           equ	15848	;# 
  1450   003DE8                     U1RXBL          equ	15848	;# 
  1451   003DE9                     U1RXCHK         equ	15849	;# 
  1452   003DEA                     U1TXB           equ	15850	;# 
  1453   003DEA                     U1TXBL          equ	15850	;# 
  1454   003DEB                     U1TXCHK         equ	15851	;# 
  1455   003DEC                     U1P1            equ	15852	;# 
  1456   003DEC                     U1P1L           equ	15852	;# 
  1457   003DED                     U1P1H           equ	15853	;# 
  1458   003DEE                     U1P2            equ	15854	;# 
  1459   003DEE                     U1P2L           equ	15854	;# 
  1460   003DEF                     U1P2H           equ	15855	;# 
  1461   003DF0                     U1P3            equ	15856	;# 
  1462   003DF0                     U1P3L           equ	15856	;# 
  1463   003DF1                     U1P3H           equ	15857	;# 
  1464   003DF2                     U1CON0          equ	15858	;# 
  1465   003DF3                     U1CON1          equ	15859	;# 
  1466   003DF4                     U1CON2          equ	15860	;# 
  1467   003DF5                     U1BRG           equ	15861	;# 
  1468   003DF5                     U1BRGL          equ	15861	;# 
  1469   003DF6                     U1BRGH          equ	15862	;# 
  1470   003DF7                     U1FIFO          equ	15863	;# 
  1471   003DF8                     U1UIR           equ	15864	;# 
  1472   003DF9                     U1ERRIR         equ	15865	;# 
  1473   003DFA                     U1ERRIE         equ	15866	;# 
  1474   003E9C                     DAC1CON1        equ	16028	;# 
  1475   003E9E                     DAC1CON0        equ	16030	;# 
  1476   003EB8                     CM2CON0         equ	16056	;# 
  1477   003EB9                     CM2CON1         equ	16057	;# 
  1478   003EBA                     CM2NCH          equ	16058	;# 
  1479   003EBB                     CM2PCH          equ	16059	;# 
  1480   003EBC                     CM1CON0         equ	16060	;# 
  1481   003EBD                     CM1CON1         equ	16061	;# 
  1482   003EBE                     CM1NCH          equ	16062	;# 
  1483   003EBF                     CM1PCH          equ	16063	;# 
  1484   003EC0                     CMOUT           equ	16064	;# 
  1485   003EC1                     FVRCON          equ	16065	;# 
  1486   003EC3                     ZCDCON          equ	16067	;# 
  1487   003EC9                     HLVDCON0        equ	16073	;# 
  1488   003ECA                     HLVDCON1        equ	16074	;# 
  1489   003ED7                     ADCP            equ	16087	;# 
  1490   003EDE                     ADLTH           equ	16094	;# 
  1491   003EDE                     ADLTHL          equ	16094	;# 
  1492   003EDF                     ADLTHH          equ	16095	;# 
  1493   003EE0                     ADUTH           equ	16096	;# 
  1494   003EE0                     ADUTHL          equ	16096	;# 
  1495   003EE1                     ADUTHH          equ	16097	;# 
  1496   003EE2                     ADERR           equ	16098	;# 
  1497   003EE2                     ADERRL          equ	16098	;# 
  1498   003EE3                     ADERRH          equ	16099	;# 
  1499   003EE4                     ADSTPT          equ	16100	;# 
  1500   003EE4                     ADSTPTL         equ	16100	;# 
  1501   003EE5                     ADSTPTH         equ	16101	;# 
  1502   003EE6                     ADFLTR          equ	16102	;# 
  1503   003EE6                     ADFLTRL         equ	16102	;# 
  1504   003EE7                     ADFLTRH         equ	16103	;# 
  1505   003EE8                     ADACC           equ	16104	;# 
  1506   003EE8                     ADACCL          equ	16104	;# 
  1507   003EE9                     ADACCH          equ	16105	;# 
  1508   003EEA                     ADACCU          equ	16106	;# 
  1509   003EEB                     ADCNT           equ	16107	;# 
  1510   003EEC                     ADRPT           equ	16108	;# 
  1511   003EED                     ADPREV          equ	16109	;# 
  1512   003EED                     ADPREVL         equ	16109	;# 
  1513   003EEE                     ADPREVH         equ	16110	;# 
  1514   003EEF                     ADRES           equ	16111	;# 
  1515   003EEF                     ADRESL          equ	16111	;# 
  1516   003EF0                     ADRESH          equ	16112	;# 
  1517   003EF1                     ADPCH           equ	16113	;# 
  1518   003EF3                     ADACQ           equ	16115	;# 
  1519   003EF3                     ADACQL          equ	16115	;# 
  1520   003EF4                     ADACQH          equ	16116	;# 
  1521   003EF5                     ADCAP           equ	16117	;# 
  1522   003EF6                     ADPRE           equ	16118	;# 
  1523   003EF6                     ADPREL          equ	16118	;# 
  1524   003EF7                     ADPREH          equ	16119	;# 
  1525   003EF8                     ADCON0          equ	16120	;# 
  1526   003EF9                     ADCON1          equ	16121	;# 
  1527   003EFA                     ADCON2          equ	16122	;# 
  1528   003EFB                     ADCON3          equ	16123	;# 
  1529   003EFC                     ADSTAT          equ	16124	;# 
  1530   003EFD                     ADREF           equ	16125	;# 
  1531   003EFE                     ADACT           equ	16126	;# 
  1532   003EFF                     ADCLK           equ	16127	;# 
  1533   003F12                     SMT1TMR         equ	16146	;# 
  1534   003F12                     SMT1TMRL        equ	16146	;# 
  1535   003F13                     SMT1TMRH        equ	16147	;# 
  1536   003F14                     SMT1TMRU        equ	16148	;# 
  1537   003F15                     SMT1CPR         equ	16149	;# 
  1538   003F15                     SMT1CPRL        equ	16149	;# 
  1539   003F16                     SMT1CPRH        equ	16150	;# 
  1540   003F17                     SMT1CPRU        equ	16151	;# 
  1541   003F18                     SMT1CPW         equ	16152	;# 
  1542   003F18                     SMT1CPWL        equ	16152	;# 
  1543   003F19                     SMT1CPWH        equ	16153	;# 
  1544   003F1A                     SMT1CPWU        equ	16154	;# 
  1545   003F1B                     SMT1PR          equ	16155	;# 
  1546   003F1B                     SMT1PRL         equ	16155	;# 
  1547   003F1C                     SMT1PRH         equ	16156	;# 
  1548   003F1D                     SMT1PRU         equ	16157	;# 
  1549   003F1E                     SMT1CON0        equ	16158	;# 
  1550   003F1F                     SMT1CON1        equ	16159	;# 
  1551   003F20                     SMT1STAT        equ	16160	;# 
  1552   003F21                     SMT1CLK         equ	16161	;# 
  1553   003F22                     SMT1SIG         equ	16162	;# 
  1554   003F23                     SMT1WIN         equ	16163	;# 
  1555   003F38                     NCO1ACC         equ	16184	;# 
  1556   003F38                     NCO1ACCL        equ	16184	;# 
  1557   003F39                     NCO1ACCH        equ	16185	;# 
  1558   003F3A                     NCO1ACCU        equ	16186	;# 
  1559   003F3B                     NCO1INC         equ	16187	;# 
  1560   003F3B                     NCO1INCL        equ	16187	;# 
  1561   003F3C                     NCO1INCH        equ	16188	;# 
  1562   003F3D                     NCO1INCU        equ	16189	;# 
  1563   003F3E                     NCO1CON         equ	16190	;# 
  1564   003F3F                     NCO1CLK         equ	16191	;# 
  1565   003F40                     CWG3CLK         equ	16192	;# 
  1566   003F40                     CWG3CLKCON      equ	16192	;# 
  1567   003F41                     CWG3ISM         equ	16193	;# 
  1568   003F41                     CWG3DAT         equ	16193	;# 
  1569   003F42                     CWG3DBR         equ	16194	;# 
  1570   003F43                     CWG3DBF         equ	16195	;# 
  1571   003F44                     CWG3CON0        equ	16196	;# 
  1572   003F45                     CWG3CON1        equ	16197	;# 
  1573   003F46                     CWG3AS0         equ	16198	;# 
  1574   003F47                     CWG3AS1         equ	16199	;# 
  1575   003F48                     CWG3STR         equ	16200	;# 
  1576   003F49                     CWG2CLK         equ	16201	;# 
  1577   003F49                     CWG2CLKCON      equ	16201	;# 
  1578   003F4A                     CWG2ISM         equ	16202	;# 
  1579   003F4A                     CWG2DAT         equ	16202	;# 
  1580   003F4B                     CWG2DBR         equ	16203	;# 
  1581   003F4C                     CWG2DBF         equ	16204	;# 
  1582   003F4D                     CWG2CON0        equ	16205	;# 
  1583   003F4E                     CWG2CON1        equ	16206	;# 
  1584   003F4F                     CWG2AS0         equ	16207	;# 
  1585   003F50                     CWG2AS1         equ	16208	;# 
  1586   003F51                     CWG2STR         equ	16209	;# 
  1587   003F52                     CWG1CLK         equ	16210	;# 
  1588   003F52                     CWG1CLKCON      equ	16210	;# 
  1589   003F53                     CWG1ISM         equ	16211	;# 
  1590   003F53                     CWG1DAT         equ	16211	;# 
  1591   003F54                     CWG1DBR         equ	16212	;# 
  1592   003F55                     CWG1DBF         equ	16213	;# 
  1593   003F56                     CWG1CON0        equ	16214	;# 
  1594   003F57                     CWG1CON1        equ	16215	;# 
  1595   003F58                     CWG1AS0         equ	16216	;# 
  1596   003F59                     CWG1AS1         equ	16217	;# 
  1597   003F5A                     CWG1STR         equ	16218	;# 
  1598   003F5E                     CCPTMRS0        equ	16222	;# 
  1599   003F5F                     CCPTMRS1        equ	16223	;# 
  1600   003F60                     PWM8DC          equ	16224	;# 
  1601   003F60                     PWM8DCL         equ	16224	;# 
  1602   003F61                     PWM8DCH         equ	16225	;# 
  1603   003F62                     PWM8CON         equ	16226	;# 
  1604   003F64                     PWM7DC          equ	16228	;# 
  1605   003F64                     PWM7DCL         equ	16228	;# 
  1606   003F65                     PWM7DCH         equ	16229	;# 
  1607   003F66                     PWM7CON         equ	16230	;# 
  1608   003F68                     PWM6DC          equ	16232	;# 
  1609   003F68                     PWM6DCL         equ	16232	;# 
  1610   003F69                     PWM6DCH         equ	16233	;# 
  1611   003F6A                     PWM6CON         equ	16234	;# 
  1612   003F6C                     PWM5DC          equ	16236	;# 
  1613   003F6C                     PWM5DCL         equ	16236	;# 
  1614   003F6D                     PWM5DCH         equ	16237	;# 
  1615   003F6E                     PWM5CON         equ	16238	;# 
  1616   003F70                     CCPR4           equ	16240	;# 
  1617   003F70                     CCPR4L          equ	16240	;# 
  1618   003F71                     CCPR4H          equ	16241	;# 
  1619   003F72                     CCP4CON         equ	16242	;# 
  1620   003F73                     CCP4CAP         equ	16243	;# 
  1621   003F74                     CCPR3           equ	16244	;# 
  1622   003F74                     CCPR3L          equ	16244	;# 
  1623   003F75                     CCPR3H          equ	16245	;# 
  1624   003F76                     CCP3CON         equ	16246	;# 
  1625   003F77                     CCP3CAP         equ	16247	;# 
  1626   003F78                     CCPR2           equ	16248	;# 
  1627   003F78                     CCPR2L          equ	16248	;# 
  1628   003F79                     CCPR2H          equ	16249	;# 
  1629   003F7A                     CCP2CON         equ	16250	;# 
  1630   003F7B                     CCP2CAP         equ	16251	;# 
  1631   003F7C                     CCPR1           equ	16252	;# 
  1632   003F7C                     CCPR1L          equ	16252	;# 
  1633   003F7D                     CCPR1H          equ	16253	;# 
  1634   003F7E                     CCP1CON         equ	16254	;# 
  1635   003F7F                     CCP1CAP         equ	16255	;# 
  1636   003F92                     T6TMR           equ	16274	;# 
  1637   003F92                     TMR6            equ	16274	;# 
  1638   003F93                     T6PR            equ	16275	;# 
  1639   003F93                     PR6             equ	16275	;# 
  1640   003F94                     T6CON           equ	16276	;# 
  1641   003F95                     T6HLT           equ	16277	;# 
  1642   003F96                     T6CLKCON        equ	16278	;# 
  1643   003F96                     T6CLK           equ	16278	;# 
  1644   003F97                     T6RST           equ	16279	;# 
  1645   003F98                     TMR5            equ	16280	;# 
  1646   003F98                     TMR5L           equ	16280	;# 
  1647   003F99                     TMR5H           equ	16281	;# 
  1648   003F9A                     T5CON           equ	16282	;# 
  1649   003F9A                     TMR5CON         equ	16282	;# 
  1650   003F9B                     T5GCON          equ	16283	;# 
  1651   003F9B                     TMR5GCON        equ	16283	;# 
  1652   003F9C                     T5GATE          equ	16284	;# 
  1653   003F9C                     TMR5GATE        equ	16284	;# 
  1654   003F9D                     T5CLK           equ	16285	;# 
  1655   003F9D                     TMR5CLK         equ	16285	;# 
  1656   003F9D                     PR5             equ	16285	;# 
  1657   003F9E                     T4TMR           equ	16286	;# 
  1658   003F9E                     TMR4            equ	16286	;# 
  1659   003F9F                     T4PR            equ	16287	;# 
  1660   003F9F                     PR4             equ	16287	;# 
  1661   003FA0                     T4CON           equ	16288	;# 
  1662   003FA1                     T4HLT           equ	16289	;# 
  1663   003FA2                     T4CLKCON        equ	16290	;# 
  1664   003FA2                     T4CLK           equ	16290	;# 
  1665   003FA3                     T4RST           equ	16291	;# 
  1666   003FA4                     TMR3            equ	16292	;# 
  1667   003FA4                     TMR3L           equ	16292	;# 
  1668   003FA5                     TMR3H           equ	16293	;# 
  1669   003FA6                     T3CON           equ	16294	;# 
  1670   003FA6                     TMR3CON         equ	16294	;# 
  1671   003FA7                     T3GCON          equ	16295	;# 
  1672   003FA7                     TMR3GCON        equ	16295	;# 
  1673   003FA8                     T3GATE          equ	16296	;# 
  1674   003FA8                     TMR3GATE        equ	16296	;# 
  1675   003FA9                     T3CLK           equ	16297	;# 
  1676   003FA9                     TMR3CLK         equ	16297	;# 
  1677   003FA9                     PR3             equ	16297	;# 
  1678   003FAA                     T2TMR           equ	16298	;# 
  1679   003FAA                     TMR2            equ	16298	;# 
  1680   003FAB                     T2PR            equ	16299	;# 
  1681   003FAB                     PR2             equ	16299	;# 
  1682   003FAC                     T2CON           equ	16300	;# 
  1683   003FAD                     T2HLT           equ	16301	;# 
  1684   003FAE                     T2CLKCON        equ	16302	;# 
  1685   003FAE                     T2CLK           equ	16302	;# 
  1686   003FAF                     T2RST           equ	16303	;# 
  1687   003FB0                     TMR1            equ	16304	;# 
  1688   003FB0                     TMR1L           equ	16304	;# 
  1689   003FB1                     TMR1H           equ	16305	;# 
  1690   003FB2                     T1CON           equ	16306	;# 
  1691   003FB2                     TMR1CON         equ	16306	;# 
  1692   003FB3                     T1GCON          equ	16307	;# 
  1693   003FB3                     TMR1GCON        equ	16307	;# 
  1694   003FB4                     T1GATE          equ	16308	;# 
  1695   003FB4                     TMR1GATE        equ	16308	;# 
  1696   003FB5                     T1CLK           equ	16309	;# 
  1697   003FB5                     TMR1CLK         equ	16309	;# 
  1698   003FB5                     PR1             equ	16309	;# 
  1699   003FB6                     TMR0L           equ	16310	;# 
  1700   003FB6                     TMR0            equ	16310	;# 
  1701   003FB7                     TMR0H           equ	16311	;# 
  1702   003FB7                     PR0             equ	16311	;# 
  1703   003FB8                     T0CON0          equ	16312	;# 
  1704   003FB9                     T0CON1          equ	16313	;# 
  1705   003FBA                     LATA            equ	16314	;# 
  1706   003FBB                     LATB            equ	16315	;# 
  1707   003FBC                     LATC            equ	16316	;# 
  1708   003FBD                     LATD            equ	16317	;# 
  1709   003FBE                     LATE            equ	16318	;# 
  1710   003FBF                     LATF            equ	16319	;# 
  1711   003FC2                     TRISA           equ	16322	;# 
  1712   003FC3                     TRISB           equ	16323	;# 
  1713   003FC4                     TRISC           equ	16324	;# 
  1714   003FC5                     TRISD           equ	16325	;# 
  1715   003FC6                     TRISE           equ	16326	;# 
  1716   003FC7                     TRISF           equ	16327	;# 
  1717   003FCA                     PORTA           equ	16330	;# 
  1718   003FCB                     PORTB           equ	16331	;# 
  1719   003FCC                     PORTC           equ	16332	;# 
  1720   003FCD                     PORTD           equ	16333	;# 
  1721   003FCE                     PORTE           equ	16334	;# 
  1722   003FCF                     PORTF           equ	16335	;# 
  1723   003FD2                     INTCON0         equ	16338	;# 
  1724   003FD3                     INTCON1         equ	16339	;# 
  1725   003FD4                     IVTLOCK         equ	16340	;# 
  1726   003FD5                     IVTBASE         equ	16341	;# 
  1727   003FD5                     IVTBASEL        equ	16341	;# 
  1728   003FD6                     IVTBASEH        equ	16342	;# 
  1729   003FD7                     IVTBASEU        equ	16343	;# 
  1730   003FD8                     STATUS          equ	16344	;# 
  1731   003FD9                     FSR2            equ	16345	;# 
  1732   003FD9                     FSR2L           equ	16345	;# 
  1733   003FDA                     FSR2H           equ	16346	;# 
  1734   003FDB                     PLUSW2          equ	16347	;# 
  1735   003FDC                     PREINC2         equ	16348	;# 
  1736   003FDD                     POSTDEC2        equ	16349	;# 
  1737   003FDE                     POSTINC2        equ	16350	;# 
  1738   003FDF                     INDF2           equ	16351	;# 
  1739   003FE0                     BSR             equ	16352	;# 
  1740   003FE1                     FSR1            equ	16353	;# 
  1741   003FE1                     FSR1L           equ	16353	;# 
  1742   003FE2                     FSR1H           equ	16354	;# 
  1743   003FE3                     PLUSW1          equ	16355	;# 
  1744   003FE4                     PREINC1         equ	16356	;# 
  1745   003FE5                     POSTDEC1        equ	16357	;# 
  1746   003FE6                     POSTINC1        equ	16358	;# 
  1747   003FE7                     INDF1           equ	16359	;# 
  1748   003FE8                     WREG            equ	16360	;# 
  1749   003FE9                     FSR0            equ	16361	;# 
  1750   003FE9                     FSR0L           equ	16361	;# 
  1751   003FEA                     FSR0H           equ	16362	;# 
  1752   003FEB                     PLUSW0          equ	16363	;# 
  1753   003FEC                     PREINC0         equ	16364	;# 
  1754   003FED                     POSTDEC0        equ	16365	;# 
  1755   003FEE                     POSTINC0        equ	16366	;# 
  1756   003FEF                     INDF0           equ	16367	;# 
  1757   003FF0                     PCON0           equ	16368	;# 
  1758   003FF1                     PCON1           equ	16369	;# 
  1759   003FF3                     PROD            equ	16371	;# 
  1760   003FF3                     PRODL           equ	16371	;# 
  1761   003FF4                     PRODH           equ	16372	;# 
  1762   003FF5                     TABLAT          equ	16373	;# 
  1763   003FF6                     TBLPTR          equ	16374	;# 
  1764   003FF6                     TBLPTRL         equ	16374	;# 
  1765   003FF7                     TBLPTRH         equ	16375	;# 
  1766   003FF8                     TBLPTRU         equ	16376	;# 
  1767   003FF9                     PCLAT           equ	16377	;# 
  1768   003FF9                     PCL             equ	16377	;# 
  1769   003FFA                     PCLATH          equ	16378	;# 
  1770   003FFB                     PCLATU          equ	16379	;# 
  1771   003FFC                     STKPTR          equ	16380	;# 
  1772   003FFD                     TOS             equ	16381	;# 
  1773   003FFD                     TOSL            equ	16381	;# 
  1774   003FFE                     TOSH            equ	16382	;# 
  1775   003FFF                     TOSU            equ	16383	;# 
  1776   003880                     STATUS_CSHAD    equ	14464	;# 
  1777   003881                     WREG_CSHAD      equ	14465	;# 
  1778   003882                     BSR_CSHAD       equ	14466	;# 
  1779   003883                     SHADCON         equ	14467	;# 
  1780   003884                     STATUS_SHAD     equ	14468	;# 
  1781   003885                     WREG_SHAD       equ	14469	;# 
  1782   003886                     BSR_SHAD        equ	14470	;# 
  1783   003887                     PCLATH_SHAD     equ	14471	;# 
  1784   003888                     PCLATU_SHAD     equ	14472	;# 
  1785   003889                     FSR0SH          equ	14473	;# 
  1786   003889                     FSR0L_SHAD      equ	14473	;# 
  1787   00388A                     FSR0H_SHAD      equ	14474	;# 
  1788   00388B                     FSR1SH          equ	14475	;# 
  1789   00388B                     FSR1L_SHAD      equ	14475	;# 
  1790   00388C                     FSR1H_SHAD      equ	14476	;# 
  1791   00388D                     FSR2SH          equ	14477	;# 
  1792   00388D                     FSR2L_SHAD      equ	14477	;# 
  1793   00388E                     FSR2H_SHAD      equ	14478	;# 
  1794   00388F                     PRODSH          equ	14479	;# 
  1795   00388F                     PRODL_SHAD      equ	14479	;# 
  1796   003890                     PRODH_SHAD      equ	14480	;# 
  1797   00389D                     IVTADL          equ	14493	;# 
  1798   00389E                     IVTADH          equ	14494	;# 
  1799   00389F                     IVTADU          equ	14495	;# 
  1800   00395B                     WDTCON0         equ	14683	;# 
  1801   00395C                     WDTCON1         equ	14684	;# 
  1802   00395D                     WDTPSL          equ	14685	;# 
  1803   00395E                     WDTPSH          equ	14686	;# 
  1804   00395F                     WDTTMR          equ	14687	;# 
  1805   003960                     CRCDATA         equ	14688	;# 
  1806   003960                     CRCDATL         equ	14688	;# 
  1807   003961                     CRCDATH         equ	14689	;# 
  1808   003962                     CRCACC          equ	14690	;# 
  1809   003962                     CRCACCL         equ	14690	;# 
  1810   003963                     CRCACCH         equ	14691	;# 
  1811   003964                     CRCSHFT         equ	14692	;# 
  1812   003964                     CRCSHIFTL       equ	14692	;# 
  1813   003965                     CRCSHIFTH       equ	14693	;# 
  1814   003966                     CRCXOR          equ	14694	;# 
  1815   003966                     CRCXORL         equ	14694	;# 
  1816   003967                     CRCXORH         equ	14695	;# 
  1817   003968                     CRCCON0         equ	14696	;# 
  1818   003969                     CRCCON1         equ	14697	;# 
  1819   003976                     SCANLADR        equ	14710	;# 
  1820   003976                     SCANLADRL       equ	14710	;# 
  1821   003977                     SCANLADRH       equ	14711	;# 
  1822   003978                     SCANLADRU       equ	14712	;# 
  1823   003979                     SCANHADR        equ	14713	;# 
  1824   003979                     SCANHADRL       equ	14713	;# 
  1825   00397A                     SCANHADRH       equ	14714	;# 
  1826   00397B                     SCANHADRU       equ	14715	;# 
  1827   00397C                     SCANCON0        equ	14716	;# 
  1828   00397D                     SCANTRIG        equ	14717	;# 
  1829   003980                     IPR0            equ	14720	;# 
  1830   003981                     IPR1            equ	14721	;# 
  1831   003982                     IPR2            equ	14722	;# 
  1832   003983                     IPR3            equ	14723	;# 
  1833   003984                     IPR4            equ	14724	;# 
  1834   003985                     IPR5            equ	14725	;# 
  1835   003986                     IPR6            equ	14726	;# 
  1836   003987                     IPR7            equ	14727	;# 
  1837   003988                     IPR8            equ	14728	;# 
  1838   003989                     IPR9            equ	14729	;# 
  1839   00398A                     IPR10           equ	14730	;# 
  1840   003990                     PIE0            equ	14736	;# 
  1841   003991                     PIE1            equ	14737	;# 
  1842   003992                     PIE2            equ	14738	;# 
  1843   003993                     PIE3            equ	14739	;# 
  1844   003994                     PIE4            equ	14740	;# 
  1845   003995                     PIE5            equ	14741	;# 
  1846   003996                     PIE6            equ	14742	;# 
  1847   003997                     PIE7            equ	14743	;# 
  1848   003998                     PIE8            equ	14744	;# 
  1849   003999                     PIE9            equ	14745	;# 
  1850   00399A                     PIE10           equ	14746	;# 
  1851   0039A0                     PIR0            equ	14752	;# 
  1852   0039A1                     PIR1            equ	14753	;# 
  1853   0039A2                     PIR2            equ	14754	;# 
  1854   0039A3                     PIR3            equ	14755	;# 
  1855   0039A4                     PIR4            equ	14756	;# 
  1856   0039A5                     PIR5            equ	14757	;# 
  1857   0039A6                     PIR6            equ	14758	;# 
  1858   0039A7                     PIR7            equ	14759	;# 
  1859   0039A8                     PIR8            equ	14760	;# 
  1860   0039A9                     PIR9            equ	14761	;# 
  1861   0039AA                     PIR10           equ	14762	;# 
  1862   0039C0                     PMD0            equ	14784	;# 
  1863   0039C1                     PMD1            equ	14785	;# 
  1864   0039C2                     PMD2            equ	14786	;# 
  1865   0039C3                     PMD3            equ	14787	;# 
  1866   0039C4                     PMD4            equ	14788	;# 
  1867   0039C5                     PMD5            equ	14789	;# 
  1868   0039C6                     PMD6            equ	14790	;# 
  1869   0039C7                     PMD7            equ	14791	;# 
  1870   0039D0                     BORCON          equ	14800	;# 
  1871   0039D1                     VREGCON         equ	14801	;# 
  1872   0039D8                     CPUDOZE         equ	14808	;# 
  1873   0039D9                     OSCCON1         equ	14809	;# 
  1874   0039DA                     OSCCON2         equ	14810	;# 
  1875   0039DB                     OSCCON3         equ	14811	;# 
  1876   0039DC                     OSCSTAT         equ	14812	;# 
  1877   0039DC                     OSCSTAT1        equ	14812	;# 
  1878   0039DD                     OSCEN           equ	14813	;# 
  1879   0039DE                     OSCTUNE         equ	14814	;# 
  1880   0039DF                     OSCFRQ          equ	14815	;# 
  1881   0039E0                     NVMADRL         equ	14816	;# 
  1882   0039E1                     NVMADRH         equ	14817	;# 
  1883   0039E3                     NVMDAT          equ	14819	;# 
  1884   0039E5                     NVMCON1         equ	14821	;# 
  1885   0039E6                     NVMCON2         equ	14822	;# 
  1886   0039EF                     PRLOCK          equ	14831	;# 
  1887   0039F1                     ISRPR           equ	14833	;# 
  1888   0039F2                     MAINPR          equ	14834	;# 
  1889   0039F3                     DMA1PR          equ	14835	;# 
  1890   0039F4                     DMA2PR          equ	14836	;# 
  1891   0039F7                     SCANPR          equ	14839	;# 
  1892   003A00                     RA0PPS          equ	14848	;# 
  1893   003A01                     RA1PPS          equ	14849	;# 
  1894   003A02                     RA2PPS          equ	14850	;# 
  1895   003A03                     RA3PPS          equ	14851	;# 
  1896   003A04                     RA4PPS          equ	14852	;# 
  1897   003A05                     RA5PPS          equ	14853	;# 
  1898   003A06                     RA6PPS          equ	14854	;# 
  1899   003A07                     RA7PPS          equ	14855	;# 
  1900   003A08                     RB0PPS          equ	14856	;# 
  1901   003A09                     RB1PPS          equ	14857	;# 
  1902   003A0A                     RB2PPS          equ	14858	;# 
  1903   003A0B                     RB3PPS          equ	14859	;# 
  1904   003A0C                     RB4PPS          equ	14860	;# 
  1905   003A0D                     RB5PPS          equ	14861	;# 
  1906   003A0E                     RB6PPS          equ	14862	;# 
  1907   003A0F                     RB7PPS          equ	14863	;# 
  1908   003A10                     RC0PPS          equ	14864	;# 
  1909   003A11                     RC1PPS          equ	14865	;# 
  1910   003A12                     RC2PPS          equ	14866	;# 
  1911   003A13                     RC3PPS          equ	14867	;# 
  1912   003A14                     RC4PPS          equ	14868	;# 
  1913   003A15                     RC5PPS          equ	14869	;# 
  1914   003A16                     RC6PPS          equ	14870	;# 
  1915   003A17                     RC7PPS          equ	14871	;# 
  1916   003A18                     RD0PPS          equ	14872	;# 
  1917   003A19                     RD1PPS          equ	14873	;# 
  1918   003A1A                     RD2PPS          equ	14874	;# 
  1919   003A1B                     RD3PPS          equ	14875	;# 
  1920   003A1C                     RD4PPS          equ	14876	;# 
  1921   003A1D                     RD5PPS          equ	14877	;# 
  1922   003A1E                     RD6PPS          equ	14878	;# 
  1923   003A1F                     RD7PPS          equ	14879	;# 
  1924   003A20                     RE0PPS          equ	14880	;# 
  1925   003A21                     RE1PPS          equ	14881	;# 
  1926   003A22                     RE2PPS          equ	14882	;# 
  1927   003A28                     RF0PPS          equ	14888	;# 
  1928   003A29                     RF1PPS          equ	14889	;# 
  1929   003A2A                     RF2PPS          equ	14890	;# 
  1930   003A2B                     RF3PPS          equ	14891	;# 
  1931   003A2C                     RF4PPS          equ	14892	;# 
  1932   003A2D                     RF5PPS          equ	14893	;# 
  1933   003A2E                     RF6PPS          equ	14894	;# 
  1934   003A2F                     RF7PPS          equ	14895	;# 
  1935   003A40                     ANSELA          equ	14912	;# 
  1936   003A41                     WPUA            equ	14913	;# 
  1937   003A42                     ODCONA          equ	14914	;# 
  1938   003A43                     SLRCONA         equ	14915	;# 
  1939   003A44                     INLVLA          equ	14916	;# 
  1940   003A45                     IOCAP           equ	14917	;# 
  1941   003A46                     IOCAN           equ	14918	;# 
  1942   003A47                     IOCAF           equ	14919	;# 
  1943   003A50                     ANSELB          equ	14928	;# 
  1944   003A51                     WPUB            equ	14929	;# 
  1945   003A52                     ODCONB          equ	14930	;# 
  1946   003A53                     SLRCONB         equ	14931	;# 
  1947   003A54                     INLVLB          equ	14932	;# 
  1948   003A55                     IOCBP           equ	14933	;# 
  1949   003A56                     IOCBN           equ	14934	;# 
  1950   003A57                     IOCBF           equ	14935	;# 
  1951   003A5A                     RB1I2C          equ	14938	;# 
  1952   003A5B                     RB2I2C          equ	14939	;# 
  1953   003A60                     ANSELC          equ	14944	;# 
  1954   003A61                     WPUC            equ	14945	;# 
  1955   003A62                     ODCONC          equ	14946	;# 
  1956   003A63                     SLRCONC         equ	14947	;# 
  1957   003A64                     INLVLC          equ	14948	;# 
  1958   003A65                     IOCCP           equ	14949	;# 
  1959   003A66                     IOCCN           equ	14950	;# 
  1960   003A67                     IOCCF           equ	14951	;# 
  1961   003A6A                     RC3I2C          equ	14954	;# 
  1962   003A6B                     RC4I2C          equ	14955	;# 
  1963   003A70                     ANSELD          equ	14960	;# 
  1964   003A71                     WPUD            equ	14961	;# 
  1965   003A72                     ODCOND          equ	14962	;# 
  1966   003A73                     SLRCOND         equ	14963	;# 
  1967   003A74                     INLVLD          equ	14964	;# 
  1968   003A7A                     RD0I2C          equ	14970	;# 
  1969   003A7B                     RD1I2C          equ	14971	;# 
  1970   003A80                     ANSELE          equ	14976	;# 
  1971   003A81                     WPUE            equ	14977	;# 
  1972   003A82                     ODCONE          equ	14978	;# 
  1973   003A83                     SLRCONE         equ	14979	;# 
  1974   003A84                     INLVLE          equ	14980	;# 
  1975   003A85                     IOCEP           equ	14981	;# 
  1976   003A86                     IOCEN           equ	14982	;# 
  1977   003A87                     IOCEF           equ	14983	;# 
  1978   003A90                     ANSELF          equ	14992	;# 
  1979   003A91                     WPUF            equ	14993	;# 
  1980   003A92                     ODCONF          equ	14994	;# 
  1981   003A93                     SLRCONF         equ	14995	;# 
  1982   003A94                     INLVLF          equ	14996	;# 
  1983   003ABF                     PPSLOCK         equ	15039	;# 
  1984   003AC0                     INT0PPS         equ	15040	;# 
  1985   003AC1                     INT1PPS         equ	15041	;# 
  1986   003AC2                     INT2PPS         equ	15042	;# 
  1987   003AC3                     T0CKIPPS        equ	15043	;# 
  1988   003AC4                     T1CKIPPS        equ	15044	;# 
  1989   003AC5                     T1GPPS          equ	15045	;# 
  1990   003AC6                     T3CKIPPS        equ	15046	;# 
  1991   003AC7                     T3GPPS          equ	15047	;# 
  1992   003AC8                     T5CKIPPS        equ	15048	;# 
  1993   003AC9                     T5GPPS          equ	15049	;# 
  1994   003ACA                     T2INPPS         equ	15050	;# 
  1995   003ACB                     T4INPPS         equ	15051	;# 
  1996   003ACC                     T6INPPS         equ	15052	;# 
  1997   003ACD                     CCP1PPS         equ	15053	;# 
  1998   003ACE                     CCP2PPS         equ	15054	;# 
  1999   003ACF                     CCP3PPS         equ	15055	;# 
  2000   003AD0                     CCP4PPS         equ	15056	;# 
  2001   003AD1                     SMT1WINPPS      equ	15057	;# 
  2002   003AD2                     SMT1SIGPPS      equ	15058	;# 
  2003   003AD3                     CWG1INPPS       equ	15059	;# 
  2004   003AD4                     CWG2INPPS       equ	15060	;# 
  2005   003AD5                     CWG3INPPS       equ	15061	;# 
  2006   003AD6                     MD1CARLPPS      equ	15062	;# 
  2007   003AD7                     MD1CARHPPS      equ	15063	;# 
  2008   003AD8                     MD1SRCPPS       equ	15064	;# 
  2009   003AD9                     CLCIN0PPS       equ	15065	;# 
  2010   003ADA                     CLCIN1PPS       equ	15066	;# 
  2011   003ADB                     CLCIN2PPS       equ	15067	;# 
  2012   003ADC                     CLCIN3PPS       equ	15068	;# 
  2013   003ADD                     ADACTPPS        equ	15069	;# 
  2014   003ADE                     SPI1SCKPPS      equ	15070	;# 
  2015   003ADF                     SPI1SDIPPS      equ	15071	;# 
  2016   003AE0                     SPI1SSPPS       equ	15072	;# 
  2017   003AE1                     I2C1SCLPPS      equ	15073	;# 
  2018   003AE2                     I2C1SDAPPS      equ	15074	;# 
  2019   003AE3                     I2C2SCLPPS      equ	15075	;# 
  2020   003AE4                     I2C2SDAPPS      equ	15076	;# 
  2021   003AE5                     U1RXPPS         equ	15077	;# 
  2022   003AE6                     U1CTSPPS        equ	15078	;# 
  2023   003AE8                     U2RXPPS         equ	15080	;# 
  2024   003AE9                     U2CTSPPS        equ	15081	;# 
  2025   003BC9                     DMA2BUF         equ	15305	;# 
  2026   003BCA                     DMA2DCNT        equ	15306	;# 
  2027   003BCA                     DMA2DCNTL       equ	15306	;# 
  2028   003BCB                     DMA2DCNTH       equ	15307	;# 
  2029   003BCC                     DMA2DPTR        equ	15308	;# 
  2030   003BCC                     DMA2DPTRL       equ	15308	;# 
  2031   003BCD                     DMA2DPTRH       equ	15309	;# 
  2032   003BCE                     DMA2DSZ         equ	15310	;# 
  2033   003BCE                     DMA2DSZL        equ	15310	;# 
  2034   003BCF                     DMA2DSZH        equ	15311	;# 
  2035   003BD0                     DMA2DSA         equ	15312	;# 
  2036   003BD0                     DMA2DSAL        equ	15312	;# 
  2037   003BD1                     DMA2DSAH        equ	15313	;# 
  2038   003BD2                     DMA2SCNT        equ	15314	;# 
  2039   003BD2                     DMA2SCNTL       equ	15314	;# 
  2040   003BD3                     DMA2SCNTH       equ	15315	;# 
  2041   003BD4                     DMA2SPTR        equ	15316	;# 
  2042   003BD4                     DMA2SPTRL       equ	15316	;# 
  2043   003BD5                     DMA2SPTRH       equ	15317	;# 
  2044   003BD6                     DMA2SPTRU       equ	15318	;# 
  2045   003BD7                     DMA2SSZ         equ	15319	;# 
  2046   003BD7                     DMA2SSZL        equ	15319	;# 
  2047   003BD8                     DMA2SSZH        equ	15320	;# 
  2048   003BD9                     DMA2SSA         equ	15321	;# 
  2049   003BD9                     DMA2SSAL        equ	15321	;# 
  2050   003BDA                     DMA2SSAH        equ	15322	;# 
  2051   003BDB                     DMA2SSAU        equ	15323	;# 
  2052   003BDC                     DMA2CON0        equ	15324	;# 
  2053   003BDD                     DMA2CON1        equ	15325	;# 
  2054   003BDE                     DMA2AIRQ        equ	15326	;# 
  2055   003BDF                     DMA2SIRQ        equ	15327	;# 
  2056   003BE9                     DMA1BUF         equ	15337	;# 
  2057   003BEA                     DMA1DCNT        equ	15338	;# 
  2058   003BEA                     DMA1DCNTL       equ	15338	;# 
  2059   003BEB                     DMA1DCNTH       equ	15339	;# 
  2060   003BEC                     DMA1DPTR        equ	15340	;# 
  2061   003BEC                     DMA1DPTRL       equ	15340	;# 
  2062   003BED                     DMA1DPTRH       equ	15341	;# 
  2063   003BEE                     DMA1DSZ         equ	15342	;# 
  2064   003BEE                     DMA1DSZL        equ	15342	;# 
  2065   003BEF                     DMA1DSZH        equ	15343	;# 
  2066   003BF0                     DMA1DSA         equ	15344	;# 
  2067   003BF0                     DMA1DSAL        equ	15344	;# 
  2068   003BF1                     DMA1DSAH        equ	15345	;# 
  2069   003BF2                     DMA1SCNT        equ	15346	;# 
  2070   003BF2                     DMA1SCNTL       equ	15346	;# 
  2071   003BF3                     DMA1SCNTH       equ	15347	;# 
  2072   003BF4                     DMA1SPTR        equ	15348	;# 
  2073   003BF4                     DMA1SPTRL       equ	15348	;# 
  2074   003BF5                     DMA1SPTRH       equ	15349	;# 
  2075   003BF6                     DMA1SPTRU       equ	15350	;# 
  2076   003BF7                     DMA1SSZ         equ	15351	;# 
  2077   003BF7                     DMA1SSZL        equ	15351	;# 
  2078   003BF8                     DMA1SSZH        equ	15352	;# 
  2079   003BF9                     DMA1SSA         equ	15353	;# 
  2080   003BF9                     DMA1SSAL        equ	15353	;# 
  2081   003BFA                     DMA1SSAH        equ	15354	;# 
  2082   003BFB                     DMA1SSAU        equ	15355	;# 
  2083   003BFC                     DMA1CON0        equ	15356	;# 
  2084   003BFD                     DMA1CON1        equ	15357	;# 
  2085   003BFE                     DMA1AIRQ        equ	15358	;# 
  2086   003BFF                     DMA1SIRQ        equ	15359	;# 
  2087   003C56                     CLC4CON         equ	15446	;# 
  2088   003C57                     CLC4POL         equ	15447	;# 
  2089   003C58                     CLC4SEL0        equ	15448	;# 
  2090   003C59                     CLC4SEL1        equ	15449	;# 
  2091   003C5A                     CLC4SEL2        equ	15450	;# 
  2092   003C5B                     CLC4SEL3        equ	15451	;# 
  2093   003C5C                     CLC4GLS0        equ	15452	;# 
  2094   003C5D                     CLC4GLS1        equ	15453	;# 
  2095   003C5E                     CLC4GLS2        equ	15454	;# 
  2096   003C5F                     CLC4GLS3        equ	15455	;# 
  2097   003C60                     CLC3CON         equ	15456	;# 
  2098   003C61                     CLC3POL         equ	15457	;# 
  2099   003C62                     CLC3SEL0        equ	15458	;# 
  2100   003C63                     CLC3SEL1        equ	15459	;# 
  2101   003C64                     CLC3SEL2        equ	15460	;# 
  2102   003C65                     CLC3SEL3        equ	15461	;# 
  2103   003C66                     CLC3GLS0        equ	15462	;# 
  2104   003C67                     CLC3GLS1        equ	15463	;# 
  2105   003C68                     CLC3GLS2        equ	15464	;# 
  2106   003C69                     CLC3GLS3        equ	15465	;# 
  2107   003C6A                     CLC2CON         equ	15466	;# 
  2108   003C6B                     CLC2POL         equ	15467	;# 
  2109   003C6C                     CLC2SEL0        equ	15468	;# 
  2110   003C6D                     CLC2SEL1        equ	15469	;# 
  2111   003C6E                     CLC2SEL2        equ	15470	;# 
  2112   003C6F                     CLC2SEL3        equ	15471	;# 
  2113   003C70                     CLC2GLS0        equ	15472	;# 
  2114   003C71                     CLC2GLS1        equ	15473	;# 
  2115   003C72                     CLC2GLS2        equ	15474	;# 
  2116   003C73                     CLC2GLS3        equ	15475	;# 
  2117   003C74                     CLC1CON         equ	15476	;# 
  2118   003C75                     CLC1POL         equ	15477	;# 
  2119   003C76                     CLC1SEL0        equ	15478	;# 
  2120   003C77                     CLC1SEL1        equ	15479	;# 
  2121   003C78                     CLC1SEL2        equ	15480	;# 
  2122   003C79                     CLC1SEL3        equ	15481	;# 
  2123   003C7A                     CLC1GLS0        equ	15482	;# 
  2124   003C7B                     CLC1GLS1        equ	15483	;# 
  2125   003C7C                     CLC1GLS2        equ	15484	;# 
  2126   003C7D                     CLC1GLS3        equ	15485	;# 
  2127   003C7E                     CLCDATA0        equ	15486	;# 
  2128   003CE5                     CLKRCON         equ	15589	;# 
  2129   003CE6                     CLKRCLK         equ	15590	;# 
  2130   003CFA                     MD1CON0         equ	15610	;# 
  2131   003CFB                     MD1CON1         equ	15611	;# 
  2132   003CFC                     MD1SRC          equ	15612	;# 
  2133   003CFD                     MD1CARL         equ	15613	;# 
  2134   003CFE                     MD1CARH         equ	15614	;# 
  2135   003D10                     SPI1RXB         equ	15632	;# 
  2136   003D11                     SPI1TXB         equ	15633	;# 
  2137   003D12                     SPI1TCNT        equ	15634	;# 
  2138   003D12                     SPI1TCNTL       equ	15634	;# 
  2139   003D13                     SPI1TCNTH       equ	15635	;# 
  2140   003D14                     SPI1CON0        equ	15636	;# 
  2141   003D15                     SPI1CON1        equ	15637	;# 
  2142   003D16                     SPI1CON2        equ	15638	;# 
  2143   003D17                     SPI1STATUS      equ	15639	;# 
  2144   003D18                     SPI1TWIDTH      equ	15640	;# 
  2145   003D19                     SPI1BAUD        equ	15641	;# 
  2146   003D1A                     SPI1INTF        equ	15642	;# 
  2147   003D1B                     SPI1INTE        equ	15643	;# 
  2148   003D1C                     SPI1CLK         equ	15644	;# 
  2149   003D54                     I2C2RXB         equ	15700	;# 
  2150   003D55                     I2C2TXB         equ	15701	;# 
  2151   003D56                     I2C2CNT         equ	15702	;# 
  2152   003D57                     I2C2ADB0        equ	15703	;# 
  2153   003D58                     I2C2ADB1        equ	15704	;# 
  2154   003D59                     I2C2ADR0        equ	15705	;# 
  2155   003D5A                     I2C2ADR1        equ	15706	;# 
  2156   003D5B                     I2C2ADR2        equ	15707	;# 
  2157   003D5C                     I2C2ADR3        equ	15708	;# 
  2158   003D5D                     I2C2CON0        equ	15709	;# 
  2159   003D5E                     I2C2CON1        equ	15710	;# 
  2160   003D5F                     I2C2CON2        equ	15711	;# 
  2161   003D60                     I2C2ERR         equ	15712	;# 
  2162   003D61                     I2C2STAT0       equ	15713	;# 
  2163   003D62                     I2C2STAT1       equ	15714	;# 
  2164   003D63                     I2C2PIR         equ	15715	;# 
  2165   003D64                     I2C2PIE         equ	15716	;# 
  2166   003D65                     I2C2CLK         equ	15717	;# 
  2167   003D66                     I2C2BTO         equ	15718	;# 
  2168   003D6A                     I2C1RXB         equ	15722	;# 
  2169   003D6B                     I2C1TXB         equ	15723	;# 
  2170   003D6C                     I2C1CNT         equ	15724	;# 
  2171   003D6D                     I2C1ADB0        equ	15725	;# 
  2172   003D6E                     I2C1ADB1        equ	15726	;# 
  2173   003D6F                     I2C1ADR0        equ	15727	;# 
  2174   003D70                     I2C1ADR1        equ	15728	;# 
  2175   003D71                     I2C1ADR2        equ	15729	;# 
  2176   003D72                     I2C1ADR3        equ	15730	;# 
  2177   003D73                     I2C1CON0        equ	15731	;# 
  2178   003D74                     I2C1CON1        equ	15732	;# 
  2179   003D75                     I2C1CON2        equ	15733	;# 
  2180   003D76                     I2C1ERR         equ	15734	;# 
  2181   003D77                     I2C1STAT0       equ	15735	;# 
  2182   003D78                     I2C1STAT1       equ	15736	;# 
  2183   003D79                     I2C1PIR         equ	15737	;# 
  2184   003D7A                     I2C1PIE         equ	15738	;# 
  2185   003D7B                     I2C1CLK         equ	15739	;# 
  2186   003D7C                     I2C1BTO         equ	15740	;# 
  2187   003DD0                     U2RXB           equ	15824	;# 
  2188   003DD0                     U2RXBL          equ	15824	;# 
  2189   003DD2                     U2TXB           equ	15826	;# 
  2190   003DD2                     U2TXBL          equ	15826	;# 
  2191   003DD4                     U2P1            equ	15828	;# 
  2192   003DD4                     U2P1L           equ	15828	;# 
  2193   003DD6                     U2P2            equ	15830	;# 
  2194   003DD6                     U2P2L           equ	15830	;# 
  2195   003DD8                     U2P3            equ	15832	;# 
  2196   003DD8                     U2P3L           equ	15832	;# 
  2197   003DDA                     U2CON0          equ	15834	;# 
  2198   003DDB                     U2CON1          equ	15835	;# 
  2199   003DDC                     U2CON2          equ	15836	;# 
  2200   003DDD                     U2BRG           equ	15837	;# 
  2201   003DDD                     U2BRGL          equ	15837	;# 
  2202   003DDE                     U2BRGH          equ	15838	;# 
  2203   003DDF                     U2FIFO          equ	15839	;# 
  2204   003DE0                     U2UIR           equ	15840	;# 
  2205   003DE1                     U2ERRIR         equ	15841	;# 
  2206   003DE2                     U2ERRIE         equ	15842	;# 
  2207   003DE8                     U1RXB           equ	15848	;# 
  2208   003DE8                     U1RXBL          equ	15848	;# 
  2209   003DE9                     U1RXCHK         equ	15849	;# 
  2210   003DEA                     U1TXB           equ	15850	;# 
  2211   003DEA                     U1TXBL          equ	15850	;# 
  2212   003DEB                     U1TXCHK         equ	15851	;# 
  2213   003DEC                     U1P1            equ	15852	;# 
  2214   003DEC                     U1P1L           equ	15852	;# 
  2215   003DED                     U1P1H           equ	15853	;# 
  2216   003DEE                     U1P2            equ	15854	;# 
  2217   003DEE                     U1P2L           equ	15854	;# 
  2218   003DEF                     U1P2H           equ	15855	;# 
  2219   003DF0                     U1P3            equ	15856	;# 
  2220   003DF0                     U1P3L           equ	15856	;# 
  2221   003DF1                     U1P3H           equ	15857	;# 
  2222   003DF2                     U1CON0          equ	15858	;# 
  2223   003DF3                     U1CON1          equ	15859	;# 
  2224   003DF4                     U1CON2          equ	15860	;# 
  2225   003DF5                     U1BRG           equ	15861	;# 
  2226   003DF5                     U1BRGL          equ	15861	;# 
  2227   003DF6                     U1BRGH          equ	15862	;# 
  2228   003DF7                     U1FIFO          equ	15863	;# 
  2229   003DF8                     U1UIR           equ	15864	;# 
  2230   003DF9                     U1ERRIR         equ	15865	;# 
  2231   003DFA                     U1ERRIE         equ	15866	;# 
  2232   003E9C                     DAC1CON1        equ	16028	;# 
  2233   003E9E                     DAC1CON0        equ	16030	;# 
  2234   003EB8                     CM2CON0         equ	16056	;# 
  2235   003EB9                     CM2CON1         equ	16057	;# 
  2236   003EBA                     CM2NCH          equ	16058	;# 
  2237   003EBB                     CM2PCH          equ	16059	;# 
  2238   003EBC                     CM1CON0         equ	16060	;# 
  2239   003EBD                     CM1CON1         equ	16061	;# 
  2240   003EBE                     CM1NCH          equ	16062	;# 
  2241   003EBF                     CM1PCH          equ	16063	;# 
  2242   003EC0                     CMOUT           equ	16064	;# 
  2243   003EC1                     FVRCON          equ	16065	;# 
  2244   003EC3                     ZCDCON          equ	16067	;# 
  2245   003EC9                     HLVDCON0        equ	16073	;# 
  2246   003ECA                     HLVDCON1        equ	16074	;# 
  2247   003ED7                     ADCP            equ	16087	;# 
  2248   003EDE                     ADLTH           equ	16094	;# 
  2249   003EDE                     ADLTHL          equ	16094	;# 
  2250   003EDF                     ADLTHH          equ	16095	;# 
  2251   003EE0                     ADUTH           equ	16096	;# 
  2252   003EE0                     ADUTHL          equ	16096	;# 
  2253   003EE1                     ADUTHH          equ	16097	;# 
  2254   003EE2                     ADERR           equ	16098	;# 
  2255   003EE2                     ADERRL          equ	16098	;# 
  2256   003EE3                     ADERRH          equ	16099	;# 
  2257   003EE4                     ADSTPT          equ	16100	;# 
  2258   003EE4                     ADSTPTL         equ	16100	;# 
  2259   003EE5                     ADSTPTH         equ	16101	;# 
  2260   003EE6                     ADFLTR          equ	16102	;# 
  2261   003EE6                     ADFLTRL         equ	16102	;# 
  2262   003EE7                     ADFLTRH         equ	16103	;# 
  2263   003EE8                     ADACC           equ	16104	;# 
  2264   003EE8                     ADACCL          equ	16104	;# 
  2265   003EE9                     ADACCH          equ	16105	;# 
  2266   003EEA                     ADACCU          equ	16106	;# 
  2267   003EEB                     ADCNT           equ	16107	;# 
  2268   003EEC                     ADRPT           equ	16108	;# 
  2269   003EED                     ADPREV          equ	16109	;# 
  2270   003EED                     ADPREVL         equ	16109	;# 
  2271   003EEE                     ADPREVH         equ	16110	;# 
  2272   003EEF                     ADRES           equ	16111	;# 
  2273   003EEF                     ADRESL          equ	16111	;# 
  2274   003EF0                     ADRESH          equ	16112	;# 
  2275   003EF1                     ADPCH           equ	16113	;# 
  2276   003EF3                     ADACQ           equ	16115	;# 
  2277   003EF3                     ADACQL          equ	16115	;# 
  2278   003EF4                     ADACQH          equ	16116	;# 
  2279   003EF5                     ADCAP           equ	16117	;# 
  2280   003EF6                     ADPRE           equ	16118	;# 
  2281   003EF6                     ADPREL          equ	16118	;# 
  2282   003EF7                     ADPREH          equ	16119	;# 
  2283   003EF8                     ADCON0          equ	16120	;# 
  2284   003EF9                     ADCON1          equ	16121	;# 
  2285   003EFA                     ADCON2          equ	16122	;# 
  2286   003EFB                     ADCON3          equ	16123	;# 
  2287   003EFC                     ADSTAT          equ	16124	;# 
  2288   003EFD                     ADREF           equ	16125	;# 
  2289   003EFE                     ADACT           equ	16126	;# 
  2290   003EFF                     ADCLK           equ	16127	;# 
  2291   003F12                     SMT1TMR         equ	16146	;# 
  2292   003F12                     SMT1TMRL        equ	16146	;# 
  2293   003F13                     SMT1TMRH        equ	16147	;# 
  2294   003F14                     SMT1TMRU        equ	16148	;# 
  2295   003F15                     SMT1CPR         equ	16149	;# 
  2296   003F15                     SMT1CPRL        equ	16149	;# 
  2297   003F16                     SMT1CPRH        equ	16150	;# 
  2298   003F17                     SMT1CPRU        equ	16151	;# 
  2299   003F18                     SMT1CPW         equ	16152	;# 
  2300   003F18                     SMT1CPWL        equ	16152	;# 
  2301   003F19                     SMT1CPWH        equ	16153	;# 
  2302   003F1A                     SMT1CPWU        equ	16154	;# 
  2303   003F1B                     SMT1PR          equ	16155	;# 
  2304   003F1B                     SMT1PRL         equ	16155	;# 
  2305   003F1C                     SMT1PRH         equ	16156	;# 
  2306   003F1D                     SMT1PRU         equ	16157	;# 
  2307   003F1E                     SMT1CON0        equ	16158	;# 
  2308   003F1F                     SMT1CON1        equ	16159	;# 
  2309   003F20                     SMT1STAT        equ	16160	;# 
  2310   003F21                     SMT1CLK         equ	16161	;# 
  2311   003F22                     SMT1SIG         equ	16162	;# 
  2312   003F23                     SMT1WIN         equ	16163	;# 
  2313   003F38                     NCO1ACC         equ	16184	;# 
  2314   003F38                     NCO1ACCL        equ	16184	;# 
  2315   003F39                     NCO1ACCH        equ	16185	;# 
  2316   003F3A                     NCO1ACCU        equ	16186	;# 
  2317   003F3B                     NCO1INC         equ	16187	;# 
  2318   003F3B                     NCO1INCL        equ	16187	;# 
  2319   003F3C                     NCO1INCH        equ	16188	;# 
  2320   003F3D                     NCO1INCU        equ	16189	;# 
  2321   003F3E                     NCO1CON         equ	16190	;# 
  2322   003F3F                     NCO1CLK         equ	16191	;# 
  2323   003F40                     CWG3CLK         equ	16192	;# 
  2324   003F40                     CWG3CLKCON      equ	16192	;# 
  2325   003F41                     CWG3ISM         equ	16193	;# 
  2326   003F41                     CWG3DAT         equ	16193	;# 
  2327   003F42                     CWG3DBR         equ	16194	;# 
  2328   003F43                     CWG3DBF         equ	16195	;# 
  2329   003F44                     CWG3CON0        equ	16196	;# 
  2330   003F45                     CWG3CON1        equ	16197	;# 
  2331   003F46                     CWG3AS0         equ	16198	;# 
  2332   003F47                     CWG3AS1         equ	16199	;# 
  2333   003F48                     CWG3STR         equ	16200	;# 
  2334   003F49                     CWG2CLK         equ	16201	;# 
  2335   003F49                     CWG2CLKCON      equ	16201	;# 
  2336   003F4A                     CWG2ISM         equ	16202	;# 
  2337   003F4A                     CWG2DAT         equ	16202	;# 
  2338   003F4B                     CWG2DBR         equ	16203	;# 
  2339   003F4C                     CWG2DBF         equ	16204	;# 
  2340   003F4D                     CWG2CON0        equ	16205	;# 
  2341   003F4E                     CWG2CON1        equ	16206	;# 
  2342   003F4F                     CWG2AS0         equ	16207	;# 
  2343   003F50                     CWG2AS1         equ	16208	;# 
  2344   003F51                     CWG2STR         equ	16209	;# 
  2345   003F52                     CWG1CLK         equ	16210	;# 
  2346   003F52                     CWG1CLKCON      equ	16210	;# 
  2347   003F53                     CWG1ISM         equ	16211	;# 
  2348   003F53                     CWG1DAT         equ	16211	;# 
  2349   003F54                     CWG1DBR         equ	16212	;# 
  2350   003F55                     CWG1DBF         equ	16213	;# 
  2351   003F56                     CWG1CON0        equ	16214	;# 
  2352   003F57                     CWG1CON1        equ	16215	;# 
  2353   003F58                     CWG1AS0         equ	16216	;# 
  2354   003F59                     CWG1AS1         equ	16217	;# 
  2355   003F5A                     CWG1STR         equ	16218	;# 
  2356   003F5E                     CCPTMRS0        equ	16222	;# 
  2357   003F5F                     CCPTMRS1        equ	16223	;# 
  2358   003F60                     PWM8DC          equ	16224	;# 
  2359   003F60                     PWM8DCL         equ	16224	;# 
  2360   003F61                     PWM8DCH         equ	16225	;# 
  2361   003F62                     PWM8CON         equ	16226	;# 
  2362   003F64                     PWM7DC          equ	16228	;# 
  2363   003F64                     PWM7DCL         equ	16228	;# 
  2364   003F65                     PWM7DCH         equ	16229	;# 
  2365   003F66                     PWM7CON         equ	16230	;# 
  2366   003F68                     PWM6DC          equ	16232	;# 
  2367   003F68                     PWM6DCL         equ	16232	;# 
  2368   003F69                     PWM6DCH         equ	16233	;# 
  2369   003F6A                     PWM6CON         equ	16234	;# 
  2370   003F6C                     PWM5DC          equ	16236	;# 
  2371   003F6C                     PWM5DCL         equ	16236	;# 
  2372   003F6D                     PWM5DCH         equ	16237	;# 
  2373   003F6E                     PWM5CON         equ	16238	;# 
  2374   003F70                     CCPR4           equ	16240	;# 
  2375   003F70                     CCPR4L          equ	16240	;# 
  2376   003F71                     CCPR4H          equ	16241	;# 
  2377   003F72                     CCP4CON         equ	16242	;# 
  2378   003F73                     CCP4CAP         equ	16243	;# 
  2379   003F74                     CCPR3           equ	16244	;# 
  2380   003F74                     CCPR3L          equ	16244	;# 
  2381   003F75                     CCPR3H          equ	16245	;# 
  2382   003F76                     CCP3CON         equ	16246	;# 
  2383   003F77                     CCP3CAP         equ	16247	;# 
  2384   003F78                     CCPR2           equ	16248	;# 
  2385   003F78                     CCPR2L          equ	16248	;# 
  2386   003F79                     CCPR2H          equ	16249	;# 
  2387   003F7A                     CCP2CON         equ	16250	;# 
  2388   003F7B                     CCP2CAP         equ	16251	;# 
  2389   003F7C                     CCPR1           equ	16252	;# 
  2390   003F7C                     CCPR1L          equ	16252	;# 
  2391   003F7D                     CCPR1H          equ	16253	;# 
  2392   003F7E                     CCP1CON         equ	16254	;# 
  2393   003F7F                     CCP1CAP         equ	16255	;# 
  2394   003F92                     T6TMR           equ	16274	;# 
  2395   003F92                     TMR6            equ	16274	;# 
  2396   003F93                     T6PR            equ	16275	;# 
  2397   003F93                     PR6             equ	16275	;# 
  2398   003F94                     T6CON           equ	16276	;# 
  2399   003F95                     T6HLT           equ	16277	;# 
  2400   003F96                     T6CLKCON        equ	16278	;# 
  2401   003F96                     T6CLK           equ	16278	;# 
  2402   003F97                     T6RST           equ	16279	;# 
  2403   003F98                     TMR5            equ	16280	;# 
  2404   003F98                     TMR5L           equ	16280	;# 
  2405   003F99                     TMR5H           equ	16281	;# 
  2406   003F9A                     T5CON           equ	16282	;# 
  2407   003F9A                     TMR5CON         equ	16282	;# 
  2408   003F9B                     T5GCON          equ	16283	;# 
  2409   003F9B                     TMR5GCON        equ	16283	;# 
  2410   003F9C                     T5GATE          equ	16284	;# 
  2411   003F9C                     TMR5GATE        equ	16284	;# 
  2412   003F9D                     T5CLK           equ	16285	;# 
  2413   003F9D                     TMR5CLK         equ	16285	;# 
  2414   003F9D                     PR5             equ	16285	;# 
  2415   003F9E                     T4TMR           equ	16286	;# 
  2416   003F9E                     TMR4            equ	16286	;# 
  2417   003F9F                     T4PR            equ	16287	;# 
  2418   003F9F                     PR4             equ	16287	;# 
  2419   003FA0                     T4CON           equ	16288	;# 
  2420   003FA1                     T4HLT           equ	16289	;# 
  2421   003FA2                     T4CLKCON        equ	16290	;# 
  2422   003FA2                     T4CLK           equ	16290	;# 
  2423   003FA3                     T4RST           equ	16291	;# 
  2424   003FA4                     TMR3            equ	16292	;# 
  2425   003FA4                     TMR3L           equ	16292	;# 
  2426   003FA5                     TMR3H           equ	16293	;# 
  2427   003FA6                     T3CON           equ	16294	;# 
  2428   003FA6                     TMR3CON         equ	16294	;# 
  2429   003FA7                     T3GCON          equ	16295	;# 
  2430   003FA7                     TMR3GCON        equ	16295	;# 
  2431   003FA8                     T3GATE          equ	16296	;# 
  2432   003FA8                     TMR3GATE        equ	16296	;# 
  2433   003FA9                     T3CLK           equ	16297	;# 
  2434   003FA9                     TMR3CLK         equ	16297	;# 
  2435   003FA9                     PR3             equ	16297	;# 
  2436   003FAA                     T2TMR           equ	16298	;# 
  2437   003FAA                     TMR2            equ	16298	;# 
  2438   003FAB                     T2PR            equ	16299	;# 
  2439   003FAB                     PR2             equ	16299	;# 
  2440   003FAC                     T2CON           equ	16300	;# 
  2441   003FAD                     T2HLT           equ	16301	;# 
  2442   003FAE                     T2CLKCON        equ	16302	;# 
  2443   003FAE                     T2CLK           equ	16302	;# 
  2444   003FAF                     T2RST           equ	16303	;# 
  2445   003FB0                     TMR1            equ	16304	;# 
  2446   003FB0                     TMR1L           equ	16304	;# 
  2447   003FB1                     TMR1H           equ	16305	;# 
  2448   003FB2                     T1CON           equ	16306	;# 
  2449   003FB2                     TMR1CON         equ	16306	;# 
  2450   003FB3                     T1GCON          equ	16307	;# 
  2451   003FB3                     TMR1GCON        equ	16307	;# 
  2452   003FB4                     T1GATE          equ	16308	;# 
  2453   003FB4                     TMR1GATE        equ	16308	;# 
  2454   003FB5                     T1CLK           equ	16309	;# 
  2455   003FB5                     TMR1CLK         equ	16309	;# 
  2456   003FB5                     PR1             equ	16309	;# 
  2457   003FB6                     TMR0L           equ	16310	;# 
  2458   003FB6                     TMR0            equ	16310	;# 
  2459   003FB7                     TMR0H           equ	16311	;# 
  2460   003FB7                     PR0             equ	16311	;# 
  2461   003FB8                     T0CON0          equ	16312	;# 
  2462   003FB9                     T0CON1          equ	16313	;# 
  2463   003FBA                     LATA            equ	16314	;# 
  2464   003FBB                     LATB            equ	16315	;# 
  2465   003FBC                     LATC            equ	16316	;# 
  2466   003FBD                     LATD            equ	16317	;# 
  2467   003FBE                     LATE            equ	16318	;# 
  2468   003FBF                     LATF            equ	16319	;# 
  2469   003FC2                     TRISA           equ	16322	;# 
  2470   003FC3                     TRISB           equ	16323	;# 
  2471   003FC4                     TRISC           equ	16324	;# 
  2472   003FC5                     TRISD           equ	16325	;# 
  2473   003FC6                     TRISE           equ	16326	;# 
  2474   003FC7                     TRISF           equ	16327	;# 
  2475   003FCA                     PORTA           equ	16330	;# 
  2476   003FCB                     PORTB           equ	16331	;# 
  2477   003FCC                     PORTC           equ	16332	;# 
  2478   003FCD                     PORTD           equ	16333	;# 
  2479   003FCE                     PORTE           equ	16334	;# 
  2480   003FCF                     PORTF           equ	16335	;# 
  2481   003FD2                     INTCON0         equ	16338	;# 
  2482   003FD3                     INTCON1         equ	16339	;# 
  2483   003FD4                     IVTLOCK         equ	16340	;# 
  2484   003FD5                     IVTBASE         equ	16341	;# 
  2485   003FD5                     IVTBASEL        equ	16341	;# 
  2486   003FD6                     IVTBASEH        equ	16342	;# 
  2487   003FD7                     IVTBASEU        equ	16343	;# 
  2488   003FD8                     STATUS          equ	16344	;# 
  2489   003FD9                     FSR2            equ	16345	;# 
  2490   003FD9                     FSR2L           equ	16345	;# 
  2491   003FDA                     FSR2H           equ	16346	;# 
  2492   003FDB                     PLUSW2          equ	16347	;# 
  2493   003FDC                     PREINC2         equ	16348	;# 
  2494   003FDD                     POSTDEC2        equ	16349	;# 
  2495   003FDE                     POSTINC2        equ	16350	;# 
  2496   003FDF                     INDF2           equ	16351	;# 
  2497   003FE0                     BSR             equ	16352	;# 
  2498   003FE1                     FSR1            equ	16353	;# 
  2499   003FE1                     FSR1L           equ	16353	;# 
  2500   003FE2                     FSR1H           equ	16354	;# 
  2501   003FE3                     PLUSW1          equ	16355	;# 
  2502   003FE4                     PREINC1         equ	16356	;# 
  2503   003FE5                     POSTDEC1        equ	16357	;# 
  2504   003FE6                     POSTINC1        equ	16358	;# 
  2505   003FE7                     INDF1           equ	16359	;# 
  2506   003FE8                     WREG            equ	16360	;# 
  2507   003FE9                     FSR0            equ	16361	;# 
  2508   003FE9                     FSR0L           equ	16361	;# 
  2509   003FEA                     FSR0H           equ	16362	;# 
  2510   003FEB                     PLUSW0          equ	16363	;# 
  2511   003FEC                     PREINC0         equ	16364	;# 
  2512   003FED                     POSTDEC0        equ	16365	;# 
  2513   003FEE                     POSTINC0        equ	16366	;# 
  2514   003FEF                     INDF0           equ	16367	;# 
  2515   003FF0                     PCON0           equ	16368	;# 
  2516   003FF1                     PCON1           equ	16369	;# 
  2517   003FF3                     PROD            equ	16371	;# 
  2518   003FF3                     PRODL           equ	16371	;# 
  2519   003FF4                     PRODH           equ	16372	;# 
  2520   003FF5                     TABLAT          equ	16373	;# 
  2521   003FF6                     TBLPTR          equ	16374	;# 
  2522   003FF6                     TBLPTRL         equ	16374	;# 
  2523   003FF7                     TBLPTRH         equ	16375	;# 
  2524   003FF8                     TBLPTRU         equ	16376	;# 
  2525   003FF9                     PCLAT           equ	16377	;# 
  2526   003FF9                     PCL             equ	16377	;# 
  2527   003FFA                     PCLATH          equ	16378	;# 
  2528   003FFB                     PCLATU          equ	16379	;# 
  2529   003FFC                     STKPTR          equ	16380	;# 
  2530   003FFD                     TOS             equ	16381	;# 
  2531   003FFD                     TOSL            equ	16381	;# 
  2532   003FFE                     TOSH            equ	16382	;# 
  2533   003FFF                     TOSU            equ	16383	;# 
  2534   003880                     STATUS_CSHAD    equ	14464	;# 
  2535   003881                     WREG_CSHAD      equ	14465	;# 
  2536   003882                     BSR_CSHAD       equ	14466	;# 
  2537   003883                     SHADCON         equ	14467	;# 
  2538   003884                     STATUS_SHAD     equ	14468	;# 
  2539   003885                     WREG_SHAD       equ	14469	;# 
  2540   003886                     BSR_SHAD        equ	14470	;# 
  2541   003887                     PCLATH_SHAD     equ	14471	;# 
  2542   003888                     PCLATU_SHAD     equ	14472	;# 
  2543   003889                     FSR0SH          equ	14473	;# 
  2544   003889                     FSR0L_SHAD      equ	14473	;# 
  2545   00388A                     FSR0H_SHAD      equ	14474	;# 
  2546   00388B                     FSR1SH          equ	14475	;# 
  2547   00388B                     FSR1L_SHAD      equ	14475	;# 
  2548   00388C                     FSR1H_SHAD      equ	14476	;# 
  2549   00388D                     FSR2SH          equ	14477	;# 
  2550   00388D                     FSR2L_SHAD      equ	14477	;# 
  2551   00388E                     FSR2H_SHAD      equ	14478	;# 
  2552   00388F                     PRODSH          equ	14479	;# 
  2553   00388F                     PRODL_SHAD      equ	14479	;# 
  2554   003890                     PRODH_SHAD      equ	14480	;# 
  2555   00389D                     IVTADL          equ	14493	;# 
  2556   00389E                     IVTADH          equ	14494	;# 
  2557   00389F                     IVTADU          equ	14495	;# 
  2558   00395B                     WDTCON0         equ	14683	;# 
  2559   00395C                     WDTCON1         equ	14684	;# 
  2560   00395D                     WDTPSL          equ	14685	;# 
  2561   00395E                     WDTPSH          equ	14686	;# 
  2562   00395F                     WDTTMR          equ	14687	;# 
  2563   003960                     CRCDATA         equ	14688	;# 
  2564   003960                     CRCDATL         equ	14688	;# 
  2565   003961                     CRCDATH         equ	14689	;# 
  2566   003962                     CRCACC          equ	14690	;# 
  2567   003962                     CRCACCL         equ	14690	;# 
  2568   003963                     CRCACCH         equ	14691	;# 
  2569   003964                     CRCSHFT         equ	14692	;# 
  2570   003964                     CRCSHIFTL       equ	14692	;# 
  2571   003965                     CRCSHIFTH       equ	14693	;# 
  2572   003966                     CRCXOR          equ	14694	;# 
  2573   003966                     CRCXORL         equ	14694	;# 
  2574   003967                     CRCXORH         equ	14695	;# 
  2575   003968                     CRCCON0         equ	14696	;# 
  2576   003969                     CRCCON1         equ	14697	;# 
  2577   003976                     SCANLADR        equ	14710	;# 
  2578   003976                     SCANLADRL       equ	14710	;# 
  2579   003977                     SCANLADRH       equ	14711	;# 
  2580   003978                     SCANLADRU       equ	14712	;# 
  2581   003979                     SCANHADR        equ	14713	;# 
  2582   003979                     SCANHADRL       equ	14713	;# 
  2583   00397A                     SCANHADRH       equ	14714	;# 
  2584   00397B                     SCANHADRU       equ	14715	;# 
  2585   00397C                     SCANCON0        equ	14716	;# 
  2586   00397D                     SCANTRIG        equ	14717	;# 
  2587   003980                     IPR0            equ	14720	;# 
  2588   003981                     IPR1            equ	14721	;# 
  2589   003982                     IPR2            equ	14722	;# 
  2590   003983                     IPR3            equ	14723	;# 
  2591   003984                     IPR4            equ	14724	;# 
  2592   003985                     IPR5            equ	14725	;# 
  2593   003986                     IPR6            equ	14726	;# 
  2594   003987                     IPR7            equ	14727	;# 
  2595   003988                     IPR8            equ	14728	;# 
  2596   003989                     IPR9            equ	14729	;# 
  2597   00398A                     IPR10           equ	14730	;# 
  2598   003990                     PIE0            equ	14736	;# 
  2599   003991                     PIE1            equ	14737	;# 
  2600   003992                     PIE2            equ	14738	;# 
  2601   003993                     PIE3            equ	14739	;# 
  2602   003994                     PIE4            equ	14740	;# 
  2603   003995                     PIE5            equ	14741	;# 
  2604   003996                     PIE6            equ	14742	;# 
  2605   003997                     PIE7            equ	14743	;# 
  2606   003998                     PIE8            equ	14744	;# 
  2607   003999                     PIE9            equ	14745	;# 
  2608   00399A                     PIE10           equ	14746	;# 
  2609   0039A0                     PIR0            equ	14752	;# 
  2610   0039A1                     PIR1            equ	14753	;# 
  2611   0039A2                     PIR2            equ	14754	;# 
  2612   0039A3                     PIR3            equ	14755	;# 
  2613   0039A4                     PIR4            equ	14756	;# 
  2614   0039A5                     PIR5            equ	14757	;# 
  2615   0039A6                     PIR6            equ	14758	;# 
  2616   0039A7                     PIR7            equ	14759	;# 
  2617   0039A8                     PIR8            equ	14760	;# 
  2618   0039A9                     PIR9            equ	14761	;# 
  2619   0039AA                     PIR10           equ	14762	;# 
  2620   0039C0                     PMD0            equ	14784	;# 
  2621   0039C1                     PMD1            equ	14785	;# 
  2622   0039C2                     PMD2            equ	14786	;# 
  2623   0039C3                     PMD3            equ	14787	;# 
  2624   0039C4                     PMD4            equ	14788	;# 
  2625   0039C5                     PMD5            equ	14789	;# 
  2626   0039C6                     PMD6            equ	14790	;# 
  2627   0039C7                     PMD7            equ	14791	;# 
  2628   0039D0                     BORCON          equ	14800	;# 
  2629   0039D1                     VREGCON         equ	14801	;# 
  2630   0039D8                     CPUDOZE         equ	14808	;# 
  2631   0039D9                     OSCCON1         equ	14809	;# 
  2632   0039DA                     OSCCON2         equ	14810	;# 
  2633   0039DB                     OSCCON3         equ	14811	;# 
  2634   0039DC                     OSCSTAT         equ	14812	;# 
  2635   0039DC                     OSCSTAT1        equ	14812	;# 
  2636   0039DD                     OSCEN           equ	14813	;# 
  2637   0039DE                     OSCTUNE         equ	14814	;# 
  2638   0039DF                     OSCFRQ          equ	14815	;# 
  2639   0039E0                     NVMADRL         equ	14816	;# 
  2640   0039E1                     NVMADRH         equ	14817	;# 
  2641   0039E3                     NVMDAT          equ	14819	;# 
  2642   0039E5                     NVMCON1         equ	14821	;# 
  2643   0039E6                     NVMCON2         equ	14822	;# 
  2644   0039EF                     PRLOCK          equ	14831	;# 
  2645   0039F1                     ISRPR           equ	14833	;# 
  2646   0039F2                     MAINPR          equ	14834	;# 
  2647   0039F3                     DMA1PR          equ	14835	;# 
  2648   0039F4                     DMA2PR          equ	14836	;# 
  2649   0039F7                     SCANPR          equ	14839	;# 
  2650   003A00                     RA0PPS          equ	14848	;# 
  2651   003A01                     RA1PPS          equ	14849	;# 
  2652   003A02                     RA2PPS          equ	14850	;# 
  2653   003A03                     RA3PPS          equ	14851	;# 
  2654   003A04                     RA4PPS          equ	14852	;# 
  2655   003A05                     RA5PPS          equ	14853	;# 
  2656   003A06                     RA6PPS          equ	14854	;# 
  2657   003A07                     RA7PPS          equ	14855	;# 
  2658   003A08                     RB0PPS          equ	14856	;# 
  2659   003A09                     RB1PPS          equ	14857	;# 
  2660   003A0A                     RB2PPS          equ	14858	;# 
  2661   003A0B                     RB3PPS          equ	14859	;# 
  2662   003A0C                     RB4PPS          equ	14860	;# 
  2663   003A0D                     RB5PPS          equ	14861	;# 
  2664   003A0E                     RB6PPS          equ	14862	;# 
  2665   003A0F                     RB7PPS          equ	14863	;# 
  2666   003A10                     RC0PPS          equ	14864	;# 
  2667   003A11                     RC1PPS          equ	14865	;# 
  2668   003A12                     RC2PPS          equ	14866	;# 
  2669   003A13                     RC3PPS          equ	14867	;# 
  2670   003A14                     RC4PPS          equ	14868	;# 
  2671   003A15                     RC5PPS          equ	14869	;# 
  2672   003A16                     RC6PPS          equ	14870	;# 
  2673   003A17                     RC7PPS          equ	14871	;# 
  2674   003A18                     RD0PPS          equ	14872	;# 
  2675   003A19                     RD1PPS          equ	14873	;# 
  2676   003A1A                     RD2PPS          equ	14874	;# 
  2677   003A1B                     RD3PPS          equ	14875	;# 
  2678   003A1C                     RD4PPS          equ	14876	;# 
  2679   003A1D                     RD5PPS          equ	14877	;# 
  2680   003A1E                     RD6PPS          equ	14878	;# 
  2681   003A1F                     RD7PPS          equ	14879	;# 
  2682   003A20                     RE0PPS          equ	14880	;# 
  2683   003A21                     RE1PPS          equ	14881	;# 
  2684   003A22                     RE2PPS          equ	14882	;# 
  2685   003A28                     RF0PPS          equ	14888	;# 
  2686   003A29                     RF1PPS          equ	14889	;# 
  2687   003A2A                     RF2PPS          equ	14890	;# 
  2688   003A2B                     RF3PPS          equ	14891	;# 
  2689   003A2C                     RF4PPS          equ	14892	;# 
  2690   003A2D                     RF5PPS          equ	14893	;# 
  2691   003A2E                     RF6PPS          equ	14894	;# 
  2692   003A2F                     RF7PPS          equ	14895	;# 
  2693   003A40                     ANSELA          equ	14912	;# 
  2694   003A41                     WPUA            equ	14913	;# 
  2695   003A42                     ODCONA          equ	14914	;# 
  2696   003A43                     SLRCONA         equ	14915	;# 
  2697   003A44                     INLVLA          equ	14916	;# 
  2698   003A45                     IOCAP           equ	14917	;# 
  2699   003A46                     IOCAN           equ	14918	;# 
  2700   003A47                     IOCAF           equ	14919	;# 
  2701   003A50                     ANSELB          equ	14928	;# 
  2702   003A51                     WPUB            equ	14929	;# 
  2703   003A52                     ODCONB          equ	14930	;# 
  2704   003A53                     SLRCONB         equ	14931	;# 
  2705   003A54                     INLVLB          equ	14932	;# 
  2706   003A55                     IOCBP           equ	14933	;# 
  2707   003A56                     IOCBN           equ	14934	;# 
  2708   003A57                     IOCBF           equ	14935	;# 
  2709   003A5A                     RB1I2C          equ	14938	;# 
  2710   003A5B                     RB2I2C          equ	14939	;# 
  2711   003A60                     ANSELC          equ	14944	;# 
  2712   003A61                     WPUC            equ	14945	;# 
  2713   003A62                     ODCONC          equ	14946	;# 
  2714   003A63                     SLRCONC         equ	14947	;# 
  2715   003A64                     INLVLC          equ	14948	;# 
  2716   003A65                     IOCCP           equ	14949	;# 
  2717   003A66                     IOCCN           equ	14950	;# 
  2718   003A67                     IOCCF           equ	14951	;# 
  2719   003A6A                     RC3I2C          equ	14954	;# 
  2720   003A6B                     RC4I2C          equ	14955	;# 
  2721   003A70                     ANSELD          equ	14960	;# 
  2722   003A71                     WPUD            equ	14961	;# 
  2723   003A72                     ODCOND          equ	14962	;# 
  2724   003A73                     SLRCOND         equ	14963	;# 
  2725   003A74                     INLVLD          equ	14964	;# 
  2726   003A7A                     RD0I2C          equ	14970	;# 
  2727   003A7B                     RD1I2C          equ	14971	;# 
  2728   003A80                     ANSELE          equ	14976	;# 
  2729   003A81                     WPUE            equ	14977	;# 
  2730   003A82                     ODCONE          equ	14978	;# 
  2731   003A83                     SLRCONE         equ	14979	;# 
  2732   003A84                     INLVLE          equ	14980	;# 
  2733   003A85                     IOCEP           equ	14981	;# 
  2734   003A86                     IOCEN           equ	14982	;# 
  2735   003A87                     IOCEF           equ	14983	;# 
  2736   003A90                     ANSELF          equ	14992	;# 
  2737   003A91                     WPUF            equ	14993	;# 
  2738   003A92                     ODCONF          equ	14994	;# 
  2739   003A93                     SLRCONF         equ	14995	;# 
  2740   003A94                     INLVLF          equ	14996	;# 
  2741   003ABF                     PPSLOCK         equ	15039	;# 
  2742   003AC0                     INT0PPS         equ	15040	;# 
  2743   003AC1                     INT1PPS         equ	15041	;# 
  2744   003AC2                     INT2PPS         equ	15042	;# 
  2745   003AC3                     T0CKIPPS        equ	15043	;# 
  2746   003AC4                     T1CKIPPS        equ	15044	;# 
  2747   003AC5                     T1GPPS          equ	15045	;# 
  2748   003AC6                     T3CKIPPS        equ	15046	;# 
  2749   003AC7                     T3GPPS          equ	15047	;# 
  2750   003AC8                     T5CKIPPS        equ	15048	;# 
  2751   003AC9                     T5GPPS          equ	15049	;# 
  2752   003ACA                     T2INPPS         equ	15050	;# 
  2753   003ACB                     T4INPPS         equ	15051	;# 
  2754   003ACC                     T6INPPS         equ	15052	;# 
  2755   003ACD                     CCP1PPS         equ	15053	;# 
  2756   003ACE                     CCP2PPS         equ	15054	;# 
  2757   003ACF                     CCP3PPS         equ	15055	;# 
  2758   003AD0                     CCP4PPS         equ	15056	;# 
  2759   003AD1                     SMT1WINPPS      equ	15057	;# 
  2760   003AD2                     SMT1SIGPPS      equ	15058	;# 
  2761   003AD3                     CWG1INPPS       equ	15059	;# 
  2762   003AD4                     CWG2INPPS       equ	15060	;# 
  2763   003AD5                     CWG3INPPS       equ	15061	;# 
  2764   003AD6                     MD1CARLPPS      equ	15062	;# 
  2765   003AD7                     MD1CARHPPS      equ	15063	;# 
  2766   003AD8                     MD1SRCPPS       equ	15064	;# 
  2767   003AD9                     CLCIN0PPS       equ	15065	;# 
  2768   003ADA                     CLCIN1PPS       equ	15066	;# 
  2769   003ADB                     CLCIN2PPS       equ	15067	;# 
  2770   003ADC                     CLCIN3PPS       equ	15068	;# 
  2771   003ADD                     ADACTPPS        equ	15069	;# 
  2772   003ADE                     SPI1SCKPPS      equ	15070	;# 
  2773   003ADF                     SPI1SDIPPS      equ	15071	;# 
  2774   003AE0                     SPI1SSPPS       equ	15072	;# 
  2775   003AE1                     I2C1SCLPPS      equ	15073	;# 
  2776   003AE2                     I2C1SDAPPS      equ	15074	;# 
  2777   003AE3                     I2C2SCLPPS      equ	15075	;# 
  2778   003AE4                     I2C2SDAPPS      equ	15076	;# 
  2779   003AE5                     U1RXPPS         equ	15077	;# 
  2780   003AE6                     U1CTSPPS        equ	15078	;# 
  2781   003AE8                     U2RXPPS         equ	15080	;# 
  2782   003AE9                     U2CTSPPS        equ	15081	;# 
  2783   003BC9                     DMA2BUF         equ	15305	;# 
  2784   003BCA                     DMA2DCNT        equ	15306	;# 
  2785   003BCA                     DMA2DCNTL       equ	15306	;# 
  2786   003BCB                     DMA2DCNTH       equ	15307	;# 
  2787   003BCC                     DMA2DPTR        equ	15308	;# 
  2788   003BCC                     DMA2DPTRL       equ	15308	;# 
  2789   003BCD                     DMA2DPTRH       equ	15309	;# 
  2790   003BCE                     DMA2DSZ         equ	15310	;# 
  2791   003BCE                     DMA2DSZL        equ	15310	;# 
  2792   003BCF                     DMA2DSZH        equ	15311	;# 
  2793   003BD0                     DMA2DSA         equ	15312	;# 
  2794   003BD0                     DMA2DSAL        equ	15312	;# 
  2795   003BD1                     DMA2DSAH        equ	15313	;# 
  2796   003BD2                     DMA2SCNT        equ	15314	;# 
  2797   003BD2                     DMA2SCNTL       equ	15314	;# 
  2798   003BD3                     DMA2SCNTH       equ	15315	;# 
  2799   003BD4                     DMA2SPTR        equ	15316	;# 
  2800   003BD4                     DMA2SPTRL       equ	15316	;# 
  2801   003BD5                     DMA2SPTRH       equ	15317	;# 
  2802   003BD6                     DMA2SPTRU       equ	15318	;# 
  2803   003BD7                     DMA2SSZ         equ	15319	;# 
  2804   003BD7                     DMA2SSZL        equ	15319	;# 
  2805   003BD8                     DMA2SSZH        equ	15320	;# 
  2806   003BD9                     DMA2SSA         equ	15321	;# 
  2807   003BD9                     DMA2SSAL        equ	15321	;# 
  2808   003BDA                     DMA2SSAH        equ	15322	;# 
  2809   003BDB                     DMA2SSAU        equ	15323	;# 
  2810   003BDC                     DMA2CON0        equ	15324	;# 
  2811   003BDD                     DMA2CON1        equ	15325	;# 
  2812   003BDE                     DMA2AIRQ        equ	15326	;# 
  2813   003BDF                     DMA2SIRQ        equ	15327	;# 
  2814   003BE9                     DMA1BUF         equ	15337	;# 
  2815   003BEA                     DMA1DCNT        equ	15338	;# 
  2816   003BEA                     DMA1DCNTL       equ	15338	;# 
  2817   003BEB                     DMA1DCNTH       equ	15339	;# 
  2818   003BEC                     DMA1DPTR        equ	15340	;# 
  2819   003BEC                     DMA1DPTRL       equ	15340	;# 
  2820   003BED                     DMA1DPTRH       equ	15341	;# 
  2821   003BEE                     DMA1DSZ         equ	15342	;# 
  2822   003BEE                     DMA1DSZL        equ	15342	;# 
  2823   003BEF                     DMA1DSZH        equ	15343	;# 
  2824   003BF0                     DMA1DSA         equ	15344	;# 
  2825   003BF0                     DMA1DSAL        equ	15344	;# 
  2826   003BF1                     DMA1DSAH        equ	15345	;# 
  2827   003BF2                     DMA1SCNT        equ	15346	;# 
  2828   003BF2                     DMA1SCNTL       equ	15346	;# 
  2829   003BF3                     DMA1SCNTH       equ	15347	;# 
  2830   003BF4                     DMA1SPTR        equ	15348	;# 
  2831   003BF4                     DMA1SPTRL       equ	15348	;# 
  2832   003BF5                     DMA1SPTRH       equ	15349	;# 
  2833   003BF6                     DMA1SPTRU       equ	15350	;# 
  2834   003BF7                     DMA1SSZ         equ	15351	;# 
  2835   003BF7                     DMA1SSZL        equ	15351	;# 
  2836   003BF8                     DMA1SSZH        equ	15352	;# 
  2837   003BF9                     DMA1SSA         equ	15353	;# 
  2838   003BF9                     DMA1SSAL        equ	15353	;# 
  2839   003BFA                     DMA1SSAH        equ	15354	;# 
  2840   003BFB                     DMA1SSAU        equ	15355	;# 
  2841   003BFC                     DMA1CON0        equ	15356	;# 
  2842   003BFD                     DMA1CON1        equ	15357	;# 
  2843   003BFE                     DMA1AIRQ        equ	15358	;# 
  2844   003BFF                     DMA1SIRQ        equ	15359	;# 
  2845   003C56                     CLC4CON         equ	15446	;# 
  2846   003C57                     CLC4POL         equ	15447	;# 
  2847   003C58                     CLC4SEL0        equ	15448	;# 
  2848   003C59                     CLC4SEL1        equ	15449	;# 
  2849   003C5A                     CLC4SEL2        equ	15450	;# 
  2850   003C5B                     CLC4SEL3        equ	15451	;# 
  2851   003C5C                     CLC4GLS0        equ	15452	;# 
  2852   003C5D                     CLC4GLS1        equ	15453	;# 
  2853   003C5E                     CLC4GLS2        equ	15454	;# 
  2854   003C5F                     CLC4GLS3        equ	15455	;# 
  2855   003C60                     CLC3CON         equ	15456	;# 
  2856   003C61                     CLC3POL         equ	15457	;# 
  2857   003C62                     CLC3SEL0        equ	15458	;# 
  2858   003C63                     CLC3SEL1        equ	15459	;# 
  2859   003C64                     CLC3SEL2        equ	15460	;# 
  2860   003C65                     CLC3SEL3        equ	15461	;# 
  2861   003C66                     CLC3GLS0        equ	15462	;# 
  2862   003C67                     CLC3GLS1        equ	15463	;# 
  2863   003C68                     CLC3GLS2        equ	15464	;# 
  2864   003C69                     CLC3GLS3        equ	15465	;# 
  2865   003C6A                     CLC2CON         equ	15466	;# 
  2866   003C6B                     CLC2POL         equ	15467	;# 
  2867   003C6C                     CLC2SEL0        equ	15468	;# 
  2868   003C6D                     CLC2SEL1        equ	15469	;# 
  2869   003C6E                     CLC2SEL2        equ	15470	;# 
  2870   003C6F                     CLC2SEL3        equ	15471	;# 
  2871   003C70                     CLC2GLS0        equ	15472	;# 
  2872   003C71                     CLC2GLS1        equ	15473	;# 
  2873   003C72                     CLC2GLS2        equ	15474	;# 
  2874   003C73                     CLC2GLS3        equ	15475	;# 
  2875   003C74                     CLC1CON         equ	15476	;# 
  2876   003C75                     CLC1POL         equ	15477	;# 
  2877   003C76                     CLC1SEL0        equ	15478	;# 
  2878   003C77                     CLC1SEL1        equ	15479	;# 
  2879   003C78                     CLC1SEL2        equ	15480	;# 
  2880   003C79                     CLC1SEL3        equ	15481	;# 
  2881   003C7A                     CLC1GLS0        equ	15482	;# 
  2882   003C7B                     CLC1GLS1        equ	15483	;# 
  2883   003C7C                     CLC1GLS2        equ	15484	;# 
  2884   003C7D                     CLC1GLS3        equ	15485	;# 
  2885   003C7E                     CLCDATA0        equ	15486	;# 
  2886   003CE5                     CLKRCON         equ	15589	;# 
  2887   003CE6                     CLKRCLK         equ	15590	;# 
  2888   003CFA                     MD1CON0         equ	15610	;# 
  2889   003CFB                     MD1CON1         equ	15611	;# 
  2890   003CFC                     MD1SRC          equ	15612	;# 
  2891   003CFD                     MD1CARL         equ	15613	;# 
  2892   003CFE                     MD1CARH         equ	15614	;# 
  2893   003D10                     SPI1RXB         equ	15632	;# 
  2894   003D11                     SPI1TXB         equ	15633	;# 
  2895   003D12                     SPI1TCNT        equ	15634	;# 
  2896   003D12                     SPI1TCNTL       equ	15634	;# 
  2897   003D13                     SPI1TCNTH       equ	15635	;# 
  2898   003D14                     SPI1CON0        equ	15636	;# 
  2899   003D15                     SPI1CON1        equ	15637	;# 
  2900   003D16                     SPI1CON2        equ	15638	;# 
  2901   003D17                     SPI1STATUS      equ	15639	;# 
  2902   003D18                     SPI1TWIDTH      equ	15640	;# 
  2903   003D19                     SPI1BAUD        equ	15641	;# 
  2904   003D1A                     SPI1INTF        equ	15642	;# 
  2905   003D1B                     SPI1INTE        equ	15643	;# 
  2906   003D1C                     SPI1CLK         equ	15644	;# 
  2907   003D54                     I2C2RXB         equ	15700	;# 
  2908   003D55                     I2C2TXB         equ	15701	;# 
  2909   003D56                     I2C2CNT         equ	15702	;# 
  2910   003D57                     I2C2ADB0        equ	15703	;# 
  2911   003D58                     I2C2ADB1        equ	15704	;# 
  2912   003D59                     I2C2ADR0        equ	15705	;# 
  2913   003D5A                     I2C2ADR1        equ	15706	;# 
  2914   003D5B                     I2C2ADR2        equ	15707	;# 
  2915   003D5C                     I2C2ADR3        equ	15708	;# 
  2916   003D5D                     I2C2CON0        equ	15709	;# 
  2917   003D5E                     I2C2CON1        equ	15710	;# 
  2918   003D5F                     I2C2CON2        equ	15711	;# 
  2919   003D60                     I2C2ERR         equ	15712	;# 
  2920   003D61                     I2C2STAT0       equ	15713	;# 
  2921   003D62                     I2C2STAT1       equ	15714	;# 
  2922   003D63                     I2C2PIR         equ	15715	;# 
  2923   003D64                     I2C2PIE         equ	15716	;# 
  2924   003D65                     I2C2CLK         equ	15717	;# 
  2925   003D66                     I2C2BTO         equ	15718	;# 
  2926   003D6A                     I2C1RXB         equ	15722	;# 
  2927   003D6B                     I2C1TXB         equ	15723	;# 
  2928   003D6C                     I2C1CNT         equ	15724	;# 
  2929   003D6D                     I2C1ADB0        equ	15725	;# 
  2930   003D6E                     I2C1ADB1        equ	15726	;# 
  2931   003D6F                     I2C1ADR0        equ	15727	;# 
  2932   003D70                     I2C1ADR1        equ	15728	;# 
  2933   003D71                     I2C1ADR2        equ	15729	;# 
  2934   003D72                     I2C1ADR3        equ	15730	;# 
  2935   003D73                     I2C1CON0        equ	15731	;# 
  2936   003D74                     I2C1CON1        equ	15732	;# 
  2937   003D75                     I2C1CON2        equ	15733	;# 
  2938   003D76                     I2C1ERR         equ	15734	;# 
  2939   003D77                     I2C1STAT0       equ	15735	;# 
  2940   003D78                     I2C1STAT1       equ	15736	;# 
  2941   003D79                     I2C1PIR         equ	15737	;# 
  2942   003D7A                     I2C1PIE         equ	15738	;# 
  2943   003D7B                     I2C1CLK         equ	15739	;# 
  2944   003D7C                     I2C1BTO         equ	15740	;# 
  2945   003DD0                     U2RXB           equ	15824	;# 
  2946   003DD0                     U2RXBL          equ	15824	;# 
  2947   003DD2                     U2TXB           equ	15826	;# 
  2948   003DD2                     U2TXBL          equ	15826	;# 
  2949   003DD4                     U2P1            equ	15828	;# 
  2950   003DD4                     U2P1L           equ	15828	;# 
  2951   003DD6                     U2P2            equ	15830	;# 
  2952   003DD6                     U2P2L           equ	15830	;# 
  2953   003DD8                     U2P3            equ	15832	;# 
  2954   003DD8                     U2P3L           equ	15832	;# 
  2955   003DDA                     U2CON0          equ	15834	;# 
  2956   003DDB                     U2CON1          equ	15835	;# 
  2957   003DDC                     U2CON2          equ	15836	;# 
  2958   003DDD                     U2BRG           equ	15837	;# 
  2959   003DDD                     U2BRGL          equ	15837	;# 
  2960   003DDE                     U2BRGH          equ	15838	;# 
  2961   003DDF                     U2FIFO          equ	15839	;# 
  2962   003DE0                     U2UIR           equ	15840	;# 
  2963   003DE1                     U2ERRIR         equ	15841	;# 
  2964   003DE2                     U2ERRIE         equ	15842	;# 
  2965   003DE8                     U1RXB           equ	15848	;# 
  2966   003DE8                     U1RXBL          equ	15848	;# 
  2967   003DE9                     U1RXCHK         equ	15849	;# 
  2968   003DEA                     U1TXB           equ	15850	;# 
  2969   003DEA                     U1TXBL          equ	15850	;# 
  2970   003DEB                     U1TXCHK         equ	15851	;# 
  2971   003DEC                     U1P1            equ	15852	;# 
  2972   003DEC                     U1P1L           equ	15852	;# 
  2973   003DED                     U1P1H           equ	15853	;# 
  2974   003DEE                     U1P2            equ	15854	;# 
  2975   003DEE                     U1P2L           equ	15854	;# 
  2976   003DEF                     U1P2H           equ	15855	;# 
  2977   003DF0                     U1P3            equ	15856	;# 
  2978   003DF0                     U1P3L           equ	15856	;# 
  2979   003DF1                     U1P3H           equ	15857	;# 
  2980   003DF2                     U1CON0          equ	15858	;# 
  2981   003DF3                     U1CON1          equ	15859	;# 
  2982   003DF4                     U1CON2          equ	15860	;# 
  2983   003DF5                     U1BRG           equ	15861	;# 
  2984   003DF5                     U1BRGL          equ	15861	;# 
  2985   003DF6                     U1BRGH          equ	15862	;# 
  2986   003DF7                     U1FIFO          equ	15863	;# 
  2987   003DF8                     U1UIR           equ	15864	;# 
  2988   003DF9                     U1ERRIR         equ	15865	;# 
  2989   003DFA                     U1ERRIE         equ	15866	;# 
  2990   003E9C                     DAC1CON1        equ	16028	;# 
  2991   003E9E                     DAC1CON0        equ	16030	;# 
  2992   003EB8                     CM2CON0         equ	16056	;# 
  2993   003EB9                     CM2CON1         equ	16057	;# 
  2994   003EBA                     CM2NCH          equ	16058	;# 
  2995   003EBB                     CM2PCH          equ	16059	;# 
  2996   003EBC                     CM1CON0         equ	16060	;# 
  2997   003EBD                     CM1CON1         equ	16061	;# 
  2998   003EBE                     CM1NCH          equ	16062	;# 
  2999   003EBF                     CM1PCH          equ	16063	;# 
  3000   003EC0                     CMOUT           equ	16064	;# 
  3001   003EC1                     FVRCON          equ	16065	;# 
  3002   003EC3                     ZCDCON          equ	16067	;# 
  3003   003EC9                     HLVDCON0        equ	16073	;# 
  3004   003ECA                     HLVDCON1        equ	16074	;# 
  3005   003ED7                     ADCP            equ	16087	;# 
  3006   003EDE                     ADLTH           equ	16094	;# 
  3007   003EDE                     ADLTHL          equ	16094	;# 
  3008   003EDF                     ADLTHH          equ	16095	;# 
  3009   003EE0                     ADUTH           equ	16096	;# 
  3010   003EE0                     ADUTHL          equ	16096	;# 
  3011   003EE1                     ADUTHH          equ	16097	;# 
  3012   003EE2                     ADERR           equ	16098	;# 
  3013   003EE2                     ADERRL          equ	16098	;# 
  3014   003EE3                     ADERRH          equ	16099	;# 
  3015   003EE4                     ADSTPT          equ	16100	;# 
  3016   003EE4                     ADSTPTL         equ	16100	;# 
  3017   003EE5                     ADSTPTH         equ	16101	;# 
  3018   003EE6                     ADFLTR          equ	16102	;# 
  3019   003EE6                     ADFLTRL         equ	16102	;# 
  3020   003EE7                     ADFLTRH         equ	16103	;# 
  3021   003EE8                     ADACC           equ	16104	;# 
  3022   003EE8                     ADACCL          equ	16104	;# 
  3023   003EE9                     ADACCH          equ	16105	;# 
  3024   003EEA                     ADACCU          equ	16106	;# 
  3025   003EEB                     ADCNT           equ	16107	;# 
  3026   003EEC                     ADRPT           equ	16108	;# 
  3027   003EED                     ADPREV          equ	16109	;# 
  3028   003EED                     ADPREVL         equ	16109	;# 
  3029   003EEE                     ADPREVH         equ	16110	;# 
  3030   003EEF                     ADRES           equ	16111	;# 
  3031   003EEF                     ADRESL          equ	16111	;# 
  3032   003EF0                     ADRESH          equ	16112	;# 
  3033   003EF1                     ADPCH           equ	16113	;# 
  3034   003EF3                     ADACQ           equ	16115	;# 
  3035   003EF3                     ADACQL          equ	16115	;# 
  3036   003EF4                     ADACQH          equ	16116	;# 
  3037   003EF5                     ADCAP           equ	16117	;# 
  3038   003EF6                     ADPRE           equ	16118	;# 
  3039   003EF6                     ADPREL          equ	16118	;# 
  3040   003EF7                     ADPREH          equ	16119	;# 
  3041   003EF8                     ADCON0          equ	16120	;# 
  3042   003EF9                     ADCON1          equ	16121	;# 
  3043   003EFA                     ADCON2          equ	16122	;# 
  3044   003EFB                     ADCON3          equ	16123	;# 
  3045   003EFC                     ADSTAT          equ	16124	;# 
  3046   003EFD                     ADREF           equ	16125	;# 
  3047   003EFE                     ADACT           equ	16126	;# 
  3048   003EFF                     ADCLK           equ	16127	;# 
  3049   003F12                     SMT1TMR         equ	16146	;# 
  3050   003F12                     SMT1TMRL        equ	16146	;# 
  3051   003F13                     SMT1TMRH        equ	16147	;# 
  3052   003F14                     SMT1TMRU        equ	16148	;# 
  3053   003F15                     SMT1CPR         equ	16149	;# 
  3054   003F15                     SMT1CPRL        equ	16149	;# 
  3055   003F16                     SMT1CPRH        equ	16150	;# 
  3056   003F17                     SMT1CPRU        equ	16151	;# 
  3057   003F18                     SMT1CPW         equ	16152	;# 
  3058   003F18                     SMT1CPWL        equ	16152	;# 
  3059   003F19                     SMT1CPWH        equ	16153	;# 
  3060   003F1A                     SMT1CPWU        equ	16154	;# 
  3061   003F1B                     SMT1PR          equ	16155	;# 
  3062   003F1B                     SMT1PRL         equ	16155	;# 
  3063   003F1C                     SMT1PRH         equ	16156	;# 
  3064   003F1D                     SMT1PRU         equ	16157	;# 
  3065   003F1E                     SMT1CON0        equ	16158	;# 
  3066   003F1F                     SMT1CON1        equ	16159	;# 
  3067   003F20                     SMT1STAT        equ	16160	;# 
  3068   003F21                     SMT1CLK         equ	16161	;# 
  3069   003F22                     SMT1SIG         equ	16162	;# 
  3070   003F23                     SMT1WIN         equ	16163	;# 
  3071   003F38                     NCO1ACC         equ	16184	;# 
  3072   003F38                     NCO1ACCL        equ	16184	;# 
  3073   003F39                     NCO1ACCH        equ	16185	;# 
  3074   003F3A                     NCO1ACCU        equ	16186	;# 
  3075   003F3B                     NCO1INC         equ	16187	;# 
  3076   003F3B                     NCO1INCL        equ	16187	;# 
  3077   003F3C                     NCO1INCH        equ	16188	;# 
  3078   003F3D                     NCO1INCU        equ	16189	;# 
  3079   003F3E                     NCO1CON         equ	16190	;# 
  3080   003F3F                     NCO1CLK         equ	16191	;# 
  3081   003F40                     CWG3CLK         equ	16192	;# 
  3082   003F40                     CWG3CLKCON      equ	16192	;# 
  3083   003F41                     CWG3ISM         equ	16193	;# 
  3084   003F41                     CWG3DAT         equ	16193	;# 
  3085   003F42                     CWG3DBR         equ	16194	;# 
  3086   003F43                     CWG3DBF         equ	16195	;# 
  3087   003F44                     CWG3CON0        equ	16196	;# 
  3088   003F45                     CWG3CON1        equ	16197	;# 
  3089   003F46                     CWG3AS0         equ	16198	;# 
  3090   003F47                     CWG3AS1         equ	16199	;# 
  3091   003F48                     CWG3STR         equ	16200	;# 
  3092   003F49                     CWG2CLK         equ	16201	;# 
  3093   003F49                     CWG2CLKCON      equ	16201	;# 
  3094   003F4A                     CWG2ISM         equ	16202	;# 
  3095   003F4A                     CWG2DAT         equ	16202	;# 
  3096   003F4B                     CWG2DBR         equ	16203	;# 
  3097   003F4C                     CWG2DBF         equ	16204	;# 
  3098   003F4D                     CWG2CON0        equ	16205	;# 
  3099   003F4E                     CWG2CON1        equ	16206	;# 
  3100   003F4F                     CWG2AS0         equ	16207	;# 
  3101   003F50                     CWG2AS1         equ	16208	;# 
  3102   003F51                     CWG2STR         equ	16209	;# 
  3103   003F52                     CWG1CLK         equ	16210	;# 
  3104   003F52                     CWG1CLKCON      equ	16210	;# 
  3105   003F53                     CWG1ISM         equ	16211	;# 
  3106   003F53                     CWG1DAT         equ	16211	;# 
  3107   003F54                     CWG1DBR         equ	16212	;# 
  3108   003F55                     CWG1DBF         equ	16213	;# 
  3109   003F56                     CWG1CON0        equ	16214	;# 
  3110   003F57                     CWG1CON1        equ	16215	;# 
  3111   003F58                     CWG1AS0         equ	16216	;# 
  3112   003F59                     CWG1AS1         equ	16217	;# 
  3113   003F5A                     CWG1STR         equ	16218	;# 
  3114   003F5E                     CCPTMRS0        equ	16222	;# 
  3115   003F5F                     CCPTMRS1        equ	16223	;# 
  3116   003F60                     PWM8DC          equ	16224	;# 
  3117   003F60                     PWM8DCL         equ	16224	;# 
  3118   003F61                     PWM8DCH         equ	16225	;# 
  3119   003F62                     PWM8CON         equ	16226	;# 
  3120   003F64                     PWM7DC          equ	16228	;# 
  3121   003F64                     PWM7DCL         equ	16228	;# 
  3122   003F65                     PWM7DCH         equ	16229	;# 
  3123   003F66                     PWM7CON         equ	16230	;# 
  3124   003F68                     PWM6DC          equ	16232	;# 
  3125   003F68                     PWM6DCL         equ	16232	;# 
  3126   003F69                     PWM6DCH         equ	16233	;# 
  3127   003F6A                     PWM6CON         equ	16234	;# 
  3128   003F6C                     PWM5DC          equ	16236	;# 
  3129   003F6C                     PWM5DCL         equ	16236	;# 
  3130   003F6D                     PWM5DCH         equ	16237	;# 
  3131   003F6E                     PWM5CON         equ	16238	;# 
  3132   003F70                     CCPR4           equ	16240	;# 
  3133   003F70                     CCPR4L          equ	16240	;# 
  3134   003F71                     CCPR4H          equ	16241	;# 
  3135   003F72                     CCP4CON         equ	16242	;# 
  3136   003F73                     CCP4CAP         equ	16243	;# 
  3137   003F74                     CCPR3           equ	16244	;# 
  3138   003F74                     CCPR3L          equ	16244	;# 
  3139   003F75                     CCPR3H          equ	16245	;# 
  3140   003F76                     CCP3CON         equ	16246	;# 
  3141   003F77                     CCP3CAP         equ	16247	;# 
  3142   003F78                     CCPR2           equ	16248	;# 
  3143   003F78                     CCPR2L          equ	16248	;# 
  3144   003F79                     CCPR2H          equ	16249	;# 
  3145   003F7A                     CCP2CON         equ	16250	;# 
  3146   003F7B                     CCP2CAP         equ	16251	;# 
  3147   003F7C                     CCPR1           equ	16252	;# 
  3148   003F7C                     CCPR1L          equ	16252	;# 
  3149   003F7D                     CCPR1H          equ	16253	;# 
  3150   003F7E                     CCP1CON         equ	16254	;# 
  3151   003F7F                     CCP1CAP         equ	16255	;# 
  3152   003F92                     T6TMR           equ	16274	;# 
  3153   003F92                     TMR6            equ	16274	;# 
  3154   003F93                     T6PR            equ	16275	;# 
  3155   003F93                     PR6             equ	16275	;# 
  3156   003F94                     T6CON           equ	16276	;# 
  3157   003F95                     T6HLT           equ	16277	;# 
  3158   003F96                     T6CLKCON        equ	16278	;# 
  3159   003F96                     T6CLK           equ	16278	;# 
  3160   003F97                     T6RST           equ	16279	;# 
  3161   003F98                     TMR5            equ	16280	;# 
  3162   003F98                     TMR5L           equ	16280	;# 
  3163   003F99                     TMR5H           equ	16281	;# 
  3164   003F9A                     T5CON           equ	16282	;# 
  3165   003F9A                     TMR5CON         equ	16282	;# 
  3166   003F9B                     T5GCON          equ	16283	;# 
  3167   003F9B                     TMR5GCON        equ	16283	;# 
  3168   003F9C                     T5GATE          equ	16284	;# 
  3169   003F9C                     TMR5GATE        equ	16284	;# 
  3170   003F9D                     T5CLK           equ	16285	;# 
  3171   003F9D                     TMR5CLK         equ	16285	;# 
  3172   003F9D                     PR5             equ	16285	;# 
  3173   003F9E                     T4TMR           equ	16286	;# 
  3174   003F9E                     TMR4            equ	16286	;# 
  3175   003F9F                     T4PR            equ	16287	;# 
  3176   003F9F                     PR4             equ	16287	;# 
  3177   003FA0                     T4CON           equ	16288	;# 
  3178   003FA1                     T4HLT           equ	16289	;# 
  3179   003FA2                     T4CLKCON        equ	16290	;# 
  3180   003FA2                     T4CLK           equ	16290	;# 
  3181   003FA3                     T4RST           equ	16291	;# 
  3182   003FA4                     TMR3            equ	16292	;# 
  3183   003FA4                     TMR3L           equ	16292	;# 
  3184   003FA5                     TMR3H           equ	16293	;# 
  3185   003FA6                     T3CON           equ	16294	;# 
  3186   003FA6                     TMR3CON         equ	16294	;# 
  3187   003FA7                     T3GCON          equ	16295	;# 
  3188   003FA7                     TMR3GCON        equ	16295	;# 
  3189   003FA8                     T3GATE          equ	16296	;# 
  3190   003FA8                     TMR3GATE        equ	16296	;# 
  3191   003FA9                     T3CLK           equ	16297	;# 
  3192   003FA9                     TMR3CLK         equ	16297	;# 
  3193   003FA9                     PR3             equ	16297	;# 
  3194   003FAA                     T2TMR           equ	16298	;# 
  3195   003FAA                     TMR2            equ	16298	;# 
  3196   003FAB                     T2PR            equ	16299	;# 
  3197   003FAB                     PR2             equ	16299	;# 
  3198   003FAC                     T2CON           equ	16300	;# 
  3199   003FAD                     T2HLT           equ	16301	;# 
  3200   003FAE                     T2CLKCON        equ	16302	;# 
  3201   003FAE                     T2CLK           equ	16302	;# 
  3202   003FAF                     T2RST           equ	16303	;# 
  3203   003FB0                     TMR1            equ	16304	;# 
  3204   003FB0                     TMR1L           equ	16304	;# 
  3205   003FB1                     TMR1H           equ	16305	;# 
  3206   003FB2                     T1CON           equ	16306	;# 
  3207   003FB2                     TMR1CON         equ	16306	;# 
  3208   003FB3                     T1GCON          equ	16307	;# 
  3209   003FB3                     TMR1GCON        equ	16307	;# 
  3210   003FB4                     T1GATE          equ	16308	;# 
  3211   003FB4                     TMR1GATE        equ	16308	;# 
  3212   003FB5                     T1CLK           equ	16309	;# 
  3213   003FB5                     TMR1CLK         equ	16309	;# 
  3214   003FB5                     PR1             equ	16309	;# 
  3215   003FB6                     TMR0L           equ	16310	;# 
  3216   003FB6                     TMR0            equ	16310	;# 
  3217   003FB7                     TMR0H           equ	16311	;# 
  3218   003FB7                     PR0             equ	16311	;# 
  3219   003FB8                     T0CON0          equ	16312	;# 
  3220   003FB9                     T0CON1          equ	16313	;# 
  3221   003FBA                     LATA            equ	16314	;# 
  3222   003FBB                     LATB            equ	16315	;# 
  3223   003FBC                     LATC            equ	16316	;# 
  3224   003FBD                     LATD            equ	16317	;# 
  3225   003FBE                     LATE            equ	16318	;# 
  3226   003FBF                     LATF            equ	16319	;# 
  3227   003FC2                     TRISA           equ	16322	;# 
  3228   003FC3                     TRISB           equ	16323	;# 
  3229   003FC4                     TRISC           equ	16324	;# 
  3230   003FC5                     TRISD           equ	16325	;# 
  3231   003FC6                     TRISE           equ	16326	;# 
  3232   003FC7                     TRISF           equ	16327	;# 
  3233   003FCA                     PORTA           equ	16330	;# 
  3234   003FCB                     PORTB           equ	16331	;# 
  3235   003FCC                     PORTC           equ	16332	;# 
  3236   003FCD                     PORTD           equ	16333	;# 
  3237   003FCE                     PORTE           equ	16334	;# 
  3238   003FCF                     PORTF           equ	16335	;# 
  3239   003FD2                     INTCON0         equ	16338	;# 
  3240   003FD3                     INTCON1         equ	16339	;# 
  3241   003FD4                     IVTLOCK         equ	16340	;# 
  3242   003FD5                     IVTBASE         equ	16341	;# 
  3243   003FD5                     IVTBASEL        equ	16341	;# 
  3244   003FD6                     IVTBASEH        equ	16342	;# 
  3245   003FD7                     IVTBASEU        equ	16343	;# 
  3246   003FD8                     STATUS          equ	16344	;# 
  3247   003FD9                     FSR2            equ	16345	;# 
  3248   003FD9                     FSR2L           equ	16345	;# 
  3249   003FDA                     FSR2H           equ	16346	;# 
  3250   003FDB                     PLUSW2          equ	16347	;# 
  3251   003FDC                     PREINC2         equ	16348	;# 
  3252   003FDD                     POSTDEC2        equ	16349	;# 
  3253   003FDE                     POSTINC2        equ	16350	;# 
  3254   003FDF                     INDF2           equ	16351	;# 
  3255   003FE0                     BSR             equ	16352	;# 
  3256   003FE1                     FSR1            equ	16353	;# 
  3257   003FE1                     FSR1L           equ	16353	;# 
  3258   003FE2                     FSR1H           equ	16354	;# 
  3259   003FE3                     PLUSW1          equ	16355	;# 
  3260   003FE4                     PREINC1         equ	16356	;# 
  3261   003FE5                     POSTDEC1        equ	16357	;# 
  3262   003FE6                     POSTINC1        equ	16358	;# 
  3263   003FE7                     INDF1           equ	16359	;# 
  3264   003FE8                     WREG            equ	16360	;# 
  3265   003FE9                     FSR0            equ	16361	;# 
  3266   003FE9                     FSR0L           equ	16361	;# 
  3267   003FEA                     FSR0H           equ	16362	;# 
  3268   003FEB                     PLUSW0          equ	16363	;# 
  3269   003FEC                     PREINC0         equ	16364	;# 
  3270   003FED                     POSTDEC0        equ	16365	;# 
  3271   003FEE                     POSTINC0        equ	16366	;# 
  3272   003FEF                     INDF0           equ	16367	;# 
  3273   003FF0                     PCON0           equ	16368	;# 
  3274   003FF1                     PCON1           equ	16369	;# 
  3275   003FF3                     PROD            equ	16371	;# 
  3276   003FF3                     PRODL           equ	16371	;# 
  3277   003FF4                     PRODH           equ	16372	;# 
  3278   003FF5                     TABLAT          equ	16373	;# 
  3279   003FF6                     TBLPTR          equ	16374	;# 
  3280   003FF6                     TBLPTRL         equ	16374	;# 
  3281   003FF7                     TBLPTRH         equ	16375	;# 
  3282   003FF8                     TBLPTRU         equ	16376	;# 
  3283   003FF9                     PCLAT           equ	16377	;# 
  3284   003FF9                     PCL             equ	16377	;# 
  3285   003FFA                     PCLATH          equ	16378	;# 
  3286   003FFB                     PCLATU          equ	16379	;# 
  3287   003FFC                     STKPTR          equ	16380	;# 
  3288   003FFD                     TOS             equ	16381	;# 
  3289   003FFD                     TOSL            equ	16381	;# 
  3290   003FFE                     TOSH            equ	16382	;# 
  3291   003FFF                     TOSU            equ	16383	;# 
  3292   003880                     STATUS_CSHAD    equ	14464	;# 
  3293   003881                     WREG_CSHAD      equ	14465	;# 
  3294   003882                     BSR_CSHAD       equ	14466	;# 
  3295   003883                     SHADCON         equ	14467	;# 
  3296   003884                     STATUS_SHAD     equ	14468	;# 
  3297   003885                     WREG_SHAD       equ	14469	;# 
  3298   003886                     BSR_SHAD        equ	14470	;# 
  3299   003887                     PCLATH_SHAD     equ	14471	;# 
  3300   003888                     PCLATU_SHAD     equ	14472	;# 
  3301   003889                     FSR0SH          equ	14473	;# 
  3302   003889                     FSR0L_SHAD      equ	14473	;# 
  3303   00388A                     FSR0H_SHAD      equ	14474	;# 
  3304   00388B                     FSR1SH          equ	14475	;# 
  3305   00388B                     FSR1L_SHAD      equ	14475	;# 
  3306   00388C                     FSR1H_SHAD      equ	14476	;# 
  3307   00388D                     FSR2SH          equ	14477	;# 
  3308   00388D                     FSR2L_SHAD      equ	14477	;# 
  3309   00388E                     FSR2H_SHAD      equ	14478	;# 
  3310   00388F                     PRODSH          equ	14479	;# 
  3311   00388F                     PRODL_SHAD      equ	14479	;# 
  3312   003890                     PRODH_SHAD      equ	14480	;# 
  3313   00389D                     IVTADL          equ	14493	;# 
  3314   00389E                     IVTADH          equ	14494	;# 
  3315   00389F                     IVTADU          equ	14495	;# 
  3316   00395B                     WDTCON0         equ	14683	;# 
  3317   00395C                     WDTCON1         equ	14684	;# 
  3318   00395D                     WDTPSL          equ	14685	;# 
  3319   00395E                     WDTPSH          equ	14686	;# 
  3320   00395F                     WDTTMR          equ	14687	;# 
  3321   003960                     CRCDATA         equ	14688	;# 
  3322   003960                     CRCDATL         equ	14688	;# 
  3323   003961                     CRCDATH         equ	14689	;# 
  3324   003962                     CRCACC          equ	14690	;# 
  3325   003962                     CRCACCL         equ	14690	;# 
  3326   003963                     CRCACCH         equ	14691	;# 
  3327   003964                     CRCSHFT         equ	14692	;# 
  3328   003964                     CRCSHIFTL       equ	14692	;# 
  3329   003965                     CRCSHIFTH       equ	14693	;# 
  3330   003966                     CRCXOR          equ	14694	;# 
  3331   003966                     CRCXORL         equ	14694	;# 
  3332   003967                     CRCXORH         equ	14695	;# 
  3333   003968                     CRCCON0         equ	14696	;# 
  3334   003969                     CRCCON1         equ	14697	;# 
  3335   003976                     SCANLADR        equ	14710	;# 
  3336   003976                     SCANLADRL       equ	14710	;# 
  3337   003977                     SCANLADRH       equ	14711	;# 
  3338   003978                     SCANLADRU       equ	14712	;# 
  3339   003979                     SCANHADR        equ	14713	;# 
  3340   003979                     SCANHADRL       equ	14713	;# 
  3341   00397A                     SCANHADRH       equ	14714	;# 
  3342   00397B                     SCANHADRU       equ	14715	;# 
  3343   00397C                     SCANCON0        equ	14716	;# 
  3344   00397D                     SCANTRIG        equ	14717	;# 
  3345   003980                     IPR0            equ	14720	;# 
  3346   003981                     IPR1            equ	14721	;# 
  3347   003982                     IPR2            equ	14722	;# 
  3348   003983                     IPR3            equ	14723	;# 
  3349   003984                     IPR4            equ	14724	;# 
  3350   003985                     IPR5            equ	14725	;# 
  3351   003986                     IPR6            equ	14726	;# 
  3352   003987                     IPR7            equ	14727	;# 
  3353   003988                     IPR8            equ	14728	;# 
  3354   003989                     IPR9            equ	14729	;# 
  3355   00398A                     IPR10           equ	14730	;# 
  3356   003990                     PIE0            equ	14736	;# 
  3357   003991                     PIE1            equ	14737	;# 
  3358   003992                     PIE2            equ	14738	;# 
  3359   003993                     PIE3            equ	14739	;# 
  3360   003994                     PIE4            equ	14740	;# 
  3361   003995                     PIE5            equ	14741	;# 
  3362   003996                     PIE6            equ	14742	;# 
  3363   003997                     PIE7            equ	14743	;# 
  3364   003998                     PIE8            equ	14744	;# 
  3365   003999                     PIE9            equ	14745	;# 
  3366   00399A                     PIE10           equ	14746	;# 
  3367   0039A0                     PIR0            equ	14752	;# 
  3368   0039A1                     PIR1            equ	14753	;# 
  3369   0039A2                     PIR2            equ	14754	;# 
  3370   0039A3                     PIR3            equ	14755	;# 
  3371   0039A4                     PIR4            equ	14756	;# 
  3372   0039A5                     PIR5            equ	14757	;# 
  3373   0039A6                     PIR6            equ	14758	;# 
  3374   0039A7                     PIR7            equ	14759	;# 
  3375   0039A8                     PIR8            equ	14760	;# 
  3376   0039A9                     PIR9            equ	14761	;# 
  3377   0039AA                     PIR10           equ	14762	;# 
  3378   0039C0                     PMD0            equ	14784	;# 
  3379   0039C1                     PMD1            equ	14785	;# 
  3380   0039C2                     PMD2            equ	14786	;# 
  3381   0039C3                     PMD3            equ	14787	;# 
  3382   0039C4                     PMD4            equ	14788	;# 
  3383   0039C5                     PMD5            equ	14789	;# 
  3384   0039C6                     PMD6            equ	14790	;# 
  3385   0039C7                     PMD7            equ	14791	;# 
  3386   0039D0                     BORCON          equ	14800	;# 
  3387   0039D1                     VREGCON         equ	14801	;# 
  3388   0039D8                     CPUDOZE         equ	14808	;# 
  3389   0039D9                     OSCCON1         equ	14809	;# 
  3390   0039DA                     OSCCON2         equ	14810	;# 
  3391   0039DB                     OSCCON3         equ	14811	;# 
  3392   0039DC                     OSCSTAT         equ	14812	;# 
  3393   0039DC                     OSCSTAT1        equ	14812	;# 
  3394   0039DD                     OSCEN           equ	14813	;# 
  3395   0039DE                     OSCTUNE         equ	14814	;# 
  3396   0039DF                     OSCFRQ          equ	14815	;# 
  3397   0039E0                     NVMADRL         equ	14816	;# 
  3398   0039E1                     NVMADRH         equ	14817	;# 
  3399   0039E3                     NVMDAT          equ	14819	;# 
  3400   0039E5                     NVMCON1         equ	14821	;# 
  3401   0039E6                     NVMCON2         equ	14822	;# 
  3402   0039EF                     PRLOCK          equ	14831	;# 
  3403   0039F1                     ISRPR           equ	14833	;# 
  3404   0039F2                     MAINPR          equ	14834	;# 
  3405   0039F3                     DMA1PR          equ	14835	;# 
  3406   0039F4                     DMA2PR          equ	14836	;# 
  3407   0039F7                     SCANPR          equ	14839	;# 
  3408   003A00                     RA0PPS          equ	14848	;# 
  3409   003A01                     RA1PPS          equ	14849	;# 
  3410   003A02                     RA2PPS          equ	14850	;# 
  3411   003A03                     RA3PPS          equ	14851	;# 
  3412   003A04                     RA4PPS          equ	14852	;# 
  3413   003A05                     RA5PPS          equ	14853	;# 
  3414   003A06                     RA6PPS          equ	14854	;# 
  3415   003A07                     RA7PPS          equ	14855	;# 
  3416   003A08                     RB0PPS          equ	14856	;# 
  3417   003A09                     RB1PPS          equ	14857	;# 
  3418   003A0A                     RB2PPS          equ	14858	;# 
  3419   003A0B                     RB3PPS          equ	14859	;# 
  3420   003A0C                     RB4PPS          equ	14860	;# 
  3421   003A0D                     RB5PPS          equ	14861	;# 
  3422   003A0E                     RB6PPS          equ	14862	;# 
  3423   003A0F                     RB7PPS          equ	14863	;# 
  3424   003A10                     RC0PPS          equ	14864	;# 
  3425   003A11                     RC1PPS          equ	14865	;# 
  3426   003A12                     RC2PPS          equ	14866	;# 
  3427   003A13                     RC3PPS          equ	14867	;# 
  3428   003A14                     RC4PPS          equ	14868	;# 
  3429   003A15                     RC5PPS          equ	14869	;# 
  3430   003A16                     RC6PPS          equ	14870	;# 
  3431   003A17                     RC7PPS          equ	14871	;# 
  3432   003A18                     RD0PPS          equ	14872	;# 
  3433   003A19                     RD1PPS          equ	14873	;# 
  3434   003A1A                     RD2PPS          equ	14874	;# 
  3435   003A1B                     RD3PPS          equ	14875	;# 
  3436   003A1C                     RD4PPS          equ	14876	;# 
  3437   003A1D                     RD5PPS          equ	14877	;# 
  3438   003A1E                     RD6PPS          equ	14878	;# 
  3439   003A1F                     RD7PPS          equ	14879	;# 
  3440   003A20                     RE0PPS          equ	14880	;# 
  3441   003A21                     RE1PPS          equ	14881	;# 
  3442   003A22                     RE2PPS          equ	14882	;# 
  3443   003A28                     RF0PPS          equ	14888	;# 
  3444   003A29                     RF1PPS          equ	14889	;# 
  3445   003A2A                     RF2PPS          equ	14890	;# 
  3446   003A2B                     RF3PPS          equ	14891	;# 
  3447   003A2C                     RF4PPS          equ	14892	;# 
  3448   003A2D                     RF5PPS          equ	14893	;# 
  3449   003A2E                     RF6PPS          equ	14894	;# 
  3450   003A2F                     RF7PPS          equ	14895	;# 
  3451   003A40                     ANSELA          equ	14912	;# 
  3452   003A41                     WPUA            equ	14913	;# 
  3453   003A42                     ODCONA          equ	14914	;# 
  3454   003A43                     SLRCONA         equ	14915	;# 
  3455   003A44                     INLVLA          equ	14916	;# 
  3456   003A45                     IOCAP           equ	14917	;# 
  3457   003A46                     IOCAN           equ	14918	;# 
  3458   003A47                     IOCAF           equ	14919	;# 
  3459   003A50                     ANSELB          equ	14928	;# 
  3460   003A51                     WPUB            equ	14929	;# 
  3461   003A52                     ODCONB          equ	14930	;# 
  3462   003A53                     SLRCONB         equ	14931	;# 
  3463   003A54                     INLVLB          equ	14932	;# 
  3464   003A55                     IOCBP           equ	14933	;# 
  3465   003A56                     IOCBN           equ	14934	;# 
  3466   003A57                     IOCBF           equ	14935	;# 
  3467   003A5A                     RB1I2C          equ	14938	;# 
  3468   003A5B                     RB2I2C          equ	14939	;# 
  3469   003A60                     ANSELC          equ	14944	;# 
  3470   003A61                     WPUC            equ	14945	;# 
  3471   003A62                     ODCONC          equ	14946	;# 
  3472   003A63                     SLRCONC         equ	14947	;# 
  3473   003A64                     INLVLC          equ	14948	;# 
  3474   003A65                     IOCCP           equ	14949	;# 
  3475   003A66                     IOCCN           equ	14950	;# 
  3476   003A67                     IOCCF           equ	14951	;# 
  3477   003A6A                     RC3I2C          equ	14954	;# 
  3478   003A6B                     RC4I2C          equ	14955	;# 
  3479   003A70                     ANSELD          equ	14960	;# 
  3480   003A71                     WPUD            equ	14961	;# 
  3481   003A72                     ODCOND          equ	14962	;# 
  3482   003A73                     SLRCOND         equ	14963	;# 
  3483   003A74                     INLVLD          equ	14964	;# 
  3484   003A7A                     RD0I2C          equ	14970	;# 
  3485   003A7B                     RD1I2C          equ	14971	;# 
  3486   003A80                     ANSELE          equ	14976	;# 
  3487   003A81                     WPUE            equ	14977	;# 
  3488   003A82                     ODCONE          equ	14978	;# 
  3489   003A83                     SLRCONE         equ	14979	;# 
  3490   003A84                     INLVLE          equ	14980	;# 
  3491   003A85                     IOCEP           equ	14981	;# 
  3492   003A86                     IOCEN           equ	14982	;# 
  3493   003A87                     IOCEF           equ	14983	;# 
  3494   003A90                     ANSELF          equ	14992	;# 
  3495   003A91                     WPUF            equ	14993	;# 
  3496   003A92                     ODCONF          equ	14994	;# 
  3497   003A93                     SLRCONF         equ	14995	;# 
  3498   003A94                     INLVLF          equ	14996	;# 
  3499   003ABF                     PPSLOCK         equ	15039	;# 
  3500   003AC0                     INT0PPS         equ	15040	;# 
  3501   003AC1                     INT1PPS         equ	15041	;# 
  3502   003AC2                     INT2PPS         equ	15042	;# 
  3503   003AC3                     T0CKIPPS        equ	15043	;# 
  3504   003AC4                     T1CKIPPS        equ	15044	;# 
  3505   003AC5                     T1GPPS          equ	15045	;# 
  3506   003AC6                     T3CKIPPS        equ	15046	;# 
  3507   003AC7                     T3GPPS          equ	15047	;# 
  3508   003AC8                     T5CKIPPS        equ	15048	;# 
  3509   003AC9                     T5GPPS          equ	15049	;# 
  3510   003ACA                     T2INPPS         equ	15050	;# 
  3511   003ACB                     T4INPPS         equ	15051	;# 
  3512   003ACC                     T6INPPS         equ	15052	;# 
  3513   003ACD                     CCP1PPS         equ	15053	;# 
  3514   003ACE                     CCP2PPS         equ	15054	;# 
  3515   003ACF                     CCP3PPS         equ	15055	;# 
  3516   003AD0                     CCP4PPS         equ	15056	;# 
  3517   003AD1                     SMT1WINPPS      equ	15057	;# 
  3518   003AD2                     SMT1SIGPPS      equ	15058	;# 
  3519   003AD3                     CWG1INPPS       equ	15059	;# 
  3520   003AD4                     CWG2INPPS       equ	15060	;# 
  3521   003AD5                     CWG3INPPS       equ	15061	;# 
  3522   003AD6                     MD1CARLPPS      equ	15062	;# 
  3523   003AD7                     MD1CARHPPS      equ	15063	;# 
  3524   003AD8                     MD1SRCPPS       equ	15064	;# 
  3525   003AD9                     CLCIN0PPS       equ	15065	;# 
  3526   003ADA                     CLCIN1PPS       equ	15066	;# 
  3527   003ADB                     CLCIN2PPS       equ	15067	;# 
  3528   003ADC                     CLCIN3PPS       equ	15068	;# 
  3529   003ADD                     ADACTPPS        equ	15069	;# 
  3530   003ADE                     SPI1SCKPPS      equ	15070	;# 
  3531   003ADF                     SPI1SDIPPS      equ	15071	;# 
  3532   003AE0                     SPI1SSPPS       equ	15072	;# 
  3533   003AE1                     I2C1SCLPPS      equ	15073	;# 
  3534   003AE2                     I2C1SDAPPS      equ	15074	;# 
  3535   003AE3                     I2C2SCLPPS      equ	15075	;# 
  3536   003AE4                     I2C2SDAPPS      equ	15076	;# 
  3537   003AE5                     U1RXPPS         equ	15077	;# 
  3538   003AE6                     U1CTSPPS        equ	15078	;# 
  3539   003AE8                     U2RXPPS         equ	15080	;# 
  3540   003AE9                     U2CTSPPS        equ	15081	;# 
  3541   003BC9                     DMA2BUF         equ	15305	;# 
  3542   003BCA                     DMA2DCNT        equ	15306	;# 
  3543   003BCA                     DMA2DCNTL       equ	15306	;# 
  3544   003BCB                     DMA2DCNTH       equ	15307	;# 
  3545   003BCC                     DMA2DPTR        equ	15308	;# 
  3546   003BCC                     DMA2DPTRL       equ	15308	;# 
  3547   003BCD                     DMA2DPTRH       equ	15309	;# 
  3548   003BCE                     DMA2DSZ         equ	15310	;# 
  3549   003BCE                     DMA2DSZL        equ	15310	;# 
  3550   003BCF                     DMA2DSZH        equ	15311	;# 
  3551   003BD0                     DMA2DSA         equ	15312	;# 
  3552   003BD0                     DMA2DSAL        equ	15312	;# 
  3553   003BD1                     DMA2DSAH        equ	15313	;# 
  3554   003BD2                     DMA2SCNT        equ	15314	;# 
  3555   003BD2                     DMA2SCNTL       equ	15314	;# 
  3556   003BD3                     DMA2SCNTH       equ	15315	;# 
  3557   003BD4                     DMA2SPTR        equ	15316	;# 
  3558   003BD4                     DMA2SPTRL       equ	15316	;# 
  3559   003BD5                     DMA2SPTRH       equ	15317	;# 
  3560   003BD6                     DMA2SPTRU       equ	15318	;# 
  3561   003BD7                     DMA2SSZ         equ	15319	;# 
  3562   003BD7                     DMA2SSZL        equ	15319	;# 
  3563   003BD8                     DMA2SSZH        equ	15320	;# 
  3564   003BD9                     DMA2SSA         equ	15321	;# 
  3565   003BD9                     DMA2SSAL        equ	15321	;# 
  3566   003BDA                     DMA2SSAH        equ	15322	;# 
  3567   003BDB                     DMA2SSAU        equ	15323	;# 
  3568   003BDC                     DMA2CON0        equ	15324	;# 
  3569   003BDD                     DMA2CON1        equ	15325	;# 
  3570   003BDE                     DMA2AIRQ        equ	15326	;# 
  3571   003BDF                     DMA2SIRQ        equ	15327	;# 
  3572   003BE9                     DMA1BUF         equ	15337	;# 
  3573   003BEA                     DMA1DCNT        equ	15338	;# 
  3574   003BEA                     DMA1DCNTL       equ	15338	;# 
  3575   003BEB                     DMA1DCNTH       equ	15339	;# 
  3576   003BEC                     DMA1DPTR        equ	15340	;# 
  3577   003BEC                     DMA1DPTRL       equ	15340	;# 
  3578   003BED                     DMA1DPTRH       equ	15341	;# 
  3579   003BEE                     DMA1DSZ         equ	15342	;# 
  3580   003BEE                     DMA1DSZL        equ	15342	;# 
  3581   003BEF                     DMA1DSZH        equ	15343	;# 
  3582   003BF0                     DMA1DSA         equ	15344	;# 
  3583   003BF0                     DMA1DSAL        equ	15344	;# 
  3584   003BF1                     DMA1DSAH        equ	15345	;# 
  3585   003BF2                     DMA1SCNT        equ	15346	;# 
  3586   003BF2                     DMA1SCNTL       equ	15346	;# 
  3587   003BF3                     DMA1SCNTH       equ	15347	;# 
  3588   003BF4                     DMA1SPTR        equ	15348	;# 
  3589   003BF4                     DMA1SPTRL       equ	15348	;# 
  3590   003BF5                     DMA1SPTRH       equ	15349	;# 
  3591   003BF6                     DMA1SPTRU       equ	15350	;# 
  3592   003BF7                     DMA1SSZ         equ	15351	;# 
  3593   003BF7                     DMA1SSZL        equ	15351	;# 
  3594   003BF8                     DMA1SSZH        equ	15352	;# 
  3595   003BF9                     DMA1SSA         equ	15353	;# 
  3596   003BF9                     DMA1SSAL        equ	15353	;# 
  3597   003BFA                     DMA1SSAH        equ	15354	;# 
  3598   003BFB                     DMA1SSAU        equ	15355	;# 
  3599   003BFC                     DMA1CON0        equ	15356	;# 
  3600   003BFD                     DMA1CON1        equ	15357	;# 
  3601   003BFE                     DMA1AIRQ        equ	15358	;# 
  3602   003BFF                     DMA1SIRQ        equ	15359	;# 
  3603   003C56                     CLC4CON         equ	15446	;# 
  3604   003C57                     CLC4POL         equ	15447	;# 
  3605   003C58                     CLC4SEL0        equ	15448	;# 
  3606   003C59                     CLC4SEL1        equ	15449	;# 
  3607   003C5A                     CLC4SEL2        equ	15450	;# 
  3608   003C5B                     CLC4SEL3        equ	15451	;# 
  3609   003C5C                     CLC4GLS0        equ	15452	;# 
  3610   003C5D                     CLC4GLS1        equ	15453	;# 
  3611   003C5E                     CLC4GLS2        equ	15454	;# 
  3612   003C5F                     CLC4GLS3        equ	15455	;# 
  3613   003C60                     CLC3CON         equ	15456	;# 
  3614   003C61                     CLC3POL         equ	15457	;# 
  3615   003C62                     CLC3SEL0        equ	15458	;# 
  3616   003C63                     CLC3SEL1        equ	15459	;# 
  3617   003C64                     CLC3SEL2        equ	15460	;# 
  3618   003C65                     CLC3SEL3        equ	15461	;# 
  3619   003C66                     CLC3GLS0        equ	15462	;# 
  3620   003C67                     CLC3GLS1        equ	15463	;# 
  3621   003C68                     CLC3GLS2        equ	15464	;# 
  3622   003C69                     CLC3GLS3        equ	15465	;# 
  3623   003C6A                     CLC2CON         equ	15466	;# 
  3624   003C6B                     CLC2POL         equ	15467	;# 
  3625   003C6C                     CLC2SEL0        equ	15468	;# 
  3626   003C6D                     CLC2SEL1        equ	15469	;# 
  3627   003C6E                     CLC2SEL2        equ	15470	;# 
  3628   003C6F                     CLC2SEL3        equ	15471	;# 
  3629   003C70                     CLC2GLS0        equ	15472	;# 
  3630   003C71                     CLC2GLS1        equ	15473	;# 
  3631   003C72                     CLC2GLS2        equ	15474	;# 
  3632   003C73                     CLC2GLS3        equ	15475	;# 
  3633   003C74                     CLC1CON         equ	15476	;# 
  3634   003C75                     CLC1POL         equ	15477	;# 
  3635   003C76                     CLC1SEL0        equ	15478	;# 
  3636   003C77                     CLC1SEL1        equ	15479	;# 
  3637   003C78                     CLC1SEL2        equ	15480	;# 
  3638   003C79                     CLC1SEL3        equ	15481	;# 
  3639   003C7A                     CLC1GLS0        equ	15482	;# 
  3640   003C7B                     CLC1GLS1        equ	15483	;# 
  3641   003C7C                     CLC1GLS2        equ	15484	;# 
  3642   003C7D                     CLC1GLS3        equ	15485	;# 
  3643   003C7E                     CLCDATA0        equ	15486	;# 
  3644   003CE5                     CLKRCON         equ	15589	;# 
  3645   003CE6                     CLKRCLK         equ	15590	;# 
  3646   003CFA                     MD1CON0         equ	15610	;# 
  3647   003CFB                     MD1CON1         equ	15611	;# 
  3648   003CFC                     MD1SRC          equ	15612	;# 
  3649   003CFD                     MD1CARL         equ	15613	;# 
  3650   003CFE                     MD1CARH         equ	15614	;# 
  3651   003D10                     SPI1RXB         equ	15632	;# 
  3652   003D11                     SPI1TXB         equ	15633	;# 
  3653   003D12                     SPI1TCNT        equ	15634	;# 
  3654   003D12                     SPI1TCNTL       equ	15634	;# 
  3655   003D13                     SPI1TCNTH       equ	15635	;# 
  3656   003D14                     SPI1CON0        equ	15636	;# 
  3657   003D15                     SPI1CON1        equ	15637	;# 
  3658   003D16                     SPI1CON2        equ	15638	;# 
  3659   003D17                     SPI1STATUS      equ	15639	;# 
  3660   003D18                     SPI1TWIDTH      equ	15640	;# 
  3661   003D19                     SPI1BAUD        equ	15641	;# 
  3662   003D1A                     SPI1INTF        equ	15642	;# 
  3663   003D1B                     SPI1INTE        equ	15643	;# 
  3664   003D1C                     SPI1CLK         equ	15644	;# 
  3665   003D54                     I2C2RXB         equ	15700	;# 
  3666   003D55                     I2C2TXB         equ	15701	;# 
  3667   003D56                     I2C2CNT         equ	15702	;# 
  3668   003D57                     I2C2ADB0        equ	15703	;# 
  3669   003D58                     I2C2ADB1        equ	15704	;# 
  3670   003D59                     I2C2ADR0        equ	15705	;# 
  3671   003D5A                     I2C2ADR1        equ	15706	;# 
  3672   003D5B                     I2C2ADR2        equ	15707	;# 
  3673   003D5C                     I2C2ADR3        equ	15708	;# 
  3674   003D5D                     I2C2CON0        equ	15709	;# 
  3675   003D5E                     I2C2CON1        equ	15710	;# 
  3676   003D5F                     I2C2CON2        equ	15711	;# 
  3677   003D60                     I2C2ERR         equ	15712	;# 
  3678   003D61                     I2C2STAT0       equ	15713	;# 
  3679   003D62                     I2C2STAT1       equ	15714	;# 
  3680   003D63                     I2C2PIR         equ	15715	;# 
  3681   003D64                     I2C2PIE         equ	15716	;# 
  3682   003D65                     I2C2CLK         equ	15717	;# 
  3683   003D66                     I2C2BTO         equ	15718	;# 
  3684   003D6A                     I2C1RXB         equ	15722	;# 
  3685   003D6B                     I2C1TXB         equ	15723	;# 
  3686   003D6C                     I2C1CNT         equ	15724	;# 
  3687   003D6D                     I2C1ADB0        equ	15725	;# 
  3688   003D6E                     I2C1ADB1        equ	15726	;# 
  3689   003D6F                     I2C1ADR0        equ	15727	;# 
  3690   003D70                     I2C1ADR1        equ	15728	;# 
  3691   003D71                     I2C1ADR2        equ	15729	;# 
  3692   003D72                     I2C1ADR3        equ	15730	;# 
  3693   003D73                     I2C1CON0        equ	15731	;# 
  3694   003D74                     I2C1CON1        equ	15732	;# 
  3695   003D75                     I2C1CON2        equ	15733	;# 
  3696   003D76                     I2C1ERR         equ	15734	;# 
  3697   003D77                     I2C1STAT0       equ	15735	;# 
  3698   003D78                     I2C1STAT1       equ	15736	;# 
  3699   003D79                     I2C1PIR         equ	15737	;# 
  3700   003D7A                     I2C1PIE         equ	15738	;# 
  3701   003D7B                     I2C1CLK         equ	15739	;# 
  3702   003D7C                     I2C1BTO         equ	15740	;# 
  3703   003DD0                     U2RXB           equ	15824	;# 
  3704   003DD0                     U2RXBL          equ	15824	;# 
  3705   003DD2                     U2TXB           equ	15826	;# 
  3706   003DD2                     U2TXBL          equ	15826	;# 
  3707   003DD4                     U2P1            equ	15828	;# 
  3708   003DD4                     U2P1L           equ	15828	;# 
  3709   003DD6                     U2P2            equ	15830	;# 
  3710   003DD6                     U2P2L           equ	15830	;# 
  3711   003DD8                     U2P3            equ	15832	;# 
  3712   003DD8                     U2P3L           equ	15832	;# 
  3713   003DDA                     U2CON0          equ	15834	;# 
  3714   003DDB                     U2CON1          equ	15835	;# 
  3715   003DDC                     U2CON2          equ	15836	;# 
  3716   003DDD                     U2BRG           equ	15837	;# 
  3717   003DDD                     U2BRGL          equ	15837	;# 
  3718   003DDE                     U2BRGH          equ	15838	;# 
  3719   003DDF                     U2FIFO          equ	15839	;# 
  3720   003DE0                     U2UIR           equ	15840	;# 
  3721   003DE1                     U2ERRIR         equ	15841	;# 
  3722   003DE2                     U2ERRIE         equ	15842	;# 
  3723   003DE8                     U1RXB           equ	15848	;# 
  3724   003DE8                     U1RXBL          equ	15848	;# 
  3725   003DE9                     U1RXCHK         equ	15849	;# 
  3726   003DEA                     U1TXB           equ	15850	;# 
  3727   003DEA                     U1TXBL          equ	15850	;# 
  3728   003DEB                     U1TXCHK         equ	15851	;# 
  3729   003DEC                     U1P1            equ	15852	;# 
  3730   003DEC                     U1P1L           equ	15852	;# 
  3731   003DED                     U1P1H           equ	15853	;# 
  3732   003DEE                     U1P2            equ	15854	;# 
  3733   003DEE                     U1P2L           equ	15854	;# 
  3734   003DEF                     U1P2H           equ	15855	;# 
  3735   003DF0                     U1P3            equ	15856	;# 
  3736   003DF0                     U1P3L           equ	15856	;# 
  3737   003DF1                     U1P3H           equ	15857	;# 
  3738   003DF2                     U1CON0          equ	15858	;# 
  3739   003DF3                     U1CON1          equ	15859	;# 
  3740   003DF4                     U1CON2          equ	15860	;# 
  3741   003DF5                     U1BRG           equ	15861	;# 
  3742   003DF5                     U1BRGL          equ	15861	;# 
  3743   003DF6                     U1BRGH          equ	15862	;# 
  3744   003DF7                     U1FIFO          equ	15863	;# 
  3745   003DF8                     U1UIR           equ	15864	;# 
  3746   003DF9                     U1ERRIR         equ	15865	;# 
  3747   003DFA                     U1ERRIE         equ	15866	;# 
  3748   003E9C                     DAC1CON1        equ	16028	;# 
  3749   003E9E                     DAC1CON0        equ	16030	;# 
  3750   003EB8                     CM2CON0         equ	16056	;# 
  3751   003EB9                     CM2CON1         equ	16057	;# 
  3752   003EBA                     CM2NCH          equ	16058	;# 
  3753   003EBB                     CM2PCH          equ	16059	;# 
  3754   003EBC                     CM1CON0         equ	16060	;# 
  3755   003EBD                     CM1CON1         equ	16061	;# 
  3756   003EBE                     CM1NCH          equ	16062	;# 
  3757   003EBF                     CM1PCH          equ	16063	;# 
  3758   003EC0                     CMOUT           equ	16064	;# 
  3759   003EC1                     FVRCON          equ	16065	;# 
  3760   003EC3                     ZCDCON          equ	16067	;# 
  3761   003EC9                     HLVDCON0        equ	16073	;# 
  3762   003ECA                     HLVDCON1        equ	16074	;# 
  3763   003ED7                     ADCP            equ	16087	;# 
  3764   003EDE                     ADLTH           equ	16094	;# 
  3765   003EDE                     ADLTHL          equ	16094	;# 
  3766   003EDF                     ADLTHH          equ	16095	;# 
  3767   003EE0                     ADUTH           equ	16096	;# 
  3768   003EE0                     ADUTHL          equ	16096	;# 
  3769   003EE1                     ADUTHH          equ	16097	;# 
  3770   003EE2                     ADERR           equ	16098	;# 
  3771   003EE2                     ADERRL          equ	16098	;# 
  3772   003EE3                     ADERRH          equ	16099	;# 
  3773   003EE4                     ADSTPT          equ	16100	;# 
  3774   003EE4                     ADSTPTL         equ	16100	;# 
  3775   003EE5                     ADSTPTH         equ	16101	;# 
  3776   003EE6                     ADFLTR          equ	16102	;# 
  3777   003EE6                     ADFLTRL         equ	16102	;# 
  3778   003EE7                     ADFLTRH         equ	16103	;# 
  3779   003EE8                     ADACC           equ	16104	;# 
  3780   003EE8                     ADACCL          equ	16104	;# 
  3781   003EE9                     ADACCH          equ	16105	;# 
  3782   003EEA                     ADACCU          equ	16106	;# 
  3783   003EEB                     ADCNT           equ	16107	;# 
  3784   003EEC                     ADRPT           equ	16108	;# 
  3785   003EED                     ADPREV          equ	16109	;# 
  3786   003EED                     ADPREVL         equ	16109	;# 
  3787   003EEE                     ADPREVH         equ	16110	;# 
  3788   003EEF                     ADRES           equ	16111	;# 
  3789   003EEF                     ADRESL          equ	16111	;# 
  3790   003EF0                     ADRESH          equ	16112	;# 
  3791   003EF1                     ADPCH           equ	16113	;# 
  3792   003EF3                     ADACQ           equ	16115	;# 
  3793   003EF3                     ADACQL          equ	16115	;# 
  3794   003EF4                     ADACQH          equ	16116	;# 
  3795   003EF5                     ADCAP           equ	16117	;# 
  3796   003EF6                     ADPRE           equ	16118	;# 
  3797   003EF6                     ADPREL          equ	16118	;# 
  3798   003EF7                     ADPREH          equ	16119	;# 
  3799   003EF8                     ADCON0          equ	16120	;# 
  3800   003EF9                     ADCON1          equ	16121	;# 
  3801   003EFA                     ADCON2          equ	16122	;# 
  3802   003EFB                     ADCON3          equ	16123	;# 
  3803   003EFC                     ADSTAT          equ	16124	;# 
  3804   003EFD                     ADREF           equ	16125	;# 
  3805   003EFE                     ADACT           equ	16126	;# 
  3806   003EFF                     ADCLK           equ	16127	;# 
  3807   003F12                     SMT1TMR         equ	16146	;# 
  3808   003F12                     SMT1TMRL        equ	16146	;# 
  3809   003F13                     SMT1TMRH        equ	16147	;# 
  3810   003F14                     SMT1TMRU        equ	16148	;# 
  3811   003F15                     SMT1CPR         equ	16149	;# 
  3812   003F15                     SMT1CPRL        equ	16149	;# 
  3813   003F16                     SMT1CPRH        equ	16150	;# 
  3814   003F17                     SMT1CPRU        equ	16151	;# 
  3815   003F18                     SMT1CPW         equ	16152	;# 
  3816   003F18                     SMT1CPWL        equ	16152	;# 
  3817   003F19                     SMT1CPWH        equ	16153	;# 
  3818   003F1A                     SMT1CPWU        equ	16154	;# 
  3819   003F1B                     SMT1PR          equ	16155	;# 
  3820   003F1B                     SMT1PRL         equ	16155	;# 
  3821   003F1C                     SMT1PRH         equ	16156	;# 
  3822   003F1D                     SMT1PRU         equ	16157	;# 
  3823   003F1E                     SMT1CON0        equ	16158	;# 
  3824   003F1F                     SMT1CON1        equ	16159	;# 
  3825   003F20                     SMT1STAT        equ	16160	;# 
  3826   003F21                     SMT1CLK         equ	16161	;# 
  3827   003F22                     SMT1SIG         equ	16162	;# 
  3828   003F23                     SMT1WIN         equ	16163	;# 
  3829   003F38                     NCO1ACC         equ	16184	;# 
  3830   003F38                     NCO1ACCL        equ	16184	;# 
  3831   003F39                     NCO1ACCH        equ	16185	;# 
  3832   003F3A                     NCO1ACCU        equ	16186	;# 
  3833   003F3B                     NCO1INC         equ	16187	;# 
  3834   003F3B                     NCO1INCL        equ	16187	;# 
  3835   003F3C                     NCO1INCH        equ	16188	;# 
  3836   003F3D                     NCO1INCU        equ	16189	;# 
  3837   003F3E                     NCO1CON         equ	16190	;# 
  3838   003F3F                     NCO1CLK         equ	16191	;# 
  3839   003F40                     CWG3CLK         equ	16192	;# 
  3840   003F40                     CWG3CLKCON      equ	16192	;# 
  3841   003F41                     CWG3ISM         equ	16193	;# 
  3842   003F41                     CWG3DAT         equ	16193	;# 
  3843   003F42                     CWG3DBR         equ	16194	;# 
  3844   003F43                     CWG3DBF         equ	16195	;# 
  3845   003F44                     CWG3CON0        equ	16196	;# 
  3846   003F45                     CWG3CON1        equ	16197	;# 
  3847   003F46                     CWG3AS0         equ	16198	;# 
  3848   003F47                     CWG3AS1         equ	16199	;# 
  3849   003F48                     CWG3STR         equ	16200	;# 
  3850   003F49                     CWG2CLK         equ	16201	;# 
  3851   003F49                     CWG2CLKCON      equ	16201	;# 
  3852   003F4A                     CWG2ISM         equ	16202	;# 
  3853   003F4A                     CWG2DAT         equ	16202	;# 
  3854   003F4B                     CWG2DBR         equ	16203	;# 
  3855   003F4C                     CWG2DBF         equ	16204	;# 
  3856   003F4D                     CWG2CON0        equ	16205	;# 
  3857   003F4E                     CWG2CON1        equ	16206	;# 
  3858   003F4F                     CWG2AS0         equ	16207	;# 
  3859   003F50                     CWG2AS1         equ	16208	;# 
  3860   003F51                     CWG2STR         equ	16209	;# 
  3861   003F52                     CWG1CLK         equ	16210	;# 
  3862   003F52                     CWG1CLKCON      equ	16210	;# 
  3863   003F53                     CWG1ISM         equ	16211	;# 
  3864   003F53                     CWG1DAT         equ	16211	;# 
  3865   003F54                     CWG1DBR         equ	16212	;# 
  3866   003F55                     CWG1DBF         equ	16213	;# 
  3867   003F56                     CWG1CON0        equ	16214	;# 
  3868   003F57                     CWG1CON1        equ	16215	;# 
  3869   003F58                     CWG1AS0         equ	16216	;# 
  3870   003F59                     CWG1AS1         equ	16217	;# 
  3871   003F5A                     CWG1STR         equ	16218	;# 
  3872   003F5E                     CCPTMRS0        equ	16222	;# 
  3873   003F5F                     CCPTMRS1        equ	16223	;# 
  3874   003F60                     PWM8DC          equ	16224	;# 
  3875   003F60                     PWM8DCL         equ	16224	;# 
  3876   003F61                     PWM8DCH         equ	16225	;# 
  3877   003F62                     PWM8CON         equ	16226	;# 
  3878   003F64                     PWM7DC          equ	16228	;# 
  3879   003F64                     PWM7DCL         equ	16228	;# 
  3880   003F65                     PWM7DCH         equ	16229	;# 
  3881   003F66                     PWM7CON         equ	16230	;# 
  3882   003F68                     PWM6DC          equ	16232	;# 
  3883   003F68                     PWM6DCL         equ	16232	;# 
  3884   003F69                     PWM6DCH         equ	16233	;# 
  3885   003F6A                     PWM6CON         equ	16234	;# 
  3886   003F6C                     PWM5DC          equ	16236	;# 
  3887   003F6C                     PWM5DCL         equ	16236	;# 
  3888   003F6D                     PWM5DCH         equ	16237	;# 
  3889   003F6E                     PWM5CON         equ	16238	;# 
  3890   003F70                     CCPR4           equ	16240	;# 
  3891   003F70                     CCPR4L          equ	16240	;# 
  3892   003F71                     CCPR4H          equ	16241	;# 
  3893   003F72                     CCP4CON         equ	16242	;# 
  3894   003F73                     CCP4CAP         equ	16243	;# 
  3895   003F74                     CCPR3           equ	16244	;# 
  3896   003F74                     CCPR3L          equ	16244	;# 
  3897   003F75                     CCPR3H          equ	16245	;# 
  3898   003F76                     CCP3CON         equ	16246	;# 
  3899   003F77                     CCP3CAP         equ	16247	;# 
  3900   003F78                     CCPR2           equ	16248	;# 
  3901   003F78                     CCPR2L          equ	16248	;# 
  3902   003F79                     CCPR2H          equ	16249	;# 
  3903   003F7A                     CCP2CON         equ	16250	;# 
  3904   003F7B                     CCP2CAP         equ	16251	;# 
  3905   003F7C                     CCPR1           equ	16252	;# 
  3906   003F7C                     CCPR1L          equ	16252	;# 
  3907   003F7D                     CCPR1H          equ	16253	;# 
  3908   003F7E                     CCP1CON         equ	16254	;# 
  3909   003F7F                     CCP1CAP         equ	16255	;# 
  3910   003F92                     T6TMR           equ	16274	;# 
  3911   003F92                     TMR6            equ	16274	;# 
  3912   003F93                     T6PR            equ	16275	;# 
  3913   003F93                     PR6             equ	16275	;# 
  3914   003F94                     T6CON           equ	16276	;# 
  3915   003F95                     T6HLT           equ	16277	;# 
  3916   003F96                     T6CLKCON        equ	16278	;# 
  3917   003F96                     T6CLK           equ	16278	;# 
  3918   003F97                     T6RST           equ	16279	;# 
  3919   003F98                     TMR5            equ	16280	;# 
  3920   003F98                     TMR5L           equ	16280	;# 
  3921   003F99                     TMR5H           equ	16281	;# 
  3922   003F9A                     T5CON           equ	16282	;# 
  3923   003F9A                     TMR5CON         equ	16282	;# 
  3924   003F9B                     T5GCON          equ	16283	;# 
  3925   003F9B                     TMR5GCON        equ	16283	;# 
  3926   003F9C                     T5GATE          equ	16284	;# 
  3927   003F9C                     TMR5GATE        equ	16284	;# 
  3928   003F9D                     T5CLK           equ	16285	;# 
  3929   003F9D                     TMR5CLK         equ	16285	;# 
  3930   003F9D                     PR5             equ	16285	;# 
  3931   003F9E                     T4TMR           equ	16286	;# 
  3932   003F9E                     TMR4            equ	16286	;# 
  3933   003F9F                     T4PR            equ	16287	;# 
  3934   003F9F                     PR4             equ	16287	;# 
  3935   003FA0                     T4CON           equ	16288	;# 
  3936   003FA1                     T4HLT           equ	16289	;# 
  3937   003FA2                     T4CLKCON        equ	16290	;# 
  3938   003FA2                     T4CLK           equ	16290	;# 
  3939   003FA3                     T4RST           equ	16291	;# 
  3940   003FA4                     TMR3            equ	16292	;# 
  3941   003FA4                     TMR3L           equ	16292	;# 
  3942   003FA5                     TMR3H           equ	16293	;# 
  3943   003FA6                     T3CON           equ	16294	;# 
  3944   003FA6                     TMR3CON         equ	16294	;# 
  3945   003FA7                     T3GCON          equ	16295	;# 
  3946   003FA7                     TMR3GCON        equ	16295	;# 
  3947   003FA8                     T3GATE          equ	16296	;# 
  3948   003FA8                     TMR3GATE        equ	16296	;# 
  3949   003FA9                     T3CLK           equ	16297	;# 
  3950   003FA9                     TMR3CLK         equ	16297	;# 
  3951   003FA9                     PR3             equ	16297	;# 
  3952   003FAA                     T2TMR           equ	16298	;# 
  3953   003FAA                     TMR2            equ	16298	;# 
  3954   003FAB                     T2PR            equ	16299	;# 
  3955   003FAB                     PR2             equ	16299	;# 
  3956   003FAC                     T2CON           equ	16300	;# 
  3957   003FAD                     T2HLT           equ	16301	;# 
  3958   003FAE                     T2CLKCON        equ	16302	;# 
  3959   003FAE                     T2CLK           equ	16302	;# 
  3960   003FAF                     T2RST           equ	16303	;# 
  3961   003FB0                     TMR1            equ	16304	;# 
  3962   003FB0                     TMR1L           equ	16304	;# 
  3963   003FB1                     TMR1H           equ	16305	;# 
  3964   003FB2                     T1CON           equ	16306	;# 
  3965   003FB2                     TMR1CON         equ	16306	;# 
  3966   003FB3                     T1GCON          equ	16307	;# 
  3967   003FB3                     TMR1GCON        equ	16307	;# 
  3968   003FB4                     T1GATE          equ	16308	;# 
  3969   003FB4                     TMR1GATE        equ	16308	;# 
  3970   003FB5                     T1CLK           equ	16309	;# 
  3971   003FB5                     TMR1CLK         equ	16309	;# 
  3972   003FB5                     PR1             equ	16309	;# 
  3973   003FB6                     TMR0L           equ	16310	;# 
  3974   003FB6                     TMR0            equ	16310	;# 
  3975   003FB7                     TMR0H           equ	16311	;# 
  3976   003FB7                     PR0             equ	16311	;# 
  3977   003FB8                     T0CON0          equ	16312	;# 
  3978   003FB9                     T0CON1          equ	16313	;# 
  3979   003FBA                     LATA            equ	16314	;# 
  3980   003FBB                     LATB            equ	16315	;# 
  3981   003FBC                     LATC            equ	16316	;# 
  3982   003FBD                     LATD            equ	16317	;# 
  3983   003FBE                     LATE            equ	16318	;# 
  3984   003FBF                     LATF            equ	16319	;# 
  3985   003FC2                     TRISA           equ	16322	;# 
  3986   003FC3                     TRISB           equ	16323	;# 
  3987   003FC4                     TRISC           equ	16324	;# 
  3988   003FC5                     TRISD           equ	16325	;# 
  3989   003FC6                     TRISE           equ	16326	;# 
  3990   003FC7                     TRISF           equ	16327	;# 
  3991   003FCA                     PORTA           equ	16330	;# 
  3992   003FCB                     PORTB           equ	16331	;# 
  3993   003FCC                     PORTC           equ	16332	;# 
  3994   003FCD                     PORTD           equ	16333	;# 
  3995   003FCE                     PORTE           equ	16334	;# 
  3996   003FCF                     PORTF           equ	16335	;# 
  3997   003FD2                     INTCON0         equ	16338	;# 
  3998   003FD3                     INTCON1         equ	16339	;# 
  3999   003FD4                     IVTLOCK         equ	16340	;# 
  4000   003FD5                     IVTBASE         equ	16341	;# 
  4001   003FD5                     IVTBASEL        equ	16341	;# 
  4002   003FD6                     IVTBASEH        equ	16342	;# 
  4003   003FD7                     IVTBASEU        equ	16343	;# 
  4004   003FD8                     STATUS          equ	16344	;# 
  4005   003FD9                     FSR2            equ	16345	;# 
  4006   003FD9                     FSR2L           equ	16345	;# 
  4007   003FDA                     FSR2H           equ	16346	;# 
  4008   003FDB                     PLUSW2          equ	16347	;# 
  4009   003FDC                     PREINC2         equ	16348	;# 
  4010   003FDD                     POSTDEC2        equ	16349	;# 
  4011   003FDE                     POSTINC2        equ	16350	;# 
  4012   003FDF                     INDF2           equ	16351	;# 
  4013   003FE0                     BSR             equ	16352	;# 
  4014   003FE1                     FSR1            equ	16353	;# 
  4015   003FE1                     FSR1L           equ	16353	;# 
  4016   003FE2                     FSR1H           equ	16354	;# 
  4017   003FE3                     PLUSW1          equ	16355	;# 
  4018   003FE4                     PREINC1         equ	16356	;# 
  4019   003FE5                     POSTDEC1        equ	16357	;# 
  4020   003FE6                     POSTINC1        equ	16358	;# 
  4021   003FE7                     INDF1           equ	16359	;# 
  4022   003FE8                     WREG            equ	16360	;# 
  4023   003FE9                     FSR0            equ	16361	;# 
  4024   003FE9                     FSR0L           equ	16361	;# 
  4025   003FEA                     FSR0H           equ	16362	;# 
  4026   003FEB                     PLUSW0          equ	16363	;# 
  4027   003FEC                     PREINC0         equ	16364	;# 
  4028   003FED                     POSTDEC0        equ	16365	;# 
  4029   003FEE                     POSTINC0        equ	16366	;# 
  4030   003FEF                     INDF0           equ	16367	;# 
  4031   003FF0                     PCON0           equ	16368	;# 
  4032   003FF1                     PCON1           equ	16369	;# 
  4033   003FF3                     PROD            equ	16371	;# 
  4034   003FF3                     PRODL           equ	16371	;# 
  4035   003FF4                     PRODH           equ	16372	;# 
  4036   003FF5                     TABLAT          equ	16373	;# 
  4037   003FF6                     TBLPTR          equ	16374	;# 
  4038   003FF6                     TBLPTRL         equ	16374	;# 
  4039   003FF7                     TBLPTRH         equ	16375	;# 
  4040   003FF8                     TBLPTRU         equ	16376	;# 
  4041   003FF9                     PCLAT           equ	16377	;# 
  4042   003FF9                     PCL             equ	16377	;# 
  4043   003FFA                     PCLATH          equ	16378	;# 
  4044   003FFB                     PCLATU          equ	16379	;# 
  4045   003FFC                     STKPTR          equ	16380	;# 
  4046   003FFD                     TOS             equ	16381	;# 
  4047   003FFD                     TOSL            equ	16381	;# 
  4048   003FFE                     TOSH            equ	16382	;# 
  4049   003FFF                     TOSU            equ	16383	;# 
  4050   003880                     STATUS_CSHAD    equ	14464	;# 
  4051   003881                     WREG_CSHAD      equ	14465	;# 
  4052   003882                     BSR_CSHAD       equ	14466	;# 
  4053   003883                     SHADCON         equ	14467	;# 
  4054   003884                     STATUS_SHAD     equ	14468	;# 
  4055   003885                     WREG_SHAD       equ	14469	;# 
  4056   003886                     BSR_SHAD        equ	14470	;# 
  4057   003887                     PCLATH_SHAD     equ	14471	;# 
  4058   003888                     PCLATU_SHAD     equ	14472	;# 
  4059   003889                     FSR0SH          equ	14473	;# 
  4060   003889                     FSR0L_SHAD      equ	14473	;# 
  4061   00388A                     FSR0H_SHAD      equ	14474	;# 
  4062   00388B                     FSR1SH          equ	14475	;# 
  4063   00388B                     FSR1L_SHAD      equ	14475	;# 
  4064   00388C                     FSR1H_SHAD      equ	14476	;# 
  4065   00388D                     FSR2SH          equ	14477	;# 
  4066   00388D                     FSR2L_SHAD      equ	14477	;# 
  4067   00388E                     FSR2H_SHAD      equ	14478	;# 
  4068   00388F                     PRODSH          equ	14479	;# 
  4069   00388F                     PRODL_SHAD      equ	14479	;# 
  4070   003890                     PRODH_SHAD      equ	14480	;# 
  4071   00389D                     IVTADL          equ	14493	;# 
  4072   00389E                     IVTADH          equ	14494	;# 
  4073   00389F                     IVTADU          equ	14495	;# 
  4074   00395B                     WDTCON0         equ	14683	;# 
  4075   00395C                     WDTCON1         equ	14684	;# 
  4076   00395D                     WDTPSL          equ	14685	;# 
  4077   00395E                     WDTPSH          equ	14686	;# 
  4078   00395F                     WDTTMR          equ	14687	;# 
  4079   003960                     CRCDATA         equ	14688	;# 
  4080   003960                     CRCDATL         equ	14688	;# 
  4081   003961                     CRCDATH         equ	14689	;# 
  4082   003962                     CRCACC          equ	14690	;# 
  4083   003962                     CRCACCL         equ	14690	;# 
  4084   003963                     CRCACCH         equ	14691	;# 
  4085   003964                     CRCSHFT         equ	14692	;# 
  4086   003964                     CRCSHIFTL       equ	14692	;# 
  4087   003965                     CRCSHIFTH       equ	14693	;# 
  4088   003966                     CRCXOR          equ	14694	;# 
  4089   003966                     CRCXORL         equ	14694	;# 
  4090   003967                     CRCXORH         equ	14695	;# 
  4091   003968                     CRCCON0         equ	14696	;# 
  4092   003969                     CRCCON1         equ	14697	;# 
  4093   003976                     SCANLADR        equ	14710	;# 
  4094   003976                     SCANLADRL       equ	14710	;# 
  4095   003977                     SCANLADRH       equ	14711	;# 
  4096   003978                     SCANLADRU       equ	14712	;# 
  4097   003979                     SCANHADR        equ	14713	;# 
  4098   003979                     SCANHADRL       equ	14713	;# 
  4099   00397A                     SCANHADRH       equ	14714	;# 
  4100   00397B                     SCANHADRU       equ	14715	;# 
  4101   00397C                     SCANCON0        equ	14716	;# 
  4102   00397D                     SCANTRIG        equ	14717	;# 
  4103   003980                     IPR0            equ	14720	;# 
  4104   003981                     IPR1            equ	14721	;# 
  4105   003982                     IPR2            equ	14722	;# 
  4106   003983                     IPR3            equ	14723	;# 
  4107   003984                     IPR4            equ	14724	;# 
  4108   003985                     IPR5            equ	14725	;# 
  4109   003986                     IPR6            equ	14726	;# 
  4110   003987                     IPR7            equ	14727	;# 
  4111   003988                     IPR8            equ	14728	;# 
  4112   003989                     IPR9            equ	14729	;# 
  4113   00398A                     IPR10           equ	14730	;# 
  4114   003990                     PIE0            equ	14736	;# 
  4115   003991                     PIE1            equ	14737	;# 
  4116   003992                     PIE2            equ	14738	;# 
  4117   003993                     PIE3            equ	14739	;# 
  4118   003994                     PIE4            equ	14740	;# 
  4119   003995                     PIE5            equ	14741	;# 
  4120   003996                     PIE6            equ	14742	;# 
  4121   003997                     PIE7            equ	14743	;# 
  4122   003998                     PIE8            equ	14744	;# 
  4123   003999                     PIE9            equ	14745	;# 
  4124   00399A                     PIE10           equ	14746	;# 
  4125   0039A0                     PIR0            equ	14752	;# 
  4126   0039A1                     PIR1            equ	14753	;# 
  4127   0039A2                     PIR2            equ	14754	;# 
  4128   0039A3                     PIR3            equ	14755	;# 
  4129   0039A4                     PIR4            equ	14756	;# 
  4130   0039A5                     PIR5            equ	14757	;# 
  4131   0039A6                     PIR6            equ	14758	;# 
  4132   0039A7                     PIR7            equ	14759	;# 
  4133   0039A8                     PIR8            equ	14760	;# 
  4134   0039A9                     PIR9            equ	14761	;# 
  4135   0039AA                     PIR10           equ	14762	;# 
  4136   0039C0                     PMD0            equ	14784	;# 
  4137   0039C1                     PMD1            equ	14785	;# 
  4138   0039C2                     PMD2            equ	14786	;# 
  4139   0039C3                     PMD3            equ	14787	;# 
  4140   0039C4                     PMD4            equ	14788	;# 
  4141   0039C5                     PMD5            equ	14789	;# 
  4142   0039C6                     PMD6            equ	14790	;# 
  4143   0039C7                     PMD7            equ	14791	;# 
  4144   0039D0                     BORCON          equ	14800	;# 
  4145   0039D1                     VREGCON         equ	14801	;# 
  4146   0039D8                     CPUDOZE         equ	14808	;# 
  4147   0039D9                     OSCCON1         equ	14809	;# 
  4148   0039DA                     OSCCON2         equ	14810	;# 
  4149   0039DB                     OSCCON3         equ	14811	;# 
  4150   0039DC                     OSCSTAT         equ	14812	;# 
  4151   0039DC                     OSCSTAT1        equ	14812	;# 
  4152   0039DD                     OSCEN           equ	14813	;# 
  4153   0039DE                     OSCTUNE         equ	14814	;# 
  4154   0039DF                     OSCFRQ          equ	14815	;# 
  4155   0039E0                     NVMADRL         equ	14816	;# 
  4156   0039E1                     NVMADRH         equ	14817	;# 
  4157   0039E3                     NVMDAT          equ	14819	;# 
  4158   0039E5                     NVMCON1         equ	14821	;# 
  4159   0039E6                     NVMCON2         equ	14822	;# 
  4160   0039EF                     PRLOCK          equ	14831	;# 
  4161   0039F1                     ISRPR           equ	14833	;# 
  4162   0039F2                     MAINPR          equ	14834	;# 
  4163   0039F3                     DMA1PR          equ	14835	;# 
  4164   0039F4                     DMA2PR          equ	14836	;# 
  4165   0039F7                     SCANPR          equ	14839	;# 
  4166   003A00                     RA0PPS          equ	14848	;# 
  4167   003A01                     RA1PPS          equ	14849	;# 
  4168   003A02                     RA2PPS          equ	14850	;# 
  4169   003A03                     RA3PPS          equ	14851	;# 
  4170   003A04                     RA4PPS          equ	14852	;# 
  4171   003A05                     RA5PPS          equ	14853	;# 
  4172   003A06                     RA6PPS          equ	14854	;# 
  4173   003A07                     RA7PPS          equ	14855	;# 
  4174   003A08                     RB0PPS          equ	14856	;# 
  4175   003A09                     RB1PPS          equ	14857	;# 
  4176   003A0A                     RB2PPS          equ	14858	;# 
  4177   003A0B                     RB3PPS          equ	14859	;# 
  4178   003A0C                     RB4PPS          equ	14860	;# 
  4179   003A0D                     RB5PPS          equ	14861	;# 
  4180   003A0E                     RB6PPS          equ	14862	;# 
  4181   003A0F                     RB7PPS          equ	14863	;# 
  4182   003A10                     RC0PPS          equ	14864	;# 
  4183   003A11                     RC1PPS          equ	14865	;# 
  4184   003A12                     RC2PPS          equ	14866	;# 
  4185   003A13                     RC3PPS          equ	14867	;# 
  4186   003A14                     RC4PPS          equ	14868	;# 
  4187   003A15                     RC5PPS          equ	14869	;# 
  4188   003A16                     RC6PPS          equ	14870	;# 
  4189   003A17                     RC7PPS          equ	14871	;# 
  4190   003A18                     RD0PPS          equ	14872	;# 
  4191   003A19                     RD1PPS          equ	14873	;# 
  4192   003A1A                     RD2PPS          equ	14874	;# 
  4193   003A1B                     RD3PPS          equ	14875	;# 
  4194   003A1C                     RD4PPS          equ	14876	;# 
  4195   003A1D                     RD5PPS          equ	14877	;# 
  4196   003A1E                     RD6PPS          equ	14878	;# 
  4197   003A1F                     RD7PPS          equ	14879	;# 
  4198   003A20                     RE0PPS          equ	14880	;# 
  4199   003A21                     RE1PPS          equ	14881	;# 
  4200   003A22                     RE2PPS          equ	14882	;# 
  4201   003A28                     RF0PPS          equ	14888	;# 
  4202   003A29                     RF1PPS          equ	14889	;# 
  4203   003A2A                     RF2PPS          equ	14890	;# 
  4204   003A2B                     RF3PPS          equ	14891	;# 
  4205   003A2C                     RF4PPS          equ	14892	;# 
  4206   003A2D                     RF5PPS          equ	14893	;# 
  4207   003A2E                     RF6PPS          equ	14894	;# 
  4208   003A2F                     RF7PPS          equ	14895	;# 
  4209   003A40                     ANSELA          equ	14912	;# 
  4210   003A41                     WPUA            equ	14913	;# 
  4211   003A42                     ODCONA          equ	14914	;# 
  4212   003A43                     SLRCONA         equ	14915	;# 
  4213   003A44                     INLVLA          equ	14916	;# 
  4214   003A45                     IOCAP           equ	14917	;# 
  4215   003A46                     IOCAN           equ	14918	;# 
  4216   003A47                     IOCAF           equ	14919	;# 
  4217   003A50                     ANSELB          equ	14928	;# 
  4218   003A51                     WPUB            equ	14929	;# 
  4219   003A52                     ODCONB          equ	14930	;# 
  4220   003A53                     SLRCONB         equ	14931	;# 
  4221   003A54                     INLVLB          equ	14932	;# 
  4222   003A55                     IOCBP           equ	14933	;# 
  4223   003A56                     IOCBN           equ	14934	;# 
  4224   003A57                     IOCBF           equ	14935	;# 
  4225   003A5A                     RB1I2C          equ	14938	;# 
  4226   003A5B                     RB2I2C          equ	14939	;# 
  4227   003A60                     ANSELC          equ	14944	;# 
  4228   003A61                     WPUC            equ	14945	;# 
  4229   003A62                     ODCONC          equ	14946	;# 
  4230   003A63                     SLRCONC         equ	14947	;# 
  4231   003A64                     INLVLC          equ	14948	;# 
  4232   003A65                     IOCCP           equ	14949	;# 
  4233   003A66                     IOCCN           equ	14950	;# 
  4234   003A67                     IOCCF           equ	14951	;# 
  4235   003A6A                     RC3I2C          equ	14954	;# 
  4236   003A6B                     RC4I2C          equ	14955	;# 
  4237   003A70                     ANSELD          equ	14960	;# 
  4238   003A71                     WPUD            equ	14961	;# 
  4239   003A72                     ODCOND          equ	14962	;# 
  4240   003A73                     SLRCOND         equ	14963	;# 
  4241   003A74                     INLVLD          equ	14964	;# 
  4242   003A7A                     RD0I2C          equ	14970	;# 
  4243   003A7B                     RD1I2C          equ	14971	;# 
  4244   003A80                     ANSELE          equ	14976	;# 
  4245   003A81                     WPUE            equ	14977	;# 
  4246   003A82                     ODCONE          equ	14978	;# 
  4247   003A83                     SLRCONE         equ	14979	;# 
  4248   003A84                     INLVLE          equ	14980	;# 
  4249   003A85                     IOCEP           equ	14981	;# 
  4250   003A86                     IOCEN           equ	14982	;# 
  4251   003A87                     IOCEF           equ	14983	;# 
  4252   003A90                     ANSELF          equ	14992	;# 
  4253   003A91                     WPUF            equ	14993	;# 
  4254   003A92                     ODCONF          equ	14994	;# 
  4255   003A93                     SLRCONF         equ	14995	;# 
  4256   003A94                     INLVLF          equ	14996	;# 
  4257   003ABF                     PPSLOCK         equ	15039	;# 
  4258   003AC0                     INT0PPS         equ	15040	;# 
  4259   003AC1                     INT1PPS         equ	15041	;# 
  4260   003AC2                     INT2PPS         equ	15042	;# 
  4261   003AC3                     T0CKIPPS        equ	15043	;# 
  4262   003AC4                     T1CKIPPS        equ	15044	;# 
  4263   003AC5                     T1GPPS          equ	15045	;# 
  4264   003AC6                     T3CKIPPS        equ	15046	;# 
  4265   003AC7                     T3GPPS          equ	15047	;# 
  4266   003AC8                     T5CKIPPS        equ	15048	;# 
  4267   003AC9                     T5GPPS          equ	15049	;# 
  4268   003ACA                     T2INPPS         equ	15050	;# 
  4269   003ACB                     T4INPPS         equ	15051	;# 
  4270   003ACC                     T6INPPS         equ	15052	;# 
  4271   003ACD                     CCP1PPS         equ	15053	;# 
  4272   003ACE                     CCP2PPS         equ	15054	;# 
  4273   003ACF                     CCP3PPS         equ	15055	;# 
  4274   003AD0                     CCP4PPS         equ	15056	;# 
  4275   003AD1                     SMT1WINPPS      equ	15057	;# 
  4276   003AD2                     SMT1SIGPPS      equ	15058	;# 
  4277   003AD3                     CWG1INPPS       equ	15059	;# 
  4278   003AD4                     CWG2INPPS       equ	15060	;# 
  4279   003AD5                     CWG3INPPS       equ	15061	;# 
  4280   003AD6                     MD1CARLPPS      equ	15062	;# 
  4281   003AD7                     MD1CARHPPS      equ	15063	;# 
  4282   003AD8                     MD1SRCPPS       equ	15064	;# 
  4283   003AD9                     CLCIN0PPS       equ	15065	;# 
  4284   003ADA                     CLCIN1PPS       equ	15066	;# 
  4285   003ADB                     CLCIN2PPS       equ	15067	;# 
  4286   003ADC                     CLCIN3PPS       equ	15068	;# 
  4287   003ADD                     ADACTPPS        equ	15069	;# 
  4288   003ADE                     SPI1SCKPPS      equ	15070	;# 
  4289   003ADF                     SPI1SDIPPS      equ	15071	;# 
  4290   003AE0                     SPI1SSPPS       equ	15072	;# 
  4291   003AE1                     I2C1SCLPPS      equ	15073	;# 
  4292   003AE2                     I2C1SDAPPS      equ	15074	;# 
  4293   003AE3                     I2C2SCLPPS      equ	15075	;# 
  4294   003AE4                     I2C2SDAPPS      equ	15076	;# 
  4295   003AE5                     U1RXPPS         equ	15077	;# 
  4296   003AE6                     U1CTSPPS        equ	15078	;# 
  4297   003AE8                     U2RXPPS         equ	15080	;# 
  4298   003AE9                     U2CTSPPS        equ	15081	;# 
  4299   003BC9                     DMA2BUF         equ	15305	;# 
  4300   003BCA                     DMA2DCNT        equ	15306	;# 
  4301   003BCA                     DMA2DCNTL       equ	15306	;# 
  4302   003BCB                     DMA2DCNTH       equ	15307	;# 
  4303   003BCC                     DMA2DPTR        equ	15308	;# 
  4304   003BCC                     DMA2DPTRL       equ	15308	;# 
  4305   003BCD                     DMA2DPTRH       equ	15309	;# 
  4306   003BCE                     DMA2DSZ         equ	15310	;# 
  4307   003BCE                     DMA2DSZL        equ	15310	;# 
  4308   003BCF                     DMA2DSZH        equ	15311	;# 
  4309   003BD0                     DMA2DSA         equ	15312	;# 
  4310   003BD0                     DMA2DSAL        equ	15312	;# 
  4311   003BD1                     DMA2DSAH        equ	15313	;# 
  4312   003BD2                     DMA2SCNT        equ	15314	;# 
  4313   003BD2                     DMA2SCNTL       equ	15314	;# 
  4314   003BD3                     DMA2SCNTH       equ	15315	;# 
  4315   003BD4                     DMA2SPTR        equ	15316	;# 
  4316   003BD4                     DMA2SPTRL       equ	15316	;# 
  4317   003BD5                     DMA2SPTRH       equ	15317	;# 
  4318   003BD6                     DMA2SPTRU       equ	15318	;# 
  4319   003BD7                     DMA2SSZ         equ	15319	;# 
  4320   003BD7                     DMA2SSZL        equ	15319	;# 
  4321   003BD8                     DMA2SSZH        equ	15320	;# 
  4322   003BD9                     DMA2SSA         equ	15321	;# 
  4323   003BD9                     DMA2SSAL        equ	15321	;# 
  4324   003BDA                     DMA2SSAH        equ	15322	;# 
  4325   003BDB                     DMA2SSAU        equ	15323	;# 
  4326   003BDC                     DMA2CON0        equ	15324	;# 
  4327   003BDD                     DMA2CON1        equ	15325	;# 
  4328   003BDE                     DMA2AIRQ        equ	15326	;# 
  4329   003BDF                     DMA2SIRQ        equ	15327	;# 
  4330   003BE9                     DMA1BUF         equ	15337	;# 
  4331   003BEA                     DMA1DCNT        equ	15338	;# 
  4332   003BEA                     DMA1DCNTL       equ	15338	;# 
  4333   003BEB                     DMA1DCNTH       equ	15339	;# 
  4334   003BEC                     DMA1DPTR        equ	15340	;# 
  4335   003BEC                     DMA1DPTRL       equ	15340	;# 
  4336   003BED                     DMA1DPTRH       equ	15341	;# 
  4337   003BEE                     DMA1DSZ         equ	15342	;# 
  4338   003BEE                     DMA1DSZL        equ	15342	;# 
  4339   003BEF                     DMA1DSZH        equ	15343	;# 
  4340   003BF0                     DMA1DSA         equ	15344	;# 
  4341   003BF0                     DMA1DSAL        equ	15344	;# 
  4342   003BF1                     DMA1DSAH        equ	15345	;# 
  4343   003BF2                     DMA1SCNT        equ	15346	;# 
  4344   003BF2                     DMA1SCNTL       equ	15346	;# 
  4345   003BF3                     DMA1SCNTH       equ	15347	;# 
  4346   003BF4                     DMA1SPTR        equ	15348	;# 
  4347   003BF4                     DMA1SPTRL       equ	15348	;# 
  4348   003BF5                     DMA1SPTRH       equ	15349	;# 
  4349   003BF6                     DMA1SPTRU       equ	15350	;# 
  4350   003BF7                     DMA1SSZ         equ	15351	;# 
  4351   003BF7                     DMA1SSZL        equ	15351	;# 
  4352   003BF8                     DMA1SSZH        equ	15352	;# 
  4353   003BF9                     DMA1SSA         equ	15353	;# 
  4354   003BF9                     DMA1SSAL        equ	15353	;# 
  4355   003BFA                     DMA1SSAH        equ	15354	;# 
  4356   003BFB                     DMA1SSAU        equ	15355	;# 
  4357   003BFC                     DMA1CON0        equ	15356	;# 
  4358   003BFD                     DMA1CON1        equ	15357	;# 
  4359   003BFE                     DMA1AIRQ        equ	15358	;# 
  4360   003BFF                     DMA1SIRQ        equ	15359	;# 
  4361   003C56                     CLC4CON         equ	15446	;# 
  4362   003C57                     CLC4POL         equ	15447	;# 
  4363   003C58                     CLC4SEL0        equ	15448	;# 
  4364   003C59                     CLC4SEL1        equ	15449	;# 
  4365   003C5A                     CLC4SEL2        equ	15450	;# 
  4366   003C5B                     CLC4SEL3        equ	15451	;# 
  4367   003C5C                     CLC4GLS0        equ	15452	;# 
  4368   003C5D                     CLC4GLS1        equ	15453	;# 
  4369   003C5E                     CLC4GLS2        equ	15454	;# 
  4370   003C5F                     CLC4GLS3        equ	15455	;# 
  4371   003C60                     CLC3CON         equ	15456	;# 
  4372   003C61                     CLC3POL         equ	15457	;# 
  4373   003C62                     CLC3SEL0        equ	15458	;# 
  4374   003C63                     CLC3SEL1        equ	15459	;# 
  4375   003C64                     CLC3SEL2        equ	15460	;# 
  4376   003C65                     CLC3SEL3        equ	15461	;# 
  4377   003C66                     CLC3GLS0        equ	15462	;# 
  4378   003C67                     CLC3GLS1        equ	15463	;# 
  4379   003C68                     CLC3GLS2        equ	15464	;# 
  4380   003C69                     CLC3GLS3        equ	15465	;# 
  4381   003C6A                     CLC2CON         equ	15466	;# 
  4382   003C6B                     CLC2POL         equ	15467	;# 
  4383   003C6C                     CLC2SEL0        equ	15468	;# 
  4384   003C6D                     CLC2SEL1        equ	15469	;# 
  4385   003C6E                     CLC2SEL2        equ	15470	;# 
  4386   003C6F                     CLC2SEL3        equ	15471	;# 
  4387   003C70                     CLC2GLS0        equ	15472	;# 
  4388   003C71                     CLC2GLS1        equ	15473	;# 
  4389   003C72                     CLC2GLS2        equ	15474	;# 
  4390   003C73                     CLC2GLS3        equ	15475	;# 
  4391   003C74                     CLC1CON         equ	15476	;# 
  4392   003C75                     CLC1POL         equ	15477	;# 
  4393   003C76                     CLC1SEL0        equ	15478	;# 
  4394   003C77                     CLC1SEL1        equ	15479	;# 
  4395   003C78                     CLC1SEL2        equ	15480	;# 
  4396   003C79                     CLC1SEL3        equ	15481	;# 
  4397   003C7A                     CLC1GLS0        equ	15482	;# 
  4398   003C7B                     CLC1GLS1        equ	15483	;# 
  4399   003C7C                     CLC1GLS2        equ	15484	;# 
  4400   003C7D                     CLC1GLS3        equ	15485	;# 
  4401   003C7E                     CLCDATA0        equ	15486	;# 
  4402   003CE5                     CLKRCON         equ	15589	;# 
  4403   003CE6                     CLKRCLK         equ	15590	;# 
  4404   003CFA                     MD1CON0         equ	15610	;# 
  4405   003CFB                     MD1CON1         equ	15611	;# 
  4406   003CFC                     MD1SRC          equ	15612	;# 
  4407   003CFD                     MD1CARL         equ	15613	;# 
  4408   003CFE                     MD1CARH         equ	15614	;# 
  4409   003D10                     SPI1RXB         equ	15632	;# 
  4410   003D11                     SPI1TXB         equ	15633	;# 
  4411   003D12                     SPI1TCNT        equ	15634	;# 
  4412   003D12                     SPI1TCNTL       equ	15634	;# 
  4413   003D13                     SPI1TCNTH       equ	15635	;# 
  4414   003D14                     SPI1CON0        equ	15636	;# 
  4415   003D15                     SPI1CON1        equ	15637	;# 
  4416   003D16                     SPI1CON2        equ	15638	;# 
  4417   003D17                     SPI1STATUS      equ	15639	;# 
  4418   003D18                     SPI1TWIDTH      equ	15640	;# 
  4419   003D19                     SPI1BAUD        equ	15641	;# 
  4420   003D1A                     SPI1INTF        equ	15642	;# 
  4421   003D1B                     SPI1INTE        equ	15643	;# 
  4422   003D1C                     SPI1CLK         equ	15644	;# 
  4423   003D54                     I2C2RXB         equ	15700	;# 
  4424   003D55                     I2C2TXB         equ	15701	;# 
  4425   003D56                     I2C2CNT         equ	15702	;# 
  4426   003D57                     I2C2ADB0        equ	15703	;# 
  4427   003D58                     I2C2ADB1        equ	15704	;# 
  4428   003D59                     I2C2ADR0        equ	15705	;# 
  4429   003D5A                     I2C2ADR1        equ	15706	;# 
  4430   003D5B                     I2C2ADR2        equ	15707	;# 
  4431   003D5C                     I2C2ADR3        equ	15708	;# 
  4432   003D5D                     I2C2CON0        equ	15709	;# 
  4433   003D5E                     I2C2CON1        equ	15710	;# 
  4434   003D5F                     I2C2CON2        equ	15711	;# 
  4435   003D60                     I2C2ERR         equ	15712	;# 
  4436   003D61                     I2C2STAT0       equ	15713	;# 
  4437   003D62                     I2C2STAT1       equ	15714	;# 
  4438   003D63                     I2C2PIR         equ	15715	;# 
  4439   003D64                     I2C2PIE         equ	15716	;# 
  4440   003D65                     I2C2CLK         equ	15717	;# 
  4441   003D66                     I2C2BTO         equ	15718	;# 
  4442   003D6A                     I2C1RXB         equ	15722	;# 
  4443   003D6B                     I2C1TXB         equ	15723	;# 
  4444   003D6C                     I2C1CNT         equ	15724	;# 
  4445   003D6D                     I2C1ADB0        equ	15725	;# 
  4446   003D6E                     I2C1ADB1        equ	15726	;# 
  4447   003D6F                     I2C1ADR0        equ	15727	;# 
  4448   003D70                     I2C1ADR1        equ	15728	;# 
  4449   003D71                     I2C1ADR2        equ	15729	;# 
  4450   003D72                     I2C1ADR3        equ	15730	;# 
  4451   003D73                     I2C1CON0        equ	15731	;# 
  4452   003D74                     I2C1CON1        equ	15732	;# 
  4453   003D75                     I2C1CON2        equ	15733	;# 
  4454   003D76                     I2C1ERR         equ	15734	;# 
  4455   003D77                     I2C1STAT0       equ	15735	;# 
  4456   003D78                     I2C1STAT1       equ	15736	;# 
  4457   003D79                     I2C1PIR         equ	15737	;# 
  4458   003D7A                     I2C1PIE         equ	15738	;# 
  4459   003D7B                     I2C1CLK         equ	15739	;# 
  4460   003D7C                     I2C1BTO         equ	15740	;# 
  4461   003DD0                     U2RXB           equ	15824	;# 
  4462   003DD0                     U2RXBL          equ	15824	;# 
  4463   003DD2                     U2TXB           equ	15826	;# 
  4464   003DD2                     U2TXBL          equ	15826	;# 
  4465   003DD4                     U2P1            equ	15828	;# 
  4466   003DD4                     U2P1L           equ	15828	;# 
  4467   003DD6                     U2P2            equ	15830	;# 
  4468   003DD6                     U2P2L           equ	15830	;# 
  4469   003DD8                     U2P3            equ	15832	;# 
  4470   003DD8                     U2P3L           equ	15832	;# 
  4471   003DDA                     U2CON0          equ	15834	;# 
  4472   003DDB                     U2CON1          equ	15835	;# 
  4473   003DDC                     U2CON2          equ	15836	;# 
  4474   003DDD                     U2BRG           equ	15837	;# 
  4475   003DDD                     U2BRGL          equ	15837	;# 
  4476   003DDE                     U2BRGH          equ	15838	;# 
  4477   003DDF                     U2FIFO          equ	15839	;# 
  4478   003DE0                     U2UIR           equ	15840	;# 
  4479   003DE1                     U2ERRIR         equ	15841	;# 
  4480   003DE2                     U2ERRIE         equ	15842	;# 
  4481   003DE8                     U1RXB           equ	15848	;# 
  4482   003DE8                     U1RXBL          equ	15848	;# 
  4483   003DE9                     U1RXCHK         equ	15849	;# 
  4484   003DEA                     U1TXB           equ	15850	;# 
  4485   003DEA                     U1TXBL          equ	15850	;# 
  4486   003DEB                     U1TXCHK         equ	15851	;# 
  4487   003DEC                     U1P1            equ	15852	;# 
  4488   003DEC                     U1P1L           equ	15852	;# 
  4489   003DED                     U1P1H           equ	15853	;# 
  4490   003DEE                     U1P2            equ	15854	;# 
  4491   003DEE                     U1P2L           equ	15854	;# 
  4492   003DEF                     U1P2H           equ	15855	;# 
  4493   003DF0                     U1P3            equ	15856	;# 
  4494   003DF0                     U1P3L           equ	15856	;# 
  4495   003DF1                     U1P3H           equ	15857	;# 
  4496   003DF2                     U1CON0          equ	15858	;# 
  4497   003DF3                     U1CON1          equ	15859	;# 
  4498   003DF4                     U1CON2          equ	15860	;# 
  4499   003DF5                     U1BRG           equ	15861	;# 
  4500   003DF5                     U1BRGL          equ	15861	;# 
  4501   003DF6                     U1BRGH          equ	15862	;# 
  4502   003DF7                     U1FIFO          equ	15863	;# 
  4503   003DF8                     U1UIR           equ	15864	;# 
  4504   003DF9                     U1ERRIR         equ	15865	;# 
  4505   003DFA                     U1ERRIE         equ	15866	;# 
  4506   003E9C                     DAC1CON1        equ	16028	;# 
  4507   003E9E                     DAC1CON0        equ	16030	;# 
  4508   003EB8                     CM2CON0         equ	16056	;# 
  4509   003EB9                     CM2CON1         equ	16057	;# 
  4510   003EBA                     CM2NCH          equ	16058	;# 
  4511   003EBB                     CM2PCH          equ	16059	;# 
  4512   003EBC                     CM1CON0         equ	16060	;# 
  4513   003EBD                     CM1CON1         equ	16061	;# 
  4514   003EBE                     CM1NCH          equ	16062	;# 
  4515   003EBF                     CM1PCH          equ	16063	;# 
  4516   003EC0                     CMOUT           equ	16064	;# 
  4517   003EC1                     FVRCON          equ	16065	;# 
  4518   003EC3                     ZCDCON          equ	16067	;# 
  4519   003EC9                     HLVDCON0        equ	16073	;# 
  4520   003ECA                     HLVDCON1        equ	16074	;# 
  4521   003ED7                     ADCP            equ	16087	;# 
  4522   003EDE                     ADLTH           equ	16094	;# 
  4523   003EDE                     ADLTHL          equ	16094	;# 
  4524   003EDF                     ADLTHH          equ	16095	;# 
  4525   003EE0                     ADUTH           equ	16096	;# 
  4526   003EE0                     ADUTHL          equ	16096	;# 
  4527   003EE1                     ADUTHH          equ	16097	;# 
  4528   003EE2                     ADERR           equ	16098	;# 
  4529   003EE2                     ADERRL          equ	16098	;# 
  4530   003EE3                     ADERRH          equ	16099	;# 
  4531   003EE4                     ADSTPT          equ	16100	;# 
  4532   003EE4                     ADSTPTL         equ	16100	;# 
  4533   003EE5                     ADSTPTH         equ	16101	;# 
  4534   003EE6                     ADFLTR          equ	16102	;# 
  4535   003EE6                     ADFLTRL         equ	16102	;# 
  4536   003EE7                     ADFLTRH         equ	16103	;# 
  4537   003EE8                     ADACC           equ	16104	;# 
  4538   003EE8                     ADACCL          equ	16104	;# 
  4539   003EE9                     ADACCH          equ	16105	;# 
  4540   003EEA                     ADACCU          equ	16106	;# 
  4541   003EEB                     ADCNT           equ	16107	;# 
  4542   003EEC                     ADRPT           equ	16108	;# 
  4543   003EED                     ADPREV          equ	16109	;# 
  4544   003EED                     ADPREVL         equ	16109	;# 
  4545   003EEE                     ADPREVH         equ	16110	;# 
  4546   003EEF                     ADRES           equ	16111	;# 
  4547   003EEF                     ADRESL          equ	16111	;# 
  4548   003EF0                     ADRESH          equ	16112	;# 
  4549   003EF1                     ADPCH           equ	16113	;# 
  4550   003EF3                     ADACQ           equ	16115	;# 
  4551   003EF3                     ADACQL          equ	16115	;# 
  4552   003EF4                     ADACQH          equ	16116	;# 
  4553   003EF5                     ADCAP           equ	16117	;# 
  4554   003EF6                     ADPRE           equ	16118	;# 
  4555   003EF6                     ADPREL          equ	16118	;# 
  4556   003EF7                     ADPREH          equ	16119	;# 
  4557   003EF8                     ADCON0          equ	16120	;# 
  4558   003EF9                     ADCON1          equ	16121	;# 
  4559   003EFA                     ADCON2          equ	16122	;# 
  4560   003EFB                     ADCON3          equ	16123	;# 
  4561   003EFC                     ADSTAT          equ	16124	;# 
  4562   003EFD                     ADREF           equ	16125	;# 
  4563   003EFE                     ADACT           equ	16126	;# 
  4564   003EFF                     ADCLK           equ	16127	;# 
  4565   003F12                     SMT1TMR         equ	16146	;# 
  4566   003F12                     SMT1TMRL        equ	16146	;# 
  4567   003F13                     SMT1TMRH        equ	16147	;# 
  4568   003F14                     SMT1TMRU        equ	16148	;# 
  4569   003F15                     SMT1CPR         equ	16149	;# 
  4570   003F15                     SMT1CPRL        equ	16149	;# 
  4571   003F16                     SMT1CPRH        equ	16150	;# 
  4572   003F17                     SMT1CPRU        equ	16151	;# 
  4573   003F18                     SMT1CPW         equ	16152	;# 
  4574   003F18                     SMT1CPWL        equ	16152	;# 
  4575   003F19                     SMT1CPWH        equ	16153	;# 
  4576   003F1A                     SMT1CPWU        equ	16154	;# 
  4577   003F1B                     SMT1PR          equ	16155	;# 
  4578   003F1B                     SMT1PRL         equ	16155	;# 
  4579   003F1C                     SMT1PRH         equ	16156	;# 
  4580   003F1D                     SMT1PRU         equ	16157	;# 
  4581   003F1E                     SMT1CON0        equ	16158	;# 
  4582   003F1F                     SMT1CON1        equ	16159	;# 
  4583   003F20                     SMT1STAT        equ	16160	;# 
  4584   003F21                     SMT1CLK         equ	16161	;# 
  4585   003F22                     SMT1SIG         equ	16162	;# 
  4586   003F23                     SMT1WIN         equ	16163	;# 
  4587   003F38                     NCO1ACC         equ	16184	;# 
  4588   003F38                     NCO1ACCL        equ	16184	;# 
  4589   003F39                     NCO1ACCH        equ	16185	;# 
  4590   003F3A                     NCO1ACCU        equ	16186	;# 
  4591   003F3B                     NCO1INC         equ	16187	;# 
  4592   003F3B                     NCO1INCL        equ	16187	;# 
  4593   003F3C                     NCO1INCH        equ	16188	;# 
  4594   003F3D                     NCO1INCU        equ	16189	;# 
  4595   003F3E                     NCO1CON         equ	16190	;# 
  4596   003F3F                     NCO1CLK         equ	16191	;# 
  4597   003F40                     CWG3CLK         equ	16192	;# 
  4598   003F40                     CWG3CLKCON      equ	16192	;# 
  4599   003F41                     CWG3ISM         equ	16193	;# 
  4600   003F41                     CWG3DAT         equ	16193	;# 
  4601   003F42                     CWG3DBR         equ	16194	;# 
  4602   003F43                     CWG3DBF         equ	16195	;# 
  4603   003F44                     CWG3CON0        equ	16196	;# 
  4604   003F45                     CWG3CON1        equ	16197	;# 
  4605   003F46                     CWG3AS0         equ	16198	;# 
  4606   003F47                     CWG3AS1         equ	16199	;# 
  4607   003F48                     CWG3STR         equ	16200	;# 
  4608   003F49                     CWG2CLK         equ	16201	;# 
  4609   003F49                     CWG2CLKCON      equ	16201	;# 
  4610   003F4A                     CWG2ISM         equ	16202	;# 
  4611   003F4A                     CWG2DAT         equ	16202	;# 
  4612   003F4B                     CWG2DBR         equ	16203	;# 
  4613   003F4C                     CWG2DBF         equ	16204	;# 
  4614   003F4D                     CWG2CON0        equ	16205	;# 
  4615   003F4E                     CWG2CON1        equ	16206	;# 
  4616   003F4F                     CWG2AS0         equ	16207	;# 
  4617   003F50                     CWG2AS1         equ	16208	;# 
  4618   003F51                     CWG2STR         equ	16209	;# 
  4619   003F52                     CWG1CLK         equ	16210	;# 
  4620   003F52                     CWG1CLKCON      equ	16210	;# 
  4621   003F53                     CWG1ISM         equ	16211	;# 
  4622   003F53                     CWG1DAT         equ	16211	;# 
  4623   003F54                     CWG1DBR         equ	16212	;# 
  4624   003F55                     CWG1DBF         equ	16213	;# 
  4625   003F56                     CWG1CON0        equ	16214	;# 
  4626   003F57                     CWG1CON1        equ	16215	;# 
  4627   003F58                     CWG1AS0         equ	16216	;# 
  4628   003F59                     CWG1AS1         equ	16217	;# 
  4629   003F5A                     CWG1STR         equ	16218	;# 
  4630   003F5E                     CCPTMRS0        equ	16222	;# 
  4631   003F5F                     CCPTMRS1        equ	16223	;# 
  4632   003F60                     PWM8DC          equ	16224	;# 
  4633   003F60                     PWM8DCL         equ	16224	;# 
  4634   003F61                     PWM8DCH         equ	16225	;# 
  4635   003F62                     PWM8CON         equ	16226	;# 
  4636   003F64                     PWM7DC          equ	16228	;# 
  4637   003F64                     PWM7DCL         equ	16228	;# 
  4638   003F65                     PWM7DCH         equ	16229	;# 
  4639   003F66                     PWM7CON         equ	16230	;# 
  4640   003F68                     PWM6DC          equ	16232	;# 
  4641   003F68                     PWM6DCL         equ	16232	;# 
  4642   003F69                     PWM6DCH         equ	16233	;# 
  4643   003F6A                     PWM6CON         equ	16234	;# 
  4644   003F6C                     PWM5DC          equ	16236	;# 
  4645   003F6C                     PWM5DCL         equ	16236	;# 
  4646   003F6D                     PWM5DCH         equ	16237	;# 
  4647   003F6E                     PWM5CON         equ	16238	;# 
  4648   003F70                     CCPR4           equ	16240	;# 
  4649   003F70                     CCPR4L          equ	16240	;# 
  4650   003F71                     CCPR4H          equ	16241	;# 
  4651   003F72                     CCP4CON         equ	16242	;# 
  4652   003F73                     CCP4CAP         equ	16243	;# 
  4653   003F74                     CCPR3           equ	16244	;# 
  4654   003F74                     CCPR3L          equ	16244	;# 
  4655   003F75                     CCPR3H          equ	16245	;# 
  4656   003F76                     CCP3CON         equ	16246	;# 
  4657   003F77                     CCP3CAP         equ	16247	;# 
  4658   003F78                     CCPR2           equ	16248	;# 
  4659   003F78                     CCPR2L          equ	16248	;# 
  4660   003F79                     CCPR2H          equ	16249	;# 
  4661   003F7A                     CCP2CON         equ	16250	;# 
  4662   003F7B                     CCP2CAP         equ	16251	;# 
  4663   003F7C                     CCPR1           equ	16252	;# 
  4664   003F7C                     CCPR1L          equ	16252	;# 
  4665   003F7D                     CCPR1H          equ	16253	;# 
  4666   003F7E                     CCP1CON         equ	16254	;# 
  4667   003F7F                     CCP1CAP         equ	16255	;# 
  4668   003F92                     T6TMR           equ	16274	;# 
  4669   003F92                     TMR6            equ	16274	;# 
  4670   003F93                     T6PR            equ	16275	;# 
  4671   003F93                     PR6             equ	16275	;# 
  4672   003F94                     T6CON           equ	16276	;# 
  4673   003F95                     T6HLT           equ	16277	;# 
  4674   003F96                     T6CLKCON        equ	16278	;# 
  4675   003F96                     T6CLK           equ	16278	;# 
  4676   003F97                     T6RST           equ	16279	;# 
  4677   003F98                     TMR5            equ	16280	;# 
  4678   003F98                     TMR5L           equ	16280	;# 
  4679   003F99                     TMR5H           equ	16281	;# 
  4680   003F9A                     T5CON           equ	16282	;# 
  4681   003F9A                     TMR5CON         equ	16282	;# 
  4682   003F9B                     T5GCON          equ	16283	;# 
  4683   003F9B                     TMR5GCON        equ	16283	;# 
  4684   003F9C                     T5GATE          equ	16284	;# 
  4685   003F9C                     TMR5GATE        equ	16284	;# 
  4686   003F9D                     T5CLK           equ	16285	;# 
  4687   003F9D                     TMR5CLK         equ	16285	;# 
  4688   003F9D                     PR5             equ	16285	;# 
  4689   003F9E                     T4TMR           equ	16286	;# 
  4690   003F9E                     TMR4            equ	16286	;# 
  4691   003F9F                     T4PR            equ	16287	;# 
  4692   003F9F                     PR4             equ	16287	;# 
  4693   003FA0                     T4CON           equ	16288	;# 
  4694   003FA1                     T4HLT           equ	16289	;# 
  4695   003FA2                     T4CLKCON        equ	16290	;# 
  4696   003FA2                     T4CLK           equ	16290	;# 
  4697   003FA3                     T4RST           equ	16291	;# 
  4698   003FA4                     TMR3            equ	16292	;# 
  4699   003FA4                     TMR3L           equ	16292	;# 
  4700   003FA5                     TMR3H           equ	16293	;# 
  4701   003FA6                     T3CON           equ	16294	;# 
  4702   003FA6                     TMR3CON         equ	16294	;# 
  4703   003FA7                     T3GCON          equ	16295	;# 
  4704   003FA7                     TMR3GCON        equ	16295	;# 
  4705   003FA8                     T3GATE          equ	16296	;# 
  4706   003FA8                     TMR3GATE        equ	16296	;# 
  4707   003FA9                     T3CLK           equ	16297	;# 
  4708   003FA9                     TMR3CLK         equ	16297	;# 
  4709   003FA9                     PR3             equ	16297	;# 
  4710   003FAA                     T2TMR           equ	16298	;# 
  4711   003FAA                     TMR2            equ	16298	;# 
  4712   003FAB                     T2PR            equ	16299	;# 
  4713   003FAB                     PR2             equ	16299	;# 
  4714   003FAC                     T2CON           equ	16300	;# 
  4715   003FAD                     T2HLT           equ	16301	;# 
  4716   003FAE                     T2CLKCON        equ	16302	;# 
  4717   003FAE                     T2CLK           equ	16302	;# 
  4718   003FAF                     T2RST           equ	16303	;# 
  4719   003FB0                     TMR1            equ	16304	;# 
  4720   003FB0                     TMR1L           equ	16304	;# 
  4721   003FB1                     TMR1H           equ	16305	;# 
  4722   003FB2                     T1CON           equ	16306	;# 
  4723   003FB2                     TMR1CON         equ	16306	;# 
  4724   003FB3                     T1GCON          equ	16307	;# 
  4725   003FB3                     TMR1GCON        equ	16307	;# 
  4726   003FB4                     T1GATE          equ	16308	;# 
  4727   003FB4                     TMR1GATE        equ	16308	;# 
  4728   003FB5                     T1CLK           equ	16309	;# 
  4729   003FB5                     TMR1CLK         equ	16309	;# 
  4730   003FB5                     PR1             equ	16309	;# 
  4731   003FB6                     TMR0L           equ	16310	;# 
  4732   003FB6                     TMR0            equ	16310	;# 
  4733   003FB7                     TMR0H           equ	16311	;# 
  4734   003FB7                     PR0             equ	16311	;# 
  4735   003FB8                     T0CON0          equ	16312	;# 
  4736   003FB9                     T0CON1          equ	16313	;# 
  4737   003FBA                     LATA            equ	16314	;# 
  4738   003FBB                     LATB            equ	16315	;# 
  4739   003FBC                     LATC            equ	16316	;# 
  4740   003FBD                     LATD            equ	16317	;# 
  4741   003FBE                     LATE            equ	16318	;# 
  4742   003FBF                     LATF            equ	16319	;# 
  4743   003FC2                     TRISA           equ	16322	;# 
  4744   003FC3                     TRISB           equ	16323	;# 
  4745   003FC4                     TRISC           equ	16324	;# 
  4746   003FC5                     TRISD           equ	16325	;# 
  4747   003FC6                     TRISE           equ	16326	;# 
  4748   003FC7                     TRISF           equ	16327	;# 
  4749   003FCA                     PORTA           equ	16330	;# 
  4750   003FCB                     PORTB           equ	16331	;# 
  4751   003FCC                     PORTC           equ	16332	;# 
  4752   003FCD                     PORTD           equ	16333	;# 
  4753   003FCE                     PORTE           equ	16334	;# 
  4754   003FCF                     PORTF           equ	16335	;# 
  4755   003FD2                     INTCON0         equ	16338	;# 
  4756   003FD3                     INTCON1         equ	16339	;# 
  4757   003FD4                     IVTLOCK         equ	16340	;# 
  4758   003FD5                     IVTBASE         equ	16341	;# 
  4759   003FD5                     IVTBASEL        equ	16341	;# 
  4760   003FD6                     IVTBASEH        equ	16342	;# 
  4761   003FD7                     IVTBASEU        equ	16343	;# 
  4762   003FD8                     STATUS          equ	16344	;# 
  4763   003FD9                     FSR2            equ	16345	;# 
  4764   003FD9                     FSR2L           equ	16345	;# 
  4765   003FDA                     FSR2H           equ	16346	;# 
  4766   003FDB                     PLUSW2          equ	16347	;# 
  4767   003FDC                     PREINC2         equ	16348	;# 
  4768   003FDD                     POSTDEC2        equ	16349	;# 
  4769   003FDE                     POSTINC2        equ	16350	;# 
  4770   003FDF                     INDF2           equ	16351	;# 
  4771   003FE0                     BSR             equ	16352	;# 
  4772   003FE1                     FSR1            equ	16353	;# 
  4773   003FE1                     FSR1L           equ	16353	;# 
  4774   003FE2                     FSR1H           equ	16354	;# 
  4775   003FE3                     PLUSW1          equ	16355	;# 
  4776   003FE4                     PREINC1         equ	16356	;# 
  4777   003FE5                     POSTDEC1        equ	16357	;# 
  4778   003FE6                     POSTINC1        equ	16358	;# 
  4779   003FE7                     INDF1           equ	16359	;# 
  4780   003FE8                     WREG            equ	16360	;# 
  4781   003FE9                     FSR0            equ	16361	;# 
  4782   003FE9                     FSR0L           equ	16361	;# 
  4783   003FEA                     FSR0H           equ	16362	;# 
  4784   003FEB                     PLUSW0          equ	16363	;# 
  4785   003FEC                     PREINC0         equ	16364	;# 
  4786   003FED                     POSTDEC0        equ	16365	;# 
  4787   003FEE                     POSTINC0        equ	16366	;# 
  4788   003FEF                     INDF0           equ	16367	;# 
  4789   003FF0                     PCON0           equ	16368	;# 
  4790   003FF1                     PCON1           equ	16369	;# 
  4791   003FF3                     PROD            equ	16371	;# 
  4792   003FF3                     PRODL           equ	16371	;# 
  4793   003FF4                     PRODH           equ	16372	;# 
  4794   003FF5                     TABLAT          equ	16373	;# 
  4795   003FF6                     TBLPTR          equ	16374	;# 
  4796   003FF6                     TBLPTRL         equ	16374	;# 
  4797   003FF7                     TBLPTRH         equ	16375	;# 
  4798   003FF8                     TBLPTRU         equ	16376	;# 
  4799   003FF9                     PCLAT           equ	16377	;# 
  4800   003FF9                     PCL             equ	16377	;# 
  4801   003FFA                     PCLATH          equ	16378	;# 
  4802   003FFB                     PCLATU          equ	16379	;# 
  4803   003FFC                     STKPTR          equ	16380	;# 
  4804   003FFD                     TOS             equ	16381	;# 
  4805   003FFD                     TOSL            equ	16381	;# 
  4806   003FFE                     TOSH            equ	16382	;# 
  4807   003FFF                     TOSU            equ	16383	;# 
  4808   003880                     STATUS_CSHAD    equ	14464	;# 
  4809   003881                     WREG_CSHAD      equ	14465	;# 
  4810   003882                     BSR_CSHAD       equ	14466	;# 
  4811   003883                     SHADCON         equ	14467	;# 
  4812   003884                     STATUS_SHAD     equ	14468	;# 
  4813   003885                     WREG_SHAD       equ	14469	;# 
  4814   003886                     BSR_SHAD        equ	14470	;# 
  4815   003887                     PCLATH_SHAD     equ	14471	;# 
  4816   003888                     PCLATU_SHAD     equ	14472	;# 
  4817   003889                     FSR0SH          equ	14473	;# 
  4818   003889                     FSR0L_SHAD      equ	14473	;# 
  4819   00388A                     FSR0H_SHAD      equ	14474	;# 
  4820   00388B                     FSR1SH          equ	14475	;# 
  4821   00388B                     FSR1L_SHAD      equ	14475	;# 
  4822   00388C                     FSR1H_SHAD      equ	14476	;# 
  4823   00388D                     FSR2SH          equ	14477	;# 
  4824   00388D                     FSR2L_SHAD      equ	14477	;# 
  4825   00388E                     FSR2H_SHAD      equ	14478	;# 
  4826   00388F                     PRODSH          equ	14479	;# 
  4827   00388F                     PRODL_SHAD      equ	14479	;# 
  4828   003890                     PRODH_SHAD      equ	14480	;# 
  4829   00389D                     IVTADL          equ	14493	;# 
  4830   00389E                     IVTADH          equ	14494	;# 
  4831   00389F                     IVTADU          equ	14495	;# 
  4832   00395B                     WDTCON0         equ	14683	;# 
  4833   00395C                     WDTCON1         equ	14684	;# 
  4834   00395D                     WDTPSL          equ	14685	;# 
  4835   00395E                     WDTPSH          equ	14686	;# 
  4836   00395F                     WDTTMR          equ	14687	;# 
  4837   003960                     CRCDATA         equ	14688	;# 
  4838   003960                     CRCDATL         equ	14688	;# 
  4839   003961                     CRCDATH         equ	14689	;# 
  4840   003962                     CRCACC          equ	14690	;# 
  4841   003962                     CRCACCL         equ	14690	;# 
  4842   003963                     CRCACCH         equ	14691	;# 
  4843   003964                     CRCSHFT         equ	14692	;# 
  4844   003964                     CRCSHIFTL       equ	14692	;# 
  4845   003965                     CRCSHIFTH       equ	14693	;# 
  4846   003966                     CRCXOR          equ	14694	;# 
  4847   003966                     CRCXORL         equ	14694	;# 
  4848   003967                     CRCXORH         equ	14695	;# 
  4849   003968                     CRCCON0         equ	14696	;# 
  4850   003969                     CRCCON1         equ	14697	;# 
  4851   003976                     SCANLADR        equ	14710	;# 
  4852   003976                     SCANLADRL       equ	14710	;# 
  4853   003977                     SCANLADRH       equ	14711	;# 
  4854   003978                     SCANLADRU       equ	14712	;# 
  4855   003979                     SCANHADR        equ	14713	;# 
  4856   003979                     SCANHADRL       equ	14713	;# 
  4857   00397A                     SCANHADRH       equ	14714	;# 
  4858   00397B                     SCANHADRU       equ	14715	;# 
  4859   00397C                     SCANCON0        equ	14716	;# 
  4860   00397D                     SCANTRIG        equ	14717	;# 
  4861   003980                     IPR0            equ	14720	;# 
  4862   003981                     IPR1            equ	14721	;# 
  4863   003982                     IPR2            equ	14722	;# 
  4864   003983                     IPR3            equ	14723	;# 
  4865   003984                     IPR4            equ	14724	;# 
  4866   003985                     IPR5            equ	14725	;# 
  4867   003986                     IPR6            equ	14726	;# 
  4868   003987                     IPR7            equ	14727	;# 
  4869   003988                     IPR8            equ	14728	;# 
  4870   003989                     IPR9            equ	14729	;# 
  4871   00398A                     IPR10           equ	14730	;# 
  4872   003990                     PIE0            equ	14736	;# 
  4873   003991                     PIE1            equ	14737	;# 
  4874   003992                     PIE2            equ	14738	;# 
  4875   003993                     PIE3            equ	14739	;# 
  4876   003994                     PIE4            equ	14740	;# 
  4877   003995                     PIE5            equ	14741	;# 
  4878   003996                     PIE6            equ	14742	;# 
  4879   003997                     PIE7            equ	14743	;# 
  4880   003998                     PIE8            equ	14744	;# 
  4881   003999                     PIE9            equ	14745	;# 
  4882   00399A                     PIE10           equ	14746	;# 
  4883   0039A0                     PIR0            equ	14752	;# 
  4884   0039A1                     PIR1            equ	14753	;# 
  4885   0039A2                     PIR2            equ	14754	;# 
  4886   0039A3                     PIR3            equ	14755	;# 
  4887   0039A4                     PIR4            equ	14756	;# 
  4888   0039A5                     PIR5            equ	14757	;# 
  4889   0039A6                     PIR6            equ	14758	;# 
  4890   0039A7                     PIR7            equ	14759	;# 
  4891   0039A8                     PIR8            equ	14760	;# 
  4892   0039A9                     PIR9            equ	14761	;# 
  4893   0039AA                     PIR10           equ	14762	;# 
  4894   0039C0                     PMD0            equ	14784	;# 
  4895   0039C1                     PMD1            equ	14785	;# 
  4896   0039C2                     PMD2            equ	14786	;# 
  4897   0039C3                     PMD3            equ	14787	;# 
  4898   0039C4                     PMD4            equ	14788	;# 
  4899   0039C5                     PMD5            equ	14789	;# 
  4900   0039C6                     PMD6            equ	14790	;# 
  4901   0039C7                     PMD7            equ	14791	;# 
  4902   0039D0                     BORCON          equ	14800	;# 
  4903   0039D1                     VREGCON         equ	14801	;# 
  4904   0039D8                     CPUDOZE         equ	14808	;# 
  4905   0039D9                     OSCCON1         equ	14809	;# 
  4906   0039DA                     OSCCON2         equ	14810	;# 
  4907   0039DB                     OSCCON3         equ	14811	;# 
  4908   0039DC                     OSCSTAT         equ	14812	;# 
  4909   0039DC                     OSCSTAT1        equ	14812	;# 
  4910   0039DD                     OSCEN           equ	14813	;# 
  4911   0039DE                     OSCTUNE         equ	14814	;# 
  4912   0039DF                     OSCFRQ          equ	14815	;# 
  4913   0039E0                     NVMADRL         equ	14816	;# 
  4914   0039E1                     NVMADRH         equ	14817	;# 
  4915   0039E3                     NVMDAT          equ	14819	;# 
  4916   0039E5                     NVMCON1         equ	14821	;# 
  4917   0039E6                     NVMCON2         equ	14822	;# 
  4918   0039EF                     PRLOCK          equ	14831	;# 
  4919   0039F1                     ISRPR           equ	14833	;# 
  4920   0039F2                     MAINPR          equ	14834	;# 
  4921   0039F3                     DMA1PR          equ	14835	;# 
  4922   0039F4                     DMA2PR          equ	14836	;# 
  4923   0039F7                     SCANPR          equ	14839	;# 
  4924   003A00                     RA0PPS          equ	14848	;# 
  4925   003A01                     RA1PPS          equ	14849	;# 
  4926   003A02                     RA2PPS          equ	14850	;# 
  4927   003A03                     RA3PPS          equ	14851	;# 
  4928   003A04                     RA4PPS          equ	14852	;# 
  4929   003A05                     RA5PPS          equ	14853	;# 
  4930   003A06                     RA6PPS          equ	14854	;# 
  4931   003A07                     RA7PPS          equ	14855	;# 
  4932   003A08                     RB0PPS          equ	14856	;# 
  4933   003A09                     RB1PPS          equ	14857	;# 
  4934   003A0A                     RB2PPS          equ	14858	;# 
  4935   003A0B                     RB3PPS          equ	14859	;# 
  4936   003A0C                     RB4PPS          equ	14860	;# 
  4937   003A0D                     RB5PPS          equ	14861	;# 
  4938   003A0E                     RB6PPS          equ	14862	;# 
  4939   003A0F                     RB7PPS          equ	14863	;# 
  4940   003A10                     RC0PPS          equ	14864	;# 
  4941   003A11                     RC1PPS          equ	14865	;# 
  4942   003A12                     RC2PPS          equ	14866	;# 
  4943   003A13                     RC3PPS          equ	14867	;# 
  4944   003A14                     RC4PPS          equ	14868	;# 
  4945   003A15                     RC5PPS          equ	14869	;# 
  4946   003A16                     RC6PPS          equ	14870	;# 
  4947   003A17                     RC7PPS          equ	14871	;# 
  4948   003A18                     RD0PPS          equ	14872	;# 
  4949   003A19                     RD1PPS          equ	14873	;# 
  4950   003A1A                     RD2PPS          equ	14874	;# 
  4951   003A1B                     RD3PPS          equ	14875	;# 
  4952   003A1C                     RD4PPS          equ	14876	;# 
  4953   003A1D                     RD5PPS          equ	14877	;# 
  4954   003A1E                     RD6PPS          equ	14878	;# 
  4955   003A1F                     RD7PPS          equ	14879	;# 
  4956   003A20                     RE0PPS          equ	14880	;# 
  4957   003A21                     RE1PPS          equ	14881	;# 
  4958   003A22                     RE2PPS          equ	14882	;# 
  4959   003A28                     RF0PPS          equ	14888	;# 
  4960   003A29                     RF1PPS          equ	14889	;# 
  4961   003A2A                     RF2PPS          equ	14890	;# 
  4962   003A2B                     RF3PPS          equ	14891	;# 
  4963   003A2C                     RF4PPS          equ	14892	;# 
  4964   003A2D                     RF5PPS          equ	14893	;# 
  4965   003A2E                     RF6PPS          equ	14894	;# 
  4966   003A2F                     RF7PPS          equ	14895	;# 
  4967   003A40                     ANSELA          equ	14912	;# 
  4968   003A41                     WPUA            equ	14913	;# 
  4969   003A42                     ODCONA          equ	14914	;# 
  4970   003A43                     SLRCONA         equ	14915	;# 
  4971   003A44                     INLVLA          equ	14916	;# 
  4972   003A45                     IOCAP           equ	14917	;# 
  4973   003A46                     IOCAN           equ	14918	;# 
  4974   003A47                     IOCAF           equ	14919	;# 
  4975   003A50                     ANSELB          equ	14928	;# 
  4976   003A51                     WPUB            equ	14929	;# 
  4977   003A52                     ODCONB          equ	14930	;# 
  4978   003A53                     SLRCONB         equ	14931	;# 
  4979   003A54                     INLVLB          equ	14932	;# 
  4980   003A55                     IOCBP           equ	14933	;# 
  4981   003A56                     IOCBN           equ	14934	;# 
  4982   003A57                     IOCBF           equ	14935	;# 
  4983   003A5A                     RB1I2C          equ	14938	;# 
  4984   003A5B                     RB2I2C          equ	14939	;# 
  4985   003A60                     ANSELC          equ	14944	;# 
  4986   003A61                     WPUC            equ	14945	;# 
  4987   003A62                     ODCONC          equ	14946	;# 
  4988   003A63                     SLRCONC         equ	14947	;# 
  4989   003A64                     INLVLC          equ	14948	;# 
  4990   003A65                     IOCCP           equ	14949	;# 
  4991   003A66                     IOCCN           equ	14950	;# 
  4992   003A67                     IOCCF           equ	14951	;# 
  4993   003A6A                     RC3I2C          equ	14954	;# 
  4994   003A6B                     RC4I2C          equ	14955	;# 
  4995   003A70                     ANSELD          equ	14960	;# 
  4996   003A71                     WPUD            equ	14961	;# 
  4997   003A72                     ODCOND          equ	14962	;# 
  4998   003A73                     SLRCOND         equ	14963	;# 
  4999   003A74                     INLVLD          equ	14964	;# 
  5000   003A7A                     RD0I2C          equ	14970	;# 
  5001   003A7B                     RD1I2C          equ	14971	;# 
  5002   003A80                     ANSELE          equ	14976	;# 
  5003   003A81                     WPUE            equ	14977	;# 
  5004   003A82                     ODCONE          equ	14978	;# 
  5005   003A83                     SLRCONE         equ	14979	;# 
  5006   003A84                     INLVLE          equ	14980	;# 
  5007   003A85                     IOCEP           equ	14981	;# 
  5008   003A86                     IOCEN           equ	14982	;# 
  5009   003A87                     IOCEF           equ	14983	;# 
  5010   003A90                     ANSELF          equ	14992	;# 
  5011   003A91                     WPUF            equ	14993	;# 
  5012   003A92                     ODCONF          equ	14994	;# 
  5013   003A93                     SLRCONF         equ	14995	;# 
  5014   003A94                     INLVLF          equ	14996	;# 
  5015   003ABF                     PPSLOCK         equ	15039	;# 
  5016   003AC0                     INT0PPS         equ	15040	;# 
  5017   003AC1                     INT1PPS         equ	15041	;# 
  5018   003AC2                     INT2PPS         equ	15042	;# 
  5019   003AC3                     T0CKIPPS        equ	15043	;# 
  5020   003AC4                     T1CKIPPS        equ	15044	;# 
  5021   003AC5                     T1GPPS          equ	15045	;# 
  5022   003AC6                     T3CKIPPS        equ	15046	;# 
  5023   003AC7                     T3GPPS          equ	15047	;# 
  5024   003AC8                     T5CKIPPS        equ	15048	;# 
  5025   003AC9                     T5GPPS          equ	15049	;# 
  5026   003ACA                     T2INPPS         equ	15050	;# 
  5027   003ACB                     T4INPPS         equ	15051	;# 
  5028   003ACC                     T6INPPS         equ	15052	;# 
  5029   003ACD                     CCP1PPS         equ	15053	;# 
  5030   003ACE                     CCP2PPS         equ	15054	;# 
  5031   003ACF                     CCP3PPS         equ	15055	;# 
  5032   003AD0                     CCP4PPS         equ	15056	;# 
  5033   003AD1                     SMT1WINPPS      equ	15057	;# 
  5034   003AD2                     SMT1SIGPPS      equ	15058	;# 
  5035   003AD3                     CWG1INPPS       equ	15059	;# 
  5036   003AD4                     CWG2INPPS       equ	15060	;# 
  5037   003AD5                     CWG3INPPS       equ	15061	;# 
  5038   003AD6                     MD1CARLPPS      equ	15062	;# 
  5039   003AD7                     MD1CARHPPS      equ	15063	;# 
  5040   003AD8                     MD1SRCPPS       equ	15064	;# 
  5041   003AD9                     CLCIN0PPS       equ	15065	;# 
  5042   003ADA                     CLCIN1PPS       equ	15066	;# 
  5043   003ADB                     CLCIN2PPS       equ	15067	;# 
  5044   003ADC                     CLCIN3PPS       equ	15068	;# 
  5045   003ADD                     ADACTPPS        equ	15069	;# 
  5046   003ADE                     SPI1SCKPPS      equ	15070	;# 
  5047   003ADF                     SPI1SDIPPS      equ	15071	;# 
  5048   003AE0                     SPI1SSPPS       equ	15072	;# 
  5049   003AE1                     I2C1SCLPPS      equ	15073	;# 
  5050   003AE2                     I2C1SDAPPS      equ	15074	;# 
  5051   003AE3                     I2C2SCLPPS      equ	15075	;# 
  5052   003AE4                     I2C2SDAPPS      equ	15076	;# 
  5053   003AE5                     U1RXPPS         equ	15077	;# 
  5054   003AE6                     U1CTSPPS        equ	15078	;# 
  5055   003AE8                     U2RXPPS         equ	15080	;# 
  5056   003AE9                     U2CTSPPS        equ	15081	;# 
  5057   003BC9                     DMA2BUF         equ	15305	;# 
  5058   003BCA                     DMA2DCNT        equ	15306	;# 
  5059   003BCA                     DMA2DCNTL       equ	15306	;# 
  5060   003BCB                     DMA2DCNTH       equ	15307	;# 
  5061   003BCC                     DMA2DPTR        equ	15308	;# 
  5062   003BCC                     DMA2DPTRL       equ	15308	;# 
  5063   003BCD                     DMA2DPTRH       equ	15309	;# 
  5064   003BCE                     DMA2DSZ         equ	15310	;# 
  5065   003BCE                     DMA2DSZL        equ	15310	;# 
  5066   003BCF                     DMA2DSZH        equ	15311	;# 
  5067   003BD0                     DMA2DSA         equ	15312	;# 
  5068   003BD0                     DMA2DSAL        equ	15312	;# 
  5069   003BD1                     DMA2DSAH        equ	15313	;# 
  5070   003BD2                     DMA2SCNT        equ	15314	;# 
  5071   003BD2                     DMA2SCNTL       equ	15314	;# 
  5072   003BD3                     DMA2SCNTH       equ	15315	;# 
  5073   003BD4                     DMA2SPTR        equ	15316	;# 
  5074   003BD4                     DMA2SPTRL       equ	15316	;# 
  5075   003BD5                     DMA2SPTRH       equ	15317	;# 
  5076   003BD6                     DMA2SPTRU       equ	15318	;# 
  5077   003BD7                     DMA2SSZ         equ	15319	;# 
  5078   003BD7                     DMA2SSZL        equ	15319	;# 
  5079   003BD8                     DMA2SSZH        equ	15320	;# 
  5080   003BD9                     DMA2SSA         equ	15321	;# 
  5081   003BD9                     DMA2SSAL        equ	15321	;# 
  5082   003BDA                     DMA2SSAH        equ	15322	;# 
  5083   003BDB                     DMA2SSAU        equ	15323	;# 
  5084   003BDC                     DMA2CON0        equ	15324	;# 
  5085   003BDD                     DMA2CON1        equ	15325	;# 
  5086   003BDE                     DMA2AIRQ        equ	15326	;# 
  5087   003BDF                     DMA2SIRQ        equ	15327	;# 
  5088   003BE9                     DMA1BUF         equ	15337	;# 
  5089   003BEA                     DMA1DCNT        equ	15338	;# 
  5090   003BEA                     DMA1DCNTL       equ	15338	;# 
  5091   003BEB                     DMA1DCNTH       equ	15339	;# 
  5092   003BEC                     DMA1DPTR        equ	15340	;# 
  5093   003BEC                     DMA1DPTRL       equ	15340	;# 
  5094   003BED                     DMA1DPTRH       equ	15341	;# 
  5095   003BEE                     DMA1DSZ         equ	15342	;# 
  5096   003BEE                     DMA1DSZL        equ	15342	;# 
  5097   003BEF                     DMA1DSZH        equ	15343	;# 
  5098   003BF0                     DMA1DSA         equ	15344	;# 
  5099   003BF0                     DMA1DSAL        equ	15344	;# 
  5100   003BF1                     DMA1DSAH        equ	15345	;# 
  5101   003BF2                     DMA1SCNT        equ	15346	;# 
  5102   003BF2                     DMA1SCNTL       equ	15346	;# 
  5103   003BF3                     DMA1SCNTH       equ	15347	;# 
  5104   003BF4                     DMA1SPTR        equ	15348	;# 
  5105   003BF4                     DMA1SPTRL       equ	15348	;# 
  5106   003BF5                     DMA1SPTRH       equ	15349	;# 
  5107   003BF6                     DMA1SPTRU       equ	15350	;# 
  5108   003BF7                     DMA1SSZ         equ	15351	;# 
  5109   003BF7                     DMA1SSZL        equ	15351	;# 
  5110   003BF8                     DMA1SSZH        equ	15352	;# 
  5111   003BF9                     DMA1SSA         equ	15353	;# 
  5112   003BF9                     DMA1SSAL        equ	15353	;# 
  5113   003BFA                     DMA1SSAH        equ	15354	;# 
  5114   003BFB                     DMA1SSAU        equ	15355	;# 
  5115   003BFC                     DMA1CON0        equ	15356	;# 
  5116   003BFD                     DMA1CON1        equ	15357	;# 
  5117   003BFE                     DMA1AIRQ        equ	15358	;# 
  5118   003BFF                     DMA1SIRQ        equ	15359	;# 
  5119   003C56                     CLC4CON         equ	15446	;# 
  5120   003C57                     CLC4POL         equ	15447	;# 
  5121   003C58                     CLC4SEL0        equ	15448	;# 
  5122   003C59                     CLC4SEL1        equ	15449	;# 
  5123   003C5A                     CLC4SEL2        equ	15450	;# 
  5124   003C5B                     CLC4SEL3        equ	15451	;# 
  5125   003C5C                     CLC4GLS0        equ	15452	;# 
  5126   003C5D                     CLC4GLS1        equ	15453	;# 
  5127   003C5E                     CLC4GLS2        equ	15454	;# 
  5128   003C5F                     CLC4GLS3        equ	15455	;# 
  5129   003C60                     CLC3CON         equ	15456	;# 
  5130   003C61                     CLC3POL         equ	15457	;# 
  5131   003C62                     CLC3SEL0        equ	15458	;# 
  5132   003C63                     CLC3SEL1        equ	15459	;# 
  5133   003C64                     CLC3SEL2        equ	15460	;# 
  5134   003C65                     CLC3SEL3        equ	15461	;# 
  5135   003C66                     CLC3GLS0        equ	15462	;# 
  5136   003C67                     CLC3GLS1        equ	15463	;# 
  5137   003C68                     CLC3GLS2        equ	15464	;# 
  5138   003C69                     CLC3GLS3        equ	15465	;# 
  5139   003C6A                     CLC2CON         equ	15466	;# 
  5140   003C6B                     CLC2POL         equ	15467	;# 
  5141   003C6C                     CLC2SEL0        equ	15468	;# 
  5142   003C6D                     CLC2SEL1        equ	15469	;# 
  5143   003C6E                     CLC2SEL2        equ	15470	;# 
  5144   003C6F                     CLC2SEL3        equ	15471	;# 
  5145   003C70                     CLC2GLS0        equ	15472	;# 
  5146   003C71                     CLC2GLS1        equ	15473	;# 
  5147   003C72                     CLC2GLS2        equ	15474	;# 
  5148   003C73                     CLC2GLS3        equ	15475	;# 
  5149   003C74                     CLC1CON         equ	15476	;# 
  5150   003C75                     CLC1POL         equ	15477	;# 
  5151   003C76                     CLC1SEL0        equ	15478	;# 
  5152   003C77                     CLC1SEL1        equ	15479	;# 
  5153   003C78                     CLC1SEL2        equ	15480	;# 
  5154   003C79                     CLC1SEL3        equ	15481	;# 
  5155   003C7A                     CLC1GLS0        equ	15482	;# 
  5156   003C7B                     CLC1GLS1        equ	15483	;# 
  5157   003C7C                     CLC1GLS2        equ	15484	;# 
  5158   003C7D                     CLC1GLS3        equ	15485	;# 
  5159   003C7E                     CLCDATA0        equ	15486	;# 
  5160   003CE5                     CLKRCON         equ	15589	;# 
  5161   003CE6                     CLKRCLK         equ	15590	;# 
  5162   003CFA                     MD1CON0         equ	15610	;# 
  5163   003CFB                     MD1CON1         equ	15611	;# 
  5164   003CFC                     MD1SRC          equ	15612	;# 
  5165   003CFD                     MD1CARL         equ	15613	;# 
  5166   003CFE                     MD1CARH         equ	15614	;# 
  5167   003D10                     SPI1RXB         equ	15632	;# 
  5168   003D11                     SPI1TXB         equ	15633	;# 
  5169   003D12                     SPI1TCNT        equ	15634	;# 
  5170   003D12                     SPI1TCNTL       equ	15634	;# 
  5171   003D13                     SPI1TCNTH       equ	15635	;# 
  5172   003D14                     SPI1CON0        equ	15636	;# 
  5173   003D15                     SPI1CON1        equ	15637	;# 
  5174   003D16                     SPI1CON2        equ	15638	;# 
  5175   003D17                     SPI1STATUS      equ	15639	;# 
  5176   003D18                     SPI1TWIDTH      equ	15640	;# 
  5177   003D19                     SPI1BAUD        equ	15641	;# 
  5178   003D1A                     SPI1INTF        equ	15642	;# 
  5179   003D1B                     SPI1INTE        equ	15643	;# 
  5180   003D1C                     SPI1CLK         equ	15644	;# 
  5181   003D54                     I2C2RXB         equ	15700	;# 
  5182   003D55                     I2C2TXB         equ	15701	;# 
  5183   003D56                     I2C2CNT         equ	15702	;# 
  5184   003D57                     I2C2ADB0        equ	15703	;# 
  5185   003D58                     I2C2ADB1        equ	15704	;# 
  5186   003D59                     I2C2ADR0        equ	15705	;# 
  5187   003D5A                     I2C2ADR1        equ	15706	;# 
  5188   003D5B                     I2C2ADR2        equ	15707	;# 
  5189   003D5C                     I2C2ADR3        equ	15708	;# 
  5190   003D5D                     I2C2CON0        equ	15709	;# 
  5191   003D5E                     I2C2CON1        equ	15710	;# 
  5192   003D5F                     I2C2CON2        equ	15711	;# 
  5193   003D60                     I2C2ERR         equ	15712	;# 
  5194   003D61                     I2C2STAT0       equ	15713	;# 
  5195   003D62                     I2C2STAT1       equ	15714	;# 
  5196   003D63                     I2C2PIR         equ	15715	;# 
  5197   003D64                     I2C2PIE         equ	15716	;# 
  5198   003D65                     I2C2CLK         equ	15717	;# 
  5199   003D66                     I2C2BTO         equ	15718	;# 
  5200   003D6A                     I2C1RXB         equ	15722	;# 
  5201   003D6B                     I2C1TXB         equ	15723	;# 
  5202   003D6C                     I2C1CNT         equ	15724	;# 
  5203   003D6D                     I2C1ADB0        equ	15725	;# 
  5204   003D6E                     I2C1ADB1        equ	15726	;# 
  5205   003D6F                     I2C1ADR0        equ	15727	;# 
  5206   003D70                     I2C1ADR1        equ	15728	;# 
  5207   003D71                     I2C1ADR2        equ	15729	;# 
  5208   003D72                     I2C1ADR3        equ	15730	;# 
  5209   003D73                     I2C1CON0        equ	15731	;# 
  5210   003D74                     I2C1CON1        equ	15732	;# 
  5211   003D75                     I2C1CON2        equ	15733	;# 
  5212   003D76                     I2C1ERR         equ	15734	;# 
  5213   003D77                     I2C1STAT0       equ	15735	;# 
  5214   003D78                     I2C1STAT1       equ	15736	;# 
  5215   003D79                     I2C1PIR         equ	15737	;# 
  5216   003D7A                     I2C1PIE         equ	15738	;# 
  5217   003D7B                     I2C1CLK         equ	15739	;# 
  5218   003D7C                     I2C1BTO         equ	15740	;# 
  5219   003DD0                     U2RXB           equ	15824	;# 
  5220   003DD0                     U2RXBL          equ	15824	;# 
  5221   003DD2                     U2TXB           equ	15826	;# 
  5222   003DD2                     U2TXBL          equ	15826	;# 
  5223   003DD4                     U2P1            equ	15828	;# 
  5224   003DD4                     U2P1L           equ	15828	;# 
  5225   003DD6                     U2P2            equ	15830	;# 
  5226   003DD6                     U2P2L           equ	15830	;# 
  5227   003DD8                     U2P3            equ	15832	;# 
  5228   003DD8                     U2P3L           equ	15832	;# 
  5229   003DDA                     U2CON0          equ	15834	;# 
  5230   003DDB                     U2CON1          equ	15835	;# 
  5231   003DDC                     U2CON2          equ	15836	;# 
  5232   003DDD                     U2BRG           equ	15837	;# 
  5233   003DDD                     U2BRGL          equ	15837	;# 
  5234   003DDE                     U2BRGH          equ	15838	;# 
  5235   003DDF                     U2FIFO          equ	15839	;# 
  5236   003DE0                     U2UIR           equ	15840	;# 
  5237   003DE1                     U2ERRIR         equ	15841	;# 
  5238   003DE2                     U2ERRIE         equ	15842	;# 
  5239   003DE8                     U1RXB           equ	15848	;# 
  5240   003DE8                     U1RXBL          equ	15848	;# 
  5241   003DE9                     U1RXCHK         equ	15849	;# 
  5242   003DEA                     U1TXB           equ	15850	;# 
  5243   003DEA                     U1TXBL          equ	15850	;# 
  5244   003DEB                     U1TXCHK         equ	15851	;# 
  5245   003DEC                     U1P1            equ	15852	;# 
  5246   003DEC                     U1P1L           equ	15852	;# 
  5247   003DED                     U1P1H           equ	15853	;# 
  5248   003DEE                     U1P2            equ	15854	;# 
  5249   003DEE                     U1P2L           equ	15854	;# 
  5250   003DEF                     U1P2H           equ	15855	;# 
  5251   003DF0                     U1P3            equ	15856	;# 
  5252   003DF0                     U1P3L           equ	15856	;# 
  5253   003DF1                     U1P3H           equ	15857	;# 
  5254   003DF2                     U1CON0          equ	15858	;# 
  5255   003DF3                     U1CON1          equ	15859	;# 
  5256   003DF4                     U1CON2          equ	15860	;# 
  5257   003DF5                     U1BRG           equ	15861	;# 
  5258   003DF5                     U1BRGL          equ	15861	;# 
  5259   003DF6                     U1BRGH          equ	15862	;# 
  5260   003DF7                     U1FIFO          equ	15863	;# 
  5261   003DF8                     U1UIR           equ	15864	;# 
  5262   003DF9                     U1ERRIR         equ	15865	;# 
  5263   003DFA                     U1ERRIE         equ	15866	;# 
  5264   003E9C                     DAC1CON1        equ	16028	;# 
  5265   003E9E                     DAC1CON0        equ	16030	;# 
  5266   003EB8                     CM2CON0         equ	16056	;# 
  5267   003EB9                     CM2CON1         equ	16057	;# 
  5268   003EBA                     CM2NCH          equ	16058	;# 
  5269   003EBB                     CM2PCH          equ	16059	;# 
  5270   003EBC                     CM1CON0         equ	16060	;# 
  5271   003EBD                     CM1CON1         equ	16061	;# 
  5272   003EBE                     CM1NCH          equ	16062	;# 
  5273   003EBF                     CM1PCH          equ	16063	;# 
  5274   003EC0                     CMOUT           equ	16064	;# 
  5275   003EC1                     FVRCON          equ	16065	;# 
  5276   003EC3                     ZCDCON          equ	16067	;# 
  5277   003EC9                     HLVDCON0        equ	16073	;# 
  5278   003ECA                     HLVDCON1        equ	16074	;# 
  5279   003ED7                     ADCP            equ	16087	;# 
  5280   003EDE                     ADLTH           equ	16094	;# 
  5281   003EDE                     ADLTHL          equ	16094	;# 
  5282   003EDF                     ADLTHH          equ	16095	;# 
  5283   003EE0                     ADUTH           equ	16096	;# 
  5284   003EE0                     ADUTHL          equ	16096	;# 
  5285   003EE1                     ADUTHH          equ	16097	;# 
  5286   003EE2                     ADERR           equ	16098	;# 
  5287   003EE2                     ADERRL          equ	16098	;# 
  5288   003EE3                     ADERRH          equ	16099	;# 
  5289   003EE4                     ADSTPT          equ	16100	;# 
  5290   003EE4                     ADSTPTL         equ	16100	;# 
  5291   003EE5                     ADSTPTH         equ	16101	;# 
  5292   003EE6                     ADFLTR          equ	16102	;# 
  5293   003EE6                     ADFLTRL         equ	16102	;# 
  5294   003EE7                     ADFLTRH         equ	16103	;# 
  5295   003EE8                     ADACC           equ	16104	;# 
  5296   003EE8                     ADACCL          equ	16104	;# 
  5297   003EE9                     ADACCH          equ	16105	;# 
  5298   003EEA                     ADACCU          equ	16106	;# 
  5299   003EEB                     ADCNT           equ	16107	;# 
  5300   003EEC                     ADRPT           equ	16108	;# 
  5301   003EED                     ADPREV          equ	16109	;# 
  5302   003EED                     ADPREVL         equ	16109	;# 
  5303   003EEE                     ADPREVH         equ	16110	;# 
  5304   003EEF                     ADRES           equ	16111	;# 
  5305   003EEF                     ADRESL          equ	16111	;# 
  5306   003EF0                     ADRESH          equ	16112	;# 
  5307   003EF1                     ADPCH           equ	16113	;# 
  5308   003EF3                     ADACQ           equ	16115	;# 
  5309   003EF3                     ADACQL          equ	16115	;# 
  5310   003EF4                     ADACQH          equ	16116	;# 
  5311   003EF5                     ADCAP           equ	16117	;# 
  5312   003EF6                     ADPRE           equ	16118	;# 
  5313   003EF6                     ADPREL          equ	16118	;# 
  5314   003EF7                     ADPREH          equ	16119	;# 
  5315   003EF8                     ADCON0          equ	16120	;# 
  5316   003EF9                     ADCON1          equ	16121	;# 
  5317   003EFA                     ADCON2          equ	16122	;# 
  5318   003EFB                     ADCON3          equ	16123	;# 
  5319   003EFC                     ADSTAT          equ	16124	;# 
  5320   003EFD                     ADREF           equ	16125	;# 
  5321   003EFE                     ADACT           equ	16126	;# 
  5322   003EFF                     ADCLK           equ	16127	;# 
  5323   003F12                     SMT1TMR         equ	16146	;# 
  5324   003F12                     SMT1TMRL        equ	16146	;# 
  5325   003F13                     SMT1TMRH        equ	16147	;# 
  5326   003F14                     SMT1TMRU        equ	16148	;# 
  5327   003F15                     SMT1CPR         equ	16149	;# 
  5328   003F15                     SMT1CPRL        equ	16149	;# 
  5329   003F16                     SMT1CPRH        equ	16150	;# 
  5330   003F17                     SMT1CPRU        equ	16151	;# 
  5331   003F18                     SMT1CPW         equ	16152	;# 
  5332   003F18                     SMT1CPWL        equ	16152	;# 
  5333   003F19                     SMT1CPWH        equ	16153	;# 
  5334   003F1A                     SMT1CPWU        equ	16154	;# 
  5335   003F1B                     SMT1PR          equ	16155	;# 
  5336   003F1B                     SMT1PRL         equ	16155	;# 
  5337   003F1C                     SMT1PRH         equ	16156	;# 
  5338   003F1D                     SMT1PRU         equ	16157	;# 
  5339   003F1E                     SMT1CON0        equ	16158	;# 
  5340   003F1F                     SMT1CON1        equ	16159	;# 
  5341   003F20                     SMT1STAT        equ	16160	;# 
  5342   003F21                     SMT1CLK         equ	16161	;# 
  5343   003F22                     SMT1SIG         equ	16162	;# 
  5344   003F23                     SMT1WIN         equ	16163	;# 
  5345   003F38                     NCO1ACC         equ	16184	;# 
  5346   003F38                     NCO1ACCL        equ	16184	;# 
  5347   003F39                     NCO1ACCH        equ	16185	;# 
  5348   003F3A                     NCO1ACCU        equ	16186	;# 
  5349   003F3B                     NCO1INC         equ	16187	;# 
  5350   003F3B                     NCO1INCL        equ	16187	;# 
  5351   003F3C                     NCO1INCH        equ	16188	;# 
  5352   003F3D                     NCO1INCU        equ	16189	;# 
  5353   003F3E                     NCO1CON         equ	16190	;# 
  5354   003F3F                     NCO1CLK         equ	16191	;# 
  5355   003F40                     CWG3CLK         equ	16192	;# 
  5356   003F40                     CWG3CLKCON      equ	16192	;# 
  5357   003F41                     CWG3ISM         equ	16193	;# 
  5358   003F41                     CWG3DAT         equ	16193	;# 
  5359   003F42                     CWG3DBR         equ	16194	;# 
  5360   003F43                     CWG3DBF         equ	16195	;# 
  5361   003F44                     CWG3CON0        equ	16196	;# 
  5362   003F45                     CWG3CON1        equ	16197	;# 
  5363   003F46                     CWG3AS0         equ	16198	;# 
  5364   003F47                     CWG3AS1         equ	16199	;# 
  5365   003F48                     CWG3STR         equ	16200	;# 
  5366   003F49                     CWG2CLK         equ	16201	;# 
  5367   003F49                     CWG2CLKCON      equ	16201	;# 
  5368   003F4A                     CWG2ISM         equ	16202	;# 
  5369   003F4A                     CWG2DAT         equ	16202	;# 
  5370   003F4B                     CWG2DBR         equ	16203	;# 
  5371   003F4C                     CWG2DBF         equ	16204	;# 
  5372   003F4D                     CWG2CON0        equ	16205	;# 
  5373   003F4E                     CWG2CON1        equ	16206	;# 
  5374   003F4F                     CWG2AS0         equ	16207	;# 
  5375   003F50                     CWG2AS1         equ	16208	;# 
  5376   003F51                     CWG2STR         equ	16209	;# 
  5377   003F52                     CWG1CLK         equ	16210	;# 
  5378   003F52                     CWG1CLKCON      equ	16210	;# 
  5379   003F53                     CWG1ISM         equ	16211	;# 
  5380   003F53                     CWG1DAT         equ	16211	;# 
  5381   003F54                     CWG1DBR         equ	16212	;# 
  5382   003F55                     CWG1DBF         equ	16213	;# 
  5383   003F56                     CWG1CON0        equ	16214	;# 
  5384   003F57                     CWG1CON1        equ	16215	;# 
  5385   003F58                     CWG1AS0         equ	16216	;# 
  5386   003F59                     CWG1AS1         equ	16217	;# 
  5387   003F5A                     CWG1STR         equ	16218	;# 
  5388   003F5E                     CCPTMRS0        equ	16222	;# 
  5389   003F5F                     CCPTMRS1        equ	16223	;# 
  5390   003F60                     PWM8DC          equ	16224	;# 
  5391   003F60                     PWM8DCL         equ	16224	;# 
  5392   003F61                     PWM8DCH         equ	16225	;# 
  5393   003F62                     PWM8CON         equ	16226	;# 
  5394   003F64                     PWM7DC          equ	16228	;# 
  5395   003F64                     PWM7DCL         equ	16228	;# 
  5396   003F65                     PWM7DCH         equ	16229	;# 
  5397   003F66                     PWM7CON         equ	16230	;# 
  5398   003F68                     PWM6DC          equ	16232	;# 
  5399   003F68                     PWM6DCL         equ	16232	;# 
  5400   003F69                     PWM6DCH         equ	16233	;# 
  5401   003F6A                     PWM6CON         equ	16234	;# 
  5402   003F6C                     PWM5DC          equ	16236	;# 
  5403   003F6C                     PWM5DCL         equ	16236	;# 
  5404   003F6D                     PWM5DCH         equ	16237	;# 
  5405   003F6E                     PWM5CON         equ	16238	;# 
  5406   003F70                     CCPR4           equ	16240	;# 
  5407   003F70                     CCPR4L          equ	16240	;# 
  5408   003F71                     CCPR4H          equ	16241	;# 
  5409   003F72                     CCP4CON         equ	16242	;# 
  5410   003F73                     CCP4CAP         equ	16243	;# 
  5411   003F74                     CCPR3           equ	16244	;# 
  5412   003F74                     CCPR3L          equ	16244	;# 
  5413   003F75                     CCPR3H          equ	16245	;# 
  5414   003F76                     CCP3CON         equ	16246	;# 
  5415   003F77                     CCP3CAP         equ	16247	;# 
  5416   003F78                     CCPR2           equ	16248	;# 
  5417   003F78                     CCPR2L          equ	16248	;# 
  5418   003F79                     CCPR2H          equ	16249	;# 
  5419   003F7A                     CCP2CON         equ	16250	;# 
  5420   003F7B                     CCP2CAP         equ	16251	;# 
  5421   003F7C                     CCPR1           equ	16252	;# 
  5422   003F7C                     CCPR1L          equ	16252	;# 
  5423   003F7D                     CCPR1H          equ	16253	;# 
  5424   003F7E                     CCP1CON         equ	16254	;# 
  5425   003F7F                     CCP1CAP         equ	16255	;# 
  5426   003F92                     T6TMR           equ	16274	;# 
  5427   003F92                     TMR6            equ	16274	;# 
  5428   003F93                     T6PR            equ	16275	;# 
  5429   003F93                     PR6             equ	16275	;# 
  5430   003F94                     T6CON           equ	16276	;# 
  5431   003F95                     T6HLT           equ	16277	;# 
  5432   003F96                     T6CLKCON        equ	16278	;# 
  5433   003F96                     T6CLK           equ	16278	;# 
  5434   003F97                     T6RST           equ	16279	;# 
  5435   003F98                     TMR5            equ	16280	;# 
  5436   003F98                     TMR5L           equ	16280	;# 
  5437   003F99                     TMR5H           equ	16281	;# 
  5438   003F9A                     T5CON           equ	16282	;# 
  5439   003F9A                     TMR5CON         equ	16282	;# 
  5440   003F9B                     T5GCON          equ	16283	;# 
  5441   003F9B                     TMR5GCON        equ	16283	;# 
  5442   003F9C                     T5GATE          equ	16284	;# 
  5443   003F9C                     TMR5GATE        equ	16284	;# 
  5444   003F9D                     T5CLK           equ	16285	;# 
  5445   003F9D                     TMR5CLK         equ	16285	;# 
  5446   003F9D                     PR5             equ	16285	;# 
  5447   003F9E                     T4TMR           equ	16286	;# 
  5448   003F9E                     TMR4            equ	16286	;# 
  5449   003F9F                     T4PR            equ	16287	;# 
  5450   003F9F                     PR4             equ	16287	;# 
  5451   003FA0                     T4CON           equ	16288	;# 
  5452   003FA1                     T4HLT           equ	16289	;# 
  5453   003FA2                     T4CLKCON        equ	16290	;# 
  5454   003FA2                     T4CLK           equ	16290	;# 
  5455   003FA3                     T4RST           equ	16291	;# 
  5456   003FA4                     TMR3            equ	16292	;# 
  5457   003FA4                     TMR3L           equ	16292	;# 
  5458   003FA5                     TMR3H           equ	16293	;# 
  5459   003FA6                     T3CON           equ	16294	;# 
  5460   003FA6                     TMR3CON         equ	16294	;# 
  5461   003FA7                     T3GCON          equ	16295	;# 
  5462   003FA7                     TMR3GCON        equ	16295	;# 
  5463   003FA8                     T3GATE          equ	16296	;# 
  5464   003FA8                     TMR3GATE        equ	16296	;# 
  5465   003FA9                     T3CLK           equ	16297	;# 
  5466   003FA9                     TMR3CLK         equ	16297	;# 
  5467   003FA9                     PR3             equ	16297	;# 
  5468   003FAA                     T2TMR           equ	16298	;# 
  5469   003FAA                     TMR2            equ	16298	;# 
  5470   003FAB                     T2PR            equ	16299	;# 
  5471   003FAB                     PR2             equ	16299	;# 
  5472   003FAC                     T2CON           equ	16300	;# 
  5473   003FAD                     T2HLT           equ	16301	;# 
  5474   003FAE                     T2CLKCON        equ	16302	;# 
  5475   003FAE                     T2CLK           equ	16302	;# 
  5476   003FAF                     T2RST           equ	16303	;# 
  5477   003FB0                     TMR1            equ	16304	;# 
  5478   003FB0                     TMR1L           equ	16304	;# 
  5479   003FB1                     TMR1H           equ	16305	;# 
  5480   003FB2                     T1CON           equ	16306	;# 
  5481   003FB2                     TMR1CON         equ	16306	;# 
  5482   003FB3                     T1GCON          equ	16307	;# 
  5483   003FB3                     TMR1GCON        equ	16307	;# 
  5484   003FB4                     T1GATE          equ	16308	;# 
  5485   003FB4                     TMR1GATE        equ	16308	;# 
  5486   003FB5                     T1CLK           equ	16309	;# 
  5487   003FB5                     TMR1CLK         equ	16309	;# 
  5488   003FB5                     PR1             equ	16309	;# 
  5489   003FB6                     TMR0L           equ	16310	;# 
  5490   003FB6                     TMR0            equ	16310	;# 
  5491   003FB7                     TMR0H           equ	16311	;# 
  5492   003FB7                     PR0             equ	16311	;# 
  5493   003FB8                     T0CON0          equ	16312	;# 
  5494   003FB9                     T0CON1          equ	16313	;# 
  5495   003FBA                     LATA            equ	16314	;# 
  5496   003FBB                     LATB            equ	16315	;# 
  5497   003FBC                     LATC            equ	16316	;# 
  5498   003FBD                     LATD            equ	16317	;# 
  5499   003FBE                     LATE            equ	16318	;# 
  5500   003FBF                     LATF            equ	16319	;# 
  5501   003FC2                     TRISA           equ	16322	;# 
  5502   003FC3                     TRISB           equ	16323	;# 
  5503   003FC4                     TRISC           equ	16324	;# 
  5504   003FC5                     TRISD           equ	16325	;# 
  5505   003FC6                     TRISE           equ	16326	;# 
  5506   003FC7                     TRISF           equ	16327	;# 
  5507   003FCA                     PORTA           equ	16330	;# 
  5508   003FCB                     PORTB           equ	16331	;# 
  5509   003FCC                     PORTC           equ	16332	;# 
  5510   003FCD                     PORTD           equ	16333	;# 
  5511   003FCE                     PORTE           equ	16334	;# 
  5512   003FCF                     PORTF           equ	16335	;# 
  5513   003FD2                     INTCON0         equ	16338	;# 
  5514   003FD3                     INTCON1         equ	16339	;# 
  5515   003FD4                     IVTLOCK         equ	16340	;# 
  5516   003FD5                     IVTBASE         equ	16341	;# 
  5517   003FD5                     IVTBASEL        equ	16341	;# 
  5518   003FD6                     IVTBASEH        equ	16342	;# 
  5519   003FD7                     IVTBASEU        equ	16343	;# 
  5520   003FD8                     STATUS          equ	16344	;# 
  5521   003FD9                     FSR2            equ	16345	;# 
  5522   003FD9                     FSR2L           equ	16345	;# 
  5523   003FDA                     FSR2H           equ	16346	;# 
  5524   003FDB                     PLUSW2          equ	16347	;# 
  5525   003FDC                     PREINC2         equ	16348	;# 
  5526   003FDD                     POSTDEC2        equ	16349	;# 
  5527   003FDE                     POSTINC2        equ	16350	;# 
  5528   003FDF                     INDF2           equ	16351	;# 
  5529   003FE0                     BSR             equ	16352	;# 
  5530   003FE1                     FSR1            equ	16353	;# 
  5531   003FE1                     FSR1L           equ	16353	;# 
  5532   003FE2                     FSR1H           equ	16354	;# 
  5533   003FE3                     PLUSW1          equ	16355	;# 
  5534   003FE4                     PREINC1         equ	16356	;# 
  5535   003FE5                     POSTDEC1        equ	16357	;# 
  5536   003FE6                     POSTINC1        equ	16358	;# 
  5537   003FE7                     INDF1           equ	16359	;# 
  5538   003FE8                     WREG            equ	16360	;# 
  5539   003FE9                     FSR0            equ	16361	;# 
  5540   003FE9                     FSR0L           equ	16361	;# 
  5541   003FEA                     FSR0H           equ	16362	;# 
  5542   003FEB                     PLUSW0          equ	16363	;# 
  5543   003FEC                     PREINC0         equ	16364	;# 
  5544   003FED                     POSTDEC0        equ	16365	;# 
  5545   003FEE                     POSTINC0        equ	16366	;# 
  5546   003FEF                     INDF0           equ	16367	;# 
  5547   003FF0                     PCON0           equ	16368	;# 
  5548   003FF1                     PCON1           equ	16369	;# 
  5549   003FF3                     PROD            equ	16371	;# 
  5550   003FF3                     PRODL           equ	16371	;# 
  5551   003FF4                     PRODH           equ	16372	;# 
  5552   003FF5                     TABLAT          equ	16373	;# 
  5553   003FF6                     TBLPTR          equ	16374	;# 
  5554   003FF6                     TBLPTRL         equ	16374	;# 
  5555   003FF7                     TBLPTRH         equ	16375	;# 
  5556   003FF8                     TBLPTRU         equ	16376	;# 
  5557   003FF9                     PCLAT           equ	16377	;# 
  5558   003FF9                     PCL             equ	16377	;# 
  5559   003FFA                     PCLATH          equ	16378	;# 
  5560   003FFB                     PCLATU          equ	16379	;# 
  5561   003FFC                     STKPTR          equ	16380	;# 
  5562   003FFD                     TOS             equ	16381	;# 
  5563   003FFD                     TOSL            equ	16381	;# 
  5564   003FFE                     TOSH            equ	16382	;# 
  5565   003FFF                     TOSU            equ	16383	;# 
  5566   003880                     STATUS_CSHAD    equ	14464	;# 
  5567   003881                     WREG_CSHAD      equ	14465	;# 
  5568   003882                     BSR_CSHAD       equ	14466	;# 
  5569   003883                     SHADCON         equ	14467	;# 
  5570   003884                     STATUS_SHAD     equ	14468	;# 
  5571   003885                     WREG_SHAD       equ	14469	;# 
  5572   003886                     BSR_SHAD        equ	14470	;# 
  5573   003887                     PCLATH_SHAD     equ	14471	;# 
  5574   003888                     PCLATU_SHAD     equ	14472	;# 
  5575   003889                     FSR0SH          equ	14473	;# 
  5576   003889                     FSR0L_SHAD      equ	14473	;# 
  5577   00388A                     FSR0H_SHAD      equ	14474	;# 
  5578   00388B                     FSR1SH          equ	14475	;# 
  5579   00388B                     FSR1L_SHAD      equ	14475	;# 
  5580   00388C                     FSR1H_SHAD      equ	14476	;# 
  5581   00388D                     FSR2SH          equ	14477	;# 
  5582   00388D                     FSR2L_SHAD      equ	14477	;# 
  5583   00388E                     FSR2H_SHAD      equ	14478	;# 
  5584   00388F                     PRODSH          equ	14479	;# 
  5585   00388F                     PRODL_SHAD      equ	14479	;# 
  5586   003890                     PRODH_SHAD      equ	14480	;# 
  5587   00389D                     IVTADL          equ	14493	;# 
  5588   00389E                     IVTADH          equ	14494	;# 
  5589   00389F                     IVTADU          equ	14495	;# 
  5590   00395B                     WDTCON0         equ	14683	;# 
  5591   00395C                     WDTCON1         equ	14684	;# 
  5592   00395D                     WDTPSL          equ	14685	;# 
  5593   00395E                     WDTPSH          equ	14686	;# 
  5594   00395F                     WDTTMR          equ	14687	;# 
  5595   003960                     CRCDATA         equ	14688	;# 
  5596   003960                     CRCDATL         equ	14688	;# 
  5597   003961                     CRCDATH         equ	14689	;# 
  5598   003962                     CRCACC          equ	14690	;# 
  5599   003962                     CRCACCL         equ	14690	;# 
  5600   003963                     CRCACCH         equ	14691	;# 
  5601   003964                     CRCSHFT         equ	14692	;# 
  5602   003964                     CRCSHIFTL       equ	14692	;# 
  5603   003965                     CRCSHIFTH       equ	14693	;# 
  5604   003966                     CRCXOR          equ	14694	;# 
  5605   003966                     CRCXORL         equ	14694	;# 
  5606   003967                     CRCXORH         equ	14695	;# 
  5607   003968                     CRCCON0         equ	14696	;# 
  5608   003969                     CRCCON1         equ	14697	;# 
  5609   003976                     SCANLADR        equ	14710	;# 
  5610   003976                     SCANLADRL       equ	14710	;# 
  5611   003977                     SCANLADRH       equ	14711	;# 
  5612   003978                     SCANLADRU       equ	14712	;# 
  5613   003979                     SCANHADR        equ	14713	;# 
  5614   003979                     SCANHADRL       equ	14713	;# 
  5615   00397A                     SCANHADRH       equ	14714	;# 
  5616   00397B                     SCANHADRU       equ	14715	;# 
  5617   00397C                     SCANCON0        equ	14716	;# 
  5618   00397D                     SCANTRIG        equ	14717	;# 
  5619   003980                     IPR0            equ	14720	;# 
  5620   003981                     IPR1            equ	14721	;# 
  5621   003982                     IPR2            equ	14722	;# 
  5622   003983                     IPR3            equ	14723	;# 
  5623   003984                     IPR4            equ	14724	;# 
  5624   003985                     IPR5            equ	14725	;# 
  5625   003986                     IPR6            equ	14726	;# 
  5626   003987                     IPR7            equ	14727	;# 
  5627   003988                     IPR8            equ	14728	;# 
  5628   003989                     IPR9            equ	14729	;# 
  5629   00398A                     IPR10           equ	14730	;# 
  5630   003990                     PIE0            equ	14736	;# 
  5631   003991                     PIE1            equ	14737	;# 
  5632   003992                     PIE2            equ	14738	;# 
  5633   003993                     PIE3            equ	14739	;# 
  5634   003994                     PIE4            equ	14740	;# 
  5635   003995                     PIE5            equ	14741	;# 
  5636   003996                     PIE6            equ	14742	;# 
  5637   003997                     PIE7            equ	14743	;# 
  5638   003998                     PIE8            equ	14744	;# 
  5639   003999                     PIE9            equ	14745	;# 
  5640   00399A                     PIE10           equ	14746	;# 
  5641   0039A0                     PIR0            equ	14752	;# 
  5642   0039A1                     PIR1            equ	14753	;# 
  5643   0039A2                     PIR2            equ	14754	;# 
  5644   0039A3                     PIR3            equ	14755	;# 
  5645   0039A4                     PIR4            equ	14756	;# 
  5646   0039A5                     PIR5            equ	14757	;# 
  5647   0039A6                     PIR6            equ	14758	;# 
  5648   0039A7                     PIR7            equ	14759	;# 
  5649   0039A8                     PIR8            equ	14760	;# 
  5650   0039A9                     PIR9            equ	14761	;# 
  5651   0039AA                     PIR10           equ	14762	;# 
  5652   0039C0                     PMD0            equ	14784	;# 
  5653   0039C1                     PMD1            equ	14785	;# 
  5654   0039C2                     PMD2            equ	14786	;# 
  5655   0039C3                     PMD3            equ	14787	;# 
  5656   0039C4                     PMD4            equ	14788	;# 
  5657   0039C5                     PMD5            equ	14789	;# 
  5658   0039C6                     PMD6            equ	14790	;# 
  5659   0039C7                     PMD7            equ	14791	;# 
  5660   0039D0                     BORCON          equ	14800	;# 
  5661   0039D1                     VREGCON         equ	14801	;# 
  5662   0039D8                     CPUDOZE         equ	14808	;# 
  5663   0039D9                     OSCCON1         equ	14809	;# 
  5664   0039DA                     OSCCON2         equ	14810	;# 
  5665   0039DB                     OSCCON3         equ	14811	;# 
  5666   0039DC                     OSCSTAT         equ	14812	;# 
  5667   0039DC                     OSCSTAT1        equ	14812	;# 
  5668   0039DD                     OSCEN           equ	14813	;# 
  5669   0039DE                     OSCTUNE         equ	14814	;# 
  5670   0039DF                     OSCFRQ          equ	14815	;# 
  5671   0039E0                     NVMADRL         equ	14816	;# 
  5672   0039E1                     NVMADRH         equ	14817	;# 
  5673   0039E3                     NVMDAT          equ	14819	;# 
  5674   0039E5                     NVMCON1         equ	14821	;# 
  5675   0039E6                     NVMCON2         equ	14822	;# 
  5676   0039EF                     PRLOCK          equ	14831	;# 
  5677   0039F1                     ISRPR           equ	14833	;# 
  5678   0039F2                     MAINPR          equ	14834	;# 
  5679   0039F3                     DMA1PR          equ	14835	;# 
  5680   0039F4                     DMA2PR          equ	14836	;# 
  5681   0039F7                     SCANPR          equ	14839	;# 
  5682   003A00                     RA0PPS          equ	14848	;# 
  5683   003A01                     RA1PPS          equ	14849	;# 
  5684   003A02                     RA2PPS          equ	14850	;# 
  5685   003A03                     RA3PPS          equ	14851	;# 
  5686   003A04                     RA4PPS          equ	14852	;# 
  5687   003A05                     RA5PPS          equ	14853	;# 
  5688   003A06                     RA6PPS          equ	14854	;# 
  5689   003A07                     RA7PPS          equ	14855	;# 
  5690   003A08                     RB0PPS          equ	14856	;# 
  5691   003A09                     RB1PPS          equ	14857	;# 
  5692   003A0A                     RB2PPS          equ	14858	;# 
  5693   003A0B                     RB3PPS          equ	14859	;# 
  5694   003A0C                     RB4PPS          equ	14860	;# 
  5695   003A0D                     RB5PPS          equ	14861	;# 
  5696   003A0E                     RB6PPS          equ	14862	;# 
  5697   003A0F                     RB7PPS          equ	14863	;# 
  5698   003A10                     RC0PPS          equ	14864	;# 
  5699   003A11                     RC1PPS          equ	14865	;# 
  5700   003A12                     RC2PPS          equ	14866	;# 
  5701   003A13                     RC3PPS          equ	14867	;# 
  5702   003A14                     RC4PPS          equ	14868	;# 
  5703   003A15                     RC5PPS          equ	14869	;# 
  5704   003A16                     RC6PPS          equ	14870	;# 
  5705   003A17                     RC7PPS          equ	14871	;# 
  5706   003A18                     RD0PPS          equ	14872	;# 
  5707   003A19                     RD1PPS          equ	14873	;# 
  5708   003A1A                     RD2PPS          equ	14874	;# 
  5709   003A1B                     RD3PPS          equ	14875	;# 
  5710   003A1C                     RD4PPS          equ	14876	;# 
  5711   003A1D                     RD5PPS          equ	14877	;# 
  5712   003A1E                     RD6PPS          equ	14878	;# 
  5713   003A1F                     RD7PPS          equ	14879	;# 
  5714   003A20                     RE0PPS          equ	14880	;# 
  5715   003A21                     RE1PPS          equ	14881	;# 
  5716   003A22                     RE2PPS          equ	14882	;# 
  5717   003A28                     RF0PPS          equ	14888	;# 
  5718   003A29                     RF1PPS          equ	14889	;# 
  5719   003A2A                     RF2PPS          equ	14890	;# 
  5720   003A2B                     RF3PPS          equ	14891	;# 
  5721   003A2C                     RF4PPS          equ	14892	;# 
  5722   003A2D                     RF5PPS          equ	14893	;# 
  5723   003A2E                     RF6PPS          equ	14894	;# 
  5724   003A2F                     RF7PPS          equ	14895	;# 
  5725   003A40                     ANSELA          equ	14912	;# 
  5726   003A41                     WPUA            equ	14913	;# 
  5727   003A42                     ODCONA          equ	14914	;# 
  5728   003A43                     SLRCONA         equ	14915	;# 
  5729   003A44                     INLVLA          equ	14916	;# 
  5730   003A45                     IOCAP           equ	14917	;# 
  5731   003A46                     IOCAN           equ	14918	;# 
  5732   003A47                     IOCAF           equ	14919	;# 
  5733   003A50                     ANSELB          equ	14928	;# 
  5734   003A51                     WPUB            equ	14929	;# 
  5735   003A52                     ODCONB          equ	14930	;# 
  5736   003A53                     SLRCONB         equ	14931	;# 
  5737   003A54                     INLVLB          equ	14932	;# 
  5738   003A55                     IOCBP           equ	14933	;# 
  5739   003A56                     IOCBN           equ	14934	;# 
  5740   003A57                     IOCBF           equ	14935	;# 
  5741   003A5A                     RB1I2C          equ	14938	;# 
  5742   003A5B                     RB2I2C          equ	14939	;# 
  5743   003A60                     ANSELC          equ	14944	;# 
  5744   003A61                     WPUC            equ	14945	;# 
  5745   003A62                     ODCONC          equ	14946	;# 
  5746   003A63                     SLRCONC         equ	14947	;# 
  5747   003A64                     INLVLC          equ	14948	;# 
  5748   003A65                     IOCCP           equ	14949	;# 
  5749   003A66                     IOCCN           equ	14950	;# 
  5750   003A67                     IOCCF           equ	14951	;# 
  5751   003A6A                     RC3I2C          equ	14954	;# 
  5752   003A6B                     RC4I2C          equ	14955	;# 
  5753   003A70                     ANSELD          equ	14960	;# 
  5754   003A71                     WPUD            equ	14961	;# 
  5755   003A72                     ODCOND          equ	14962	;# 
  5756   003A73                     SLRCOND         equ	14963	;# 
  5757   003A74                     INLVLD          equ	14964	;# 
  5758   003A7A                     RD0I2C          equ	14970	;# 
  5759   003A7B                     RD1I2C          equ	14971	;# 
  5760   003A80                     ANSELE          equ	14976	;# 
  5761   003A81                     WPUE            equ	14977	;# 
  5762   003A82                     ODCONE          equ	14978	;# 
  5763   003A83                     SLRCONE         equ	14979	;# 
  5764   003A84                     INLVLE          equ	14980	;# 
  5765   003A85                     IOCEP           equ	14981	;# 
  5766   003A86                     IOCEN           equ	14982	;# 
  5767   003A87                     IOCEF           equ	14983	;# 
  5768   003A90                     ANSELF          equ	14992	;# 
  5769   003A91                     WPUF            equ	14993	;# 
  5770   003A92                     ODCONF          equ	14994	;# 
  5771   003A93                     SLRCONF         equ	14995	;# 
  5772   003A94                     INLVLF          equ	14996	;# 
  5773   003ABF                     PPSLOCK         equ	15039	;# 
  5774   003AC0                     INT0PPS         equ	15040	;# 
  5775   003AC1                     INT1PPS         equ	15041	;# 
  5776   003AC2                     INT2PPS         equ	15042	;# 
  5777   003AC3                     T0CKIPPS        equ	15043	;# 
  5778   003AC4                     T1CKIPPS        equ	15044	;# 
  5779   003AC5                     T1GPPS          equ	15045	;# 
  5780   003AC6                     T3CKIPPS        equ	15046	;# 
  5781   003AC7                     T3GPPS          equ	15047	;# 
  5782   003AC8                     T5CKIPPS        equ	15048	;# 
  5783   003AC9                     T5GPPS          equ	15049	;# 
  5784   003ACA                     T2INPPS         equ	15050	;# 
  5785   003ACB                     T4INPPS         equ	15051	;# 
  5786   003ACC                     T6INPPS         equ	15052	;# 
  5787   003ACD                     CCP1PPS         equ	15053	;# 
  5788   003ACE                     CCP2PPS         equ	15054	;# 
  5789   003ACF                     CCP3PPS         equ	15055	;# 
  5790   003AD0                     CCP4PPS         equ	15056	;# 
  5791   003AD1                     SMT1WINPPS      equ	15057	;# 
  5792   003AD2                     SMT1SIGPPS      equ	15058	;# 
  5793   003AD3                     CWG1INPPS       equ	15059	;# 
  5794   003AD4                     CWG2INPPS       equ	15060	;# 
  5795   003AD5                     CWG3INPPS       equ	15061	;# 
  5796   003AD6                     MD1CARLPPS      equ	15062	;# 
  5797   003AD7                     MD1CARHPPS      equ	15063	;# 
  5798   003AD8                     MD1SRCPPS       equ	15064	;# 
  5799   003AD9                     CLCIN0PPS       equ	15065	;# 
  5800   003ADA                     CLCIN1PPS       equ	15066	;# 
  5801   003ADB                     CLCIN2PPS       equ	15067	;# 
  5802   003ADC                     CLCIN3PPS       equ	15068	;# 
  5803   003ADD                     ADACTPPS        equ	15069	;# 
  5804   003ADE                     SPI1SCKPPS      equ	15070	;# 
  5805   003ADF                     SPI1SDIPPS      equ	15071	;# 
  5806   003AE0                     SPI1SSPPS       equ	15072	;# 
  5807   003AE1                     I2C1SCLPPS      equ	15073	;# 
  5808   003AE2                     I2C1SDAPPS      equ	15074	;# 
  5809   003AE3                     I2C2SCLPPS      equ	15075	;# 
  5810   003AE4                     I2C2SDAPPS      equ	15076	;# 
  5811   003AE5                     U1RXPPS         equ	15077	;# 
  5812   003AE6                     U1CTSPPS        equ	15078	;# 
  5813   003AE8                     U2RXPPS         equ	15080	;# 
  5814   003AE9                     U2CTSPPS        equ	15081	;# 
  5815   003BC9                     DMA2BUF         equ	15305	;# 
  5816   003BCA                     DMA2DCNT        equ	15306	;# 
  5817   003BCA                     DMA2DCNTL       equ	15306	;# 
  5818   003BCB                     DMA2DCNTH       equ	15307	;# 
  5819   003BCC                     DMA2DPTR        equ	15308	;# 
  5820   003BCC                     DMA2DPTRL       equ	15308	;# 
  5821   003BCD                     DMA2DPTRH       equ	15309	;# 
  5822   003BCE                     DMA2DSZ         equ	15310	;# 
  5823   003BCE                     DMA2DSZL        equ	15310	;# 
  5824   003BCF                     DMA2DSZH        equ	15311	;# 
  5825   003BD0                     DMA2DSA         equ	15312	;# 
  5826   003BD0                     DMA2DSAL        equ	15312	;# 
  5827   003BD1                     DMA2DSAH        equ	15313	;# 
  5828   003BD2                     DMA2SCNT        equ	15314	;# 
  5829   003BD2                     DMA2SCNTL       equ	15314	;# 
  5830   003BD3                     DMA2SCNTH       equ	15315	;# 
  5831   003BD4                     DMA2SPTR        equ	15316	;# 
  5832   003BD4                     DMA2SPTRL       equ	15316	;# 
  5833   003BD5                     DMA2SPTRH       equ	15317	;# 
  5834   003BD6                     DMA2SPTRU       equ	15318	;# 
  5835   003BD7                     DMA2SSZ         equ	15319	;# 
  5836   003BD7                     DMA2SSZL        equ	15319	;# 
  5837   003BD8                     DMA2SSZH        equ	15320	;# 
  5838   003BD9                     DMA2SSA         equ	15321	;# 
  5839   003BD9                     DMA2SSAL        equ	15321	;# 
  5840   003BDA                     DMA2SSAH        equ	15322	;# 
  5841   003BDB                     DMA2SSAU        equ	15323	;# 
  5842   003BDC                     DMA2CON0        equ	15324	;# 
  5843   003BDD                     DMA2CON1        equ	15325	;# 
  5844   003BDE                     DMA2AIRQ        equ	15326	;# 
  5845   003BDF                     DMA2SIRQ        equ	15327	;# 
  5846   003BE9                     DMA1BUF         equ	15337	;# 
  5847   003BEA                     DMA1DCNT        equ	15338	;# 
  5848   003BEA                     DMA1DCNTL       equ	15338	;# 
  5849   003BEB                     DMA1DCNTH       equ	15339	;# 
  5850   003BEC                     DMA1DPTR        equ	15340	;# 
  5851   003BEC                     DMA1DPTRL       equ	15340	;# 
  5852   003BED                     DMA1DPTRH       equ	15341	;# 
  5853   003BEE                     DMA1DSZ         equ	15342	;# 
  5854   003BEE                     DMA1DSZL        equ	15342	;# 
  5855   003BEF                     DMA1DSZH        equ	15343	;# 
  5856   003BF0                     DMA1DSA         equ	15344	;# 
  5857   003BF0                     DMA1DSAL        equ	15344	;# 
  5858   003BF1                     DMA1DSAH        equ	15345	;# 
  5859   003BF2                     DMA1SCNT        equ	15346	;# 
  5860   003BF2                     DMA1SCNTL       equ	15346	;# 
  5861   003BF3                     DMA1SCNTH       equ	15347	;# 
  5862   003BF4                     DMA1SPTR        equ	15348	;# 
  5863   003BF4                     DMA1SPTRL       equ	15348	;# 
  5864   003BF5                     DMA1SPTRH       equ	15349	;# 
  5865   003BF6                     DMA1SPTRU       equ	15350	;# 
  5866   003BF7                     DMA1SSZ         equ	15351	;# 
  5867   003BF7                     DMA1SSZL        equ	15351	;# 
  5868   003BF8                     DMA1SSZH        equ	15352	;# 
  5869   003BF9                     DMA1SSA         equ	15353	;# 
  5870   003BF9                     DMA1SSAL        equ	15353	;# 
  5871   003BFA                     DMA1SSAH        equ	15354	;# 
  5872   003BFB                     DMA1SSAU        equ	15355	;# 
  5873   003BFC                     DMA1CON0        equ	15356	;# 
  5874   003BFD                     DMA1CON1        equ	15357	;# 
  5875   003BFE                     DMA1AIRQ        equ	15358	;# 
  5876   003BFF                     DMA1SIRQ        equ	15359	;# 
  5877   003C56                     CLC4CON         equ	15446	;# 
  5878   003C57                     CLC4POL         equ	15447	;# 
  5879   003C58                     CLC4SEL0        equ	15448	;# 
  5880   003C59                     CLC4SEL1        equ	15449	;# 
  5881   003C5A                     CLC4SEL2        equ	15450	;# 
  5882   003C5B                     CLC4SEL3        equ	15451	;# 
  5883   003C5C                     CLC4GLS0        equ	15452	;# 
  5884   003C5D                     CLC4GLS1        equ	15453	;# 
  5885   003C5E                     CLC4GLS2        equ	15454	;# 
  5886   003C5F                     CLC4GLS3        equ	15455	;# 
  5887   003C60                     CLC3CON         equ	15456	;# 
  5888   003C61                     CLC3POL         equ	15457	;# 
  5889   003C62                     CLC3SEL0        equ	15458	;# 
  5890   003C63                     CLC3SEL1        equ	15459	;# 
  5891   003C64                     CLC3SEL2        equ	15460	;# 
  5892   003C65                     CLC3SEL3        equ	15461	;# 
  5893   003C66                     CLC3GLS0        equ	15462	;# 
  5894   003C67                     CLC3GLS1        equ	15463	;# 
  5895   003C68                     CLC3GLS2        equ	15464	;# 
  5896   003C69                     CLC3GLS3        equ	15465	;# 
  5897   003C6A                     CLC2CON         equ	15466	;# 
  5898   003C6B                     CLC2POL         equ	15467	;# 
  5899   003C6C                     CLC2SEL0        equ	15468	;# 
  5900   003C6D                     CLC2SEL1        equ	15469	;# 
  5901   003C6E                     CLC2SEL2        equ	15470	;# 
  5902   003C6F                     CLC2SEL3        equ	15471	;# 
  5903   003C70                     CLC2GLS0        equ	15472	;# 
  5904   003C71                     CLC2GLS1        equ	15473	;# 
  5905   003C72                     CLC2GLS2        equ	15474	;# 
  5906   003C73                     CLC2GLS3        equ	15475	;# 
  5907   003C74                     CLC1CON         equ	15476	;# 
  5908   003C75                     CLC1POL         equ	15477	;# 
  5909   003C76                     CLC1SEL0        equ	15478	;# 
  5910   003C77                     CLC1SEL1        equ	15479	;# 
  5911   003C78                     CLC1SEL2        equ	15480	;# 
  5912   003C79                     CLC1SEL3        equ	15481	;# 
  5913   003C7A                     CLC1GLS0        equ	15482	;# 
  5914   003C7B                     CLC1GLS1        equ	15483	;# 
  5915   003C7C                     CLC1GLS2        equ	15484	;# 
  5916   003C7D                     CLC1GLS3        equ	15485	;# 
  5917   003C7E                     CLCDATA0        equ	15486	;# 
  5918   003CE5                     CLKRCON         equ	15589	;# 
  5919   003CE6                     CLKRCLK         equ	15590	;# 
  5920   003CFA                     MD1CON0         equ	15610	;# 
  5921   003CFB                     MD1CON1         equ	15611	;# 
  5922   003CFC                     MD1SRC          equ	15612	;# 
  5923   003CFD                     MD1CARL         equ	15613	;# 
  5924   003CFE                     MD1CARH         equ	15614	;# 
  5925   003D10                     SPI1RXB         equ	15632	;# 
  5926   003D11                     SPI1TXB         equ	15633	;# 
  5927   003D12                     SPI1TCNT        equ	15634	;# 
  5928   003D12                     SPI1TCNTL       equ	15634	;# 
  5929   003D13                     SPI1TCNTH       equ	15635	;# 
  5930   003D14                     SPI1CON0        equ	15636	;# 
  5931   003D15                     SPI1CON1        equ	15637	;# 
  5932   003D16                     SPI1CON2        equ	15638	;# 
  5933   003D17                     SPI1STATUS      equ	15639	;# 
  5934   003D18                     SPI1TWIDTH      equ	15640	;# 
  5935   003D19                     SPI1BAUD        equ	15641	;# 
  5936   003D1A                     SPI1INTF        equ	15642	;# 
  5937   003D1B                     SPI1INTE        equ	15643	;# 
  5938   003D1C                     SPI1CLK         equ	15644	;# 
  5939   003D54                     I2C2RXB         equ	15700	;# 
  5940   003D55                     I2C2TXB         equ	15701	;# 
  5941   003D56                     I2C2CNT         equ	15702	;# 
  5942   003D57                     I2C2ADB0        equ	15703	;# 
  5943   003D58                     I2C2ADB1        equ	15704	;# 
  5944   003D59                     I2C2ADR0        equ	15705	;# 
  5945   003D5A                     I2C2ADR1        equ	15706	;# 
  5946   003D5B                     I2C2ADR2        equ	15707	;# 
  5947   003D5C                     I2C2ADR3        equ	15708	;# 
  5948   003D5D                     I2C2CON0        equ	15709	;# 
  5949   003D5E                     I2C2CON1        equ	15710	;# 
  5950   003D5F                     I2C2CON2        equ	15711	;# 
  5951   003D60                     I2C2ERR         equ	15712	;# 
  5952   003D61                     I2C2STAT0       equ	15713	;# 
  5953   003D62                     I2C2STAT1       equ	15714	;# 
  5954   003D63                     I2C2PIR         equ	15715	;# 
  5955   003D64                     I2C2PIE         equ	15716	;# 
  5956   003D65                     I2C2CLK         equ	15717	;# 
  5957   003D66                     I2C2BTO         equ	15718	;# 
  5958   003D6A                     I2C1RXB         equ	15722	;# 
  5959   003D6B                     I2C1TXB         equ	15723	;# 
  5960   003D6C                     I2C1CNT         equ	15724	;# 
  5961   003D6D                     I2C1ADB0        equ	15725	;# 
  5962   003D6E                     I2C1ADB1        equ	15726	;# 
  5963   003D6F                     I2C1ADR0        equ	15727	;# 
  5964   003D70                     I2C1ADR1        equ	15728	;# 
  5965   003D71                     I2C1ADR2        equ	15729	;# 
  5966   003D72                     I2C1ADR3        equ	15730	;# 
  5967   003D73                     I2C1CON0        equ	15731	;# 
  5968   003D74                     I2C1CON1        equ	15732	;# 
  5969   003D75                     I2C1CON2        equ	15733	;# 
  5970   003D76                     I2C1ERR         equ	15734	;# 
  5971   003D77                     I2C1STAT0       equ	15735	;# 
  5972   003D78                     I2C1STAT1       equ	15736	;# 
  5973   003D79                     I2C1PIR         equ	15737	;# 
  5974   003D7A                     I2C1PIE         equ	15738	;# 
  5975   003D7B                     I2C1CLK         equ	15739	;# 
  5976   003D7C                     I2C1BTO         equ	15740	;# 
  5977   003DD0                     U2RXB           equ	15824	;# 
  5978   003DD0                     U2RXBL          equ	15824	;# 
  5979   003DD2                     U2TXB           equ	15826	;# 
  5980   003DD2                     U2TXBL          equ	15826	;# 
  5981   003DD4                     U2P1            equ	15828	;# 
  5982   003DD4                     U2P1L           equ	15828	;# 
  5983   003DD6                     U2P2            equ	15830	;# 
  5984   003DD6                     U2P2L           equ	15830	;# 
  5985   003DD8                     U2P3            equ	15832	;# 
  5986   003DD8                     U2P3L           equ	15832	;# 
  5987   003DDA                     U2CON0          equ	15834	;# 
  5988   003DDB                     U2CON1          equ	15835	;# 
  5989   003DDC                     U2CON2          equ	15836	;# 
  5990   003DDD                     U2BRG           equ	15837	;# 
  5991   003DDD                     U2BRGL          equ	15837	;# 
  5992   003DDE                     U2BRGH          equ	15838	;# 
  5993   003DDF                     U2FIFO          equ	15839	;# 
  5994   003DE0                     U2UIR           equ	15840	;# 
  5995   003DE1                     U2ERRIR         equ	15841	;# 
  5996   003DE2                     U2ERRIE         equ	15842	;# 
  5997   003DE8                     U1RXB           equ	15848	;# 
  5998   003DE8                     U1RXBL          equ	15848	;# 
  5999   003DE9                     U1RXCHK         equ	15849	;# 
  6000   003DEA                     U1TXB           equ	15850	;# 
  6001   003DEA                     U1TXBL          equ	15850	;# 
  6002   003DEB                     U1TXCHK         equ	15851	;# 
  6003   003DEC                     U1P1            equ	15852	;# 
  6004   003DEC                     U1P1L           equ	15852	;# 
  6005   003DED                     U1P1H           equ	15853	;# 
  6006   003DEE                     U1P2            equ	15854	;# 
  6007   003DEE                     U1P2L           equ	15854	;# 
  6008   003DEF                     U1P2H           equ	15855	;# 
  6009   003DF0                     U1P3            equ	15856	;# 
  6010   003DF0                     U1P3L           equ	15856	;# 
  6011   003DF1                     U1P3H           equ	15857	;# 
  6012   003DF2                     U1CON0          equ	15858	;# 
  6013   003DF3                     U1CON1          equ	15859	;# 
  6014   003DF4                     U1CON2          equ	15860	;# 
  6015   003DF5                     U1BRG           equ	15861	;# 
  6016   003DF5                     U1BRGL          equ	15861	;# 
  6017   003DF6                     U1BRGH          equ	15862	;# 
  6018   003DF7                     U1FIFO          equ	15863	;# 
  6019   003DF8                     U1UIR           equ	15864	;# 
  6020   003DF9                     U1ERRIR         equ	15865	;# 
  6021   003DFA                     U1ERRIE         equ	15866	;# 
  6022   003E9C                     DAC1CON1        equ	16028	;# 
  6023   003E9E                     DAC1CON0        equ	16030	;# 
  6024   003EB8                     CM2CON0         equ	16056	;# 
  6025   003EB9                     CM2CON1         equ	16057	;# 
  6026   003EBA                     CM2NCH          equ	16058	;# 
  6027   003EBB                     CM2PCH          equ	16059	;# 
  6028   003EBC                     CM1CON0         equ	16060	;# 
  6029   003EBD                     CM1CON1         equ	16061	;# 
  6030   003EBE                     CM1NCH          equ	16062	;# 
  6031   003EBF                     CM1PCH          equ	16063	;# 
  6032   003EC0                     CMOUT           equ	16064	;# 
  6033   003EC1                     FVRCON          equ	16065	;# 
  6034   003EC3                     ZCDCON          equ	16067	;# 
  6035   003EC9                     HLVDCON0        equ	16073	;# 
  6036   003ECA                     HLVDCON1        equ	16074	;# 
  6037   003ED7                     ADCP            equ	16087	;# 
  6038   003EDE                     ADLTH           equ	16094	;# 
  6039   003EDE                     ADLTHL          equ	16094	;# 
  6040   003EDF                     ADLTHH          equ	16095	;# 
  6041   003EE0                     ADUTH           equ	16096	;# 
  6042   003EE0                     ADUTHL          equ	16096	;# 
  6043   003EE1                     ADUTHH          equ	16097	;# 
  6044   003EE2                     ADERR           equ	16098	;# 
  6045   003EE2                     ADERRL          equ	16098	;# 
  6046   003EE3                     ADERRH          equ	16099	;# 
  6047   003EE4                     ADSTPT          equ	16100	;# 
  6048   003EE4                     ADSTPTL         equ	16100	;# 
  6049   003EE5                     ADSTPTH         equ	16101	;# 
  6050   003EE6                     ADFLTR          equ	16102	;# 
  6051   003EE6                     ADFLTRL         equ	16102	;# 
  6052   003EE7                     ADFLTRH         equ	16103	;# 
  6053   003EE8                     ADACC           equ	16104	;# 
  6054   003EE8                     ADACCL          equ	16104	;# 
  6055   003EE9                     ADACCH          equ	16105	;# 
  6056   003EEA                     ADACCU          equ	16106	;# 
  6057   003EEB                     ADCNT           equ	16107	;# 
  6058   003EEC                     ADRPT           equ	16108	;# 
  6059   003EED                     ADPREV          equ	16109	;# 
  6060   003EED                     ADPREVL         equ	16109	;# 
  6061   003EEE                     ADPREVH         equ	16110	;# 
  6062   003EEF                     ADRES           equ	16111	;# 
  6063   003EEF                     ADRESL          equ	16111	;# 
  6064   003EF0                     ADRESH          equ	16112	;# 
  6065   003EF1                     ADPCH           equ	16113	;# 
  6066   003EF3                     ADACQ           equ	16115	;# 
  6067   003EF3                     ADACQL          equ	16115	;# 
  6068   003EF4                     ADACQH          equ	16116	;# 
  6069   003EF5                     ADCAP           equ	16117	;# 
  6070   003EF6                     ADPRE           equ	16118	;# 
  6071   003EF6                     ADPREL          equ	16118	;# 
  6072   003EF7                     ADPREH          equ	16119	;# 
  6073   003EF8                     ADCON0          equ	16120	;# 
  6074   003EF9                     ADCON1          equ	16121	;# 
  6075   003EFA                     ADCON2          equ	16122	;# 
  6076   003EFB                     ADCON3          equ	16123	;# 
  6077   003EFC                     ADSTAT          equ	16124	;# 
  6078   003EFD                     ADREF           equ	16125	;# 
  6079   003EFE                     ADACT           equ	16126	;# 
  6080   003EFF                     ADCLK           equ	16127	;# 
  6081   003F12                     SMT1TMR         equ	16146	;# 
  6082   003F12                     SMT1TMRL        equ	16146	;# 
  6083   003F13                     SMT1TMRH        equ	16147	;# 
  6084   003F14                     SMT1TMRU        equ	16148	;# 
  6085   003F15                     SMT1CPR         equ	16149	;# 
  6086   003F15                     SMT1CPRL        equ	16149	;# 
  6087   003F16                     SMT1CPRH        equ	16150	;# 
  6088   003F17                     SMT1CPRU        equ	16151	;# 
  6089   003F18                     SMT1CPW         equ	16152	;# 
  6090   003F18                     SMT1CPWL        equ	16152	;# 
  6091   003F19                     SMT1CPWH        equ	16153	;# 
  6092   003F1A                     SMT1CPWU        equ	16154	;# 
  6093   003F1B                     SMT1PR          equ	16155	;# 
  6094   003F1B                     SMT1PRL         equ	16155	;# 
  6095   003F1C                     SMT1PRH         equ	16156	;# 
  6096   003F1D                     SMT1PRU         equ	16157	;# 
  6097   003F1E                     SMT1CON0        equ	16158	;# 
  6098   003F1F                     SMT1CON1        equ	16159	;# 
  6099   003F20                     SMT1STAT        equ	16160	;# 
  6100   003F21                     SMT1CLK         equ	16161	;# 
  6101   003F22                     SMT1SIG         equ	16162	;# 
  6102   003F23                     SMT1WIN         equ	16163	;# 
  6103   003F38                     NCO1ACC         equ	16184	;# 
  6104   003F38                     NCO1ACCL        equ	16184	;# 
  6105   003F39                     NCO1ACCH        equ	16185	;# 
  6106   003F3A                     NCO1ACCU        equ	16186	;# 
  6107   003F3B                     NCO1INC         equ	16187	;# 
  6108   003F3B                     NCO1INCL        equ	16187	;# 
  6109   003F3C                     NCO1INCH        equ	16188	;# 
  6110   003F3D                     NCO1INCU        equ	16189	;# 
  6111   003F3E                     NCO1CON         equ	16190	;# 
  6112   003F3F                     NCO1CLK         equ	16191	;# 
  6113   003F40                     CWG3CLK         equ	16192	;# 
  6114   003F40                     CWG3CLKCON      equ	16192	;# 
  6115   003F41                     CWG3ISM         equ	16193	;# 
  6116   003F41                     CWG3DAT         equ	16193	;# 
  6117   003F42                     CWG3DBR         equ	16194	;# 
  6118   003F43                     CWG3DBF         equ	16195	;# 
  6119   003F44                     CWG3CON0        equ	16196	;# 
  6120   003F45                     CWG3CON1        equ	16197	;# 
  6121   003F46                     CWG3AS0         equ	16198	;# 
  6122   003F47                     CWG3AS1         equ	16199	;# 
  6123   003F48                     CWG3STR         equ	16200	;# 
  6124   003F49                     CWG2CLK         equ	16201	;# 
  6125   003F49                     CWG2CLKCON      equ	16201	;# 
  6126   003F4A                     CWG2ISM         equ	16202	;# 
  6127   003F4A                     CWG2DAT         equ	16202	;# 
  6128   003F4B                     CWG2DBR         equ	16203	;# 
  6129   003F4C                     CWG2DBF         equ	16204	;# 
  6130   003F4D                     CWG2CON0        equ	16205	;# 
  6131   003F4E                     CWG2CON1        equ	16206	;# 
  6132   003F4F                     CWG2AS0         equ	16207	;# 
  6133   003F50                     CWG2AS1         equ	16208	;# 
  6134   003F51                     CWG2STR         equ	16209	;# 
  6135   003F52                     CWG1CLK         equ	16210	;# 
  6136   003F52                     CWG1CLKCON      equ	16210	;# 
  6137   003F53                     CWG1ISM         equ	16211	;# 
  6138   003F53                     CWG1DAT         equ	16211	;# 
  6139   003F54                     CWG1DBR         equ	16212	;# 
  6140   003F55                     CWG1DBF         equ	16213	;# 
  6141   003F56                     CWG1CON0        equ	16214	;# 
  6142   003F57                     CWG1CON1        equ	16215	;# 
  6143   003F58                     CWG1AS0         equ	16216	;# 
  6144   003F59                     CWG1AS1         equ	16217	;# 
  6145   003F5A                     CWG1STR         equ	16218	;# 
  6146   003F5E                     CCPTMRS0        equ	16222	;# 
  6147   003F5F                     CCPTMRS1        equ	16223	;# 
  6148   003F60                     PWM8DC          equ	16224	;# 
  6149   003F60                     PWM8DCL         equ	16224	;# 
  6150   003F61                     PWM8DCH         equ	16225	;# 
  6151   003F62                     PWM8CON         equ	16226	;# 
  6152   003F64                     PWM7DC          equ	16228	;# 
  6153   003F64                     PWM7DCL         equ	16228	;# 
  6154   003F65                     PWM7DCH         equ	16229	;# 
  6155   003F66                     PWM7CON         equ	16230	;# 
  6156   003F68                     PWM6DC          equ	16232	;# 
  6157   003F68                     PWM6DCL         equ	16232	;# 
  6158   003F69                     PWM6DCH         equ	16233	;# 
  6159   003F6A                     PWM6CON         equ	16234	;# 
  6160   003F6C                     PWM5DC          equ	16236	;# 
  6161   003F6C                     PWM5DCL         equ	16236	;# 
  6162   003F6D                     PWM5DCH         equ	16237	;# 
  6163   003F6E                     PWM5CON         equ	16238	;# 
  6164   003F70                     CCPR4           equ	16240	;# 
  6165   003F70                     CCPR4L          equ	16240	;# 
  6166   003F71                     CCPR4H          equ	16241	;# 
  6167   003F72                     CCP4CON         equ	16242	;# 
  6168   003F73                     CCP4CAP         equ	16243	;# 
  6169   003F74                     CCPR3           equ	16244	;# 
  6170   003F74                     CCPR3L          equ	16244	;# 
  6171   003F75                     CCPR3H          equ	16245	;# 
  6172   003F76                     CCP3CON         equ	16246	;# 
  6173   003F77                     CCP3CAP         equ	16247	;# 
  6174   003F78                     CCPR2           equ	16248	;# 
  6175   003F78                     CCPR2L          equ	16248	;# 
  6176   003F79                     CCPR2H          equ	16249	;# 
  6177   003F7A                     CCP2CON         equ	16250	;# 
  6178   003F7B                     CCP2CAP         equ	16251	;# 
  6179   003F7C                     CCPR1           equ	16252	;# 
  6180   003F7C                     CCPR1L          equ	16252	;# 
  6181   003F7D                     CCPR1H          equ	16253	;# 
  6182   003F7E                     CCP1CON         equ	16254	;# 
  6183   003F7F                     CCP1CAP         equ	16255	;# 
  6184   003F92                     T6TMR           equ	16274	;# 
  6185   003F92                     TMR6            equ	16274	;# 
  6186   003F93                     T6PR            equ	16275	;# 
  6187   003F93                     PR6             equ	16275	;# 
  6188   003F94                     T6CON           equ	16276	;# 
  6189   003F95                     T6HLT           equ	16277	;# 
  6190   003F96                     T6CLKCON        equ	16278	;# 
  6191   003F96                     T6CLK           equ	16278	;# 
  6192   003F97                     T6RST           equ	16279	;# 
  6193   003F98                     TMR5            equ	16280	;# 
  6194   003F98                     TMR5L           equ	16280	;# 
  6195   003F99                     TMR5H           equ	16281	;# 
  6196   003F9A                     T5CON           equ	16282	;# 
  6197   003F9A                     TMR5CON         equ	16282	;# 
  6198   003F9B                     T5GCON          equ	16283	;# 
  6199   003F9B                     TMR5GCON        equ	16283	;# 
  6200   003F9C                     T5GATE          equ	16284	;# 
  6201   003F9C                     TMR5GATE        equ	16284	;# 
  6202   003F9D                     T5CLK           equ	16285	;# 
  6203   003F9D                     TMR5CLK         equ	16285	;# 
  6204   003F9D                     PR5             equ	16285	;# 
  6205   003F9E                     T4TMR           equ	16286	;# 
  6206   003F9E                     TMR4            equ	16286	;# 
  6207   003F9F                     T4PR            equ	16287	;# 
  6208   003F9F                     PR4             equ	16287	;# 
  6209   003FA0                     T4CON           equ	16288	;# 
  6210   003FA1                     T4HLT           equ	16289	;# 
  6211   003FA2                     T4CLKCON        equ	16290	;# 
  6212   003FA2                     T4CLK           equ	16290	;# 
  6213   003FA3                     T4RST           equ	16291	;# 
  6214   003FA4                     TMR3            equ	16292	;# 
  6215   003FA4                     TMR3L           equ	16292	;# 
  6216   003FA5                     TMR3H           equ	16293	;# 
  6217   003FA6                     T3CON           equ	16294	;# 
  6218   003FA6                     TMR3CON         equ	16294	;# 
  6219   003FA7                     T3GCON          equ	16295	;# 
  6220   003FA7                     TMR3GCON        equ	16295	;# 
  6221   003FA8                     T3GATE          equ	16296	;# 
  6222   003FA8                     TMR3GATE        equ	16296	;# 
  6223   003FA9                     T3CLK           equ	16297	;# 
  6224   003FA9                     TMR3CLK         equ	16297	;# 
  6225   003FA9                     PR3             equ	16297	;# 
  6226   003FAA                     T2TMR           equ	16298	;# 
  6227   003FAA                     TMR2            equ	16298	;# 
  6228   003FAB                     T2PR            equ	16299	;# 
  6229   003FAB                     PR2             equ	16299	;# 
  6230   003FAC                     T2CON           equ	16300	;# 
  6231   003FAD                     T2HLT           equ	16301	;# 
  6232   003FAE                     T2CLKCON        equ	16302	;# 
  6233   003FAE                     T2CLK           equ	16302	;# 
  6234   003FAF                     T2RST           equ	16303	;# 
  6235   003FB0                     TMR1            equ	16304	;# 
  6236   003FB0                     TMR1L           equ	16304	;# 
  6237   003FB1                     TMR1H           equ	16305	;# 
  6238   003FB2                     T1CON           equ	16306	;# 
  6239   003FB2                     TMR1CON         equ	16306	;# 
  6240   003FB3                     T1GCON          equ	16307	;# 
  6241   003FB3                     TMR1GCON        equ	16307	;# 
  6242   003FB4                     T1GATE          equ	16308	;# 
  6243   003FB4                     TMR1GATE        equ	16308	;# 
  6244   003FB5                     T1CLK           equ	16309	;# 
  6245   003FB5                     TMR1CLK         equ	16309	;# 
  6246   003FB5                     PR1             equ	16309	;# 
  6247   003FB6                     TMR0L           equ	16310	;# 
  6248   003FB6                     TMR0            equ	16310	;# 
  6249   003FB7                     TMR0H           equ	16311	;# 
  6250   003FB7                     PR0             equ	16311	;# 
  6251   003FB8                     T0CON0          equ	16312	;# 
  6252   003FB9                     T0CON1          equ	16313	;# 
  6253   003FBA                     LATA            equ	16314	;# 
  6254   003FBB                     LATB            equ	16315	;# 
  6255   003FBC                     LATC            equ	16316	;# 
  6256   003FBD                     LATD            equ	16317	;# 
  6257   003FBE                     LATE            equ	16318	;# 
  6258   003FBF                     LATF            equ	16319	;# 
  6259   003FC2                     TRISA           equ	16322	;# 
  6260   003FC3                     TRISB           equ	16323	;# 
  6261   003FC4                     TRISC           equ	16324	;# 
  6262   003FC5                     TRISD           equ	16325	;# 
  6263   003FC6                     TRISE           equ	16326	;# 
  6264   003FC7                     TRISF           equ	16327	;# 
  6265   003FCA                     PORTA           equ	16330	;# 
  6266   003FCB                     PORTB           equ	16331	;# 
  6267   003FCC                     PORTC           equ	16332	;# 
  6268   003FCD                     PORTD           equ	16333	;# 
  6269   003FCE                     PORTE           equ	16334	;# 
  6270   003FCF                     PORTF           equ	16335	;# 
  6271   003FD2                     INTCON0         equ	16338	;# 
  6272   003FD3                     INTCON1         equ	16339	;# 
  6273   003FD4                     IVTLOCK         equ	16340	;# 
  6274   003FD5                     IVTBASE         equ	16341	;# 
  6275   003FD5                     IVTBASEL        equ	16341	;# 
  6276   003FD6                     IVTBASEH        equ	16342	;# 
  6277   003FD7                     IVTBASEU        equ	16343	;# 
  6278   003FD8                     STATUS          equ	16344	;# 
  6279   003FD9                     FSR2            equ	16345	;# 
  6280   003FD9                     FSR2L           equ	16345	;# 
  6281   003FDA                     FSR2H           equ	16346	;# 
  6282   003FDB                     PLUSW2          equ	16347	;# 
  6283   003FDC                     PREINC2         equ	16348	;# 
  6284   003FDD                     POSTDEC2        equ	16349	;# 
  6285   003FDE                     POSTINC2        equ	16350	;# 
  6286   003FDF                     INDF2           equ	16351	;# 
  6287   003FE0                     BSR             equ	16352	;# 
  6288   003FE1                     FSR1            equ	16353	;# 
  6289   003FE1                     FSR1L           equ	16353	;# 
  6290   003FE2                     FSR1H           equ	16354	;# 
  6291   003FE3                     PLUSW1          equ	16355	;# 
  6292   003FE4                     PREINC1         equ	16356	;# 
  6293   003FE5                     POSTDEC1        equ	16357	;# 
  6294   003FE6                     POSTINC1        equ	16358	;# 
  6295   003FE7                     INDF1           equ	16359	;# 
  6296   003FE8                     WREG            equ	16360	;# 
  6297   003FE9                     FSR0            equ	16361	;# 
  6298   003FE9                     FSR0L           equ	16361	;# 
  6299   003FEA                     FSR0H           equ	16362	;# 
  6300   003FEB                     PLUSW0          equ	16363	;# 
  6301   003FEC                     PREINC0         equ	16364	;# 
  6302   003FED                     POSTDEC0        equ	16365	;# 
  6303   003FEE                     POSTINC0        equ	16366	;# 
  6304   003FEF                     INDF0           equ	16367	;# 
  6305   003FF0                     PCON0           equ	16368	;# 
  6306   003FF1                     PCON1           equ	16369	;# 
  6307   003FF3                     PROD            equ	16371	;# 
  6308   003FF3                     PRODL           equ	16371	;# 
  6309   003FF4                     PRODH           equ	16372	;# 
  6310   003FF5                     TABLAT          equ	16373	;# 
  6311   003FF6                     TBLPTR          equ	16374	;# 
  6312   003FF6                     TBLPTRL         equ	16374	;# 
  6313   003FF7                     TBLPTRH         equ	16375	;# 
  6314   003FF8                     TBLPTRU         equ	16376	;# 
  6315   003FF9                     PCLAT           equ	16377	;# 
  6316   003FF9                     PCL             equ	16377	;# 
  6317   003FFA                     PCLATH          equ	16378	;# 
  6318   003FFB                     PCLATU          equ	16379	;# 
  6319   003FFC                     STKPTR          equ	16380	;# 
  6320   003FFD                     TOS             equ	16381	;# 
  6321   003FFD                     TOSL            equ	16381	;# 
  6322   003FFE                     TOSH            equ	16382	;# 
  6323   003FFF                     TOSU            equ	16383	;# 
  6324   003880                     STATUS_CSHAD    equ	14464	;# 
  6325   003881                     WREG_CSHAD      equ	14465	;# 
  6326   003882                     BSR_CSHAD       equ	14466	;# 
  6327   003883                     SHADCON         equ	14467	;# 
  6328   003884                     STATUS_SHAD     equ	14468	;# 
  6329   003885                     WREG_SHAD       equ	14469	;# 
  6330   003886                     BSR_SHAD        equ	14470	;# 
  6331   003887                     PCLATH_SHAD     equ	14471	;# 
  6332   003888                     PCLATU_SHAD     equ	14472	;# 
  6333   003889                     FSR0SH          equ	14473	;# 
  6334   003889                     FSR0L_SHAD      equ	14473	;# 
  6335   00388A                     FSR0H_SHAD      equ	14474	;# 
  6336   00388B                     FSR1SH          equ	14475	;# 
  6337   00388B                     FSR1L_SHAD      equ	14475	;# 
  6338   00388C                     FSR1H_SHAD      equ	14476	;# 
  6339   00388D                     FSR2SH          equ	14477	;# 
  6340   00388D                     FSR2L_SHAD      equ	14477	;# 
  6341   00388E                     FSR2H_SHAD      equ	14478	;# 
  6342   00388F                     PRODSH          equ	14479	;# 
  6343   00388F                     PRODL_SHAD      equ	14479	;# 
  6344   003890                     PRODH_SHAD      equ	14480	;# 
  6345   00389D                     IVTADL          equ	14493	;# 
  6346   00389E                     IVTADH          equ	14494	;# 
  6347   00389F                     IVTADU          equ	14495	;# 
  6348   00395B                     WDTCON0         equ	14683	;# 
  6349   00395C                     WDTCON1         equ	14684	;# 
  6350   00395D                     WDTPSL          equ	14685	;# 
  6351   00395E                     WDTPSH          equ	14686	;# 
  6352   00395F                     WDTTMR          equ	14687	;# 
  6353   003960                     CRCDATA         equ	14688	;# 
  6354   003960                     CRCDATL         equ	14688	;# 
  6355   003961                     CRCDATH         equ	14689	;# 
  6356   003962                     CRCACC          equ	14690	;# 
  6357   003962                     CRCACCL         equ	14690	;# 
  6358   003963                     CRCACCH         equ	14691	;# 
  6359   003964                     CRCSHFT         equ	14692	;# 
  6360   003964                     CRCSHIFTL       equ	14692	;# 
  6361   003965                     CRCSHIFTH       equ	14693	;# 
  6362   003966                     CRCXOR          equ	14694	;# 
  6363   003966                     CRCXORL         equ	14694	;# 
  6364   003967                     CRCXORH         equ	14695	;# 
  6365   003968                     CRCCON0         equ	14696	;# 
  6366   003969                     CRCCON1         equ	14697	;# 
  6367   003976                     SCANLADR        equ	14710	;# 
  6368   003976                     SCANLADRL       equ	14710	;# 
  6369   003977                     SCANLADRH       equ	14711	;# 
  6370   003978                     SCANLADRU       equ	14712	;# 
  6371   003979                     SCANHADR        equ	14713	;# 
  6372   003979                     SCANHADRL       equ	14713	;# 
  6373   00397A                     SCANHADRH       equ	14714	;# 
  6374   00397B                     SCANHADRU       equ	14715	;# 
  6375   00397C                     SCANCON0        equ	14716	;# 
  6376   00397D                     SCANTRIG        equ	14717	;# 
  6377   003980                     IPR0            equ	14720	;# 
  6378   003981                     IPR1            equ	14721	;# 
  6379   003982                     IPR2            equ	14722	;# 
  6380   003983                     IPR3            equ	14723	;# 
  6381   003984                     IPR4            equ	14724	;# 
  6382   003985                     IPR5            equ	14725	;# 
  6383   003986                     IPR6            equ	14726	;# 
  6384   003987                     IPR7            equ	14727	;# 
  6385   003988                     IPR8            equ	14728	;# 
  6386   003989                     IPR9            equ	14729	;# 
  6387   00398A                     IPR10           equ	14730	;# 
  6388   003990                     PIE0            equ	14736	;# 
  6389   003991                     PIE1            equ	14737	;# 
  6390   003992                     PIE2            equ	14738	;# 
  6391   003993                     PIE3            equ	14739	;# 
  6392   003994                     PIE4            equ	14740	;# 
  6393   003995                     PIE5            equ	14741	;# 
  6394   003996                     PIE6            equ	14742	;# 
  6395   003997                     PIE7            equ	14743	;# 
  6396   003998                     PIE8            equ	14744	;# 
  6397   003999                     PIE9            equ	14745	;# 
  6398   00399A                     PIE10           equ	14746	;# 
  6399   0039A0                     PIR0            equ	14752	;# 
  6400   0039A1                     PIR1            equ	14753	;# 
  6401   0039A2                     PIR2            equ	14754	;# 
  6402   0039A3                     PIR3            equ	14755	;# 
  6403   0039A4                     PIR4            equ	14756	;# 
  6404   0039A5                     PIR5            equ	14757	;# 
  6405   0039A6                     PIR6            equ	14758	;# 
  6406   0039A7                     PIR7            equ	14759	;# 
  6407   0039A8                     PIR8            equ	14760	;# 
  6408   0039A9                     PIR9            equ	14761	;# 
  6409   0039AA                     PIR10           equ	14762	;# 
  6410   0039C0                     PMD0            equ	14784	;# 
  6411   0039C1                     PMD1            equ	14785	;# 
  6412   0039C2                     PMD2            equ	14786	;# 
  6413   0039C3                     PMD3            equ	14787	;# 
  6414   0039C4                     PMD4            equ	14788	;# 
  6415   0039C5                     PMD5            equ	14789	;# 
  6416   0039C6                     PMD6            equ	14790	;# 
  6417   0039C7                     PMD7            equ	14791	;# 
  6418   0039D0                     BORCON          equ	14800	;# 
  6419   0039D1                     VREGCON         equ	14801	;# 
  6420   0039D8                     CPUDOZE         equ	14808	;# 
  6421   0039D9                     OSCCON1         equ	14809	;# 
  6422   0039DA                     OSCCON2         equ	14810	;# 
  6423   0039DB                     OSCCON3         equ	14811	;# 
  6424   0039DC                     OSCSTAT         equ	14812	;# 
  6425   0039DC                     OSCSTAT1        equ	14812	;# 
  6426   0039DD                     OSCEN           equ	14813	;# 
  6427   0039DE                     OSCTUNE         equ	14814	;# 
  6428   0039DF                     OSCFRQ          equ	14815	;# 
  6429   0039E0                     NVMADRL         equ	14816	;# 
  6430   0039E1                     NVMADRH         equ	14817	;# 
  6431   0039E3                     NVMDAT          equ	14819	;# 
  6432   0039E5                     NVMCON1         equ	14821	;# 
  6433   0039E6                     NVMCON2         equ	14822	;# 
  6434   0039EF                     PRLOCK          equ	14831	;# 
  6435   0039F1                     ISRPR           equ	14833	;# 
  6436   0039F2                     MAINPR          equ	14834	;# 
  6437   0039F3                     DMA1PR          equ	14835	;# 
  6438   0039F4                     DMA2PR          equ	14836	;# 
  6439   0039F7                     SCANPR          equ	14839	;# 
  6440   003A00                     RA0PPS          equ	14848	;# 
  6441   003A01                     RA1PPS          equ	14849	;# 
  6442   003A02                     RA2PPS          equ	14850	;# 
  6443   003A03                     RA3PPS          equ	14851	;# 
  6444   003A04                     RA4PPS          equ	14852	;# 
  6445   003A05                     RA5PPS          equ	14853	;# 
  6446   003A06                     RA6PPS          equ	14854	;# 
  6447   003A07                     RA7PPS          equ	14855	;# 
  6448   003A08                     RB0PPS          equ	14856	;# 
  6449   003A09                     RB1PPS          equ	14857	;# 
  6450   003A0A                     RB2PPS          equ	14858	;# 
  6451   003A0B                     RB3PPS          equ	14859	;# 
  6452   003A0C                     RB4PPS          equ	14860	;# 
  6453   003A0D                     RB5PPS          equ	14861	;# 
  6454   003A0E                     RB6PPS          equ	14862	;# 
  6455   003A0F                     RB7PPS          equ	14863	;# 
  6456   003A10                     RC0PPS          equ	14864	;# 
  6457   003A11                     RC1PPS          equ	14865	;# 
  6458   003A12                     RC2PPS          equ	14866	;# 
  6459   003A13                     RC3PPS          equ	14867	;# 
  6460   003A14                     RC4PPS          equ	14868	;# 
  6461   003A15                     RC5PPS          equ	14869	;# 
  6462   003A16                     RC6PPS          equ	14870	;# 
  6463   003A17                     RC7PPS          equ	14871	;# 
  6464   003A18                     RD0PPS          equ	14872	;# 
  6465   003A19                     RD1PPS          equ	14873	;# 
  6466   003A1A                     RD2PPS          equ	14874	;# 
  6467   003A1B                     RD3PPS          equ	14875	;# 
  6468   003A1C                     RD4PPS          equ	14876	;# 
  6469   003A1D                     RD5PPS          equ	14877	;# 
  6470   003A1E                     RD6PPS          equ	14878	;# 
  6471   003A1F                     RD7PPS          equ	14879	;# 
  6472   003A20                     RE0PPS          equ	14880	;# 
  6473   003A21                     RE1PPS          equ	14881	;# 
  6474   003A22                     RE2PPS          equ	14882	;# 
  6475   003A28                     RF0PPS          equ	14888	;# 
  6476   003A29                     RF1PPS          equ	14889	;# 
  6477   003A2A                     RF2PPS          equ	14890	;# 
  6478   003A2B                     RF3PPS          equ	14891	;# 
  6479   003A2C                     RF4PPS          equ	14892	;# 
  6480   003A2D                     RF5PPS          equ	14893	;# 
  6481   003A2E                     RF6PPS          equ	14894	;# 
  6482   003A2F                     RF7PPS          equ	14895	;# 
  6483   003A40                     ANSELA          equ	14912	;# 
  6484   003A41                     WPUA            equ	14913	;# 
  6485   003A42                     ODCONA          equ	14914	;# 
  6486   003A43                     SLRCONA         equ	14915	;# 
  6487   003A44                     INLVLA          equ	14916	;# 
  6488   003A45                     IOCAP           equ	14917	;# 
  6489   003A46                     IOCAN           equ	14918	;# 
  6490   003A47                     IOCAF           equ	14919	;# 
  6491   003A50                     ANSELB          equ	14928	;# 
  6492   003A51                     WPUB            equ	14929	;# 
  6493   003A52                     ODCONB          equ	14930	;# 
  6494   003A53                     SLRCONB         equ	14931	;# 
  6495   003A54                     INLVLB          equ	14932	;# 
  6496   003A55                     IOCBP           equ	14933	;# 
  6497   003A56                     IOCBN           equ	14934	;# 
  6498   003A57                     IOCBF           equ	14935	;# 
  6499   003A5A                     RB1I2C          equ	14938	;# 
  6500   003A5B                     RB2I2C          equ	14939	;# 
  6501   003A60                     ANSELC          equ	14944	;# 
  6502   003A61                     WPUC            equ	14945	;# 
  6503   003A62                     ODCONC          equ	14946	;# 
  6504   003A63                     SLRCONC         equ	14947	;# 
  6505   003A64                     INLVLC          equ	14948	;# 
  6506   003A65                     IOCCP           equ	14949	;# 
  6507   003A66                     IOCCN           equ	14950	;# 
  6508   003A67                     IOCCF           equ	14951	;# 
  6509   003A6A                     RC3I2C          equ	14954	;# 
  6510   003A6B                     RC4I2C          equ	14955	;# 
  6511   003A70                     ANSELD          equ	14960	;# 
  6512   003A71                     WPUD            equ	14961	;# 
  6513   003A72                     ODCOND          equ	14962	;# 
  6514   003A73                     SLRCOND         equ	14963	;# 
  6515   003A74                     INLVLD          equ	14964	;# 
  6516   003A7A                     RD0I2C          equ	14970	;# 
  6517   003A7B                     RD1I2C          equ	14971	;# 
  6518   003A80                     ANSELE          equ	14976	;# 
  6519   003A81                     WPUE            equ	14977	;# 
  6520   003A82                     ODCONE          equ	14978	;# 
  6521   003A83                     SLRCONE         equ	14979	;# 
  6522   003A84                     INLVLE          equ	14980	;# 
  6523   003A85                     IOCEP           equ	14981	;# 
  6524   003A86                     IOCEN           equ	14982	;# 
  6525   003A87                     IOCEF           equ	14983	;# 
  6526   003A90                     ANSELF          equ	14992	;# 
  6527   003A91                     WPUF            equ	14993	;# 
  6528   003A92                     ODCONF          equ	14994	;# 
  6529   003A93                     SLRCONF         equ	14995	;# 
  6530   003A94                     INLVLF          equ	14996	;# 
  6531   003ABF                     PPSLOCK         equ	15039	;# 
  6532   003AC0                     INT0PPS         equ	15040	;# 
  6533   003AC1                     INT1PPS         equ	15041	;# 
  6534   003AC2                     INT2PPS         equ	15042	;# 
  6535   003AC3                     T0CKIPPS        equ	15043	;# 
  6536   003AC4                     T1CKIPPS        equ	15044	;# 
  6537   003AC5                     T1GPPS          equ	15045	;# 
  6538   003AC6                     T3CKIPPS        equ	15046	;# 
  6539   003AC7                     T3GPPS          equ	15047	;# 
  6540   003AC8                     T5CKIPPS        equ	15048	;# 
  6541   003AC9                     T5GPPS          equ	15049	;# 
  6542   003ACA                     T2INPPS         equ	15050	;# 
  6543   003ACB                     T4INPPS         equ	15051	;# 
  6544   003ACC                     T6INPPS         equ	15052	;# 
  6545   003ACD                     CCP1PPS         equ	15053	;# 
  6546   003ACE                     CCP2PPS         equ	15054	;# 
  6547   003ACF                     CCP3PPS         equ	15055	;# 
  6548   003AD0                     CCP4PPS         equ	15056	;# 
  6549   003AD1                     SMT1WINPPS      equ	15057	;# 
  6550   003AD2                     SMT1SIGPPS      equ	15058	;# 
  6551   003AD3                     CWG1INPPS       equ	15059	;# 
  6552   003AD4                     CWG2INPPS       equ	15060	;# 
  6553   003AD5                     CWG3INPPS       equ	15061	;# 
  6554   003AD6                     MD1CARLPPS      equ	15062	;# 
  6555   003AD7                     MD1CARHPPS      equ	15063	;# 
  6556   003AD8                     MD1SRCPPS       equ	15064	;# 
  6557   003AD9                     CLCIN0PPS       equ	15065	;# 
  6558   003ADA                     CLCIN1PPS       equ	15066	;# 
  6559   003ADB                     CLCIN2PPS       equ	15067	;# 
  6560   003ADC                     CLCIN3PPS       equ	15068	;# 
  6561   003ADD                     ADACTPPS        equ	15069	;# 
  6562   003ADE                     SPI1SCKPPS      equ	15070	;# 
  6563   003ADF                     SPI1SDIPPS      equ	15071	;# 
  6564   003AE0                     SPI1SSPPS       equ	15072	;# 
  6565   003AE1                     I2C1SCLPPS      equ	15073	;# 
  6566   003AE2                     I2C1SDAPPS      equ	15074	;# 
  6567   003AE3                     I2C2SCLPPS      equ	15075	;# 
  6568   003AE4                     I2C2SDAPPS      equ	15076	;# 
  6569   003AE5                     U1RXPPS         equ	15077	;# 
  6570   003AE6                     U1CTSPPS        equ	15078	;# 
  6571   003AE8                     U2RXPPS         equ	15080	;# 
  6572   003AE9                     U2CTSPPS        equ	15081	;# 
  6573   003BC9                     DMA2BUF         equ	15305	;# 
  6574   003BCA                     DMA2DCNT        equ	15306	;# 
  6575   003BCA                     DMA2DCNTL       equ	15306	;# 
  6576   003BCB                     DMA2DCNTH       equ	15307	;# 
  6577   003BCC                     DMA2DPTR        equ	15308	;# 
  6578   003BCC                     DMA2DPTRL       equ	15308	;# 
  6579   003BCD                     DMA2DPTRH       equ	15309	;# 
  6580   003BCE                     DMA2DSZ         equ	15310	;# 
  6581   003BCE                     DMA2DSZL        equ	15310	;# 
  6582   003BCF                     DMA2DSZH        equ	15311	;# 
  6583   003BD0                     DMA2DSA         equ	15312	;# 
  6584   003BD0                     DMA2DSAL        equ	15312	;# 
  6585   003BD1                     DMA2DSAH        equ	15313	;# 
  6586   003BD2                     DMA2SCNT        equ	15314	;# 
  6587   003BD2                     DMA2SCNTL       equ	15314	;# 
  6588   003BD3                     DMA2SCNTH       equ	15315	;# 
  6589   003BD4                     DMA2SPTR        equ	15316	;# 
  6590   003BD4                     DMA2SPTRL       equ	15316	;# 
  6591   003BD5                     DMA2SPTRH       equ	15317	;# 
  6592   003BD6                     DMA2SPTRU       equ	15318	;# 
  6593   003BD7                     DMA2SSZ         equ	15319	;# 
  6594   003BD7                     DMA2SSZL        equ	15319	;# 
  6595   003BD8                     DMA2SSZH        equ	15320	;# 
  6596   003BD9                     DMA2SSA         equ	15321	;# 
  6597   003BD9                     DMA2SSAL        equ	15321	;# 
  6598   003BDA                     DMA2SSAH        equ	15322	;# 
  6599   003BDB                     DMA2SSAU        equ	15323	;# 
  6600   003BDC                     DMA2CON0        equ	15324	;# 
  6601   003BDD                     DMA2CON1        equ	15325	;# 
  6602   003BDE                     DMA2AIRQ        equ	15326	;# 
  6603   003BDF                     DMA2SIRQ        equ	15327	;# 
  6604   003BE9                     DMA1BUF         equ	15337	;# 
  6605   003BEA                     DMA1DCNT        equ	15338	;# 
  6606   003BEA                     DMA1DCNTL       equ	15338	;# 
  6607   003BEB                     DMA1DCNTH       equ	15339	;# 
  6608   003BEC                     DMA1DPTR        equ	15340	;# 
  6609   003BEC                     DMA1DPTRL       equ	15340	;# 
  6610   003BED                     DMA1DPTRH       equ	15341	;# 
  6611   003BEE                     DMA1DSZ         equ	15342	;# 
  6612   003BEE                     DMA1DSZL        equ	15342	;# 
  6613   003BEF                     DMA1DSZH        equ	15343	;# 
  6614   003BF0                     DMA1DSA         equ	15344	;# 
  6615   003BF0                     DMA1DSAL        equ	15344	;# 
  6616   003BF1                     DMA1DSAH        equ	15345	;# 
  6617   003BF2                     DMA1SCNT        equ	15346	;# 
  6618   003BF2                     DMA1SCNTL       equ	15346	;# 
  6619   003BF3                     DMA1SCNTH       equ	15347	;# 
  6620   003BF4                     DMA1SPTR        equ	15348	;# 
  6621   003BF4                     DMA1SPTRL       equ	15348	;# 
  6622   003BF5                     DMA1SPTRH       equ	15349	;# 
  6623   003BF6                     DMA1SPTRU       equ	15350	;# 
  6624   003BF7                     DMA1SSZ         equ	15351	;# 
  6625   003BF7                     DMA1SSZL        equ	15351	;# 
  6626   003BF8                     DMA1SSZH        equ	15352	;# 
  6627   003BF9                     DMA1SSA         equ	15353	;# 
  6628   003BF9                     DMA1SSAL        equ	15353	;# 
  6629   003BFA                     DMA1SSAH        equ	15354	;# 
  6630   003BFB                     DMA1SSAU        equ	15355	;# 
  6631   003BFC                     DMA1CON0        equ	15356	;# 
  6632   003BFD                     DMA1CON1        equ	15357	;# 
  6633   003BFE                     DMA1AIRQ        equ	15358	;# 
  6634   003BFF                     DMA1SIRQ        equ	15359	;# 
  6635   003C56                     CLC4CON         equ	15446	;# 
  6636   003C57                     CLC4POL         equ	15447	;# 
  6637   003C58                     CLC4SEL0        equ	15448	;# 
  6638   003C59                     CLC4SEL1        equ	15449	;# 
  6639   003C5A                     CLC4SEL2        equ	15450	;# 
  6640   003C5B                     CLC4SEL3        equ	15451	;# 
  6641   003C5C                     CLC4GLS0        equ	15452	;# 
  6642   003C5D                     CLC4GLS1        equ	15453	;# 
  6643   003C5E                     CLC4GLS2        equ	15454	;# 
  6644   003C5F                     CLC4GLS3        equ	15455	;# 
  6645   003C60                     CLC3CON         equ	15456	;# 
  6646   003C61                     CLC3POL         equ	15457	;# 
  6647   003C62                     CLC3SEL0        equ	15458	;# 
  6648   003C63                     CLC3SEL1        equ	15459	;# 
  6649   003C64                     CLC3SEL2        equ	15460	;# 
  6650   003C65                     CLC3SEL3        equ	15461	;# 
  6651   003C66                     CLC3GLS0        equ	15462	;# 
  6652   003C67                     CLC3GLS1        equ	15463	;# 
  6653   003C68                     CLC3GLS2        equ	15464	;# 
  6654   003C69                     CLC3GLS3        equ	15465	;# 
  6655   003C6A                     CLC2CON         equ	15466	;# 
  6656   003C6B                     CLC2POL         equ	15467	;# 
  6657   003C6C                     CLC2SEL0        equ	15468	;# 
  6658   003C6D                     CLC2SEL1        equ	15469	;# 
  6659   003C6E                     CLC2SEL2        equ	15470	;# 
  6660   003C6F                     CLC2SEL3        equ	15471	;# 
  6661   003C70                     CLC2GLS0        equ	15472	;# 
  6662   003C71                     CLC2GLS1        equ	15473	;# 
  6663   003C72                     CLC2GLS2        equ	15474	;# 
  6664   003C73                     CLC2GLS3        equ	15475	;# 
  6665   003C74                     CLC1CON         equ	15476	;# 
  6666   003C75                     CLC1POL         equ	15477	;# 
  6667   003C76                     CLC1SEL0        equ	15478	;# 
  6668   003C77                     CLC1SEL1        equ	15479	;# 
  6669   003C78                     CLC1SEL2        equ	15480	;# 
  6670   003C79                     CLC1SEL3        equ	15481	;# 
  6671   003C7A                     CLC1GLS0        equ	15482	;# 
  6672   003C7B                     CLC1GLS1        equ	15483	;# 
  6673   003C7C                     CLC1GLS2        equ	15484	;# 
  6674   003C7D                     CLC1GLS3        equ	15485	;# 
  6675   003C7E                     CLCDATA0        equ	15486	;# 
  6676   003CE5                     CLKRCON         equ	15589	;# 
  6677   003CE6                     CLKRCLK         equ	15590	;# 
  6678   003CFA                     MD1CON0         equ	15610	;# 
  6679   003CFB                     MD1CON1         equ	15611	;# 
  6680   003CFC                     MD1SRC          equ	15612	;# 
  6681   003CFD                     MD1CARL         equ	15613	;# 
  6682   003CFE                     MD1CARH         equ	15614	;# 
  6683   003D10                     SPI1RXB         equ	15632	;# 
  6684   003D11                     SPI1TXB         equ	15633	;# 
  6685   003D12                     SPI1TCNT        equ	15634	;# 
  6686   003D12                     SPI1TCNTL       equ	15634	;# 
  6687   003D13                     SPI1TCNTH       equ	15635	;# 
  6688   003D14                     SPI1CON0        equ	15636	;# 
  6689   003D15                     SPI1CON1        equ	15637	;# 
  6690   003D16                     SPI1CON2        equ	15638	;# 
  6691   003D17                     SPI1STATUS      equ	15639	;# 
  6692   003D18                     SPI1TWIDTH      equ	15640	;# 
  6693   003D19                     SPI1BAUD        equ	15641	;# 
  6694   003D1A                     SPI1INTF        equ	15642	;# 
  6695   003D1B                     SPI1INTE        equ	15643	;# 
  6696   003D1C                     SPI1CLK         equ	15644	;# 
  6697   003D54                     I2C2RXB         equ	15700	;# 
  6698   003D55                     I2C2TXB         equ	15701	;# 
  6699   003D56                     I2C2CNT         equ	15702	;# 
  6700   003D57                     I2C2ADB0        equ	15703	;# 
  6701   003D58                     I2C2ADB1        equ	15704	;# 
  6702   003D59                     I2C2ADR0        equ	15705	;# 
  6703   003D5A                     I2C2ADR1        equ	15706	;# 
  6704   003D5B                     I2C2ADR2        equ	15707	;# 
  6705   003D5C                     I2C2ADR3        equ	15708	;# 
  6706   003D5D                     I2C2CON0        equ	15709	;# 
  6707   003D5E                     I2C2CON1        equ	15710	;# 
  6708   003D5F                     I2C2CON2        equ	15711	;# 
  6709   003D60                     I2C2ERR         equ	15712	;# 
  6710   003D61                     I2C2STAT0       equ	15713	;# 
  6711   003D62                     I2C2STAT1       equ	15714	;# 
  6712   003D63                     I2C2PIR         equ	15715	;# 
  6713   003D64                     I2C2PIE         equ	15716	;# 
  6714   003D65                     I2C2CLK         equ	15717	;# 
  6715   003D66                     I2C2BTO         equ	15718	;# 
  6716   003D6A                     I2C1RXB         equ	15722	;# 
  6717   003D6B                     I2C1TXB         equ	15723	;# 
  6718   003D6C                     I2C1CNT         equ	15724	;# 
  6719   003D6D                     I2C1ADB0        equ	15725	;# 
  6720   003D6E                     I2C1ADB1        equ	15726	;# 
  6721   003D6F                     I2C1ADR0        equ	15727	;# 
  6722   003D70                     I2C1ADR1        equ	15728	;# 
  6723   003D71                     I2C1ADR2        equ	15729	;# 
  6724   003D72                     I2C1ADR3        equ	15730	;# 
  6725   003D73                     I2C1CON0        equ	15731	;# 
  6726   003D74                     I2C1CON1        equ	15732	;# 
  6727   003D75                     I2C1CON2        equ	15733	;# 
  6728   003D76                     I2C1ERR         equ	15734	;# 
  6729   003D77                     I2C1STAT0       equ	15735	;# 
  6730   003D78                     I2C1STAT1       equ	15736	;# 
  6731   003D79                     I2C1PIR         equ	15737	;# 
  6732   003D7A                     I2C1PIE         equ	15738	;# 
  6733   003D7B                     I2C1CLK         equ	15739	;# 
  6734   003D7C                     I2C1BTO         equ	15740	;# 
  6735   003DD0                     U2RXB           equ	15824	;# 
  6736   003DD0                     U2RXBL          equ	15824	;# 
  6737   003DD2                     U2TXB           equ	15826	;# 
  6738   003DD2                     U2TXBL          equ	15826	;# 
  6739   003DD4                     U2P1            equ	15828	;# 
  6740   003DD4                     U2P1L           equ	15828	;# 
  6741   003DD6                     U2P2            equ	15830	;# 
  6742   003DD6                     U2P2L           equ	15830	;# 
  6743   003DD8                     U2P3            equ	15832	;# 
  6744   003DD8                     U2P3L           equ	15832	;# 
  6745   003DDA                     U2CON0          equ	15834	;# 
  6746   003DDB                     U2CON1          equ	15835	;# 
  6747   003DDC                     U2CON2          equ	15836	;# 
  6748   003DDD                     U2BRG           equ	15837	;# 
  6749   003DDD                     U2BRGL          equ	15837	;# 
  6750   003DDE                     U2BRGH          equ	15838	;# 
  6751   003DDF                     U2FIFO          equ	15839	;# 
  6752   003DE0                     U2UIR           equ	15840	;# 
  6753   003DE1                     U2ERRIR         equ	15841	;# 
  6754   003DE2                     U2ERRIE         equ	15842	;# 
  6755   003DE8                     U1RXB           equ	15848	;# 
  6756   003DE8                     U1RXBL          equ	15848	;# 
  6757   003DE9                     U1RXCHK         equ	15849	;# 
  6758   003DEA                     U1TXB           equ	15850	;# 
  6759   003DEA                     U1TXBL          equ	15850	;# 
  6760   003DEB                     U1TXCHK         equ	15851	;# 
  6761   003DEC                     U1P1            equ	15852	;# 
  6762   003DEC                     U1P1L           equ	15852	;# 
  6763   003DED                     U1P1H           equ	15853	;# 
  6764   003DEE                     U1P2            equ	15854	;# 
  6765   003DEE                     U1P2L           equ	15854	;# 
  6766   003DEF                     U1P2H           equ	15855	;# 
  6767   003DF0                     U1P3            equ	15856	;# 
  6768   003DF0                     U1P3L           equ	15856	;# 
  6769   003DF1                     U1P3H           equ	15857	;# 
  6770   003DF2                     U1CON0          equ	15858	;# 
  6771   003DF3                     U1CON1          equ	15859	;# 
  6772   003DF4                     U1CON2          equ	15860	;# 
  6773   003DF5                     U1BRG           equ	15861	;# 
  6774   003DF5                     U1BRGL          equ	15861	;# 
  6775   003DF6                     U1BRGH          equ	15862	;# 
  6776   003DF7                     U1FIFO          equ	15863	;# 
  6777   003DF8                     U1UIR           equ	15864	;# 
  6778   003DF9                     U1ERRIR         equ	15865	;# 
  6779   003DFA                     U1ERRIE         equ	15866	;# 
  6780   003E9C                     DAC1CON1        equ	16028	;# 
  6781   003E9E                     DAC1CON0        equ	16030	;# 
  6782   003EB8                     CM2CON0         equ	16056	;# 
  6783   003EB9                     CM2CON1         equ	16057	;# 
  6784   003EBA                     CM2NCH          equ	16058	;# 
  6785   003EBB                     CM2PCH          equ	16059	;# 
  6786   003EBC                     CM1CON0         equ	16060	;# 
  6787   003EBD                     CM1CON1         equ	16061	;# 
  6788   003EBE                     CM1NCH          equ	16062	;# 
  6789   003EBF                     CM1PCH          equ	16063	;# 
  6790   003EC0                     CMOUT           equ	16064	;# 
  6791   003EC1                     FVRCON          equ	16065	;# 
  6792   003EC3                     ZCDCON          equ	16067	;# 
  6793   003EC9                     HLVDCON0        equ	16073	;# 
  6794   003ECA                     HLVDCON1        equ	16074	;# 
  6795   003ED7                     ADCP            equ	16087	;# 
  6796   003EDE                     ADLTH           equ	16094	;# 
  6797   003EDE                     ADLTHL          equ	16094	;# 
  6798   003EDF                     ADLTHH          equ	16095	;# 
  6799   003EE0                     ADUTH           equ	16096	;# 
  6800   003EE0                     ADUTHL          equ	16096	;# 
  6801   003EE1                     ADUTHH          equ	16097	;# 
  6802   003EE2                     ADERR           equ	16098	;# 
  6803   003EE2                     ADERRL          equ	16098	;# 
  6804   003EE3                     ADERRH          equ	16099	;# 
  6805   003EE4                     ADSTPT          equ	16100	;# 
  6806   003EE4                     ADSTPTL         equ	16100	;# 
  6807   003EE5                     ADSTPTH         equ	16101	;# 
  6808   003EE6                     ADFLTR          equ	16102	;# 
  6809   003EE6                     ADFLTRL         equ	16102	;# 
  6810   003EE7                     ADFLTRH         equ	16103	;# 
  6811   003EE8                     ADACC           equ	16104	;# 
  6812   003EE8                     ADACCL          equ	16104	;# 
  6813   003EE9                     ADACCH          equ	16105	;# 
  6814   003EEA                     ADACCU          equ	16106	;# 
  6815   003EEB                     ADCNT           equ	16107	;# 
  6816   003EEC                     ADRPT           equ	16108	;# 
  6817   003EED                     ADPREV          equ	16109	;# 
  6818   003EED                     ADPREVL         equ	16109	;# 
  6819   003EEE                     ADPREVH         equ	16110	;# 
  6820   003EEF                     ADRES           equ	16111	;# 
  6821   003EEF                     ADRESL          equ	16111	;# 
  6822   003EF0                     ADRESH          equ	16112	;# 
  6823   003EF1                     ADPCH           equ	16113	;# 
  6824   003EF3                     ADACQ           equ	16115	;# 
  6825   003EF3                     ADACQL          equ	16115	;# 
  6826   003EF4                     ADACQH          equ	16116	;# 
  6827   003EF5                     ADCAP           equ	16117	;# 
  6828   003EF6                     ADPRE           equ	16118	;# 
  6829   003EF6                     ADPREL          equ	16118	;# 
  6830   003EF7                     ADPREH          equ	16119	;# 
  6831   003EF8                     ADCON0          equ	16120	;# 
  6832   003EF9                     ADCON1          equ	16121	;# 
  6833   003EFA                     ADCON2          equ	16122	;# 
  6834   003EFB                     ADCON3          equ	16123	;# 
  6835   003EFC                     ADSTAT          equ	16124	;# 
  6836   003EFD                     ADREF           equ	16125	;# 
  6837   003EFE                     ADACT           equ	16126	;# 
  6838   003EFF                     ADCLK           equ	16127	;# 
  6839   003F12                     SMT1TMR         equ	16146	;# 
  6840   003F12                     SMT1TMRL        equ	16146	;# 
  6841   003F13                     SMT1TMRH        equ	16147	;# 
  6842   003F14                     SMT1TMRU        equ	16148	;# 
  6843   003F15                     SMT1CPR         equ	16149	;# 
  6844   003F15                     SMT1CPRL        equ	16149	;# 
  6845   003F16                     SMT1CPRH        equ	16150	;# 
  6846   003F17                     SMT1CPRU        equ	16151	;# 
  6847   003F18                     SMT1CPW         equ	16152	;# 
  6848   003F18                     SMT1CPWL        equ	16152	;# 
  6849   003F19                     SMT1CPWH        equ	16153	;# 
  6850   003F1A                     SMT1CPWU        equ	16154	;# 
  6851   003F1B                     SMT1PR          equ	16155	;# 
  6852   003F1B                     SMT1PRL         equ	16155	;# 
  6853   003F1C                     SMT1PRH         equ	16156	;# 
  6854   003F1D                     SMT1PRU         equ	16157	;# 
  6855   003F1E                     SMT1CON0        equ	16158	;# 
  6856   003F1F                     SMT1CON1        equ	16159	;# 
  6857   003F20                     SMT1STAT        equ	16160	;# 
  6858   003F21                     SMT1CLK         equ	16161	;# 
  6859   003F22                     SMT1SIG         equ	16162	;# 
  6860   003F23                     SMT1WIN         equ	16163	;# 
  6861   003F38                     NCO1ACC         equ	16184	;# 
  6862   003F38                     NCO1ACCL        equ	16184	;# 
  6863   003F39                     NCO1ACCH        equ	16185	;# 
  6864   003F3A                     NCO1ACCU        equ	16186	;# 
  6865   003F3B                     NCO1INC         equ	16187	;# 
  6866   003F3B                     NCO1INCL        equ	16187	;# 
  6867   003F3C                     NCO1INCH        equ	16188	;# 
  6868   003F3D                     NCO1INCU        equ	16189	;# 
  6869   003F3E                     NCO1CON         equ	16190	;# 
  6870   003F3F                     NCO1CLK         equ	16191	;# 
  6871   003F40                     CWG3CLK         equ	16192	;# 
  6872   003F40                     CWG3CLKCON      equ	16192	;# 
  6873   003F41                     CWG3ISM         equ	16193	;# 
  6874   003F41                     CWG3DAT         equ	16193	;# 
  6875   003F42                     CWG3DBR         equ	16194	;# 
  6876   003F43                     CWG3DBF         equ	16195	;# 
  6877   003F44                     CWG3CON0        equ	16196	;# 
  6878   003F45                     CWG3CON1        equ	16197	;# 
  6879   003F46                     CWG3AS0         equ	16198	;# 
  6880   003F47                     CWG3AS1         equ	16199	;# 
  6881   003F48                     CWG3STR         equ	16200	;# 
  6882   003F49                     CWG2CLK         equ	16201	;# 
  6883   003F49                     CWG2CLKCON      equ	16201	;# 
  6884   003F4A                     CWG2ISM         equ	16202	;# 
  6885   003F4A                     CWG2DAT         equ	16202	;# 
  6886   003F4B                     CWG2DBR         equ	16203	;# 
  6887   003F4C                     CWG2DBF         equ	16204	;# 
  6888   003F4D                     CWG2CON0        equ	16205	;# 
  6889   003F4E                     CWG2CON1        equ	16206	;# 
  6890   003F4F                     CWG2AS0         equ	16207	;# 
  6891   003F50                     CWG2AS1         equ	16208	;# 
  6892   003F51                     CWG2STR         equ	16209	;# 
  6893   003F52                     CWG1CLK         equ	16210	;# 
  6894   003F52                     CWG1CLKCON      equ	16210	;# 
  6895   003F53                     CWG1ISM         equ	16211	;# 
  6896   003F53                     CWG1DAT         equ	16211	;# 
  6897   003F54                     CWG1DBR         equ	16212	;# 
  6898   003F55                     CWG1DBF         equ	16213	;# 
  6899   003F56                     CWG1CON0        equ	16214	;# 
  6900   003F57                     CWG1CON1        equ	16215	;# 
  6901   003F58                     CWG1AS0         equ	16216	;# 
  6902   003F59                     CWG1AS1         equ	16217	;# 
  6903   003F5A                     CWG1STR         equ	16218	;# 
  6904   003F5E                     CCPTMRS0        equ	16222	;# 
  6905   003F5F                     CCPTMRS1        equ	16223	;# 
  6906   003F60                     PWM8DC          equ	16224	;# 
  6907   003F60                     PWM8DCL         equ	16224	;# 
  6908   003F61                     PWM8DCH         equ	16225	;# 
  6909   003F62                     PWM8CON         equ	16226	;# 
  6910   003F64                     PWM7DC          equ	16228	;# 
  6911   003F64                     PWM7DCL         equ	16228	;# 
  6912   003F65                     PWM7DCH         equ	16229	;# 
  6913   003F66                     PWM7CON         equ	16230	;# 
  6914   003F68                     PWM6DC          equ	16232	;# 
  6915   003F68                     PWM6DCL         equ	16232	;# 
  6916   003F69                     PWM6DCH         equ	16233	;# 
  6917   003F6A                     PWM6CON         equ	16234	;# 
  6918   003F6C                     PWM5DC          equ	16236	;# 
  6919   003F6C                     PWM5DCL         equ	16236	;# 
  6920   003F6D                     PWM5DCH         equ	16237	;# 
  6921   003F6E                     PWM5CON         equ	16238	;# 
  6922   003F70                     CCPR4           equ	16240	;# 
  6923   003F70                     CCPR4L          equ	16240	;# 
  6924   003F71                     CCPR4H          equ	16241	;# 
  6925   003F72                     CCP4CON         equ	16242	;# 
  6926   003F73                     CCP4CAP         equ	16243	;# 
  6927   003F74                     CCPR3           equ	16244	;# 
  6928   003F74                     CCPR3L          equ	16244	;# 
  6929   003F75                     CCPR3H          equ	16245	;# 
  6930   003F76                     CCP3CON         equ	16246	;# 
  6931   003F77                     CCP3CAP         equ	16247	;# 
  6932   003F78                     CCPR2           equ	16248	;# 
  6933   003F78                     CCPR2L          equ	16248	;# 
  6934   003F79                     CCPR2H          equ	16249	;# 
  6935   003F7A                     CCP2CON         equ	16250	;# 
  6936   003F7B                     CCP2CAP         equ	16251	;# 
  6937   003F7C                     CCPR1           equ	16252	;# 
  6938   003F7C                     CCPR1L          equ	16252	;# 
  6939   003F7D                     CCPR1H          equ	16253	;# 
  6940   003F7E                     CCP1CON         equ	16254	;# 
  6941   003F7F                     CCP1CAP         equ	16255	;# 
  6942   003F92                     T6TMR           equ	16274	;# 
  6943   003F92                     TMR6            equ	16274	;# 
  6944   003F93                     T6PR            equ	16275	;# 
  6945   003F93                     PR6             equ	16275	;# 
  6946   003F94                     T6CON           equ	16276	;# 
  6947   003F95                     T6HLT           equ	16277	;# 
  6948   003F96                     T6CLKCON        equ	16278	;# 
  6949   003F96                     T6CLK           equ	16278	;# 
  6950   003F97                     T6RST           equ	16279	;# 
  6951   003F98                     TMR5            equ	16280	;# 
  6952   003F98                     TMR5L           equ	16280	;# 
  6953   003F99                     TMR5H           equ	16281	;# 
  6954   003F9A                     T5CON           equ	16282	;# 
  6955   003F9A                     TMR5CON         equ	16282	;# 
  6956   003F9B                     T5GCON          equ	16283	;# 
  6957   003F9B                     TMR5GCON        equ	16283	;# 
  6958   003F9C                     T5GATE          equ	16284	;# 
  6959   003F9C                     TMR5GATE        equ	16284	;# 
  6960   003F9D                     T5CLK           equ	16285	;# 
  6961   003F9D                     TMR5CLK         equ	16285	;# 
  6962   003F9D                     PR5             equ	16285	;# 
  6963   003F9E                     T4TMR           equ	16286	;# 
  6964   003F9E                     TMR4            equ	16286	;# 
  6965   003F9F                     T4PR            equ	16287	;# 
  6966   003F9F                     PR4             equ	16287	;# 
  6967   003FA0                     T4CON           equ	16288	;# 
  6968   003FA1                     T4HLT           equ	16289	;# 
  6969   003FA2                     T4CLKCON        equ	16290	;# 
  6970   003FA2                     T4CLK           equ	16290	;# 
  6971   003FA3                     T4RST           equ	16291	;# 
  6972   003FA4                     TMR3            equ	16292	;# 
  6973   003FA4                     TMR3L           equ	16292	;# 
  6974   003FA5                     TMR3H           equ	16293	;# 
  6975   003FA6                     T3CON           equ	16294	;# 
  6976   003FA6                     TMR3CON         equ	16294	;# 
  6977   003FA7                     T3GCON          equ	16295	;# 
  6978   003FA7                     TMR3GCON        equ	16295	;# 
  6979   003FA8                     T3GATE          equ	16296	;# 
  6980   003FA8                     TMR3GATE        equ	16296	;# 
  6981   003FA9                     T3CLK           equ	16297	;# 
  6982   003FA9                     TMR3CLK         equ	16297	;# 
  6983   003FA9                     PR3             equ	16297	;# 
  6984   003FAA                     T2TMR           equ	16298	;# 
  6985   003FAA                     TMR2            equ	16298	;# 
  6986   003FAB                     T2PR            equ	16299	;# 
  6987   003FAB                     PR2             equ	16299	;# 
  6988   003FAC                     T2CON           equ	16300	;# 
  6989   003FAD                     T2HLT           equ	16301	;# 
  6990   003FAE                     T2CLKCON        equ	16302	;# 
  6991   003FAE                     T2CLK           equ	16302	;# 
  6992   003FAF                     T2RST           equ	16303	;# 
  6993   003FB0                     TMR1            equ	16304	;# 
  6994   003FB0                     TMR1L           equ	16304	;# 
  6995   003FB1                     TMR1H           equ	16305	;# 
  6996   003FB2                     T1CON           equ	16306	;# 
  6997   003FB2                     TMR1CON         equ	16306	;# 
  6998   003FB3                     T1GCON          equ	16307	;# 
  6999   003FB3                     TMR1GCON        equ	16307	;# 
  7000   003FB4                     T1GATE          equ	16308	;# 
  7001   003FB4                     TMR1GATE        equ	16308	;# 
  7002   003FB5                     T1CLK           equ	16309	;# 
  7003   003FB5                     TMR1CLK         equ	16309	;# 
  7004   003FB5                     PR1             equ	16309	;# 
  7005   003FB6                     TMR0L           equ	16310	;# 
  7006   003FB6                     TMR0            equ	16310	;# 
  7007   003FB7                     TMR0H           equ	16311	;# 
  7008   003FB7                     PR0             equ	16311	;# 
  7009   003FB8                     T0CON0          equ	16312	;# 
  7010   003FB9                     T0CON1          equ	16313	;# 
  7011   003FBA                     LATA            equ	16314	;# 
  7012   003FBB                     LATB            equ	16315	;# 
  7013   003FBC                     LATC            equ	16316	;# 
  7014   003FBD                     LATD            equ	16317	;# 
  7015   003FBE                     LATE            equ	16318	;# 
  7016   003FBF                     LATF            equ	16319	;# 
  7017   003FC2                     TRISA           equ	16322	;# 
  7018   003FC3                     TRISB           equ	16323	;# 
  7019   003FC4                     TRISC           equ	16324	;# 
  7020   003FC5                     TRISD           equ	16325	;# 
  7021   003FC6                     TRISE           equ	16326	;# 
  7022   003FC7                     TRISF           equ	16327	;# 
  7023   003FCA                     PORTA           equ	16330	;# 
  7024   003FCB                     PORTB           equ	16331	;# 
  7025   003FCC                     PORTC           equ	16332	;# 
  7026   003FCD                     PORTD           equ	16333	;# 
  7027   003FCE                     PORTE           equ	16334	;# 
  7028   003FCF                     PORTF           equ	16335	;# 
  7029   003FD2                     INTCON0         equ	16338	;# 
  7030   003FD3                     INTCON1         equ	16339	;# 
  7031   003FD4                     IVTLOCK         equ	16340	;# 
  7032   003FD5                     IVTBASE         equ	16341	;# 
  7033   003FD5                     IVTBASEL        equ	16341	;# 
  7034   003FD6                     IVTBASEH        equ	16342	;# 
  7035   003FD7                     IVTBASEU        equ	16343	;# 
  7036   003FD8                     STATUS          equ	16344	;# 
  7037   003FD9                     FSR2            equ	16345	;# 
  7038   003FD9                     FSR2L           equ	16345	;# 
  7039   003FDA                     FSR2H           equ	16346	;# 
  7040   003FDB                     PLUSW2          equ	16347	;# 
  7041   003FDC                     PREINC2         equ	16348	;# 
  7042   003FDD                     POSTDEC2        equ	16349	;# 
  7043   003FDE                     POSTINC2        equ	16350	;# 
  7044   003FDF                     INDF2           equ	16351	;# 
  7045   003FE0                     BSR             equ	16352	;# 
  7046   003FE1                     FSR1            equ	16353	;# 
  7047   003FE1                     FSR1L           equ	16353	;# 
  7048   003FE2                     FSR1H           equ	16354	;# 
  7049   003FE3                     PLUSW1          equ	16355	;# 
  7050   003FE4                     PREINC1         equ	16356	;# 
  7051   003FE5                     POSTDEC1        equ	16357	;# 
  7052   003FE6                     POSTINC1        equ	16358	;# 
  7053   003FE7                     INDF1           equ	16359	;# 
  7054   003FE8                     WREG            equ	16360	;# 
  7055   003FE9                     FSR0            equ	16361	;# 
  7056   003FE9                     FSR0L           equ	16361	;# 
  7057   003FEA                     FSR0H           equ	16362	;# 
  7058   003FEB                     PLUSW0          equ	16363	;# 
  7059   003FEC                     PREINC0         equ	16364	;# 
  7060   003FED                     POSTDEC0        equ	16365	;# 
  7061   003FEE                     POSTINC0        equ	16366	;# 
  7062   003FEF                     INDF0           equ	16367	;# 
  7063   003FF0                     PCON0           equ	16368	;# 
  7064   003FF1                     PCON1           equ	16369	;# 
  7065   003FF3                     PROD            equ	16371	;# 
  7066   003FF3                     PRODL           equ	16371	;# 
  7067   003FF4                     PRODH           equ	16372	;# 
  7068   003FF5                     TABLAT          equ	16373	;# 
  7069   003FF6                     TBLPTR          equ	16374	;# 
  7070   003FF6                     TBLPTRL         equ	16374	;# 
  7071   003FF7                     TBLPTRH         equ	16375	;# 
  7072   003FF8                     TBLPTRU         equ	16376	;# 
  7073   003FF9                     PCLAT           equ	16377	;# 
  7074   003FF9                     PCL             equ	16377	;# 
  7075   003FFA                     PCLATH          equ	16378	;# 
  7076   003FFB                     PCLATU          equ	16379	;# 
  7077   003FFC                     STKPTR          equ	16380	;# 
  7078   003FFD                     TOS             equ	16381	;# 
  7079   003FFD                     TOSL            equ	16381	;# 
  7080   003FFE                     TOSH            equ	16382	;# 
  7081   003FFF                     TOSU            equ	16383	;# 
  7082   003880                     STATUS_CSHAD    equ	14464	;# 
  7083   003881                     WREG_CSHAD      equ	14465	;# 
  7084   003882                     BSR_CSHAD       equ	14466	;# 
  7085   003883                     SHADCON         equ	14467	;# 
  7086   003884                     STATUS_SHAD     equ	14468	;# 
  7087   003885                     WREG_SHAD       equ	14469	;# 
  7088   003886                     BSR_SHAD        equ	14470	;# 
  7089   003887                     PCLATH_SHAD     equ	14471	;# 
  7090   003888                     PCLATU_SHAD     equ	14472	;# 
  7091   003889                     FSR0SH          equ	14473	;# 
  7092   003889                     FSR0L_SHAD      equ	14473	;# 
  7093   00388A                     FSR0H_SHAD      equ	14474	;# 
  7094   00388B                     FSR1SH          equ	14475	;# 
  7095   00388B                     FSR1L_SHAD      equ	14475	;# 
  7096   00388C                     FSR1H_SHAD      equ	14476	;# 
  7097   00388D                     FSR2SH          equ	14477	;# 
  7098   00388D                     FSR2L_SHAD      equ	14477	;# 
  7099   00388E                     FSR2H_SHAD      equ	14478	;# 
  7100   00388F                     PRODSH          equ	14479	;# 
  7101   00388F                     PRODL_SHAD      equ	14479	;# 
  7102   003890                     PRODH_SHAD      equ	14480	;# 
  7103   00389D                     IVTADL          equ	14493	;# 
  7104   00389E                     IVTADH          equ	14494	;# 
  7105   00389F                     IVTADU          equ	14495	;# 
  7106   00395B                     WDTCON0         equ	14683	;# 
  7107   00395C                     WDTCON1         equ	14684	;# 
  7108   00395D                     WDTPSL          equ	14685	;# 
  7109   00395E                     WDTPSH          equ	14686	;# 
  7110   00395F                     WDTTMR          equ	14687	;# 
  7111   003960                     CRCDATA         equ	14688	;# 
  7112   003960                     CRCDATL         equ	14688	;# 
  7113   003961                     CRCDATH         equ	14689	;# 
  7114   003962                     CRCACC          equ	14690	;# 
  7115   003962                     CRCACCL         equ	14690	;# 
  7116   003963                     CRCACCH         equ	14691	;# 
  7117   003964                     CRCSHFT         equ	14692	;# 
  7118   003964                     CRCSHIFTL       equ	14692	;# 
  7119   003965                     CRCSHIFTH       equ	14693	;# 
  7120   003966                     CRCXOR          equ	14694	;# 
  7121   003966                     CRCXORL         equ	14694	;# 
  7122   003967                     CRCXORH         equ	14695	;# 
  7123   003968                     CRCCON0         equ	14696	;# 
  7124   003969                     CRCCON1         equ	14697	;# 
  7125   003976                     SCANLADR        equ	14710	;# 
  7126   003976                     SCANLADRL       equ	14710	;# 
  7127   003977                     SCANLADRH       equ	14711	;# 
  7128   003978                     SCANLADRU       equ	14712	;# 
  7129   003979                     SCANHADR        equ	14713	;# 
  7130   003979                     SCANHADRL       equ	14713	;# 
  7131   00397A                     SCANHADRH       equ	14714	;# 
  7132   00397B                     SCANHADRU       equ	14715	;# 
  7133   00397C                     SCANCON0        equ	14716	;# 
  7134   00397D                     SCANTRIG        equ	14717	;# 
  7135   003980                     IPR0            equ	14720	;# 
  7136   003981                     IPR1            equ	14721	;# 
  7137   003982                     IPR2            equ	14722	;# 
  7138   003983                     IPR3            equ	14723	;# 
  7139   003984                     IPR4            equ	14724	;# 
  7140   003985                     IPR5            equ	14725	;# 
  7141   003986                     IPR6            equ	14726	;# 
  7142   003987                     IPR7            equ	14727	;# 
  7143   003988                     IPR8            equ	14728	;# 
  7144   003989                     IPR9            equ	14729	;# 
  7145   00398A                     IPR10           equ	14730	;# 
  7146   003990                     PIE0            equ	14736	;# 
  7147   003991                     PIE1            equ	14737	;# 
  7148   003992                     PIE2            equ	14738	;# 
  7149   003993                     PIE3            equ	14739	;# 
  7150   003994                     PIE4            equ	14740	;# 
  7151   003995                     PIE5            equ	14741	;# 
  7152   003996                     PIE6            equ	14742	;# 
  7153   003997                     PIE7            equ	14743	;# 
  7154   003998                     PIE8            equ	14744	;# 
  7155   003999                     PIE9            equ	14745	;# 
  7156   00399A                     PIE10           equ	14746	;# 
  7157   0039A0                     PIR0            equ	14752	;# 
  7158   0039A1                     PIR1            equ	14753	;# 
  7159   0039A2                     PIR2            equ	14754	;# 
  7160   0039A3                     PIR3            equ	14755	;# 
  7161   0039A4                     PIR4            equ	14756	;# 
  7162   0039A5                     PIR5            equ	14757	;# 
  7163   0039A6                     PIR6            equ	14758	;# 
  7164   0039A7                     PIR7            equ	14759	;# 
  7165   0039A8                     PIR8            equ	14760	;# 
  7166   0039A9                     PIR9            equ	14761	;# 
  7167   0039AA                     PIR10           equ	14762	;# 
  7168   0039C0                     PMD0            equ	14784	;# 
  7169   0039C1                     PMD1            equ	14785	;# 
  7170   0039C2                     PMD2            equ	14786	;# 
  7171   0039C3                     PMD3            equ	14787	;# 
  7172   0039C4                     PMD4            equ	14788	;# 
  7173   0039C5                     PMD5            equ	14789	;# 
  7174   0039C6                     PMD6            equ	14790	;# 
  7175   0039C7                     PMD7            equ	14791	;# 
  7176   0039D0                     BORCON          equ	14800	;# 
  7177   0039D1                     VREGCON         equ	14801	;# 
  7178   0039D8                     CPUDOZE         equ	14808	;# 
  7179   0039D9                     OSCCON1         equ	14809	;# 
  7180   0039DA                     OSCCON2         equ	14810	;# 
  7181   0039DB                     OSCCON3         equ	14811	;# 
  7182   0039DC                     OSCSTAT         equ	14812	;# 
  7183   0039DC                     OSCSTAT1        equ	14812	;# 
  7184   0039DD                     OSCEN           equ	14813	;# 
  7185   0039DE                     OSCTUNE         equ	14814	;# 
  7186   0039DF                     OSCFRQ          equ	14815	;# 
  7187   0039E0                     NVMADRL         equ	14816	;# 
  7188   0039E1                     NVMADRH         equ	14817	;# 
  7189   0039E3                     NVMDAT          equ	14819	;# 
  7190   0039E5                     NVMCON1         equ	14821	;# 
  7191   0039E6                     NVMCON2         equ	14822	;# 
  7192   0039EF                     PRLOCK          equ	14831	;# 
  7193   0039F1                     ISRPR           equ	14833	;# 
  7194   0039F2                     MAINPR          equ	14834	;# 
  7195   0039F3                     DMA1PR          equ	14835	;# 
  7196   0039F4                     DMA2PR          equ	14836	;# 
  7197   0039F7                     SCANPR          equ	14839	;# 
  7198   003A00                     RA0PPS          equ	14848	;# 
  7199   003A01                     RA1PPS          equ	14849	;# 
  7200   003A02                     RA2PPS          equ	14850	;# 
  7201   003A03                     RA3PPS          equ	14851	;# 
  7202   003A04                     RA4PPS          equ	14852	;# 
  7203   003A05                     RA5PPS          equ	14853	;# 
  7204   003A06                     RA6PPS          equ	14854	;# 
  7205   003A07                     RA7PPS          equ	14855	;# 
  7206   003A08                     RB0PPS          equ	14856	;# 
  7207   003A09                     RB1PPS          equ	14857	;# 
  7208   003A0A                     RB2PPS          equ	14858	;# 
  7209   003A0B                     RB3PPS          equ	14859	;# 
  7210   003A0C                     RB4PPS          equ	14860	;# 
  7211   003A0D                     RB5PPS          equ	14861	;# 
  7212   003A0E                     RB6PPS          equ	14862	;# 
  7213   003A0F                     RB7PPS          equ	14863	;# 
  7214   003A10                     RC0PPS          equ	14864	;# 
  7215   003A11                     RC1PPS          equ	14865	;# 
  7216   003A12                     RC2PPS          equ	14866	;# 
  7217   003A13                     RC3PPS          equ	14867	;# 
  7218   003A14                     RC4PPS          equ	14868	;# 
  7219   003A15                     RC5PPS          equ	14869	;# 
  7220   003A16                     RC6PPS          equ	14870	;# 
  7221   003A17                     RC7PPS          equ	14871	;# 
  7222   003A18                     RD0PPS          equ	14872	;# 
  7223   003A19                     RD1PPS          equ	14873	;# 
  7224   003A1A                     RD2PPS          equ	14874	;# 
  7225   003A1B                     RD3PPS          equ	14875	;# 
  7226   003A1C                     RD4PPS          equ	14876	;# 
  7227   003A1D                     RD5PPS          equ	14877	;# 
  7228   003A1E                     RD6PPS          equ	14878	;# 
  7229   003A1F                     RD7PPS          equ	14879	;# 
  7230   003A20                     RE0PPS          equ	14880	;# 
  7231   003A21                     RE1PPS          equ	14881	;# 
  7232   003A22                     RE2PPS          equ	14882	;# 
  7233   003A28                     RF0PPS          equ	14888	;# 
  7234   003A29                     RF1PPS          equ	14889	;# 
  7235   003A2A                     RF2PPS          equ	14890	;# 
  7236   003A2B                     RF3PPS          equ	14891	;# 
  7237   003A2C                     RF4PPS          equ	14892	;# 
  7238   003A2D                     RF5PPS          equ	14893	;# 
  7239   003A2E                     RF6PPS          equ	14894	;# 
  7240   003A2F                     RF7PPS          equ	14895	;# 
  7241   003A40                     ANSELA          equ	14912	;# 
  7242   003A41                     WPUA            equ	14913	;# 
  7243   003A42                     ODCONA          equ	14914	;# 
  7244   003A43                     SLRCONA         equ	14915	;# 
  7245   003A44                     INLVLA          equ	14916	;# 
  7246   003A45                     IOCAP           equ	14917	;# 
  7247   003A46                     IOCAN           equ	14918	;# 
  7248   003A47                     IOCAF           equ	14919	;# 
  7249   003A50                     ANSELB          equ	14928	;# 
  7250   003A51                     WPUB            equ	14929	;# 
  7251   003A52                     ODCONB          equ	14930	;# 
  7252   003A53                     SLRCONB         equ	14931	;# 
  7253   003A54                     INLVLB          equ	14932	;# 
  7254   003A55                     IOCBP           equ	14933	;# 
  7255   003A56                     IOCBN           equ	14934	;# 
  7256   003A57                     IOCBF           equ	14935	;# 
  7257   003A5A                     RB1I2C          equ	14938	;# 
  7258   003A5B                     RB2I2C          equ	14939	;# 
  7259   003A60                     ANSELC          equ	14944	;# 
  7260   003A61                     WPUC            equ	14945	;# 
  7261   003A62                     ODCONC          equ	14946	;# 
  7262   003A63                     SLRCONC         equ	14947	;# 
  7263   003A64                     INLVLC          equ	14948	;# 
  7264   003A65                     IOCCP           equ	14949	;# 
  7265   003A66                     IOCCN           equ	14950	;# 
  7266   003A67                     IOCCF           equ	14951	;# 
  7267   003A6A                     RC3I2C          equ	14954	;# 
  7268   003A6B                     RC4I2C          equ	14955	;# 
  7269   003A70                     ANSELD          equ	14960	;# 
  7270   003A71                     WPUD            equ	14961	;# 
  7271   003A72                     ODCOND          equ	14962	;# 
  7272   003A73                     SLRCOND         equ	14963	;# 
  7273   003A74                     INLVLD          equ	14964	;# 
  7274   003A7A                     RD0I2C          equ	14970	;# 
  7275   003A7B                     RD1I2C          equ	14971	;# 
  7276   003A80                     ANSELE          equ	14976	;# 
  7277   003A81                     WPUE            equ	14977	;# 
  7278   003A82                     ODCONE          equ	14978	;# 
  7279   003A83                     SLRCONE         equ	14979	;# 
  7280   003A84                     INLVLE          equ	14980	;# 
  7281   003A85                     IOCEP           equ	14981	;# 
  7282   003A86                     IOCEN           equ	14982	;# 
  7283   003A87                     IOCEF           equ	14983	;# 
  7284   003A90                     ANSELF          equ	14992	;# 
  7285   003A91                     WPUF            equ	14993	;# 
  7286   003A92                     ODCONF          equ	14994	;# 
  7287   003A93                     SLRCONF         equ	14995	;# 
  7288   003A94                     INLVLF          equ	14996	;# 
  7289   003ABF                     PPSLOCK         equ	15039	;# 
  7290   003AC0                     INT0PPS         equ	15040	;# 
  7291   003AC1                     INT1PPS         equ	15041	;# 
  7292   003AC2                     INT2PPS         equ	15042	;# 
  7293   003AC3                     T0CKIPPS        equ	15043	;# 
  7294   003AC4                     T1CKIPPS        equ	15044	;# 
  7295   003AC5                     T1GPPS          equ	15045	;# 
  7296   003AC6                     T3CKIPPS        equ	15046	;# 
  7297   003AC7                     T3GPPS          equ	15047	;# 
  7298   003AC8                     T5CKIPPS        equ	15048	;# 
  7299   003AC9                     T5GPPS          equ	15049	;# 
  7300   003ACA                     T2INPPS         equ	15050	;# 
  7301   003ACB                     T4INPPS         equ	15051	;# 
  7302   003ACC                     T6INPPS         equ	15052	;# 
  7303   003ACD                     CCP1PPS         equ	15053	;# 
  7304   003ACE                     CCP2PPS         equ	15054	;# 
  7305   003ACF                     CCP3PPS         equ	15055	;# 
  7306   003AD0                     CCP4PPS         equ	15056	;# 
  7307   003AD1                     SMT1WINPPS      equ	15057	;# 
  7308   003AD2                     SMT1SIGPPS      equ	15058	;# 
  7309   003AD3                     CWG1INPPS       equ	15059	;# 
  7310   003AD4                     CWG2INPPS       equ	15060	;# 
  7311   003AD5                     CWG3INPPS       equ	15061	;# 
  7312   003AD6                     MD1CARLPPS      equ	15062	;# 
  7313   003AD7                     MD1CARHPPS      equ	15063	;# 
  7314   003AD8                     MD1SRCPPS       equ	15064	;# 
  7315   003AD9                     CLCIN0PPS       equ	15065	;# 
  7316   003ADA                     CLCIN1PPS       equ	15066	;# 
  7317   003ADB                     CLCIN2PPS       equ	15067	;# 
  7318   003ADC                     CLCIN3PPS       equ	15068	;# 
  7319   003ADD                     ADACTPPS        equ	15069	;# 
  7320   003ADE                     SPI1SCKPPS      equ	15070	;# 
  7321   003ADF                     SPI1SDIPPS      equ	15071	;# 
  7322   003AE0                     SPI1SSPPS       equ	15072	;# 
  7323   003AE1                     I2C1SCLPPS      equ	15073	;# 
  7324   003AE2                     I2C1SDAPPS      equ	15074	;# 
  7325   003AE3                     I2C2SCLPPS      equ	15075	;# 
  7326   003AE4                     I2C2SDAPPS      equ	15076	;# 
  7327   003AE5                     U1RXPPS         equ	15077	;# 
  7328   003AE6                     U1CTSPPS        equ	15078	;# 
  7329   003AE8                     U2RXPPS         equ	15080	;# 
  7330   003AE9                     U2CTSPPS        equ	15081	;# 
  7331   003BC9                     DMA2BUF         equ	15305	;# 
  7332   003BCA                     DMA2DCNT        equ	15306	;# 
  7333   003BCA                     DMA2DCNTL       equ	15306	;# 
  7334   003BCB                     DMA2DCNTH       equ	15307	;# 
  7335   003BCC                     DMA2DPTR        equ	15308	;# 
  7336   003BCC                     DMA2DPTRL       equ	15308	;# 
  7337   003BCD                     DMA2DPTRH       equ	15309	;# 
  7338   003BCE                     DMA2DSZ         equ	15310	;# 
  7339   003BCE                     DMA2DSZL        equ	15310	;# 
  7340   003BCF                     DMA2DSZH        equ	15311	;# 
  7341   003BD0                     DMA2DSA         equ	15312	;# 
  7342   003BD0                     DMA2DSAL        equ	15312	;# 
  7343   003BD1                     DMA2DSAH        equ	15313	;# 
  7344   003BD2                     DMA2SCNT        equ	15314	;# 
  7345   003BD2                     DMA2SCNTL       equ	15314	;# 
  7346   003BD3                     DMA2SCNTH       equ	15315	;# 
  7347   003BD4                     DMA2SPTR        equ	15316	;# 
  7348   003BD4                     DMA2SPTRL       equ	15316	;# 
  7349   003BD5                     DMA2SPTRH       equ	15317	;# 
  7350   003BD6                     DMA2SPTRU       equ	15318	;# 
  7351   003BD7                     DMA2SSZ         equ	15319	;# 
  7352   003BD7                     DMA2SSZL        equ	15319	;# 
  7353   003BD8                     DMA2SSZH        equ	15320	;# 
  7354   003BD9                     DMA2SSA         equ	15321	;# 
  7355   003BD9                     DMA2SSAL        equ	15321	;# 
  7356   003BDA                     DMA2SSAH        equ	15322	;# 
  7357   003BDB                     DMA2SSAU        equ	15323	;# 
  7358   003BDC                     DMA2CON0        equ	15324	;# 
  7359   003BDD                     DMA2CON1        equ	15325	;# 
  7360   003BDE                     DMA2AIRQ        equ	15326	;# 
  7361   003BDF                     DMA2SIRQ        equ	15327	;# 
  7362   003BE9                     DMA1BUF         equ	15337	;# 
  7363   003BEA                     DMA1DCNT        equ	15338	;# 
  7364   003BEA                     DMA1DCNTL       equ	15338	;# 
  7365   003BEB                     DMA1DCNTH       equ	15339	;# 
  7366   003BEC                     DMA1DPTR        equ	15340	;# 
  7367   003BEC                     DMA1DPTRL       equ	15340	;# 
  7368   003BED                     DMA1DPTRH       equ	15341	;# 
  7369   003BEE                     DMA1DSZ         equ	15342	;# 
  7370   003BEE                     DMA1DSZL        equ	15342	;# 
  7371   003BEF                     DMA1DSZH        equ	15343	;# 
  7372   003BF0                     DMA1DSA         equ	15344	;# 
  7373   003BF0                     DMA1DSAL        equ	15344	;# 
  7374   003BF1                     DMA1DSAH        equ	15345	;# 
  7375   003BF2                     DMA1SCNT        equ	15346	;# 
  7376   003BF2                     DMA1SCNTL       equ	15346	;# 
  7377   003BF3                     DMA1SCNTH       equ	15347	;# 
  7378   003BF4                     DMA1SPTR        equ	15348	;# 
  7379   003BF4                     DMA1SPTRL       equ	15348	;# 
  7380   003BF5                     DMA1SPTRH       equ	15349	;# 
  7381   003BF6                     DMA1SPTRU       equ	15350	;# 
  7382   003BF7                     DMA1SSZ         equ	15351	;# 
  7383   003BF7                     DMA1SSZL        equ	15351	;# 
  7384   003BF8                     DMA1SSZH        equ	15352	;# 
  7385   003BF9                     DMA1SSA         equ	15353	;# 
  7386   003BF9                     DMA1SSAL        equ	15353	;# 
  7387   003BFA                     DMA1SSAH        equ	15354	;# 
  7388   003BFB                     DMA1SSAU        equ	15355	;# 
  7389   003BFC                     DMA1CON0        equ	15356	;# 
  7390   003BFD                     DMA1CON1        equ	15357	;# 
  7391   003BFE                     DMA1AIRQ        equ	15358	;# 
  7392   003BFF                     DMA1SIRQ        equ	15359	;# 
  7393   003C56                     CLC4CON         equ	15446	;# 
  7394   003C57                     CLC4POL         equ	15447	;# 
  7395   003C58                     CLC4SEL0        equ	15448	;# 
  7396   003C59                     CLC4SEL1        equ	15449	;# 
  7397   003C5A                     CLC4SEL2        equ	15450	;# 
  7398   003C5B                     CLC4SEL3        equ	15451	;# 
  7399   003C5C                     CLC4GLS0        equ	15452	;# 
  7400   003C5D                     CLC4GLS1        equ	15453	;# 
  7401   003C5E                     CLC4GLS2        equ	15454	;# 
  7402   003C5F                     CLC4GLS3        equ	15455	;# 
  7403   003C60                     CLC3CON         equ	15456	;# 
  7404   003C61                     CLC3POL         equ	15457	;# 
  7405   003C62                     CLC3SEL0        equ	15458	;# 
  7406   003C63                     CLC3SEL1        equ	15459	;# 
  7407   003C64                     CLC3SEL2        equ	15460	;# 
  7408   003C65                     CLC3SEL3        equ	15461	;# 
  7409   003C66                     CLC3GLS0        equ	15462	;# 
  7410   003C67                     CLC3GLS1        equ	15463	;# 
  7411   003C68                     CLC3GLS2        equ	15464	;# 
  7412   003C69                     CLC3GLS3        equ	15465	;# 
  7413   003C6A                     CLC2CON         equ	15466	;# 
  7414   003C6B                     CLC2POL         equ	15467	;# 
  7415   003C6C                     CLC2SEL0        equ	15468	;# 
  7416   003C6D                     CLC2SEL1        equ	15469	;# 
  7417   003C6E                     CLC2SEL2        equ	15470	;# 
  7418   003C6F                     CLC2SEL3        equ	15471	;# 
  7419   003C70                     CLC2GLS0        equ	15472	;# 
  7420   003C71                     CLC2GLS1        equ	15473	;# 
  7421   003C72                     CLC2GLS2        equ	15474	;# 
  7422   003C73                     CLC2GLS3        equ	15475	;# 
  7423   003C74                     CLC1CON         equ	15476	;# 
  7424   003C75                     CLC1POL         equ	15477	;# 
  7425   003C76                     CLC1SEL0        equ	15478	;# 
  7426   003C77                     CLC1SEL1        equ	15479	;# 
  7427   003C78                     CLC1SEL2        equ	15480	;# 
  7428   003C79                     CLC1SEL3        equ	15481	;# 
  7429   003C7A                     CLC1GLS0        equ	15482	;# 
  7430   003C7B                     CLC1GLS1        equ	15483	;# 
  7431   003C7C                     CLC1GLS2        equ	15484	;# 
  7432   003C7D                     CLC1GLS3        equ	15485	;# 
  7433   003C7E                     CLCDATA0        equ	15486	;# 
  7434   003CE5                     CLKRCON         equ	15589	;# 
  7435   003CE6                     CLKRCLK         equ	15590	;# 
  7436   003CFA                     MD1CON0         equ	15610	;# 
  7437   003CFB                     MD1CON1         equ	15611	;# 
  7438   003CFC                     MD1SRC          equ	15612	;# 
  7439   003CFD                     MD1CARL         equ	15613	;# 
  7440   003CFE                     MD1CARH         equ	15614	;# 
  7441   003D10                     SPI1RXB         equ	15632	;# 
  7442   003D11                     SPI1TXB         equ	15633	;# 
  7443   003D12                     SPI1TCNT        equ	15634	;# 
  7444   003D12                     SPI1TCNTL       equ	15634	;# 
  7445   003D13                     SPI1TCNTH       equ	15635	;# 
  7446   003D14                     SPI1CON0        equ	15636	;# 
  7447   003D15                     SPI1CON1        equ	15637	;# 
  7448   003D16                     SPI1CON2        equ	15638	;# 
  7449   003D17                     SPI1STATUS      equ	15639	;# 
  7450   003D18                     SPI1TWIDTH      equ	15640	;# 
  7451   003D19                     SPI1BAUD        equ	15641	;# 
  7452   003D1A                     SPI1INTF        equ	15642	;# 
  7453   003D1B                     SPI1INTE        equ	15643	;# 
  7454   003D1C                     SPI1CLK         equ	15644	;# 
  7455   003D54                     I2C2RXB         equ	15700	;# 
  7456   003D55                     I2C2TXB         equ	15701	;# 
  7457   003D56                     I2C2CNT         equ	15702	;# 
  7458   003D57                     I2C2ADB0        equ	15703	;# 
  7459   003D58                     I2C2ADB1        equ	15704	;# 
  7460   003D59                     I2C2ADR0        equ	15705	;# 
  7461   003D5A                     I2C2ADR1        equ	15706	;# 
  7462   003D5B                     I2C2ADR2        equ	15707	;# 
  7463   003D5C                     I2C2ADR3        equ	15708	;# 
  7464   003D5D                     I2C2CON0        equ	15709	;# 
  7465   003D5E                     I2C2CON1        equ	15710	;# 
  7466   003D5F                     I2C2CON2        equ	15711	;# 
  7467   003D60                     I2C2ERR         equ	15712	;# 
  7468   003D61                     I2C2STAT0       equ	15713	;# 
  7469   003D62                     I2C2STAT1       equ	15714	;# 
  7470   003D63                     I2C2PIR         equ	15715	;# 
  7471   003D64                     I2C2PIE         equ	15716	;# 
  7472   003D65                     I2C2CLK         equ	15717	;# 
  7473   003D66                     I2C2BTO         equ	15718	;# 
  7474   003D6A                     I2C1RXB         equ	15722	;# 
  7475   003D6B                     I2C1TXB         equ	15723	;# 
  7476   003D6C                     I2C1CNT         equ	15724	;# 
  7477   003D6D                     I2C1ADB0        equ	15725	;# 
  7478   003D6E                     I2C1ADB1        equ	15726	;# 
  7479   003D6F                     I2C1ADR0        equ	15727	;# 
  7480   003D70                     I2C1ADR1        equ	15728	;# 
  7481   003D71                     I2C1ADR2        equ	15729	;# 
  7482   003D72                     I2C1ADR3        equ	15730	;# 
  7483   003D73                     I2C1CON0        equ	15731	;# 
  7484   003D74                     I2C1CON1        equ	15732	;# 
  7485   003D75                     I2C1CON2        equ	15733	;# 
  7486   003D76                     I2C1ERR         equ	15734	;# 
  7487   003D77                     I2C1STAT0       equ	15735	;# 
  7488   003D78                     I2C1STAT1       equ	15736	;# 
  7489   003D79                     I2C1PIR         equ	15737	;# 
  7490   003D7A                     I2C1PIE         equ	15738	;# 
  7491   003D7B                     I2C1CLK         equ	15739	;# 
  7492   003D7C                     I2C1BTO         equ	15740	;# 
  7493   003DD0                     U2RXB           equ	15824	;# 
  7494   003DD0                     U2RXBL          equ	15824	;# 
  7495   003DD2                     U2TXB           equ	15826	;# 
  7496   003DD2                     U2TXBL          equ	15826	;# 
  7497   003DD4                     U2P1            equ	15828	;# 
  7498   003DD4                     U2P1L           equ	15828	;# 
  7499   003DD6                     U2P2            equ	15830	;# 
  7500   003DD6                     U2P2L           equ	15830	;# 
  7501   003DD8                     U2P3            equ	15832	;# 
  7502   003DD8                     U2P3L           equ	15832	;# 
  7503   003DDA                     U2CON0          equ	15834	;# 
  7504   003DDB                     U2CON1          equ	15835	;# 
  7505   003DDC                     U2CON2          equ	15836	;# 
  7506   003DDD                     U2BRG           equ	15837	;# 
  7507   003DDD                     U2BRGL          equ	15837	;# 
  7508   003DDE                     U2BRGH          equ	15838	;# 
  7509   003DDF                     U2FIFO          equ	15839	;# 
  7510   003DE0                     U2UIR           equ	15840	;# 
  7511   003DE1                     U2ERRIR         equ	15841	;# 
  7512   003DE2                     U2ERRIE         equ	15842	;# 
  7513   003DE8                     U1RXB           equ	15848	;# 
  7514   003DE8                     U1RXBL          equ	15848	;# 
  7515   003DE9                     U1RXCHK         equ	15849	;# 
  7516   003DEA                     U1TXB           equ	15850	;# 
  7517   003DEA                     U1TXBL          equ	15850	;# 
  7518   003DEB                     U1TXCHK         equ	15851	;# 
  7519   003DEC                     U1P1            equ	15852	;# 
  7520   003DEC                     U1P1L           equ	15852	;# 
  7521   003DED                     U1P1H           equ	15853	;# 
  7522   003DEE                     U1P2            equ	15854	;# 
  7523   003DEE                     U1P2L           equ	15854	;# 
  7524   003DEF                     U1P2H           equ	15855	;# 
  7525   003DF0                     U1P3            equ	15856	;# 
  7526   003DF0                     U1P3L           equ	15856	;# 
  7527   003DF1                     U1P3H           equ	15857	;# 
  7528   003DF2                     U1CON0          equ	15858	;# 
  7529   003DF3                     U1CON1          equ	15859	;# 
  7530   003DF4                     U1CON2          equ	15860	;# 
  7531   003DF5                     U1BRG           equ	15861	;# 
  7532   003DF5                     U1BRGL          equ	15861	;# 
  7533   003DF6                     U1BRGH          equ	15862	;# 
  7534   003DF7                     U1FIFO          equ	15863	;# 
  7535   003DF8                     U1UIR           equ	15864	;# 
  7536   003DF9                     U1ERRIR         equ	15865	;# 
  7537   003DFA                     U1ERRIE         equ	15866	;# 
  7538   003E9C                     DAC1CON1        equ	16028	;# 
  7539   003E9E                     DAC1CON0        equ	16030	;# 
  7540   003EB8                     CM2CON0         equ	16056	;# 
  7541   003EB9                     CM2CON1         equ	16057	;# 
  7542   003EBA                     CM2NCH          equ	16058	;# 
  7543   003EBB                     CM2PCH          equ	16059	;# 
  7544   003EBC                     CM1CON0         equ	16060	;# 
  7545   003EBD                     CM1CON1         equ	16061	;# 
  7546   003EBE                     CM1NCH          equ	16062	;# 
  7547   003EBF                     CM1PCH          equ	16063	;# 
  7548   003EC0                     CMOUT           equ	16064	;# 
  7549   003EC1                     FVRCON          equ	16065	;# 
  7550   003EC3                     ZCDCON          equ	16067	;# 
  7551   003EC9                     HLVDCON0        equ	16073	;# 
  7552   003ECA                     HLVDCON1        equ	16074	;# 
  7553   003ED7                     ADCP            equ	16087	;# 
  7554   003EDE                     ADLTH           equ	16094	;# 
  7555   003EDE                     ADLTHL          equ	16094	;# 
  7556   003EDF                     ADLTHH          equ	16095	;# 
  7557   003EE0                     ADUTH           equ	16096	;# 
  7558   003EE0                     ADUTHL          equ	16096	;# 
  7559   003EE1                     ADUTHH          equ	16097	;# 
  7560   003EE2                     ADERR           equ	16098	;# 
  7561   003EE2                     ADERRL          equ	16098	;# 
  7562   003EE3                     ADERRH          equ	16099	;# 
  7563   003EE4                     ADSTPT          equ	16100	;# 
  7564   003EE4                     ADSTPTL         equ	16100	;# 
  7565   003EE5                     ADSTPTH         equ	16101	;# 
  7566   003EE6                     ADFLTR          equ	16102	;# 
  7567   003EE6                     ADFLTRL         equ	16102	;# 
  7568   003EE7                     ADFLTRH         equ	16103	;# 
  7569   003EE8                     ADACC           equ	16104	;# 
  7570   003EE8                     ADACCL          equ	16104	;# 
  7571   003EE9                     ADACCH          equ	16105	;# 
  7572   003EEA                     ADACCU          equ	16106	;# 
  7573   003EEB                     ADCNT           equ	16107	;# 
  7574   003EEC                     ADRPT           equ	16108	;# 
  7575   003EED                     ADPREV          equ	16109	;# 
  7576   003EED                     ADPREVL         equ	16109	;# 
  7577   003EEE                     ADPREVH         equ	16110	;# 
  7578   003EEF                     ADRES           equ	16111	;# 
  7579   003EEF                     ADRESL          equ	16111	;# 
  7580   003EF0                     ADRESH          equ	16112	;# 
  7581   003EF1                     ADPCH           equ	16113	;# 
  7582   003EF3                     ADACQ           equ	16115	;# 
  7583   003EF3                     ADACQL          equ	16115	;# 
  7584   003EF4                     ADACQH          equ	16116	;# 
  7585   003EF5                     ADCAP           equ	16117	;# 
  7586   003EF6                     ADPRE           equ	16118	;# 
  7587   003EF6                     ADPREL          equ	16118	;# 
  7588   003EF7                     ADPREH          equ	16119	;# 
  7589   003EF8                     ADCON0          equ	16120	;# 
  7590   003EF9                     ADCON1          equ	16121	;# 
  7591   003EFA                     ADCON2          equ	16122	;# 
  7592   003EFB                     ADCON3          equ	16123	;# 
  7593   003EFC                     ADSTAT          equ	16124	;# 
  7594   003EFD                     ADREF           equ	16125	;# 
  7595   003EFE                     ADACT           equ	16126	;# 
  7596   003EFF                     ADCLK           equ	16127	;# 
  7597   003F12                     SMT1TMR         equ	16146	;# 
  7598   003F12                     SMT1TMRL        equ	16146	;# 
  7599   003F13                     SMT1TMRH        equ	16147	;# 
  7600   003F14                     SMT1TMRU        equ	16148	;# 
  7601   003F15                     SMT1CPR         equ	16149	;# 
  7602   003F15                     SMT1CPRL        equ	16149	;# 
  7603   003F16                     SMT1CPRH        equ	16150	;# 
  7604   003F17                     SMT1CPRU        equ	16151	;# 
  7605   003F18                     SMT1CPW         equ	16152	;# 
  7606   003F18                     SMT1CPWL        equ	16152	;# 
  7607   003F19                     SMT1CPWH        equ	16153	;# 
  7608   003F1A                     SMT1CPWU        equ	16154	;# 
  7609   003F1B                     SMT1PR          equ	16155	;# 
  7610   003F1B                     SMT1PRL         equ	16155	;# 
  7611   003F1C                     SMT1PRH         equ	16156	;# 
  7612   003F1D                     SMT1PRU         equ	16157	;# 
  7613   003F1E                     SMT1CON0        equ	16158	;# 
  7614   003F1F                     SMT1CON1        equ	16159	;# 
  7615   003F20                     SMT1STAT        equ	16160	;# 
  7616   003F21                     SMT1CLK         equ	16161	;# 
  7617   003F22                     SMT1SIG         equ	16162	;# 
  7618   003F23                     SMT1WIN         equ	16163	;# 
  7619   003F38                     NCO1ACC         equ	16184	;# 
  7620   003F38                     NCO1ACCL        equ	16184	;# 
  7621   003F39                     NCO1ACCH        equ	16185	;# 
  7622   003F3A                     NCO1ACCU        equ	16186	;# 
  7623   003F3B                     NCO1INC         equ	16187	;# 
  7624   003F3B                     NCO1INCL        equ	16187	;# 
  7625   003F3C                     NCO1INCH        equ	16188	;# 
  7626   003F3D                     NCO1INCU        equ	16189	;# 
  7627   003F3E                     NCO1CON         equ	16190	;# 
  7628   003F3F                     NCO1CLK         equ	16191	;# 
  7629   003F40                     CWG3CLK         equ	16192	;# 
  7630   003F40                     CWG3CLKCON      equ	16192	;# 
  7631   003F41                     CWG3ISM         equ	16193	;# 
  7632   003F41                     CWG3DAT         equ	16193	;# 
  7633   003F42                     CWG3DBR         equ	16194	;# 
  7634   003F43                     CWG3DBF         equ	16195	;# 
  7635   003F44                     CWG3CON0        equ	16196	;# 
  7636   003F45                     CWG3CON1        equ	16197	;# 
  7637   003F46                     CWG3AS0         equ	16198	;# 
  7638   003F47                     CWG3AS1         equ	16199	;# 
  7639   003F48                     CWG3STR         equ	16200	;# 
  7640   003F49                     CWG2CLK         equ	16201	;# 
  7641   003F49                     CWG2CLKCON      equ	16201	;# 
  7642   003F4A                     CWG2ISM         equ	16202	;# 
  7643   003F4A                     CWG2DAT         equ	16202	;# 
  7644   003F4B                     CWG2DBR         equ	16203	;# 
  7645   003F4C                     CWG2DBF         equ	16204	;# 
  7646   003F4D                     CWG2CON0        equ	16205	;# 
  7647   003F4E                     CWG2CON1        equ	16206	;# 
  7648   003F4F                     CWG2AS0         equ	16207	;# 
  7649   003F50                     CWG2AS1         equ	16208	;# 
  7650   003F51                     CWG2STR         equ	16209	;# 
  7651   003F52                     CWG1CLK         equ	16210	;# 
  7652   003F52                     CWG1CLKCON      equ	16210	;# 
  7653   003F53                     CWG1ISM         equ	16211	;# 
  7654   003F53                     CWG1DAT         equ	16211	;# 
  7655   003F54                     CWG1DBR         equ	16212	;# 
  7656   003F55                     CWG1DBF         equ	16213	;# 
  7657   003F56                     CWG1CON0        equ	16214	;# 
  7658   003F57                     CWG1CON1        equ	16215	;# 
  7659   003F58                     CWG1AS0         equ	16216	;# 
  7660   003F59                     CWG1AS1         equ	16217	;# 
  7661   003F5A                     CWG1STR         equ	16218	;# 
  7662   003F5E                     CCPTMRS0        equ	16222	;# 
  7663   003F5F                     CCPTMRS1        equ	16223	;# 
  7664   003F60                     PWM8DC          equ	16224	;# 
  7665   003F60                     PWM8DCL         equ	16224	;# 
  7666   003F61                     PWM8DCH         equ	16225	;# 
  7667   003F62                     PWM8CON         equ	16226	;# 
  7668   003F64                     PWM7DC          equ	16228	;# 
  7669   003F64                     PWM7DCL         equ	16228	;# 
  7670   003F65                     PWM7DCH         equ	16229	;# 
  7671   003F66                     PWM7CON         equ	16230	;# 
  7672   003F68                     PWM6DC          equ	16232	;# 
  7673   003F68                     PWM6DCL         equ	16232	;# 
  7674   003F69                     PWM6DCH         equ	16233	;# 
  7675   003F6A                     PWM6CON         equ	16234	;# 
  7676   003F6C                     PWM5DC          equ	16236	;# 
  7677   003F6C                     PWM5DCL         equ	16236	;# 
  7678   003F6D                     PWM5DCH         equ	16237	;# 
  7679   003F6E                     PWM5CON         equ	16238	;# 
  7680   003F70                     CCPR4           equ	16240	;# 
  7681   003F70                     CCPR4L          equ	16240	;# 
  7682   003F71                     CCPR4H          equ	16241	;# 
  7683   003F72                     CCP4CON         equ	16242	;# 
  7684   003F73                     CCP4CAP         equ	16243	;# 
  7685   003F74                     CCPR3           equ	16244	;# 
  7686   003F74                     CCPR3L          equ	16244	;# 
  7687   003F75                     CCPR3H          equ	16245	;# 
  7688   003F76                     CCP3CON         equ	16246	;# 
  7689   003F77                     CCP3CAP         equ	16247	;# 
  7690   003F78                     CCPR2           equ	16248	;# 
  7691   003F78                     CCPR2L          equ	16248	;# 
  7692   003F79                     CCPR2H          equ	16249	;# 
  7693   003F7A                     CCP2CON         equ	16250	;# 
  7694   003F7B                     CCP2CAP         equ	16251	;# 
  7695   003F7C                     CCPR1           equ	16252	;# 
  7696   003F7C                     CCPR1L          equ	16252	;# 
  7697   003F7D                     CCPR1H          equ	16253	;# 
  7698   003F7E                     CCP1CON         equ	16254	;# 
  7699   003F7F                     CCP1CAP         equ	16255	;# 
  7700   003F92                     T6TMR           equ	16274	;# 
  7701   003F92                     TMR6            equ	16274	;# 
  7702   003F93                     T6PR            equ	16275	;# 
  7703   003F93                     PR6             equ	16275	;# 
  7704   003F94                     T6CON           equ	16276	;# 
  7705   003F95                     T6HLT           equ	16277	;# 
  7706   003F96                     T6CLKCON        equ	16278	;# 
  7707   003F96                     T6CLK           equ	16278	;# 
  7708   003F97                     T6RST           equ	16279	;# 
  7709   003F98                     TMR5            equ	16280	;# 
  7710   003F98                     TMR5L           equ	16280	;# 
  7711   003F99                     TMR5H           equ	16281	;# 
  7712   003F9A                     T5CON           equ	16282	;# 
  7713   003F9A                     TMR5CON         equ	16282	;# 
  7714   003F9B                     T5GCON          equ	16283	;# 
  7715   003F9B                     TMR5GCON        equ	16283	;# 
  7716   003F9C                     T5GATE          equ	16284	;# 
  7717   003F9C                     TMR5GATE        equ	16284	;# 
  7718   003F9D                     T5CLK           equ	16285	;# 
  7719   003F9D                     TMR5CLK         equ	16285	;# 
  7720   003F9D                     PR5             equ	16285	;# 
  7721   003F9E                     T4TMR           equ	16286	;# 
  7722   003F9E                     TMR4            equ	16286	;# 
  7723   003F9F                     T4PR            equ	16287	;# 
  7724   003F9F                     PR4             equ	16287	;# 
  7725   003FA0                     T4CON           equ	16288	;# 
  7726   003FA1                     T4HLT           equ	16289	;# 
  7727   003FA2                     T4CLKCON        equ	16290	;# 
  7728   003FA2                     T4CLK           equ	16290	;# 
  7729   003FA3                     T4RST           equ	16291	;# 
  7730   003FA4                     TMR3            equ	16292	;# 
  7731   003FA4                     TMR3L           equ	16292	;# 
  7732   003FA5                     TMR3H           equ	16293	;# 
  7733   003FA6                     T3CON           equ	16294	;# 
  7734   003FA6                     TMR3CON         equ	16294	;# 
  7735   003FA7                     T3GCON          equ	16295	;# 
  7736   003FA7                     TMR3GCON        equ	16295	;# 
  7737   003FA8                     T3GATE          equ	16296	;# 
  7738   003FA8                     TMR3GATE        equ	16296	;# 
  7739   003FA9                     T3CLK           equ	16297	;# 
  7740   003FA9                     TMR3CLK         equ	16297	;# 
  7741   003FA9                     PR3             equ	16297	;# 
  7742   003FAA                     T2TMR           equ	16298	;# 
  7743   003FAA                     TMR2            equ	16298	;# 
  7744   003FAB                     T2PR            equ	16299	;# 
  7745   003FAB                     PR2             equ	16299	;# 
  7746   003FAC                     T2CON           equ	16300	;# 
  7747   003FAD                     T2HLT           equ	16301	;# 
  7748   003FAE                     T2CLKCON        equ	16302	;# 
  7749   003FAE                     T2CLK           equ	16302	;# 
  7750   003FAF                     T2RST           equ	16303	;# 
  7751   003FB0                     TMR1            equ	16304	;# 
  7752   003FB0                     TMR1L           equ	16304	;# 
  7753   003FB1                     TMR1H           equ	16305	;# 
  7754   003FB2                     T1CON           equ	16306	;# 
  7755   003FB2                     TMR1CON         equ	16306	;# 
  7756   003FB3                     T1GCON          equ	16307	;# 
  7757   003FB3                     TMR1GCON        equ	16307	;# 
  7758   003FB4                     T1GATE          equ	16308	;# 
  7759   003FB4                     TMR1GATE        equ	16308	;# 
  7760   003FB5                     T1CLK           equ	16309	;# 
  7761   003FB5                     TMR1CLK         equ	16309	;# 
  7762   003FB5                     PR1             equ	16309	;# 
  7763   003FB6                     TMR0L           equ	16310	;# 
  7764   003FB6                     TMR0            equ	16310	;# 
  7765   003FB7                     TMR0H           equ	16311	;# 
  7766   003FB7                     PR0             equ	16311	;# 
  7767   003FB8                     T0CON0          equ	16312	;# 
  7768   003FB9                     T0CON1          equ	16313	;# 
  7769   003FBA                     LATA            equ	16314	;# 
  7770   003FBB                     LATB            equ	16315	;# 
  7771   003FBC                     LATC            equ	16316	;# 
  7772   003FBD                     LATD            equ	16317	;# 
  7773   003FBE                     LATE            equ	16318	;# 
  7774   003FBF                     LATF            equ	16319	;# 
  7775   003FC2                     TRISA           equ	16322	;# 
  7776   003FC3                     TRISB           equ	16323	;# 
  7777   003FC4                     TRISC           equ	16324	;# 
  7778   003FC5                     TRISD           equ	16325	;# 
  7779   003FC6                     TRISE           equ	16326	;# 
  7780   003FC7                     TRISF           equ	16327	;# 
  7781   003FCA                     PORTA           equ	16330	;# 
  7782   003FCB                     PORTB           equ	16331	;# 
  7783   003FCC                     PORTC           equ	16332	;# 
  7784   003FCD                     PORTD           equ	16333	;# 
  7785   003FCE                     PORTE           equ	16334	;# 
  7786   003FCF                     PORTF           equ	16335	;# 
  7787   003FD2                     INTCON0         equ	16338	;# 
  7788   003FD3                     INTCON1         equ	16339	;# 
  7789   003FD4                     IVTLOCK         equ	16340	;# 
  7790   003FD5                     IVTBASE         equ	16341	;# 
  7791   003FD5                     IVTBASEL        equ	16341	;# 
  7792   003FD6                     IVTBASEH        equ	16342	;# 
  7793   003FD7                     IVTBASEU        equ	16343	;# 
  7794   003FD8                     STATUS          equ	16344	;# 
  7795   003FD9                     FSR2            equ	16345	;# 
  7796   003FD9                     FSR2L           equ	16345	;# 
  7797   003FDA                     FSR2H           equ	16346	;# 
  7798   003FDB                     PLUSW2          equ	16347	;# 
  7799   003FDC                     PREINC2         equ	16348	;# 
  7800   003FDD                     POSTDEC2        equ	16349	;# 
  7801   003FDE                     POSTINC2        equ	16350	;# 
  7802   003FDF                     INDF2           equ	16351	;# 
  7803   003FE0                     BSR             equ	16352	;# 
  7804   003FE1                     FSR1            equ	16353	;# 
  7805   003FE1                     FSR1L           equ	16353	;# 
  7806   003FE2                     FSR1H           equ	16354	;# 
  7807   003FE3                     PLUSW1          equ	16355	;# 
  7808   003FE4                     PREINC1         equ	16356	;# 
  7809   003FE5                     POSTDEC1        equ	16357	;# 
  7810   003FE6                     POSTINC1        equ	16358	;# 
  7811   003FE7                     INDF1           equ	16359	;# 
  7812   003FE8                     WREG            equ	16360	;# 
  7813   003FE9                     FSR0            equ	16361	;# 
  7814   003FE9                     FSR0L           equ	16361	;# 
  7815   003FEA                     FSR0H           equ	16362	;# 
  7816   003FEB                     PLUSW0          equ	16363	;# 
  7817   003FEC                     PREINC0         equ	16364	;# 
  7818   003FED                     POSTDEC0        equ	16365	;# 
  7819   003FEE                     POSTINC0        equ	16366	;# 
  7820   003FEF                     INDF0           equ	16367	;# 
  7821   003FF0                     PCON0           equ	16368	;# 
  7822   003FF1                     PCON1           equ	16369	;# 
  7823   003FF3                     PROD            equ	16371	;# 
  7824   003FF3                     PRODL           equ	16371	;# 
  7825   003FF4                     PRODH           equ	16372	;# 
  7826   003FF5                     TABLAT          equ	16373	;# 
  7827   003FF6                     TBLPTR          equ	16374	;# 
  7828   003FF6                     TBLPTRL         equ	16374	;# 
  7829   003FF7                     TBLPTRH         equ	16375	;# 
  7830   003FF8                     TBLPTRU         equ	16376	;# 
  7831   003FF9                     PCLAT           equ	16377	;# 
  7832   003FF9                     PCL             equ	16377	;# 
  7833   003FFA                     PCLATH          equ	16378	;# 
  7834   003FFB                     PCLATU          equ	16379	;# 
  7835   003FFC                     STKPTR          equ	16380	;# 
  7836   003FFD                     TOS             equ	16381	;# 
  7837   003FFD                     TOSL            equ	16381	;# 
  7838   003FFE                     TOSH            equ	16382	;# 
  7839   003FFF                     TOSU            equ	16383	;# 
  7840   003880                     STATUS_CSHAD    equ	14464	;# 
  7841   003881                     WREG_CSHAD      equ	14465	;# 
  7842   003882                     BSR_CSHAD       equ	14466	;# 
  7843   003883                     SHADCON         equ	14467	;# 
  7844   003884                     STATUS_SHAD     equ	14468	;# 
  7845   003885                     WREG_SHAD       equ	14469	;# 
  7846   003886                     BSR_SHAD        equ	14470	;# 
  7847   003887                     PCLATH_SHAD     equ	14471	;# 
  7848   003888                     PCLATU_SHAD     equ	14472	;# 
  7849   003889                     FSR0SH          equ	14473	;# 
  7850   003889                     FSR0L_SHAD      equ	14473	;# 
  7851   00388A                     FSR0H_SHAD      equ	14474	;# 
  7852   00388B                     FSR1SH          equ	14475	;# 
  7853   00388B                     FSR1L_SHAD      equ	14475	;# 
  7854   00388C                     FSR1H_SHAD      equ	14476	;# 
  7855   00388D                     FSR2SH          equ	14477	;# 
  7856   00388D                     FSR2L_SHAD      equ	14477	;# 
  7857   00388E                     FSR2H_SHAD      equ	14478	;# 
  7858   00388F                     PRODSH          equ	14479	;# 
  7859   00388F                     PRODL_SHAD      equ	14479	;# 
  7860   003890                     PRODH_SHAD      equ	14480	;# 
  7861   00389D                     IVTADL          equ	14493	;# 
  7862   00389E                     IVTADH          equ	14494	;# 
  7863   00389F                     IVTADU          equ	14495	;# 
  7864   00395B                     WDTCON0         equ	14683	;# 
  7865   00395C                     WDTCON1         equ	14684	;# 
  7866   00395D                     WDTPSL          equ	14685	;# 
  7867   00395E                     WDTPSH          equ	14686	;# 
  7868   00395F                     WDTTMR          equ	14687	;# 
  7869   003960                     CRCDATA         equ	14688	;# 
  7870   003960                     CRCDATL         equ	14688	;# 
  7871   003961                     CRCDATH         equ	14689	;# 
  7872   003962                     CRCACC          equ	14690	;# 
  7873   003962                     CRCACCL         equ	14690	;# 
  7874   003963                     CRCACCH         equ	14691	;# 
  7875   003964                     CRCSHFT         equ	14692	;# 
  7876   003964                     CRCSHIFTL       equ	14692	;# 
  7877   003965                     CRCSHIFTH       equ	14693	;# 
  7878   003966                     CRCXOR          equ	14694	;# 
  7879   003966                     CRCXORL         equ	14694	;# 
  7880   003967                     CRCXORH         equ	14695	;# 
  7881   003968                     CRCCON0         equ	14696	;# 
  7882   003969                     CRCCON1         equ	14697	;# 
  7883   003976                     SCANLADR        equ	14710	;# 
  7884   003976                     SCANLADRL       equ	14710	;# 
  7885   003977                     SCANLADRH       equ	14711	;# 
  7886   003978                     SCANLADRU       equ	14712	;# 
  7887   003979                     SCANHADR        equ	14713	;# 
  7888   003979                     SCANHADRL       equ	14713	;# 
  7889   00397A                     SCANHADRH       equ	14714	;# 
  7890   00397B                     SCANHADRU       equ	14715	;# 
  7891   00397C                     SCANCON0        equ	14716	;# 
  7892   00397D                     SCANTRIG        equ	14717	;# 
  7893   003980                     IPR0            equ	14720	;# 
  7894   003981                     IPR1            equ	14721	;# 
  7895   003982                     IPR2            equ	14722	;# 
  7896   003983                     IPR3            equ	14723	;# 
  7897   003984                     IPR4            equ	14724	;# 
  7898   003985                     IPR5            equ	14725	;# 
  7899   003986                     IPR6            equ	14726	;# 
  7900   003987                     IPR7            equ	14727	;# 
  7901   003988                     IPR8            equ	14728	;# 
  7902   003989                     IPR9            equ	14729	;# 
  7903   00398A                     IPR10           equ	14730	;# 
  7904   003990                     PIE0            equ	14736	;# 
  7905   003991                     PIE1            equ	14737	;# 
  7906   003992                     PIE2            equ	14738	;# 
  7907   003993                     PIE3            equ	14739	;# 
  7908   003994                     PIE4            equ	14740	;# 
  7909   003995                     PIE5            equ	14741	;# 
  7910   003996                     PIE6            equ	14742	;# 
  7911   003997                     PIE7            equ	14743	;# 
  7912   003998                     PIE8            equ	14744	;# 
  7913   003999                     PIE9            equ	14745	;# 
  7914   00399A                     PIE10           equ	14746	;# 
  7915   0039A0                     PIR0            equ	14752	;# 
  7916   0039A1                     PIR1            equ	14753	;# 
  7917   0039A2                     PIR2            equ	14754	;# 
  7918   0039A3                     PIR3            equ	14755	;# 
  7919   0039A4                     PIR4            equ	14756	;# 
  7920   0039A5                     PIR5            equ	14757	;# 
  7921   0039A6                     PIR6            equ	14758	;# 
  7922   0039A7                     PIR7            equ	14759	;# 
  7923   0039A8                     PIR8            equ	14760	;# 
  7924   0039A9                     PIR9            equ	14761	;# 
  7925   0039AA                     PIR10           equ	14762	;# 
  7926   0039C0                     PMD0            equ	14784	;# 
  7927   0039C1                     PMD1            equ	14785	;# 
  7928   0039C2                     PMD2            equ	14786	;# 
  7929   0039C3                     PMD3            equ	14787	;# 
  7930   0039C4                     PMD4            equ	14788	;# 
  7931   0039C5                     PMD5            equ	14789	;# 
  7932   0039C6                     PMD6            equ	14790	;# 
  7933   0039C7                     PMD7            equ	14791	;# 
  7934   0039D0                     BORCON          equ	14800	;# 
  7935   0039D1                     VREGCON         equ	14801	;# 
  7936   0039D8                     CPUDOZE         equ	14808	;# 
  7937   0039D9                     OSCCON1         equ	14809	;# 
  7938   0039DA                     OSCCON2         equ	14810	;# 
  7939   0039DB                     OSCCON3         equ	14811	;# 
  7940   0039DC                     OSCSTAT         equ	14812	;# 
  7941   0039DC                     OSCSTAT1        equ	14812	;# 
  7942   0039DD                     OSCEN           equ	14813	;# 
  7943   0039DE                     OSCTUNE         equ	14814	;# 
  7944   0039DF                     OSCFRQ          equ	14815	;# 
  7945   0039E0                     NVMADRL         equ	14816	;# 
  7946   0039E1                     NVMADRH         equ	14817	;# 
  7947   0039E3                     NVMDAT          equ	14819	;# 
  7948   0039E5                     NVMCON1         equ	14821	;# 
  7949   0039E6                     NVMCON2         equ	14822	;# 
  7950   0039EF                     PRLOCK          equ	14831	;# 
  7951   0039F1                     ISRPR           equ	14833	;# 
  7952   0039F2                     MAINPR          equ	14834	;# 
  7953   0039F3                     DMA1PR          equ	14835	;# 
  7954   0039F4                     DMA2PR          equ	14836	;# 
  7955   0039F7                     SCANPR          equ	14839	;# 
  7956   003A00                     RA0PPS          equ	14848	;# 
  7957   003A01                     RA1PPS          equ	14849	;# 
  7958   003A02                     RA2PPS          equ	14850	;# 
  7959   003A03                     RA3PPS          equ	14851	;# 
  7960   003A04                     RA4PPS          equ	14852	;# 
  7961   003A05                     RA5PPS          equ	14853	;# 
  7962   003A06                     RA6PPS          equ	14854	;# 
  7963   003A07                     RA7PPS          equ	14855	;# 
  7964   003A08                     RB0PPS          equ	14856	;# 
  7965   003A09                     RB1PPS          equ	14857	;# 
  7966   003A0A                     RB2PPS          equ	14858	;# 
  7967   003A0B                     RB3PPS          equ	14859	;# 
  7968   003A0C                     RB4PPS          equ	14860	;# 
  7969   003A0D                     RB5PPS          equ	14861	;# 
  7970   003A0E                     RB6PPS          equ	14862	;# 
  7971   003A0F                     RB7PPS          equ	14863	;# 
  7972   003A10                     RC0PPS          equ	14864	;# 
  7973   003A11                     RC1PPS          equ	14865	;# 
  7974   003A12                     RC2PPS          equ	14866	;# 
  7975   003A13                     RC3PPS          equ	14867	;# 
  7976   003A14                     RC4PPS          equ	14868	;# 
  7977   003A15                     RC5PPS          equ	14869	;# 
  7978   003A16                     RC6PPS          equ	14870	;# 
  7979   003A17                     RC7PPS          equ	14871	;# 
  7980   003A18                     RD0PPS          equ	14872	;# 
  7981   003A19                     RD1PPS          equ	14873	;# 
  7982   003A1A                     RD2PPS          equ	14874	;# 
  7983   003A1B                     RD3PPS          equ	14875	;# 
  7984   003A1C                     RD4PPS          equ	14876	;# 
  7985   003A1D                     RD5PPS          equ	14877	;# 
  7986   003A1E                     RD6PPS          equ	14878	;# 
  7987   003A1F                     RD7PPS          equ	14879	;# 
  7988   003A20                     RE0PPS          equ	14880	;# 
  7989   003A21                     RE1PPS          equ	14881	;# 
  7990   003A22                     RE2PPS          equ	14882	;# 
  7991   003A28                     RF0PPS          equ	14888	;# 
  7992   003A29                     RF1PPS          equ	14889	;# 
  7993   003A2A                     RF2PPS          equ	14890	;# 
  7994   003A2B                     RF3PPS          equ	14891	;# 
  7995   003A2C                     RF4PPS          equ	14892	;# 
  7996   003A2D                     RF5PPS          equ	14893	;# 
  7997   003A2E                     RF6PPS          equ	14894	;# 
  7998   003A2F                     RF7PPS          equ	14895	;# 
  7999   003A40                     ANSELA          equ	14912	;# 
  8000   003A41                     WPUA            equ	14913	;# 
  8001   003A42                     ODCONA          equ	14914	;# 
  8002   003A43                     SLRCONA         equ	14915	;# 
  8003   003A44                     INLVLA          equ	14916	;# 
  8004   003A45                     IOCAP           equ	14917	;# 
  8005   003A46                     IOCAN           equ	14918	;# 
  8006   003A47                     IOCAF           equ	14919	;# 
  8007   003A50                     ANSELB          equ	14928	;# 
  8008   003A51                     WPUB            equ	14929	;# 
  8009   003A52                     ODCONB          equ	14930	;# 
  8010   003A53                     SLRCONB         equ	14931	;# 
  8011   003A54                     INLVLB          equ	14932	;# 
  8012   003A55                     IOCBP           equ	14933	;# 
  8013   003A56                     IOCBN           equ	14934	;# 
  8014   003A57                     IOCBF           equ	14935	;# 
  8015   003A5A                     RB1I2C          equ	14938	;# 
  8016   003A5B                     RB2I2C          equ	14939	;# 
  8017   003A60                     ANSELC          equ	14944	;# 
  8018   003A61                     WPUC            equ	14945	;# 
  8019   003A62                     ODCONC          equ	14946	;# 
  8020   003A63                     SLRCONC         equ	14947	;# 
  8021   003A64                     INLVLC          equ	14948	;# 
  8022   003A65                     IOCCP           equ	14949	;# 
  8023   003A66                     IOCCN           equ	14950	;# 
  8024   003A67                     IOCCF           equ	14951	;# 
  8025   003A6A                     RC3I2C          equ	14954	;# 
  8026   003A6B                     RC4I2C          equ	14955	;# 
  8027   003A70                     ANSELD          equ	14960	;# 
  8028   003A71                     WPUD            equ	14961	;# 
  8029   003A72                     ODCOND          equ	14962	;# 
  8030   003A73                     SLRCOND         equ	14963	;# 
  8031   003A74                     INLVLD          equ	14964	;# 
  8032   003A7A                     RD0I2C          equ	14970	;# 
  8033   003A7B                     RD1I2C          equ	14971	;# 
  8034   003A80                     ANSELE          equ	14976	;# 
  8035   003A81                     WPUE            equ	14977	;# 
  8036   003A82                     ODCONE          equ	14978	;# 
  8037   003A83                     SLRCONE         equ	14979	;# 
  8038   003A84                     INLVLE          equ	14980	;# 
  8039   003A85                     IOCEP           equ	14981	;# 
  8040   003A86                     IOCEN           equ	14982	;# 
  8041   003A87                     IOCEF           equ	14983	;# 
  8042   003A90                     ANSELF          equ	14992	;# 
  8043   003A91                     WPUF            equ	14993	;# 
  8044   003A92                     ODCONF          equ	14994	;# 
  8045   003A93                     SLRCONF         equ	14995	;# 
  8046   003A94                     INLVLF          equ	14996	;# 
  8047   003ABF                     PPSLOCK         equ	15039	;# 
  8048   003AC0                     INT0PPS         equ	15040	;# 
  8049   003AC1                     INT1PPS         equ	15041	;# 
  8050   003AC2                     INT2PPS         equ	15042	;# 
  8051   003AC3                     T0CKIPPS        equ	15043	;# 
  8052   003AC4                     T1CKIPPS        equ	15044	;# 
  8053   003AC5                     T1GPPS          equ	15045	;# 
  8054   003AC6                     T3CKIPPS        equ	15046	;# 
  8055   003AC7                     T3GPPS          equ	15047	;# 
  8056   003AC8                     T5CKIPPS        equ	15048	;# 
  8057   003AC9                     T5GPPS          equ	15049	;# 
  8058   003ACA                     T2INPPS         equ	15050	;# 
  8059   003ACB                     T4INPPS         equ	15051	;# 
  8060   003ACC                     T6INPPS         equ	15052	;# 
  8061   003ACD                     CCP1PPS         equ	15053	;# 
  8062   003ACE                     CCP2PPS         equ	15054	;# 
  8063   003ACF                     CCP3PPS         equ	15055	;# 
  8064   003AD0                     CCP4PPS         equ	15056	;# 
  8065   003AD1                     SMT1WINPPS      equ	15057	;# 
  8066   003AD2                     SMT1SIGPPS      equ	15058	;# 
  8067   003AD3                     CWG1INPPS       equ	15059	;# 
  8068   003AD4                     CWG2INPPS       equ	15060	;# 
  8069   003AD5                     CWG3INPPS       equ	15061	;# 
  8070   003AD6                     MD1CARLPPS      equ	15062	;# 
  8071   003AD7                     MD1CARHPPS      equ	15063	;# 
  8072   003AD8                     MD1SRCPPS       equ	15064	;# 
  8073   003AD9                     CLCIN0PPS       equ	15065	;# 
  8074   003ADA                     CLCIN1PPS       equ	15066	;# 
  8075   003ADB                     CLCIN2PPS       equ	15067	;# 
  8076   003ADC                     CLCIN3PPS       equ	15068	;# 
  8077   003ADD                     ADACTPPS        equ	15069	;# 
  8078   003ADE                     SPI1SCKPPS      equ	15070	;# 
  8079   003ADF                     SPI1SDIPPS      equ	15071	;# 
  8080   003AE0                     SPI1SSPPS       equ	15072	;# 
  8081   003AE1                     I2C1SCLPPS      equ	15073	;# 
  8082   003AE2                     I2C1SDAPPS      equ	15074	;# 
  8083   003AE3                     I2C2SCLPPS      equ	15075	;# 
  8084   003AE4                     I2C2SDAPPS      equ	15076	;# 
  8085   003AE5                     U1RXPPS         equ	15077	;# 
  8086   003AE6                     U1CTSPPS        equ	15078	;# 
  8087   003AE8                     U2RXPPS         equ	15080	;# 
  8088   003AE9                     U2CTSPPS        equ	15081	;# 
  8089   003BC9                     DMA2BUF         equ	15305	;# 
  8090   003BCA                     DMA2DCNT        equ	15306	;# 
  8091   003BCA                     DMA2DCNTL       equ	15306	;# 
  8092   003BCB                     DMA2DCNTH       equ	15307	;# 
  8093   003BCC                     DMA2DPTR        equ	15308	;# 
  8094   003BCC                     DMA2DPTRL       equ	15308	;# 
  8095   003BCD                     DMA2DPTRH       equ	15309	;# 
  8096   003BCE                     DMA2DSZ         equ	15310	;# 
  8097   003BCE                     DMA2DSZL        equ	15310	;# 
  8098   003BCF                     DMA2DSZH        equ	15311	;# 
  8099   003BD0                     DMA2DSA         equ	15312	;# 
  8100   003BD0                     DMA2DSAL        equ	15312	;# 
  8101   003BD1                     DMA2DSAH        equ	15313	;# 
  8102   003BD2                     DMA2SCNT        equ	15314	;# 
  8103   003BD2                     DMA2SCNTL       equ	15314	;# 
  8104   003BD3                     DMA2SCNTH       equ	15315	;# 
  8105   003BD4                     DMA2SPTR        equ	15316	;# 
  8106   003BD4                     DMA2SPTRL       equ	15316	;# 
  8107   003BD5                     DMA2SPTRH       equ	15317	;# 
  8108   003BD6                     DMA2SPTRU       equ	15318	;# 
  8109   003BD7                     DMA2SSZ         equ	15319	;# 
  8110   003BD7                     DMA2SSZL        equ	15319	;# 
  8111   003BD8                     DMA2SSZH        equ	15320	;# 
  8112   003BD9                     DMA2SSA         equ	15321	;# 
  8113   003BD9                     DMA2SSAL        equ	15321	;# 
  8114   003BDA                     DMA2SSAH        equ	15322	;# 
  8115   003BDB                     DMA2SSAU        equ	15323	;# 
  8116   003BDC                     DMA2CON0        equ	15324	;# 
  8117   003BDD                     DMA2CON1        equ	15325	;# 
  8118   003BDE                     DMA2AIRQ        equ	15326	;# 
  8119   003BDF                     DMA2SIRQ        equ	15327	;# 
  8120   003BE9                     DMA1BUF         equ	15337	;# 
  8121   003BEA                     DMA1DCNT        equ	15338	;# 
  8122   003BEA                     DMA1DCNTL       equ	15338	;# 
  8123   003BEB                     DMA1DCNTH       equ	15339	;# 
  8124   003BEC                     DMA1DPTR        equ	15340	;# 
  8125   003BEC                     DMA1DPTRL       equ	15340	;# 
  8126   003BED                     DMA1DPTRH       equ	15341	;# 
  8127   003BEE                     DMA1DSZ         equ	15342	;# 
  8128   003BEE                     DMA1DSZL        equ	15342	;# 
  8129   003BEF                     DMA1DSZH        equ	15343	;# 
  8130   003BF0                     DMA1DSA         equ	15344	;# 
  8131   003BF0                     DMA1DSAL        equ	15344	;# 
  8132   003BF1                     DMA1DSAH        equ	15345	;# 
  8133   003BF2                     DMA1SCNT        equ	15346	;# 
  8134   003BF2                     DMA1SCNTL       equ	15346	;# 
  8135   003BF3                     DMA1SCNTH       equ	15347	;# 
  8136   003BF4                     DMA1SPTR        equ	15348	;# 
  8137   003BF4                     DMA1SPTRL       equ	15348	;# 
  8138   003BF5                     DMA1SPTRH       equ	15349	;# 
  8139   003BF6                     DMA1SPTRU       equ	15350	;# 
  8140   003BF7                     DMA1SSZ         equ	15351	;# 
  8141   003BF7                     DMA1SSZL        equ	15351	;# 
  8142   003BF8                     DMA1SSZH        equ	15352	;# 
  8143   003BF9                     DMA1SSA         equ	15353	;# 
  8144   003BF9                     DMA1SSAL        equ	15353	;# 
  8145   003BFA                     DMA1SSAH        equ	15354	;# 
  8146   003BFB                     DMA1SSAU        equ	15355	;# 
  8147   003BFC                     DMA1CON0        equ	15356	;# 
  8148   003BFD                     DMA1CON1        equ	15357	;# 
  8149   003BFE                     DMA1AIRQ        equ	15358	;# 
  8150   003BFF                     DMA1SIRQ        equ	15359	;# 
  8151   003C56                     CLC4CON         equ	15446	;# 
  8152   003C57                     CLC4POL         equ	15447	;# 
  8153   003C58                     CLC4SEL0        equ	15448	;# 
  8154   003C59                     CLC4SEL1        equ	15449	;# 
  8155   003C5A                     CLC4SEL2        equ	15450	;# 
  8156   003C5B                     CLC4SEL3        equ	15451	;# 
  8157   003C5C                     CLC4GLS0        equ	15452	;# 
  8158   003C5D                     CLC4GLS1        equ	15453	;# 
  8159   003C5E                     CLC4GLS2        equ	15454	;# 
  8160   003C5F                     CLC4GLS3        equ	15455	;# 
  8161   003C60                     CLC3CON         equ	15456	;# 
  8162   003C61                     CLC3POL         equ	15457	;# 
  8163   003C62                     CLC3SEL0        equ	15458	;# 
  8164   003C63                     CLC3SEL1        equ	15459	;# 
  8165   003C64                     CLC3SEL2        equ	15460	;# 
  8166   003C65                     CLC3SEL3        equ	15461	;# 
  8167   003C66                     CLC3GLS0        equ	15462	;# 
  8168   003C67                     CLC3GLS1        equ	15463	;# 
  8169   003C68                     CLC3GLS2        equ	15464	;# 
  8170   003C69                     CLC3GLS3        equ	15465	;# 
  8171   003C6A                     CLC2CON         equ	15466	;# 
  8172   003C6B                     CLC2POL         equ	15467	;# 
  8173   003C6C                     CLC2SEL0        equ	15468	;# 
  8174   003C6D                     CLC2SEL1        equ	15469	;# 
  8175   003C6E                     CLC2SEL2        equ	15470	;# 
  8176   003C6F                     CLC2SEL3        equ	15471	;# 
  8177   003C70                     CLC2GLS0        equ	15472	;# 
  8178   003C71                     CLC2GLS1        equ	15473	;# 
  8179   003C72                     CLC2GLS2        equ	15474	;# 
  8180   003C73                     CLC2GLS3        equ	15475	;# 
  8181   003C74                     CLC1CON         equ	15476	;# 
  8182   003C75                     CLC1POL         equ	15477	;# 
  8183   003C76                     CLC1SEL0        equ	15478	;# 
  8184   003C77                     CLC1SEL1        equ	15479	;# 
  8185   003C78                     CLC1SEL2        equ	15480	;# 
  8186   003C79                     CLC1SEL3        equ	15481	;# 
  8187   003C7A                     CLC1GLS0        equ	15482	;# 
  8188   003C7B                     CLC1GLS1        equ	15483	;# 
  8189   003C7C                     CLC1GLS2        equ	15484	;# 
  8190   003C7D                     CLC1GLS3        equ	15485	;# 
  8191   003C7E                     CLCDATA0        equ	15486	;# 
  8192   003CE5                     CLKRCON         equ	15589	;# 
  8193   003CE6                     CLKRCLK         equ	15590	;# 
  8194   003CFA                     MD1CON0         equ	15610	;# 
  8195   003CFB                     MD1CON1         equ	15611	;# 
  8196   003CFC                     MD1SRC          equ	15612	;# 
  8197   003CFD                     MD1CARL         equ	15613	;# 
  8198   003CFE                     MD1CARH         equ	15614	;# 
  8199   003D10                     SPI1RXB         equ	15632	;# 
  8200   003D11                     SPI1TXB         equ	15633	;# 
  8201   003D12                     SPI1TCNT        equ	15634	;# 
  8202   003D12                     SPI1TCNTL       equ	15634	;# 
  8203   003D13                     SPI1TCNTH       equ	15635	;# 
  8204   003D14                     SPI1CON0        equ	15636	;# 
  8205   003D15                     SPI1CON1        equ	15637	;# 
  8206   003D16                     SPI1CON2        equ	15638	;# 
  8207   003D17                     SPI1STATUS      equ	15639	;# 
  8208   003D18                     SPI1TWIDTH      equ	15640	;# 
  8209   003D19                     SPI1BAUD        equ	15641	;# 
  8210   003D1A                     SPI1INTF        equ	15642	;# 
  8211   003D1B                     SPI1INTE        equ	15643	;# 
  8212   003D1C                     SPI1CLK         equ	15644	;# 
  8213   003D54                     I2C2RXB         equ	15700	;# 
  8214   003D55                     I2C2TXB         equ	15701	;# 
  8215   003D56                     I2C2CNT         equ	15702	;# 
  8216   003D57                     I2C2ADB0        equ	15703	;# 
  8217   003D58                     I2C2ADB1        equ	15704	;# 
  8218   003D59                     I2C2ADR0        equ	15705	;# 
  8219   003D5A                     I2C2ADR1        equ	15706	;# 
  8220   003D5B                     I2C2ADR2        equ	15707	;# 
  8221   003D5C                     I2C2ADR3        equ	15708	;# 
  8222   003D5D                     I2C2CON0        equ	15709	;# 
  8223   003D5E                     I2C2CON1        equ	15710	;# 
  8224   003D5F                     I2C2CON2        equ	15711	;# 
  8225   003D60                     I2C2ERR         equ	15712	;# 
  8226   003D61                     I2C2STAT0       equ	15713	;# 
  8227   003D62                     I2C2STAT1       equ	15714	;# 
  8228   003D63                     I2C2PIR         equ	15715	;# 
  8229   003D64                     I2C2PIE         equ	15716	;# 
  8230   003D65                     I2C2CLK         equ	15717	;# 
  8231   003D66                     I2C2BTO         equ	15718	;# 
  8232   003D6A                     I2C1RXB         equ	15722	;# 
  8233   003D6B                     I2C1TXB         equ	15723	;# 
  8234   003D6C                     I2C1CNT         equ	15724	;# 
  8235   003D6D                     I2C1ADB0        equ	15725	;# 
  8236   003D6E                     I2C1ADB1        equ	15726	;# 
  8237   003D6F                     I2C1ADR0        equ	15727	;# 
  8238   003D70                     I2C1ADR1        equ	15728	;# 
  8239   003D71                     I2C1ADR2        equ	15729	;# 
  8240   003D72                     I2C1ADR3        equ	15730	;# 
  8241   003D73                     I2C1CON0        equ	15731	;# 
  8242   003D74                     I2C1CON1        equ	15732	;# 
  8243   003D75                     I2C1CON2        equ	15733	;# 
  8244   003D76                     I2C1ERR         equ	15734	;# 
  8245   003D77                     I2C1STAT0       equ	15735	;# 
  8246   003D78                     I2C1STAT1       equ	15736	;# 
  8247   003D79                     I2C1PIR         equ	15737	;# 
  8248   003D7A                     I2C1PIE         equ	15738	;# 
  8249   003D7B                     I2C1CLK         equ	15739	;# 
  8250   003D7C                     I2C1BTO         equ	15740	;# 
  8251   003DD0                     U2RXB           equ	15824	;# 
  8252   003DD0                     U2RXBL          equ	15824	;# 
  8253   003DD2                     U2TXB           equ	15826	;# 
  8254   003DD2                     U2TXBL          equ	15826	;# 
  8255   003DD4                     U2P1            equ	15828	;# 
  8256   003DD4                     U2P1L           equ	15828	;# 
  8257   003DD6                     U2P2            equ	15830	;# 
  8258   003DD6                     U2P2L           equ	15830	;# 
  8259   003DD8                     U2P3            equ	15832	;# 
  8260   003DD8                     U2P3L           equ	15832	;# 
  8261   003DDA                     U2CON0          equ	15834	;# 
  8262   003DDB                     U2CON1          equ	15835	;# 
  8263   003DDC                     U2CON2          equ	15836	;# 
  8264   003DDD                     U2BRG           equ	15837	;# 
  8265   003DDD                     U2BRGL          equ	15837	;# 
  8266   003DDE                     U2BRGH          equ	15838	;# 
  8267   003DDF                     U2FIFO          equ	15839	;# 
  8268   003DE0                     U2UIR           equ	15840	;# 
  8269   003DE1                     U2ERRIR         equ	15841	;# 
  8270   003DE2                     U2ERRIE         equ	15842	;# 
  8271   003DE8                     U1RXB           equ	15848	;# 
  8272   003DE8                     U1RXBL          equ	15848	;# 
  8273   003DE9                     U1RXCHK         equ	15849	;# 
  8274   003DEA                     U1TXB           equ	15850	;# 
  8275   003DEA                     U1TXBL          equ	15850	;# 
  8276   003DEB                     U1TXCHK         equ	15851	;# 
  8277   003DEC                     U1P1            equ	15852	;# 
  8278   003DEC                     U1P1L           equ	15852	;# 
  8279   003DED                     U1P1H           equ	15853	;# 
  8280   003DEE                     U1P2            equ	15854	;# 
  8281   003DEE                     U1P2L           equ	15854	;# 
  8282   003DEF                     U1P2H           equ	15855	;# 
  8283   003DF0                     U1P3            equ	15856	;# 
  8284   003DF0                     U1P3L           equ	15856	;# 
  8285   003DF1                     U1P3H           equ	15857	;# 
  8286   003DF2                     U1CON0          equ	15858	;# 
  8287   003DF3                     U1CON1          equ	15859	;# 
  8288   003DF4                     U1CON2          equ	15860	;# 
  8289   003DF5                     U1BRG           equ	15861	;# 
  8290   003DF5                     U1BRGL          equ	15861	;# 
  8291   003DF6                     U1BRGH          equ	15862	;# 
  8292   003DF7                     U1FIFO          equ	15863	;# 
  8293   003DF8                     U1UIR           equ	15864	;# 
  8294   003DF9                     U1ERRIR         equ	15865	;# 
  8295   003DFA                     U1ERRIE         equ	15866	;# 
  8296   003E9C                     DAC1CON1        equ	16028	;# 
  8297   003E9E                     DAC1CON0        equ	16030	;# 
  8298   003EB8                     CM2CON0         equ	16056	;# 
  8299   003EB9                     CM2CON1         equ	16057	;# 
  8300   003EBA                     CM2NCH          equ	16058	;# 
  8301   003EBB                     CM2PCH          equ	16059	;# 
  8302   003EBC                     CM1CON0         equ	16060	;# 
  8303   003EBD                     CM1CON1         equ	16061	;# 
  8304   003EBE                     CM1NCH          equ	16062	;# 
  8305   003EBF                     CM1PCH          equ	16063	;# 
  8306   003EC0                     CMOUT           equ	16064	;# 
  8307   003EC1                     FVRCON          equ	16065	;# 
  8308   003EC3                     ZCDCON          equ	16067	;# 
  8309   003EC9                     HLVDCON0        equ	16073	;# 
  8310   003ECA                     HLVDCON1        equ	16074	;# 
  8311   003ED7                     ADCP            equ	16087	;# 
  8312   003EDE                     ADLTH           equ	16094	;# 
  8313   003EDE                     ADLTHL          equ	16094	;# 
  8314   003EDF                     ADLTHH          equ	16095	;# 
  8315   003EE0                     ADUTH           equ	16096	;# 
  8316   003EE0                     ADUTHL          equ	16096	;# 
  8317   003EE1                     ADUTHH          equ	16097	;# 
  8318   003EE2                     ADERR           equ	16098	;# 
  8319   003EE2                     ADERRL          equ	16098	;# 
  8320   003EE3                     ADERRH          equ	16099	;# 
  8321   003EE4                     ADSTPT          equ	16100	;# 
  8322   003EE4                     ADSTPTL         equ	16100	;# 
  8323   003EE5                     ADSTPTH         equ	16101	;# 
  8324   003EE6                     ADFLTR          equ	16102	;# 
  8325   003EE6                     ADFLTRL         equ	16102	;# 
  8326   003EE7                     ADFLTRH         equ	16103	;# 
  8327   003EE8                     ADACC           equ	16104	;# 
  8328   003EE8                     ADACCL          equ	16104	;# 
  8329   003EE9                     ADACCH          equ	16105	;# 
  8330   003EEA                     ADACCU          equ	16106	;# 
  8331   003EEB                     ADCNT           equ	16107	;# 
  8332   003EEC                     ADRPT           equ	16108	;# 
  8333   003EED                     ADPREV          equ	16109	;# 
  8334   003EED                     ADPREVL         equ	16109	;# 
  8335   003EEE                     ADPREVH         equ	16110	;# 
  8336   003EEF                     ADRES           equ	16111	;# 
  8337   003EEF                     ADRESL          equ	16111	;# 
  8338   003EF0                     ADRESH          equ	16112	;# 
  8339   003EF1                     ADPCH           equ	16113	;# 
  8340   003EF3                     ADACQ           equ	16115	;# 
  8341   003EF3                     ADACQL          equ	16115	;# 
  8342   003EF4                     ADACQH          equ	16116	;# 
  8343   003EF5                     ADCAP           equ	16117	;# 
  8344   003EF6                     ADPRE           equ	16118	;# 
  8345   003EF6                     ADPREL          equ	16118	;# 
  8346   003EF7                     ADPREH          equ	16119	;# 
  8347   003EF8                     ADCON0          equ	16120	;# 
  8348   003EF9                     ADCON1          equ	16121	;# 
  8349   003EFA                     ADCON2          equ	16122	;# 
  8350   003EFB                     ADCON3          equ	16123	;# 
  8351   003EFC                     ADSTAT          equ	16124	;# 
  8352   003EFD                     ADREF           equ	16125	;# 
  8353   003EFE                     ADACT           equ	16126	;# 
  8354   003EFF                     ADCLK           equ	16127	;# 
  8355   003F12                     SMT1TMR         equ	16146	;# 
  8356   003F12                     SMT1TMRL        equ	16146	;# 
  8357   003F13                     SMT1TMRH        equ	16147	;# 
  8358   003F14                     SMT1TMRU        equ	16148	;# 
  8359   003F15                     SMT1CPR         equ	16149	;# 
  8360   003F15                     SMT1CPRL        equ	16149	;# 
  8361   003F16                     SMT1CPRH        equ	16150	;# 
  8362   003F17                     SMT1CPRU        equ	16151	;# 
  8363   003F18                     SMT1CPW         equ	16152	;# 
  8364   003F18                     SMT1CPWL        equ	16152	;# 
  8365   003F19                     SMT1CPWH        equ	16153	;# 
  8366   003F1A                     SMT1CPWU        equ	16154	;# 
  8367   003F1B                     SMT1PR          equ	16155	;# 
  8368   003F1B                     SMT1PRL         equ	16155	;# 
  8369   003F1C                     SMT1PRH         equ	16156	;# 
  8370   003F1D                     SMT1PRU         equ	16157	;# 
  8371   003F1E                     SMT1CON0        equ	16158	;# 
  8372   003F1F                     SMT1CON1        equ	16159	;# 
  8373   003F20                     SMT1STAT        equ	16160	;# 
  8374   003F21                     SMT1CLK         equ	16161	;# 
  8375   003F22                     SMT1SIG         equ	16162	;# 
  8376   003F23                     SMT1WIN         equ	16163	;# 
  8377   003F38                     NCO1ACC         equ	16184	;# 
  8378   003F38                     NCO1ACCL        equ	16184	;# 
  8379   003F39                     NCO1ACCH        equ	16185	;# 
  8380   003F3A                     NCO1ACCU        equ	16186	;# 
  8381   003F3B                     NCO1INC         equ	16187	;# 
  8382   003F3B                     NCO1INCL        equ	16187	;# 
  8383   003F3C                     NCO1INCH        equ	16188	;# 
  8384   003F3D                     NCO1INCU        equ	16189	;# 
  8385   003F3E                     NCO1CON         equ	16190	;# 
  8386   003F3F                     NCO1CLK         equ	16191	;# 
  8387   003F40                     CWG3CLK         equ	16192	;# 
  8388   003F40                     CWG3CLKCON      equ	16192	;# 
  8389   003F41                     CWG3ISM         equ	16193	;# 
  8390   003F41                     CWG3DAT         equ	16193	;# 
  8391   003F42                     CWG3DBR         equ	16194	;# 
  8392   003F43                     CWG3DBF         equ	16195	;# 
  8393   003F44                     CWG3CON0        equ	16196	;# 
  8394   003F45                     CWG3CON1        equ	16197	;# 
  8395   003F46                     CWG3AS0         equ	16198	;# 
  8396   003F47                     CWG3AS1         equ	16199	;# 
  8397   003F48                     CWG3STR         equ	16200	;# 
  8398   003F49                     CWG2CLK         equ	16201	;# 
  8399   003F49                     CWG2CLKCON      equ	16201	;# 
  8400   003F4A                     CWG2ISM         equ	16202	;# 
  8401   003F4A                     CWG2DAT         equ	16202	;# 
  8402   003F4B                     CWG2DBR         equ	16203	;# 
  8403   003F4C                     CWG2DBF         equ	16204	;# 
  8404   003F4D                     CWG2CON0        equ	16205	;# 
  8405   003F4E                     CWG2CON1        equ	16206	;# 
  8406   003F4F                     CWG2AS0         equ	16207	;# 
  8407   003F50                     CWG2AS1         equ	16208	;# 
  8408   003F51                     CWG2STR         equ	16209	;# 
  8409   003F52                     CWG1CLK         equ	16210	;# 
  8410   003F52                     CWG1CLKCON      equ	16210	;# 
  8411   003F53                     CWG1ISM         equ	16211	;# 
  8412   003F53                     CWG1DAT         equ	16211	;# 
  8413   003F54                     CWG1DBR         equ	16212	;# 
  8414   003F55                     CWG1DBF         equ	16213	;# 
  8415   003F56                     CWG1CON0        equ	16214	;# 
  8416   003F57                     CWG1CON1        equ	16215	;# 
  8417   003F58                     CWG1AS0         equ	16216	;# 
  8418   003F59                     CWG1AS1         equ	16217	;# 
  8419   003F5A                     CWG1STR         equ	16218	;# 
  8420   003F5E                     CCPTMRS0        equ	16222	;# 
  8421   003F5F                     CCPTMRS1        equ	16223	;# 
  8422   003F60                     PWM8DC          equ	16224	;# 
  8423   003F60                     PWM8DCL         equ	16224	;# 
  8424   003F61                     PWM8DCH         equ	16225	;# 
  8425   003F62                     PWM8CON         equ	16226	;# 
  8426   003F64                     PWM7DC          equ	16228	;# 
  8427   003F64                     PWM7DCL         equ	16228	;# 
  8428   003F65                     PWM7DCH         equ	16229	;# 
  8429   003F66                     PWM7CON         equ	16230	;# 
  8430   003F68                     PWM6DC          equ	16232	;# 
  8431   003F68                     PWM6DCL         equ	16232	;# 
  8432   003F69                     PWM6DCH         equ	16233	;# 
  8433   003F6A                     PWM6CON         equ	16234	;# 
  8434   003F6C                     PWM5DC          equ	16236	;# 
  8435   003F6C                     PWM5DCL         equ	16236	;# 
  8436   003F6D                     PWM5DCH         equ	16237	;# 
  8437   003F6E                     PWM5CON         equ	16238	;# 
  8438   003F70                     CCPR4           equ	16240	;# 
  8439   003F70                     CCPR4L          equ	16240	;# 
  8440   003F71                     CCPR4H          equ	16241	;# 
  8441   003F72                     CCP4CON         equ	16242	;# 
  8442   003F73                     CCP4CAP         equ	16243	;# 
  8443   003F74                     CCPR3           equ	16244	;# 
  8444   003F74                     CCPR3L          equ	16244	;# 
  8445   003F75                     CCPR3H          equ	16245	;# 
  8446   003F76                     CCP3CON         equ	16246	;# 
  8447   003F77                     CCP3CAP         equ	16247	;# 
  8448   003F78                     CCPR2           equ	16248	;# 
  8449   003F78                     CCPR2L          equ	16248	;# 
  8450   003F79                     CCPR2H          equ	16249	;# 
  8451   003F7A                     CCP2CON         equ	16250	;# 
  8452   003F7B                     CCP2CAP         equ	16251	;# 
  8453   003F7C                     CCPR1           equ	16252	;# 
  8454   003F7C                     CCPR1L          equ	16252	;# 
  8455   003F7D                     CCPR1H          equ	16253	;# 
  8456   003F7E                     CCP1CON         equ	16254	;# 
  8457   003F7F                     CCP1CAP         equ	16255	;# 
  8458   003F92                     T6TMR           equ	16274	;# 
  8459   003F92                     TMR6            equ	16274	;# 
  8460   003F93                     T6PR            equ	16275	;# 
  8461   003F93                     PR6             equ	16275	;# 
  8462   003F94                     T6CON           equ	16276	;# 
  8463   003F95                     T6HLT           equ	16277	;# 
  8464   003F96                     T6CLKCON        equ	16278	;# 
  8465   003F96                     T6CLK           equ	16278	;# 
  8466   003F97                     T6RST           equ	16279	;# 
  8467   003F98                     TMR5            equ	16280	;# 
  8468   003F98                     TMR5L           equ	16280	;# 
  8469   003F99                     TMR5H           equ	16281	;# 
  8470   003F9A                     T5CON           equ	16282	;# 
  8471   003F9A                     TMR5CON         equ	16282	;# 
  8472   003F9B                     T5GCON          equ	16283	;# 
  8473   003F9B                     TMR5GCON        equ	16283	;# 
  8474   003F9C                     T5GATE          equ	16284	;# 
  8475   003F9C                     TMR5GATE        equ	16284	;# 
  8476   003F9D                     T5CLK           equ	16285	;# 
  8477   003F9D                     TMR5CLK         equ	16285	;# 
  8478   003F9D                     PR5             equ	16285	;# 
  8479   003F9E                     T4TMR           equ	16286	;# 
  8480   003F9E                     TMR4            equ	16286	;# 
  8481   003F9F                     T4PR            equ	16287	;# 
  8482   003F9F                     PR4             equ	16287	;# 
  8483   003FA0                     T4CON           equ	16288	;# 
  8484   003FA1                     T4HLT           equ	16289	;# 
  8485   003FA2                     T4CLKCON        equ	16290	;# 
  8486   003FA2                     T4CLK           equ	16290	;# 
  8487   003FA3                     T4RST           equ	16291	;# 
  8488   003FA4                     TMR3            equ	16292	;# 
  8489   003FA4                     TMR3L           equ	16292	;# 
  8490   003FA5                     TMR3H           equ	16293	;# 
  8491   003FA6                     T3CON           equ	16294	;# 
  8492   003FA6                     TMR3CON         equ	16294	;# 
  8493   003FA7                     T3GCON          equ	16295	;# 
  8494   003FA7                     TMR3GCON        equ	16295	;# 
  8495   003FA8                     T3GATE          equ	16296	;# 
  8496   003FA8                     TMR3GATE        equ	16296	;# 
  8497   003FA9                     T3CLK           equ	16297	;# 
  8498   003FA9                     TMR3CLK         equ	16297	;# 
  8499   003FA9                     PR3             equ	16297	;# 
  8500   003FAA                     T2TMR           equ	16298	;# 
  8501   003FAA                     TMR2            equ	16298	;# 
  8502   003FAB                     T2PR            equ	16299	;# 
  8503   003FAB                     PR2             equ	16299	;# 
  8504   003FAC                     T2CON           equ	16300	;# 
  8505   003FAD                     T2HLT           equ	16301	;# 
  8506   003FAE                     T2CLKCON        equ	16302	;# 
  8507   003FAE                     T2CLK           equ	16302	;# 
  8508   003FAF                     T2RST           equ	16303	;# 
  8509   003FB0                     TMR1            equ	16304	;# 
  8510   003FB0                     TMR1L           equ	16304	;# 
  8511   003FB1                     TMR1H           equ	16305	;# 
  8512   003FB2                     T1CON           equ	16306	;# 
  8513   003FB2                     TMR1CON         equ	16306	;# 
  8514   003FB3                     T1GCON          equ	16307	;# 
  8515   003FB3                     TMR1GCON        equ	16307	;# 
  8516   003FB4                     T1GATE          equ	16308	;# 
  8517   003FB4                     TMR1GATE        equ	16308	;# 
  8518   003FB5                     T1CLK           equ	16309	;# 
  8519   003FB5                     TMR1CLK         equ	16309	;# 
  8520   003FB5                     PR1             equ	16309	;# 
  8521   003FB6                     TMR0L           equ	16310	;# 
  8522   003FB6                     TMR0            equ	16310	;# 
  8523   003FB7                     TMR0H           equ	16311	;# 
  8524   003FB7                     PR0             equ	16311	;# 
  8525   003FB8                     T0CON0          equ	16312	;# 
  8526   003FB9                     T0CON1          equ	16313	;# 
  8527   003FBA                     LATA            equ	16314	;# 
  8528   003FBB                     LATB            equ	16315	;# 
  8529   003FBC                     LATC            equ	16316	;# 
  8530   003FBD                     LATD            equ	16317	;# 
  8531   003FBE                     LATE            equ	16318	;# 
  8532   003FBF                     LATF            equ	16319	;# 
  8533   003FC2                     TRISA           equ	16322	;# 
  8534   003FC3                     TRISB           equ	16323	;# 
  8535   003FC4                     TRISC           equ	16324	;# 
  8536   003FC5                     TRISD           equ	16325	;# 
  8537   003FC6                     TRISE           equ	16326	;# 
  8538   003FC7                     TRISF           equ	16327	;# 
  8539   003FCA                     PORTA           equ	16330	;# 
  8540   003FCB                     PORTB           equ	16331	;# 
  8541   003FCC                     PORTC           equ	16332	;# 
  8542   003FCD                     PORTD           equ	16333	;# 
  8543   003FCE                     PORTE           equ	16334	;# 
  8544   003FCF                     PORTF           equ	16335	;# 
  8545   003FD2                     INTCON0         equ	16338	;# 
  8546   003FD3                     INTCON1         equ	16339	;# 
  8547   003FD4                     IVTLOCK         equ	16340	;# 
  8548   003FD5                     IVTBASE         equ	16341	;# 
  8549   003FD5                     IVTBASEL        equ	16341	;# 
  8550   003FD6                     IVTBASEH        equ	16342	;# 
  8551   003FD7                     IVTBASEU        equ	16343	;# 
  8552   003FD8                     STATUS          equ	16344	;# 
  8553   003FD9                     FSR2            equ	16345	;# 
  8554   003FD9                     FSR2L           equ	16345	;# 
  8555   003FDA                     FSR2H           equ	16346	;# 
  8556   003FDB                     PLUSW2          equ	16347	;# 
  8557   003FDC                     PREINC2         equ	16348	;# 
  8558   003FDD                     POSTDEC2        equ	16349	;# 
  8559   003FDE                     POSTINC2        equ	16350	;# 
  8560   003FDF                     INDF2           equ	16351	;# 
  8561   003FE0                     BSR             equ	16352	;# 
  8562   003FE1                     FSR1            equ	16353	;# 
  8563   003FE1                     FSR1L           equ	16353	;# 
  8564   003FE2                     FSR1H           equ	16354	;# 
  8565   003FE3                     PLUSW1          equ	16355	;# 
  8566   003FE4                     PREINC1         equ	16356	;# 
  8567   003FE5                     POSTDEC1        equ	16357	;# 
  8568   003FE6                     POSTINC1        equ	16358	;# 
  8569   003FE7                     INDF1           equ	16359	;# 
  8570   003FE8                     WREG            equ	16360	;# 
  8571   003FE9                     FSR0            equ	16361	;# 
  8572   003FE9                     FSR0L           equ	16361	;# 
  8573   003FEA                     FSR0H           equ	16362	;# 
  8574   003FEB                     PLUSW0          equ	16363	;# 
  8575   003FEC                     PREINC0         equ	16364	;# 
  8576   003FED                     POSTDEC0        equ	16365	;# 
  8577   003FEE                     POSTINC0        equ	16366	;# 
  8578   003FEF                     INDF0           equ	16367	;# 
  8579   003FF0                     PCON0           equ	16368	;# 
  8580   003FF1                     PCON1           equ	16369	;# 
  8581   003FF3                     PROD            equ	16371	;# 
  8582   003FF3                     PRODL           equ	16371	;# 
  8583   003FF4                     PRODH           equ	16372	;# 
  8584   003FF5                     TABLAT          equ	16373	;# 
  8585   003FF6                     TBLPTR          equ	16374	;# 
  8586   003FF6                     TBLPTRL         equ	16374	;# 
  8587   003FF7                     TBLPTRH         equ	16375	;# 
  8588   003FF8                     TBLPTRU         equ	16376	;# 
  8589   003FF9                     PCLAT           equ	16377	;# 
  8590   003FF9                     PCL             equ	16377	;# 
  8591   003FFA                     PCLATH          equ	16378	;# 
  8592   003FFB                     PCLATU          equ	16379	;# 
  8593   003FFC                     STKPTR          equ	16380	;# 
  8594   003FFD                     TOS             equ	16381	;# 
  8595   003FFD                     TOSL            equ	16381	;# 
  8596   003FFE                     TOSH            equ	16382	;# 
  8597   003FFF                     TOSU            equ	16383	;# 
  8598   003880                     STATUS_CSHAD    equ	14464	;# 
  8599   003881                     WREG_CSHAD      equ	14465	;# 
  8600   003882                     BSR_CSHAD       equ	14466	;# 
  8601   003883                     SHADCON         equ	14467	;# 
  8602   003884                     STATUS_SHAD     equ	14468	;# 
  8603   003885                     WREG_SHAD       equ	14469	;# 
  8604   003886                     BSR_SHAD        equ	14470	;# 
  8605   003887                     PCLATH_SHAD     equ	14471	;# 
  8606   003888                     PCLATU_SHAD     equ	14472	;# 
  8607   003889                     FSR0SH          equ	14473	;# 
  8608   003889                     FSR0L_SHAD      equ	14473	;# 
  8609   00388A                     FSR0H_SHAD      equ	14474	;# 
  8610   00388B                     FSR1SH          equ	14475	;# 
  8611   00388B                     FSR1L_SHAD      equ	14475	;# 
  8612   00388C                     FSR1H_SHAD      equ	14476	;# 
  8613   00388D                     FSR2SH          equ	14477	;# 
  8614   00388D                     FSR2L_SHAD      equ	14477	;# 
  8615   00388E                     FSR2H_SHAD      equ	14478	;# 
  8616   00388F                     PRODSH          equ	14479	;# 
  8617   00388F                     PRODL_SHAD      equ	14479	;# 
  8618   003890                     PRODH_SHAD      equ	14480	;# 
  8619   00389D                     IVTADL          equ	14493	;# 
  8620   00389E                     IVTADH          equ	14494	;# 
  8621   00389F                     IVTADU          equ	14495	;# 
  8622   00395B                     WDTCON0         equ	14683	;# 
  8623   00395C                     WDTCON1         equ	14684	;# 
  8624   00395D                     WDTPSL          equ	14685	;# 
  8625   00395E                     WDTPSH          equ	14686	;# 
  8626   00395F                     WDTTMR          equ	14687	;# 
  8627   003960                     CRCDATA         equ	14688	;# 
  8628   003960                     CRCDATL         equ	14688	;# 
  8629   003961                     CRCDATH         equ	14689	;# 
  8630   003962                     CRCACC          equ	14690	;# 
  8631   003962                     CRCACCL         equ	14690	;# 
  8632   003963                     CRCACCH         equ	14691	;# 
  8633   003964                     CRCSHFT         equ	14692	;# 
  8634   003964                     CRCSHIFTL       equ	14692	;# 
  8635   003965                     CRCSHIFTH       equ	14693	;# 
  8636   003966                     CRCXOR          equ	14694	;# 
  8637   003966                     CRCXORL         equ	14694	;# 
  8638   003967                     CRCXORH         equ	14695	;# 
  8639   003968                     CRCCON0         equ	14696	;# 
  8640   003969                     CRCCON1         equ	14697	;# 
  8641   003976                     SCANLADR        equ	14710	;# 
  8642   003976                     SCANLADRL       equ	14710	;# 
  8643   003977                     SCANLADRH       equ	14711	;# 
  8644   003978                     SCANLADRU       equ	14712	;# 
  8645   003979                     SCANHADR        equ	14713	;# 
  8646   003979                     SCANHADRL       equ	14713	;# 
  8647   00397A                     SCANHADRH       equ	14714	;# 
  8648   00397B                     SCANHADRU       equ	14715	;# 
  8649   00397C                     SCANCON0        equ	14716	;# 
  8650   00397D                     SCANTRIG        equ	14717	;# 
  8651   003980                     IPR0            equ	14720	;# 
  8652   003981                     IPR1            equ	14721	;# 
  8653   003982                     IPR2            equ	14722	;# 
  8654   003983                     IPR3            equ	14723	;# 
  8655   003984                     IPR4            equ	14724	;# 
  8656   003985                     IPR5            equ	14725	;# 
  8657   003986                     IPR6            equ	14726	;# 
  8658   003987                     IPR7            equ	14727	;# 
  8659   003988                     IPR8            equ	14728	;# 
  8660   003989                     IPR9            equ	14729	;# 
  8661   00398A                     IPR10           equ	14730	;# 
  8662   003990                     PIE0            equ	14736	;# 
  8663   003991                     PIE1            equ	14737	;# 
  8664   003992                     PIE2            equ	14738	;# 
  8665   003993                     PIE3            equ	14739	;# 
  8666   003994                     PIE4            equ	14740	;# 
  8667   003995                     PIE5            equ	14741	;# 
  8668   003996                     PIE6            equ	14742	;# 
  8669   003997                     PIE7            equ	14743	;# 
  8670   003998                     PIE8            equ	14744	;# 
  8671   003999                     PIE9            equ	14745	;# 
  8672   00399A                     PIE10           equ	14746	;# 
  8673   0039A0                     PIR0            equ	14752	;# 
  8674   0039A1                     PIR1            equ	14753	;# 
  8675   0039A2                     PIR2            equ	14754	;# 
  8676   0039A3                     PIR3            equ	14755	;# 
  8677   0039A4                     PIR4            equ	14756	;# 
  8678   0039A5                     PIR5            equ	14757	;# 
  8679   0039A6                     PIR6            equ	14758	;# 
  8680   0039A7                     PIR7            equ	14759	;# 
  8681   0039A8                     PIR8            equ	14760	;# 
  8682   0039A9                     PIR9            equ	14761	;# 
  8683   0039AA                     PIR10           equ	14762	;# 
  8684   0039C0                     PMD0            equ	14784	;# 
  8685   0039C1                     PMD1            equ	14785	;# 
  8686   0039C2                     PMD2            equ	14786	;# 
  8687   0039C3                     PMD3            equ	14787	;# 
  8688   0039C4                     PMD4            equ	14788	;# 
  8689   0039C5                     PMD5            equ	14789	;# 
  8690   0039C6                     PMD6            equ	14790	;# 
  8691   0039C7                     PMD7            equ	14791	;# 
  8692   0039D0                     BORCON          equ	14800	;# 
  8693   0039D1                     VREGCON         equ	14801	;# 
  8694   0039D8                     CPUDOZE         equ	14808	;# 
  8695   0039D9                     OSCCON1         equ	14809	;# 
  8696   0039DA                     OSCCON2         equ	14810	;# 
  8697   0039DB                     OSCCON3         equ	14811	;# 
  8698   0039DC                     OSCSTAT         equ	14812	;# 
  8699   0039DC                     OSCSTAT1        equ	14812	;# 
  8700   0039DD                     OSCEN           equ	14813	;# 
  8701   0039DE                     OSCTUNE         equ	14814	;# 
  8702   0039DF                     OSCFRQ          equ	14815	;# 
  8703   0039E0                     NVMADRL         equ	14816	;# 
  8704   0039E1                     NVMADRH         equ	14817	;# 
  8705   0039E3                     NVMDAT          equ	14819	;# 
  8706   0039E5                     NVMCON1         equ	14821	;# 
  8707   0039E6                     NVMCON2         equ	14822	;# 
  8708   0039EF                     PRLOCK          equ	14831	;# 
  8709   0039F1                     ISRPR           equ	14833	;# 
  8710   0039F2                     MAINPR          equ	14834	;# 
  8711   0039F3                     DMA1PR          equ	14835	;# 
  8712   0039F4                     DMA2PR          equ	14836	;# 
  8713   0039F7                     SCANPR          equ	14839	;# 
  8714   003A00                     RA0PPS          equ	14848	;# 
  8715   003A01                     RA1PPS          equ	14849	;# 
  8716   003A02                     RA2PPS          equ	14850	;# 
  8717   003A03                     RA3PPS          equ	14851	;# 
  8718   003A04                     RA4PPS          equ	14852	;# 
  8719   003A05                     RA5PPS          equ	14853	;# 
  8720   003A06                     RA6PPS          equ	14854	;# 
  8721   003A07                     RA7PPS          equ	14855	;# 
  8722   003A08                     RB0PPS          equ	14856	;# 
  8723   003A09                     RB1PPS          equ	14857	;# 
  8724   003A0A                     RB2PPS          equ	14858	;# 
  8725   003A0B                     RB3PPS          equ	14859	;# 
  8726   003A0C                     RB4PPS          equ	14860	;# 
  8727   003A0D                     RB5PPS          equ	14861	;# 
  8728   003A0E                     RB6PPS          equ	14862	;# 
  8729   003A0F                     RB7PPS          equ	14863	;# 
  8730   003A10                     RC0PPS          equ	14864	;# 
  8731   003A11                     RC1PPS          equ	14865	;# 
  8732   003A12                     RC2PPS          equ	14866	;# 
  8733   003A13                     RC3PPS          equ	14867	;# 
  8734   003A14                     RC4PPS          equ	14868	;# 
  8735   003A15                     RC5PPS          equ	14869	;# 
  8736   003A16                     RC6PPS          equ	14870	;# 
  8737   003A17                     RC7PPS          equ	14871	;# 
  8738   003A18                     RD0PPS          equ	14872	;# 
  8739   003A19                     RD1PPS          equ	14873	;# 
  8740   003A1A                     RD2PPS          equ	14874	;# 
  8741   003A1B                     RD3PPS          equ	14875	;# 
  8742   003A1C                     RD4PPS          equ	14876	;# 
  8743   003A1D                     RD5PPS          equ	14877	;# 
  8744   003A1E                     RD6PPS          equ	14878	;# 
  8745   003A1F                     RD7PPS          equ	14879	;# 
  8746   003A20                     RE0PPS          equ	14880	;# 
  8747   003A21                     RE1PPS          equ	14881	;# 
  8748   003A22                     RE2PPS          equ	14882	;# 
  8749   003A28                     RF0PPS          equ	14888	;# 
  8750   003A29                     RF1PPS          equ	14889	;# 
  8751   003A2A                     RF2PPS          equ	14890	;# 
  8752   003A2B                     RF3PPS          equ	14891	;# 
  8753   003A2C                     RF4PPS          equ	14892	;# 
  8754   003A2D                     RF5PPS          equ	14893	;# 
  8755   003A2E                     RF6PPS          equ	14894	;# 
  8756   003A2F                     RF7PPS          equ	14895	;# 
  8757   003A40                     ANSELA          equ	14912	;# 
  8758   003A41                     WPUA            equ	14913	;# 
  8759   003A42                     ODCONA          equ	14914	;# 
  8760   003A43                     SLRCONA         equ	14915	;# 
  8761   003A44                     INLVLA          equ	14916	;# 
  8762   003A45                     IOCAP           equ	14917	;# 
  8763   003A46                     IOCAN           equ	14918	;# 
  8764   003A47                     IOCAF           equ	14919	;# 
  8765   003A50                     ANSELB          equ	14928	;# 
  8766   003A51                     WPUB            equ	14929	;# 
  8767   003A52                     ODCONB          equ	14930	;# 
  8768   003A53                     SLRCONB         equ	14931	;# 
  8769   003A54                     INLVLB          equ	14932	;# 
  8770   003A55                     IOCBP           equ	14933	;# 
  8771   003A56                     IOCBN           equ	14934	;# 
  8772   003A57                     IOCBF           equ	14935	;# 
  8773   003A5A                     RB1I2C          equ	14938	;# 
  8774   003A5B                     RB2I2C          equ	14939	;# 
  8775   003A60                     ANSELC          equ	14944	;# 
  8776   003A61                     WPUC            equ	14945	;# 
  8777   003A62                     ODCONC          equ	14946	;# 
  8778   003A63                     SLRCONC         equ	14947	;# 
  8779   003A64                     INLVLC          equ	14948	;# 
  8780   003A65                     IOCCP           equ	14949	;# 
  8781   003A66                     IOCCN           equ	14950	;# 
  8782   003A67                     IOCCF           equ	14951	;# 
  8783   003A6A                     RC3I2C          equ	14954	;# 
  8784   003A6B                     RC4I2C          equ	14955	;# 
  8785   003A70                     ANSELD          equ	14960	;# 
  8786   003A71                     WPUD            equ	14961	;# 
  8787   003A72                     ODCOND          equ	14962	;# 
  8788   003A73                     SLRCOND         equ	14963	;# 
  8789   003A74                     INLVLD          equ	14964	;# 
  8790   003A7A                     RD0I2C          equ	14970	;# 
  8791   003A7B                     RD1I2C          equ	14971	;# 
  8792   003A80                     ANSELE          equ	14976	;# 
  8793   003A81                     WPUE            equ	14977	;# 
  8794   003A82                     ODCONE          equ	14978	;# 
  8795   003A83                     SLRCONE         equ	14979	;# 
  8796   003A84                     INLVLE          equ	14980	;# 
  8797   003A85                     IOCEP           equ	14981	;# 
  8798   003A86                     IOCEN           equ	14982	;# 
  8799   003A87                     IOCEF           equ	14983	;# 
  8800   003A90                     ANSELF          equ	14992	;# 
  8801   003A91                     WPUF            equ	14993	;# 
  8802   003A92                     ODCONF          equ	14994	;# 
  8803   003A93                     SLRCONF         equ	14995	;# 
  8804   003A94                     INLVLF          equ	14996	;# 
  8805   003ABF                     PPSLOCK         equ	15039	;# 
  8806   003AC0                     INT0PPS         equ	15040	;# 
  8807   003AC1                     INT1PPS         equ	15041	;# 
  8808   003AC2                     INT2PPS         equ	15042	;# 
  8809   003AC3                     T0CKIPPS        equ	15043	;# 
  8810   003AC4                     T1CKIPPS        equ	15044	;# 
  8811   003AC5                     T1GPPS          equ	15045	;# 
  8812   003AC6                     T3CKIPPS        equ	15046	;# 
  8813   003AC7                     T3GPPS          equ	15047	;# 
  8814   003AC8                     T5CKIPPS        equ	15048	;# 
  8815   003AC9                     T5GPPS          equ	15049	;# 
  8816   003ACA                     T2INPPS         equ	15050	;# 
  8817   003ACB                     T4INPPS         equ	15051	;# 
  8818   003ACC                     T6INPPS         equ	15052	;# 
  8819   003ACD                     CCP1PPS         equ	15053	;# 
  8820   003ACE                     CCP2PPS         equ	15054	;# 
  8821   003ACF                     CCP3PPS         equ	15055	;# 
  8822   003AD0                     CCP4PPS         equ	15056	;# 
  8823   003AD1                     SMT1WINPPS      equ	15057	;# 
  8824   003AD2                     SMT1SIGPPS      equ	15058	;# 
  8825   003AD3                     CWG1INPPS       equ	15059	;# 
  8826   003AD4                     CWG2INPPS       equ	15060	;# 
  8827   003AD5                     CWG3INPPS       equ	15061	;# 
  8828   003AD6                     MD1CARLPPS      equ	15062	;# 
  8829   003AD7                     MD1CARHPPS      equ	15063	;# 
  8830   003AD8                     MD1SRCPPS       equ	15064	;# 
  8831   003AD9                     CLCIN0PPS       equ	15065	;# 
  8832   003ADA                     CLCIN1PPS       equ	15066	;# 
  8833   003ADB                     CLCIN2PPS       equ	15067	;# 
  8834   003ADC                     CLCIN3PPS       equ	15068	;# 
  8835   003ADD                     ADACTPPS        equ	15069	;# 
  8836   003ADE                     SPI1SCKPPS      equ	15070	;# 
  8837   003ADF                     SPI1SDIPPS      equ	15071	;# 
  8838   003AE0                     SPI1SSPPS       equ	15072	;# 
  8839   003AE1                     I2C1SCLPPS      equ	15073	;# 
  8840   003AE2                     I2C1SDAPPS      equ	15074	;# 
  8841   003AE3                     I2C2SCLPPS      equ	15075	;# 
  8842   003AE4                     I2C2SDAPPS      equ	15076	;# 
  8843   003AE5                     U1RXPPS         equ	15077	;# 
  8844   003AE6                     U1CTSPPS        equ	15078	;# 
  8845   003AE8                     U2RXPPS         equ	15080	;# 
  8846   003AE9                     U2CTSPPS        equ	15081	;# 
  8847   003BC9                     DMA2BUF         equ	15305	;# 
  8848   003BCA                     DMA2DCNT        equ	15306	;# 
  8849   003BCA                     DMA2DCNTL       equ	15306	;# 
  8850   003BCB                     DMA2DCNTH       equ	15307	;# 
  8851   003BCC                     DMA2DPTR        equ	15308	;# 
  8852   003BCC                     DMA2DPTRL       equ	15308	;# 
  8853   003BCD                     DMA2DPTRH       equ	15309	;# 
  8854   003BCE                     DMA2DSZ         equ	15310	;# 
  8855   003BCE                     DMA2DSZL        equ	15310	;# 
  8856   003BCF                     DMA2DSZH        equ	15311	;# 
  8857   003BD0                     DMA2DSA         equ	15312	;# 
  8858   003BD0                     DMA2DSAL        equ	15312	;# 
  8859   003BD1                     DMA2DSAH        equ	15313	;# 
  8860   003BD2                     DMA2SCNT        equ	15314	;# 
  8861   003BD2                     DMA2SCNTL       equ	15314	;# 
  8862   003BD3                     DMA2SCNTH       equ	15315	;# 
  8863   003BD4                     DMA2SPTR        equ	15316	;# 
  8864   003BD4                     DMA2SPTRL       equ	15316	;# 
  8865   003BD5                     DMA2SPTRH       equ	15317	;# 
  8866   003BD6                     DMA2SPTRU       equ	15318	;# 
  8867   003BD7                     DMA2SSZ         equ	15319	;# 
  8868   003BD7                     DMA2SSZL        equ	15319	;# 
  8869   003BD8                     DMA2SSZH        equ	15320	;# 
  8870   003BD9                     DMA2SSA         equ	15321	;# 
  8871   003BD9                     DMA2SSAL        equ	15321	;# 
  8872   003BDA                     DMA2SSAH        equ	15322	;# 
  8873   003BDB                     DMA2SSAU        equ	15323	;# 
  8874   003BDC                     DMA2CON0        equ	15324	;# 
  8875   003BDD                     DMA2CON1        equ	15325	;# 
  8876   003BDE                     DMA2AIRQ        equ	15326	;# 
  8877   003BDF                     DMA2SIRQ        equ	15327	;# 
  8878   003BE9                     DMA1BUF         equ	15337	;# 
  8879   003BEA                     DMA1DCNT        equ	15338	;# 
  8880   003BEA                     DMA1DCNTL       equ	15338	;# 
  8881   003BEB                     DMA1DCNTH       equ	15339	;# 
  8882   003BEC                     DMA1DPTR        equ	15340	;# 
  8883   003BEC                     DMA1DPTRL       equ	15340	;# 
  8884   003BED                     DMA1DPTRH       equ	15341	;# 
  8885   003BEE                     DMA1DSZ         equ	15342	;# 
  8886   003BEE                     DMA1DSZL        equ	15342	;# 
  8887   003BEF                     DMA1DSZH        equ	15343	;# 
  8888   003BF0                     DMA1DSA         equ	15344	;# 
  8889   003BF0                     DMA1DSAL        equ	15344	;# 
  8890   003BF1                     DMA1DSAH        equ	15345	;# 
  8891   003BF2                     DMA1SCNT        equ	15346	;# 
  8892   003BF2                     DMA1SCNTL       equ	15346	;# 
  8893   003BF3                     DMA1SCNTH       equ	15347	;# 
  8894   003BF4                     DMA1SPTR        equ	15348	;# 
  8895   003BF4                     DMA1SPTRL       equ	15348	;# 
  8896   003BF5                     DMA1SPTRH       equ	15349	;# 
  8897   003BF6                     DMA1SPTRU       equ	15350	;# 
  8898   003BF7                     DMA1SSZ         equ	15351	;# 
  8899   003BF7                     DMA1SSZL        equ	15351	;# 
  8900   003BF8                     DMA1SSZH        equ	15352	;# 
  8901   003BF9                     DMA1SSA         equ	15353	;# 
  8902   003BF9                     DMA1SSAL        equ	15353	;# 
  8903   003BFA                     DMA1SSAH        equ	15354	;# 
  8904   003BFB                     DMA1SSAU        equ	15355	;# 
  8905   003BFC                     DMA1CON0        equ	15356	;# 
  8906   003BFD                     DMA1CON1        equ	15357	;# 
  8907   003BFE                     DMA1AIRQ        equ	15358	;# 
  8908   003BFF                     DMA1SIRQ        equ	15359	;# 
  8909   003C56                     CLC4CON         equ	15446	;# 
  8910   003C57                     CLC4POL         equ	15447	;# 
  8911   003C58                     CLC4SEL0        equ	15448	;# 
  8912   003C59                     CLC4SEL1        equ	15449	;# 
  8913   003C5A                     CLC4SEL2        equ	15450	;# 
  8914   003C5B                     CLC4SEL3        equ	15451	;# 
  8915   003C5C                     CLC4GLS0        equ	15452	;# 
  8916   003C5D                     CLC4GLS1        equ	15453	;# 
  8917   003C5E                     CLC4GLS2        equ	15454	;# 
  8918   003C5F                     CLC4GLS3        equ	15455	;# 
  8919   003C60                     CLC3CON         equ	15456	;# 
  8920   003C61                     CLC3POL         equ	15457	;# 
  8921   003C62                     CLC3SEL0        equ	15458	;# 
  8922   003C63                     CLC3SEL1        equ	15459	;# 
  8923   003C64                     CLC3SEL2        equ	15460	;# 
  8924   003C65                     CLC3SEL3        equ	15461	;# 
  8925   003C66                     CLC3GLS0        equ	15462	;# 
  8926   003C67                     CLC3GLS1        equ	15463	;# 
  8927   003C68                     CLC3GLS2        equ	15464	;# 
  8928   003C69                     CLC3GLS3        equ	15465	;# 
  8929   003C6A                     CLC2CON         equ	15466	;# 
  8930   003C6B                     CLC2POL         equ	15467	;# 
  8931   003C6C                     CLC2SEL0        equ	15468	;# 
  8932   003C6D                     CLC2SEL1        equ	15469	;# 
  8933   003C6E                     CLC2SEL2        equ	15470	;# 
  8934   003C6F                     CLC2SEL3        equ	15471	;# 
  8935   003C70                     CLC2GLS0        equ	15472	;# 
  8936   003C71                     CLC2GLS1        equ	15473	;# 
  8937   003C72                     CLC2GLS2        equ	15474	;# 
  8938   003C73                     CLC2GLS3        equ	15475	;# 
  8939   003C74                     CLC1CON         equ	15476	;# 
  8940   003C75                     CLC1POL         equ	15477	;# 
  8941   003C76                     CLC1SEL0        equ	15478	;# 
  8942   003C77                     CLC1SEL1        equ	15479	;# 
  8943   003C78                     CLC1SEL2        equ	15480	;# 
  8944   003C79                     CLC1SEL3        equ	15481	;# 
  8945   003C7A                     CLC1GLS0        equ	15482	;# 
  8946   003C7B                     CLC1GLS1        equ	15483	;# 
  8947   003C7C                     CLC1GLS2        equ	15484	;# 
  8948   003C7D                     CLC1GLS3        equ	15485	;# 
  8949   003C7E                     CLCDATA0        equ	15486	;# 
  8950   003CE5                     CLKRCON         equ	15589	;# 
  8951   003CE6                     CLKRCLK         equ	15590	;# 
  8952   003CFA                     MD1CON0         equ	15610	;# 
  8953   003CFB                     MD1CON1         equ	15611	;# 
  8954   003CFC                     MD1SRC          equ	15612	;# 
  8955   003CFD                     MD1CARL         equ	15613	;# 
  8956   003CFE                     MD1CARH         equ	15614	;# 
  8957   003D10                     SPI1RXB         equ	15632	;# 
  8958   003D11                     SPI1TXB         equ	15633	;# 
  8959   003D12                     SPI1TCNT        equ	15634	;# 
  8960   003D12                     SPI1TCNTL       equ	15634	;# 
  8961   003D13                     SPI1TCNTH       equ	15635	;# 
  8962   003D14                     SPI1CON0        equ	15636	;# 
  8963   003D15                     SPI1CON1        equ	15637	;# 
  8964   003D16                     SPI1CON2        equ	15638	;# 
  8965   003D17                     SPI1STATUS      equ	15639	;# 
  8966   003D18                     SPI1TWIDTH      equ	15640	;# 
  8967   003D19                     SPI1BAUD        equ	15641	;# 
  8968   003D1A                     SPI1INTF        equ	15642	;# 
  8969   003D1B                     SPI1INTE        equ	15643	;# 
  8970   003D1C                     SPI1CLK         equ	15644	;# 
  8971   003D54                     I2C2RXB         equ	15700	;# 
  8972   003D55                     I2C2TXB         equ	15701	;# 
  8973   003D56                     I2C2CNT         equ	15702	;# 
  8974   003D57                     I2C2ADB0        equ	15703	;# 
  8975   003D58                     I2C2ADB1        equ	15704	;# 
  8976   003D59                     I2C2ADR0        equ	15705	;# 
  8977   003D5A                     I2C2ADR1        equ	15706	;# 
  8978   003D5B                     I2C2ADR2        equ	15707	;# 
  8979   003D5C                     I2C2ADR3        equ	15708	;# 
  8980   003D5D                     I2C2CON0        equ	15709	;# 
  8981   003D5E                     I2C2CON1        equ	15710	;# 
  8982   003D5F                     I2C2CON2        equ	15711	;# 
  8983   003D60                     I2C2ERR         equ	15712	;# 
  8984   003D61                     I2C2STAT0       equ	15713	;# 
  8985   003D62                     I2C2STAT1       equ	15714	;# 
  8986   003D63                     I2C2PIR         equ	15715	;# 
  8987   003D64                     I2C2PIE         equ	15716	;# 
  8988   003D65                     I2C2CLK         equ	15717	;# 
  8989   003D66                     I2C2BTO         equ	15718	;# 
  8990   003D6A                     I2C1RXB         equ	15722	;# 
  8991   003D6B                     I2C1TXB         equ	15723	;# 
  8992   003D6C                     I2C1CNT         equ	15724	;# 
  8993   003D6D                     I2C1ADB0        equ	15725	;# 
  8994   003D6E                     I2C1ADB1        equ	15726	;# 
  8995   003D6F                     I2C1ADR0        equ	15727	;# 
  8996   003D70                     I2C1ADR1        equ	15728	;# 
  8997   003D71                     I2C1ADR2        equ	15729	;# 
  8998   003D72                     I2C1ADR3        equ	15730	;# 
  8999   003D73                     I2C1CON0        equ	15731	;# 
  9000   003D74                     I2C1CON1        equ	15732	;# 
  9001   003D75                     I2C1CON2        equ	15733	;# 
  9002   003D76                     I2C1ERR         equ	15734	;# 
  9003   003D77                     I2C1STAT0       equ	15735	;# 
  9004   003D78                     I2C1STAT1       equ	15736	;# 
  9005   003D79                     I2C1PIR         equ	15737	;# 
  9006   003D7A                     I2C1PIE         equ	15738	;# 
  9007   003D7B                     I2C1CLK         equ	15739	;# 
  9008   003D7C                     I2C1BTO         equ	15740	;# 
  9009   003DD0                     U2RXB           equ	15824	;# 
  9010   003DD0                     U2RXBL          equ	15824	;# 
  9011   003DD2                     U2TXB           equ	15826	;# 
  9012   003DD2                     U2TXBL          equ	15826	;# 
  9013   003DD4                     U2P1            equ	15828	;# 
  9014   003DD4                     U2P1L           equ	15828	;# 
  9015   003DD6                     U2P2            equ	15830	;# 
  9016   003DD6                     U2P2L           equ	15830	;# 
  9017   003DD8                     U2P3            equ	15832	;# 
  9018   003DD8                     U2P3L           equ	15832	;# 
  9019   003DDA                     U2CON0          equ	15834	;# 
  9020   003DDB                     U2CON1          equ	15835	;# 
  9021   003DDC                     U2CON2          equ	15836	;# 
  9022   003DDD                     U2BRG           equ	15837	;# 
  9023   003DDD                     U2BRGL          equ	15837	;# 
  9024   003DDE                     U2BRGH          equ	15838	;# 
  9025   003DDF                     U2FIFO          equ	15839	;# 
  9026   003DE0                     U2UIR           equ	15840	;# 
  9027   003DE1                     U2ERRIR         equ	15841	;# 
  9028   003DE2                     U2ERRIE         equ	15842	;# 
  9029   003DE8                     U1RXB           equ	15848	;# 
  9030   003DE8                     U1RXBL          equ	15848	;# 
  9031   003DE9                     U1RXCHK         equ	15849	;# 
  9032   003DEA                     U1TXB           equ	15850	;# 
  9033   003DEA                     U1TXBL          equ	15850	;# 
  9034   003DEB                     U1TXCHK         equ	15851	;# 
  9035   003DEC                     U1P1            equ	15852	;# 
  9036   003DEC                     U1P1L           equ	15852	;# 
  9037   003DED                     U1P1H           equ	15853	;# 
  9038   003DEE                     U1P2            equ	15854	;# 
  9039   003DEE                     U1P2L           equ	15854	;# 
  9040   003DEF                     U1P2H           equ	15855	;# 
  9041   003DF0                     U1P3            equ	15856	;# 
  9042   003DF0                     U1P3L           equ	15856	;# 
  9043   003DF1                     U1P3H           equ	15857	;# 
  9044   003DF2                     U1CON0          equ	15858	;# 
  9045   003DF3                     U1CON1          equ	15859	;# 
  9046   003DF4                     U1CON2          equ	15860	;# 
  9047   003DF5                     U1BRG           equ	15861	;# 
  9048   003DF5                     U1BRGL          equ	15861	;# 
  9049   003DF6                     U1BRGH          equ	15862	;# 
  9050   003DF7                     U1FIFO          equ	15863	;# 
  9051   003DF8                     U1UIR           equ	15864	;# 
  9052   003DF9                     U1ERRIR         equ	15865	;# 
  9053   003DFA                     U1ERRIE         equ	15866	;# 
  9054   003E9C                     DAC1CON1        equ	16028	;# 
  9055   003E9E                     DAC1CON0        equ	16030	;# 
  9056   003EB8                     CM2CON0         equ	16056	;# 
  9057   003EB9                     CM2CON1         equ	16057	;# 
  9058   003EBA                     CM2NCH          equ	16058	;# 
  9059   003EBB                     CM2PCH          equ	16059	;# 
  9060   003EBC                     CM1CON0         equ	16060	;# 
  9061   003EBD                     CM1CON1         equ	16061	;# 
  9062   003EBE                     CM1NCH          equ	16062	;# 
  9063   003EBF                     CM1PCH          equ	16063	;# 
  9064   003EC0                     CMOUT           equ	16064	;# 
  9065   003EC1                     FVRCON          equ	16065	;# 
  9066   003EC3                     ZCDCON          equ	16067	;# 
  9067   003EC9                     HLVDCON0        equ	16073	;# 
  9068   003ECA                     HLVDCON1        equ	16074	;# 
  9069   003ED7                     ADCP            equ	16087	;# 
  9070   003EDE                     ADLTH           equ	16094	;# 
  9071   003EDE                     ADLTHL          equ	16094	;# 
  9072   003EDF                     ADLTHH          equ	16095	;# 
  9073   003EE0                     ADUTH           equ	16096	;# 
  9074   003EE0                     ADUTHL          equ	16096	;# 
  9075   003EE1                     ADUTHH          equ	16097	;# 
  9076   003EE2                     ADERR           equ	16098	;# 
  9077   003EE2                     ADERRL          equ	16098	;# 
  9078   003EE3                     ADERRH          equ	16099	;# 
  9079   003EE4                     ADSTPT          equ	16100	;# 
  9080   003EE4                     ADSTPTL         equ	16100	;# 
  9081   003EE5                     ADSTPTH         equ	16101	;# 
  9082   003EE6                     ADFLTR          equ	16102	;# 
  9083   003EE6                     ADFLTRL         equ	16102	;# 
  9084   003EE7                     ADFLTRH         equ	16103	;# 
  9085   003EE8                     ADACC           equ	16104	;# 
  9086   003EE8                     ADACCL          equ	16104	;# 
  9087   003EE9                     ADACCH          equ	16105	;# 
  9088   003EEA                     ADACCU          equ	16106	;# 
  9089   003EEB                     ADCNT           equ	16107	;# 
  9090   003EEC                     ADRPT           equ	16108	;# 
  9091   003EED                     ADPREV          equ	16109	;# 
  9092   003EED                     ADPREVL         equ	16109	;# 
  9093   003EEE                     ADPREVH         equ	16110	;# 
  9094   003EEF                     ADRES           equ	16111	;# 
  9095   003EEF                     ADRESL          equ	16111	;# 
  9096   003EF0                     ADRESH          equ	16112	;# 
  9097   003EF1                     ADPCH           equ	16113	;# 
  9098   003EF3                     ADACQ           equ	16115	;# 
  9099   003EF3                     ADACQL          equ	16115	;# 
  9100   003EF4                     ADACQH          equ	16116	;# 
  9101   003EF5                     ADCAP           equ	16117	;# 
  9102   003EF6                     ADPRE           equ	16118	;# 
  9103   003EF6                     ADPREL          equ	16118	;# 
  9104   003EF7                     ADPREH          equ	16119	;# 
  9105   003EF8                     ADCON0          equ	16120	;# 
  9106   003EF9                     ADCON1          equ	16121	;# 
  9107   003EFA                     ADCON2          equ	16122	;# 
  9108   003EFB                     ADCON3          equ	16123	;# 
  9109   003EFC                     ADSTAT          equ	16124	;# 
  9110   003EFD                     ADREF           equ	16125	;# 
  9111   003EFE                     ADACT           equ	16126	;# 
  9112   003EFF                     ADCLK           equ	16127	;# 
  9113   003F12                     SMT1TMR         equ	16146	;# 
  9114   003F12                     SMT1TMRL        equ	16146	;# 
  9115   003F13                     SMT1TMRH        equ	16147	;# 
  9116   003F14                     SMT1TMRU        equ	16148	;# 
  9117   003F15                     SMT1CPR         equ	16149	;# 
  9118   003F15                     SMT1CPRL        equ	16149	;# 
  9119   003F16                     SMT1CPRH        equ	16150	;# 
  9120   003F17                     SMT1CPRU        equ	16151	;# 
  9121   003F18                     SMT1CPW         equ	16152	;# 
  9122   003F18                     SMT1CPWL        equ	16152	;# 
  9123   003F19                     SMT1CPWH        equ	16153	;# 
  9124   003F1A                     SMT1CPWU        equ	16154	;# 
  9125   003F1B                     SMT1PR          equ	16155	;# 
  9126   003F1B                     SMT1PRL         equ	16155	;# 
  9127   003F1C                     SMT1PRH         equ	16156	;# 
  9128   003F1D                     SMT1PRU         equ	16157	;# 
  9129   003F1E                     SMT1CON0        equ	16158	;# 
  9130   003F1F                     SMT1CON1        equ	16159	;# 
  9131   003F20                     SMT1STAT        equ	16160	;# 
  9132   003F21                     SMT1CLK         equ	16161	;# 
  9133   003F22                     SMT1SIG         equ	16162	;# 
  9134   003F23                     SMT1WIN         equ	16163	;# 
  9135   003F38                     NCO1ACC         equ	16184	;# 
  9136   003F38                     NCO1ACCL        equ	16184	;# 
  9137   003F39                     NCO1ACCH        equ	16185	;# 
  9138   003F3A                     NCO1ACCU        equ	16186	;# 
  9139   003F3B                     NCO1INC         equ	16187	;# 
  9140   003F3B                     NCO1INCL        equ	16187	;# 
  9141   003F3C                     NCO1INCH        equ	16188	;# 
  9142   003F3D                     NCO1INCU        equ	16189	;# 
  9143   003F3E                     NCO1CON         equ	16190	;# 
  9144   003F3F                     NCO1CLK         equ	16191	;# 
  9145   003F40                     CWG3CLK         equ	16192	;# 
  9146   003F40                     CWG3CLKCON      equ	16192	;# 
  9147   003F41                     CWG3ISM         equ	16193	;# 
  9148   003F41                     CWG3DAT         equ	16193	;# 
  9149   003F42                     CWG3DBR         equ	16194	;# 
  9150   003F43                     CWG3DBF         equ	16195	;# 
  9151   003F44                     CWG3CON0        equ	16196	;# 
  9152   003F45                     CWG3CON1        equ	16197	;# 
  9153   003F46                     CWG3AS0         equ	16198	;# 
  9154   003F47                     CWG3AS1         equ	16199	;# 
  9155   003F48                     CWG3STR         equ	16200	;# 
  9156   003F49                     CWG2CLK         equ	16201	;# 
  9157   003F49                     CWG2CLKCON      equ	16201	;# 
  9158   003F4A                     CWG2ISM         equ	16202	;# 
  9159   003F4A                     CWG2DAT         equ	16202	;# 
  9160   003F4B                     CWG2DBR         equ	16203	;# 
  9161   003F4C                     CWG2DBF         equ	16204	;# 
  9162   003F4D                     CWG2CON0        equ	16205	;# 
  9163   003F4E                     CWG2CON1        equ	16206	;# 
  9164   003F4F                     CWG2AS0         equ	16207	;# 
  9165   003F50                     CWG2AS1         equ	16208	;# 
  9166   003F51                     CWG2STR         equ	16209	;# 
  9167   003F52                     CWG1CLK         equ	16210	;# 
  9168   003F52                     CWG1CLKCON      equ	16210	;# 
  9169   003F53                     CWG1ISM         equ	16211	;# 
  9170   003F53                     CWG1DAT         equ	16211	;# 
  9171   003F54                     CWG1DBR         equ	16212	;# 
  9172   003F55                     CWG1DBF         equ	16213	;# 
  9173   003F56                     CWG1CON0        equ	16214	;# 
  9174   003F57                     CWG1CON1        equ	16215	;# 
  9175   003F58                     CWG1AS0         equ	16216	;# 
  9176   003F59                     CWG1AS1         equ	16217	;# 
  9177   003F5A                     CWG1STR         equ	16218	;# 
  9178   003F5E                     CCPTMRS0        equ	16222	;# 
  9179   003F5F                     CCPTMRS1        equ	16223	;# 
  9180   003F60                     PWM8DC          equ	16224	;# 
  9181   003F60                     PWM8DCL         equ	16224	;# 
  9182   003F61                     PWM8DCH         equ	16225	;# 
  9183   003F62                     PWM8CON         equ	16226	;# 
  9184   003F64                     PWM7DC          equ	16228	;# 
  9185   003F64                     PWM7DCL         equ	16228	;# 
  9186   003F65                     PWM7DCH         equ	16229	;# 
  9187   003F66                     PWM7CON         equ	16230	;# 
  9188   003F68                     PWM6DC          equ	16232	;# 
  9189   003F68                     PWM6DCL         equ	16232	;# 
  9190   003F69                     PWM6DCH         equ	16233	;# 
  9191   003F6A                     PWM6CON         equ	16234	;# 
  9192   003F6C                     PWM5DC          equ	16236	;# 
  9193   003F6C                     PWM5DCL         equ	16236	;# 
  9194   003F6D                     PWM5DCH         equ	16237	;# 
  9195   003F6E                     PWM5CON         equ	16238	;# 
  9196   003F70                     CCPR4           equ	16240	;# 
  9197   003F70                     CCPR4L          equ	16240	;# 
  9198   003F71                     CCPR4H          equ	16241	;# 
  9199   003F72                     CCP4CON         equ	16242	;# 
  9200   003F73                     CCP4CAP         equ	16243	;# 
  9201   003F74                     CCPR3           equ	16244	;# 
  9202   003F74                     CCPR3L          equ	16244	;# 
  9203   003F75                     CCPR3H          equ	16245	;# 
  9204   003F76                     CCP3CON         equ	16246	;# 
  9205   003F77                     CCP3CAP         equ	16247	;# 
  9206   003F78                     CCPR2           equ	16248	;# 
  9207   003F78                     CCPR2L          equ	16248	;# 
  9208   003F79                     CCPR2H          equ	16249	;# 
  9209   003F7A                     CCP2CON         equ	16250	;# 
  9210   003F7B                     CCP2CAP         equ	16251	;# 
  9211   003F7C                     CCPR1           equ	16252	;# 
  9212   003F7C                     CCPR1L          equ	16252	;# 
  9213   003F7D                     CCPR1H          equ	16253	;# 
  9214   003F7E                     CCP1CON         equ	16254	;# 
  9215   003F7F                     CCP1CAP         equ	16255	;# 
  9216   003F92                     T6TMR           equ	16274	;# 
  9217   003F92                     TMR6            equ	16274	;# 
  9218   003F93                     T6PR            equ	16275	;# 
  9219   003F93                     PR6             equ	16275	;# 
  9220   003F94                     T6CON           equ	16276	;# 
  9221   003F95                     T6HLT           equ	16277	;# 
  9222   003F96                     T6CLKCON        equ	16278	;# 
  9223   003F96                     T6CLK           equ	16278	;# 
  9224   003F97                     T6RST           equ	16279	;# 
  9225   003F98                     TMR5            equ	16280	;# 
  9226   003F98                     TMR5L           equ	16280	;# 
  9227   003F99                     TMR5H           equ	16281	;# 
  9228   003F9A                     T5CON           equ	16282	;# 
  9229   003F9A                     TMR5CON         equ	16282	;# 
  9230   003F9B                     T5GCON          equ	16283	;# 
  9231   003F9B                     TMR5GCON        equ	16283	;# 
  9232   003F9C                     T5GATE          equ	16284	;# 
  9233   003F9C                     TMR5GATE        equ	16284	;# 
  9234   003F9D                     T5CLK           equ	16285	;# 
  9235   003F9D                     TMR5CLK         equ	16285	;# 
  9236   003F9D                     PR5             equ	16285	;# 
  9237   003F9E                     T4TMR           equ	16286	;# 
  9238   003F9E                     TMR4            equ	16286	;# 
  9239   003F9F                     T4PR            equ	16287	;# 
  9240   003F9F                     PR4             equ	16287	;# 
  9241   003FA0                     T4CON           equ	16288	;# 
  9242   003FA1                     T4HLT           equ	16289	;# 
  9243   003FA2                     T4CLKCON        equ	16290	;# 
  9244   003FA2                     T4CLK           equ	16290	;# 
  9245   003FA3                     T4RST           equ	16291	;# 
  9246   003FA4                     TMR3            equ	16292	;# 
  9247   003FA4                     TMR3L           equ	16292	;# 
  9248   003FA5                     TMR3H           equ	16293	;# 
  9249   003FA6                     T3CON           equ	16294	;# 
  9250   003FA6                     TMR3CON         equ	16294	;# 
  9251   003FA7                     T3GCON          equ	16295	;# 
  9252   003FA7                     TMR3GCON        equ	16295	;# 
  9253   003FA8                     T3GATE          equ	16296	;# 
  9254   003FA8                     TMR3GATE        equ	16296	;# 
  9255   003FA9                     T3CLK           equ	16297	;# 
  9256   003FA9                     TMR3CLK         equ	16297	;# 
  9257   003FA9                     PR3             equ	16297	;# 
  9258   003FAA                     T2TMR           equ	16298	;# 
  9259   003FAA                     TMR2            equ	16298	;# 
  9260   003FAB                     T2PR            equ	16299	;# 
  9261   003FAB                     PR2             equ	16299	;# 
  9262   003FAC                     T2CON           equ	16300	;# 
  9263   003FAD                     T2HLT           equ	16301	;# 
  9264   003FAE                     T2CLKCON        equ	16302	;# 
  9265   003FAE                     T2CLK           equ	16302	;# 
  9266   003FAF                     T2RST           equ	16303	;# 
  9267   003FB0                     TMR1            equ	16304	;# 
  9268   003FB0                     TMR1L           equ	16304	;# 
  9269   003FB1                     TMR1H           equ	16305	;# 
  9270   003FB2                     T1CON           equ	16306	;# 
  9271   003FB2                     TMR1CON         equ	16306	;# 
  9272   003FB3                     T1GCON          equ	16307	;# 
  9273   003FB3                     TMR1GCON        equ	16307	;# 
  9274   003FB4                     T1GATE          equ	16308	;# 
  9275   003FB4                     TMR1GATE        equ	16308	;# 
  9276   003FB5                     T1CLK           equ	16309	;# 
  9277   003FB5                     TMR1CLK         equ	16309	;# 
  9278   003FB5                     PR1             equ	16309	;# 
  9279   003FB6                     TMR0L           equ	16310	;# 
  9280   003FB6                     TMR0            equ	16310	;# 
  9281   003FB7                     TMR0H           equ	16311	;# 
  9282   003FB7                     PR0             equ	16311	;# 
  9283   003FB8                     T0CON0          equ	16312	;# 
  9284   003FB9                     T0CON1          equ	16313	;# 
  9285   003FBA                     LATA            equ	16314	;# 
  9286   003FBB                     LATB            equ	16315	;# 
  9287   003FBC                     LATC            equ	16316	;# 
  9288   003FBD                     LATD            equ	16317	;# 
  9289   003FBE                     LATE            equ	16318	;# 
  9290   003FBF                     LATF            equ	16319	;# 
  9291   003FC2                     TRISA           equ	16322	;# 
  9292   003FC3                     TRISB           equ	16323	;# 
  9293   003FC4                     TRISC           equ	16324	;# 
  9294   003FC5                     TRISD           equ	16325	;# 
  9295   003FC6                     TRISE           equ	16326	;# 
  9296   003FC7                     TRISF           equ	16327	;# 
  9297   003FCA                     PORTA           equ	16330	;# 
  9298   003FCB                     PORTB           equ	16331	;# 
  9299   003FCC                     PORTC           equ	16332	;# 
  9300   003FCD                     PORTD           equ	16333	;# 
  9301   003FCE                     PORTE           equ	16334	;# 
  9302   003FCF                     PORTF           equ	16335	;# 
  9303   003FD2                     INTCON0         equ	16338	;# 
  9304   003FD3                     INTCON1         equ	16339	;# 
  9305   003FD4                     IVTLOCK         equ	16340	;# 
  9306   003FD5                     IVTBASE         equ	16341	;# 
  9307   003FD5                     IVTBASEL        equ	16341	;# 
  9308   003FD6                     IVTBASEH        equ	16342	;# 
  9309   003FD7                     IVTBASEU        equ	16343	;# 
  9310   003FD8                     STATUS          equ	16344	;# 
  9311   003FD9                     FSR2            equ	16345	;# 
  9312   003FD9                     FSR2L           equ	16345	;# 
  9313   003FDA                     FSR2H           equ	16346	;# 
  9314   003FDB                     PLUSW2          equ	16347	;# 
  9315   003FDC                     PREINC2         equ	16348	;# 
  9316   003FDD                     POSTDEC2        equ	16349	;# 
  9317   003FDE                     POSTINC2        equ	16350	;# 
  9318   003FDF                     INDF2           equ	16351	;# 
  9319   003FE0                     BSR             equ	16352	;# 
  9320   003FE1                     FSR1            equ	16353	;# 
  9321   003FE1                     FSR1L           equ	16353	;# 
  9322   003FE2                     FSR1H           equ	16354	;# 
  9323   003FE3                     PLUSW1          equ	16355	;# 
  9324   003FE4                     PREINC1         equ	16356	;# 
  9325   003FE5                     POSTDEC1        equ	16357	;# 
  9326   003FE6                     POSTINC1        equ	16358	;# 
  9327   003FE7                     INDF1           equ	16359	;# 
  9328   003FE8                     WREG            equ	16360	;# 
  9329   003FE9                     FSR0            equ	16361	;# 
  9330   003FE9                     FSR0L           equ	16361	;# 
  9331   003FEA                     FSR0H           equ	16362	;# 
  9332   003FEB                     PLUSW0          equ	16363	;# 
  9333   003FEC                     PREINC0         equ	16364	;# 
  9334   003FED                     POSTDEC0        equ	16365	;# 
  9335   003FEE                     POSTINC0        equ	16366	;# 
  9336   003FEF                     INDF0           equ	16367	;# 
  9337   003FF0                     PCON0           equ	16368	;# 
  9338   003FF1                     PCON1           equ	16369	;# 
  9339   003FF3                     PROD            equ	16371	;# 
  9340   003FF3                     PRODL           equ	16371	;# 
  9341   003FF4                     PRODH           equ	16372	;# 
  9342   003FF5                     TABLAT          equ	16373	;# 
  9343   003FF6                     TBLPTR          equ	16374	;# 
  9344   003FF6                     TBLPTRL         equ	16374	;# 
  9345   003FF7                     TBLPTRH         equ	16375	;# 
  9346   003FF8                     TBLPTRU         equ	16376	;# 
  9347   003FF9                     PCLAT           equ	16377	;# 
  9348   003FF9                     PCL             equ	16377	;# 
  9349   003FFA                     PCLATH          equ	16378	;# 
  9350   003FFB                     PCLATU          equ	16379	;# 
  9351   003FFC                     STKPTR          equ	16380	;# 
  9352   003FFD                     TOS             equ	16381	;# 
  9353   003FFD                     TOSL            equ	16381	;# 
  9354   003FFE                     TOSH            equ	16382	;# 
  9355   003FFF                     TOSU            equ	16383	;# 
  9356   003880                     STATUS_CSHAD    equ	14464	;# 
  9357   003881                     WREG_CSHAD      equ	14465	;# 
  9358   003882                     BSR_CSHAD       equ	14466	;# 
  9359   003883                     SHADCON         equ	14467	;# 
  9360   003884                     STATUS_SHAD     equ	14468	;# 
  9361   003885                     WREG_SHAD       equ	14469	;# 
  9362   003886                     BSR_SHAD        equ	14470	;# 
  9363   003887                     PCLATH_SHAD     equ	14471	;# 
  9364   003888                     PCLATU_SHAD     equ	14472	;# 
  9365   003889                     FSR0SH          equ	14473	;# 
  9366   003889                     FSR0L_SHAD      equ	14473	;# 
  9367   00388A                     FSR0H_SHAD      equ	14474	;# 
  9368   00388B                     FSR1SH          equ	14475	;# 
  9369   00388B                     FSR1L_SHAD      equ	14475	;# 
  9370   00388C                     FSR1H_SHAD      equ	14476	;# 
  9371   00388D                     FSR2SH          equ	14477	;# 
  9372   00388D                     FSR2L_SHAD      equ	14477	;# 
  9373   00388E                     FSR2H_SHAD      equ	14478	;# 
  9374   00388F                     PRODSH          equ	14479	;# 
  9375   00388F                     PRODL_SHAD      equ	14479	;# 
  9376   003890                     PRODH_SHAD      equ	14480	;# 
  9377   00389D                     IVTADL          equ	14493	;# 
  9378   00389E                     IVTADH          equ	14494	;# 
  9379   00389F                     IVTADU          equ	14495	;# 
  9380   00395B                     WDTCON0         equ	14683	;# 
  9381   00395C                     WDTCON1         equ	14684	;# 
  9382   00395D                     WDTPSL          equ	14685	;# 
  9383   00395E                     WDTPSH          equ	14686	;# 
  9384   00395F                     WDTTMR          equ	14687	;# 
  9385   003960                     CRCDATA         equ	14688	;# 
  9386   003960                     CRCDATL         equ	14688	;# 
  9387   003961                     CRCDATH         equ	14689	;# 
  9388   003962                     CRCACC          equ	14690	;# 
  9389   003962                     CRCACCL         equ	14690	;# 
  9390   003963                     CRCACCH         equ	14691	;# 
  9391   003964                     CRCSHFT         equ	14692	;# 
  9392   003964                     CRCSHIFTL       equ	14692	;# 
  9393   003965                     CRCSHIFTH       equ	14693	;# 
  9394   003966                     CRCXOR          equ	14694	;# 
  9395   003966                     CRCXORL         equ	14694	;# 
  9396   003967                     CRCXORH         equ	14695	;# 
  9397   003968                     CRCCON0         equ	14696	;# 
  9398   003969                     CRCCON1         equ	14697	;# 
  9399   003976                     SCANLADR        equ	14710	;# 
  9400   003976                     SCANLADRL       equ	14710	;# 
  9401   003977                     SCANLADRH       equ	14711	;# 
  9402   003978                     SCANLADRU       equ	14712	;# 
  9403   003979                     SCANHADR        equ	14713	;# 
  9404   003979                     SCANHADRL       equ	14713	;# 
  9405   00397A                     SCANHADRH       equ	14714	;# 
  9406   00397B                     SCANHADRU       equ	14715	;# 
  9407   00397C                     SCANCON0        equ	14716	;# 
  9408   00397D                     SCANTRIG        equ	14717	;# 
  9409   003980                     IPR0            equ	14720	;# 
  9410   003981                     IPR1            equ	14721	;# 
  9411   003982                     IPR2            equ	14722	;# 
  9412   003983                     IPR3            equ	14723	;# 
  9413   003984                     IPR4            equ	14724	;# 
  9414   003985                     IPR5            equ	14725	;# 
  9415   003986                     IPR6            equ	14726	;# 
  9416   003987                     IPR7            equ	14727	;# 
  9417   003988                     IPR8            equ	14728	;# 
  9418   003989                     IPR9            equ	14729	;# 
  9419   00398A                     IPR10           equ	14730	;# 
  9420   003990                     PIE0            equ	14736	;# 
  9421   003991                     PIE1            equ	14737	;# 
  9422   003992                     PIE2            equ	14738	;# 
  9423   003993                     PIE3            equ	14739	;# 
  9424   003994                     PIE4            equ	14740	;# 
  9425   003995                     PIE5            equ	14741	;# 
  9426   003996                     PIE6            equ	14742	;# 
  9427   003997                     PIE7            equ	14743	;# 
  9428   003998                     PIE8            equ	14744	;# 
  9429   003999                     PIE9            equ	14745	;# 
  9430   00399A                     PIE10           equ	14746	;# 
  9431   0039A0                     PIR0            equ	14752	;# 
  9432   0039A1                     PIR1            equ	14753	;# 
  9433   0039A2                     PIR2            equ	14754	;# 
  9434   0039A3                     PIR3            equ	14755	;# 
  9435   0039A4                     PIR4            equ	14756	;# 
  9436   0039A5                     PIR5            equ	14757	;# 
  9437   0039A6                     PIR6            equ	14758	;# 
  9438   0039A7                     PIR7            equ	14759	;# 
  9439   0039A8                     PIR8            equ	14760	;# 
  9440   0039A9                     PIR9            equ	14761	;# 
  9441   0039AA                     PIR10           equ	14762	;# 
  9442   0039C0                     PMD0            equ	14784	;# 
  9443   0039C1                     PMD1            equ	14785	;# 
  9444   0039C2                     PMD2            equ	14786	;# 
  9445   0039C3                     PMD3            equ	14787	;# 
  9446   0039C4                     PMD4            equ	14788	;# 
  9447   0039C5                     PMD5            equ	14789	;# 
  9448   0039C6                     PMD6            equ	14790	;# 
  9449   0039C7                     PMD7            equ	14791	;# 
  9450   0039D0                     BORCON          equ	14800	;# 
  9451   0039D1                     VREGCON         equ	14801	;# 
  9452   0039D8                     CPUDOZE         equ	14808	;# 
  9453   0039D9                     OSCCON1         equ	14809	;# 
  9454   0039DA                     OSCCON2         equ	14810	;# 
  9455   0039DB                     OSCCON3         equ	14811	;# 
  9456   0039DC                     OSCSTAT         equ	14812	;# 
  9457   0039DC                     OSCSTAT1        equ	14812	;# 
  9458   0039DD                     OSCEN           equ	14813	;# 
  9459   0039DE                     OSCTUNE         equ	14814	;# 
  9460   0039DF                     OSCFRQ          equ	14815	;# 
  9461   0039E0                     NVMADRL         equ	14816	;# 
  9462   0039E1                     NVMADRH         equ	14817	;# 
  9463   0039E3                     NVMDAT          equ	14819	;# 
  9464   0039E5                     NVMCON1         equ	14821	;# 
  9465   0039E6                     NVMCON2         equ	14822	;# 
  9466   0039EF                     PRLOCK          equ	14831	;# 
  9467   0039F1                     ISRPR           equ	14833	;# 
  9468   0039F2                     MAINPR          equ	14834	;# 
  9469   0039F3                     DMA1PR          equ	14835	;# 
  9470   0039F4                     DMA2PR          equ	14836	;# 
  9471   0039F7                     SCANPR          equ	14839	;# 
  9472   003A00                     RA0PPS          equ	14848	;# 
  9473   003A01                     RA1PPS          equ	14849	;# 
  9474   003A02                     RA2PPS          equ	14850	;# 
  9475   003A03                     RA3PPS          equ	14851	;# 
  9476   003A04                     RA4PPS          equ	14852	;# 
  9477   003A05                     RA5PPS          equ	14853	;# 
  9478   003A06                     RA6PPS          equ	14854	;# 
  9479   003A07                     RA7PPS          equ	14855	;# 
  9480   003A08                     RB0PPS          equ	14856	;# 
  9481   003A09                     RB1PPS          equ	14857	;# 
  9482   003A0A                     RB2PPS          equ	14858	;# 
  9483   003A0B                     RB3PPS          equ	14859	;# 
  9484   003A0C                     RB4PPS          equ	14860	;# 
  9485   003A0D                     RB5PPS          equ	14861	;# 
  9486   003A0E                     RB6PPS          equ	14862	;# 
  9487   003A0F                     RB7PPS          equ	14863	;# 
  9488   003A10                     RC0PPS          equ	14864	;# 
  9489   003A11                     RC1PPS          equ	14865	;# 
  9490   003A12                     RC2PPS          equ	14866	;# 
  9491   003A13                     RC3PPS          equ	14867	;# 
  9492   003A14                     RC4PPS          equ	14868	;# 
  9493   003A15                     RC5PPS          equ	14869	;# 
  9494   003A16                     RC6PPS          equ	14870	;# 
  9495   003A17                     RC7PPS          equ	14871	;# 
  9496   003A18                     RD0PPS          equ	14872	;# 
  9497   003A19                     RD1PPS          equ	14873	;# 
  9498   003A1A                     RD2PPS          equ	14874	;# 
  9499   003A1B                     RD3PPS          equ	14875	;# 
  9500   003A1C                     RD4PPS          equ	14876	;# 
  9501   003A1D                     RD5PPS          equ	14877	;# 
  9502   003A1E                     RD6PPS          equ	14878	;# 
  9503   003A1F                     RD7PPS          equ	14879	;# 
  9504   003A20                     RE0PPS          equ	14880	;# 
  9505   003A21                     RE1PPS          equ	14881	;# 
  9506   003A22                     RE2PPS          equ	14882	;# 
  9507   003A28                     RF0PPS          equ	14888	;# 
  9508   003A29                     RF1PPS          equ	14889	;# 
  9509   003A2A                     RF2PPS          equ	14890	;# 
  9510   003A2B                     RF3PPS          equ	14891	;# 
  9511   003A2C                     RF4PPS          equ	14892	;# 
  9512   003A2D                     RF5PPS          equ	14893	;# 
  9513   003A2E                     RF6PPS          equ	14894	;# 
  9514   003A2F                     RF7PPS          equ	14895	;# 
  9515   003A40                     ANSELA          equ	14912	;# 
  9516   003A41                     WPUA            equ	14913	;# 
  9517   003A42                     ODCONA          equ	14914	;# 
  9518   003A43                     SLRCONA         equ	14915	;# 
  9519   003A44                     INLVLA          equ	14916	;# 
  9520   003A45                     IOCAP           equ	14917	;# 
  9521   003A46                     IOCAN           equ	14918	;# 
  9522   003A47                     IOCAF           equ	14919	;# 
  9523   003A50                     ANSELB          equ	14928	;# 
  9524   003A51                     WPUB            equ	14929	;# 
  9525   003A52                     ODCONB          equ	14930	;# 
  9526   003A53                     SLRCONB         equ	14931	;# 
  9527   003A54                     INLVLB          equ	14932	;# 
  9528   003A55                     IOCBP           equ	14933	;# 
  9529   003A56                     IOCBN           equ	14934	;# 
  9530   003A57                     IOCBF           equ	14935	;# 
  9531   003A5A                     RB1I2C          equ	14938	;# 
  9532   003A5B                     RB2I2C          equ	14939	;# 
  9533   003A60                     ANSELC          equ	14944	;# 
  9534   003A61                     WPUC            equ	14945	;# 
  9535   003A62                     ODCONC          equ	14946	;# 
  9536   003A63                     SLRCONC         equ	14947	;# 
  9537   003A64                     INLVLC          equ	14948	;# 
  9538   003A65                     IOCCP           equ	14949	;# 
  9539   003A66                     IOCCN           equ	14950	;# 
  9540   003A67                     IOCCF           equ	14951	;# 
  9541   003A6A                     RC3I2C          equ	14954	;# 
  9542   003A6B                     RC4I2C          equ	14955	;# 
  9543   003A70                     ANSELD          equ	14960	;# 
  9544   003A71                     WPUD            equ	14961	;# 
  9545   003A72                     ODCOND          equ	14962	;# 
  9546   003A73                     SLRCOND         equ	14963	;# 
  9547   003A74                     INLVLD          equ	14964	;# 
  9548   003A7A                     RD0I2C          equ	14970	;# 
  9549   003A7B                     RD1I2C          equ	14971	;# 
  9550   003A80                     ANSELE          equ	14976	;# 
  9551   003A81                     WPUE            equ	14977	;# 
  9552   003A82                     ODCONE          equ	14978	;# 
  9553   003A83                     SLRCONE         equ	14979	;# 
  9554   003A84                     INLVLE          equ	14980	;# 
  9555   003A85                     IOCEP           equ	14981	;# 
  9556   003A86                     IOCEN           equ	14982	;# 
  9557   003A87                     IOCEF           equ	14983	;# 
  9558   003A90                     ANSELF          equ	14992	;# 
  9559   003A91                     WPUF            equ	14993	;# 
  9560   003A92                     ODCONF          equ	14994	;# 
  9561   003A93                     SLRCONF         equ	14995	;# 
  9562   003A94                     INLVLF          equ	14996	;# 
  9563   003ABF                     PPSLOCK         equ	15039	;# 
  9564   003AC0                     INT0PPS         equ	15040	;# 
  9565   003AC1                     INT1PPS         equ	15041	;# 
  9566   003AC2                     INT2PPS         equ	15042	;# 
  9567   003AC3                     T0CKIPPS        equ	15043	;# 
  9568   003AC4                     T1CKIPPS        equ	15044	;# 
  9569   003AC5                     T1GPPS          equ	15045	;# 
  9570   003AC6                     T3CKIPPS        equ	15046	;# 
  9571   003AC7                     T3GPPS          equ	15047	;# 
  9572   003AC8                     T5CKIPPS        equ	15048	;# 
  9573   003AC9                     T5GPPS          equ	15049	;# 
  9574   003ACA                     T2INPPS         equ	15050	;# 
  9575   003ACB                     T4INPPS         equ	15051	;# 
  9576   003ACC                     T6INPPS         equ	15052	;# 
  9577   003ACD                     CCP1PPS         equ	15053	;# 
  9578   003ACE                     CCP2PPS         equ	15054	;# 
  9579   003ACF                     CCP3PPS         equ	15055	;# 
  9580   003AD0                     CCP4PPS         equ	15056	;# 
  9581   003AD1                     SMT1WINPPS      equ	15057	;# 
  9582   003AD2                     SMT1SIGPPS      equ	15058	;# 
  9583   003AD3                     CWG1INPPS       equ	15059	;# 
  9584   003AD4                     CWG2INPPS       equ	15060	;# 
  9585   003AD5                     CWG3INPPS       equ	15061	;# 
  9586   003AD6                     MD1CARLPPS      equ	15062	;# 
  9587   003AD7                     MD1CARHPPS      equ	15063	;# 
  9588   003AD8                     MD1SRCPPS       equ	15064	;# 
  9589   003AD9                     CLCIN0PPS       equ	15065	;# 
  9590   003ADA                     CLCIN1PPS       equ	15066	;# 
  9591   003ADB                     CLCIN2PPS       equ	15067	;# 
  9592   003ADC                     CLCIN3PPS       equ	15068	;# 
  9593   003ADD                     ADACTPPS        equ	15069	;# 
  9594   003ADE                     SPI1SCKPPS      equ	15070	;# 
  9595   003ADF                     SPI1SDIPPS      equ	15071	;# 
  9596   003AE0                     SPI1SSPPS       equ	15072	;# 
  9597   003AE1                     I2C1SCLPPS      equ	15073	;# 
  9598   003AE2                     I2C1SDAPPS      equ	15074	;# 
  9599   003AE3                     I2C2SCLPPS      equ	15075	;# 
  9600   003AE4                     I2C2SDAPPS      equ	15076	;# 
  9601   003AE5                     U1RXPPS         equ	15077	;# 
  9602   003AE6                     U1CTSPPS        equ	15078	;# 
  9603   003AE8                     U2RXPPS         equ	15080	;# 
  9604   003AE9                     U2CTSPPS        equ	15081	;# 
  9605   003BC9                     DMA2BUF         equ	15305	;# 
  9606   003BCA                     DMA2DCNT        equ	15306	;# 
  9607   003BCA                     DMA2DCNTL       equ	15306	;# 
  9608   003BCB                     DMA2DCNTH       equ	15307	;# 
  9609   003BCC                     DMA2DPTR        equ	15308	;# 
  9610   003BCC                     DMA2DPTRL       equ	15308	;# 
  9611   003BCD                     DMA2DPTRH       equ	15309	;# 
  9612   003BCE                     DMA2DSZ         equ	15310	;# 
  9613   003BCE                     DMA2DSZL        equ	15310	;# 
  9614   003BCF                     DMA2DSZH        equ	15311	;# 
  9615   003BD0                     DMA2DSA         equ	15312	;# 
  9616   003BD0                     DMA2DSAL        equ	15312	;# 
  9617   003BD1                     DMA2DSAH        equ	15313	;# 
  9618   003BD2                     DMA2SCNT        equ	15314	;# 
  9619   003BD2                     DMA2SCNTL       equ	15314	;# 
  9620   003BD3                     DMA2SCNTH       equ	15315	;# 
  9621   003BD4                     DMA2SPTR        equ	15316	;# 
  9622   003BD4                     DMA2SPTRL       equ	15316	;# 
  9623   003BD5                     DMA2SPTRH       equ	15317	;# 
  9624   003BD6                     DMA2SPTRU       equ	15318	;# 
  9625   003BD7                     DMA2SSZ         equ	15319	;# 
  9626   003BD7                     DMA2SSZL        equ	15319	;# 
  9627   003BD8                     DMA2SSZH        equ	15320	;# 
  9628   003BD9                     DMA2SSA         equ	15321	;# 
  9629   003BD9                     DMA2SSAL        equ	15321	;# 
  9630   003BDA                     DMA2SSAH        equ	15322	;# 
  9631   003BDB                     DMA2SSAU        equ	15323	;# 
  9632   003BDC                     DMA2CON0        equ	15324	;# 
  9633   003BDD                     DMA2CON1        equ	15325	;# 
  9634   003BDE                     DMA2AIRQ        equ	15326	;# 
  9635   003BDF                     DMA2SIRQ        equ	15327	;# 
  9636   003BE9                     DMA1BUF         equ	15337	;# 
  9637   003BEA                     DMA1DCNT        equ	15338	;# 
  9638   003BEA                     DMA1DCNTL       equ	15338	;# 
  9639   003BEB                     DMA1DCNTH       equ	15339	;# 
  9640   003BEC                     DMA1DPTR        equ	15340	;# 
  9641   003BEC                     DMA1DPTRL       equ	15340	;# 
  9642   003BED                     DMA1DPTRH       equ	15341	;# 
  9643   003BEE                     DMA1DSZ         equ	15342	;# 
  9644   003BEE                     DMA1DSZL        equ	15342	;# 
  9645   003BEF                     DMA1DSZH        equ	15343	;# 
  9646   003BF0                     DMA1DSA         equ	15344	;# 
  9647   003BF0                     DMA1DSAL        equ	15344	;# 
  9648   003BF1                     DMA1DSAH        equ	15345	;# 
  9649   003BF2                     DMA1SCNT        equ	15346	;# 
  9650   003BF2                     DMA1SCNTL       equ	15346	;# 
  9651   003BF3                     DMA1SCNTH       equ	15347	;# 
  9652   003BF4                     DMA1SPTR        equ	15348	;# 
  9653   003BF4                     DMA1SPTRL       equ	15348	;# 
  9654   003BF5                     DMA1SPTRH       equ	15349	;# 
  9655   003BF6                     DMA1SPTRU       equ	15350	;# 
  9656   003BF7                     DMA1SSZ         equ	15351	;# 
  9657   003BF7                     DMA1SSZL        equ	15351	;# 
  9658   003BF8                     DMA1SSZH        equ	15352	;# 
  9659   003BF9                     DMA1SSA         equ	15353	;# 
  9660   003BF9                     DMA1SSAL        equ	15353	;# 
  9661   003BFA                     DMA1SSAH        equ	15354	;# 
  9662   003BFB                     DMA1SSAU        equ	15355	;# 
  9663   003BFC                     DMA1CON0        equ	15356	;# 
  9664   003BFD                     DMA1CON1        equ	15357	;# 
  9665   003BFE                     DMA1AIRQ        equ	15358	;# 
  9666   003BFF                     DMA1SIRQ        equ	15359	;# 
  9667   003C56                     CLC4CON         equ	15446	;# 
  9668   003C57                     CLC4POL         equ	15447	;# 
  9669   003C58                     CLC4SEL0        equ	15448	;# 
  9670   003C59                     CLC4SEL1        equ	15449	;# 
  9671   003C5A                     CLC4SEL2        equ	15450	;# 
  9672   003C5B                     CLC4SEL3        equ	15451	;# 
  9673   003C5C                     CLC4GLS0        equ	15452	;# 
  9674   003C5D                     CLC4GLS1        equ	15453	;# 
  9675   003C5E                     CLC4GLS2        equ	15454	;# 
  9676   003C5F                     CLC4GLS3        equ	15455	;# 
  9677   003C60                     CLC3CON         equ	15456	;# 
  9678   003C61                     CLC3POL         equ	15457	;# 
  9679   003C62                     CLC3SEL0        equ	15458	;# 
  9680   003C63                     CLC3SEL1        equ	15459	;# 
  9681   003C64                     CLC3SEL2        equ	15460	;# 
  9682   003C65                     CLC3SEL3        equ	15461	;# 
  9683   003C66                     CLC3GLS0        equ	15462	;# 
  9684   003C67                     CLC3GLS1        equ	15463	;# 
  9685   003C68                     CLC3GLS2        equ	15464	;# 
  9686   003C69                     CLC3GLS3        equ	15465	;# 
  9687   003C6A                     CLC2CON         equ	15466	;# 
  9688   003C6B                     CLC2POL         equ	15467	;# 
  9689   003C6C                     CLC2SEL0        equ	15468	;# 
  9690   003C6D                     CLC2SEL1        equ	15469	;# 
  9691   003C6E                     CLC2SEL2        equ	15470	;# 
  9692   003C6F                     CLC2SEL3        equ	15471	;# 
  9693   003C70                     CLC2GLS0        equ	15472	;# 
  9694   003C71                     CLC2GLS1        equ	15473	;# 
  9695   003C72                     CLC2GLS2        equ	15474	;# 
  9696   003C73                     CLC2GLS3        equ	15475	;# 
  9697   003C74                     CLC1CON         equ	15476	;# 
  9698   003C75                     CLC1POL         equ	15477	;# 
  9699   003C76                     CLC1SEL0        equ	15478	;# 
  9700   003C77                     CLC1SEL1        equ	15479	;# 
  9701   003C78                     CLC1SEL2        equ	15480	;# 
  9702   003C79                     CLC1SEL3        equ	15481	;# 
  9703   003C7A                     CLC1GLS0        equ	15482	;# 
  9704   003C7B                     CLC1GLS1        equ	15483	;# 
  9705   003C7C                     CLC1GLS2        equ	15484	;# 
  9706   003C7D                     CLC1GLS3        equ	15485	;# 
  9707   003C7E                     CLCDATA0        equ	15486	;# 
  9708   003CE5                     CLKRCON         equ	15589	;# 
  9709   003CE6                     CLKRCLK         equ	15590	;# 
  9710   003CFA                     MD1CON0         equ	15610	;# 
  9711   003CFB                     MD1CON1         equ	15611	;# 
  9712   003CFC                     MD1SRC          equ	15612	;# 
  9713   003CFD                     MD1CARL         equ	15613	;# 
  9714   003CFE                     MD1CARH         equ	15614	;# 
  9715   003D10                     SPI1RXB         equ	15632	;# 
  9716   003D11                     SPI1TXB         equ	15633	;# 
  9717   003D12                     SPI1TCNT        equ	15634	;# 
  9718   003D12                     SPI1TCNTL       equ	15634	;# 
  9719   003D13                     SPI1TCNTH       equ	15635	;# 
  9720   003D14                     SPI1CON0        equ	15636	;# 
  9721   003D15                     SPI1CON1        equ	15637	;# 
  9722   003D16                     SPI1CON2        equ	15638	;# 
  9723   003D17                     SPI1STATUS      equ	15639	;# 
  9724   003D18                     SPI1TWIDTH      equ	15640	;# 
  9725   003D19                     SPI1BAUD        equ	15641	;# 
  9726   003D1A                     SPI1INTF        equ	15642	;# 
  9727   003D1B                     SPI1INTE        equ	15643	;# 
  9728   003D1C                     SPI1CLK         equ	15644	;# 
  9729   003D54                     I2C2RXB         equ	15700	;# 
  9730   003D55                     I2C2TXB         equ	15701	;# 
  9731   003D56                     I2C2CNT         equ	15702	;# 
  9732   003D57                     I2C2ADB0        equ	15703	;# 
  9733   003D58                     I2C2ADB1        equ	15704	;# 
  9734   003D59                     I2C2ADR0        equ	15705	;# 
  9735   003D5A                     I2C2ADR1        equ	15706	;# 
  9736   003D5B                     I2C2ADR2        equ	15707	;# 
  9737   003D5C                     I2C2ADR3        equ	15708	;# 
  9738   003D5D                     I2C2CON0        equ	15709	;# 
  9739   003D5E                     I2C2CON1        equ	15710	;# 
  9740   003D5F                     I2C2CON2        equ	15711	;# 
  9741   003D60                     I2C2ERR         equ	15712	;# 
  9742   003D61                     I2C2STAT0       equ	15713	;# 
  9743   003D62                     I2C2STAT1       equ	15714	;# 
  9744   003D63                     I2C2PIR         equ	15715	;# 
  9745   003D64                     I2C2PIE         equ	15716	;# 
  9746   003D65                     I2C2CLK         equ	15717	;# 
  9747   003D66                     I2C2BTO         equ	15718	;# 
  9748   003D6A                     I2C1RXB         equ	15722	;# 
  9749   003D6B                     I2C1TXB         equ	15723	;# 
  9750   003D6C                     I2C1CNT         equ	15724	;# 
  9751   003D6D                     I2C1ADB0        equ	15725	;# 
  9752   003D6E                     I2C1ADB1        equ	15726	;# 
  9753   003D6F                     I2C1ADR0        equ	15727	;# 
  9754   003D70                     I2C1ADR1        equ	15728	;# 
  9755   003D71                     I2C1ADR2        equ	15729	;# 
  9756   003D72                     I2C1ADR3        equ	15730	;# 
  9757   003D73                     I2C1CON0        equ	15731	;# 
  9758   003D74                     I2C1CON1        equ	15732	;# 
  9759   003D75                     I2C1CON2        equ	15733	;# 
  9760   003D76                     I2C1ERR         equ	15734	;# 
  9761   003D77                     I2C1STAT0       equ	15735	;# 
  9762   003D78                     I2C1STAT1       equ	15736	;# 
  9763   003D79                     I2C1PIR         equ	15737	;# 
  9764   003D7A                     I2C1PIE         equ	15738	;# 
  9765   003D7B                     I2C1CLK         equ	15739	;# 
  9766   003D7C                     I2C1BTO         equ	15740	;# 
  9767   003DD0                     U2RXB           equ	15824	;# 
  9768   003DD0                     U2RXBL          equ	15824	;# 
  9769   003DD2                     U2TXB           equ	15826	;# 
  9770   003DD2                     U2TXBL          equ	15826	;# 
  9771   003DD4                     U2P1            equ	15828	;# 
  9772   003DD4                     U2P1L           equ	15828	;# 
  9773   003DD6                     U2P2            equ	15830	;# 
  9774   003DD6                     U2P2L           equ	15830	;# 
  9775   003DD8                     U2P3            equ	15832	;# 
  9776   003DD8                     U2P3L           equ	15832	;# 
  9777   003DDA                     U2CON0          equ	15834	;# 
  9778   003DDB                     U2CON1          equ	15835	;# 
  9779   003DDC                     U2CON2          equ	15836	;# 
  9780   003DDD                     U2BRG           equ	15837	;# 
  9781   003DDD                     U2BRGL          equ	15837	;# 
  9782   003DDE                     U2BRGH          equ	15838	;# 
  9783   003DDF                     U2FIFO          equ	15839	;# 
  9784   003DE0                     U2UIR           equ	15840	;# 
  9785   003DE1                     U2ERRIR         equ	15841	;# 
  9786   003DE2                     U2ERRIE         equ	15842	;# 
  9787   003DE8                     U1RXB           equ	15848	;# 
  9788   003DE8                     U1RXBL          equ	15848	;# 
  9789   003DE9                     U1RXCHK         equ	15849	;# 
  9790   003DEA                     U1TXB           equ	15850	;# 
  9791   003DEA                     U1TXBL          equ	15850	;# 
  9792   003DEB                     U1TXCHK         equ	15851	;# 
  9793   003DEC                     U1P1            equ	15852	;# 
  9794   003DEC                     U1P1L           equ	15852	;# 
  9795   003DED                     U1P1H           equ	15853	;# 
  9796   003DEE                     U1P2            equ	15854	;# 
  9797   003DEE                     U1P2L           equ	15854	;# 
  9798   003DEF                     U1P2H           equ	15855	;# 
  9799   003DF0                     U1P3            equ	15856	;# 
  9800   003DF0                     U1P3L           equ	15856	;# 
  9801   003DF1                     U1P3H           equ	15857	;# 
  9802   003DF2                     U1CON0          equ	15858	;# 
  9803   003DF3                     U1CON1          equ	15859	;# 
  9804   003DF4                     U1CON2          equ	15860	;# 
  9805   003DF5                     U1BRG           equ	15861	;# 
  9806   003DF5                     U1BRGL          equ	15861	;# 
  9807   003DF6                     U1BRGH          equ	15862	;# 
  9808   003DF7                     U1FIFO          equ	15863	;# 
  9809   003DF8                     U1UIR           equ	15864	;# 
  9810   003DF9                     U1ERRIR         equ	15865	;# 
  9811   003DFA                     U1ERRIE         equ	15866	;# 
  9812   003E9C                     DAC1CON1        equ	16028	;# 
  9813   003E9E                     DAC1CON0        equ	16030	;# 
  9814   003EB8                     CM2CON0         equ	16056	;# 
  9815   003EB9                     CM2CON1         equ	16057	;# 
  9816   003EBA                     CM2NCH          equ	16058	;# 
  9817   003EBB                     CM2PCH          equ	16059	;# 
  9818   003EBC                     CM1CON0         equ	16060	;# 
  9819   003EBD                     CM1CON1         equ	16061	;# 
  9820   003EBE                     CM1NCH          equ	16062	;# 
  9821   003EBF                     CM1PCH          equ	16063	;# 
  9822   003EC0                     CMOUT           equ	16064	;# 
  9823   003EC1                     FVRCON          equ	16065	;# 
  9824   003EC3                     ZCDCON          equ	16067	;# 
  9825   003EC9                     HLVDCON0        equ	16073	;# 
  9826   003ECA                     HLVDCON1        equ	16074	;# 
  9827   003ED7                     ADCP            equ	16087	;# 
  9828   003EDE                     ADLTH           equ	16094	;# 
  9829   003EDE                     ADLTHL          equ	16094	;# 
  9830   003EDF                     ADLTHH          equ	16095	;# 
  9831   003EE0                     ADUTH           equ	16096	;# 
  9832   003EE0                     ADUTHL          equ	16096	;# 
  9833   003EE1                     ADUTHH          equ	16097	;# 
  9834   003EE2                     ADERR           equ	16098	;# 
  9835   003EE2                     ADERRL          equ	16098	;# 
  9836   003EE3                     ADERRH          equ	16099	;# 
  9837   003EE4                     ADSTPT          equ	16100	;# 
  9838   003EE4                     ADSTPTL         equ	16100	;# 
  9839   003EE5                     ADSTPTH         equ	16101	;# 
  9840   003EE6                     ADFLTR          equ	16102	;# 
  9841   003EE6                     ADFLTRL         equ	16102	;# 
  9842   003EE7                     ADFLTRH         equ	16103	;# 
  9843   003EE8                     ADACC           equ	16104	;# 
  9844   003EE8                     ADACCL          equ	16104	;# 
  9845   003EE9                     ADACCH          equ	16105	;# 
  9846   003EEA                     ADACCU          equ	16106	;# 
  9847   003EEB                     ADCNT           equ	16107	;# 
  9848   003EEC                     ADRPT           equ	16108	;# 
  9849   003EED                     ADPREV          equ	16109	;# 
  9850   003EED                     ADPREVL         equ	16109	;# 
  9851   003EEE                     ADPREVH         equ	16110	;# 
  9852   003EEF                     ADRES           equ	16111	;# 
  9853   003EEF                     ADRESL          equ	16111	;# 
  9854   003EF0                     ADRESH          equ	16112	;# 
  9855   003EF1                     ADPCH           equ	16113	;# 
  9856   003EF3                     ADACQ           equ	16115	;# 
  9857   003EF3                     ADACQL          equ	16115	;# 
  9858   003EF4                     ADACQH          equ	16116	;# 
  9859   003EF5                     ADCAP           equ	16117	;# 
  9860   003EF6                     ADPRE           equ	16118	;# 
  9861   003EF6                     ADPREL          equ	16118	;# 
  9862   003EF7                     ADPREH          equ	16119	;# 
  9863   003EF8                     ADCON0          equ	16120	;# 
  9864   003EF9                     ADCON1          equ	16121	;# 
  9865   003EFA                     ADCON2          equ	16122	;# 
  9866   003EFB                     ADCON3          equ	16123	;# 
  9867   003EFC                     ADSTAT          equ	16124	;# 
  9868   003EFD                     ADREF           equ	16125	;# 
  9869   003EFE                     ADACT           equ	16126	;# 
  9870   003EFF                     ADCLK           equ	16127	;# 
  9871   003F12                     SMT1TMR         equ	16146	;# 
  9872   003F12                     SMT1TMRL        equ	16146	;# 
  9873   003F13                     SMT1TMRH        equ	16147	;# 
  9874   003F14                     SMT1TMRU        equ	16148	;# 
  9875   003F15                     SMT1CPR         equ	16149	;# 
  9876   003F15                     SMT1CPRL        equ	16149	;# 
  9877   003F16                     SMT1CPRH        equ	16150	;# 
  9878   003F17                     SMT1CPRU        equ	16151	;# 
  9879   003F18                     SMT1CPW         equ	16152	;# 
  9880   003F18                     SMT1CPWL        equ	16152	;# 
  9881   003F19                     SMT1CPWH        equ	16153	;# 
  9882   003F1A                     SMT1CPWU        equ	16154	;# 
  9883   003F1B                     SMT1PR          equ	16155	;# 
  9884   003F1B                     SMT1PRL         equ	16155	;# 
  9885   003F1C                     SMT1PRH         equ	16156	;# 
  9886   003F1D                     SMT1PRU         equ	16157	;# 
  9887   003F1E                     SMT1CON0        equ	16158	;# 
  9888   003F1F                     SMT1CON1        equ	16159	;# 
  9889   003F20                     SMT1STAT        equ	16160	;# 
  9890   003F21                     SMT1CLK         equ	16161	;# 
  9891   003F22                     SMT1SIG         equ	16162	;# 
  9892   003F23                     SMT1WIN         equ	16163	;# 
  9893   003F38                     NCO1ACC         equ	16184	;# 
  9894   003F38                     NCO1ACCL        equ	16184	;# 
  9895   003F39                     NCO1ACCH        equ	16185	;# 
  9896   003F3A                     NCO1ACCU        equ	16186	;# 
  9897   003F3B                     NCO1INC         equ	16187	;# 
  9898   003F3B                     NCO1INCL        equ	16187	;# 
  9899   003F3C                     NCO1INCH        equ	16188	;# 
  9900   003F3D                     NCO1INCU        equ	16189	;# 
  9901   003F3E                     NCO1CON         equ	16190	;# 
  9902   003F3F                     NCO1CLK         equ	16191	;# 
  9903   003F40                     CWG3CLK         equ	16192	;# 
  9904   003F40                     CWG3CLKCON      equ	16192	;# 
  9905   003F41                     CWG3ISM         equ	16193	;# 
  9906   003F41                     CWG3DAT         equ	16193	;# 
  9907   003F42                     CWG3DBR         equ	16194	;# 
  9908   003F43                     CWG3DBF         equ	16195	;# 
  9909   003F44                     CWG3CON0        equ	16196	;# 
  9910   003F45                     CWG3CON1        equ	16197	;# 
  9911   003F46                     CWG3AS0         equ	16198	;# 
  9912   003F47                     CWG3AS1         equ	16199	;# 
  9913   003F48                     CWG3STR         equ	16200	;# 
  9914   003F49                     CWG2CLK         equ	16201	;# 
  9915   003F49                     CWG2CLKCON      equ	16201	;# 
  9916   003F4A                     CWG2ISM         equ	16202	;# 
  9917   003F4A                     CWG2DAT         equ	16202	;# 
  9918   003F4B                     CWG2DBR         equ	16203	;# 
  9919   003F4C                     CWG2DBF         equ	16204	;# 
  9920   003F4D                     CWG2CON0        equ	16205	;# 
  9921   003F4E                     CWG2CON1        equ	16206	;# 
  9922   003F4F                     CWG2AS0         equ	16207	;# 
  9923   003F50                     CWG2AS1         equ	16208	;# 
  9924   003F51                     CWG2STR         equ	16209	;# 
  9925   003F52                     CWG1CLK         equ	16210	;# 
  9926   003F52                     CWG1CLKCON      equ	16210	;# 
  9927   003F53                     CWG1ISM         equ	16211	;# 
  9928   003F53                     CWG1DAT         equ	16211	;# 
  9929   003F54                     CWG1DBR         equ	16212	;# 
  9930   003F55                     CWG1DBF         equ	16213	;# 
  9931   003F56                     CWG1CON0        equ	16214	;# 
  9932   003F57                     CWG1CON1        equ	16215	;# 
  9933   003F58                     CWG1AS0         equ	16216	;# 
  9934   003F59                     CWG1AS1         equ	16217	;# 
  9935   003F5A                     CWG1STR         equ	16218	;# 
  9936   003F5E                     CCPTMRS0        equ	16222	;# 
  9937   003F5F                     CCPTMRS1        equ	16223	;# 
  9938   003F60                     PWM8DC          equ	16224	;# 
  9939   003F60                     PWM8DCL         equ	16224	;# 
  9940   003F61                     PWM8DCH         equ	16225	;# 
  9941   003F62                     PWM8CON         equ	16226	;# 
  9942   003F64                     PWM7DC          equ	16228	;# 
  9943   003F64                     PWM7DCL         equ	16228	;# 
  9944   003F65                     PWM7DCH         equ	16229	;# 
  9945   003F66                     PWM7CON         equ	16230	;# 
  9946   003F68                     PWM6DC          equ	16232	;# 
  9947   003F68                     PWM6DCL         equ	16232	;# 
  9948   003F69                     PWM6DCH         equ	16233	;# 
  9949   003F6A                     PWM6CON         equ	16234	;# 
  9950   003F6C                     PWM5DC          equ	16236	;# 
  9951   003F6C                     PWM5DCL         equ	16236	;# 
  9952   003F6D                     PWM5DCH         equ	16237	;# 
  9953   003F6E                     PWM5CON         equ	16238	;# 
  9954   003F70                     CCPR4           equ	16240	;# 
  9955   003F70                     CCPR4L          equ	16240	;# 
  9956   003F71                     CCPR4H          equ	16241	;# 
  9957   003F72                     CCP4CON         equ	16242	;# 
  9958   003F73                     CCP4CAP         equ	16243	;# 
  9959   003F74                     CCPR3           equ	16244	;# 
  9960   003F74                     CCPR3L          equ	16244	;# 
  9961   003F75                     CCPR3H          equ	16245	;# 
  9962   003F76                     CCP3CON         equ	16246	;# 
  9963   003F77                     CCP3CAP         equ	16247	;# 
  9964   003F78                     CCPR2           equ	16248	;# 
  9965   003F78                     CCPR2L          equ	16248	;# 
  9966   003F79                     CCPR2H          equ	16249	;# 
  9967   003F7A                     CCP2CON         equ	16250	;# 
  9968   003F7B                     CCP2CAP         equ	16251	;# 
  9969   003F7C                     CCPR1           equ	16252	;# 
  9970   003F7C                     CCPR1L          equ	16252	;# 
  9971   003F7D                     CCPR1H          equ	16253	;# 
  9972   003F7E                     CCP1CON         equ	16254	;# 
  9973   003F7F                     CCP1CAP         equ	16255	;# 
  9974   003F92                     T6TMR           equ	16274	;# 
  9975   003F92                     TMR6            equ	16274	;# 
  9976   003F93                     T6PR            equ	16275	;# 
  9977   003F93                     PR6             equ	16275	;# 
  9978   003F94                     T6CON           equ	16276	;# 
  9979   003F95                     T6HLT           equ	16277	;# 
  9980   003F96                     T6CLKCON        equ	16278	;# 
  9981   003F96                     T6CLK           equ	16278	;# 
  9982   003F97                     T6RST           equ	16279	;# 
  9983   003F98                     TMR5            equ	16280	;# 
  9984   003F98                     TMR5L           equ	16280	;# 
  9985   003F99                     TMR5H           equ	16281	;# 
  9986   003F9A                     T5CON           equ	16282	;# 
  9987   003F9A                     TMR5CON         equ	16282	;# 
  9988   003F9B                     T5GCON          equ	16283	;# 
  9989   003F9B                     TMR5GCON        equ	16283	;# 
  9990   003F9C                     T5GATE          equ	16284	;# 
  9991   003F9C                     TMR5GATE        equ	16284	;# 
  9992   003F9D                     T5CLK           equ	16285	;# 
  9993   003F9D                     TMR5CLK         equ	16285	;# 
  9994   003F9D                     PR5             equ	16285	;# 
  9995   003F9E                     T4TMR           equ	16286	;# 
  9996   003F9E                     TMR4            equ	16286	;# 
  9997   003F9F                     T4PR            equ	16287	;# 
  9998   003F9F                     PR4             equ	16287	;# 
  9999   003FA0                     T4CON           equ	16288	;# 
 10000   003FA1                     T4HLT           equ	16289	;# 
 10001   003FA2                     T4CLKCON        equ	16290	;# 
 10002   003FA2                     T4CLK           equ	16290	;# 
 10003   003FA3                     T4RST           equ	16291	;# 
 10004   003FA4                     TMR3            equ	16292	;# 
 10005   003FA4                     TMR3L           equ	16292	;# 
 10006   003FA5                     TMR3H           equ	16293	;# 
 10007   003FA6                     T3CON           equ	16294	;# 
 10008   003FA6                     TMR3CON         equ	16294	;# 
 10009   003FA7                     T3GCON          equ	16295	;# 
 10010   003FA7                     TMR3GCON        equ	16295	;# 
 10011   003FA8                     T3GATE          equ	16296	;# 
 10012   003FA8                     TMR3GATE        equ	16296	;# 
 10013   003FA9                     T3CLK           equ	16297	;# 
 10014   003FA9                     TMR3CLK         equ	16297	;# 
 10015   003FA9                     PR3             equ	16297	;# 
 10016   003FAA                     T2TMR           equ	16298	;# 
 10017   003FAA                     TMR2            equ	16298	;# 
 10018   003FAB                     T2PR            equ	16299	;# 
 10019   003FAB                     PR2             equ	16299	;# 
 10020   003FAC                     T2CON           equ	16300	;# 
 10021   003FAD                     T2HLT           equ	16301	;# 
 10022   003FAE                     T2CLKCON        equ	16302	;# 
 10023   003FAE                     T2CLK           equ	16302	;# 
 10024   003FAF                     T2RST           equ	16303	;# 
 10025   003FB0                     TMR1            equ	16304	;# 
 10026   003FB0                     TMR1L           equ	16304	;# 
 10027   003FB1                     TMR1H           equ	16305	;# 
 10028   003FB2                     T1CON           equ	16306	;# 
 10029   003FB2                     TMR1CON         equ	16306	;# 
 10030   003FB3                     T1GCON          equ	16307	;# 
 10031   003FB3                     TMR1GCON        equ	16307	;# 
 10032   003FB4                     T1GATE          equ	16308	;# 
 10033   003FB4                     TMR1GATE        equ	16308	;# 
 10034   003FB5                     T1CLK           equ	16309	;# 
 10035   003FB5                     TMR1CLK         equ	16309	;# 
 10036   003FB5                     PR1             equ	16309	;# 
 10037   003FB6                     TMR0L           equ	16310	;# 
 10038   003FB6                     TMR0            equ	16310	;# 
 10039   003FB7                     TMR0H           equ	16311	;# 
 10040   003FB7                     PR0             equ	16311	;# 
 10041   003FB8                     T0CON0          equ	16312	;# 
 10042   003FB9                     T0CON1          equ	16313	;# 
 10043   003FBA                     LATA            equ	16314	;# 
 10044   003FBB                     LATB            equ	16315	;# 
 10045   003FBC                     LATC            equ	16316	;# 
 10046   003FBD                     LATD            equ	16317	;# 
 10047   003FBE                     LATE            equ	16318	;# 
 10048   003FBF                     LATF            equ	16319	;# 
 10049   003FC2                     TRISA           equ	16322	;# 
 10050   003FC3                     TRISB           equ	16323	;# 
 10051   003FC4                     TRISC           equ	16324	;# 
 10052   003FC5                     TRISD           equ	16325	;# 
 10053   003FC6                     TRISE           equ	16326	;# 
 10054   003FC7                     TRISF           equ	16327	;# 
 10055   003FCA                     PORTA           equ	16330	;# 
 10056   003FCB                     PORTB           equ	16331	;# 
 10057   003FCC                     PORTC           equ	16332	;# 
 10058   003FCD                     PORTD           equ	16333	;# 
 10059   003FCE                     PORTE           equ	16334	;# 
 10060   003FCF                     PORTF           equ	16335	;# 
 10061   003FD2                     INTCON0         equ	16338	;# 
 10062   003FD3                     INTCON1         equ	16339	;# 
 10063   003FD4                     IVTLOCK         equ	16340	;# 
 10064   003FD5                     IVTBASE         equ	16341	;# 
 10065   003FD5                     IVTBASEL        equ	16341	;# 
 10066   003FD6                     IVTBASEH        equ	16342	;# 
 10067   003FD7                     IVTBASEU        equ	16343	;# 
 10068   003FD8                     STATUS          equ	16344	;# 
 10069   003FD9                     FSR2            equ	16345	;# 
 10070   003FD9                     FSR2L           equ	16345	;# 
 10071   003FDA                     FSR2H           equ	16346	;# 
 10072   003FDB                     PLUSW2          equ	16347	;# 
 10073   003FDC                     PREINC2         equ	16348	;# 
 10074   003FDD                     POSTDEC2        equ	16349	;# 
 10075   003FDE                     POSTINC2        equ	16350	;# 
 10076   003FDF                     INDF2           equ	16351	;# 
 10077   003FE0                     BSR             equ	16352	;# 
 10078   003FE1                     FSR1            equ	16353	;# 
 10079   003FE1                     FSR1L           equ	16353	;# 
 10080   003FE2                     FSR1H           equ	16354	;# 
 10081   003FE3                     PLUSW1          equ	16355	;# 
 10082   003FE4                     PREINC1         equ	16356	;# 
 10083   003FE5                     POSTDEC1        equ	16357	;# 
 10084   003FE6                     POSTINC1        equ	16358	;# 
 10085   003FE7                     INDF1           equ	16359	;# 
 10086   003FE8                     WREG            equ	16360	;# 
 10087   003FE9                     FSR0            equ	16361	;# 
 10088   003FE9                     FSR0L           equ	16361	;# 
 10089   003FEA                     FSR0H           equ	16362	;# 
 10090   003FEB                     PLUSW0          equ	16363	;# 
 10091   003FEC                     PREINC0         equ	16364	;# 
 10092   003FED                     POSTDEC0        equ	16365	;# 
 10093   003FEE                     POSTINC0        equ	16366	;# 
 10094   003FEF                     INDF0           equ	16367	;# 
 10095   003FF0                     PCON0           equ	16368	;# 
 10096   003FF1                     PCON1           equ	16369	;# 
 10097   003FF3                     PROD            equ	16371	;# 
 10098   003FF3                     PRODL           equ	16371	;# 
 10099   003FF4                     PRODH           equ	16372	;# 
 10100   003FF5                     TABLAT          equ	16373	;# 
 10101   003FF6                     TBLPTR          equ	16374	;# 
 10102   003FF6                     TBLPTRL         equ	16374	;# 
 10103   003FF7                     TBLPTRH         equ	16375	;# 
 10104   003FF8                     TBLPTRU         equ	16376	;# 
 10105   003FF9                     PCLAT           equ	16377	;# 
 10106   003FF9                     PCL             equ	16377	;# 
 10107   003FFA                     PCLATH          equ	16378	;# 
 10108   003FFB                     PCLATU          equ	16379	;# 
 10109   003FFC                     STKPTR          equ	16380	;# 
 10110   003FFD                     TOS             equ	16381	;# 
 10111   003FFD                     TOSL            equ	16381	;# 
 10112   003FFE                     TOSH            equ	16382	;# 
 10113   003FFF                     TOSU            equ	16383	;# 
 10114   003880                     STATUS_CSHAD    equ	14464	;# 
 10115   003881                     WREG_CSHAD      equ	14465	;# 
 10116   003882                     BSR_CSHAD       equ	14466	;# 
 10117   003883                     SHADCON         equ	14467	;# 
 10118   003884                     STATUS_SHAD     equ	14468	;# 
 10119   003885                     WREG_SHAD       equ	14469	;# 
 10120   003886                     BSR_SHAD        equ	14470	;# 
 10121   003887                     PCLATH_SHAD     equ	14471	;# 
 10122   003888                     PCLATU_SHAD     equ	14472	;# 
 10123   003889                     FSR0SH          equ	14473	;# 
 10124   003889                     FSR0L_SHAD      equ	14473	;# 
 10125   00388A                     FSR0H_SHAD      equ	14474	;# 
 10126   00388B                     FSR1SH          equ	14475	;# 
 10127   00388B                     FSR1L_SHAD      equ	14475	;# 
 10128   00388C                     FSR1H_SHAD      equ	14476	;# 
 10129   00388D                     FSR2SH          equ	14477	;# 
 10130   00388D                     FSR2L_SHAD      equ	14477	;# 
 10131   00388E                     FSR2H_SHAD      equ	14478	;# 
 10132   00388F                     PRODSH          equ	14479	;# 
 10133   00388F                     PRODL_SHAD      equ	14479	;# 
 10134   003890                     PRODH_SHAD      equ	14480	;# 
 10135   00389D                     IVTADL          equ	14493	;# 
 10136   00389E                     IVTADH          equ	14494	;# 
 10137   00389F                     IVTADU          equ	14495	;# 
 10138   00395B                     WDTCON0         equ	14683	;# 
 10139   00395C                     WDTCON1         equ	14684	;# 
 10140   00395D                     WDTPSL          equ	14685	;# 
 10141   00395E                     WDTPSH          equ	14686	;# 
 10142   00395F                     WDTTMR          equ	14687	;# 
 10143   003960                     CRCDATA         equ	14688	;# 
 10144   003960                     CRCDATL         equ	14688	;# 
 10145   003961                     CRCDATH         equ	14689	;# 
 10146   003962                     CRCACC          equ	14690	;# 
 10147   003962                     CRCACCL         equ	14690	;# 
 10148   003963                     CRCACCH         equ	14691	;# 
 10149   003964                     CRCSHFT         equ	14692	;# 
 10150   003964                     CRCSHIFTL       equ	14692	;# 
 10151   003965                     CRCSHIFTH       equ	14693	;# 
 10152   003966                     CRCXOR          equ	14694	;# 
 10153   003966                     CRCXORL         equ	14694	;# 
 10154   003967                     CRCXORH         equ	14695	;# 
 10155   003968                     CRCCON0         equ	14696	;# 
 10156   003969                     CRCCON1         equ	14697	;# 
 10157   003976                     SCANLADR        equ	14710	;# 
 10158   003976                     SCANLADRL       equ	14710	;# 
 10159   003977                     SCANLADRH       equ	14711	;# 
 10160   003978                     SCANLADRU       equ	14712	;# 
 10161   003979                     SCANHADR        equ	14713	;# 
 10162   003979                     SCANHADRL       equ	14713	;# 
 10163   00397A                     SCANHADRH       equ	14714	;# 
 10164   00397B                     SCANHADRU       equ	14715	;# 
 10165   00397C                     SCANCON0        equ	14716	;# 
 10166   00397D                     SCANTRIG        equ	14717	;# 
 10167   003980                     IPR0            equ	14720	;# 
 10168   003981                     IPR1            equ	14721	;# 
 10169   003982                     IPR2            equ	14722	;# 
 10170   003983                     IPR3            equ	14723	;# 
 10171   003984                     IPR4            equ	14724	;# 
 10172   003985                     IPR5            equ	14725	;# 
 10173   003986                     IPR6            equ	14726	;# 
 10174   003987                     IPR7            equ	14727	;# 
 10175   003988                     IPR8            equ	14728	;# 
 10176   003989                     IPR9            equ	14729	;# 
 10177   00398A                     IPR10           equ	14730	;# 
 10178   003990                     PIE0            equ	14736	;# 
 10179   003991                     PIE1            equ	14737	;# 
 10180   003992                     PIE2            equ	14738	;# 
 10181   003993                     PIE3            equ	14739	;# 
 10182   003994                     PIE4            equ	14740	;# 
 10183   003995                     PIE5            equ	14741	;# 
 10184   003996                     PIE6            equ	14742	;# 
 10185   003997                     PIE7            equ	14743	;# 
 10186   003998                     PIE8            equ	14744	;# 
 10187   003999                     PIE9            equ	14745	;# 
 10188   00399A                     PIE10           equ	14746	;# 
 10189   0039A0                     PIR0            equ	14752	;# 
 10190   0039A1                     PIR1            equ	14753	;# 
 10191   0039A2                     PIR2            equ	14754	;# 
 10192   0039A3                     PIR3            equ	14755	;# 
 10193   0039A4                     PIR4            equ	14756	;# 
 10194   0039A5                     PIR5            equ	14757	;# 
 10195   0039A6                     PIR6            equ	14758	;# 
 10196   0039A7                     PIR7            equ	14759	;# 
 10197   0039A8                     PIR8            equ	14760	;# 
 10198   0039A9                     PIR9            equ	14761	;# 
 10199   0039AA                     PIR10           equ	14762	;# 
 10200   0039C0                     PMD0            equ	14784	;# 
 10201   0039C1                     PMD1            equ	14785	;# 
 10202   0039C2                     PMD2            equ	14786	;# 
 10203   0039C3                     PMD3            equ	14787	;# 
 10204   0039C4                     PMD4            equ	14788	;# 
 10205   0039C5                     PMD5            equ	14789	;# 
 10206   0039C6                     PMD6            equ	14790	;# 
 10207   0039C7                     PMD7            equ	14791	;# 
 10208   0039D0                     BORCON          equ	14800	;# 
 10209   0039D1                     VREGCON         equ	14801	;# 
 10210   0039D8                     CPUDOZE         equ	14808	;# 
 10211   0039D9                     OSCCON1         equ	14809	;# 
 10212   0039DA                     OSCCON2         equ	14810	;# 
 10213   0039DB                     OSCCON3         equ	14811	;# 
 10214   0039DC                     OSCSTAT         equ	14812	;# 
 10215   0039DC                     OSCSTAT1        equ	14812	;# 
 10216   0039DD                     OSCEN           equ	14813	;# 
 10217   0039DE                     OSCTUNE         equ	14814	;# 
 10218   0039DF                     OSCFRQ          equ	14815	;# 
 10219   0039E0                     NVMADRL         equ	14816	;# 
 10220   0039E1                     NVMADRH         equ	14817	;# 
 10221   0039E3                     NVMDAT          equ	14819	;# 
 10222   0039E5                     NVMCON1         equ	14821	;# 
 10223   0039E6                     NVMCON2         equ	14822	;# 
 10224   0039EF                     PRLOCK          equ	14831	;# 
 10225   0039F1                     ISRPR           equ	14833	;# 
 10226   0039F2                     MAINPR          equ	14834	;# 
 10227   0039F3                     DMA1PR          equ	14835	;# 
 10228   0039F4                     DMA2PR          equ	14836	;# 
 10229   0039F7                     SCANPR          equ	14839	;# 
 10230   003A00                     RA0PPS          equ	14848	;# 
 10231   003A01                     RA1PPS          equ	14849	;# 
 10232   003A02                     RA2PPS          equ	14850	;# 
 10233   003A03                     RA3PPS          equ	14851	;# 
 10234   003A04                     RA4PPS          equ	14852	;# 
 10235   003A05                     RA5PPS          equ	14853	;# 
 10236   003A06                     RA6PPS          equ	14854	;# 
 10237   003A07                     RA7PPS          equ	14855	;# 
 10238   003A08                     RB0PPS          equ	14856	;# 
 10239   003A09                     RB1PPS          equ	14857	;# 
 10240   003A0A                     RB2PPS          equ	14858	;# 
 10241   003A0B                     RB3PPS          equ	14859	;# 
 10242   003A0C                     RB4PPS          equ	14860	;# 
 10243   003A0D                     RB5PPS          equ	14861	;# 
 10244   003A0E                     RB6PPS          equ	14862	;# 
 10245   003A0F                     RB7PPS          equ	14863	;# 
 10246   003A10                     RC0PPS          equ	14864	;# 
 10247   003A11                     RC1PPS          equ	14865	;# 
 10248   003A12                     RC2PPS          equ	14866	;# 
 10249   003A13                     RC3PPS          equ	14867	;# 
 10250   003A14                     RC4PPS          equ	14868	;# 
 10251   003A15                     RC5PPS          equ	14869	;# 
 10252   003A16                     RC6PPS          equ	14870	;# 
 10253   003A17                     RC7PPS          equ	14871	;# 
 10254   003A18                     RD0PPS          equ	14872	;# 
 10255   003A19                     RD1PPS          equ	14873	;# 
 10256   003A1A                     RD2PPS          equ	14874	;# 
 10257   003A1B                     RD3PPS          equ	14875	;# 
 10258   003A1C                     RD4PPS          equ	14876	;# 
 10259   003A1D                     RD5PPS          equ	14877	;# 
 10260   003A1E                     RD6PPS          equ	14878	;# 
 10261   003A1F                     RD7PPS          equ	14879	;# 
 10262   003A20                     RE0PPS          equ	14880	;# 
 10263   003A21                     RE1PPS          equ	14881	;# 
 10264   003A22                     RE2PPS          equ	14882	;# 
 10265   003A28                     RF0PPS          equ	14888	;# 
 10266   003A29                     RF1PPS          equ	14889	;# 
 10267   003A2A                     RF2PPS          equ	14890	;# 
 10268   003A2B                     RF3PPS          equ	14891	;# 
 10269   003A2C                     RF4PPS          equ	14892	;# 
 10270   003A2D                     RF5PPS          equ	14893	;# 
 10271   003A2E                     RF6PPS          equ	14894	;# 
 10272   003A2F                     RF7PPS          equ	14895	;# 
 10273   003A40                     ANSELA          equ	14912	;# 
 10274   003A41                     WPUA            equ	14913	;# 
 10275   003A42                     ODCONA          equ	14914	;# 
 10276   003A43                     SLRCONA         equ	14915	;# 
 10277   003A44                     INLVLA          equ	14916	;# 
 10278   003A45                     IOCAP           equ	14917	;# 
 10279   003A46                     IOCAN           equ	14918	;# 
 10280   003A47                     IOCAF           equ	14919	;# 
 10281   003A50                     ANSELB          equ	14928	;# 
 10282   003A51                     WPUB            equ	14929	;# 
 10283   003A52                     ODCONB          equ	14930	;# 
 10284   003A53                     SLRCONB         equ	14931	;# 
 10285   003A54                     INLVLB          equ	14932	;# 
 10286   003A55                     IOCBP           equ	14933	;# 
 10287   003A56                     IOCBN           equ	14934	;# 
 10288   003A57                     IOCBF           equ	14935	;# 
 10289   003A5A                     RB1I2C          equ	14938	;# 
 10290   003A5B                     RB2I2C          equ	14939	;# 
 10291   003A60                     ANSELC          equ	14944	;# 
 10292   003A61                     WPUC            equ	14945	;# 
 10293   003A62                     ODCONC          equ	14946	;# 
 10294   003A63                     SLRCONC         equ	14947	;# 
 10295   003A64                     INLVLC          equ	14948	;# 
 10296   003A65                     IOCCP           equ	14949	;# 
 10297   003A66                     IOCCN           equ	14950	;# 
 10298   003A67                     IOCCF           equ	14951	;# 
 10299   003A6A                     RC3I2C          equ	14954	;# 
 10300   003A6B                     RC4I2C          equ	14955	;# 
 10301   003A70                     ANSELD          equ	14960	;# 
 10302   003A71                     WPUD            equ	14961	;# 
 10303   003A72                     ODCOND          equ	14962	;# 
 10304   003A73                     SLRCOND         equ	14963	;# 
 10305   003A74                     INLVLD          equ	14964	;# 
 10306   003A7A                     RD0I2C          equ	14970	;# 
 10307   003A7B                     RD1I2C          equ	14971	;# 
 10308   003A80                     ANSELE          equ	14976	;# 
 10309   003A81                     WPUE            equ	14977	;# 
 10310   003A82                     ODCONE          equ	14978	;# 
 10311   003A83                     SLRCONE         equ	14979	;# 
 10312   003A84                     INLVLE          equ	14980	;# 
 10313   003A85                     IOCEP           equ	14981	;# 
 10314   003A86                     IOCEN           equ	14982	;# 
 10315   003A87                     IOCEF           equ	14983	;# 
 10316   003A90                     ANSELF          equ	14992	;# 
 10317   003A91                     WPUF            equ	14993	;# 
 10318   003A92                     ODCONF          equ	14994	;# 
 10319   003A93                     SLRCONF         equ	14995	;# 
 10320   003A94                     INLVLF          equ	14996	;# 
 10321   003ABF                     PPSLOCK         equ	15039	;# 
 10322   003AC0                     INT0PPS         equ	15040	;# 
 10323   003AC1                     INT1PPS         equ	15041	;# 
 10324   003AC2                     INT2PPS         equ	15042	;# 
 10325   003AC3                     T0CKIPPS        equ	15043	;# 
 10326   003AC4                     T1CKIPPS        equ	15044	;# 
 10327   003AC5                     T1GPPS          equ	15045	;# 
 10328   003AC6                     T3CKIPPS        equ	15046	;# 
 10329   003AC7                     T3GPPS          equ	15047	;# 
 10330   003AC8                     T5CKIPPS        equ	15048	;# 
 10331   003AC9                     T5GPPS          equ	15049	;# 
 10332   003ACA                     T2INPPS         equ	15050	;# 
 10333   003ACB                     T4INPPS         equ	15051	;# 
 10334   003ACC                     T6INPPS         equ	15052	;# 
 10335   003ACD                     CCP1PPS         equ	15053	;# 
 10336   003ACE                     CCP2PPS         equ	15054	;# 
 10337   003ACF                     CCP3PPS         equ	15055	;# 
 10338   003AD0                     CCP4PPS         equ	15056	;# 
 10339   003AD1                     SMT1WINPPS      equ	15057	;# 
 10340   003AD2                     SMT1SIGPPS      equ	15058	;# 
 10341   003AD3                     CWG1INPPS       equ	15059	;# 
 10342   003AD4                     CWG2INPPS       equ	15060	;# 
 10343   003AD5                     CWG3INPPS       equ	15061	;# 
 10344   003AD6                     MD1CARLPPS      equ	15062	;# 
 10345   003AD7                     MD1CARHPPS      equ	15063	;# 
 10346   003AD8                     MD1SRCPPS       equ	15064	;# 
 10347   003AD9                     CLCIN0PPS       equ	15065	;# 
 10348   003ADA                     CLCIN1PPS       equ	15066	;# 
 10349   003ADB                     CLCIN2PPS       equ	15067	;# 
 10350   003ADC                     CLCIN3PPS       equ	15068	;# 
 10351   003ADD                     ADACTPPS        equ	15069	;# 
 10352   003ADE                     SPI1SCKPPS      equ	15070	;# 
 10353   003ADF                     SPI1SDIPPS      equ	15071	;# 
 10354   003AE0                     SPI1SSPPS       equ	15072	;# 
 10355   003AE1                     I2C1SCLPPS      equ	15073	;# 
 10356   003AE2                     I2C1SDAPPS      equ	15074	;# 
 10357   003AE3                     I2C2SCLPPS      equ	15075	;# 
 10358   003AE4                     I2C2SDAPPS      equ	15076	;# 
 10359   003AE5                     U1RXPPS         equ	15077	;# 
 10360   003AE6                     U1CTSPPS        equ	15078	;# 
 10361   003AE8                     U2RXPPS         equ	15080	;# 
 10362   003AE9                     U2CTSPPS        equ	15081	;# 
 10363   003BC9                     DMA2BUF         equ	15305	;# 
 10364   003BCA                     DMA2DCNT        equ	15306	;# 
 10365   003BCA                     DMA2DCNTL       equ	15306	;# 
 10366   003BCB                     DMA2DCNTH       equ	15307	;# 
 10367   003BCC                     DMA2DPTR        equ	15308	;# 
 10368   003BCC                     DMA2DPTRL       equ	15308	;# 
 10369   003BCD                     DMA2DPTRH       equ	15309	;# 
 10370   003BCE                     DMA2DSZ         equ	15310	;# 
 10371   003BCE                     DMA2DSZL        equ	15310	;# 
 10372   003BCF                     DMA2DSZH        equ	15311	;# 
 10373   003BD0                     DMA2DSA         equ	15312	;# 
 10374   003BD0                     DMA2DSAL        equ	15312	;# 
 10375   003BD1                     DMA2DSAH        equ	15313	;# 
 10376   003BD2                     DMA2SCNT        equ	15314	;# 
 10377   003BD2                     DMA2SCNTL       equ	15314	;# 
 10378   003BD3                     DMA2SCNTH       equ	15315	;# 
 10379   003BD4                     DMA2SPTR        equ	15316	;# 
 10380   003BD4                     DMA2SPTRL       equ	15316	;# 
 10381   003BD5                     DMA2SPTRH       equ	15317	;# 
 10382   003BD6                     DMA2SPTRU       equ	15318	;# 
 10383   003BD7                     DMA2SSZ         equ	15319	;# 
 10384   003BD7                     DMA2SSZL        equ	15319	;# 
 10385   003BD8                     DMA2SSZH        equ	15320	;# 
 10386   003BD9                     DMA2SSA         equ	15321	;# 
 10387   003BD9                     DMA2SSAL        equ	15321	;# 
 10388   003BDA                     DMA2SSAH        equ	15322	;# 
 10389   003BDB                     DMA2SSAU        equ	15323	;# 
 10390   003BDC                     DMA2CON0        equ	15324	;# 
 10391   003BDD                     DMA2CON1        equ	15325	;# 
 10392   003BDE                     DMA2AIRQ        equ	15326	;# 
 10393   003BDF                     DMA2SIRQ        equ	15327	;# 
 10394   003BE9                     DMA1BUF         equ	15337	;# 
 10395   003BEA                     DMA1DCNT        equ	15338	;# 
 10396   003BEA                     DMA1DCNTL       equ	15338	;# 
 10397   003BEB                     DMA1DCNTH       equ	15339	;# 
 10398   003BEC                     DMA1DPTR        equ	15340	;# 
 10399   003BEC                     DMA1DPTRL       equ	15340	;# 
 10400   003BED                     DMA1DPTRH       equ	15341	;# 
 10401   003BEE                     DMA1DSZ         equ	15342	;# 
 10402   003BEE                     DMA1DSZL        equ	15342	;# 
 10403   003BEF                     DMA1DSZH        equ	15343	;# 
 10404   003BF0                     DMA1DSA         equ	15344	;# 
 10405   003BF0                     DMA1DSAL        equ	15344	;# 
 10406   003BF1                     DMA1DSAH        equ	15345	;# 
 10407   003BF2                     DMA1SCNT        equ	15346	;# 
 10408   003BF2                     DMA1SCNTL       equ	15346	;# 
 10409   003BF3                     DMA1SCNTH       equ	15347	;# 
 10410   003BF4                     DMA1SPTR        equ	15348	;# 
 10411   003BF4                     DMA1SPTRL       equ	15348	;# 
 10412   003BF5                     DMA1SPTRH       equ	15349	;# 
 10413   003BF6                     DMA1SPTRU       equ	15350	;# 
 10414   003BF7                     DMA1SSZ         equ	15351	;# 
 10415   003BF7                     DMA1SSZL        equ	15351	;# 
 10416   003BF8                     DMA1SSZH        equ	15352	;# 
 10417   003BF9                     DMA1SSA         equ	15353	;# 
 10418   003BF9                     DMA1SSAL        equ	15353	;# 
 10419   003BFA                     DMA1SSAH        equ	15354	;# 
 10420   003BFB                     DMA1SSAU        equ	15355	;# 
 10421   003BFC                     DMA1CON0        equ	15356	;# 
 10422   003BFD                     DMA1CON1        equ	15357	;# 
 10423   003BFE                     DMA1AIRQ        equ	15358	;# 
 10424   003BFF                     DMA1SIRQ        equ	15359	;# 
 10425   003C56                     CLC4CON         equ	15446	;# 
 10426   003C57                     CLC4POL         equ	15447	;# 
 10427   003C58                     CLC4SEL0        equ	15448	;# 
 10428   003C59                     CLC4SEL1        equ	15449	;# 
 10429   003C5A                     CLC4SEL2        equ	15450	;# 
 10430   003C5B                     CLC4SEL3        equ	15451	;# 
 10431   003C5C                     CLC4GLS0        equ	15452	;# 
 10432   003C5D                     CLC4GLS1        equ	15453	;# 
 10433   003C5E                     CLC4GLS2        equ	15454	;# 
 10434   003C5F                     CLC4GLS3        equ	15455	;# 
 10435   003C60                     CLC3CON         equ	15456	;# 
 10436   003C61                     CLC3POL         equ	15457	;# 
 10437   003C62                     CLC3SEL0        equ	15458	;# 
 10438   003C63                     CLC3SEL1        equ	15459	;# 
 10439   003C64                     CLC3SEL2        equ	15460	;# 
 10440   003C65                     CLC3SEL3        equ	15461	;# 
 10441   003C66                     CLC3GLS0        equ	15462	;# 
 10442   003C67                     CLC3GLS1        equ	15463	;# 
 10443   003C68                     CLC3GLS2        equ	15464	;# 
 10444   003C69                     CLC3GLS3        equ	15465	;# 
 10445   003C6A                     CLC2CON         equ	15466	;# 
 10446   003C6B                     CLC2POL         equ	15467	;# 
 10447   003C6C                     CLC2SEL0        equ	15468	;# 
 10448   003C6D                     CLC2SEL1        equ	15469	;# 
 10449   003C6E                     CLC2SEL2        equ	15470	;# 
 10450   003C6F                     CLC2SEL3        equ	15471	;# 
 10451   003C70                     CLC2GLS0        equ	15472	;# 
 10452   003C71                     CLC2GLS1        equ	15473	;# 
 10453   003C72                     CLC2GLS2        equ	15474	;# 
 10454   003C73                     CLC2GLS3        equ	15475	;# 
 10455   003C74                     CLC1CON         equ	15476	;# 
 10456   003C75                     CLC1POL         equ	15477	;# 
 10457   003C76                     CLC1SEL0        equ	15478	;# 
 10458   003C77                     CLC1SEL1        equ	15479	;# 
 10459   003C78                     CLC1SEL2        equ	15480	;# 
 10460   003C79                     CLC1SEL3        equ	15481	;# 
 10461   003C7A                     CLC1GLS0        equ	15482	;# 
 10462   003C7B                     CLC1GLS1        equ	15483	;# 
 10463   003C7C                     CLC1GLS2        equ	15484	;# 
 10464   003C7D                     CLC1GLS3        equ	15485	;# 
 10465   003C7E                     CLCDATA0        equ	15486	;# 
 10466   003CE5                     CLKRCON         equ	15589	;# 
 10467   003CE6                     CLKRCLK         equ	15590	;# 
 10468   003CFA                     MD1CON0         equ	15610	;# 
 10469   003CFB                     MD1CON1         equ	15611	;# 
 10470   003CFC                     MD1SRC          equ	15612	;# 
 10471   003CFD                     MD1CARL         equ	15613	;# 
 10472   003CFE                     MD1CARH         equ	15614	;# 
 10473   003D10                     SPI1RXB         equ	15632	;# 
 10474   003D11                     SPI1TXB         equ	15633	;# 
 10475   003D12                     SPI1TCNT        equ	15634	;# 
 10476   003D12                     SPI1TCNTL       equ	15634	;# 
 10477   003D13                     SPI1TCNTH       equ	15635	;# 
 10478   003D14                     SPI1CON0        equ	15636	;# 
 10479   003D15                     SPI1CON1        equ	15637	;# 
 10480   003D16                     SPI1CON2        equ	15638	;# 
 10481   003D17                     SPI1STATUS      equ	15639	;# 
 10482   003D18                     SPI1TWIDTH      equ	15640	;# 
 10483   003D19                     SPI1BAUD        equ	15641	;# 
 10484   003D1A                     SPI1INTF        equ	15642	;# 
 10485   003D1B                     SPI1INTE        equ	15643	;# 
 10486   003D1C                     SPI1CLK         equ	15644	;# 
 10487   003D54                     I2C2RXB         equ	15700	;# 
 10488   003D55                     I2C2TXB         equ	15701	;# 
 10489   003D56                     I2C2CNT         equ	15702	;# 
 10490   003D57                     I2C2ADB0        equ	15703	;# 
 10491   003D58                     I2C2ADB1        equ	15704	;# 
 10492   003D59                     I2C2ADR0        equ	15705	;# 
 10493   003D5A                     I2C2ADR1        equ	15706	;# 
 10494   003D5B                     I2C2ADR2        equ	15707	;# 
 10495   003D5C                     I2C2ADR3        equ	15708	;# 
 10496   003D5D                     I2C2CON0        equ	15709	;# 
 10497   003D5E                     I2C2CON1        equ	15710	;# 
 10498   003D5F                     I2C2CON2        equ	15711	;# 
 10499   003D60                     I2C2ERR         equ	15712	;# 
 10500   003D61                     I2C2STAT0       equ	15713	;# 
 10501   003D62                     I2C2STAT1       equ	15714	;# 
 10502   003D63                     I2C2PIR         equ	15715	;# 
 10503   003D64                     I2C2PIE         equ	15716	;# 
 10504   003D65                     I2C2CLK         equ	15717	;# 
 10505   003D66                     I2C2BTO         equ	15718	;# 
 10506   003D6A                     I2C1RXB         equ	15722	;# 
 10507   003D6B                     I2C1TXB         equ	15723	;# 
 10508   003D6C                     I2C1CNT         equ	15724	;# 
 10509   003D6D                     I2C1ADB0        equ	15725	;# 
 10510   003D6E                     I2C1ADB1        equ	15726	;# 
 10511   003D6F                     I2C1ADR0        equ	15727	;# 
 10512   003D70                     I2C1ADR1        equ	15728	;# 
 10513   003D71                     I2C1ADR2        equ	15729	;# 
 10514   003D72                     I2C1ADR3        equ	15730	;# 
 10515   003D73                     I2C1CON0        equ	15731	;# 
 10516   003D74                     I2C1CON1        equ	15732	;# 
 10517   003D75                     I2C1CON2        equ	15733	;# 
 10518   003D76                     I2C1ERR         equ	15734	;# 
 10519   003D77                     I2C1STAT0       equ	15735	;# 
 10520   003D78                     I2C1STAT1       equ	15736	;# 
 10521   003D79                     I2C1PIR         equ	15737	;# 
 10522   003D7A                     I2C1PIE         equ	15738	;# 
 10523   003D7B                     I2C1CLK         equ	15739	;# 
 10524   003D7C                     I2C1BTO         equ	15740	;# 
 10525   003DD0                     U2RXB           equ	15824	;# 
 10526   003DD0                     U2RXBL          equ	15824	;# 
 10527   003DD2                     U2TXB           equ	15826	;# 
 10528   003DD2                     U2TXBL          equ	15826	;# 
 10529   003DD4                     U2P1            equ	15828	;# 
 10530   003DD4                     U2P1L           equ	15828	;# 
 10531   003DD6                     U2P2            equ	15830	;# 
 10532   003DD6                     U2P2L           equ	15830	;# 
 10533   003DD8                     U2P3            equ	15832	;# 
 10534   003DD8                     U2P3L           equ	15832	;# 
 10535   003DDA                     U2CON0          equ	15834	;# 
 10536   003DDB                     U2CON1          equ	15835	;# 
 10537   003DDC                     U2CON2          equ	15836	;# 
 10538   003DDD                     U2BRG           equ	15837	;# 
 10539   003DDD                     U2BRGL          equ	15837	;# 
 10540   003DDE                     U2BRGH          equ	15838	;# 
 10541   003DDF                     U2FIFO          equ	15839	;# 
 10542   003DE0                     U2UIR           equ	15840	;# 
 10543   003DE1                     U2ERRIR         equ	15841	;# 
 10544   003DE2                     U2ERRIE         equ	15842	;# 
 10545   003DE8                     U1RXB           equ	15848	;# 
 10546   003DE8                     U1RXBL          equ	15848	;# 
 10547   003DE9                     U1RXCHK         equ	15849	;# 
 10548   003DEA                     U1TXB           equ	15850	;# 
 10549   003DEA                     U1TXBL          equ	15850	;# 
 10550   003DEB                     U1TXCHK         equ	15851	;# 
 10551   003DEC                     U1P1            equ	15852	;# 
 10552   003DEC                     U1P1L           equ	15852	;# 
 10553   003DED                     U1P1H           equ	15853	;# 
 10554   003DEE                     U1P2            equ	15854	;# 
 10555   003DEE                     U1P2L           equ	15854	;# 
 10556   003DEF                     U1P2H           equ	15855	;# 
 10557   003DF0                     U1P3            equ	15856	;# 
 10558   003DF0                     U1P3L           equ	15856	;# 
 10559   003DF1                     U1P3H           equ	15857	;# 
 10560   003DF2                     U1CON0          equ	15858	;# 
 10561   003DF3                     U1CON1          equ	15859	;# 
 10562   003DF4                     U1CON2          equ	15860	;# 
 10563   003DF5                     U1BRG           equ	15861	;# 
 10564   003DF5                     U1BRGL          equ	15861	;# 
 10565   003DF6                     U1BRGH          equ	15862	;# 
 10566   003DF7                     U1FIFO          equ	15863	;# 
 10567   003DF8                     U1UIR           equ	15864	;# 
 10568   003DF9                     U1ERRIR         equ	15865	;# 
 10569   003DFA                     U1ERRIE         equ	15866	;# 
 10570   003E9C                     DAC1CON1        equ	16028	;# 
 10571   003E9E                     DAC1CON0        equ	16030	;# 
 10572   003EB8                     CM2CON0         equ	16056	;# 
 10573   003EB9                     CM2CON1         equ	16057	;# 
 10574   003EBA                     CM2NCH          equ	16058	;# 
 10575   003EBB                     CM2PCH          equ	16059	;# 
 10576   003EBC                     CM1CON0         equ	16060	;# 
 10577   003EBD                     CM1CON1         equ	16061	;# 
 10578   003EBE                     CM1NCH          equ	16062	;# 
 10579   003EBF                     CM1PCH          equ	16063	;# 
 10580   003EC0                     CMOUT           equ	16064	;# 
 10581   003EC1                     FVRCON          equ	16065	;# 
 10582   003EC3                     ZCDCON          equ	16067	;# 
 10583   003EC9                     HLVDCON0        equ	16073	;# 
 10584   003ECA                     HLVDCON1        equ	16074	;# 
 10585   003ED7                     ADCP            equ	16087	;# 
 10586   003EDE                     ADLTH           equ	16094	;# 
 10587   003EDE                     ADLTHL          equ	16094	;# 
 10588   003EDF                     ADLTHH          equ	16095	;# 
 10589   003EE0                     ADUTH           equ	16096	;# 
 10590   003EE0                     ADUTHL          equ	16096	;# 
 10591   003EE1                     ADUTHH          equ	16097	;# 
 10592   003EE2                     ADERR           equ	16098	;# 
 10593   003EE2                     ADERRL          equ	16098	;# 
 10594   003EE3                     ADERRH          equ	16099	;# 
 10595   003EE4                     ADSTPT          equ	16100	;# 
 10596   003EE4                     ADSTPTL         equ	16100	;# 
 10597   003EE5                     ADSTPTH         equ	16101	;# 
 10598   003EE6                     ADFLTR          equ	16102	;# 
 10599   003EE6                     ADFLTRL         equ	16102	;# 
 10600   003EE7                     ADFLTRH         equ	16103	;# 
 10601   003EE8                     ADACC           equ	16104	;# 
 10602   003EE8                     ADACCL          equ	16104	;# 
 10603   003EE9                     ADACCH          equ	16105	;# 
 10604   003EEA                     ADACCU          equ	16106	;# 
 10605   003EEB                     ADCNT           equ	16107	;# 
 10606   003EEC                     ADRPT           equ	16108	;# 
 10607   003EED                     ADPREV          equ	16109	;# 
 10608   003EED                     ADPREVL         equ	16109	;# 
 10609   003EEE                     ADPREVH         equ	16110	;# 
 10610   003EEF                     ADRES           equ	16111	;# 
 10611   003EEF                     ADRESL          equ	16111	;# 
 10612   003EF0                     ADRESH          equ	16112	;# 
 10613   003EF1                     ADPCH           equ	16113	;# 
 10614   003EF3                     ADACQ           equ	16115	;# 
 10615   003EF3                     ADACQL          equ	16115	;# 
 10616   003EF4                     ADACQH          equ	16116	;# 
 10617   003EF5                     ADCAP           equ	16117	;# 
 10618   003EF6                     ADPRE           equ	16118	;# 
 10619   003EF6                     ADPREL          equ	16118	;# 
 10620   003EF7                     ADPREH          equ	16119	;# 
 10621   003EF8                     ADCON0          equ	16120	;# 
 10622   003EF9                     ADCON1          equ	16121	;# 
 10623   003EFA                     ADCON2          equ	16122	;# 
 10624   003EFB                     ADCON3          equ	16123	;# 
 10625   003EFC                     ADSTAT          equ	16124	;# 
 10626   003EFD                     ADREF           equ	16125	;# 
 10627   003EFE                     ADACT           equ	16126	;# 
 10628   003EFF                     ADCLK           equ	16127	;# 
 10629   003F12                     SMT1TMR         equ	16146	;# 
 10630   003F12                     SMT1TMRL        equ	16146	;# 
 10631   003F13                     SMT1TMRH        equ	16147	;# 
 10632   003F14                     SMT1TMRU        equ	16148	;# 
 10633   003F15                     SMT1CPR         equ	16149	;# 
 10634   003F15                     SMT1CPRL        equ	16149	;# 
 10635   003F16                     SMT1CPRH        equ	16150	;# 
 10636   003F17                     SMT1CPRU        equ	16151	;# 
 10637   003F18                     SMT1CPW         equ	16152	;# 
 10638   003F18                     SMT1CPWL        equ	16152	;# 
 10639   003F19                     SMT1CPWH        equ	16153	;# 
 10640   003F1A                     SMT1CPWU        equ	16154	;# 
 10641   003F1B                     SMT1PR          equ	16155	;# 
 10642   003F1B                     SMT1PRL         equ	16155	;# 
 10643   003F1C                     SMT1PRH         equ	16156	;# 
 10644   003F1D                     SMT1PRU         equ	16157	;# 
 10645   003F1E                     SMT1CON0        equ	16158	;# 
 10646   003F1F                     SMT1CON1        equ	16159	;# 
 10647   003F20                     SMT1STAT        equ	16160	;# 
 10648   003F21                     SMT1CLK         equ	16161	;# 
 10649   003F22                     SMT1SIG         equ	16162	;# 
 10650   003F23                     SMT1WIN         equ	16163	;# 
 10651   003F38                     NCO1ACC         equ	16184	;# 
 10652   003F38                     NCO1ACCL        equ	16184	;# 
 10653   003F39                     NCO1ACCH        equ	16185	;# 
 10654   003F3A                     NCO1ACCU        equ	16186	;# 
 10655   003F3B                     NCO1INC         equ	16187	;# 
 10656   003F3B                     NCO1INCL        equ	16187	;# 
 10657   003F3C                     NCO1INCH        equ	16188	;# 
 10658   003F3D                     NCO1INCU        equ	16189	;# 
 10659   003F3E                     NCO1CON         equ	16190	;# 
 10660   003F3F                     NCO1CLK         equ	16191	;# 
 10661   003F40                     CWG3CLK         equ	16192	;# 
 10662   003F40                     CWG3CLKCON      equ	16192	;# 
 10663   003F41                     CWG3ISM         equ	16193	;# 
 10664   003F41                     CWG3DAT         equ	16193	;# 
 10665   003F42                     CWG3DBR         equ	16194	;# 
 10666   003F43                     CWG3DBF         equ	16195	;# 
 10667   003F44                     CWG3CON0        equ	16196	;# 
 10668   003F45                     CWG3CON1        equ	16197	;# 
 10669   003F46                     CWG3AS0         equ	16198	;# 
 10670   003F47                     CWG3AS1         equ	16199	;# 
 10671   003F48                     CWG3STR         equ	16200	;# 
 10672   003F49                     CWG2CLK         equ	16201	;# 
 10673   003F49                     CWG2CLKCON      equ	16201	;# 
 10674   003F4A                     CWG2ISM         equ	16202	;# 
 10675   003F4A                     CWG2DAT         equ	16202	;# 
 10676   003F4B                     CWG2DBR         equ	16203	;# 
 10677   003F4C                     CWG2DBF         equ	16204	;# 
 10678   003F4D                     CWG2CON0        equ	16205	;# 
 10679   003F4E                     CWG2CON1        equ	16206	;# 
 10680   003F4F                     CWG2AS0         equ	16207	;# 
 10681   003F50                     CWG2AS1         equ	16208	;# 
 10682   003F51                     CWG2STR         equ	16209	;# 
 10683   003F52                     CWG1CLK         equ	16210	;# 
 10684   003F52                     CWG1CLKCON      equ	16210	;# 
 10685   003F53                     CWG1ISM         equ	16211	;# 
 10686   003F53                     CWG1DAT         equ	16211	;# 
 10687   003F54                     CWG1DBR         equ	16212	;# 
 10688   003F55                     CWG1DBF         equ	16213	;# 
 10689   003F56                     CWG1CON0        equ	16214	;# 
 10690   003F57                     CWG1CON1        equ	16215	;# 
 10691   003F58                     CWG1AS0         equ	16216	;# 
 10692   003F59                     CWG1AS1         equ	16217	;# 
 10693   003F5A                     CWG1STR         equ	16218	;# 
 10694   003F5E                     CCPTMRS0        equ	16222	;# 
 10695   003F5F                     CCPTMRS1        equ	16223	;# 
 10696   003F60                     PWM8DC          equ	16224	;# 
 10697   003F60                     PWM8DCL         equ	16224	;# 
 10698   003F61                     PWM8DCH         equ	16225	;# 
 10699   003F62                     PWM8CON         equ	16226	;# 
 10700   003F64                     PWM7DC          equ	16228	;# 
 10701   003F64                     PWM7DCL         equ	16228	;# 
 10702   003F65                     PWM7DCH         equ	16229	;# 
 10703   003F66                     PWM7CON         equ	16230	;# 
 10704   003F68                     PWM6DC          equ	16232	;# 
 10705   003F68                     PWM6DCL         equ	16232	;# 
 10706   003F69                     PWM6DCH         equ	16233	;# 
 10707   003F6A                     PWM6CON         equ	16234	;# 
 10708   003F6C                     PWM5DC          equ	16236	;# 
 10709   003F6C                     PWM5DCL         equ	16236	;# 
 10710   003F6D                     PWM5DCH         equ	16237	;# 
 10711   003F6E                     PWM5CON         equ	16238	;# 
 10712   003F70                     CCPR4           equ	16240	;# 
 10713   003F70                     CCPR4L          equ	16240	;# 
 10714   003F71                     CCPR4H          equ	16241	;# 
 10715   003F72                     CCP4CON         equ	16242	;# 
 10716   003F73                     CCP4CAP         equ	16243	;# 
 10717   003F74                     CCPR3           equ	16244	;# 
 10718   003F74                     CCPR3L          equ	16244	;# 
 10719   003F75                     CCPR3H          equ	16245	;# 
 10720   003F76                     CCP3CON         equ	16246	;# 
 10721   003F77                     CCP3CAP         equ	16247	;# 
 10722   003F78                     CCPR2           equ	16248	;# 
 10723   003F78                     CCPR2L          equ	16248	;# 
 10724   003F79                     CCPR2H          equ	16249	;# 
 10725   003F7A                     CCP2CON         equ	16250	;# 
 10726   003F7B                     CCP2CAP         equ	16251	;# 
 10727   003F7C                     CCPR1           equ	16252	;# 
 10728   003F7C                     CCPR1L          equ	16252	;# 
 10729   003F7D                     CCPR1H          equ	16253	;# 
 10730   003F7E                     CCP1CON         equ	16254	;# 
 10731   003F7F                     CCP1CAP         equ	16255	;# 
 10732   003F92                     T6TMR           equ	16274	;# 
 10733   003F92                     TMR6            equ	16274	;# 
 10734   003F93                     T6PR            equ	16275	;# 
 10735   003F93                     PR6             equ	16275	;# 
 10736   003F94                     T6CON           equ	16276	;# 
 10737   003F95                     T6HLT           equ	16277	;# 
 10738   003F96                     T6CLKCON        equ	16278	;# 
 10739   003F96                     T6CLK           equ	16278	;# 
 10740   003F97                     T6RST           equ	16279	;# 
 10741   003F98                     TMR5            equ	16280	;# 
 10742   003F98                     TMR5L           equ	16280	;# 
 10743   003F99                     TMR5H           equ	16281	;# 
 10744   003F9A                     T5CON           equ	16282	;# 
 10745   003F9A                     TMR5CON         equ	16282	;# 
 10746   003F9B                     T5GCON          equ	16283	;# 
 10747   003F9B                     TMR5GCON        equ	16283	;# 
 10748   003F9C                     T5GATE          equ	16284	;# 
 10749   003F9C                     TMR5GATE        equ	16284	;# 
 10750   003F9D                     T5CLK           equ	16285	;# 
 10751   003F9D                     TMR5CLK         equ	16285	;# 
 10752   003F9D                     PR5             equ	16285	;# 
 10753   003F9E                     T4TMR           equ	16286	;# 
 10754   003F9E                     TMR4            equ	16286	;# 
 10755   003F9F                     T4PR            equ	16287	;# 
 10756   003F9F                     PR4             equ	16287	;# 
 10757   003FA0                     T4CON           equ	16288	;# 
 10758   003FA1                     T4HLT           equ	16289	;# 
 10759   003FA2                     T4CLKCON        equ	16290	;# 
 10760   003FA2                     T4CLK           equ	16290	;# 
 10761   003FA3                     T4RST           equ	16291	;# 
 10762   003FA4                     TMR3            equ	16292	;# 
 10763   003FA4                     TMR3L           equ	16292	;# 
 10764   003FA5                     TMR3H           equ	16293	;# 
 10765   003FA6                     T3CON           equ	16294	;# 
 10766   003FA6                     TMR3CON         equ	16294	;# 
 10767   003FA7                     T3GCON          equ	16295	;# 
 10768   003FA7                     TMR3GCON        equ	16295	;# 
 10769   003FA8                     T3GATE          equ	16296	;# 
 10770   003FA8                     TMR3GATE        equ	16296	;# 
 10771   003FA9                     T3CLK           equ	16297	;# 
 10772   003FA9                     TMR3CLK         equ	16297	;# 
 10773   003FA9                     PR3             equ	16297	;# 
 10774   003FAA                     T2TMR           equ	16298	;# 
 10775   003FAA                     TMR2            equ	16298	;# 
 10776   003FAB                     T2PR            equ	16299	;# 
 10777   003FAB                     PR2             equ	16299	;# 
 10778   003FAC                     T2CON           equ	16300	;# 
 10779   003FAD                     T2HLT           equ	16301	;# 
 10780   003FAE                     T2CLKCON        equ	16302	;# 
 10781   003FAE                     T2CLK           equ	16302	;# 
 10782   003FAF                     T2RST           equ	16303	;# 
 10783   003FB0                     TMR1            equ	16304	;# 
 10784   003FB0                     TMR1L           equ	16304	;# 
 10785   003FB1                     TMR1H           equ	16305	;# 
 10786   003FB2                     T1CON           equ	16306	;# 
 10787   003FB2                     TMR1CON         equ	16306	;# 
 10788   003FB3                     T1GCON          equ	16307	;# 
 10789   003FB3                     TMR1GCON        equ	16307	;# 
 10790   003FB4                     T1GATE          equ	16308	;# 
 10791   003FB4                     TMR1GATE        equ	16308	;# 
 10792   003FB5                     T1CLK           equ	16309	;# 
 10793   003FB5                     TMR1CLK         equ	16309	;# 
 10794   003FB5                     PR1             equ	16309	;# 
 10795   003FB6                     TMR0L           equ	16310	;# 
 10796   003FB6                     TMR0            equ	16310	;# 
 10797   003FB7                     TMR0H           equ	16311	;# 
 10798   003FB7                     PR0             equ	16311	;# 
 10799   003FB8                     T0CON0          equ	16312	;# 
 10800   003FB9                     T0CON1          equ	16313	;# 
 10801   003FBA                     LATA            equ	16314	;# 
 10802   003FBB                     LATB            equ	16315	;# 
 10803   003FBC                     LATC            equ	16316	;# 
 10804   003FBD                     LATD            equ	16317	;# 
 10805   003FBE                     LATE            equ	16318	;# 
 10806   003FBF                     LATF            equ	16319	;# 
 10807   003FC2                     TRISA           equ	16322	;# 
 10808   003FC3                     TRISB           equ	16323	;# 
 10809   003FC4                     TRISC           equ	16324	;# 
 10810   003FC5                     TRISD           equ	16325	;# 
 10811   003FC6                     TRISE           equ	16326	;# 
 10812   003FC7                     TRISF           equ	16327	;# 
 10813   003FCA                     PORTA           equ	16330	;# 
 10814   003FCB                     PORTB           equ	16331	;# 
 10815   003FCC                     PORTC           equ	16332	;# 
 10816   003FCD                     PORTD           equ	16333	;# 
 10817   003FCE                     PORTE           equ	16334	;# 
 10818   003FCF                     PORTF           equ	16335	;# 
 10819   003FD2                     INTCON0         equ	16338	;# 
 10820   003FD3                     INTCON1         equ	16339	;# 
 10821   003FD4                     IVTLOCK         equ	16340	;# 
 10822   003FD5                     IVTBASE         equ	16341	;# 
 10823   003FD5                     IVTBASEL        equ	16341	;# 
 10824   003FD6                     IVTBASEH        equ	16342	;# 
 10825   003FD7                     IVTBASEU        equ	16343	;# 
 10826   003FD8                     STATUS          equ	16344	;# 
 10827   003FD9                     FSR2            equ	16345	;# 
 10828   003FD9                     FSR2L           equ	16345	;# 
 10829   003FDA                     FSR2H           equ	16346	;# 
 10830   003FDB                     PLUSW2          equ	16347	;# 
 10831   003FDC                     PREINC2         equ	16348	;# 
 10832   003FDD                     POSTDEC2        equ	16349	;# 
 10833   003FDE                     POSTINC2        equ	16350	;# 
 10834   003FDF                     INDF2           equ	16351	;# 
 10835   003FE0                     BSR             equ	16352	;# 
 10836   003FE1                     FSR1            equ	16353	;# 
 10837   003FE1                     FSR1L           equ	16353	;# 
 10838   003FE2                     FSR1H           equ	16354	;# 
 10839   003FE3                     PLUSW1          equ	16355	;# 
 10840   003FE4                     PREINC1         equ	16356	;# 
 10841   003FE5                     POSTDEC1        equ	16357	;# 
 10842   003FE6                     POSTINC1        equ	16358	;# 
 10843   003FE7                     INDF1           equ	16359	;# 
 10844   003FE8                     WREG            equ	16360	;# 
 10845   003FE9                     FSR0            equ	16361	;# 
 10846   003FE9                     FSR0L           equ	16361	;# 
 10847   003FEA                     FSR0H           equ	16362	;# 
 10848   003FEB                     PLUSW0          equ	16363	;# 
 10849   003FEC                     PREINC0         equ	16364	;# 
 10850   003FED                     POSTDEC0        equ	16365	;# 
 10851   003FEE                     POSTINC0        equ	16366	;# 
 10852   003FEF                     INDF0           equ	16367	;# 
 10853   003FF0                     PCON0           equ	16368	;# 
 10854   003FF1                     PCON1           equ	16369	;# 
 10855   003FF3                     PROD            equ	16371	;# 
 10856   003FF3                     PRODL           equ	16371	;# 
 10857   003FF4                     PRODH           equ	16372	;# 
 10858   003FF5                     TABLAT          equ	16373	;# 
 10859   003FF6                     TBLPTR          equ	16374	;# 
 10860   003FF6                     TBLPTRL         equ	16374	;# 
 10861   003FF7                     TBLPTRH         equ	16375	;# 
 10862   003FF8                     TBLPTRU         equ	16376	;# 
 10863   003FF9                     PCLAT           equ	16377	;# 
 10864   003FF9                     PCL             equ	16377	;# 
 10865   003FFA                     PCLATH          equ	16378	;# 
 10866   003FFB                     PCLATU          equ	16379	;# 
 10867   003FFC                     STKPTR          equ	16380	;# 
 10868   003FFD                     TOS             equ	16381	;# 
 10869   003FFD                     TOSL            equ	16381	;# 
 10870   003FFE                     TOSH            equ	16382	;# 
 10871   003FFF                     TOSU            equ	16383	;# 
 10872   003880                     STATUS_CSHAD    equ	14464	;# 
 10873   003881                     WREG_CSHAD      equ	14465	;# 
 10874   003882                     BSR_CSHAD       equ	14466	;# 
 10875   003883                     SHADCON         equ	14467	;# 
 10876   003884                     STATUS_SHAD     equ	14468	;# 
 10877   003885                     WREG_SHAD       equ	14469	;# 
 10878   003886                     BSR_SHAD        equ	14470	;# 
 10879   003887                     PCLATH_SHAD     equ	14471	;# 
 10880   003888                     PCLATU_SHAD     equ	14472	;# 
 10881   003889                     FSR0SH          equ	14473	;# 
 10882   003889                     FSR0L_SHAD      equ	14473	;# 
 10883   00388A                     FSR0H_SHAD      equ	14474	;# 
 10884   00388B                     FSR1SH          equ	14475	;# 
 10885   00388B                     FSR1L_SHAD      equ	14475	;# 
 10886   00388C                     FSR1H_SHAD      equ	14476	;# 
 10887   00388D                     FSR2SH          equ	14477	;# 
 10888   00388D                     FSR2L_SHAD      equ	14477	;# 
 10889   00388E                     FSR2H_SHAD      equ	14478	;# 
 10890   00388F                     PRODSH          equ	14479	;# 
 10891   00388F                     PRODL_SHAD      equ	14479	;# 
 10892   003890                     PRODH_SHAD      equ	14480	;# 
 10893   00389D                     IVTADL          equ	14493	;# 
 10894   00389E                     IVTADH          equ	14494	;# 
 10895   00389F                     IVTADU          equ	14495	;# 
 10896   00395B                     WDTCON0         equ	14683	;# 
 10897   00395C                     WDTCON1         equ	14684	;# 
 10898   00395D                     WDTPSL          equ	14685	;# 
 10899   00395E                     WDTPSH          equ	14686	;# 
 10900   00395F                     WDTTMR          equ	14687	;# 
 10901   003960                     CRCDATA         equ	14688	;# 
 10902   003960                     CRCDATL         equ	14688	;# 
 10903   003961                     CRCDATH         equ	14689	;# 
 10904   003962                     CRCACC          equ	14690	;# 
 10905   003962                     CRCACCL         equ	14690	;# 
 10906   003963                     CRCACCH         equ	14691	;# 
 10907   003964                     CRCSHFT         equ	14692	;# 
 10908   003964                     CRCSHIFTL       equ	14692	;# 
 10909   003965                     CRCSHIFTH       equ	14693	;# 
 10910   003966                     CRCXOR          equ	14694	;# 
 10911   003966                     CRCXORL         equ	14694	;# 
 10912   003967                     CRCXORH         equ	14695	;# 
 10913   003968                     CRCCON0         equ	14696	;# 
 10914   003969                     CRCCON1         equ	14697	;# 
 10915   003976                     SCANLADR        equ	14710	;# 
 10916   003976                     SCANLADRL       equ	14710	;# 
 10917   003977                     SCANLADRH       equ	14711	;# 
 10918   003978                     SCANLADRU       equ	14712	;# 
 10919   003979                     SCANHADR        equ	14713	;# 
 10920   003979                     SCANHADRL       equ	14713	;# 
 10921   00397A                     SCANHADRH       equ	14714	;# 
 10922   00397B                     SCANHADRU       equ	14715	;# 
 10923   00397C                     SCANCON0        equ	14716	;# 
 10924   00397D                     SCANTRIG        equ	14717	;# 
 10925   003980                     IPR0            equ	14720	;# 
 10926   003981                     IPR1            equ	14721	;# 
 10927   003982                     IPR2            equ	14722	;# 
 10928   003983                     IPR3            equ	14723	;# 
 10929   003984                     IPR4            equ	14724	;# 
 10930   003985                     IPR5            equ	14725	;# 
 10931   003986                     IPR6            equ	14726	;# 
 10932   003987                     IPR7            equ	14727	;# 
 10933   003988                     IPR8            equ	14728	;# 
 10934   003989                     IPR9            equ	14729	;# 
 10935   00398A                     IPR10           equ	14730	;# 
 10936   003990                     PIE0            equ	14736	;# 
 10937   003991                     PIE1            equ	14737	;# 
 10938   003992                     PIE2            equ	14738	;# 
 10939   003993                     PIE3            equ	14739	;# 
 10940   003994                     PIE4            equ	14740	;# 
 10941   003995                     PIE5            equ	14741	;# 
 10942   003996                     PIE6            equ	14742	;# 
 10943   003997                     PIE7            equ	14743	;# 
 10944   003998                     PIE8            equ	14744	;# 
 10945   003999                     PIE9            equ	14745	;# 
 10946   00399A                     PIE10           equ	14746	;# 
 10947   0039A0                     PIR0            equ	14752	;# 
 10948   0039A1                     PIR1            equ	14753	;# 
 10949   0039A2                     PIR2            equ	14754	;# 
 10950   0039A3                     PIR3            equ	14755	;# 
 10951   0039A4                     PIR4            equ	14756	;# 
 10952   0039A5                     PIR5            equ	14757	;# 
 10953   0039A6                     PIR6            equ	14758	;# 
 10954   0039A7                     PIR7            equ	14759	;# 
 10955   0039A8                     PIR8            equ	14760	;# 
 10956   0039A9                     PIR9            equ	14761	;# 
 10957   0039AA                     PIR10           equ	14762	;# 
 10958   0039C0                     PMD0            equ	14784	;# 
 10959   0039C1                     PMD1            equ	14785	;# 
 10960   0039C2                     PMD2            equ	14786	;# 
 10961   0039C3                     PMD3            equ	14787	;# 
 10962   0039C4                     PMD4            equ	14788	;# 
 10963   0039C5                     PMD5            equ	14789	;# 
 10964   0039C6                     PMD6            equ	14790	;# 
 10965   0039C7                     PMD7            equ	14791	;# 
 10966   0039D0                     BORCON          equ	14800	;# 
 10967   0039D1                     VREGCON         equ	14801	;# 
 10968   0039D8                     CPUDOZE         equ	14808	;# 
 10969   0039D9                     OSCCON1         equ	14809	;# 
 10970   0039DA                     OSCCON2         equ	14810	;# 
 10971   0039DB                     OSCCON3         equ	14811	;# 
 10972   0039DC                     OSCSTAT         equ	14812	;# 
 10973   0039DC                     OSCSTAT1        equ	14812	;# 
 10974   0039DD                     OSCEN           equ	14813	;# 
 10975   0039DE                     OSCTUNE         equ	14814	;# 
 10976   0039DF                     OSCFRQ          equ	14815	;# 
 10977   0039E0                     NVMADRL         equ	14816	;# 
 10978   0039E1                     NVMADRH         equ	14817	;# 
 10979   0039E3                     NVMDAT          equ	14819	;# 
 10980   0039E5                     NVMCON1         equ	14821	;# 
 10981   0039E6                     NVMCON2         equ	14822	;# 
 10982   0039EF                     PRLOCK          equ	14831	;# 
 10983   0039F1                     ISRPR           equ	14833	;# 
 10984   0039F2                     MAINPR          equ	14834	;# 
 10985   0039F3                     DMA1PR          equ	14835	;# 
 10986   0039F4                     DMA2PR          equ	14836	;# 
 10987   0039F7                     SCANPR          equ	14839	;# 
 10988   003A00                     RA0PPS          equ	14848	;# 
 10989   003A01                     RA1PPS          equ	14849	;# 
 10990   003A02                     RA2PPS          equ	14850	;# 
 10991   003A03                     RA3PPS          equ	14851	;# 
 10992   003A04                     RA4PPS          equ	14852	;# 
 10993   003A05                     RA5PPS          equ	14853	;# 
 10994   003A06                     RA6PPS          equ	14854	;# 
 10995   003A07                     RA7PPS          equ	14855	;# 
 10996   003A08                     RB0PPS          equ	14856	;# 
 10997   003A09                     RB1PPS          equ	14857	;# 
 10998   003A0A                     RB2PPS          equ	14858	;# 
 10999   003A0B                     RB3PPS          equ	14859	;# 
 11000   003A0C                     RB4PPS          equ	14860	;# 
 11001   003A0D                     RB5PPS          equ	14861	;# 
 11002   003A0E                     RB6PPS          equ	14862	;# 
 11003   003A0F                     RB7PPS          equ	14863	;# 
 11004   003A10                     RC0PPS          equ	14864	;# 
 11005   003A11                     RC1PPS          equ	14865	;# 
 11006   003A12                     RC2PPS          equ	14866	;# 
 11007   003A13                     RC3PPS          equ	14867	;# 
 11008   003A14                     RC4PPS          equ	14868	;# 
 11009   003A15                     RC5PPS          equ	14869	;# 
 11010   003A16                     RC6PPS          equ	14870	;# 
 11011   003A17                     RC7PPS          equ	14871	;# 
 11012   003A18                     RD0PPS          equ	14872	;# 
 11013   003A19                     RD1PPS          equ	14873	;# 
 11014   003A1A                     RD2PPS          equ	14874	;# 
 11015   003A1B                     RD3PPS          equ	14875	;# 
 11016   003A1C                     RD4PPS          equ	14876	;# 
 11017   003A1D                     RD5PPS          equ	14877	;# 
 11018   003A1E                     RD6PPS          equ	14878	;# 
 11019   003A1F                     RD7PPS          equ	14879	;# 
 11020   003A20                     RE0PPS          equ	14880	;# 
 11021   003A21                     RE1PPS          equ	14881	;# 
 11022   003A22                     RE2PPS          equ	14882	;# 
 11023   003A28                     RF0PPS          equ	14888	;# 
 11024   003A29                     RF1PPS          equ	14889	;# 
 11025   003A2A                     RF2PPS          equ	14890	;# 
 11026   003A2B                     RF3PPS          equ	14891	;# 
 11027   003A2C                     RF4PPS          equ	14892	;# 
 11028   003A2D                     RF5PPS          equ	14893	;# 
 11029   003A2E                     RF6PPS          equ	14894	;# 
 11030   003A2F                     RF7PPS          equ	14895	;# 
 11031   003A40                     ANSELA          equ	14912	;# 
 11032   003A41                     WPUA            equ	14913	;# 
 11033   003A42                     ODCONA          equ	14914	;# 
 11034   003A43                     SLRCONA         equ	14915	;# 
 11035   003A44                     INLVLA          equ	14916	;# 
 11036   003A45                     IOCAP           equ	14917	;# 
 11037   003A46                     IOCAN           equ	14918	;# 
 11038   003A47                     IOCAF           equ	14919	;# 
 11039   003A50                     ANSELB          equ	14928	;# 
 11040   003A51                     WPUB            equ	14929	;# 
 11041   003A52                     ODCONB          equ	14930	;# 
 11042   003A53                     SLRCONB         equ	14931	;# 
 11043   003A54                     INLVLB          equ	14932	;# 
 11044   003A55                     IOCBP           equ	14933	;# 
 11045   003A56                     IOCBN           equ	14934	;# 
 11046   003A57                     IOCBF           equ	14935	;# 
 11047   003A5A                     RB1I2C          equ	14938	;# 
 11048   003A5B                     RB2I2C          equ	14939	;# 
 11049   003A60                     ANSELC          equ	14944	;# 
 11050   003A61                     WPUC            equ	14945	;# 
 11051   003A62                     ODCONC          equ	14946	;# 
 11052   003A63                     SLRCONC         equ	14947	;# 
 11053   003A64                     INLVLC          equ	14948	;# 
 11054   003A65                     IOCCP           equ	14949	;# 
 11055   003A66                     IOCCN           equ	14950	;# 
 11056   003A67                     IOCCF           equ	14951	;# 
 11057   003A6A                     RC3I2C          equ	14954	;# 
 11058   003A6B                     RC4I2C          equ	14955	;# 
 11059   003A70                     ANSELD          equ	14960	;# 
 11060   003A71                     WPUD            equ	14961	;# 
 11061   003A72                     ODCOND          equ	14962	;# 
 11062   003A73                     SLRCOND         equ	14963	;# 
 11063   003A74                     INLVLD          equ	14964	;# 
 11064   003A7A                     RD0I2C          equ	14970	;# 
 11065   003A7B                     RD1I2C          equ	14971	;# 
 11066   003A80                     ANSELE          equ	14976	;# 
 11067   003A81                     WPUE            equ	14977	;# 
 11068   003A82                     ODCONE          equ	14978	;# 
 11069   003A83                     SLRCONE         equ	14979	;# 
 11070   003A84                     INLVLE          equ	14980	;# 
 11071   003A85                     IOCEP           equ	14981	;# 
 11072   003A86                     IOCEN           equ	14982	;# 
 11073   003A87                     IOCEF           equ	14983	;# 
 11074   003A90                     ANSELF          equ	14992	;# 
 11075   003A91                     WPUF            equ	14993	;# 
 11076   003A92                     ODCONF          equ	14994	;# 
 11077   003A93                     SLRCONF         equ	14995	;# 
 11078   003A94                     INLVLF          equ	14996	;# 
 11079   003ABF                     PPSLOCK         equ	15039	;# 
 11080   003AC0                     INT0PPS         equ	15040	;# 
 11081   003AC1                     INT1PPS         equ	15041	;# 
 11082   003AC2                     INT2PPS         equ	15042	;# 
 11083   003AC3                     T0CKIPPS        equ	15043	;# 
 11084   003AC4                     T1CKIPPS        equ	15044	;# 
 11085   003AC5                     T1GPPS          equ	15045	;# 
 11086   003AC6                     T3CKIPPS        equ	15046	;# 
 11087   003AC7                     T3GPPS          equ	15047	;# 
 11088   003AC8                     T5CKIPPS        equ	15048	;# 
 11089   003AC9                     T5GPPS          equ	15049	;# 
 11090   003ACA                     T2INPPS         equ	15050	;# 
 11091   003ACB                     T4INPPS         equ	15051	;# 
 11092   003ACC                     T6INPPS         equ	15052	;# 
 11093   003ACD                     CCP1PPS         equ	15053	;# 
 11094   003ACE                     CCP2PPS         equ	15054	;# 
 11095   003ACF                     CCP3PPS         equ	15055	;# 
 11096   003AD0                     CCP4PPS         equ	15056	;# 
 11097   003AD1                     SMT1WINPPS      equ	15057	;# 
 11098   003AD2                     SMT1SIGPPS      equ	15058	;# 
 11099   003AD3                     CWG1INPPS       equ	15059	;# 
 11100   003AD4                     CWG2INPPS       equ	15060	;# 
 11101   003AD5                     CWG3INPPS       equ	15061	;# 
 11102   003AD6                     MD1CARLPPS      equ	15062	;# 
 11103   003AD7                     MD1CARHPPS      equ	15063	;# 
 11104   003AD8                     MD1SRCPPS       equ	15064	;# 
 11105   003AD9                     CLCIN0PPS       equ	15065	;# 
 11106   003ADA                     CLCIN1PPS       equ	15066	;# 
 11107   003ADB                     CLCIN2PPS       equ	15067	;# 
 11108   003ADC                     CLCIN3PPS       equ	15068	;# 
 11109   003ADD                     ADACTPPS        equ	15069	;# 
 11110   003ADE                     SPI1SCKPPS      equ	15070	;# 
 11111   003ADF                     SPI1SDIPPS      equ	15071	;# 
 11112   003AE0                     SPI1SSPPS       equ	15072	;# 
 11113   003AE1                     I2C1SCLPPS      equ	15073	;# 
 11114   003AE2                     I2C1SDAPPS      equ	15074	;# 
 11115   003AE3                     I2C2SCLPPS      equ	15075	;# 
 11116   003AE4                     I2C2SDAPPS      equ	15076	;# 
 11117   003AE5                     U1RXPPS         equ	15077	;# 
 11118   003AE6                     U1CTSPPS        equ	15078	;# 
 11119   003AE8                     U2RXPPS         equ	15080	;# 
 11120   003AE9                     U2CTSPPS        equ	15081	;# 
 11121   003BC9                     DMA2BUF         equ	15305	;# 
 11122   003BCA                     DMA2DCNT        equ	15306	;# 
 11123   003BCA                     DMA2DCNTL       equ	15306	;# 
 11124   003BCB                     DMA2DCNTH       equ	15307	;# 
 11125   003BCC                     DMA2DPTR        equ	15308	;# 
 11126   003BCC                     DMA2DPTRL       equ	15308	;# 
 11127   003BCD                     DMA2DPTRH       equ	15309	;# 
 11128   003BCE                     DMA2DSZ         equ	15310	;# 
 11129   003BCE                     DMA2DSZL        equ	15310	;# 
 11130   003BCF                     DMA2DSZH        equ	15311	;# 
 11131   003BD0                     DMA2DSA         equ	15312	;# 
 11132   003BD0                     DMA2DSAL        equ	15312	;# 
 11133   003BD1                     DMA2DSAH        equ	15313	;# 
 11134   003BD2                     DMA2SCNT        equ	15314	;# 
 11135   003BD2                     DMA2SCNTL       equ	15314	;# 
 11136   003BD3                     DMA2SCNTH       equ	15315	;# 
 11137   003BD4                     DMA2SPTR        equ	15316	;# 
 11138   003BD4                     DMA2SPTRL       equ	15316	;# 
 11139   003BD5                     DMA2SPTRH       equ	15317	;# 
 11140   003BD6                     DMA2SPTRU       equ	15318	;# 
 11141   003BD7                     DMA2SSZ         equ	15319	;# 
 11142   003BD7                     DMA2SSZL        equ	15319	;# 
 11143   003BD8                     DMA2SSZH        equ	15320	;# 
 11144   003BD9                     DMA2SSA         equ	15321	;# 
 11145   003BD9                     DMA2SSAL        equ	15321	;# 
 11146   003BDA                     DMA2SSAH        equ	15322	;# 
 11147   003BDB                     DMA2SSAU        equ	15323	;# 
 11148   003BDC                     DMA2CON0        equ	15324	;# 
 11149   003BDD                     DMA2CON1        equ	15325	;# 
 11150   003BDE                     DMA2AIRQ        equ	15326	;# 
 11151   003BDF                     DMA2SIRQ        equ	15327	;# 
 11152   003BE9                     DMA1BUF         equ	15337	;# 
 11153   003BEA                     DMA1DCNT        equ	15338	;# 
 11154   003BEA                     DMA1DCNTL       equ	15338	;# 
 11155   003BEB                     DMA1DCNTH       equ	15339	;# 
 11156   003BEC                     DMA1DPTR        equ	15340	;# 
 11157   003BEC                     DMA1DPTRL       equ	15340	;# 
 11158   003BED                     DMA1DPTRH       equ	15341	;# 
 11159   003BEE                     DMA1DSZ         equ	15342	;# 
 11160   003BEE                     DMA1DSZL        equ	15342	;# 
 11161   003BEF                     DMA1DSZH        equ	15343	;# 
 11162   003BF0                     DMA1DSA         equ	15344	;# 
 11163   003BF0                     DMA1DSAL        equ	15344	;# 
 11164   003BF1                     DMA1DSAH        equ	15345	;# 
 11165   003BF2                     DMA1SCNT        equ	15346	;# 
 11166   003BF2                     DMA1SCNTL       equ	15346	;# 
 11167   003BF3                     DMA1SCNTH       equ	15347	;# 
 11168   003BF4                     DMA1SPTR        equ	15348	;# 
 11169   003BF4                     DMA1SPTRL       equ	15348	;# 
 11170   003BF5                     DMA1SPTRH       equ	15349	;# 
 11171   003BF6                     DMA1SPTRU       equ	15350	;# 
 11172   003BF7                     DMA1SSZ         equ	15351	;# 
 11173   003BF7                     DMA1SSZL        equ	15351	;# 
 11174   003BF8                     DMA1SSZH        equ	15352	;# 
 11175   003BF9                     DMA1SSA         equ	15353	;# 
 11176   003BF9                     DMA1SSAL        equ	15353	;# 
 11177   003BFA                     DMA1SSAH        equ	15354	;# 
 11178   003BFB                     DMA1SSAU        equ	15355	;# 
 11179   003BFC                     DMA1CON0        equ	15356	;# 
 11180   003BFD                     DMA1CON1        equ	15357	;# 
 11181   003BFE                     DMA1AIRQ        equ	15358	;# 
 11182   003BFF                     DMA1SIRQ        equ	15359	;# 
 11183   003C56                     CLC4CON         equ	15446	;# 
 11184   003C57                     CLC4POL         equ	15447	;# 
 11185   003C58                     CLC4SEL0        equ	15448	;# 
 11186   003C59                     CLC4SEL1        equ	15449	;# 
 11187   003C5A                     CLC4SEL2        equ	15450	;# 
 11188   003C5B                     CLC4SEL3        equ	15451	;# 
 11189   003C5C                     CLC4GLS0        equ	15452	;# 
 11190   003C5D                     CLC4GLS1        equ	15453	;# 
 11191   003C5E                     CLC4GLS2        equ	15454	;# 
 11192   003C5F                     CLC4GLS3        equ	15455	;# 
 11193   003C60                     CLC3CON         equ	15456	;# 
 11194   003C61                     CLC3POL         equ	15457	;# 
 11195   003C62                     CLC3SEL0        equ	15458	;# 
 11196   003C63                     CLC3SEL1        equ	15459	;# 
 11197   003C64                     CLC3SEL2        equ	15460	;# 
 11198   003C65                     CLC3SEL3        equ	15461	;# 
 11199   003C66                     CLC3GLS0        equ	15462	;# 
 11200   003C67                     CLC3GLS1        equ	15463	;# 
 11201   003C68                     CLC3GLS2        equ	15464	;# 
 11202   003C69                     CLC3GLS3        equ	15465	;# 
 11203   003C6A                     CLC2CON         equ	15466	;# 
 11204   003C6B                     CLC2POL         equ	15467	;# 
 11205   003C6C                     CLC2SEL0        equ	15468	;# 
 11206   003C6D                     CLC2SEL1        equ	15469	;# 
 11207   003C6E                     CLC2SEL2        equ	15470	;# 
 11208   003C6F                     CLC2SEL3        equ	15471	;# 
 11209   003C70                     CLC2GLS0        equ	15472	;# 
 11210   003C71                     CLC2GLS1        equ	15473	;# 
 11211   003C72                     CLC2GLS2        equ	15474	;# 
 11212   003C73                     CLC2GLS3        equ	15475	;# 
 11213   003C74                     CLC1CON         equ	15476	;# 
 11214   003C75                     CLC1POL         equ	15477	;# 
 11215   003C76                     CLC1SEL0        equ	15478	;# 
 11216   003C77                     CLC1SEL1        equ	15479	;# 
 11217   003C78                     CLC1SEL2        equ	15480	;# 
 11218   003C79                     CLC1SEL3        equ	15481	;# 
 11219   003C7A                     CLC1GLS0        equ	15482	;# 
 11220   003C7B                     CLC1GLS1        equ	15483	;# 
 11221   003C7C                     CLC1GLS2        equ	15484	;# 
 11222   003C7D                     CLC1GLS3        equ	15485	;# 
 11223   003C7E                     CLCDATA0        equ	15486	;# 
 11224   003CE5                     CLKRCON         equ	15589	;# 
 11225   003CE6                     CLKRCLK         equ	15590	;# 
 11226   003CFA                     MD1CON0         equ	15610	;# 
 11227   003CFB                     MD1CON1         equ	15611	;# 
 11228   003CFC                     MD1SRC          equ	15612	;# 
 11229   003CFD                     MD1CARL         equ	15613	;# 
 11230   003CFE                     MD1CARH         equ	15614	;# 
 11231   003D10                     SPI1RXB         equ	15632	;# 
 11232   003D11                     SPI1TXB         equ	15633	;# 
 11233   003D12                     SPI1TCNT        equ	15634	;# 
 11234   003D12                     SPI1TCNTL       equ	15634	;# 
 11235   003D13                     SPI1TCNTH       equ	15635	;# 
 11236   003D14                     SPI1CON0        equ	15636	;# 
 11237   003D15                     SPI1CON1        equ	15637	;# 
 11238   003D16                     SPI1CON2        equ	15638	;# 
 11239   003D17                     SPI1STATUS      equ	15639	;# 
 11240   003D18                     SPI1TWIDTH      equ	15640	;# 
 11241   003D19                     SPI1BAUD        equ	15641	;# 
 11242   003D1A                     SPI1INTF        equ	15642	;# 
 11243   003D1B                     SPI1INTE        equ	15643	;# 
 11244   003D1C                     SPI1CLK         equ	15644	;# 
 11245   003D54                     I2C2RXB         equ	15700	;# 
 11246   003D55                     I2C2TXB         equ	15701	;# 
 11247   003D56                     I2C2CNT         equ	15702	;# 
 11248   003D57                     I2C2ADB0        equ	15703	;# 
 11249   003D58                     I2C2ADB1        equ	15704	;# 
 11250   003D59                     I2C2ADR0        equ	15705	;# 
 11251   003D5A                     I2C2ADR1        equ	15706	;# 
 11252   003D5B                     I2C2ADR2        equ	15707	;# 
 11253   003D5C                     I2C2ADR3        equ	15708	;# 
 11254   003D5D                     I2C2CON0        equ	15709	;# 
 11255   003D5E                     I2C2CON1        equ	15710	;# 
 11256   003D5F                     I2C2CON2        equ	15711	;# 
 11257   003D60                     I2C2ERR         equ	15712	;# 
 11258   003D61                     I2C2STAT0       equ	15713	;# 
 11259   003D62                     I2C2STAT1       equ	15714	;# 
 11260   003D63                     I2C2PIR         equ	15715	;# 
 11261   003D64                     I2C2PIE         equ	15716	;# 
 11262   003D65                     I2C2CLK         equ	15717	;# 
 11263   003D66                     I2C2BTO         equ	15718	;# 
 11264   003D6A                     I2C1RXB         equ	15722	;# 
 11265   003D6B                     I2C1TXB         equ	15723	;# 
 11266   003D6C                     I2C1CNT         equ	15724	;# 
 11267   003D6D                     I2C1ADB0        equ	15725	;# 
 11268   003D6E                     I2C1ADB1        equ	15726	;# 
 11269   003D6F                     I2C1ADR0        equ	15727	;# 
 11270   003D70                     I2C1ADR1        equ	15728	;# 
 11271   003D71                     I2C1ADR2        equ	15729	;# 
 11272   003D72                     I2C1ADR3        equ	15730	;# 
 11273   003D73                     I2C1CON0        equ	15731	;# 
 11274   003D74                     I2C1CON1        equ	15732	;# 
 11275   003D75                     I2C1CON2        equ	15733	;# 
 11276   003D76                     I2C1ERR         equ	15734	;# 
 11277   003D77                     I2C1STAT0       equ	15735	;# 
 11278   003D78                     I2C1STAT1       equ	15736	;# 
 11279   003D79                     I2C1PIR         equ	15737	;# 
 11280   003D7A                     I2C1PIE         equ	15738	;# 
 11281   003D7B                     I2C1CLK         equ	15739	;# 
 11282   003D7C                     I2C1BTO         equ	15740	;# 
 11283   003DD0                     U2RXB           equ	15824	;# 
 11284   003DD0                     U2RXBL          equ	15824	;# 
 11285   003DD2                     U2TXB           equ	15826	;# 
 11286   003DD2                     U2TXBL          equ	15826	;# 
 11287   003DD4                     U2P1            equ	15828	;# 
 11288   003DD4                     U2P1L           equ	15828	;# 
 11289   003DD6                     U2P2            equ	15830	;# 
 11290   003DD6                     U2P2L           equ	15830	;# 
 11291   003DD8                     U2P3            equ	15832	;# 
 11292   003DD8                     U2P3L           equ	15832	;# 
 11293   003DDA                     U2CON0          equ	15834	;# 
 11294   003DDB                     U2CON1          equ	15835	;# 
 11295   003DDC                     U2CON2          equ	15836	;# 
 11296   003DDD                     U2BRG           equ	15837	;# 
 11297   003DDD                     U2BRGL          equ	15837	;# 
 11298   003DDE                     U2BRGH          equ	15838	;# 
 11299   003DDF                     U2FIFO          equ	15839	;# 
 11300   003DE0                     U2UIR           equ	15840	;# 
 11301   003DE1                     U2ERRIR         equ	15841	;# 
 11302   003DE2                     U2ERRIE         equ	15842	;# 
 11303   003DE8                     U1RXB           equ	15848	;# 
 11304   003DE8                     U1RXBL          equ	15848	;# 
 11305   003DE9                     U1RXCHK         equ	15849	;# 
 11306   003DEA                     U1TXB           equ	15850	;# 
 11307   003DEA                     U1TXBL          equ	15850	;# 
 11308   003DEB                     U1TXCHK         equ	15851	;# 
 11309   003DEC                     U1P1            equ	15852	;# 
 11310   003DEC                     U1P1L           equ	15852	;# 
 11311   003DED                     U1P1H           equ	15853	;# 
 11312   003DEE                     U1P2            equ	15854	;# 
 11313   003DEE                     U1P2L           equ	15854	;# 
 11314   003DEF                     U1P2H           equ	15855	;# 
 11315   003DF0                     U1P3            equ	15856	;# 
 11316   003DF0                     U1P3L           equ	15856	;# 
 11317   003DF1                     U1P3H           equ	15857	;# 
 11318   003DF2                     U1CON0          equ	15858	;# 
 11319   003DF3                     U1CON1          equ	15859	;# 
 11320   003DF4                     U1CON2          equ	15860	;# 
 11321   003DF5                     U1BRG           equ	15861	;# 
 11322   003DF5                     U1BRGL          equ	15861	;# 
 11323   003DF6                     U1BRGH          equ	15862	;# 
 11324   003DF7                     U1FIFO          equ	15863	;# 
 11325   003DF8                     U1UIR           equ	15864	;# 
 11326   003DF9                     U1ERRIR         equ	15865	;# 
 11327   003DFA                     U1ERRIE         equ	15866	;# 
 11328   003E9C                     DAC1CON1        equ	16028	;# 
 11329   003E9E                     DAC1CON0        equ	16030	;# 
 11330   003EB8                     CM2CON0         equ	16056	;# 
 11331   003EB9                     CM2CON1         equ	16057	;# 
 11332   003EBA                     CM2NCH          equ	16058	;# 
 11333   003EBB                     CM2PCH          equ	16059	;# 
 11334   003EBC                     CM1CON0         equ	16060	;# 
 11335   003EBD                     CM1CON1         equ	16061	;# 
 11336   003EBE                     CM1NCH          equ	16062	;# 
 11337   003EBF                     CM1PCH          equ	16063	;# 
 11338   003EC0                     CMOUT           equ	16064	;# 
 11339   003EC1                     FVRCON          equ	16065	;# 
 11340   003EC3                     ZCDCON          equ	16067	;# 
 11341   003EC9                     HLVDCON0        equ	16073	;# 
 11342   003ECA                     HLVDCON1        equ	16074	;# 
 11343   003ED7                     ADCP            equ	16087	;# 
 11344   003EDE                     ADLTH           equ	16094	;# 
 11345   003EDE                     ADLTHL          equ	16094	;# 
 11346   003EDF                     ADLTHH          equ	16095	;# 
 11347   003EE0                     ADUTH           equ	16096	;# 
 11348   003EE0                     ADUTHL          equ	16096	;# 
 11349   003EE1                     ADUTHH          equ	16097	;# 
 11350   003EE2                     ADERR           equ	16098	;# 
 11351   003EE2                     ADERRL          equ	16098	;# 
 11352   003EE3                     ADERRH          equ	16099	;# 
 11353   003EE4                     ADSTPT          equ	16100	;# 
 11354   003EE4                     ADSTPTL         equ	16100	;# 
 11355   003EE5                     ADSTPTH         equ	16101	;# 
 11356   003EE6                     ADFLTR          equ	16102	;# 
 11357   003EE6                     ADFLTRL         equ	16102	;# 
 11358   003EE7                     ADFLTRH         equ	16103	;# 
 11359   003EE8                     ADACC           equ	16104	;# 
 11360   003EE8                     ADACCL          equ	16104	;# 
 11361   003EE9                     ADACCH          equ	16105	;# 
 11362   003EEA                     ADACCU          equ	16106	;# 
 11363   003EEB                     ADCNT           equ	16107	;# 
 11364   003EEC                     ADRPT           equ	16108	;# 
 11365   003EED                     ADPREV          equ	16109	;# 
 11366   003EED                     ADPREVL         equ	16109	;# 
 11367   003EEE                     ADPREVH         equ	16110	;# 
 11368   003EEF                     ADRES           equ	16111	;# 
 11369   003EEF                     ADRESL          equ	16111	;# 
 11370   003EF0                     ADRESH          equ	16112	;# 
 11371   003EF1                     ADPCH           equ	16113	;# 
 11372   003EF3                     ADACQ           equ	16115	;# 
 11373   003EF3                     ADACQL          equ	16115	;# 
 11374   003EF4                     ADACQH          equ	16116	;# 
 11375   003EF5                     ADCAP           equ	16117	;# 
 11376   003EF6                     ADPRE           equ	16118	;# 
 11377   003EF6                     ADPREL          equ	16118	;# 
 11378   003EF7                     ADPREH          equ	16119	;# 
 11379   003EF8                     ADCON0          equ	16120	;# 
 11380   003EF9                     ADCON1          equ	16121	;# 
 11381   003EFA                     ADCON2          equ	16122	;# 
 11382   003EFB                     ADCON3          equ	16123	;# 
 11383   003EFC                     ADSTAT          equ	16124	;# 
 11384   003EFD                     ADREF           equ	16125	;# 
 11385   003EFE                     ADACT           equ	16126	;# 
 11386   003EFF                     ADCLK           equ	16127	;# 
 11387   003F12                     SMT1TMR         equ	16146	;# 
 11388   003F12                     SMT1TMRL        equ	16146	;# 
 11389   003F13                     SMT1TMRH        equ	16147	;# 
 11390   003F14                     SMT1TMRU        equ	16148	;# 
 11391   003F15                     SMT1CPR         equ	16149	;# 
 11392   003F15                     SMT1CPRL        equ	16149	;# 
 11393   003F16                     SMT1CPRH        equ	16150	;# 
 11394   003F17                     SMT1CPRU        equ	16151	;# 
 11395   003F18                     SMT1CPW         equ	16152	;# 
 11396   003F18                     SMT1CPWL        equ	16152	;# 
 11397   003F19                     SMT1CPWH        equ	16153	;# 
 11398   003F1A                     SMT1CPWU        equ	16154	;# 
 11399   003F1B                     SMT1PR          equ	16155	;# 
 11400   003F1B                     SMT1PRL         equ	16155	;# 
 11401   003F1C                     SMT1PRH         equ	16156	;# 
 11402   003F1D                     SMT1PRU         equ	16157	;# 
 11403   003F1E                     SMT1CON0        equ	16158	;# 
 11404   003F1F                     SMT1CON1        equ	16159	;# 
 11405   003F20                     SMT1STAT        equ	16160	;# 
 11406   003F21                     SMT1CLK         equ	16161	;# 
 11407   003F22                     SMT1SIG         equ	16162	;# 
 11408   003F23                     SMT1WIN         equ	16163	;# 
 11409   003F38                     NCO1ACC         equ	16184	;# 
 11410   003F38                     NCO1ACCL        equ	16184	;# 
 11411   003F39                     NCO1ACCH        equ	16185	;# 
 11412   003F3A                     NCO1ACCU        equ	16186	;# 
 11413   003F3B                     NCO1INC         equ	16187	;# 
 11414   003F3B                     NCO1INCL        equ	16187	;# 
 11415   003F3C                     NCO1INCH        equ	16188	;# 
 11416   003F3D                     NCO1INCU        equ	16189	;# 
 11417   003F3E                     NCO1CON         equ	16190	;# 
 11418   003F3F                     NCO1CLK         equ	16191	;# 
 11419   003F40                     CWG3CLK         equ	16192	;# 
 11420   003F40                     CWG3CLKCON      equ	16192	;# 
 11421   003F41                     CWG3ISM         equ	16193	;# 
 11422   003F41                     CWG3DAT         equ	16193	;# 
 11423   003F42                     CWG3DBR         equ	16194	;# 
 11424   003F43                     CWG3DBF         equ	16195	;# 
 11425   003F44                     CWG3CON0        equ	16196	;# 
 11426   003F45                     CWG3CON1        equ	16197	;# 
 11427   003F46                     CWG3AS0         equ	16198	;# 
 11428   003F47                     CWG3AS1         equ	16199	;# 
 11429   003F48                     CWG3STR         equ	16200	;# 
 11430   003F49                     CWG2CLK         equ	16201	;# 
 11431   003F49                     CWG2CLKCON      equ	16201	;# 
 11432   003F4A                     CWG2ISM         equ	16202	;# 
 11433   003F4A                     CWG2DAT         equ	16202	;# 
 11434   003F4B                     CWG2DBR         equ	16203	;# 
 11435   003F4C                     CWG2DBF         equ	16204	;# 
 11436   003F4D                     CWG2CON0        equ	16205	;# 
 11437   003F4E                     CWG2CON1        equ	16206	;# 
 11438   003F4F                     CWG2AS0         equ	16207	;# 
 11439   003F50                     CWG2AS1         equ	16208	;# 
 11440   003F51                     CWG2STR         equ	16209	;# 
 11441   003F52                     CWG1CLK         equ	16210	;# 
 11442   003F52                     CWG1CLKCON      equ	16210	;# 
 11443   003F53                     CWG1ISM         equ	16211	;# 
 11444   003F53                     CWG1DAT         equ	16211	;# 
 11445   003F54                     CWG1DBR         equ	16212	;# 
 11446   003F55                     CWG1DBF         equ	16213	;# 
 11447   003F56                     CWG1CON0        equ	16214	;# 
 11448   003F57                     CWG1CON1        equ	16215	;# 
 11449   003F58                     CWG1AS0         equ	16216	;# 
 11450   003F59                     CWG1AS1         equ	16217	;# 
 11451   003F5A                     CWG1STR         equ	16218	;# 
 11452   003F5E                     CCPTMRS0        equ	16222	;# 
 11453   003F5F                     CCPTMRS1        equ	16223	;# 
 11454   003F60                     PWM8DC          equ	16224	;# 
 11455   003F60                     PWM8DCL         equ	16224	;# 
 11456   003F61                     PWM8DCH         equ	16225	;# 
 11457   003F62                     PWM8CON         equ	16226	;# 
 11458   003F64                     PWM7DC          equ	16228	;# 
 11459   003F64                     PWM7DCL         equ	16228	;# 
 11460   003F65                     PWM7DCH         equ	16229	;# 
 11461   003F66                     PWM7CON         equ	16230	;# 
 11462   003F68                     PWM6DC          equ	16232	;# 
 11463   003F68                     PWM6DCL         equ	16232	;# 
 11464   003F69                     PWM6DCH         equ	16233	;# 
 11465   003F6A                     PWM6CON         equ	16234	;# 
 11466   003F6C                     PWM5DC          equ	16236	;# 
 11467   003F6C                     PWM5DCL         equ	16236	;# 
 11468   003F6D                     PWM5DCH         equ	16237	;# 
 11469   003F6E                     PWM5CON         equ	16238	;# 
 11470   003F70                     CCPR4           equ	16240	;# 
 11471   003F70                     CCPR4L          equ	16240	;# 
 11472   003F71                     CCPR4H          equ	16241	;# 
 11473   003F72                     CCP4CON         equ	16242	;# 
 11474   003F73                     CCP4CAP         equ	16243	;# 
 11475   003F74                     CCPR3           equ	16244	;# 
 11476   003F74                     CCPR3L          equ	16244	;# 
 11477   003F75                     CCPR3H          equ	16245	;# 
 11478   003F76                     CCP3CON         equ	16246	;# 
 11479   003F77                     CCP3CAP         equ	16247	;# 
 11480   003F78                     CCPR2           equ	16248	;# 
 11481   003F78                     CCPR2L          equ	16248	;# 
 11482   003F79                     CCPR2H          equ	16249	;# 
 11483   003F7A                     CCP2CON         equ	16250	;# 
 11484   003F7B                     CCP2CAP         equ	16251	;# 
 11485   003F7C                     CCPR1           equ	16252	;# 
 11486   003F7C                     CCPR1L          equ	16252	;# 
 11487   003F7D                     CCPR1H          equ	16253	;# 
 11488   003F7E                     CCP1CON         equ	16254	;# 
 11489   003F7F                     CCP1CAP         equ	16255	;# 
 11490   003F92                     T6TMR           equ	16274	;# 
 11491   003F92                     TMR6            equ	16274	;# 
 11492   003F93                     T6PR            equ	16275	;# 
 11493   003F93                     PR6             equ	16275	;# 
 11494   003F94                     T6CON           equ	16276	;# 
 11495   003F95                     T6HLT           equ	16277	;# 
 11496   003F96                     T6CLKCON        equ	16278	;# 
 11497   003F96                     T6CLK           equ	16278	;# 
 11498   003F97                     T6RST           equ	16279	;# 
 11499   003F98                     TMR5            equ	16280	;# 
 11500   003F98                     TMR5L           equ	16280	;# 
 11501   003F99                     TMR5H           equ	16281	;# 
 11502   003F9A                     T5CON           equ	16282	;# 
 11503   003F9A                     TMR5CON         equ	16282	;# 
 11504   003F9B                     T5GCON          equ	16283	;# 
 11505   003F9B                     TMR5GCON        equ	16283	;# 
 11506   003F9C                     T5GATE          equ	16284	;# 
 11507   003F9C                     TMR5GATE        equ	16284	;# 
 11508   003F9D                     T5CLK           equ	16285	;# 
 11509   003F9D                     TMR5CLK         equ	16285	;# 
 11510   003F9D                     PR5             equ	16285	;# 
 11511   003F9E                     T4TMR           equ	16286	;# 
 11512   003F9E                     TMR4            equ	16286	;# 
 11513   003F9F                     T4PR            equ	16287	;# 
 11514   003F9F                     PR4             equ	16287	;# 
 11515   003FA0                     T4CON           equ	16288	;# 
 11516   003FA1                     T4HLT           equ	16289	;# 
 11517   003FA2                     T4CLKCON        equ	16290	;# 
 11518   003FA2                     T4CLK           equ	16290	;# 
 11519   003FA3                     T4RST           equ	16291	;# 
 11520   003FA4                     TMR3            equ	16292	;# 
 11521   003FA4                     TMR3L           equ	16292	;# 
 11522   003FA5                     TMR3H           equ	16293	;# 
 11523   003FA6                     T3CON           equ	16294	;# 
 11524   003FA6                     TMR3CON         equ	16294	;# 
 11525   003FA7                     T3GCON          equ	16295	;# 
 11526   003FA7                     TMR3GCON        equ	16295	;# 
 11527   003FA8                     T3GATE          equ	16296	;# 
 11528   003FA8                     TMR3GATE        equ	16296	;# 
 11529   003FA9                     T3CLK           equ	16297	;# 
 11530   003FA9                     TMR3CLK         equ	16297	;# 
 11531   003FA9                     PR3             equ	16297	;# 
 11532   003FAA                     T2TMR           equ	16298	;# 
 11533   003FAA                     TMR2            equ	16298	;# 
 11534   003FAB                     T2PR            equ	16299	;# 
 11535   003FAB                     PR2             equ	16299	;# 
 11536   003FAC                     T2CON           equ	16300	;# 
 11537   003FAD                     T2HLT           equ	16301	;# 
 11538   003FAE                     T2CLKCON        equ	16302	;# 
 11539   003FAE                     T2CLK           equ	16302	;# 
 11540   003FAF                     T2RST           equ	16303	;# 
 11541   003FB0                     TMR1            equ	16304	;# 
 11542   003FB0                     TMR1L           equ	16304	;# 
 11543   003FB1                     TMR1H           equ	16305	;# 
 11544   003FB2                     T1CON           equ	16306	;# 
 11545   003FB2                     TMR1CON         equ	16306	;# 
 11546   003FB3                     T1GCON          equ	16307	;# 
 11547   003FB3                     TMR1GCON        equ	16307	;# 
 11548   003FB4                     T1GATE          equ	16308	;# 
 11549   003FB4                     TMR1GATE        equ	16308	;# 
 11550   003FB5                     T1CLK           equ	16309	;# 
 11551   003FB5                     TMR1CLK         equ	16309	;# 
 11552   003FB5                     PR1             equ	16309	;# 
 11553   003FB6                     TMR0L           equ	16310	;# 
 11554   003FB6                     TMR0            equ	16310	;# 
 11555   003FB7                     TMR0H           equ	16311	;# 
 11556   003FB7                     PR0             equ	16311	;# 
 11557   003FB8                     T0CON0          equ	16312	;# 
 11558   003FB9                     T0CON1          equ	16313	;# 
 11559   003FBA                     LATA            equ	16314	;# 
 11560   003FBB                     LATB            equ	16315	;# 
 11561   003FBC                     LATC            equ	16316	;# 
 11562   003FBD                     LATD            equ	16317	;# 
 11563   003FBE                     LATE            equ	16318	;# 
 11564   003FBF                     LATF            equ	16319	;# 
 11565   003FC2                     TRISA           equ	16322	;# 
 11566   003FC3                     TRISB           equ	16323	;# 
 11567   003FC4                     TRISC           equ	16324	;# 
 11568   003FC5                     TRISD           equ	16325	;# 
 11569   003FC6                     TRISE           equ	16326	;# 
 11570   003FC7                     TRISF           equ	16327	;# 
 11571   003FCA                     PORTA           equ	16330	;# 
 11572   003FCB                     PORTB           equ	16331	;# 
 11573   003FCC                     PORTC           equ	16332	;# 
 11574   003FCD                     PORTD           equ	16333	;# 
 11575   003FCE                     PORTE           equ	16334	;# 
 11576   003FCF                     PORTF           equ	16335	;# 
 11577   003FD2                     INTCON0         equ	16338	;# 
 11578   003FD3                     INTCON1         equ	16339	;# 
 11579   003FD4                     IVTLOCK         equ	16340	;# 
 11580   003FD5                     IVTBASE         equ	16341	;# 
 11581   003FD5                     IVTBASEL        equ	16341	;# 
 11582   003FD6                     IVTBASEH        equ	16342	;# 
 11583   003FD7                     IVTBASEU        equ	16343	;# 
 11584   003FD8                     STATUS          equ	16344	;# 
 11585   003FD9                     FSR2            equ	16345	;# 
 11586   003FD9                     FSR2L           equ	16345	;# 
 11587   003FDA                     FSR2H           equ	16346	;# 
 11588   003FDB                     PLUSW2          equ	16347	;# 
 11589   003FDC                     PREINC2         equ	16348	;# 
 11590   003FDD                     POSTDEC2        equ	16349	;# 
 11591   003FDE                     POSTINC2        equ	16350	;# 
 11592   003FDF                     INDF2           equ	16351	;# 
 11593   003FE0                     BSR             equ	16352	;# 
 11594   003FE1                     FSR1            equ	16353	;# 
 11595   003FE1                     FSR1L           equ	16353	;# 
 11596   003FE2                     FSR1H           equ	16354	;# 
 11597   003FE3                     PLUSW1          equ	16355	;# 
 11598   003FE4                     PREINC1         equ	16356	;# 
 11599   003FE5                     POSTDEC1        equ	16357	;# 
 11600   003FE6                     POSTINC1        equ	16358	;# 
 11601   003FE7                     INDF1           equ	16359	;# 
 11602   003FE8                     WREG            equ	16360	;# 
 11603   003FE9                     FSR0            equ	16361	;# 
 11604   003FE9                     FSR0L           equ	16361	;# 
 11605   003FEA                     FSR0H           equ	16362	;# 
 11606   003FEB                     PLUSW0          equ	16363	;# 
 11607   003FEC                     PREINC0         equ	16364	;# 
 11608   003FED                     POSTDEC0        equ	16365	;# 
 11609   003FEE                     POSTINC0        equ	16366	;# 
 11610   003FEF                     INDF0           equ	16367	;# 
 11611   003FF0                     PCON0           equ	16368	;# 
 11612   003FF1                     PCON1           equ	16369	;# 
 11613   003FF3                     PROD            equ	16371	;# 
 11614   003FF3                     PRODL           equ	16371	;# 
 11615   003FF4                     PRODH           equ	16372	;# 
 11616   003FF5                     TABLAT          equ	16373	;# 
 11617   003FF6                     TBLPTR          equ	16374	;# 
 11618   003FF6                     TBLPTRL         equ	16374	;# 
 11619   003FF7                     TBLPTRH         equ	16375	;# 
 11620   003FF8                     TBLPTRU         equ	16376	;# 
 11621   003FF9                     PCLAT           equ	16377	;# 
 11622   003FF9                     PCL             equ	16377	;# 
 11623   003FFA                     PCLATH          equ	16378	;# 
 11624   003FFB                     PCLATU          equ	16379	;# 
 11625   003FFC                     STKPTR          equ	16380	;# 
 11626   003FFD                     TOS             equ	16381	;# 
 11627   003FFD                     TOSL            equ	16381	;# 
 11628   003FFE                     TOSH            equ	16382	;# 
 11629   003FFF                     TOSU            equ	16383	;# 
 11630   003880                     STATUS_CSHAD    equ	14464	;# 
 11631   003881                     WREG_CSHAD      equ	14465	;# 
 11632   003882                     BSR_CSHAD       equ	14466	;# 
 11633   003883                     SHADCON         equ	14467	;# 
 11634   003884                     STATUS_SHAD     equ	14468	;# 
 11635   003885                     WREG_SHAD       equ	14469	;# 
 11636   003886                     BSR_SHAD        equ	14470	;# 
 11637   003887                     PCLATH_SHAD     equ	14471	;# 
 11638   003888                     PCLATU_SHAD     equ	14472	;# 
 11639   003889                     FSR0SH          equ	14473	;# 
 11640   003889                     FSR0L_SHAD      equ	14473	;# 
 11641   00388A                     FSR0H_SHAD      equ	14474	;# 
 11642   00388B                     FSR1SH          equ	14475	;# 
 11643   00388B                     FSR1L_SHAD      equ	14475	;# 
 11644   00388C                     FSR1H_SHAD      equ	14476	;# 
 11645   00388D                     FSR2SH          equ	14477	;# 
 11646   00388D                     FSR2L_SHAD      equ	14477	;# 
 11647   00388E                     FSR2H_SHAD      equ	14478	;# 
 11648   00388F                     PRODSH          equ	14479	;# 
 11649   00388F                     PRODL_SHAD      equ	14479	;# 
 11650   003890                     PRODH_SHAD      equ	14480	;# 
 11651   00389D                     IVTADL          equ	14493	;# 
 11652   00389E                     IVTADH          equ	14494	;# 
 11653   00389F                     IVTADU          equ	14495	;# 
 11654   00395B                     WDTCON0         equ	14683	;# 
 11655   00395C                     WDTCON1         equ	14684	;# 
 11656   00395D                     WDTPSL          equ	14685	;# 
 11657   00395E                     WDTPSH          equ	14686	;# 
 11658   00395F                     WDTTMR          equ	14687	;# 
 11659   003960                     CRCDATA         equ	14688	;# 
 11660   003960                     CRCDATL         equ	14688	;# 
 11661   003961                     CRCDATH         equ	14689	;# 
 11662   003962                     CRCACC          equ	14690	;# 
 11663   003962                     CRCACCL         equ	14690	;# 
 11664   003963                     CRCACCH         equ	14691	;# 
 11665   003964                     CRCSHFT         equ	14692	;# 
 11666   003964                     CRCSHIFTL       equ	14692	;# 
 11667   003965                     CRCSHIFTH       equ	14693	;# 
 11668   003966                     CRCXOR          equ	14694	;# 
 11669   003966                     CRCXORL         equ	14694	;# 
 11670   003967                     CRCXORH         equ	14695	;# 
 11671   003968                     CRCCON0         equ	14696	;# 
 11672   003969                     CRCCON1         equ	14697	;# 
 11673   003976                     SCANLADR        equ	14710	;# 
 11674   003976                     SCANLADRL       equ	14710	;# 
 11675   003977                     SCANLADRH       equ	14711	;# 
 11676   003978                     SCANLADRU       equ	14712	;# 
 11677   003979                     SCANHADR        equ	14713	;# 
 11678   003979                     SCANHADRL       equ	14713	;# 
 11679   00397A                     SCANHADRH       equ	14714	;# 
 11680   00397B                     SCANHADRU       equ	14715	;# 
 11681   00397C                     SCANCON0        equ	14716	;# 
 11682   00397D                     SCANTRIG        equ	14717	;# 
 11683   003980                     IPR0            equ	14720	;# 
 11684   003981                     IPR1            equ	14721	;# 
 11685   003982                     IPR2            equ	14722	;# 
 11686   003983                     IPR3            equ	14723	;# 
 11687   003984                     IPR4            equ	14724	;# 
 11688   003985                     IPR5            equ	14725	;# 
 11689   003986                     IPR6            equ	14726	;# 
 11690   003987                     IPR7            equ	14727	;# 
 11691   003988                     IPR8            equ	14728	;# 
 11692   003989                     IPR9            equ	14729	;# 
 11693   00398A                     IPR10           equ	14730	;# 
 11694   003990                     PIE0            equ	14736	;# 
 11695   003991                     PIE1            equ	14737	;# 
 11696   003992                     PIE2            equ	14738	;# 
 11697   003993                     PIE3            equ	14739	;# 
 11698   003994                     PIE4            equ	14740	;# 
 11699   003995                     PIE5            equ	14741	;# 
 11700   003996                     PIE6            equ	14742	;# 
 11701   003997                     PIE7            equ	14743	;# 
 11702   003998                     PIE8            equ	14744	;# 
 11703   003999                     PIE9            equ	14745	;# 
 11704   00399A                     PIE10           equ	14746	;# 
 11705   0039A0                     PIR0            equ	14752	;# 
 11706   0039A1                     PIR1            equ	14753	;# 
 11707   0039A2                     PIR2            equ	14754	;# 
 11708   0039A3                     PIR3            equ	14755	;# 
 11709   0039A4                     PIR4            equ	14756	;# 
 11710   0039A5                     PIR5            equ	14757	;# 
 11711   0039A6                     PIR6            equ	14758	;# 
 11712   0039A7                     PIR7            equ	14759	;# 
 11713   0039A8                     PIR8            equ	14760	;# 
 11714   0039A9                     PIR9            equ	14761	;# 
 11715   0039AA                     PIR10           equ	14762	;# 
 11716   0039C0                     PMD0            equ	14784	;# 
 11717   0039C1                     PMD1            equ	14785	;# 
 11718   0039C2                     PMD2            equ	14786	;# 
 11719   0039C3                     PMD3            equ	14787	;# 
 11720   0039C4                     PMD4            equ	14788	;# 
 11721   0039C5                     PMD5            equ	14789	;# 
 11722   0039C6                     PMD6            equ	14790	;# 
 11723   0039C7                     PMD7            equ	14791	;# 
 11724   0039D0                     BORCON          equ	14800	;# 
 11725   0039D1                     VREGCON         equ	14801	;# 
 11726   0039D8                     CPUDOZE         equ	14808	;# 
 11727   0039D9                     OSCCON1         equ	14809	;# 
 11728   0039DA                     OSCCON2         equ	14810	;# 
 11729   0039DB                     OSCCON3         equ	14811	;# 
 11730   0039DC                     OSCSTAT         equ	14812	;# 
 11731   0039DC                     OSCSTAT1        equ	14812	;# 
 11732   0039DD                     OSCEN           equ	14813	;# 
 11733   0039DE                     OSCTUNE         equ	14814	;# 
 11734   0039DF                     OSCFRQ          equ	14815	;# 
 11735   0039E0                     NVMADRL         equ	14816	;# 
 11736   0039E1                     NVMADRH         equ	14817	;# 
 11737   0039E3                     NVMDAT          equ	14819	;# 
 11738   0039E5                     NVMCON1         equ	14821	;# 
 11739   0039E6                     NVMCON2         equ	14822	;# 
 11740   0039EF                     PRLOCK          equ	14831	;# 
 11741   0039F1                     ISRPR           equ	14833	;# 
 11742   0039F2                     MAINPR          equ	14834	;# 
 11743   0039F3                     DMA1PR          equ	14835	;# 
 11744   0039F4                     DMA2PR          equ	14836	;# 
 11745   0039F7                     SCANPR          equ	14839	;# 
 11746   003A00                     RA0PPS          equ	14848	;# 
 11747   003A01                     RA1PPS          equ	14849	;# 
 11748   003A02                     RA2PPS          equ	14850	;# 
 11749   003A03                     RA3PPS          equ	14851	;# 
 11750   003A04                     RA4PPS          equ	14852	;# 
 11751   003A05                     RA5PPS          equ	14853	;# 
 11752   003A06                     RA6PPS          equ	14854	;# 
 11753   003A07                     RA7PPS          equ	14855	;# 
 11754   003A08                     RB0PPS          equ	14856	;# 
 11755   003A09                     RB1PPS          equ	14857	;# 
 11756   003A0A                     RB2PPS          equ	14858	;# 
 11757   003A0B                     RB3PPS          equ	14859	;# 
 11758   003A0C                     RB4PPS          equ	14860	;# 
 11759   003A0D                     RB5PPS          equ	14861	;# 
 11760   003A0E                     RB6PPS          equ	14862	;# 
 11761   003A0F                     RB7PPS          equ	14863	;# 
 11762   003A10                     RC0PPS          equ	14864	;# 
 11763   003A11                     RC1PPS          equ	14865	;# 
 11764   003A12                     RC2PPS          equ	14866	;# 
 11765   003A13                     RC3PPS          equ	14867	;# 
 11766   003A14                     RC4PPS          equ	14868	;# 
 11767   003A15                     RC5PPS          equ	14869	;# 
 11768   003A16                     RC6PPS          equ	14870	;# 
 11769   003A17                     RC7PPS          equ	14871	;# 
 11770   003A18                     RD0PPS          equ	14872	;# 
 11771   003A19                     RD1PPS          equ	14873	;# 
 11772   003A1A                     RD2PPS          equ	14874	;# 
 11773   003A1B                     RD3PPS          equ	14875	;# 
 11774   003A1C                     RD4PPS          equ	14876	;# 
 11775   003A1D                     RD5PPS          equ	14877	;# 
 11776   003A1E                     RD6PPS          equ	14878	;# 
 11777   003A1F                     RD7PPS          equ	14879	;# 
 11778   003A20                     RE0PPS          equ	14880	;# 
 11779   003A21                     RE1PPS          equ	14881	;# 
 11780   003A22                     RE2PPS          equ	14882	;# 
 11781   003A28                     RF0PPS          equ	14888	;# 
 11782   003A29                     RF1PPS          equ	14889	;# 
 11783   003A2A                     RF2PPS          equ	14890	;# 
 11784   003A2B                     RF3PPS          equ	14891	;# 
 11785   003A2C                     RF4PPS          equ	14892	;# 
 11786   003A2D                     RF5PPS          equ	14893	;# 
 11787   003A2E                     RF6PPS          equ	14894	;# 
 11788   003A2F                     RF7PPS          equ	14895	;# 
 11789   003A40                     ANSELA          equ	14912	;# 
 11790   003A41                     WPUA            equ	14913	;# 
 11791   003A42                     ODCONA          equ	14914	;# 
 11792   003A43                     SLRCONA         equ	14915	;# 
 11793   003A44                     INLVLA          equ	14916	;# 
 11794   003A45                     IOCAP           equ	14917	;# 
 11795   003A46                     IOCAN           equ	14918	;# 
 11796   003A47                     IOCAF           equ	14919	;# 
 11797   003A50                     ANSELB          equ	14928	;# 
 11798   003A51                     WPUB            equ	14929	;# 
 11799   003A52                     ODCONB          equ	14930	;# 
 11800   003A53                     SLRCONB         equ	14931	;# 
 11801   003A54                     INLVLB          equ	14932	;# 
 11802   003A55                     IOCBP           equ	14933	;# 
 11803   003A56                     IOCBN           equ	14934	;# 
 11804   003A57                     IOCBF           equ	14935	;# 
 11805   003A5A                     RB1I2C          equ	14938	;# 
 11806   003A5B                     RB2I2C          equ	14939	;# 
 11807   003A60                     ANSELC          equ	14944	;# 
 11808   003A61                     WPUC            equ	14945	;# 
 11809   003A62                     ODCONC          equ	14946	;# 
 11810   003A63                     SLRCONC         equ	14947	;# 
 11811   003A64                     INLVLC          equ	14948	;# 
 11812   003A65                     IOCCP           equ	14949	;# 
 11813   003A66                     IOCCN           equ	14950	;# 
 11814   003A67                     IOCCF           equ	14951	;# 
 11815   003A6A                     RC3I2C          equ	14954	;# 
 11816   003A6B                     RC4I2C          equ	14955	;# 
 11817   003A70                     ANSELD          equ	14960	;# 
 11818   003A71                     WPUD            equ	14961	;# 
 11819   003A72                     ODCOND          equ	14962	;# 
 11820   003A73                     SLRCOND         equ	14963	;# 
 11821   003A74                     INLVLD          equ	14964	;# 
 11822   003A7A                     RD0I2C          equ	14970	;# 
 11823   003A7B                     RD1I2C          equ	14971	;# 
 11824   003A80                     ANSELE          equ	14976	;# 
 11825   003A81                     WPUE            equ	14977	;# 
 11826   003A82                     ODCONE          equ	14978	;# 
 11827   003A83                     SLRCONE         equ	14979	;# 
 11828   003A84                     INLVLE          equ	14980	;# 
 11829   003A85                     IOCEP           equ	14981	;# 
 11830   003A86                     IOCEN           equ	14982	;# 
 11831   003A87                     IOCEF           equ	14983	;# 
 11832   003A90                     ANSELF          equ	14992	;# 
 11833   003A91                     WPUF            equ	14993	;# 
 11834   003A92                     ODCONF          equ	14994	;# 
 11835   003A93                     SLRCONF         equ	14995	;# 
 11836   003A94                     INLVLF          equ	14996	;# 
 11837   003ABF                     PPSLOCK         equ	15039	;# 
 11838   003AC0                     INT0PPS         equ	15040	;# 
 11839   003AC1                     INT1PPS         equ	15041	;# 
 11840   003AC2                     INT2PPS         equ	15042	;# 
 11841   003AC3                     T0CKIPPS        equ	15043	;# 
 11842   003AC4                     T1CKIPPS        equ	15044	;# 
 11843   003AC5                     T1GPPS          equ	15045	;# 
 11844   003AC6                     T3CKIPPS        equ	15046	;# 
 11845   003AC7                     T3GPPS          equ	15047	;# 
 11846   003AC8                     T5CKIPPS        equ	15048	;# 
 11847   003AC9                     T5GPPS          equ	15049	;# 
 11848   003ACA                     T2INPPS         equ	15050	;# 
 11849   003ACB                     T4INPPS         equ	15051	;# 
 11850   003ACC                     T6INPPS         equ	15052	;# 
 11851   003ACD                     CCP1PPS         equ	15053	;# 
 11852   003ACE                     CCP2PPS         equ	15054	;# 
 11853   003ACF                     CCP3PPS         equ	15055	;# 
 11854   003AD0                     CCP4PPS         equ	15056	;# 
 11855   003AD1                     SMT1WINPPS      equ	15057	;# 
 11856   003AD2                     SMT1SIGPPS      equ	15058	;# 
 11857   003AD3                     CWG1INPPS       equ	15059	;# 
 11858   003AD4                     CWG2INPPS       equ	15060	;# 
 11859   003AD5                     CWG3INPPS       equ	15061	;# 
 11860   003AD6                     MD1CARLPPS      equ	15062	;# 
 11861   003AD7                     MD1CARHPPS      equ	15063	;# 
 11862   003AD8                     MD1SRCPPS       equ	15064	;# 
 11863   003AD9                     CLCIN0PPS       equ	15065	;# 
 11864   003ADA                     CLCIN1PPS       equ	15066	;# 
 11865   003ADB                     CLCIN2PPS       equ	15067	;# 
 11866   003ADC                     CLCIN3PPS       equ	15068	;# 
 11867   003ADD                     ADACTPPS        equ	15069	;# 
 11868   003ADE                     SPI1SCKPPS      equ	15070	;# 
 11869   003ADF                     SPI1SDIPPS      equ	15071	;# 
 11870   003AE0                     SPI1SSPPS       equ	15072	;# 
 11871   003AE1                     I2C1SCLPPS      equ	15073	;# 
 11872   003AE2                     I2C1SDAPPS      equ	15074	;# 
 11873   003AE3                     I2C2SCLPPS      equ	15075	;# 
 11874   003AE4                     I2C2SDAPPS      equ	15076	;# 
 11875   003AE5                     U1RXPPS         equ	15077	;# 
 11876   003AE6                     U1CTSPPS        equ	15078	;# 
 11877   003AE8                     U2RXPPS         equ	15080	;# 
 11878   003AE9                     U2CTSPPS        equ	15081	;# 
 11879   003BC9                     DMA2BUF         equ	15305	;# 
 11880   003BCA                     DMA2DCNT        equ	15306	;# 
 11881   003BCA                     DMA2DCNTL       equ	15306	;# 
 11882   003BCB                     DMA2DCNTH       equ	15307	;# 
 11883   003BCC                     DMA2DPTR        equ	15308	;# 
 11884   003BCC                     DMA2DPTRL       equ	15308	;# 
 11885   003BCD                     DMA2DPTRH       equ	15309	;# 
 11886   003BCE                     DMA2DSZ         equ	15310	;# 
 11887   003BCE                     DMA2DSZL        equ	15310	;# 
 11888   003BCF                     DMA2DSZH        equ	15311	;# 
 11889   003BD0                     DMA2DSA         equ	15312	;# 
 11890   003BD0                     DMA2DSAL        equ	15312	;# 
 11891   003BD1                     DMA2DSAH        equ	15313	;# 
 11892   003BD2                     DMA2SCNT        equ	15314	;# 
 11893   003BD2                     DMA2SCNTL       equ	15314	;# 
 11894   003BD3                     DMA2SCNTH       equ	15315	;# 
 11895   003BD4                     DMA2SPTR        equ	15316	;# 
 11896   003BD4                     DMA2SPTRL       equ	15316	;# 
 11897   003BD5                     DMA2SPTRH       equ	15317	;# 
 11898   003BD6                     DMA2SPTRU       equ	15318	;# 
 11899   003BD7                     DMA2SSZ         equ	15319	;# 
 11900   003BD7                     DMA2SSZL        equ	15319	;# 
 11901   003BD8                     DMA2SSZH        equ	15320	;# 
 11902   003BD9                     DMA2SSA         equ	15321	;# 
 11903   003BD9                     DMA2SSAL        equ	15321	;# 
 11904   003BDA                     DMA2SSAH        equ	15322	;# 
 11905   003BDB                     DMA2SSAU        equ	15323	;# 
 11906   003BDC                     DMA2CON0        equ	15324	;# 
 11907   003BDD                     DMA2CON1        equ	15325	;# 
 11908   003BDE                     DMA2AIRQ        equ	15326	;# 
 11909   003BDF                     DMA2SIRQ        equ	15327	;# 
 11910   003BE9                     DMA1BUF         equ	15337	;# 
 11911   003BEA                     DMA1DCNT        equ	15338	;# 
 11912   003BEA                     DMA1DCNTL       equ	15338	;# 
 11913   003BEB                     DMA1DCNTH       equ	15339	;# 
 11914   003BEC                     DMA1DPTR        equ	15340	;# 
 11915   003BEC                     DMA1DPTRL       equ	15340	;# 
 11916   003BED                     DMA1DPTRH       equ	15341	;# 
 11917   003BEE                     DMA1DSZ         equ	15342	;# 
 11918   003BEE                     DMA1DSZL        equ	15342	;# 
 11919   003BEF                     DMA1DSZH        equ	15343	;# 
 11920   003BF0                     DMA1DSA         equ	15344	;# 
 11921   003BF0                     DMA1DSAL        equ	15344	;# 
 11922   003BF1                     DMA1DSAH        equ	15345	;# 
 11923   003BF2                     DMA1SCNT        equ	15346	;# 
 11924   003BF2                     DMA1SCNTL       equ	15346	;# 
 11925   003BF3                     DMA1SCNTH       equ	15347	;# 
 11926   003BF4                     DMA1SPTR        equ	15348	;# 
 11927   003BF4                     DMA1SPTRL       equ	15348	;# 
 11928   003BF5                     DMA1SPTRH       equ	15349	;# 
 11929   003BF6                     DMA1SPTRU       equ	15350	;# 
 11930   003BF7                     DMA1SSZ         equ	15351	;# 
 11931   003BF7                     DMA1SSZL        equ	15351	;# 
 11932   003BF8                     DMA1SSZH        equ	15352	;# 
 11933   003BF9                     DMA1SSA         equ	15353	;# 
 11934   003BF9                     DMA1SSAL        equ	15353	;# 
 11935   003BFA                     DMA1SSAH        equ	15354	;# 
 11936   003BFB                     DMA1SSAU        equ	15355	;# 
 11937   003BFC                     DMA1CON0        equ	15356	;# 
 11938   003BFD                     DMA1CON1        equ	15357	;# 
 11939   003BFE                     DMA1AIRQ        equ	15358	;# 
 11940   003BFF                     DMA1SIRQ        equ	15359	;# 
 11941   003C56                     CLC4CON         equ	15446	;# 
 11942   003C57                     CLC4POL         equ	15447	;# 
 11943   003C58                     CLC4SEL0        equ	15448	;# 
 11944   003C59                     CLC4SEL1        equ	15449	;# 
 11945   003C5A                     CLC4SEL2        equ	15450	;# 
 11946   003C5B                     CLC4SEL3        equ	15451	;# 
 11947   003C5C                     CLC4GLS0        equ	15452	;# 
 11948   003C5D                     CLC4GLS1        equ	15453	;# 
 11949   003C5E                     CLC4GLS2        equ	15454	;# 
 11950   003C5F                     CLC4GLS3        equ	15455	;# 
 11951   003C60                     CLC3CON         equ	15456	;# 
 11952   003C61                     CLC3POL         equ	15457	;# 
 11953   003C62                     CLC3SEL0        equ	15458	;# 
 11954   003C63                     CLC3SEL1        equ	15459	;# 
 11955   003C64                     CLC3SEL2        equ	15460	;# 
 11956   003C65                     CLC3SEL3        equ	15461	;# 
 11957   003C66                     CLC3GLS0        equ	15462	;# 
 11958   003C67                     CLC3GLS1        equ	15463	;# 
 11959   003C68                     CLC3GLS2        equ	15464	;# 
 11960   003C69                     CLC3GLS3        equ	15465	;# 
 11961   003C6A                     CLC2CON         equ	15466	;# 
 11962   003C6B                     CLC2POL         equ	15467	;# 
 11963   003C6C                     CLC2SEL0        equ	15468	;# 
 11964   003C6D                     CLC2SEL1        equ	15469	;# 
 11965   003C6E                     CLC2SEL2        equ	15470	;# 
 11966   003C6F                     CLC2SEL3        equ	15471	;# 
 11967   003C70                     CLC2GLS0        equ	15472	;# 
 11968   003C71                     CLC2GLS1        equ	15473	;# 
 11969   003C72                     CLC2GLS2        equ	15474	;# 
 11970   003C73                     CLC2GLS3        equ	15475	;# 
 11971   003C74                     CLC1CON         equ	15476	;# 
 11972   003C75                     CLC1POL         equ	15477	;# 
 11973   003C76                     CLC1SEL0        equ	15478	;# 
 11974   003C77                     CLC1SEL1        equ	15479	;# 
 11975   003C78                     CLC1SEL2        equ	15480	;# 
 11976   003C79                     CLC1SEL3        equ	15481	;# 
 11977   003C7A                     CLC1GLS0        equ	15482	;# 
 11978   003C7B                     CLC1GLS1        equ	15483	;# 
 11979   003C7C                     CLC1GLS2        equ	15484	;# 
 11980   003C7D                     CLC1GLS3        equ	15485	;# 
 11981   003C7E                     CLCDATA0        equ	15486	;# 
 11982   003CE5                     CLKRCON         equ	15589	;# 
 11983   003CE6                     CLKRCLK         equ	15590	;# 
 11984   003CFA                     MD1CON0         equ	15610	;# 
 11985   003CFB                     MD1CON1         equ	15611	;# 
 11986   003CFC                     MD1SRC          equ	15612	;# 
 11987   003CFD                     MD1CARL         equ	15613	;# 
 11988   003CFE                     MD1CARH         equ	15614	;# 
 11989   003D10                     SPI1RXB         equ	15632	;# 
 11990   003D11                     SPI1TXB         equ	15633	;# 
 11991   003D12                     SPI1TCNT        equ	15634	;# 
 11992   003D12                     SPI1TCNTL       equ	15634	;# 
 11993   003D13                     SPI1TCNTH       equ	15635	;# 
 11994   003D14                     SPI1CON0        equ	15636	;# 
 11995   003D15                     SPI1CON1        equ	15637	;# 
 11996   003D16                     SPI1CON2        equ	15638	;# 
 11997   003D17                     SPI1STATUS      equ	15639	;# 
 11998   003D18                     SPI1TWIDTH      equ	15640	;# 
 11999   003D19                     SPI1BAUD        equ	15641	;# 
 12000   003D1A                     SPI1INTF        equ	15642	;# 
 12001   003D1B                     SPI1INTE        equ	15643	;# 
 12002   003D1C                     SPI1CLK         equ	15644	;# 
 12003   003D54                     I2C2RXB         equ	15700	;# 
 12004   003D55                     I2C2TXB         equ	15701	;# 
 12005   003D56                     I2C2CNT         equ	15702	;# 
 12006   003D57                     I2C2ADB0        equ	15703	;# 
 12007   003D58                     I2C2ADB1        equ	15704	;# 
 12008   003D59                     I2C2ADR0        equ	15705	;# 
 12009   003D5A                     I2C2ADR1        equ	15706	;# 
 12010   003D5B                     I2C2ADR2        equ	15707	;# 
 12011   003D5C                     I2C2ADR3        equ	15708	;# 
 12012   003D5D                     I2C2CON0        equ	15709	;# 
 12013   003D5E                     I2C2CON1        equ	15710	;# 
 12014   003D5F                     I2C2CON2        equ	15711	;# 
 12015   003D60                     I2C2ERR         equ	15712	;# 
 12016   003D61                     I2C2STAT0       equ	15713	;# 
 12017   003D62                     I2C2STAT1       equ	15714	;# 
 12018   003D63                     I2C2PIR         equ	15715	;# 
 12019   003D64                     I2C2PIE         equ	15716	;# 
 12020   003D65                     I2C2CLK         equ	15717	;# 
 12021   003D66                     I2C2BTO         equ	15718	;# 
 12022   003D6A                     I2C1RXB         equ	15722	;# 
 12023   003D6B                     I2C1TXB         equ	15723	;# 
 12024   003D6C                     I2C1CNT         equ	15724	;# 
 12025   003D6D                     I2C1ADB0        equ	15725	;# 
 12026   003D6E                     I2C1ADB1        equ	15726	;# 
 12027   003D6F                     I2C1ADR0        equ	15727	;# 
 12028   003D70                     I2C1ADR1        equ	15728	;# 
 12029   003D71                     I2C1ADR2        equ	15729	;# 
 12030   003D72                     I2C1ADR3        equ	15730	;# 
 12031   003D73                     I2C1CON0        equ	15731	;# 
 12032   003D74                     I2C1CON1        equ	15732	;# 
 12033   003D75                     I2C1CON2        equ	15733	;# 
 12034   003D76                     I2C1ERR         equ	15734	;# 
 12035   003D77                     I2C1STAT0       equ	15735	;# 
 12036   003D78                     I2C1STAT1       equ	15736	;# 
 12037   003D79                     I2C1PIR         equ	15737	;# 
 12038   003D7A                     I2C1PIE         equ	15738	;# 
 12039   003D7B                     I2C1CLK         equ	15739	;# 
 12040   003D7C                     I2C1BTO         equ	15740	;# 
 12041   003DD0                     U2RXB           equ	15824	;# 
 12042   003DD0                     U2RXBL          equ	15824	;# 
 12043   003DD2                     U2TXB           equ	15826	;# 
 12044   003DD2                     U2TXBL          equ	15826	;# 
 12045   003DD4                     U2P1            equ	15828	;# 
 12046   003DD4                     U2P1L           equ	15828	;# 
 12047   003DD6                     U2P2            equ	15830	;# 
 12048   003DD6                     U2P2L           equ	15830	;# 
 12049   003DD8                     U2P3            equ	15832	;# 
 12050   003DD8                     U2P3L           equ	15832	;# 
 12051   003DDA                     U2CON0          equ	15834	;# 
 12052   003DDB                     U2CON1          equ	15835	;# 
 12053   003DDC                     U2CON2          equ	15836	;# 
 12054   003DDD                     U2BRG           equ	15837	;# 
 12055   003DDD                     U2BRGL          equ	15837	;# 
 12056   003DDE                     U2BRGH          equ	15838	;# 
 12057   003DDF                     U2FIFO          equ	15839	;# 
 12058   003DE0                     U2UIR           equ	15840	;# 
 12059   003DE1                     U2ERRIR         equ	15841	;# 
 12060   003DE2                     U2ERRIE         equ	15842	;# 
 12061   003DE8                     U1RXB           equ	15848	;# 
 12062   003DE8                     U1RXBL          equ	15848	;# 
 12063   003DE9                     U1RXCHK         equ	15849	;# 
 12064   003DEA                     U1TXB           equ	15850	;# 
 12065   003DEA                     U1TXBL          equ	15850	;# 
 12066   003DEB                     U1TXCHK         equ	15851	;# 
 12067   003DEC                     U1P1            equ	15852	;# 
 12068   003DEC                     U1P1L           equ	15852	;# 
 12069   003DED                     U1P1H           equ	15853	;# 
 12070   003DEE                     U1P2            equ	15854	;# 
 12071   003DEE                     U1P2L           equ	15854	;# 
 12072   003DEF                     U1P2H           equ	15855	;# 
 12073   003DF0                     U1P3            equ	15856	;# 
 12074   003DF0                     U1P3L           equ	15856	;# 
 12075   003DF1                     U1P3H           equ	15857	;# 
 12076   003DF2                     U1CON0          equ	15858	;# 
 12077   003DF3                     U1CON1          equ	15859	;# 
 12078   003DF4                     U1CON2          equ	15860	;# 
 12079   003DF5                     U1BRG           equ	15861	;# 
 12080   003DF5                     U1BRGL          equ	15861	;# 
 12081   003DF6                     U1BRGH          equ	15862	;# 
 12082   003DF7                     U1FIFO          equ	15863	;# 
 12083   003DF8                     U1UIR           equ	15864	;# 
 12084   003DF9                     U1ERRIR         equ	15865	;# 
 12085   003DFA                     U1ERRIE         equ	15866	;# 
 12086   003E9C                     DAC1CON1        equ	16028	;# 
 12087   003E9E                     DAC1CON0        equ	16030	;# 
 12088   003EB8                     CM2CON0         equ	16056	;# 
 12089   003EB9                     CM2CON1         equ	16057	;# 
 12090   003EBA                     CM2NCH          equ	16058	;# 
 12091   003EBB                     CM2PCH          equ	16059	;# 
 12092   003EBC                     CM1CON0         equ	16060	;# 
 12093   003EBD                     CM1CON1         equ	16061	;# 
 12094   003EBE                     CM1NCH          equ	16062	;# 
 12095   003EBF                     CM1PCH          equ	16063	;# 
 12096   003EC0                     CMOUT           equ	16064	;# 
 12097   003EC1                     FVRCON          equ	16065	;# 
 12098   003EC3                     ZCDCON          equ	16067	;# 
 12099   003EC9                     HLVDCON0        equ	16073	;# 
 12100   003ECA                     HLVDCON1        equ	16074	;# 
 12101   003ED7                     ADCP            equ	16087	;# 
 12102   003EDE                     ADLTH           equ	16094	;# 
 12103   003EDE                     ADLTHL          equ	16094	;# 
 12104   003EDF                     ADLTHH          equ	16095	;# 
 12105   003EE0                     ADUTH           equ	16096	;# 
 12106   003EE0                     ADUTHL          equ	16096	;# 
 12107   003EE1                     ADUTHH          equ	16097	;# 
 12108   003EE2                     ADERR           equ	16098	;# 
 12109   003EE2                     ADERRL          equ	16098	;# 
 12110   003EE3                     ADERRH          equ	16099	;# 
 12111   003EE4                     ADSTPT          equ	16100	;# 
 12112   003EE4                     ADSTPTL         equ	16100	;# 
 12113   003EE5                     ADSTPTH         equ	16101	;# 
 12114   003EE6                     ADFLTR          equ	16102	;# 
 12115   003EE6                     ADFLTRL         equ	16102	;# 
 12116   003EE7                     ADFLTRH         equ	16103	;# 
 12117   003EE8                     ADACC           equ	16104	;# 
 12118   003EE8                     ADACCL          equ	16104	;# 
 12119   003EE9                     ADACCH          equ	16105	;# 
 12120   003EEA                     ADACCU          equ	16106	;# 
 12121   003EEB                     ADCNT           equ	16107	;# 
 12122   003EEC                     ADRPT           equ	16108	;# 
 12123   003EED                     ADPREV          equ	16109	;# 
 12124   003EED                     ADPREVL         equ	16109	;# 
 12125   003EEE                     ADPREVH         equ	16110	;# 
 12126   003EEF                     ADRES           equ	16111	;# 
 12127   003EEF                     ADRESL          equ	16111	;# 
 12128   003EF0                     ADRESH          equ	16112	;# 
 12129   003EF1                     ADPCH           equ	16113	;# 
 12130   003EF3                     ADACQ           equ	16115	;# 
 12131   003EF3                     ADACQL          equ	16115	;# 
 12132   003EF4                     ADACQH          equ	16116	;# 
 12133   003EF5                     ADCAP           equ	16117	;# 
 12134   003EF6                     ADPRE           equ	16118	;# 
 12135   003EF6                     ADPREL          equ	16118	;# 
 12136   003EF7                     ADPREH          equ	16119	;# 
 12137   003EF8                     ADCON0          equ	16120	;# 
 12138   003EF9                     ADCON1          equ	16121	;# 
 12139   003EFA                     ADCON2          equ	16122	;# 
 12140   003EFB                     ADCON3          equ	16123	;# 
 12141   003EFC                     ADSTAT          equ	16124	;# 
 12142   003EFD                     ADREF           equ	16125	;# 
 12143   003EFE                     ADACT           equ	16126	;# 
 12144   003EFF                     ADCLK           equ	16127	;# 
 12145   003F12                     SMT1TMR         equ	16146	;# 
 12146   003F12                     SMT1TMRL        equ	16146	;# 
 12147   003F13                     SMT1TMRH        equ	16147	;# 
 12148   003F14                     SMT1TMRU        equ	16148	;# 
 12149   003F15                     SMT1CPR         equ	16149	;# 
 12150   003F15                     SMT1CPRL        equ	16149	;# 
 12151   003F16                     SMT1CPRH        equ	16150	;# 
 12152   003F17                     SMT1CPRU        equ	16151	;# 
 12153   003F18                     SMT1CPW         equ	16152	;# 
 12154   003F18                     SMT1CPWL        equ	16152	;# 
 12155   003F19                     SMT1CPWH        equ	16153	;# 
 12156   003F1A                     SMT1CPWU        equ	16154	;# 
 12157   003F1B                     SMT1PR          equ	16155	;# 
 12158   003F1B                     SMT1PRL         equ	16155	;# 
 12159   003F1C                     SMT1PRH         equ	16156	;# 
 12160   003F1D                     SMT1PRU         equ	16157	;# 
 12161   003F1E                     SMT1CON0        equ	16158	;# 
 12162   003F1F                     SMT1CON1        equ	16159	;# 
 12163   003F20                     SMT1STAT        equ	16160	;# 
 12164   003F21                     SMT1CLK         equ	16161	;# 
 12165   003F22                     SMT1SIG         equ	16162	;# 
 12166   003F23                     SMT1WIN         equ	16163	;# 
 12167   003F38                     NCO1ACC         equ	16184	;# 
 12168   003F38                     NCO1ACCL        equ	16184	;# 
 12169   003F39                     NCO1ACCH        equ	16185	;# 
 12170   003F3A                     NCO1ACCU        equ	16186	;# 
 12171   003F3B                     NCO1INC         equ	16187	;# 
 12172   003F3B                     NCO1INCL        equ	16187	;# 
 12173   003F3C                     NCO1INCH        equ	16188	;# 
 12174   003F3D                     NCO1INCU        equ	16189	;# 
 12175   003F3E                     NCO1CON         equ	16190	;# 
 12176   003F3F                     NCO1CLK         equ	16191	;# 
 12177   003F40                     CWG3CLK         equ	16192	;# 
 12178   003F40                     CWG3CLKCON      equ	16192	;# 
 12179   003F41                     CWG3ISM         equ	16193	;# 
 12180   003F41                     CWG3DAT         equ	16193	;# 
 12181   003F42                     CWG3DBR         equ	16194	;# 
 12182   003F43                     CWG3DBF         equ	16195	;# 
 12183   003F44                     CWG3CON0        equ	16196	;# 
 12184   003F45                     CWG3CON1        equ	16197	;# 
 12185   003F46                     CWG3AS0         equ	16198	;# 
 12186   003F47                     CWG3AS1         equ	16199	;# 
 12187   003F48                     CWG3STR         equ	16200	;# 
 12188   003F49                     CWG2CLK         equ	16201	;# 
 12189   003F49                     CWG2CLKCON      equ	16201	;# 
 12190   003F4A                     CWG2ISM         equ	16202	;# 
 12191   003F4A                     CWG2DAT         equ	16202	;# 
 12192   003F4B                     CWG2DBR         equ	16203	;# 
 12193   003F4C                     CWG2DBF         equ	16204	;# 
 12194   003F4D                     CWG2CON0        equ	16205	;# 
 12195   003F4E                     CWG2CON1        equ	16206	;# 
 12196   003F4F                     CWG2AS0         equ	16207	;# 
 12197   003F50                     CWG2AS1         equ	16208	;# 
 12198   003F51                     CWG2STR         equ	16209	;# 
 12199   003F52                     CWG1CLK         equ	16210	;# 
 12200   003F52                     CWG1CLKCON      equ	16210	;# 
 12201   003F53                     CWG1ISM         equ	16211	;# 
 12202   003F53                     CWG1DAT         equ	16211	;# 
 12203   003F54                     CWG1DBR         equ	16212	;# 
 12204   003F55                     CWG1DBF         equ	16213	;# 
 12205   003F56                     CWG1CON0        equ	16214	;# 
 12206   003F57                     CWG1CON1        equ	16215	;# 
 12207   003F58                     CWG1AS0         equ	16216	;# 
 12208   003F59                     CWG1AS1         equ	16217	;# 
 12209   003F5A                     CWG1STR         equ	16218	;# 
 12210   003F5E                     CCPTMRS0        equ	16222	;# 
 12211   003F5F                     CCPTMRS1        equ	16223	;# 
 12212   003F60                     PWM8DC          equ	16224	;# 
 12213   003F60                     PWM8DCL         equ	16224	;# 
 12214   003F61                     PWM8DCH         equ	16225	;# 
 12215   003F62                     PWM8CON         equ	16226	;# 
 12216   003F64                     PWM7DC          equ	16228	;# 
 12217   003F64                     PWM7DCL         equ	16228	;# 
 12218   003F65                     PWM7DCH         equ	16229	;# 
 12219   003F66                     PWM7CON         equ	16230	;# 
 12220   003F68                     PWM6DC          equ	16232	;# 
 12221   003F68                     PWM6DCL         equ	16232	;# 
 12222   003F69                     PWM6DCH         equ	16233	;# 
 12223   003F6A                     PWM6CON         equ	16234	;# 
 12224   003F6C                     PWM5DC          equ	16236	;# 
 12225   003F6C                     PWM5DCL         equ	16236	;# 
 12226   003F6D                     PWM5DCH         equ	16237	;# 
 12227   003F6E                     PWM5CON         equ	16238	;# 
 12228   003F70                     CCPR4           equ	16240	;# 
 12229   003F70                     CCPR4L          equ	16240	;# 
 12230   003F71                     CCPR4H          equ	16241	;# 
 12231   003F72                     CCP4CON         equ	16242	;# 
 12232   003F73                     CCP4CAP         equ	16243	;# 
 12233   003F74                     CCPR3           equ	16244	;# 
 12234   003F74                     CCPR3L          equ	16244	;# 
 12235   003F75                     CCPR3H          equ	16245	;# 
 12236   003F76                     CCP3CON         equ	16246	;# 
 12237   003F77                     CCP3CAP         equ	16247	;# 
 12238   003F78                     CCPR2           equ	16248	;# 
 12239   003F78                     CCPR2L          equ	16248	;# 
 12240   003F79                     CCPR2H          equ	16249	;# 
 12241   003F7A                     CCP2CON         equ	16250	;# 
 12242   003F7B                     CCP2CAP         equ	16251	;# 
 12243   003F7C                     CCPR1           equ	16252	;# 
 12244   003F7C                     CCPR1L          equ	16252	;# 
 12245   003F7D                     CCPR1H          equ	16253	;# 
 12246   003F7E                     CCP1CON         equ	16254	;# 
 12247   003F7F                     CCP1CAP         equ	16255	;# 
 12248   003F92                     T6TMR           equ	16274	;# 
 12249   003F92                     TMR6            equ	16274	;# 
 12250   003F93                     T6PR            equ	16275	;# 
 12251   003F93                     PR6             equ	16275	;# 
 12252   003F94                     T6CON           equ	16276	;# 
 12253   003F95                     T6HLT           equ	16277	;# 
 12254   003F96                     T6CLKCON        equ	16278	;# 
 12255   003F96                     T6CLK           equ	16278	;# 
 12256   003F97                     T6RST           equ	16279	;# 
 12257   003F98                     TMR5            equ	16280	;# 
 12258   003F98                     TMR5L           equ	16280	;# 
 12259   003F99                     TMR5H           equ	16281	;# 
 12260   003F9A                     T5CON           equ	16282	;# 
 12261   003F9A                     TMR5CON         equ	16282	;# 
 12262   003F9B                     T5GCON          equ	16283	;# 
 12263   003F9B                     TMR5GCON        equ	16283	;# 
 12264   003F9C                     T5GATE          equ	16284	;# 
 12265   003F9C                     TMR5GATE        equ	16284	;# 
 12266   003F9D                     T5CLK           equ	16285	;# 
 12267   003F9D                     TMR5CLK         equ	16285	;# 
 12268   003F9D                     PR5             equ	16285	;# 
 12269   003F9E                     T4TMR           equ	16286	;# 
 12270   003F9E                     TMR4            equ	16286	;# 
 12271   003F9F                     T4PR            equ	16287	;# 
 12272   003F9F                     PR4             equ	16287	;# 
 12273   003FA0                     T4CON           equ	16288	;# 
 12274   003FA1                     T4HLT           equ	16289	;# 
 12275   003FA2                     T4CLKCON        equ	16290	;# 
 12276   003FA2                     T4CLK           equ	16290	;# 
 12277   003FA3                     T4RST           equ	16291	;# 
 12278   003FA4                     TMR3            equ	16292	;# 
 12279   003FA4                     TMR3L           equ	16292	;# 
 12280   003FA5                     TMR3H           equ	16293	;# 
 12281   003FA6                     T3CON           equ	16294	;# 
 12282   003FA6                     TMR3CON         equ	16294	;# 
 12283   003FA7                     T3GCON          equ	16295	;# 
 12284   003FA7                     TMR3GCON        equ	16295	;# 
 12285   003FA8                     T3GATE          equ	16296	;# 
 12286   003FA8                     TMR3GATE        equ	16296	;# 
 12287   003FA9                     T3CLK           equ	16297	;# 
 12288   003FA9                     TMR3CLK         equ	16297	;# 
 12289   003FA9                     PR3             equ	16297	;# 
 12290   003FAA                     T2TMR           equ	16298	;# 
 12291   003FAA                     TMR2            equ	16298	;# 
 12292   003FAB                     T2PR            equ	16299	;# 
 12293   003FAB                     PR2             equ	16299	;# 
 12294   003FAC                     T2CON           equ	16300	;# 
 12295   003FAD                     T2HLT           equ	16301	;# 
 12296   003FAE                     T2CLKCON        equ	16302	;# 
 12297   003FAE                     T2CLK           equ	16302	;# 
 12298   003FAF                     T2RST           equ	16303	;# 
 12299   003FB0                     TMR1            equ	16304	;# 
 12300   003FB0                     TMR1L           equ	16304	;# 
 12301   003FB1                     TMR1H           equ	16305	;# 
 12302   003FB2                     T1CON           equ	16306	;# 
 12303   003FB2                     TMR1CON         equ	16306	;# 
 12304   003FB3                     T1GCON          equ	16307	;# 
 12305   003FB3                     TMR1GCON        equ	16307	;# 
 12306   003FB4                     T1GATE          equ	16308	;# 
 12307   003FB4                     TMR1GATE        equ	16308	;# 
 12308   003FB5                     T1CLK           equ	16309	;# 
 12309   003FB5                     TMR1CLK         equ	16309	;# 
 12310   003FB5                     PR1             equ	16309	;# 
 12311   003FB6                     TMR0L           equ	16310	;# 
 12312   003FB6                     TMR0            equ	16310	;# 
 12313   003FB7                     TMR0H           equ	16311	;# 
 12314   003FB7                     PR0             equ	16311	;# 
 12315   003FB8                     T0CON0          equ	16312	;# 
 12316   003FB9                     T0CON1          equ	16313	;# 
 12317   003FBA                     LATA            equ	16314	;# 
 12318   003FBB                     LATB            equ	16315	;# 
 12319   003FBC                     LATC            equ	16316	;# 
 12320   003FBD                     LATD            equ	16317	;# 
 12321   003FBE                     LATE            equ	16318	;# 
 12322   003FBF                     LATF            equ	16319	;# 
 12323   003FC2                     TRISA           equ	16322	;# 
 12324   003FC3                     TRISB           equ	16323	;# 
 12325   003FC4                     TRISC           equ	16324	;# 
 12326   003FC5                     TRISD           equ	16325	;# 
 12327   003FC6                     TRISE           equ	16326	;# 
 12328   003FC7                     TRISF           equ	16327	;# 
 12329   003FCA                     PORTA           equ	16330	;# 
 12330   003FCB                     PORTB           equ	16331	;# 
 12331   003FCC                     PORTC           equ	16332	;# 
 12332   003FCD                     PORTD           equ	16333	;# 
 12333   003FCE                     PORTE           equ	16334	;# 
 12334   003FCF                     PORTF           equ	16335	;# 
 12335   003FD2                     INTCON0         equ	16338	;# 
 12336   003FD3                     INTCON1         equ	16339	;# 
 12337   003FD4                     IVTLOCK         equ	16340	;# 
 12338   003FD5                     IVTBASE         equ	16341	;# 
 12339   003FD5                     IVTBASEL        equ	16341	;# 
 12340   003FD6                     IVTBASEH        equ	16342	;# 
 12341   003FD7                     IVTBASEU        equ	16343	;# 
 12342   003FD8                     STATUS          equ	16344	;# 
 12343   003FD9                     FSR2            equ	16345	;# 
 12344   003FD9                     FSR2L           equ	16345	;# 
 12345   003FDA                     FSR2H           equ	16346	;# 
 12346   003FDB                     PLUSW2          equ	16347	;# 
 12347   003FDC                     PREINC2         equ	16348	;# 
 12348   003FDD                     POSTDEC2        equ	16349	;# 
 12349   003FDE                     POSTINC2        equ	16350	;# 
 12350   003FDF                     INDF2           equ	16351	;# 
 12351   003FE0                     BSR             equ	16352	;# 
 12352   003FE1                     FSR1            equ	16353	;# 
 12353   003FE1                     FSR1L           equ	16353	;# 
 12354   003FE2                     FSR1H           equ	16354	;# 
 12355   003FE3                     PLUSW1          equ	16355	;# 
 12356   003FE4                     PREINC1         equ	16356	;# 
 12357   003FE5                     POSTDEC1        equ	16357	;# 
 12358   003FE6                     POSTINC1        equ	16358	;# 
 12359   003FE7                     INDF1           equ	16359	;# 
 12360   003FE8                     WREG            equ	16360	;# 
 12361   003FE9                     FSR0            equ	16361	;# 
 12362   003FE9                     FSR0L           equ	16361	;# 
 12363   003FEA                     FSR0H           equ	16362	;# 
 12364   003FEB                     PLUSW0          equ	16363	;# 
 12365   003FEC                     PREINC0         equ	16364	;# 
 12366   003FED                     POSTDEC0        equ	16365	;# 
 12367   003FEE                     POSTINC0        equ	16366	;# 
 12368   003FEF                     INDF0           equ	16367	;# 
 12369   003FF0                     PCON0           equ	16368	;# 
 12370   003FF1                     PCON1           equ	16369	;# 
 12371   003FF3                     PROD            equ	16371	;# 
 12372   003FF3                     PRODL           equ	16371	;# 
 12373   003FF4                     PRODH           equ	16372	;# 
 12374   003FF5                     TABLAT          equ	16373	;# 
 12375   003FF6                     TBLPTR          equ	16374	;# 
 12376   003FF6                     TBLPTRL         equ	16374	;# 
 12377   003FF7                     TBLPTRH         equ	16375	;# 
 12378   003FF8                     TBLPTRU         equ	16376	;# 
 12379   003FF9                     PCLAT           equ	16377	;# 
 12380   003FF9                     PCL             equ	16377	;# 
 12381   003FFA                     PCLATH          equ	16378	;# 
 12382   003FFB                     PCLATU          equ	16379	;# 
 12383   003FFC                     STKPTR          equ	16380	;# 
 12384   003FFD                     TOS             equ	16381	;# 
 12385   003FFD                     TOSL            equ	16381	;# 
 12386   003FFE                     TOSH            equ	16382	;# 
 12387   003FFF                     TOSU            equ	16383	;# 
 12388   003880                     STATUS_CSHAD    equ	14464	;# 
 12389   003881                     WREG_CSHAD      equ	14465	;# 
 12390   003882                     BSR_CSHAD       equ	14466	;# 
 12391   003883                     SHADCON         equ	14467	;# 
 12392   003884                     STATUS_SHAD     equ	14468	;# 
 12393   003885                     WREG_SHAD       equ	14469	;# 
 12394   003886                     BSR_SHAD        equ	14470	;# 
 12395   003887                     PCLATH_SHAD     equ	14471	;# 
 12396   003888                     PCLATU_SHAD     equ	14472	;# 
 12397   003889                     FSR0SH          equ	14473	;# 
 12398   003889                     FSR0L_SHAD      equ	14473	;# 
 12399   00388A                     FSR0H_SHAD      equ	14474	;# 
 12400   00388B                     FSR1SH          equ	14475	;# 
 12401   00388B                     FSR1L_SHAD      equ	14475	;# 
 12402   00388C                     FSR1H_SHAD      equ	14476	;# 
 12403   00388D                     FSR2SH          equ	14477	;# 
 12404   00388D                     FSR2L_SHAD      equ	14477	;# 
 12405   00388E                     FSR2H_SHAD      equ	14478	;# 
 12406   00388F                     PRODSH          equ	14479	;# 
 12407   00388F                     PRODL_SHAD      equ	14479	;# 
 12408   003890                     PRODH_SHAD      equ	14480	;# 
 12409   00389D                     IVTADL          equ	14493	;# 
 12410   00389E                     IVTADH          equ	14494	;# 
 12411   00389F                     IVTADU          equ	14495	;# 
 12412   00395B                     WDTCON0         equ	14683	;# 
 12413   00395C                     WDTCON1         equ	14684	;# 
 12414   00395D                     WDTPSL          equ	14685	;# 
 12415   00395E                     WDTPSH          equ	14686	;# 
 12416   00395F                     WDTTMR          equ	14687	;# 
 12417   003960                     CRCDATA         equ	14688	;# 
 12418   003960                     CRCDATL         equ	14688	;# 
 12419   003961                     CRCDATH         equ	14689	;# 
 12420   003962                     CRCACC          equ	14690	;# 
 12421   003962                     CRCACCL         equ	14690	;# 
 12422   003963                     CRCACCH         equ	14691	;# 
 12423   003964                     CRCSHFT         equ	14692	;# 
 12424   003964                     CRCSHIFTL       equ	14692	;# 
 12425   003965                     CRCSHIFTH       equ	14693	;# 
 12426   003966                     CRCXOR          equ	14694	;# 
 12427   003966                     CRCXORL         equ	14694	;# 
 12428   003967                     CRCXORH         equ	14695	;# 
 12429   003968                     CRCCON0         equ	14696	;# 
 12430   003969                     CRCCON1         equ	14697	;# 
 12431   003976                     SCANLADR        equ	14710	;# 
 12432   003976                     SCANLADRL       equ	14710	;# 
 12433   003977                     SCANLADRH       equ	14711	;# 
 12434   003978                     SCANLADRU       equ	14712	;# 
 12435   003979                     SCANHADR        equ	14713	;# 
 12436   003979                     SCANHADRL       equ	14713	;# 
 12437   00397A                     SCANHADRH       equ	14714	;# 
 12438   00397B                     SCANHADRU       equ	14715	;# 
 12439   00397C                     SCANCON0        equ	14716	;# 
 12440   00397D                     SCANTRIG        equ	14717	;# 
 12441   003980                     IPR0            equ	14720	;# 
 12442   003981                     IPR1            equ	14721	;# 
 12443   003982                     IPR2            equ	14722	;# 
 12444   003983                     IPR3            equ	14723	;# 
 12445   003984                     IPR4            equ	14724	;# 
 12446   003985                     IPR5            equ	14725	;# 
 12447   003986                     IPR6            equ	14726	;# 
 12448   003987                     IPR7            equ	14727	;# 
 12449   003988                     IPR8            equ	14728	;# 
 12450   003989                     IPR9            equ	14729	;# 
 12451   00398A                     IPR10           equ	14730	;# 
 12452   003990                     PIE0            equ	14736	;# 
 12453   003991                     PIE1            equ	14737	;# 
 12454   003992                     PIE2            equ	14738	;# 
 12455   003993                     PIE3            equ	14739	;# 
 12456   003994                     PIE4            equ	14740	;# 
 12457   003995                     PIE5            equ	14741	;# 
 12458   003996                     PIE6            equ	14742	;# 
 12459   003997                     PIE7            equ	14743	;# 
 12460   003998                     PIE8            equ	14744	;# 
 12461   003999                     PIE9            equ	14745	;# 
 12462   00399A                     PIE10           equ	14746	;# 
 12463   0039A0                     PIR0            equ	14752	;# 
 12464   0039A1                     PIR1            equ	14753	;# 
 12465   0039A2                     PIR2            equ	14754	;# 
 12466   0039A3                     PIR3            equ	14755	;# 
 12467   0039A4                     PIR4            equ	14756	;# 
 12468   0039A5                     PIR5            equ	14757	;# 
 12469   0039A6                     PIR6            equ	14758	;# 
 12470   0039A7                     PIR7            equ	14759	;# 
 12471   0039A8                     PIR8            equ	14760	;# 
 12472   0039A9                     PIR9            equ	14761	;# 
 12473   0039AA                     PIR10           equ	14762	;# 
 12474   0039C0                     PMD0            equ	14784	;# 
 12475   0039C1                     PMD1            equ	14785	;# 
 12476   0039C2                     PMD2            equ	14786	;# 
 12477   0039C3                     PMD3            equ	14787	;# 
 12478   0039C4                     PMD4            equ	14788	;# 
 12479   0039C5                     PMD5            equ	14789	;# 
 12480   0039C6                     PMD6            equ	14790	;# 
 12481   0039C7                     PMD7            equ	14791	;# 
 12482   0039D0                     BORCON          equ	14800	;# 
 12483   0039D1                     VREGCON         equ	14801	;# 
 12484   0039D8                     CPUDOZE         equ	14808	;# 
 12485   0039D9                     OSCCON1         equ	14809	;# 
 12486   0039DA                     OSCCON2         equ	14810	;# 
 12487   0039DB                     OSCCON3         equ	14811	;# 
 12488   0039DC                     OSCSTAT         equ	14812	;# 
 12489   0039DC                     OSCSTAT1        equ	14812	;# 
 12490   0039DD                     OSCEN           equ	14813	;# 
 12491   0039DE                     OSCTUNE         equ	14814	;# 
 12492   0039DF                     OSCFRQ          equ	14815	;# 
 12493   0039E0                     NVMADRL         equ	14816	;# 
 12494   0039E1                     NVMADRH         equ	14817	;# 
 12495   0039E3                     NVMDAT          equ	14819	;# 
 12496   0039E5                     NVMCON1         equ	14821	;# 
 12497   0039E6                     NVMCON2         equ	14822	;# 
 12498   0039EF                     PRLOCK          equ	14831	;# 
 12499   0039F1                     ISRPR           equ	14833	;# 
 12500   0039F2                     MAINPR          equ	14834	;# 
 12501   0039F3                     DMA1PR          equ	14835	;# 
 12502   0039F4                     DMA2PR          equ	14836	;# 
 12503   0039F7                     SCANPR          equ	14839	;# 
 12504   003A00                     RA0PPS          equ	14848	;# 
 12505   003A01                     RA1PPS          equ	14849	;# 
 12506   003A02                     RA2PPS          equ	14850	;# 
 12507   003A03                     RA3PPS          equ	14851	;# 
 12508   003A04                     RA4PPS          equ	14852	;# 
 12509   003A05                     RA5PPS          equ	14853	;# 
 12510   003A06                     RA6PPS          equ	14854	;# 
 12511   003A07                     RA7PPS          equ	14855	;# 
 12512   003A08                     RB0PPS          equ	14856	;# 
 12513   003A09                     RB1PPS          equ	14857	;# 
 12514   003A0A                     RB2PPS          equ	14858	;# 
 12515   003A0B                     RB3PPS          equ	14859	;# 
 12516   003A0C                     RB4PPS          equ	14860	;# 
 12517   003A0D                     RB5PPS          equ	14861	;# 
 12518   003A0E                     RB6PPS          equ	14862	;# 
 12519   003A0F                     RB7PPS          equ	14863	;# 
 12520   003A10                     RC0PPS          equ	14864	;# 
 12521   003A11                     RC1PPS          equ	14865	;# 
 12522   003A12                     RC2PPS          equ	14866	;# 
 12523   003A13                     RC3PPS          equ	14867	;# 
 12524   003A14                     RC4PPS          equ	14868	;# 
 12525   003A15                     RC5PPS          equ	14869	;# 
 12526   003A16                     RC6PPS          equ	14870	;# 
 12527   003A17                     RC7PPS          equ	14871	;# 
 12528   003A18                     RD0PPS          equ	14872	;# 
 12529   003A19                     RD1PPS          equ	14873	;# 
 12530   003A1A                     RD2PPS          equ	14874	;# 
 12531   003A1B                     RD3PPS          equ	14875	;# 
 12532   003A1C                     RD4PPS          equ	14876	;# 
 12533   003A1D                     RD5PPS          equ	14877	;# 
 12534   003A1E                     RD6PPS          equ	14878	;# 
 12535   003A1F                     RD7PPS          equ	14879	;# 
 12536   003A20                     RE0PPS          equ	14880	;# 
 12537   003A21                     RE1PPS          equ	14881	;# 
 12538   003A22                     RE2PPS          equ	14882	;# 
 12539   003A28                     RF0PPS          equ	14888	;# 
 12540   003A29                     RF1PPS          equ	14889	;# 
 12541   003A2A                     RF2PPS          equ	14890	;# 
 12542   003A2B                     RF3PPS          equ	14891	;# 
 12543   003A2C                     RF4PPS          equ	14892	;# 
 12544   003A2D                     RF5PPS          equ	14893	;# 
 12545   003A2E                     RF6PPS          equ	14894	;# 
 12546   003A2F                     RF7PPS          equ	14895	;# 
 12547   003A40                     ANSELA          equ	14912	;# 
 12548   003A41                     WPUA            equ	14913	;# 
 12549   003A42                     ODCONA          equ	14914	;# 
 12550   003A43                     SLRCONA         equ	14915	;# 
 12551   003A44                     INLVLA          equ	14916	;# 
 12552   003A45                     IOCAP           equ	14917	;# 
 12553   003A46                     IOCAN           equ	14918	;# 
 12554   003A47                     IOCAF           equ	14919	;# 
 12555   003A50                     ANSELB          equ	14928	;# 
 12556   003A51                     WPUB            equ	14929	;# 
 12557   003A52                     ODCONB          equ	14930	;# 
 12558   003A53                     SLRCONB         equ	14931	;# 
 12559   003A54                     INLVLB          equ	14932	;# 
 12560   003A55                     IOCBP           equ	14933	;# 
 12561   003A56                     IOCBN           equ	14934	;# 
 12562   003A57                     IOCBF           equ	14935	;# 
 12563   003A5A                     RB1I2C          equ	14938	;# 
 12564   003A5B                     RB2I2C          equ	14939	;# 
 12565   003A60                     ANSELC          equ	14944	;# 
 12566   003A61                     WPUC            equ	14945	;# 
 12567   003A62                     ODCONC          equ	14946	;# 
 12568   003A63                     SLRCONC         equ	14947	;# 
 12569   003A64                     INLVLC          equ	14948	;# 
 12570   003A65                     IOCCP           equ	14949	;# 
 12571   003A66                     IOCCN           equ	14950	;# 
 12572   003A67                     IOCCF           equ	14951	;# 
 12573   003A6A                     RC3I2C          equ	14954	;# 
 12574   003A6B                     RC4I2C          equ	14955	;# 
 12575   003A70                     ANSELD          equ	14960	;# 
 12576   003A71                     WPUD            equ	14961	;# 
 12577   003A72                     ODCOND          equ	14962	;# 
 12578   003A73                     SLRCOND         equ	14963	;# 
 12579   003A74                     INLVLD          equ	14964	;# 
 12580   003A7A                     RD0I2C          equ	14970	;# 
 12581   003A7B                     RD1I2C          equ	14971	;# 
 12582   003A80                     ANSELE          equ	14976	;# 
 12583   003A81                     WPUE            equ	14977	;# 
 12584   003A82                     ODCONE          equ	14978	;# 
 12585   003A83                     SLRCONE         equ	14979	;# 
 12586   003A84                     INLVLE          equ	14980	;# 
 12587   003A85                     IOCEP           equ	14981	;# 
 12588   003A86                     IOCEN           equ	14982	;# 
 12589   003A87                     IOCEF           equ	14983	;# 
 12590   003A90                     ANSELF          equ	14992	;# 
 12591   003A91                     WPUF            equ	14993	;# 
 12592   003A92                     ODCONF          equ	14994	;# 
 12593   003A93                     SLRCONF         equ	14995	;# 
 12594   003A94                     INLVLF          equ	14996	;# 
 12595   003ABF                     PPSLOCK         equ	15039	;# 
 12596   003AC0                     INT0PPS         equ	15040	;# 
 12597   003AC1                     INT1PPS         equ	15041	;# 
 12598   003AC2                     INT2PPS         equ	15042	;# 
 12599   003AC3                     T0CKIPPS        equ	15043	;# 
 12600   003AC4                     T1CKIPPS        equ	15044	;# 
 12601   003AC5                     T1GPPS          equ	15045	;# 
 12602   003AC6                     T3CKIPPS        equ	15046	;# 
 12603   003AC7                     T3GPPS          equ	15047	;# 
 12604   003AC8                     T5CKIPPS        equ	15048	;# 
 12605   003AC9                     T5GPPS          equ	15049	;# 
 12606   003ACA                     T2INPPS         equ	15050	;# 
 12607   003ACB                     T4INPPS         equ	15051	;# 
 12608   003ACC                     T6INPPS         equ	15052	;# 
 12609   003ACD                     CCP1PPS         equ	15053	;# 
 12610   003ACE                     CCP2PPS         equ	15054	;# 
 12611   003ACF                     CCP3PPS         equ	15055	;# 
 12612   003AD0                     CCP4PPS         equ	15056	;# 
 12613   003AD1                     SMT1WINPPS      equ	15057	;# 
 12614   003AD2                     SMT1SIGPPS      equ	15058	;# 
 12615   003AD3                     CWG1INPPS       equ	15059	;# 
 12616   003AD4                     CWG2INPPS       equ	15060	;# 
 12617   003AD5                     CWG3INPPS       equ	15061	;# 
 12618   003AD6                     MD1CARLPPS      equ	15062	;# 
 12619   003AD7                     MD1CARHPPS      equ	15063	;# 
 12620   003AD8                     MD1SRCPPS       equ	15064	;# 
 12621   003AD9                     CLCIN0PPS       equ	15065	;# 
 12622   003ADA                     CLCIN1PPS       equ	15066	;# 
 12623   003ADB                     CLCIN2PPS       equ	15067	;# 
 12624   003ADC                     CLCIN3PPS       equ	15068	;# 
 12625   003ADD                     ADACTPPS        equ	15069	;# 
 12626   003ADE                     SPI1SCKPPS      equ	15070	;# 
 12627   003ADF                     SPI1SDIPPS      equ	15071	;# 
 12628   003AE0                     SPI1SSPPS       equ	15072	;# 
 12629   003AE1                     I2C1SCLPPS      equ	15073	;# 
 12630   003AE2                     I2C1SDAPPS      equ	15074	;# 
 12631   003AE3                     I2C2SCLPPS      equ	15075	;# 
 12632   003AE4                     I2C2SDAPPS      equ	15076	;# 
 12633   003AE5                     U1RXPPS         equ	15077	;# 
 12634   003AE6                     U1CTSPPS        equ	15078	;# 
 12635   003AE8                     U2RXPPS         equ	15080	;# 
 12636   003AE9                     U2CTSPPS        equ	15081	;# 
 12637   003BC9                     DMA2BUF         equ	15305	;# 
 12638   003BCA                     DMA2DCNT        equ	15306	;# 
 12639   003BCA                     DMA2DCNTL       equ	15306	;# 
 12640   003BCB                     DMA2DCNTH       equ	15307	;# 
 12641   003BCC                     DMA2DPTR        equ	15308	;# 
 12642   003BCC                     DMA2DPTRL       equ	15308	;# 
 12643   003BCD                     DMA2DPTRH       equ	15309	;# 
 12644   003BCE                     DMA2DSZ         equ	15310	;# 
 12645   003BCE                     DMA2DSZL        equ	15310	;# 
 12646   003BCF                     DMA2DSZH        equ	15311	;# 
 12647   003BD0                     DMA2DSA         equ	15312	;# 
 12648   003BD0                     DMA2DSAL        equ	15312	;# 
 12649   003BD1                     DMA2DSAH        equ	15313	;# 
 12650   003BD2                     DMA2SCNT        equ	15314	;# 
 12651   003BD2                     DMA2SCNTL       equ	15314	;# 
 12652   003BD3                     DMA2SCNTH       equ	15315	;# 
 12653   003BD4                     DMA2SPTR        equ	15316	;# 
 12654   003BD4                     DMA2SPTRL       equ	15316	;# 
 12655   003BD5                     DMA2SPTRH       equ	15317	;# 
 12656   003BD6                     DMA2SPTRU       equ	15318	;# 
 12657   003BD7                     DMA2SSZ         equ	15319	;# 
 12658   003BD7                     DMA2SSZL        equ	15319	;# 
 12659   003BD8                     DMA2SSZH        equ	15320	;# 
 12660   003BD9                     DMA2SSA         equ	15321	;# 
 12661   003BD9                     DMA2SSAL        equ	15321	;# 
 12662   003BDA                     DMA2SSAH        equ	15322	;# 
 12663   003BDB                     DMA2SSAU        equ	15323	;# 
 12664   003BDC                     DMA2CON0        equ	15324	;# 
 12665   003BDD                     DMA2CON1        equ	15325	;# 
 12666   003BDE                     DMA2AIRQ        equ	15326	;# 
 12667   003BDF                     DMA2SIRQ        equ	15327	;# 
 12668   003BE9                     DMA1BUF         equ	15337	;# 
 12669   003BEA                     DMA1DCNT        equ	15338	;# 
 12670   003BEA                     DMA1DCNTL       equ	15338	;# 
 12671   003BEB                     DMA1DCNTH       equ	15339	;# 
 12672   003BEC                     DMA1DPTR        equ	15340	;# 
 12673   003BEC                     DMA1DPTRL       equ	15340	;# 
 12674   003BED                     DMA1DPTRH       equ	15341	;# 
 12675   003BEE                     DMA1DSZ         equ	15342	;# 
 12676   003BEE                     DMA1DSZL        equ	15342	;# 
 12677   003BEF                     DMA1DSZH        equ	15343	;# 
 12678   003BF0                     DMA1DSA         equ	15344	;# 
 12679   003BF0                     DMA1DSAL        equ	15344	;# 
 12680   003BF1                     DMA1DSAH        equ	15345	;# 
 12681   003BF2                     DMA1SCNT        equ	15346	;# 
 12682   003BF2                     DMA1SCNTL       equ	15346	;# 
 12683   003BF3                     DMA1SCNTH       equ	15347	;# 
 12684   003BF4                     DMA1SPTR        equ	15348	;# 
 12685   003BF4                     DMA1SPTRL       equ	15348	;# 
 12686   003BF5                     DMA1SPTRH       equ	15349	;# 
 12687   003BF6                     DMA1SPTRU       equ	15350	;# 
 12688   003BF7                     DMA1SSZ         equ	15351	;# 
 12689   003BF7                     DMA1SSZL        equ	15351	;# 
 12690   003BF8                     DMA1SSZH        equ	15352	;# 
 12691   003BF9                     DMA1SSA         equ	15353	;# 
 12692   003BF9                     DMA1SSAL        equ	15353	;# 
 12693   003BFA                     DMA1SSAH        equ	15354	;# 
 12694   003BFB                     DMA1SSAU        equ	15355	;# 
 12695   003BFC                     DMA1CON0        equ	15356	;# 
 12696   003BFD                     DMA1CON1        equ	15357	;# 
 12697   003BFE                     DMA1AIRQ        equ	15358	;# 
 12698   003BFF                     DMA1SIRQ        equ	15359	;# 
 12699   003C56                     CLC4CON         equ	15446	;# 
 12700   003C57                     CLC4POL         equ	15447	;# 
 12701   003C58                     CLC4SEL0        equ	15448	;# 
 12702   003C59                     CLC4SEL1        equ	15449	;# 
 12703   003C5A                     CLC4SEL2        equ	15450	;# 
 12704   003C5B                     CLC4SEL3        equ	15451	;# 
 12705   003C5C                     CLC4GLS0        equ	15452	;# 
 12706   003C5D                     CLC4GLS1        equ	15453	;# 
 12707   003C5E                     CLC4GLS2        equ	15454	;# 
 12708   003C5F                     CLC4GLS3        equ	15455	;# 
 12709   003C60                     CLC3CON         equ	15456	;# 
 12710   003C61                     CLC3POL         equ	15457	;# 
 12711   003C62                     CLC3SEL0        equ	15458	;# 
 12712   003C63                     CLC3SEL1        equ	15459	;# 
 12713   003C64                     CLC3SEL2        equ	15460	;# 
 12714   003C65                     CLC3SEL3        equ	15461	;# 
 12715   003C66                     CLC3GLS0        equ	15462	;# 
 12716   003C67                     CLC3GLS1        equ	15463	;# 
 12717   003C68                     CLC3GLS2        equ	15464	;# 
 12718   003C69                     CLC3GLS3        equ	15465	;# 
 12719   003C6A                     CLC2CON         equ	15466	;# 
 12720   003C6B                     CLC2POL         equ	15467	;# 
 12721   003C6C                     CLC2SEL0        equ	15468	;# 
 12722   003C6D                     CLC2SEL1        equ	15469	;# 
 12723   003C6E                     CLC2SEL2        equ	15470	;# 
 12724   003C6F                     CLC2SEL3        equ	15471	;# 
 12725   003C70                     CLC2GLS0        equ	15472	;# 
 12726   003C71                     CLC2GLS1        equ	15473	;# 
 12727   003C72                     CLC2GLS2        equ	15474	;# 
 12728   003C73                     CLC2GLS3        equ	15475	;# 
 12729   003C74                     CLC1CON         equ	15476	;# 
 12730   003C75                     CLC1POL         equ	15477	;# 
 12731   003C76                     CLC1SEL0        equ	15478	;# 
 12732   003C77                     CLC1SEL1        equ	15479	;# 
 12733   003C78                     CLC1SEL2        equ	15480	;# 
 12734   003C79                     CLC1SEL3        equ	15481	;# 
 12735   003C7A                     CLC1GLS0        equ	15482	;# 
 12736   003C7B                     CLC1GLS1        equ	15483	;# 
 12737   003C7C                     CLC1GLS2        equ	15484	;# 
 12738   003C7D                     CLC1GLS3        equ	15485	;# 
 12739   003C7E                     CLCDATA0        equ	15486	;# 
 12740   003CE5                     CLKRCON         equ	15589	;# 
 12741   003CE6                     CLKRCLK         equ	15590	;# 
 12742   003CFA                     MD1CON0         equ	15610	;# 
 12743   003CFB                     MD1CON1         equ	15611	;# 
 12744   003CFC                     MD1SRC          equ	15612	;# 
 12745   003CFD                     MD1CARL         equ	15613	;# 
 12746   003CFE                     MD1CARH         equ	15614	;# 
 12747   003D10                     SPI1RXB         equ	15632	;# 
 12748   003D11                     SPI1TXB         equ	15633	;# 
 12749   003D12                     SPI1TCNT        equ	15634	;# 
 12750   003D12                     SPI1TCNTL       equ	15634	;# 
 12751   003D13                     SPI1TCNTH       equ	15635	;# 
 12752   003D14                     SPI1CON0        equ	15636	;# 
 12753   003D15                     SPI1CON1        equ	15637	;# 
 12754   003D16                     SPI1CON2        equ	15638	;# 
 12755   003D17                     SPI1STATUS      equ	15639	;# 
 12756   003D18                     SPI1TWIDTH      equ	15640	;# 
 12757   003D19                     SPI1BAUD        equ	15641	;# 
 12758   003D1A                     SPI1INTF        equ	15642	;# 
 12759   003D1B                     SPI1INTE        equ	15643	;# 
 12760   003D1C                     SPI1CLK         equ	15644	;# 
 12761   003D54                     I2C2RXB         equ	15700	;# 
 12762   003D55                     I2C2TXB         equ	15701	;# 
 12763   003D56                     I2C2CNT         equ	15702	;# 
 12764   003D57                     I2C2ADB0        equ	15703	;# 
 12765   003D58                     I2C2ADB1        equ	15704	;# 
 12766   003D59                     I2C2ADR0        equ	15705	;# 
 12767   003D5A                     I2C2ADR1        equ	15706	;# 
 12768   003D5B                     I2C2ADR2        equ	15707	;# 
 12769   003D5C                     I2C2ADR3        equ	15708	;# 
 12770   003D5D                     I2C2CON0        equ	15709	;# 
 12771   003D5E                     I2C2CON1        equ	15710	;# 
 12772   003D5F                     I2C2CON2        equ	15711	;# 
 12773   003D60                     I2C2ERR         equ	15712	;# 
 12774   003D61                     I2C2STAT0       equ	15713	;# 
 12775   003D62                     I2C2STAT1       equ	15714	;# 
 12776   003D63                     I2C2PIR         equ	15715	;# 
 12777   003D64                     I2C2PIE         equ	15716	;# 
 12778   003D65                     I2C2CLK         equ	15717	;# 
 12779   003D66                     I2C2BTO         equ	15718	;# 
 12780   003D6A                     I2C1RXB         equ	15722	;# 
 12781   003D6B                     I2C1TXB         equ	15723	;# 
 12782   003D6C                     I2C1CNT         equ	15724	;# 
 12783   003D6D                     I2C1ADB0        equ	15725	;# 
 12784   003D6E                     I2C1ADB1        equ	15726	;# 
 12785   003D6F                     I2C1ADR0        equ	15727	;# 
 12786   003D70                     I2C1ADR1        equ	15728	;# 
 12787   003D71                     I2C1ADR2        equ	15729	;# 
 12788   003D72                     I2C1ADR3        equ	15730	;# 
 12789   003D73                     I2C1CON0        equ	15731	;# 
 12790   003D74                     I2C1CON1        equ	15732	;# 
 12791   003D75                     I2C1CON2        equ	15733	;# 
 12792   003D76                     I2C1ERR         equ	15734	;# 
 12793   003D77                     I2C1STAT0       equ	15735	;# 
 12794   003D78                     I2C1STAT1       equ	15736	;# 
 12795   003D79                     I2C1PIR         equ	15737	;# 
 12796   003D7A                     I2C1PIE         equ	15738	;# 
 12797   003D7B                     I2C1CLK         equ	15739	;# 
 12798   003D7C                     I2C1BTO         equ	15740	;# 
 12799   003DD0                     U2RXB           equ	15824	;# 
 12800   003DD0                     U2RXBL          equ	15824	;# 
 12801   003DD2                     U2TXB           equ	15826	;# 
 12802   003DD2                     U2TXBL          equ	15826	;# 
 12803   003DD4                     U2P1            equ	15828	;# 
 12804   003DD4                     U2P1L           equ	15828	;# 
 12805   003DD6                     U2P2            equ	15830	;# 
 12806   003DD6                     U2P2L           equ	15830	;# 
 12807   003DD8                     U2P3            equ	15832	;# 
 12808   003DD8                     U2P3L           equ	15832	;# 
 12809   003DDA                     U2CON0          equ	15834	;# 
 12810   003DDB                     U2CON1          equ	15835	;# 
 12811   003DDC                     U2CON2          equ	15836	;# 
 12812   003DDD                     U2BRG           equ	15837	;# 
 12813   003DDD                     U2BRGL          equ	15837	;# 
 12814   003DDE                     U2BRGH          equ	15838	;# 
 12815   003DDF                     U2FIFO          equ	15839	;# 
 12816   003DE0                     U2UIR           equ	15840	;# 
 12817   003DE1                     U2ERRIR         equ	15841	;# 
 12818   003DE2                     U2ERRIE         equ	15842	;# 
 12819   003DE8                     U1RXB           equ	15848	;# 
 12820   003DE8                     U1RXBL          equ	15848	;# 
 12821   003DE9                     U1RXCHK         equ	15849	;# 
 12822   003DEA                     U1TXB           equ	15850	;# 
 12823   003DEA                     U1TXBL          equ	15850	;# 
 12824   003DEB                     U1TXCHK         equ	15851	;# 
 12825   003DEC                     U1P1            equ	15852	;# 
 12826   003DEC                     U1P1L           equ	15852	;# 
 12827   003DED                     U1P1H           equ	15853	;# 
 12828   003DEE                     U1P2            equ	15854	;# 
 12829   003DEE                     U1P2L           equ	15854	;# 
 12830   003DEF                     U1P2H           equ	15855	;# 
 12831   003DF0                     U1P3            equ	15856	;# 
 12832   003DF0                     U1P3L           equ	15856	;# 
 12833   003DF1                     U1P3H           equ	15857	;# 
 12834   003DF2                     U1CON0          equ	15858	;# 
 12835   003DF3                     U1CON1          equ	15859	;# 
 12836   003DF4                     U1CON2          equ	15860	;# 
 12837   003DF5                     U1BRG           equ	15861	;# 
 12838   003DF5                     U1BRGL          equ	15861	;# 
 12839   003DF6                     U1BRGH          equ	15862	;# 
 12840   003DF7                     U1FIFO          equ	15863	;# 
 12841   003DF8                     U1UIR           equ	15864	;# 
 12842   003DF9                     U1ERRIR         equ	15865	;# 
 12843   003DFA                     U1ERRIE         equ	15866	;# 
 12844   003E9C                     DAC1CON1        equ	16028	;# 
 12845   003E9E                     DAC1CON0        equ	16030	;# 
 12846   003EB8                     CM2CON0         equ	16056	;# 
 12847   003EB9                     CM2CON1         equ	16057	;# 
 12848   003EBA                     CM2NCH          equ	16058	;# 
 12849   003EBB                     CM2PCH          equ	16059	;# 
 12850   003EBC                     CM1CON0         equ	16060	;# 
 12851   003EBD                     CM1CON1         equ	16061	;# 
 12852   003EBE                     CM1NCH          equ	16062	;# 
 12853   003EBF                     CM1PCH          equ	16063	;# 
 12854   003EC0                     CMOUT           equ	16064	;# 
 12855   003EC1                     FVRCON          equ	16065	;# 
 12856   003EC3                     ZCDCON          equ	16067	;# 
 12857   003EC9                     HLVDCON0        equ	16073	;# 
 12858   003ECA                     HLVDCON1        equ	16074	;# 
 12859   003ED7                     ADCP            equ	16087	;# 
 12860   003EDE                     ADLTH           equ	16094	;# 
 12861   003EDE                     ADLTHL          equ	16094	;# 
 12862   003EDF                     ADLTHH          equ	16095	;# 
 12863   003EE0                     ADUTH           equ	16096	;# 
 12864   003EE0                     ADUTHL          equ	16096	;# 
 12865   003EE1                     ADUTHH          equ	16097	;# 
 12866   003EE2                     ADERR           equ	16098	;# 
 12867   003EE2                     ADERRL          equ	16098	;# 
 12868   003EE3                     ADERRH          equ	16099	;# 
 12869   003EE4                     ADSTPT          equ	16100	;# 
 12870   003EE4                     ADSTPTL         equ	16100	;# 
 12871   003EE5                     ADSTPTH         equ	16101	;# 
 12872   003EE6                     ADFLTR          equ	16102	;# 
 12873   003EE6                     ADFLTRL         equ	16102	;# 
 12874   003EE7                     ADFLTRH         equ	16103	;# 
 12875   003EE8                     ADACC           equ	16104	;# 
 12876   003EE8                     ADACCL          equ	16104	;# 
 12877   003EE9                     ADACCH          equ	16105	;# 
 12878   003EEA                     ADACCU          equ	16106	;# 
 12879   003EEB                     ADCNT           equ	16107	;# 
 12880   003EEC                     ADRPT           equ	16108	;# 
 12881   003EED                     ADPREV          equ	16109	;# 
 12882   003EED                     ADPREVL         equ	16109	;# 
 12883   003EEE                     ADPREVH         equ	16110	;# 
 12884   003EEF                     ADRES           equ	16111	;# 
 12885   003EEF                     ADRESL          equ	16111	;# 
 12886   003EF0                     ADRESH          equ	16112	;# 
 12887   003EF1                     ADPCH           equ	16113	;# 
 12888   003EF3                     ADACQ           equ	16115	;# 
 12889   003EF3                     ADACQL          equ	16115	;# 
 12890   003EF4                     ADACQH          equ	16116	;# 
 12891   003EF5                     ADCAP           equ	16117	;# 
 12892   003EF6                     ADPRE           equ	16118	;# 
 12893   003EF6                     ADPREL          equ	16118	;# 
 12894   003EF7                     ADPREH          equ	16119	;# 
 12895   003EF8                     ADCON0          equ	16120	;# 
 12896   003EF9                     ADCON1          equ	16121	;# 
 12897   003EFA                     ADCON2          equ	16122	;# 
 12898   003EFB                     ADCON3          equ	16123	;# 
 12899   003EFC                     ADSTAT          equ	16124	;# 
 12900   003EFD                     ADREF           equ	16125	;# 
 12901   003EFE                     ADACT           equ	16126	;# 
 12902   003EFF                     ADCLK           equ	16127	;# 
 12903   003F12                     SMT1TMR         equ	16146	;# 
 12904   003F12                     SMT1TMRL        equ	16146	;# 
 12905   003F13                     SMT1TMRH        equ	16147	;# 
 12906   003F14                     SMT1TMRU        equ	16148	;# 
 12907   003F15                     SMT1CPR         equ	16149	;# 
 12908   003F15                     SMT1CPRL        equ	16149	;# 
 12909   003F16                     SMT1CPRH        equ	16150	;# 
 12910   003F17                     SMT1CPRU        equ	16151	;# 
 12911   003F18                     SMT1CPW         equ	16152	;# 
 12912   003F18                     SMT1CPWL        equ	16152	;# 
 12913   003F19                     SMT1CPWH        equ	16153	;# 
 12914   003F1A                     SMT1CPWU        equ	16154	;# 
 12915   003F1B                     SMT1PR          equ	16155	;# 
 12916   003F1B                     SMT1PRL         equ	16155	;# 
 12917   003F1C                     SMT1PRH         equ	16156	;# 
 12918   003F1D                     SMT1PRU         equ	16157	;# 
 12919   003F1E                     SMT1CON0        equ	16158	;# 
 12920   003F1F                     SMT1CON1        equ	16159	;# 
 12921   003F20                     SMT1STAT        equ	16160	;# 
 12922   003F21                     SMT1CLK         equ	16161	;# 
 12923   003F22                     SMT1SIG         equ	16162	;# 
 12924   003F23                     SMT1WIN         equ	16163	;# 
 12925   003F38                     NCO1ACC         equ	16184	;# 
 12926   003F38                     NCO1ACCL        equ	16184	;# 
 12927   003F39                     NCO1ACCH        equ	16185	;# 
 12928   003F3A                     NCO1ACCU        equ	16186	;# 
 12929   003F3B                     NCO1INC         equ	16187	;# 
 12930   003F3B                     NCO1INCL        equ	16187	;# 
 12931   003F3C                     NCO1INCH        equ	16188	;# 
 12932   003F3D                     NCO1INCU        equ	16189	;# 
 12933   003F3E                     NCO1CON         equ	16190	;# 
 12934   003F3F                     NCO1CLK         equ	16191	;# 
 12935   003F40                     CWG3CLK         equ	16192	;# 
 12936   003F40                     CWG3CLKCON      equ	16192	;# 
 12937   003F41                     CWG3ISM         equ	16193	;# 
 12938   003F41                     CWG3DAT         equ	16193	;# 
 12939   003F42                     CWG3DBR         equ	16194	;# 
 12940   003F43                     CWG3DBF         equ	16195	;# 
 12941   003F44                     CWG3CON0        equ	16196	;# 
 12942   003F45                     CWG3CON1        equ	16197	;# 
 12943   003F46                     CWG3AS0         equ	16198	;# 
 12944   003F47                     CWG3AS1         equ	16199	;# 
 12945   003F48                     CWG3STR         equ	16200	;# 
 12946   003F49                     CWG2CLK         equ	16201	;# 
 12947   003F49                     CWG2CLKCON      equ	16201	;# 
 12948   003F4A                     CWG2ISM         equ	16202	;# 
 12949   003F4A                     CWG2DAT         equ	16202	;# 
 12950   003F4B                     CWG2DBR         equ	16203	;# 
 12951   003F4C                     CWG2DBF         equ	16204	;# 
 12952   003F4D                     CWG2CON0        equ	16205	;# 
 12953   003F4E                     CWG2CON1        equ	16206	;# 
 12954   003F4F                     CWG2AS0         equ	16207	;# 
 12955   003F50                     CWG2AS1         equ	16208	;# 
 12956   003F51                     CWG2STR         equ	16209	;# 
 12957   003F52                     CWG1CLK         equ	16210	;# 
 12958   003F52                     CWG1CLKCON      equ	16210	;# 
 12959   003F53                     CWG1ISM         equ	16211	;# 
 12960   003F53                     CWG1DAT         equ	16211	;# 
 12961   003F54                     CWG1DBR         equ	16212	;# 
 12962   003F55                     CWG1DBF         equ	16213	;# 
 12963   003F56                     CWG1CON0        equ	16214	;# 
 12964   003F57                     CWG1CON1        equ	16215	;# 
 12965   003F58                     CWG1AS0         equ	16216	;# 
 12966   003F59                     CWG1AS1         equ	16217	;# 
 12967   003F5A                     CWG1STR         equ	16218	;# 
 12968   003F5E                     CCPTMRS0        equ	16222	;# 
 12969   003F5F                     CCPTMRS1        equ	16223	;# 
 12970   003F60                     PWM8DC          equ	16224	;# 
 12971   003F60                     PWM8DCL         equ	16224	;# 
 12972   003F61                     PWM8DCH         equ	16225	;# 
 12973   003F62                     PWM8CON         equ	16226	;# 
 12974   003F64                     PWM7DC          equ	16228	;# 
 12975   003F64                     PWM7DCL         equ	16228	;# 
 12976   003F65                     PWM7DCH         equ	16229	;# 
 12977   003F66                     PWM7CON         equ	16230	;# 
 12978   003F68                     PWM6DC          equ	16232	;# 
 12979   003F68                     PWM6DCL         equ	16232	;# 
 12980   003F69                     PWM6DCH         equ	16233	;# 
 12981   003F6A                     PWM6CON         equ	16234	;# 
 12982   003F6C                     PWM5DC          equ	16236	;# 
 12983   003F6C                     PWM5DCL         equ	16236	;# 
 12984   003F6D                     PWM5DCH         equ	16237	;# 
 12985   003F6E                     PWM5CON         equ	16238	;# 
 12986   003F70                     CCPR4           equ	16240	;# 
 12987   003F70                     CCPR4L          equ	16240	;# 
 12988   003F71                     CCPR4H          equ	16241	;# 
 12989   003F72                     CCP4CON         equ	16242	;# 
 12990   003F73                     CCP4CAP         equ	16243	;# 
 12991   003F74                     CCPR3           equ	16244	;# 
 12992   003F74                     CCPR3L          equ	16244	;# 
 12993   003F75                     CCPR3H          equ	16245	;# 
 12994   003F76                     CCP3CON         equ	16246	;# 
 12995   003F77                     CCP3CAP         equ	16247	;# 
 12996   003F78                     CCPR2           equ	16248	;# 
 12997   003F78                     CCPR2L          equ	16248	;# 
 12998   003F79                     CCPR2H          equ	16249	;# 
 12999   003F7A                     CCP2CON         equ	16250	;# 
 13000   003F7B                     CCP2CAP         equ	16251	;# 
 13001   003F7C                     CCPR1           equ	16252	;# 
 13002   003F7C                     CCPR1L          equ	16252	;# 
 13003   003F7D                     CCPR1H          equ	16253	;# 
 13004   003F7E                     CCP1CON         equ	16254	;# 
 13005   003F7F                     CCP1CAP         equ	16255	;# 
 13006   003F92                     T6TMR           equ	16274	;# 
 13007   003F92                     TMR6            equ	16274	;# 
 13008   003F93                     T6PR            equ	16275	;# 
 13009   003F93                     PR6             equ	16275	;# 
 13010   003F94                     T6CON           equ	16276	;# 
 13011   003F95                     T6HLT           equ	16277	;# 
 13012   003F96                     T6CLKCON        equ	16278	;# 
 13013   003F96                     T6CLK           equ	16278	;# 
 13014   003F97                     T6RST           equ	16279	;# 
 13015   003F98                     TMR5            equ	16280	;# 
 13016   003F98                     TMR5L           equ	16280	;# 
 13017   003F99                     TMR5H           equ	16281	;# 
 13018   003F9A                     T5CON           equ	16282	;# 
 13019   003F9A                     TMR5CON         equ	16282	;# 
 13020   003F9B                     T5GCON          equ	16283	;# 
 13021   003F9B                     TMR5GCON        equ	16283	;# 
 13022   003F9C                     T5GATE          equ	16284	;# 
 13023   003F9C                     TMR5GATE        equ	16284	;# 
 13024   003F9D                     T5CLK           equ	16285	;# 
 13025   003F9D                     TMR5CLK         equ	16285	;# 
 13026   003F9D                     PR5             equ	16285	;# 
 13027   003F9E                     T4TMR           equ	16286	;# 
 13028   003F9E                     TMR4            equ	16286	;# 
 13029   003F9F                     T4PR            equ	16287	;# 
 13030   003F9F                     PR4             equ	16287	;# 
 13031   003FA0                     T4CON           equ	16288	;# 
 13032   003FA1                     T4HLT           equ	16289	;# 
 13033   003FA2                     T4CLKCON        equ	16290	;# 
 13034   003FA2                     T4CLK           equ	16290	;# 
 13035   003FA3                     T4RST           equ	16291	;# 
 13036   003FA4                     TMR3            equ	16292	;# 
 13037   003FA4                     TMR3L           equ	16292	;# 
 13038   003FA5                     TMR3H           equ	16293	;# 
 13039   003FA6                     T3CON           equ	16294	;# 
 13040   003FA6                     TMR3CON         equ	16294	;# 
 13041   003FA7                     T3GCON          equ	16295	;# 
 13042   003FA7                     TMR3GCON        equ	16295	;# 
 13043   003FA8                     T3GATE          equ	16296	;# 
 13044   003FA8                     TMR3GATE        equ	16296	;# 
 13045   003FA9                     T3CLK           equ	16297	;# 
 13046   003FA9                     TMR3CLK         equ	16297	;# 
 13047   003FA9                     PR3             equ	16297	;# 
 13048   003FAA                     T2TMR           equ	16298	;# 
 13049   003FAA                     TMR2            equ	16298	;# 
 13050   003FAB                     T2PR            equ	16299	;# 
 13051   003FAB                     PR2             equ	16299	;# 
 13052   003FAC                     T2CON           equ	16300	;# 
 13053   003FAD                     T2HLT           equ	16301	;# 
 13054   003FAE                     T2CLKCON        equ	16302	;# 
 13055   003FAE                     T2CLK           equ	16302	;# 
 13056   003FAF                     T2RST           equ	16303	;# 
 13057   003FB0                     TMR1            equ	16304	;# 
 13058   003FB0                     TMR1L           equ	16304	;# 
 13059   003FB1                     TMR1H           equ	16305	;# 
 13060   003FB2                     T1CON           equ	16306	;# 
 13061   003FB2                     TMR1CON         equ	16306	;# 
 13062   003FB3                     T1GCON          equ	16307	;# 
 13063   003FB3                     TMR1GCON        equ	16307	;# 
 13064   003FB4                     T1GATE          equ	16308	;# 
 13065   003FB4                     TMR1GATE        equ	16308	;# 
 13066   003FB5                     T1CLK           equ	16309	;# 
 13067   003FB5                     TMR1CLK         equ	16309	;# 
 13068   003FB5                     PR1             equ	16309	;# 
 13069   003FB6                     TMR0L           equ	16310	;# 
 13070   003FB6                     TMR0            equ	16310	;# 
 13071   003FB7                     TMR0H           equ	16311	;# 
 13072   003FB7                     PR0             equ	16311	;# 
 13073   003FB8                     T0CON0          equ	16312	;# 
 13074   003FB9                     T0CON1          equ	16313	;# 
 13075   003FBA                     LATA            equ	16314	;# 
 13076   003FBB                     LATB            equ	16315	;# 
 13077   003FBC                     LATC            equ	16316	;# 
 13078   003FBD                     LATD            equ	16317	;# 
 13079   003FBE                     LATE            equ	16318	;# 
 13080   003FBF                     LATF            equ	16319	;# 
 13081   003FC2                     TRISA           equ	16322	;# 
 13082   003FC3                     TRISB           equ	16323	;# 
 13083   003FC4                     TRISC           equ	16324	;# 
 13084   003FC5                     TRISD           equ	16325	;# 
 13085   003FC6                     TRISE           equ	16326	;# 
 13086   003FC7                     TRISF           equ	16327	;# 
 13087   003FCA                     PORTA           equ	16330	;# 
 13088   003FCB                     PORTB           equ	16331	;# 
 13089   003FCC                     PORTC           equ	16332	;# 
 13090   003FCD                     PORTD           equ	16333	;# 
 13091   003FCE                     PORTE           equ	16334	;# 
 13092   003FCF                     PORTF           equ	16335	;# 
 13093   003FD2                     INTCON0         equ	16338	;# 
 13094   003FD3                     INTCON1         equ	16339	;# 
 13095   003FD4                     IVTLOCK         equ	16340	;# 
 13096   003FD5                     IVTBASE         equ	16341	;# 
 13097   003FD5                     IVTBASEL        equ	16341	;# 
 13098   003FD6                     IVTBASEH        equ	16342	;# 
 13099   003FD7                     IVTBASEU        equ	16343	;# 
 13100   003FD8                     STATUS          equ	16344	;# 
 13101   003FD9                     FSR2            equ	16345	;# 
 13102   003FD9                     FSR2L           equ	16345	;# 
 13103   003FDA                     FSR2H           equ	16346	;# 
 13104   003FDB                     PLUSW2          equ	16347	;# 
 13105   003FDC                     PREINC2         equ	16348	;# 
 13106   003FDD                     POSTDEC2        equ	16349	;# 
 13107   003FDE                     POSTINC2        equ	16350	;# 
 13108   003FDF                     INDF2           equ	16351	;# 
 13109   003FE0                     BSR             equ	16352	;# 
 13110   003FE1                     FSR1            equ	16353	;# 
 13111   003FE1                     FSR1L           equ	16353	;# 
 13112   003FE2                     FSR1H           equ	16354	;# 
 13113   003FE3                     PLUSW1          equ	16355	;# 
 13114   003FE4                     PREINC1         equ	16356	;# 
 13115   003FE5                     POSTDEC1        equ	16357	;# 
 13116   003FE6                     POSTINC1        equ	16358	;# 
 13117   003FE7                     INDF1           equ	16359	;# 
 13118   003FE8                     WREG            equ	16360	;# 
 13119   003FE9                     FSR0            equ	16361	;# 
 13120   003FE9                     FSR0L           equ	16361	;# 
 13121   003FEA                     FSR0H           equ	16362	;# 
 13122   003FEB                     PLUSW0          equ	16363	;# 
 13123   003FEC                     PREINC0         equ	16364	;# 
 13124   003FED                     POSTDEC0        equ	16365	;# 
 13125   003FEE                     POSTINC0        equ	16366	;# 
 13126   003FEF                     INDF0           equ	16367	;# 
 13127   003FF0                     PCON0           equ	16368	;# 
 13128   003FF1                     PCON1           equ	16369	;# 
 13129   003FF3                     PROD            equ	16371	;# 
 13130   003FF3                     PRODL           equ	16371	;# 
 13131   003FF4                     PRODH           equ	16372	;# 
 13132   003FF5                     TABLAT          equ	16373	;# 
 13133   003FF6                     TBLPTR          equ	16374	;# 
 13134   003FF6                     TBLPTRL         equ	16374	;# 
 13135   003FF7                     TBLPTRH         equ	16375	;# 
 13136   003FF8                     TBLPTRU         equ	16376	;# 
 13137   003FF9                     PCLAT           equ	16377	;# 
 13138   003FF9                     PCL             equ	16377	;# 
 13139   003FFA                     PCLATH          equ	16378	;# 
 13140   003FFB                     PCLATU          equ	16379	;# 
 13141   003FFC                     STKPTR          equ	16380	;# 
 13142   003FFD                     TOS             equ	16381	;# 
 13143   003FFD                     TOSL            equ	16381	;# 
 13144   003FFE                     TOSH            equ	16382	;# 
 13145   003FFF                     TOSU            equ	16383	;# 
 13146   003880                     STATUS_CSHAD    equ	14464	;# 
 13147   003881                     WREG_CSHAD      equ	14465	;# 
 13148   003882                     BSR_CSHAD       equ	14466	;# 
 13149   003883                     SHADCON         equ	14467	;# 
 13150   003884                     STATUS_SHAD     equ	14468	;# 
 13151   003885                     WREG_SHAD       equ	14469	;# 
 13152   003886                     BSR_SHAD        equ	14470	;# 
 13153   003887                     PCLATH_SHAD     equ	14471	;# 
 13154   003888                     PCLATU_SHAD     equ	14472	;# 
 13155   003889                     FSR0SH          equ	14473	;# 
 13156   003889                     FSR0L_SHAD      equ	14473	;# 
 13157   00388A                     FSR0H_SHAD      equ	14474	;# 
 13158   00388B                     FSR1SH          equ	14475	;# 
 13159   00388B                     FSR1L_SHAD      equ	14475	;# 
 13160   00388C                     FSR1H_SHAD      equ	14476	;# 
 13161   00388D                     FSR2SH          equ	14477	;# 
 13162   00388D                     FSR2L_SHAD      equ	14477	;# 
 13163   00388E                     FSR2H_SHAD      equ	14478	;# 
 13164   00388F                     PRODSH          equ	14479	;# 
 13165   00388F                     PRODL_SHAD      equ	14479	;# 
 13166   003890                     PRODH_SHAD      equ	14480	;# 
 13167   00389D                     IVTADL          equ	14493	;# 
 13168   00389E                     IVTADH          equ	14494	;# 
 13169   00389F                     IVTADU          equ	14495	;# 
 13170   00395B                     WDTCON0         equ	14683	;# 
 13171   00395C                     WDTCON1         equ	14684	;# 
 13172   00395D                     WDTPSL          equ	14685	;# 
 13173   00395E                     WDTPSH          equ	14686	;# 
 13174   00395F                     WDTTMR          equ	14687	;# 
 13175   003960                     CRCDATA         equ	14688	;# 
 13176   003960                     CRCDATL         equ	14688	;# 
 13177   003961                     CRCDATH         equ	14689	;# 
 13178   003962                     CRCACC          equ	14690	;# 
 13179   003962                     CRCACCL         equ	14690	;# 
 13180   003963                     CRCACCH         equ	14691	;# 
 13181   003964                     CRCSHFT         equ	14692	;# 
 13182   003964                     CRCSHIFTL       equ	14692	;# 
 13183   003965                     CRCSHIFTH       equ	14693	;# 
 13184   003966                     CRCXOR          equ	14694	;# 
 13185   003966                     CRCXORL         equ	14694	;# 
 13186   003967                     CRCXORH         equ	14695	;# 
 13187   003968                     CRCCON0         equ	14696	;# 
 13188   003969                     CRCCON1         equ	14697	;# 
 13189   003976                     SCANLADR        equ	14710	;# 
 13190   003976                     SCANLADRL       equ	14710	;# 
 13191   003977                     SCANLADRH       equ	14711	;# 
 13192   003978                     SCANLADRU       equ	14712	;# 
 13193   003979                     SCANHADR        equ	14713	;# 
 13194   003979                     SCANHADRL       equ	14713	;# 
 13195   00397A                     SCANHADRH       equ	14714	;# 
 13196   00397B                     SCANHADRU       equ	14715	;# 
 13197   00397C                     SCANCON0        equ	14716	;# 
 13198   00397D                     SCANTRIG        equ	14717	;# 
 13199   003980                     IPR0            equ	14720	;# 
 13200   003981                     IPR1            equ	14721	;# 
 13201   003982                     IPR2            equ	14722	;# 
 13202   003983                     IPR3            equ	14723	;# 
 13203   003984                     IPR4            equ	14724	;# 
 13204   003985                     IPR5            equ	14725	;# 
 13205   003986                     IPR6            equ	14726	;# 
 13206   003987                     IPR7            equ	14727	;# 
 13207   003988                     IPR8            equ	14728	;# 
 13208   003989                     IPR9            equ	14729	;# 
 13209   00398A                     IPR10           equ	14730	;# 
 13210   003990                     PIE0            equ	14736	;# 
 13211   003991                     PIE1            equ	14737	;# 
 13212   003992                     PIE2            equ	14738	;# 
 13213   003993                     PIE3            equ	14739	;# 
 13214   003994                     PIE4            equ	14740	;# 
 13215   003995                     PIE5            equ	14741	;# 
 13216   003996                     PIE6            equ	14742	;# 
 13217   003997                     PIE7            equ	14743	;# 
 13218   003998                     PIE8            equ	14744	;# 
 13219   003999                     PIE9            equ	14745	;# 
 13220   00399A                     PIE10           equ	14746	;# 
 13221   0039A0                     PIR0            equ	14752	;# 
 13222   0039A1                     PIR1            equ	14753	;# 
 13223   0039A2                     PIR2            equ	14754	;# 
 13224   0039A3                     PIR3            equ	14755	;# 
 13225   0039A4                     PIR4            equ	14756	;# 
 13226   0039A5                     PIR5            equ	14757	;# 
 13227   0039A6                     PIR6            equ	14758	;# 
 13228   0039A7                     PIR7            equ	14759	;# 
 13229   0039A8                     PIR8            equ	14760	;# 
 13230   0039A9                     PIR9            equ	14761	;# 
 13231   0039AA                     PIR10           equ	14762	;# 
 13232   0039C0                     PMD0            equ	14784	;# 
 13233   0039C1                     PMD1            equ	14785	;# 
 13234   0039C2                     PMD2            equ	14786	;# 
 13235   0039C3                     PMD3            equ	14787	;# 
 13236   0039C4                     PMD4            equ	14788	;# 
 13237   0039C5                     PMD5            equ	14789	;# 
 13238   0039C6                     PMD6            equ	14790	;# 
 13239   0039C7                     PMD7            equ	14791	;# 
 13240   0039D0                     BORCON          equ	14800	;# 
 13241   0039D1                     VREGCON         equ	14801	;# 
 13242   0039D8                     CPUDOZE         equ	14808	;# 
 13243   0039D9                     OSCCON1         equ	14809	;# 
 13244   0039DA                     OSCCON2         equ	14810	;# 
 13245   0039DB                     OSCCON3         equ	14811	;# 
 13246   0039DC                     OSCSTAT         equ	14812	;# 
 13247   0039DC                     OSCSTAT1        equ	14812	;# 
 13248   0039DD                     OSCEN           equ	14813	;# 
 13249   0039DE                     OSCTUNE         equ	14814	;# 
 13250   0039DF                     OSCFRQ          equ	14815	;# 
 13251   0039E0                     NVMADRL         equ	14816	;# 
 13252   0039E1                     NVMADRH         equ	14817	;# 
 13253   0039E3                     NVMDAT          equ	14819	;# 
 13254   0039E5                     NVMCON1         equ	14821	;# 
 13255   0039E6                     NVMCON2         equ	14822	;# 
 13256   0039EF                     PRLOCK          equ	14831	;# 
 13257   0039F1                     ISRPR           equ	14833	;# 
 13258   0039F2                     MAINPR          equ	14834	;# 
 13259   0039F3                     DMA1PR          equ	14835	;# 
 13260   0039F4                     DMA2PR          equ	14836	;# 
 13261   0039F7                     SCANPR          equ	14839	;# 
 13262   003A00                     RA0PPS          equ	14848	;# 
 13263   003A01                     RA1PPS          equ	14849	;# 
 13264   003A02                     RA2PPS          equ	14850	;# 
 13265   003A03                     RA3PPS          equ	14851	;# 
 13266   003A04                     RA4PPS          equ	14852	;# 
 13267   003A05                     RA5PPS          equ	14853	;# 
 13268   003A06                     RA6PPS          equ	14854	;# 
 13269   003A07                     RA7PPS          equ	14855	;# 
 13270   003A08                     RB0PPS          equ	14856	;# 
 13271   003A09                     RB1PPS          equ	14857	;# 
 13272   003A0A                     RB2PPS          equ	14858	;# 
 13273   003A0B                     RB3PPS          equ	14859	;# 
 13274   003A0C                     RB4PPS          equ	14860	;# 
 13275   003A0D                     RB5PPS          equ	14861	;# 
 13276   003A0E                     RB6PPS          equ	14862	;# 
 13277   003A0F                     RB7PPS          equ	14863	;# 
 13278   003A10                     RC0PPS          equ	14864	;# 
 13279   003A11                     RC1PPS          equ	14865	;# 
 13280   003A12                     RC2PPS          equ	14866	;# 
 13281   003A13                     RC3PPS          equ	14867	;# 
 13282   003A14                     RC4PPS          equ	14868	;# 
 13283   003A15                     RC5PPS          equ	14869	;# 
 13284   003A16                     RC6PPS          equ	14870	;# 
 13285   003A17                     RC7PPS          equ	14871	;# 
 13286   003A18                     RD0PPS          equ	14872	;# 
 13287   003A19                     RD1PPS          equ	14873	;# 
 13288   003A1A                     RD2PPS          equ	14874	;# 
 13289   003A1B                     RD3PPS          equ	14875	;# 
 13290   003A1C                     RD4PPS          equ	14876	;# 
 13291   003A1D                     RD5PPS          equ	14877	;# 
 13292   003A1E                     RD6PPS          equ	14878	;# 
 13293   003A1F                     RD7PPS          equ	14879	;# 
 13294   003A20                     RE0PPS          equ	14880	;# 
 13295   003A21                     RE1PPS          equ	14881	;# 
 13296   003A22                     RE2PPS          equ	14882	;# 
 13297   003A28                     RF0PPS          equ	14888	;# 
 13298   003A29                     RF1PPS          equ	14889	;# 
 13299   003A2A                     RF2PPS          equ	14890	;# 
 13300   003A2B                     RF3PPS          equ	14891	;# 
 13301   003A2C                     RF4PPS          equ	14892	;# 
 13302   003A2D                     RF5PPS          equ	14893	;# 
 13303   003A2E                     RF6PPS          equ	14894	;# 
 13304   003A2F                     RF7PPS          equ	14895	;# 
 13305   003A40                     ANSELA          equ	14912	;# 
 13306   003A41                     WPUA            equ	14913	;# 
 13307   003A42                     ODCONA          equ	14914	;# 
 13308   003A43                     SLRCONA         equ	14915	;# 
 13309   003A44                     INLVLA          equ	14916	;# 
 13310   003A45                     IOCAP           equ	14917	;# 
 13311   003A46                     IOCAN           equ	14918	;# 
 13312   003A47                     IOCAF           equ	14919	;# 
 13313   003A50                     ANSELB          equ	14928	;# 
 13314   003A51                     WPUB            equ	14929	;# 
 13315   003A52                     ODCONB          equ	14930	;# 
 13316   003A53                     SLRCONB         equ	14931	;# 
 13317   003A54                     INLVLB          equ	14932	;# 
 13318   003A55                     IOCBP           equ	14933	;# 
 13319   003A56                     IOCBN           equ	14934	;# 
 13320   003A57                     IOCBF           equ	14935	;# 
 13321   003A5A                     RB1I2C          equ	14938	;# 
 13322   003A5B                     RB2I2C          equ	14939	;# 
 13323   003A60                     ANSELC          equ	14944	;# 
 13324   003A61                     WPUC            equ	14945	;# 
 13325   003A62                     ODCONC          equ	14946	;# 
 13326   003A63                     SLRCONC         equ	14947	;# 
 13327   003A64                     INLVLC          equ	14948	;# 
 13328   003A65                     IOCCP           equ	14949	;# 
 13329   003A66                     IOCCN           equ	14950	;# 
 13330   003A67                     IOCCF           equ	14951	;# 
 13331   003A6A                     RC3I2C          equ	14954	;# 
 13332   003A6B                     RC4I2C          equ	14955	;# 
 13333   003A70                     ANSELD          equ	14960	;# 
 13334   003A71                     WPUD            equ	14961	;# 
 13335   003A72                     ODCOND          equ	14962	;# 
 13336   003A73                     SLRCOND         equ	14963	;# 
 13337   003A74                     INLVLD          equ	14964	;# 
 13338   003A7A                     RD0I2C          equ	14970	;# 
 13339   003A7B                     RD1I2C          equ	14971	;# 
 13340   003A80                     ANSELE          equ	14976	;# 
 13341   003A81                     WPUE            equ	14977	;# 
 13342   003A82                     ODCONE          equ	14978	;# 
 13343   003A83                     SLRCONE         equ	14979	;# 
 13344   003A84                     INLVLE          equ	14980	;# 
 13345   003A85                     IOCEP           equ	14981	;# 
 13346   003A86                     IOCEN           equ	14982	;# 
 13347   003A87                     IOCEF           equ	14983	;# 
 13348   003A90                     ANSELF          equ	14992	;# 
 13349   003A91                     WPUF            equ	14993	;# 
 13350   003A92                     ODCONF          equ	14994	;# 
 13351   003A93                     SLRCONF         equ	14995	;# 
 13352   003A94                     INLVLF          equ	14996	;# 
 13353   003ABF                     PPSLOCK         equ	15039	;# 
 13354   003AC0                     INT0PPS         equ	15040	;# 
 13355   003AC1                     INT1PPS         equ	15041	;# 
 13356   003AC2                     INT2PPS         equ	15042	;# 
 13357   003AC3                     T0CKIPPS        equ	15043	;# 
 13358   003AC4                     T1CKIPPS        equ	15044	;# 
 13359   003AC5                     T1GPPS          equ	15045	;# 
 13360   003AC6                     T3CKIPPS        equ	15046	;# 
 13361   003AC7                     T3GPPS          equ	15047	;# 
 13362   003AC8                     T5CKIPPS        equ	15048	;# 
 13363   003AC9                     T5GPPS          equ	15049	;# 
 13364   003ACA                     T2INPPS         equ	15050	;# 
 13365   003ACB                     T4INPPS         equ	15051	;# 
 13366   003ACC                     T6INPPS         equ	15052	;# 
 13367   003ACD                     CCP1PPS         equ	15053	;# 
 13368   003ACE                     CCP2PPS         equ	15054	;# 
 13369   003ACF                     CCP3PPS         equ	15055	;# 
 13370   003AD0                     CCP4PPS         equ	15056	;# 
 13371   003AD1                     SMT1WINPPS      equ	15057	;# 
 13372   003AD2                     SMT1SIGPPS      equ	15058	;# 
 13373   003AD3                     CWG1INPPS       equ	15059	;# 
 13374   003AD4                     CWG2INPPS       equ	15060	;# 
 13375   003AD5                     CWG3INPPS       equ	15061	;# 
 13376   003AD6                     MD1CARLPPS      equ	15062	;# 
 13377   003AD7                     MD1CARHPPS      equ	15063	;# 
 13378   003AD8                     MD1SRCPPS       equ	15064	;# 
 13379   003AD9                     CLCIN0PPS       equ	15065	;# 
 13380   003ADA                     CLCIN1PPS       equ	15066	;# 
 13381   003ADB                     CLCIN2PPS       equ	15067	;# 
 13382   003ADC                     CLCIN3PPS       equ	15068	;# 
 13383   003ADD                     ADACTPPS        equ	15069	;# 
 13384   003ADE                     SPI1SCKPPS      equ	15070	;# 
 13385   003ADF                     SPI1SDIPPS      equ	15071	;# 
 13386   003AE0                     SPI1SSPPS       equ	15072	;# 
 13387   003AE1                     I2C1SCLPPS      equ	15073	;# 
 13388   003AE2                     I2C1SDAPPS      equ	15074	;# 
 13389   003AE3                     I2C2SCLPPS      equ	15075	;# 
 13390   003AE4                     I2C2SDAPPS      equ	15076	;# 
 13391   003AE5                     U1RXPPS         equ	15077	;# 
 13392   003AE6                     U1CTSPPS        equ	15078	;# 
 13393   003AE8                     U2RXPPS         equ	15080	;# 
 13394   003AE9                     U2CTSPPS        equ	15081	;# 
 13395   003BC9                     DMA2BUF         equ	15305	;# 
 13396   003BCA                     DMA2DCNT        equ	15306	;# 
 13397   003BCA                     DMA2DCNTL       equ	15306	;# 
 13398   003BCB                     DMA2DCNTH       equ	15307	;# 
 13399   003BCC                     DMA2DPTR        equ	15308	;# 
 13400   003BCC                     DMA2DPTRL       equ	15308	;# 
 13401   003BCD                     DMA2DPTRH       equ	15309	;# 
 13402   003BCE                     DMA2DSZ         equ	15310	;# 
 13403   003BCE                     DMA2DSZL        equ	15310	;# 
 13404   003BCF                     DMA2DSZH        equ	15311	;# 
 13405   003BD0                     DMA2DSA         equ	15312	;# 
 13406   003BD0                     DMA2DSAL        equ	15312	;# 
 13407   003BD1                     DMA2DSAH        equ	15313	;# 
 13408   003BD2                     DMA2SCNT        equ	15314	;# 
 13409   003BD2                     DMA2SCNTL       equ	15314	;# 
 13410   003BD3                     DMA2SCNTH       equ	15315	;# 
 13411   003BD4                     DMA2SPTR        equ	15316	;# 
 13412   003BD4                     DMA2SPTRL       equ	15316	;# 
 13413   003BD5                     DMA2SPTRH       equ	15317	;# 
 13414   003BD6                     DMA2SPTRU       equ	15318	;# 
 13415   003BD7                     DMA2SSZ         equ	15319	;# 
 13416   003BD7                     DMA2SSZL        equ	15319	;# 
 13417   003BD8                     DMA2SSZH        equ	15320	;# 
 13418   003BD9                     DMA2SSA         equ	15321	;# 
 13419   003BD9                     DMA2SSAL        equ	15321	;# 
 13420   003BDA                     DMA2SSAH        equ	15322	;# 
 13421   003BDB                     DMA2SSAU        equ	15323	;# 
 13422   003BDC                     DMA2CON0        equ	15324	;# 
 13423   003BDD                     DMA2CON1        equ	15325	;# 
 13424   003BDE                     DMA2AIRQ        equ	15326	;# 
 13425   003BDF                     DMA2SIRQ        equ	15327	;# 
 13426   003BE9                     DMA1BUF         equ	15337	;# 
 13427   003BEA                     DMA1DCNT        equ	15338	;# 
 13428   003BEA                     DMA1DCNTL       equ	15338	;# 
 13429   003BEB                     DMA1DCNTH       equ	15339	;# 
 13430   003BEC                     DMA1DPTR        equ	15340	;# 
 13431   003BEC                     DMA1DPTRL       equ	15340	;# 
 13432   003BED                     DMA1DPTRH       equ	15341	;# 
 13433   003BEE                     DMA1DSZ         equ	15342	;# 
 13434   003BEE                     DMA1DSZL        equ	15342	;# 
 13435   003BEF                     DMA1DSZH        equ	15343	;# 
 13436   003BF0                     DMA1DSA         equ	15344	;# 
 13437   003BF0                     DMA1DSAL        equ	15344	;# 
 13438   003BF1                     DMA1DSAH        equ	15345	;# 
 13439   003BF2                     DMA1SCNT        equ	15346	;# 
 13440   003BF2                     DMA1SCNTL       equ	15346	;# 
 13441   003BF3                     DMA1SCNTH       equ	15347	;# 
 13442   003BF4                     DMA1SPTR        equ	15348	;# 
 13443   003BF4                     DMA1SPTRL       equ	15348	;# 
 13444   003BF5                     DMA1SPTRH       equ	15349	;# 
 13445   003BF6                     DMA1SPTRU       equ	15350	;# 
 13446   003BF7                     DMA1SSZ         equ	15351	;# 
 13447   003BF7                     DMA1SSZL        equ	15351	;# 
 13448   003BF8                     DMA1SSZH        equ	15352	;# 
 13449   003BF9                     DMA1SSA         equ	15353	;# 
 13450   003BF9                     DMA1SSAL        equ	15353	;# 
 13451   003BFA                     DMA1SSAH        equ	15354	;# 
 13452   003BFB                     DMA1SSAU        equ	15355	;# 
 13453   003BFC                     DMA1CON0        equ	15356	;# 
 13454   003BFD                     DMA1CON1        equ	15357	;# 
 13455   003BFE                     DMA1AIRQ        equ	15358	;# 
 13456   003BFF                     DMA1SIRQ        equ	15359	;# 
 13457   003C56                     CLC4CON         equ	15446	;# 
 13458   003C57                     CLC4POL         equ	15447	;# 
 13459   003C58                     CLC4SEL0        equ	15448	;# 
 13460   003C59                     CLC4SEL1        equ	15449	;# 
 13461   003C5A                     CLC4SEL2        equ	15450	;# 
 13462   003C5B                     CLC4SEL3        equ	15451	;# 
 13463   003C5C                     CLC4GLS0        equ	15452	;# 
 13464   003C5D                     CLC4GLS1        equ	15453	;# 
 13465   003C5E                     CLC4GLS2        equ	15454	;# 
 13466   003C5F                     CLC4GLS3        equ	15455	;# 
 13467   003C60                     CLC3CON         equ	15456	;# 
 13468   003C61                     CLC3POL         equ	15457	;# 
 13469   003C62                     CLC3SEL0        equ	15458	;# 
 13470   003C63                     CLC3SEL1        equ	15459	;# 
 13471   003C64                     CLC3SEL2        equ	15460	;# 
 13472   003C65                     CLC3SEL3        equ	15461	;# 
 13473   003C66                     CLC3GLS0        equ	15462	;# 
 13474   003C67                     CLC3GLS1        equ	15463	;# 
 13475   003C68                     CLC3GLS2        equ	15464	;# 
 13476   003C69                     CLC3GLS3        equ	15465	;# 
 13477   003C6A                     CLC2CON         equ	15466	;# 
 13478   003C6B                     CLC2POL         equ	15467	;# 
 13479   003C6C                     CLC2SEL0        equ	15468	;# 
 13480   003C6D                     CLC2SEL1        equ	15469	;# 
 13481   003C6E                     CLC2SEL2        equ	15470	;# 
 13482   003C6F                     CLC2SEL3        equ	15471	;# 
 13483   003C70                     CLC2GLS0        equ	15472	;# 
 13484   003C71                     CLC2GLS1        equ	15473	;# 
 13485   003C72                     CLC2GLS2        equ	15474	;# 
 13486   003C73                     CLC2GLS3        equ	15475	;# 
 13487   003C74                     CLC1CON         equ	15476	;# 
 13488   003C75                     CLC1POL         equ	15477	;# 
 13489   003C76                     CLC1SEL0        equ	15478	;# 
 13490   003C77                     CLC1SEL1        equ	15479	;# 
 13491   003C78                     CLC1SEL2        equ	15480	;# 
 13492   003C79                     CLC1SEL3        equ	15481	;# 
 13493   003C7A                     CLC1GLS0        equ	15482	;# 
 13494   003C7B                     CLC1GLS1        equ	15483	;# 
 13495   003C7C                     CLC1GLS2        equ	15484	;# 
 13496   003C7D                     CLC1GLS3        equ	15485	;# 
 13497   003C7E                     CLCDATA0        equ	15486	;# 
 13498   003CE5                     CLKRCON         equ	15589	;# 
 13499   003CE6                     CLKRCLK         equ	15590	;# 
 13500   003CFA                     MD1CON0         equ	15610	;# 
 13501   003CFB                     MD1CON1         equ	15611	;# 
 13502   003CFC                     MD1SRC          equ	15612	;# 
 13503   003CFD                     MD1CARL         equ	15613	;# 
 13504   003CFE                     MD1CARH         equ	15614	;# 
 13505   003D10                     SPI1RXB         equ	15632	;# 
 13506   003D11                     SPI1TXB         equ	15633	;# 
 13507   003D12                     SPI1TCNT        equ	15634	;# 
 13508   003D12                     SPI1TCNTL       equ	15634	;# 
 13509   003D13                     SPI1TCNTH       equ	15635	;# 
 13510   003D14                     SPI1CON0        equ	15636	;# 
 13511   003D15                     SPI1CON1        equ	15637	;# 
 13512   003D16                     SPI1CON2        equ	15638	;# 
 13513   003D17                     SPI1STATUS      equ	15639	;# 
 13514   003D18                     SPI1TWIDTH      equ	15640	;# 
 13515   003D19                     SPI1BAUD        equ	15641	;# 
 13516   003D1A                     SPI1INTF        equ	15642	;# 
 13517   003D1B                     SPI1INTE        equ	15643	;# 
 13518   003D1C                     SPI1CLK         equ	15644	;# 
 13519   003D54                     I2C2RXB         equ	15700	;# 
 13520   003D55                     I2C2TXB         equ	15701	;# 
 13521   003D56                     I2C2CNT         equ	15702	;# 
 13522   003D57                     I2C2ADB0        equ	15703	;# 
 13523   003D58                     I2C2ADB1        equ	15704	;# 
 13524   003D59                     I2C2ADR0        equ	15705	;# 
 13525   003D5A                     I2C2ADR1        equ	15706	;# 
 13526   003D5B                     I2C2ADR2        equ	15707	;# 
 13527   003D5C                     I2C2ADR3        equ	15708	;# 
 13528   003D5D                     I2C2CON0        equ	15709	;# 
 13529   003D5E                     I2C2CON1        equ	15710	;# 
 13530   003D5F                     I2C2CON2        equ	15711	;# 
 13531   003D60                     I2C2ERR         equ	15712	;# 
 13532   003D61                     I2C2STAT0       equ	15713	;# 
 13533   003D62                     I2C2STAT1       equ	15714	;# 
 13534   003D63                     I2C2PIR         equ	15715	;# 
 13535   003D64                     I2C2PIE         equ	15716	;# 
 13536   003D65                     I2C2CLK         equ	15717	;# 
 13537   003D66                     I2C2BTO         equ	15718	;# 
 13538   003D6A                     I2C1RXB         equ	15722	;# 
 13539   003D6B                     I2C1TXB         equ	15723	;# 
 13540   003D6C                     I2C1CNT         equ	15724	;# 
 13541   003D6D                     I2C1ADB0        equ	15725	;# 
 13542   003D6E                     I2C1ADB1        equ	15726	;# 
 13543   003D6F                     I2C1ADR0        equ	15727	;# 
 13544   003D70                     I2C1ADR1        equ	15728	;# 
 13545   003D71                     I2C1ADR2        equ	15729	;# 
 13546   003D72                     I2C1ADR3        equ	15730	;# 
 13547   003D73                     I2C1CON0        equ	15731	;# 
 13548   003D74                     I2C1CON1        equ	15732	;# 
 13549   003D75                     I2C1CON2        equ	15733	;# 
 13550   003D76                     I2C1ERR         equ	15734	;# 
 13551   003D77                     I2C1STAT0       equ	15735	;# 
 13552   003D78                     I2C1STAT1       equ	15736	;# 
 13553   003D79                     I2C1PIR         equ	15737	;# 
 13554   003D7A                     I2C1PIE         equ	15738	;# 
 13555   003D7B                     I2C1CLK         equ	15739	;# 
 13556   003D7C                     I2C1BTO         equ	15740	;# 
 13557   003DD0                     U2RXB           equ	15824	;# 
 13558   003DD0                     U2RXBL          equ	15824	;# 
 13559   003DD2                     U2TXB           equ	15826	;# 
 13560   003DD2                     U2TXBL          equ	15826	;# 
 13561   003DD4                     U2P1            equ	15828	;# 
 13562   003DD4                     U2P1L           equ	15828	;# 
 13563   003DD6                     U2P2            equ	15830	;# 
 13564   003DD6                     U2P2L           equ	15830	;# 
 13565   003DD8                     U2P3            equ	15832	;# 
 13566   003DD8                     U2P3L           equ	15832	;# 
 13567   003DDA                     U2CON0          equ	15834	;# 
 13568   003DDB                     U2CON1          equ	15835	;# 
 13569   003DDC                     U2CON2          equ	15836	;# 
 13570   003DDD                     U2BRG           equ	15837	;# 
 13571   003DDD                     U2BRGL          equ	15837	;# 
 13572   003DDE                     U2BRGH          equ	15838	;# 
 13573   003DDF                     U2FIFO          equ	15839	;# 
 13574   003DE0                     U2UIR           equ	15840	;# 
 13575   003DE1                     U2ERRIR         equ	15841	;# 
 13576   003DE2                     U2ERRIE         equ	15842	;# 
 13577   003DE8                     U1RXB           equ	15848	;# 
 13578   003DE8                     U1RXBL          equ	15848	;# 
 13579   003DE9                     U1RXCHK         equ	15849	;# 
 13580   003DEA                     U1TXB           equ	15850	;# 
 13581   003DEA                     U1TXBL          equ	15850	;# 
 13582   003DEB                     U1TXCHK         equ	15851	;# 
 13583   003DEC                     U1P1            equ	15852	;# 
 13584   003DEC                     U1P1L           equ	15852	;# 
 13585   003DED                     U1P1H           equ	15853	;# 
 13586   003DEE                     U1P2            equ	15854	;# 
 13587   003DEE                     U1P2L           equ	15854	;# 
 13588   003DEF                     U1P2H           equ	15855	;# 
 13589   003DF0                     U1P3            equ	15856	;# 
 13590   003DF0                     U1P3L           equ	15856	;# 
 13591   003DF1                     U1P3H           equ	15857	;# 
 13592   003DF2                     U1CON0          equ	15858	;# 
 13593   003DF3                     U1CON1          equ	15859	;# 
 13594   003DF4                     U1CON2          equ	15860	;# 
 13595   003DF5                     U1BRG           equ	15861	;# 
 13596   003DF5                     U1BRGL          equ	15861	;# 
 13597   003DF6                     U1BRGH          equ	15862	;# 
 13598   003DF7                     U1FIFO          equ	15863	;# 
 13599   003DF8                     U1UIR           equ	15864	;# 
 13600   003DF9                     U1ERRIR         equ	15865	;# 
 13601   003DFA                     U1ERRIE         equ	15866	;# 
 13602   003E9C                     DAC1CON1        equ	16028	;# 
 13603   003E9E                     DAC1CON0        equ	16030	;# 
 13604   003EB8                     CM2CON0         equ	16056	;# 
 13605   003EB9                     CM2CON1         equ	16057	;# 
 13606   003EBA                     CM2NCH          equ	16058	;# 
 13607   003EBB                     CM2PCH          equ	16059	;# 
 13608   003EBC                     CM1CON0         equ	16060	;# 
 13609   003EBD                     CM1CON1         equ	16061	;# 
 13610   003EBE                     CM1NCH          equ	16062	;# 
 13611   003EBF                     CM1PCH          equ	16063	;# 
 13612   003EC0                     CMOUT           equ	16064	;# 
 13613   003EC1                     FVRCON          equ	16065	;# 
 13614   003EC3                     ZCDCON          equ	16067	;# 
 13615   003EC9                     HLVDCON0        equ	16073	;# 
 13616   003ECA                     HLVDCON1        equ	16074	;# 
 13617   003ED7                     ADCP            equ	16087	;# 
 13618   003EDE                     ADLTH           equ	16094	;# 
 13619   003EDE                     ADLTHL          equ	16094	;# 
 13620   003EDF                     ADLTHH          equ	16095	;# 
 13621   003EE0                     ADUTH           equ	16096	;# 
 13622   003EE0                     ADUTHL          equ	16096	;# 
 13623   003EE1                     ADUTHH          equ	16097	;# 
 13624   003EE2                     ADERR           equ	16098	;# 
 13625   003EE2                     ADERRL          equ	16098	;# 
 13626   003EE3                     ADERRH          equ	16099	;# 
 13627   003EE4                     ADSTPT          equ	16100	;# 
 13628   003EE4                     ADSTPTL         equ	16100	;# 
 13629   003EE5                     ADSTPTH         equ	16101	;# 
 13630   003EE6                     ADFLTR          equ	16102	;# 
 13631   003EE6                     ADFLTRL         equ	16102	;# 
 13632   003EE7                     ADFLTRH         equ	16103	;# 
 13633   003EE8                     ADACC           equ	16104	;# 
 13634   003EE8                     ADACCL          equ	16104	;# 
 13635   003EE9                     ADACCH          equ	16105	;# 
 13636   003EEA                     ADACCU          equ	16106	;# 
 13637   003EEB                     ADCNT           equ	16107	;# 
 13638   003EEC                     ADRPT           equ	16108	;# 
 13639   003EED                     ADPREV          equ	16109	;# 
 13640   003EED                     ADPREVL         equ	16109	;# 
 13641   003EEE                     ADPREVH         equ	16110	;# 
 13642   003EEF                     ADRES           equ	16111	;# 
 13643   003EEF                     ADRESL          equ	16111	;# 
 13644   003EF0                     ADRESH          equ	16112	;# 
 13645   003EF1                     ADPCH           equ	16113	;# 
 13646   003EF3                     ADACQ           equ	16115	;# 
 13647   003EF3                     ADACQL          equ	16115	;# 
 13648   003EF4                     ADACQH          equ	16116	;# 
 13649   003EF5                     ADCAP           equ	16117	;# 
 13650   003EF6                     ADPRE           equ	16118	;# 
 13651   003EF6                     ADPREL          equ	16118	;# 
 13652   003EF7                     ADPREH          equ	16119	;# 
 13653   003EF8                     ADCON0          equ	16120	;# 
 13654   003EF9                     ADCON1          equ	16121	;# 
 13655   003EFA                     ADCON2          equ	16122	;# 
 13656   003EFB                     ADCON3          equ	16123	;# 
 13657   003EFC                     ADSTAT          equ	16124	;# 
 13658   003EFD                     ADREF           equ	16125	;# 
 13659   003EFE                     ADACT           equ	16126	;# 
 13660   003EFF                     ADCLK           equ	16127	;# 
 13661   003F12                     SMT1TMR         equ	16146	;# 
 13662   003F12                     SMT1TMRL        equ	16146	;# 
 13663   003F13                     SMT1TMRH        equ	16147	;# 
 13664   003F14                     SMT1TMRU        equ	16148	;# 
 13665   003F15                     SMT1CPR         equ	16149	;# 
 13666   003F15                     SMT1CPRL        equ	16149	;# 
 13667   003F16                     SMT1CPRH        equ	16150	;# 
 13668   003F17                     SMT1CPRU        equ	16151	;# 
 13669   003F18                     SMT1CPW         equ	16152	;# 
 13670   003F18                     SMT1CPWL        equ	16152	;# 
 13671   003F19                     SMT1CPWH        equ	16153	;# 
 13672   003F1A                     SMT1CPWU        equ	16154	;# 
 13673   003F1B                     SMT1PR          equ	16155	;# 
 13674   003F1B                     SMT1PRL         equ	16155	;# 
 13675   003F1C                     SMT1PRH         equ	16156	;# 
 13676   003F1D                     SMT1PRU         equ	16157	;# 
 13677   003F1E                     SMT1CON0        equ	16158	;# 
 13678   003F1F                     SMT1CON1        equ	16159	;# 
 13679   003F20                     SMT1STAT        equ	16160	;# 
 13680   003F21                     SMT1CLK         equ	16161	;# 
 13681   003F22                     SMT1SIG         equ	16162	;# 
 13682   003F23                     SMT1WIN         equ	16163	;# 
 13683   003F38                     NCO1ACC         equ	16184	;# 
 13684   003F38                     NCO1ACCL        equ	16184	;# 
 13685   003F39                     NCO1ACCH        equ	16185	;# 
 13686   003F3A                     NCO1ACCU        equ	16186	;# 
 13687   003F3B                     NCO1INC         equ	16187	;# 
 13688   003F3B                     NCO1INCL        equ	16187	;# 
 13689   003F3C                     NCO1INCH        equ	16188	;# 
 13690   003F3D                     NCO1INCU        equ	16189	;# 
 13691   003F3E                     NCO1CON         equ	16190	;# 
 13692   003F3F                     NCO1CLK         equ	16191	;# 
 13693   003F40                     CWG3CLK         equ	16192	;# 
 13694   003F40                     CWG3CLKCON      equ	16192	;# 
 13695   003F41                     CWG3ISM         equ	16193	;# 
 13696   003F41                     CWG3DAT         equ	16193	;# 
 13697   003F42                     CWG3DBR         equ	16194	;# 
 13698   003F43                     CWG3DBF         equ	16195	;# 
 13699   003F44                     CWG3CON0        equ	16196	;# 
 13700   003F45                     CWG3CON1        equ	16197	;# 
 13701   003F46                     CWG3AS0         equ	16198	;# 
 13702   003F47                     CWG3AS1         equ	16199	;# 
 13703   003F48                     CWG3STR         equ	16200	;# 
 13704   003F49                     CWG2CLK         equ	16201	;# 
 13705   003F49                     CWG2CLKCON      equ	16201	;# 
 13706   003F4A                     CWG2ISM         equ	16202	;# 
 13707   003F4A                     CWG2DAT         equ	16202	;# 
 13708   003F4B                     CWG2DBR         equ	16203	;# 
 13709   003F4C                     CWG2DBF         equ	16204	;# 
 13710   003F4D                     CWG2CON0        equ	16205	;# 
 13711   003F4E                     CWG2CON1        equ	16206	;# 
 13712   003F4F                     CWG2AS0         equ	16207	;# 
 13713   003F50                     CWG2AS1         equ	16208	;# 
 13714   003F51                     CWG2STR         equ	16209	;# 
 13715   003F52                     CWG1CLK         equ	16210	;# 
 13716   003F52                     CWG1CLKCON      equ	16210	;# 
 13717   003F53                     CWG1ISM         equ	16211	;# 
 13718   003F53                     CWG1DAT         equ	16211	;# 
 13719   003F54                     CWG1DBR         equ	16212	;# 
 13720   003F55                     CWG1DBF         equ	16213	;# 
 13721   003F56                     CWG1CON0        equ	16214	;# 
 13722   003F57                     CWG1CON1        equ	16215	;# 
 13723   003F58                     CWG1AS0         equ	16216	;# 
 13724   003F59                     CWG1AS1         equ	16217	;# 
 13725   003F5A                     CWG1STR         equ	16218	;# 
 13726   003F5E                     CCPTMRS0        equ	16222	;# 
 13727   003F5F                     CCPTMRS1        equ	16223	;# 
 13728   003F60                     PWM8DC          equ	16224	;# 
 13729   003F60                     PWM8DCL         equ	16224	;# 
 13730   003F61                     PWM8DCH         equ	16225	;# 
 13731   003F62                     PWM8CON         equ	16226	;# 
 13732   003F64                     PWM7DC          equ	16228	;# 
 13733   003F64                     PWM7DCL         equ	16228	;# 
 13734   003F65                     PWM7DCH         equ	16229	;# 
 13735   003F66                     PWM7CON         equ	16230	;# 
 13736   003F68                     PWM6DC          equ	16232	;# 
 13737   003F68                     PWM6DCL         equ	16232	;# 
 13738   003F69                     PWM6DCH         equ	16233	;# 
 13739   003F6A                     PWM6CON         equ	16234	;# 
 13740   003F6C                     PWM5DC          equ	16236	;# 
 13741   003F6C                     PWM5DCL         equ	16236	;# 
 13742   003F6D                     PWM5DCH         equ	16237	;# 
 13743   003F6E                     PWM5CON         equ	16238	;# 
 13744   003F70                     CCPR4           equ	16240	;# 
 13745   003F70                     CCPR4L          equ	16240	;# 
 13746   003F71                     CCPR4H          equ	16241	;# 
 13747   003F72                     CCP4CON         equ	16242	;# 
 13748   003F73                     CCP4CAP         equ	16243	;# 
 13749   003F74                     CCPR3           equ	16244	;# 
 13750   003F74                     CCPR3L          equ	16244	;# 
 13751   003F75                     CCPR3H          equ	16245	;# 
 13752   003F76                     CCP3CON         equ	16246	;# 
 13753   003F77                     CCP3CAP         equ	16247	;# 
 13754   003F78                     CCPR2           equ	16248	;# 
 13755   003F78                     CCPR2L          equ	16248	;# 
 13756   003F79                     CCPR2H          equ	16249	;# 
 13757   003F7A                     CCP2CON         equ	16250	;# 
 13758   003F7B                     CCP2CAP         equ	16251	;# 
 13759   003F7C                     CCPR1           equ	16252	;# 
 13760   003F7C                     CCPR1L          equ	16252	;# 
 13761   003F7D                     CCPR1H          equ	16253	;# 
 13762   003F7E                     CCP1CON         equ	16254	;# 
 13763   003F7F                     CCP1CAP         equ	16255	;# 
 13764   003F92                     T6TMR           equ	16274	;# 
 13765   003F92                     TMR6            equ	16274	;# 
 13766   003F93                     T6PR            equ	16275	;# 
 13767   003F93                     PR6             equ	16275	;# 
 13768   003F94                     T6CON           equ	16276	;# 
 13769   003F95                     T6HLT           equ	16277	;# 
 13770   003F96                     T6CLKCON        equ	16278	;# 
 13771   003F96                     T6CLK           equ	16278	;# 
 13772   003F97                     T6RST           equ	16279	;# 
 13773   003F98                     TMR5            equ	16280	;# 
 13774   003F98                     TMR5L           equ	16280	;# 
 13775   003F99                     TMR5H           equ	16281	;# 
 13776   003F9A                     T5CON           equ	16282	;# 
 13777   003F9A                     TMR5CON         equ	16282	;# 
 13778   003F9B                     T5GCON          equ	16283	;# 
 13779   003F9B                     TMR5GCON        equ	16283	;# 
 13780   003F9C                     T5GATE          equ	16284	;# 
 13781   003F9C                     TMR5GATE        equ	16284	;# 
 13782   003F9D                     T5CLK           equ	16285	;# 
 13783   003F9D                     TMR5CLK         equ	16285	;# 
 13784   003F9D                     PR5             equ	16285	;# 
 13785   003F9E                     T4TMR           equ	16286	;# 
 13786   003F9E                     TMR4            equ	16286	;# 
 13787   003F9F                     T4PR            equ	16287	;# 
 13788   003F9F                     PR4             equ	16287	;# 
 13789   003FA0                     T4CON           equ	16288	;# 
 13790   003FA1                     T4HLT           equ	16289	;# 
 13791   003FA2                     T4CLKCON        equ	16290	;# 
 13792   003FA2                     T4CLK           equ	16290	;# 
 13793   003FA3                     T4RST           equ	16291	;# 
 13794   003FA4                     TMR3            equ	16292	;# 
 13795   003FA4                     TMR3L           equ	16292	;# 
 13796   003FA5                     TMR3H           equ	16293	;# 
 13797   003FA6                     T3CON           equ	16294	;# 
 13798   003FA6                     TMR3CON         equ	16294	;# 
 13799   003FA7                     T3GCON          equ	16295	;# 
 13800   003FA7                     TMR3GCON        equ	16295	;# 
 13801   003FA8                     T3GATE          equ	16296	;# 
 13802   003FA8                     TMR3GATE        equ	16296	;# 
 13803   003FA9                     T3CLK           equ	16297	;# 
 13804   003FA9                     TMR3CLK         equ	16297	;# 
 13805   003FA9                     PR3             equ	16297	;# 
 13806   003FAA                     T2TMR           equ	16298	;# 
 13807   003FAA                     TMR2            equ	16298	;# 
 13808   003FAB                     T2PR            equ	16299	;# 
 13809   003FAB                     PR2             equ	16299	;# 
 13810   003FAC                     T2CON           equ	16300	;# 
 13811   003FAD                     T2HLT           equ	16301	;# 
 13812   003FAE                     T2CLKCON        equ	16302	;# 
 13813   003FAE                     T2CLK           equ	16302	;# 
 13814   003FAF                     T2RST           equ	16303	;# 
 13815   003FB0                     TMR1            equ	16304	;# 
 13816   003FB0                     TMR1L           equ	16304	;# 
 13817   003FB1                     TMR1H           equ	16305	;# 
 13818   003FB2                     T1CON           equ	16306	;# 
 13819   003FB2                     TMR1CON         equ	16306	;# 
 13820   003FB3                     T1GCON          equ	16307	;# 
 13821   003FB3                     TMR1GCON        equ	16307	;# 
 13822   003FB4                     T1GATE          equ	16308	;# 
 13823   003FB4                     TMR1GATE        equ	16308	;# 
 13824   003FB5                     T1CLK           equ	16309	;# 
 13825   003FB5                     TMR1CLK         equ	16309	;# 
 13826   003FB5                     PR1             equ	16309	;# 
 13827   003FB6                     TMR0L           equ	16310	;# 
 13828   003FB6                     TMR0            equ	16310	;# 
 13829   003FB7                     TMR0H           equ	16311	;# 
 13830   003FB7                     PR0             equ	16311	;# 
 13831   003FB8                     T0CON0          equ	16312	;# 
 13832   003FB9                     T0CON1          equ	16313	;# 
 13833   003FBA                     LATA            equ	16314	;# 
 13834   003FBB                     LATB            equ	16315	;# 
 13835   003FBC                     LATC            equ	16316	;# 
 13836   003FBD                     LATD            equ	16317	;# 
 13837   003FBE                     LATE            equ	16318	;# 
 13838   003FBF                     LATF            equ	16319	;# 
 13839   003FC2                     TRISA           equ	16322	;# 
 13840   003FC3                     TRISB           equ	16323	;# 
 13841   003FC4                     TRISC           equ	16324	;# 
 13842   003FC5                     TRISD           equ	16325	;# 
 13843   003FC6                     TRISE           equ	16326	;# 
 13844   003FC7                     TRISF           equ	16327	;# 
 13845   003FCA                     PORTA           equ	16330	;# 
 13846   003FCB                     PORTB           equ	16331	;# 
 13847   003FCC                     PORTC           equ	16332	;# 
 13848   003FCD                     PORTD           equ	16333	;# 
 13849   003FCE                     PORTE           equ	16334	;# 
 13850   003FCF                     PORTF           equ	16335	;# 
 13851   003FD2                     INTCON0         equ	16338	;# 
 13852   003FD3                     INTCON1         equ	16339	;# 
 13853   003FD4                     IVTLOCK         equ	16340	;# 
 13854   003FD5                     IVTBASE         equ	16341	;# 
 13855   003FD5                     IVTBASEL        equ	16341	;# 
 13856   003FD6                     IVTBASEH        equ	16342	;# 
 13857   003FD7                     IVTBASEU        equ	16343	;# 
 13858   003FD8                     STATUS          equ	16344	;# 
 13859   003FD9                     FSR2            equ	16345	;# 
 13860   003FD9                     FSR2L           equ	16345	;# 
 13861   003FDA                     FSR2H           equ	16346	;# 
 13862   003FDB                     PLUSW2          equ	16347	;# 
 13863   003FDC                     PREINC2         equ	16348	;# 
 13864   003FDD                     POSTDEC2        equ	16349	;# 
 13865   003FDE                     POSTINC2        equ	16350	;# 
 13866   003FDF                     INDF2           equ	16351	;# 
 13867   003FE0                     BSR             equ	16352	;# 
 13868   003FE1                     FSR1            equ	16353	;# 
 13869   003FE1                     FSR1L           equ	16353	;# 
 13870   003FE2                     FSR1H           equ	16354	;# 
 13871   003FE3                     PLUSW1          equ	16355	;# 
 13872   003FE4                     PREINC1         equ	16356	;# 
 13873   003FE5                     POSTDEC1        equ	16357	;# 
 13874   003FE6                     POSTINC1        equ	16358	;# 
 13875   003FE7                     INDF1           equ	16359	;# 
 13876   003FE8                     WREG            equ	16360	;# 
 13877   003FE9                     FSR0            equ	16361	;# 
 13878   003FE9                     FSR0L           equ	16361	;# 
 13879   003FEA                     FSR0H           equ	16362	;# 
 13880   003FEB                     PLUSW0          equ	16363	;# 
 13881   003FEC                     PREINC0         equ	16364	;# 
 13882   003FED                     POSTDEC0        equ	16365	;# 
 13883   003FEE                     POSTINC0        equ	16366	;# 
 13884   003FEF                     INDF0           equ	16367	;# 
 13885   003FF0                     PCON0           equ	16368	;# 
 13886   003FF1                     PCON1           equ	16369	;# 
 13887   003FF3                     PROD            equ	16371	;# 
 13888   003FF3                     PRODL           equ	16371	;# 
 13889   003FF4                     PRODH           equ	16372	;# 
 13890   003FF5                     TABLAT          equ	16373	;# 
 13891   003FF6                     TBLPTR          equ	16374	;# 
 13892   003FF6                     TBLPTRL         equ	16374	;# 
 13893   003FF7                     TBLPTRH         equ	16375	;# 
 13894   003FF8                     TBLPTRU         equ	16376	;# 
 13895   003FF9                     PCLAT           equ	16377	;# 
 13896   003FF9                     PCL             equ	16377	;# 
 13897   003FFA                     PCLATH          equ	16378	;# 
 13898   003FFB                     PCLATU          equ	16379	;# 
 13899   003FFC                     STKPTR          equ	16380	;# 
 13900   003FFD                     TOS             equ	16381	;# 
 13901   003FFD                     TOSL            equ	16381	;# 
 13902   003FFE                     TOSH            equ	16382	;# 
 13903   003FFF                     TOSU            equ	16383	;# 
 13904   003880                     STATUS_CSHAD    equ	14464	;# 
 13905   003881                     WREG_CSHAD      equ	14465	;# 
 13906   003882                     BSR_CSHAD       equ	14466	;# 
 13907   003883                     SHADCON         equ	14467	;# 
 13908   003884                     STATUS_SHAD     equ	14468	;# 
 13909   003885                     WREG_SHAD       equ	14469	;# 
 13910   003886                     BSR_SHAD        equ	14470	;# 
 13911   003887                     PCLATH_SHAD     equ	14471	;# 
 13912   003888                     PCLATU_SHAD     equ	14472	;# 
 13913   003889                     FSR0SH          equ	14473	;# 
 13914   003889                     FSR0L_SHAD      equ	14473	;# 
 13915   00388A                     FSR0H_SHAD      equ	14474	;# 
 13916   00388B                     FSR1SH          equ	14475	;# 
 13917   00388B                     FSR1L_SHAD      equ	14475	;# 
 13918   00388C                     FSR1H_SHAD      equ	14476	;# 
 13919   00388D                     FSR2SH          equ	14477	;# 
 13920   00388D                     FSR2L_SHAD      equ	14477	;# 
 13921   00388E                     FSR2H_SHAD      equ	14478	;# 
 13922   00388F                     PRODSH          equ	14479	;# 
 13923   00388F                     PRODL_SHAD      equ	14479	;# 
 13924   003890                     PRODH_SHAD      equ	14480	;# 
 13925   00389D                     IVTADL          equ	14493	;# 
 13926   00389E                     IVTADH          equ	14494	;# 
 13927   00389F                     IVTADU          equ	14495	;# 
 13928   00395B                     WDTCON0         equ	14683	;# 
 13929   00395C                     WDTCON1         equ	14684	;# 
 13930   00395D                     WDTPSL          equ	14685	;# 
 13931   00395E                     WDTPSH          equ	14686	;# 
 13932   00395F                     WDTTMR          equ	14687	;# 
 13933   003960                     CRCDATA         equ	14688	;# 
 13934   003960                     CRCDATL         equ	14688	;# 
 13935   003961                     CRCDATH         equ	14689	;# 
 13936   003962                     CRCACC          equ	14690	;# 
 13937   003962                     CRCACCL         equ	14690	;# 
 13938   003963                     CRCACCH         equ	14691	;# 
 13939   003964                     CRCSHFT         equ	14692	;# 
 13940   003964                     CRCSHIFTL       equ	14692	;# 
 13941   003965                     CRCSHIFTH       equ	14693	;# 
 13942   003966                     CRCXOR          equ	14694	;# 
 13943   003966                     CRCXORL         equ	14694	;# 
 13944   003967                     CRCXORH         equ	14695	;# 
 13945   003968                     CRCCON0         equ	14696	;# 
 13946   003969                     CRCCON1         equ	14697	;# 
 13947   003976                     SCANLADR        equ	14710	;# 
 13948   003976                     SCANLADRL       equ	14710	;# 
 13949   003977                     SCANLADRH       equ	14711	;# 
 13950   003978                     SCANLADRU       equ	14712	;# 
 13951   003979                     SCANHADR        equ	14713	;# 
 13952   003979                     SCANHADRL       equ	14713	;# 
 13953   00397A                     SCANHADRH       equ	14714	;# 
 13954   00397B                     SCANHADRU       equ	14715	;# 
 13955   00397C                     SCANCON0        equ	14716	;# 
 13956   00397D                     SCANTRIG        equ	14717	;# 
 13957   003980                     IPR0            equ	14720	;# 
 13958   003981                     IPR1            equ	14721	;# 
 13959   003982                     IPR2            equ	14722	;# 
 13960   003983                     IPR3            equ	14723	;# 
 13961   003984                     IPR4            equ	14724	;# 
 13962   003985                     IPR5            equ	14725	;# 
 13963   003986                     IPR6            equ	14726	;# 
 13964   003987                     IPR7            equ	14727	;# 
 13965   003988                     IPR8            equ	14728	;# 
 13966   003989                     IPR9            equ	14729	;# 
 13967   00398A                     IPR10           equ	14730	;# 
 13968   003990                     PIE0            equ	14736	;# 
 13969   003991                     PIE1            equ	14737	;# 
 13970   003992                     PIE2            equ	14738	;# 
 13971   003993                     PIE3            equ	14739	;# 
 13972   003994                     PIE4            equ	14740	;# 
 13973   003995                     PIE5            equ	14741	;# 
 13974   003996                     PIE6            equ	14742	;# 
 13975   003997                     PIE7            equ	14743	;# 
 13976   003998                     PIE8            equ	14744	;# 
 13977   003999                     PIE9            equ	14745	;# 
 13978   00399A                     PIE10           equ	14746	;# 
 13979   0039A0                     PIR0            equ	14752	;# 
 13980   0039A1                     PIR1            equ	14753	;# 
 13981   0039A2                     PIR2            equ	14754	;# 
 13982   0039A3                     PIR3            equ	14755	;# 
 13983   0039A4                     PIR4            equ	14756	;# 
 13984   0039A5                     PIR5            equ	14757	;# 
 13985   0039A6                     PIR6            equ	14758	;# 
 13986   0039A7                     PIR7            equ	14759	;# 
 13987   0039A8                     PIR8            equ	14760	;# 
 13988   0039A9                     PIR9            equ	14761	;# 
 13989   0039AA                     PIR10           equ	14762	;# 
 13990   0039C0                     PMD0            equ	14784	;# 
 13991   0039C1                     PMD1            equ	14785	;# 
 13992   0039C2                     PMD2            equ	14786	;# 
 13993   0039C3                     PMD3            equ	14787	;# 
 13994   0039C4                     PMD4            equ	14788	;# 
 13995   0039C5                     PMD5            equ	14789	;# 
 13996   0039C6                     PMD6            equ	14790	;# 
 13997   0039C7                     PMD7            equ	14791	;# 
 13998   0039D0                     BORCON          equ	14800	;# 
 13999   0039D1                     VREGCON         equ	14801	;# 
 14000   0039D8                     CPUDOZE         equ	14808	;# 
 14001   0039D9                     OSCCON1         equ	14809	;# 
 14002   0039DA                     OSCCON2         equ	14810	;# 
 14003   0039DB                     OSCCON3         equ	14811	;# 
 14004   0039DC                     OSCSTAT         equ	14812	;# 
 14005   0039DC                     OSCSTAT1        equ	14812	;# 
 14006   0039DD                     OSCEN           equ	14813	;# 
 14007   0039DE                     OSCTUNE         equ	14814	;# 
 14008   0039DF                     OSCFRQ          equ	14815	;# 
 14009   0039E0                     NVMADRL         equ	14816	;# 
 14010   0039E1                     NVMADRH         equ	14817	;# 
 14011   0039E3                     NVMDAT          equ	14819	;# 
 14012   0039E5                     NVMCON1         equ	14821	;# 
 14013   0039E6                     NVMCON2         equ	14822	;# 
 14014   0039EF                     PRLOCK          equ	14831	;# 
 14015   0039F1                     ISRPR           equ	14833	;# 
 14016   0039F2                     MAINPR          equ	14834	;# 
 14017   0039F3                     DMA1PR          equ	14835	;# 
 14018   0039F4                     DMA2PR          equ	14836	;# 
 14019   0039F7                     SCANPR          equ	14839	;# 
 14020   003A00                     RA0PPS          equ	14848	;# 
 14021   003A01                     RA1PPS          equ	14849	;# 
 14022   003A02                     RA2PPS          equ	14850	;# 
 14023   003A03                     RA3PPS          equ	14851	;# 
 14024   003A04                     RA4PPS          equ	14852	;# 
 14025   003A05                     RA5PPS          equ	14853	;# 
 14026   003A06                     RA6PPS          equ	14854	;# 
 14027   003A07                     RA7PPS          equ	14855	;# 
 14028   003A08                     RB0PPS          equ	14856	;# 
 14029   003A09                     RB1PPS          equ	14857	;# 
 14030   003A0A                     RB2PPS          equ	14858	;# 
 14031   003A0B                     RB3PPS          equ	14859	;# 
 14032   003A0C                     RB4PPS          equ	14860	;# 
 14033   003A0D                     RB5PPS          equ	14861	;# 
 14034   003A0E                     RB6PPS          equ	14862	;# 
 14035   003A0F                     RB7PPS          equ	14863	;# 
 14036   003A10                     RC0PPS          equ	14864	;# 
 14037   003A11                     RC1PPS          equ	14865	;# 
 14038   003A12                     RC2PPS          equ	14866	;# 
 14039   003A13                     RC3PPS          equ	14867	;# 
 14040   003A14                     RC4PPS          equ	14868	;# 
 14041   003A15                     RC5PPS          equ	14869	;# 
 14042   003A16                     RC6PPS          equ	14870	;# 
 14043   003A17                     RC7PPS          equ	14871	;# 
 14044   003A18                     RD0PPS          equ	14872	;# 
 14045   003A19                     RD1PPS          equ	14873	;# 
 14046   003A1A                     RD2PPS          equ	14874	;# 
 14047   003A1B                     RD3PPS          equ	14875	;# 
 14048   003A1C                     RD4PPS          equ	14876	;# 
 14049   003A1D                     RD5PPS          equ	14877	;# 
 14050   003A1E                     RD6PPS          equ	14878	;# 
 14051   003A1F                     RD7PPS          equ	14879	;# 
 14052   003A20                     RE0PPS          equ	14880	;# 
 14053   003A21                     RE1PPS          equ	14881	;# 
 14054   003A22                     RE2PPS          equ	14882	;# 
 14055   003A28                     RF0PPS          equ	14888	;# 
 14056   003A29                     RF1PPS          equ	14889	;# 
 14057   003A2A                     RF2PPS          equ	14890	;# 
 14058   003A2B                     RF3PPS          equ	14891	;# 
 14059   003A2C                     RF4PPS          equ	14892	;# 
 14060   003A2D                     RF5PPS          equ	14893	;# 
 14061   003A2E                     RF6PPS          equ	14894	;# 
 14062   003A2F                     RF7PPS          equ	14895	;# 
 14063   003A40                     ANSELA          equ	14912	;# 
 14064   003A41                     WPUA            equ	14913	;# 
 14065   003A42                     ODCONA          equ	14914	;# 
 14066   003A43                     SLRCONA         equ	14915	;# 
 14067   003A44                     INLVLA          equ	14916	;# 
 14068   003A45                     IOCAP           equ	14917	;# 
 14069   003A46                     IOCAN           equ	14918	;# 
 14070   003A47                     IOCAF           equ	14919	;# 
 14071   003A50                     ANSELB          equ	14928	;# 
 14072   003A51                     WPUB            equ	14929	;# 
 14073   003A52                     ODCONB          equ	14930	;# 
 14074   003A53                     SLRCONB         equ	14931	;# 
 14075   003A54                     INLVLB          equ	14932	;# 
 14076   003A55                     IOCBP           equ	14933	;# 
 14077   003A56                     IOCBN           equ	14934	;# 
 14078   003A57                     IOCBF           equ	14935	;# 
 14079   003A5A                     RB1I2C          equ	14938	;# 
 14080   003A5B                     RB2I2C          equ	14939	;# 
 14081   003A60                     ANSELC          equ	14944	;# 
 14082   003A61                     WPUC            equ	14945	;# 
 14083   003A62                     ODCONC          equ	14946	;# 
 14084   003A63                     SLRCONC         equ	14947	;# 
 14085   003A64                     INLVLC          equ	14948	;# 
 14086   003A65                     IOCCP           equ	14949	;# 
 14087   003A66                     IOCCN           equ	14950	;# 
 14088   003A67                     IOCCF           equ	14951	;# 
 14089   003A6A                     RC3I2C          equ	14954	;# 
 14090   003A6B                     RC4I2C          equ	14955	;# 
 14091   003A70                     ANSELD          equ	14960	;# 
 14092   003A71                     WPUD            equ	14961	;# 
 14093   003A72                     ODCOND          equ	14962	;# 
 14094   003A73                     SLRCOND         equ	14963	;# 
 14095   003A74                     INLVLD          equ	14964	;# 
 14096   003A7A                     RD0I2C          equ	14970	;# 
 14097   003A7B                     RD1I2C          equ	14971	;# 
 14098   003A80                     ANSELE          equ	14976	;# 
 14099   003A81                     WPUE            equ	14977	;# 
 14100   003A82                     ODCONE          equ	14978	;# 
 14101   003A83                     SLRCONE         equ	14979	;# 
 14102   003A84                     INLVLE          equ	14980	;# 
 14103   003A85                     IOCEP           equ	14981	;# 
 14104   003A86                     IOCEN           equ	14982	;# 
 14105   003A87                     IOCEF           equ	14983	;# 
 14106   003A90                     ANSELF          equ	14992	;# 
 14107   003A91                     WPUF            equ	14993	;# 
 14108   003A92                     ODCONF          equ	14994	;# 
 14109   003A93                     SLRCONF         equ	14995	;# 
 14110   003A94                     INLVLF          equ	14996	;# 
 14111   003ABF                     PPSLOCK         equ	15039	;# 
 14112   003AC0                     INT0PPS         equ	15040	;# 
 14113   003AC1                     INT1PPS         equ	15041	;# 
 14114   003AC2                     INT2PPS         equ	15042	;# 
 14115   003AC3                     T0CKIPPS        equ	15043	;# 
 14116   003AC4                     T1CKIPPS        equ	15044	;# 
 14117   003AC5                     T1GPPS          equ	15045	;# 
 14118   003AC6                     T3CKIPPS        equ	15046	;# 
 14119   003AC7                     T3GPPS          equ	15047	;# 
 14120   003AC8                     T5CKIPPS        equ	15048	;# 
 14121   003AC9                     T5GPPS          equ	15049	;# 
 14122   003ACA                     T2INPPS         equ	15050	;# 
 14123   003ACB                     T4INPPS         equ	15051	;# 
 14124   003ACC                     T6INPPS         equ	15052	;# 
 14125   003ACD                     CCP1PPS         equ	15053	;# 
 14126   003ACE                     CCP2PPS         equ	15054	;# 
 14127   003ACF                     CCP3PPS         equ	15055	;# 
 14128   003AD0                     CCP4PPS         equ	15056	;# 
 14129   003AD1                     SMT1WINPPS      equ	15057	;# 
 14130   003AD2                     SMT1SIGPPS      equ	15058	;# 
 14131   003AD3                     CWG1INPPS       equ	15059	;# 
 14132   003AD4                     CWG2INPPS       equ	15060	;# 
 14133   003AD5                     CWG3INPPS       equ	15061	;# 
 14134   003AD6                     MD1CARLPPS      equ	15062	;# 
 14135   003AD7                     MD1CARHPPS      equ	15063	;# 
 14136   003AD8                     MD1SRCPPS       equ	15064	;# 
 14137   003AD9                     CLCIN0PPS       equ	15065	;# 
 14138   003ADA                     CLCIN1PPS       equ	15066	;# 
 14139   003ADB                     CLCIN2PPS       equ	15067	;# 
 14140   003ADC                     CLCIN3PPS       equ	15068	;# 
 14141   003ADD                     ADACTPPS        equ	15069	;# 
 14142   003ADE                     SPI1SCKPPS      equ	15070	;# 
 14143   003ADF                     SPI1SDIPPS      equ	15071	;# 
 14144   003AE0                     SPI1SSPPS       equ	15072	;# 
 14145   003AE1                     I2C1SCLPPS      equ	15073	;# 
 14146   003AE2                     I2C1SDAPPS      equ	15074	;# 
 14147   003AE3                     I2C2SCLPPS      equ	15075	;# 
 14148   003AE4                     I2C2SDAPPS      equ	15076	;# 
 14149   003AE5                     U1RXPPS         equ	15077	;# 
 14150   003AE6                     U1CTSPPS        equ	15078	;# 
 14151   003AE8                     U2RXPPS         equ	15080	;# 
 14152   003AE9                     U2CTSPPS        equ	15081	;# 
 14153   003BC9                     DMA2BUF         equ	15305	;# 
 14154   003BCA                     DMA2DCNT        equ	15306	;# 
 14155   003BCA                     DMA2DCNTL       equ	15306	;# 
 14156   003BCB                     DMA2DCNTH       equ	15307	;# 
 14157   003BCC                     DMA2DPTR        equ	15308	;# 
 14158   003BCC                     DMA2DPTRL       equ	15308	;# 
 14159   003BCD                     DMA2DPTRH       equ	15309	;# 
 14160   003BCE                     DMA2DSZ         equ	15310	;# 
 14161   003BCE                     DMA2DSZL        equ	15310	;# 
 14162   003BCF                     DMA2DSZH        equ	15311	;# 
 14163   003BD0                     DMA2DSA         equ	15312	;# 
 14164   003BD0                     DMA2DSAL        equ	15312	;# 
 14165   003BD1                     DMA2DSAH        equ	15313	;# 
 14166   003BD2                     DMA2SCNT        equ	15314	;# 
 14167   003BD2                     DMA2SCNTL       equ	15314	;# 
 14168   003BD3                     DMA2SCNTH       equ	15315	;# 
 14169   003BD4                     DMA2SPTR        equ	15316	;# 
 14170   003BD4                     DMA2SPTRL       equ	15316	;# 
 14171   003BD5                     DMA2SPTRH       equ	15317	;# 
 14172   003BD6                     DMA2SPTRU       equ	15318	;# 
 14173   003BD7                     DMA2SSZ         equ	15319	;# 
 14174   003BD7                     DMA2SSZL        equ	15319	;# 
 14175   003BD8                     DMA2SSZH        equ	15320	;# 
 14176   003BD9                     DMA2SSA         equ	15321	;# 
 14177   003BD9                     DMA2SSAL        equ	15321	;# 
 14178   003BDA                     DMA2SSAH        equ	15322	;# 
 14179   003BDB                     DMA2SSAU        equ	15323	;# 
 14180   003BDC                     DMA2CON0        equ	15324	;# 
 14181   003BDD                     DMA2CON1        equ	15325	;# 
 14182   003BDE                     DMA2AIRQ        equ	15326	;# 
 14183   003BDF                     DMA2SIRQ        equ	15327	;# 
 14184   003BE9                     DMA1BUF         equ	15337	;# 
 14185   003BEA                     DMA1DCNT        equ	15338	;# 
 14186   003BEA                     DMA1DCNTL       equ	15338	;# 
 14187   003BEB                     DMA1DCNTH       equ	15339	;# 
 14188   003BEC                     DMA1DPTR        equ	15340	;# 
 14189   003BEC                     DMA1DPTRL       equ	15340	;# 
 14190   003BED                     DMA1DPTRH       equ	15341	;# 
 14191   003BEE                     DMA1DSZ         equ	15342	;# 
 14192   003BEE                     DMA1DSZL        equ	15342	;# 
 14193   003BEF                     DMA1DSZH        equ	15343	;# 
 14194   003BF0                     DMA1DSA         equ	15344	;# 
 14195   003BF0                     DMA1DSAL        equ	15344	;# 
 14196   003BF1                     DMA1DSAH        equ	15345	;# 
 14197   003BF2                     DMA1SCNT        equ	15346	;# 
 14198   003BF2                     DMA1SCNTL       equ	15346	;# 
 14199   003BF3                     DMA1SCNTH       equ	15347	;# 
 14200   003BF4                     DMA1SPTR        equ	15348	;# 
 14201   003BF4                     DMA1SPTRL       equ	15348	;# 
 14202   003BF5                     DMA1SPTRH       equ	15349	;# 
 14203   003BF6                     DMA1SPTRU       equ	15350	;# 
 14204   003BF7                     DMA1SSZ         equ	15351	;# 
 14205   003BF7                     DMA1SSZL        equ	15351	;# 
 14206   003BF8                     DMA1SSZH        equ	15352	;# 
 14207   003BF9                     DMA1SSA         equ	15353	;# 
 14208   003BF9                     DMA1SSAL        equ	15353	;# 
 14209   003BFA                     DMA1SSAH        equ	15354	;# 
 14210   003BFB                     DMA1SSAU        equ	15355	;# 
 14211   003BFC                     DMA1CON0        equ	15356	;# 
 14212   003BFD                     DMA1CON1        equ	15357	;# 
 14213   003BFE                     DMA1AIRQ        equ	15358	;# 
 14214   003BFF                     DMA1SIRQ        equ	15359	;# 
 14215   003C56                     CLC4CON         equ	15446	;# 
 14216   003C57                     CLC4POL         equ	15447	;# 
 14217   003C58                     CLC4SEL0        equ	15448	;# 
 14218   003C59                     CLC4SEL1        equ	15449	;# 
 14219   003C5A                     CLC4SEL2        equ	15450	;# 
 14220   003C5B                     CLC4SEL3        equ	15451	;# 
 14221   003C5C                     CLC4GLS0        equ	15452	;# 
 14222   003C5D                     CLC4GLS1        equ	15453	;# 
 14223   003C5E                     CLC4GLS2        equ	15454	;# 
 14224   003C5F                     CLC4GLS3        equ	15455	;# 
 14225   003C60                     CLC3CON         equ	15456	;# 
 14226   003C61                     CLC3POL         equ	15457	;# 
 14227   003C62                     CLC3SEL0        equ	15458	;# 
 14228   003C63                     CLC3SEL1        equ	15459	;# 
 14229   003C64                     CLC3SEL2        equ	15460	;# 
 14230   003C65                     CLC3SEL3        equ	15461	;# 
 14231   003C66                     CLC3GLS0        equ	15462	;# 
 14232   003C67                     CLC3GLS1        equ	15463	;# 
 14233   003C68                     CLC3GLS2        equ	15464	;# 
 14234   003C69                     CLC3GLS3        equ	15465	;# 
 14235   003C6A                     CLC2CON         equ	15466	;# 
 14236   003C6B                     CLC2POL         equ	15467	;# 
 14237   003C6C                     CLC2SEL0        equ	15468	;# 
 14238   003C6D                     CLC2SEL1        equ	15469	;# 
 14239   003C6E                     CLC2SEL2        equ	15470	;# 
 14240   003C6F                     CLC2SEL3        equ	15471	;# 
 14241   003C70                     CLC2GLS0        equ	15472	;# 
 14242   003C71                     CLC2GLS1        equ	15473	;# 
 14243   003C72                     CLC2GLS2        equ	15474	;# 
 14244   003C73                     CLC2GLS3        equ	15475	;# 
 14245   003C74                     CLC1CON         equ	15476	;# 
 14246   003C75                     CLC1POL         equ	15477	;# 
 14247   003C76                     CLC1SEL0        equ	15478	;# 
 14248   003C77                     CLC1SEL1        equ	15479	;# 
 14249   003C78                     CLC1SEL2        equ	15480	;# 
 14250   003C79                     CLC1SEL3        equ	15481	;# 
 14251   003C7A                     CLC1GLS0        equ	15482	;# 
 14252   003C7B                     CLC1GLS1        equ	15483	;# 
 14253   003C7C                     CLC1GLS2        equ	15484	;# 
 14254   003C7D                     CLC1GLS3        equ	15485	;# 
 14255   003C7E                     CLCDATA0        equ	15486	;# 
 14256   003CE5                     CLKRCON         equ	15589	;# 
 14257   003CE6                     CLKRCLK         equ	15590	;# 
 14258   003CFA                     MD1CON0         equ	15610	;# 
 14259   003CFB                     MD1CON1         equ	15611	;# 
 14260   003CFC                     MD1SRC          equ	15612	;# 
 14261   003CFD                     MD1CARL         equ	15613	;# 
 14262   003CFE                     MD1CARH         equ	15614	;# 
 14263   003D10                     SPI1RXB         equ	15632	;# 
 14264   003D11                     SPI1TXB         equ	15633	;# 
 14265   003D12                     SPI1TCNT        equ	15634	;# 
 14266   003D12                     SPI1TCNTL       equ	15634	;# 
 14267   003D13                     SPI1TCNTH       equ	15635	;# 
 14268   003D14                     SPI1CON0        equ	15636	;# 
 14269   003D15                     SPI1CON1        equ	15637	;# 
 14270   003D16                     SPI1CON2        equ	15638	;# 
 14271   003D17                     SPI1STATUS      equ	15639	;# 
 14272   003D18                     SPI1TWIDTH      equ	15640	;# 
 14273   003D19                     SPI1BAUD        equ	15641	;# 
 14274   003D1A                     SPI1INTF        equ	15642	;# 
 14275   003D1B                     SPI1INTE        equ	15643	;# 
 14276   003D1C                     SPI1CLK         equ	15644	;# 
 14277   003D54                     I2C2RXB         equ	15700	;# 
 14278   003D55                     I2C2TXB         equ	15701	;# 
 14279   003D56                     I2C2CNT         equ	15702	;# 
 14280   003D57                     I2C2ADB0        equ	15703	;# 
 14281   003D58                     I2C2ADB1        equ	15704	;# 
 14282   003D59                     I2C2ADR0        equ	15705	;# 
 14283   003D5A                     I2C2ADR1        equ	15706	;# 
 14284   003D5B                     I2C2ADR2        equ	15707	;# 
 14285   003D5C                     I2C2ADR3        equ	15708	;# 
 14286   003D5D                     I2C2CON0        equ	15709	;# 
 14287   003D5E                     I2C2CON1        equ	15710	;# 
 14288   003D5F                     I2C2CON2        equ	15711	;# 
 14289   003D60                     I2C2ERR         equ	15712	;# 
 14290   003D61                     I2C2STAT0       equ	15713	;# 
 14291   003D62                     I2C2STAT1       equ	15714	;# 
 14292   003D63                     I2C2PIR         equ	15715	;# 
 14293   003D64                     I2C2PIE         equ	15716	;# 
 14294   003D65                     I2C2CLK         equ	15717	;# 
 14295   003D66                     I2C2BTO         equ	15718	;# 
 14296   003D6A                     I2C1RXB         equ	15722	;# 
 14297   003D6B                     I2C1TXB         equ	15723	;# 
 14298   003D6C                     I2C1CNT         equ	15724	;# 
 14299   003D6D                     I2C1ADB0        equ	15725	;# 
 14300   003D6E                     I2C1ADB1        equ	15726	;# 
 14301   003D6F                     I2C1ADR0        equ	15727	;# 
 14302   003D70                     I2C1ADR1        equ	15728	;# 
 14303   003D71                     I2C1ADR2        equ	15729	;# 
 14304   003D72                     I2C1ADR3        equ	15730	;# 
 14305   003D73                     I2C1CON0        equ	15731	;# 
 14306   003D74                     I2C1CON1        equ	15732	;# 
 14307   003D75                     I2C1CON2        equ	15733	;# 
 14308   003D76                     I2C1ERR         equ	15734	;# 
 14309   003D77                     I2C1STAT0       equ	15735	;# 
 14310   003D78                     I2C1STAT1       equ	15736	;# 
 14311   003D79                     I2C1PIR         equ	15737	;# 
 14312   003D7A                     I2C1PIE         equ	15738	;# 
 14313   003D7B                     I2C1CLK         equ	15739	;# 
 14314   003D7C                     I2C1BTO         equ	15740	;# 
 14315   003DD0                     U2RXB           equ	15824	;# 
 14316   003DD0                     U2RXBL          equ	15824	;# 
 14317   003DD2                     U2TXB           equ	15826	;# 
 14318   003DD2                     U2TXBL          equ	15826	;# 
 14319   003DD4                     U2P1            equ	15828	;# 
 14320   003DD4                     U2P1L           equ	15828	;# 
 14321   003DD6                     U2P2            equ	15830	;# 
 14322   003DD6                     U2P2L           equ	15830	;# 
 14323   003DD8                     U2P3            equ	15832	;# 
 14324   003DD8                     U2P3L           equ	15832	;# 
 14325   003DDA                     U2CON0          equ	15834	;# 
 14326   003DDB                     U2CON1          equ	15835	;# 
 14327   003DDC                     U2CON2          equ	15836	;# 
 14328   003DDD                     U2BRG           equ	15837	;# 
 14329   003DDD                     U2BRGL          equ	15837	;# 
 14330   003DDE                     U2BRGH          equ	15838	;# 
 14331   003DDF                     U2FIFO          equ	15839	;# 
 14332   003DE0                     U2UIR           equ	15840	;# 
 14333   003DE1                     U2ERRIR         equ	15841	;# 
 14334   003DE2                     U2ERRIE         equ	15842	;# 
 14335   003DE8                     U1RXB           equ	15848	;# 
 14336   003DE8                     U1RXBL          equ	15848	;# 
 14337   003DE9                     U1RXCHK         equ	15849	;# 
 14338   003DEA                     U1TXB           equ	15850	;# 
 14339   003DEA                     U1TXBL          equ	15850	;# 
 14340   003DEB                     U1TXCHK         equ	15851	;# 
 14341   003DEC                     U1P1            equ	15852	;# 
 14342   003DEC                     U1P1L           equ	15852	;# 
 14343   003DED                     U1P1H           equ	15853	;# 
 14344   003DEE                     U1P2            equ	15854	;# 
 14345   003DEE                     U1P2L           equ	15854	;# 
 14346   003DEF                     U1P2H           equ	15855	;# 
 14347   003DF0                     U1P3            equ	15856	;# 
 14348   003DF0                     U1P3L           equ	15856	;# 
 14349   003DF1                     U1P3H           equ	15857	;# 
 14350   003DF2                     U1CON0          equ	15858	;# 
 14351   003DF3                     U1CON1          equ	15859	;# 
 14352   003DF4                     U1CON2          equ	15860	;# 
 14353   003DF5                     U1BRG           equ	15861	;# 
 14354   003DF5                     U1BRGL          equ	15861	;# 
 14355   003DF6                     U1BRGH          equ	15862	;# 
 14356   003DF7                     U1FIFO          equ	15863	;# 
 14357   003DF8                     U1UIR           equ	15864	;# 
 14358   003DF9                     U1ERRIR         equ	15865	;# 
 14359   003DFA                     U1ERRIE         equ	15866	;# 
 14360   003E9C                     DAC1CON1        equ	16028	;# 
 14361   003E9E                     DAC1CON0        equ	16030	;# 
 14362   003EB8                     CM2CON0         equ	16056	;# 
 14363   003EB9                     CM2CON1         equ	16057	;# 
 14364   003EBA                     CM2NCH          equ	16058	;# 
 14365   003EBB                     CM2PCH          equ	16059	;# 
 14366   003EBC                     CM1CON0         equ	16060	;# 
 14367   003EBD                     CM1CON1         equ	16061	;# 
 14368   003EBE                     CM1NCH          equ	16062	;# 
 14369   003EBF                     CM1PCH          equ	16063	;# 
 14370   003EC0                     CMOUT           equ	16064	;# 
 14371   003EC1                     FVRCON          equ	16065	;# 
 14372   003EC3                     ZCDCON          equ	16067	;# 
 14373   003EC9                     HLVDCON0        equ	16073	;# 
 14374   003ECA                     HLVDCON1        equ	16074	;# 
 14375   003ED7                     ADCP            equ	16087	;# 
 14376   003EDE                     ADLTH           equ	16094	;# 
 14377   003EDE                     ADLTHL          equ	16094	;# 
 14378   003EDF                     ADLTHH          equ	16095	;# 
 14379   003EE0                     ADUTH           equ	16096	;# 
 14380   003EE0                     ADUTHL          equ	16096	;# 
 14381   003EE1                     ADUTHH          equ	16097	;# 
 14382   003EE2                     ADERR           equ	16098	;# 
 14383   003EE2                     ADERRL          equ	16098	;# 
 14384   003EE3                     ADERRH          equ	16099	;# 
 14385   003EE4                     ADSTPT          equ	16100	;# 
 14386   003EE4                     ADSTPTL         equ	16100	;# 
 14387   003EE5                     ADSTPTH         equ	16101	;# 
 14388   003EE6                     ADFLTR          equ	16102	;# 
 14389   003EE6                     ADFLTRL         equ	16102	;# 
 14390   003EE7                     ADFLTRH         equ	16103	;# 
 14391   003EE8                     ADACC           equ	16104	;# 
 14392   003EE8                     ADACCL          equ	16104	;# 
 14393   003EE9                     ADACCH          equ	16105	;# 
 14394   003EEA                     ADACCU          equ	16106	;# 
 14395   003EEB                     ADCNT           equ	16107	;# 
 14396   003EEC                     ADRPT           equ	16108	;# 
 14397   003EED                     ADPREV          equ	16109	;# 
 14398   003EED                     ADPREVL         equ	16109	;# 
 14399   003EEE                     ADPREVH         equ	16110	;# 
 14400   003EEF                     ADRES           equ	16111	;# 
 14401   003EEF                     ADRESL          equ	16111	;# 
 14402   003EF0                     ADRESH          equ	16112	;# 
 14403   003EF1                     ADPCH           equ	16113	;# 
 14404   003EF3                     ADACQ           equ	16115	;# 
 14405   003EF3                     ADACQL          equ	16115	;# 
 14406   003EF4                     ADACQH          equ	16116	;# 
 14407   003EF5                     ADCAP           equ	16117	;# 
 14408   003EF6                     ADPRE           equ	16118	;# 
 14409   003EF6                     ADPREL          equ	16118	;# 
 14410   003EF7                     ADPREH          equ	16119	;# 
 14411   003EF8                     ADCON0          equ	16120	;# 
 14412   003EF9                     ADCON1          equ	16121	;# 
 14413   003EFA                     ADCON2          equ	16122	;# 
 14414   003EFB                     ADCON3          equ	16123	;# 
 14415   003EFC                     ADSTAT          equ	16124	;# 
 14416   003EFD                     ADREF           equ	16125	;# 
 14417   003EFE                     ADACT           equ	16126	;# 
 14418   003EFF                     ADCLK           equ	16127	;# 
 14419   003F12                     SMT1TMR         equ	16146	;# 
 14420   003F12                     SMT1TMRL        equ	16146	;# 
 14421   003F13                     SMT1TMRH        equ	16147	;# 
 14422   003F14                     SMT1TMRU        equ	16148	;# 
 14423   003F15                     SMT1CPR         equ	16149	;# 
 14424   003F15                     SMT1CPRL        equ	16149	;# 
 14425   003F16                     SMT1CPRH        equ	16150	;# 
 14426   003F17                     SMT1CPRU        equ	16151	;# 
 14427   003F18                     SMT1CPW         equ	16152	;# 
 14428   003F18                     SMT1CPWL        equ	16152	;# 
 14429   003F19                     SMT1CPWH        equ	16153	;# 
 14430   003F1A                     SMT1CPWU        equ	16154	;# 
 14431   003F1B                     SMT1PR          equ	16155	;# 
 14432   003F1B                     SMT1PRL         equ	16155	;# 
 14433   003F1C                     SMT1PRH         equ	16156	;# 
 14434   003F1D                     SMT1PRU         equ	16157	;# 
 14435   003F1E                     SMT1CON0        equ	16158	;# 
 14436   003F1F                     SMT1CON1        equ	16159	;# 
 14437   003F20                     SMT1STAT        equ	16160	;# 
 14438   003F21                     SMT1CLK         equ	16161	;# 
 14439   003F22                     SMT1SIG         equ	16162	;# 
 14440   003F23                     SMT1WIN         equ	16163	;# 
 14441   003F38                     NCO1ACC         equ	16184	;# 
 14442   003F38                     NCO1ACCL        equ	16184	;# 
 14443   003F39                     NCO1ACCH        equ	16185	;# 
 14444   003F3A                     NCO1ACCU        equ	16186	;# 
 14445   003F3B                     NCO1INC         equ	16187	;# 
 14446   003F3B                     NCO1INCL        equ	16187	;# 
 14447   003F3C                     NCO1INCH        equ	16188	;# 
 14448   003F3D                     NCO1INCU        equ	16189	;# 
 14449   003F3E                     NCO1CON         equ	16190	;# 
 14450   003F3F                     NCO1CLK         equ	16191	;# 
 14451   003F40                     CWG3CLK         equ	16192	;# 
 14452   003F40                     CWG3CLKCON      equ	16192	;# 
 14453   003F41                     CWG3ISM         equ	16193	;# 
 14454   003F41                     CWG3DAT         equ	16193	;# 
 14455   003F42                     CWG3DBR         equ	16194	;# 
 14456   003F43                     CWG3DBF         equ	16195	;# 
 14457   003F44                     CWG3CON0        equ	16196	;# 
 14458   003F45                     CWG3CON1        equ	16197	;# 
 14459   003F46                     CWG3AS0         equ	16198	;# 
 14460   003F47                     CWG3AS1         equ	16199	;# 
 14461   003F48                     CWG3STR         equ	16200	;# 
 14462   003F49                     CWG2CLK         equ	16201	;# 
 14463   003F49                     CWG2CLKCON      equ	16201	;# 
 14464   003F4A                     CWG2ISM         equ	16202	;# 
 14465   003F4A                     CWG2DAT         equ	16202	;# 
 14466   003F4B                     CWG2DBR         equ	16203	;# 
 14467   003F4C                     CWG2DBF         equ	16204	;# 
 14468   003F4D                     CWG2CON0        equ	16205	;# 
 14469   003F4E                     CWG2CON1        equ	16206	;# 
 14470   003F4F                     CWG2AS0         equ	16207	;# 
 14471   003F50                     CWG2AS1         equ	16208	;# 
 14472   003F51                     CWG2STR         equ	16209	;# 
 14473   003F52                     CWG1CLK         equ	16210	;# 
 14474   003F52                     CWG1CLKCON      equ	16210	;# 
 14475   003F53                     CWG1ISM         equ	16211	;# 
 14476   003F53                     CWG1DAT         equ	16211	;# 
 14477   003F54                     CWG1DBR         equ	16212	;# 
 14478   003F55                     CWG1DBF         equ	16213	;# 
 14479   003F56                     CWG1CON0        equ	16214	;# 
 14480   003F57                     CWG1CON1        equ	16215	;# 
 14481   003F58                     CWG1AS0         equ	16216	;# 
 14482   003F59                     CWG1AS1         equ	16217	;# 
 14483   003F5A                     CWG1STR         equ	16218	;# 
 14484   003F5E                     CCPTMRS0        equ	16222	;# 
 14485   003F5F                     CCPTMRS1        equ	16223	;# 
 14486   003F60                     PWM8DC          equ	16224	;# 
 14487   003F60                     PWM8DCL         equ	16224	;# 
 14488   003F61                     PWM8DCH         equ	16225	;# 
 14489   003F62                     PWM8CON         equ	16226	;# 
 14490   003F64                     PWM7DC          equ	16228	;# 
 14491   003F64                     PWM7DCL         equ	16228	;# 
 14492   003F65                     PWM7DCH         equ	16229	;# 
 14493   003F66                     PWM7CON         equ	16230	;# 
 14494   003F68                     PWM6DC          equ	16232	;# 
 14495   003F68                     PWM6DCL         equ	16232	;# 
 14496   003F69                     PWM6DCH         equ	16233	;# 
 14497   003F6A                     PWM6CON         equ	16234	;# 
 14498   003F6C                     PWM5DC          equ	16236	;# 
 14499   003F6C                     PWM5DCL         equ	16236	;# 
 14500   003F6D                     PWM5DCH         equ	16237	;# 
 14501   003F6E                     PWM5CON         equ	16238	;# 
 14502   003F70                     CCPR4           equ	16240	;# 
 14503   003F70                     CCPR4L          equ	16240	;# 
 14504   003F71                     CCPR4H          equ	16241	;# 
 14505   003F72                     CCP4CON         equ	16242	;# 
 14506   003F73                     CCP4CAP         equ	16243	;# 
 14507   003F74                     CCPR3           equ	16244	;# 
 14508   003F74                     CCPR3L          equ	16244	;# 
 14509   003F75                     CCPR3H          equ	16245	;# 
 14510   003F76                     CCP3CON         equ	16246	;# 
 14511   003F77                     CCP3CAP         equ	16247	;# 
 14512   003F78                     CCPR2           equ	16248	;# 
 14513   003F78                     CCPR2L          equ	16248	;# 
 14514   003F79                     CCPR2H          equ	16249	;# 
 14515   003F7A                     CCP2CON         equ	16250	;# 
 14516   003F7B                     CCP2CAP         equ	16251	;# 
 14517   003F7C                     CCPR1           equ	16252	;# 
 14518   003F7C                     CCPR1L          equ	16252	;# 
 14519   003F7D                     CCPR1H          equ	16253	;# 
 14520   003F7E                     CCP1CON         equ	16254	;# 
 14521   003F7F                     CCP1CAP         equ	16255	;# 
 14522   003F92                     T6TMR           equ	16274	;# 
 14523   003F92                     TMR6            equ	16274	;# 
 14524   003F93                     T6PR            equ	16275	;# 
 14525   003F93                     PR6             equ	16275	;# 
 14526   003F94                     T6CON           equ	16276	;# 
 14527   003F95                     T6HLT           equ	16277	;# 
 14528   003F96                     T6CLKCON        equ	16278	;# 
 14529   003F96                     T6CLK           equ	16278	;# 
 14530   003F97                     T6RST           equ	16279	;# 
 14531   003F98                     TMR5            equ	16280	;# 
 14532   003F98                     TMR5L           equ	16280	;# 
 14533   003F99                     TMR5H           equ	16281	;# 
 14534   003F9A                     T5CON           equ	16282	;# 
 14535   003F9A                     TMR5CON         equ	16282	;# 
 14536   003F9B                     T5GCON          equ	16283	;# 
 14537   003F9B                     TMR5GCON        equ	16283	;# 
 14538   003F9C                     T5GATE          equ	16284	;# 
 14539   003F9C                     TMR5GATE        equ	16284	;# 
 14540   003F9D                     T5CLK           equ	16285	;# 
 14541   003F9D                     TMR5CLK         equ	16285	;# 
 14542   003F9D                     PR5             equ	16285	;# 
 14543   003F9E                     T4TMR           equ	16286	;# 
 14544   003F9E                     TMR4            equ	16286	;# 
 14545   003F9F                     T4PR            equ	16287	;# 
 14546   003F9F                     PR4             equ	16287	;# 
 14547   003FA0                     T4CON           equ	16288	;# 
 14548   003FA1                     T4HLT           equ	16289	;# 
 14549   003FA2                     T4CLKCON        equ	16290	;# 
 14550   003FA2                     T4CLK           equ	16290	;# 
 14551   003FA3                     T4RST           equ	16291	;# 
 14552   003FA4                     TMR3            equ	16292	;# 
 14553   003FA4                     TMR3L           equ	16292	;# 
 14554   003FA5                     TMR3H           equ	16293	;# 
 14555   003FA6                     T3CON           equ	16294	;# 
 14556   003FA6                     TMR3CON         equ	16294	;# 
 14557   003FA7                     T3GCON          equ	16295	;# 
 14558   003FA7                     TMR3GCON        equ	16295	;# 
 14559   003FA8                     T3GATE          equ	16296	;# 
 14560   003FA8                     TMR3GATE        equ	16296	;# 
 14561   003FA9                     T3CLK           equ	16297	;# 
 14562   003FA9                     TMR3CLK         equ	16297	;# 
 14563   003FA9                     PR3             equ	16297	;# 
 14564   003FAA                     T2TMR           equ	16298	;# 
 14565   003FAA                     TMR2            equ	16298	;# 
 14566   003FAB                     T2PR            equ	16299	;# 
 14567   003FAB                     PR2             equ	16299	;# 
 14568   003FAC                     T2CON           equ	16300	;# 
 14569   003FAD                     T2HLT           equ	16301	;# 
 14570   003FAE                     T2CLKCON        equ	16302	;# 
 14571   003FAE                     T2CLK           equ	16302	;# 
 14572   003FAF                     T2RST           equ	16303	;# 
 14573   003FB0                     TMR1            equ	16304	;# 
 14574   003FB0                     TMR1L           equ	16304	;# 
 14575   003FB1                     TMR1H           equ	16305	;# 
 14576   003FB2                     T1CON           equ	16306	;# 
 14577   003FB2                     TMR1CON         equ	16306	;# 
 14578   003FB3                     T1GCON          equ	16307	;# 
 14579   003FB3                     TMR1GCON        equ	16307	;# 
 14580   003FB4                     T1GATE          equ	16308	;# 
 14581   003FB4                     TMR1GATE        equ	16308	;# 
 14582   003FB5                     T1CLK           equ	16309	;# 
 14583   003FB5                     TMR1CLK         equ	16309	;# 
 14584   003FB5                     PR1             equ	16309	;# 
 14585   003FB6                     TMR0L           equ	16310	;# 
 14586   003FB6                     TMR0            equ	16310	;# 
 14587   003FB7                     TMR0H           equ	16311	;# 
 14588   003FB7                     PR0             equ	16311	;# 
 14589   003FB8                     T0CON0          equ	16312	;# 
 14590   003FB9                     T0CON1          equ	16313	;# 
 14591   003FBA                     LATA            equ	16314	;# 
 14592   003FBB                     LATB            equ	16315	;# 
 14593   003FBC                     LATC            equ	16316	;# 
 14594   003FBD                     LATD            equ	16317	;# 
 14595   003FBE                     LATE            equ	16318	;# 
 14596   003FBF                     LATF            equ	16319	;# 
 14597   003FC2                     TRISA           equ	16322	;# 
 14598   003FC3                     TRISB           equ	16323	;# 
 14599   003FC4                     TRISC           equ	16324	;# 
 14600   003FC5                     TRISD           equ	16325	;# 
 14601   003FC6                     TRISE           equ	16326	;# 
 14602   003FC7                     TRISF           equ	16327	;# 
 14603   003FCA                     PORTA           equ	16330	;# 
 14604   003FCB                     PORTB           equ	16331	;# 
 14605   003FCC                     PORTC           equ	16332	;# 
 14606   003FCD                     PORTD           equ	16333	;# 
 14607   003FCE                     PORTE           equ	16334	;# 
 14608   003FCF                     PORTF           equ	16335	;# 
 14609   003FD2                     INTCON0         equ	16338	;# 
 14610   003FD3                     INTCON1         equ	16339	;# 
 14611   003FD4                     IVTLOCK         equ	16340	;# 
 14612   003FD5                     IVTBASE         equ	16341	;# 
 14613   003FD5                     IVTBASEL        equ	16341	;# 
 14614   003FD6                     IVTBASEH        equ	16342	;# 
 14615   003FD7                     IVTBASEU        equ	16343	;# 
 14616   003FD8                     STATUS          equ	16344	;# 
 14617   003FD9                     FSR2            equ	16345	;# 
 14618   003FD9                     FSR2L           equ	16345	;# 
 14619   003FDA                     FSR2H           equ	16346	;# 
 14620   003FDB                     PLUSW2          equ	16347	;# 
 14621   003FDC                     PREINC2         equ	16348	;# 
 14622   003FDD                     POSTDEC2        equ	16349	;# 
 14623   003FDE                     POSTINC2        equ	16350	;# 
 14624   003FDF                     INDF2           equ	16351	;# 
 14625   003FE0                     BSR             equ	16352	;# 
 14626   003FE1                     FSR1            equ	16353	;# 
 14627   003FE1                     FSR1L           equ	16353	;# 
 14628   003FE2                     FSR1H           equ	16354	;# 
 14629   003FE3                     PLUSW1          equ	16355	;# 
 14630   003FE4                     PREINC1         equ	16356	;# 
 14631   003FE5                     POSTDEC1        equ	16357	;# 
 14632   003FE6                     POSTINC1        equ	16358	;# 
 14633   003FE7                     INDF1           equ	16359	;# 
 14634   003FE8                     WREG            equ	16360	;# 
 14635   003FE9                     FSR0            equ	16361	;# 
 14636   003FE9                     FSR0L           equ	16361	;# 
 14637   003FEA                     FSR0H           equ	16362	;# 
 14638   003FEB                     PLUSW0          equ	16363	;# 
 14639   003FEC                     PREINC0         equ	16364	;# 
 14640   003FED                     POSTDEC0        equ	16365	;# 
 14641   003FEE                     POSTINC0        equ	16366	;# 
 14642   003FEF                     INDF0           equ	16367	;# 
 14643   003FF0                     PCON0           equ	16368	;# 
 14644   003FF1                     PCON1           equ	16369	;# 
 14645   003FF3                     PROD            equ	16371	;# 
 14646   003FF3                     PRODL           equ	16371	;# 
 14647   003FF4                     PRODH           equ	16372	;# 
 14648   003FF5                     TABLAT          equ	16373	;# 
 14649   003FF6                     TBLPTR          equ	16374	;# 
 14650   003FF6                     TBLPTRL         equ	16374	;# 
 14651   003FF7                     TBLPTRH         equ	16375	;# 
 14652   003FF8                     TBLPTRU         equ	16376	;# 
 14653   003FF9                     PCLAT           equ	16377	;# 
 14654   003FF9                     PCL             equ	16377	;# 
 14655   003FFA                     PCLATH          equ	16378	;# 
 14656   003FFB                     PCLATU          equ	16379	;# 
 14657   003FFC                     STKPTR          equ	16380	;# 
 14658   003FFD                     TOS             equ	16381	;# 
 14659   003FFD                     TOSL            equ	16381	;# 
 14660   003FFE                     TOSH            equ	16382	;# 
 14661   003FFF                     TOSU            equ	16383	;# 
 14662   003880                     STATUS_CSHAD    equ	14464	;# 
 14663   003881                     WREG_CSHAD      equ	14465	;# 
 14664   003882                     BSR_CSHAD       equ	14466	;# 
 14665   003883                     SHADCON         equ	14467	;# 
 14666   003884                     STATUS_SHAD     equ	14468	;# 
 14667   003885                     WREG_SHAD       equ	14469	;# 
 14668   003886                     BSR_SHAD        equ	14470	;# 
 14669   003887                     PCLATH_SHAD     equ	14471	;# 
 14670   003888                     PCLATU_SHAD     equ	14472	;# 
 14671   003889                     FSR0SH          equ	14473	;# 
 14672   003889                     FSR0L_SHAD      equ	14473	;# 
 14673   00388A                     FSR0H_SHAD      equ	14474	;# 
 14674   00388B                     FSR1SH          equ	14475	;# 
 14675   00388B                     FSR1L_SHAD      equ	14475	;# 
 14676   00388C                     FSR1H_SHAD      equ	14476	;# 
 14677   00388D                     FSR2SH          equ	14477	;# 
 14678   00388D                     FSR2L_SHAD      equ	14477	;# 
 14679   00388E                     FSR2H_SHAD      equ	14478	;# 
 14680   00388F                     PRODSH          equ	14479	;# 
 14681   00388F                     PRODL_SHAD      equ	14479	;# 
 14682   003890                     PRODH_SHAD      equ	14480	;# 
 14683   00389D                     IVTADL          equ	14493	;# 
 14684   00389E                     IVTADH          equ	14494	;# 
 14685   00389F                     IVTADU          equ	14495	;# 
 14686   00395B                     WDTCON0         equ	14683	;# 
 14687   00395C                     WDTCON1         equ	14684	;# 
 14688   00395D                     WDTPSL          equ	14685	;# 
 14689   00395E                     WDTPSH          equ	14686	;# 
 14690   00395F                     WDTTMR          equ	14687	;# 
 14691   003960                     CRCDATA         equ	14688	;# 
 14692   003960                     CRCDATL         equ	14688	;# 
 14693   003961                     CRCDATH         equ	14689	;# 
 14694   003962                     CRCACC          equ	14690	;# 
 14695   003962                     CRCACCL         equ	14690	;# 
 14696   003963                     CRCACCH         equ	14691	;# 
 14697   003964                     CRCSHFT         equ	14692	;# 
 14698   003964                     CRCSHIFTL       equ	14692	;# 
 14699   003965                     CRCSHIFTH       equ	14693	;# 
 14700   003966                     CRCXOR          equ	14694	;# 
 14701   003966                     CRCXORL         equ	14694	;# 
 14702   003967                     CRCXORH         equ	14695	;# 
 14703   003968                     CRCCON0         equ	14696	;# 
 14704   003969                     CRCCON1         equ	14697	;# 
 14705   003976                     SCANLADR        equ	14710	;# 
 14706   003976                     SCANLADRL       equ	14710	;# 
 14707   003977                     SCANLADRH       equ	14711	;# 
 14708   003978                     SCANLADRU       equ	14712	;# 
 14709   003979                     SCANHADR        equ	14713	;# 
 14710   003979                     SCANHADRL       equ	14713	;# 
 14711   00397A                     SCANHADRH       equ	14714	;# 
 14712   00397B                     SCANHADRU       equ	14715	;# 
 14713   00397C                     SCANCON0        equ	14716	;# 
 14714   00397D                     SCANTRIG        equ	14717	;# 
 14715   003980                     IPR0            equ	14720	;# 
 14716   003981                     IPR1            equ	14721	;# 
 14717   003982                     IPR2            equ	14722	;# 
 14718   003983                     IPR3            equ	14723	;# 
 14719   003984                     IPR4            equ	14724	;# 
 14720   003985                     IPR5            equ	14725	;# 
 14721   003986                     IPR6            equ	14726	;# 
 14722   003987                     IPR7            equ	14727	;# 
 14723   003988                     IPR8            equ	14728	;# 
 14724   003989                     IPR9            equ	14729	;# 
 14725   00398A                     IPR10           equ	14730	;# 
 14726   003990                     PIE0            equ	14736	;# 
 14727   003991                     PIE1            equ	14737	;# 
 14728   003992                     PIE2            equ	14738	;# 
 14729   003993                     PIE3            equ	14739	;# 
 14730   003994                     PIE4            equ	14740	;# 
 14731   003995                     PIE5            equ	14741	;# 
 14732   003996                     PIE6            equ	14742	;# 
 14733   003997                     PIE7            equ	14743	;# 
 14734   003998                     PIE8            equ	14744	;# 
 14735   003999                     PIE9            equ	14745	;# 
 14736   00399A                     PIE10           equ	14746	;# 
 14737   0039A0                     PIR0            equ	14752	;# 
 14738   0039A1                     PIR1            equ	14753	;# 
 14739   0039A2                     PIR2            equ	14754	;# 
 14740   0039A3                     PIR3            equ	14755	;# 
 14741   0039A4                     PIR4            equ	14756	;# 
 14742   0039A5                     PIR5            equ	14757	;# 
 14743   0039A6                     PIR6            equ	14758	;# 
 14744   0039A7                     PIR7            equ	14759	;# 
 14745   0039A8                     PIR8            equ	14760	;# 
 14746   0039A9                     PIR9            equ	14761	;# 
 14747   0039AA                     PIR10           equ	14762	;# 
 14748   0039C0                     PMD0            equ	14784	;# 
 14749   0039C1                     PMD1            equ	14785	;# 
 14750   0039C2                     PMD2            equ	14786	;# 
 14751   0039C3                     PMD3            equ	14787	;# 
 14752   0039C4                     PMD4            equ	14788	;# 
 14753   0039C5                     PMD5            equ	14789	;# 
 14754   0039C6                     PMD6            equ	14790	;# 
 14755   0039C7                     PMD7            equ	14791	;# 
 14756   0039D0                     BORCON          equ	14800	;# 
 14757   0039D1                     VREGCON         equ	14801	;# 
 14758   0039D8                     CPUDOZE         equ	14808	;# 
 14759   0039D9                     OSCCON1         equ	14809	;# 
 14760   0039DA                     OSCCON2         equ	14810	;# 
 14761   0039DB                     OSCCON3         equ	14811	;# 
 14762   0039DC                     OSCSTAT         equ	14812	;# 
 14763   0039DC                     OSCSTAT1        equ	14812	;# 
 14764   0039DD                     OSCEN           equ	14813	;# 
 14765   0039DE                     OSCTUNE         equ	14814	;# 
 14766   0039DF                     OSCFRQ          equ	14815	;# 
 14767   0039E0                     NVMADRL         equ	14816	;# 
 14768   0039E1                     NVMADRH         equ	14817	;# 
 14769   0039E3                     NVMDAT          equ	14819	;# 
 14770   0039E5                     NVMCON1         equ	14821	;# 
 14771   0039E6                     NVMCON2         equ	14822	;# 
 14772   0039EF                     PRLOCK          equ	14831	;# 
 14773   0039F1                     ISRPR           equ	14833	;# 
 14774   0039F2                     MAINPR          equ	14834	;# 
 14775   0039F3                     DMA1PR          equ	14835	;# 
 14776   0039F4                     DMA2PR          equ	14836	;# 
 14777   0039F7                     SCANPR          equ	14839	;# 
 14778   003A00                     RA0PPS          equ	14848	;# 
 14779   003A01                     RA1PPS          equ	14849	;# 
 14780   003A02                     RA2PPS          equ	14850	;# 
 14781   003A03                     RA3PPS          equ	14851	;# 
 14782   003A04                     RA4PPS          equ	14852	;# 
 14783   003A05                     RA5PPS          equ	14853	;# 
 14784   003A06                     RA6PPS          equ	14854	;# 
 14785   003A07                     RA7PPS          equ	14855	;# 
 14786   003A08                     RB0PPS          equ	14856	;# 
 14787   003A09                     RB1PPS          equ	14857	;# 
 14788   003A0A                     RB2PPS          equ	14858	;# 
 14789   003A0B                     RB3PPS          equ	14859	;# 
 14790   003A0C                     RB4PPS          equ	14860	;# 
 14791   003A0D                     RB5PPS          equ	14861	;# 
 14792   003A0E                     RB6PPS          equ	14862	;# 
 14793   003A0F                     RB7PPS          equ	14863	;# 
 14794   003A10                     RC0PPS          equ	14864	;# 
 14795   003A11                     RC1PPS          equ	14865	;# 
 14796   003A12                     RC2PPS          equ	14866	;# 
 14797   003A13                     RC3PPS          equ	14867	;# 
 14798   003A14                     RC4PPS          equ	14868	;# 
 14799   003A15                     RC5PPS          equ	14869	;# 
 14800   003A16                     RC6PPS          equ	14870	;# 
 14801   003A17                     RC7PPS          equ	14871	;# 
 14802   003A18                     RD0PPS          equ	14872	;# 
 14803   003A19                     RD1PPS          equ	14873	;# 
 14804   003A1A                     RD2PPS          equ	14874	;# 
 14805   003A1B                     RD3PPS          equ	14875	;# 
 14806   003A1C                     RD4PPS          equ	14876	;# 
 14807   003A1D                     RD5PPS          equ	14877	;# 
 14808   003A1E                     RD6PPS          equ	14878	;# 
 14809   003A1F                     RD7PPS          equ	14879	;# 
 14810   003A20                     RE0PPS          equ	14880	;# 
 14811   003A21                     RE1PPS          equ	14881	;# 
 14812   003A22                     RE2PPS          equ	14882	;# 
 14813   003A28                     RF0PPS          equ	14888	;# 
 14814   003A29                     RF1PPS          equ	14889	;# 
 14815   003A2A                     RF2PPS          equ	14890	;# 
 14816   003A2B                     RF3PPS          equ	14891	;# 
 14817   003A2C                     RF4PPS          equ	14892	;# 
 14818   003A2D                     RF5PPS          equ	14893	;# 
 14819   003A2E                     RF6PPS          equ	14894	;# 
 14820   003A2F                     RF7PPS          equ	14895	;# 
 14821   003A40                     ANSELA          equ	14912	;# 
 14822   003A41                     WPUA            equ	14913	;# 
 14823   003A42                     ODCONA          equ	14914	;# 
 14824   003A43                     SLRCONA         equ	14915	;# 
 14825   003A44                     INLVLA          equ	14916	;# 
 14826   003A45                     IOCAP           equ	14917	;# 
 14827   003A46                     IOCAN           equ	14918	;# 
 14828   003A47                     IOCAF           equ	14919	;# 
 14829   003A50                     ANSELB          equ	14928	;# 
 14830   003A51                     WPUB            equ	14929	;# 
 14831   003A52                     ODCONB          equ	14930	;# 
 14832   003A53                     SLRCONB         equ	14931	;# 
 14833   003A54                     INLVLB          equ	14932	;# 
 14834   003A55                     IOCBP           equ	14933	;# 
 14835   003A56                     IOCBN           equ	14934	;# 
 14836   003A57                     IOCBF           equ	14935	;# 
 14837   003A5A                     RB1I2C          equ	14938	;# 
 14838   003A5B                     RB2I2C          equ	14939	;# 
 14839   003A60                     ANSELC          equ	14944	;# 
 14840   003A61                     WPUC            equ	14945	;# 
 14841   003A62                     ODCONC          equ	14946	;# 
 14842   003A63                     SLRCONC         equ	14947	;# 
 14843   003A64                     INLVLC          equ	14948	;# 
 14844   003A65                     IOCCP           equ	14949	;# 
 14845   003A66                     IOCCN           equ	14950	;# 
 14846   003A67                     IOCCF           equ	14951	;# 
 14847   003A6A                     RC3I2C          equ	14954	;# 
 14848   003A6B                     RC4I2C          equ	14955	;# 
 14849   003A70                     ANSELD          equ	14960	;# 
 14850   003A71                     WPUD            equ	14961	;# 
 14851   003A72                     ODCOND          equ	14962	;# 
 14852   003A73                     SLRCOND         equ	14963	;# 
 14853   003A74                     INLVLD          equ	14964	;# 
 14854   003A7A                     RD0I2C          equ	14970	;# 
 14855   003A7B                     RD1I2C          equ	14971	;# 
 14856   003A80                     ANSELE          equ	14976	;# 
 14857   003A81                     WPUE            equ	14977	;# 
 14858   003A82                     ODCONE          equ	14978	;# 
 14859   003A83                     SLRCONE         equ	14979	;# 
 14860   003A84                     INLVLE          equ	14980	;# 
 14861   003A85                     IOCEP           equ	14981	;# 
 14862   003A86                     IOCEN           equ	14982	;# 
 14863   003A87                     IOCEF           equ	14983	;# 
 14864   003A90                     ANSELF          equ	14992	;# 
 14865   003A91                     WPUF            equ	14993	;# 
 14866   003A92                     ODCONF          equ	14994	;# 
 14867   003A93                     SLRCONF         equ	14995	;# 
 14868   003A94                     INLVLF          equ	14996	;# 
 14869   003ABF                     PPSLOCK         equ	15039	;# 
 14870   003AC0                     INT0PPS         equ	15040	;# 
 14871   003AC1                     INT1PPS         equ	15041	;# 
 14872   003AC2                     INT2PPS         equ	15042	;# 
 14873   003AC3                     T0CKIPPS        equ	15043	;# 
 14874   003AC4                     T1CKIPPS        equ	15044	;# 
 14875   003AC5                     T1GPPS          equ	15045	;# 
 14876   003AC6                     T3CKIPPS        equ	15046	;# 
 14877   003AC7                     T3GPPS          equ	15047	;# 
 14878   003AC8                     T5CKIPPS        equ	15048	;# 
 14879   003AC9                     T5GPPS          equ	15049	;# 
 14880   003ACA                     T2INPPS         equ	15050	;# 
 14881   003ACB                     T4INPPS         equ	15051	;# 
 14882   003ACC                     T6INPPS         equ	15052	;# 
 14883   003ACD                     CCP1PPS         equ	15053	;# 
 14884   003ACE                     CCP2PPS         equ	15054	;# 
 14885   003ACF                     CCP3PPS         equ	15055	;# 
 14886   003AD0                     CCP4PPS         equ	15056	;# 
 14887   003AD1                     SMT1WINPPS      equ	15057	;# 
 14888   003AD2                     SMT1SIGPPS      equ	15058	;# 
 14889   003AD3                     CWG1INPPS       equ	15059	;# 
 14890   003AD4                     CWG2INPPS       equ	15060	;# 
 14891   003AD5                     CWG3INPPS       equ	15061	;# 
 14892   003AD6                     MD1CARLPPS      equ	15062	;# 
 14893   003AD7                     MD1CARHPPS      equ	15063	;# 
 14894   003AD8                     MD1SRCPPS       equ	15064	;# 
 14895   003AD9                     CLCIN0PPS       equ	15065	;# 
 14896   003ADA                     CLCIN1PPS       equ	15066	;# 
 14897   003ADB                     CLCIN2PPS       equ	15067	;# 
 14898   003ADC                     CLCIN3PPS       equ	15068	;# 
 14899   003ADD                     ADACTPPS        equ	15069	;# 
 14900   003ADE                     SPI1SCKPPS      equ	15070	;# 
 14901   003ADF                     SPI1SDIPPS      equ	15071	;# 
 14902   003AE0                     SPI1SSPPS       equ	15072	;# 
 14903   003AE1                     I2C1SCLPPS      equ	15073	;# 
 14904   003AE2                     I2C1SDAPPS      equ	15074	;# 
 14905   003AE3                     I2C2SCLPPS      equ	15075	;# 
 14906   003AE4                     I2C2SDAPPS      equ	15076	;# 
 14907   003AE5                     U1RXPPS         equ	15077	;# 
 14908   003AE6                     U1CTSPPS        equ	15078	;# 
 14909   003AE8                     U2RXPPS         equ	15080	;# 
 14910   003AE9                     U2CTSPPS        equ	15081	;# 
 14911   003BC9                     DMA2BUF         equ	15305	;# 
 14912   003BCA                     DMA2DCNT        equ	15306	;# 
 14913   003BCA                     DMA2DCNTL       equ	15306	;# 
 14914   003BCB                     DMA2DCNTH       equ	15307	;# 
 14915   003BCC                     DMA2DPTR        equ	15308	;# 
 14916   003BCC                     DMA2DPTRL       equ	15308	;# 
 14917   003BCD                     DMA2DPTRH       equ	15309	;# 
 14918   003BCE                     DMA2DSZ         equ	15310	;# 
 14919   003BCE                     DMA2DSZL        equ	15310	;# 
 14920   003BCF                     DMA2DSZH        equ	15311	;# 
 14921   003BD0                     DMA2DSA         equ	15312	;# 
 14922   003BD0                     DMA2DSAL        equ	15312	;# 
 14923   003BD1                     DMA2DSAH        equ	15313	;# 
 14924   003BD2                     DMA2SCNT        equ	15314	;# 
 14925   003BD2                     DMA2SCNTL       equ	15314	;# 
 14926   003BD3                     DMA2SCNTH       equ	15315	;# 
 14927   003BD4                     DMA2SPTR        equ	15316	;# 
 14928   003BD4                     DMA2SPTRL       equ	15316	;# 
 14929   003BD5                     DMA2SPTRH       equ	15317	;# 
 14930   003BD6                     DMA2SPTRU       equ	15318	;# 
 14931   003BD7                     DMA2SSZ         equ	15319	;# 
 14932   003BD7                     DMA2SSZL        equ	15319	;# 
 14933   003BD8                     DMA2SSZH        equ	15320	;# 
 14934   003BD9                     DMA2SSA         equ	15321	;# 
 14935   003BD9                     DMA2SSAL        equ	15321	;# 
 14936   003BDA                     DMA2SSAH        equ	15322	;# 
 14937   003BDB                     DMA2SSAU        equ	15323	;# 
 14938   003BDC                     DMA2CON0        equ	15324	;# 
 14939   003BDD                     DMA2CON1        equ	15325	;# 
 14940   003BDE                     DMA2AIRQ        equ	15326	;# 
 14941   003BDF                     DMA2SIRQ        equ	15327	;# 
 14942   003BE9                     DMA1BUF         equ	15337	;# 
 14943   003BEA                     DMA1DCNT        equ	15338	;# 
 14944   003BEA                     DMA1DCNTL       equ	15338	;# 
 14945   003BEB                     DMA1DCNTH       equ	15339	;# 
 14946   003BEC                     DMA1DPTR        equ	15340	;# 
 14947   003BEC                     DMA1DPTRL       equ	15340	;# 
 14948   003BED                     DMA1DPTRH       equ	15341	;# 
 14949   003BEE                     DMA1DSZ         equ	15342	;# 
 14950   003BEE                     DMA1DSZL        equ	15342	;# 
 14951   003BEF                     DMA1DSZH        equ	15343	;# 
 14952   003BF0                     DMA1DSA         equ	15344	;# 
 14953   003BF0                     DMA1DSAL        equ	15344	;# 
 14954   003BF1                     DMA1DSAH        equ	15345	;# 
 14955   003BF2                     DMA1SCNT        equ	15346	;# 
 14956   003BF2                     DMA1SCNTL       equ	15346	;# 
 14957   003BF3                     DMA1SCNTH       equ	15347	;# 
 14958   003BF4                     DMA1SPTR        equ	15348	;# 
 14959   003BF4                     DMA1SPTRL       equ	15348	;# 
 14960   003BF5                     DMA1SPTRH       equ	15349	;# 
 14961   003BF6                     DMA1SPTRU       equ	15350	;# 
 14962   003BF7                     DMA1SSZ         equ	15351	;# 
 14963   003BF7                     DMA1SSZL        equ	15351	;# 
 14964   003BF8                     DMA1SSZH        equ	15352	;# 
 14965   003BF9                     DMA1SSA         equ	15353	;# 
 14966   003BF9                     DMA1SSAL        equ	15353	;# 
 14967   003BFA                     DMA1SSAH        equ	15354	;# 
 14968   003BFB                     DMA1SSAU        equ	15355	;# 
 14969   003BFC                     DMA1CON0        equ	15356	;# 
 14970   003BFD                     DMA1CON1        equ	15357	;# 
 14971   003BFE                     DMA1AIRQ        equ	15358	;# 
 14972   003BFF                     DMA1SIRQ        equ	15359	;# 
 14973   003C56                     CLC4CON         equ	15446	;# 
 14974   003C57                     CLC4POL         equ	15447	;# 
 14975   003C58                     CLC4SEL0        equ	15448	;# 
 14976   003C59                     CLC4SEL1        equ	15449	;# 
 14977   003C5A                     CLC4SEL2        equ	15450	;# 
 14978   003C5B                     CLC4SEL3        equ	15451	;# 
 14979   003C5C                     CLC4GLS0        equ	15452	;# 
 14980   003C5D                     CLC4GLS1        equ	15453	;# 
 14981   003C5E                     CLC4GLS2        equ	15454	;# 
 14982   003C5F                     CLC4GLS3        equ	15455	;# 
 14983   003C60                     CLC3CON         equ	15456	;# 
 14984   003C61                     CLC3POL         equ	15457	;# 
 14985   003C62                     CLC3SEL0        equ	15458	;# 
 14986   003C63                     CLC3SEL1        equ	15459	;# 
 14987   003C64                     CLC3SEL2        equ	15460	;# 
 14988   003C65                     CLC3SEL3        equ	15461	;# 
 14989   003C66                     CLC3GLS0        equ	15462	;# 
 14990   003C67                     CLC3GLS1        equ	15463	;# 
 14991   003C68                     CLC3GLS2        equ	15464	;# 
 14992   003C69                     CLC3GLS3        equ	15465	;# 
 14993   003C6A                     CLC2CON         equ	15466	;# 
 14994   003C6B                     CLC2POL         equ	15467	;# 
 14995   003C6C                     CLC2SEL0        equ	15468	;# 
 14996   003C6D                     CLC2SEL1        equ	15469	;# 
 14997   003C6E                     CLC2SEL2        equ	15470	;# 
 14998   003C6F                     CLC2SEL3        equ	15471	;# 
 14999   003C70                     CLC2GLS0        equ	15472	;# 
 15000   003C71                     CLC2GLS1        equ	15473	;# 
 15001   003C72                     CLC2GLS2        equ	15474	;# 
 15002   003C73                     CLC2GLS3        equ	15475	;# 
 15003   003C74                     CLC1CON         equ	15476	;# 
 15004   003C75                     CLC1POL         equ	15477	;# 
 15005   003C76                     CLC1SEL0        equ	15478	;# 
 15006   003C77                     CLC1SEL1        equ	15479	;# 
 15007   003C78                     CLC1SEL2        equ	15480	;# 
 15008   003C79                     CLC1SEL3        equ	15481	;# 
 15009   003C7A                     CLC1GLS0        equ	15482	;# 
 15010   003C7B                     CLC1GLS1        equ	15483	;# 
 15011   003C7C                     CLC1GLS2        equ	15484	;# 
 15012   003C7D                     CLC1GLS3        equ	15485	;# 
 15013   003C7E                     CLCDATA0        equ	15486	;# 
 15014   003CE5                     CLKRCON         equ	15589	;# 
 15015   003CE6                     CLKRCLK         equ	15590	;# 
 15016   003CFA                     MD1CON0         equ	15610	;# 
 15017   003CFB                     MD1CON1         equ	15611	;# 
 15018   003CFC                     MD1SRC          equ	15612	;# 
 15019   003CFD                     MD1CARL         equ	15613	;# 
 15020   003CFE                     MD1CARH         equ	15614	;# 
 15021   003D10                     SPI1RXB         equ	15632	;# 
 15022   003D11                     SPI1TXB         equ	15633	;# 
 15023   003D12                     SPI1TCNT        equ	15634	;# 
 15024   003D12                     SPI1TCNTL       equ	15634	;# 
 15025   003D13                     SPI1TCNTH       equ	15635	;# 
 15026   003D14                     SPI1CON0        equ	15636	;# 
 15027   003D15                     SPI1CON1        equ	15637	;# 
 15028   003D16                     SPI1CON2        equ	15638	;# 
 15029   003D17                     SPI1STATUS      equ	15639	;# 
 15030   003D18                     SPI1TWIDTH      equ	15640	;# 
 15031   003D19                     SPI1BAUD        equ	15641	;# 
 15032   003D1A                     SPI1INTF        equ	15642	;# 
 15033   003D1B                     SPI1INTE        equ	15643	;# 
 15034   003D1C                     SPI1CLK         equ	15644	;# 
 15035   003D54                     I2C2RXB         equ	15700	;# 
 15036   003D55                     I2C2TXB         equ	15701	;# 
 15037   003D56                     I2C2CNT         equ	15702	;# 
 15038   003D57                     I2C2ADB0        equ	15703	;# 
 15039   003D58                     I2C2ADB1        equ	15704	;# 
 15040   003D59                     I2C2ADR0        equ	15705	;# 
 15041   003D5A                     I2C2ADR1        equ	15706	;# 
 15042   003D5B                     I2C2ADR2        equ	15707	;# 
 15043   003D5C                     I2C2ADR3        equ	15708	;# 
 15044   003D5D                     I2C2CON0        equ	15709	;# 
 15045   003D5E                     I2C2CON1        equ	15710	;# 
 15046   003D5F                     I2C2CON2        equ	15711	;# 
 15047   003D60                     I2C2ERR         equ	15712	;# 
 15048   003D61                     I2C2STAT0       equ	15713	;# 
 15049   003D62                     I2C2STAT1       equ	15714	;# 
 15050   003D63                     I2C2PIR         equ	15715	;# 
 15051   003D64                     I2C2PIE         equ	15716	;# 
 15052   003D65                     I2C2CLK         equ	15717	;# 
 15053   003D66                     I2C2BTO         equ	15718	;# 
 15054   003D6A                     I2C1RXB         equ	15722	;# 
 15055   003D6B                     I2C1TXB         equ	15723	;# 
 15056   003D6C                     I2C1CNT         equ	15724	;# 
 15057   003D6D                     I2C1ADB0        equ	15725	;# 
 15058   003D6E                     I2C1ADB1        equ	15726	;# 
 15059   003D6F                     I2C1ADR0        equ	15727	;# 
 15060   003D70                     I2C1ADR1        equ	15728	;# 
 15061   003D71                     I2C1ADR2        equ	15729	;# 
 15062   003D72                     I2C1ADR3        equ	15730	;# 
 15063   003D73                     I2C1CON0        equ	15731	;# 
 15064   003D74                     I2C1CON1        equ	15732	;# 
 15065   003D75                     I2C1CON2        equ	15733	;# 
 15066   003D76                     I2C1ERR         equ	15734	;# 
 15067   003D77                     I2C1STAT0       equ	15735	;# 
 15068   003D78                     I2C1STAT1       equ	15736	;# 
 15069   003D79                     I2C1PIR         equ	15737	;# 
 15070   003D7A                     I2C1PIE         equ	15738	;# 
 15071   003D7B                     I2C1CLK         equ	15739	;# 
 15072   003D7C                     I2C1BTO         equ	15740	;# 
 15073   003DD0                     U2RXB           equ	15824	;# 
 15074   003DD0                     U2RXBL          equ	15824	;# 
 15075   003DD2                     U2TXB           equ	15826	;# 
 15076   003DD2                     U2TXBL          equ	15826	;# 
 15077   003DD4                     U2P1            equ	15828	;# 
 15078   003DD4                     U2P1L           equ	15828	;# 
 15079   003DD6                     U2P2            equ	15830	;# 
 15080   003DD6                     U2P2L           equ	15830	;# 
 15081   003DD8                     U2P3            equ	15832	;# 
 15082   003DD8                     U2P3L           equ	15832	;# 
 15083   003DDA                     U2CON0          equ	15834	;# 
 15084   003DDB                     U2CON1          equ	15835	;# 
 15085   003DDC                     U2CON2          equ	15836	;# 
 15086   003DDD                     U2BRG           equ	15837	;# 
 15087   003DDD                     U2BRGL          equ	15837	;# 
 15088   003DDE                     U2BRGH          equ	15838	;# 
 15089   003DDF                     U2FIFO          equ	15839	;# 
 15090   003DE0                     U2UIR           equ	15840	;# 
 15091   003DE1                     U2ERRIR         equ	15841	;# 
 15092   003DE2                     U2ERRIE         equ	15842	;# 
 15093   003DE8                     U1RXB           equ	15848	;# 
 15094   003DE8                     U1RXBL          equ	15848	;# 
 15095   003DE9                     U1RXCHK         equ	15849	;# 
 15096   003DEA                     U1TXB           equ	15850	;# 
 15097   003DEA                     U1TXBL          equ	15850	;# 
 15098   003DEB                     U1TXCHK         equ	15851	;# 
 15099   003DEC                     U1P1            equ	15852	;# 
 15100   003DEC                     U1P1L           equ	15852	;# 
 15101   003DED                     U1P1H           equ	15853	;# 
 15102   003DEE                     U1P2            equ	15854	;# 
 15103   003DEE                     U1P2L           equ	15854	;# 
 15104   003DEF                     U1P2H           equ	15855	;# 
 15105   003DF0                     U1P3            equ	15856	;# 
 15106   003DF0                     U1P3L           equ	15856	;# 
 15107   003DF1                     U1P3H           equ	15857	;# 
 15108   003DF2                     U1CON0          equ	15858	;# 
 15109   003DF3                     U1CON1          equ	15859	;# 
 15110   003DF4                     U1CON2          equ	15860	;# 
 15111   003DF5                     U1BRG           equ	15861	;# 
 15112   003DF5                     U1BRGL          equ	15861	;# 
 15113   003DF6                     U1BRGH          equ	15862	;# 
 15114   003DF7                     U1FIFO          equ	15863	;# 
 15115   003DF8                     U1UIR           equ	15864	;# 
 15116   003DF9                     U1ERRIR         equ	15865	;# 
 15117   003DFA                     U1ERRIE         equ	15866	;# 
 15118   003E9C                     DAC1CON1        equ	16028	;# 
 15119   003E9E                     DAC1CON0        equ	16030	;# 
 15120   003EB8                     CM2CON0         equ	16056	;# 
 15121   003EB9                     CM2CON1         equ	16057	;# 
 15122   003EBA                     CM2NCH          equ	16058	;# 
 15123   003EBB                     CM2PCH          equ	16059	;# 
 15124   003EBC                     CM1CON0         equ	16060	;# 
 15125   003EBD                     CM1CON1         equ	16061	;# 
 15126   003EBE                     CM1NCH          equ	16062	;# 
 15127   003EBF                     CM1PCH          equ	16063	;# 
 15128   003EC0                     CMOUT           equ	16064	;# 
 15129   003EC1                     FVRCON          equ	16065	;# 
 15130   003EC3                     ZCDCON          equ	16067	;# 
 15131   003EC9                     HLVDCON0        equ	16073	;# 
 15132   003ECA                     HLVDCON1        equ	16074	;# 
 15133   003ED7                     ADCP            equ	16087	;# 
 15134   003EDE                     ADLTH           equ	16094	;# 
 15135   003EDE                     ADLTHL          equ	16094	;# 
 15136   003EDF                     ADLTHH          equ	16095	;# 
 15137   003EE0                     ADUTH           equ	16096	;# 
 15138   003EE0                     ADUTHL          equ	16096	;# 
 15139   003EE1                     ADUTHH          equ	16097	;# 
 15140   003EE2                     ADERR           equ	16098	;# 
 15141   003EE2                     ADERRL          equ	16098	;# 
 15142   003EE3                     ADERRH          equ	16099	;# 
 15143   003EE4                     ADSTPT          equ	16100	;# 
 15144   003EE4                     ADSTPTL         equ	16100	;# 
 15145   003EE5                     ADSTPTH         equ	16101	;# 
 15146   003EE6                     ADFLTR          equ	16102	;# 
 15147   003EE6                     ADFLTRL         equ	16102	;# 
 15148   003EE7                     ADFLTRH         equ	16103	;# 
 15149   003EE8                     ADACC           equ	16104	;# 
 15150   003EE8                     ADACCL          equ	16104	;# 
 15151   003EE9                     ADACCH          equ	16105	;# 
 15152   003EEA                     ADACCU          equ	16106	;# 
 15153   003EEB                     ADCNT           equ	16107	;# 
 15154   003EEC                     ADRPT           equ	16108	;# 
 15155   003EED                     ADPREV          equ	16109	;# 
 15156   003EED                     ADPREVL         equ	16109	;# 
 15157   003EEE                     ADPREVH         equ	16110	;# 
 15158   003EEF                     ADRES           equ	16111	;# 
 15159   003EEF                     ADRESL          equ	16111	;# 
 15160   003EF0                     ADRESH          equ	16112	;# 
 15161   003EF1                     ADPCH           equ	16113	;# 
 15162   003EF3                     ADACQ           equ	16115	;# 
 15163   003EF3                     ADACQL          equ	16115	;# 
 15164   003EF4                     ADACQH          equ	16116	;# 
 15165   003EF5                     ADCAP           equ	16117	;# 
 15166   003EF6                     ADPRE           equ	16118	;# 
 15167   003EF6                     ADPREL          equ	16118	;# 
 15168   003EF7                     ADPREH          equ	16119	;# 
 15169   003EF8                     ADCON0          equ	16120	;# 
 15170   003EF9                     ADCON1          equ	16121	;# 
 15171   003EFA                     ADCON2          equ	16122	;# 
 15172   003EFB                     ADCON3          equ	16123	;# 
 15173   003EFC                     ADSTAT          equ	16124	;# 
 15174   003EFD                     ADREF           equ	16125	;# 
 15175   003EFE                     ADACT           equ	16126	;# 
 15176   003EFF                     ADCLK           equ	16127	;# 
 15177   003F12                     SMT1TMR         equ	16146	;# 
 15178   003F12                     SMT1TMRL        equ	16146	;# 
 15179   003F13                     SMT1TMRH        equ	16147	;# 
 15180   003F14                     SMT1TMRU        equ	16148	;# 
 15181   003F15                     SMT1CPR         equ	16149	;# 
 15182   003F15                     SMT1CPRL        equ	16149	;# 
 15183   003F16                     SMT1CPRH        equ	16150	;# 
 15184   003F17                     SMT1CPRU        equ	16151	;# 
 15185   003F18                     SMT1CPW         equ	16152	;# 
 15186   003F18                     SMT1CPWL        equ	16152	;# 
 15187   003F19                     SMT1CPWH        equ	16153	;# 
 15188   003F1A                     SMT1CPWU        equ	16154	;# 
 15189   003F1B                     SMT1PR          equ	16155	;# 
 15190   003F1B                     SMT1PRL         equ	16155	;# 
 15191   003F1C                     SMT1PRH         equ	16156	;# 
 15192   003F1D                     SMT1PRU         equ	16157	;# 
 15193   003F1E                     SMT1CON0        equ	16158	;# 
 15194   003F1F                     SMT1CON1        equ	16159	;# 
 15195   003F20                     SMT1STAT        equ	16160	;# 
 15196   003F21                     SMT1CLK         equ	16161	;# 
 15197   003F22                     SMT1SIG         equ	16162	;# 
 15198   003F23                     SMT1WIN         equ	16163	;# 
 15199   003F38                     NCO1ACC         equ	16184	;# 
 15200   003F38                     NCO1ACCL        equ	16184	;# 
 15201   003F39                     NCO1ACCH        equ	16185	;# 
 15202   003F3A                     NCO1ACCU        equ	16186	;# 
 15203   003F3B                     NCO1INC         equ	16187	;# 
 15204   003F3B                     NCO1INCL        equ	16187	;# 
 15205   003F3C                     NCO1INCH        equ	16188	;# 
 15206   003F3D                     NCO1INCU        equ	16189	;# 
 15207   003F3E                     NCO1CON         equ	16190	;# 
 15208   003F3F                     NCO1CLK         equ	16191	;# 
 15209   003F40                     CWG3CLK         equ	16192	;# 
 15210   003F40                     CWG3CLKCON      equ	16192	;# 
 15211   003F41                     CWG3ISM         equ	16193	;# 
 15212   003F41                     CWG3DAT         equ	16193	;# 
 15213   003F42                     CWG3DBR         equ	16194	;# 
 15214   003F43                     CWG3DBF         equ	16195	;# 
 15215   003F44                     CWG3CON0        equ	16196	;# 
 15216   003F45                     CWG3CON1        equ	16197	;# 
 15217   003F46                     CWG3AS0         equ	16198	;# 
 15218   003F47                     CWG3AS1         equ	16199	;# 
 15219   003F48                     CWG3STR         equ	16200	;# 
 15220   003F49                     CWG2CLK         equ	16201	;# 
 15221   003F49                     CWG2CLKCON      equ	16201	;# 
 15222   003F4A                     CWG2ISM         equ	16202	;# 
 15223   003F4A                     CWG2DAT         equ	16202	;# 
 15224   003F4B                     CWG2DBR         equ	16203	;# 
 15225   003F4C                     CWG2DBF         equ	16204	;# 
 15226   003F4D                     CWG2CON0        equ	16205	;# 
 15227   003F4E                     CWG2CON1        equ	16206	;# 
 15228   003F4F                     CWG2AS0         equ	16207	;# 
 15229   003F50                     CWG2AS1         equ	16208	;# 
 15230   003F51                     CWG2STR         equ	16209	;# 
 15231   003F52                     CWG1CLK         equ	16210	;# 
 15232   003F52                     CWG1CLKCON      equ	16210	;# 
 15233   003F53                     CWG1ISM         equ	16211	;# 
 15234   003F53                     CWG1DAT         equ	16211	;# 
 15235   003F54                     CWG1DBR         equ	16212	;# 
 15236   003F55                     CWG1DBF         equ	16213	;# 
 15237   003F56                     CWG1CON0        equ	16214	;# 
 15238   003F57                     CWG1CON1        equ	16215	;# 
 15239   003F58                     CWG1AS0         equ	16216	;# 
 15240   003F59                     CWG1AS1         equ	16217	;# 
 15241   003F5A                     CWG1STR         equ	16218	;# 
 15242   003F5E                     CCPTMRS0        equ	16222	;# 
 15243   003F5F                     CCPTMRS1        equ	16223	;# 
 15244   003F60                     PWM8DC          equ	16224	;# 
 15245   003F60                     PWM8DCL         equ	16224	;# 
 15246   003F61                     PWM8DCH         equ	16225	;# 
 15247   003F62                     PWM8CON         equ	16226	;# 
 15248   003F64                     PWM7DC          equ	16228	;# 
 15249   003F64                     PWM7DCL         equ	16228	;# 
 15250   003F65                     PWM7DCH         equ	16229	;# 
 15251   003F66                     PWM7CON         equ	16230	;# 
 15252   003F68                     PWM6DC          equ	16232	;# 
 15253   003F68                     PWM6DCL         equ	16232	;# 
 15254   003F69                     PWM6DCH         equ	16233	;# 
 15255   003F6A                     PWM6CON         equ	16234	;# 
 15256   003F6C                     PWM5DC          equ	16236	;# 
 15257   003F6C                     PWM5DCL         equ	16236	;# 
 15258   003F6D                     PWM5DCH         equ	16237	;# 
 15259   003F6E                     PWM5CON         equ	16238	;# 
 15260   003F70                     CCPR4           equ	16240	;# 
 15261   003F70                     CCPR4L          equ	16240	;# 
 15262   003F71                     CCPR4H          equ	16241	;# 
 15263   003F72                     CCP4CON         equ	16242	;# 
 15264   003F73                     CCP4CAP         equ	16243	;# 
 15265   003F74                     CCPR3           equ	16244	;# 
 15266   003F74                     CCPR3L          equ	16244	;# 
 15267   003F75                     CCPR3H          equ	16245	;# 
 15268   003F76                     CCP3CON         equ	16246	;# 
 15269   003F77                     CCP3CAP         equ	16247	;# 
 15270   003F78                     CCPR2           equ	16248	;# 
 15271   003F78                     CCPR2L          equ	16248	;# 
 15272   003F79                     CCPR2H          equ	16249	;# 
 15273   003F7A                     CCP2CON         equ	16250	;# 
 15274   003F7B                     CCP2CAP         equ	16251	;# 
 15275   003F7C                     CCPR1           equ	16252	;# 
 15276   003F7C                     CCPR1L          equ	16252	;# 
 15277   003F7D                     CCPR1H          equ	16253	;# 
 15278   003F7E                     CCP1CON         equ	16254	;# 
 15279   003F7F                     CCP1CAP         equ	16255	;# 
 15280   003F92                     T6TMR           equ	16274	;# 
 15281   003F92                     TMR6            equ	16274	;# 
 15282   003F93                     T6PR            equ	16275	;# 
 15283   003F93                     PR6             equ	16275	;# 
 15284   003F94                     T6CON           equ	16276	;# 
 15285   003F95                     T6HLT           equ	16277	;# 
 15286   003F96                     T6CLKCON        equ	16278	;# 
 15287   003F96                     T6CLK           equ	16278	;# 
 15288   003F97                     T6RST           equ	16279	;# 
 15289   003F98                     TMR5            equ	16280	;# 
 15290   003F98                     TMR5L           equ	16280	;# 
 15291   003F99                     TMR5H           equ	16281	;# 
 15292   003F9A                     T5CON           equ	16282	;# 
 15293   003F9A                     TMR5CON         equ	16282	;# 
 15294   003F9B                     T5GCON          equ	16283	;# 
 15295   003F9B                     TMR5GCON        equ	16283	;# 
 15296   003F9C                     T5GATE          equ	16284	;# 
 15297   003F9C                     TMR5GATE        equ	16284	;# 
 15298   003F9D                     T5CLK           equ	16285	;# 
 15299   003F9D                     TMR5CLK         equ	16285	;# 
 15300   003F9D                     PR5             equ	16285	;# 
 15301   003F9E                     T4TMR           equ	16286	;# 
 15302   003F9E                     TMR4            equ	16286	;# 
 15303   003F9F                     T4PR            equ	16287	;# 
 15304   003F9F                     PR4             equ	16287	;# 
 15305   003FA0                     T4CON           equ	16288	;# 
 15306   003FA1                     T4HLT           equ	16289	;# 
 15307   003FA2                     T4CLKCON        equ	16290	;# 
 15308   003FA2                     T4CLK           equ	16290	;# 
 15309   003FA3                     T4RST           equ	16291	;# 
 15310   003FA4                     TMR3            equ	16292	;# 
 15311   003FA4                     TMR3L           equ	16292	;# 
 15312   003FA5                     TMR3H           equ	16293	;# 
 15313   003FA6                     T3CON           equ	16294	;# 
 15314   003FA6                     TMR3CON         equ	16294	;# 
 15315   003FA7                     T3GCON          equ	16295	;# 
 15316   003FA7                     TMR3GCON        equ	16295	;# 
 15317   003FA8                     T3GATE          equ	16296	;# 
 15318   003FA8                     TMR3GATE        equ	16296	;# 
 15319   003FA9                     T3CLK           equ	16297	;# 
 15320   003FA9                     TMR3CLK         equ	16297	;# 
 15321   003FA9                     PR3             equ	16297	;# 
 15322   003FAA                     T2TMR           equ	16298	;# 
 15323   003FAA                     TMR2            equ	16298	;# 
 15324   003FAB                     T2PR            equ	16299	;# 
 15325   003FAB                     PR2             equ	16299	;# 
 15326   003FAC                     T2CON           equ	16300	;# 
 15327   003FAD                     T2HLT           equ	16301	;# 
 15328   003FAE                     T2CLKCON        equ	16302	;# 
 15329   003FAE                     T2CLK           equ	16302	;# 
 15330   003FAF                     T2RST           equ	16303	;# 
 15331   003FB0                     TMR1            equ	16304	;# 
 15332   003FB0                     TMR1L           equ	16304	;# 
 15333   003FB1                     TMR1H           equ	16305	;# 
 15334   003FB2                     T1CON           equ	16306	;# 
 15335   003FB2                     TMR1CON         equ	16306	;# 
 15336   003FB3                     T1GCON          equ	16307	;# 
 15337   003FB3                     TMR1GCON        equ	16307	;# 
 15338   003FB4                     T1GATE          equ	16308	;# 
 15339   003FB4                     TMR1GATE        equ	16308	;# 
 15340   003FB5                     T1CLK           equ	16309	;# 
 15341   003FB5                     TMR1CLK         equ	16309	;# 
 15342   003FB5                     PR1             equ	16309	;# 
 15343   003FB6                     TMR0L           equ	16310	;# 
 15344   003FB6                     TMR0            equ	16310	;# 
 15345   003FB7                     TMR0H           equ	16311	;# 
 15346   003FB7                     PR0             equ	16311	;# 
 15347   003FB8                     T0CON0          equ	16312	;# 
 15348   003FB9                     T0CON1          equ	16313	;# 
 15349   003FBA                     LATA            equ	16314	;# 
 15350   003FBB                     LATB            equ	16315	;# 
 15351   003FBC                     LATC            equ	16316	;# 
 15352   003FBD                     LATD            equ	16317	;# 
 15353   003FBE                     LATE            equ	16318	;# 
 15354   003FBF                     LATF            equ	16319	;# 
 15355   003FC2                     TRISA           equ	16322	;# 
 15356   003FC3                     TRISB           equ	16323	;# 
 15357   003FC4                     TRISC           equ	16324	;# 
 15358   003FC5                     TRISD           equ	16325	;# 
 15359   003FC6                     TRISE           equ	16326	;# 
 15360   003FC7                     TRISF           equ	16327	;# 
 15361   003FCA                     PORTA           equ	16330	;# 
 15362   003FCB                     PORTB           equ	16331	;# 
 15363   003FCC                     PORTC           equ	16332	;# 
 15364   003FCD                     PORTD           equ	16333	;# 
 15365   003FCE                     PORTE           equ	16334	;# 
 15366   003FCF                     PORTF           equ	16335	;# 
 15367   003FD2                     INTCON0         equ	16338	;# 
 15368   003FD3                     INTCON1         equ	16339	;# 
 15369   003FD4                     IVTLOCK         equ	16340	;# 
 15370   003FD5                     IVTBASE         equ	16341	;# 
 15371   003FD5                     IVTBASEL        equ	16341	;# 
 15372   003FD6                     IVTBASEH        equ	16342	;# 
 15373   003FD7                     IVTBASEU        equ	16343	;# 
 15374   003FD8                     STATUS          equ	16344	;# 
 15375   003FD9                     FSR2            equ	16345	;# 
 15376   003FD9                     FSR2L           equ	16345	;# 
 15377   003FDA                     FSR2H           equ	16346	;# 
 15378   003FDB                     PLUSW2          equ	16347	;# 
 15379   003FDC                     PREINC2         equ	16348	;# 
 15380   003FDD                     POSTDEC2        equ	16349	;# 
 15381   003FDE                     POSTINC2        equ	16350	;# 
 15382   003FDF                     INDF2           equ	16351	;# 
 15383   003FE0                     BSR             equ	16352	;# 
 15384   003FE1                     FSR1            equ	16353	;# 
 15385   003FE1                     FSR1L           equ	16353	;# 
 15386   003FE2                     FSR1H           equ	16354	;# 
 15387   003FE3                     PLUSW1          equ	16355	;# 
 15388   003FE4                     PREINC1         equ	16356	;# 
 15389   003FE5                     POSTDEC1        equ	16357	;# 
 15390   003FE6                     POSTINC1        equ	16358	;# 
 15391   003FE7                     INDF1           equ	16359	;# 
 15392   003FE8                     WREG            equ	16360	;# 
 15393   003FE9                     FSR0            equ	16361	;# 
 15394   003FE9                     FSR0L           equ	16361	;# 
 15395   003FEA                     FSR0H           equ	16362	;# 
 15396   003FEB                     PLUSW0          equ	16363	;# 
 15397   003FEC                     PREINC0         equ	16364	;# 
 15398   003FED                     POSTDEC0        equ	16365	;# 
 15399   003FEE                     POSTINC0        equ	16366	;# 
 15400   003FEF                     INDF0           equ	16367	;# 
 15401   003FF0                     PCON0           equ	16368	;# 
 15402   003FF1                     PCON1           equ	16369	;# 
 15403   003FF3                     PROD            equ	16371	;# 
 15404   003FF3                     PRODL           equ	16371	;# 
 15405   003FF4                     PRODH           equ	16372	;# 
 15406   003FF5                     TABLAT          equ	16373	;# 
 15407   003FF6                     TBLPTR          equ	16374	;# 
 15408   003FF6                     TBLPTRL         equ	16374	;# 
 15409   003FF7                     TBLPTRH         equ	16375	;# 
 15410   003FF8                     TBLPTRU         equ	16376	;# 
 15411   003FF9                     PCLAT           equ	16377	;# 
 15412   003FF9                     PCL             equ	16377	;# 
 15413   003FFA                     PCLATH          equ	16378	;# 
 15414   003FFB                     PCLATU          equ	16379	;# 
 15415   003FFC                     STKPTR          equ	16380	;# 
 15416   003FFD                     TOS             equ	16381	;# 
 15417   003FFD                     TOSL            equ	16381	;# 
 15418   003FFE                     TOSH            equ	16382	;# 
 15419   003FFF                     TOSU            equ	16383	;# 
 15420   003880                     STATUS_CSHAD    equ	14464	;# 
 15421   003881                     WREG_CSHAD      equ	14465	;# 
 15422   003882                     BSR_CSHAD       equ	14466	;# 
 15423   003883                     SHADCON         equ	14467	;# 
 15424   003884                     STATUS_SHAD     equ	14468	;# 
 15425   003885                     WREG_SHAD       equ	14469	;# 
 15426   003886                     BSR_SHAD        equ	14470	;# 
 15427   003887                     PCLATH_SHAD     equ	14471	;# 
 15428   003888                     PCLATU_SHAD     equ	14472	;# 
 15429   003889                     FSR0SH          equ	14473	;# 
 15430   003889                     FSR0L_SHAD      equ	14473	;# 
 15431   00388A                     FSR0H_SHAD      equ	14474	;# 
 15432   00388B                     FSR1SH          equ	14475	;# 
 15433   00388B                     FSR1L_SHAD      equ	14475	;# 
 15434   00388C                     FSR1H_SHAD      equ	14476	;# 
 15435   00388D                     FSR2SH          equ	14477	;# 
 15436   00388D                     FSR2L_SHAD      equ	14477	;# 
 15437   00388E                     FSR2H_SHAD      equ	14478	;# 
 15438   00388F                     PRODSH          equ	14479	;# 
 15439   00388F                     PRODL_SHAD      equ	14479	;# 
 15440   003890                     PRODH_SHAD      equ	14480	;# 
 15441   00389D                     IVTADL          equ	14493	;# 
 15442   00389E                     IVTADH          equ	14494	;# 
 15443   00389F                     IVTADU          equ	14495	;# 
 15444   00395B                     WDTCON0         equ	14683	;# 
 15445   00395C                     WDTCON1         equ	14684	;# 
 15446   00395D                     WDTPSL          equ	14685	;# 
 15447   00395E                     WDTPSH          equ	14686	;# 
 15448   00395F                     WDTTMR          equ	14687	;# 
 15449   003960                     CRCDATA         equ	14688	;# 
 15450   003960                     CRCDATL         equ	14688	;# 
 15451   003961                     CRCDATH         equ	14689	;# 
 15452   003962                     CRCACC          equ	14690	;# 
 15453   003962                     CRCACCL         equ	14690	;# 
 15454   003963                     CRCACCH         equ	14691	;# 
 15455   003964                     CRCSHFT         equ	14692	;# 
 15456   003964                     CRCSHIFTL       equ	14692	;# 
 15457   003965                     CRCSHIFTH       equ	14693	;# 
 15458   003966                     CRCXOR          equ	14694	;# 
 15459   003966                     CRCXORL         equ	14694	;# 
 15460   003967                     CRCXORH         equ	14695	;# 
 15461   003968                     CRCCON0         equ	14696	;# 
 15462   003969                     CRCCON1         equ	14697	;# 
 15463   003976                     SCANLADR        equ	14710	;# 
 15464   003976                     SCANLADRL       equ	14710	;# 
 15465   003977                     SCANLADRH       equ	14711	;# 
 15466   003978                     SCANLADRU       equ	14712	;# 
 15467   003979                     SCANHADR        equ	14713	;# 
 15468   003979                     SCANHADRL       equ	14713	;# 
 15469   00397A                     SCANHADRH       equ	14714	;# 
 15470   00397B                     SCANHADRU       equ	14715	;# 
 15471   00397C                     SCANCON0        equ	14716	;# 
 15472   00397D                     SCANTRIG        equ	14717	;# 
 15473   003980                     IPR0            equ	14720	;# 
 15474   003981                     IPR1            equ	14721	;# 
 15475   003982                     IPR2            equ	14722	;# 
 15476   003983                     IPR3            equ	14723	;# 
 15477   003984                     IPR4            equ	14724	;# 
 15478   003985                     IPR5            equ	14725	;# 
 15479   003986                     IPR6            equ	14726	;# 
 15480   003987                     IPR7            equ	14727	;# 
 15481   003988                     IPR8            equ	14728	;# 
 15482   003989                     IPR9            equ	14729	;# 
 15483   00398A                     IPR10           equ	14730	;# 
 15484   003990                     PIE0            equ	14736	;# 
 15485   003991                     PIE1            equ	14737	;# 
 15486   003992                     PIE2            equ	14738	;# 
 15487   003993                     PIE3            equ	14739	;# 
 15488   003994                     PIE4            equ	14740	;# 
 15489   003995                     PIE5            equ	14741	;# 
 15490   003996                     PIE6            equ	14742	;# 
 15491   003997                     PIE7            equ	14743	;# 
 15492   003998                     PIE8            equ	14744	;# 
 15493   003999                     PIE9            equ	14745	;# 
 15494   00399A                     PIE10           equ	14746	;# 
 15495   0039A0                     PIR0            equ	14752	;# 
 15496   0039A1                     PIR1            equ	14753	;# 
 15497   0039A2                     PIR2            equ	14754	;# 
 15498   0039A3                     PIR3            equ	14755	;# 
 15499   0039A4                     PIR4            equ	14756	;# 
 15500   0039A5                     PIR5            equ	14757	;# 
 15501   0039A6                     PIR6            equ	14758	;# 
 15502   0039A7                     PIR7            equ	14759	;# 
 15503   0039A8                     PIR8            equ	14760	;# 
 15504   0039A9                     PIR9            equ	14761	;# 
 15505   0039AA                     PIR10           equ	14762	;# 
 15506   0039C0                     PMD0            equ	14784	;# 
 15507   0039C1                     PMD1            equ	14785	;# 
 15508   0039C2                     PMD2            equ	14786	;# 
 15509   0039C3                     PMD3            equ	14787	;# 
 15510   0039C4                     PMD4            equ	14788	;# 
 15511   0039C5                     PMD5            equ	14789	;# 
 15512   0039C6                     PMD6            equ	14790	;# 
 15513   0039C7                     PMD7            equ	14791	;# 
 15514   0039D0                     BORCON          equ	14800	;# 
 15515   0039D1                     VREGCON         equ	14801	;# 
 15516   0039D8                     CPUDOZE         equ	14808	;# 
 15517   0039D9                     OSCCON1         equ	14809	;# 
 15518   0039DA                     OSCCON2         equ	14810	;# 
 15519   0039DB                     OSCCON3         equ	14811	;# 
 15520   0039DC                     OSCSTAT         equ	14812	;# 
 15521   0039DC                     OSCSTAT1        equ	14812	;# 
 15522   0039DD                     OSCEN           equ	14813	;# 
 15523   0039DE                     OSCTUNE         equ	14814	;# 
 15524   0039DF                     OSCFRQ          equ	14815	;# 
 15525   0039E0                     NVMADRL         equ	14816	;# 
 15526   0039E1                     NVMADRH         equ	14817	;# 
 15527   0039E3                     NVMDAT          equ	14819	;# 
 15528   0039E5                     NVMCON1         equ	14821	;# 
 15529   0039E6                     NVMCON2         equ	14822	;# 
 15530   0039EF                     PRLOCK          equ	14831	;# 
 15531   0039F1                     ISRPR           equ	14833	;# 
 15532   0039F2                     MAINPR          equ	14834	;# 
 15533   0039F3                     DMA1PR          equ	14835	;# 
 15534   0039F4                     DMA2PR          equ	14836	;# 
 15535   0039F7                     SCANPR          equ	14839	;# 
 15536   003A00                     RA0PPS          equ	14848	;# 
 15537   003A01                     RA1PPS          equ	14849	;# 
 15538   003A02                     RA2PPS          equ	14850	;# 
 15539   003A03                     RA3PPS          equ	14851	;# 
 15540   003A04                     RA4PPS          equ	14852	;# 
 15541   003A05                     RA5PPS          equ	14853	;# 
 15542   003A06                     RA6PPS          equ	14854	;# 
 15543   003A07                     RA7PPS          equ	14855	;# 
 15544   003A08                     RB0PPS          equ	14856	;# 
 15545   003A09                     RB1PPS          equ	14857	;# 
 15546   003A0A                     RB2PPS          equ	14858	;# 
 15547   003A0B                     RB3PPS          equ	14859	;# 
 15548   003A0C                     RB4PPS          equ	14860	;# 
 15549   003A0D                     RB5PPS          equ	14861	;# 
 15550   003A0E                     RB6PPS          equ	14862	;# 
 15551   003A0F                     RB7PPS          equ	14863	;# 
 15552   003A10                     RC0PPS          equ	14864	;# 
 15553   003A11                     RC1PPS          equ	14865	;# 
 15554   003A12                     RC2PPS          equ	14866	;# 
 15555   003A13                     RC3PPS          equ	14867	;# 
 15556   003A14                     RC4PPS          equ	14868	;# 
 15557   003A15                     RC5PPS          equ	14869	;# 
 15558   003A16                     RC6PPS          equ	14870	;# 
 15559   003A17                     RC7PPS          equ	14871	;# 
 15560   003A18                     RD0PPS          equ	14872	;# 
 15561   003A19                     RD1PPS          equ	14873	;# 
 15562   003A1A                     RD2PPS          equ	14874	;# 
 15563   003A1B                     RD3PPS          equ	14875	;# 
 15564   003A1C                     RD4PPS          equ	14876	;# 
 15565   003A1D                     RD5PPS          equ	14877	;# 
 15566   003A1E                     RD6PPS          equ	14878	;# 
 15567   003A1F                     RD7PPS          equ	14879	;# 
 15568   003A20                     RE0PPS          equ	14880	;# 
 15569   003A21                     RE1PPS          equ	14881	;# 
 15570   003A22                     RE2PPS          equ	14882	;# 
 15571   003A28                     RF0PPS          equ	14888	;# 
 15572   003A29                     RF1PPS          equ	14889	;# 
 15573   003A2A                     RF2PPS          equ	14890	;# 
 15574   003A2B                     RF3PPS          equ	14891	;# 
 15575   003A2C                     RF4PPS          equ	14892	;# 
 15576   003A2D                     RF5PPS          equ	14893	;# 
 15577   003A2E                     RF6PPS          equ	14894	;# 
 15578   003A2F                     RF7PPS          equ	14895	;# 
 15579   003A40                     ANSELA          equ	14912	;# 
 15580   003A41                     WPUA            equ	14913	;# 
 15581   003A42                     ODCONA          equ	14914	;# 
 15582   003A43                     SLRCONA         equ	14915	;# 
 15583   003A44                     INLVLA          equ	14916	;# 
 15584   003A45                     IOCAP           equ	14917	;# 
 15585   003A46                     IOCAN           equ	14918	;# 
 15586   003A47                     IOCAF           equ	14919	;# 
 15587   003A50                     ANSELB          equ	14928	;# 
 15588   003A51                     WPUB            equ	14929	;# 
 15589   003A52                     ODCONB          equ	14930	;# 
 15590   003A53                     SLRCONB         equ	14931	;# 
 15591   003A54                     INLVLB          equ	14932	;# 
 15592   003A55                     IOCBP           equ	14933	;# 
 15593   003A56                     IOCBN           equ	14934	;# 
 15594   003A57                     IOCBF           equ	14935	;# 
 15595   003A5A                     RB1I2C          equ	14938	;# 
 15596   003A5B                     RB2I2C          equ	14939	;# 
 15597   003A60                     ANSELC          equ	14944	;# 
 15598   003A61                     WPUC            equ	14945	;# 
 15599   003A62                     ODCONC          equ	14946	;# 
 15600   003A63                     SLRCONC         equ	14947	;# 
 15601   003A64                     INLVLC          equ	14948	;# 
 15602   003A65                     IOCCP           equ	14949	;# 
 15603   003A66                     IOCCN           equ	14950	;# 
 15604   003A67                     IOCCF           equ	14951	;# 
 15605   003A6A                     RC3I2C          equ	14954	;# 
 15606   003A6B                     RC4I2C          equ	14955	;# 
 15607   003A70                     ANSELD          equ	14960	;# 
 15608   003A71                     WPUD            equ	14961	;# 
 15609   003A72                     ODCOND          equ	14962	;# 
 15610   003A73                     SLRCOND         equ	14963	;# 
 15611   003A74                     INLVLD          equ	14964	;# 
 15612   003A7A                     RD0I2C          equ	14970	;# 
 15613   003A7B                     RD1I2C          equ	14971	;# 
 15614   003A80                     ANSELE          equ	14976	;# 
 15615   003A81                     WPUE            equ	14977	;# 
 15616   003A82                     ODCONE          equ	14978	;# 
 15617   003A83                     SLRCONE         equ	14979	;# 
 15618   003A84                     INLVLE          equ	14980	;# 
 15619   003A85                     IOCEP           equ	14981	;# 
 15620   003A86                     IOCEN           equ	14982	;# 
 15621   003A87                     IOCEF           equ	14983	;# 
 15622   003A90                     ANSELF          equ	14992	;# 
 15623   003A91                     WPUF            equ	14993	;# 
 15624   003A92                     ODCONF          equ	14994	;# 
 15625   003A93                     SLRCONF         equ	14995	;# 
 15626   003A94                     INLVLF          equ	14996	;# 
 15627   003ABF                     PPSLOCK         equ	15039	;# 
 15628   003AC0                     INT0PPS         equ	15040	;# 
 15629   003AC1                     INT1PPS         equ	15041	;# 
 15630   003AC2                     INT2PPS         equ	15042	;# 
 15631   003AC3                     T0CKIPPS        equ	15043	;# 
 15632   003AC4                     T1CKIPPS        equ	15044	;# 
 15633   003AC5                     T1GPPS          equ	15045	;# 
 15634   003AC6                     T3CKIPPS        equ	15046	;# 
 15635   003AC7                     T3GPPS          equ	15047	;# 
 15636   003AC8                     T5CKIPPS        equ	15048	;# 
 15637   003AC9                     T5GPPS          equ	15049	;# 
 15638   003ACA                     T2INPPS         equ	15050	;# 
 15639   003ACB                     T4INPPS         equ	15051	;# 
 15640   003ACC                     T6INPPS         equ	15052	;# 
 15641   003ACD                     CCP1PPS         equ	15053	;# 
 15642   003ACE                     CCP2PPS         equ	15054	;# 
 15643   003ACF                     CCP3PPS         equ	15055	;# 
 15644   003AD0                     CCP4PPS         equ	15056	;# 
 15645   003AD1                     SMT1WINPPS      equ	15057	;# 
 15646   003AD2                     SMT1SIGPPS      equ	15058	;# 
 15647   003AD3                     CWG1INPPS       equ	15059	;# 
 15648   003AD4                     CWG2INPPS       equ	15060	;# 
 15649   003AD5                     CWG3INPPS       equ	15061	;# 
 15650   003AD6                     MD1CARLPPS      equ	15062	;# 
 15651   003AD7                     MD1CARHPPS      equ	15063	;# 
 15652   003AD8                     MD1SRCPPS       equ	15064	;# 
 15653   003AD9                     CLCIN0PPS       equ	15065	;# 
 15654   003ADA                     CLCIN1PPS       equ	15066	;# 
 15655   003ADB                     CLCIN2PPS       equ	15067	;# 
 15656   003ADC                     CLCIN3PPS       equ	15068	;# 
 15657   003ADD                     ADACTPPS        equ	15069	;# 
 15658   003ADE                     SPI1SCKPPS      equ	15070	;# 
 15659   003ADF                     SPI1SDIPPS      equ	15071	;# 
 15660   003AE0                     SPI1SSPPS       equ	15072	;# 
 15661   003AE1                     I2C1SCLPPS      equ	15073	;# 
 15662   003AE2                     I2C1SDAPPS      equ	15074	;# 
 15663   003AE3                     I2C2SCLPPS      equ	15075	;# 
 15664   003AE4                     I2C2SDAPPS      equ	15076	;# 
 15665   003AE5                     U1RXPPS         equ	15077	;# 
 15666   003AE6                     U1CTSPPS        equ	15078	;# 
 15667   003AE8                     U2RXPPS         equ	15080	;# 
 15668   003AE9                     U2CTSPPS        equ	15081	;# 
 15669   003BC9                     DMA2BUF         equ	15305	;# 
 15670   003BCA                     DMA2DCNT        equ	15306	;# 
 15671   003BCA                     DMA2DCNTL       equ	15306	;# 
 15672   003BCB                     DMA2DCNTH       equ	15307	;# 
 15673   003BCC                     DMA2DPTR        equ	15308	;# 
 15674   003BCC                     DMA2DPTRL       equ	15308	;# 
 15675   003BCD                     DMA2DPTRH       equ	15309	;# 
 15676   003BCE                     DMA2DSZ         equ	15310	;# 
 15677   003BCE                     DMA2DSZL        equ	15310	;# 
 15678   003BCF                     DMA2DSZH        equ	15311	;# 
 15679   003BD0                     DMA2DSA         equ	15312	;# 
 15680   003BD0                     DMA2DSAL        equ	15312	;# 
 15681   003BD1                     DMA2DSAH        equ	15313	;# 
 15682   003BD2                     DMA2SCNT        equ	15314	;# 
 15683   003BD2                     DMA2SCNTL       equ	15314	;# 
 15684   003BD3                     DMA2SCNTH       equ	15315	;# 
 15685   003BD4                     DMA2SPTR        equ	15316	;# 
 15686   003BD4                     DMA2SPTRL       equ	15316	;# 
 15687   003BD5                     DMA2SPTRH       equ	15317	;# 
 15688   003BD6                     DMA2SPTRU       equ	15318	;# 
 15689   003BD7                     DMA2SSZ         equ	15319	;# 
 15690   003BD7                     DMA2SSZL        equ	15319	;# 
 15691   003BD8                     DMA2SSZH        equ	15320	;# 
 15692   003BD9                     DMA2SSA         equ	15321	;# 
 15693   003BD9                     DMA2SSAL        equ	15321	;# 
 15694   003BDA                     DMA2SSAH        equ	15322	;# 
 15695   003BDB                     DMA2SSAU        equ	15323	;# 
 15696   003BDC                     DMA2CON0        equ	15324	;# 
 15697   003BDD                     DMA2CON1        equ	15325	;# 
 15698   003BDE                     DMA2AIRQ        equ	15326	;# 
 15699   003BDF                     DMA2SIRQ        equ	15327	;# 
 15700   003BE9                     DMA1BUF         equ	15337	;# 
 15701   003BEA                     DMA1DCNT        equ	15338	;# 
 15702   003BEA                     DMA1DCNTL       equ	15338	;# 
 15703   003BEB                     DMA1DCNTH       equ	15339	;# 
 15704   003BEC                     DMA1DPTR        equ	15340	;# 
 15705   003BEC                     DMA1DPTRL       equ	15340	;# 
 15706   003BED                     DMA1DPTRH       equ	15341	;# 
 15707   003BEE                     DMA1DSZ         equ	15342	;# 
 15708   003BEE                     DMA1DSZL        equ	15342	;# 
 15709   003BEF                     DMA1DSZH        equ	15343	;# 
 15710   003BF0                     DMA1DSA         equ	15344	;# 
 15711   003BF0                     DMA1DSAL        equ	15344	;# 
 15712   003BF1                     DMA1DSAH        equ	15345	;# 
 15713   003BF2                     DMA1SCNT        equ	15346	;# 
 15714   003BF2                     DMA1SCNTL       equ	15346	;# 
 15715   003BF3                     DMA1SCNTH       equ	15347	;# 
 15716   003BF4                     DMA1SPTR        equ	15348	;# 
 15717   003BF4                     DMA1SPTRL       equ	15348	;# 
 15718   003BF5                     DMA1SPTRH       equ	15349	;# 
 15719   003BF6                     DMA1SPTRU       equ	15350	;# 
 15720   003BF7                     DMA1SSZ         equ	15351	;# 
 15721   003BF7                     DMA1SSZL        equ	15351	;# 
 15722   003BF8                     DMA1SSZH        equ	15352	;# 
 15723   003BF9                     DMA1SSA         equ	15353	;# 
 15724   003BF9                     DMA1SSAL        equ	15353	;# 
 15725   003BFA                     DMA1SSAH        equ	15354	;# 
 15726   003BFB                     DMA1SSAU        equ	15355	;# 
 15727   003BFC                     DMA1CON0        equ	15356	;# 
 15728   003BFD                     DMA1CON1        equ	15357	;# 
 15729   003BFE                     DMA1AIRQ        equ	15358	;# 
 15730   003BFF                     DMA1SIRQ        equ	15359	;# 
 15731   003C56                     CLC4CON         equ	15446	;# 
 15732   003C57                     CLC4POL         equ	15447	;# 
 15733   003C58                     CLC4SEL0        equ	15448	;# 
 15734   003C59                     CLC4SEL1        equ	15449	;# 
 15735   003C5A                     CLC4SEL2        equ	15450	;# 
 15736   003C5B                     CLC4SEL3        equ	15451	;# 
 15737   003C5C                     CLC4GLS0        equ	15452	;# 
 15738   003C5D                     CLC4GLS1        equ	15453	;# 
 15739   003C5E                     CLC4GLS2        equ	15454	;# 
 15740   003C5F                     CLC4GLS3        equ	15455	;# 
 15741   003C60                     CLC3CON         equ	15456	;# 
 15742   003C61                     CLC3POL         equ	15457	;# 
 15743   003C62                     CLC3SEL0        equ	15458	;# 
 15744   003C63                     CLC3SEL1        equ	15459	;# 
 15745   003C64                     CLC3SEL2        equ	15460	;# 
 15746   003C65                     CLC3SEL3        equ	15461	;# 
 15747   003C66                     CLC3GLS0        equ	15462	;# 
 15748   003C67                     CLC3GLS1        equ	15463	;# 
 15749   003C68                     CLC3GLS2        equ	15464	;# 
 15750   003C69                     CLC3GLS3        equ	15465	;# 
 15751   003C6A                     CLC2CON         equ	15466	;# 
 15752   003C6B                     CLC2POL         equ	15467	;# 
 15753   003C6C                     CLC2SEL0        equ	15468	;# 
 15754   003C6D                     CLC2SEL1        equ	15469	;# 
 15755   003C6E                     CLC2SEL2        equ	15470	;# 
 15756   003C6F                     CLC2SEL3        equ	15471	;# 
 15757   003C70                     CLC2GLS0        equ	15472	;# 
 15758   003C71                     CLC2GLS1        equ	15473	;# 
 15759   003C72                     CLC2GLS2        equ	15474	;# 
 15760   003C73                     CLC2GLS3        equ	15475	;# 
 15761   003C74                     CLC1CON         equ	15476	;# 
 15762   003C75                     CLC1POL         equ	15477	;# 
 15763   003C76                     CLC1SEL0        equ	15478	;# 
 15764   003C77                     CLC1SEL1        equ	15479	;# 
 15765   003C78                     CLC1SEL2        equ	15480	;# 
 15766   003C79                     CLC1SEL3        equ	15481	;# 
 15767   003C7A                     CLC1GLS0        equ	15482	;# 
 15768   003C7B                     CLC1GLS1        equ	15483	;# 
 15769   003C7C                     CLC1GLS2        equ	15484	;# 
 15770   003C7D                     CLC1GLS3        equ	15485	;# 
 15771   003C7E                     CLCDATA0        equ	15486	;# 
 15772   003CE5                     CLKRCON         equ	15589	;# 
 15773   003CE6                     CLKRCLK         equ	15590	;# 
 15774   003CFA                     MD1CON0         equ	15610	;# 
 15775   003CFB                     MD1CON1         equ	15611	;# 
 15776   003CFC                     MD1SRC          equ	15612	;# 
 15777   003CFD                     MD1CARL         equ	15613	;# 
 15778   003CFE                     MD1CARH         equ	15614	;# 
 15779   003D10                     SPI1RXB         equ	15632	;# 
 15780   003D11                     SPI1TXB         equ	15633	;# 
 15781   003D12                     SPI1TCNT        equ	15634	;# 
 15782   003D12                     SPI1TCNTL       equ	15634	;# 
 15783   003D13                     SPI1TCNTH       equ	15635	;# 
 15784   003D14                     SPI1CON0        equ	15636	;# 
 15785   003D15                     SPI1CON1        equ	15637	;# 
 15786   003D16                     SPI1CON2        equ	15638	;# 
 15787   003D17                     SPI1STATUS      equ	15639	;# 
 15788   003D18                     SPI1TWIDTH      equ	15640	;# 
 15789   003D19                     SPI1BAUD        equ	15641	;# 
 15790   003D1A                     SPI1INTF        equ	15642	;# 
 15791   003D1B                     SPI1INTE        equ	15643	;# 
 15792   003D1C                     SPI1CLK         equ	15644	;# 
 15793   003D54                     I2C2RXB         equ	15700	;# 
 15794   003D55                     I2C2TXB         equ	15701	;# 
 15795   003D56                     I2C2CNT         equ	15702	;# 
 15796   003D57                     I2C2ADB0        equ	15703	;# 
 15797   003D58                     I2C2ADB1        equ	15704	;# 
 15798   003D59                     I2C2ADR0        equ	15705	;# 
 15799   003D5A                     I2C2ADR1        equ	15706	;# 
 15800   003D5B                     I2C2ADR2        equ	15707	;# 
 15801   003D5C                     I2C2ADR3        equ	15708	;# 
 15802   003D5D                     I2C2CON0        equ	15709	;# 
 15803   003D5E                     I2C2CON1        equ	15710	;# 
 15804   003D5F                     I2C2CON2        equ	15711	;# 
 15805   003D60                     I2C2ERR         equ	15712	;# 
 15806   003D61                     I2C2STAT0       equ	15713	;# 
 15807   003D62                     I2C2STAT1       equ	15714	;# 
 15808   003D63                     I2C2PIR         equ	15715	;# 
 15809   003D64                     I2C2PIE         equ	15716	;# 
 15810   003D65                     I2C2CLK         equ	15717	;# 
 15811   003D66                     I2C2BTO         equ	15718	;# 
 15812   003D6A                     I2C1RXB         equ	15722	;# 
 15813   003D6B                     I2C1TXB         equ	15723	;# 
 15814   003D6C                     I2C1CNT         equ	15724	;# 
 15815   003D6D                     I2C1ADB0        equ	15725	;# 
 15816   003D6E                     I2C1ADB1        equ	15726	;# 
 15817   003D6F                     I2C1ADR0        equ	15727	;# 
 15818   003D70                     I2C1ADR1        equ	15728	;# 
 15819   003D71                     I2C1ADR2        equ	15729	;# 
 15820   003D72                     I2C1ADR3        equ	15730	;# 
 15821   003D73                     I2C1CON0        equ	15731	;# 
 15822   003D74                     I2C1CON1        equ	15732	;# 
 15823   003D75                     I2C1CON2        equ	15733	;# 
 15824   003D76                     I2C1ERR         equ	15734	;# 
 15825   003D77                     I2C1STAT0       equ	15735	;# 
 15826   003D78                     I2C1STAT1       equ	15736	;# 
 15827   003D79                     I2C1PIR         equ	15737	;# 
 15828   003D7A                     I2C1PIE         equ	15738	;# 
 15829   003D7B                     I2C1CLK         equ	15739	;# 
 15830   003D7C                     I2C1BTO         equ	15740	;# 
 15831   003DD0                     U2RXB           equ	15824	;# 
 15832   003DD0                     U2RXBL          equ	15824	;# 
 15833   003DD2                     U2TXB           equ	15826	;# 
 15834   003DD2                     U2TXBL          equ	15826	;# 
 15835   003DD4                     U2P1            equ	15828	;# 
 15836   003DD4                     U2P1L           equ	15828	;# 
 15837   003DD6                     U2P2            equ	15830	;# 
 15838   003DD6                     U2P2L           equ	15830	;# 
 15839   003DD8                     U2P3            equ	15832	;# 
 15840   003DD8                     U2P3L           equ	15832	;# 
 15841   003DDA                     U2CON0          equ	15834	;# 
 15842   003DDB                     U2CON1          equ	15835	;# 
 15843   003DDC                     U2CON2          equ	15836	;# 
 15844   003DDD                     U2BRG           equ	15837	;# 
 15845   003DDD                     U2BRGL          equ	15837	;# 
 15846   003DDE                     U2BRGH          equ	15838	;# 
 15847   003DDF                     U2FIFO          equ	15839	;# 
 15848   003DE0                     U2UIR           equ	15840	;# 
 15849   003DE1                     U2ERRIR         equ	15841	;# 
 15850   003DE2                     U2ERRIE         equ	15842	;# 
 15851   003DE8                     U1RXB           equ	15848	;# 
 15852   003DE8                     U1RXBL          equ	15848	;# 
 15853   003DE9                     U1RXCHK         equ	15849	;# 
 15854   003DEA                     U1TXB           equ	15850	;# 
 15855   003DEA                     U1TXBL          equ	15850	;# 
 15856   003DEB                     U1TXCHK         equ	15851	;# 
 15857   003DEC                     U1P1            equ	15852	;# 
 15858   003DEC                     U1P1L           equ	15852	;# 
 15859   003DED                     U1P1H           equ	15853	;# 
 15860   003DEE                     U1P2            equ	15854	;# 
 15861   003DEE                     U1P2L           equ	15854	;# 
 15862   003DEF                     U1P2H           equ	15855	;# 
 15863   003DF0                     U1P3            equ	15856	;# 
 15864   003DF0                     U1P3L           equ	15856	;# 
 15865   003DF1                     U1P3H           equ	15857	;# 
 15866   003DF2                     U1CON0          equ	15858	;# 
 15867   003DF3                     U1CON1          equ	15859	;# 
 15868   003DF4                     U1CON2          equ	15860	;# 
 15869   003DF5                     U1BRG           equ	15861	;# 
 15870   003DF5                     U1BRGL          equ	15861	;# 
 15871   003DF6                     U1BRGH          equ	15862	;# 
 15872   003DF7                     U1FIFO          equ	15863	;# 
 15873   003DF8                     U1UIR           equ	15864	;# 
 15874   003DF9                     U1ERRIR         equ	15865	;# 
 15875   003DFA                     U1ERRIE         equ	15866	;# 
 15876   003E9C                     DAC1CON1        equ	16028	;# 
 15877   003E9E                     DAC1CON0        equ	16030	;# 
 15878   003EB8                     CM2CON0         equ	16056	;# 
 15879   003EB9                     CM2CON1         equ	16057	;# 
 15880   003EBA                     CM2NCH          equ	16058	;# 
 15881   003EBB                     CM2PCH          equ	16059	;# 
 15882   003EBC                     CM1CON0         equ	16060	;# 
 15883   003EBD                     CM1CON1         equ	16061	;# 
 15884   003EBE                     CM1NCH          equ	16062	;# 
 15885   003EBF                     CM1PCH          equ	16063	;# 
 15886   003EC0                     CMOUT           equ	16064	;# 
 15887   003EC1                     FVRCON          equ	16065	;# 
 15888   003EC3                     ZCDCON          equ	16067	;# 
 15889   003EC9                     HLVDCON0        equ	16073	;# 
 15890   003ECA                     HLVDCON1        equ	16074	;# 
 15891   003ED7                     ADCP            equ	16087	;# 
 15892   003EDE                     ADLTH           equ	16094	;# 
 15893   003EDE                     ADLTHL          equ	16094	;# 
 15894   003EDF                     ADLTHH          equ	16095	;# 
 15895   003EE0                     ADUTH           equ	16096	;# 
 15896   003EE0                     ADUTHL          equ	16096	;# 
 15897   003EE1                     ADUTHH          equ	16097	;# 
 15898   003EE2                     ADERR           equ	16098	;# 
 15899   003EE2                     ADERRL          equ	16098	;# 
 15900   003EE3                     ADERRH          equ	16099	;# 
 15901   003EE4                     ADSTPT          equ	16100	;# 
 15902   003EE4                     ADSTPTL         equ	16100	;# 
 15903   003EE5                     ADSTPTH         equ	16101	;# 
 15904   003EE6                     ADFLTR          equ	16102	;# 
 15905   003EE6                     ADFLTRL         equ	16102	;# 
 15906   003EE7                     ADFLTRH         equ	16103	;# 
 15907   003EE8                     ADACC           equ	16104	;# 
 15908   003EE8                     ADACCL          equ	16104	;# 
 15909   003EE9                     ADACCH          equ	16105	;# 
 15910   003EEA                     ADACCU          equ	16106	;# 
 15911   003EEB                     ADCNT           equ	16107	;# 
 15912   003EEC                     ADRPT           equ	16108	;# 
 15913   003EED                     ADPREV          equ	16109	;# 
 15914   003EED                     ADPREVL         equ	16109	;# 
 15915   003EEE                     ADPREVH         equ	16110	;# 
 15916   003EEF                     ADRES           equ	16111	;# 
 15917   003EEF                     ADRESL          equ	16111	;# 
 15918   003EF0                     ADRESH          equ	16112	;# 
 15919   003EF1                     ADPCH           equ	16113	;# 
 15920   003EF3                     ADACQ           equ	16115	;# 
 15921   003EF3                     ADACQL          equ	16115	;# 
 15922   003EF4                     ADACQH          equ	16116	;# 
 15923   003EF5                     ADCAP           equ	16117	;# 
 15924   003EF6                     ADPRE           equ	16118	;# 
 15925   003EF6                     ADPREL          equ	16118	;# 
 15926   003EF7                     ADPREH          equ	16119	;# 
 15927   003EF8                     ADCON0          equ	16120	;# 
 15928   003EF9                     ADCON1          equ	16121	;# 
 15929   003EFA                     ADCON2          equ	16122	;# 
 15930   003EFB                     ADCON3          equ	16123	;# 
 15931   003EFC                     ADSTAT          equ	16124	;# 
 15932   003EFD                     ADREF           equ	16125	;# 
 15933   003EFE                     ADACT           equ	16126	;# 
 15934   003EFF                     ADCLK           equ	16127	;# 
 15935   003F12                     SMT1TMR         equ	16146	;# 
 15936   003F12                     SMT1TMRL        equ	16146	;# 
 15937   003F13                     SMT1TMRH        equ	16147	;# 
 15938   003F14                     SMT1TMRU        equ	16148	;# 
 15939   003F15                     SMT1CPR         equ	16149	;# 
 15940   003F15                     SMT1CPRL        equ	16149	;# 
 15941   003F16                     SMT1CPRH        equ	16150	;# 
 15942   003F17                     SMT1CPRU        equ	16151	;# 
 15943   003F18                     SMT1CPW         equ	16152	;# 
 15944   003F18                     SMT1CPWL        equ	16152	;# 
 15945   003F19                     SMT1CPWH        equ	16153	;# 
 15946   003F1A                     SMT1CPWU        equ	16154	;# 
 15947   003F1B                     SMT1PR          equ	16155	;# 
 15948   003F1B                     SMT1PRL         equ	16155	;# 
 15949   003F1C                     SMT1PRH         equ	16156	;# 
 15950   003F1D                     SMT1PRU         equ	16157	;# 
 15951   003F1E                     SMT1CON0        equ	16158	;# 
 15952   003F1F                     SMT1CON1        equ	16159	;# 
 15953   003F20                     SMT1STAT        equ	16160	;# 
 15954   003F21                     SMT1CLK         equ	16161	;# 
 15955   003F22                     SMT1SIG         equ	16162	;# 
 15956   003F23                     SMT1WIN         equ	16163	;# 
 15957   003F38                     NCO1ACC         equ	16184	;# 
 15958   003F38                     NCO1ACCL        equ	16184	;# 
 15959   003F39                     NCO1ACCH        equ	16185	;# 
 15960   003F3A                     NCO1ACCU        equ	16186	;# 
 15961   003F3B                     NCO1INC         equ	16187	;# 
 15962   003F3B                     NCO1INCL        equ	16187	;# 
 15963   003F3C                     NCO1INCH        equ	16188	;# 
 15964   003F3D                     NCO1INCU        equ	16189	;# 
 15965   003F3E                     NCO1CON         equ	16190	;# 
 15966   003F3F                     NCO1CLK         equ	16191	;# 
 15967   003F40                     CWG3CLK         equ	16192	;# 
 15968   003F40                     CWG3CLKCON      equ	16192	;# 
 15969   003F41                     CWG3ISM         equ	16193	;# 
 15970   003F41                     CWG3DAT         equ	16193	;# 
 15971   003F42                     CWG3DBR         equ	16194	;# 
 15972   003F43                     CWG3DBF         equ	16195	;# 
 15973   003F44                     CWG3CON0        equ	16196	;# 
 15974   003F45                     CWG3CON1        equ	16197	;# 
 15975   003F46                     CWG3AS0         equ	16198	;# 
 15976   003F47                     CWG3AS1         equ	16199	;# 
 15977   003F48                     CWG3STR         equ	16200	;# 
 15978   003F49                     CWG2CLK         equ	16201	;# 
 15979   003F49                     CWG2CLKCON      equ	16201	;# 
 15980   003F4A                     CWG2ISM         equ	16202	;# 
 15981   003F4A                     CWG2DAT         equ	16202	;# 
 15982   003F4B                     CWG2DBR         equ	16203	;# 
 15983   003F4C                     CWG2DBF         equ	16204	;# 
 15984   003F4D                     CWG2CON0        equ	16205	;# 
 15985   003F4E                     CWG2CON1        equ	16206	;# 
 15986   003F4F                     CWG2AS0         equ	16207	;# 
 15987   003F50                     CWG2AS1         equ	16208	;# 
 15988   003F51                     CWG2STR         equ	16209	;# 
 15989   003F52                     CWG1CLK         equ	16210	;# 
 15990   003F52                     CWG1CLKCON      equ	16210	;# 
 15991   003F53                     CWG1ISM         equ	16211	;# 
 15992   003F53                     CWG1DAT         equ	16211	;# 
 15993   003F54                     CWG1DBR         equ	16212	;# 
 15994   003F55                     CWG1DBF         equ	16213	;# 
 15995   003F56                     CWG1CON0        equ	16214	;# 
 15996   003F57                     CWG1CON1        equ	16215	;# 
 15997   003F58                     CWG1AS0         equ	16216	;# 
 15998   003F59                     CWG1AS1         equ	16217	;# 
 15999   003F5A                     CWG1STR         equ	16218	;# 
 16000   003F5E                     CCPTMRS0        equ	16222	;# 
 16001   003F5F                     CCPTMRS1        equ	16223	;# 
 16002   003F60                     PWM8DC          equ	16224	;# 
 16003   003F60                     PWM8DCL         equ	16224	;# 
 16004   003F61                     PWM8DCH         equ	16225	;# 
 16005   003F62                     PWM8CON         equ	16226	;# 
 16006   003F64                     PWM7DC          equ	16228	;# 
 16007   003F64                     PWM7DCL         equ	16228	;# 
 16008   003F65                     PWM7DCH         equ	16229	;# 
 16009   003F66                     PWM7CON         equ	16230	;# 
 16010   003F68                     PWM6DC          equ	16232	;# 
 16011   003F68                     PWM6DCL         equ	16232	;# 
 16012   003F69                     PWM6DCH         equ	16233	;# 
 16013   003F6A                     PWM6CON         equ	16234	;# 
 16014   003F6C                     PWM5DC          equ	16236	;# 
 16015   003F6C                     PWM5DCL         equ	16236	;# 
 16016   003F6D                     PWM5DCH         equ	16237	;# 
 16017   003F6E                     PWM5CON         equ	16238	;# 
 16018   003F70                     CCPR4           equ	16240	;# 
 16019   003F70                     CCPR4L          equ	16240	;# 
 16020   003F71                     CCPR4H          equ	16241	;# 
 16021   003F72                     CCP4CON         equ	16242	;# 
 16022   003F73                     CCP4CAP         equ	16243	;# 
 16023   003F74                     CCPR3           equ	16244	;# 
 16024   003F74                     CCPR3L          equ	16244	;# 
 16025   003F75                     CCPR3H          equ	16245	;# 
 16026   003F76                     CCP3CON         equ	16246	;# 
 16027   003F77                     CCP3CAP         equ	16247	;# 
 16028   003F78                     CCPR2           equ	16248	;# 
 16029   003F78                     CCPR2L          equ	16248	;# 
 16030   003F79                     CCPR2H          equ	16249	;# 
 16031   003F7A                     CCP2CON         equ	16250	;# 
 16032   003F7B                     CCP2CAP         equ	16251	;# 
 16033   003F7C                     CCPR1           equ	16252	;# 
 16034   003F7C                     CCPR1L          equ	16252	;# 
 16035   003F7D                     CCPR1H          equ	16253	;# 
 16036   003F7E                     CCP1CON         equ	16254	;# 
 16037   003F7F                     CCP1CAP         equ	16255	;# 
 16038   003F92                     T6TMR           equ	16274	;# 
 16039   003F92                     TMR6            equ	16274	;# 
 16040   003F93                     T6PR            equ	16275	;# 
 16041   003F93                     PR6             equ	16275	;# 
 16042   003F94                     T6CON           equ	16276	;# 
 16043   003F95                     T6HLT           equ	16277	;# 
 16044   003F96                     T6CLKCON        equ	16278	;# 
 16045   003F96                     T6CLK           equ	16278	;# 
 16046   003F97                     T6RST           equ	16279	;# 
 16047   003F98                     TMR5            equ	16280	;# 
 16048   003F98                     TMR5L           equ	16280	;# 
 16049   003F99                     TMR5H           equ	16281	;# 
 16050   003F9A                     T5CON           equ	16282	;# 
 16051   003F9A                     TMR5CON         equ	16282	;# 
 16052   003F9B                     T5GCON          equ	16283	;# 
 16053   003F9B                     TMR5GCON        equ	16283	;# 
 16054   003F9C                     T5GATE          equ	16284	;# 
 16055   003F9C                     TMR5GATE        equ	16284	;# 
 16056   003F9D                     T5CLK           equ	16285	;# 
 16057   003F9D                     TMR5CLK         equ	16285	;# 
 16058   003F9D                     PR5             equ	16285	;# 
 16059   003F9E                     T4TMR           equ	16286	;# 
 16060   003F9E                     TMR4            equ	16286	;# 
 16061   003F9F                     T4PR            equ	16287	;# 
 16062   003F9F                     PR4             equ	16287	;# 
 16063   003FA0                     T4CON           equ	16288	;# 
 16064   003FA1                     T4HLT           equ	16289	;# 
 16065   003FA2                     T4CLKCON        equ	16290	;# 
 16066   003FA2                     T4CLK           equ	16290	;# 
 16067   003FA3                     T4RST           equ	16291	;# 
 16068   003FA4                     TMR3            equ	16292	;# 
 16069   003FA4                     TMR3L           equ	16292	;# 
 16070   003FA5                     TMR3H           equ	16293	;# 
 16071   003FA6                     T3CON           equ	16294	;# 
 16072   003FA6                     TMR3CON         equ	16294	;# 
 16073   003FA7                     T3GCON          equ	16295	;# 
 16074   003FA7                     TMR3GCON        equ	16295	;# 
 16075   003FA8                     T3GATE          equ	16296	;# 
 16076   003FA8                     TMR3GATE        equ	16296	;# 
 16077   003FA9                     T3CLK           equ	16297	;# 
 16078   003FA9                     TMR3CLK         equ	16297	;# 
 16079   003FA9                     PR3             equ	16297	;# 
 16080   003FAA                     T2TMR           equ	16298	;# 
 16081   003FAA                     TMR2            equ	16298	;# 
 16082   003FAB                     T2PR            equ	16299	;# 
 16083   003FAB                     PR2             equ	16299	;# 
 16084   003FAC                     T2CON           equ	16300	;# 
 16085   003FAD                     T2HLT           equ	16301	;# 
 16086   003FAE                     T2CLKCON        equ	16302	;# 
 16087   003FAE                     T2CLK           equ	16302	;# 
 16088   003FAF                     T2RST           equ	16303	;# 
 16089   003FB0                     TMR1            equ	16304	;# 
 16090   003FB0                     TMR1L           equ	16304	;# 
 16091   003FB1                     TMR1H           equ	16305	;# 
 16092   003FB2                     T1CON           equ	16306	;# 
 16093   003FB2                     TMR1CON         equ	16306	;# 
 16094   003FB3                     T1GCON          equ	16307	;# 
 16095   003FB3                     TMR1GCON        equ	16307	;# 
 16096   003FB4                     T1GATE          equ	16308	;# 
 16097   003FB4                     TMR1GATE        equ	16308	;# 
 16098   003FB5                     T1CLK           equ	16309	;# 
 16099   003FB5                     TMR1CLK         equ	16309	;# 
 16100   003FB5                     PR1             equ	16309	;# 
 16101   003FB6                     TMR0L           equ	16310	;# 
 16102   003FB6                     TMR0            equ	16310	;# 
 16103   003FB7                     TMR0H           equ	16311	;# 
 16104   003FB7                     PR0             equ	16311	;# 
 16105   003FB8                     T0CON0          equ	16312	;# 
 16106   003FB9                     T0CON1          equ	16313	;# 
 16107   003FBA                     LATA            equ	16314	;# 
 16108   003FBB                     LATB            equ	16315	;# 
 16109   003FBC                     LATC            equ	16316	;# 
 16110   003FBD                     LATD            equ	16317	;# 
 16111   003FBE                     LATE            equ	16318	;# 
 16112   003FBF                     LATF            equ	16319	;# 
 16113   003FC2                     TRISA           equ	16322	;# 
 16114   003FC3                     TRISB           equ	16323	;# 
 16115   003FC4                     TRISC           equ	16324	;# 
 16116   003FC5                     TRISD           equ	16325	;# 
 16117   003FC6                     TRISE           equ	16326	;# 
 16118   003FC7                     TRISF           equ	16327	;# 
 16119   003FCA                     PORTA           equ	16330	;# 
 16120   003FCB                     PORTB           equ	16331	;# 
 16121   003FCC                     PORTC           equ	16332	;# 
 16122   003FCD                     PORTD           equ	16333	;# 
 16123   003FCE                     PORTE           equ	16334	;# 
 16124   003FCF                     PORTF           equ	16335	;# 
 16125   003FD2                     INTCON0         equ	16338	;# 
 16126   003FD3                     INTCON1         equ	16339	;# 
 16127   003FD4                     IVTLOCK         equ	16340	;# 
 16128   003FD5                     IVTBASE         equ	16341	;# 
 16129   003FD5                     IVTBASEL        equ	16341	;# 
 16130   003FD6                     IVTBASEH        equ	16342	;# 
 16131   003FD7                     IVTBASEU        equ	16343	;# 
 16132   003FD8                     STATUS          equ	16344	;# 
 16133   003FD9                     FSR2            equ	16345	;# 
 16134   003FD9                     FSR2L           equ	16345	;# 
 16135   003FDA                     FSR2H           equ	16346	;# 
 16136   003FDB                     PLUSW2          equ	16347	;# 
 16137   003FDC                     PREINC2         equ	16348	;# 
 16138   003FDD                     POSTDEC2        equ	16349	;# 
 16139   003FDE                     POSTINC2        equ	16350	;# 
 16140   003FDF                     INDF2           equ	16351	;# 
 16141   003FE0                     BSR             equ	16352	;# 
 16142   003FE1                     FSR1            equ	16353	;# 
 16143   003FE1                     FSR1L           equ	16353	;# 
 16144   003FE2                     FSR1H           equ	16354	;# 
 16145   003FE3                     PLUSW1          equ	16355	;# 
 16146   003FE4                     PREINC1         equ	16356	;# 
 16147   003FE5                     POSTDEC1        equ	16357	;# 
 16148   003FE6                     POSTINC1        equ	16358	;# 
 16149   003FE7                     INDF1           equ	16359	;# 
 16150   003FE8                     WREG            equ	16360	;# 
 16151   003FE9                     FSR0            equ	16361	;# 
 16152   003FE9                     FSR0L           equ	16361	;# 
 16153   003FEA                     FSR0H           equ	16362	;# 
 16154   003FEB                     PLUSW0          equ	16363	;# 
 16155   003FEC                     PREINC0         equ	16364	;# 
 16156   003FED                     POSTDEC0        equ	16365	;# 
 16157   003FEE                     POSTINC0        equ	16366	;# 
 16158   003FEF                     INDF0           equ	16367	;# 
 16159   003FF0                     PCON0           equ	16368	;# 
 16160   003FF1                     PCON1           equ	16369	;# 
 16161   003FF3                     PROD            equ	16371	;# 
 16162   003FF3                     PRODL           equ	16371	;# 
 16163   003FF4                     PRODH           equ	16372	;# 
 16164   003FF5                     TABLAT          equ	16373	;# 
 16165   003FF6                     TBLPTR          equ	16374	;# 
 16166   003FF6                     TBLPTRL         equ	16374	;# 
 16167   003FF7                     TBLPTRH         equ	16375	;# 
 16168   003FF8                     TBLPTRU         equ	16376	;# 
 16169   003FF9                     PCLAT           equ	16377	;# 
 16170   003FF9                     PCL             equ	16377	;# 
 16171   003FFA                     PCLATH          equ	16378	;# 
 16172   003FFB                     PCLATU          equ	16379	;# 
 16173   003FFC                     STKPTR          equ	16380	;# 
 16174   003FFD                     TOS             equ	16381	;# 
 16175   003FFD                     TOSL            equ	16381	;# 
 16176   003FFE                     TOSH            equ	16382	;# 
 16177   003FFF                     TOSU            equ	16383	;# 
 16178   003880                     STATUS_CSHAD    equ	14464	;# 
 16179   003881                     WREG_CSHAD      equ	14465	;# 
 16180   003882                     BSR_CSHAD       equ	14466	;# 
 16181   003883                     SHADCON         equ	14467	;# 
 16182   003884                     STATUS_SHAD     equ	14468	;# 
 16183   003885                     WREG_SHAD       equ	14469	;# 
 16184   003886                     BSR_SHAD        equ	14470	;# 
 16185   003887                     PCLATH_SHAD     equ	14471	;# 
 16186   003888                     PCLATU_SHAD     equ	14472	;# 
 16187   003889                     FSR0SH          equ	14473	;# 
 16188   003889                     FSR0L_SHAD      equ	14473	;# 
 16189   00388A                     FSR0H_SHAD      equ	14474	;# 
 16190   00388B                     FSR1SH          equ	14475	;# 
 16191   00388B                     FSR1L_SHAD      equ	14475	;# 
 16192   00388C                     FSR1H_SHAD      equ	14476	;# 
 16193   00388D                     FSR2SH          equ	14477	;# 
 16194   00388D                     FSR2L_SHAD      equ	14477	;# 
 16195   00388E                     FSR2H_SHAD      equ	14478	;# 
 16196   00388F                     PRODSH          equ	14479	;# 
 16197   00388F                     PRODL_SHAD      equ	14479	;# 
 16198   003890                     PRODH_SHAD      equ	14480	;# 
 16199   00389D                     IVTADL          equ	14493	;# 
 16200   00389E                     IVTADH          equ	14494	;# 
 16201   00389F                     IVTADU          equ	14495	;# 
 16202   00395B                     WDTCON0         equ	14683	;# 
 16203   00395C                     WDTCON1         equ	14684	;# 
 16204   00395D                     WDTPSL          equ	14685	;# 
 16205   00395E                     WDTPSH          equ	14686	;# 
 16206   00395F                     WDTTMR          equ	14687	;# 
 16207   003960                     CRCDATA         equ	14688	;# 
 16208   003960                     CRCDATL         equ	14688	;# 
 16209   003961                     CRCDATH         equ	14689	;# 
 16210   003962                     CRCACC          equ	14690	;# 
 16211   003962                     CRCACCL         equ	14690	;# 
 16212   003963                     CRCACCH         equ	14691	;# 
 16213   003964                     CRCSHFT         equ	14692	;# 
 16214   003964                     CRCSHIFTL       equ	14692	;# 
 16215   003965                     CRCSHIFTH       equ	14693	;# 
 16216   003966                     CRCXOR          equ	14694	;# 
 16217   003966                     CRCXORL         equ	14694	;# 
 16218   003967                     CRCXORH         equ	14695	;# 
 16219   003968                     CRCCON0         equ	14696	;# 
 16220   003969                     CRCCON1         equ	14697	;# 
 16221   003976                     SCANLADR        equ	14710	;# 
 16222   003976                     SCANLADRL       equ	14710	;# 
 16223   003977                     SCANLADRH       equ	14711	;# 
 16224   003978                     SCANLADRU       equ	14712	;# 
 16225   003979                     SCANHADR        equ	14713	;# 
 16226   003979                     SCANHADRL       equ	14713	;# 
 16227   00397A                     SCANHADRH       equ	14714	;# 
 16228   00397B                     SCANHADRU       equ	14715	;# 
 16229   00397C                     SCANCON0        equ	14716	;# 
 16230   00397D                     SCANTRIG        equ	14717	;# 
 16231   003980                     IPR0            equ	14720	;# 
 16232   003981                     IPR1            equ	14721	;# 
 16233   003982                     IPR2            equ	14722	;# 
 16234   003983                     IPR3            equ	14723	;# 
 16235   003984                     IPR4            equ	14724	;# 
 16236   003985                     IPR5            equ	14725	;# 
 16237   003986                     IPR6            equ	14726	;# 
 16238   003987                     IPR7            equ	14727	;# 
 16239   003988                     IPR8            equ	14728	;# 
 16240   003989                     IPR9            equ	14729	;# 
 16241   00398A                     IPR10           equ	14730	;# 
 16242   003990                     PIE0            equ	14736	;# 
 16243   003991                     PIE1            equ	14737	;# 
 16244   003992                     PIE2            equ	14738	;# 
 16245   003993                     PIE3            equ	14739	;# 
 16246   003994                     PIE4            equ	14740	;# 
 16247   003995                     PIE5            equ	14741	;# 
 16248   003996                     PIE6            equ	14742	;# 
 16249   003997                     PIE7            equ	14743	;# 
 16250   003998                     PIE8            equ	14744	;# 
 16251   003999                     PIE9            equ	14745	;# 
 16252   00399A                     PIE10           equ	14746	;# 
 16253   0039A0                     PIR0            equ	14752	;# 
 16254   0039A1                     PIR1            equ	14753	;# 
 16255   0039A2                     PIR2            equ	14754	;# 
 16256   0039A3                     PIR3            equ	14755	;# 
 16257   0039A4                     PIR4            equ	14756	;# 
 16258   0039A5                     PIR5            equ	14757	;# 
 16259   0039A6                     PIR6            equ	14758	;# 
 16260   0039A7                     PIR7            equ	14759	;# 
 16261   0039A8                     PIR8            equ	14760	;# 
 16262   0039A9                     PIR9            equ	14761	;# 
 16263   0039AA                     PIR10           equ	14762	;# 
 16264   0039C0                     PMD0            equ	14784	;# 
 16265   0039C1                     PMD1            equ	14785	;# 
 16266   0039C2                     PMD2            equ	14786	;# 
 16267   0039C3                     PMD3            equ	14787	;# 
 16268   0039C4                     PMD4            equ	14788	;# 
 16269   0039C5                     PMD5            equ	14789	;# 
 16270   0039C6                     PMD6            equ	14790	;# 
 16271   0039C7                     PMD7            equ	14791	;# 
 16272   0039D0                     BORCON          equ	14800	;# 
 16273   0039D1                     VREGCON         equ	14801	;# 
 16274   0039D8                     CPUDOZE         equ	14808	;# 
 16275   0039D9                     OSCCON1         equ	14809	;# 
 16276   0039DA                     OSCCON2         equ	14810	;# 
 16277   0039DB                     OSCCON3         equ	14811	;# 
 16278   0039DC                     OSCSTAT         equ	14812	;# 
 16279   0039DC                     OSCSTAT1        equ	14812	;# 
 16280   0039DD                     OSCEN           equ	14813	;# 
 16281   0039DE                     OSCTUNE         equ	14814	;# 
 16282   0039DF                     OSCFRQ          equ	14815	;# 
 16283   0039E0                     NVMADRL         equ	14816	;# 
 16284   0039E1                     NVMADRH         equ	14817	;# 
 16285   0039E3                     NVMDAT          equ	14819	;# 
 16286   0039E5                     NVMCON1         equ	14821	;# 
 16287   0039E6                     NVMCON2         equ	14822	;# 
 16288   0039EF                     PRLOCK          equ	14831	;# 
 16289   0039F1                     ISRPR           equ	14833	;# 
 16290   0039F2                     MAINPR          equ	14834	;# 
 16291   0039F3                     DMA1PR          equ	14835	;# 
 16292   0039F4                     DMA2PR          equ	14836	;# 
 16293   0039F7                     SCANPR          equ	14839	;# 
 16294   003A00                     RA0PPS          equ	14848	;# 
 16295   003A01                     RA1PPS          equ	14849	;# 
 16296   003A02                     RA2PPS          equ	14850	;# 
 16297   003A03                     RA3PPS          equ	14851	;# 
 16298   003A04                     RA4PPS          equ	14852	;# 
 16299   003A05                     RA5PPS          equ	14853	;# 
 16300   003A06                     RA6PPS          equ	14854	;# 
 16301   003A07                     RA7PPS          equ	14855	;# 
 16302   003A08                     RB0PPS          equ	14856	;# 
 16303   003A09                     RB1PPS          equ	14857	;# 
 16304   003A0A                     RB2PPS          equ	14858	;# 
 16305   003A0B                     RB3PPS          equ	14859	;# 
 16306   003A0C                     RB4PPS          equ	14860	;# 
 16307   003A0D                     RB5PPS          equ	14861	;# 
 16308   003A0E                     RB6PPS          equ	14862	;# 
 16309   003A0F                     RB7PPS          equ	14863	;# 
 16310   003A10                     RC0PPS          equ	14864	;# 
 16311   003A11                     RC1PPS          equ	14865	;# 
 16312   003A12                     RC2PPS          equ	14866	;# 
 16313   003A13                     RC3PPS          equ	14867	;# 
 16314   003A14                     RC4PPS          equ	14868	;# 
 16315   003A15                     RC5PPS          equ	14869	;# 
 16316   003A16                     RC6PPS          equ	14870	;# 
 16317   003A17                     RC7PPS          equ	14871	;# 
 16318   003A18                     RD0PPS          equ	14872	;# 
 16319   003A19                     RD1PPS          equ	14873	;# 
 16320   003A1A                     RD2PPS          equ	14874	;# 
 16321   003A1B                     RD3PPS          equ	14875	;# 
 16322   003A1C                     RD4PPS          equ	14876	;# 
 16323   003A1D                     RD5PPS          equ	14877	;# 
 16324   003A1E                     RD6PPS          equ	14878	;# 
 16325   003A1F                     RD7PPS          equ	14879	;# 
 16326   003A20                     RE0PPS          equ	14880	;# 
 16327   003A21                     RE1PPS          equ	14881	;# 
 16328   003A22                     RE2PPS          equ	14882	;# 
 16329   003A28                     RF0PPS          equ	14888	;# 
 16330   003A29                     RF1PPS          equ	14889	;# 
 16331   003A2A                     RF2PPS          equ	14890	;# 
 16332   003A2B                     RF3PPS          equ	14891	;# 
 16333   003A2C                     RF4PPS          equ	14892	;# 
 16334   003A2D                     RF5PPS          equ	14893	;# 
 16335   003A2E                     RF6PPS          equ	14894	;# 
 16336   003A2F                     RF7PPS          equ	14895	;# 
 16337   003A40                     ANSELA          equ	14912	;# 
 16338   003A41                     WPUA            equ	14913	;# 
 16339   003A42                     ODCONA          equ	14914	;# 
 16340   003A43                     SLRCONA         equ	14915	;# 
 16341   003A44                     INLVLA          equ	14916	;# 
 16342   003A45                     IOCAP           equ	14917	;# 
 16343   003A46                     IOCAN           equ	14918	;# 
 16344   003A47                     IOCAF           equ	14919	;# 
 16345   003A50                     ANSELB          equ	14928	;# 
 16346   003A51                     WPUB            equ	14929	;# 
 16347   003A52                     ODCONB          equ	14930	;# 
 16348   003A53                     SLRCONB         equ	14931	;# 
 16349   003A54                     INLVLB          equ	14932	;# 
 16350   003A55                     IOCBP           equ	14933	;# 
 16351   003A56                     IOCBN           equ	14934	;# 
 16352   003A57                     IOCBF           equ	14935	;# 
 16353   003A5A                     RB1I2C          equ	14938	;# 
 16354   003A5B                     RB2I2C          equ	14939	;# 
 16355   003A60                     ANSELC          equ	14944	;# 
 16356   003A61                     WPUC            equ	14945	;# 
 16357   003A62                     ODCONC          equ	14946	;# 
 16358   003A63                     SLRCONC         equ	14947	;# 
 16359   003A64                     INLVLC          equ	14948	;# 
 16360   003A65                     IOCCP           equ	14949	;# 
 16361   003A66                     IOCCN           equ	14950	;# 
 16362   003A67                     IOCCF           equ	14951	;# 
 16363   003A6A                     RC3I2C          equ	14954	;# 
 16364   003A6B                     RC4I2C          equ	14955	;# 
 16365   003A70                     ANSELD          equ	14960	;# 
 16366   003A71                     WPUD            equ	14961	;# 
 16367   003A72                     ODCOND          equ	14962	;# 
 16368   003A73                     SLRCOND         equ	14963	;# 
 16369   003A74                     INLVLD          equ	14964	;# 
 16370   003A7A                     RD0I2C          equ	14970	;# 
 16371   003A7B                     RD1I2C          equ	14971	;# 
 16372   003A80                     ANSELE          equ	14976	;# 
 16373   003A81                     WPUE            equ	14977	;# 
 16374   003A82                     ODCONE          equ	14978	;# 
 16375   003A83                     SLRCONE         equ	14979	;# 
 16376   003A84                     INLVLE          equ	14980	;# 
 16377   003A85                     IOCEP           equ	14981	;# 
 16378   003A86                     IOCEN           equ	14982	;# 
 16379   003A87                     IOCEF           equ	14983	;# 
 16380   003A90                     ANSELF          equ	14992	;# 
 16381   003A91                     WPUF            equ	14993	;# 
 16382   003A92                     ODCONF          equ	14994	;# 
 16383   003A93                     SLRCONF         equ	14995	;# 
 16384   003A94                     INLVLF          equ	14996	;# 
 16385   003ABF                     PPSLOCK         equ	15039	;# 
 16386   003AC0                     INT0PPS         equ	15040	;# 
 16387   003AC1                     INT1PPS         equ	15041	;# 
 16388   003AC2                     INT2PPS         equ	15042	;# 
 16389   003AC3                     T0CKIPPS        equ	15043	;# 
 16390   003AC4                     T1CKIPPS        equ	15044	;# 
 16391   003AC5                     T1GPPS          equ	15045	;# 
 16392   003AC6                     T3CKIPPS        equ	15046	;# 
 16393   003AC7                     T3GPPS          equ	15047	;# 
 16394   003AC8                     T5CKIPPS        equ	15048	;# 
 16395   003AC9                     T5GPPS          equ	15049	;# 
 16396   003ACA                     T2INPPS         equ	15050	;# 
 16397   003ACB                     T4INPPS         equ	15051	;# 
 16398   003ACC                     T6INPPS         equ	15052	;# 
 16399   003ACD                     CCP1PPS         equ	15053	;# 
 16400   003ACE                     CCP2PPS         equ	15054	;# 
 16401   003ACF                     CCP3PPS         equ	15055	;# 
 16402   003AD0                     CCP4PPS         equ	15056	;# 
 16403   003AD1                     SMT1WINPPS      equ	15057	;# 
 16404   003AD2                     SMT1SIGPPS      equ	15058	;# 
 16405   003AD3                     CWG1INPPS       equ	15059	;# 
 16406   003AD4                     CWG2INPPS       equ	15060	;# 
 16407   003AD5                     CWG3INPPS       equ	15061	;# 
 16408   003AD6                     MD1CARLPPS      equ	15062	;# 
 16409   003AD7                     MD1CARHPPS      equ	15063	;# 
 16410   003AD8                     MD1SRCPPS       equ	15064	;# 
 16411   003AD9                     CLCIN0PPS       equ	15065	;# 
 16412   003ADA                     CLCIN1PPS       equ	15066	;# 
 16413   003ADB                     CLCIN2PPS       equ	15067	;# 
 16414   003ADC                     CLCIN3PPS       equ	15068	;# 
 16415   003ADD                     ADACTPPS        equ	15069	;# 
 16416   003ADE                     SPI1SCKPPS      equ	15070	;# 
 16417   003ADF                     SPI1SDIPPS      equ	15071	;# 
 16418   003AE0                     SPI1SSPPS       equ	15072	;# 
 16419   003AE1                     I2C1SCLPPS      equ	15073	;# 
 16420   003AE2                     I2C1SDAPPS      equ	15074	;# 
 16421   003AE3                     I2C2SCLPPS      equ	15075	;# 
 16422   003AE4                     I2C2SDAPPS      equ	15076	;# 
 16423   003AE5                     U1RXPPS         equ	15077	;# 
 16424   003AE6                     U1CTSPPS        equ	15078	;# 
 16425   003AE8                     U2RXPPS         equ	15080	;# 
 16426   003AE9                     U2CTSPPS        equ	15081	;# 
 16427   003BC9                     DMA2BUF         equ	15305	;# 
 16428   003BCA                     DMA2DCNT        equ	15306	;# 
 16429   003BCA                     DMA2DCNTL       equ	15306	;# 
 16430   003BCB                     DMA2DCNTH       equ	15307	;# 
 16431   003BCC                     DMA2DPTR        equ	15308	;# 
 16432   003BCC                     DMA2DPTRL       equ	15308	;# 
 16433   003BCD                     DMA2DPTRH       equ	15309	;# 
 16434   003BCE                     DMA2DSZ         equ	15310	;# 
 16435   003BCE                     DMA2DSZL        equ	15310	;# 
 16436   003BCF                     DMA2DSZH        equ	15311	;# 
 16437   003BD0                     DMA2DSA         equ	15312	;# 
 16438   003BD0                     DMA2DSAL        equ	15312	;# 
 16439   003BD1                     DMA2DSAH        equ	15313	;# 
 16440   003BD2                     DMA2SCNT        equ	15314	;# 
 16441   003BD2                     DMA2SCNTL       equ	15314	;# 
 16442   003BD3                     DMA2SCNTH       equ	15315	;# 
 16443   003BD4                     DMA2SPTR        equ	15316	;# 
 16444   003BD4                     DMA2SPTRL       equ	15316	;# 
 16445   003BD5                     DMA2SPTRH       equ	15317	;# 
 16446   003BD6                     DMA2SPTRU       equ	15318	;# 
 16447   003BD7                     DMA2SSZ         equ	15319	;# 
 16448   003BD7                     DMA2SSZL        equ	15319	;# 
 16449   003BD8                     DMA2SSZH        equ	15320	;# 
 16450   003BD9                     DMA2SSA         equ	15321	;# 
 16451   003BD9                     DMA2SSAL        equ	15321	;# 
 16452   003BDA                     DMA2SSAH        equ	15322	;# 
 16453   003BDB                     DMA2SSAU        equ	15323	;# 
 16454   003BDC                     DMA2CON0        equ	15324	;# 
 16455   003BDD                     DMA2CON1        equ	15325	;# 
 16456   003BDE                     DMA2AIRQ        equ	15326	;# 
 16457   003BDF                     DMA2SIRQ        equ	15327	;# 
 16458   003BE9                     DMA1BUF         equ	15337	;# 
 16459   003BEA                     DMA1DCNT        equ	15338	;# 
 16460   003BEA                     DMA1DCNTL       equ	15338	;# 
 16461   003BEB                     DMA1DCNTH       equ	15339	;# 
 16462   003BEC                     DMA1DPTR        equ	15340	;# 
 16463   003BEC                     DMA1DPTRL       equ	15340	;# 
 16464   003BED                     DMA1DPTRH       equ	15341	;# 
 16465   003BEE                     DMA1DSZ         equ	15342	;# 
 16466   003BEE                     DMA1DSZL        equ	15342	;# 
 16467   003BEF                     DMA1DSZH        equ	15343	;# 
 16468   003BF0                     DMA1DSA         equ	15344	;# 
 16469   003BF0                     DMA1DSAL        equ	15344	;# 
 16470   003BF1                     DMA1DSAH        equ	15345	;# 
 16471   003BF2                     DMA1SCNT        equ	15346	;# 
 16472   003BF2                     DMA1SCNTL       equ	15346	;# 
 16473   003BF3                     DMA1SCNTH       equ	15347	;# 
 16474   003BF4                     DMA1SPTR        equ	15348	;# 
 16475   003BF4                     DMA1SPTRL       equ	15348	;# 
 16476   003BF5                     DMA1SPTRH       equ	15349	;# 
 16477   003BF6                     DMA1SPTRU       equ	15350	;# 
 16478   003BF7                     DMA1SSZ         equ	15351	;# 
 16479   003BF7                     DMA1SSZL        equ	15351	;# 
 16480   003BF8                     DMA1SSZH        equ	15352	;# 
 16481   003BF9                     DMA1SSA         equ	15353	;# 
 16482   003BF9                     DMA1SSAL        equ	15353	;# 
 16483   003BFA                     DMA1SSAH        equ	15354	;# 
 16484   003BFB                     DMA1SSAU        equ	15355	;# 
 16485   003BFC                     DMA1CON0        equ	15356	;# 
 16486   003BFD                     DMA1CON1        equ	15357	;# 
 16487   003BFE                     DMA1AIRQ        equ	15358	;# 
 16488   003BFF                     DMA1SIRQ        equ	15359	;# 
 16489   003C56                     CLC4CON         equ	15446	;# 
 16490   003C57                     CLC4POL         equ	15447	;# 
 16491   003C58                     CLC4SEL0        equ	15448	;# 
 16492   003C59                     CLC4SEL1        equ	15449	;# 
 16493   003C5A                     CLC4SEL2        equ	15450	;# 
 16494   003C5B                     CLC4SEL3        equ	15451	;# 
 16495   003C5C                     CLC4GLS0        equ	15452	;# 
 16496   003C5D                     CLC4GLS1        equ	15453	;# 
 16497   003C5E                     CLC4GLS2        equ	15454	;# 
 16498   003C5F                     CLC4GLS3        equ	15455	;# 
 16499   003C60                     CLC3CON         equ	15456	;# 
 16500   003C61                     CLC3POL         equ	15457	;# 
 16501   003C62                     CLC3SEL0        equ	15458	;# 
 16502   003C63                     CLC3SEL1        equ	15459	;# 
 16503   003C64                     CLC3SEL2        equ	15460	;# 
 16504   003C65                     CLC3SEL3        equ	15461	;# 
 16505   003C66                     CLC3GLS0        equ	15462	;# 
 16506   003C67                     CLC3GLS1        equ	15463	;# 
 16507   003C68                     CLC3GLS2        equ	15464	;# 
 16508   003C69                     CLC3GLS3        equ	15465	;# 
 16509   003C6A                     CLC2CON         equ	15466	;# 
 16510   003C6B                     CLC2POL         equ	15467	;# 
 16511   003C6C                     CLC2SEL0        equ	15468	;# 
 16512   003C6D                     CLC2SEL1        equ	15469	;# 
 16513   003C6E                     CLC2SEL2        equ	15470	;# 
 16514   003C6F                     CLC2SEL3        equ	15471	;# 
 16515   003C70                     CLC2GLS0        equ	15472	;# 
 16516   003C71                     CLC2GLS1        equ	15473	;# 
 16517   003C72                     CLC2GLS2        equ	15474	;# 
 16518   003C73                     CLC2GLS3        equ	15475	;# 
 16519   003C74                     CLC1CON         equ	15476	;# 
 16520   003C75                     CLC1POL         equ	15477	;# 
 16521   003C76                     CLC1SEL0        equ	15478	;# 
 16522   003C77                     CLC1SEL1        equ	15479	;# 
 16523   003C78                     CLC1SEL2        equ	15480	;# 
 16524   003C79                     CLC1SEL3        equ	15481	;# 
 16525   003C7A                     CLC1GLS0        equ	15482	;# 
 16526   003C7B                     CLC1GLS1        equ	15483	;# 
 16527   003C7C                     CLC1GLS2        equ	15484	;# 
 16528   003C7D                     CLC1GLS3        equ	15485	;# 
 16529   003C7E                     CLCDATA0        equ	15486	;# 
 16530   003CE5                     CLKRCON         equ	15589	;# 
 16531   003CE6                     CLKRCLK         equ	15590	;# 
 16532   003CFA                     MD1CON0         equ	15610	;# 
 16533   003CFB                     MD1CON1         equ	15611	;# 
 16534   003CFC                     MD1SRC          equ	15612	;# 
 16535   003CFD                     MD1CARL         equ	15613	;# 
 16536   003CFE                     MD1CARH         equ	15614	;# 
 16537   003D10                     SPI1RXB         equ	15632	;# 
 16538   003D11                     SPI1TXB         equ	15633	;# 
 16539   003D12                     SPI1TCNT        equ	15634	;# 
 16540   003D12                     SPI1TCNTL       equ	15634	;# 
 16541   003D13                     SPI1TCNTH       equ	15635	;# 
 16542   003D14                     SPI1CON0        equ	15636	;# 
 16543   003D15                     SPI1CON1        equ	15637	;# 
 16544   003D16                     SPI1CON2        equ	15638	;# 
 16545   003D17                     SPI1STATUS      equ	15639	;# 
 16546   003D18                     SPI1TWIDTH      equ	15640	;# 
 16547   003D19                     SPI1BAUD        equ	15641	;# 
 16548   003D1A                     SPI1INTF        equ	15642	;# 
 16549   003D1B                     SPI1INTE        equ	15643	;# 
 16550   003D1C                     SPI1CLK         equ	15644	;# 
 16551   003D54                     I2C2RXB         equ	15700	;# 
 16552   003D55                     I2C2TXB         equ	15701	;# 
 16553   003D56                     I2C2CNT         equ	15702	;# 
 16554   003D57                     I2C2ADB0        equ	15703	;# 
 16555   003D58                     I2C2ADB1        equ	15704	;# 
 16556   003D59                     I2C2ADR0        equ	15705	;# 
 16557   003D5A                     I2C2ADR1        equ	15706	;# 
 16558   003D5B                     I2C2ADR2        equ	15707	;# 
 16559   003D5C                     I2C2ADR3        equ	15708	;# 
 16560   003D5D                     I2C2CON0        equ	15709	;# 
 16561   003D5E                     I2C2CON1        equ	15710	;# 
 16562   003D5F                     I2C2CON2        equ	15711	;# 
 16563   003D60                     I2C2ERR         equ	15712	;# 
 16564   003D61                     I2C2STAT0       equ	15713	;# 
 16565   003D62                     I2C2STAT1       equ	15714	;# 
 16566   003D63                     I2C2PIR         equ	15715	;# 
 16567   003D64                     I2C2PIE         equ	15716	;# 
 16568   003D65                     I2C2CLK         equ	15717	;# 
 16569   003D66                     I2C2BTO         equ	15718	;# 
 16570   003D6A                     I2C1RXB         equ	15722	;# 
 16571   003D6B                     I2C1TXB         equ	15723	;# 
 16572   003D6C                     I2C1CNT         equ	15724	;# 
 16573   003D6D                     I2C1ADB0        equ	15725	;# 
 16574   003D6E                     I2C1ADB1        equ	15726	;# 
 16575   003D6F                     I2C1ADR0        equ	15727	;# 
 16576   003D70                     I2C1ADR1        equ	15728	;# 
 16577   003D71                     I2C1ADR2        equ	15729	;# 
 16578   003D72                     I2C1ADR3        equ	15730	;# 
 16579   003D73                     I2C1CON0        equ	15731	;# 
 16580   003D74                     I2C1CON1        equ	15732	;# 
 16581   003D75                     I2C1CON2        equ	15733	;# 
 16582   003D76                     I2C1ERR         equ	15734	;# 
 16583   003D77                     I2C1STAT0       equ	15735	;# 
 16584   003D78                     I2C1STAT1       equ	15736	;# 
 16585   003D79                     I2C1PIR         equ	15737	;# 
 16586   003D7A                     I2C1PIE         equ	15738	;# 
 16587   003D7B                     I2C1CLK         equ	15739	;# 
 16588   003D7C                     I2C1BTO         equ	15740	;# 
 16589   003DD0                     U2RXB           equ	15824	;# 
 16590   003DD0                     U2RXBL          equ	15824	;# 
 16591   003DD2                     U2TXB           equ	15826	;# 
 16592   003DD2                     U2TXBL          equ	15826	;# 
 16593   003DD4                     U2P1            equ	15828	;# 
 16594   003DD4                     U2P1L           equ	15828	;# 
 16595   003DD6                     U2P2            equ	15830	;# 
 16596   003DD6                     U2P2L           equ	15830	;# 
 16597   003DD8                     U2P3            equ	15832	;# 
 16598   003DD8                     U2P3L           equ	15832	;# 
 16599   003DDA                     U2CON0          equ	15834	;# 
 16600   003DDB                     U2CON1          equ	15835	;# 
 16601   003DDC                     U2CON2          equ	15836	;# 
 16602   003DDD                     U2BRG           equ	15837	;# 
 16603   003DDD                     U2BRGL          equ	15837	;# 
 16604   003DDE                     U2BRGH          equ	15838	;# 
 16605   003DDF                     U2FIFO          equ	15839	;# 
 16606   003DE0                     U2UIR           equ	15840	;# 
 16607   003DE1                     U2ERRIR         equ	15841	;# 
 16608   003DE2                     U2ERRIE         equ	15842	;# 
 16609   003DE8                     U1RXB           equ	15848	;# 
 16610   003DE8                     U1RXBL          equ	15848	;# 
 16611   003DE9                     U1RXCHK         equ	15849	;# 
 16612   003DEA                     U1TXB           equ	15850	;# 
 16613   003DEA                     U1TXBL          equ	15850	;# 
 16614   003DEB                     U1TXCHK         equ	15851	;# 
 16615   003DEC                     U1P1            equ	15852	;# 
 16616   003DEC                     U1P1L           equ	15852	;# 
 16617   003DED                     U1P1H           equ	15853	;# 
 16618   003DEE                     U1P2            equ	15854	;# 
 16619   003DEE                     U1P2L           equ	15854	;# 
 16620   003DEF                     U1P2H           equ	15855	;# 
 16621   003DF0                     U1P3            equ	15856	;# 
 16622   003DF0                     U1P3L           equ	15856	;# 
 16623   003DF1                     U1P3H           equ	15857	;# 
 16624   003DF2                     U1CON0          equ	15858	;# 
 16625   003DF3                     U1CON1          equ	15859	;# 
 16626   003DF4                     U1CON2          equ	15860	;# 
 16627   003DF5                     U1BRG           equ	15861	;# 
 16628   003DF5                     U1BRGL          equ	15861	;# 
 16629   003DF6                     U1BRGH          equ	15862	;# 
 16630   003DF7                     U1FIFO          equ	15863	;# 
 16631   003DF8                     U1UIR           equ	15864	;# 
 16632   003DF9                     U1ERRIR         equ	15865	;# 
 16633   003DFA                     U1ERRIE         equ	15866	;# 
 16634   003E9C                     DAC1CON1        equ	16028	;# 
 16635   003E9E                     DAC1CON0        equ	16030	;# 
 16636   003EB8                     CM2CON0         equ	16056	;# 
 16637   003EB9                     CM2CON1         equ	16057	;# 
 16638   003EBA                     CM2NCH          equ	16058	;# 
 16639   003EBB                     CM2PCH          equ	16059	;# 
 16640   003EBC                     CM1CON0         equ	16060	;# 
 16641   003EBD                     CM1CON1         equ	16061	;# 
 16642   003EBE                     CM1NCH          equ	16062	;# 
 16643   003EBF                     CM1PCH          equ	16063	;# 
 16644   003EC0                     CMOUT           equ	16064	;# 
 16645   003EC1                     FVRCON          equ	16065	;# 
 16646   003EC3                     ZCDCON          equ	16067	;# 
 16647   003EC9                     HLVDCON0        equ	16073	;# 
 16648   003ECA                     HLVDCON1        equ	16074	;# 
 16649   003ED7                     ADCP            equ	16087	;# 
 16650   003EDE                     ADLTH           equ	16094	;# 
 16651   003EDE                     ADLTHL          equ	16094	;# 
 16652   003EDF                     ADLTHH          equ	16095	;# 
 16653   003EE0                     ADUTH           equ	16096	;# 
 16654   003EE0                     ADUTHL          equ	16096	;# 
 16655   003EE1                     ADUTHH          equ	16097	;# 
 16656   003EE2                     ADERR           equ	16098	;# 
 16657   003EE2                     ADERRL          equ	16098	;# 
 16658   003EE3                     ADERRH          equ	16099	;# 
 16659   003EE4                     ADSTPT          equ	16100	;# 
 16660   003EE4                     ADSTPTL         equ	16100	;# 
 16661   003EE5                     ADSTPTH         equ	16101	;# 
 16662   003EE6                     ADFLTR          equ	16102	;# 
 16663   003EE6                     ADFLTRL         equ	16102	;# 
 16664   003EE7                     ADFLTRH         equ	16103	;# 
 16665   003EE8                     ADACC           equ	16104	;# 
 16666   003EE8                     ADACCL          equ	16104	;# 
 16667   003EE9                     ADACCH          equ	16105	;# 
 16668   003EEA                     ADACCU          equ	16106	;# 
 16669   003EEB                     ADCNT           equ	16107	;# 
 16670   003EEC                     ADRPT           equ	16108	;# 
 16671   003EED                     ADPREV          equ	16109	;# 
 16672   003EED                     ADPREVL         equ	16109	;# 
 16673   003EEE                     ADPREVH         equ	16110	;# 
 16674   003EEF                     ADRES           equ	16111	;# 
 16675   003EEF                     ADRESL          equ	16111	;# 
 16676   003EF0                     ADRESH          equ	16112	;# 
 16677   003EF1                     ADPCH           equ	16113	;# 
 16678   003EF3                     ADACQ           equ	16115	;# 
 16679   003EF3                     ADACQL          equ	16115	;# 
 16680   003EF4                     ADACQH          equ	16116	;# 
 16681   003EF5                     ADCAP           equ	16117	;# 
 16682   003EF6                     ADPRE           equ	16118	;# 
 16683   003EF6                     ADPREL          equ	16118	;# 
 16684   003EF7                     ADPREH          equ	16119	;# 
 16685   003EF8                     ADCON0          equ	16120	;# 
 16686   003EF9                     ADCON1          equ	16121	;# 
 16687   003EFA                     ADCON2          equ	16122	;# 
 16688   003EFB                     ADCON3          equ	16123	;# 
 16689   003EFC                     ADSTAT          equ	16124	;# 
 16690   003EFD                     ADREF           equ	16125	;# 
 16691   003EFE                     ADACT           equ	16126	;# 
 16692   003EFF                     ADCLK           equ	16127	;# 
 16693   003F12                     SMT1TMR         equ	16146	;# 
 16694   003F12                     SMT1TMRL        equ	16146	;# 
 16695   003F13                     SMT1TMRH        equ	16147	;# 
 16696   003F14                     SMT1TMRU        equ	16148	;# 
 16697   003F15                     SMT1CPR         equ	16149	;# 
 16698   003F15                     SMT1CPRL        equ	16149	;# 
 16699   003F16                     SMT1CPRH        equ	16150	;# 
 16700   003F17                     SMT1CPRU        equ	16151	;# 
 16701   003F18                     SMT1CPW         equ	16152	;# 
 16702   003F18                     SMT1CPWL        equ	16152	;# 
 16703   003F19                     SMT1CPWH        equ	16153	;# 
 16704   003F1A                     SMT1CPWU        equ	16154	;# 
 16705   003F1B                     SMT1PR          equ	16155	;# 
 16706   003F1B                     SMT1PRL         equ	16155	;# 
 16707   003F1C                     SMT1PRH         equ	16156	;# 
 16708   003F1D                     SMT1PRU         equ	16157	;# 
 16709   003F1E                     SMT1CON0        equ	16158	;# 
 16710   003F1F                     SMT1CON1        equ	16159	;# 
 16711   003F20                     SMT1STAT        equ	16160	;# 
 16712   003F21                     SMT1CLK         equ	16161	;# 
 16713   003F22                     SMT1SIG         equ	16162	;# 
 16714   003F23                     SMT1WIN         equ	16163	;# 
 16715   003F38                     NCO1ACC         equ	16184	;# 
 16716   003F38                     NCO1ACCL        equ	16184	;# 
 16717   003F39                     NCO1ACCH        equ	16185	;# 
 16718   003F3A                     NCO1ACCU        equ	16186	;# 
 16719   003F3B                     NCO1INC         equ	16187	;# 
 16720   003F3B                     NCO1INCL        equ	16187	;# 
 16721   003F3C                     NCO1INCH        equ	16188	;# 
 16722   003F3D                     NCO1INCU        equ	16189	;# 
 16723   003F3E                     NCO1CON         equ	16190	;# 
 16724   003F3F                     NCO1CLK         equ	16191	;# 
 16725   003F40                     CWG3CLK         equ	16192	;# 
 16726   003F40                     CWG3CLKCON      equ	16192	;# 
 16727   003F41                     CWG3ISM         equ	16193	;# 
 16728   003F41                     CWG3DAT         equ	16193	;# 
 16729   003F42                     CWG3DBR         equ	16194	;# 
 16730   003F43                     CWG3DBF         equ	16195	;# 
 16731   003F44                     CWG3CON0        equ	16196	;# 
 16732   003F45                     CWG3CON1        equ	16197	;# 
 16733   003F46                     CWG3AS0         equ	16198	;# 
 16734   003F47                     CWG3AS1         equ	16199	;# 
 16735   003F48                     CWG3STR         equ	16200	;# 
 16736   003F49                     CWG2CLK         equ	16201	;# 
 16737   003F49                     CWG2CLKCON      equ	16201	;# 
 16738   003F4A                     CWG2ISM         equ	16202	;# 
 16739   003F4A                     CWG2DAT         equ	16202	;# 
 16740   003F4B                     CWG2DBR         equ	16203	;# 
 16741   003F4C                     CWG2DBF         equ	16204	;# 
 16742   003F4D                     CWG2CON0        equ	16205	;# 
 16743   003F4E                     CWG2CON1        equ	16206	;# 
 16744   003F4F                     CWG2AS0         equ	16207	;# 
 16745   003F50                     CWG2AS1         equ	16208	;# 
 16746   003F51                     CWG2STR         equ	16209	;# 
 16747   003F52                     CWG1CLK         equ	16210	;# 
 16748   003F52                     CWG1CLKCON      equ	16210	;# 
 16749   003F53                     CWG1ISM         equ	16211	;# 
 16750   003F53                     CWG1DAT         equ	16211	;# 
 16751   003F54                     CWG1DBR         equ	16212	;# 
 16752   003F55                     CWG1DBF         equ	16213	;# 
 16753   003F56                     CWG1CON0        equ	16214	;# 
 16754   003F57                     CWG1CON1        equ	16215	;# 
 16755   003F58                     CWG1AS0         equ	16216	;# 
 16756   003F59                     CWG1AS1         equ	16217	;# 
 16757   003F5A                     CWG1STR         equ	16218	;# 
 16758   003F5E                     CCPTMRS0        equ	16222	;# 
 16759   003F5F                     CCPTMRS1        equ	16223	;# 
 16760   003F60                     PWM8DC          equ	16224	;# 
 16761   003F60                     PWM8DCL         equ	16224	;# 
 16762   003F61                     PWM8DCH         equ	16225	;# 
 16763   003F62                     PWM8CON         equ	16226	;# 
 16764   003F64                     PWM7DC          equ	16228	;# 
 16765   003F64                     PWM7DCL         equ	16228	;# 
 16766   003F65                     PWM7DCH         equ	16229	;# 
 16767   003F66                     PWM7CON         equ	16230	;# 
 16768   003F68                     PWM6DC          equ	16232	;# 
 16769   003F68                     PWM6DCL         equ	16232	;# 
 16770   003F69                     PWM6DCH         equ	16233	;# 
 16771   003F6A                     PWM6CON         equ	16234	;# 
 16772   003F6C                     PWM5DC          equ	16236	;# 
 16773   003F6C                     PWM5DCL         equ	16236	;# 
 16774   003F6D                     PWM5DCH         equ	16237	;# 
 16775   003F6E                     PWM5CON         equ	16238	;# 
 16776   003F70                     CCPR4           equ	16240	;# 
 16777   003F70                     CCPR4L          equ	16240	;# 
 16778   003F71                     CCPR4H          equ	16241	;# 
 16779   003F72                     CCP4CON         equ	16242	;# 
 16780   003F73                     CCP4CAP         equ	16243	;# 
 16781   003F74                     CCPR3           equ	16244	;# 
 16782   003F74                     CCPR3L          equ	16244	;# 
 16783   003F75                     CCPR3H          equ	16245	;# 
 16784   003F76                     CCP3CON         equ	16246	;# 
 16785   003F77                     CCP3CAP         equ	16247	;# 
 16786   003F78                     CCPR2           equ	16248	;# 
 16787   003F78                     CCPR2L          equ	16248	;# 
 16788   003F79                     CCPR2H          equ	16249	;# 
 16789   003F7A                     CCP2CON         equ	16250	;# 
 16790   003F7B                     CCP2CAP         equ	16251	;# 
 16791   003F7C                     CCPR1           equ	16252	;# 
 16792   003F7C                     CCPR1L          equ	16252	;# 
 16793   003F7D                     CCPR1H          equ	16253	;# 
 16794   003F7E                     CCP1CON         equ	16254	;# 
 16795   003F7F                     CCP1CAP         equ	16255	;# 
 16796   003F92                     T6TMR           equ	16274	;# 
 16797   003F92                     TMR6            equ	16274	;# 
 16798   003F93                     T6PR            equ	16275	;# 
 16799   003F93                     PR6             equ	16275	;# 
 16800   003F94                     T6CON           equ	16276	;# 
 16801   003F95                     T6HLT           equ	16277	;# 
 16802   003F96                     T6CLKCON        equ	16278	;# 
 16803   003F96                     T6CLK           equ	16278	;# 
 16804   003F97                     T6RST           equ	16279	;# 
 16805   003F98                     TMR5            equ	16280	;# 
 16806   003F98                     TMR5L           equ	16280	;# 
 16807   003F99                     TMR5H           equ	16281	;# 
 16808   003F9A                     T5CON           equ	16282	;# 
 16809   003F9A                     TMR5CON         equ	16282	;# 
 16810   003F9B                     T5GCON          equ	16283	;# 
 16811   003F9B                     TMR5GCON        equ	16283	;# 
 16812   003F9C                     T5GATE          equ	16284	;# 
 16813   003F9C                     TMR5GATE        equ	16284	;# 
 16814   003F9D                     T5CLK           equ	16285	;# 
 16815   003F9D                     TMR5CLK         equ	16285	;# 
 16816   003F9D                     PR5             equ	16285	;# 
 16817   003F9E                     T4TMR           equ	16286	;# 
 16818   003F9E                     TMR4            equ	16286	;# 
 16819   003F9F                     T4PR            equ	16287	;# 
 16820   003F9F                     PR4             equ	16287	;# 
 16821   003FA0                     T4CON           equ	16288	;# 
 16822   003FA1                     T4HLT           equ	16289	;# 
 16823   003FA2                     T4CLKCON        equ	16290	;# 
 16824   003FA2                     T4CLK           equ	16290	;# 
 16825   003FA3                     T4RST           equ	16291	;# 
 16826   003FA4                     TMR3            equ	16292	;# 
 16827   003FA4                     TMR3L           equ	16292	;# 
 16828   003FA5                     TMR3H           equ	16293	;# 
 16829   003FA6                     T3CON           equ	16294	;# 
 16830   003FA6                     TMR3CON         equ	16294	;# 
 16831   003FA7                     T3GCON          equ	16295	;# 
 16832   003FA7                     TMR3GCON        equ	16295	;# 
 16833   003FA8                     T3GATE          equ	16296	;# 
 16834   003FA8                     TMR3GATE        equ	16296	;# 
 16835   003FA9                     T3CLK           equ	16297	;# 
 16836   003FA9                     TMR3CLK         equ	16297	;# 
 16837   003FA9                     PR3             equ	16297	;# 
 16838   003FAA                     T2TMR           equ	16298	;# 
 16839   003FAA                     TMR2            equ	16298	;# 
 16840   003FAB                     T2PR            equ	16299	;# 
 16841   003FAB                     PR2             equ	16299	;# 
 16842   003FAC                     T2CON           equ	16300	;# 
 16843   003FAD                     T2HLT           equ	16301	;# 
 16844   003FAE                     T2CLKCON        equ	16302	;# 
 16845   003FAE                     T2CLK           equ	16302	;# 
 16846   003FAF                     T2RST           equ	16303	;# 
 16847   003FB0                     TMR1            equ	16304	;# 
 16848   003FB0                     TMR1L           equ	16304	;# 
 16849   003FB1                     TMR1H           equ	16305	;# 
 16850   003FB2                     T1CON           equ	16306	;# 
 16851   003FB2                     TMR1CON         equ	16306	;# 
 16852   003FB3                     T1GCON          equ	16307	;# 
 16853   003FB3                     TMR1GCON        equ	16307	;# 
 16854   003FB4                     T1GATE          equ	16308	;# 
 16855   003FB4                     TMR1GATE        equ	16308	;# 
 16856   003FB5                     T1CLK           equ	16309	;# 
 16857   003FB5                     TMR1CLK         equ	16309	;# 
 16858   003FB5                     PR1             equ	16309	;# 
 16859   003FB6                     TMR0L           equ	16310	;# 
 16860   003FB6                     TMR0            equ	16310	;# 
 16861   003FB7                     TMR0H           equ	16311	;# 
 16862   003FB7                     PR0             equ	16311	;# 
 16863   003FB8                     T0CON0          equ	16312	;# 
 16864   003FB9                     T0CON1          equ	16313	;# 
 16865   003FBA                     LATA            equ	16314	;# 
 16866   003FBB                     LATB            equ	16315	;# 
 16867   003FBC                     LATC            equ	16316	;# 
 16868   003FBD                     LATD            equ	16317	;# 
 16869   003FBE                     LATE            equ	16318	;# 
 16870   003FBF                     LATF            equ	16319	;# 
 16871   003FC2                     TRISA           equ	16322	;# 
 16872   003FC3                     TRISB           equ	16323	;# 
 16873   003FC4                     TRISC           equ	16324	;# 
 16874   003FC5                     TRISD           equ	16325	;# 
 16875   003FC6                     TRISE           equ	16326	;# 
 16876   003FC7                     TRISF           equ	16327	;# 
 16877   003FCA                     PORTA           equ	16330	;# 
 16878   003FCB                     PORTB           equ	16331	;# 
 16879   003FCC                     PORTC           equ	16332	;# 
 16880   003FCD                     PORTD           equ	16333	;# 
 16881   003FCE                     PORTE           equ	16334	;# 
 16882   003FCF                     PORTF           equ	16335	;# 
 16883   003FD2                     INTCON0         equ	16338	;# 
 16884   003FD3                     INTCON1         equ	16339	;# 
 16885   003FD4                     IVTLOCK         equ	16340	;# 
 16886   003FD5                     IVTBASE         equ	16341	;# 
 16887   003FD5                     IVTBASEL        equ	16341	;# 
 16888   003FD6                     IVTBASEH        equ	16342	;# 
 16889   003FD7                     IVTBASEU        equ	16343	;# 
 16890   003FD8                     STATUS          equ	16344	;# 
 16891   003FD9                     FSR2            equ	16345	;# 
 16892   003FD9                     FSR2L           equ	16345	;# 
 16893   003FDA                     FSR2H           equ	16346	;# 
 16894   003FDB                     PLUSW2          equ	16347	;# 
 16895   003FDC                     PREINC2         equ	16348	;# 
 16896   003FDD                     POSTDEC2        equ	16349	;# 
 16897   003FDE                     POSTINC2        equ	16350	;# 
 16898   003FDF                     INDF2           equ	16351	;# 
 16899   003FE0                     BSR             equ	16352	;# 
 16900   003FE1                     FSR1            equ	16353	;# 
 16901   003FE1                     FSR1L           equ	16353	;# 
 16902   003FE2                     FSR1H           equ	16354	;# 
 16903   003FE3                     PLUSW1          equ	16355	;# 
 16904   003FE4                     PREINC1         equ	16356	;# 
 16905   003FE5                     POSTDEC1        equ	16357	;# 
 16906   003FE6                     POSTINC1        equ	16358	;# 
 16907   003FE7                     INDF1           equ	16359	;# 
 16908   003FE8                     WREG            equ	16360	;# 
 16909   003FE9                     FSR0            equ	16361	;# 
 16910   003FE9                     FSR0L           equ	16361	;# 
 16911   003FEA                     FSR0H           equ	16362	;# 
 16912   003FEB                     PLUSW0          equ	16363	;# 
 16913   003FEC                     PREINC0         equ	16364	;# 
 16914   003FED                     POSTDEC0        equ	16365	;# 
 16915   003FEE                     POSTINC0        equ	16366	;# 
 16916   003FEF                     INDF0           equ	16367	;# 
 16917   003FF0                     PCON0           equ	16368	;# 
 16918   003FF1                     PCON1           equ	16369	;# 
 16919   003FF3                     PROD            equ	16371	;# 
 16920   003FF3                     PRODL           equ	16371	;# 
 16921   003FF4                     PRODH           equ	16372	;# 
 16922   003FF5                     TABLAT          equ	16373	;# 
 16923   003FF6                     TBLPTR          equ	16374	;# 
 16924   003FF6                     TBLPTRL         equ	16374	;# 
 16925   003FF7                     TBLPTRH         equ	16375	;# 
 16926   003FF8                     TBLPTRU         equ	16376	;# 
 16927   003FF9                     PCLAT           equ	16377	;# 
 16928   003FF9                     PCL             equ	16377	;# 
 16929   003FFA                     PCLATH          equ	16378	;# 
 16930   003FFB                     PCLATU          equ	16379	;# 
 16931   003FFC                     STKPTR          equ	16380	;# 
 16932   003FFD                     TOS             equ	16381	;# 
 16933   003FFD                     TOSL            equ	16381	;# 
 16934   003FFE                     TOSH            equ	16382	;# 
 16935   003FFF                     TOSU            equ	16383	;# 
 16936   003880                     STATUS_CSHAD    equ	14464	;# 
 16937   003881                     WREG_CSHAD      equ	14465	;# 
 16938   003882                     BSR_CSHAD       equ	14466	;# 
 16939   003883                     SHADCON         equ	14467	;# 
 16940   003884                     STATUS_SHAD     equ	14468	;# 
 16941   003885                     WREG_SHAD       equ	14469	;# 
 16942   003886                     BSR_SHAD        equ	14470	;# 
 16943   003887                     PCLATH_SHAD     equ	14471	;# 
 16944   003888                     PCLATU_SHAD     equ	14472	;# 
 16945   003889                     FSR0SH          equ	14473	;# 
 16946   003889                     FSR0L_SHAD      equ	14473	;# 
 16947   00388A                     FSR0H_SHAD      equ	14474	;# 
 16948   00388B                     FSR1SH          equ	14475	;# 
 16949   00388B                     FSR1L_SHAD      equ	14475	;# 
 16950   00388C                     FSR1H_SHAD      equ	14476	;# 
 16951   00388D                     FSR2SH          equ	14477	;# 
 16952   00388D                     FSR2L_SHAD      equ	14477	;# 
 16953   00388E                     FSR2H_SHAD      equ	14478	;# 
 16954   00388F                     PRODSH          equ	14479	;# 
 16955   00388F                     PRODL_SHAD      equ	14479	;# 
 16956   003890                     PRODH_SHAD      equ	14480	;# 
 16957   00389D                     IVTADL          equ	14493	;# 
 16958   00389E                     IVTADH          equ	14494	;# 
 16959   00389F                     IVTADU          equ	14495	;# 
 16960   00395B                     WDTCON0         equ	14683	;# 
 16961   00395C                     WDTCON1         equ	14684	;# 
 16962   00395D                     WDTPSL          equ	14685	;# 
 16963   00395E                     WDTPSH          equ	14686	;# 
 16964   00395F                     WDTTMR          equ	14687	;# 
 16965   003960                     CRCDATA         equ	14688	;# 
 16966   003960                     CRCDATL         equ	14688	;# 
 16967   003961                     CRCDATH         equ	14689	;# 
 16968   003962                     CRCACC          equ	14690	;# 
 16969   003962                     CRCACCL         equ	14690	;# 
 16970   003963                     CRCACCH         equ	14691	;# 
 16971   003964                     CRCSHFT         equ	14692	;# 
 16972   003964                     CRCSHIFTL       equ	14692	;# 
 16973   003965                     CRCSHIFTH       equ	14693	;# 
 16974   003966                     CRCXOR          equ	14694	;# 
 16975   003966                     CRCXORL         equ	14694	;# 
 16976   003967                     CRCXORH         equ	14695	;# 
 16977   003968                     CRCCON0         equ	14696	;# 
 16978   003969                     CRCCON1         equ	14697	;# 
 16979   003976                     SCANLADR        equ	14710	;# 
 16980   003976                     SCANLADRL       equ	14710	;# 
 16981   003977                     SCANLADRH       equ	14711	;# 
 16982   003978                     SCANLADRU       equ	14712	;# 
 16983   003979                     SCANHADR        equ	14713	;# 
 16984   003979                     SCANHADRL       equ	14713	;# 
 16985   00397A                     SCANHADRH       equ	14714	;# 
 16986   00397B                     SCANHADRU       equ	14715	;# 
 16987   00397C                     SCANCON0        equ	14716	;# 
 16988   00397D                     SCANTRIG        equ	14717	;# 
 16989   003980                     IPR0            equ	14720	;# 
 16990   003981                     IPR1            equ	14721	;# 
 16991   003982                     IPR2            equ	14722	;# 
 16992   003983                     IPR3            equ	14723	;# 
 16993   003984                     IPR4            equ	14724	;# 
 16994   003985                     IPR5            equ	14725	;# 
 16995   003986                     IPR6            equ	14726	;# 
 16996   003987                     IPR7            equ	14727	;# 
 16997   003988                     IPR8            equ	14728	;# 
 16998   003989                     IPR9            equ	14729	;# 
 16999   00398A                     IPR10           equ	14730	;# 
 17000   003990                     PIE0            equ	14736	;# 
 17001   003991                     PIE1            equ	14737	;# 
 17002   003992                     PIE2            equ	14738	;# 
 17003   003993                     PIE3            equ	14739	;# 
 17004   003994                     PIE4            equ	14740	;# 
 17005   003995                     PIE5            equ	14741	;# 
 17006   003996                     PIE6            equ	14742	;# 
 17007   003997                     PIE7            equ	14743	;# 
 17008   003998                     PIE8            equ	14744	;# 
 17009   003999                     PIE9            equ	14745	;# 
 17010   00399A                     PIE10           equ	14746	;# 
 17011   0039A0                     PIR0            equ	14752	;# 
 17012   0039A1                     PIR1            equ	14753	;# 
 17013   0039A2                     PIR2            equ	14754	;# 
 17014   0039A3                     PIR3            equ	14755	;# 
 17015   0039A4                     PIR4            equ	14756	;# 
 17016   0039A5                     PIR5            equ	14757	;# 
 17017   0039A6                     PIR6            equ	14758	;# 
 17018   0039A7                     PIR7            equ	14759	;# 
 17019   0039A8                     PIR8            equ	14760	;# 
 17020   0039A9                     PIR9            equ	14761	;# 
 17021   0039AA                     PIR10           equ	14762	;# 
 17022   0039C0                     PMD0            equ	14784	;# 
 17023   0039C1                     PMD1            equ	14785	;# 
 17024   0039C2                     PMD2            equ	14786	;# 
 17025   0039C3                     PMD3            equ	14787	;# 
 17026   0039C4                     PMD4            equ	14788	;# 
 17027   0039C5                     PMD5            equ	14789	;# 
 17028   0039C6                     PMD6            equ	14790	;# 
 17029   0039C7                     PMD7            equ	14791	;# 
 17030   0039D0                     BORCON          equ	14800	;# 
 17031   0039D1                     VREGCON         equ	14801	;# 
 17032   0039D8                     CPUDOZE         equ	14808	;# 
 17033   0039D9                     OSCCON1         equ	14809	;# 
 17034   0039DA                     OSCCON2         equ	14810	;# 
 17035   0039DB                     OSCCON3         equ	14811	;# 
 17036   0039DC                     OSCSTAT         equ	14812	;# 
 17037   0039DC                     OSCSTAT1        equ	14812	;# 
 17038   0039DD                     OSCEN           equ	14813	;# 
 17039   0039DE                     OSCTUNE         equ	14814	;# 
 17040   0039DF                     OSCFRQ          equ	14815	;# 
 17041   0039E0                     NVMADRL         equ	14816	;# 
 17042   0039E1                     NVMADRH         equ	14817	;# 
 17043   0039E3                     NVMDAT          equ	14819	;# 
 17044   0039E5                     NVMCON1         equ	14821	;# 
 17045   0039E6                     NVMCON2         equ	14822	;# 
 17046   0039EF                     PRLOCK          equ	14831	;# 
 17047   0039F1                     ISRPR           equ	14833	;# 
 17048   0039F2                     MAINPR          equ	14834	;# 
 17049   0039F3                     DMA1PR          equ	14835	;# 
 17050   0039F4                     DMA2PR          equ	14836	;# 
 17051   0039F7                     SCANPR          equ	14839	;# 
 17052   003A00                     RA0PPS          equ	14848	;# 
 17053   003A01                     RA1PPS          equ	14849	;# 
 17054   003A02                     RA2PPS          equ	14850	;# 
 17055   003A03                     RA3PPS          equ	14851	;# 
 17056   003A04                     RA4PPS          equ	14852	;# 
 17057   003A05                     RA5PPS          equ	14853	;# 
 17058   003A06                     RA6PPS          equ	14854	;# 
 17059   003A07                     RA7PPS          equ	14855	;# 
 17060   003A08                     RB0PPS          equ	14856	;# 
 17061   003A09                     RB1PPS          equ	14857	;# 
 17062   003A0A                     RB2PPS          equ	14858	;# 
 17063   003A0B                     RB3PPS          equ	14859	;# 
 17064   003A0C                     RB4PPS          equ	14860	;# 
 17065   003A0D                     RB5PPS          equ	14861	;# 
 17066   003A0E                     RB6PPS          equ	14862	;# 
 17067   003A0F                     RB7PPS          equ	14863	;# 
 17068   003A10                     RC0PPS          equ	14864	;# 
 17069   003A11                     RC1PPS          equ	14865	;# 
 17070   003A12                     RC2PPS          equ	14866	;# 
 17071   003A13                     RC3PPS          equ	14867	;# 
 17072   003A14                     RC4PPS          equ	14868	;# 
 17073   003A15                     RC5PPS          equ	14869	;# 
 17074   003A16                     RC6PPS          equ	14870	;# 
 17075   003A17                     RC7PPS          equ	14871	;# 
 17076   003A18                     RD0PPS          equ	14872	;# 
 17077   003A19                     RD1PPS          equ	14873	;# 
 17078   003A1A                     RD2PPS          equ	14874	;# 
 17079   003A1B                     RD3PPS          equ	14875	;# 
 17080   003A1C                     RD4PPS          equ	14876	;# 
 17081   003A1D                     RD5PPS          equ	14877	;# 
 17082   003A1E                     RD6PPS          equ	14878	;# 
 17083   003A1F                     RD7PPS          equ	14879	;# 
 17084   003A20                     RE0PPS          equ	14880	;# 
 17085   003A21                     RE1PPS          equ	14881	;# 
 17086   003A22                     RE2PPS          equ	14882	;# 
 17087   003A28                     RF0PPS          equ	14888	;# 
 17088   003A29                     RF1PPS          equ	14889	;# 
 17089   003A2A                     RF2PPS          equ	14890	;# 
 17090   003A2B                     RF3PPS          equ	14891	;# 
 17091   003A2C                     RF4PPS          equ	14892	;# 
 17092   003A2D                     RF5PPS          equ	14893	;# 
 17093   003A2E                     RF6PPS          equ	14894	;# 
 17094   003A2F                     RF7PPS          equ	14895	;# 
 17095   003A40                     ANSELA          equ	14912	;# 
 17096   003A41                     WPUA            equ	14913	;# 
 17097   003A42                     ODCONA          equ	14914	;# 
 17098   003A43                     SLRCONA         equ	14915	;# 
 17099   003A44                     INLVLA          equ	14916	;# 
 17100   003A45                     IOCAP           equ	14917	;# 
 17101   003A46                     IOCAN           equ	14918	;# 
 17102   003A47                     IOCAF           equ	14919	;# 
 17103   003A50                     ANSELB          equ	14928	;# 
 17104   003A51                     WPUB            equ	14929	;# 
 17105   003A52                     ODCONB          equ	14930	;# 
 17106   003A53                     SLRCONB         equ	14931	;# 
 17107   003A54                     INLVLB          equ	14932	;# 
 17108   003A55                     IOCBP           equ	14933	;# 
 17109   003A56                     IOCBN           equ	14934	;# 
 17110   003A57                     IOCBF           equ	14935	;# 
 17111   003A5A                     RB1I2C          equ	14938	;# 
 17112   003A5B                     RB2I2C          equ	14939	;# 
 17113   003A60                     ANSELC          equ	14944	;# 
 17114   003A61                     WPUC            equ	14945	;# 
 17115   003A62                     ODCONC          equ	14946	;# 
 17116   003A63                     SLRCONC         equ	14947	;# 
 17117   003A64                     INLVLC          equ	14948	;# 
 17118   003A65                     IOCCP           equ	14949	;# 
 17119   003A66                     IOCCN           equ	14950	;# 
 17120   003A67                     IOCCF           equ	14951	;# 
 17121   003A6A                     RC3I2C          equ	14954	;# 
 17122   003A6B                     RC4I2C          equ	14955	;# 
 17123   003A70                     ANSELD          equ	14960	;# 
 17124   003A71                     WPUD            equ	14961	;# 
 17125   003A72                     ODCOND          equ	14962	;# 
 17126   003A73                     SLRCOND         equ	14963	;# 
 17127   003A74                     INLVLD          equ	14964	;# 
 17128   003A7A                     RD0I2C          equ	14970	;# 
 17129   003A7B                     RD1I2C          equ	14971	;# 
 17130   003A80                     ANSELE          equ	14976	;# 
 17131   003A81                     WPUE            equ	14977	;# 
 17132   003A82                     ODCONE          equ	14978	;# 
 17133   003A83                     SLRCONE         equ	14979	;# 
 17134   003A84                     INLVLE          equ	14980	;# 
 17135   003A85                     IOCEP           equ	14981	;# 
 17136   003A86                     IOCEN           equ	14982	;# 
 17137   003A87                     IOCEF           equ	14983	;# 
 17138   003A90                     ANSELF          equ	14992	;# 
 17139   003A91                     WPUF            equ	14993	;# 
 17140   003A92                     ODCONF          equ	14994	;# 
 17141   003A93                     SLRCONF         equ	14995	;# 
 17142   003A94                     INLVLF          equ	14996	;# 
 17143   003ABF                     PPSLOCK         equ	15039	;# 
 17144   003AC0                     INT0PPS         equ	15040	;# 
 17145   003AC1                     INT1PPS         equ	15041	;# 
 17146   003AC2                     INT2PPS         equ	15042	;# 
 17147   003AC3                     T0CKIPPS        equ	15043	;# 
 17148   003AC4                     T1CKIPPS        equ	15044	;# 
 17149   003AC5                     T1GPPS          equ	15045	;# 
 17150   003AC6                     T3CKIPPS        equ	15046	;# 
 17151   003AC7                     T3GPPS          equ	15047	;# 
 17152   003AC8                     T5CKIPPS        equ	15048	;# 
 17153   003AC9                     T5GPPS          equ	15049	;# 
 17154   003ACA                     T2INPPS         equ	15050	;# 
 17155   003ACB                     T4INPPS         equ	15051	;# 
 17156   003ACC                     T6INPPS         equ	15052	;# 
 17157   003ACD                     CCP1PPS         equ	15053	;# 
 17158   003ACE                     CCP2PPS         equ	15054	;# 
 17159   003ACF                     CCP3PPS         equ	15055	;# 
 17160   003AD0                     CCP4PPS         equ	15056	;# 
 17161   003AD1                     SMT1WINPPS      equ	15057	;# 
 17162   003AD2                     SMT1SIGPPS      equ	15058	;# 
 17163   003AD3                     CWG1INPPS       equ	15059	;# 
 17164   003AD4                     CWG2INPPS       equ	15060	;# 
 17165   003AD5                     CWG3INPPS       equ	15061	;# 
 17166   003AD6                     MD1CARLPPS      equ	15062	;# 
 17167   003AD7                     MD1CARHPPS      equ	15063	;# 
 17168   003AD8                     MD1SRCPPS       equ	15064	;# 
 17169   003AD9                     CLCIN0PPS       equ	15065	;# 
 17170   003ADA                     CLCIN1PPS       equ	15066	;# 
 17171   003ADB                     CLCIN2PPS       equ	15067	;# 
 17172   003ADC                     CLCIN3PPS       equ	15068	;# 
 17173   003ADD                     ADACTPPS        equ	15069	;# 
 17174   003ADE                     SPI1SCKPPS      equ	15070	;# 
 17175   003ADF                     SPI1SDIPPS      equ	15071	;# 
 17176   003AE0                     SPI1SSPPS       equ	15072	;# 
 17177   003AE1                     I2C1SCLPPS      equ	15073	;# 
 17178   003AE2                     I2C1SDAPPS      equ	15074	;# 
 17179   003AE3                     I2C2SCLPPS      equ	15075	;# 
 17180   003AE4                     I2C2SDAPPS      equ	15076	;# 
 17181   003AE5                     U1RXPPS         equ	15077	;# 
 17182   003AE6                     U1CTSPPS        equ	15078	;# 
 17183   003AE8                     U2RXPPS         equ	15080	;# 
 17184   003AE9                     U2CTSPPS        equ	15081	;# 
 17185   003BC9                     DMA2BUF         equ	15305	;# 
 17186   003BCA                     DMA2DCNT        equ	15306	;# 
 17187   003BCA                     DMA2DCNTL       equ	15306	;# 
 17188   003BCB                     DMA2DCNTH       equ	15307	;# 
 17189   003BCC                     DMA2DPTR        equ	15308	;# 
 17190   003BCC                     DMA2DPTRL       equ	15308	;# 
 17191   003BCD                     DMA2DPTRH       equ	15309	;# 
 17192   003BCE                     DMA2DSZ         equ	15310	;# 
 17193   003BCE                     DMA2DSZL        equ	15310	;# 
 17194   003BCF                     DMA2DSZH        equ	15311	;# 
 17195   003BD0                     DMA2DSA         equ	15312	;# 
 17196   003BD0                     DMA2DSAL        equ	15312	;# 
 17197   003BD1                     DMA2DSAH        equ	15313	;# 
 17198   003BD2                     DMA2SCNT        equ	15314	;# 
 17199   003BD2                     DMA2SCNTL       equ	15314	;# 
 17200   003BD3                     DMA2SCNTH       equ	15315	;# 
 17201   003BD4                     DMA2SPTR        equ	15316	;# 
 17202   003BD4                     DMA2SPTRL       equ	15316	;# 
 17203   003BD5                     DMA2SPTRH       equ	15317	;# 
 17204   003BD6                     DMA2SPTRU       equ	15318	;# 
 17205   003BD7                     DMA2SSZ         equ	15319	;# 
 17206   003BD7                     DMA2SSZL        equ	15319	;# 
 17207   003BD8                     DMA2SSZH        equ	15320	;# 
 17208   003BD9                     DMA2SSA         equ	15321	;# 
 17209   003BD9                     DMA2SSAL        equ	15321	;# 
 17210   003BDA                     DMA2SSAH        equ	15322	;# 
 17211   003BDB                     DMA2SSAU        equ	15323	;# 
 17212   003BDC                     DMA2CON0        equ	15324	;# 
 17213   003BDD                     DMA2CON1        equ	15325	;# 
 17214   003BDE                     DMA2AIRQ        equ	15326	;# 
 17215   003BDF                     DMA2SIRQ        equ	15327	;# 
 17216   003BE9                     DMA1BUF         equ	15337	;# 
 17217   003BEA                     DMA1DCNT        equ	15338	;# 
 17218   003BEA                     DMA1DCNTL       equ	15338	;# 
 17219   003BEB                     DMA1DCNTH       equ	15339	;# 
 17220   003BEC                     DMA1DPTR        equ	15340	;# 
 17221   003BEC                     DMA1DPTRL       equ	15340	;# 
 17222   003BED                     DMA1DPTRH       equ	15341	;# 
 17223   003BEE                     DMA1DSZ         equ	15342	;# 
 17224   003BEE                     DMA1DSZL        equ	15342	;# 
 17225   003BEF                     DMA1DSZH        equ	15343	;# 
 17226   003BF0                     DMA1DSA         equ	15344	;# 
 17227   003BF0                     DMA1DSAL        equ	15344	;# 
 17228   003BF1                     DMA1DSAH        equ	15345	;# 
 17229   003BF2                     DMA1SCNT        equ	15346	;# 
 17230   003BF2                     DMA1SCNTL       equ	15346	;# 
 17231   003BF3                     DMA1SCNTH       equ	15347	;# 
 17232   003BF4                     DMA1SPTR        equ	15348	;# 
 17233   003BF4                     DMA1SPTRL       equ	15348	;# 
 17234   003BF5                     DMA1SPTRH       equ	15349	;# 
 17235   003BF6                     DMA1SPTRU       equ	15350	;# 
 17236   003BF7                     DMA1SSZ         equ	15351	;# 
 17237   003BF7                     DMA1SSZL        equ	15351	;# 
 17238   003BF8                     DMA1SSZH        equ	15352	;# 
 17239   003BF9                     DMA1SSA         equ	15353	;# 
 17240   003BF9                     DMA1SSAL        equ	15353	;# 
 17241   003BFA                     DMA1SSAH        equ	15354	;# 
 17242   003BFB                     DMA1SSAU        equ	15355	;# 
 17243   003BFC                     DMA1CON0        equ	15356	;# 
 17244   003BFD                     DMA1CON1        equ	15357	;# 
 17245   003BFE                     DMA1AIRQ        equ	15358	;# 
 17246   003BFF                     DMA1SIRQ        equ	15359	;# 
 17247   003C56                     CLC4CON         equ	15446	;# 
 17248   003C57                     CLC4POL         equ	15447	;# 
 17249   003C58                     CLC4SEL0        equ	15448	;# 
 17250   003C59                     CLC4SEL1        equ	15449	;# 
 17251   003C5A                     CLC4SEL2        equ	15450	;# 
 17252   003C5B                     CLC4SEL3        equ	15451	;# 
 17253   003C5C                     CLC4GLS0        equ	15452	;# 
 17254   003C5D                     CLC4GLS1        equ	15453	;# 
 17255   003C5E                     CLC4GLS2        equ	15454	;# 
 17256   003C5F                     CLC4GLS3        equ	15455	;# 
 17257   003C60                     CLC3CON         equ	15456	;# 
 17258   003C61                     CLC3POL         equ	15457	;# 
 17259   003C62                     CLC3SEL0        equ	15458	;# 
 17260   003C63                     CLC3SEL1        equ	15459	;# 
 17261   003C64                     CLC3SEL2        equ	15460	;# 
 17262   003C65                     CLC3SEL3        equ	15461	;# 
 17263   003C66                     CLC3GLS0        equ	15462	;# 
 17264   003C67                     CLC3GLS1        equ	15463	;# 
 17265   003C68                     CLC3GLS2        equ	15464	;# 
 17266   003C69                     CLC3GLS3        equ	15465	;# 
 17267   003C6A                     CLC2CON         equ	15466	;# 
 17268   003C6B                     CLC2POL         equ	15467	;# 
 17269   003C6C                     CLC2SEL0        equ	15468	;# 
 17270   003C6D                     CLC2SEL1        equ	15469	;# 
 17271   003C6E                     CLC2SEL2        equ	15470	;# 
 17272   003C6F                     CLC2SEL3        equ	15471	;# 
 17273   003C70                     CLC2GLS0        equ	15472	;# 
 17274   003C71                     CLC2GLS1        equ	15473	;# 
 17275   003C72                     CLC2GLS2        equ	15474	;# 
 17276   003C73                     CLC2GLS3        equ	15475	;# 
 17277   003C74                     CLC1CON         equ	15476	;# 
 17278   003C75                     CLC1POL         equ	15477	;# 
 17279   003C76                     CLC1SEL0        equ	15478	;# 
 17280   003C77                     CLC1SEL1        equ	15479	;# 
 17281   003C78                     CLC1SEL2        equ	15480	;# 
 17282   003C79                     CLC1SEL3        equ	15481	;# 
 17283   003C7A                     CLC1GLS0        equ	15482	;# 
 17284   003C7B                     CLC1GLS1        equ	15483	;# 
 17285   003C7C                     CLC1GLS2        equ	15484	;# 
 17286   003C7D                     CLC1GLS3        equ	15485	;# 
 17287   003C7E                     CLCDATA0        equ	15486	;# 
 17288   003CE5                     CLKRCON         equ	15589	;# 
 17289   003CE6                     CLKRCLK         equ	15590	;# 
 17290   003CFA                     MD1CON0         equ	15610	;# 
 17291   003CFB                     MD1CON1         equ	15611	;# 
 17292   003CFC                     MD1SRC          equ	15612	;# 
 17293   003CFD                     MD1CARL         equ	15613	;# 
 17294   003CFE                     MD1CARH         equ	15614	;# 
 17295   003D10                     SPI1RXB         equ	15632	;# 
 17296   003D11                     SPI1TXB         equ	15633	;# 
 17297   003D12                     SPI1TCNT        equ	15634	;# 
 17298   003D12                     SPI1TCNTL       equ	15634	;# 
 17299   003D13                     SPI1TCNTH       equ	15635	;# 
 17300   003D14                     SPI1CON0        equ	15636	;# 
 17301   003D15                     SPI1CON1        equ	15637	;# 
 17302   003D16                     SPI1CON2        equ	15638	;# 
 17303   003D17                     SPI1STATUS      equ	15639	;# 
 17304   003D18                     SPI1TWIDTH      equ	15640	;# 
 17305   003D19                     SPI1BAUD        equ	15641	;# 
 17306   003D1A                     SPI1INTF        equ	15642	;# 
 17307   003D1B                     SPI1INTE        equ	15643	;# 
 17308   003D1C                     SPI1CLK         equ	15644	;# 
 17309   003D54                     I2C2RXB         equ	15700	;# 
 17310   003D55                     I2C2TXB         equ	15701	;# 
 17311   003D56                     I2C2CNT         equ	15702	;# 
 17312   003D57                     I2C2ADB0        equ	15703	;# 
 17313   003D58                     I2C2ADB1        equ	15704	;# 
 17314   003D59                     I2C2ADR0        equ	15705	;# 
 17315   003D5A                     I2C2ADR1        equ	15706	;# 
 17316   003D5B                     I2C2ADR2        equ	15707	;# 
 17317   003D5C                     I2C2ADR3        equ	15708	;# 
 17318   003D5D                     I2C2CON0        equ	15709	;# 
 17319   003D5E                     I2C2CON1        equ	15710	;# 
 17320   003D5F                     I2C2CON2        equ	15711	;# 
 17321   003D60                     I2C2ERR         equ	15712	;# 
 17322   003D61                     I2C2STAT0       equ	15713	;# 
 17323   003D62                     I2C2STAT1       equ	15714	;# 
 17324   003D63                     I2C2PIR         equ	15715	;# 
 17325   003D64                     I2C2PIE         equ	15716	;# 
 17326   003D65                     I2C2CLK         equ	15717	;# 
 17327   003D66                     I2C2BTO         equ	15718	;# 
 17328   003D6A                     I2C1RXB         equ	15722	;# 
 17329   003D6B                     I2C1TXB         equ	15723	;# 
 17330   003D6C                     I2C1CNT         equ	15724	;# 
 17331   003D6D                     I2C1ADB0        equ	15725	;# 
 17332   003D6E                     I2C1ADB1        equ	15726	;# 
 17333   003D6F                     I2C1ADR0        equ	15727	;# 
 17334   003D70                     I2C1ADR1        equ	15728	;# 
 17335   003D71                     I2C1ADR2        equ	15729	;# 
 17336   003D72                     I2C1ADR3        equ	15730	;# 
 17337   003D73                     I2C1CON0        equ	15731	;# 
 17338   003D74                     I2C1CON1        equ	15732	;# 
 17339   003D75                     I2C1CON2        equ	15733	;# 
 17340   003D76                     I2C1ERR         equ	15734	;# 
 17341   003D77                     I2C1STAT0       equ	15735	;# 
 17342   003D78                     I2C1STAT1       equ	15736	;# 
 17343   003D79                     I2C1PIR         equ	15737	;# 
 17344   003D7A                     I2C1PIE         equ	15738	;# 
 17345   003D7B                     I2C1CLK         equ	15739	;# 
 17346   003D7C                     I2C1BTO         equ	15740	;# 
 17347   003DD0                     U2RXB           equ	15824	;# 
 17348   003DD0                     U2RXBL          equ	15824	;# 
 17349   003DD2                     U2TXB           equ	15826	;# 
 17350   003DD2                     U2TXBL          equ	15826	;# 
 17351   003DD4                     U2P1            equ	15828	;# 
 17352   003DD4                     U2P1L           equ	15828	;# 
 17353   003DD6                     U2P2            equ	15830	;# 
 17354   003DD6                     U2P2L           equ	15830	;# 
 17355   003DD8                     U2P3            equ	15832	;# 
 17356   003DD8                     U2P3L           equ	15832	;# 
 17357   003DDA                     U2CON0          equ	15834	;# 
 17358   003DDB                     U2CON1          equ	15835	;# 
 17359   003DDC                     U2CON2          equ	15836	;# 
 17360   003DDD                     U2BRG           equ	15837	;# 
 17361   003DDD                     U2BRGL          equ	15837	;# 
 17362   003DDE                     U2BRGH          equ	15838	;# 
 17363   003DDF                     U2FIFO          equ	15839	;# 
 17364   003DE0                     U2UIR           equ	15840	;# 
 17365   003DE1                     U2ERRIR         equ	15841	;# 
 17366   003DE2                     U2ERRIE         equ	15842	;# 
 17367   003DE8                     U1RXB           equ	15848	;# 
 17368   003DE8                     U1RXBL          equ	15848	;# 
 17369   003DE9                     U1RXCHK         equ	15849	;# 
 17370   003DEA                     U1TXB           equ	15850	;# 
 17371   003DEA                     U1TXBL          equ	15850	;# 
 17372   003DEB                     U1TXCHK         equ	15851	;# 
 17373   003DEC                     U1P1            equ	15852	;# 
 17374   003DEC                     U1P1L           equ	15852	;# 
 17375   003DED                     U1P1H           equ	15853	;# 
 17376   003DEE                     U1P2            equ	15854	;# 
 17377   003DEE                     U1P2L           equ	15854	;# 
 17378   003DEF                     U1P2H           equ	15855	;# 
 17379   003DF0                     U1P3            equ	15856	;# 
 17380   003DF0                     U1P3L           equ	15856	;# 
 17381   003DF1                     U1P3H           equ	15857	;# 
 17382   003DF2                     U1CON0          equ	15858	;# 
 17383   003DF3                     U1CON1          equ	15859	;# 
 17384   003DF4                     U1CON2          equ	15860	;# 
 17385   003DF5                     U1BRG           equ	15861	;# 
 17386   003DF5                     U1BRGL          equ	15861	;# 
 17387   003DF6                     U1BRGH          equ	15862	;# 
 17388   003DF7                     U1FIFO          equ	15863	;# 
 17389   003DF8                     U1UIR           equ	15864	;# 
 17390   003DF9                     U1ERRIR         equ	15865	;# 
 17391   003DFA                     U1ERRIE         equ	15866	;# 
 17392   003E9C                     DAC1CON1        equ	16028	;# 
 17393   003E9E                     DAC1CON0        equ	16030	;# 
 17394   003EB8                     CM2CON0         equ	16056	;# 
 17395   003EB9                     CM2CON1         equ	16057	;# 
 17396   003EBA                     CM2NCH          equ	16058	;# 
 17397   003EBB                     CM2PCH          equ	16059	;# 
 17398   003EBC                     CM1CON0         equ	16060	;# 
 17399   003EBD                     CM1CON1         equ	16061	;# 
 17400   003EBE                     CM1NCH          equ	16062	;# 
 17401   003EBF                     CM1PCH          equ	16063	;# 
 17402   003EC0                     CMOUT           equ	16064	;# 
 17403   003EC1                     FVRCON          equ	16065	;# 
 17404   003EC3                     ZCDCON          equ	16067	;# 
 17405   003EC9                     HLVDCON0        equ	16073	;# 
 17406   003ECA                     HLVDCON1        equ	16074	;# 
 17407   003ED7                     ADCP            equ	16087	;# 
 17408   003EDE                     ADLTH           equ	16094	;# 
 17409   003EDE                     ADLTHL          equ	16094	;# 
 17410   003EDF                     ADLTHH          equ	16095	;# 
 17411   003EE0                     ADUTH           equ	16096	;# 
 17412   003EE0                     ADUTHL          equ	16096	;# 
 17413   003EE1                     ADUTHH          equ	16097	;# 
 17414   003EE2                     ADERR           equ	16098	;# 
 17415   003EE2                     ADERRL          equ	16098	;# 
 17416   003EE3                     ADERRH          equ	16099	;# 
 17417   003EE4                     ADSTPT          equ	16100	;# 
 17418   003EE4                     ADSTPTL         equ	16100	;# 
 17419   003EE5                     ADSTPTH         equ	16101	;# 
 17420   003EE6                     ADFLTR          equ	16102	;# 
 17421   003EE6                     ADFLTRL         equ	16102	;# 
 17422   003EE7                     ADFLTRH         equ	16103	;# 
 17423   003EE8                     ADACC           equ	16104	;# 
 17424   003EE8                     ADACCL          equ	16104	;# 
 17425   003EE9                     ADACCH          equ	16105	;# 
 17426   003EEA                     ADACCU          equ	16106	;# 
 17427   003EEB                     ADCNT           equ	16107	;# 
 17428   003EEC                     ADRPT           equ	16108	;# 
 17429   003EED                     ADPREV          equ	16109	;# 
 17430   003EED                     ADPREVL         equ	16109	;# 
 17431   003EEE                     ADPREVH         equ	16110	;# 
 17432   003EEF                     ADRES           equ	16111	;# 
 17433   003EEF                     ADRESL          equ	16111	;# 
 17434   003EF0                     ADRESH          equ	16112	;# 
 17435   003EF1                     ADPCH           equ	16113	;# 
 17436   003EF3                     ADACQ           equ	16115	;# 
 17437   003EF3                     ADACQL          equ	16115	;# 
 17438   003EF4                     ADACQH          equ	16116	;# 
 17439   003EF5                     ADCAP           equ	16117	;# 
 17440   003EF6                     ADPRE           equ	16118	;# 
 17441   003EF6                     ADPREL          equ	16118	;# 
 17442   003EF7                     ADPREH          equ	16119	;# 
 17443   003EF8                     ADCON0          equ	16120	;# 
 17444   003EF9                     ADCON1          equ	16121	;# 
 17445   003EFA                     ADCON2          equ	16122	;# 
 17446   003EFB                     ADCON3          equ	16123	;# 
 17447   003EFC                     ADSTAT          equ	16124	;# 
 17448   003EFD                     ADREF           equ	16125	;# 
 17449   003EFE                     ADACT           equ	16126	;# 
 17450   003EFF                     ADCLK           equ	16127	;# 
 17451   003F12                     SMT1TMR         equ	16146	;# 
 17452   003F12                     SMT1TMRL        equ	16146	;# 
 17453   003F13                     SMT1TMRH        equ	16147	;# 
 17454   003F14                     SMT1TMRU        equ	16148	;# 
 17455   003F15                     SMT1CPR         equ	16149	;# 
 17456   003F15                     SMT1CPRL        equ	16149	;# 
 17457   003F16                     SMT1CPRH        equ	16150	;# 
 17458   003F17                     SMT1CPRU        equ	16151	;# 
 17459   003F18                     SMT1CPW         equ	16152	;# 
 17460   003F18                     SMT1CPWL        equ	16152	;# 
 17461   003F19                     SMT1CPWH        equ	16153	;# 
 17462   003F1A                     SMT1CPWU        equ	16154	;# 
 17463   003F1B                     SMT1PR          equ	16155	;# 
 17464   003F1B                     SMT1PRL         equ	16155	;# 
 17465   003F1C                     SMT1PRH         equ	16156	;# 
 17466   003F1D                     SMT1PRU         equ	16157	;# 
 17467   003F1E                     SMT1CON0        equ	16158	;# 
 17468   003F1F                     SMT1CON1        equ	16159	;# 
 17469   003F20                     SMT1STAT        equ	16160	;# 
 17470   003F21                     SMT1CLK         equ	16161	;# 
 17471   003F22                     SMT1SIG         equ	16162	;# 
 17472   003F23                     SMT1WIN         equ	16163	;# 
 17473   003F38                     NCO1ACC         equ	16184	;# 
 17474   003F38                     NCO1ACCL        equ	16184	;# 
 17475   003F39                     NCO1ACCH        equ	16185	;# 
 17476   003F3A                     NCO1ACCU        equ	16186	;# 
 17477   003F3B                     NCO1INC         equ	16187	;# 
 17478   003F3B                     NCO1INCL        equ	16187	;# 
 17479   003F3C                     NCO1INCH        equ	16188	;# 
 17480   003F3D                     NCO1INCU        equ	16189	;# 
 17481   003F3E                     NCO1CON         equ	16190	;# 
 17482   003F3F                     NCO1CLK         equ	16191	;# 
 17483   003F40                     CWG3CLK         equ	16192	;# 
 17484   003F40                     CWG3CLKCON      equ	16192	;# 
 17485   003F41                     CWG3ISM         equ	16193	;# 
 17486   003F41                     CWG3DAT         equ	16193	;# 
 17487   003F42                     CWG3DBR         equ	16194	;# 
 17488   003F43                     CWG3DBF         equ	16195	;# 
 17489   003F44                     CWG3CON0        equ	16196	;# 
 17490   003F45                     CWG3CON1        equ	16197	;# 
 17491   003F46                     CWG3AS0         equ	16198	;# 
 17492   003F47                     CWG3AS1         equ	16199	;# 
 17493   003F48                     CWG3STR         equ	16200	;# 
 17494   003F49                     CWG2CLK         equ	16201	;# 
 17495   003F49                     CWG2CLKCON      equ	16201	;# 
 17496   003F4A                     CWG2ISM         equ	16202	;# 
 17497   003F4A                     CWG2DAT         equ	16202	;# 
 17498   003F4B                     CWG2DBR         equ	16203	;# 
 17499   003F4C                     CWG2DBF         equ	16204	;# 
 17500   003F4D                     CWG2CON0        equ	16205	;# 
 17501   003F4E                     CWG2CON1        equ	16206	;# 
 17502   003F4F                     CWG2AS0         equ	16207	;# 
 17503   003F50                     CWG2AS1         equ	16208	;# 
 17504   003F51                     CWG2STR         equ	16209	;# 
 17505   003F52                     CWG1CLK         equ	16210	;# 
 17506   003F52                     CWG1CLKCON      equ	16210	;# 
 17507   003F53                     CWG1ISM         equ	16211	;# 
 17508   003F53                     CWG1DAT         equ	16211	;# 
 17509   003F54                     CWG1DBR         equ	16212	;# 
 17510   003F55                     CWG1DBF         equ	16213	;# 
 17511   003F56                     CWG1CON0        equ	16214	;# 
 17512   003F57                     CWG1CON1        equ	16215	;# 
 17513   003F58                     CWG1AS0         equ	16216	;# 
 17514   003F59                     CWG1AS1         equ	16217	;# 
 17515   003F5A                     CWG1STR         equ	16218	;# 
 17516   003F5E                     CCPTMRS0        equ	16222	;# 
 17517   003F5F                     CCPTMRS1        equ	16223	;# 
 17518   003F60                     PWM8DC          equ	16224	;# 
 17519   003F60                     PWM8DCL         equ	16224	;# 
 17520   003F61                     PWM8DCH         equ	16225	;# 
 17521   003F62                     PWM8CON         equ	16226	;# 
 17522   003F64                     PWM7DC          equ	16228	;# 
 17523   003F64                     PWM7DCL         equ	16228	;# 
 17524   003F65                     PWM7DCH         equ	16229	;# 
 17525   003F66                     PWM7CON         equ	16230	;# 
 17526   003F68                     PWM6DC          equ	16232	;# 
 17527   003F68                     PWM6DCL         equ	16232	;# 
 17528   003F69                     PWM6DCH         equ	16233	;# 
 17529   003F6A                     PWM6CON         equ	16234	;# 
 17530   003F6C                     PWM5DC          equ	16236	;# 
 17531   003F6C                     PWM5DCL         equ	16236	;# 
 17532   003F6D                     PWM5DCH         equ	16237	;# 
 17533   003F6E                     PWM5CON         equ	16238	;# 
 17534   003F70                     CCPR4           equ	16240	;# 
 17535   003F70                     CCPR4L          equ	16240	;# 
 17536   003F71                     CCPR4H          equ	16241	;# 
 17537   003F72                     CCP4CON         equ	16242	;# 
 17538   003F73                     CCP4CAP         equ	16243	;# 
 17539   003F74                     CCPR3           equ	16244	;# 
 17540   003F74                     CCPR3L          equ	16244	;# 
 17541   003F75                     CCPR3H          equ	16245	;# 
 17542   003F76                     CCP3CON         equ	16246	;# 
 17543   003F77                     CCP3CAP         equ	16247	;# 
 17544   003F78                     CCPR2           equ	16248	;# 
 17545   003F78                     CCPR2L          equ	16248	;# 
 17546   003F79                     CCPR2H          equ	16249	;# 
 17547   003F7A                     CCP2CON         equ	16250	;# 
 17548   003F7B                     CCP2CAP         equ	16251	;# 
 17549   003F7C                     CCPR1           equ	16252	;# 
 17550   003F7C                     CCPR1L          equ	16252	;# 
 17551   003F7D                     CCPR1H          equ	16253	;# 
 17552   003F7E                     CCP1CON         equ	16254	;# 
 17553   003F7F                     CCP1CAP         equ	16255	;# 
 17554   003F92                     T6TMR           equ	16274	;# 
 17555   003F92                     TMR6            equ	16274	;# 
 17556   003F93                     T6PR            equ	16275	;# 
 17557   003F93                     PR6             equ	16275	;# 
 17558   003F94                     T6CON           equ	16276	;# 
 17559   003F95                     T6HLT           equ	16277	;# 
 17560   003F96                     T6CLKCON        equ	16278	;# 
 17561   003F96                     T6CLK           equ	16278	;# 
 17562   003F97                     T6RST           equ	16279	;# 
 17563   003F98                     TMR5            equ	16280	;# 
 17564   003F98                     TMR5L           equ	16280	;# 
 17565   003F99                     TMR5H           equ	16281	;# 
 17566   003F9A                     T5CON           equ	16282	;# 
 17567   003F9A                     TMR5CON         equ	16282	;# 
 17568   003F9B                     T5GCON          equ	16283	;# 
 17569   003F9B                     TMR5GCON        equ	16283	;# 
 17570   003F9C                     T5GATE          equ	16284	;# 
 17571   003F9C                     TMR5GATE        equ	16284	;# 
 17572   003F9D                     T5CLK           equ	16285	;# 
 17573   003F9D                     TMR5CLK         equ	16285	;# 
 17574   003F9D                     PR5             equ	16285	;# 
 17575   003F9E                     T4TMR           equ	16286	;# 
 17576   003F9E                     TMR4            equ	16286	;# 
 17577   003F9F                     T4PR            equ	16287	;# 
 17578   003F9F                     PR4             equ	16287	;# 
 17579   003FA0                     T4CON           equ	16288	;# 
 17580   003FA1                     T4HLT           equ	16289	;# 
 17581   003FA2                     T4CLKCON        equ	16290	;# 
 17582   003FA2                     T4CLK           equ	16290	;# 
 17583   003FA3                     T4RST           equ	16291	;# 
 17584   003FA4                     TMR3            equ	16292	;# 
 17585   003FA4                     TMR3L           equ	16292	;# 
 17586   003FA5                     TMR3H           equ	16293	;# 
 17587   003FA6                     T3CON           equ	16294	;# 
 17588   003FA6                     TMR3CON         equ	16294	;# 
 17589   003FA7                     T3GCON          equ	16295	;# 
 17590   003FA7                     TMR3GCON        equ	16295	;# 
 17591   003FA8                     T3GATE          equ	16296	;# 
 17592   003FA8                     TMR3GATE        equ	16296	;# 
 17593   003FA9                     T3CLK           equ	16297	;# 
 17594   003FA9                     TMR3CLK         equ	16297	;# 
 17595   003FA9                     PR3             equ	16297	;# 
 17596   003FAA                     T2TMR           equ	16298	;# 
 17597   003FAA                     TMR2            equ	16298	;# 
 17598   003FAB                     T2PR            equ	16299	;# 
 17599   003FAB                     PR2             equ	16299	;# 
 17600   003FAC                     T2CON           equ	16300	;# 
 17601   003FAD                     T2HLT           equ	16301	;# 
 17602   003FAE                     T2CLKCON        equ	16302	;# 
 17603   003FAE                     T2CLK           equ	16302	;# 
 17604   003FAF                     T2RST           equ	16303	;# 
 17605   003FB0                     TMR1            equ	16304	;# 
 17606   003FB0                     TMR1L           equ	16304	;# 
 17607   003FB1                     TMR1H           equ	16305	;# 
 17608   003FB2                     T1CON           equ	16306	;# 
 17609   003FB2                     TMR1CON         equ	16306	;# 
 17610   003FB3                     T1GCON          equ	16307	;# 
 17611   003FB3                     TMR1GCON        equ	16307	;# 
 17612   003FB4                     T1GATE          equ	16308	;# 
 17613   003FB4                     TMR1GATE        equ	16308	;# 
 17614   003FB5                     T1CLK           equ	16309	;# 
 17615   003FB5                     TMR1CLK         equ	16309	;# 
 17616   003FB5                     PR1             equ	16309	;# 
 17617   003FB6                     TMR0L           equ	16310	;# 
 17618   003FB6                     TMR0            equ	16310	;# 
 17619   003FB7                     TMR0H           equ	16311	;# 
 17620   003FB7                     PR0             equ	16311	;# 
 17621   003FB8                     T0CON0          equ	16312	;# 
 17622   003FB9                     T0CON1          equ	16313	;# 
 17623   003FBA                     LATA            equ	16314	;# 
 17624   003FBB                     LATB            equ	16315	;# 
 17625   003FBC                     LATC            equ	16316	;# 
 17626   003FBD                     LATD            equ	16317	;# 
 17627   003FBE                     LATE            equ	16318	;# 
 17628   003FBF                     LATF            equ	16319	;# 
 17629   003FC2                     TRISA           equ	16322	;# 
 17630   003FC3                     TRISB           equ	16323	;# 
 17631   003FC4                     TRISC           equ	16324	;# 
 17632   003FC5                     TRISD           equ	16325	;# 
 17633   003FC6                     TRISE           equ	16326	;# 
 17634   003FC7                     TRISF           equ	16327	;# 
 17635   003FCA                     PORTA           equ	16330	;# 
 17636   003FCB                     PORTB           equ	16331	;# 
 17637   003FCC                     PORTC           equ	16332	;# 
 17638   003FCD                     PORTD           equ	16333	;# 
 17639   003FCE                     PORTE           equ	16334	;# 
 17640   003FCF                     PORTF           equ	16335	;# 
 17641   003FD2                     INTCON0         equ	16338	;# 
 17642   003FD3                     INTCON1         equ	16339	;# 
 17643   003FD4                     IVTLOCK         equ	16340	;# 
 17644   003FD5                     IVTBASE         equ	16341	;# 
 17645   003FD5                     IVTBASEL        equ	16341	;# 
 17646   003FD6                     IVTBASEH        equ	16342	;# 
 17647   003FD7                     IVTBASEU        equ	16343	;# 
 17648   003FD8                     STATUS          equ	16344	;# 
 17649   003FD9                     FSR2            equ	16345	;# 
 17650   003FD9                     FSR2L           equ	16345	;# 
 17651   003FDA                     FSR2H           equ	16346	;# 
 17652   003FDB                     PLUSW2          equ	16347	;# 
 17653   003FDC                     PREINC2         equ	16348	;# 
 17654   003FDD                     POSTDEC2        equ	16349	;# 
 17655   003FDE                     POSTINC2        equ	16350	;# 
 17656   003FDF                     INDF2           equ	16351	;# 
 17657   003FE0                     BSR             equ	16352	;# 
 17658   003FE1                     FSR1            equ	16353	;# 
 17659   003FE1                     FSR1L           equ	16353	;# 
 17660   003FE2                     FSR1H           equ	16354	;# 
 17661   003FE3                     PLUSW1          equ	16355	;# 
 17662   003FE4                     PREINC1         equ	16356	;# 
 17663   003FE5                     POSTDEC1        equ	16357	;# 
 17664   003FE6                     POSTINC1        equ	16358	;# 
 17665   003FE7                     INDF1           equ	16359	;# 
 17666   003FE8                     WREG            equ	16360	;# 
 17667   003FE9                     FSR0            equ	16361	;# 
 17668   003FE9                     FSR0L           equ	16361	;# 
 17669   003FEA                     FSR0H           equ	16362	;# 
 17670   003FEB                     PLUSW0          equ	16363	;# 
 17671   003FEC                     PREINC0         equ	16364	;# 
 17672   003FED                     POSTDEC0        equ	16365	;# 
 17673   003FEE                     POSTINC0        equ	16366	;# 
 17674   003FEF                     INDF0           equ	16367	;# 
 17675   003FF0                     PCON0           equ	16368	;# 
 17676   003FF1                     PCON1           equ	16369	;# 
 17677   003FF3                     PROD            equ	16371	;# 
 17678   003FF3                     PRODL           equ	16371	;# 
 17679   003FF4                     PRODH           equ	16372	;# 
 17680   003FF5                     TABLAT          equ	16373	;# 
 17681   003FF6                     TBLPTR          equ	16374	;# 
 17682   003FF6                     TBLPTRL         equ	16374	;# 
 17683   003FF7                     TBLPTRH         equ	16375	;# 
 17684   003FF8                     TBLPTRU         equ	16376	;# 
 17685   003FF9                     PCLAT           equ	16377	;# 
 17686   003FF9                     PCL             equ	16377	;# 
 17687   003FFA                     PCLATH          equ	16378	;# 
 17688   003FFB                     PCLATU          equ	16379	;# 
 17689   003FFC                     STKPTR          equ	16380	;# 
 17690   003FFD                     TOS             equ	16381	;# 
 17691   003FFD                     TOSL            equ	16381	;# 
 17692   003FFE                     TOSH            equ	16382	;# 
 17693   003FFF                     TOSU            equ	16383	;# 
 17694   003880                     STATUS_CSHAD    equ	14464	;# 
 17695   003881                     WREG_CSHAD      equ	14465	;# 
 17696   003882                     BSR_CSHAD       equ	14466	;# 
 17697   003883                     SHADCON         equ	14467	;# 
 17698   003884                     STATUS_SHAD     equ	14468	;# 
 17699   003885                     WREG_SHAD       equ	14469	;# 
 17700   003886                     BSR_SHAD        equ	14470	;# 
 17701   003887                     PCLATH_SHAD     equ	14471	;# 
 17702   003888                     PCLATU_SHAD     equ	14472	;# 
 17703   003889                     FSR0SH          equ	14473	;# 
 17704   003889                     FSR0L_SHAD      equ	14473	;# 
 17705   00388A                     FSR0H_SHAD      equ	14474	;# 
 17706   00388B                     FSR1SH          equ	14475	;# 
 17707   00388B                     FSR1L_SHAD      equ	14475	;# 
 17708   00388C                     FSR1H_SHAD      equ	14476	;# 
 17709   00388D                     FSR2SH          equ	14477	;# 
 17710   00388D                     FSR2L_SHAD      equ	14477	;# 
 17711   00388E                     FSR2H_SHAD      equ	14478	;# 
 17712   00388F                     PRODSH          equ	14479	;# 
 17713   00388F                     PRODL_SHAD      equ	14479	;# 
 17714   003890                     PRODH_SHAD      equ	14480	;# 
 17715   00389D                     IVTADL          equ	14493	;# 
 17716   00389E                     IVTADH          equ	14494	;# 
 17717   00389F                     IVTADU          equ	14495	;# 
 17718   00395B                     WDTCON0         equ	14683	;# 
 17719   00395C                     WDTCON1         equ	14684	;# 
 17720   00395D                     WDTPSL          equ	14685	;# 
 17721   00395E                     WDTPSH          equ	14686	;# 
 17722   00395F                     WDTTMR          equ	14687	;# 
 17723   003960                     CRCDATA         equ	14688	;# 
 17724   003960                     CRCDATL         equ	14688	;# 
 17725   003961                     CRCDATH         equ	14689	;# 
 17726   003962                     CRCACC          equ	14690	;# 
 17727   003962                     CRCACCL         equ	14690	;# 
 17728   003963                     CRCACCH         equ	14691	;# 
 17729   003964                     CRCSHFT         equ	14692	;# 
 17730   003964                     CRCSHIFTL       equ	14692	;# 
 17731   003965                     CRCSHIFTH       equ	14693	;# 
 17732   003966                     CRCXOR          equ	14694	;# 
 17733   003966                     CRCXORL         equ	14694	;# 
 17734   003967                     CRCXORH         equ	14695	;# 
 17735   003968                     CRCCON0         equ	14696	;# 
 17736   003969                     CRCCON1         equ	14697	;# 
 17737   003976                     SCANLADR        equ	14710	;# 
 17738   003976                     SCANLADRL       equ	14710	;# 
 17739   003977                     SCANLADRH       equ	14711	;# 
 17740   003978                     SCANLADRU       equ	14712	;# 
 17741   003979                     SCANHADR        equ	14713	;# 
 17742   003979                     SCANHADRL       equ	14713	;# 
 17743   00397A                     SCANHADRH       equ	14714	;# 
 17744   00397B                     SCANHADRU       equ	14715	;# 
 17745   00397C                     SCANCON0        equ	14716	;# 
 17746   00397D                     SCANTRIG        equ	14717	;# 
 17747   003980                     IPR0            equ	14720	;# 
 17748   003981                     IPR1            equ	14721	;# 
 17749   003982                     IPR2            equ	14722	;# 
 17750   003983                     IPR3            equ	14723	;# 
 17751   003984                     IPR4            equ	14724	;# 
 17752   003985                     IPR5            equ	14725	;# 
 17753   003986                     IPR6            equ	14726	;# 
 17754   003987                     IPR7            equ	14727	;# 
 17755   003988                     IPR8            equ	14728	;# 
 17756   003989                     IPR9            equ	14729	;# 
 17757   00398A                     IPR10           equ	14730	;# 
 17758   003990                     PIE0            equ	14736	;# 
 17759   003991                     PIE1            equ	14737	;# 
 17760   003992                     PIE2            equ	14738	;# 
 17761   003993                     PIE3            equ	14739	;# 
 17762   003994                     PIE4            equ	14740	;# 
 17763   003995                     PIE5            equ	14741	;# 
 17764   003996                     PIE6            equ	14742	;# 
 17765   003997                     PIE7            equ	14743	;# 
 17766   003998                     PIE8            equ	14744	;# 
 17767   003999                     PIE9            equ	14745	;# 
 17768   00399A                     PIE10           equ	14746	;# 
 17769   0039A0                     PIR0            equ	14752	;# 
 17770   0039A1                     PIR1            equ	14753	;# 
 17771   0039A2                     PIR2            equ	14754	;# 
 17772   0039A3                     PIR3            equ	14755	;# 
 17773   0039A4                     PIR4            equ	14756	;# 
 17774   0039A5                     PIR5            equ	14757	;# 
 17775   0039A6                     PIR6            equ	14758	;# 
 17776   0039A7                     PIR7            equ	14759	;# 
 17777   0039A8                     PIR8            equ	14760	;# 
 17778   0039A9                     PIR9            equ	14761	;# 
 17779   0039AA                     PIR10           equ	14762	;# 
 17780   0039C0                     PMD0            equ	14784	;# 
 17781   0039C1                     PMD1            equ	14785	;# 
 17782   0039C2                     PMD2            equ	14786	;# 
 17783   0039C3                     PMD3            equ	14787	;# 
 17784   0039C4                     PMD4            equ	14788	;# 
 17785   0039C5                     PMD5            equ	14789	;# 
 17786   0039C6                     PMD6            equ	14790	;# 
 17787   0039C7                     PMD7            equ	14791	;# 
 17788   0039D0                     BORCON          equ	14800	;# 
 17789   0039D1                     VREGCON         equ	14801	;# 
 17790   0039D8                     CPUDOZE         equ	14808	;# 
 17791   0039D9                     OSCCON1         equ	14809	;# 
 17792   0039DA                     OSCCON2         equ	14810	;# 
 17793   0039DB                     OSCCON3         equ	14811	;# 
 17794   0039DC                     OSCSTAT         equ	14812	;# 
 17795   0039DC                     OSCSTAT1        equ	14812	;# 
 17796   0039DD                     OSCEN           equ	14813	;# 
 17797   0039DE                     OSCTUNE         equ	14814	;# 
 17798   0039DF                     OSCFRQ          equ	14815	;# 
 17799   0039E0                     NVMADRL         equ	14816	;# 
 17800   0039E1                     NVMADRH         equ	14817	;# 
 17801   0039E3                     NVMDAT          equ	14819	;# 
 17802   0039E5                     NVMCON1         equ	14821	;# 
 17803   0039E6                     NVMCON2         equ	14822	;# 
 17804   0039EF                     PRLOCK          equ	14831	;# 
 17805   0039F1                     ISRPR           equ	14833	;# 
 17806   0039F2                     MAINPR          equ	14834	;# 
 17807   0039F3                     DMA1PR          equ	14835	;# 
 17808   0039F4                     DMA2PR          equ	14836	;# 
 17809   0039F7                     SCANPR          equ	14839	;# 
 17810   003A00                     RA0PPS          equ	14848	;# 
 17811   003A01                     RA1PPS          equ	14849	;# 
 17812   003A02                     RA2PPS          equ	14850	;# 
 17813   003A03                     RA3PPS          equ	14851	;# 
 17814   003A04                     RA4PPS          equ	14852	;# 
 17815   003A05                     RA5PPS          equ	14853	;# 
 17816   003A06                     RA6PPS          equ	14854	;# 
 17817   003A07                     RA7PPS          equ	14855	;# 
 17818   003A08                     RB0PPS          equ	14856	;# 
 17819   003A09                     RB1PPS          equ	14857	;# 
 17820   003A0A                     RB2PPS          equ	14858	;# 
 17821   003A0B                     RB3PPS          equ	14859	;# 
 17822   003A0C                     RB4PPS          equ	14860	;# 
 17823   003A0D                     RB5PPS          equ	14861	;# 
 17824   003A0E                     RB6PPS          equ	14862	;# 
 17825   003A0F                     RB7PPS          equ	14863	;# 
 17826   003A10                     RC0PPS          equ	14864	;# 
 17827   003A11                     RC1PPS          equ	14865	;# 
 17828   003A12                     RC2PPS          equ	14866	;# 
 17829   003A13                     RC3PPS          equ	14867	;# 
 17830   003A14                     RC4PPS          equ	14868	;# 
 17831   003A15                     RC5PPS          equ	14869	;# 
 17832   003A16                     RC6PPS          equ	14870	;# 
 17833   003A17                     RC7PPS          equ	14871	;# 
 17834   003A18                     RD0PPS          equ	14872	;# 
 17835   003A19                     RD1PPS          equ	14873	;# 
 17836   003A1A                     RD2PPS          equ	14874	;# 
 17837   003A1B                     RD3PPS          equ	14875	;# 
 17838   003A1C                     RD4PPS          equ	14876	;# 
 17839   003A1D                     RD5PPS          equ	14877	;# 
 17840   003A1E                     RD6PPS          equ	14878	;# 
 17841   003A1F                     RD7PPS          equ	14879	;# 
 17842   003A20                     RE0PPS          equ	14880	;# 
 17843   003A21                     RE1PPS          equ	14881	;# 
 17844   003A22                     RE2PPS          equ	14882	;# 
 17845   003A28                     RF0PPS          equ	14888	;# 
 17846   003A29                     RF1PPS          equ	14889	;# 
 17847   003A2A                     RF2PPS          equ	14890	;# 
 17848   003A2B                     RF3PPS          equ	14891	;# 
 17849   003A2C                     RF4PPS          equ	14892	;# 
 17850   003A2D                     RF5PPS          equ	14893	;# 
 17851   003A2E                     RF6PPS          equ	14894	;# 
 17852   003A2F                     RF7PPS          equ	14895	;# 
 17853   003A40                     ANSELA          equ	14912	;# 
 17854   003A41                     WPUA            equ	14913	;# 
 17855   003A42                     ODCONA          equ	14914	;# 
 17856   003A43                     SLRCONA         equ	14915	;# 
 17857   003A44                     INLVLA          equ	14916	;# 
 17858   003A45                     IOCAP           equ	14917	;# 
 17859   003A46                     IOCAN           equ	14918	;# 
 17860   003A47                     IOCAF           equ	14919	;# 
 17861   003A50                     ANSELB          equ	14928	;# 
 17862   003A51                     WPUB            equ	14929	;# 
 17863   003A52                     ODCONB          equ	14930	;# 
 17864   003A53                     SLRCONB         equ	14931	;# 
 17865   003A54                     INLVLB          equ	14932	;# 
 17866   003A55                     IOCBP           equ	14933	;# 
 17867   003A56                     IOCBN           equ	14934	;# 
 17868   003A57                     IOCBF           equ	14935	;# 
 17869   003A5A                     RB1I2C          equ	14938	;# 
 17870   003A5B                     RB2I2C          equ	14939	;# 
 17871   003A60                     ANSELC          equ	14944	;# 
 17872   003A61                     WPUC            equ	14945	;# 
 17873   003A62                     ODCONC          equ	14946	;# 
 17874   003A63                     SLRCONC         equ	14947	;# 
 17875   003A64                     INLVLC          equ	14948	;# 
 17876   003A65                     IOCCP           equ	14949	;# 
 17877   003A66                     IOCCN           equ	14950	;# 
 17878   003A67                     IOCCF           equ	14951	;# 
 17879   003A6A                     RC3I2C          equ	14954	;# 
 17880   003A6B                     RC4I2C          equ	14955	;# 
 17881   003A70                     ANSELD          equ	14960	;# 
 17882   003A71                     WPUD            equ	14961	;# 
 17883   003A72                     ODCOND          equ	14962	;# 
 17884   003A73                     SLRCOND         equ	14963	;# 
 17885   003A74                     INLVLD          equ	14964	;# 
 17886   003A7A                     RD0I2C          equ	14970	;# 
 17887   003A7B                     RD1I2C          equ	14971	;# 
 17888   003A80                     ANSELE          equ	14976	;# 
 17889   003A81                     WPUE            equ	14977	;# 
 17890   003A82                     ODCONE          equ	14978	;# 
 17891   003A83                     SLRCONE         equ	14979	;# 
 17892   003A84                     INLVLE          equ	14980	;# 
 17893   003A85                     IOCEP           equ	14981	;# 
 17894   003A86                     IOCEN           equ	14982	;# 
 17895   003A87                     IOCEF           equ	14983	;# 
 17896   003A90                     ANSELF          equ	14992	;# 
 17897   003A91                     WPUF            equ	14993	;# 
 17898   003A92                     ODCONF          equ	14994	;# 
 17899   003A93                     SLRCONF         equ	14995	;# 
 17900   003A94                     INLVLF          equ	14996	;# 
 17901   003ABF                     PPSLOCK         equ	15039	;# 
 17902   003AC0                     INT0PPS         equ	15040	;# 
 17903   003AC1                     INT1PPS         equ	15041	;# 
 17904   003AC2                     INT2PPS         equ	15042	;# 
 17905   003AC3                     T0CKIPPS        equ	15043	;# 
 17906   003AC4                     T1CKIPPS        equ	15044	;# 
 17907   003AC5                     T1GPPS          equ	15045	;# 
 17908   003AC6                     T3CKIPPS        equ	15046	;# 
 17909   003AC7                     T3GPPS          equ	15047	;# 
 17910   003AC8                     T5CKIPPS        equ	15048	;# 
 17911   003AC9                     T5GPPS          equ	15049	;# 
 17912   003ACA                     T2INPPS         equ	15050	;# 
 17913   003ACB                     T4INPPS         equ	15051	;# 
 17914   003ACC                     T6INPPS         equ	15052	;# 
 17915   003ACD                     CCP1PPS         equ	15053	;# 
 17916   003ACE                     CCP2PPS         equ	15054	;# 
 17917   003ACF                     CCP3PPS         equ	15055	;# 
 17918   003AD0                     CCP4PPS         equ	15056	;# 
 17919   003AD1                     SMT1WINPPS      equ	15057	;# 
 17920   003AD2                     SMT1SIGPPS      equ	15058	;# 
 17921   003AD3                     CWG1INPPS       equ	15059	;# 
 17922   003AD4                     CWG2INPPS       equ	15060	;# 
 17923   003AD5                     CWG3INPPS       equ	15061	;# 
 17924   003AD6                     MD1CARLPPS      equ	15062	;# 
 17925   003AD7                     MD1CARHPPS      equ	15063	;# 
 17926   003AD8                     MD1SRCPPS       equ	15064	;# 
 17927   003AD9                     CLCIN0PPS       equ	15065	;# 
 17928   003ADA                     CLCIN1PPS       equ	15066	;# 
 17929   003ADB                     CLCIN2PPS       equ	15067	;# 
 17930   003ADC                     CLCIN3PPS       equ	15068	;# 
 17931   003ADD                     ADACTPPS        equ	15069	;# 
 17932   003ADE                     SPI1SCKPPS      equ	15070	;# 
 17933   003ADF                     SPI1SDIPPS      equ	15071	;# 
 17934   003AE0                     SPI1SSPPS       equ	15072	;# 
 17935   003AE1                     I2C1SCLPPS      equ	15073	;# 
 17936   003AE2                     I2C1SDAPPS      equ	15074	;# 
 17937   003AE3                     I2C2SCLPPS      equ	15075	;# 
 17938   003AE4                     I2C2SDAPPS      equ	15076	;# 
 17939   003AE5                     U1RXPPS         equ	15077	;# 
 17940   003AE6                     U1CTSPPS        equ	15078	;# 
 17941   003AE8                     U2RXPPS         equ	15080	;# 
 17942   003AE9                     U2CTSPPS        equ	15081	;# 
 17943   003BC9                     DMA2BUF         equ	15305	;# 
 17944   003BCA                     DMA2DCNT        equ	15306	;# 
 17945   003BCA                     DMA2DCNTL       equ	15306	;# 
 17946   003BCB                     DMA2DCNTH       equ	15307	;# 
 17947   003BCC                     DMA2DPTR        equ	15308	;# 
 17948   003BCC                     DMA2DPTRL       equ	15308	;# 
 17949   003BCD                     DMA2DPTRH       equ	15309	;# 
 17950   003BCE                     DMA2DSZ         equ	15310	;# 
 17951   003BCE                     DMA2DSZL        equ	15310	;# 
 17952   003BCF                     DMA2DSZH        equ	15311	;# 
 17953   003BD0                     DMA2DSA         equ	15312	;# 
 17954   003BD0                     DMA2DSAL        equ	15312	;# 
 17955   003BD1                     DMA2DSAH        equ	15313	;# 
 17956   003BD2                     DMA2SCNT        equ	15314	;# 
 17957   003BD2                     DMA2SCNTL       equ	15314	;# 
 17958   003BD3                     DMA2SCNTH       equ	15315	;# 
 17959   003BD4                     DMA2SPTR        equ	15316	;# 
 17960   003BD4                     DMA2SPTRL       equ	15316	;# 
 17961   003BD5                     DMA2SPTRH       equ	15317	;# 
 17962   003BD6                     DMA2SPTRU       equ	15318	;# 
 17963   003BD7                     DMA2SSZ         equ	15319	;# 
 17964   003BD7                     DMA2SSZL        equ	15319	;# 
 17965   003BD8                     DMA2SSZH        equ	15320	;# 
 17966   003BD9                     DMA2SSA         equ	15321	;# 
 17967   003BD9                     DMA2SSAL        equ	15321	;# 
 17968   003BDA                     DMA2SSAH        equ	15322	;# 
 17969   003BDB                     DMA2SSAU        equ	15323	;# 
 17970   003BDC                     DMA2CON0        equ	15324	;# 
 17971   003BDD                     DMA2CON1        equ	15325	;# 
 17972   003BDE                     DMA2AIRQ        equ	15326	;# 
 17973   003BDF                     DMA2SIRQ        equ	15327	;# 
 17974   003BE9                     DMA1BUF         equ	15337	;# 
 17975   003BEA                     DMA1DCNT        equ	15338	;# 
 17976   003BEA                     DMA1DCNTL       equ	15338	;# 
 17977   003BEB                     DMA1DCNTH       equ	15339	;# 
 17978   003BEC                     DMA1DPTR        equ	15340	;# 
 17979   003BEC                     DMA1DPTRL       equ	15340	;# 
 17980   003BED                     DMA1DPTRH       equ	15341	;# 
 17981   003BEE                     DMA1DSZ         equ	15342	;# 
 17982   003BEE                     DMA1DSZL        equ	15342	;# 
 17983   003BEF                     DMA1DSZH        equ	15343	;# 
 17984   003BF0                     DMA1DSA         equ	15344	;# 
 17985   003BF0                     DMA1DSAL        equ	15344	;# 
 17986   003BF1                     DMA1DSAH        equ	15345	;# 
 17987   003BF2                     DMA1SCNT        equ	15346	;# 
 17988   003BF2                     DMA1SCNTL       equ	15346	;# 
 17989   003BF3                     DMA1SCNTH       equ	15347	;# 
 17990   003BF4                     DMA1SPTR        equ	15348	;# 
 17991   003BF4                     DMA1SPTRL       equ	15348	;# 
 17992   003BF5                     DMA1SPTRH       equ	15349	;# 
 17993   003BF6                     DMA1SPTRU       equ	15350	;# 
 17994   003BF7                     DMA1SSZ         equ	15351	;# 
 17995   003BF7                     DMA1SSZL        equ	15351	;# 
 17996   003BF8                     DMA1SSZH        equ	15352	;# 
 17997   003BF9                     DMA1SSA         equ	15353	;# 
 17998   003BF9                     DMA1SSAL        equ	15353	;# 
 17999   003BFA                     DMA1SSAH        equ	15354	;# 
 18000   003BFB                     DMA1SSAU        equ	15355	;# 
 18001   003BFC                     DMA1CON0        equ	15356	;# 
 18002   003BFD                     DMA1CON1        equ	15357	;# 
 18003   003BFE                     DMA1AIRQ        equ	15358	;# 
 18004   003BFF                     DMA1SIRQ        equ	15359	;# 
 18005   003C56                     CLC4CON         equ	15446	;# 
 18006   003C57                     CLC4POL         equ	15447	;# 
 18007   003C58                     CLC4SEL0        equ	15448	;# 
 18008   003C59                     CLC4SEL1        equ	15449	;# 
 18009   003C5A                     CLC4SEL2        equ	15450	;# 
 18010   003C5B                     CLC4SEL3        equ	15451	;# 
 18011   003C5C                     CLC4GLS0        equ	15452	;# 
 18012   003C5D                     CLC4GLS1        equ	15453	;# 
 18013   003C5E                     CLC4GLS2        equ	15454	;# 
 18014   003C5F                     CLC4GLS3        equ	15455	;# 
 18015   003C60                     CLC3CON         equ	15456	;# 
 18016   003C61                     CLC3POL         equ	15457	;# 
 18017   003C62                     CLC3SEL0        equ	15458	;# 
 18018   003C63                     CLC3SEL1        equ	15459	;# 
 18019   003C64                     CLC3SEL2        equ	15460	;# 
 18020   003C65                     CLC3SEL3        equ	15461	;# 
 18021   003C66                     CLC3GLS0        equ	15462	;# 
 18022   003C67                     CLC3GLS1        equ	15463	;# 
 18023   003C68                     CLC3GLS2        equ	15464	;# 
 18024   003C69                     CLC3GLS3        equ	15465	;# 
 18025   003C6A                     CLC2CON         equ	15466	;# 
 18026   003C6B                     CLC2POL         equ	15467	;# 
 18027   003C6C                     CLC2SEL0        equ	15468	;# 
 18028   003C6D                     CLC2SEL1        equ	15469	;# 
 18029   003C6E                     CLC2SEL2        equ	15470	;# 
 18030   003C6F                     CLC2SEL3        equ	15471	;# 
 18031   003C70                     CLC2GLS0        equ	15472	;# 
 18032   003C71                     CLC2GLS1        equ	15473	;# 
 18033   003C72                     CLC2GLS2        equ	15474	;# 
 18034   003C73                     CLC2GLS3        equ	15475	;# 
 18035   003C74                     CLC1CON         equ	15476	;# 
 18036   003C75                     CLC1POL         equ	15477	;# 
 18037   003C76                     CLC1SEL0        equ	15478	;# 
 18038   003C77                     CLC1SEL1        equ	15479	;# 
 18039   003C78                     CLC1SEL2        equ	15480	;# 
 18040   003C79                     CLC1SEL3        equ	15481	;# 
 18041   003C7A                     CLC1GLS0        equ	15482	;# 
 18042   003C7B                     CLC1GLS1        equ	15483	;# 
 18043   003C7C                     CLC1GLS2        equ	15484	;# 
 18044   003C7D                     CLC1GLS3        equ	15485	;# 
 18045   003C7E                     CLCDATA0        equ	15486	;# 
 18046   003CE5                     CLKRCON         equ	15589	;# 
 18047   003CE6                     CLKRCLK         equ	15590	;# 
 18048   003CFA                     MD1CON0         equ	15610	;# 
 18049   003CFB                     MD1CON1         equ	15611	;# 
 18050   003CFC                     MD1SRC          equ	15612	;# 
 18051   003CFD                     MD1CARL         equ	15613	;# 
 18052   003CFE                     MD1CARH         equ	15614	;# 
 18053   003D10                     SPI1RXB         equ	15632	;# 
 18054   003D11                     SPI1TXB         equ	15633	;# 
 18055   003D12                     SPI1TCNT        equ	15634	;# 
 18056   003D12                     SPI1TCNTL       equ	15634	;# 
 18057   003D13                     SPI1TCNTH       equ	15635	;# 
 18058   003D14                     SPI1CON0        equ	15636	;# 
 18059   003D15                     SPI1CON1        equ	15637	;# 
 18060   003D16                     SPI1CON2        equ	15638	;# 
 18061   003D17                     SPI1STATUS      equ	15639	;# 
 18062   003D18                     SPI1TWIDTH      equ	15640	;# 
 18063   003D19                     SPI1BAUD        equ	15641	;# 
 18064   003D1A                     SPI1INTF        equ	15642	;# 
 18065   003D1B                     SPI1INTE        equ	15643	;# 
 18066   003D1C                     SPI1CLK         equ	15644	;# 
 18067   003D54                     I2C2RXB         equ	15700	;# 
 18068   003D55                     I2C2TXB         equ	15701	;# 
 18069   003D56                     I2C2CNT         equ	15702	;# 
 18070   003D57                     I2C2ADB0        equ	15703	;# 
 18071   003D58                     I2C2ADB1        equ	15704	;# 
 18072   003D59                     I2C2ADR0        equ	15705	;# 
 18073   003D5A                     I2C2ADR1        equ	15706	;# 
 18074   003D5B                     I2C2ADR2        equ	15707	;# 
 18075   003D5C                     I2C2ADR3        equ	15708	;# 
 18076   003D5D                     I2C2CON0        equ	15709	;# 
 18077   003D5E                     I2C2CON1        equ	15710	;# 
 18078   003D5F                     I2C2CON2        equ	15711	;# 
 18079   003D60                     I2C2ERR         equ	15712	;# 
 18080   003D61                     I2C2STAT0       equ	15713	;# 
 18081   003D62                     I2C2STAT1       equ	15714	;# 
 18082   003D63                     I2C2PIR         equ	15715	;# 
 18083   003D64                     I2C2PIE         equ	15716	;# 
 18084   003D65                     I2C2CLK         equ	15717	;# 
 18085   003D66                     I2C2BTO         equ	15718	;# 
 18086   003D6A                     I2C1RXB         equ	15722	;# 
 18087   003D6B                     I2C1TXB         equ	15723	;# 
 18088   003D6C                     I2C1CNT         equ	15724	;# 
 18089   003D6D                     I2C1ADB0        equ	15725	;# 
 18090   003D6E                     I2C1ADB1        equ	15726	;# 
 18091   003D6F                     I2C1ADR0        equ	15727	;# 
 18092   003D70                     I2C1ADR1        equ	15728	;# 
 18093   003D71                     I2C1ADR2        equ	15729	;# 
 18094   003D72                     I2C1ADR3        equ	15730	;# 
 18095   003D73                     I2C1CON0        equ	15731	;# 
 18096   003D74                     I2C1CON1        equ	15732	;# 
 18097   003D75                     I2C1CON2        equ	15733	;# 
 18098   003D76                     I2C1ERR         equ	15734	;# 
 18099   003D77                     I2C1STAT0       equ	15735	;# 
 18100   003D78                     I2C1STAT1       equ	15736	;# 
 18101   003D79                     I2C1PIR         equ	15737	;# 
 18102   003D7A                     I2C1PIE         equ	15738	;# 
 18103   003D7B                     I2C1CLK         equ	15739	;# 
 18104   003D7C                     I2C1BTO         equ	15740	;# 
 18105   003DD0                     U2RXB           equ	15824	;# 
 18106   003DD0                     U2RXBL          equ	15824	;# 
 18107   003DD2                     U2TXB           equ	15826	;# 
 18108   003DD2                     U2TXBL          equ	15826	;# 
 18109   003DD4                     U2P1            equ	15828	;# 
 18110   003DD4                     U2P1L           equ	15828	;# 
 18111   003DD6                     U2P2            equ	15830	;# 
 18112   003DD6                     U2P2L           equ	15830	;# 
 18113   003DD8                     U2P3            equ	15832	;# 
 18114   003DD8                     U2P3L           equ	15832	;# 
 18115   003DDA                     U2CON0          equ	15834	;# 
 18116   003DDB                     U2CON1          equ	15835	;# 
 18117   003DDC                     U2CON2          equ	15836	;# 
 18118   003DDD                     U2BRG           equ	15837	;# 
 18119   003DDD                     U2BRGL          equ	15837	;# 
 18120   003DDE                     U2BRGH          equ	15838	;# 
 18121   003DDF                     U2FIFO          equ	15839	;# 
 18122   003DE0                     U2UIR           equ	15840	;# 
 18123   003DE1                     U2ERRIR         equ	15841	;# 
 18124   003DE2                     U2ERRIE         equ	15842	;# 
 18125   003DE8                     U1RXB           equ	15848	;# 
 18126   003DE8                     U1RXBL          equ	15848	;# 
 18127   003DE9                     U1RXCHK         equ	15849	;# 
 18128   003DEA                     U1TXB           equ	15850	;# 
 18129   003DEA                     U1TXBL          equ	15850	;# 
 18130   003DEB                     U1TXCHK         equ	15851	;# 
 18131   003DEC                     U1P1            equ	15852	;# 
 18132   003DEC                     U1P1L           equ	15852	;# 
 18133   003DED                     U1P1H           equ	15853	;# 
 18134   003DEE                     U1P2            equ	15854	;# 
 18135   003DEE                     U1P2L           equ	15854	;# 
 18136   003DEF                     U1P2H           equ	15855	;# 
 18137   003DF0                     U1P3            equ	15856	;# 
 18138   003DF0                     U1P3L           equ	15856	;# 
 18139   003DF1                     U1P3H           equ	15857	;# 
 18140   003DF2                     U1CON0          equ	15858	;# 
 18141   003DF3                     U1CON1          equ	15859	;# 
 18142   003DF4                     U1CON2          equ	15860	;# 
 18143   003DF5                     U1BRG           equ	15861	;# 
 18144   003DF5                     U1BRGL          equ	15861	;# 
 18145   003DF6                     U1BRGH          equ	15862	;# 
 18146   003DF7                     U1FIFO          equ	15863	;# 
 18147   003DF8                     U1UIR           equ	15864	;# 
 18148   003DF9                     U1ERRIR         equ	15865	;# 
 18149   003DFA                     U1ERRIE         equ	15866	;# 
 18150   003E9C                     DAC1CON1        equ	16028	;# 
 18151   003E9E                     DAC1CON0        equ	16030	;# 
 18152   003EB8                     CM2CON0         equ	16056	;# 
 18153   003EB9                     CM2CON1         equ	16057	;# 
 18154   003EBA                     CM2NCH          equ	16058	;# 
 18155   003EBB                     CM2PCH          equ	16059	;# 
 18156   003EBC                     CM1CON0         equ	16060	;# 
 18157   003EBD                     CM1CON1         equ	16061	;# 
 18158   003EBE                     CM1NCH          equ	16062	;# 
 18159   003EBF                     CM1PCH          equ	16063	;# 
 18160   003EC0                     CMOUT           equ	16064	;# 
 18161   003EC1                     FVRCON          equ	16065	;# 
 18162   003EC3                     ZCDCON          equ	16067	;# 
 18163   003EC9                     HLVDCON0        equ	16073	;# 
 18164   003ECA                     HLVDCON1        equ	16074	;# 
 18165   003ED7                     ADCP            equ	16087	;# 
 18166   003EDE                     ADLTH           equ	16094	;# 
 18167   003EDE                     ADLTHL          equ	16094	;# 
 18168   003EDF                     ADLTHH          equ	16095	;# 
 18169   003EE0                     ADUTH           equ	16096	;# 
 18170   003EE0                     ADUTHL          equ	16096	;# 
 18171   003EE1                     ADUTHH          equ	16097	;# 
 18172   003EE2                     ADERR           equ	16098	;# 
 18173   003EE2                     ADERRL          equ	16098	;# 
 18174   003EE3                     ADERRH          equ	16099	;# 
 18175   003EE4                     ADSTPT          equ	16100	;# 
 18176   003EE4                     ADSTPTL         equ	16100	;# 
 18177   003EE5                     ADSTPTH         equ	16101	;# 
 18178   003EE6                     ADFLTR          equ	16102	;# 
 18179   003EE6                     ADFLTRL         equ	16102	;# 
 18180   003EE7                     ADFLTRH         equ	16103	;# 
 18181   003EE8                     ADACC           equ	16104	;# 
 18182   003EE8                     ADACCL          equ	16104	;# 
 18183   003EE9                     ADACCH          equ	16105	;# 
 18184   003EEA                     ADACCU          equ	16106	;# 
 18185   003EEB                     ADCNT           equ	16107	;# 
 18186   003EEC                     ADRPT           equ	16108	;# 
 18187   003EED                     ADPREV          equ	16109	;# 
 18188   003EED                     ADPREVL         equ	16109	;# 
 18189   003EEE                     ADPREVH         equ	16110	;# 
 18190   003EEF                     ADRES           equ	16111	;# 
 18191   003EEF                     ADRESL          equ	16111	;# 
 18192   003EF0                     ADRESH          equ	16112	;# 
 18193   003EF1                     ADPCH           equ	16113	;# 
 18194   003EF3                     ADACQ           equ	16115	;# 
 18195   003EF3                     ADACQL          equ	16115	;# 
 18196   003EF4                     ADACQH          equ	16116	;# 
 18197   003EF5                     ADCAP           equ	16117	;# 
 18198   003EF6                     ADPRE           equ	16118	;# 
 18199   003EF6                     ADPREL          equ	16118	;# 
 18200   003EF7                     ADPREH          equ	16119	;# 
 18201   003EF8                     ADCON0          equ	16120	;# 
 18202   003EF9                     ADCON1          equ	16121	;# 
 18203   003EFA                     ADCON2          equ	16122	;# 
 18204   003EFB                     ADCON3          equ	16123	;# 
 18205   003EFC                     ADSTAT          equ	16124	;# 
 18206   003EFD                     ADREF           equ	16125	;# 
 18207   003EFE                     ADACT           equ	16126	;# 
 18208   003EFF                     ADCLK           equ	16127	;# 
 18209   003F12                     SMT1TMR         equ	16146	;# 
 18210   003F12                     SMT1TMRL        equ	16146	;# 
 18211   003F13                     SMT1TMRH        equ	16147	;# 
 18212   003F14                     SMT1TMRU        equ	16148	;# 
 18213   003F15                     SMT1CPR         equ	16149	;# 
 18214   003F15                     SMT1CPRL        equ	16149	;# 
 18215   003F16                     SMT1CPRH        equ	16150	;# 
 18216   003F17                     SMT1CPRU        equ	16151	;# 
 18217   003F18                     SMT1CPW         equ	16152	;# 
 18218   003F18                     SMT1CPWL        equ	16152	;# 
 18219   003F19                     SMT1CPWH        equ	16153	;# 
 18220   003F1A                     SMT1CPWU        equ	16154	;# 
 18221   003F1B                     SMT1PR          equ	16155	;# 
 18222   003F1B                     SMT1PRL         equ	16155	;# 
 18223   003F1C                     SMT1PRH         equ	16156	;# 
 18224   003F1D                     SMT1PRU         equ	16157	;# 
 18225   003F1E                     SMT1CON0        equ	16158	;# 
 18226   003F1F                     SMT1CON1        equ	16159	;# 
 18227   003F20                     SMT1STAT        equ	16160	;# 
 18228   003F21                     SMT1CLK         equ	16161	;# 
 18229   003F22                     SMT1SIG         equ	16162	;# 
 18230   003F23                     SMT1WIN         equ	16163	;# 
 18231   003F38                     NCO1ACC         equ	16184	;# 
 18232   003F38                     NCO1ACCL        equ	16184	;# 
 18233   003F39                     NCO1ACCH        equ	16185	;# 
 18234   003F3A                     NCO1ACCU        equ	16186	;# 
 18235   003F3B                     NCO1INC         equ	16187	;# 
 18236   003F3B                     NCO1INCL        equ	16187	;# 
 18237   003F3C                     NCO1INCH        equ	16188	;# 
 18238   003F3D                     NCO1INCU        equ	16189	;# 
 18239   003F3E                     NCO1CON         equ	16190	;# 
 18240   003F3F                     NCO1CLK         equ	16191	;# 
 18241   003F40                     CWG3CLK         equ	16192	;# 
 18242   003F40                     CWG3CLKCON      equ	16192	;# 
 18243   003F41                     CWG3ISM         equ	16193	;# 
 18244   003F41                     CWG3DAT         equ	16193	;# 
 18245   003F42                     CWG3DBR         equ	16194	;# 
 18246   003F43                     CWG3DBF         equ	16195	;# 
 18247   003F44                     CWG3CON0        equ	16196	;# 
 18248   003F45                     CWG3CON1        equ	16197	;# 
 18249   003F46                     CWG3AS0         equ	16198	;# 
 18250   003F47                     CWG3AS1         equ	16199	;# 
 18251   003F48                     CWG3STR         equ	16200	;# 
 18252   003F49                     CWG2CLK         equ	16201	;# 
 18253   003F49                     CWG2CLKCON      equ	16201	;# 
 18254   003F4A                     CWG2ISM         equ	16202	;# 
 18255   003F4A                     CWG2DAT         equ	16202	;# 
 18256   003F4B                     CWG2DBR         equ	16203	;# 
 18257   003F4C                     CWG2DBF         equ	16204	;# 
 18258   003F4D                     CWG2CON0        equ	16205	;# 
 18259   003F4E                     CWG2CON1        equ	16206	;# 
 18260   003F4F                     CWG2AS0         equ	16207	;# 
 18261   003F50                     CWG2AS1         equ	16208	;# 
 18262   003F51                     CWG2STR         equ	16209	;# 
 18263   003F52                     CWG1CLK         equ	16210	;# 
 18264   003F52                     CWG1CLKCON      equ	16210	;# 
 18265   003F53                     CWG1ISM         equ	16211	;# 
 18266   003F53                     CWG1DAT         equ	16211	;# 
 18267   003F54                     CWG1DBR         equ	16212	;# 
 18268   003F55                     CWG1DBF         equ	16213	;# 
 18269   003F56                     CWG1CON0        equ	16214	;# 
 18270   003F57                     CWG1CON1        equ	16215	;# 
 18271   003F58                     CWG1AS0         equ	16216	;# 
 18272   003F59                     CWG1AS1         equ	16217	;# 
 18273   003F5A                     CWG1STR         equ	16218	;# 
 18274   003F5E                     CCPTMRS0        equ	16222	;# 
 18275   003F5F                     CCPTMRS1        equ	16223	;# 
 18276   003F60                     PWM8DC          equ	16224	;# 
 18277   003F60                     PWM8DCL         equ	16224	;# 
 18278   003F61                     PWM8DCH         equ	16225	;# 
 18279   003F62                     PWM8CON         equ	16226	;# 
 18280   003F64                     PWM7DC          equ	16228	;# 
 18281   003F64                     PWM7DCL         equ	16228	;# 
 18282   003F65                     PWM7DCH         equ	16229	;# 
 18283   003F66                     PWM7CON         equ	16230	;# 
 18284   003F68                     PWM6DC          equ	16232	;# 
 18285   003F68                     PWM6DCL         equ	16232	;# 
 18286   003F69                     PWM6DCH         equ	16233	;# 
 18287   003F6A                     PWM6CON         equ	16234	;# 
 18288   003F6C                     PWM5DC          equ	16236	;# 
 18289   003F6C                     PWM5DCL         equ	16236	;# 
 18290   003F6D                     PWM5DCH         equ	16237	;# 
 18291   003F6E                     PWM5CON         equ	16238	;# 
 18292   003F70                     CCPR4           equ	16240	;# 
 18293   003F70                     CCPR4L          equ	16240	;# 
 18294   003F71                     CCPR4H          equ	16241	;# 
 18295   003F72                     CCP4CON         equ	16242	;# 
 18296   003F73                     CCP4CAP         equ	16243	;# 
 18297   003F74                     CCPR3           equ	16244	;# 
 18298   003F74                     CCPR3L          equ	16244	;# 
 18299   003F75                     CCPR3H          equ	16245	;# 
 18300   003F76                     CCP3CON         equ	16246	;# 
 18301   003F77                     CCP3CAP         equ	16247	;# 
 18302   003F78                     CCPR2           equ	16248	;# 
 18303   003F78                     CCPR2L          equ	16248	;# 
 18304   003F79                     CCPR2H          equ	16249	;# 
 18305   003F7A                     CCP2CON         equ	16250	;# 
 18306   003F7B                     CCP2CAP         equ	16251	;# 
 18307   003F7C                     CCPR1           equ	16252	;# 
 18308   003F7C                     CCPR1L          equ	16252	;# 
 18309   003F7D                     CCPR1H          equ	16253	;# 
 18310   003F7E                     CCP1CON         equ	16254	;# 
 18311   003F7F                     CCP1CAP         equ	16255	;# 
 18312   003F92                     T6TMR           equ	16274	;# 
 18313   003F92                     TMR6            equ	16274	;# 
 18314   003F93                     T6PR            equ	16275	;# 
 18315   003F93                     PR6             equ	16275	;# 
 18316   003F94                     T6CON           equ	16276	;# 
 18317   003F95                     T6HLT           equ	16277	;# 
 18318   003F96                     T6CLKCON        equ	16278	;# 
 18319   003F96                     T6CLK           equ	16278	;# 
 18320   003F97                     T6RST           equ	16279	;# 
 18321   003F98                     TMR5            equ	16280	;# 
 18322   003F98                     TMR5L           equ	16280	;# 
 18323   003F99                     TMR5H           equ	16281	;# 
 18324   003F9A                     T5CON           equ	16282	;# 
 18325   003F9A                     TMR5CON         equ	16282	;# 
 18326   003F9B                     T5GCON          equ	16283	;# 
 18327   003F9B                     TMR5GCON        equ	16283	;# 
 18328   003F9C                     T5GATE          equ	16284	;# 
 18329   003F9C                     TMR5GATE        equ	16284	;# 
 18330   003F9D                     T5CLK           equ	16285	;# 
 18331   003F9D                     TMR5CLK         equ	16285	;# 
 18332   003F9D                     PR5             equ	16285	;# 
 18333   003F9E                     T4TMR           equ	16286	;# 
 18334   003F9E                     TMR4            equ	16286	;# 
 18335   003F9F                     T4PR            equ	16287	;# 
 18336   003F9F                     PR4             equ	16287	;# 
 18337   003FA0                     T4CON           equ	16288	;# 
 18338   003FA1                     T4HLT           equ	16289	;# 
 18339   003FA2                     T4CLKCON        equ	16290	;# 
 18340   003FA2                     T4CLK           equ	16290	;# 
 18341   003FA3                     T4RST           equ	16291	;# 
 18342   003FA4                     TMR3            equ	16292	;# 
 18343   003FA4                     TMR3L           equ	16292	;# 
 18344   003FA5                     TMR3H           equ	16293	;# 
 18345   003FA6                     T3CON           equ	16294	;# 
 18346   003FA6                     TMR3CON         equ	16294	;# 
 18347   003FA7                     T3GCON          equ	16295	;# 
 18348   003FA7                     TMR3GCON        equ	16295	;# 
 18349   003FA8                     T3GATE          equ	16296	;# 
 18350   003FA8                     TMR3GATE        equ	16296	;# 
 18351   003FA9                     T3CLK           equ	16297	;# 
 18352   003FA9                     TMR3CLK         equ	16297	;# 
 18353   003FA9                     PR3             equ	16297	;# 
 18354   003FAA                     T2TMR           equ	16298	;# 
 18355   003FAA                     TMR2            equ	16298	;# 
 18356   003FAB                     T2PR            equ	16299	;# 
 18357   003FAB                     PR2             equ	16299	;# 
 18358   003FAC                     T2CON           equ	16300	;# 
 18359   003FAD                     T2HLT           equ	16301	;# 
 18360   003FAE                     T2CLKCON        equ	16302	;# 
 18361   003FAE                     T2CLK           equ	16302	;# 
 18362   003FAF                     T2RST           equ	16303	;# 
 18363   003FB0                     TMR1            equ	16304	;# 
 18364   003FB0                     TMR1L           equ	16304	;# 
 18365   003FB1                     TMR1H           equ	16305	;# 
 18366   003FB2                     T1CON           equ	16306	;# 
 18367   003FB2                     TMR1CON         equ	16306	;# 
 18368   003FB3                     T1GCON          equ	16307	;# 
 18369   003FB3                     TMR1GCON        equ	16307	;# 
 18370   003FB4                     T1GATE          equ	16308	;# 
 18371   003FB4                     TMR1GATE        equ	16308	;# 
 18372   003FB5                     T1CLK           equ	16309	;# 
 18373   003FB5                     TMR1CLK         equ	16309	;# 
 18374   003FB5                     PR1             equ	16309	;# 
 18375   003FB6                     TMR0L           equ	16310	;# 
 18376   003FB6                     TMR0            equ	16310	;# 
 18377   003FB7                     TMR0H           equ	16311	;# 
 18378   003FB7                     PR0             equ	16311	;# 
 18379   003FB8                     T0CON0          equ	16312	;# 
 18380   003FB9                     T0CON1          equ	16313	;# 
 18381   003FBA                     LATA            equ	16314	;# 
 18382   003FBB                     LATB            equ	16315	;# 
 18383   003FBC                     LATC            equ	16316	;# 
 18384   003FBD                     LATD            equ	16317	;# 
 18385   003FBE                     LATE            equ	16318	;# 
 18386   003FBF                     LATF            equ	16319	;# 
 18387   003FC2                     TRISA           equ	16322	;# 
 18388   003FC3                     TRISB           equ	16323	;# 
 18389   003FC4                     TRISC           equ	16324	;# 
 18390   003FC5                     TRISD           equ	16325	;# 
 18391   003FC6                     TRISE           equ	16326	;# 
 18392   003FC7                     TRISF           equ	16327	;# 
 18393   003FCA                     PORTA           equ	16330	;# 
 18394   003FCB                     PORTB           equ	16331	;# 
 18395   003FCC                     PORTC           equ	16332	;# 
 18396   003FCD                     PORTD           equ	16333	;# 
 18397   003FCE                     PORTE           equ	16334	;# 
 18398   003FCF                     PORTF           equ	16335	;# 
 18399   003FD2                     INTCON0         equ	16338	;# 
 18400   003FD3                     INTCON1         equ	16339	;# 
 18401   003FD4                     IVTLOCK         equ	16340	;# 
 18402   003FD5                     IVTBASE         equ	16341	;# 
 18403   003FD5                     IVTBASEL        equ	16341	;# 
 18404   003FD6                     IVTBASEH        equ	16342	;# 
 18405   003FD7                     IVTBASEU        equ	16343	;# 
 18406   003FD8                     STATUS          equ	16344	;# 
 18407   003FD9                     FSR2            equ	16345	;# 
 18408   003FD9                     FSR2L           equ	16345	;# 
 18409   003FDA                     FSR2H           equ	16346	;# 
 18410   003FDB                     PLUSW2          equ	16347	;# 
 18411   003FDC                     PREINC2         equ	16348	;# 
 18412   003FDD                     POSTDEC2        equ	16349	;# 
 18413   003FDE                     POSTINC2        equ	16350	;# 
 18414   003FDF                     INDF2           equ	16351	;# 
 18415   003FE0                     BSR             equ	16352	;# 
 18416   003FE1                     FSR1            equ	16353	;# 
 18417   003FE1                     FSR1L           equ	16353	;# 
 18418   003FE2                     FSR1H           equ	16354	;# 
 18419   003FE3                     PLUSW1          equ	16355	;# 
 18420   003FE4                     PREINC1         equ	16356	;# 
 18421   003FE5                     POSTDEC1        equ	16357	;# 
 18422   003FE6                     POSTINC1        equ	16358	;# 
 18423   003FE7                     INDF1           equ	16359	;# 
 18424   003FE8                     WREG            equ	16360	;# 
 18425   003FE9                     FSR0            equ	16361	;# 
 18426   003FE9                     FSR0L           equ	16361	;# 
 18427   003FEA                     FSR0H           equ	16362	;# 
 18428   003FEB                     PLUSW0          equ	16363	;# 
 18429   003FEC                     PREINC0         equ	16364	;# 
 18430   003FED                     POSTDEC0        equ	16365	;# 
 18431   003FEE                     POSTINC0        equ	16366	;# 
 18432   003FEF                     INDF0           equ	16367	;# 
 18433   003FF0                     PCON0           equ	16368	;# 
 18434   003FF1                     PCON1           equ	16369	;# 
 18435   003FF3                     PROD            equ	16371	;# 
 18436   003FF3                     PRODL           equ	16371	;# 
 18437   003FF4                     PRODH           equ	16372	;# 
 18438   003FF5                     TABLAT          equ	16373	;# 
 18439   003FF6                     TBLPTR          equ	16374	;# 
 18440   003FF6                     TBLPTRL         equ	16374	;# 
 18441   003FF7                     TBLPTRH         equ	16375	;# 
 18442   003FF8                     TBLPTRU         equ	16376	;# 
 18443   003FF9                     PCLAT           equ	16377	;# 
 18444   003FF9                     PCL             equ	16377	;# 
 18445   003FFA                     PCLATH          equ	16378	;# 
 18446   003FFB                     PCLATU          equ	16379	;# 
 18447   003FFC                     STKPTR          equ	16380	;# 
 18448   003FFD                     TOS             equ	16381	;# 
 18449   003FFD                     TOSL            equ	16381	;# 
 18450   003FFE                     TOSH            equ	16382	;# 
 18451   003FFF                     TOSU            equ	16383	;# 
 18452   003880                     STATUS_CSHAD    equ	14464	;# 
 18453   003881                     WREG_CSHAD      equ	14465	;# 
 18454   003882                     BSR_CSHAD       equ	14466	;# 
 18455   003883                     SHADCON         equ	14467	;# 
 18456   003884                     STATUS_SHAD     equ	14468	;# 
 18457   003885                     WREG_SHAD       equ	14469	;# 
 18458   003886                     BSR_SHAD        equ	14470	;# 
 18459   003887                     PCLATH_SHAD     equ	14471	;# 
 18460   003888                     PCLATU_SHAD     equ	14472	;# 
 18461   003889                     FSR0SH          equ	14473	;# 
 18462   003889                     FSR0L_SHAD      equ	14473	;# 
 18463   00388A                     FSR0H_SHAD      equ	14474	;# 
 18464   00388B                     FSR1SH          equ	14475	;# 
 18465   00388B                     FSR1L_SHAD      equ	14475	;# 
 18466   00388C                     FSR1H_SHAD      equ	14476	;# 
 18467   00388D                     FSR2SH          equ	14477	;# 
 18468   00388D                     FSR2L_SHAD      equ	14477	;# 
 18469   00388E                     FSR2H_SHAD      equ	14478	;# 
 18470   00388F                     PRODSH          equ	14479	;# 
 18471   00388F                     PRODL_SHAD      equ	14479	;# 
 18472   003890                     PRODH_SHAD      equ	14480	;# 
 18473   00389D                     IVTADL          equ	14493	;# 
 18474   00389E                     IVTADH          equ	14494	;# 
 18475   00389F                     IVTADU          equ	14495	;# 
 18476   00395B                     WDTCON0         equ	14683	;# 
 18477   00395C                     WDTCON1         equ	14684	;# 
 18478   00395D                     WDTPSL          equ	14685	;# 
 18479   00395E                     WDTPSH          equ	14686	;# 
 18480   00395F                     WDTTMR          equ	14687	;# 
 18481   003960                     CRCDATA         equ	14688	;# 
 18482   003960                     CRCDATL         equ	14688	;# 
 18483   003961                     CRCDATH         equ	14689	;# 
 18484   003962                     CRCACC          equ	14690	;# 
 18485   003962                     CRCACCL         equ	14690	;# 
 18486   003963                     CRCACCH         equ	14691	;# 
 18487   003964                     CRCSHFT         equ	14692	;# 
 18488   003964                     CRCSHIFTL       equ	14692	;# 
 18489   003965                     CRCSHIFTH       equ	14693	;# 
 18490   003966                     CRCXOR          equ	14694	;# 
 18491   003966                     CRCXORL         equ	14694	;# 
 18492   003967                     CRCXORH         equ	14695	;# 
 18493   003968                     CRCCON0         equ	14696	;# 
 18494   003969                     CRCCON1         equ	14697	;# 
 18495   003976                     SCANLADR        equ	14710	;# 
 18496   003976                     SCANLADRL       equ	14710	;# 
 18497   003977                     SCANLADRH       equ	14711	;# 
 18498   003978                     SCANLADRU       equ	14712	;# 
 18499   003979                     SCANHADR        equ	14713	;# 
 18500   003979                     SCANHADRL       equ	14713	;# 
 18501   00397A                     SCANHADRH       equ	14714	;# 
 18502   00397B                     SCANHADRU       equ	14715	;# 
 18503   00397C                     SCANCON0        equ	14716	;# 
 18504   00397D                     SCANTRIG        equ	14717	;# 
 18505   003980                     IPR0            equ	14720	;# 
 18506   003981                     IPR1            equ	14721	;# 
 18507   003982                     IPR2            equ	14722	;# 
 18508   003983                     IPR3            equ	14723	;# 
 18509   003984                     IPR4            equ	14724	;# 
 18510   003985                     IPR5            equ	14725	;# 
 18511   003986                     IPR6            equ	14726	;# 
 18512   003987                     IPR7            equ	14727	;# 
 18513   003988                     IPR8            equ	14728	;# 
 18514   003989                     IPR9            equ	14729	;# 
 18515   00398A                     IPR10           equ	14730	;# 
 18516   003990                     PIE0            equ	14736	;# 
 18517   003991                     PIE1            equ	14737	;# 
 18518   003992                     PIE2            equ	14738	;# 
 18519   003993                     PIE3            equ	14739	;# 
 18520   003994                     PIE4            equ	14740	;# 
 18521   003995                     PIE5            equ	14741	;# 
 18522   003996                     PIE6            equ	14742	;# 
 18523   003997                     PIE7            equ	14743	;# 
 18524   003998                     PIE8            equ	14744	;# 
 18525   003999                     PIE9            equ	14745	;# 
 18526   00399A                     PIE10           equ	14746	;# 
 18527   0039A0                     PIR0            equ	14752	;# 
 18528   0039A1                     PIR1            equ	14753	;# 
 18529   0039A2                     PIR2            equ	14754	;# 
 18530   0039A3                     PIR3            equ	14755	;# 
 18531   0039A4                     PIR4            equ	14756	;# 
 18532   0039A5                     PIR5            equ	14757	;# 
 18533   0039A6                     PIR6            equ	14758	;# 
 18534   0039A7                     PIR7            equ	14759	;# 
 18535   0039A8                     PIR8            equ	14760	;# 
 18536   0039A9                     PIR9            equ	14761	;# 
 18537   0039AA                     PIR10           equ	14762	;# 
 18538   0039C0                     PMD0            equ	14784	;# 
 18539   0039C1                     PMD1            equ	14785	;# 
 18540   0039C2                     PMD2            equ	14786	;# 
 18541   0039C3                     PMD3            equ	14787	;# 
 18542   0039C4                     PMD4            equ	14788	;# 
 18543   0039C5                     PMD5            equ	14789	;# 
 18544   0039C6                     PMD6            equ	14790	;# 
 18545   0039C7                     PMD7            equ	14791	;# 
 18546   0039D0                     BORCON          equ	14800	;# 
 18547   0039D1                     VREGCON         equ	14801	;# 
 18548   0039D8                     CPUDOZE         equ	14808	;# 
 18549   0039D9                     OSCCON1         equ	14809	;# 
 18550   0039DA                     OSCCON2         equ	14810	;# 
 18551   0039DB                     OSCCON3         equ	14811	;# 
 18552   0039DC                     OSCSTAT         equ	14812	;# 
 18553   0039DC                     OSCSTAT1        equ	14812	;# 
 18554   0039DD                     OSCEN           equ	14813	;# 
 18555   0039DE                     OSCTUNE         equ	14814	;# 
 18556   0039DF                     OSCFRQ          equ	14815	;# 
 18557   0039E0                     NVMADRL         equ	14816	;# 
 18558   0039E1                     NVMADRH         equ	14817	;# 
 18559   0039E3                     NVMDAT          equ	14819	;# 
 18560   0039E5                     NVMCON1         equ	14821	;# 
 18561   0039E6                     NVMCON2         equ	14822	;# 
 18562   0039EF                     PRLOCK          equ	14831	;# 
 18563   0039F1                     ISRPR           equ	14833	;# 
 18564   0039F2                     MAINPR          equ	14834	;# 
 18565   0039F3                     DMA1PR          equ	14835	;# 
 18566   0039F4                     DMA2PR          equ	14836	;# 
 18567   0039F7                     SCANPR          equ	14839	;# 
 18568   003A00                     RA0PPS          equ	14848	;# 
 18569   003A01                     RA1PPS          equ	14849	;# 
 18570   003A02                     RA2PPS          equ	14850	;# 
 18571   003A03                     RA3PPS          equ	14851	;# 
 18572   003A04                     RA4PPS          equ	14852	;# 
 18573   003A05                     RA5PPS          equ	14853	;# 
 18574   003A06                     RA6PPS          equ	14854	;# 
 18575   003A07                     RA7PPS          equ	14855	;# 
 18576   003A08                     RB0PPS          equ	14856	;# 
 18577   003A09                     RB1PPS          equ	14857	;# 
 18578   003A0A                     RB2PPS          equ	14858	;# 
 18579   003A0B                     RB3PPS          equ	14859	;# 
 18580   003A0C                     RB4PPS          equ	14860	;# 
 18581   003A0D                     RB5PPS          equ	14861	;# 
 18582   003A0E                     RB6PPS          equ	14862	;# 
 18583   003A0F                     RB7PPS          equ	14863	;# 
 18584   003A10                     RC0PPS          equ	14864	;# 
 18585   003A11                     RC1PPS          equ	14865	;# 
 18586   003A12                     RC2PPS          equ	14866	;# 
 18587   003A13                     RC3PPS          equ	14867	;# 
 18588   003A14                     RC4PPS          equ	14868	;# 
 18589   003A15                     RC5PPS          equ	14869	;# 
 18590   003A16                     RC6PPS          equ	14870	;# 
 18591   003A17                     RC7PPS          equ	14871	;# 
 18592   003A18                     RD0PPS          equ	14872	;# 
 18593   003A19                     RD1PPS          equ	14873	;# 
 18594   003A1A                     RD2PPS          equ	14874	;# 
 18595   003A1B                     RD3PPS          equ	14875	;# 
 18596   003A1C                     RD4PPS          equ	14876	;# 
 18597   003A1D                     RD5PPS          equ	14877	;# 
 18598   003A1E                     RD6PPS          equ	14878	;# 
 18599   003A1F                     RD7PPS          equ	14879	;# 
 18600   003A20                     RE0PPS          equ	14880	;# 
 18601   003A21                     RE1PPS          equ	14881	;# 
 18602   003A22                     RE2PPS          equ	14882	;# 
 18603   003A28                     RF0PPS          equ	14888	;# 
 18604   003A29                     RF1PPS          equ	14889	;# 
 18605   003A2A                     RF2PPS          equ	14890	;# 
 18606   003A2B                     RF3PPS          equ	14891	;# 
 18607   003A2C                     RF4PPS          equ	14892	;# 
 18608   003A2D                     RF5PPS          equ	14893	;# 
 18609   003A2E                     RF6PPS          equ	14894	;# 
 18610   003A2F                     RF7PPS          equ	14895	;# 
 18611   003A40                     ANSELA          equ	14912	;# 
 18612   003A41                     WPUA            equ	14913	;# 
 18613   003A42                     ODCONA          equ	14914	;# 
 18614   003A43                     SLRCONA         equ	14915	;# 
 18615   003A44                     INLVLA          equ	14916	;# 
 18616   003A45                     IOCAP           equ	14917	;# 
 18617   003A46                     IOCAN           equ	14918	;# 
 18618   003A47                     IOCAF           equ	14919	;# 
 18619   003A50                     ANSELB          equ	14928	;# 
 18620   003A51                     WPUB            equ	14929	;# 
 18621   003A52                     ODCONB          equ	14930	;# 
 18622   003A53                     SLRCONB         equ	14931	;# 
 18623   003A54                     INLVLB          equ	14932	;# 
 18624   003A55                     IOCBP           equ	14933	;# 
 18625   003A56                     IOCBN           equ	14934	;# 
 18626   003A57                     IOCBF           equ	14935	;# 
 18627   003A5A                     RB1I2C          equ	14938	;# 
 18628   003A5B                     RB2I2C          equ	14939	;# 
 18629   003A60                     ANSELC          equ	14944	;# 
 18630   003A61                     WPUC            equ	14945	;# 
 18631   003A62                     ODCONC          equ	14946	;# 
 18632   003A63                     SLRCONC         equ	14947	;# 
 18633   003A64                     INLVLC          equ	14948	;# 
 18634   003A65                     IOCCP           equ	14949	;# 
 18635   003A66                     IOCCN           equ	14950	;# 
 18636   003A67                     IOCCF           equ	14951	;# 
 18637   003A6A                     RC3I2C          equ	14954	;# 
 18638   003A6B                     RC4I2C          equ	14955	;# 
 18639   003A70                     ANSELD          equ	14960	;# 
 18640   003A71                     WPUD            equ	14961	;# 
 18641   003A72                     ODCOND          equ	14962	;# 
 18642   003A73                     SLRCOND         equ	14963	;# 
 18643   003A74                     INLVLD          equ	14964	;# 
 18644   003A7A                     RD0I2C          equ	14970	;# 
 18645   003A7B                     RD1I2C          equ	14971	;# 
 18646   003A80                     ANSELE          equ	14976	;# 
 18647   003A81                     WPUE            equ	14977	;# 
 18648   003A82                     ODCONE          equ	14978	;# 
 18649   003A83                     SLRCONE         equ	14979	;# 
 18650   003A84                     INLVLE          equ	14980	;# 
 18651   003A85                     IOCEP           equ	14981	;# 
 18652   003A86                     IOCEN           equ	14982	;# 
 18653   003A87                     IOCEF           equ	14983	;# 
 18654   003A90                     ANSELF          equ	14992	;# 
 18655   003A91                     WPUF            equ	14993	;# 
 18656   003A92                     ODCONF          equ	14994	;# 
 18657   003A93                     SLRCONF         equ	14995	;# 
 18658   003A94                     INLVLF          equ	14996	;# 
 18659   003ABF                     PPSLOCK         equ	15039	;# 
 18660   003AC0                     INT0PPS         equ	15040	;# 
 18661   003AC1                     INT1PPS         equ	15041	;# 
 18662   003AC2                     INT2PPS         equ	15042	;# 
 18663   003AC3                     T0CKIPPS        equ	15043	;# 
 18664   003AC4                     T1CKIPPS        equ	15044	;# 
 18665   003AC5                     T1GPPS          equ	15045	;# 
 18666   003AC6                     T3CKIPPS        equ	15046	;# 
 18667   003AC7                     T3GPPS          equ	15047	;# 
 18668   003AC8                     T5CKIPPS        equ	15048	;# 
 18669   003AC9                     T5GPPS          equ	15049	;# 
 18670   003ACA                     T2INPPS         equ	15050	;# 
 18671   003ACB                     T4INPPS         equ	15051	;# 
 18672   003ACC                     T6INPPS         equ	15052	;# 
 18673   003ACD                     CCP1PPS         equ	15053	;# 
 18674   003ACE                     CCP2PPS         equ	15054	;# 
 18675   003ACF                     CCP3PPS         equ	15055	;# 
 18676   003AD0                     CCP4PPS         equ	15056	;# 
 18677   003AD1                     SMT1WINPPS      equ	15057	;# 
 18678   003AD2                     SMT1SIGPPS      equ	15058	;# 
 18679   003AD3                     CWG1INPPS       equ	15059	;# 
 18680   003AD4                     CWG2INPPS       equ	15060	;# 
 18681   003AD5                     CWG3INPPS       equ	15061	;# 
 18682   003AD6                     MD1CARLPPS      equ	15062	;# 
 18683   003AD7                     MD1CARHPPS      equ	15063	;# 
 18684   003AD8                     MD1SRCPPS       equ	15064	;# 
 18685   003AD9                     CLCIN0PPS       equ	15065	;# 
 18686   003ADA                     CLCIN1PPS       equ	15066	;# 
 18687   003ADB                     CLCIN2PPS       equ	15067	;# 
 18688   003ADC                     CLCIN3PPS       equ	15068	;# 
 18689   003ADD                     ADACTPPS        equ	15069	;# 
 18690   003ADE                     SPI1SCKPPS      equ	15070	;# 
 18691   003ADF                     SPI1SDIPPS      equ	15071	;# 
 18692   003AE0                     SPI1SSPPS       equ	15072	;# 
 18693   003AE1                     I2C1SCLPPS      equ	15073	;# 
 18694   003AE2                     I2C1SDAPPS      equ	15074	;# 
 18695   003AE3                     I2C2SCLPPS      equ	15075	;# 
 18696   003AE4                     I2C2SDAPPS      equ	15076	;# 
 18697   003AE5                     U1RXPPS         equ	15077	;# 
 18698   003AE6                     U1CTSPPS        equ	15078	;# 
 18699   003AE8                     U2RXPPS         equ	15080	;# 
 18700   003AE9                     U2CTSPPS        equ	15081	;# 
 18701   003BC9                     DMA2BUF         equ	15305	;# 
 18702   003BCA                     DMA2DCNT        equ	15306	;# 
 18703   003BCA                     DMA2DCNTL       equ	15306	;# 
 18704   003BCB                     DMA2DCNTH       equ	15307	;# 
 18705   003BCC                     DMA2DPTR        equ	15308	;# 
 18706   003BCC                     DMA2DPTRL       equ	15308	;# 
 18707   003BCD                     DMA2DPTRH       equ	15309	;# 
 18708   003BCE                     DMA2DSZ         equ	15310	;# 
 18709   003BCE                     DMA2DSZL        equ	15310	;# 
 18710   003BCF                     DMA2DSZH        equ	15311	;# 
 18711   003BD0                     DMA2DSA         equ	15312	;# 
 18712   003BD0                     DMA2DSAL        equ	15312	;# 
 18713   003BD1                     DMA2DSAH        equ	15313	;# 
 18714   003BD2                     DMA2SCNT        equ	15314	;# 
 18715   003BD2                     DMA2SCNTL       equ	15314	;# 
 18716   003BD3                     DMA2SCNTH       equ	15315	;# 
 18717   003BD4                     DMA2SPTR        equ	15316	;# 
 18718   003BD4                     DMA2SPTRL       equ	15316	;# 
 18719   003BD5                     DMA2SPTRH       equ	15317	;# 
 18720   003BD6                     DMA2SPTRU       equ	15318	;# 
 18721   003BD7                     DMA2SSZ         equ	15319	;# 
 18722   003BD7                     DMA2SSZL        equ	15319	;# 
 18723   003BD8                     DMA2SSZH        equ	15320	;# 
 18724   003BD9                     DMA2SSA         equ	15321	;# 
 18725   003BD9                     DMA2SSAL        equ	15321	;# 
 18726   003BDA                     DMA2SSAH        equ	15322	;# 
 18727   003BDB                     DMA2SSAU        equ	15323	;# 
 18728   003BDC                     DMA2CON0        equ	15324	;# 
 18729   003BDD                     DMA2CON1        equ	15325	;# 
 18730   003BDE                     DMA2AIRQ        equ	15326	;# 
 18731   003BDF                     DMA2SIRQ        equ	15327	;# 
 18732   003BE9                     DMA1BUF         equ	15337	;# 
 18733   003BEA                     DMA1DCNT        equ	15338	;# 
 18734   003BEA                     DMA1DCNTL       equ	15338	;# 
 18735   003BEB                     DMA1DCNTH       equ	15339	;# 
 18736   003BEC                     DMA1DPTR        equ	15340	;# 
 18737   003BEC                     DMA1DPTRL       equ	15340	;# 
 18738   003BED                     DMA1DPTRH       equ	15341	;# 
 18739   003BEE                     DMA1DSZ         equ	15342	;# 
 18740   003BEE                     DMA1DSZL        equ	15342	;# 
 18741   003BEF                     DMA1DSZH        equ	15343	;# 
 18742   003BF0                     DMA1DSA         equ	15344	;# 
 18743   003BF0                     DMA1DSAL        equ	15344	;# 
 18744   003BF1                     DMA1DSAH        equ	15345	;# 
 18745   003BF2                     DMA1SCNT        equ	15346	;# 
 18746   003BF2                     DMA1SCNTL       equ	15346	;# 
 18747   003BF3                     DMA1SCNTH       equ	15347	;# 
 18748   003BF4                     DMA1SPTR        equ	15348	;# 
 18749   003BF4                     DMA1SPTRL       equ	15348	;# 
 18750   003BF5                     DMA1SPTRH       equ	15349	;# 
 18751   003BF6                     DMA1SPTRU       equ	15350	;# 
 18752   003BF7                     DMA1SSZ         equ	15351	;# 
 18753   003BF7                     DMA1SSZL        equ	15351	;# 
 18754   003BF8                     DMA1SSZH        equ	15352	;# 
 18755   003BF9                     DMA1SSA         equ	15353	;# 
 18756   003BF9                     DMA1SSAL        equ	15353	;# 
 18757   003BFA                     DMA1SSAH        equ	15354	;# 
 18758   003BFB                     DMA1SSAU        equ	15355	;# 
 18759   003BFC                     DMA1CON0        equ	15356	;# 
 18760   003BFD                     DMA1CON1        equ	15357	;# 
 18761   003BFE                     DMA1AIRQ        equ	15358	;# 
 18762   003BFF                     DMA1SIRQ        equ	15359	;# 
 18763   003C56                     CLC4CON         equ	15446	;# 
 18764   003C57                     CLC4POL         equ	15447	;# 
 18765   003C58                     CLC4SEL0        equ	15448	;# 
 18766   003C59                     CLC4SEL1        equ	15449	;# 
 18767   003C5A                     CLC4SEL2        equ	15450	;# 
 18768   003C5B                     CLC4SEL3        equ	15451	;# 
 18769   003C5C                     CLC4GLS0        equ	15452	;# 
 18770   003C5D                     CLC4GLS1        equ	15453	;# 
 18771   003C5E                     CLC4GLS2        equ	15454	;# 
 18772   003C5F                     CLC4GLS3        equ	15455	;# 
 18773   003C60                     CLC3CON         equ	15456	;# 
 18774   003C61                     CLC3POL         equ	15457	;# 
 18775   003C62                     CLC3SEL0        equ	15458	;# 
 18776   003C63                     CLC3SEL1        equ	15459	;# 
 18777   003C64                     CLC3SEL2        equ	15460	;# 
 18778   003C65                     CLC3SEL3        equ	15461	;# 
 18779   003C66                     CLC3GLS0        equ	15462	;# 
 18780   003C67                     CLC3GLS1        equ	15463	;# 
 18781   003C68                     CLC3GLS2        equ	15464	;# 
 18782   003C69                     CLC3GLS3        equ	15465	;# 
 18783   003C6A                     CLC2CON         equ	15466	;# 
 18784   003C6B                     CLC2POL         equ	15467	;# 
 18785   003C6C                     CLC2SEL0        equ	15468	;# 
 18786   003C6D                     CLC2SEL1        equ	15469	;# 
 18787   003C6E                     CLC2SEL2        equ	15470	;# 
 18788   003C6F                     CLC2SEL3        equ	15471	;# 
 18789   003C70                     CLC2GLS0        equ	15472	;# 
 18790   003C71                     CLC2GLS1        equ	15473	;# 
 18791   003C72                     CLC2GLS2        equ	15474	;# 
 18792   003C73                     CLC2GLS3        equ	15475	;# 
 18793   003C74                     CLC1CON         equ	15476	;# 
 18794   003C75                     CLC1POL         equ	15477	;# 
 18795   003C76                     CLC1SEL0        equ	15478	;# 
 18796   003C77                     CLC1SEL1        equ	15479	;# 
 18797   003C78                     CLC1SEL2        equ	15480	;# 
 18798   003C79                     CLC1SEL3        equ	15481	;# 
 18799   003C7A                     CLC1GLS0        equ	15482	;# 
 18800   003C7B                     CLC1GLS1        equ	15483	;# 
 18801   003C7C                     CLC1GLS2        equ	15484	;# 
 18802   003C7D                     CLC1GLS3        equ	15485	;# 
 18803   003C7E                     CLCDATA0        equ	15486	;# 
 18804   003CE5                     CLKRCON         equ	15589	;# 
 18805   003CE6                     CLKRCLK         equ	15590	;# 
 18806   003CFA                     MD1CON0         equ	15610	;# 
 18807   003CFB                     MD1CON1         equ	15611	;# 
 18808   003CFC                     MD1SRC          equ	15612	;# 
 18809   003CFD                     MD1CARL         equ	15613	;# 
 18810   003CFE                     MD1CARH         equ	15614	;# 
 18811   003D10                     SPI1RXB         equ	15632	;# 
 18812   003D11                     SPI1TXB         equ	15633	;# 
 18813   003D12                     SPI1TCNT        equ	15634	;# 
 18814   003D12                     SPI1TCNTL       equ	15634	;# 
 18815   003D13                     SPI1TCNTH       equ	15635	;# 
 18816   003D14                     SPI1CON0        equ	15636	;# 
 18817   003D15                     SPI1CON1        equ	15637	;# 
 18818   003D16                     SPI1CON2        equ	15638	;# 
 18819   003D17                     SPI1STATUS      equ	15639	;# 
 18820   003D18                     SPI1TWIDTH      equ	15640	;# 
 18821   003D19                     SPI1BAUD        equ	15641	;# 
 18822   003D1A                     SPI1INTF        equ	15642	;# 
 18823   003D1B                     SPI1INTE        equ	15643	;# 
 18824   003D1C                     SPI1CLK         equ	15644	;# 
 18825   003D54                     I2C2RXB         equ	15700	;# 
 18826   003D55                     I2C2TXB         equ	15701	;# 
 18827   003D56                     I2C2CNT         equ	15702	;# 
 18828   003D57                     I2C2ADB0        equ	15703	;# 
 18829   003D58                     I2C2ADB1        equ	15704	;# 
 18830   003D59                     I2C2ADR0        equ	15705	;# 
 18831   003D5A                     I2C2ADR1        equ	15706	;# 
 18832   003D5B                     I2C2ADR2        equ	15707	;# 
 18833   003D5C                     I2C2ADR3        equ	15708	;# 
 18834   003D5D                     I2C2CON0        equ	15709	;# 
 18835   003D5E                     I2C2CON1        equ	15710	;# 
 18836   003D5F                     I2C2CON2        equ	15711	;# 
 18837   003D60                     I2C2ERR         equ	15712	;# 
 18838   003D61                     I2C2STAT0       equ	15713	;# 
 18839   003D62                     I2C2STAT1       equ	15714	;# 
 18840   003D63                     I2C2PIR         equ	15715	;# 
 18841   003D64                     I2C2PIE         equ	15716	;# 
 18842   003D65                     I2C2CLK         equ	15717	;# 
 18843   003D66                     I2C2BTO         equ	15718	;# 
 18844   003D6A                     I2C1RXB         equ	15722	;# 
 18845   003D6B                     I2C1TXB         equ	15723	;# 
 18846   003D6C                     I2C1CNT         equ	15724	;# 
 18847   003D6D                     I2C1ADB0        equ	15725	;# 
 18848   003D6E                     I2C1ADB1        equ	15726	;# 
 18849   003D6F                     I2C1ADR0        equ	15727	;# 
 18850   003D70                     I2C1ADR1        equ	15728	;# 
 18851   003D71                     I2C1ADR2        equ	15729	;# 
 18852   003D72                     I2C1ADR3        equ	15730	;# 
 18853   003D73                     I2C1CON0        equ	15731	;# 
 18854   003D74                     I2C1CON1        equ	15732	;# 
 18855   003D75                     I2C1CON2        equ	15733	;# 
 18856   003D76                     I2C1ERR         equ	15734	;# 
 18857   003D77                     I2C1STAT0       equ	15735	;# 
 18858   003D78                     I2C1STAT1       equ	15736	;# 
 18859   003D79                     I2C1PIR         equ	15737	;# 
 18860   003D7A                     I2C1PIE         equ	15738	;# 
 18861   003D7B                     I2C1CLK         equ	15739	;# 
 18862   003D7C                     I2C1BTO         equ	15740	;# 
 18863   003DD0                     U2RXB           equ	15824	;# 
 18864   003DD0                     U2RXBL          equ	15824	;# 
 18865   003DD2                     U2TXB           equ	15826	;# 
 18866   003DD2                     U2TXBL          equ	15826	;# 
 18867   003DD4                     U2P1            equ	15828	;# 
 18868   003DD4                     U2P1L           equ	15828	;# 
 18869   003DD6                     U2P2            equ	15830	;# 
 18870   003DD6                     U2P2L           equ	15830	;# 
 18871   003DD8                     U2P3            equ	15832	;# 
 18872   003DD8                     U2P3L           equ	15832	;# 
 18873   003DDA                     U2CON0          equ	15834	;# 
 18874   003DDB                     U2CON1          equ	15835	;# 
 18875   003DDC                     U2CON2          equ	15836	;# 
 18876   003DDD                     U2BRG           equ	15837	;# 
 18877   003DDD                     U2BRGL          equ	15837	;# 
 18878   003DDE                     U2BRGH          equ	15838	;# 
 18879   003DDF                     U2FIFO          equ	15839	;# 
 18880   003DE0                     U2UIR           equ	15840	;# 
 18881   003DE1                     U2ERRIR         equ	15841	;# 
 18882   003DE2                     U2ERRIE         equ	15842	;# 
 18883   003DE8                     U1RXB           equ	15848	;# 
 18884   003DE8                     U1RXBL          equ	15848	;# 
 18885   003DE9                     U1RXCHK         equ	15849	;# 
 18886   003DEA                     U1TXB           equ	15850	;# 
 18887   003DEA                     U1TXBL          equ	15850	;# 
 18888   003DEB                     U1TXCHK         equ	15851	;# 
 18889   003DEC                     U1P1            equ	15852	;# 
 18890   003DEC                     U1P1L           equ	15852	;# 
 18891   003DED                     U1P1H           equ	15853	;# 
 18892   003DEE                     U1P2            equ	15854	;# 
 18893   003DEE                     U1P2L           equ	15854	;# 
 18894   003DEF                     U1P2H           equ	15855	;# 
 18895   003DF0                     U1P3            equ	15856	;# 
 18896   003DF0                     U1P3L           equ	15856	;# 
 18897   003DF1                     U1P3H           equ	15857	;# 
 18898   003DF2                     U1CON0          equ	15858	;# 
 18899   003DF3                     U1CON1          equ	15859	;# 
 18900   003DF4                     U1CON2          equ	15860	;# 
 18901   003DF5                     U1BRG           equ	15861	;# 
 18902   003DF5                     U1BRGL          equ	15861	;# 
 18903   003DF6                     U1BRGH          equ	15862	;# 
 18904   003DF7                     U1FIFO          equ	15863	;# 
 18905   003DF8                     U1UIR           equ	15864	;# 
 18906   003DF9                     U1ERRIR         equ	15865	;# 
 18907   003DFA                     U1ERRIE         equ	15866	;# 
 18908   003E9C                     DAC1CON1        equ	16028	;# 
 18909   003E9E                     DAC1CON0        equ	16030	;# 
 18910   003EB8                     CM2CON0         equ	16056	;# 
 18911   003EB9                     CM2CON1         equ	16057	;# 
 18912   003EBA                     CM2NCH          equ	16058	;# 
 18913   003EBB                     CM2PCH          equ	16059	;# 
 18914   003EBC                     CM1CON0         equ	16060	;# 
 18915   003EBD                     CM1CON1         equ	16061	;# 
 18916   003EBE                     CM1NCH          equ	16062	;# 
 18917   003EBF                     CM1PCH          equ	16063	;# 
 18918   003EC0                     CMOUT           equ	16064	;# 
 18919   003EC1                     FVRCON          equ	16065	;# 
 18920   003EC3                     ZCDCON          equ	16067	;# 
 18921   003EC9                     HLVDCON0        equ	16073	;# 
 18922   003ECA                     HLVDCON1        equ	16074	;# 
 18923   003ED7                     ADCP            equ	16087	;# 
 18924   003EDE                     ADLTH           equ	16094	;# 
 18925   003EDE                     ADLTHL          equ	16094	;# 
 18926   003EDF                     ADLTHH          equ	16095	;# 
 18927   003EE0                     ADUTH           equ	16096	;# 
 18928   003EE0                     ADUTHL          equ	16096	;# 
 18929   003EE1                     ADUTHH          equ	16097	;# 
 18930   003EE2                     ADERR           equ	16098	;# 
 18931   003EE2                     ADERRL          equ	16098	;# 
 18932   003EE3                     ADERRH          equ	16099	;# 
 18933   003EE4                     ADSTPT          equ	16100	;# 
 18934   003EE4                     ADSTPTL         equ	16100	;# 
 18935   003EE5                     ADSTPTH         equ	16101	;# 
 18936   003EE6                     ADFLTR          equ	16102	;# 
 18937   003EE6                     ADFLTRL         equ	16102	;# 
 18938   003EE7                     ADFLTRH         equ	16103	;# 
 18939   003EE8                     ADACC           equ	16104	;# 
 18940   003EE8                     ADACCL          equ	16104	;# 
 18941   003EE9                     ADACCH          equ	16105	;# 
 18942   003EEA                     ADACCU          equ	16106	;# 
 18943   003EEB                     ADCNT           equ	16107	;# 
 18944   003EEC                     ADRPT           equ	16108	;# 
 18945   003EED                     ADPREV          equ	16109	;# 
 18946   003EED                     ADPREVL         equ	16109	;# 
 18947   003EEE                     ADPREVH         equ	16110	;# 
 18948   003EEF                     ADRES           equ	16111	;# 
 18949   003EEF                     ADRESL          equ	16111	;# 
 18950   003EF0                     ADRESH          equ	16112	;# 
 18951   003EF1                     ADPCH           equ	16113	;# 
 18952   003EF3                     ADACQ           equ	16115	;# 
 18953   003EF3                     ADACQL          equ	16115	;# 
 18954   003EF4                     ADACQH          equ	16116	;# 
 18955   003EF5                     ADCAP           equ	16117	;# 
 18956   003EF6                     ADPRE           equ	16118	;# 
 18957   003EF6                     ADPREL          equ	16118	;# 
 18958   003EF7                     ADPREH          equ	16119	;# 
 18959   003EF8                     ADCON0          equ	16120	;# 
 18960   003EF9                     ADCON1          equ	16121	;# 
 18961   003EFA                     ADCON2          equ	16122	;# 
 18962   003EFB                     ADCON3          equ	16123	;# 
 18963   003EFC                     ADSTAT          equ	16124	;# 
 18964   003EFD                     ADREF           equ	16125	;# 
 18965   003EFE                     ADACT           equ	16126	;# 
 18966   003EFF                     ADCLK           equ	16127	;# 
 18967   003F12                     SMT1TMR         equ	16146	;# 
 18968   003F12                     SMT1TMRL        equ	16146	;# 
 18969   003F13                     SMT1TMRH        equ	16147	;# 
 18970   003F14                     SMT1TMRU        equ	16148	;# 
 18971   003F15                     SMT1CPR         equ	16149	;# 
 18972   003F15                     SMT1CPRL        equ	16149	;# 
 18973   003F16                     SMT1CPRH        equ	16150	;# 
 18974   003F17                     SMT1CPRU        equ	16151	;# 
 18975   003F18                     SMT1CPW         equ	16152	;# 
 18976   003F18                     SMT1CPWL        equ	16152	;# 
 18977   003F19                     SMT1CPWH        equ	16153	;# 
 18978   003F1A                     SMT1CPWU        equ	16154	;# 
 18979   003F1B                     SMT1PR          equ	16155	;# 
 18980   003F1B                     SMT1PRL         equ	16155	;# 
 18981   003F1C                     SMT1PRH         equ	16156	;# 
 18982   003F1D                     SMT1PRU         equ	16157	;# 
 18983   003F1E                     SMT1CON0        equ	16158	;# 
 18984   003F1F                     SMT1CON1        equ	16159	;# 
 18985   003F20                     SMT1STAT        equ	16160	;# 
 18986   003F21                     SMT1CLK         equ	16161	;# 
 18987   003F22                     SMT1SIG         equ	16162	;# 
 18988   003F23                     SMT1WIN         equ	16163	;# 
 18989   003F38                     NCO1ACC         equ	16184	;# 
 18990   003F38                     NCO1ACCL        equ	16184	;# 
 18991   003F39                     NCO1ACCH        equ	16185	;# 
 18992   003F3A                     NCO1ACCU        equ	16186	;# 
 18993   003F3B                     NCO1INC         equ	16187	;# 
 18994   003F3B                     NCO1INCL        equ	16187	;# 
 18995   003F3C                     NCO1INCH        equ	16188	;# 
 18996   003F3D                     NCO1INCU        equ	16189	;# 
 18997   003F3E                     NCO1CON         equ	16190	;# 
 18998   003F3F                     NCO1CLK         equ	16191	;# 
 18999   003F40                     CWG3CLK         equ	16192	;# 
 19000   003F40                     CWG3CLKCON      equ	16192	;# 
 19001   003F41                     CWG3ISM         equ	16193	;# 
 19002   003F41                     CWG3DAT         equ	16193	;# 
 19003   003F42                     CWG3DBR         equ	16194	;# 
 19004   003F43                     CWG3DBF         equ	16195	;# 
 19005   003F44                     CWG3CON0        equ	16196	;# 
 19006   003F45                     CWG3CON1        equ	16197	;# 
 19007   003F46                     CWG3AS0         equ	16198	;# 
 19008   003F47                     CWG3AS1         equ	16199	;# 
 19009   003F48                     CWG3STR         equ	16200	;# 
 19010   003F49                     CWG2CLK         equ	16201	;# 
 19011   003F49                     CWG2CLKCON      equ	16201	;# 
 19012   003F4A                     CWG2ISM         equ	16202	;# 
 19013   003F4A                     CWG2DAT         equ	16202	;# 
 19014   003F4B                     CWG2DBR         equ	16203	;# 
 19015   003F4C                     CWG2DBF         equ	16204	;# 
 19016   003F4D                     CWG2CON0        equ	16205	;# 
 19017   003F4E                     CWG2CON1        equ	16206	;# 
 19018   003F4F                     CWG2AS0         equ	16207	;# 
 19019   003F50                     CWG2AS1         equ	16208	;# 
 19020   003F51                     CWG2STR         equ	16209	;# 
 19021   003F52                     CWG1CLK         equ	16210	;# 
 19022   003F52                     CWG1CLKCON      equ	16210	;# 
 19023   003F53                     CWG1ISM         equ	16211	;# 
 19024   003F53                     CWG1DAT         equ	16211	;# 
 19025   003F54                     CWG1DBR         equ	16212	;# 
 19026   003F55                     CWG1DBF         equ	16213	;# 
 19027   003F56                     CWG1CON0        equ	16214	;# 
 19028   003F57                     CWG1CON1        equ	16215	;# 
 19029   003F58                     CWG1AS0         equ	16216	;# 
 19030   003F59                     CWG1AS1         equ	16217	;# 
 19031   003F5A                     CWG1STR         equ	16218	;# 
 19032   003F5E                     CCPTMRS0        equ	16222	;# 
 19033   003F5F                     CCPTMRS1        equ	16223	;# 
 19034   003F60                     PWM8DC          equ	16224	;# 
 19035   003F60                     PWM8DCL         equ	16224	;# 
 19036   003F61                     PWM8DCH         equ	16225	;# 
 19037   003F62                     PWM8CON         equ	16226	;# 
 19038   003F64                     PWM7DC          equ	16228	;# 
 19039   003F64                     PWM7DCL         equ	16228	;# 
 19040   003F65                     PWM7DCH         equ	16229	;# 
 19041   003F66                     PWM7CON         equ	16230	;# 
 19042   003F68                     PWM6DC          equ	16232	;# 
 19043   003F68                     PWM6DCL         equ	16232	;# 
 19044   003F69                     PWM6DCH         equ	16233	;# 
 19045   003F6A                     PWM6CON         equ	16234	;# 
 19046   003F6C                     PWM5DC          equ	16236	;# 
 19047   003F6C                     PWM5DCL         equ	16236	;# 
 19048   003F6D                     PWM5DCH         equ	16237	;# 
 19049   003F6E                     PWM5CON         equ	16238	;# 
 19050   003F70                     CCPR4           equ	16240	;# 
 19051   003F70                     CCPR4L          equ	16240	;# 
 19052   003F71                     CCPR4H          equ	16241	;# 
 19053   003F72                     CCP4CON         equ	16242	;# 
 19054   003F73                     CCP4CAP         equ	16243	;# 
 19055   003F74                     CCPR3           equ	16244	;# 
 19056   003F74                     CCPR3L          equ	16244	;# 
 19057   003F75                     CCPR3H          equ	16245	;# 
 19058   003F76                     CCP3CON         equ	16246	;# 
 19059   003F77                     CCP3CAP         equ	16247	;# 
 19060   003F78                     CCPR2           equ	16248	;# 
 19061   003F78                     CCPR2L          equ	16248	;# 
 19062   003F79                     CCPR2H          equ	16249	;# 
 19063   003F7A                     CCP2CON         equ	16250	;# 
 19064   003F7B                     CCP2CAP         equ	16251	;# 
 19065   003F7C                     CCPR1           equ	16252	;# 
 19066   003F7C                     CCPR1L          equ	16252	;# 
 19067   003F7D                     CCPR1H          equ	16253	;# 
 19068   003F7E                     CCP1CON         equ	16254	;# 
 19069   003F7F                     CCP1CAP         equ	16255	;# 
 19070   003F92                     T6TMR           equ	16274	;# 
 19071   003F92                     TMR6            equ	16274	;# 
 19072   003F93                     T6PR            equ	16275	;# 
 19073   003F93                     PR6             equ	16275	;# 
 19074   003F94                     T6CON           equ	16276	;# 
 19075   003F95                     T6HLT           equ	16277	;# 
 19076   003F96                     T6CLKCON        equ	16278	;# 
 19077   003F96                     T6CLK           equ	16278	;# 
 19078   003F97                     T6RST           equ	16279	;# 
 19079   003F98                     TMR5            equ	16280	;# 
 19080   003F98                     TMR5L           equ	16280	;# 
 19081   003F99                     TMR5H           equ	16281	;# 
 19082   003F9A                     T5CON           equ	16282	;# 
 19083   003F9A                     TMR5CON         equ	16282	;# 
 19084   003F9B                     T5GCON          equ	16283	;# 
 19085   003F9B                     TMR5GCON        equ	16283	;# 
 19086   003F9C                     T5GATE          equ	16284	;# 
 19087   003F9C                     TMR5GATE        equ	16284	;# 
 19088   003F9D                     T5CLK           equ	16285	;# 
 19089   003F9D                     TMR5CLK         equ	16285	;# 
 19090   003F9D                     PR5             equ	16285	;# 
 19091   003F9E                     T4TMR           equ	16286	;# 
 19092   003F9E                     TMR4            equ	16286	;# 
 19093   003F9F                     T4PR            equ	16287	;# 
 19094   003F9F                     PR4             equ	16287	;# 
 19095   003FA0                     T4CON           equ	16288	;# 
 19096   003FA1                     T4HLT           equ	16289	;# 
 19097   003FA2                     T4CLKCON        equ	16290	;# 
 19098   003FA2                     T4CLK           equ	16290	;# 
 19099   003FA3                     T4RST           equ	16291	;# 
 19100   003FA4                     TMR3            equ	16292	;# 
 19101   003FA4                     TMR3L           equ	16292	;# 
 19102   003FA5                     TMR3H           equ	16293	;# 
 19103   003FA6                     T3CON           equ	16294	;# 
 19104   003FA6                     TMR3CON         equ	16294	;# 
 19105   003FA7                     T3GCON          equ	16295	;# 
 19106   003FA7                     TMR3GCON        equ	16295	;# 
 19107   003FA8                     T3GATE          equ	16296	;# 
 19108   003FA8                     TMR3GATE        equ	16296	;# 
 19109   003FA9                     T3CLK           equ	16297	;# 
 19110   003FA9                     TMR3CLK         equ	16297	;# 
 19111   003FA9                     PR3             equ	16297	;# 
 19112   003FAA                     T2TMR           equ	16298	;# 
 19113   003FAA                     TMR2            equ	16298	;# 
 19114   003FAB                     T2PR            equ	16299	;# 
 19115   003FAB                     PR2             equ	16299	;# 
 19116   003FAC                     T2CON           equ	16300	;# 
 19117   003FAD                     T2HLT           equ	16301	;# 
 19118   003FAE                     T2CLKCON        equ	16302	;# 
 19119   003FAE                     T2CLK           equ	16302	;# 
 19120   003FAF                     T2RST           equ	16303	;# 
 19121   003FB0                     TMR1            equ	16304	;# 
 19122   003FB0                     TMR1L           equ	16304	;# 
 19123   003FB1                     TMR1H           equ	16305	;# 
 19124   003FB2                     T1CON           equ	16306	;# 
 19125   003FB2                     TMR1CON         equ	16306	;# 
 19126   003FB3                     T1GCON          equ	16307	;# 
 19127   003FB3                     TMR1GCON        equ	16307	;# 
 19128   003FB4                     T1GATE          equ	16308	;# 
 19129   003FB4                     TMR1GATE        equ	16308	;# 
 19130   003FB5                     T1CLK           equ	16309	;# 
 19131   003FB5                     TMR1CLK         equ	16309	;# 
 19132   003FB5                     PR1             equ	16309	;# 
 19133   003FB6                     TMR0L           equ	16310	;# 
 19134   003FB6                     TMR0            equ	16310	;# 
 19135   003FB7                     TMR0H           equ	16311	;# 
 19136   003FB7                     PR0             equ	16311	;# 
 19137   003FB8                     T0CON0          equ	16312	;# 
 19138   003FB9                     T0CON1          equ	16313	;# 
 19139   003FBA                     LATA            equ	16314	;# 
 19140   003FBB                     LATB            equ	16315	;# 
 19141   003FBC                     LATC            equ	16316	;# 
 19142   003FBD                     LATD            equ	16317	;# 
 19143   003FBE                     LATE            equ	16318	;# 
 19144   003FBF                     LATF            equ	16319	;# 
 19145   003FC2                     TRISA           equ	16322	;# 
 19146   003FC3                     TRISB           equ	16323	;# 
 19147   003FC4                     TRISC           equ	16324	;# 
 19148   003FC5                     TRISD           equ	16325	;# 
 19149   003FC6                     TRISE           equ	16326	;# 
 19150   003FC7                     TRISF           equ	16327	;# 
 19151   003FCA                     PORTA           equ	16330	;# 
 19152   003FCB                     PORTB           equ	16331	;# 
 19153   003FCC                     PORTC           equ	16332	;# 
 19154   003FCD                     PORTD           equ	16333	;# 
 19155   003FCE                     PORTE           equ	16334	;# 
 19156   003FCF                     PORTF           equ	16335	;# 
 19157   003FD2                     INTCON0         equ	16338	;# 
 19158   003FD3                     INTCON1         equ	16339	;# 
 19159   003FD4                     IVTLOCK         equ	16340	;# 
 19160   003FD5                     IVTBASE         equ	16341	;# 
 19161   003FD5                     IVTBASEL        equ	16341	;# 
 19162   003FD6                     IVTBASEH        equ	16342	;# 
 19163   003FD7                     IVTBASEU        equ	16343	;# 
 19164   003FD8                     STATUS          equ	16344	;# 
 19165   003FD9                     FSR2            equ	16345	;# 
 19166   003FD9                     FSR2L           equ	16345	;# 
 19167   003FDA                     FSR2H           equ	16346	;# 
 19168   003FDB                     PLUSW2          equ	16347	;# 
 19169   003FDC                     PREINC2         equ	16348	;# 
 19170   003FDD                     POSTDEC2        equ	16349	;# 
 19171   003FDE                     POSTINC2        equ	16350	;# 
 19172   003FDF                     INDF2           equ	16351	;# 
 19173   003FE0                     BSR             equ	16352	;# 
 19174   003FE1                     FSR1            equ	16353	;# 
 19175   003FE1                     FSR1L           equ	16353	;# 
 19176   003FE2                     FSR1H           equ	16354	;# 
 19177   003FE3                     PLUSW1          equ	16355	;# 
 19178   003FE4                     PREINC1         equ	16356	;# 
 19179   003FE5                     POSTDEC1        equ	16357	;# 
 19180   003FE6                     POSTINC1        equ	16358	;# 
 19181   003FE7                     INDF1           equ	16359	;# 
 19182   003FE8                     WREG            equ	16360	;# 
 19183   003FE9                     FSR0            equ	16361	;# 
 19184   003FE9                     FSR0L           equ	16361	;# 
 19185   003FEA                     FSR0H           equ	16362	;# 
 19186   003FEB                     PLUSW0          equ	16363	;# 
 19187   003FEC                     PREINC0         equ	16364	;# 
 19188   003FED                     POSTDEC0        equ	16365	;# 
 19189   003FEE                     POSTINC0        equ	16366	;# 
 19190   003FEF                     INDF0           equ	16367	;# 
 19191   003FF0                     PCON0           equ	16368	;# 
 19192   003FF1                     PCON1           equ	16369	;# 
 19193   003FF3                     PROD            equ	16371	;# 
 19194   003FF3                     PRODL           equ	16371	;# 
 19195   003FF4                     PRODH           equ	16372	;# 
 19196   003FF5                     TABLAT          equ	16373	;# 
 19197   003FF6                     TBLPTR          equ	16374	;# 
 19198   003FF6                     TBLPTRL         equ	16374	;# 
 19199   003FF7                     TBLPTRH         equ	16375	;# 
 19200   003FF8                     TBLPTRU         equ	16376	;# 
 19201   003FF9                     PCLAT           equ	16377	;# 
 19202   003FF9                     PCL             equ	16377	;# 
 19203   003FFA                     PCLATH          equ	16378	;# 
 19204   003FFB                     PCLATU          equ	16379	;# 
 19205   003FFC                     STKPTR          equ	16380	;# 
 19206   003FFD                     TOS             equ	16381	;# 
 19207   003FFD                     TOSL            equ	16381	;# 
 19208   003FFE                     TOSH            equ	16382	;# 
 19209   003FFF                     TOSU            equ	16383	;# 
 19210                           
 19211 ;;_s	offset	0
 19212 ;;_mode	offset	2
 19213 ;;_rxData	offset	0
 19214 ;;_t_link	offset=-2 (param)
 19215 ;;_k	offset	0
 19216 ;;_checksum	offset	2
 19217 ;;_i	offset	4
 19218 ;;_byte_block	offset=-2 (param)
 19219 ;;_length	offset=-3 (param)
 19220 ;;_fake	offset=-4 (param)
 19221 ;;_s_uart	offset=-5 (param)
 19222 ;;_i	offset	0
 19223 ;;_sum	offset	2
 19224 ;;_byte_block	offset=-2 (param)
 19225 ;;_byte_count	offset=-4 (param)
 19226 ;;_bufData	offset=-1 (param)
 19227 ;;_txData	offset=-1 (param)
 19228 ;;_bufData	offset=-1 (param)
 19229 ;;_ceid	offset	0
 19230 ;;_i	offset	4
 19231 ;;_stream	offset=-6 (param)
 19232 ;;_function	offset=-7 (param)
 19233 ;;_block	offset=-1 (param)
 19234 ;;_sid	offset=-2 (param)
 19235 ;;_s	offset=-2 (param)
 19236 ;;_rxData	offset	0
 19237 ;;_r_link	offset=-2 (param)
 19238 ;;_txData	offset=-1 (param)
 19239 ;;_rxData	offset	0
 19240 ;;_m_link	offset=-2 (param)
 19241 ;;_stream	offset=-1 (param)
 19242 ;;_function	offset=-2 (param)
 19243 ;;_t_format	offset=-1 (param)
 19244 ;;_sid	offset=-1 (param)
 19245 ;;_j	offset	0
 19246 ;;_k	offset	2
 19247 ;;_i	offset	4
 19248 ;;_z	offset	6
 19249 ;;_data	offset=-2 (param)
 19250 ;;_msg_data	offset	0
 19251 ;;_stream	offset=-1 (param)
 19252 ;;_function	offset=-2 (param)
 19253 ;;_dtime	offset=-4 (param)
 19254 ;;_i	offset	0
 19255 ;;_stream	offset=-1 (param)
 19256 ;;_function	offset=-2 (param)
 19257 ;;_dtime	offset=-4 (param)
 19258 ;;_msg_data	offset=-6 (param)
 19259 ;;_GIEBitValue	offset	0
 19260 ;;_bAdd	offset=-2 (param)
 19261 ;;_bData	offset=-3 (param)
 19262 ;;_byte_block	offset=-1 (param)
 19263 ;;_clear	offset=-2 (param)
 19264 ;;_readValue	offset	0
 19265 ;;_readValue	offset	0
 19266 ;;_cmd	offset=-1 (param)
 19267 ;;_cmd	offset=-1 (param)
 19268 ;;_data	offset=-1 (param)
 19269 ;;__this	offset=-2 (param)
 19270 ;;_cmd	offset=-1 (param)
 19271 ;;_flipper	offset=-1 (param)
 19272 ;;_numMilliseconds	offset=-2 (param)
 19273 ;;_vterm	offset=-1 (param)
 19274 ;;_new_response_info	offset=-1 (param)
 19275 ;;_new_response_info	offset=-1 (param)
 19276 ;;_level	offset=-2 (param)
 19277 ;;_dutyValue	offset=-2 (param)
 19278 ;;_timer	offset=-1 (param)
 19279 ;;_count	offset=-3 (param)
 19280 ;;_InterruptHandler	offset=-3 (param)
 19281 ;;_InterruptHandler	offset=-3 (param)
 19282 ;;_InterruptHandler	offset=-3 (param)
 19283 ;;_InterruptHandler	offset=-3 (param)
 19284 ;;_InterruptHandler	offset=-3 (param)
 19285 ;;_InterruptHandler	offset=-3 (param)
 19286 ;;_state	offset	0
 19287 ;;_InterruptHandler	offset=-3 (param)
 19288 ;;_InterruptHandler	offset=-3 (param)
 19289 ;;_InterruptHandler	offset=-3 (param)
 19290 ;;_InterruptHandler	offset=-3 (param)
 19291 ;;_r	offset=-1 (param)
 19292 ;;_c	offset=-2 (param)
 19293 ;;_strPtr	offset=-4 (param)
 19294 ;;_vterm	offset=-1 (param)
 19295 ;;_r	offset=-1 (param)
 19296 ;;_c	offset=-2 (param)
 19297 ;;_strPtr	offset=-4 (param)
 19298 ;;_strPtr	offset=-1 (param)
 19299 ;;_delay	offset=-4 (param)
 19300 ;;_strPtr	offset=-2 (param)
 19301 ;;__this	offset=-2 (param)
 19302 ;;_clearBuffer	offset=-3 (param)
 19303 ;;_p	offset	0
 19304 ;;_dest	offset=-2 (param)
 19305 ;;_c	offset=-4 (param)
 19306 ;;_n	offset=-6 (param)
 19307 ;;_ap	offset	0
 19308 ;;_fmt	offset=-3 (param)
 19309 ;;_f	offset	0
 19310 ;;_ap	offset	11
 19311 ;;_s	offset=-3 (param)
 19312 ;;_fmt	offset=-5 (param)
 19313 ;;_cfmt	offset	0
 19314 ;;_fp	offset=-2 (param)
 19315 ;;_fmt	offset=-4 (param)
 19316 ;;_ap	offset=-6 (param)
 19317 ;;_convarg	offset	0
 19318 ;;_cp	offset	4
 19319 ;;_c	offset	6
 19320 ;;_done	offset	7
 19321 ;;_fp	offset=-2 (param)
 19322 ;;_fmt	offset=-4 (param)
 19323 ;;_ap	offset=-6 (param)
 19324 ;;_xtoa$5786	offset	0
 19325 ;;_i	offset	2
 19326 ;;_w	offset	4
 19327 ;;_p	offset	6
 19328 ;;_c	offset	8
 19329 ;;_d_nonzero	offset	9
 19330 ;;_a	offset	10
 19331 ;;_fp	offset=-2 (param)
 19332 ;;_d	offset=-6 (param)
 19333 ;;_x	offset=-7 (param)
 19334 ;;_i	offset	0
 19335 ;;_w	offset	2
 19336 ;;_p	offset	4
 19337 ;;_fp	offset=-2 (param)
 19338 ;;_d	offset=-6 (param)
 19339 ;;_counter	offset	0
 19340 ;;_dividend	offset=-4 (param)
 19341 ;;_divisor	offset=-8 (param)
 19342 ;;_quotient	offset	0
 19343 ;;_counter	offset	4
 19344 ;;_dividend	offset=-4 (param)
 19345 ;;_divisor	offset=-8 (param)
 19346 ;;_l	offset	0
 19347 ;;_cp	offset	2
 19348 ;;_w	offset	4
 19349 ;;_p	offset	6
 19350 ;;_fp	offset=-2 (param)
 19351 ;;_s	offset=-4 (param)
 19352 ;;_c	offset	0
 19353 ;;_n	offset	1
 19354 ;;_fmt	offset=-2 (param)
 19355 ;;_ap	offset=-4 (param)
 19356 ;;_i	offset	0
 19357 ;;_w	offset	2
 19358 ;;_p	offset	4
 19359 ;;_t	offset	6
 19360 ;;_fp	offset=-2 (param)
 19361 ;;_d	offset=-6 (param)
 19362 ;;_dtoa$5753	offset	0
 19363 ;;_i	offset	2
 19364 ;;_w	offset	4
 19365 ;;_p	offset	6
 19366 ;;_s	offset	8
 19367 ;;_fp	offset=-2 (param)
 19368 ;;_d	offset=-6 (param)
 19369 ;;_i	offset	0
 19370 ;;_fp	offset=-2 (param)
 19371 ;;_buf	offset=-4 (param)
 19372 ;;_p	offset=-6 (param)
 19373 ;;_a	offset	0
 19374 ;;_s	offset=-2 (param)
 19375 ;;_i	offset	0
 19376 ;;_c	offset	2
 19377 ;;_s	offset=-2 (param)
 19378 ;;_fp	offset=-4 (param)
 19379 ;;_a	offset=-2 (param)
 19380 ;;_sign	offset	0
 19381 ;;_counter	offset	1
 19382 ;;_dividend	offset=-4 (param)
 19383 ;;_divisor	offset=-8 (param)
 19384 ;;_quotient	offset	0
 19385 ;;_sign	offset	4
 19386 ;;_counter	offset	5
 19387 ;;_dividend	offset=-4 (param)
 19388 ;;_divisor	offset=-8 (param)
 19389 ;;_w	offset	0
 19390 ;;_l	offset	2
 19391 ;;_fp	offset=-2 (param)
 19392 ;;_c	offset=-3 (param)
 19393 ;;_c	offset=-2 (param)
 19394 ;;_fp	offset=-4 (param)
 19395 ;;_c	offset=-1 (param)
 19396 ;;__this	offset=-2 (param)
 19397 ;;_c	offset=-3 (param)
 19398 ;;_line	offset=-1 (param)
 19399 ;;_vterm	offset=-2 (param)
 19400 ;;_timer	offset=-1 (param)
 19401 ;;_i	offset	0
 19402 ;;_timerVal	offset=-2 (param)
 19403                           
 19404                           	psect	idataCOMRAM
 19405   0180E2                     __pidataCOMRAM:
 19406                           	callstack 0
 19407                           
 19408                           ;initializer for secs_II_monitor_message@store6_11
 19409   0180E2  01                 	db	1
 19410                           
 19411                           ;initializer for secs_II_monitor_message@store1_13
 19412   0180E3  01                 	db	1
 19413                           
 19414                           ;initializer for secs_II_monitor_message@store1_1
 19415   0180E4  01                 	db	1
 19416                           
 19417                           ;initializer for r_protocol@d
 19418   0180E5  01                 	db	1
 19419                           
 19420                           ;initializer for r_protocol@retry
 19421   0180E6  03                 	db	3
 19422                           
 19423                           	psect	idataBIGRAM
 19424   01309C                     __pidataBIGRAM:
 19425                           	callstack 0
 19426                           
 19427                           ;initializer for _V
 19428   01309C  00                 	db	0
 19429   01309D  00                 	db	0
 19430   01309E  00                 	db	0
 19431   01309F  00                 	db	0
 19432   0130A0  00                 	db	0
 19433   0130A1  00                 	db	0
 19434   0130A2  00                 	db	0
 19435   0130A3  00                 	db	0
 19436   0130A4  00                 	db	0
 19437   0130A5  00                 	db	0
 19438   0130A6  00                 	db	0
 19439   0130A7  00                 	db	0
 19440   0130A8  00                 	db	0
 19441   0130A9  00                 	db	0
 19442   0130AA  00                 	db	0
 19443   0130AB  00                 	db	0
 19444   0130AC  00                 	db	0
 19445   0130AD  00                 	db	0
 19446   0130AE  00                 	db	0
 19447   0130AF  00                 	db	0
 19448   0130B0  00                 	db	0
 19449   0130B1  00                 	db	0
 19450   0130B2  00                 	db	0
 19451   0130B3  00                 	db	0
 19452   0130B4  00                 	db	0
 19453   0130B5  00                 	db	0
 19454   0130B6  00                 	db	0
 19455   0130B7  00                 	db	0
 19456   0130B8  00                 	db	0
 19457   0130B9  00                 	db	0
 19458   0130BA  00                 	db	0
 19459   0130BB  00                 	db	0
 19460   0130BC  00                 	db	0
 19461   0130BD  00                 	db	0
 19462   0130BE  00                 	db	0
 19463   0130BF  00                 	db	0
 19464   0130C0  00                 	db	0
 19465   0130C1  00                 	db	0
 19466   0130C2  00                 	db	0
 19467   0130C3  00                 	db	0
 19468   0130C4  00                 	db	0
 19469   0130C5  00                 	db	0
 19470   0130C6  00                 	db	0
 19471   0130C7  00                 	db	0
 19472   0130C8  00                 	db	0
 19473   0130C9  00                 	db	0
 19474   0130CA  00                 	db	0
 19475   0130CB  00                 	db	0
 19476   0130CC  00                 	db	0
 19477   0130CD  00                 	db	0
 19478   0130CE  00                 	db	0
 19479   0130CF  00                 	db	0
 19480   0130D0  00                 	db	0
 19481   0130D1  00                 	db	0
 19482   0130D2  00                 	db	0
 19483   0130D3  00                 	db	0
 19484   0130D4  00                 	db	0
 19485   0130D5  00                 	db	0
 19486   0130D6  00                 	db	0
 19487   0130D7  00                 	db	0
 19488   0130D8  00                 	db	0
 19489   0130D9  00                 	db	0
 19490   0130DA  00                 	db	0
 19491   0130DB  00                 	db	0
 19492   0130DC  00                 	db	0
 19493   0130DD  00                 	db	0
 19494   0130DE  00                 	db	0
 19495   0130DF  00                 	db	0
 19496   0130E0  00                 	db	0
 19497   0130E1  00                 	db	0
 19498   0130E2  00                 	db	0
 19499   0130E3  00                 	db	0
 19500   0130E4  00                 	db	0
 19501   0130E5  00                 	db	0
 19502   0130E6  00                 	db	0
 19503   0130E7  00                 	db	0
 19504   0130E8  00                 	db	0
 19505   0130E9  00                 	db	0
 19506   0130EA  00                 	db	0
 19507   0130EB  00                 	db	0
 19508   0130EC  00                 	db	0
 19509   0130ED  00                 	db	0
 19510   0130EE  00                 	db	0
 19511   0130EF  00                 	db	0
 19512   0130F0  00                 	db	0
 19513   0130F1  00                 	db	0
 19514   0130F2  00                 	db	0
 19515   0130F3  00                 	db	0
 19516   0130F4  00                 	db	0
 19517   0130F5  00                 	db	0
 19518   0130F6  00                 	db	0
 19519   0130F7  00                 	db	0
 19520   0130F8  00                 	db	0
 19521   0130F9  00                 	db	0
 19522   0130FA  00                 	db	0
 19523   0130FB  00                 	db	0
 19524   0130FC  00                 	db	0
 19525   0130FD  00                 	db	0
 19526   0130FE  00                 	db	0
 19527   0130FF  00                 	db	0
 19528   013100  00                 	db	0
 19529   013101  00                 	db	0
 19530   013102  00                 	db	0
 19531   013103  00                 	db	0
 19532   013104  00                 	db	0
 19533   013105  00                 	db	0
 19534   013106  00                 	db	0
 19535   013107  00                 	db	0
 19536   013108  00                 	db	0
 19537   013109  00                 	db	0
 19538   01310A  00                 	db	0
 19539   01310B  00                 	db	0
 19540   01310C  00                 	db	0
 19541   01310D  00                 	db	0
 19542   01310E  00                 	db	0
 19543   01310F  00                 	db	0
 19544   013110  00                 	db	0
 19545   013111  00                 	db	0
 19546   013112  00                 	db	0
 19547   013113  00                 	db	0
 19548   013114  00                 	db	0
 19549   013115  00                 	db	0
 19550   013116  00                 	db	0
 19551   013117  00                 	db	0
 19552   013118  00                 	db	0
 19553   013119  00                 	db	0
 19554   01311A  00                 	db	0
 19555   01311B  00                 	db	0
 19556   01311C  00                 	db	0
 19557   01311D  00                 	db	0
 19558   01311E  00                 	db	0
 19559   01311F  00                 	db	0
 19560   013120  00                 	db	0
 19561   013121  00                 	db	0
 19562   013122  00                 	db	0
 19563   013123  00                 	db	0
 19564   013124  00                 	db	0
 19565   013125  00                 	db	0
 19566   013126  00                 	db	0
 19567   013127  00                 	db	0
 19568   013128  00                 	db	0
 19569   013129  00                 	db	0
 19570   01312A  00                 	db	0
 19571   01312B  00                 	db	0
 19572   01312C  00                 	db	0
 19573   01312D  00                 	db	0
 19574   01312E  00                 	db	0
 19575   01312F  00                 	db	0
 19576   013130  00                 	db	0
 19577   013131  00                 	db	0
 19578   013132  00                 	db	0
 19579   013133  00                 	db	0
 19580   013134  00                 	db	0
 19581   013135  00                 	db	0
 19582   013136  00                 	db	0
 19583   013137  00                 	db	0
 19584   013138  00                 	db	0
 19585   013139  00                 	db	0
 19586   01313A  00                 	db	0
 19587   01313B  00                 	db	0
 19588   01313C  00                 	db	0
 19589   01313D  00                 	db	0
 19590   01313E  00                 	db	0
 19591   01313F  00                 	db	0
 19592   013140  00                 	db	0
 19593   013141  00                 	db	0
 19594   013142  00                 	db	0
 19595   013143  00                 	db	0
 19596   013144  00                 	db	0
 19597   013145  00                 	db	0
 19598   013146  00                 	db	0
 19599   013147  00                 	db	0
 19600   013148  00                 	db	0
 19601   013149  00                 	db	0
 19602   01314A  00                 	db	0
 19603   01314B  00                 	db	0
 19604   01314C  00                 	db	0
 19605   01314D  00                 	db	0
 19606   01314E  00                 	db	0
 19607   01314F  00                 	db	0
 19608   013150  00                 	db	0
 19609   013151  00                 	db	0
 19610   013152  00                 	db	0
 19611   013153  00                 	db	0
 19612   013154  00                 	db	0
 19613   013155  00                 	db	0
 19614   013156  00                 	db	0
 19615   013157  00                 	db	0
 19616   013158  00                 	db	0
 19617   013159  00                 	db	0
 19618   01315A  00                 	db	0
 19619   01315B  00                 	db	0
 19620   01315C  00                 	db	0
 19621   01315D  00                 	db	0
 19622   01315E  00                 	db	0
 19623   01315F  00                 	db	0
 19624   013160  00                 	db	0
 19625   013161  00                 	db	0
 19626   013162  00                 	db	0
 19627   013163  00                 	db	0
 19628   013164  00                 	db	0
 19629   013165  00                 	db	0
 19630   013166  00                 	db	0
 19631   013167  00                 	db	0
 19632   013168  00                 	db	0
 19633   013169  00                 	db	0
 19634   01316A  00                 	db	0
 19635   01316B  00                 	db	0
 19636   01316C  00                 	db	0
 19637   01316D  00                 	db	0
 19638   01316E  00                 	db	0
 19639   01316F  00                 	db	0
 19640   013170  00                 	db	0
 19641   013171  00                 	db	0
 19642   013172  00                 	db	0
 19643   013173  00                 	db	0
 19644   013174  00                 	db	0
 19645   013175  00                 	db	0
 19646   013176  00                 	db	0
 19647   013177  00                 	db	0
 19648   013178  00                 	db	0
 19649   013179  00                 	db	0
 19650   01317A  00                 	db	0
 19651   01317B  00                 	db	0
 19652   01317C  00                 	db	0
 19653   01317D  00                 	db	0
 19654   01317E  00                 	db	0
 19655   01317F  00                 	db	0
 19656   013180  00                 	db	0
 19657   013181  00                 	db	0
 19658   013182  00                 	db	0
 19659   013183  00                 	db	0
 19660   013184  00                 	db	0
 19661   013185  00                 	db	0
 19662   013186  00                 	db	0
 19663   013187  00                 	db	0
 19664   013188  00                 	db	0
 19665   013189  00                 	db	0
 19666   01318A  00                 	db	0
 19667   01318B  00                 	db	0
 19668   01318C  00                 	db	0
 19669   01318D  00                 	db	0
 19670   01318E  00                 	db	0
 19671   01318F  00                 	db	0
 19672   013190  00                 	db	0
 19673   013191  00                 	db	0
 19674   013192  00                 	db	0
 19675   013193  00                 	db	0
 19676   013194  00                 	db	0
 19677   013195  00                 	db	0
 19678   013196  00                 	db	0
 19679   013197  00                 	db	0
 19680   013198  00                 	db	0
 19681   013199  00                 	db	0
 19682   01319A  00                 	db	0
 19683   01319B  00                 	db	0
 19684   01319C  00                 	db	0
 19685   01319D  00                 	db	0
 19686   01319E  00                 	db	0
 19687   01319F  00                 	db	0
 19688   0131A0  00                 	db	0
 19689   0131A1  00                 	db	0
 19690   0131A2  00                 	db	0
 19691   0131A3  00                 	db	0
 19692   0131A4  00                 	db	0
 19693   0131A5  00                 	db	0
 19694   0131A6  00                 	db	0
 19695   0131A7  00                 	db	0
 19696   0131A8  00                 	db	0
 19697   0131A9  00                 	db	0
 19698   0131AA  00                 	db	0
 19699   0131AB  00                 	db	0
 19700   0131AC  00                 	db	0
 19701   0131AD  00                 	db	0
 19702   0131AE  00                 	db	0
 19703   0131AF  00                 	db	0
 19704   0131B0  00                 	db	0
 19705   0131B1  00                 	db	0
 19706   0131B2  00                 	db	0
 19707   0131B3  00                 	db	0
 19708   0131B4  00                 	db	0
 19709   0131B5  00                 	db	0
 19710   0131B6  00                 	db	0
 19711   0131B7  00                 	db	0
 19712   0131B8  00                 	db	0
 19713   0131B9  00                 	db	0
 19714   0131BA  00                 	db	0
 19715   0131BB  00                 	db	0
 19716   0131BC  00                 	db	0
 19717   0131BD  00                 	db	0
 19718   0131BE  00                 	db	0
 19719   0131BF  00                 	db	0
 19720   0131C0  00                 	db	0
 19721   0131C1  00                 	db	0
 19722   0131C2  00                 	db	0
 19723   0131C3  0000               	dw	0
 19724   0131C5  0000               	dw	0
 19725   0131C7  0000               	dw	0
 19726   0131C9  0000               	dw	0
 19727   0131CB  0000               	dw	0
 19728   0131CD  0000               	dw	0
 19729   0131CF  00                 	db	0
 19730   0131D0  00                 	db	0
 19731   0131D1  0A                 	db	10
 19732   0131D2  0A                 	db	10
 19733   0131D3  14                 	db	20
 19734   0131D4  00                 	db	0
 19735   0131D5  00                 	db	0
 19736   0131D6  00                 	db	0
 19737   0131D7  0000               	dw	0
 19738   0131D9  0000               	dw	0
 19739   0131DB  0000               	dw	0
 19740   0131DD  0000               	dw	0
 19741   0131DF  0000               	dw	0
 19742   0131E1  0000               	dw	0
 19743   0131E3  0000               	dw	0
 19744   0131E5  0000               	dw	0
 19745   0131E7  0000               	dw	0
 19746   0131E9  00                 	db	0
 19747   0131EA  00                 	db	0
 19748   0131EB  00                 	db	0
 19749   0131EC  00                 	db	0
 19750   0131ED  00                 	db	0
 19751   0131EE  00                 	db	0
 19752   0131EF  00                 	db	0
 19753   0131F0  00                 	db	0
 19754   0131F1  00                 	db	0
 19755   0131F2  00                 	db	0
 19756   0131F3  00                 	db	0
 19757   0131F4  00                 	db	0
 19758   0131F5  00                 	db	0
 19759   0131F6  00                 	db	0
 19760   0131F7  00                 	db	0
 19761   0131F8  00                 	db	0
 19762   0131F9  00                 	db	0
 19763   0131FA  00                 	db	0
 19764   0131FB  00                 	db	0
 19765   0131FC  00                 	db	0
 19766   0131FD  00                 	db	0
 19767   0131FE  00                 	db	0
 19768   0131FF  00                 	db	0
 19769   013200  00                 	db	0
 19770   013201  00                 	db	0
 19771   013202  00                 	db	0
 19772   013203  00                 	db	0
 19773   013204  00                 	db	0
 19774   013205  00                 	db	0
 19775   013206  00                 	db	0
 19776   013207  00                 	db	0
 19777   013208  00                 	db	0
 19778   013209  00                 	db	0
 19779   01320A  00                 	db	0
 19780   01320B  00                 	db	0
 19781   01320C  00                 	db	0
 19782   01320D  00                 	db	0
 19783   01320E  00                 	db	0
 19784   01320F  00                 	db	0
 19785   013210  00                 	db	0
 19786   013211  00                 	db	0
 19787   013212  00                 	db	0
 19788   013213  00                 	db	0
 19789   013214  00                 	db	0
 19790   013215  0000               	dw	0
 19791   013217  0000               	dw	0
 19792   013219  01                 	db	1
 19793   01321A  00                 	db	0
 19794   01321B  01                 	db	1
 19795   01321C  00                 	db	0
 19796   01321D  2D                 	db	45
 19797   01321E  00                 	db	0
 19798                           
 19799                           ;initializer for _H153
 19800   01321F  0000               	dw	0
 19801   013221  4B                 	db	75
 19802   013222  4F                 	db	79
 19803   013223  4F                 	db	79
 19804   013224  52                 	db	82
 19805   013225  42                 	db	66
 19806   013226  42                 	db	66
 19807   013227  42                 	db	66
 19808   013228  42                 	db	66
 19809   013229  34                 	db	52
 19810   01322A  33                 	db	51
 19811   01322B  32                 	db	50
 19812   01322C  31                 	db	49
 19813   01322D  44                 	db	68
 19814   01322E  45                 	db	69
 19815   01322F  32                 	db	50
 19816   013230  31                 	db	49
 19817   013231  53                 	db	83
 19818   013232  4B                 	db	75
 19819   013233  4F                 	db	79
 19820   013234  4F                 	db	79
 19821   013235  52                 	db	82
 19822   013236  42                 	db	66
 19823   013237  42                 	db	66
 19824   013238  42                 	db	66
 19825   013239  42                 	db	66
 19826   01323A  34                 	db	52
 19827   01323B  30                 	db	48
 19828   01323C  30                 	db	48
 19829   01323D  33                 	db	51
 19830   01323E  32                 	db	50
 19831   01323F  31                 	db	49
 19832   013240  44                 	db	68
 19833   013241  45                 	db	69
 19834   013242  52                 	db	82
 19835   013243  46                 	db	70
 19836   013244  20                 	db	32
 19837   013245  00                 	db	0
 19838   013246  00                 	db	0
 19839   013247  00                 	db	0
 19840   013248  00                 	db	0
 19841   013249  00                 	db	0
 19842   01324A  00                 	db	0
 19843   01324B  00                 	db	0
 19844   01324C  00                 	db	0
 19845   01324D  00                 	db	0
 19846   01324E  00                 	db	0
 19847   01324F  00                 	db	0
 19848   013250  00                 	db	0
 19849   013251  00                 	db	0
 19850   013252  00                 	db	0
 19851   013253  00                 	db	0
 19852   013254  00                 	db	0
 19853   013255  00                 	db	0
 19854   013256  00                 	db	0
 19855   013257  00                 	db	0
 19856   013258  00                 	db	0
 19857   013259  00                 	db	0
 19858   01325A  00                 	db	0
 19859   01325B  00                 	db	0
 19860   01325C  00                 	db	0
 19861   01325D  00                 	db	0
 19862   01325E  00                 	db	0
 19863   01325F  00                 	db	0
 19864   013260  00                 	db	0
 19865   013261  00                 	db	0
 19866   013262  00                 	db	0
 19867   013263  00                 	db	0
 19868   013264  00                 	db	0
 19869   013265  00                 	db	0
 19870   013266  00                 	db	0
 19871   013267  00                 	db	0
 19872   013268  00                 	db	0
 19873   013269  00                 	db	0
 19874   01326A  00                 	db	0
 19875   01326B  00                 	db	0
 19876   01326C  00                 	db	0
 19877   01326D  00                 	db	0
 19878   01326E  00                 	db	0
 19879   01326F  00                 	db	0
 19880   013270  00                 	db	0
 19881   013271  00                 	db	0
 19882   013272  00                 	db	0
 19883   013273  00                 	db	0
 19884   013274  00                 	db	0
 19885   013275  00                 	db	0
 19886   013276  00                 	db	0
 19887   013277  00                 	db	0
 19888   013278  00                 	db	0
 19889   013279  00                 	db	0
 19890   01327A  00                 	db	0
 19891   01327B  00                 	db	0
 19892   01327C  00                 	db	0
 19893   01327D  00                 	db	0
 19894   01327E  00                 	db	0
 19895   01327F  00                 	db	0
 19896   013280  00                 	db	0
 19897   013281  00                 	db	0
 19898   013282  00                 	db	0
 19899   013283  00                 	db	0
 19900   013284  00                 	db	0
 19901   013285  00                 	db	0
 19902   013286  00                 	db	0
 19903   013287  00                 	db	0
 19904   013288  00                 	db	0
 19905   013289  00                 	db	0
 19906   01328A  00                 	db	0
 19907   01328B  00                 	db	0
 19908   01328C  00                 	db	0
 19909   01328D  00                 	db	0
 19910   01328E  00                 	db	0
 19911   01328F  00                 	db	0
 19912   013290  00                 	db	0
 19913   013291  00                 	db	0
 19914   013292  00                 	db	0
 19915   013293  00                 	db	0
 19916   013294  00                 	db	0
 19917   013295  00                 	db	0
 19918   013296  00                 	db	0
 19919   013297  00                 	db	0
 19920   013298  00                 	db	0
 19921   013299  00                 	db	0
 19922   01329A  00                 	db	0
 19923   01329B  00                 	db	0
 19924   01329C  00                 	db	0
 19925   01329D  00                 	db	0
 19926   01329E  00                 	db	0
 19927   01329F  00                 	db	0
 19928   0132A0  00                 	db	0
 19929   0132A1  00                 	db	0
 19930   0132A2  00                 	db	0
 19931   0132A3  00                 	db	0
 19932   0132A4  00                 	db	0
 19933   0132A5  00                 	db	0
 19934   0132A6  00                 	db	0
 19935   0132A7  00                 	db	0
 19936   0132A8  00                 	db	0
 19937   0132A9  2C                 	db	44
 19938   0132AA  41                 	db	65
 19939   0132AB  01                 	db	1
 19940   0132AC  01                 	db	1
 19941   0132AD  21                 	db	33
 19942   0132AE  02                 	db	2
 19943   0132AF  01                 	db	1
 19944   0132B0  0001               	dw	1
 19945   0132B2  0000               	dw	0
 19946   0132B4  01                 	db	1
 19947   0132B5  80                 	db	128
 19948   0132B6  03                 	db	3
 19949   0132B7  8A                 	db	138
 19950   0132B8  00                 	db	0
 19951   0132B9  00                 	db	0
 19952   0132BA  99                 	db	153
 19953   0132BB  0000               	dw	0
 19954   0132BD  6F                 	db	111
 19955   0132BE  53                 	db	83
 19956   0132BF  4B                 	db	75
 19957   0132C0  4F                 	db	79
 19958   0132C1  4F                 	db	79
 19959   0132C2  52                 	db	82
 19960   0132C3  42                 	db	66
 19961   0132C4  42                 	db	66
 19962   0132C5  42                 	db	66
 19963   0132C6  42                 	db	66
 19964   0132C7  34                 	db	52
 19965   0132C8  33                 	db	51
 19966   0132C9  32                 	db	50
 19967   0132CA  31                 	db	49
 19968   0132CB  44                 	db	68
 19969   0132CC  45                 	db	69
 19970   0132CD  32                 	db	50
 19971   0132CE  31                 	db	49
 19972   0132CF  53                 	db	83
 19973   0132D0  4B                 	db	75
 19974   0132D1  52                 	db	82
 19975   0132D2  42                 	db	66
 19976   0132D3  2A                 	db	42
 19977   0132D4  17                 	db	23
 19978   0132D5  41                 	db	65
 19979   0132D6  34                 	db	52
 19980   0132D7  33                 	db	51
 19981   0132D8  32                 	db	50
 19982   0132D9  31                 	db	49
 19983   0132DA  44                 	db	68
 19984   0132DB  45                 	db	69
 19985   0132DC  52                 	db	82
 19986   0132DD  46                 	db	70
 19987   0132DE  2A                 	db	42
 19988   0132DF  00                 	db	0
 19989   0132E0  00                 	db	0
 19990   0132E1  00                 	db	0
 19991   0132E2  00                 	db	0
 19992   0132E3  00                 	db	0
 19993   0132E4  00                 	db	0
 19994   0132E5  00                 	db	0
 19995   0132E6  00                 	db	0
 19996   0132E7  00                 	db	0
 19997   0132E8  00                 	db	0
 19998   0132E9  00                 	db	0
 19999   0132EA  00                 	db	0
 20000   0132EB  00                 	db	0
 20001   0132EC  00                 	db	0
 20002   0132ED  00                 	db	0
 20003   0132EE  00                 	db	0
 20004   0132EF  00                 	db	0
 20005   0132F0  00                 	db	0
 20006   0132F1  00                 	db	0
 20007   0132F2  00                 	db	0
 20008   0132F3  00                 	db	0
 20009   0132F4  00                 	db	0
 20010   0132F5  00                 	db	0
 20011   0132F6  00                 	db	0
 20012   0132F7  00                 	db	0
 20013   0132F8  00                 	db	0
 20014   0132F9  00                 	db	0
 20015   0132FA  00                 	db	0
 20016   0132FB  00                 	db	0
 20017   0132FC  00                 	db	0
 20018   0132FD  00                 	db	0
 20019   0132FE  00                 	db	0
 20020   0132FF  00                 	db	0
 20021   013300  00                 	db	0
 20022   013301  00                 	db	0
 20023   013302  00                 	db	0
 20024   013303  00                 	db	0
 20025   013304  00                 	db	0
 20026   013305  00                 	db	0
 20027   013306  00                 	db	0
 20028   013307  00                 	db	0
 20029   013308  00                 	db	0
 20030   013309  00                 	db	0
 20031   01330A  00                 	db	0
 20032   01330B  00                 	db	0
 20033   01330C  00                 	db	0
 20034   01330D  00                 	db	0
 20035   01330E  00                 	db	0
 20036   01330F  00                 	db	0
 20037   013310  00                 	db	0
 20038   013311  00                 	db	0
 20039   013312  00                 	db	0
 20040   013313  00                 	db	0
 20041   013314  00                 	db	0
 20042   013315  00                 	db	0
 20043   013316  00                 	db	0
 20044   013317  00                 	db	0
 20045   013318  00                 	db	0
 20046   013319  00                 	db	0
 20047   01331A  00                 	db	0
 20048   01331B  00                 	db	0
 20049   01331C  00                 	db	0
 20050   01331D  00                 	db	0
 20051   01331E  00                 	db	0
 20052   01331F  00                 	db	0
 20053   013320  00                 	db	0
 20054   013321  00                 	db	0
 20055   013322  00                 	db	0
 20056   013323  00                 	db	0
 20057   013324  00                 	db	0
 20058   013325  00                 	db	0
 20059   013326  00                 	db	0
 20060   013327  00                 	db	0
 20061   013328  00                 	db	0
 20062   013329  00                 	db	0
 20063   01332A  00                 	db	0
 20064   01332B  00                 	db	0
 20065   01332C  00                 	db	0
 20066   01332D  00                 	db	0
 20067   01332E  00                 	db	0
 20068   01332F  00                 	db	0
 20069   013330  00                 	db	0
 20070   013331  00                 	db	0
 20071   013332  00                 	db	0
 20072   013333  00                 	db	0
 20073   013334  00                 	db	0
 20074   013335  00                 	db	0
 20075   013336  00                 	db	0
 20076   013337  00                 	db	0
 20077   013338  00                 	db	0
 20078   013339  00                 	db	0
 20079   01333A  00                 	db	0
 20080   01333B  00                 	db	0
 20081   01333C  00                 	db	0
 20082   01333D  00                 	db	0
 20083   01333E  00                 	db	0
 20084   01333F  00                 	db	0
 20085   013340  00                 	db	0
 20086   013341  00                 	db	0
 20087   013342  00                 	db	0
 20088   013343  09                 	db	9
 20089   013344  41                 	db	65
 20090   013345  02                 	db	2
 20091   013346  01                 	db	1
 20092   013347  01                 	db	1
 20093   013348  01                 	db	1
 20094   013349  21                 	db	33
 20095   01334A  02                 	db	2
 20096   01334B  01                 	db	1
 20097   01334C  0001               	dw	1
 20098   01334E  0000               	dw	0
 20099   013350  01                 	db	1
 20100   013351  80                 	db	128
 20101   013352  05                 	db	5
 20102   013353  8A                 	db	138
 20103   013354  00                 	db	0
 20104   013355  00                 	db	0
 20105   013356  99                 	db	153
 20106                           
 20107                           ;initializer for _H254
 20108   013357  2019               	dw	8217
 20109   013359  57                 	db	87
 20110   01335A  19                 	db	25
 20111   01335B  00                 	db	0
 20112   01335C  00                 	db	0
 20113   01335D  00                 	db	0
 20114   01335E  00                 	db	0
 20115   01335F  00                 	db	0
 20116   013360  00                 	db	0
 20117   013361  00                 	db	0
 20118   013362  00                 	db	0
 20119   013363  00                 	db	0
 20120   013364  00                 	db	0
 20121   013365  00                 	db	0
 20122   013366  00                 	db	0
 20123   013367  00                 	db	0
 20124   013368  00                 	db	0
 20125   013369  00                 	db	0
 20126   01336A  00                 	db	0
 20127   01336B  00                 	db	0
 20128   01336C  00                 	db	0
 20129   01336D  00                 	db	0
 20130   01336E  00                 	db	0
 20131   01336F  00                 	db	0
 20132   013370  00                 	db	0
 20133   013371  00                 	db	0
 20134   013372  00                 	db	0
 20135   013373  00                 	db	0
 20136   013374  00                 	db	0
 20137   013375  00                 	db	0
 20138   013376  00                 	db	0
 20139   013377  00                 	db	0
 20140   013378  00                 	db	0
 20141   013379  00                 	db	0
 20142   01337A  00                 	db	0
 20143   01337B  00                 	db	0
 20144   01337C  00                 	db	0
 20145   01337D  00                 	db	0
 20146   01337E  00                 	db	0
 20147   01337F  00                 	db	0
 20148   013380  00                 	db	0
 20149   013381  00                 	db	0
 20150   013382  00                 	db	0
 20151   013383  00                 	db	0
 20152   013384  00                 	db	0
 20153   013385  00                 	db	0
 20154   013386  00                 	db	0
 20155   013387  00                 	db	0
 20156   013388  00                 	db	0
 20157   013389  00                 	db	0
 20158   01338A  00                 	db	0
 20159   01338B  00                 	db	0
 20160   01338C  00                 	db	0
 20161   01338D  00                 	db	0
 20162   01338E  00                 	db	0
 20163   01338F  00                 	db	0
 20164   013390  00                 	db	0
 20165   013391  00                 	db	0
 20166   013392  00                 	db	0
 20167   013393  00                 	db	0
 20168   013394  00                 	db	0
 20169   013395  00                 	db	0
 20170   013396  00                 	db	0
 20171   013397  00                 	db	0
 20172   013398  00                 	db	0
 20173   013399  00                 	db	0
 20174   01339A  00                 	db	0
 20175   01339B  00                 	db	0
 20176   01339C  00                 	db	0
 20177   01339D  00                 	db	0
 20178   01339E  00                 	db	0
 20179   01339F  00                 	db	0
 20180   0133A0  00                 	db	0
 20181   0133A1  00                 	db	0
 20182   0133A2  00                 	db	0
 20183   0133A3  00                 	db	0
 20184   0133A4  00                 	db	0
 20185   0133A5  00                 	db	0
 20186   0133A6  00                 	db	0
 20187   0133A7  00                 	db	0
 20188   0133A8  00                 	db	0
 20189   0133A9  00                 	db	0
 20190   0133AA  00                 	db	0
 20191   0133AB  00                 	db	0
 20192   0133AC  00                 	db	0
 20193   0133AD  00                 	db	0
 20194   0133AE  00                 	db	0
 20195   0133AF  00                 	db	0
 20196   0133B0  00                 	db	0
 20197   0133B1  00                 	db	0
 20198   0133B2  00                 	db	0
 20199   0133B3  00                 	db	0
 20200   0133B4  00                 	db	0
 20201   0133B5  00                 	db	0
 20202   0133B6  00                 	db	0
 20203   0133B7  00                 	db	0
 20204   0133B8  00                 	db	0
 20205   0133B9  00                 	db	0
 20206   0133BA  00                 	db	0
 20207   0133BB  00                 	db	0
 20208   0133BC  00                 	db	0
 20209   0133BD  00                 	db	0
 20210   0133BE  00                 	db	0
 20211   0133BF  00                 	db	0
 20212   0133C0  00                 	db	0
 20213   0133C1  00                 	db	0
 20214   0133C2  00                 	db	0
 20215   0133C3  00                 	db	0
 20216   0133C4  00                 	db	0
 20217   0133C5  00                 	db	0
 20218   0133C6  00                 	db	0
 20219   0133C7  00                 	db	0
 20220   0133C8  00                 	db	0
 20221   0133C9  00                 	db	0
 20222   0133CA  00                 	db	0
 20223   0133CB  00                 	db	0
 20224   0133CC  00                 	db	0
 20225   0133CD  00                 	db	0
 20226   0133CE  00                 	db	0
 20227   0133CF  00                 	db	0
 20228   0133D0  00                 	db	0
 20229   0133D1  00                 	db	0
 20230   0133D2  00                 	db	0
 20231   0133D3  00                 	db	0
 20232   0133D4  00                 	db	0
 20233   0133D5  00                 	db	0
 20234   0133D6  00                 	db	0
 20235   0133D7  00                 	db	0
 20236   0133D8  00                 	db	0
 20237   0133D9  00                 	db	0
 20238   0133DA  00                 	db	0
 20239   0133DB  00                 	db	0
 20240   0133DC  00                 	db	0
 20241   0133DD  00                 	db	0
 20242   0133DE  00                 	db	0
 20243   0133DF  00                 	db	0
 20244   0133E0  00                 	db	0
 20245   0133E1  00                 	db	0
 20246   0133E2  00                 	db	0
 20247   0133E3  00                 	db	0
 20248   0133E4  00                 	db	0
 20249   0133E5  00                 	db	0
 20250   0133E6  00                 	db	0
 20251   0133E7  00                 	db	0
 20252   0133E8  00                 	db	0
 20253   0133E9  00                 	db	0
 20254   0133EA  00                 	db	0
 20255   0133EB  00                 	db	0
 20256   0133EC  00                 	db	0
 20257   0133ED  00                 	db	0
 20258   0133EE  00                 	db	0
 20259   0133EF  00                 	db	0
 20260   0133F0  00                 	db	0
 20261   0133F1  00                 	db	0
 20262   0133F2  00                 	db	0
 20263   0133F3  00                 	db	0
 20264   0133F4  00                 	db	0
 20265   0133F5  00                 	db	0
 20266   0133F6  00                 	db	0
 20267   0133F7  00                 	db	0
 20268   0133F8  00                 	db	0
 20269   0133F9  00                 	db	0
 20270   0133FA  00                 	db	0
 20271   0133FB  00                 	db	0
 20272   0133FC  00                 	db	0
 20273   0133FD  00                 	db	0
 20274   0133FE  00                 	db	0
 20275   0133FF  00                 	db	0
 20276   013400  00                 	db	0
 20277   013401  00                 	db	0
 20278   013402  00                 	db	0
 20279   013403  00                 	db	0
 20280   013404  00                 	db	0
 20281   013405  00                 	db	0
 20282   013406  00                 	db	0
 20283   013407  00                 	db	0
 20284   013408  00                 	db	0
 20285   013409  00                 	db	0
 20286   01340A  00                 	db	0
 20287   01340B  00                 	db	0
 20288   01340C  00                 	db	0
 20289   01340D  00                 	db	0
 20290   01340E  00                 	db	0
 20291   01340F  00                 	db	0
 20292   013410  00                 	db	0
 20293   013411  00                 	db	0
 20294   013412  00                 	db	0
 20295   013413  00                 	db	0
 20296   013414  00                 	db	0
 20297   013415  00                 	db	0
 20298   013416  00                 	db	0
 20299   013417  00                 	db	0
 20300   013418  00                 	db	0
 20301   013419  00                 	db	0
 20302   01341A  00                 	db	0
 20303   01341B  00                 	db	0
 20304   01341C  00                 	db	0
 20305   01341D  00                 	db	0
 20306   01341E  00                 	db	0
 20307   01341F  00                 	db	0
 20308   013420  00                 	db	0
 20309   013421  00                 	db	0
 20310   013422  00                 	db	0
 20311   013423  00                 	db	0
 20312   013424  00                 	db	0
 20313   013425  00                 	db	0
 20314   013426  00                 	db	0
 20315   013427  00                 	db	0
 20316   013428  00                 	db	0
 20317   013429  00                 	db	0
 20318   01342A  00                 	db	0
 20319   01342B  00                 	db	0
 20320   01342C  00                 	db	0
 20321   01342D  00                 	db	0
 20322   01342E  00                 	db	0
 20323   01342F  00                 	db	0
 20324   013430  00                 	db	0
 20325   013431  00                 	db	0
 20326   013432  00                 	db	0
 20327   013433  00                 	db	0
 20328   013434  00                 	db	0
 20329   013435  00                 	db	0
 20330   013436  00                 	db	0
 20331   013437  00                 	db	0
 20332   013438  00                 	db	0
 20333   013439  00                 	db	0
 20334   01343A  00                 	db	0
 20335   01343B  00                 	db	0
 20336   01343C  00                 	db	0
 20337   01343D  00                 	db	0
 20338   01343E  00                 	db	0
 20339   01343F  00                 	db	0
 20340   013440  00                 	db	0
 20341   013441  00                 	db	0
 20342   013442  00                 	db	0
 20343   013443  00                 	db	0
 20344   013444  00                 	db	0
 20345   013445  00                 	db	0
 20346   013446  00                 	db	0
 20347   013447  00                 	db	0
 20348   013448  00                 	db	0
 20349   013449  00                 	db	0
 20350   01344A  00                 	db	0
 20351   01344B  00                 	db	0
 20352   01344C  00                 	db	0
 20353   01344D  0001               	dw	1
 20354   01344F  0000               	dw	0
 20355   013451  01                 	db	1
 20356   013452  80                 	db	128
 20357   013453  03                 	db	3
 20358   013454  8A                 	db	138
 20359   013455  EF                 	db	239
 20360   013456  80                 	db	128
 20361   013457  FE                 	db	254
 20362                           
 20363                           	psect	idataBANK0
 20364   017996                     __pidataBANK0:
 20365                           	callstack 0
 20366                           
 20367                           ;initializer for _H33
 20368   017996  0000               	dw	0
 20369   017998  01                 	db	1
 20370   017999  01                 	db	1
 20371   01799A  A5                 	db	165
 20372   01799B  4B                 	db	75
 20373   01799C  43                 	db	67
 20374   01799D  4F                 	db	79
 20375   01799E  4C                 	db	76
 20376   01799F  44                 	db	68
 20377   0179A0  41                 	db	65
 20378   0179A1  4F                 	db	79
 20379   0179A2  4C                 	db	76
 20380   0179A3  08                 	db	8
 20381   0179A4  41                 	db	65
 20382   0179A5  02                 	db	2
 20383   0179A6  01                 	db	1
 20384   0179A7  01                 	db	1
 20385   0179A8  01                 	db	1
 20386   0179A9  37                 	db	55
 20387   0179AA  31                 	db	49
 20388   0179AB  02                 	db	2
 20389   0179AC  41                 	db	65
 20390   0179AD  02                 	db	2
 20391   0179AE  01                 	db	1
 20392   0179AF  0001               	dw	1
 20393   0179B1  0000               	dw	0
 20394   0179B3  01                 	db	1
 20395   0179B4  80                 	db	128
 20396   0179B5  29                 	db	41
 20397   0179B6  82                 	db	130
 20398   0179B7  00                 	db	0
 20399   0179B8  00                 	db	0
 20400   0179B9  21                 	db	33
 20401                           
 20402                           ;initializer for _H14
 20403   0179BA  0000               	dw	0
 20404   0179BC  00                 	db	0
 20405   0179BD  41                 	db	65
 20406   0179BE  11                 	db	17
 20407   0179BF  01                 	db	1
 20408   0179C0  0001               	dw	1
 20409   0179C2  0000               	dw	0
 20410   0179C4  01                 	db	1
 20411   0179C5  80                 	db	128
 20412   0179C6  04                 	db	4
 20413   0179C7  01                 	db	1
 20414   0179C8  00                 	db	0
 20415   0179C9  00                 	db	0
 20416   0179CA  0E                 	db	14
 20417                           
 20418                           	psect	idataBANK1
 20419   0168DC                     __pidataBANK1:
 20420                           	callstack 0
 20421                           
 20422                           ;initializer for _H10
 20423   0168DC  0000               	dw	0
 20424   0168DE  0001               	dw	1
 20425   0168E0  0000               	dw	0
 20426   0168E2  01                 	db	1
 20427   0168E3  80                 	db	128
 20428   0168E4  01                 	db	1
 20429   0168E5  81                 	db	129
 20430   0168E6  00                 	db	0
 20431   0168E7  00                 	db	0
 20432   0168E8  0A                 	db	10
 20433   0168E9  0000               	dw	0
 20434   0168EB  00                 	db	0
 20435   0168EC  00                 	db	0
 20436   0168ED  00                 	db	0
 20437   0168EE  00                 	db	0
 20438   0168EF  00                 	db	0
 20439   0168F0  00                 	db	0
 20440   0168F1  00                 	db	0
 20441   0168F2  00                 	db	0
 20442   0168F3  00                 	db	0
 20443   0168F4  00                 	db	0
 20444   0168F5  0A                 	db	10
 20445   0168F6  0000               	dw	0
 20446   0168F8  0001               	dw	1
 20447   0168FA  0000               	dw	0
 20448   0168FC  01                 	db	1
 20449   0168FD  80                 	db	128
 20450   0168FE  00                 	db	0
 20451   0168FF  01                 	db	1
 20452   016900  00                 	db	0
 20453   016901  00                 	db	0
 20454   016902  0A                 	db	10
 20455   016903  0000               	dw	0
 20456   016905  0001               	dw	1
 20457   016907  0000               	dw	0
 20458   016909  01                 	db	1
 20459   01690A  80                 	db	128
 20460   01690B  01                 	db	1
 20461   01690C  81                 	db	129
 20462   01690D  00                 	db	0
 20463   01690E  80                 	db	128
 20464   01690F  0A                 	db	10
 20465   016910  0000               	dw	0
 20466   016912  0001               	dw	1
 20467   016914  0000               	dw	0
 20468   016916  01                 	db	1
 20469   016917  80                 	db	128
 20470   016918  11                 	db	17
 20471   016919  82                 	db	130
 20472   01691A  00                 	db	0
 20473   01691B  00                 	db	0
 20474   01691C  0A                 	db	10
 20475   01691D  0000               	dw	0
 20476   01691F  0001               	dw	1
 20477   016921  0000               	dw	0
 20478   016923  01                 	db	1
 20479   016924  80                 	db	128
 20480   016925  0F                 	db	15
 20481   016926  81                 	db	129
 20482   016927  00                 	db	0
 20483   016928  00                 	db	0
 20484   016929  0A                 	db	10
 20485   01692A  0000               	dw	0
 20486   01692C  0001               	dw	1
 20487   01692E  0000               	dw	0
 20488   016930  01                 	db	1
 20489   016931  80                 	db	128
 20490   016932  11                 	db	17
 20491   016933  81                 	db	129
 20492   016934  00                 	db	0
 20493   016935  00                 	db	0
 20494   016936  0A                 	db	10
 20495                           
 20496                           ;initializer for _H13
 20497   016937  0000               	dw	0
 20498   016939  00                 	db	0
 20499   01693A  01                 	db	1
 20500   01693B  21                 	db	33
 20501   01693C  0001               	dw	1
 20502   01693E  0000               	dw	0
 20503   016940  01                 	db	1
 20504   016941  80                 	db	128
 20505   016942  0C                 	db	12
 20506   016943  06                 	db	6
 20507   016944  00                 	db	0
 20508   016945  00                 	db	0
 20509   016946  0D                 	db	13
 20510   016947  0000               	dw	0
 20511   016949  00                 	db	0
 20512   01694A  01                 	db	1
 20513   01694B  21                 	db	33
 20514   01694C  0001               	dw	1
 20515   01694E  0000               	dw	0
 20516   016950  01                 	db	1
 20517   016951  80                 	db	128
 20518   016952  02                 	db	2
 20519   016953  0A                 	db	10
 20520   016954  00                 	db	0
 20521   016955  00                 	db	0
 20522   016956  0D                 	db	13
 20523   016957  0000               	dw	0
 20524   016959  00                 	db	0
 20525   01695A  01                 	db	1
 20526   01695B  21                 	db	33
 20527   01695C  0001               	dw	1
 20528   01695E  0000               	dw	0
 20529   016960  01                 	db	1
 20530   016961  80                 	db	128
 20531   016962  02                 	db	2
 20532   016963  05                 	db	5
 20533   016964  00                 	db	0
 20534   016965  00                 	db	0
 20535   016966  0D                 	db	13
 20536   016967  0000               	dw	0
 20537   016969  FF                 	db	255
 20538   01696A  01                 	db	1
 20539   01696B  21                 	db	33
 20540   01696C  0001               	dw	1
 20541   01696E  0000               	dw	0
 20542   016970  01                 	db	1
 20543   016971  80                 	db	128
 20544   016972  1A                 	db	26
 20545   016973  02                 	db	2
 20546   016974  00                 	db	0
 20547   016975  00                 	db	0
 20548   016976  0D                 	db	13
 20549                           
 20550                           ;initializer for _H17
 20551   016977  0000               	dw	0
 20552   016979  00                 	db	0
 20553   01697A  01                 	db	1
 20554   01697B  00                 	db	0
 20555   01697C  01                 	db	1
 20556   01697D  21                 	db	33
 20557   01697E  02                 	db	2
 20558   01697F  01                 	db	1
 20559   016980  0001               	dw	1
 20560   016982  0000               	dw	0
 20561   016984  01                 	db	1
 20562   016985  80                 	db	128
 20563   016986  0E                 	db	14
 20564   016987  01                 	db	1
 20565   016988  00                 	db	0
 20566   016989  00                 	db	0
 20567   01698A  11                 	db	17
 20568                           
 20569                           ;initializer for _port_data
 20570   01698B  FF                 	db	255
 20571   01698C  00                 	db	0
 20572   01698D  FF                 	db	255
 20573   01698E  00                 	db	0
 20574   01698F  FF                 	db	255
 20575   016990  00                 	db	0
 20576   016991  FF                 	db	255
 20577   016992  00                 	db	0
 20578   016993  FF                 	db	255
 20579   016994  00                 	db	0
 20580   016995  FF                 	db	255
 20581   016996  00                 	db	0
 20582   016997  FF                 	db	255
 20583   016998  00                 	db	0
 20584   016999  FF                 	db	255
 20585   01699A  00                 	db	0
 20586                           
 20587                           	psect	idataBANK2
 20588   01787C                     __pidataBANK2:
 20589                           	callstack 0
 20590                           
 20591                           ;initializer for _H12
 20592   01787C  0000               	dw	0
 20593   01787E  00                 	db	0
 20594   01787F  01                 	db	1
 20595   017880  0001               	dw	1
 20596   017882  0000               	dw	0
 20597   017884  01                 	db	1
 20598   017885  80                 	db	128
 20599   017886  02                 	db	2
 20600   017887  01                 	db	1
 20601   017888  00                 	db	0
 20602   017889  00                 	db	0
 20603   01788A  0C                 	db	12
 20604   01788B  0000               	dw	0
 20605   01788D  00                 	db	0
 20606   01788E  01                 	db	1
 20607   01788F  0001               	dw	1
 20608   017891  0000               	dw	0
 20609   017893  01                 	db	1
 20610   017894  80                 	db	128
 20611   017895  0D                 	db	13
 20612   017896  81                 	db	129
 20613   017897  00                 	db	0
 20614   017898  00                 	db	0
 20615   017899  0C                 	db	12
 20616                           
 20617                           ;initializer for _H26
 20618   01789A  0000               	dw	0
 20619   01789C  30                 	db	48
 20620   01789D  31                 	db	49
 20621   01789E  30                 	db	48
 20622   01789F  39                 	db	57
 20623   0178A0  31                 	db	49
 20624   0178A1  31                 	db	49
 20625   0178A2  30                 	db	48
 20626   0178A3  38                 	db	56
 20627   0178A4  34                 	db	52
 20628   0178A5  36                 	db	54
 20629   0178A6  30                 	db	48
 20630   0178A7  30                 	db	48
 20631   0178A8  30                 	db	48
 20632   0178A9  30                 	db	48
 20633   0178AA  0E                 	db	14
 20634   0178AB  41                 	db	65
 20635   0178AC  0001               	dw	1
 20636   0178AE  0000               	dw	0
 20637   0178B0  01                 	db	1
 20638   0178B1  80                 	db	128
 20639   0178B2  12                 	db	18
 20640   0178B3  02                 	db	2
 20641   0178B4  00                 	db	0
 20642   0178B5  00                 	db	0
 20643   0178B6  1A                 	db	26
 20644                           
 20645                           	psect	idataBANK6
 20646   016260                     __pidataBANK6:
 20647                           	callstack 0
 20648                           
 20649                           ;initializer for _T
 20650   016260  63                 	db	99
 20651   016261  6F                 	db	111
 20652   016262  6D                 	db	109
 20653   016263  6D                 	db	109
 20654   016264  61                 	db	97
 20655   016265  6E                 	db	110
 20656   016266  64                 	db	100
 20657   016267  73                 	db	115
 20658   016268  20                 	db	32
 20659   016269  31                 	db	49
 20660   01626A  00                 	db	0
 20661   01626B  00                 	db	0
 20662   01626C  00                 	db	0
 20663   01626D  00                 	db	0
 20664   01626E  00                 	db	0
 20665   01626F  00                 	db	0
 20666   016270  00                 	db	0
 20667   016271  00                 	db	0
 20668   016272  00                 	db	0
 20669   016273  00                 	db	0
 20670   016274  00                 	db	0
 20671   016275  00                 	db	0
 20672   016276  00                 	db	0
 20673   016277  00                 	db	0
 20674   016278  00                 	db	0
 20675   016279  00                 	db	0
 20676   01627A  00                 	db	0
 20677   01627B  00                 	db	0
 20678   01627C  00                 	db	0
 20679   01627D  00                 	db	0
 20680   01627E  00                 	db	0
 20681   01627F  00                 	db	0
 20682   016280  64                 	db	100
 20683   016281  69                 	db	105
 20684   016282  73                 	db	115
 20685   016283  70                 	db	112
 20686   016284  6C                 	db	108
 20687   016285  61                 	db	97
 20688   016286  79                 	db	121
 20689   016287  73                 	db	115
 20690   016288  20                 	db	32
 20691   016289  31                 	db	49
 20692   01628A  00                 	db	0
 20693   01628B  00                 	db	0
 20694   01628C  00                 	db	0
 20695   01628D  00                 	db	0
 20696   01628E  00                 	db	0
 20697   01628F  00                 	db	0
 20698   016290  00                 	db	0
 20699   016291  00                 	db	0
 20700   016292  00                 	db	0
 20701   016293  00                 	db	0
 20702   016294  00                 	db	0
 20703   016295  00                 	db	0
 20704   016296  00                 	db	0
 20705   016297  00                 	db	0
 20706   016298  00                 	db	0
 20707   016299  00                 	db	0
 20708   01629A  00                 	db	0
 20709   01629B  00                 	db	0
 20710   01629C  00                 	db	0
 20711   01629D  00                 	db	0
 20712   01629E  00                 	db	0
 20713   01629F  00                 	db	0
 20714   0162A0  63                 	db	99
 20715   0162A1  6F                 	db	111
 20716   0162A2  6D                 	db	109
 20717   0162A3  6D                 	db	109
 20718   0162A4  61                 	db	97
 20719   0162A5  6E                 	db	110
 20720   0162A6  64                 	db	100
 20721   0162A7  73                 	db	115
 20722   0162A8  20                 	db	32
 20723   0162A9  32                 	db	50
 20724   0162AA  00                 	db	0
 20725   0162AB  00                 	db	0
 20726   0162AC  00                 	db	0
 20727   0162AD  00                 	db	0
 20728   0162AE  00                 	db	0
 20729   0162AF  00                 	db	0
 20730   0162B0  00                 	db	0
 20731   0162B1  00                 	db	0
 20732   0162B2  00                 	db	0
 20733   0162B3  00                 	db	0
 20734   0162B4  00                 	db	0
 20735   0162B5  00                 	db	0
 20736   0162B6  00                 	db	0
 20737   0162B7  00                 	db	0
 20738   0162B8  00                 	db	0
 20739   0162B9  00                 	db	0
 20740   0162BA  00                 	db	0
 20741   0162BB  00                 	db	0
 20742   0162BC  00                 	db	0
 20743   0162BD  00                 	db	0
 20744   0162BE  00                 	db	0
 20745   0162BF  00                 	db	0
 20746   0162C0  64                 	db	100
 20747   0162C1  69                 	db	105
 20748   0162C2  73                 	db	115
 20749   0162C3  70                 	db	112
 20750   0162C4  6C                 	db	108
 20751   0162C5  61                 	db	97
 20752   0162C6  79                 	db	121
 20753   0162C7  73                 	db	115
 20754   0162C8  20                 	db	32
 20755   0162C9  32                 	db	50
 20756   0162CA  00                 	db	0
 20757   0162CB  00                 	db	0
 20758   0162CC  00                 	db	0
 20759   0162CD  00                 	db	0
 20760   0162CE  00                 	db	0
 20761   0162CF  00                 	db	0
 20762   0162D0  00                 	db	0
 20763   0162D1  00                 	db	0
 20764   0162D2  00                 	db	0
 20765   0162D3  00                 	db	0
 20766   0162D4  00                 	db	0
 20767   0162D5  00                 	db	0
 20768   0162D6  00                 	db	0
 20769   0162D7  00                 	db	0
 20770   0162D8  00                 	db	0
 20771   0162D9  00                 	db	0
 20772   0162DA  00                 	db	0
 20773   0162DB  00                 	db	0
 20774   0162DC  00                 	db	0
 20775   0162DD  00                 	db	0
 20776   0162DE  00                 	db	0
 20777   0162DF  00                 	db	0
 20778   0162E0  63                 	db	99
 20779   0162E1  6F                 	db	111
 20780   0162E2  6D                 	db	109
 20781   0162E3  6D                 	db	109
 20782   0162E4  61                 	db	97
 20783   0162E5  6E                 	db	110
 20784   0162E6  64                 	db	100
 20785   0162E7  73                 	db	115
 20786   0162E8  20                 	db	32
 20787   0162E9  33                 	db	51
 20788   0162EA  00                 	db	0
 20789   0162EB  00                 	db	0
 20790   0162EC  00                 	db	0
 20791   0162ED  00                 	db	0
 20792   0162EE  00                 	db	0
 20793   0162EF  00                 	db	0
 20794   0162F0  00                 	db	0
 20795   0162F1  00                 	db	0
 20796   0162F2  00                 	db	0
 20797   0162F3  00                 	db	0
 20798   0162F4  00                 	db	0
 20799   0162F5  00                 	db	0
 20800   0162F6  00                 	db	0
 20801   0162F7  00                 	db	0
 20802   0162F8  00                 	db	0
 20803   0162F9  00                 	db	0
 20804   0162FA  00                 	db	0
 20805   0162FB  00                 	db	0
 20806   0162FC  00                 	db	0
 20807   0162FD  00                 	db	0
 20808   0162FE  00                 	db	0
 20809   0162FF  00                 	db	0
 20810   016300  64                 	db	100
 20811   016301  69                 	db	105
 20812   016302  73                 	db	115
 20813   016303  70                 	db	112
 20814   016304  6C                 	db	108
 20815   016305  61                 	db	97
 20816   016306  79                 	db	121
 20817   016307  73                 	db	115
 20818   016308  20                 	db	32
 20819   016309  33                 	db	51
 20820   01630A  00                 	db	0
 20821   01630B  00                 	db	0
 20822   01630C  00                 	db	0
 20823   01630D  00                 	db	0
 20824   01630E  00                 	db	0
 20825   01630F  00                 	db	0
 20826   016310  00                 	db	0
 20827   016311  00                 	db	0
 20828   016312  00                 	db	0
 20829   016313  00                 	db	0
 20830   016314  00                 	db	0
 20831   016315  00                 	db	0
 20832   016316  00                 	db	0
 20833   016317  00                 	db	0
 20834   016318  00                 	db	0
 20835   016319  00                 	db	0
 20836   01631A  00                 	db	0
 20837   01631B  00                 	db	0
 20838   01631C  00                 	db	0
 20839   01631D  00                 	db	0
 20840   01631E  00                 	db	0
 20841   01631F  00                 	db	0
 20842   016320  63                 	db	99
 20843   016321  6F                 	db	111
 20844   016322  6D                 	db	109
 20845   016323  6D                 	db	109
 20846   016324  61                 	db	97
 20847   016325  6E                 	db	110
 20848   016326  64                 	db	100
 20849   016327  73                 	db	115
 20850   016328  20                 	db	32
 20851   016329  34                 	db	52
 20852   01632A  00                 	db	0
 20853   01632B  00                 	db	0
 20854   01632C  00                 	db	0
 20855   01632D  00                 	db	0
 20856   01632E  00                 	db	0
 20857   01632F  00                 	db	0
 20858   016330  00                 	db	0
 20859   016331  00                 	db	0
 20860   016332  00                 	db	0
 20861   016333  00                 	db	0
 20862   016334  00                 	db	0
 20863   016335  00                 	db	0
 20864   016336  00                 	db	0
 20865   016337  00                 	db	0
 20866   016338  00                 	db	0
 20867   016339  00                 	db	0
 20868   01633A  00                 	db	0
 20869   01633B  00                 	db	0
 20870   01633C  00                 	db	0
 20871   01633D  00                 	db	0
 20872   01633E  00                 	db	0
 20873   01633F  00                 	db	0
 20874   016340  64                 	db	100
 20875   016341  69                 	db	105
 20876   016342  73                 	db	115
 20877   016343  70                 	db	112
 20878   016344  6C                 	db	108
 20879   016345  61                 	db	97
 20880   016346  79                 	db	121
 20881   016347  73                 	db	115
 20882   016348  20                 	db	32
 20883   016349  34                 	db	52
 20884   01634A  00                 	db	0
 20885   01634B  00                 	db	0
 20886   01634C  00                 	db	0
 20887   01634D  00                 	db	0
 20888   01634E  00                 	db	0
 20889   01634F  00                 	db	0
 20890   016350  00                 	db	0
 20891   016351  00                 	db	0
 20892   016352  00                 	db	0
 20893   016353  00                 	db	0
 20894   016354  00                 	db	0
 20895   016355  00                 	db	0
 20896   016356  00                 	db	0
 20897   016357  00                 	db	0
 20898   016358  00                 	db	0
 20899   016359  00                 	db	0
 20900   01635A  00                 	db	0
 20901   01635B  00                 	db	0
 20902   01635C  00                 	db	0
 20903   01635D  00                 	db	0
 20904   01635E  00                 	db	0
 20905   01635F  00                 	db	0
 20906                           
 20907                           	psect	mediumconst
 20908   00FB2E                     __pmediumconst:
 20909                           	callstack 0
 20910   00FB2E  00                 	db	0
 20911   00FB2F                     _HC33:
 20912                           	callstack 0
 20913   00FB2F  0000               	dw	0
 20914   00FB31  01                 	db	1
 20915   00FB32  01                 	db	1
 20916   00FB33  A5                 	db	165
 20917   00FB34  4B                 	db	75
 20918   00FB35  43                 	db	67
 20919   00FB36  4F                 	db	79
 20920   00FB37  4C                 	db	76
 20921   00FB38  44                 	db	68
 20922   00FB39  41                 	db	65
 20923   00FB3A  4F                 	db	79
 20924   00FB3B  4C                 	db	76
 20925   00FB3C  08                 	db	8
 20926   00FB3D  41                 	db	65
 20927   00FB3E  02                 	db	2
 20928   00FB3F  01                 	db	1
 20929   00FB40  01                 	db	1
 20930   00FB41  01                 	db	1
 20931   00FB42  37                 	db	55
 20932   00FB43  31                 	db	49
 20933   00FB44  02                 	db	2
 20934   00FB45  41                 	db	65
 20935   00FB46  02                 	db	2
 20936   00FB47  01                 	db	1
 20937   00FB48  0001               	dw	1
 20938   00FB4A  0000               	dw	0
 20939   00FB4C  01                 	db	1
 20940   00FB4D  80                 	db	128
 20941   00FB4E  29                 	db	41
 20942   00FB4F  82                 	db	130
 20943   00FB50  00                 	db	0
 20944   00FB51  00                 	db	0
 20945   00FB52  21                 	db	33
 20946   00FB53  0000               	dw	0
 20947   00FB55  01                 	db	1
 20948   00FB56  01                 	db	1
 20949   00FB57  A5                 	db	165
 20950   00FB58  4B                 	db	75
 20951   00FB59  43                 	db	67
 20952   00FB5A  4F                 	db	79
 20953   00FB5B  4C                 	db	76
 20954   00FB5C  44                 	db	68
 20955   00FB5D  41                 	db	65
 20956   00FB5E  4F                 	db	79
 20957   00FB5F  4C                 	db	76
 20958   00FB60  08                 	db	8
 20959   00FB61  41                 	db	65
 20960   00FB62  02                 	db	2
 20961   00FB63  01                 	db	1
 20962   00FB64  01                 	db	1
 20963   00FB65  01                 	db	1
 20964   00FB66  32                 	db	50
 20965   00FB67  31                 	db	49
 20966   00FB68  02                 	db	2
 20967   00FB69  41                 	db	65
 20968   00FB6A  02                 	db	2
 20969   00FB6B  01                 	db	1
 20970   00FB6C  0001               	dw	1
 20971   00FB6E  0000               	dw	0
 20972   00FB70  01                 	db	1
 20973   00FB71  80                 	db	128
 20974   00FB72  29                 	db	41
 20975   00FB73  82                 	db	130
 20976   00FB74  00                 	db	0
 20977   00FB75  00                 	db	0
 20978   00FB76  21                 	db	33
 20979   00FB77                     __end_of_HC33:
 20980                           	callstack 0
 20981   00FB77                     _msg0:
 20982                           	callstack 0
 20983   00FB77  4D                 	db	77
 20984   00FB78  45                 	db	69
 20985   00FB79  53                 	db	83
 20986   00FB7A  53                 	db	83
 20987   00FB7B  41                 	db	65
 20988   00FB7C  47                 	db	71
 20989   00FB7D  45                 	db	69
 20990   00FB7E  20                 	db	32
 20991   00FB7F  41                 	db	65
 20992   00FB80  6C                 	db	108
 20993   00FB81  6C                 	db	108
 20994   00FB82  20                 	db	32
 20995   00FB83  25                 	db	37
 20996   00FB84  64                 	db	100
 20997   00FB85  2C                 	db	44
 20998   00FB86  20                 	db	32
 20999   00FB87  52                 	db	82
 21000   00FB88  65                 	db	101
 21001   00FB89  61                 	db	97
 21002   00FB8A  64                 	db	100
 21003   00FB8B  20                 	db	32
 21004   00FB8C  25                 	db	37
 21005   00FB8D  64                 	db	100
 21006   00FB8E  20                 	db	32
 21007   00FB8F  46                 	db	70
 21008   00FB90  61                 	db	97
 21009   00FB91  69                 	db	105
 21010   00FB92  6C                 	db	108
 21011   00FB93  65                 	db	101
 21012   00FB94  64                 	db	100
 21013   00FB95  20                 	db	32
 21014   00FB96  25                 	db	37
 21015   00FB97  64                 	db	100
 21016   00FB98  2C                 	db	44
 21017   00FB99  20                 	db	32
 21018   00FB9A  54                 	db	84
 21019   00FB9B  72                 	db	114
 21020   00FB9C  61                 	db	97
 21021   00FB9D  6E                 	db	110
 21022   00FB9E  73                 	db	115
 21023   00FB9F  6D                 	db	109
 21024   00FBA0  69                 	db	105
 21025   00FBA1  74                 	db	116
 21026   00FBA2  20                 	db	32
 21027   00FBA3  25                 	db	37
 21028   00FBA4  64                 	db	100
 21029   00FBA5  20                 	db	32
 21030   00FBA6  46                 	db	70
 21031   00FBA7  61                 	db	97
 21032   00FBA8  69                 	db	105
 21033   00FBA9  6C                 	db	108
 21034   00FBAA  65                 	db	101
 21035   00FBAB  64                 	db	100
 21036   00FBAC  20                 	db	32
 21037   00FBAD  25                 	db	37
 21038   00FBAE  64                 	db	100
 21039   00FBAF  2C                 	db	44
 21040   00FBB0  20                 	db	32
 21041   00FBB1  43                 	db	67
 21042   00FBB2  68                 	db	104
 21043   00FBB3  65                 	db	101
 21044   00FBB4  63                 	db	99
 21045   00FBB5  6B                 	db	107
 21046   00FBB6  73                 	db	115
 21047   00FBB7  75                 	db	117
 21048   00FBB8  6D                 	db	109
 21049   00FBB9  20                 	db	32
 21050   00FBBA  65                 	db	101
 21051   00FBBB  72                 	db	114
 21052   00FBBC  72                 	db	114
 21053   00FBBD  6F                 	db	111
 21054   00FBBE  72                 	db	114
 21055   00FBBF  20                 	db	32
 21056   00FBC0  25                 	db	37
 21057   00FBC1  64                 	db	100
 21058   00FBC2  20                 	db	32
 21059   00FBC3  20                 	db	32
 21060   00FBC4  46                 	db	70
 21061   00FBC5  47                 	db	71
 21062   00FBC6  42                 	db	66
 21063   00FBC7  40                 	db	64
 21064   00FBC8  4D                 	db	77
 21065   00FBC9  43                 	db	67
 21066   00FBCA  48                 	db	72
 21067   00FBCB  50                 	db	80
 21068   00FBCC  20                 	db	32
 21069   00FBCD  25                 	db	37
 21070   00FBCE  73                 	db	115
 21071   00FBCF  00                 	db	0
 21072   00FBD0                     __end_of_msg0:
 21073                           	callstack 0
 21074   00FBD0                     _msg1:
 21075                           	callstack 0
 21076   00FBD0  4F                 	db	79
 21077   00FBD1  4E                 	db	78
 21078   00FBD2  4C                 	db	76
 21079   00FBD3  49                 	db	73
 21080   00FBD4  4E                 	db	78
 21081   00FBD5  45                 	db	69
 21082   00FBD6  20                 	db	32
 21083   00FBD7  41                 	db	65
 21084   00FBD8  6C                 	db	108
 21085   00FBD9  6C                 	db	108
 21086   00FBDA  20                 	db	32
 21087   00FBDB  25                 	db	37
 21088   00FBDC  64                 	db	100
 21089   00FBDD  2C                 	db	44
 21090   00FBDE  20                 	db	32
 21091   00FBDF  52                 	db	82
 21092   00FBE0  65                 	db	101
 21093   00FBE1  61                 	db	97
 21094   00FBE2  64                 	db	100
 21095   00FBE3  20                 	db	32
 21096   00FBE4  25                 	db	37
 21097   00FBE5  64                 	db	100
 21098   00FBE6  20                 	db	32
 21099   00FBE7  46                 	db	70
 21100   00FBE8  61                 	db	97
 21101   00FBE9  69                 	db	105
 21102   00FBEA  6C                 	db	108
 21103   00FBEB  65                 	db	101
 21104   00FBEC  64                 	db	100
 21105   00FBED  20                 	db	32
 21106   00FBEE  25                 	db	37
 21107   00FBEF  64                 	db	100
 21108   00FBF0  2C                 	db	44
 21109   00FBF1  20                 	db	32
 21110   00FBF2  54                 	db	84
 21111   00FBF3  72                 	db	114
 21112   00FBF4  61                 	db	97
 21113   00FBF5  6E                 	db	110
 21114   00FBF6  73                 	db	115
 21115   00FBF7  6D                 	db	109
 21116   00FBF8  69                 	db	105
 21117   00FBF9  74                 	db	116
 21118   00FBFA  20                 	db	32
 21119   00FBFB  25                 	db	37
 21120   00FBFC  64                 	db	100
 21121   00FBFD  20                 	db	32
 21122   00FBFE  46                 	db	70
 21123   00FBFF  61                 	db	97
 21124   00FC00  69                 	db	105
 21125   00FC01  6C                 	db	108
 21126   00FC02  65                 	db	101
 21127   00FC03  64                 	db	100
 21128   00FC04  20                 	db	32
 21129   00FC05  25                 	db	37
 21130   00FC06  64                 	db	100
 21131   00FC07  2C                 	db	44
 21132   00FC08  20                 	db	32
 21133   00FC09  43                 	db	67
 21134   00FC0A  68                 	db	104
 21135   00FC0B  65                 	db	101
 21136   00FC0C  63                 	db	99
 21137   00FC0D  6B                 	db	107
 21138   00FC0E  73                 	db	115
 21139   00FC0F  75                 	db	117
 21140   00FC10  6D                 	db	109
 21141   00FC11  20                 	db	32
 21142   00FC12  65                 	db	101
 21143   00FC13  72                 	db	114
 21144   00FC14  72                 	db	114
 21145   00FC15  6F                 	db	111
 21146   00FC16  72                 	db	114
 21147   00FC17  20                 	db	32
 21148   00FC18  25                 	db	37
 21149   00FC19  64                 	db	100
 21150   00FC1A  20                 	db	32
 21151   00FC1B  20                 	db	32
 21152   00FC1C  46                 	db	70
 21153   00FC1D  47                 	db	71
 21154   00FC1E  42                 	db	66
 21155   00FC1F  40                 	db	64
 21156   00FC20  4D                 	db	77
 21157   00FC21  43                 	db	67
 21158   00FC22  48                 	db	72
 21159   00FC23  50                 	db	80
 21160   00FC24  20                 	db	32
 21161   00FC25  25                 	db	37
 21162   00FC26  73                 	db	115
 21163   00FC27  00                 	db	0
 21164   00FC28                     __end_of_msg1:
 21165                           	callstack 0
 21166   00FC28                     _msg2:
 21167                           	callstack 0
 21168   00FC28  43                 	db	67
 21169   00FC29  4F                 	db	79
 21170   00FC2A  4D                 	db	77
 21171   00FC2B  4D                 	db	77
 21172   00FC2C  20                 	db	32
 21173   00FC2D  41                 	db	65
 21174   00FC2E  6C                 	db	108
 21175   00FC2F  6C                 	db	108
 21176   00FC30  20                 	db	32
 21177   00FC31  25                 	db	37
 21178   00FC32  64                 	db	100
 21179   00FC33  2C                 	db	44
 21180   00FC34  20                 	db	32
 21181   00FC35  52                 	db	82
 21182   00FC36  65                 	db	101
 21183   00FC37  61                 	db	97
 21184   00FC38  64                 	db	100
 21185   00FC39  20                 	db	32
 21186   00FC3A  25                 	db	37
 21187   00FC3B  64                 	db	100
 21188   00FC3C  20                 	db	32
 21189   00FC3D  46                 	db	70
 21190   00FC3E  61                 	db	97
 21191   00FC3F  69                 	db	105
 21192   00FC40  6C                 	db	108
 21193   00FC41  65                 	db	101
 21194   00FC42  64                 	db	100
 21195   00FC43  20                 	db	32
 21196   00FC44  25                 	db	37
 21197   00FC45  64                 	db	100
 21198   00FC46  2C                 	db	44
 21199   00FC47  20                 	db	32
 21200   00FC48  54                 	db	84
 21201   00FC49  72                 	db	114
 21202   00FC4A  61                 	db	97
 21203   00FC4B  6E                 	db	110
 21204   00FC4C  73                 	db	115
 21205   00FC4D  6D                 	db	109
 21206   00FC4E  69                 	db	105
 21207   00FC4F  74                 	db	116
 21208   00FC50  20                 	db	32
 21209   00FC51  25                 	db	37
 21210   00FC52  64                 	db	100
 21211   00FC53  20                 	db	32
 21212   00FC54  46                 	db	70
 21213   00FC55  61                 	db	97
 21214   00FC56  69                 	db	105
 21215   00FC57  6C                 	db	108
 21216   00FC58  65                 	db	101
 21217   00FC59  64                 	db	100
 21218   00FC5A  20                 	db	32
 21219   00FC5B  25                 	db	37
 21220   00FC5C  64                 	db	100
 21221   00FC5D  2C                 	db	44
 21222   00FC5E  20                 	db	32
 21223   00FC5F  43                 	db	67
 21224   00FC60  68                 	db	104
 21225   00FC61  65                 	db	101
 21226   00FC62  63                 	db	99
 21227   00FC63  6B                 	db	107
 21228   00FC64  73                 	db	115
 21229   00FC65  75                 	db	117
 21230   00FC66  6D                 	db	109
 21231   00FC67  20                 	db	32
 21232   00FC68  65                 	db	101
 21233   00FC69  72                 	db	114
 21234   00FC6A  72                 	db	114
 21235   00FC6B  6F                 	db	111
 21236   00FC6C  72                 	db	114
 21237   00FC6D  20                 	db	32
 21238   00FC6E  25                 	db	37
 21239   00FC6F  64                 	db	100
 21240   00FC70  20                 	db	32
 21241   00FC71  20                 	db	32
 21242   00FC72  46                 	db	70
 21243   00FC73  47                 	db	71
 21244   00FC74  42                 	db	66
 21245   00FC75  40                 	db	64
 21246   00FC76  4D                 	db	77
 21247   00FC77  43                 	db	67
 21248   00FC78  48                 	db	72
 21249   00FC79  50                 	db	80
 21250   00FC7A  20                 	db	32
 21251   00FC7B  25                 	db	37
 21252   00FC7C  73                 	db	115
 21253   00FC7D  00                 	db	0
 21254   00FC7E                     __end_of_msg2:
 21255                           	callstack 0
 21256   00FC7E                     _msg99:
 21257                           	callstack 0
 21258   00FC7E  55                 	db	85
 21259   00FC7F  4E                 	db	78
 21260   00FC80  4B                 	db	75
 21261   00FC81  20                 	db	32
 21262   00FC82  46                 	db	70
 21263   00FC83  4F                 	db	79
 21264   00FC84  52                 	db	82
 21265   00FC85  4D                 	db	77
 21266   00FC86  41                 	db	65
 21267   00FC87  54                 	db	84
 21268   00FC88  20                 	db	32
 21269   00FC89  41                 	db	65
 21270   00FC8A  6C                 	db	108
 21271   00FC8B  6C                 	db	108
 21272   00FC8C  20                 	db	32
 21273   00FC8D  25                 	db	37
 21274   00FC8E  64                 	db	100
 21275   00FC8F  2C                 	db	44
 21276   00FC90  20                 	db	32
 21277   00FC91  52                 	db	82
 21278   00FC92  25                 	db	37
 21279   00FC93  64                 	db	100
 21280   00FC94  20                 	db	32
 21281   00FC95  46                 	db	70
 21282   00FC96  25                 	db	37
 21283   00FC97  64                 	db	100
 21284   00FC98  2C                 	db	44
 21285   00FC99  20                 	db	32
 21286   00FC9A  54                 	db	84
 21287   00FC9B  25                 	db	37
 21288   00FC9C  64                 	db	100
 21289   00FC9D  20                 	db	32
 21290   00FC9E  46                 	db	70
 21291   00FC9F  25                 	db	37
 21292   00FCA0  64                 	db	100
 21293   00FCA1  2C                 	db	44
 21294   00FCA2  20                 	db	32
 21295   00FCA3  43                 	db	67
 21296   00FCA4  25                 	db	37
 21297   00FCA5  64                 	db	100
 21298   00FCA6  20                 	db	32
 21299   00FCA7  46                 	db	70
 21300   00FCA8  47                 	db	71
 21301   00FCA9  42                 	db	66
 21302   00FCAA  40                 	db	64
 21303   00FCAB  4D                 	db	77
 21304   00FCAC  43                 	db	67
 21305   00FCAD  48                 	db	72
 21306   00FCAE  50                 	db	80
 21307   00FCAF  20                 	db	32
 21308   00FCB0  25                 	db	37
 21309   00FCB1  73                 	db	115
 21310   00FCB2  20                 	db	32
 21311   00FCB3  20                 	db	32
 21312   00FCB4  20                 	db	32
 21313   00FCB5  00                 	db	0
 21314   00FCB6                     __end_of_msg99:
 21315                           	callstack 0
 21316   00389D                     _IVTADL         set	14493
 21317   00389E                     _IVTADH         set	14494
 21318   00389F                     _IVTADU         set	14495
 21319   0039A4                     _PIR4bits       set	14756
 21320   003998                     _PIE8bits       set	14744
 21321   0039A8                     _PIR8bits       set	14760
 21322   0039E6                     _NVMCON2        set	14822
 21323   0039E3                     _NVMDAT         set	14819
 21324   0039E0                     _NVMADRL        set	14816
 21325   0039E1                     _NVMADRH        set	14817
 21326   0039E5                     _NVMCON1bits    set	14821
 21327   0039F7                     _SCANPR         set	14839
 21328   0039F4                     _DMA2PR         set	14836
 21329   0039F3                     _DMA1PR         set	14835
 21330   0039F2                     _MAINPR         set	14834
 21331   0039F1                     _ISRPR          set	14833
 21332   003992                     _PIE2bits       set	14738
 21333   0039A2                     _PIR2bits       set	14754
 21334   003999                     _PIE9bits       set	14745
 21335   0039A9                     _PIR9bits       set	14761
 21336   003996                     _PIE6bits       set	14742
 21337   003993                     _PIE3bits       set	14739
 21338   0039C7                     _PMD7           set	14791
 21339   0039C6                     _PMD6           set	14790
 21340   0039C5                     _PMD5           set	14789
 21341   0039C4                     _PMD4           set	14788
 21342   0039C3                     _PMD3           set	14787
 21343   0039C2                     _PMD2           set	14786
 21344   0039C1                     _PMD1           set	14785
 21345   0039C0                     _PMD0           set	14784
 21346   0039DE                     _OSCTUNE        set	14814
 21347   0039DF                     _OSCFRQ         set	14815
 21348   0039DD                     _OSCEN          set	14813
 21349   0039DB                     _OSCCON3        set	14811
 21350   0039D9                     _OSCCON1        set	14809
 21351   003988                     _IPR8bits       set	14728
 21352   003989                     _IPR9bits       set	14729
 21353   003987                     _IPR7bits       set	14727
 21354   003985                     _IPR5bits       set	14725
 21355   003981                     _IPR1bits       set	14721
 21356   003983                     _IPR3bits       set	14723
 21357   003986                     _IPR6bits       set	14726
 21358   003982                     _IPR2bits       set	14722
 21359   003997                     _PIE7bits       set	14743
 21360   003995                     _PIE5bits       set	14741
 21361   003991                     _PIE1bits       set	14737
 21362   0039A7                     _PIR7bits       set	14759
 21363   0039A5                     _PIR5bits       set	14757
 21364   0039A1                     _PIR1bits       set	14753
 21365   01CEE0                     _PLLR           set	118496
 21366   003ADF                     _SPI1SDIPPS     set	15071
 21367   003A16                     _RC6PPS         set	14870
 21368   003A15                     _RC5PPS         set	14869
 21369   003A19                     _RD1PPS         set	14873
 21370   003A06                     _RA6PPS         set	14854
 21371   003A05                     _RA5PPS         set	14853
 21372   003A04                     _RA4PPS         set	14852
 21373   003ADE                     _SPI1SCKPPS     set	15070
 21374   003AE5                     _U1RXPPS        set	15077
 21375   003AC1                     _INT1PPS        set	15041
 21376   003AC2                     _INT2PPS        set	15042
 21377   003AC0                     _INT0PPS        set	15040
 21378   003A13                     _RC3PPS         set	14867
 21379   003A0E                     _RB6PPS         set	14862
 21380   003AE8                     _U2RXPPS        set	15080
 21381   003A93                     _SLRCONF        set	14995
 21382   003A83                     _SLRCONE        set	14979
 21383   003A73                     _SLRCOND        set	14963
 21384   003A63                     _SLRCONC        set	14947
 21385   003A53                     _SLRCONB        set	14931
 21386   003A43                     _SLRCONA        set	14915
 21387   003A72                     _ODCOND         set	14962
 21388   003A62                     _ODCONC         set	14946
 21389   003A52                     _ODCONB         set	14930
 21390   003A42                     _ODCONA         set	14914
 21391   003A92                     _ODCONF         set	14994
 21392   003A82                     _ODCONE         set	14978
 21393   003A61                     _WPUC           set	14945
 21394   003A41                     _WPUA           set	14913
 21395   003A51                     _WPUB           set	14929
 21396   003A81                     _WPUE           set	14977
 21397   003A91                     _WPUF           set	14993
 21398   003A71                     _WPUD           set	14961
 21399   003A40                     _ANSELA         set	14912
 21400   003A90                     _ANSELF         set	14992
 21401   003A80                     _ANSELE         set	14976
 21402   003A50                     _ANSELB         set	14928
 21403   003A60                     _ANSELC         set	14944
 21404   003A70                     _ANSELD         set	14960
 21405   003BD9                     _DMA2SSA        set	15321
 21406   003BF9                     _DMA1SSA        set	15353
 21407   003BCE                     _DMA2DSZ        set	15310
 21408   003BD7                     _DMA2SSZ        set	15319
 21409   003BD0                     _DMA2DSA        set	15312
 21410   003BEE                     _DMA1DSZ        set	15342
 21411   003BF7                     _DMA1SSZ        set	15351
 21412   003BF0                     _DMA1DSA        set	15344
 21413   003BFC                     _DMA1CON0bits   set	15356
 21414   003BFD                     _DMA1CON1bits   set	15357
 21415   003BDC                     _DMA2CON0       set	15324
 21416   003BDE                     _DMA2AIRQ       set	15326
 21417   003BDF                     _DMA2SIRQ       set	15327
 21418   003BDD                     _DMA2CON1       set	15325
 21419   003BFC                     _DMA1CON0       set	15356
 21420   003BFE                     _DMA1AIRQ       set	15358
 21421   003BFF                     _DMA1SIRQ       set	15359
 21422   003BFD                     _DMA1CON1       set	15357
 21423   003C74                     _CLC1CON        set	15476
 21424   003C7D                     _CLC1GLS3       set	15485
 21425   003C7C                     _CLC1GLS2       set	15484
 21426   003C7B                     _CLC1GLS1       set	15483
 21427   003C7A                     _CLC1GLS0       set	15482
 21428   003C79                     _CLC1SEL3       set	15481
 21429   003C78                     _CLC1SEL2       set	15480
 21430   003C77                     _CLC1SEL1       set	15479
 21431   003C76                     _CLC1SEL0       set	15478
 21432   003C75                     _CLC1POL        set	15477
 21433   003CE5                     _CLKRCON        set	15589
 21434   003CE6                     _CLKRCLK        set	15590
 21435   003CFD                     _MD1CARL        set	15613
 21436   003CFE                     _MD1CARH        set	15614
 21437   003CFC                     _MD1SRC         set	15612
 21438   003CFB                     _MD1CON1bits    set	15611
 21439   003CFA                     _MD1CON0bits    set	15610
 21440   003D1A                     _SPI1INTFbits   set	15642
 21441   003D10                     _SPI1RXB        set	15632
 21442   003D11                     _SPI1TXB        set	15633
 21443   003D12                     _SPI1TCNTL      set	15634
 21444   003D14                     _SPI1CON0       set	15636
 21445   003D1C                     _SPI1CLK        set	15644
 21446   003D19                     _SPI1BAUD       set	15641
 21447   003D16                     _SPI1CON2       set	15638
 21448   003D15                     _SPI1CON1       set	15637
 21449   003DD0                     _U2RXB          set	15824
 21450   003DD2                     _U2TXB          set	15826
 21451   003DE2                     _U2ERRIE        set	15842
 21452   003DE1                     _U2ERRIR        set	15841
 21453   003DE0                     _U2UIR          set	15840
 21454   003DDF                     _U2FIFO         set	15839
 21455   003DDE                     _U2BRGH         set	15838
 21456   003DDD                     _U2BRGL         set	15837
 21457   003DDC                     _U2CON2         set	15836
 21458   003DDB                     _U2CON1         set	15835
 21459   003DDA                     _U2CON0         set	15834
 21460   003DD8                     _U2P3L          set	15832
 21461   003DD6                     _U2P2L          set	15830
 21462   003DD4                     _U2P1L          set	15828
 21463   003DE8                     _U1RXB          set	15848
 21464   003DEA                     _U1TXB          set	15850
 21465   003DFA                     _U1ERRIE        set	15866
 21466   003DF9                     _U1ERRIR        set	15865
 21467   003DF8                     _U1UIR          set	15864
 21468   003DF7                     _U1FIFO         set	15863
 21469   003DF6                     _U1BRGH         set	15862
 21470   003DF5                     _U1BRGL         set	15861
 21471   003DF4                     _U1CON2         set	15860
 21472   003DF3                     _U1CON1         set	15859
 21473   003DF2                     _U1CON0         set	15858
 21474   003DF1                     _U1P3H          set	15857
 21475   003DF0                     _U1P3L          set	15856
 21476   003DEF                     _U1P2H          set	15855
 21477   003DEE                     _U1P2L          set	15854
 21478   003DED                     _U1P1H          set	15853
 21479   003DEC                     _U1P1L          set	15852
 21480   003EF8                     _ADCON0         set	16120
 21481   003EFF                     _ADCLK          set	16127
 21482   003EFE                     _ADACT          set	16126
 21483   003EFD                     _ADREF          set	16125
 21484   003EFC                     _ADSTAT         set	16124
 21485   003EFB                     _ADCON3         set	16123
 21486   003EFA                     _ADCON2         set	16122
 21487   003EF9                     _ADCON1         set	16121
 21488   003EF7                     _ADPREH         set	16119
 21489   003EF6                     _ADPREL         set	16118
 21490   003EF5                     _ADCAP          set	16117
 21491   003EF4                     _ADACQH         set	16116
 21492   003EF3                     _ADACQL         set	16115
 21493   003EF1                     _ADPCH          set	16113
 21494   003EEC                     _ADRPT          set	16108
 21495   003EEA                     _ADACCU         set	16106
 21496   003EE5                     _ADSTPTH        set	16101
 21497   003EE4                     _ADSTPTL        set	16100
 21498   003EE1                     _ADUTHH         set	16097
 21499   003EE0                     _ADUTHL         set	16096
 21500   003EDF                     _ADLTHH         set	16095
 21501   003EDE                     _ADLTHL         set	16094
 21502   003F5F                     _CCPTMRS1bits   set	16223
 21503   003F3E                     _NCO1CONbits    set	16190
 21504   003F3B                     _NCO1INCL       set	16187
 21505   003F3C                     _NCO1INCH       set	16188
 21506   003F3D                     _NCO1INCU       set	16189
 21507   003F38                     _NCO1ACCL       set	16184
 21508   003F39                     _NCO1ACCH       set	16185
 21509   003F3A                     _NCO1ACCU       set	16186
 21510   003F3F                     _NCO1CLK        set	16191
 21511   003F3E                     _NCO1CON        set	16190
 21512   003FBB                     _LATBbits       set	16315
 21513   003FBC                     _LATCbits       set	16316
 21514   003FBF                     _LATFbits       set	16319
 21515   003FBD                     _LATDbits       set	16317
 21516   003FCB                     _PORTBbits      set	16331
 21517   003FAC                     _T2CON          set	16300
 21518   003FAA                     _T2TMR          set	16298
 21519   003FAB                     _T2PR           set	16299
 21520   003FAF                     _T2RST          set	16303
 21521   003FAD                     _T2HLT          set	16301
 21522   003FAE                     _T2CLKCON       set	16302
 21523   003F60                     _PWM8DCL        set	16224
 21524   003F61                     _PWM8DCH        set	16225
 21525   003F62                     _PWM8CON        set	16226
 21526   003F9A                     _T5CONbits      set	16282
 21527   003F9A                     _T5CON          set	16282
 21528   003F98                     _TMR5L          set	16280
 21529   003F99                     _TMR5H          set	16281
 21530   003F9D                     _T5CLK          set	16285
 21531   003F9C                     _T5GATE         set	16284
 21532   003F9B                     _T5GCON         set	16283
 21533   003F94                     _T6CON          set	16276
 21534   003F92                     _T6TMR          set	16274
 21535   003F93                     _T6PR           set	16275
 21536   003F97                     _T6RST          set	16279
 21537   003F95                     _T6HLT          set	16277
 21538   003F96                     _T6CLKCON       set	16278
 21539   003FBE                     _LATEbits       set	16318
 21540   003FC5                     _TRISD          set	16325
 21541   003FC4                     _TRISC          set	16324
 21542   003FC3                     _TRISB          set	16323
 21543   003FC2                     _TRISA          set	16322
 21544   003FC7                     _TRISF          set	16327
 21545   003FC6                     _TRISE          set	16326
 21546   003FBC                     _LATC           set	16316
 21547   003FBB                     _LATB           set	16315
 21548   003FBF                     _LATF           set	16319
 21549   003FBA                     _LATA           set	16314
 21550   003FBD                     _LATD           set	16317
 21551   003FBE                     _LATE           set	16318
 21552   003FD4                     _IVTLOCKbits    set	16340
 21553   003FD4                     _IVTLOCK        set	16340
 21554   003FD2                     _INTCON0bits    set	16338
 21555   01FE97                     _GIE            set	130711
 21556   00FCB6                     STR_25:
 21557   00FCB6  52                 	db	82	;'R'
 21558   00FCB7  25                 	db	37
 21559   00FCB8  64                 	db	100	;'d'
 21560   00FCB9  20                 	db	32
 21561   00FCBA  25                 	db	37
 21562   00FCBB  64                 	db	100	;'d'
 21563   00FCBC  2C                 	db	44
 21564   00FCBD  20                 	db	32
 21565   00FCBE  54                 	db	84	;'T'
 21566   00FCBF  25                 	db	37
 21567   00FCC0  64                 	db	100	;'d'
 21568   00FCC1  20                 	db	32
 21569   00FCC2  25                 	db	37
 21570   00FCC3  64                 	db	100	;'d'
 21571   00FCC4  20                 	db	32
 21572   00FCC5  43                 	db	67	;'C'
 21573   00FCC6  25                 	db	37
 21574   00FCC7  64                 	db	100	;'d'
 21575   00FCC8  20                 	db	32
 21576   00FCC9  25                 	db	37
 21577   00FCCA  64                 	db	100	;'d'
 21578   00FCCB  20                 	db	32
 21579   00FCCC  20                 	db	32
 21580   00FCCD  20                 	db	32
 21581   00FCCE  20                 	db	32
 21582   00FCCF  20                 	db	32
 21583   00FCD0  20                 	db	32
 21584   00FCD1  23                 	db	35
 21585   00FCD2  00                 	db	0
 21586   00FCD3                     STR_61:
 21587   00FCD3  20                 	db	32
 21588   00FCD4  54                 	db	84	;'T'
 21589   00FCD5  65                 	db	101	;'e'
 21590   00FCD6  72                 	db	114	;'r'
 21591   00FCD7  6D                 	db	109	;'m'
 21592   00FCD8  69                 	db	105	;'i'
 21593   00FCD9  6E                 	db	110	;'n'
 21594   00FCDA  61                 	db	97	;'a'
 21595   00FCDB  6C                 	db	108	;'l'
 21596   00FCDC  20                 	db	32
 21597   00FCDD  25                 	db	37
 21598   00FCDE  64                 	db	100	;'d'
 21599   00FCDF  20                 	db	32
 21600   00FCE0  20                 	db	32
 21601   00FCE1  20                 	db	32
 21602   00FCE2  20                 	db	32
 21603   00FCE3  20                 	db	32
 21604   00FCE4  20                 	db	32
 21605   00FCE5  20                 	db	32
 21606   00FCE6  20                 	db	32
 21607   00FCE7  20                 	db	32
 21608   00FCE8  20                 	db	32
 21609   00FCE9  20                 	db	32
 21610   00FCEA  20                 	db	32
 21611   00FCEB  20                 	db	32
 21612   00FCEC  00                 	db	0
 21613   00FCED                     STR_35:
 21614   00FCED  20                 	db	32
 21615   00FCEE  44                 	db	68	;'D'
 21616   00FCEF  65                 	db	101	;'e'
 21617   00FCF0  62                 	db	98	;'b'
 21618   00FCF1  75                 	db	117	;'u'
 21619   00FCF2  67                 	db	103	;'g'
 21620   00FCF3  20                 	db	32
 21621   00FCF4  54                 	db	84	;'T'
 21622   00FCF5  6F                 	db	111	;'o'
 21623   00FCF6  67                 	db	103	;'g'
 21624   00FCF7  67                 	db	103	;'g'
 21625   00FCF8  6C                 	db	108	;'l'
 21626   00FCF9  65                 	db	101	;'e'
 21627   00FCFA  20                 	db	32
 21628   00FCFB  20                 	db	32
 21629   00FCFC  20                 	db	32
 21630   00FCFD  20                 	db	32
 21631   00FCFE  20                 	db	32
 21632   00FCFF  20                 	db	32
 21633   00FD00  20                 	db	32
 21634   00FD01  20                 	db	32
 21635   00FD02  20                 	db	32
 21636   00FD03  20                 	db	32
 21637   00FD04  20                 	db	32
 21638   00FD05  20                 	db	32
 21639   00FD06  00                 	db	0
 21640   00FD07                     STR_34:
 21641   00FD07  20                 	db	32
 21642   00FD08  4C                 	db	76	;'L'
 21643   00FD09  6F                 	db	111	;'o'
 21644   00FD0A  67                 	db	103	;'g'
 21645   00FD0B  20                 	db	32
 21646   00FD0C  66                 	db	102	;'f'
 21647   00FD0D  69                 	db	105	;'i'
 21648   00FD0E  6C                 	db	108	;'l'
 21649   00FD0F  65                 	db	101	;'e'
 21650   00FD10  20                 	db	32
 21651   00FD11  72                 	db	114	;'r'
 21652   00FD12  65                 	db	101	;'e'
 21653   00FD13  73                 	db	115	;'s'
 21654   00FD14  65                 	db	101	;'e'
 21655   00FD15  74                 	db	116	;'t'
 21656   00FD16  20                 	db	32
 21657   00FD17  20                 	db	32
 21658   00FD18  20                 	db	32
 21659   00FD19  20                 	db	32
 21660   00FD1A  20                 	db	32
 21661   00FD1B  20                 	db	32
 21662   00FD1C  20                 	db	32
 21663   00FD1D  20                 	db	32
 21664   00FD1E  20                 	db	32
 21665   00FD1F  20                 	db	32
 21666   00FD20  00                 	db	0
 21667   00FD21                     STR_20:
 21668   00FD21  4C                 	db	76	;'L'
 21669   00FD22  4F                 	db	79	;'O'
 21670   00FD23  47                 	db	71	;'G'
 21671   00FD24  3A                 	db	58	;':'
 21672   00FD25  20                 	db	32
 21673   00FD26  55                 	db	85	;'U'
 21674   00FD27  25                 	db	37
 21675   00FD28  64                 	db	100	;'d'
 21676   00FD29  20                 	db	32
 21677   00FD2A  47                 	db	71	;'G'
 21678   00FD2B  25                 	db	37
 21679   00FD2C  64                 	db	100	;'d'
 21680   00FD2D  20                 	db	32
 21681   00FD2E  25                 	db	37
 21682   00FD2F  64                 	db	100	;'d'
 21683   00FD30  20                 	db	32
 21684   00FD31  25                 	db	37
 21685   00FD32  64                 	db	100	;'d'
 21686   00FD33  20                 	db	32
 21687   00FD34  20                 	db	32
 21688   00FD35  20                 	db	32
 21689   00FD36  20                 	db	32
 21690   00FD37  20                 	db	32
 21691   00FD38  20                 	db	32
 21692   00FD39  23                 	db	35
 21693   00FD3A  00                 	db	0
 21694   00FD3B                     STR_62:
 21695   00FD3B  20                 	db	32
 21696   00FD3C  43                 	db	67	;'C'
 21697   00FD3D  4D                 	db	77	;'M'
 21698   00FD3E  44                 	db	68	;'D'
 21699   00FD3F  20                 	db	32
 21700   00FD40  25                 	db	37
 21701   00FD41  63                 	db	99	;'c'
 21702   00FD42  20                 	db	32
 21703   00FD43  25                 	db	37
 21704   00FD44  63                 	db	99	;'c'
 21705   00FD45  20                 	db	32
 21706   00FD46  4C                 	db	76	;'L'
 21707   00FD47  65                 	db	101	;'e'
 21708   00FD48  6E                 	db	110	;'n'
 21709   00FD49  20                 	db	32
 21710   00FD4A  25                 	db	37
 21711   00FD4B  64                 	db	100	;'d'
 21712   00FD4C  20                 	db	32
 21713   00FD4D  20                 	db	32
 21714   00FD4E  20                 	db	32
 21715   00FD4F  20                 	db	32
 21716   00FD50  20                 	db	32
 21717   00FD51  20                 	db	32
 21718   00FD52  20                 	db	32
 21719   00FD53  00                 	db	0
 21720   00FD54                     STR_46:
 21721   00FD54  20                 	db	32
 21722   00FD55  4D                 	db	77	;'M'
 21723   00FD56  65                 	db	101	;'e'
 21724   00FD57  73                 	db	115	;'s'
 21725   00FD58  67                 	db	103	;'g'
 21726   00FD59  20                 	db	32
 21727   00FD5A  25                 	db	37
 21728   00FD5B  64                 	db	100	;'d'
 21729   00FD5C  20                 	db	32
 21730   00FD5D  53                 	db	83	;'S'
 21731   00FD5E  74                 	db	116	;'t'
 21732   00FD5F  61                 	db	97	;'a'
 21733   00FD60  63                 	db	99	;'c'
 21734   00FD61  6B                 	db	107	;'k'
 21735   00FD62  20                 	db	32
 21736   00FD63  25                 	db	37
 21737   00FD64  64                 	db	100	;'d'
 21738   00FD65  20                 	db	32
 21739   00FD66  20                 	db	32
 21740   00FD67  20                 	db	32
 21741   00FD68  20                 	db	32
 21742   00FD69  20                 	db	32
 21743   00FD6A  20                 	db	32
 21744   00FD6B  00                 	db	0
 21745   00FD6C                     STR_57:
 21746   00FD6C  20                 	db	32
 21747   00FD6D  4C                 	db	76	;'L'
 21748   00FD6E  6F                 	db	111	;'o'
 21749   00FD6F  61                 	db	97	;'a'
 21750   00FD70  64                 	db	100	;'d'
 21751   00FD71  2D                 	db	45
 21752   00FD72  6C                 	db	108	;'l'
 21753   00FD73  6F                 	db	111	;'o'
 21754   00FD74  63                 	db	99	;'c'
 21755   00FD75  6B                 	db	107	;'k'
 21756   00FD76  20                 	db	32
 21757   00FD77  6E                 	db	110	;'n'
 21758   00FD78  75                 	db	117	;'u'
 21759   00FD79  6D                 	db	109	;'m'
 21760   00FD7A  20                 	db	32
 21761   00FD7B  25                 	db	37
 21762   00FD7C  64                 	db	100	;'d'
 21763   00FD7D  20                 	db	32
 21764   00FD7E  20                 	db	32
 21765   00FD7F  20                 	db	32
 21766   00FD80  20                 	db	32
 21767   00FD81  20                 	db	32
 21768   00FD82  20                 	db	32
 21769   00FD83  00                 	db	0
 21770   00FD84                     STR_14:
 21771   00FD84  20                 	db	32
 21772   00FD85  53                 	db	83	;'S'
 21773   00FD86  25                 	db	37
 21774   00FD87  64                 	db	100	;'d'
 21775   00FD88  46                 	db	70	;'F'
 21776   00FD89  25                 	db	37
 21777   00FD8A  64                 	db	100	;'d'
 21778   00FD8B  20                 	db	32
 21779   00FD8C  23                 	db	35
 21780   00FD8D  20                 	db	32
 21781   00FD8E  4F                 	db	79	;'O'
 21782   00FD8F  4B                 	db	75	;'K'
 21783   00FD90  20                 	db	32
 21784   00FD91  25                 	db	37
 21785   00FD92  64                 	db	100	;'d'
 21786   00FD93  20                 	db	32
 21787   00FD94  20                 	db	32
 21788   00FD95  20                 	db	32
 21789   00FD96  20                 	db	32
 21790   00FD97  20                 	db	32
 21791   00FD98  20                 	db	32
 21792   00FD99  20                 	db	32
 21793   00FD9A  20                 	db	32
 21794   00FD9B  00                 	db	0
 21795   00FD9C                     STR_13:
 21796   00FD9C  20                 	db	32
 21797   00FD9D  53                 	db	83	;'S'
 21798   00FD9E  25                 	db	37
 21799   00FD9F  64                 	db	100	;'d'
 21800   00FDA0  46                 	db	70	;'F'
 21801   00FDA1  25                 	db	37
 21802   00FDA2  64                 	db	100	;'d'
 21803   00FDA3  20                 	db	32
 21804   00FDA4  23                 	db	35
 21805   00FDA5  20                 	db	32
 21806   00FDA6  4F                 	db	79	;'O'
 21807   00FDA7  4B                 	db	75	;'K'
 21808   00FDA8  51                 	db	81	;'Q'
 21809   00FDA9  25                 	db	37
 21810   00FDAA  64                 	db	100	;'d'
 21811   00FDAB  20                 	db	32
 21812   00FDAC  20                 	db	32
 21813   00FDAD  20                 	db	32
 21814   00FDAE  20                 	db	32
 21815   00FDAF  20                 	db	32
 21816   00FDB0  20                 	db	32
 21817   00FDB1  20                 	db	32
 21818   00FDB2  20                 	db	32
 21819   00FDB3  00                 	db	0
 21820   00FDB4                     STR_59:
 21821   00FDB4  20                 	db	32
 21822   00FDB5  44                 	db	68	;'D'
 21823   00FDB6  69                 	db	105	;'i'
 21824   00FDB7  73                 	db	115	;'s'
 21825   00FDB8  70                 	db	112	;'p'
 21826   00FDB9  6C                 	db	108	;'l'
 21827   00FDBA  61                 	db	97	;'a'
 21828   00FDBB  79                 	db	121	;'y'
 21829   00FDBC  20                 	db	32
 21830   00FDBD  6E                 	db	110	;'n'
 21831   00FDBE  75                 	db	117	;'u'
 21832   00FDBF  6D                 	db	109	;'m'
 21833   00FDC0  20                 	db	32
 21834   00FDC1  25                 	db	37
 21835   00FDC2  64                 	db	100	;'d'
 21836   00FDC3  20                 	db	32
 21837   00FDC4  20                 	db	32
 21838   00FDC5  20                 	db	32
 21839   00FDC6  20                 	db	32
 21840   00FDC7  20                 	db	32
 21841   00FDC8  20                 	db	32
 21842   00FDC9  00                 	db	0
 21843   00FDCA                     STR_47:
 21844   00FDCA  20                 	db	32
 21845   00FDCB  53                 	db	83	;'S'
 21846   00FDCC  25                 	db	37
 21847   00FDCD  64                 	db	100	;'d'
 21848   00FDCE  46                 	db	70	;'F'
 21849   00FDCF  25                 	db	37
 21850   00FDD0  64                 	db	100	;'d'
 21851   00FDD1  20                 	db	32
 21852   00FDD2  6C                 	db	108	;'l'
 21853   00FDD3  6F                 	db	111	;'o'
 21854   00FDD4  67                 	db	103	;'g'
 21855   00FDD5  20                 	db	32
 21856   00FDD6  20                 	db	32
 21857   00FDD7  20                 	db	32
 21858   00FDD8  20                 	db	32
 21859   00FDD9  25                 	db	37
 21860   00FDDA  64                 	db	100	;'d'
 21861   00FDDB  20                 	db	32
 21862   00FDDC  20                 	db	32
 21863   00FDDD  20                 	db	32
 21864   00FDDE  20                 	db	32
 21865   00FDDF  00                 	db	0
 21866   00FDE0                     STR_58:
 21867   00FDE0  20                 	db	32
 21868   00FDE1  53                 	db	83	;'S'
 21869   00FDE2  45                 	db	69	;'E'
 21870   00FDE3  51                 	db	81	;'Q'
 21871   00FDE4  55                 	db	85	;'U'
 21872   00FDE5  45                 	db	69	;'E'
 21873   00FDE6  4E                 	db	78	;'N'
 21874   00FDE7  43                 	db	67	;'C'
 21875   00FDE8  45                 	db	69	;'E'
 21876   00FDE9  20                 	db	32
 21877   00FDEA  25                 	db	37
 21878   00FDEB  64                 	db	100	;'d'
 21879   00FDEC  20                 	db	32
 21880   00FDED  20                 	db	32
 21881   00FDEE  20                 	db	32
 21882   00FDEF  20                 	db	32
 21883   00FDF0  20                 	db	32
 21884   00FDF1  20                 	db	32
 21885   00FDF2  20                 	db	32
 21886   00FDF3  20                 	db	32
 21887   00FDF4  00                 	db	0
 21888   00FDF5                     STR_36:
 21889   00FDF5  53                 	db	83	;'S'
 21890   00FDF6  61                 	db	97	;'a'
 21891   00FDF7  76                 	db	118	;'v'
 21892   00FDF8  65                 	db	101	;'e'
 21893   00FDF9  64                 	db	100	;'d'
 21894   00FDFA  20                 	db	32
 21895   00FDFB  53                 	db	83	;'S'
 21896   00FDFC  25                 	db	37
 21897   00FDFD  64                 	db	100	;'d'
 21898   00FDFE  46                 	db	70	;'F'
 21899   00FDFF  25                 	db	37
 21900   00FE00  64                 	db	100	;'d'
 21901   00FE01  20                 	db	32
 21902   00FE02  25                 	db	37
 21903   00FE03  64                 	db	100	;'d'
 21904   00FE04  20                 	db	32
 21905   00FE05  20                 	db	32
 21906   00FE06  20                 	db	32
 21907   00FE07  20                 	db	32
 21908   00FE08  20                 	db	32
 21909   00FE09  00                 	db	0
 21910   00FE0A                     STR_12:
 21911   00FE0A  20                 	db	32
 21912   00FE0B  53                 	db	83	;'S'
 21913   00FE0C  25                 	db	37
 21914   00FE0D  64                 	db	100	;'d'
 21915   00FE0E  46                 	db	70	;'F'
 21916   00FE0F  25                 	db	37
 21917   00FE10  64                 	db	100	;'d'
 21918   00FE11  20                 	db	32
 21919   00FE12  23                 	db	35
 21920   00FE13  20                 	db	32
 21921   00FE14  20                 	db	32
 21922   00FE15  20                 	db	32
 21923   00FE16  20                 	db	32
 21924   00FE17  20                 	db	32
 21925   00FE18  20                 	db	32
 21926   00FE19  20                 	db	32
 21927   00FE1A  20                 	db	32
 21928   00FE1B  20                 	db	32
 21929   00FE1C  20                 	db	32
 21930   00FE1D  20                 	db	32
 21931   00FE1E  00                 	db	0
 21932   00FE1F                     STR_11:
 21933   00FE1F  20                 	db	32
 21934   00FE20  53                 	db	83	;'S'
 21935   00FE21  25                 	db	37
 21936   00FE22  64                 	db	100	;'d'
 21937   00FE23  46                 	db	70	;'F'
 21938   00FE24  25                 	db	37
 21939   00FE25  64                 	db	100	;'d'
 21940   00FE26  20                 	db	32
 21941   00FE27  45                 	db	69	;'E'
 21942   00FE28  72                 	db	114	;'r'
 21943   00FE29  72                 	db	114	;'r'
 21944   00FE2A  20                 	db	32
 21945   00FE2B  20                 	db	32
 21946   00FE2C  20                 	db	32
 21947   00FE2D  20                 	db	32
 21948   00FE2E  20                 	db	32
 21949   00FE2F  20                 	db	32
 21950   00FE30  20                 	db	32
 21951   00FE31  20                 	db	32
 21952   00FE32  20                 	db	32
 21953   00FE33  00                 	db	0
 21954   00FE34                     STR_23:
 21955   00FE34  45                 	db	69	;'E'
 21956   00FE35  71                 	db	113	;'q'
 21957   00FE36  75                 	db	117	;'u'
 21958   00FE37  69                 	db	105	;'i'
 21959   00FE38  70                 	db	112	;'p'
 21960   00FE39  20                 	db	32
 21961   00FE3A  74                 	db	116	;'t'
 21962   00FE3B  79                 	db	121	;'y'
 21963   00FE3C  70                 	db	112	;'p'
 21964   00FE3D  65                 	db	101	;'e'
 21965   00FE3E  20                 	db	32
 21966   00FE3F  25                 	db	37
 21967   00FE40  64                 	db	100	;'d'
 21968   00FE41  20                 	db	32
 21969   00FE42  20                 	db	32
 21970   00FE43  20                 	db	32
 21971   00FE44  20                 	db	32
 21972   00FE45  20                 	db	32
 21973   00FE46  20                 	db	32
 21974   00FE47  20                 	db	32
 21975   00FE48  00                 	db	0
 21976   00FE49                     STR_16:
 21977   00FE49  48                 	db	72	;'H'
 21978   00FE4A  32                 	db	50	;'2'
 21979   00FE4B  35                 	db	53	;'5'
 21980   00FE4C  34                 	db	52	;'4'
 21981   00FE4D  20                 	db	32
 21982   00FE4E  25                 	db	37
 21983   00FE4F  64                 	db	100	;'d'
 21984   00FE50  2C                 	db	44
 21985   00FE51  20                 	db	32
 21986   00FE52  54                 	db	84	;'T'
 21987   00FE53  25                 	db	37
 21988   00FE54  6C                 	db	108	;'l'
 21989   00FE55  64                 	db	100	;'d'
 21990   00FE56  20                 	db	32
 21991   00FE57  20                 	db	32
 21992   00FE58  20                 	db	32
 21993   00FE59  20                 	db	32
 21994   00FE5A  20                 	db	32
 21995   00FE5B  20                 	db	32
 21996   00FE5C  20                 	db	32
 21997   00FE5D  00                 	db	0
 21998   00FE5E                     STR_10:
 21999   00FE5E  48                 	db	72	;'H'
 22000   00FE5F  4F                 	db	79	;'O'
 22001   00FE60  53                 	db	83	;'S'
 22002   00FE61  54                 	db	84	;'T'
 22003   00FE62  3A                 	db	58	;':'
 22004   00FE63  20                 	db	32
 22005   00FE64  25                 	db	37
 22006   00FE65  6C                 	db	108	;'l'
 22007   00FE66  64                 	db	100	;'d'
 22008   00FE67  20                 	db	32
 22009   00FE68  47                 	db	71	;'G'
 22010   00FE69  25                 	db	37
 22011   00FE6A  64                 	db	100	;'d'
 22012   00FE6B  20                 	db	32
 22013   00FE6C  20                 	db	32
 22014   00FE6D  20                 	db	32
 22015   00FE6E  20                 	db	32
 22016   00FE6F  20                 	db	32
 22017   00FE70  20                 	db	32
 22018   00FE71  23                 	db	35
 22019   00FE72  00                 	db	0
 22020   00FE73                     STR_50:
 22021   00FE73  20                 	db	32
 22022   00FE74  53                 	db	83	;'S'
 22023   00FE75  32                 	db	50	;'2'
 22024   00FE76  46                 	db	70	;'F'
 22025   00FE77  34                 	db	52	;'4'
 22026   00FE78  31                 	db	49	;'1'
 22027   00FE79  20                 	db	32
 22028   00FE7A  23                 	db	35
 22029   00FE7B  25                 	db	37
 22030   00FE7C  63                 	db	99	;'c'
 22031   00FE7D  20                 	db	32
 22032   00FE7E  20                 	db	32
 22033   00FE7F  20                 	db	32
 22034   00FE80  20                 	db	32
 22035   00FE81  20                 	db	32
 22036   00FE82  20                 	db	32
 22037   00FE83  20                 	db	32
 22038   00FE84  20                 	db	32
 22039   00FE85  20                 	db	32
 22040   00FE86  00                 	db	0
 22041   00FE87                     STR_48:
 22042   00FE87  20                 	db	32
 22043   00FE88  53                 	db	83	;'S'
 22044   00FE89  74                 	db	116	;'t'
 22045   00FE8A  6F                 	db	111	;'o'
 22046   00FE8B  72                 	db	114	;'r'
 22047   00FE8C  65                 	db	101	;'e'
 22048   00FE8D  64                 	db	100	;'d'
 22049   00FE8E  20                 	db	32
 22050   00FE8F  23                 	db	35
 22051   00FE90  25                 	db	37
 22052   00FE91  64                 	db	100	;'d'
 22053   00FE92  20                 	db	32
 22054   00FE93  20                 	db	32
 22055   00FE94  20                 	db	32
 22056   00FE95  20                 	db	32
 22057   00FE96  20                 	db	32
 22058   00FE97  20                 	db	32
 22059   00FE98  20                 	db	32
 22060   00FE99  20                 	db	32
 22061   00FE9A  00                 	db	0
 22062   00FE9B                     STR_33:
 22063   00FE9B  20                 	db	32
 22064   00FE9C  54                 	db	84	;'T'
 22065   00FE9D  65                 	db	101	;'e'
 22066   00FE9E  72                 	db	114	;'r'
 22067   00FE9F  6D                 	db	109	;'m'
 22068   00FEA0  69                 	db	105	;'i'
 22069   00FEA1  6E                 	db	110	;'n'
 22070   00FEA2  61                 	db	97	;'a'
 22071   00FEA3  6C                 	db	108	;'l'
 22072   00FEA4  20                 	db	32
 22073   00FEA5  20                 	db	32
 22074   00FEA6  20                 	db	32
 22075   00FEA7  20                 	db	32
 22076   00FEA8  20                 	db	32
 22077   00FEA9  20                 	db	32
 22078   00FEAA  20                 	db	32
 22079   00FEAB  20                 	db	32
 22080   00FEAC  20                 	db	32
 22081   00FEAD  20                 	db	32
 22082   00FEAE  00                 	db	0
 22083   00FEAF                     STR_18:
 22084   00FEAF  50                 	db	80	;'P'
 22085   00FEB0  69                 	db	105	;'i'
 22086   00FEB1  6E                 	db	110	;'n'
 22087   00FEB2  67                 	db	103	;'g'
 22088   00FEB3  20                 	db	32
 22089   00FEB4  50                 	db	80	;'P'
 22090   00FEB5  25                 	db	37
 22091   00FEB6  64                 	db	100	;'d'
 22092   00FEB7  20                 	db	32
 22093   00FEB8  52                 	db	82	;'R'
 22094   00FEB9  54                 	db	84	;'T'
 22095   00FEBA  4F                 	db	79	;'O'
 22096   00FEBB  20                 	db	32
 22097   00FEBC  25                 	db	37
 22098   00FEBD  64                 	db	100	;'d'
 22099   00FEBE  20                 	db	32
 22100   00FEBF  20                 	db	32
 22101   00FEC0  20                 	db	32
 22102   00FEC1  20                 	db	32
 22103   00FEC2  00                 	db	0
 22104   00FEC3                     STR_63:
 22105   00FEC3  20                 	db	32
 22106   00FEC4  20                 	db	32
 22107   00FEC5  20                 	db	32
 22108   00FEC6  20                 	db	32
 22109   00FEC7  20                 	db	32
 22110   00FEC8  20                 	db	32
 22111   00FEC9  20                 	db	32
 22112   00FECA  20                 	db	32
 22113   00FECB  20                 	db	32
 22114   00FECC  20                 	db	32
 22115   00FECD  20                 	db	32
 22116   00FECE  20                 	db	32
 22117   00FECF  20                 	db	32
 22118   00FED0  20                 	db	32
 22119   00FED1  20                 	db	32
 22120   00FED2  20                 	db	32
 22121   00FED3  20                 	db	32
 22122   00FED4  20                 	db	32
 22123   00FED5  00                 	db	0
 22124   00FED6                     STR_39:
 22125   00FED6  48                 	db	72	;'H'
 22126   00FED7  45                 	db	69	;'E'
 22127   00FED8  4C                 	db	76	;'L'
 22128   00FED9  50                 	db	80	;'P'
 22129   00FEDA  20                 	db	32
 22130   00FEDB  25                 	db	37
 22131   00FEDC  73                 	db	115	;'s'
 22132   00FEDD  20                 	db	32
 22133   00FEDE  20                 	db	32
 22134   00FEDF  20                 	db	32
 22135   00FEE0  20                 	db	32
 22136   00FEE1  20                 	db	32
 22137   00FEE2  20                 	db	32
 22138   00FEE3  20                 	db	32
 22139   00FEE4  20                 	db	32
 22140   00FEE5  20                 	db	32
 22141   00FEE6  20                 	db	32
 22142   00FEE7  20                 	db	32
 22143   00FEE8  00                 	db	0
 22144   00FEE9                     STR_56:
 22145   00FEE9  44                 	db	68	;'D'
 22146   00FEEA  49                 	db	73	;'I'
 22147   00FEEB  53                 	db	83	;'S'
 22148   00FEEC  50                 	db	80	;'P'
 22149   00FEED  4C                 	db	76	;'L'
 22150   00FEEE  41                 	db	65	;'A'
 22151   00FEEF  59                 	db	89	;'Y'
 22152   00FEF0  20                 	db	32
 22153   00FEF1  25                 	db	37
 22154   00FEF2  73                 	db	115	;'s'
 22155   00FEF3  20                 	db	32
 22156   00FEF4  20                 	db	32
 22157   00FEF5  20                 	db	32
 22158   00FEF6  20                 	db	32
 22159   00FEF7  20                 	db	32
 22160   00FEF8  20                 	db	32
 22161   00FEF9  20                 	db	32
 22162   00FEFA  20                 	db	32
 22163   00FEFB  00                 	db	0
 22164   00FEFC                     STR_21:
 22165   00FEFC  53                 	db	83	;'S'
 22166   00FEFD  25                 	db	37
 22167   00FEFE  64                 	db	100	;'d'
 22168   00FEFF  46                 	db	70	;'F'
 22169   00FF00  25                 	db	37
 22170   00FF01  64                 	db	100	;'d'
 22171   00FF02  20                 	db	32
 22172   00FF03  23                 	db	35
 22173   00FF04  25                 	db	37
 22174   00FF05  6C                 	db	108	;'l'
 22175   00FF06  64                 	db	100	;'d'
 22176   00FF07  20                 	db	32
 22177   00FF08  20                 	db	32
 22178   00FF09  20                 	db	32
 22179   00FF0A  20                 	db	32
 22180   00FF0B  20                 	db	32
 22181   00FF0C  20                 	db	32
 22182   00FF0D  20                 	db	32
 22183   00FF0E  00                 	db	0
 22184   00FF0F                     STR_53:
 22185   00FF0F  20                 	db	32
 22186   00FF10  4F                 	db	79	;'O'
 22187   00FF11  70                 	db	112	;'p'
 22188   00FF12  65                 	db	101	;'e'
 22189   00FF13  6E                 	db	110	;'n'
 22190   00FF14  20                 	db	32
 22191   00FF15  4C                 	db	76	;'L'
 22192   00FF16  4C                 	db	76	;'L'
 22193   00FF17  20                 	db	32
 22194   00FF18  20                 	db	32
 22195   00FF19  20                 	db	32
 22196   00FF1A  20                 	db	32
 22197   00FF1B  20                 	db	32
 22198   00FF1C  20                 	db	32
 22199   00FF1D  20                 	db	32
 22200   00FF1E  20                 	db	32
 22201   00FF1F  20                 	db	32
 22202   00FF20  00                 	db	0
 22203   00FF21                     STR_51:
 22204   00FF21  20                 	db	32
 22205   00FF22  50                 	db	80	;'P'
 22206   00FF23  75                 	db	117	;'u'
 22207   00FF24  6D                 	db	109	;'m'
 22208   00FF25  70                 	db	112	;'p'
 22209   00FF26  20                 	db	32
 22210   00FF27  4C                 	db	76	;'L'
 22211   00FF28  4C                 	db	76	;'L'
 22212   00FF29  20                 	db	32
 22213   00FF2A  20                 	db	32
 22214   00FF2B  20                 	db	32
 22215   00FF2C  20                 	db	32
 22216   00FF2D  20                 	db	32
 22217   00FF2E  20                 	db	32
 22218   00FF2F  20                 	db	32
 22219   00FF30  20                 	db	32
 22220   00FF31  20                 	db	32
 22221   00FF32  00                 	db	0
 22222   00FF33                     STR_49:
 22223   00FF33  20                 	db	32
 22224   00FF34  52                 	db	82	;'R'
 22225   00FF35  65                 	db	101	;'e'
 22226   00FF36  61                 	db	97	;'a'
 22227   00FF37  64                 	db	100	;'d'
 22228   00FF38  79                 	db	121	;'y'
 22229   00FF39  20                 	db	32
 22230   00FF3A  4C                 	db	76	;'L'
 22231   00FF3B  4C                 	db	76	;'L'
 22232   00FF3C  20                 	db	32
 22233   00FF3D  20                 	db	32
 22234   00FF3E  20                 	db	32
 22235   00FF3F  20                 	db	32
 22236   00FF40  20                 	db	32
 22237   00FF41  20                 	db	32
 22238   00FF42  20                 	db	32
 22239   00FF43  20                 	db	32
 22240   00FF44  00                 	db	0
 22241   00FF45                     STR_15:
 22242   00FF45  45                 	db	69	;'E'
 22243   00FF46  25                 	db	37
 22244   00FF47  64                 	db	100	;'d'
 22245   00FF48  20                 	db	32
 22246   00FF49  41                 	db	65	;'A'
 22247   00FF4A  25                 	db	37
 22248   00FF4B  64                 	db	100	;'d'
 22249   00FF4C  20                 	db	32
 22250   00FF4D  54                 	db	84	;'T'
 22251   00FF4E  25                 	db	37
 22252   00FF4F  64                 	db	100	;'d'
 22253   00FF50  20                 	db	32
 22254   00FF51  47                 	db	71	;'G'
 22255   00FF52  25                 	db	37
 22256   00FF53  64                 	db	100	;'d'
 22257   00FF54  20                 	db	32
 22258   00FF55  23                 	db	35
 22259   00FF56  00                 	db	0
 22260   00FF57                     STR_8:
 22261   00FF57  20                 	db	32
 22262   00FF58  56                 	db	86	;'V'
 22263   00FF59  54                 	db	84	;'T'
 22264   00FF5A  45                 	db	69	;'E'
 22265   00FF5B  52                 	db	82	;'R'
 22266   00FF5C  4D                 	db	77	;'M'
 22267   00FF5D  20                 	db	32
 22268   00FF5E  23                 	db	35
 22269   00FF5F  32                 	db	50	;'2'
 22270   00FF60  20                 	db	32
 22271   00FF61  20                 	db	32
 22272   00FF62  20                 	db	32
 22273   00FF63  20                 	db	32
 22274   00FF64  20                 	db	32
 22275   00FF65  20                 	db	32
 22276   00FF66  20                 	db	32
 22277   00FF67  00                 	db	0
 22278   00FF68                     STR_4:
 22279   00FF68  20                 	db	32
 22280   00FF69  46                 	db	70	;'F'
 22281   00FF6A  47                 	db	71	;'G'
 22282   00FF6B  42                 	db	66	;'B'
 22283   00FF6C  40                 	db	64	;'@'
 22284   00FF6D  4D                 	db	77	;'M'
 22285   00FF6E  43                 	db	67	;'C'
 22286   00FF6F  48                 	db	72	;'H'
 22287   00FF70  50                 	db	80	;'P'
 22288   00FF71  20                 	db	32
 22289   00FF72  46                 	db	70	;'F'
 22290   00FF73  41                 	db	65	;'A'
 22291   00FF74  42                 	db	66	;'B'
 22292   00FF75  34                 	db	52	;'4'
 22293   00FF76  20                 	db	32
 22294   00FF77  20                 	db	32
 22295   00FF78  00                 	db	0
 22296   00FF79                     STR_5:
 22297   00FF79  20                 	db	32
 22298   00FF7A  53                 	db	83	;'S'
 22299   00FF7B  45                 	db	69	;'E'
 22300   00FF7C  51                 	db	81	;'Q'
 22301   00FF7D  55                 	db	85	;'U'
 22302   00FF7E  45                 	db	69	;'E'
 22303   00FF7F  4E                 	db	78	;'N'
 22304   00FF80  43                 	db	67	;'C'
 22305   00FF81  45                 	db	69	;'E'
 22306   00FF82  20                 	db	32
 22307   00FF83  54                 	db	84	;'T'
 22308   00FF84  45                 	db	69	;'E'
 22309   00FF85  53                 	db	83	;'S'
 22310   00FF86  54                 	db	84	;'T'
 22311   00FF87  20                 	db	32
 22312   00FF88  20                 	db	32
 22313   00FF89  00                 	db	0
 22314   00FF8A                     STR_1:
 22315   00FF8A  20                 	db	32
 22316   00FF8B  52                 	db	82	;'R'
 22317   00FF8C  56                 	db	86	;'V'
 22318   00FF8D  49                 	db	73	;'I'
 22319   00FF8E  20                 	db	32
 22320   00FF8F  48                 	db	72	;'H'
 22321   00FF90  4F                 	db	79	;'O'
 22322   00FF91  53                 	db	83	;'S'
 22323   00FF92  54                 	db	84	;'T'
 22324   00FF93  20                 	db	32
 22325   00FF94  54                 	db	84	;'T'
 22326   00FF95  45                 	db	69	;'E'
 22327   00FF96  53                 	db	83	;'S'
 22328   00FF97  54                 	db	84	;'T'
 22329   00FF98  45                 	db	69	;'E'
 22330   00FF99  52                 	db	82	;'R'
 22331   00FF9A  00                 	db	0
 22332   00FF9B                     STR_9:
 22333   00FF9B  48                 	db	72	;'H'
 22334   00FF9C  32                 	db	50	;'2'
 22335   00FF9D  35                 	db	53	;'5'
 22336   00FF9E  34                 	db	52	;'4'
 22337   00FF9F  20                 	db	32
 22338   00FFA0  25                 	db	37
 22339   00FFA1  64                 	db	100	;'d'
 22340   00FFA2  2C                 	db	44
 22341   00FFA3  20                 	db	32
 22342   00FFA4  54                 	db	84	;'T'
 22343   00FFA5  25                 	db	37
 22344   00FFA6  6C                 	db	108	;'l'
 22345   00FFA7  64                 	db	100	;'d'
 22346   00FFA8  20                 	db	32
 22347   00FFA9  20                 	db	32
 22348   00FFAA  00                 	db	0
 22349   00FFAB                     STR_43:
 22350   00FFAB  76                 	db	118	;'v'
 22351   00FFAC  74                 	db	116	;'t'
 22352   00FFAD  65                 	db	101	;'e'
 22353   00FFAE  72                 	db	114	;'r'
 22354   00FFAF  6D                 	db	109	;'m'
 22355   00FFB0  20                 	db	32
 22356   00FFB1  25                 	db	37
 22357   00FFB2  78                 	db	120	;'x'
 22358   00FFB3  3A                 	db	58	;':'
 22359   00FFB4  25                 	db	37
 22360   00FFB5  78                 	db	120	;'x'
 22361   00FFB6  20                 	db	32
 22362   00FFB7  20                 	db	32
 22363   00FFB8  20                 	db	32
 22364   00FFB9  00                 	db	0
 22365   00FFBA                     STR_2:
 22366   00FFBA  20                 	db	32
 22367   00FFBB  56                 	db	86	;'V'
 22368   00FFBC  65                 	db	101	;'e'
 22369   00FFBD  72                 	db	114	;'r'
 22370   00FFBE  73                 	db	115	;'s'
 22371   00FFBF  69                 	db	105	;'i'
 22372   00FFC0  6F                 	db	111	;'o'
 22373   00FFC1  6E                 	db	110	;'n'
 22374   00FFC2  20                 	db	32
 22375   00FFC3  25                 	db	37
 22376   00FFC4  73                 	db	115	;'s'
 22377   00FFC5  20                 	db	32
 22378   00FFC6  20                 	db	32
 22379   00FFC7  20                 	db	32
 22380   00FFC8  00                 	db	0
 22381   00FFC9                     STR_37:
 22382   00FFC9  4A                 	db	74	;'J'
 22383   00FFCA  61                 	db	97	;'a'
 22384   00FFCB  6E                 	db	110	;'n'
 22385   00FFCC  20                 	db	32
 22386   00FFCD  31                 	db	49	;'1'
 22387   00FFCE  34                 	db	52	;'4'
 22388   00FFCF  20                 	db	32
 22389   00FFD0  32                 	db	50	;'2'
 22390   00FFD1  30                 	db	48	;'0'
 22391   00FFD2  32                 	db	50	;'2'
 22392   00FFD3  35                 	db	53	;'5'
 22393   00FFD4  00                 	db	0
 22394   00FFD5                     STR_41:
 22395   00FFD5  25                 	db	37
 22396   00FFD6  73                 	db	115	;'s'
 22397   00FFD7  20                 	db	32
 22398   00FFD8  20                 	db	32
 22399   00FFD9  20                 	db	32
 22400   00FFDA  20                 	db	32
 22401   00FFDB  20                 	db	32
 22402   00FFDC  20                 	db	32
 22403   00FFDD  20                 	db	32
 22404   00FFDE  00                 	db	0
 22405   00FFDF                     STR_38:
 22406   00FFDF  30                 	db	48	;'0'
 22407   00FFE0  36                 	db	54	;'6'
 22408   00FFE1  3A                 	db	58	;':'
 22409   00FFE2  35                 	db	53	;'5'
 22410   00FFE3  31                 	db	49	;'1'
 22411   00FFE4  3A                 	db	58	;':'
 22412   00FFE5  33                 	db	51	;'3'
 22413   00FFE6  33                 	db	51	;'3'
 22414   00FFE7  00                 	db	0
 22415   00FFE8                     STR_69:
 22416   00FFE8  28                 	db	40
 22417   00FFE9  6E                 	db	110	;'n'
 22418   00FFEA  75                 	db	117	;'u'
 22419   00FFEB  6C                 	db	108	;'l'
 22420   00FFEC  6C                 	db	108	;'l'
 22421   00FFED  29                 	db	41
 22422   00FFEE  00                 	db	0
 22423   00FFEF                     STR_3:
 22424   00FFEF  31                 	db	49	;'1'
 22425   00FFF0  2E                 	db	46
 22426   00FFF1  36                 	db	54	;'6'
 22427   00FFF2  35                 	db	53	;'5'
 22428   00FFF3  47                 	db	71	;'G'
 22429   00FFF4  00                 	db	0
 22430   00FFF5                     STR_22:
 22431   00FFF5  4F                 	db	79	;'O'
 22432   00FFF6  4B                 	db	75	;'K'
 22433   00FFF7  20                 	db	32
 22434   00FFF8  00                 	db	0
 22435   00FFF9                     STR_27:
 22436   00FFF9  25                 	db	37
 22437   00FFFA  63                 	db	99	;'c'
 22438   00FFFB  00                 	db	0
 22439   00FFFC                     STR_26:
 22440   00FFFC  25                 	db	37
 22441   00FFFD  73                 	db	115	;'s'
 22442   00FFFE  00                 	db	0
 22443   00FFFC                     STR_67          equ	STR_26
 22444   00FFFC                     STR_68          equ	STR_26
 22445   00FFF9                     STR_28          equ	STR_27
 22446   00FFEF                     STR_7           equ	STR_3
 22447   00FFEF                     STR_29          equ	STR_3
 22448   00FFEF                     STR_30          equ	STR_3
 22449   00FFEF                     STR_31          equ	STR_3
 22450   00FFEF                     STR_32          equ	STR_3
 22451   00FE5E                     STR_17          equ	STR_10
 22452   00FD21                     STR_24          equ	STR_20
 22453   00FFAB                     STR_44          equ	STR_43
 22454   00FFAB                     STR_45          equ	STR_43
 22455   00FFBA                     STR_6           equ	STR_2
 22456   00FFD5                     STR_42          equ	STR_41
 22457   00FE49                     STR_19          equ	STR_16
 22458   00FDE0                     STR_60          equ	STR_58
 22459   00FE73                     STR_52          equ	STR_50
 22460   00FE73                     STR_54          equ	STR_50
 22461   00FED6                     STR_40          equ	STR_39
 22462   00FED6                     STR_55          equ	STR_39
 22463   00FEC3                     STR_64          equ	STR_63
 22464   00FEC3                     STR_65          equ	STR_63
 22465   00FEC3                     STR_66          equ	STR_63
 22466   00FFFF  00                 	db	0	; dummy byte at the end
 22467   00FB2E                     __smallconst    set	__pmediumconst
 22468   00FB2E                     __mediumconst   set	__pmediumconst
 22469   000003                     __activetblptr  equ	3
 22470                           
 22471                           ; #config settings
 22472                           
 22473                           	psect	cinit
 22474   015688                     __pcinit:
 22475                           	callstack 0
 22476   015688                     start_initialization:
 22477                           	callstack 0
 22478   015688                     __initialization:
 22479                           	callstack 0
 22480                           
 22481                           ; Initialize objects allocated to BIGRAM (956 bytes)
 22482                           ; load TBLPTR registers with __pidataBIGRAM
 22483   015688  0E9C               	movlw	low __pidataBIGRAM
 22484   01568A  6EF6               	movwf	tblptrl,c
 22485   01568C  0E30               	movlw	high __pidataBIGRAM
 22486   01568E  6EF7               	movwf	tblptrh,c
 22487   015690  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
 22488   015692  6EF8               	movwf	tblptru,c
 22489   015694  EE03  F01A         	lfsr	0,__pdataBIGRAM
 22490   015698  EE20 F3BC          	lfsr	2,956
 22491   01569C                     copy_data0:
 22492   01569C  0009               	tblrd		*+
 22493   01569E  006F FFD7 FFEE     	movff	tablat,postinc0
 22494   0156A4  50DD               	movf	postdec2,w,c
 22495   0156A6  50D9               	movf	fsr2l,w,c
 22496   0156A8  E1F9               	bnz	copy_data0
 22497   0156AA  50DA               	movf	fsr2h,w,c
 22498   0156AC  E1F7               	bnz	copy_data0
 22499                           
 22500                           ; Initialize objects allocated to BANK6 (256 bytes)
 22501                           ; load TBLPTR registers with __pidataBANK6
 22502   0156AE  0E60               	movlw	low __pidataBANK6
 22503   0156B0  6EF6               	movwf	tblptrl,c
 22504   0156B2  0E62               	movlw	high __pidataBANK6
 22505   0156B4  6EF7               	movwf	tblptrh,c
 22506   0156B6  0E01               	movlw	low (__pidataBANK6 shr (0+16))
 22507   0156B8  6EF8               	movwf	tblptru,c
 22508   0156BA  EE01  F200         	lfsr	0,__pdataBANK6
 22509   0156BE  EE20 F100          	lfsr	2,256
 22510   0156C2                     copy_data1:
 22511   0156C2  0009               	tblrd		*+
 22512   0156C4  006F FFD7 FFEE     	movff	tablat,postinc0
 22513   0156CA  50DD               	movf	postdec2,w,c
 22514   0156CC  50D9               	movf	fsr2l,w,c
 22515   0156CE  E1F9               	bnz	copy_data1
 22516   0156D0  50DA               	movf	fsr2h,w,c
 22517   0156D2  E1F7               	bnz	copy_data1
 22518                           
 22519                           ; Initialize objects allocated to BANK2 (59 bytes)
 22520                           ; load TBLPTR registers with __pidataBANK2
 22521   0156D4  0E7C               	movlw	low __pidataBANK2
 22522   0156D6  6EF6               	movwf	tblptrl,c
 22523   0156D8  0E78               	movlw	high __pidataBANK2
 22524   0156DA  6EF7               	movwf	tblptrh,c
 22525   0156DC  0E01               	movlw	low (__pidataBANK2 shr (0+16))
 22526   0156DE  6EF8               	movwf	tblptru,c
 22527   0156E0  EE00  F2C3         	lfsr	0,__pdataBANK2
 22528   0156E4  EE20 F03B          	lfsr	2,59
 22529   0156E8                     copy_data2:
 22530   0156E8  0009               	tblrd		*+
 22531   0156EA  006F FFD7 FFEE     	movff	tablat,postinc0
 22532   0156F0  50DD               	movf	postdec2,w,c
 22533   0156F2  50D9               	movf	fsr2l,w,c
 22534   0156F4  E1F9               	bnz	copy_data2
 22535                           
 22536                           ; Initialize objects allocated to BANK1 (191 bytes)
 22537                           ; load TBLPTR registers with __pidataBANK1
 22538   0156F6  0EDC               	movlw	low __pidataBANK1
 22539   0156F8  6EF6               	movwf	tblptrl,c
 22540   0156FA  0E68               	movlw	high __pidataBANK1
 22541   0156FC  6EF7               	movwf	tblptrh,c
 22542   0156FE  0E01               	movlw	low (__pidataBANK1 shr (0+16))
 22543   015700  6EF8               	movwf	tblptru,c
 22544   015702  EE00  F100         	lfsr	0,__pdataBANK1
 22545   015706  EE20 F0BF          	lfsr	2,191
 22546   01570A                     copy_data3:
 22547   01570A  0009               	tblrd		*+
 22548   01570C  006F FFD7 FFEE     	movff	tablat,postinc0
 22549   015712  50DD               	movf	postdec2,w,c
 22550   015714  50D9               	movf	fsr2l,w,c
 22551   015716  E1F9               	bnz	copy_data3
 22552                           
 22553                           ; Initialize objects allocated to BANK0 (53 bytes)
 22554                           ; load TBLPTR registers with __pidataBANK0
 22555   015718  0E96               	movlw	low __pidataBANK0
 22556   01571A  6EF6               	movwf	tblptrl,c
 22557   01571C  0E79               	movlw	high __pidataBANK0
 22558   01571E  6EF7               	movwf	tblptrh,c
 22559   015720  0E01               	movlw	low (__pidataBANK0 shr (0+16))
 22560   015722  6EF8               	movwf	tblptru,c
 22561   015724  EE00  F0C0         	lfsr	0,__pdataBANK0
 22562   015728  EE20 F035          	lfsr	2,53
 22563   01572C                     copy_data4:
 22564   01572C  0009               	tblrd		*+
 22565   01572E  006F FFD7 FFEE     	movff	tablat,postinc0
 22566   015734  50DD               	movf	postdec2,w,c
 22567   015736  50D9               	movf	fsr2l,w,c
 22568   015738  E1F9               	bnz	copy_data4
 22569                           
 22570                           ; Initialize objects allocated to COMRAM (5 bytes)
 22571                           ; load TBLPTR registers with __pidataCOMRAM
 22572   01573A  0EE2               	movlw	low __pidataCOMRAM
 22573   01573C  6EF6               	movwf	tblptrl,c
 22574   01573E  0E80               	movlw	high __pidataCOMRAM
 22575   015740  6EF7               	movwf	tblptrh,c
 22576   015742  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
 22577   015744  6EF8               	movwf	tblptru,c
 22578   015746  EE00  F04F         	lfsr	0,__pdataCOMRAM
 22579   01574A  EE20 F005          	lfsr	2,5
 22580   01574E                     copy_data5:
 22581   01574E  0009               	tblrd		*+
 22582   015750  006F FFD7 FFEE     	movff	tablat,postinc0
 22583   015756  50DD               	movf	postdec2,w,c
 22584   015758  50D9               	movf	fsr2l,w,c
 22585   01575A  E1F9               	bnz	copy_data5
 22586                           
 22587                           ; Clear objects allocated to BIGRAM (1306 bytes)
 22588   01575C  EE01  F300         	lfsr	0,__pbssBIGRAM
 22589   015760  EE21 F11A          	lfsr	2,1306
 22590   015764                     clear_0:
 22591   015764  6AEE               	clrf	postinc0,c
 22592   015766  50DD               	movf	postdec2,w,c
 22593   015768  50D9               	movf	fsr2l,w,c
 22594   01576A  E1FC               	bnz	clear_0
 22595   01576C  50DA               	movf	fsr2h,w,c
 22596   01576E  E1FA               	bnz	clear_0
 22597                           
 22598                           ; Clear objects allocated to BANK5 (255 bytes)
 22599   015770  EE01  F100         	lfsr	0,__pbssBANK5
 22600   015774  EE20 F0FF          	lfsr	2,255
 22601   015778                     clear_1:
 22602   015778  6AEE               	clrf	postinc0,c
 22603   01577A  50DD               	movf	postdec2,w,c
 22604   01577C  50D9               	movf	fsr2l,w,c
 22605   01577E  E1FC               	bnz	clear_1
 22606   015780  50DA               	movf	fsr2h,w,c
 22607   015782  E1FA               	bnz	clear_1
 22608                           
 22609                           ; Clear objects allocated to BANK4 (255 bytes)
 22610   015784  EE01  F000         	lfsr	0,__pbssBANK4
 22611   015788  EE20 F0FF          	lfsr	2,255
 22612   01578C                     clear_2:
 22613   01578C  6AEE               	clrf	postinc0,c
 22614   01578E  50DD               	movf	postdec2,w,c
 22615   015790  50D9               	movf	fsr2l,w,c
 22616   015792  E1FC               	bnz	clear_2
 22617   015794  50DA               	movf	fsr2h,w,c
 22618   015796  E1FA               	bnz	clear_2
 22619                           
 22620                           ; Clear objects allocated to BANK3 (67 bytes)
 22621   015798  EE00  F300         	lfsr	0,__pbssBANK3
 22622   01579C  0E43               	movlw	67
 22623   01579E                     clear_3:
 22624   01579E  6AEE               	clrf	postinc0,c
 22625   0157A0  06E8               	decf	wreg,f,c
 22626   0157A2  E1FD               	bnz	clear_3
 22627                           
 22628                           ; Clear objects allocated to BANK2 (195 bytes)
 22629   0157A4  EE00  F200         	lfsr	0,__pbssBANK2
 22630   0157A8  0EC3               	movlw	195
 22631   0157AA                     clear_4:
 22632   0157AA  6AEE               	clrf	postinc0,c
 22633   0157AC  06E8               	decf	wreg,f,c
 22634   0157AE  E1FD               	bnz	clear_4
 22635                           
 22636                           ; Clear objects allocated to BANK1 (39 bytes)
 22637   0157B0  EE00  F1BF         	lfsr	0,__pbssBANK1
 22638   0157B4  0E27               	movlw	39
 22639   0157B6                     clear_5:
 22640   0157B6  6AEE               	clrf	postinc0,c
 22641   0157B8  06E8               	decf	wreg,f,c
 22642   0157BA  E1FD               	bnz	clear_5
 22643                           
 22644                           ; Clear objects allocated to BANK0 (96 bytes)
 22645   0157BC  EE00  F060         	lfsr	0,__pbssBANK0
 22646   0157C0  0E60               	movlw	96
 22647   0157C2                     clear_6:
 22648   0157C2  6AEE               	clrf	postinc0,c
 22649   0157C4  06E8               	decf	wreg,f,c
 22650   0157C6  E1FD               	bnz	clear_6
 22651                           
 22652                           ; Clear objects allocated to COMRAM (34 bytes)
 22653   0157C8  EE00  F001         	lfsr	0,__pbssCOMRAM
 22654   0157CC  0E22               	movlw	34
 22655   0157CE                     clear_7:
 22656   0157CE  6AEE               	clrf	postinc0,c
 22657   0157D0  06E8               	decf	wreg,f,c
 22658   0157D2  E1FD               	bnz	clear_7
 22659                           
 22660                           ;
 22661                           ; Setup IVTBASE
 22662                           ;
 22663   003FD5                     IVTBASEL        equ	16341
 22664   003FD6                     IVTBASEH        equ	16342
 22665   003FD7                     IVTBASEU        equ	16343
 22666   0157D4  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
 22667   0157D6  6ED5               	movwf	213,c
 22668   0157D8  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
 22669   0157DA  6ED6               	movwf	214,c
 22670   0157DC  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
 22671   0157DE  6ED7               	movwf	215,c
 22672   0157E0                     end_of_initialization:
 22673                           	callstack 0
 22674   0157E0                     __end_of__initialization:
 22675                           	callstack 0
 22676   0157E0  0100               	movlb	0
 22677   0157E2  EFBA  F086         	goto	_main	;jump to C main() function
 22678                           
 22679                           	psect	bssCOMRAM
 22680   000001                     __pbssCOMRAM:
 22681                           	callstack 0
 22682   000001                     r_protocol@b_block:
 22683                           	callstack 0
 22684   000001                     	ds	2
 22685   000003                     run_checksum@sum:
 22686                           	callstack 0
 22687   000003                     	ds	2
 22688   000005                     TMR5_ISR@CountCallBack:
 22689                           	callstack 0
 22690   000005                     	ds	2
 22691   000007                     _timer5ReloadVal:
 22692                           	callstack 0
 22693   000007                     	ds	2
 22694   000009                     secs_gem_state@equipment:
 22695                           	callstack 0
 22696   000009                     	ds	1
 22697   00000A                     secs_gem_state@block:
 22698                           	callstack 0
 22699   00000A                     	ds	1
 22700   00000B                     t_protocol@requeue:
 22701                           	callstack 0
 22702   00000B                     	ds	1
 22703   00000C                     t_protocol@retry:
 22704                           	callstack 0
 22705   00000C                     	ds	1
 22706   00000D                     r_protocol@rxData_l:
 22707                           	callstack 0
 22708   00000D                     	ds	1
 22709   00000E                     m_protocol@rxData_l:
 22710                           	callstack 0
 22711   00000E                     	ds	1
 22712   00000F                     _mode_sw:
 22713                           	callstack 0
 22714   00000F                     	ds	1
 22715   000010                     _uart2RxCount:
 22716                           	callstack 0
 22717   000010                     	ds	1
 22718   000011                     _uart2RxTail:
 22719                           	callstack 0
 22720   000011                     	ds	1
 22721   000012                     _uart2RxHead:
 22722                           	callstack 0
 22723   000012                     	ds	1
 22724   000013                     _uart2TxBufferRemaining:
 22725                           	callstack 0
 22726   000013                     	ds	1
 22727   000014                     _uart2TxTail:
 22728                           	callstack 0
 22729   000014                     	ds	1
 22730   000015                     _uart2TxHead:
 22731                           	callstack 0
 22732   000015                     	ds	1
 22733   000016                     _uart1RxCount:
 22734                           	callstack 0
 22735   000016                     	ds	1
 22736   000017                     _uart1RxTail:
 22737                           	callstack 0
 22738   000017                     	ds	1
 22739   000018                     _uart1RxHead:
 22740                           	callstack 0
 22741   000018                     	ds	1
 22742   000019                     _uart1TxBufferRemaining:
 22743                           	callstack 0
 22744   000019                     	ds	1
 22745   00001A                     _uart1TxTail:
 22746                           	callstack 0
 22747   00001A                     	ds	1
 22748   00001B                     _uart1TxHead:
 22749                           	callstack 0
 22750   00001B                     	ds	1
 22751   00001C                     secs_II_message@block:
 22752                           	callstack 0
 22753   00001C                     	ds	7
 22754                           
 22755                           	psect	dataCOMRAM
 22756   00004F                     __pdataCOMRAM:
 22757                           	callstack 0
 22758   00004F                     secs_II_monitor_message@store6_11:
 22759                           	callstack 0
 22760   00004F                     	ds	1
 22761   000050                     secs_II_monitor_message@store1_13:
 22762                           	callstack 0
 22763   000050                     	ds	1
 22764   000051                     secs_II_monitor_message@store1_1:
 22765                           	callstack 0
 22766   000051                     	ds	1
 22767   000052                     r_protocol@d:
 22768                           	callstack 0
 22769   000052                     	ds	1
 22770   000053                     r_protocol@retry:
 22771                           	callstack 0
 22772   000053                     	ds	1
 22773                           
 22774                           	psect	bssBANK0
 22775   000060                     __pbssBANK0:
 22776                           	callstack 0
 22777   000060                     _tickCount:
 22778                           	callstack 0
 22779   000060                     	ds	26
 22780   00007A                     _r_block:
 22781                           	callstack 0
 22782   00007A                     	ds	13
 22783   000087                     _spi_link:
 22784                           	callstack 0
 22785   000087                     	ds	12
 22786   000093                     t_protocol@block:
 22787                           	callstack 0
 22788   000093                     	ds	7
 22789   00009A                     wdtdelay@dcount:
 22790                           	callstack 0
 22791   00009A                     	ds	4
 22792   00009E                     _TMR5_InterruptHandler:
 22793                           	callstack 0
 22794   00009E                     	ds	3
 22795   0000A1                     _TMR6_InterruptHandler:
 22796                           	callstack 0
 22797   0000A1                     	ds	3
 22798   0000A4                     _ADCC_ADI_InterruptHandler:
 22799                           	callstack 0
 22800   0000A4                     	ds	3
 22801   0000A7                     _UART1_TxInterruptHandler:
 22802                           	callstack 0
 22803   0000A7                     	ds	3
 22804   0000AA                     _UART1_RxInterruptHandler:
 22805                           	callstack 0
 22806   0000AA                     	ds	3
 22807   0000AD                     _UART2_TxInterruptHandler:
 22808                           	callstack 0
 22809   0000AD                     	ds	3
 22810   0000B0                     _UART2_RxInterruptHandler:
 22811                           	callstack 0
 22812   0000B0                     	ds	3
 22813   0000B3                     _INT2_InterruptHandler:
 22814                           	callstack 0
 22815   0000B3                     	ds	3
 22816   0000B6                     _INT1_InterruptHandler:
 22817                           	callstack 0
 22818   0000B6                     	ds	3
 22819   0000B9                     _INT0_InterruptHandler:
 22820                           	callstack 0
 22821   0000B9                     	ds	3
 22822   0000BC                     _seed:
 22823                           	callstack 0
 22824   0000BC                     	ds	4
 22825                           
 22826                           	psect	dataBANK0
 22827   0000C0                     __pdataBANK0:
 22828                           	callstack 0
 22829   0000C0                     _H33:
 22830                           	callstack 0
 22831   0000C0                     	ds	36
 22832   0000E4                     _H14:
 22833                           	callstack 0
 22834   0000E4                     	ds	17
 22835                           
 22836                           	psect	bssBANK1
 22837   0001BF                     __pbssBANK1:
 22838                           	callstack 0
 22839   0001BF                     _nout:
 22840                           	callstack 0
 22841   0001BF                     	ds	2
 22842   0001C1                     _width:
 22843                           	callstack 0
 22844   0001C1                     	ds	2
 22845   0001C3                     _prec:
 22846                           	callstack 0
 22847   0001C3                     	ds	2
 22848   0001C5                     _flags:
 22849                           	callstack 0
 22850   0001C5                     	ds	1
 22851   0001C6                     _dbuf:
 22852                           	callstack 0
 22853   0001C6                     	ds	32
 22854                           
 22855                           	psect	dataBANK1
 22856   000100                     __pdataBANK1:
 22857                           	callstack 0
 22858   000100                     _H10:
 22859                           	callstack 0
 22860   000100                     	ds	91
 22861   00015B                     _H13:
 22862                           	callstack 0
 22863   00015B                     	ds	64
 22864   00019B                     _H17:
 22865                           	callstack 0
 22866   00019B                     	ds	20
 22867   0001AF                     _port_data:
 22868                           	callstack 0
 22869   0001AF                     	ds	16
 22870                           
 22871                           	psect	bssBANK2
 22872   000200                     __pbssBANK2:
 22873                           	callstack 0
 22874   000200                     _uart2TxBuffer:
 22875                           	callstack 0
 22876   000200                     	ds	64
 22877   000240                     _uart1TxBuffer:
 22878                           	callstack 0
 22879   000240                     	ds	64
 22880   000280                     _ring_buf1:
 22881                           	callstack 0
 22882   000280                     	ds	67
 22883                           
 22884                           	psect	dataBANK2
 22885   0002C3                     __pdataBANK2:
 22886                           	callstack 0
 22887   0002C3                     _H12:
 22888                           	callstack 0
 22889   0002C3                     	ds	30
 22890   0002E1                     _H26:
 22891                           	callstack 0
 22892   0002E1                     	ds	29
 22893                           
 22894                           	psect	bssBANK3
 22895   000300                     __pbssBANK3:
 22896                           	callstack 0
 22897   000300                     _ring_buf2:
 22898                           	callstack 0
 22899   000300                     	ds	67
 22900                           
 22901                           	psect	bssBANK4
 22902   000400                     __pbssBANK4:
 22903                           	callstack 0
 22904   000400                     _uart1RxBuffer:
 22905                           	callstack 0
 22906   000400                     	ds	255
 22907                           
 22908                           	psect	bssBANK5
 22909   000500                     __pbssBANK5:
 22910                           	callstack 0
 22911   000500                     _uart2RxBuffer:
 22912                           	callstack 0
 22913   000500                     	ds	255
 22914                           
 22915                           	psect	dataBANK6
 22916   000600                     __pdataBANK6:
 22917                           	callstack 0
 22918   000600                     _T:
 22919                           	callstack 0
 22920   000600                     	ds	256
 22921                           
 22922                           	psect	bssBIGRAM
 22923   000700                     __pbssBIGRAM:
 22924                           	callstack 0
 22925   000700                     _D@mconfig$F5154:
 22926                           	callstack 0
 22927   000700                     	ds	514
 22928   000902                     _S:
 22929                           	callstack 0
 22930   000902                     	ds	460
 22931   000ACE                     _D:
 22932                           	callstack 0
 22933   000ACE                     	ds	332
 22934                           
 22935                           	psect	dataBIGRAM
 22936   000C1A                     __pdataBIGRAM:
 22937                           	callstack 0
 22938   000C1A                     _V:
 22939                           	callstack 0
 22940   000C1A                     	ds	387
 22941   000D9D                     _H153:
 22942                           	callstack 0
 22943   000D9D                     	ds	312
 22944   000ED5                     _H254:
 22945                           	callstack 0
 22946   000ED5                     	ds	257
 22947                           
 22948                           	psect	cstackBANK1
 22949   0001E6                     __pcstackBANK1:
 22950                           	callstack 0
 22951   0001E6                     ??_TMR5_ISR:
 22952                           
 22953                           ; 1 bytes @ 0x0
 22954   0001E6                     	ds	5
 22955                           
 22956                           	psect	cstackBANK0
 22957   0000F5                     __pcstackBANK0:
 22958                           	callstack 0
 22959   0000F5                     ??_UART2_tx_vect_isr:
 22960                           
 22961                           ; 1 bytes @ 0x0
 22962   0000F5                     	ds	2
 22963   0000F7                     ??_UART2_rx_vect_isr:
 22964                           
 22965                           ; 1 bytes @ 0x2
 22966   0000F7                     	ds	2
 22967   0000F9                     ??_TMR6_ISR:
 22968                           
 22969                           ; 1 bytes @ 0x4
 22970   0000F9                     	ds	3
 22971                           
 22972                           	psect	cstackCOMRAM
 22973   000043                     __pcstackCOMRAM:
 22974                           	callstack 0
 22975   000043                     ??_INT0_ISR:
 22976                           
 22977                           ; 1 bytes @ 0x0
 22978   000043                     	ds	2
 22979   000045                     ??_INT1_ISR:
 22980                           
 22981                           ; 1 bytes @ 0x2
 22982   000045                     	ds	2
 22983   000047                     ??_INT2_ISR:
 22984                           
 22985                           ; 1 bytes @ 0x4
 22986   000047                     	ds	2
 22987   000049                     ??_ADCC_ISR:
 22988                           
 22989                           ; 1 bytes @ 0x6
 22990   000049                     	ds	2
 22991   00004B                     ??_UART1_tx_vect_isr:
 22992                           
 22993                           ; 1 bytes @ 0x8
 22994   00004B                     	ds	2
 22995   00004D                     ??_UART1_rx_vect_isr:
 22996                           
 22997                           ; 1 bytes @ 0xA
 22998   00004D                     	ds	2
 22999   00004F                     
 23000                           ; 1 bytes @ 0xC
 23001 ;;
 23002 ;;Main: autosize = 3, tempsize = 0, incstack = 0, save=0
 23003 ;;
 23004 ;; *************** function _main *****************
 23005 ;; Defined at:
 23006 ;;		line 633 in file "main.c"
 23007 ;; Parameters:    Size  Location     Type
 23008 ;;		None
 23009 ;; Auto vars:     Size  Location     Type
 23010 ;;  s               2  [STACK] PTR unsigned char 
 23011 ;;		 -> D$lcd(512), D@mconfig$F5154(514), 
 23012 ;;  mode            1  [STACK] enum E17274
 23013 ;; Return value:  Size  Location     Type
 23014 ;;                  1  [STACK] void 
 23015 ;; Registers used:
 23016 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 23017 ;; Tracked objects:
 23018 ;;		On entry : 0/0
 23019 ;;		On exit  : 0/0
 23020 ;;		Unchanged: 0/0
 23021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23026 ;;Total ram usage:        0 bytes
 23027 ;; Hardware stack levels required when called: 16
 23028 ;; This function calls:
 23029 ;;		_MyeaDogM_WriteStringAtPos
 23030 ;;		_SYSTEM_Initialize
 23031 ;;		_StartTimer
 23032 ;;		_TimerDone
 23033 ;;		_WaitMs
 23034 ;;		_check_help
 23035 ;;		_eaDogM_WriteCommand
 23036 ;;		_get_vterm_ptr
 23037 ;;		_hb_message
 23038 ;;		_init_display
 23039 ;;		_m_protocol
 23040 ;;		_mode_lamp_dim
 23041 ;;		_r_protocol
 23042 ;;		_set_display_info
 23043 ;;		_set_vterm
 23044 ;;		_sprintf
 23045 ;;		_srand
 23046 ;;		_t_protocol
 23047 ;;		_update_lcd
 23048 ;; This function is called by:
 23049 ;;		Startup code after reset
 23050 ;; This function uses a reentrant model
 23051 ;;
 23052                           
 23053                           	psect	text0
 23054   010D74                     __ptext0:
 23055                           	callstack 0
 23056   010D74                     _main:
 23057                           	callstack 0
 23058                           
 23059                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23060   010D74  52E6               	movf	postinc1,f,c
 23061   010D76  52E6               	movf	postinc1,f,c
 23062   010D78  52E6               	movf	postinc1,f,c
 23063                           
 23064                           ;main.c: 635:  UI_STATES mode;;main.c: 636:  char * s;;main.c: 639:  SYSTEM_Initialize()
      +                          ;
 23065                           
 23066                           ;incstack = 0
 23067   010D7A  ECE4  F0B9         	call	_SYSTEM_Initialize	;wreg free
 23068                           
 23069                           ; BSR set to: 60
 23070                           ;main.c: 642:  (INTCON0bits.GIEH = 1);
 23071   010D7E  8ED2               	bsf	210,7,c	;volatile
 23072                           
 23073                           ; BSR set to: 60
 23074                           ;main.c: 645:  (INTCON0bits.GIEL = 1);
 23075   010D80  8CD2               	bsf	210,6,c	;volatile
 23076                           
 23077                           ; BSR set to: 60
 23078                           ;main.c: 647:  V.ui_state = UI_STATE_INIT;
 23079   010D82  0E00               	movlw	0
 23080   010D84  006F FFA0  FC1B    	movff	wreg,_V+1	;volatile
 23081                           
 23082                           ; BSR set to: 60
 23083                           ;main.c: 652:  WaitMs(300);
 23084   010D8A  0E2C               	movlw	44
 23085   010D8C  6EE6               	movwf	postinc1,c
 23086   010D8E  0E01               	movlw	1
 23087   010D90  6EE6               	movwf	postinc1,c
 23088   010D92  EC95  F0BC         	call	_WaitMs	;wreg free
 23089                           
 23090                           ;main.c: 653:  if (PORTBbits.RB0) {
 23091   010D96  A0CB               	btfss	203,0,c	;volatile
 23092   010D98  D004               	goto	l13676
 23093                           
 23094                           ;main.c: 654:   mode = UI_STATE_HOST;
 23095                           ;stkvar	_mode @ sp[(-3)+2]
 23096   010D9A  0EFF               	movlw	-1
 23097   010D9C  6AE3               	clrf	plusw1,c
 23098   010D9E  2AE3               	incf	plusw1,f,c
 23099                           
 23100                           ;main.c: 655:  } else {
 23101   010DA0  D004               	goto	l13678
 23102   010DA2                     l13676:
 23103                           
 23104                           ;main.c: 656:   mode = UI_STATE_LOG;
 23105                           ;stkvar	_mode @ sp[(-3)+2]
 23106   010DA2  0EFF               	movlw	-1
 23107   010DA4  6AE3               	clrf	plusw1,c
 23108   010DA6  80E3               	bsf	plusw1,0,c
 23109   010DA8  82E3               	bsf	plusw1,1,c	;indir
 23110   010DAA                     l13678:
 23111                           
 23112                           ;main.c: 659:  if (mode == UI_STATE_HOST) {
 23113                           ;stkvar	_mode @ sp[(-3)+2]
 23114   010DAA  0EFF               	movlw	-1
 23115   010DAC  04E3               	decf	plusw1,w,c
 23116   010DAE  A4D8               	btfss	status,2,c
 23117   010DB0  D003               	goto	l1378
 23118                           
 23119                           ;main.c: 660:   do { LATDbits.LATD0 = 1; } while(0);
 23120   010DB2  80BD               	bsf	189,0,c	;volatile
 23121                           
 23122                           ;main.c: 661:   V.mode_pwm = 70;
 23123   010DB4  0E46               	movlw	70
 23124   010DB6  D002               	goto	L1
 23125   010DB8                     l1378:
 23126   010DB8  90BD               	bcf	189,0,c	;volatile
 23127                           
 23128                           ;main.c: 664:   V.mode_pwm = 0;
 23129   010DBA  0E00               	movlw	0
 23130   010DBC                     L1:
 23131   010DBC  006F FFA0  FD5F    	movff	wreg,_V+325	;volatile
 23132   010DC2  0E00               	movlw	0
 23133   010DC4  006F FFA0  FD60    	movff	wreg,_V+326	;volatile
 23134                           
 23135                           ;main.c: 666:  mode_lamp_dim(V.mode_pwm);
 23136   010DCA  EE23  F15F         	lfsr	2,_V+325	;volatile
 23137   010DCE  006F FF78  F02D    	movff	postinc2,btemp+10
 23138   010DD4  006F FF74  F02E    	movff	postdec2,btemp+11
 23139   010DDA  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 23140   010DE0  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 23141   010DE6  ECE5  F0BF         	call	_mode_lamp_dim	;wreg free
 23142   010DEA  EF17  F08C         	goto	l13880
 23143   010DEE                     l13682:
 23144                           
 23145                           ;main.c: 677:    init_display();
 23146   010DEE  EC18  F0B3         	call	_init_display	;wreg free
 23147                           
 23148                           ; BSR set to: 61
 23149                           ;main.c: 678:    eaDogM_WriteCommand(0b00001100);
 23150   010DF2  0E0C               	movlw	12
 23151   010DF4  6EE6               	movwf	postinc1,c
 23152   010DF6  EC2E  F0C0         	call	_eaDogM_WriteCommand	;wreg free
 23153                           
 23154                           ; BSR set to: 0
 23155                           ;main.c: 680:    V.ui_state = mode;
 23156                           ;stkvar	_mode @ sp[(-3)+2]
 23157   010DFA  0EFF               	movlw	-1
 23158   010DFC  006F FF8C  F02E    	movff	plusw1,btemp+11
 23159   010E02  0060  F0B8  FC1B   	movff	btemp+11,_V+1	;volatile
 23160                           
 23161                           ; BSR set to: 0
 23162                           ;main.c: 681:    V.s_state = SEQ_STATE_INIT;
 23163   010E08  0E00               	movlw	0
 23164   010E0A  006F FFA0  FC1A    	movff	wreg,_V
 23165                           
 23166                           ; BSR set to: 0
 23167                           ;main.c: 682:    srand(1957);
 23168   010E10  0EA5               	movlw	165
 23169   010E12  6EE6               	movwf	postinc1,c
 23170   010E14  0E07               	movlw	7
 23171   010E16  6EE6               	movwf	postinc1,c
 23172   010E18  EC51  F0BD         	call	_srand	;wreg free
 23173                           
 23174                           ; BSR set to: 0
 23175                           ;main.c: 683:    set_vterm(0);
 23176   010E1C  0E00               	movlw	0
 23177   010E1E  6EE6               	movwf	postinc1,c
 23178   010E20  EC67  F0BF         	call	_set_vterm	;wreg free
 23179                           
 23180                           ;main.c: 684:    sprintf(get_vterm_ptr(0, 0), " RVI HOST TESTER");
 23181   010E24  0E8A               	movlw	low STR_1
 23182   010E26  6EE6               	movwf	postinc1,c
 23183   010E28  0EFF               	movlw	high STR_1
 23184   010E2A  6EE6               	movwf	postinc1,c
 23185   010E2C  0E00               	movlw	0
 23186   010E2E  6EE6               	movwf	postinc1,c
 23187   010E30  0E00               	movlw	0
 23188   010E32  6EE6               	movwf	postinc1,c
 23189   010E34  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 23190   010E38  0060  F08F  FFE6   	movff	btemp,postinc1
 23191   010E3E  0060  F093  FFE6   	movff	btemp+1,postinc1
 23192   010E44  0E04               	movlw	4
 23193   010E46  6EE6               	movwf	postinc1,c
 23194   010E48  EC29  F0B2         	call	_sprintf	;wreg free
 23195                           
 23196                           ; BSR set to: 1
 23197                           ;main.c: 685:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "1.65G");
 23198   010E4C  0EEF               	movlw	low STR_3
 23199   010E4E  6EE6               	movwf	postinc1,c
 23200   010E50  0EFF               	movlw	high STR_3
 23201   010E52  6EE6               	movwf	postinc1,c
 23202   010E54  0EBA               	movlw	low STR_2
 23203   010E56  6EE6               	movwf	postinc1,c
 23204   010E58  0EFF               	movlw	high STR_2
 23205   010E5A  6EE6               	movwf	postinc1,c
 23206   010E5C  0E00               	movlw	0
 23207   010E5E  6EE6               	movwf	postinc1,c
 23208   010E60  0E01               	movlw	1
 23209   010E62  6EE6               	movwf	postinc1,c
 23210   010E64  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 23211   010E68  0060  F08F  FFE6   	movff	btemp,postinc1
 23212   010E6E  0060  F093  FFE6   	movff	btemp+1,postinc1
 23213   010E74  0E06               	movlw	6
 23214   010E76  6EE6               	movwf	postinc1,c
 23215   010E78  EC29  F0B2         	call	_sprintf	;wreg free
 23216                           
 23217                           ; BSR set to: 1
 23218                           ;main.c: 686:    sprintf(get_vterm_ptr(2, 0), " FGB@MCHP FAB4  ");
 23219   010E7C  0E68               	movlw	low STR_4
 23220   010E7E  6EE6               	movwf	postinc1,c
 23221   010E80  0EFF               	movlw	high STR_4
 23222   010E82  6EE6               	movwf	postinc1,c
 23223   010E84  0E00               	movlw	0
 23224   010E86  6EE6               	movwf	postinc1,c
 23225   010E88  0E02               	movlw	2
 23226   010E8A  6EE6               	movwf	postinc1,c
 23227   010E8C  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 23228   010E90  0060  F08F  FFE6   	movff	btemp,postinc1
 23229   010E96  0060  F093  FFE6   	movff	btemp+1,postinc1
 23230   010E9C  0E04               	movlw	4
 23231   010E9E  6EE6               	movwf	postinc1,c
 23232   010EA0  EC29  F0B2         	call	_sprintf	;wreg free
 23233                           
 23234                           ; BSR set to: 1
 23235                           ;main.c: 687:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
 23236   010EA4  0E79               	movlw	low STR_5
 23237   010EA6  6EE6               	movwf	postinc1,c
 23238   010EA8  0EFF               	movlw	high STR_5
 23239   010EAA  6EE6               	movwf	postinc1,c
 23240   010EAC  0E02               	movlw	2
 23241   010EAE  6EE6               	movwf	postinc1,c
 23242   010EB0  0E00               	movlw	0
 23243   010EB2  6EE6               	movwf	postinc1,c
 23244   010EB4  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 23245   010EB8  0060  F08F  FFE6   	movff	btemp,postinc1
 23246   010EBE  0060  F093  FFE6   	movff	btemp+1,postinc1
 23247   010EC4  0E04               	movlw	4
 23248   010EC6  6EE6               	movwf	postinc1,c
 23249   010EC8  EC29  F0B2         	call	_sprintf	;wreg free
 23250                           
 23251                           ; BSR set to: 1
 23252                           ;main.c: 688:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "1.65G");
 23253   010ECC  0EEF               	movlw	low STR_3
 23254   010ECE  6EE6               	movwf	postinc1,c
 23255   010ED0  0EFF               	movlw	high STR_3
 23256   010ED2  6EE6               	movwf	postinc1,c
 23257   010ED4  0EBA               	movlw	low STR_2
 23258   010ED6  6EE6               	movwf	postinc1,c
 23259   010ED8  0EFF               	movlw	high STR_2
 23260   010EDA  6EE6               	movwf	postinc1,c
 23261   010EDC  0E02               	movlw	2
 23262   010EDE  6EE6               	movwf	postinc1,c
 23263   010EE0  0E01               	movlw	1
 23264   010EE2  6EE6               	movwf	postinc1,c
 23265   010EE4  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 23266   010EE8  0060  F08F  FFE6   	movff	btemp,postinc1
 23267   010EEE  0060  F093  FFE6   	movff	btemp+1,postinc1
 23268   010EF4  0E06               	movlw	6
 23269   010EF6  6EE6               	movwf	postinc1,c
 23270   010EF8  EC29  F0B2         	call	_sprintf	;wreg free
 23271                           
 23272                           ; BSR set to: 1
 23273                           ;main.c: 689:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
 23274   010EFC  0E57               	movlw	low STR_8
 23275   010EFE  6EE6               	movwf	postinc1,c
 23276   010F00  0EFF               	movlw	high STR_8
 23277   010F02  6EE6               	movwf	postinc1,c
 23278   010F04  0E02               	movlw	2
 23279   010F06  6EE6               	movwf	postinc1,c
 23280   010F08  0E02               	movlw	2
 23281   010F0A  6EE6               	movwf	postinc1,c
 23282   010F0C  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 23283   010F10  0060  F08F  FFE6   	movff	btemp,postinc1
 23284   010F16  0060  F093  FFE6   	movff	btemp+1,postinc1
 23285   010F1C  0E04               	movlw	4
 23286   010F1E  6EE6               	movwf	postinc1,c
 23287   010F20  EC29  F0B2         	call	_sprintf	;wreg free
 23288                           
 23289                           ; BSR set to: 1
 23290                           ;main.c: 690:    update_lcd(0);
 23291   010F24  0E00               	movlw	0
 23292   010F26  6EE6               	movwf	postinc1,c
 23293   010F28  ECA1  F0B2         	call	_update_lcd	;wreg free
 23294                           
 23295                           ;main.c: 691:    WaitMs(3000);
 23296   010F2C  0EB8               	movlw	184
 23297   010F2E  6EE6               	movwf	postinc1,c
 23298   010F30  0E0B               	movlw	11
 23299   010F32  6EE6               	movwf	postinc1,c
 23300   010F34  EC95  F0BC         	call	_WaitMs	;wreg free
 23301                           
 23302                           ;main.c: 692:    StartTimer(TMR_DISPLAY, 100);
 23303   010F38  0E64               	movlw	100
 23304   010F3A  6EE6               	movwf	postinc1,c
 23305   010F3C  0E00               	movlw	0
 23306   010F3E  6EE6               	movwf	postinc1,c
 23307   010F40  0E0A               	movlw	10
 23308   010F42  6EE6               	movwf	postinc1,c
 23309   010F44  EC20  F0BC         	call	_StartTimer	;wreg free
 23310                           
 23311                           ;main.c: 693:    StartTimer(TMR_SEQ, 10000);
 23312   010F48  0E10               	movlw	16
 23313   010F4A  6EE6               	movwf	postinc1,c
 23314   010F4C  0E27               	movlw	39
 23315   010F4E  6EE6               	movwf	postinc1,c
 23316   010F50  0E0B               	movlw	11
 23317   010F52  6EE6               	movwf	postinc1,c
 23318   010F54  EC20  F0BC         	call	_StartTimer	;wreg free
 23319                           
 23320                           ;main.c: 694:    StartTimer(TMR_INFO, 3000);
 23321   010F58  0EB8               	movlw	184
 23322   010F5A  6EE6               	movwf	postinc1,c
 23323   010F5C  0E0B               	movlw	11
 23324   010F5E  6EE6               	movwf	postinc1,c
 23325   010F60  0E07               	movlw	7
 23326   010F62  6EE6               	movwf	postinc1,c
 23327   010F64  EC20  F0BC         	call	_StartTimer	;wreg free
 23328                           
 23329                           ;main.c: 695:    StartTimer(TMR_FLIPPER, 1500);
 23330   010F68  0EDC               	movlw	220
 23331   010F6A  6EE6               	movwf	postinc1,c
 23332   010F6C  0E05               	movlw	5
 23333   010F6E  6EE6               	movwf	postinc1,c
 23334   010F70  0E0C               	movlw	12
 23335   010F72  6EE6               	movwf	postinc1,c
 23336   010F74  EC20  F0BC         	call	_StartTimer	;wreg free
 23337                           
 23338                           ;main.c: 696:    StartTimer(TMR_HELPDIS, 3000);
 23339   010F78  0EB8               	movlw	184
 23340   010F7A  6EE6               	movwf	postinc1,c
 23341   010F7C  0E0B               	movlw	11
 23342   010F7E  6EE6               	movwf	postinc1,c
 23343   010F80  0E09               	movlw	9
 23344   010F82  6EE6               	movwf	postinc1,c
 23345   010F84  EC20  F0BC         	call	_StartTimer	;wreg free
 23346                           
 23347                           ;main.c: 697:    break;
 23348   010F88  EF2D  F08C         	goto	l13882
 23349   010F8C                     l1386:
 23350                           
 23351                           ;main.c: 701:     V.r_l_state = LINK_STATE_IDLE;
 23352   010F8C  0E00               	movlw	0
 23353   010F8E  006F FFA0  FC1F    	movff	wreg,_V+5	;volatile
 23354                           
 23355                           ;main.c: 702:     V.t_l_state = LINK_STATE_IDLE;
 23356   010F94  0E00               	movlw	0
 23357   010F96  006F FFA0  FC20    	movff	wreg,_V+6	;volatile
 23358                           
 23359                           ;main.c: 703:     V.s_state = SEQ_STATE_RX;
 23360   010F9C  0E01               	movlw	1
 23361   010F9E  006F FFA0  FC1A    	movff	wreg,_V
 23362                           
 23363                           ;main.c: 704:     if ((V.error == LINK_ERROR_NONE) && (V.abort == LINK_ERROR_NONE)) {
 23364   010FA4  0063  F53F  FFE8   	movff	_V+309,wreg	;volatile
 23365   010FAA  0A0A               	xorlw	10
 23366   010FAC  A4D8               	btfss	status,2,c
 23367   010FAE  D1EE               	goto	l13792
 23368   010FB0  0063  F543  FFE8   	movff	_V+310,wreg	;volatile
 23369   010FB6  0A0A               	xorlw	10
 23370   010FB8  A4D8               	btfss	status,2,c
 23371   010FBA  D1E8               	goto	l13792
 23372                           
 23373                           ;main.c: 705:      if (V.debug)
 23374   010FBC  EE23  F168         	lfsr	2,_V+334	;volatile
 23375   010FC0  AADF               	btfss	indf2,5,c
 23376   010FC2  D027               	goto	l13728
 23377                           
 23378                           ;main.c: 706:       sprintf(get_vterm_ptr(2, 0), "H254 %d, T%ld  ", sizeof(header254), V
      +                          .testing);
 23379   010FC4  EE23  F149         	lfsr	2,_V+303	;volatile
 23380   010FC8  006F FF7B FFE6     	movff	postinc2,postinc1
 23381   010FCE  006F FF7B FFE6     	movff	postinc2,postinc1
 23382   010FD4  006F FF7B FFE6     	movff	postinc2,postinc1
 23383   010FDA  006F FF7B FFE6     	movff	postinc2,postinc1
 23384   010FE0  0E01               	movlw	1
 23385   010FE2  6EE6               	movwf	postinc1,c
 23386   010FE4  0E01               	movlw	1
 23387   010FE6  6EE6               	movwf	postinc1,c
 23388   010FE8  0E9B               	movlw	low STR_9
 23389   010FEA  6EE6               	movwf	postinc1,c
 23390   010FEC  0EFF               	movlw	high STR_9
 23391   010FEE  6EE6               	movwf	postinc1,c
 23392   010FF0  0E00               	movlw	0
 23393   010FF2  6EE6               	movwf	postinc1,c
 23394   010FF4  0E02               	movlw	2
 23395   010FF6  6EE6               	movwf	postinc1,c
 23396   010FF8  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 23397   010FFC  0060  F08F  FFE6   	movff	btemp,postinc1
 23398   011002  0060  F093  FFE6   	movff	btemp+1,postinc1
 23399   011008  0E0A               	movlw	10
 23400   01100A  6EE6               	movwf	postinc1,c
 23401   01100C  EC29  F0B2         	call	_sprintf	;wreg free
 23402   011010  D1BD               	goto	l13792
 23403   011012                     l13728:
 23404                           
 23405                           ;main.c: 708:       sprintf(get_vterm_ptr(2, 0), "HOST: %ld G%d      #", V.ticks, V.g_st
      +                          ate);
 23406   011012  EE23  F01C         	lfsr	2,_V+2	;volatile
 23407   011016  50DF               	movf	indf2,w,c
 23408   011018  6EE6               	movwf	postinc1,c
 23409   01101A  0E00               	movlw	0
 23410   01101C  6EE6               	movwf	postinc1,c
 23411   01101E  EE23  F141         	lfsr	2,_V+295	;volatile
 23412   011022  006F FF7B FFE6     	movff	postinc2,postinc1
 23413   011028  006F FF7B FFE6     	movff	postinc2,postinc1
 23414   01102E  006F FF7B FFE6     	movff	postinc2,postinc1
 23415   011034  006F FF7B FFE6     	movff	postinc2,postinc1
 23416   01103A  0E5E               	movlw	low STR_10
 23417   01103C  6EE6               	movwf	postinc1,c
 23418   01103E  0EFE               	movlw	high STR_10
 23419   011040  6EE6               	movwf	postinc1,c
 23420   011042  0E00               	movlw	0
 23421   011044  6EE6               	movwf	postinc1,c
 23422   011046  0E02               	movlw	2
 23423   011048  6EE6               	movwf	postinc1,c
 23424   01104A  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 23425   01104E  0060  F08F  FFE6   	movff	btemp,postinc1
 23426   011054  0060  F093  FFE6   	movff	btemp+1,postinc1
 23427   01105A  0E0A               	movlw	10
 23428   01105C  6EE6               	movwf	postinc1,c
 23429   01105E  EC29  F0B2         	call	_sprintf	;wreg free
 23430   011062  D194               	goto	l13792
 23431   011064                     l13730:
 23432                           
 23433                           ;main.c: 719:     if (r_protocol(&V.r_l_state) == LINK_STATE_DONE) {
 23434   011064  0E1F               	movlw	low (_V+5)
 23435   011066  6EE6               	movwf	postinc1,c
 23436   011068  0E0C               	movlw	high (_V+5)
 23437   01106A  6EE6               	movwf	postinc1,c
 23438   01106C  EC12  F096         	call	_r_protocol	;wreg free
 23439   011070  0E04               	movlw	4
 23440   011072  1823               	xorwf	btemp^0,w,c
 23441   011074  A4D8               	btfss	status,2,c
 23442   011076  D087               	goto	l13756
 23443                           
 23444                           ;main.c: 720:      set_display_info(DIS_STR);
 23445   011078  0E00               	movlw	0
 23446   01107A  6EE6               	movwf	postinc1,c
 23447   01107C  EC48  F0BF         	call	_set_display_info	;wreg free
 23448                           
 23449                           ;main.c: 721:      s = get_vterm_ptr(0, 0);
 23450   011080  0E00               	movlw	0
 23451   011082  6EE6               	movwf	postinc1,c
 23452   011084  0E00               	movlw	0
 23453   011086  6EE6               	movwf	postinc1,c
 23454   011088  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 23455                           
 23456                           ;stkvar	_s @ sp[(-3)+0]
 23457   01108C  0EFE               	movlw	-2
 23458   01108E  0060  F093  FFE3   	movff	btemp+1,plusw1
 23459   011094  0EFD               	movlw	-3
 23460   011096  0060  F08F  FFE3   	movff	btemp,plusw1
 23461                           
 23462                           ;main.c: 722:      if (V.stream == 9) {
 23463   01109C  0063  F537  FFE8   	movff	_V+307,wreg	;volatile
 23464   0110A2  0A09               	xorlw	9
 23465   0110A4  A4D8               	btfss	status,2,c
 23466   0110A6  D01F               	goto	l1393
 23467                           
 23468                           ;main.c: 723:       V.msg_error = V.function;
 23469   0110A8  0063  F538  FD51   	movff	_V+308,_V+311	;volatile
 23470                           
 23471                           ;main.c: 724:       sprintf(s, " S%dF%d Err         ", V.stream, V.function);
 23472   0110AE  EE23  F14E         	lfsr	2,_V+308	;volatile
 23473   0110B2  50DF               	movf	indf2,w,c
 23474   0110B4  6EE6               	movwf	postinc1,c
 23475   0110B6  0E00               	movlw	0
 23476   0110B8  6EE6               	movwf	postinc1,c
 23477   0110BA  EE23  F14D         	lfsr	2,_V+307	;volatile
 23478   0110BE  50DF               	movf	indf2,w,c
 23479   0110C0  6EE6               	movwf	postinc1,c
 23480   0110C2  0E00               	movlw	0
 23481   0110C4  6EE6               	movwf	postinc1,c
 23482   0110C6  0E1F               	movlw	low STR_11
 23483   0110C8  6EE6               	movwf	postinc1,c
 23484   0110CA  0EFE               	movlw	high STR_11
 23485   0110CC  6EE6               	movwf	postinc1,c
 23486                           
 23487                           ;stkvar	_s @ sp[(-9)+0]
 23488   0110CE  0EF7               	movlw	-9
 23489   0110D0  006F FF8F FFE6     	movff	plusw1,postinc1
 23490   0110D6  006F FF8F FFE6     	movff	plusw1,postinc1
 23491   0110DC  0E08               	movlw	8
 23492   0110DE  6EE6               	movwf	postinc1,c
 23493   0110E0  EC29  F0B2         	call	_sprintf	;wreg free
 23494                           
 23495                           ;main.c: 725:      } else {
 23496   0110E4  D01F               	goto	l13744
 23497   0110E6                     l1393:
 23498                           
 23499                           ;main.c: 726:       V.msg_error = MSG_ERROR_NONE;
 23500   0110E6  0E00               	movlw	0
 23501   0110E8  006F FFA0  FD51    	movff	wreg,_V+311	;volatile
 23502                           
 23503                           ;main.c: 727:       sprintf(s, " S%dF%d #           ", V.stream, V.function);
 23504   0110EE  EE23  F14E         	lfsr	2,_V+308	;volatile
 23505   0110F2  50DF               	movf	indf2,w,c
 23506   0110F4  6EE6               	movwf	postinc1,c
 23507   0110F6  0E00               	movlw	0
 23508   0110F8  6EE6               	movwf	postinc1,c
 23509   0110FA  EE23  F14D         	lfsr	2,_V+307	;volatile
 23510   0110FE  50DF               	movf	indf2,w,c
 23511   011100  6EE6               	movwf	postinc1,c
 23512   011102  0E00               	movlw	0
 23513   011104  6EE6               	movwf	postinc1,c
 23514   011106  0E0A               	movlw	low STR_12
 23515   011108  6EE6               	movwf	postinc1,c
 23516   01110A  0EFE               	movlw	high STR_12
 23517   01110C  6EE6               	movwf	postinc1,c
 23518                           
 23519                           ;stkvar	_s @ sp[(-9)+0]
 23520   01110E  0EF7               	movlw	-9
 23521   011110  006F FF8F FFE6     	movff	plusw1,postinc1
 23522   011116  006F FF8F FFE6     	movff	plusw1,postinc1
 23523   01111C  0E08               	movlw	8
 23524   01111E  6EE6               	movwf	postinc1,c
 23525   011120  EC29  F0B2         	call	_sprintf	;wreg free
 23526   011124                     l13744:
 23527                           
 23528                           ; BSR set to: 1
 23529                           ;main.c: 729:      s[16] = 0;
 23530                           ;stkvar	_s @ sp[(-3)+0]
 23531   011124  0EFD               	movlw	-3
 23532   011126  006F FF8C  F02D    	movff	plusw1,btemp+10
 23533   01112C  0EFE               	movlw	-2
 23534   01112E  006F FF8C  F02E    	movff	plusw1,btemp+11
 23535   011134  0E10               	movlw	16
 23536   011136  242D               	addwf	(btemp+10)^0,w,c
 23537   011138  6ED9               	movwf	fsr2l,c
 23538   01113A  0E00               	movlw	0
 23539   01113C  202E               	addwfc	(btemp+11)^0,w,c
 23540   01113E  6EDA               	movwf	fsr2h,c
 23541   011140  6ADF               	clrf	indf2,c
 23542                           
 23543                           ; BSR set to: 1
 23544                           ;main.c: 730:      MyeaDogM_WriteStringAtPos(0, 0, s);
 23545                           ;stkvar	_s @ sp[(-3)+0]
 23546   011142  0EFD               	movlw	-3
 23547   011144  006F FF8F FFE6     	movff	plusw1,postinc1
 23548   01114A  006F FF8F FFE6     	movff	plusw1,postinc1
 23549   011150  0E00               	movlw	0
 23550   011152  6EE6               	movwf	postinc1,c
 23551   011154  0E00               	movlw	0
 23552   011156  6EE6               	movwf	postinc1,c
 23553   011158  EC20  F0B0         	call	_MyeaDogM_WriteStringAtPos	;wreg free
 23554                           
 23555                           ;main.c: 734:      if (V.wbit) {
 23556   01115C  EE23  F167         	lfsr	2,_V+333	;volatile
 23557   011160  A2DF               	btfss	indf2,1,c
 23558   011162  D00D               	goto	l1395
 23559                           
 23560                           ;main.c: 735:       V.s_state = SEQ_STATE_TX;
 23561   011164  0E02               	movlw	2
 23562   011166  006F FFA0  FC1A    	movff	wreg,_V
 23563                           
 23564                           ;main.c: 736:       V.failed_send = 0;
 23565   01116C  EE23  F167         	lfsr	2,_V+333	;volatile
 23566   011170  0E0F               	movlw	-241
 23567   011172  16DF               	andwf	223,f,c
 23568                           
 23569                           ;main.c: 737:       V.t_l_state = LINK_STATE_IDLE;
 23570   011174  0E00               	movlw	0
 23571   011176  006F FFA0  FC20    	movff	wreg,_V+6	;volatile
 23572                           
 23573                           ;main.c: 738:      } else {
 23574   01117C  D004               	goto	l13756
 23575   01117E                     l1395:
 23576                           
 23577                           ;main.c: 739:       V.s_state = SEQ_STATE_TRIGGER;
 23578   01117E  0E03               	movlw	3
 23579   011180  006F FFA0  FC1A    	movff	wreg,_V
 23580   011186                     l13756:
 23581                           
 23582                           ;main.c: 742:     if (V.r_l_state == LINK_STATE_ERROR)
 23583   011186  0063  F07F  FFE8   	movff	_V+5,wreg	;volatile
 23584   01118C  D011               	goto	L43
 23585   01118E                     l13760:
 23586                           
 23587                           ;main.c: 749:     if (t_protocol(&V.t_l_state) == LINK_STATE_DONE) {
 23588   01118E  0E20               	movlw	low (_V+6)
 23589   011190  6EE6               	movwf	postinc1,c
 23590   011192  0E0C               	movlw	high (_V+6)
 23591   011194  6EE6               	movwf	postinc1,c
 23592   011196  EC2C  F09A         	call	_t_protocol	;wreg free
 23593   01119A  0E04               	movlw	4
 23594   01119C  1823               	xorwf	btemp^0,w,c
 23595   01119E  A4D8               	btfss	status,2,c
 23596   0111A0  D004               	goto	l13764
 23597                           
 23598                           ;main.c: 750:      V.s_state = SEQ_STATE_TRIGGER;
 23599   0111A2  0E03               	movlw	3
 23600   0111A4  006F FFA0  FC1A    	movff	wreg,_V
 23601   0111AA                     l13764:
 23602                           
 23603                           ;main.c: 752:     if (V.t_l_state == LINK_STATE_ERROR)
 23604   0111AA  0063  F083  FFE8   	movff	_V+6,wreg	;volatile
 23605   0111B0                     L43:
 23606   0111B0  0A06               	xorlw	6
 23607   0111B2  A4D8               	btfss	status,2,c
 23608   0111B4  D0EB               	goto	l13792
 23609                           
 23610                           ;main.c: 753:      V.s_state = SEQ_STATE_ERROR;
 23611   0111B6  0E06               	movlw	6
 23612   0111B8  D087               	goto	L2
 23613   0111BA                     l13768:
 23614                           
 23615                           ;main.c: 756:     set_display_info(DIS_STR);
 23616   0111BA  0E00               	movlw	0
 23617   0111BC  6EE6               	movwf	postinc1,c
 23618   0111BE  EC48  F0BF         	call	_set_display_info	;wreg free
 23619                           
 23620                           ;main.c: 757:     s = get_vterm_ptr(0, 0);
 23621   0111C2  0E00               	movlw	0
 23622   0111C4  6EE6               	movwf	postinc1,c
 23623   0111C6  0E00               	movlw	0
 23624   0111C8  6EE6               	movwf	postinc1,c
 23625   0111CA  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 23626                           
 23627                           ;stkvar	_s @ sp[(-3)+0]
 23628   0111CE  0EFE               	movlw	-2
 23629   0111D0  0060  F093  FFE3   	movff	btemp+1,plusw1
 23630   0111D6  0EFD               	movlw	-3
 23631   0111D8  0060  F08F  FFE3   	movff	btemp,plusw1
 23632                           
 23633                           ;main.c: 758:     if (V.queue) {
 23634   0111DE  EE23  F168         	lfsr	2,_V+334	;volatile
 23635   0111E2  A8DF               	btfss	indf2,4,c
 23636   0111E4  D02E               	goto	l1402
 23637                           
 23638                           ;main.c: 759:      V.r_l_state = LINK_STATE_IDLE;
 23639   0111E6  0E00               	movlw	0
 23640   0111E8  006F FFA0  FC1F    	movff	wreg,_V+5	;volatile
 23641                           
 23642                           ;main.c: 760:      V.t_l_state = LINK_STATE_IDLE;
 23643   0111EE  0E00               	movlw	0
 23644   0111F0  006F FFA0  FC20    	movff	wreg,_V+6	;volatile
 23645                           
 23646                           ;main.c: 761:      V.s_state = SEQ_STATE_TX;
 23647   0111F6  0E02               	movlw	2
 23648   0111F8  006F FFA0  FC1A    	movff	wreg,_V
 23649                           
 23650                           ;main.c: 762:      sprintf(s, " S%dF%d # OKQ%d        ", V.stream, V.function, V.e_types
      +                          );
 23651   0111FE  EE23  F01D         	lfsr	2,_V+3	;volatile
 23652   011202  50DF               	movf	indf2,w,c
 23653   011204  6EE6               	movwf	postinc1,c
 23654   011206  0E00               	movlw	0
 23655   011208  6EE6               	movwf	postinc1,c
 23656   01120A  EE23  F14E         	lfsr	2,_V+308	;volatile
 23657   01120E  50DF               	movf	indf2,w,c
 23658   011210  6EE6               	movwf	postinc1,c
 23659   011212  0E00               	movlw	0
 23660   011214  6EE6               	movwf	postinc1,c
 23661   011216  EE23  F14D         	lfsr	2,_V+307	;volatile
 23662   01121A  50DF               	movf	indf2,w,c
 23663   01121C  6EE6               	movwf	postinc1,c
 23664   01121E  0E00               	movlw	0
 23665   011220  6EE6               	movwf	postinc1,c
 23666   011222  0E9C               	movlw	low STR_13
 23667   011224  6EE6               	movwf	postinc1,c
 23668   011226  0EFD               	movlw	high STR_13
 23669   011228  6EE6               	movwf	postinc1,c
 23670                           
 23671                           ;stkvar	_s @ sp[(-11)+0]
 23672   01122A  0EF5               	movlw	-11
 23673   01122C  006F FF8F FFE6     	movff	plusw1,postinc1
 23674   011232  006F FF8F FFE6     	movff	plusw1,postinc1
 23675   011238  0E0A               	movlw	10
 23676   01123A  6EE6               	movwf	postinc1,c
 23677   01123C  EC29  F0B2         	call	_sprintf	;wreg free
 23678                           
 23679                           ;main.c: 763:     } else {
 23680   011240  D025               	goto	l13780
 23681   011242                     l1402:
 23682                           
 23683                           ;main.c: 764:      V.s_state = SEQ_STATE_DONE;
 23684   011242  0E05               	movlw	5
 23685   011244  006F FFA0  FC1A    	movff	wreg,_V
 23686                           
 23687                           ;main.c: 765:      sprintf(s, " S%dF%d # OK %d        ", V.stream, V.function, V.e_types
      +                          );
 23688   01124A  EE23  F01D         	lfsr	2,_V+3	;volatile
 23689   01124E  50DF               	movf	indf2,w,c
 23690   011250  6EE6               	movwf	postinc1,c
 23691   011252  0E00               	movlw	0
 23692   011254  6EE6               	movwf	postinc1,c
 23693   011256  EE23  F14E         	lfsr	2,_V+308	;volatile
 23694   01125A  50DF               	movf	indf2,w,c
 23695   01125C  6EE6               	movwf	postinc1,c
 23696   01125E  0E00               	movlw	0
 23697   011260  6EE6               	movwf	postinc1,c
 23698   011262  EE23  F14D         	lfsr	2,_V+307	;volatile
 23699   011266  50DF               	movf	indf2,w,c
 23700   011268  6EE6               	movwf	postinc1,c
 23701   01126A  0E00               	movlw	0
 23702   01126C  6EE6               	movwf	postinc1,c
 23703   01126E  0E84               	movlw	low STR_14
 23704   011270  6EE6               	movwf	postinc1,c
 23705   011272  0EFD               	movlw	high STR_14
 23706   011274  6EE6               	movwf	postinc1,c
 23707                           
 23708                           ;stkvar	_s @ sp[(-11)+0]
 23709   011276  0EF5               	movlw	-11
 23710   011278  006F FF8F FFE6     	movff	plusw1,postinc1
 23711   01127E  006F FF8F FFE6     	movff	plusw1,postinc1
 23712   011284  0E0A               	movlw	10
 23713   011286  6EE6               	movwf	postinc1,c
 23714   011288  EC29  F0B2         	call	_sprintf	;wreg free
 23715   01128C                     l13780:
 23716                           
 23717                           ; BSR set to: 1
 23718                           ;main.c: 768:     s[16] = 0;
 23719                           ;stkvar	_s @ sp[(-3)+0]
 23720   01128C  0EFD               	movlw	-3
 23721   01128E  006F FF8C  F02D    	movff	plusw1,btemp+10
 23722   011294  0EFE               	movlw	-2
 23723   011296  006F FF8C  F02E    	movff	plusw1,btemp+11
 23724   01129C  0E10               	movlw	16
 23725   01129E  242D               	addwf	(btemp+10)^0,w,c
 23726   0112A0  6ED9               	movwf	fsr2l,c
 23727   0112A2  0E00               	movlw	0
 23728   0112A4  202E               	addwfc	(btemp+11)^0,w,c
 23729   0112A6  6EDA               	movwf	fsr2h,c
 23730   0112A8  6ADF               	clrf	indf2,c
 23731                           
 23732                           ; BSR set to: 1
 23733                           ;main.c: 769:     MyeaDogM_WriteStringAtPos(0, 0, s);
 23734                           ;stkvar	_s @ sp[(-3)+0]
 23735   0112AA  0EFD               	movlw	-3
 23736   0112AC  006F FF8F FFE6     	movff	plusw1,postinc1
 23737   0112B2  006F FF8F FFE6     	movff	plusw1,postinc1
 23738   0112B8  0E00               	movlw	0
 23739   0112BA  6EE6               	movwf	postinc1,c
 23740   0112BC  0E00               	movlw	0
 23741   0112BE  6EE6               	movwf	postinc1,c
 23742   0112C0  EC20  F0B0         	call	_MyeaDogM_WriteStringAtPos	;wreg free
 23743                           
 23744                           ;main.c: 770:     break;
 23745   0112C4  D063               	goto	l13792
 23746   0112C6                     l1404:
 23747                           
 23748                           ;main.c: 772:     V.s_state = SEQ_STATE_INIT;
 23749   0112C6  0E00               	movlw	0
 23750   0112C8                     L2:
 23751   0112C8  006F FFA0  FC1A    	movff	wreg,_V
 23752                           
 23753                           ;main.c: 773:     break;
 23754   0112CE  D05E               	goto	l13792
 23755   0112D0                     l1406:
 23756                           
 23757                           ;main.c: 776:     V.s_state = SEQ_STATE_INIT;
 23758   0112D0  0E00               	movlw	0
 23759   0112D2  006F FFA0  FC1A    	movff	wreg,_V
 23760                           
 23761                           ;main.c: 777:     sprintf(get_vterm_ptr(2, 0), "E%d A%d T%d G%d #", V.error, V.abort, V.
      +                          timer_error, V.g_state);
 23762   0112D8  EE23  F01C         	lfsr	2,_V+2	;volatile
 23763   0112DC  50DF               	movf	indf2,w,c
 23764   0112DE  6EE6               	movwf	postinc1,c
 23765   0112E0  0E00               	movlw	0
 23766   0112E2  6EE6               	movwf	postinc1,c
 23767   0112E4  EE23  F15B         	lfsr	2,_V+321	;volatile
 23768   0112E8  006F FF78  F02D    	movff	postinc2,btemp+10
 23769   0112EE  006F FF74  F02E    	movff	postdec2,btemp+11
 23770   0112F4  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 23771   0112FA  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 23772   011300  EE23  F150         	lfsr	2,_V+310	;volatile
 23773   011304  50DF               	movf	indf2,w,c
 23774   011306  6EE6               	movwf	postinc1,c
 23775   011308  0E00               	movlw	0
 23776   01130A  6EE6               	movwf	postinc1,c
 23777   01130C  EE23  F14F         	lfsr	2,_V+309	;volatile
 23778   011310  50DF               	movf	indf2,w,c
 23779   011312  6EE6               	movwf	postinc1,c
 23780   011314  0E00               	movlw	0
 23781   011316  6EE6               	movwf	postinc1,c
 23782   011318  0E45               	movlw	low STR_15
 23783   01131A  6EE6               	movwf	postinc1,c
 23784   01131C  0EFF               	movlw	high STR_15
 23785   01131E  6EE6               	movwf	postinc1,c
 23786   011320  0E00               	movlw	0
 23787   011322  6EE6               	movwf	postinc1,c
 23788   011324  0E02               	movlw	2
 23789   011326  6EE6               	movwf	postinc1,c
 23790   011328  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 23791   01132C  0060  F08F  FFE6   	movff	btemp,postinc1
 23792   011332  0060  F093  FFE6   	movff	btemp+1,postinc1
 23793   011338  0E0C               	movlw	12
 23794   01133A  6EE6               	movwf	postinc1,c
 23795   01133C  EC29  F0B2         	call	_sprintf	;wreg free
 23796                           
 23797                           ;main.c: 778:     update_lcd(0);
 23798   011340  0E00               	movlw	0
 23799   011342  6EE6               	movwf	postinc1,c
 23800   011344  ECA1  F0B2         	call	_update_lcd	;wreg free
 23801                           
 23802                           ;main.c: 779:     WaitMs(2000);
 23803   011348  0ED0               	movlw	208
 23804   01134A  6EE6               	movwf	postinc1,c
 23805   01134C  0E07               	movlw	7
 23806   01134E  6EE6               	movwf	postinc1,c
 23807   011350  EC95  F0BC         	call	_WaitMs	;wreg free
 23808                           
 23809                           ;main.c: 780:     break;
 23810   011354  D01B               	goto	l13792
 23811   011356                     l13790:
 23812   011356  EE23  F01A         	lfsr	2,_V
 23813   01135A  50DF               	movf	indf2,w,c
 23814   01135C  6E2D               	movwf	(btemp+10)^0,c
 23815   01135E  6A2E               	clrf	(btemp+11)^0,c
 23816                           
 23817                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23818                           ; Switch size 1, requested type "simple"
 23819                           ; Number of cases is 1, Range of values is 0 to 0
 23820                           ; switch strategies available:
 23821                           ; Name         Instructions Cycles
 23822                           ; simple_byte            4     3 (average)
 23823                           ;	Chosen strategy is simple_byte
 23824   011360  502E               	movf	(btemp+11)^0,w,c
 23825   011362  0A00               	xorlw	0	; case 0
 23826   011364  A4D8               	btfss	status,2,c
 23827   011366  D7B4               	goto	l1406
 23828                           
 23829                           ; Switch size 1, requested type "simple"
 23830                           ; Number of cases is 6, Range of values is 0 to 6
 23831                           ; switch strategies available:
 23832                           ; Name         Instructions Cycles
 23833                           ; simple_byte           19    10 (average)
 23834                           ;	Chosen strategy is simple_byte
 23835   011368  502D               	movf	(btemp+10)^0,w,c
 23836   01136A  0A00               	xorlw	0	; case 0
 23837   01136C  B4D8               	btfsc	status,2,c
 23838   01136E  D60E               	goto	l1386
 23839   011370  0A01               	xorlw	1	; case 1
 23840   011372  B4D8               	btfsc	status,2,c
 23841   011374  D677               	goto	l13730
 23842   011376  0A03               	xorlw	3	; case 2
 23843   011378  B4D8               	btfsc	status,2,c
 23844   01137A  D709               	goto	l13760
 23845   01137C  0A01               	xorlw	1	; case 3
 23846   01137E  B4D8               	btfsc	status,2,c
 23847   011380  D71C               	goto	l13768
 23848   011382  0A06               	xorlw	6	; case 5
 23849   011384  B4D8               	btfsc	status,2,c
 23850   011386  D79F               	goto	l1404
 23851   011388  0A03               	xorlw	3	; case 6
 23852   01138A  D7A2               	goto	l1406
 23853   01138C                     l13792:
 23854                           
 23855                           ;main.c: 782:    if ((V.error == LINK_ERROR_NONE) && (V.abort == LINK_ERROR_NONE)) {
 23856   01138C  0063  F53F  FFE8   	movff	_V+309,wreg	;volatile
 23857   011392  0A0A               	xorlw	10
 23858   011394  A4D8               	btfss	status,2,c
 23859   011396  D261               	goto	l13882
 23860   011398  0063  F543  FFE8   	movff	_V+310,wreg	;volatile
 23861   01139E  0A0A               	xorlw	10
 23862   0113A0  A4D8               	btfss	status,2,c
 23863   0113A2  D25B               	goto	l13882
 23864                           
 23865                           ;main.c: 783:     if (TimerDone(TMR_DISPLAY)) {
 23866   0113A4  0E0A               	movlw	10
 23867   0113A6  6EE6               	movwf	postinc1,c
 23868   0113A8  ECCB  F0BE         	call	_TimerDone	;wreg free
 23869   0113AC  5023               	movf	btemp^0,w,c
 23870   0113AE  B4D8               	btfsc	status,2,c
 23871   0113B0  D053               	goto	l13804
 23872                           
 23873                           ;main.c: 784:      if (V.debug)
 23874   0113B2  EE23  F168         	lfsr	2,_V+334	;volatile
 23875   0113B6  AADF               	btfss	indf2,5,c
 23876   0113B8  D027               	goto	l13802
 23877                           
 23878                           ;main.c: 785:       sprintf(get_vterm_ptr(2, 0), "H254 %d, T%ld       ", sizeof(header25
      +                          4), V.testing);
 23879   0113BA  EE23  F149         	lfsr	2,_V+303	;volatile
 23880   0113BE  006F FF7B FFE6     	movff	postinc2,postinc1
 23881   0113C4  006F FF7B FFE6     	movff	postinc2,postinc1
 23882   0113CA  006F FF7B FFE6     	movff	postinc2,postinc1
 23883   0113D0  006F FF7B FFE6     	movff	postinc2,postinc1
 23884   0113D6  0E01               	movlw	1
 23885   0113D8  6EE6               	movwf	postinc1,c
 23886   0113DA  0E01               	movlw	1
 23887   0113DC  6EE6               	movwf	postinc1,c
 23888   0113DE  0E49               	movlw	low STR_16
 23889   0113E0  6EE6               	movwf	postinc1,c
 23890   0113E2  0EFE               	movlw	high STR_16
 23891   0113E4  6EE6               	movwf	postinc1,c
 23892   0113E6  0E00               	movlw	0
 23893   0113E8  6EE6               	movwf	postinc1,c
 23894   0113EA  0E02               	movlw	2
 23895   0113EC  6EE6               	movwf	postinc1,c
 23896   0113EE  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 23897   0113F2  0060  F08F  FFE6   	movff	btemp,postinc1
 23898   0113F8  0060  F093  FFE6   	movff	btemp+1,postinc1
 23899   0113FE  0E0A               	movlw	10
 23900   011400  6EE6               	movwf	postinc1,c
 23901   011402  EC29  F0B2         	call	_sprintf	;wreg free
 23902   011406  D028               	goto	l13804
 23903   011408                     l13802:
 23904                           
 23905                           ;main.c: 787:       sprintf(get_vterm_ptr(2, 0), "HOST: %ld G%d      #", V.ticks, V.g_st
      +                          ate);
 23906   011408  EE23  F01C         	lfsr	2,_V+2	;volatile
 23907   01140C  50DF               	movf	indf2,w,c
 23908   01140E  6EE6               	movwf	postinc1,c
 23909   011410  0E00               	movlw	0
 23910   011412  6EE6               	movwf	postinc1,c
 23911   011414  EE23  F141         	lfsr	2,_V+295	;volatile
 23912   011418  006F FF7B FFE6     	movff	postinc2,postinc1
 23913   01141E  006F FF7B FFE6     	movff	postinc2,postinc1
 23914   011424  006F FF7B FFE6     	movff	postinc2,postinc1
 23915   01142A  006F FF7B FFE6     	movff	postinc2,postinc1
 23916   011430  0E5E               	movlw	low STR_10
 23917   011432  6EE6               	movwf	postinc1,c
 23918   011434  0EFE               	movlw	high STR_10
 23919   011436  6EE6               	movwf	postinc1,c
 23920   011438  0E00               	movlw	0
 23921   01143A  6EE6               	movwf	postinc1,c
 23922   01143C  0E02               	movlw	2
 23923   01143E  6EE6               	movwf	postinc1,c
 23924   011440  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 23925   011444  0060  F08F  FFE6   	movff	btemp,postinc1
 23926   01144A  0060  F093  FFE6   	movff	btemp+1,postinc1
 23927   011450  0E0A               	movlw	10
 23928   011452  6EE6               	movwf	postinc1,c
 23929   011454  EC29  F0B2         	call	_sprintf	;wreg free
 23930   011458                     l13804:
 23931                           
 23932                           ;main.c: 793:     if (((V.g_state == GEM_STATE_REMOTE) && (V.s_state == SEQ_STATE_RX) &&
      +                           !V.queue)) {
 23933   011458  0063  F073  FFE8   	movff	_V+2,wreg	;volatile
 23934   01145E  0A04               	xorlw	4
 23935   011460  A4D8               	btfss	status,2,c
 23936   011462  D1FB               	goto	l13882
 23937   011464  0063  F06B  FFE8   	movff	_V,wreg
 23938   01146A  0A01               	xorlw	1
 23939   01146C  A4D8               	btfss	status,2,c
 23940   01146E  D1F5               	goto	l13882
 23941   011470  EE23  F168         	lfsr	2,_V+334	;volatile
 23942   011474  B8DF               	btfsc	indf2,4,c
 23943   011476  D1F1               	goto	l13882
 23944                           
 23945                           ;main.c: 794:      if ((V.r_l_state == LINK_STATE_IDLE) && (V.t_l_state == LINK_STATE_ID
      +                          LE)) {
 23946   011478  EE23  F01F         	lfsr	2,_V+5	;volatile
 23947   01147C  50DF               	movf	indf2,w,c
 23948   01147E  A4D8               	btfss	status,2,c
 23949   011480  D1EC               	goto	l13882
 23950   011482  EE23  F020         	lfsr	2,_V+6	;volatile
 23951   011486  50DF               	movf	indf2,w,c
 23952   011488  A4D8               	btfss	status,2,c
 23953   01148A  D1E7               	goto	l13882
 23954                           
 23955                           ;main.c: 795:       if (TimerDone(TMR_HBIO)) {
 23956   01148C  0E06               	movlw	6
 23957   01148E  6EE6               	movwf	postinc1,c
 23958   011490  ECCB  F0BE         	call	_TimerDone	;wreg free
 23959   011494  5023               	movf	btemp^0,w,c
 23960   011496  B4D8               	btfsc	status,2,c
 23961   011498  D1E0               	goto	l13882
 23962                           
 23963                           ;main.c: 796:        set_display_info(DIS_STR);
 23964   01149A  0E00               	movlw	0
 23965   01149C  6EE6               	movwf	postinc1,c
 23966   01149E  EC48  F0BF         	call	_set_display_info	;wreg free
 23967                           
 23968                           ;main.c: 798:        if (V.stack) {
 23969   0114A2  EE23  F169         	lfsr	2,_V+335	;volatile
 23970   0114A6  50DF               	movf	223,w,c
 23971   0114A8  0B07               	andlw	7
 23972   0114AA  0900               	iorlw	0
 23973   0114AC  B4D8               	btfsc	status,2,c
 23974   0114AE  D013               	goto	l13830
 23975                           
 23976                           ;main.c: 799:         hb_message();
 23977   0114B0  ECBC  F0B9         	call	_hb_message	;wreg free
 23978                           
 23979                           ;main.c: 800:         V.msg_error = MSG_ERROR_NONE;
 23980   0114B4  0E00               	movlw	0
 23981   0114B6  006F FFA0  FD51    	movff	wreg,_V+311	;volatile
 23982                           
 23983                           ;main.c: 801:         V.ping_count = 0;
 23984   0114BC  0E00               	movlw	0
 23985   0114BE  006F FFA0  FD9A    	movff	wreg,_V+384	;volatile
 23986                           
 23987                           ;main.c: 802:         V.error = LINK_ERROR_NONE;
 23988   0114C4  0E0A               	movlw	10
 23989   0114C6  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 23990                           
 23991                           ;main.c: 803:         V.abort = LINK_ERROR_NONE;
 23992   0114CC  0E0A               	movlw	10
 23993   0114CE  006F FFA0  FD50    	movff	wreg,_V+310	;volatile
 23994                           
 23995                           ;main.c: 804:        } else {
 23996   0114D4  D1C2               	goto	l13882
 23997   0114D6                     l13830:
 23998                           
 23999                           ;main.c: 805:         StartTimer(TMR_HBIO, 30000);
 24000   0114D6  0E30               	movlw	48
 24001   0114D8  6EE6               	movwf	postinc1,c
 24002   0114DA  0E75               	movlw	117
 24003   0114DC  6EE6               	movwf	postinc1,c
 24004   0114DE  0E06               	movlw	6
 24005   0114E0  6EE6               	movwf	postinc1,c
 24006   0114E2  EC20  F0BC         	call	_StartTimer	;wreg free
 24007                           
 24008                           ;main.c: 806:         if (V.ping_count++ > 4) {
 24009   0114E6  EE23  F19A         	lfsr	2,_V+384	;volatile
 24010   0114EA  006F FF7C  F02E    	movff	indf2,btemp+11
 24011   0114F0  0E01               	movlw	1
 24012   0114F2  26DF               	addwf	indf2,f,c
 24013   0114F4  0E04               	movlw	4
 24014   0114F6  642E               	cpfsgt	(btemp+11)^0,c
 24015   0114F8  D03C               	goto	l13846
 24016                           
 24017                           ;main.c: 807:          set_display_info(DIS_STR);
 24018   0114FA  0E00               	movlw	0
 24019   0114FC  6EE6               	movwf	postinc1,c
 24020   0114FE  EC48  F0BF         	call	_set_display_info	;wreg free
 24021                           
 24022                           ;main.c: 808:          hb_message();
 24023   011502  ECBC  F0B9         	call	_hb_message	;wreg free
 24024                           
 24025                           ;main.c: 809:          sprintf(get_vterm_ptr(0, 0), "Ping P%d RTO %d    ", V.g_state, V.
      +                          equip_timeout);
 24026   011506  EE23  F161         	lfsr	2,_V+327	;volatile
 24027   01150A  006F FF78  F02D    	movff	postinc2,btemp+10
 24028   011510  006F FF74  F02E    	movff	postdec2,btemp+11
 24029   011516  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 24030   01151C  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 24031   011522  EE23  F01C         	lfsr	2,_V+2	;volatile
 24032   011526  50DF               	movf	indf2,w,c
 24033   011528  6EE6               	movwf	postinc1,c
 24034   01152A  0E00               	movlw	0
 24035   01152C  6EE6               	movwf	postinc1,c
 24036   01152E  0EAF               	movlw	low STR_18
 24037   011530  6EE6               	movwf	postinc1,c
 24038   011532  0EFE               	movlw	high STR_18
 24039   011534  6EE6               	movwf	postinc1,c
 24040   011536  0E00               	movlw	0
 24041   011538  6EE6               	movwf	postinc1,c
 24042   01153A  0E00               	movlw	0
 24043   01153C  6EE6               	movwf	postinc1,c
 24044   01153E  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 24045   011542  0060  F08F  FFE6   	movff	btemp,postinc1
 24046   011548  0060  F093  FFE6   	movff	btemp+1,postinc1
 24047   01154E  0E08               	movlw	8
 24048   011550  6EE6               	movwf	postinc1,c
 24049   011552  EC29  F0B2         	call	_sprintf	;wreg free
 24050                           
 24051                           ; BSR set to: 1
 24052                           ;main.c: 810:          update_lcd(0);
 24053   011556  0E00               	movlw	0
 24054   011558  6EE6               	movwf	postinc1,c
 24055   01155A  ECA1  F0B2         	call	_update_lcd	;wreg free
 24056                           
 24057                           ;main.c: 811:          WaitMs(250);
 24058   01155E  0EFA               	movlw	250
 24059   011560  6EE6               	movwf	postinc1,c
 24060   011562  0E00               	movlw	0
 24061   011564  6EE6               	movwf	postinc1,c
 24062   011566  EC95  F0BC         	call	_WaitMs	;wreg free
 24063                           
 24064                           ;main.c: 812:          V.ping_count = 0;
 24065   01156A  0E00               	movlw	0
 24066   01156C  006F FFA0  FD9A    	movff	wreg,_V+384	;volatile
 24067   011572                     l13846:
 24068                           
 24069                           ;main.c: 814:         set_display_info(DIS_STR);
 24070   011572  0E00               	movlw	0
 24071   011574  6EE6               	movwf	postinc1,c
 24072   011576  EC48  F0BF         	call	_set_display_info	;wreg free
 24073   01157A  D16F               	goto	l13882
 24074   01157C                     l1419:
 24075                           
 24076                           ;main.c: 824:     V.m_l_state = LINK_STATE_IDLE;
 24077   01157C  0E00               	movlw	0
 24078   01157E  006F FFA0  FC1E    	movff	wreg,_V+4	;volatile
 24079                           
 24080                           ;main.c: 825:     V.s_state = SEQ_STATE_RX;
 24081   011584  0E01               	movlw	1
 24082   011586  006F FFA0  FC1A    	movff	wreg,_V
 24083                           
 24084                           ;main.c: 826:     if (V.debug)
 24085   01158C  EE23  F168         	lfsr	2,_V+334	;volatile
 24086   011590  AADF               	btfss	indf2,5,c
 24087   011592  D027               	goto	l13852
 24088                           
 24089                           ;main.c: 827:      sprintf(get_vterm_ptr(2, 0), "H254 %d, T%ld       ", sizeof(header254
      +                          ), V.testing);
 24090   011594  EE23  F149         	lfsr	2,_V+303	;volatile
 24091   011598  006F FF7B FFE6     	movff	postinc2,postinc1
 24092   01159E  006F FF7B FFE6     	movff	postinc2,postinc1
 24093   0115A4  006F FF7B FFE6     	movff	postinc2,postinc1
 24094   0115AA  006F FF7B FFE6     	movff	postinc2,postinc1
 24095   0115B0  0E01               	movlw	1
 24096   0115B2  6EE6               	movwf	postinc1,c
 24097   0115B4  0E01               	movlw	1
 24098   0115B6  6EE6               	movwf	postinc1,c
 24099   0115B8  0E49               	movlw	low STR_16
 24100   0115BA  6EE6               	movwf	postinc1,c
 24101   0115BC  0EFE               	movlw	high STR_16
 24102   0115BE  6EE6               	movwf	postinc1,c
 24103   0115C0  0E00               	movlw	0
 24104   0115C2  6EE6               	movwf	postinc1,c
 24105   0115C4  0E02               	movlw	2
 24106   0115C6  6EE6               	movwf	postinc1,c
 24107   0115C8  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 24108   0115CC  0060  F08F  FFE6   	movff	btemp,postinc1
 24109   0115D2  0060  F093  FFE6   	movff	btemp+1,postinc1
 24110   0115D8  0E0A               	movlw	10
 24111   0115DA  6EE6               	movwf	postinc1,c
 24112   0115DC  EC29  F0B2         	call	_sprintf	;wreg free
 24113   0115E0  D0C5               	goto	l13872
 24114   0115E2                     l13852:
 24115                           
 24116                           ;main.c: 829:      sprintf(get_vterm_ptr(2, 0), "LOG: U%d G%d %d %d      #", V.uart, V.g
      +                          _state, V.timer_error, V.checksum_error);
 24117   0115E2  EE23  F159         	lfsr	2,_V+319	;volatile
 24118   0115E6  006F FF78  F02D    	movff	postinc2,btemp+10
 24119   0115EC  006F FF74  F02E    	movff	postdec2,btemp+11
 24120   0115F2  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 24121   0115F8  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 24122   0115FE  EE23  F15B         	lfsr	2,_V+321	;volatile
 24123   011602  006F FF78  F02D    	movff	postinc2,btemp+10
 24124   011608  006F FF74  F02E    	movff	postdec2,btemp+11
 24125   01160E  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 24126   011614  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 24127   01161A  EE23  F01C         	lfsr	2,_V+2	;volatile
 24128   01161E  50DF               	movf	indf2,w,c
 24129   011620  6EE6               	movwf	postinc1,c
 24130   011622  0E00               	movlw	0
 24131   011624  6EE6               	movwf	postinc1,c
 24132   011626  EE23  F197         	lfsr	2,_V+381	;volatile
 24133   01162A  50DF               	movf	indf2,w,c
 24134   01162C  6EE6               	movwf	postinc1,c
 24135   01162E  0E00               	movlw	0
 24136   011630  6EE6               	movwf	postinc1,c
 24137   011632  0E21               	movlw	low STR_20
 24138   011634  6EE6               	movwf	postinc1,c
 24139   011636  0EFD               	movlw	high STR_20
 24140   011638  6EE6               	movwf	postinc1,c
 24141   01163A  0E00               	movlw	0
 24142   01163C  6EE6               	movwf	postinc1,c
 24143   01163E  0E02               	movlw	2
 24144   011640  6EE6               	movwf	postinc1,c
 24145   011642  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 24146   011646  0060  F08F  FFE6   	movff	btemp,postinc1
 24147   01164C  0060  F093  FFE6   	movff	btemp+1,postinc1
 24148   011652  0E0C               	movlw	12
 24149   011654  6EE6               	movwf	postinc1,c
 24150   011656  EC29  F0B2         	call	_sprintf	;wreg free
 24151   01165A  D088               	goto	l13872
 24152   01165C                     l13854:
 24153                           
 24154                           ;main.c: 843:     if (m_protocol(&V.m_l_state) == LINK_STATE_DONE) {
 24155   01165C  0E1E               	movlw	low (_V+4)
 24156   01165E  6EE6               	movwf	postinc1,c
 24157   011660  0E0C               	movlw	high (_V+4)
 24158   011662  6EE6               	movwf	postinc1,c
 24159   011664  EC5E  F090         	call	_m_protocol	;wreg free
 24160   011668  0E04               	movlw	4
 24161   01166A  1823               	xorwf	btemp^0,w,c
 24162   01166C  A4D8               	btfss	status,2,c
 24163   01166E  D03B               	goto	l13862
 24164                           
 24165                           ;main.c: 844:      sprintf(V.buf, "S%dF%d #%ld       ", V.stream, V.function, V.ticks);
 24166   011670  EE23  F141         	lfsr	2,_V+295	;volatile
 24167   011674  006F FF7B FFE6     	movff	postinc2,postinc1
 24168   01167A  006F FF7B FFE6     	movff	postinc2,postinc1
 24169   011680  006F FF7B FFE6     	movff	postinc2,postinc1
 24170   011686  006F FF7B FFE6     	movff	postinc2,postinc1
 24171   01168C  EE23  F14E         	lfsr	2,_V+308	;volatile
 24172   011690  50DF               	movf	indf2,w,c
 24173   011692  6EE6               	movwf	postinc1,c
 24174   011694  0E00               	movlw	0
 24175   011696  6EE6               	movwf	postinc1,c
 24176   011698  EE23  F14D         	lfsr	2,_V+307	;volatile
 24177   01169C  50DF               	movf	indf2,w,c
 24178   01169E  6EE6               	movwf	postinc1,c
 24179   0116A0  0E00               	movlw	0
 24180   0116A2  6EE6               	movwf	postinc1,c
 24181   0116A4  0EFC               	movlw	low STR_21
 24182   0116A6  6EE6               	movwf	postinc1,c
 24183   0116A8  0EFE               	movlw	high STR_21
 24184   0116AA  6EE6               	movwf	postinc1,c
 24185   0116AC  0E21               	movlw	low (_V+7)
 24186   0116AE  6EE6               	movwf	postinc1,c
 24187   0116B0  0E0C               	movlw	high (_V+7)
 24188   0116B2  6EE6               	movwf	postinc1,c
 24189   0116B4  0E0C               	movlw	12
 24190   0116B6  6EE6               	movwf	postinc1,c
 24191   0116B8  EC29  F0B2         	call	_sprintf	;wreg free
 24192                           
 24193                           ; BSR set to: 1
 24194                           ;main.c: 845:      V.buf[13] = 0;
 24195   0116BC  0E00               	movlw	0
 24196   0116BE  006F FFA0  FC2E    	movff	wreg,_V+20	;volatile
 24197                           
 24198                           ;main.c: 846:      MyeaDogM_WriteStringAtPos(V.uart - 1, 0, V.buf);
 24199   0116C4  0E21               	movlw	low (_V+7)
 24200   0116C6  6EE6               	movwf	postinc1,c
 24201   0116C8  0E0C               	movlw	high (_V+7)
 24202   0116CA  6EE6               	movwf	postinc1,c
 24203   0116CC  0E00               	movlw	0
 24204   0116CE  6EE6               	movwf	postinc1,c
 24205   0116D0  0063  F65C  F02E   	movff	_V+381,btemp+11	;volatile
 24206   0116D6  042E               	decf	(btemp+11)^0,w,c
 24207   0116D8  6EE6               	movwf	postinc1,c
 24208   0116DA  EC20  F0B0         	call	_MyeaDogM_WriteStringAtPos	;wreg free
 24209                           
 24210                           ;main.c: 847:      V.s_state = SEQ_STATE_TRIGGER;
 24211   0116DE  0E03               	movlw	3
 24212   0116E0  006F FFA0  FC1A    	movff	wreg,_V
 24213   0116E6                     l13862:
 24214                           
 24215                           ;main.c: 849:     if (V.m_l_state == LINK_STATE_ERROR)
 24216   0116E6  0063  F07B  FFE8   	movff	_V+4,wreg	;volatile
 24217   0116EC  0A06               	xorlw	6
 24218   0116EE  A4D8               	btfss	status,2,c
 24219   0116F0  D03D               	goto	l13872
 24220                           
 24221                           ;main.c: 850:      V.s_state = SEQ_STATE_ERROR;
 24222   0116F2  0E06               	movlw	6
 24223   0116F4  D01F               	goto	L3
 24224   0116F6                     l1426:
 24225                           
 24226                           ;main.c: 853:     V.s_state = SEQ_STATE_DONE;
 24227   0116F6  0E05               	movlw	5
 24228   0116F8  006F FFA0  FC1A    	movff	wreg,_V
 24229                           
 24230                           ;main.c: 854:     sprintf(V.buf, "OK ");
 24231   0116FE  0EF5               	movlw	low STR_22
 24232   011700  6EE6               	movwf	postinc1,c
 24233   011702  0EFF               	movlw	high STR_22
 24234   011704  6EE6               	movwf	postinc1,c
 24235   011706  0E21               	movlw	low (_V+7)
 24236   011708  6EE6               	movwf	postinc1,c
 24237   01170A  0E0C               	movlw	high (_V+7)
 24238   01170C  6EE6               	movwf	postinc1,c
 24239   01170E  0E04               	movlw	4
 24240   011710  6EE6               	movwf	postinc1,c
 24241   011712  EC29  F0B2         	call	_sprintf	;wreg free
 24242                           
 24243                           ;main.c: 855:     MyeaDogM_WriteStringAtPos(V.uart - 1, 13, V.buf);
 24244   011716  0E21               	movlw	low (_V+7)
 24245   011718  6EE6               	movwf	postinc1,c
 24246   01171A  0E0C               	movlw	high (_V+7)
 24247   01171C  6EE6               	movwf	postinc1,c
 24248   01171E  0E0D               	movlw	13
 24249   011720  6EE6               	movwf	postinc1,c
 24250   011722  0063  F65C  F02E   	movff	_V+381,btemp+11	;volatile
 24251   011728  042E               	decf	(btemp+11)^0,w,c
 24252   01172A  6EE6               	movwf	postinc1,c
 24253   01172C  EC20  F0B0         	call	_MyeaDogM_WriteStringAtPos	;wreg free
 24254                           
 24255                           ;main.c: 856:     break;
 24256   011730  D01D               	goto	l13872
 24257   011732                     l1429:
 24258                           
 24259                           ;main.c: 860:     V.s_state = SEQ_STATE_INIT;
 24260   011732  0E00               	movlw	0
 24261   011734                     L3:
 24262   011734  006F FFA0  FC1A    	movff	wreg,_V
 24263                           
 24264                           ;main.c: 861:     break;
 24265   01173A  D018               	goto	l13872
 24266   01173C                     l13870:
 24267   01173C  EE23  F01A         	lfsr	2,_V
 24268   011740  50DF               	movf	indf2,w,c
 24269   011742  6E2D               	movwf	(btemp+10)^0,c
 24270   011744  6A2E               	clrf	(btemp+11)^0,c
 24271                           
 24272                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24273                           ; Switch size 1, requested type "simple"
 24274                           ; Number of cases is 1, Range of values is 0 to 0
 24275                           ; switch strategies available:
 24276                           ; Name         Instructions Cycles
 24277                           ; simple_byte            4     3 (average)
 24278                           ;	Chosen strategy is simple_byte
 24279   011746  502E               	movf	(btemp+11)^0,w,c
 24280   011748  0A00               	xorlw	0	; case 0
 24281   01174A  A4D8               	btfss	status,2,c
 24282   01174C  D7F2               	goto	l1429
 24283                           
 24284                           ; Switch size 1, requested type "simple"
 24285                           ; Number of cases is 5, Range of values is 0 to 6
 24286                           ; switch strategies available:
 24287                           ; Name         Instructions Cycles
 24288                           ; simple_byte           16     9 (average)
 24289                           ;	Chosen strategy is simple_byte
 24290   01174E  502D               	movf	(btemp+10)^0,w,c
 24291   011750  0A00               	xorlw	0	; case 0
 24292   011752  B4D8               	btfsc	status,2,c
 24293   011754  D713               	goto	l1419
 24294   011756  0A01               	xorlw	1	; case 1
 24295   011758  B4D8               	btfsc	status,2,c
 24296   01175A  D780               	goto	l13854
 24297   01175C  0A02               	xorlw	2	; case 3
 24298   01175E  B4D8               	btfsc	status,2,c
 24299   011760  D7CA               	goto	l1426
 24300   011762  0A06               	xorlw	6	; case 5
 24301   011764  B4D8               	btfsc	status,2,c
 24302   011766  D7E5               	goto	l1429
 24303   011768  0A03               	xorlw	3	; case 6
 24304   01176A  D7E3               	goto	l1429
 24305   01176C                     l13872:
 24306                           
 24307                           ;main.c: 863:    if (V.debug)
 24308   01176C  EE23  F168         	lfsr	2,_V+334	;volatile
 24309   011770  AADF               	btfss	indf2,5,c
 24310   011772  D01B               	goto	l13876
 24311                           
 24312                           ;main.c: 864:     sprintf(get_vterm_ptr(2, 0), "Equip type %d       ", V.e_types);
 24313   011774  EE23  F01D         	lfsr	2,_V+3	;volatile
 24314   011778  50DF               	movf	indf2,w,c
 24315   01177A  6EE6               	movwf	postinc1,c
 24316   01177C  0E00               	movlw	0
 24317   01177E  6EE6               	movwf	postinc1,c
 24318   011780  0E34               	movlw	low STR_23
 24319   011782  6EE6               	movwf	postinc1,c
 24320   011784  0EFE               	movlw	high STR_23
 24321   011786  6EE6               	movwf	postinc1,c
 24322   011788  0E00               	movlw	0
 24323   01178A  6EE6               	movwf	postinc1,c
 24324   01178C  0E02               	movlw	2
 24325   01178E  6EE6               	movwf	postinc1,c
 24326   011790  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 24327   011794  0060  F08F  FFE6   	movff	btemp,postinc1
 24328   01179A  0060  F093  FFE6   	movff	btemp+1,postinc1
 24329   0117A0  0E06               	movlw	6
 24330   0117A2  6EE6               	movwf	postinc1,c
 24331   0117A4  EC29  F0B2         	call	_sprintf	;wreg free
 24332   0117A8  D058               	goto	l13882
 24333   0117AA                     l13876:
 24334                           
 24335                           ;main.c: 866:     sprintf(get_vterm_ptr(2, 0), "LOG: U%d G%d %d %d      #", V.uart, V.g_
      +                          state, V.timer_error, V.checksum_error);
 24336   0117AA  EE23  F159         	lfsr	2,_V+319	;volatile
 24337   0117AE  006F FF78  F02D    	movff	postinc2,btemp+10
 24338   0117B4  006F FF74  F02E    	movff	postdec2,btemp+11
 24339   0117BA  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 24340   0117C0  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 24341   0117C6  EE23  F15B         	lfsr	2,_V+321	;volatile
 24342   0117CA  006F FF78  F02D    	movff	postinc2,btemp+10
 24343   0117D0  006F FF74  F02E    	movff	postdec2,btemp+11
 24344   0117D6  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 24345   0117DC  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 24346   0117E2  EE23  F01C         	lfsr	2,_V+2	;volatile
 24347   0117E6  50DF               	movf	indf2,w,c
 24348   0117E8  6EE6               	movwf	postinc1,c
 24349   0117EA  0E00               	movlw	0
 24350   0117EC  6EE6               	movwf	postinc1,c
 24351   0117EE  EE23  F197         	lfsr	2,_V+381	;volatile
 24352   0117F2  50DF               	movf	indf2,w,c
 24353   0117F4  6EE6               	movwf	postinc1,c
 24354   0117F6  0E00               	movlw	0
 24355   0117F8  6EE6               	movwf	postinc1,c
 24356   0117FA  0E21               	movlw	low STR_20
 24357   0117FC  6EE6               	movwf	postinc1,c
 24358   0117FE  0EFD               	movlw	high STR_20
 24359   011800  6EE6               	movwf	postinc1,c
 24360   011802  0E00               	movlw	0
 24361   011804  6EE6               	movwf	postinc1,c
 24362   011806  0E02               	movlw	2
 24363   011808  6EE6               	movwf	postinc1,c
 24364   01180A  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 24365   01180E  0060  F08F  FFE6   	movff	btemp,postinc1
 24366   011814  0060  F093  FFE6   	movff	btemp+1,postinc1
 24367   01181A  0E0C               	movlw	12
 24368   01181C  6EE6               	movwf	postinc1,c
 24369   01181E  EC29  F0B2         	call	_sprintf	;wreg free
 24370   011822  D01B               	goto	l13882
 24371   011824                     l1433:
 24372                           
 24373                           ;main.c: 870:    V.ui_state = UI_STATE_INIT;
 24374   011824  0E00               	movlw	0
 24375   011826  006F FFA0  FC1B    	movff	wreg,_V+1	;volatile
 24376                           
 24377                           ;main.c: 871:    break;
 24378   01182C  D016               	goto	l13882
 24379   01182E                     l13880:
 24380   01182E  EE23  F01B         	lfsr	2,_V+1	;volatile
 24381   011832  50DF               	movf	indf2,w,c
 24382   011834  6E2D               	movwf	(btemp+10)^0,c
 24383   011836  6A2E               	clrf	(btemp+11)^0,c
 24384                           
 24385                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24386                           ; Switch size 1, requested type "simple"
 24387                           ; Number of cases is 1, Range of values is 0 to 0
 24388                           ; switch strategies available:
 24389                           ; Name         Instructions Cycles
 24390                           ; simple_byte            4     3 (average)
 24391                           ;	Chosen strategy is simple_byte
 24392   011838  502E               	movf	(btemp+11)^0,w,c
 24393   01183A  0A00               	xorlw	0	; case 0
 24394   01183C  A4D8               	btfss	status,2,c
 24395   01183E  D7F2               	goto	l1433
 24396                           
 24397                           ; Switch size 1, requested type "simple"
 24398                           ; Number of cases is 4, Range of values is 0 to 4
 24399                           ; switch strategies available:
 24400                           ; Name         Instructions Cycles
 24401                           ; simple_byte           13     7 (average)
 24402                           ;	Chosen strategy is simple_byte
 24403   011840  502D               	movf	(btemp+10)^0,w,c
 24404   011842  0A00               	xorlw	0	; case 0
 24405   011844  B4D8               	btfsc	status,2,c
 24406   011846  EFF7  F086         	goto	l13682
 24407   01184A  0A01               	xorlw	1	; case 1
 24408   01184C  B4D8               	btfsc	status,2,c
 24409   01184E  D583               	goto	l13790
 24410   011850  0A02               	xorlw	2	; case 3
 24411   011852  B4D8               	btfsc	status,2,c
 24412   011854  D773               	goto	l13870
 24413   011856  0A07               	xorlw	7	; case 4
 24414   011858  D7E5               	goto	l1433
 24415   01185A                     l13882:
 24416                           
 24417                           ;main.c: 873:   if (V.ticks) {
 24418   01185A  EE23  F141         	lfsr	2,_V+295	;volatile
 24419   01185E  50DE               	movf	postinc2,w,c
 24420   011860  10DE               	iorwf	postinc2,w,c
 24421   011862  10DE               	iorwf	postinc2,w,c
 24422   011864  10DE               	iorwf	postinc2,w,c
 24423   011866  B4D8               	btfsc	status,2,c
 24424   011868  D02C               	goto	l13892
 24425                           
 24426                           ;main.c: 874:    if (V.failed_receive) {
 24427   01186A  EE23  F168         	lfsr	2,_V+334	;volatile
 24428   01186E  50DF               	movf	223,w,c
 24429   011870  0B0F               	andlw	15
 24430   011872  0900               	iorlw	0
 24431   011874  B4D8               	btfsc	status,2,c
 24432   011876  D00B               	goto	l1446
 24433                           
 24434                           ;main.c: 875:     do { LATDbits.LATD4 = 0; } while(0);
 24435   011878  98BD               	bcf	189,4,c	;volatile
 24436                           
 24437                           ;main.c: 876:     do { LATDbits.LATD5 = 1; } while(0);
 24438   01187A  8ABD               	bsf	189,5,c	;volatile
 24439                           
 24440                           ;main.c: 877:     if (V.error == LINK_ERROR_CHECKSUM) {
 24441   01187C  0063  F53F  FFE8   	movff	_V+309,wreg	;volatile
 24442   011882  0A0F               	xorlw	15
 24443   011884  A4D8               	btfss	status,2,c
 24444   011886  D007               	goto	l13888
 24445                           
 24446                           ;main.c: 878:      do { LATFbits.LATF4 = 0; } while(0);
 24447   011888  98BF               	bcf	191,4,c	;volatile
 24448                           
 24449                           ;main.c: 879:      do { LATFbits.LATF5 = 1; } while(0);
 24450   01188A  8ABF               	bsf	191,5,c	;volatile
 24451   01188C  D004               	goto	l13888
 24452   01188E                     l1446:
 24453   01188E  88BD               	bsf	189,4,c	;volatile
 24454                           
 24455                           ;main.c: 883:     do { LATDbits.LATD5 = 0; } while(0);
 24456   011890  9ABD               	bcf	189,5,c	;volatile
 24457                           
 24458                           ;main.c: 884:     do { LATFbits.LATF4 = 1; } while(0);
 24459   011892  88BF               	bsf	191,4,c	;volatile
 24460                           
 24461                           ;main.c: 885:     do { LATFbits.LATF5 = 0; } while(0);
 24462   011894  9ABF               	bcf	191,5,c	;volatile
 24463   011896                     l13888:
 24464                           
 24465                           ;main.c: 887:    if (V.failed_send) {
 24466   011896  EE23  F167         	lfsr	2,_V+333	;volatile
 24467   01189A  38DF               	swapf	223,w,c
 24468   01189C  0B0F               	andlw	15
 24469   01189E  0900               	iorlw	0
 24470   0118A0  B4D8               	btfsc	status,2,c
 24471   0118A2  D00B               	goto	l1465
 24472                           
 24473                           ;main.c: 888:     do { LATDbits.LATD6 = 0; } while(0);
 24474   0118A4  9CBD               	bcf	189,6,c	;volatile
 24475                           
 24476                           ;main.c: 889:     do { LATDbits.LATD7 = 1; } while(0);
 24477   0118A6  8EBD               	bsf	189,7,c	;volatile
 24478                           
 24479                           ;main.c: 890:     if (V.error == LINK_ERROR_CHECKSUM) {
 24480   0118A8  0063  F53F  FFE8   	movff	_V+309,wreg	;volatile
 24481   0118AE  0A0F               	xorlw	15
 24482   0118B0  A4D8               	btfss	status,2,c
 24483   0118B2  D007               	goto	l13892
 24484                           
 24485                           ;main.c: 891:      do { LATFbits.LATF6 = 0; } while(0);
 24486   0118B4  9CBF               	bcf	191,6,c	;volatile
 24487                           
 24488                           ;main.c: 892:      do { LATFbits.LATF7 = 1; } while(0);
 24489   0118B6  8EBF               	bsf	191,7,c	;volatile
 24490   0118B8  D004               	goto	l13892
 24491   0118BA                     l1465:
 24492   0118BA  8CBD               	bsf	189,6,c	;volatile
 24493                           
 24494                           ;main.c: 896:     do { LATDbits.LATD7 = 0; } while(0);
 24495   0118BC  9EBD               	bcf	189,7,c	;volatile
 24496                           
 24497                           ;main.c: 897:     do { LATFbits.LATF6 = 1; } while(0);
 24498   0118BE  8CBF               	bsf	191,6,c	;volatile
 24499                           
 24500                           ;main.c: 898:     do { LATFbits.LATF7 = 0; } while(0);
 24501   0118C0  9EBF               	bcf	191,7,c	;volatile
 24502   0118C2                     l13892:
 24503                           
 24504                           ;main.c: 902:   if (mode != UI_STATE_LOG)
 24505                           ;stkvar	_mode @ sp[(-3)+2]
 24506   0118C2  0EFF               	movlw	-1
 24507   0118C4  006F FF8C  F023    	movff	plusw1,btemp
 24508   0118CA  0E03               	movlw	3
 24509   0118CC  1823               	xorwf	btemp^0,w,c
 24510   0118CE  B4D8               	btfsc	status,2,c
 24511   0118D0  D061               	goto	l13906
 24512                           
 24513                           ;main.c: 903:    if (TimerDone(TMR_DISPLAY)) {
 24514   0118D2  0E0A               	movlw	10
 24515   0118D4  6EE6               	movwf	postinc1,c
 24516   0118D6  ECCB  F0BE         	call	_TimerDone	;wreg free
 24517   0118DA  5023               	movf	btemp^0,w,c
 24518   0118DC  B4D8               	btfsc	status,2,c
 24519   0118DE  D05A               	goto	l13906
 24520                           
 24521                           ;main.c: 904:     if (TimerDone(TMR_HELPDIS)) {
 24522   0118E0  0E09               	movlw	9
 24523   0118E2  6EE6               	movwf	postinc1,c
 24524   0118E4  ECCB  F0BE         	call	_TimerDone	;wreg free
 24525   0118E8  5023               	movf	btemp^0,w,c
 24526   0118EA  B4D8               	btfsc	status,2,c
 24527   0118EC  D004               	goto	l13900
 24528                           
 24529                           ;main.c: 905:      set_display_info(DIS_STR);
 24530   0118EE  0E00               	movlw	0
 24531   0118F0  6EE6               	movwf	postinc1,c
 24532   0118F2  EC48  F0BF         	call	_set_display_info	;wreg free
 24533   0118F6                     l13900:
 24534                           
 24535                           ;main.c: 907:     sprintf(get_vterm_ptr(1, 0), "R%d %d, T%d %d C%d %d      #", V.r_l_sta
      +                          te, V.failed_receive, V.t_l_state, V.failed_send, V.checksum_error, V.stack);
 24536   0118F6  EE23  F169         	lfsr	2,_V+335	;volatile
 24537   0118FA  50DF               	movf	223,w,c
 24538   0118FC  0B07               	andlw	7
 24539   0118FE  6EE6               	movwf	postinc1,c
 24540   011900  0E00               	movlw	0
 24541   011902  6EE6               	movwf	postinc1,c
 24542   011904  EE23  F159         	lfsr	2,_V+319	;volatile
 24543   011908  006F FF78  F02D    	movff	postinc2,btemp+10
 24544   01190E  006F FF74  F02E    	movff	postdec2,btemp+11
 24545   011914  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 24546   01191A  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 24547   011920  EE23  F167         	lfsr	2,_V+333	;volatile
 24548   011924  38DF               	swapf	223,w,c
 24549   011926  0B0F               	andlw	15
 24550   011928  6EE6               	movwf	postinc1,c
 24551   01192A  0E00               	movlw	0
 24552   01192C  6EE6               	movwf	postinc1,c
 24553   01192E  EE23  F020         	lfsr	2,_V+6	;volatile
 24554   011932  50DF               	movf	indf2,w,c
 24555   011934  6EE6               	movwf	postinc1,c
 24556   011936  0E00               	movlw	0
 24557   011938  6EE6               	movwf	postinc1,c
 24558   01193A  EE23  F168         	lfsr	2,_V+334	;volatile
 24559   01193E  50DF               	movf	223,w,c
 24560   011940  0B0F               	andlw	15
 24561   011942  6EE6               	movwf	postinc1,c
 24562   011944  0E00               	movlw	0
 24563   011946  6EE6               	movwf	postinc1,c
 24564   011948  EE23  F01F         	lfsr	2,_V+5	;volatile
 24565   01194C  50DF               	movf	indf2,w,c
 24566   01194E  6EE6               	movwf	postinc1,c
 24567   011950  0E00               	movlw	0
 24568   011952  6EE6               	movwf	postinc1,c
 24569   011954  0EB6               	movlw	low STR_25
 24570   011956  6EE6               	movwf	postinc1,c
 24571   011958  0EFC               	movlw	high STR_25
 24572   01195A  6EE6               	movwf	postinc1,c
 24573   01195C  0E00               	movlw	0
 24574   01195E  6EE6               	movwf	postinc1,c
 24575   011960  0E01               	movlw	1
 24576   011962  6EE6               	movwf	postinc1,c
 24577   011964  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 24578   011968  0060  F08F  FFE6   	movff	btemp,postinc1
 24579   01196E  0060  F093  FFE6   	movff	btemp+1,postinc1
 24580   011974  0E10               	movlw	16
 24581   011976  6EE6               	movwf	postinc1,c
 24582   011978  EC29  F0B2         	call	_sprintf	;wreg free
 24583                           
 24584                           ; BSR set to: 1
 24585                           ;main.c: 908:     StartTimer(TMR_DISPLAY, 100);
 24586   01197C  0E64               	movlw	100
 24587   01197E  6EE6               	movwf	postinc1,c
 24588   011980  0E00               	movlw	0
 24589   011982  6EE6               	movwf	postinc1,c
 24590   011984  0E0A               	movlw	10
 24591   011986  6EE6               	movwf	postinc1,c
 24592   011988  EC20  F0BC         	call	_StartTimer	;wreg free
 24593                           
 24594                           ;main.c: 909:     update_lcd(0);
 24595   01198C  0E00               	movlw	0
 24596   01198E  6EE6               	movwf	postinc1,c
 24597   011990  ECA1  F0B2         	call	_update_lcd	;wreg free
 24598   011994                     l13906:
 24599                           
 24600                           ;main.c: 915:   check_help(V.flipper);
 24601   011994  EE23  F19C         	lfsr	2,_V+386	;volatile
 24602   011998  50DF               	movf	indf2,w,c
 24603   01199A  6EE6               	movwf	postinc1,c
 24604   01199C  EC19  F0A5         	call	_check_help	;wreg free
 24605                           
 24606                           ;main.c: 920:   if (V.set_sequ) {
 24607   0119A0  EE23  F167         	lfsr	2,_V+333	;volatile
 24608   0119A4  A6DF               	btfss	indf2,3,c
 24609   0119A6  D743               	goto	l13880
 24610                           
 24611                           ;main.c: 921:    if (TimerDone(TMR_INFO)) {
 24612   0119A8  0E07               	movlw	7
 24613   0119AA  6EE6               	movwf	postinc1,c
 24614   0119AC  ECCB  F0BE         	call	_TimerDone	;wreg free
 24615   0119B0  5023               	movf	btemp^0,w,c
 24616   0119B2  B4D8               	btfsc	status,2,c
 24617   0119B4  D00C               	goto	l13918
 24618                           
 24619                           ;main.c: 922:     V.set_sequ = 0;
 24620   0119B6  EE23  F167         	lfsr	2,_V+333	;volatile
 24621   0119BA  96DF               	bcf	indf2,3,c
 24622                           
 24623                           ;main.c: 923:     set_vterm(0);
 24624   0119BC  0E00               	movlw	0
 24625   0119BE  6EE6               	movwf	postinc1,c
 24626   0119C0  EC67  F0BF         	call	_set_vterm	;wreg free
 24627                           
 24628                           ;main.c: 924:     update_lcd(0);
 24629   0119C4  0E00               	movlw	0
 24630   0119C6  6EE6               	movwf	postinc1,c
 24631   0119C8  ECA1  F0B2         	call	_update_lcd	;wreg free
 24632                           
 24633                           ;main.c: 925:    } else {
 24634   0119CC  D730               	goto	l13880
 24635   0119CE                     l13918:
 24636                           
 24637                           ;main.c: 926:     set_vterm(2);
 24638   0119CE  0E02               	movlw	2
 24639   0119D0  6EE6               	movwf	postinc1,c
 24640   0119D2  EC67  F0BF         	call	_set_vterm	;wreg free
 24641                           
 24642                           ;main.c: 927:     update_lcd(2);
 24643   0119D6  0E02               	movlw	2
 24644   0119D8  6EE6               	movwf	postinc1,c
 24645   0119DA  ECA1  F0B2         	call	_update_lcd	;wreg free
 24646   0119DE  D727               	goto	l13880
 24647   0119E0                     __end_of_main:
 24648                           	callstack 0
 24649                           
 24650 ;; *************** function _t_protocol *****************
 24651 ;; Defined at:
 24652 ;;		line 394 in file "gemsecs.c"
 24653 ;; Parameters:    Size  Location     Type
 24654 ;;  t_link          2  [STACK] PTR enum E17017
 24655 ;;		 -> V(387), 
 24656 ;; Auto vars:     Size  Location     Type
 24657 ;;  rxData          1  [STACK] unsigned char 
 24658 ;; Return value:  Size  Location     Type
 24659 ;;                  1  [STACK] enum E17295
 24660 ;; Registers used:
 24661 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 24662 ;; Tracked objects:
 24663 ;;		On entry : 0/3C
 24664 ;;		On exit  : 0/0
 24665 ;;		Unchanged: 0/0
 24666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24671 ;;Total ram usage:        0 bytes
 24672 ;; Hardware stack levels used: 1
 24673 ;; Hardware stack levels required when called: 14
 24674 ;; This function calls:
 24675 ;;		_StartTimer
 24676 ;;		_TimerDone
 24677 ;;		_UART1_Read
 24678 ;;		_UART1_Write
 24679 ;;		_UART1_is_rx_ready
 24680 ;;		_UART1_put_buffer
 24681 ;;		_secs_II_message
 24682 ;;		_secs_send
 24683 ;; This function is called by:
 24684 ;;		_main
 24685 ;; This function uses a reentrant model
 24686 ;;
 24687                           
 24688                           	psect	text1
 24689   013458                     __ptext1:
 24690                           	callstack 0
 24691   013458                     _t_protocol:
 24692                           	callstack 0
 24693                           
 24694                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24695   013458  52E6               	movf	postinc1,f,c
 24696                           
 24697                           ;gemsecs.c: 394: LINK_STATES t_protocol(LINK_STATES * t_link);gemsecs.c: 395: {;gemsecs.
      +                          c: 396:  uint8_t rxData;;gemsecs.c: 397:  static uint8_t retry, requeue = 0;;gemsecs.c: 
      +                          398:  static response_type block;;gemsecs.c: 400:  switch (*t_link) {
 24698                           
 24699                           ;incstack = 0
 24700   01345A  D178               	goto	l13340
 24701   01345C                     l1928:
 24702                           
 24703                           ;gemsecs.c: 403:   V.error = LINK_ERROR_NONE;
 24704   01345C  0E0A               	movlw	10
 24705   01345E  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 24706                           
 24707                           ;gemsecs.c: 404:   retry = 3;
 24708   013464  0E03               	movlw	3
 24709   013466  6E0C               	movwf	t_protocol@retry^0,c
 24710                           
 24711                           ;gemsecs.c: 405:   UART1_Write(0x05);
 24712   013468  0E05               	movlw	5
 24713   01346A  6EE6               	movwf	postinc1,c
 24714   01346C  EC67  F0BB         	call	_UART1_Write	;wreg free
 24715                           
 24716                           ; BSR set to: 57
 24717                           ;gemsecs.c: 406:   StartTimer(TMR_T2, 3000);
 24718   013470  0EB8               	movlw	184
 24719   013472  6EE6               	movwf	postinc1,c
 24720   013474  0E0B               	movlw	11
 24721   013476  6EE6               	movwf	postinc1,c
 24722   013478  0E02               	movlw	2
 24723   01347A  6EE6               	movwf	postinc1,c
 24724   01347C  EC20  F0BC         	call	_StartTimer	;wreg free
 24725                           
 24726                           ;gemsecs.c: 407:   *t_link = LINK_STATE_ENQ;
 24727                           ;stkvar	_t_link @ sp[(-1)+-2]
 24728   013480  0EFD               	movlw	-3
 24729   013482  006F FF8F FFD9     	movff	plusw1,fsr2l
 24730   013488  0EFE               	movlw	-2
 24731   01348A  006F FF8F FFDA     	movff	plusw1,fsr2h
 24732   013490  0E01               	movlw	1
 24733   013492  D0EE               	goto	L6
 24734   013494                     l13234:
 24735                           
 24736                           ;gemsecs.c: 414:   if (TimerDone(TMR_T2)) {
 24737   013494  0E02               	movlw	2
 24738   013496  6EE6               	movwf	postinc1,c
 24739   013498  ECCB  F0BE         	call	_TimerDone	;wreg free
 24740   01349C  5023               	movf	btemp^0,w,c
 24741   01349E  B4D8               	btfsc	status,2,c
 24742   0134A0  D030               	goto	l13250
 24743                           
 24744                           ;gemsecs.c: 415:    V.timer_error++;
 24745   0134A2  EE23  F15B         	lfsr	2,_V+321	;volatile
 24746   0134A6  2ADE               	incf	postinc2,f,c
 24747   0134A8  0E00               	movlw	0
 24748   0134AA  22DD               	addwfc	postdec2,f,c
 24749                           
 24750                           ;gemsecs.c: 416:    V.all_errors++;
 24751   0134AC  EE23  F165         	lfsr	2,_V+331	;volatile
 24752   0134B0  2ADE               	incf	postinc2,f,c
 24753   0134B2  0E00               	movlw	0
 24754   0134B4  22DD               	addwfc	postdec2,f,c
 24755                           
 24756                           ;gemsecs.c: 417:    if (!retry--) {
 24757   0134B6  060C               	decf	t_protocol@retry^0,f,c
 24758   0134B8  280C               	incf	t_protocol@retry^0,w,c
 24759   0134BA  A4D8               	btfss	status,2,c
 24760   0134BC  D019               	goto	l13248
 24761                           
 24762                           ;gemsecs.c: 418:     V.error = LINK_ERROR_T2;
 24763   0134BE  0E0C               	movlw	12
 24764   0134C0  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 24765                           
 24766                           ;gemsecs.c: 419:     V.all_errors++;
 24767   0134C6  EE23  F165         	lfsr	2,_V+331	;volatile
 24768   0134CA  2ADE               	incf	postinc2,f,c
 24769   0134CC  0E00               	movlw	0
 24770   0134CE  22DD               	addwfc	postdec2,f,c
 24771                           
 24772                           ;gemsecs.c: 420:     V.failed_send = 1;
 24773   0134D0  EE23  F167         	lfsr	2,_V+333	;volatile
 24774   0134D4  50DF               	movf	223,w,c
 24775   0134D6  0B0F               	andlw	-241
 24776   0134D8  0910               	iorlw	16
 24777   0134DA  6EDF               	movwf	223,c
 24778                           
 24779                           ;gemsecs.c: 421:     *t_link = LINK_STATE_NAK;
 24780                           ;stkvar	_t_link @ sp[(-1)+-2]
 24781   0134DC  0EFD               	movlw	-3
 24782   0134DE  006F FF8F FFD9     	movff	plusw1,fsr2l
 24783   0134E4  0EFE               	movlw	-2
 24784   0134E6  006F FF8F FFDA     	movff	plusw1,fsr2h
 24785   0134EC  0E05               	movlw	5
 24786   0134EE  D0C0               	goto	L6
 24787   0134F0                     l13248:
 24788                           
 24789                           ;gemsecs.c: 423:     StartTimer(TMR_T2, 3000);
 24790   0134F0  0EB8               	movlw	184
 24791   0134F2  6EE6               	movwf	postinc1,c
 24792   0134F4  0E0B               	movlw	11
 24793   0134F6  6EE6               	movwf	postinc1,c
 24794   0134F8  0E02               	movlw	2
 24795   0134FA  6EE6               	movwf	postinc1,c
 24796   0134FC  EC20  F0BC         	call	_StartTimer	;wreg free
 24797   013500  D14A               	goto	l13342
 24798   013502                     l13250:
 24799                           
 24800                           ;gemsecs.c: 426:    if (UART1_is_rx_ready()) {
 24801   013502  EC64  F0C0         	call	_UART1_is_rx_ready	;wreg free
 24802   013506  5023               	movf	btemp^0,w,c
 24803   013508  B4D8               	btfsc	status,2,c
 24804   01350A  D145               	goto	l13342
 24805                           
 24806                           ;gemsecs.c: 427:     rxData = UART1_Read();
 24807   01350C  ECE4  F0BB         	call	_UART1_Read	;wreg free
 24808                           
 24809                           ;stkvar	_rxData @ sp[(-1)+0]
 24810   013510  0EFF               	movlw	-1
 24811   013512  0060  F08F  FFE3   	movff	btemp,plusw1
 24812                           
 24813                           ; BSR set to: 57
 24814                           ;gemsecs.c: 428:     if (rxData == 0x04) {
 24815                           ;stkvar	_rxData @ sp[(-1)+0]
 24816   013518  0EFF               	movlw	-1
 24817   01351A  006F FF8C  F023    	movff	plusw1,btemp
 24818   013520  0E04               	movlw	4
 24819   013522  1823               	xorwf	btemp^0,w,c
 24820   013524  A4D8               	btfss	status,2,c
 24821   013526  D012               	goto	l13260
 24822                           
 24823                           ; BSR set to: 57
 24824                           ;gemsecs.c: 429:      StartTimer(TMR_T3, 5000);
 24825   013528  0E88               	movlw	136
 24826   01352A  6EE6               	movwf	postinc1,c
 24827   01352C  0E13               	movlw	19
 24828   01352E  6EE6               	movwf	postinc1,c
 24829   013530  0E03               	movlw	3
 24830   013532  6EE6               	movwf	postinc1,c
 24831   013534  EC20  F0BC         	call	_StartTimer	;wreg free
 24832                           
 24833                           ;gemsecs.c: 430:      *t_link = LINK_STATE_EOT;
 24834                           ;stkvar	_t_link @ sp[(-1)+-2]
 24835   013538  0EFD               	movlw	-3
 24836   01353A  006F FF8F FFD9     	movff	plusw1,fsr2l
 24837   013540  0EFE               	movlw	-2
 24838   013542  006F FF8F FFDA     	movff	plusw1,fsr2h
 24839   013548  0E02               	movlw	2
 24840   01354A  6EDF               	movwf	indf2,c
 24841   01354C                     l13260:
 24842                           
 24843                           ;gemsecs.c: 432:     if (rxData == 0x05) {
 24844                           ;stkvar	_rxData @ sp[(-1)+0]
 24845   01354C  0EFF               	movlw	-1
 24846   01354E  006F FF8C  F023    	movff	plusw1,btemp
 24847   013554  0E05               	movlw	5
 24848   013556  1823               	xorwf	btemp^0,w,c
 24849   013558  A4D8               	btfss	status,2,c
 24850   01355A  D11D               	goto	l13342
 24851                           
 24852                           ;gemsecs.c: 433:      UART1_put_buffer(0x04);
 24853   01355C  0E04               	movlw	4
 24854   01355E  6EE6               	movwf	postinc1,c
 24855   013560  EC3D  F0BD         	call	_UART1_put_buffer	;wreg free
 24856                           
 24857                           ; BSR set to: 57
 24858                           ;gemsecs.c: 434:      *t_link = LINK_STATE_DONE;
 24859                           ;stkvar	_t_link @ sp[(-1)+-2]
 24860   013564  0EFD               	movlw	-3
 24861   013566  006F FF8F FFD9     	movff	plusw1,fsr2l
 24862   01356C  0EFE               	movlw	-2
 24863   01356E  006F FF8F FFDA     	movff	plusw1,fsr2h
 24864   013574  0E04               	movlw	4
 24865   013576  D07C               	goto	L6
 24866   013578                     l13266:
 24867                           
 24868                           ;gemsecs.c: 440:   if (!requeue)
 24869   013578  500B               	movf	t_protocol@requeue^0,w,c
 24870   01357A  A4D8               	btfss	status,2,c
 24871   01357C  D013               	goto	l13270
 24872                           
 24873                           ;gemsecs.c: 441:    block = secs_II_message(V.stream, V.function);
 24874   01357E  EE23  F14E         	lfsr	2,_V+308	;volatile
 24875   013582  50DF               	movf	indf2,w,c
 24876   013584  6EE6               	movwf	postinc1,c
 24877   013586  EE23  F14D         	lfsr	2,_V+307	;volatile
 24878   01358A  50DF               	movf	indf2,w,c
 24879   01358C  6EE6               	movwf	postinc1,c
 24880   01358E  ECF0  F08C         	call	_secs_II_message	;wreg free
 24881   013592  EE20  F093         	lfsr	2,t_protocol@block
 24882   013596  0E06               	movlw	6
 24883   013598                     u9551:
 24884   013598  52E5               	movf	postdec1,f,c
 24885   01359A  006F FF9F FFDB     	movff	indf1,plusw2
 24886   0135A0  06E8               	decf	wreg,f,c
 24887   0135A2  E2FA               	bc	u9551
 24888   0135A4                     l13270:
 24889                           
 24890                           ;gemsecs.c: 443:   if (V.abort == LINK_ERROR_ABORT) {
 24891   0135A4  0063  F543  FFE8   	movff	_V+310,wreg	;volatile
 24892   0135AA  0A11               	xorlw	17
 24893   0135AC  A4D8               	btfss	status,2,c
 24894   0135AE  D025               	goto	l13280
 24895                           
 24896                           ;gemsecs.c: 444:    secs_send((uint8_t*) block.header, block.length, 0, 1);
 24897   0135B0  0E01               	movlw	1
 24898   0135B2  6EE6               	movwf	postinc1,c
 24899   0135B4  0E00               	movlw	0
 24900   0135B6  6EE6               	movwf	postinc1,c
 24901   0135B8  0100               	movlb	0	; () banked
 24902   0135BA  5195               	movf	(t_protocol@block+2)& (0+255),w,b
 24903   0135BC  6EE6               	movwf	postinc1,c
 24904   0135BE  0060  F24F  FFE6   	movff	t_protocol@block,postinc1
 24905   0135C4  0060  F253  FFE6   	movff	t_protocol@block+1,postinc1
 24906   0135CA  EC86  F0A1         	call	_secs_send	;wreg free
 24907                           
 24908                           ;gemsecs.c: 445:    V.failed_send = 2;
 24909   0135CE  EE23  F167         	lfsr	2,_V+333	;volatile
 24910   0135D2  50DF               	movf	223,w,c
 24911   0135D4  0B0F               	andlw	-241
 24912   0135D6  0920               	iorlw	32
 24913   0135D8  6EDF               	movwf	223,c
 24914                           
 24915                           ;gemsecs.c: 446:    *t_link = LINK_STATE_ERROR;
 24916                           ;stkvar	_t_link @ sp[(-1)+-2]
 24917   0135DA  0EFD               	movlw	-3
 24918   0135DC  006F FF8F FFD9     	movff	plusw1,fsr2l
 24919   0135E2  0EFE               	movlw	-2
 24920   0135E4  006F FF8F FFDA     	movff	plusw1,fsr2h
 24921   0135EA  0E06               	movlw	6
 24922   0135EC  6EDF               	movwf	indf2,c
 24923                           
 24924                           ;gemsecs.c: 447:    V.all_errors++;
 24925   0135EE  EE23  F165         	lfsr	2,_V+331	;volatile
 24926   0135F2  2ADE               	incf	postinc2,f,c
 24927   0135F4  0E00               	movlw	0
 24928   0135F6  22DD               	addwfc	postdec2,f,c
 24929                           
 24930                           ;gemsecs.c: 448:   } else {
 24931   0135F8  D0CE               	goto	l13342
 24932   0135FA                     l13280:
 24933                           
 24934                           ;gemsecs.c: 449:    if (!requeue) {
 24935   0135FA  500B               	movf	t_protocol@requeue^0,w,c
 24936   0135FC  A4D8               	btfss	status,2,c
 24937   0135FE  D016               	goto	l1942
 24938                           
 24939                           ;gemsecs.c: 450:     secs_send((uint8_t*) block.header, block.length, 0, 1);
 24940   013600  0E01               	movlw	1
 24941   013602  6EE6               	movwf	postinc1,c
 24942   013604  0E00               	movlw	0
 24943   013606  6EE6               	movwf	postinc1,c
 24944   013608  0100               	movlb	0	; () banked
 24945   01360A  5195               	movf	(t_protocol@block+2)& (0+255),w,b
 24946   01360C  6EE6               	movwf	postinc1,c
 24947   01360E  0060  F24F  FFE6   	movff	t_protocol@block,postinc1
 24948   013614  0060  F253  FFE6   	movff	t_protocol@block+1,postinc1
 24949   01361A  EC86  F0A1         	call	_secs_send	;wreg free
 24950                           
 24951                           ;gemsecs.c: 451:     if (V.queue)
 24952   01361E  EE23  F168         	lfsr	2,_V+334	;volatile
 24953   013622  A8DF               	btfss	indf2,4,c
 24954   013624  D016               	goto	l13292
 24955                           
 24956                           ;gemsecs.c: 452:      requeue = 1;
 24957   013626  0E01               	movlw	1
 24958   013628  6E0B               	movwf	t_protocol@requeue^0,c
 24959   01362A  D013               	goto	l13292
 24960   01362C                     l1942:
 24961                           
 24962                           ;gemsecs.c: 454:     requeue = 0;
 24963   01362C  6A0B               	clrf	t_protocol@requeue^0,c
 24964                           
 24965                           ;gemsecs.c: 455:     V.queue = 0;
 24966   01362E  EE23  F168         	lfsr	2,_V+334	;volatile
 24967   013632  98DF               	bcf	indf2,4,c
 24968                           
 24969                           ;gemsecs.c: 456:     secs_send((uint8_t*) block.reply, block.reply_length, 0, 1);
 24970   013634  0E01               	movlw	1
 24971   013636  6EE6               	movwf	postinc1,c
 24972   013638  0E00               	movlw	0
 24973   01363A  6EE6               	movwf	postinc1,c
 24974   01363C  0100               	movlb	0	; () banked
 24975   01363E  5198               	movf	(t_protocol@block+5)& (0+255),w,b
 24976   013640  6EE6               	movwf	postinc1,c
 24977   013642  0060  F25B  FFE6   	movff	t_protocol@block+3,postinc1
 24978   013648  0060  F25F  FFE6   	movff	t_protocol@block+4,postinc1
 24979   01364E  EC86  F0A1         	call	_secs_send	;wreg free
 24980   013652                     l13292:
 24981                           
 24982                           ;gemsecs.c: 458:    if (V.error == LINK_ERROR_NONE) {
 24983   013652  0063  F53F  FFE8   	movff	_V+309,wreg	;volatile
 24984   013658  0A0A               	xorlw	10
 24985   01365A  A4D8               	btfss	status,2,c
 24986   01365C  D00B               	goto	l13296
 24987                           
 24988                           ;gemsecs.c: 459:     *t_link = LINK_STATE_ACK;
 24989                           ;stkvar	_t_link @ sp[(-1)+-2]
 24990   01365E  0EFD               	movlw	-3
 24991   013660  006F FF8F FFD9     	movff	plusw1,fsr2l
 24992   013666  0EFE               	movlw	-2
 24993   013668  006F FF8F FFDA     	movff	plusw1,fsr2h
 24994   01366E  0E03               	movlw	3
 24995   013670                     L6:
 24996   013670  6EDF               	movwf	indf2,c
 24997                           
 24998                           ;gemsecs.c: 460:    } else {
 24999   013672  D091               	goto	l13342
 25000   013674                     l13296:
 25001                           
 25002                           ;gemsecs.c: 461:     V.failed_send = 3;
 25003   013674  EE23  F167         	lfsr	2,_V+333	;volatile
 25004   013678  50DF               	movf	223,w,c
 25005   01367A  0B0F               	andlw	-241
 25006   01367C  0930               	iorlw	48
 25007   01367E  D7AC               	goto	L7
 25008   013680                     l13302:
 25009                           
 25010                           ;gemsecs.c: 475:   if (TimerDone(TMR_T3)) {
 25011   013680  0E03               	movlw	3
 25012   013682  6EE6               	movwf	postinc1,c
 25013   013684  ECCB  F0BE         	call	_TimerDone	;wreg free
 25014   013688  5023               	movf	btemp^0,w,c
 25015   01368A  B4D8               	btfsc	status,2,c
 25016   01368C  D014               	goto	l13312
 25017                           
 25018                           ;gemsecs.c: 476:    V.timer_error++;
 25019   01368E  EE23  F15B         	lfsr	2,_V+321	;volatile
 25020   013692  2ADE               	incf	postinc2,f,c
 25021   013694  0E00               	movlw	0
 25022   013696  22DD               	addwfc	postdec2,f,c
 25023                           
 25024                           ;gemsecs.c: 477:    V.error = LINK_ERROR_T3;
 25025   013698  0E0D               	movlw	13
 25026   01369A  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 25027                           
 25028                           ;gemsecs.c: 478:    V.all_errors++;
 25029   0136A0  EE23  F165         	lfsr	2,_V+331	;volatile
 25030   0136A4  2ADE               	incf	postinc2,f,c
 25031   0136A6  0E00               	movlw	0
 25032   0136A8  22DD               	addwfc	postdec2,f,c
 25033                           
 25034                           ;gemsecs.c: 479:    V.failed_send = 4;
 25035   0136AA  EE23  F167         	lfsr	2,_V+333	;volatile
 25036   0136AE  50DF               	movf	223,w,c
 25037   0136B0  0B0F               	andlw	-241
 25038   0136B2  0940               	iorlw	64
 25039   0136B4  D712               	goto	L8
 25040   0136B6                     l13312:
 25041                           
 25042                           ;gemsecs.c: 482:    if (UART1_is_rx_ready()) {
 25043   0136B6  EC64  F0C0         	call	_UART1_is_rx_ready	;wreg free
 25044   0136BA  5023               	movf	btemp^0,w,c
 25045   0136BC  B4D8               	btfsc	status,2,c
 25046   0136BE  D06B               	goto	l13342
 25047                           
 25048                           ;gemsecs.c: 483:     rxData = UART1_Read();
 25049   0136C0  ECE4  F0BB         	call	_UART1_Read	;wreg free
 25050                           
 25051                           ;stkvar	_rxData @ sp[(-1)+0]
 25052   0136C4  0EFF               	movlw	-1
 25053   0136C6  0060  F08F  FFE3   	movff	btemp,plusw1
 25054                           
 25055                           ; BSR set to: 57
 25056                           ;gemsecs.c: 484:     if (rxData == 0x06) {
 25057                           ;stkvar	_rxData @ sp[(-1)+0]
 25058   0136CC  0EFF               	movlw	-1
 25059   0136CE  006F FF8C  F023    	movff	plusw1,btemp
 25060   0136D4  0E06               	movlw	6
 25061   0136D6  1823               	xorwf	btemp^0,w,c
 25062   0136D8  A4D8               	btfss	status,2,c
 25063   0136DA  D05D               	goto	l13342
 25064                           
 25065                           ; BSR set to: 57
 25066                           ;gemsecs.c: 485:      V.failed_send = 0;
 25067   0136DC  EE23  F167         	lfsr	2,_V+333	;volatile
 25068   0136E0  0E0F               	movlw	-241
 25069   0136E2  16DF               	andwf	223,f,c
 25070                           
 25071                           ; BSR set to: 57
 25072                           ;gemsecs.c: 486:      *t_link = LINK_STATE_DONE;
 25073                           ;stkvar	_t_link @ sp[(-1)+-2]
 25074   0136E4  0EFD               	movlw	-3
 25075   0136E6  006F FF8F FFD9     	movff	plusw1,fsr2l
 25076   0136EC  0EFE               	movlw	-2
 25077   0136EE  006F FF8F FFDA     	movff	plusw1,fsr2h
 25078   0136F4  0E04               	movlw	4
 25079   0136F6  6EDF               	movwf	indf2,c
 25080   0136F8                     l13322:
 25081                           
 25082                           ;gemsecs.c: 487:      V.abort = LINK_ERROR_NONE;
 25083   0136F8  0E0A               	movlw	10
 25084   0136FA  006F FFA0  FD50    	movff	wreg,_V+310	;volatile
 25085   013700  D04A               	goto	l13342
 25086   013702                     l13324:
 25087                           
 25088                           ;gemsecs.c: 493:   *t_link = LINK_STATE_ERROR;
 25089                           ;stkvar	_t_link @ sp[(-1)+-2]
 25090   013702  0EFD               	movlw	-3
 25091   013704  006F FF8F FFD9     	movff	plusw1,fsr2l
 25092   01370A  0EFE               	movlw	-2
 25093   01370C  006F FF8F FFDA     	movff	plusw1,fsr2h
 25094   013712  0E06               	movlw	6
 25095   013714  6EDF               	movwf	indf2,c
 25096                           
 25097                           ;gemsecs.c: 494:   V.all_errors++;
 25098   013716  EE23  F165         	lfsr	2,_V+331	;volatile
 25099   01371A  2ADE               	incf	postinc2,f,c
 25100   01371C  0E00               	movlw	0
 25101   01371E  22DD               	addwfc	postdec2,f,c
 25102                           
 25103                           ;gemsecs.c: 495:   while ((uart1RxCount)) {
 25104   013720  D002               	goto	l13330
 25105   013722                     l13328:
 25106                           
 25107                           ;gemsecs.c: 496:    UART1_Read();
 25108   013722  ECE4  F0BB         	call	_UART1_Read	;wreg free
 25109   013726                     l13330:
 25110                           
 25111                           ;gemsecs.c: 495:   while ((uart1RxCount)) {
 25112   013726  5016               	movf	_uart1RxCount^0,w,c	;volatile
 25113   013728  B4D8               	btfsc	status,2,c
 25114   01372A  D035               	goto	l13342
 25115   01372C  D7FA               	goto	l13328
 25116   01372E                     l13332:
 25117                           
 25118                           ;gemsecs.c: 502:   V.failed_send = 0;
 25119   01372E  EE23  F167         	lfsr	2,_V+333	;volatile
 25120   013732  0E0F               	movlw	-241
 25121   013734  16DF               	andwf	223,f,c
 25122   013736  D7E0               	goto	l13322
 25123   013738                     l13336:
 25124                           
 25125                           ;gemsecs.c: 506:   *t_link = LINK_STATE_IDLE;
 25126                           ;stkvar	_t_link @ sp[(-1)+-2]
 25127   013738  0EFD               	movlw	-3
 25128   01373A  006F FF8F FFD9     	movff	plusw1,fsr2l
 25129   013740  0EFE               	movlw	-2
 25130   013742  006F FF8F FFDA     	movff	plusw1,fsr2h
 25131   013748  6ADF               	clrf	indf2,c
 25132                           
 25133                           ;gemsecs.c: 507:   break;
 25134   01374A  D025               	goto	l13342
 25135   01374C                     l13340:
 25136                           
 25137                           ;stkvar	_t_link @ sp[(-1)+-2]
 25138   01374C  0EFD               	movlw	-3
 25139   01374E  006F FF8F FFD9     	movff	plusw1,fsr2l
 25140   013754  0EFE               	movlw	-2
 25141   013756  006F FF8F FFDA     	movff	plusw1,fsr2h
 25142   01375C  50DF               	movf	indf2,w,c
 25143   01375E  6E2D               	movwf	(btemp+10)^0,c
 25144   013760  6A2E               	clrf	(btemp+11)^0,c
 25145                           
 25146                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25147                           ; Switch size 1, requested type "simple"
 25148                           ; Number of cases is 1, Range of values is 0 to 0
 25149                           ; switch strategies available:
 25150                           ; Name         Instructions Cycles
 25151                           ; simple_byte            4     3 (average)
 25152                           ;	Chosen strategy is simple_byte
 25153   013762  502E               	movf	(btemp+11)^0,w,c
 25154   013764  0A00               	xorlw	0	; case 0
 25155   013766  A4D8               	btfss	status,2,c
 25156   013768  D7E7               	goto	l13336
 25157                           
 25158                           ; Switch size 1, requested type "simple"
 25159                           ; Number of cases is 7, Range of values is 0 to 6
 25160                           ; switch strategies available:
 25161                           ; Name         Instructions Cycles
 25162                           ; simple_byte           22    12 (average)
 25163                           ;	Chosen strategy is simple_byte
 25164   01376A  502D               	movf	(btemp+10)^0,w,c
 25165   01376C  0A00               	xorlw	0	; case 0
 25166   01376E  B4D8               	btfsc	status,2,c
 25167   013770  D675               	goto	l1928
 25168   013772  0A01               	xorlw	1	; case 1
 25169   013774  B4D8               	btfsc	status,2,c
 25170   013776  D68E               	goto	l13234
 25171   013778  0A03               	xorlw	3	; case 2
 25172   01377A  B4D8               	btfsc	status,2,c
 25173   01377C  D6FD               	goto	l13266
 25174   01377E  0A01               	xorlw	1	; case 3
 25175   013780  B4D8               	btfsc	status,2,c
 25176   013782  D77E               	goto	l13302
 25177   013784  0A07               	xorlw	7	; case 4
 25178   013786  B4D8               	btfsc	status,2,c
 25179   013788  D7D2               	goto	l13332
 25180   01378A  0A01               	xorlw	1	; case 5
 25181   01378C  B4D8               	btfsc	status,2,c
 25182   01378E  D7B9               	goto	l13324
 25183   013790  0A03               	xorlw	3	; case 6
 25184   013792  A4D8               	btfss	status,2,c
 25185   013794  D7D1               	goto	l13336
 25186   013796                     l13342:
 25187                           
 25188                           ;gemsecs.c: 510:  return *t_link;
 25189                           ;stkvar	_t_link @ sp[(-1)+-2]
 25190   013796  0EFD               	movlw	-3
 25191   013798  006F FF8F FFD9     	movff	plusw1,fsr2l
 25192   01379E  0EFE               	movlw	-2
 25193   0137A0  006F FF8F FFDA     	movff	plusw1,fsr2h
 25194   0137A6  50DF               	movf	indf2,w,c
 25195   0137A8  6E23               	movwf	btemp^0,c
 25196                           
 25197                           ; _t_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
 25198   0137AA  52E5               	movf	postdec1,f,c
 25199   0137AC  52E5               	movf	postdec1,f,c
 25200   0137AE  52E5               	movf	postdec1,f,c
 25201   0137B0  0012               	return		;funcret
 25202   0137B2                     __end_of_t_protocol:
 25203                           	callstack 0
 25204                           
 25205 ;; *************** function _secs_send *****************
 25206 ;; Defined at:
 25207 ;;		line 514 in file "gemsecs.c"
 25208 ;; Parameters:    Size  Location     Type
 25209 ;;  byte_block      2  [STACK] PTR unsigned char 
 25210 ;;		 -> D$message(156), S$message(36), H153(312), H33(36), 
 25211 ;;		 -> H26(29), H17(20), H14(17), H13(64), 
 25212 ;;		 -> H12(30), H10(91), 
 25213 ;;  length          1  [STACK] const unsigned char 
 25214 ;;  fake            1  [STACK] const _Bool 
 25215 ;;  s_uart          1  [STACK] const unsigned char 
 25216 ;; Auto vars:     Size  Location     Type
 25217 ;;  k               2  [STACK] PTR unsigned char 
 25218 ;;		 -> D$message(156), S$message(36), H153(312), H33(36), 
 25219 ;;		 -> H26(29), H17(20), H14(17), H13(64), 
 25220 ;;		 -> H12(30), H10(91), 
 25221 ;;  checksum        2  [STACK] unsigned short 
 25222 ;;  i               1  [STACK] unsigned char 
 25223 ;; Return value:  Size  Location     Type
 25224 ;;                  1  [STACK] _Bool 
 25225 ;; Registers used:
 25226 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl
 25227 ;; Tracked objects:
 25228 ;;		On entry : 3F/0
 25229 ;;		On exit  : 0/0
 25230 ;;		Unchanged: 0/0
 25231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25236 ;;Total ram usage:        0 bytes
 25237 ;; Hardware stack levels used: 1
 25238 ;; Hardware stack levels required when called: 4
 25239 ;; This function calls:
 25240 ;;		_UART1_Write
 25241 ;;		_UART1_is_tx_ready
 25242 ;;		_UART1_put_buffer
 25243 ;;		_UART2_Write
 25244 ;;		_UART2_is_tx_ready
 25245 ;;		_UART2_put_buffer
 25246 ;;		_block_checksum
 25247 ;; This function is called by:
 25248 ;;		_t_protocol
 25249 ;; This function uses a reentrant model
 25250 ;;
 25251                           
 25252                           	psect	text2
 25253   01430C                     __ptext2:
 25254                           	callstack 0
 25255   01430C                     _secs_send:
 25256                           	callstack 0
 25257                           
 25258                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25259   01430C  0E05               	movlw	5
 25260   01430E  26E1               	addwf	fsr1l,f,c
 25261   014310  0E00               	movlw	0
 25262   014312  22E2               	addwfc	fsr1h,f,c
 25263                           
 25264                           ;gemsecs.c: 514: static _Bool secs_send(uint8_t *byte_block, const uint8_t length, const
      +                           _Bool fake, const uint8_t s_uart);gemsecs.c: 515: {;gemsecs.c: 516:  uint8_t i, *k;;gem
      +                          secs.c: 517:  uint16_t checksum;;gemsecs.c: 519:  k = (uint8_t *) byte_block;
 25265                           ;stkvar	_byte_block @ sp[(-5)+-2]
 25266                           
 25267                           ;incstack = 0
 25268   014314  0EF9               	movlw	-7
 25269   014316  006F FF8C  F02D    	movff	plusw1,btemp+10
 25270   01431C  0EFA               	movlw	-6
 25271   01431E  006F FF8C  F02E    	movff	plusw1,btemp+11
 25272                           
 25273                           ;stkvar	_k @ sp[(-5)+0]
 25274   014324  0EFC               	movlw	-4
 25275   014326  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 25276   01432C  0EFB               	movlw	-5
 25277   01432E  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 25278                           
 25279                           ;gemsecs.c: 521:  ++V.ticks;
 25280   014334  EE23  F141         	lfsr	2,_V+295	;volatile
 25281   014338  2ADE               	incf	postinc2,f,c
 25282   01433A  0E00               	movlw	0
 25283   01433C  22DE               	addwfc	postinc2,f,c
 25284   01433E  22DE               	addwfc	postinc2,f,c
 25285   014340  22DE               	addwfc	postinc2,f,c
 25286                           
 25287                           ;gemsecs.c: 522:  V.error = LINK_ERROR_NONE;
 25288   014342  0E0A               	movlw	10
 25289   014344  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 25290                           
 25291                           ;gemsecs.c: 523:  if ((length - 3) != k[length - 1]) {
 25292                           ;stkvar	_length @ sp[(-5)+-3]
 25293   01434A  0EF8               	movlw	-8
 25294   01434C  50E3               	movf	plusw1,w,c
 25295   01434E  6E2D               	movwf	(btemp+10)^0,c
 25296   014350  6A2E               	clrf	(btemp+11)^0,c
 25297                           
 25298                           ;stkvar	_k @ sp[(-5)+0]
 25299   014352  0EFB               	movlw	-5
 25300   014354  50E3               	movf	plusw1,w,c
 25301   014356  262D               	addwf	(btemp+10)^0,f,c
 25302   014358  0EFC               	movlw	-4
 25303   01435A  50E3               	movf	plusw1,w,c
 25304   01435C  222E               	addwfc	(btemp+11)^0,f,c
 25305   01435E  0EFF               	movlw	255
 25306   014360  242D               	addwf	(btemp+10)^0,w,c
 25307   014362  6ED9               	movwf	fsr2l,c
 25308   014364  0EFF               	movlw	255
 25309   014366  202E               	addwfc	(btemp+11)^0,w,c
 25310   014368  6EDA               	movwf	fsr2h,c
 25311   01436A  50DF               	movf	indf2,w,c
 25312   01436C  6E2D               	movwf	(btemp+10)^0,c
 25313   01436E  6A2E               	clrf	(btemp+11)^0,c
 25314                           
 25315                           ;stkvar	_length @ sp[(-5)+-3]
 25316   014370  0EF8               	movlw	-8
 25317   014372  006F FF8C  F02C    	movff	plusw1,btemp+9
 25318   014378  0EFD               	movlw	253
 25319   01437A  242C               	addwf	(btemp+9)^0,w,c
 25320   01437C  6E29               	movwf	(btemp+6)^0,c
 25321   01437E  6A2A               	clrf	(btemp+7)^0,c
 25322   014380  0EFF               	movlw	255
 25323   014382  222A               	addwfc	(btemp+7)^0,f,c
 25324   014384  502D               	movf	(btemp+10)^0,w,c
 25325   014386  1829               	xorwf	(btemp+6)^0,w,c
 25326   014388  E104               	bnz	u6130
 25327   01438A  502E               	movf	(btemp+11)^0,w,c
 25328   01438C  182A               	xorwf	(btemp+7)^0,w,c
 25329   01438E  B4D8               	btfsc	status,2,c
 25330   014390  D010               	goto	l9864
 25331   014392                     u6130:
 25332                           
 25333                           ;gemsecs.c: 524:   V.error = LINK_ERROR_SEND;
 25334   014392  0E12               	movlw	18
 25335   014394  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 25336                           
 25337                           ;gemsecs.c: 525:   V.all_errors++;
 25338   01439A  EE23  F165         	lfsr	2,_V+331	;volatile
 25339   01439E  2ADE               	incf	postinc2,f,c
 25340   0143A0  0E00               	movlw	0
 25341   0143A2  22DD               	addwfc	postdec2,f,c
 25342                           
 25343                           ;gemsecs.c: 526:   V.failed_send = 1;
 25344   0143A4  EE23  F167         	lfsr	2,_V+333	;volatile
 25345   0143A8  50DF               	movf	223,w,c
 25346   0143AA  0B0F               	andlw	-241
 25347   0143AC  0910               	iorlw	16
 25348   0143AE  6EDF               	movwf	223,c
 25349   0143B0  D0E6               	goto	l1963
 25350   0143B2                     l9864:
 25351                           
 25352                           ;gemsecs.c: 535:  checksum = block_checksum(&k[2], length - 3);
 25353                           ;stkvar	_length @ sp[(-5)+-3]
 25354   0143B2  0EF8               	movlw	-8
 25355   0143B4  006F FF8C  F02E    	movff	plusw1,btemp+11
 25356   0143BA  0EFD               	movlw	253
 25357   0143BC  242E               	addwf	(btemp+11)^0,w,c
 25358   0143BE  6E2B               	movwf	(btemp+8)^0,c
 25359   0143C0  6A2C               	clrf	(btemp+9)^0,c
 25360   0143C2  0EFF               	movlw	255
 25361   0143C4  222C               	addwfc	(btemp+9)^0,f,c
 25362   0143C6  0060  F0AF  FFE6   	movff	btemp+8,postinc1
 25363   0143CC  0060  F0B3  FFE6   	movff	btemp+9,postinc1
 25364                           
 25365                           ;stkvar	_k @ sp[(-7)+0]
 25366   0143D2  0EF9               	movlw	-7
 25367   0143D4  50E3               	movf	plusw1,w,c
 25368   0143D6  0F02               	addlw	2
 25369   0143D8  6E2D               	movwf	(btemp+10)^0,c
 25370   0143DA  0EFA               	movlw	-6
 25371   0143DC  006F FF8C  F02E    	movff	plusw1,btemp+11
 25372   0143E2  0E00               	movlw	0
 25373   0143E4  222E               	addwfc	(btemp+11)^0,f,c
 25374   0143E6  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 25375   0143EC  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 25376   0143F2  EC8D  F0B3         	call	_block_checksum	;wreg free
 25377                           
 25378                           ;stkvar	_checksum @ sp[(-5)+2]
 25379   0143F6  0EFD               	movlw	-3
 25380   0143F8  0060  F08F  FFE3   	movff	btemp,plusw1
 25381   0143FE  0EFE               	movlw	-2
 25382   014400  0060  F093  FFE3   	movff	btemp+1,plusw1
 25383                           
 25384                           ;gemsecs.c: 536:  k[0] = checksum & 0xff;
 25385                           ;stkvar	_checksum @ sp[(-5)+2]
 25386                           ;stkvar	_k @ sp[(-5)+0]
 25387   014406  0EFB               	movlw	-5
 25388   014408  006F FF8F FFD9     	movff	plusw1,fsr2l
 25389   01440E  0EFC               	movlw	-4
 25390   014410  006F FF8F FFDA     	movff	plusw1,fsr2h
 25391   014416  0EFD               	movlw	-3
 25392   014418  006F FF8F FFDF     	movff	plusw1,indf2
 25393                           
 25394                           ;gemsecs.c: 537:  k[1] = (checksum >> 8)&0xff;
 25395                           ;stkvar	_checksum @ sp[(-5)+2]
 25396   01441E  0EFE               	movlw	254
 25397   014420  24E1               	addwf	fsr1l,w,c
 25398   014422  6ED9               	movwf	fsr2l,c
 25399   014424  0EFF               	movlw	255
 25400   014426  20E2               	addwfc	fsr1h,w,c
 25401   014428  6EDA               	movwf	fsr2h,c
 25402                           
 25403                           ;stkvar	_k @ sp[(-5)+0]
 25404   01442A  0EFB               	movlw	-5
 25405   01442C  006F FF8C  F02D    	movff	plusw1,btemp+10
 25406   014432  0EFC               	movlw	-4
 25407   014434  006F FF8C  F02E    	movff	plusw1,btemp+11
 25408   01443A  0E01               	movlw	1
 25409   01443C  242D               	addwf	(btemp+10)^0,w,c
 25410   01443E  6EE9               	movwf	fsr0l,c
 25411   014440  0E00               	movlw	0
 25412   014442  202E               	addwfc	(btemp+11)^0,w,c
 25413   014444  6EEA               	movwf	fsr0h,c
 25414   014446  006F FF7F FFEF     	movff	indf2,indf0
 25415                           
 25416                           ;gemsecs.c: 538:  V.t_checksum = checksum;
 25417                           ;stkvar	_checksum @ sp[(-5)+2]
 25418   01444C  50E1               	movf	fsr1l,w,c
 25419   01444E  0FFD               	addlw	-3
 25420   014450  6ED9               	movwf	fsr2l,c
 25421   014452  50E2               	movf	fsr1h,w,c
 25422   014454  6EDA               	movwf	fsr2h,c
 25423   014456  0EFF               	movlw	255
 25424   014458  22DA               	addwfc	fsr2h,f,c
 25425   01445A  006F FF78  FD57    	movff	postinc2,_V+317	;volatile
 25426   014460  006F FF74  FD58    	movff	postdec2,_V+318	;volatile
 25427                           
 25428                           ;gemsecs.c: 540:  switch (s_uart) {
 25429   014466  D082               	goto	l9910
 25430   014468                     l9872:
 25431   014468  EC5B  F0C0         	call	_UART2_is_tx_ready	;wreg free
 25432   01446C  5023               	movf	btemp^0,w,c
 25433   01446E  B4D8               	btfsc	status,2,c
 25434   014470  D7FB               	goto	l9872
 25435                           
 25436                           ;gemsecs.c: 543:   for (i = length; i > 0; i--) {
 25437                           ;stkvar	_length @ sp[(-5)+-3]
 25438                           ;stkvar	_i @ sp[(-5)+4]
 25439   014472  0EF8               	movlw	-8
 25440   014474  006F FF8C  F023    	movff	plusw1,btemp
 25441   01447A  0EFF               	movlw	-1
 25442   01447C  0060  F08F  FFE3   	movff	btemp,plusw1
 25443   014482                     l9876:
 25444                           
 25445                           ;stkvar	_i @ sp[(-5)+4]
 25446   014482  0EFF               	movlw	-1
 25447   014484  50E3               	movf	plusw1,w,c
 25448   014486  B4D8               	btfsc	status,2,c
 25449   014488  D07A               	goto	l1963
 25450                           
 25451                           ;gemsecs.c: 544:    if (fake) {
 25452                           ;stkvar	_fake @ sp[(-5)+-4]
 25453   01448A  0EF7               	movlw	-9
 25454   01448C  50E3               	movf	plusw1,w,c
 25455   01448E  B4D8               	btfsc	status,2,c
 25456   014490  D015               	goto	l9884
 25457                           
 25458                           ;gemsecs.c: 545:     UART2_put_buffer(k[i - 1]);
 25459                           ;stkvar	_i @ sp[(-5)+4]
 25460   014492  0EFF               	movlw	-1
 25461   014494  50E3               	movf	plusw1,w,c
 25462   014496  6E2D               	movwf	(btemp+10)^0,c
 25463   014498  6A2E               	clrf	(btemp+11)^0,c
 25464                           
 25465                           ;stkvar	_k @ sp[(-5)+0]
 25466   01449A  0EFB               	movlw	-5
 25467   01449C  50E3               	movf	plusw1,w,c
 25468   01449E  262D               	addwf	(btemp+10)^0,f,c
 25469   0144A0  0EFC               	movlw	-4
 25470   0144A2  50E3               	movf	plusw1,w,c
 25471   0144A4  222E               	addwfc	(btemp+11)^0,f,c
 25472   0144A6  0EFF               	movlw	255
 25473   0144A8  242D               	addwf	(btemp+10)^0,w,c
 25474   0144AA  6ED9               	movwf	fsr2l,c
 25475   0144AC  0EFF               	movlw	255
 25476   0144AE  202E               	addwfc	(btemp+11)^0,w,c
 25477   0144B0  6EDA               	movwf	fsr2h,c
 25478   0144B2  50DF               	movf	indf2,w,c
 25479   0144B4  6EE6               	movwf	postinc1,c
 25480   0144B6  EC29  F0BD         	call	_UART2_put_buffer	;wreg free
 25481                           
 25482                           ;gemsecs.c: 546:    } else {
 25483   0144BA  D014               	goto	l9886
 25484   0144BC                     l9884:
 25485                           
 25486                           ;gemsecs.c: 548:     UART2_Write(k[i - 1]);
 25487                           ;stkvar	_i @ sp[(-5)+4]
 25488   0144BC  0EFF               	movlw	-1
 25489   0144BE  50E3               	movf	plusw1,w,c
 25490   0144C0  6E2D               	movwf	(btemp+10)^0,c
 25491   0144C2  6A2E               	clrf	(btemp+11)^0,c
 25492                           
 25493                           ;stkvar	_k @ sp[(-5)+0]
 25494   0144C4  0EFB               	movlw	-5
 25495   0144C6  50E3               	movf	plusw1,w,c
 25496   0144C8  262D               	addwf	(btemp+10)^0,f,c
 25497   0144CA  0EFC               	movlw	-4
 25498   0144CC  50E3               	movf	plusw1,w,c
 25499   0144CE  222E               	addwfc	(btemp+11)^0,f,c
 25500   0144D0  0EFF               	movlw	255
 25501   0144D2  242D               	addwf	(btemp+10)^0,w,c
 25502   0144D4  6ED9               	movwf	fsr2l,c
 25503   0144D6  0EFF               	movlw	255
 25504   0144D8  202E               	addwfc	(btemp+11)^0,w,c
 25505   0144DA  6EDA               	movwf	fsr2h,c
 25506   0144DC  50DF               	movf	indf2,w,c
 25507   0144DE  6EE6               	movwf	postinc1,c
 25508   0144E0  ECA7  F0BB         	call	_UART2_Write	;wreg free
 25509   0144E4                     l9886:
 25510                           
 25511                           ; BSR set to: 57
 25512                           ;gemsecs.c: 550:   }
 25513                           ;stkvar	_i @ sp[(-5)+4]
 25514   0144E4  0EFF               	movlw	-1
 25515   0144E6  06E3               	decf	plusw1,f,c
 25516   0144E8  D7CC               	goto	l9876
 25517   0144EA                     l9890:
 25518   0144EA  EC5E  F0C0         	call	_UART1_is_tx_ready	;wreg free
 25519   0144EE  5023               	movf	btemp^0,w,c
 25520   0144F0  B4D8               	btfsc	status,2,c
 25521   0144F2  D7FB               	goto	l9890
 25522                           
 25523                           ;gemsecs.c: 555:   for (i = length; i > 0; i--) {
 25524                           ;stkvar	_length @ sp[(-5)+-3]
 25525                           ;stkvar	_i @ sp[(-5)+4]
 25526   0144F4  0EF8               	movlw	-8
 25527   0144F6  006F FF8C  F023    	movff	plusw1,btemp
 25528   0144FC  0EFF               	movlw	-1
 25529   0144FE  0060  F08F  FFE3   	movff	btemp,plusw1
 25530   014504                     l9894:
 25531                           
 25532                           ;stkvar	_i @ sp[(-5)+4]
 25533   014504  0EFF               	movlw	-1
 25534   014506  50E3               	movf	plusw1,w,c
 25535   014508  B4D8               	btfsc	status,2,c
 25536   01450A  D039               	goto	l1963
 25537                           
 25538                           ;gemsecs.c: 556:    if (fake) {
 25539                           ;stkvar	_fake @ sp[(-5)+-4]
 25540   01450C  0EF7               	movlw	-9
 25541   01450E  50E3               	movf	plusw1,w,c
 25542   014510  B4D8               	btfsc	status,2,c
 25543   014512  D015               	goto	l9902
 25544                           
 25545                           ;gemsecs.c: 557:     UART1_put_buffer(k[i - 1]);
 25546                           ;stkvar	_i @ sp[(-5)+4]
 25547   014514  0EFF               	movlw	-1
 25548   014516  50E3               	movf	plusw1,w,c
 25549   014518  6E2D               	movwf	(btemp+10)^0,c
 25550   01451A  6A2E               	clrf	(btemp+11)^0,c
 25551                           
 25552                           ;stkvar	_k @ sp[(-5)+0]
 25553   01451C  0EFB               	movlw	-5
 25554   01451E  50E3               	movf	plusw1,w,c
 25555   014520  262D               	addwf	(btemp+10)^0,f,c
 25556   014522  0EFC               	movlw	-4
 25557   014524  50E3               	movf	plusw1,w,c
 25558   014526  222E               	addwfc	(btemp+11)^0,f,c
 25559   014528  0EFF               	movlw	255
 25560   01452A  242D               	addwf	(btemp+10)^0,w,c
 25561   01452C  6ED9               	movwf	fsr2l,c
 25562   01452E  0EFF               	movlw	255
 25563   014530  202E               	addwfc	(btemp+11)^0,w,c
 25564   014532  6EDA               	movwf	fsr2h,c
 25565   014534  50DF               	movf	indf2,w,c
 25566   014536  6EE6               	movwf	postinc1,c
 25567   014538  EC3D  F0BD         	call	_UART1_put_buffer	;wreg free
 25568                           
 25569                           ;gemsecs.c: 558:    } else {
 25570   01453C  D014               	goto	l9904
 25571   01453E                     l9902:
 25572                           
 25573                           ;gemsecs.c: 560:     UART1_Write(k[i - 1]);
 25574                           ;stkvar	_i @ sp[(-5)+4]
 25575   01453E  0EFF               	movlw	-1
 25576   014540  50E3               	movf	plusw1,w,c
 25577   014542  6E2D               	movwf	(btemp+10)^0,c
 25578   014544  6A2E               	clrf	(btemp+11)^0,c
 25579                           
 25580                           ;stkvar	_k @ sp[(-5)+0]
 25581   014546  0EFB               	movlw	-5
 25582   014548  50E3               	movf	plusw1,w,c
 25583   01454A  262D               	addwf	(btemp+10)^0,f,c
 25584   01454C  0EFC               	movlw	-4
 25585   01454E  50E3               	movf	plusw1,w,c
 25586   014550  222E               	addwfc	(btemp+11)^0,f,c
 25587   014552  0EFF               	movlw	255
 25588   014554  242D               	addwf	(btemp+10)^0,w,c
 25589   014556  6ED9               	movwf	fsr2l,c
 25590   014558  0EFF               	movlw	255
 25591   01455A  202E               	addwfc	(btemp+11)^0,w,c
 25592   01455C  6EDA               	movwf	fsr2h,c
 25593   01455E  50DF               	movf	indf2,w,c
 25594   014560  6EE6               	movwf	postinc1,c
 25595   014562  EC67  F0BB         	call	_UART1_Write	;wreg free
 25596   014566                     l9904:
 25597                           
 25598                           ; BSR set to: 57
 25599                           ;gemsecs.c: 562:   }
 25600                           ;stkvar	_i @ sp[(-5)+4]
 25601   014566  0EFF               	movlw	-1
 25602   014568  06E3               	decf	plusw1,f,c
 25603   01456A  D7CC               	goto	l9894
 25604   01456C                     l9910:
 25605                           
 25606                           ;stkvar	_s_uart @ sp[(-5)+-5]
 25607   01456C  0EF6               	movlw	-10
 25608   01456E  50E3               	movf	plusw1,w,c
 25609                           
 25610                           ; Switch size 1, requested type "simple"
 25611                           ; Number of cases is 2, Range of values is 1 to 2
 25612                           ; switch strategies available:
 25613                           ; Name         Instructions Cycles
 25614                           ; simple_byte            7     4 (average)
 25615                           ;	Chosen strategy is simple_byte
 25616   014570  0A01               	xorlw	1	; case 1
 25617   014572  B4D8               	btfsc	status,2,c
 25618   014574  D7BA               	goto	l9890
 25619   014576  0A03               	xorlw	3	; case 2
 25620   014578  B4D8               	btfsc	status,2,c
 25621   01457A  D776               	goto	l9872
 25622   01457C  D7B6               	goto	l9890
 25623   01457E                     l1963:
 25624                           
 25625                           ; _secs_send: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, arg
      +                          size = 5, vargsize = 0
 25626   01457E  0EF6               	movlw	246
 25627   014580  26E1               	addwf	fsr1l,f,c
 25628   014582  0EFF               	movlw	255
 25629   014584  22E2               	addwfc	fsr1h,f,c
 25630   014586  0012               	return		;funcret
 25631   014588                     __end_of_secs_send:
 25632                           	callstack 0
 25633                           
 25634 ;; *************** function _block_checksum *****************
 25635 ;; Defined at:
 25636 ;;		line 26 in file "gemsecs.c"
 25637 ;; Parameters:    Size  Location     Type
 25638 ;;  byte_block      2  [STACK] PTR unsigned char 
 25639 ;;		 -> D$message(156), S$message(36), H153(312), H33(36), 
 25640 ;;		 -> H26(29), H17(20), H14(17), H13(64), 
 25641 ;;		 -> H12(30), H10(91), 
 25642 ;;  byte_count      2  [STACK] const unsigned short 
 25643 ;; Auto vars:     Size  Location     Type
 25644 ;;  i               2  [STACK] unsigned short 
 25645 ;;  sum             2  [STACK] unsigned short 
 25646 ;; Return value:  Size  Location     Type
 25647 ;;                  2  [STACK] unsigned short 
 25648 ;; Registers used:
 25649 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 25650 ;; Tracked objects:
 25651 ;;		On entry : 0/0
 25652 ;;		On exit  : 0/0
 25653 ;;		Unchanged: 0/0
 25654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25659 ;;Total ram usage:        0 bytes
 25660 ;; Hardware stack levels used: 1
 25661 ;; Hardware stack levels required when called: 3
 25662 ;; This function calls:
 25663 ;;		Nothing
 25664 ;; This function is called by:
 25665 ;;		_secs_send
 25666 ;; This function uses a reentrant model
 25667 ;;
 25668                           
 25669                           	psect	text3
 25670   01671A                     __ptext3:
 25671                           	callstack 0
 25672   01671A                     _block_checksum:
 25673                           	callstack 0
 25674                           
 25675                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25676   01671A  52E6               	movf	postinc1,f,c
 25677   01671C  52E6               	movf	postinc1,f,c
 25678   01671E  52E6               	movf	postinc1,f,c
 25679   016720  52E6               	movf	postinc1,f,c
 25680                           
 25681                           ;gemsecs.c: 26: uint16_t block_checksum(uint8_t *byte_block, const uint16_t byte_count);
      +                          gemsecs.c: 27: {;gemsecs.c: 28:  uint16_t sum = 0, i;
 25682                           ;stkvar	_sum @ sp[(-4)+2]
 25683                           
 25684                           ;incstack = 0
 25685   016722  0EFE               	movlw	-2
 25686   016724  6AE3               	clrf	plusw1,c
 25687   016726  0EFF               	movlw	-1
 25688   016728  6AE3               	clrf	plusw1,c
 25689                           
 25690                           ;gemsecs.c: 30:  for (i = 0; i < byte_count; i++) {
 25691                           ;stkvar	_i @ sp[(-4)+0]
 25692   01672A  0EFC               	movlw	-4
 25693   01672C  6AE3               	clrf	plusw1,c
 25694   01672E  0EFD               	movlw	-3
 25695   016730  6AE3               	clrf	plusw1,c
 25696                           
 25697                           ;stkvar	_byte_count @ sp[(-4)+-4]
 25698   016732  0EF8               	movlw	-8
 25699   016734  006F FF8C  F023    	movff	plusw1,btemp
 25700   01673A  0EF9               	movlw	-7
 25701   01673C  50E3               	movf	plusw1,w,c
 25702   01673E  1023               	iorwf	btemp^0,w,c
 25703   016740  B4D8               	btfsc	status,2,c
 25704   016742  D04F               	goto	u5410
 25705   016744                     l8466:
 25706                           
 25707                           ;gemsecs.c: 31:   sum += byte_block[i];
 25708                           ;stkvar	_i @ sp[(-4)+0]
 25709   016744  0EFC               	movlw	-4
 25710   016746  006F FF8C  F02D    	movff	plusw1,btemp+10
 25711   01674C  0EFD               	movlw	-3
 25712   01674E  006F FF8C  F02E    	movff	plusw1,btemp+11
 25713                           
 25714                           ;stkvar	_byte_block @ sp[(-4)+-2]
 25715   016754  0EFA               	movlw	-6
 25716   016756  006F FF8C  F02B    	movff	plusw1,btemp+8
 25717   01675C  0EFB               	movlw	-5
 25718   01675E  006F FF8C  F02C    	movff	plusw1,btemp+9
 25719   016764  502D               	movf	(btemp+10)^0,w,c
 25720   016766  242B               	addwf	(btemp+8)^0,w,c
 25721   016768  6ED9               	movwf	fsr2l,c
 25722   01676A  502E               	movf	(btemp+11)^0,w,c
 25723   01676C  202C               	addwfc	(btemp+9)^0,w,c
 25724   01676E  6EDA               	movwf	fsr2h,c
 25725   016770  50DF               	movf	indf2,w,c
 25726   016772  6E2E               	movwf	(btemp+11)^0,c
 25727                           
 25728                           ;stkvar	_sum @ sp[(-4)+2]
 25729   016774  0EFE               	movlw	-2
 25730   016776  50E3               	movf	plusw1,w,c
 25731   016778  242E               	addwf	(btemp+11)^0,w,c
 25732   01677A  6E23               	movwf	btemp^0,c
 25733   01677C  0EFE               	movlw	-2
 25734   01677E  0060  F08F  FFE3   	movff	btemp,plusw1
 25735   016784  6A23               	clrf	btemp^0,c
 25736   016786  0EFF               	movlw	-1
 25737   016788  50E3               	movf	plusw1,w,c
 25738   01678A  2223               	addwfc	btemp^0,f,c
 25739   01678C  0EFF               	movlw	-1
 25740   01678E  0060  F08F  FFE3   	movff	btemp,plusw1
 25741                           
 25742                           ;gemsecs.c: 32:  }
 25743                           ;stkvar	_i @ sp[(-4)+0]
 25744   016794  0EFC               	movlw	-4
 25745   016796  50E3               	movf	plusw1,w,c
 25746   016798  0F01               	addlw	1
 25747   01679A  6E23               	movwf	btemp^0,c
 25748   01679C  0EFC               	movlw	-4
 25749   01679E  0060  F08F  FFE3   	movff	btemp,plusw1
 25750   0167A4  6A23               	clrf	btemp^0,c
 25751   0167A6  0EFD               	movlw	-3
 25752   0167A8  50E3               	movf	plusw1,w,c
 25753   0167AA  2023               	addwfc	btemp^0,w,c
 25754   0167AC  6E23               	movwf	btemp^0,c
 25755   0167AE  0EFD               	movlw	-3
 25756   0167B0  0060  F08F  FFE3   	movff	btemp,plusw1
 25757                           
 25758                           ;stkvar	_byte_count @ sp[(-4)+-4]
 25759   0167B6  0EF8               	movlw	-8
 25760   0167B8  006F FF8C  F02D    	movff	plusw1,btemp+10
 25761   0167BE  0EF9               	movlw	-7
 25762   0167C0  006F FF8C  F02E    	movff	plusw1,btemp+11
 25763                           
 25764                           ;stkvar	_i @ sp[(-4)+0]
 25765   0167C6  0EFC               	movlw	-4
 25766   0167C8  006F FF8C  F02B    	movff	plusw1,btemp+8
 25767   0167CE  0EFD               	movlw	-3
 25768   0167D0  006F FF8C  F02C    	movff	plusw1,btemp+9
 25769   0167D6  502D               	movf	(btemp+10)^0,w,c
 25770   0167D8  5C2B               	subwf	(btemp+8)^0,w,c
 25771   0167DA  502E               	movf	(btemp+11)^0,w,c
 25772   0167DC  582C               	subwfb	(btemp+9)^0,w,c
 25773   0167DE  A0D8               	btfss	status,0,c
 25774   0167E0  D7B1               	goto	l8466
 25775   0167E2                     u5410:
 25776                           
 25777                           ;gemsecs.c: 37:  return sum;
 25778                           ;stkvar	_sum @ sp[(-4)+2]
 25779   0167E2  0EFE               	movlw	-2
 25780   0167E4  006F FF8C  F023    	movff	plusw1,btemp
 25781   0167EA  0EFF               	movlw	-1
 25782   0167EC  006F FF8C  F024    	movff	plusw1,btemp+1
 25783                           
 25784                           ; _block_checksum: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
 25785   0167F2  0EF8               	movlw	248
 25786   0167F4  26E1               	addwf	fsr1l,f,c
 25787   0167F6  0EFF               	movlw	255
 25788   0167F8  22E2               	addwfc	fsr1h,f,c
 25789   0167FA  0012               	return		;funcret
 25790   0167FC                     __end_of_block_checksum:
 25791                           	callstack 0
 25792                           
 25793 ;; *************** function _UART2_put_buffer *****************
 25794 ;; Defined at:
 25795 ;;		line 257 in file "mcc_generated_files/uart2.c"
 25796 ;; Parameters:    Size  Location     Type
 25797 ;;  bufData         1  [STACK] unsigned char 
 25798 ;; Auto vars:     Size  Location     Type
 25799 ;;		None
 25800 ;; Return value:  Size  Location     Type
 25801 ;;                  1  [STACK] void 
 25802 ;; Registers used:
 25803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 25804 ;; Tracked objects:
 25805 ;;		On entry : 0/0
 25806 ;;		On exit  : 3F/39
 25807 ;;		Unchanged: 0/0
 25808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25813 ;;Total ram usage:        0 bytes
 25814 ;; Hardware stack levels used: 1
 25815 ;; Hardware stack levels required when called: 3
 25816 ;; This function calls:
 25817 ;;		Nothing
 25818 ;; This function is called by:
 25819 ;;		_secs_send
 25820 ;; This function uses a reentrant model
 25821 ;;
 25822                           
 25823                           	psect	text4
 25824   017A52                     __ptext4:
 25825                           	callstack 0
 25826   017A52                     _UART2_put_buffer:
 25827                           	callstack 25
 25828                           
 25829                           ;mcc_generated_files/uart2.c: 257: void UART2_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart2.c: 258: {;mcc_generated_files/uart2.c: 259:  PIE6bits.U2RXIE = 0;
 25830                           
 25831                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25832                           ;incstack = 0
 25833   017A52  0139               	movlb	57	; () banked
 25834   017A54  9596               	bcf	150,2,b	;volatile
 25835                           
 25836                           ; BSR set to: 57
 25837                           ;mcc_generated_files/uart2.c: 260:  uart2RxBuffer[uart2RxHead++] = bufData;
 25838                           ;stkvar	_bufData @ sp[(0)+-1]
 25839   017A56  0E00               	movlw	low _uart2RxBuffer
 25840   017A58  2412               	addwf	_uart2RxHead^0,w,c	;volatile
 25841   017A5A  6ED9               	movwf	fsr2l,c
 25842   017A5C  6ADA               	clrf	fsr2h,c
 25843   017A5E  0E05               	movlw	high _uart2RxBuffer
 25844   017A60  22DA               	addwfc	fsr2h,f,c
 25845   017A62  0EFF               	movlw	-1
 25846   017A64  006F FF8F FFDF     	movff	plusw1,indf2
 25847                           
 25848                           ; BSR set to: 57
 25849   017A6A  2A12               	incf	_uart2RxHead^0,f,c	;volatile
 25850                           
 25851                           ; BSR set to: 57
 25852                           ;mcc_generated_files/uart2.c: 261:  if (sizeof(uart2RxBuffer) <= uart2RxHead) {
 25853   017A6C  2812               	incf	_uart2RxHead^0,w,c
 25854   017A6E  B4D8               	btfsc	status,2,c
 25855                           
 25856                           ; BSR set to: 57
 25857                           ;mcc_generated_files/uart2.c: 262:   uart2RxHead = 0;
 25858   017A70  6A12               	clrf	_uart2RxHead^0,c	;volatile
 25859                           
 25860                           ; BSR set to: 57
 25861                           ;mcc_generated_files/uart2.c: 265:  uart2RxCount++;
 25862   017A72  2A10               	incf	_uart2RxCount^0,f,c	;volatile
 25863                           
 25864                           ; BSR set to: 57
 25865                           ;mcc_generated_files/uart2.c: 266:  PIE6bits.U2RXIE = 1;
 25866   017A74  8596               	bsf	150,2,b	;volatile
 25867                           
 25868                           ; BSR set to: 57
 25869                           ; _UART2_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 25870   017A76  52E5               	movf	postdec1,f,c
 25871   017A78  0012               	return		;funcret
 25872   017A7A                     __end_of_UART2_put_buffer:
 25873                           	callstack 0
 25874                           
 25875 ;; *************** function _UART2_is_tx_ready *****************
 25876 ;; Defined at:
 25877 ;;		line 142 in file "mcc_generated_files/uart2.c"
 25878 ;; Parameters:    Size  Location     Type
 25879 ;;		None
 25880 ;; Auto vars:     Size  Location     Type
 25881 ;;		None
 25882 ;; Return value:  Size  Location     Type
 25883 ;;                  1  [STACK] unsigned char 
 25884 ;; Registers used:
 25885 ;;		btemp
 25886 ;; Tracked objects:
 25887 ;;		On entry : 0/0
 25888 ;;		On exit  : 0/0
 25889 ;;		Unchanged: 0/0
 25890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25895 ;;Total ram usage:        0 bytes
 25896 ;; Hardware stack levels used: 1
 25897 ;; Hardware stack levels required when called: 3
 25898 ;; This function calls:
 25899 ;;		Nothing
 25900 ;; This function is called by:
 25901 ;;		_secs_send
 25902 ;; This function uses a reentrant model
 25903 ;;
 25904                           
 25905                           	psect	text5
 25906   0180B6                     __ptext5:
 25907                           	callstack 0
 25908   0180B6                     _UART2_is_tx_ready:
 25909                           	callstack 25
 25910                           
 25911                           ;mcc_generated_files/uart2.c: 144:     return uart2TxBufferRemaining;
 25912                           
 25913                           ; BSR set to: 57
 25914                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25915                           ;incstack = 0
 25916   0180B6  C013  F023         	movff	_uart2TxBufferRemaining,btemp	;volatile
 25917                           
 25918                           ; _UART2_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25919   0180BA  0012               	return		;funcret
 25920   0180BC                     __end_of_UART2_is_tx_ready:
 25921                           	callstack 0
 25922                           
 25923 ;; *************** function _UART2_Write *****************
 25924 ;; Defined at:
 25925 ;;		line 172 in file "mcc_generated_files/uart2.c"
 25926 ;; Parameters:    Size  Location     Type
 25927 ;;  txData          1  [STACK] unsigned char 
 25928 ;; Auto vars:     Size  Location     Type
 25929 ;;		None
 25930 ;; Return value:  Size  Location     Type
 25931 ;;                  1  [STACK] void 
 25932 ;; Registers used:
 25933 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 25934 ;; Tracked objects:
 25935 ;;		On entry : 0/0
 25936 ;;		On exit  : 3F/39
 25937 ;;		Unchanged: 0/0
 25938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25943 ;;Total ram usage:        0 bytes
 25944 ;; Hardware stack levels used: 1
 25945 ;; Hardware stack levels required when called: 3
 25946 ;; This function calls:
 25947 ;;		Nothing
 25948 ;; This function is called by:
 25949 ;;		_secs_send
 25950 ;; This function uses a reentrant model
 25951 ;;
 25952                           
 25953                           	psect	text6
 25954   01774E                     __ptext6:
 25955                           	callstack 0
 25956   01774E                     _UART2_Write:
 25957                           	callstack 25
 25958                           
 25959                           ;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
 25960                           
 25961                           ;mcc_generated_files/uart2.c: 172: void UART2_Write(uint8_t txData);mcc_generated_files/
      +                          uart2.c: 173: {;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
 25962                           
 25963                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25964                           ;incstack = 0
 25965   01774E  5013               	movf	_uart2TxBufferRemaining^0,w,c	;volatile
 25966   017750  B4D8               	btfsc	status,2,c
 25967   017752  D7FD               	goto	__ptext6
 25968                           
 25969                           ;mcc_generated_files/uart2.c: 178:     if(0 == PIE6bits.U2TXIE)
 25970   017754  0139               	movlb	57	; () banked
 25971   017756  B796               	btfsc	150,3,b	;volatile
 25972   017758  D005               	goto	l711
 25973                           
 25974                           ; BSR set to: 57
 25975                           ;mcc_generated_files/uart2.c: 179:     {;mcc_generated_files/uart2.c: 180:         U2TXB
      +                           = txData;
 25976                           ;stkvar	_txData @ sp[(0)+-1]
 25977   01775A  0EFF               	movlw	-1
 25978   01775C  006F FF8F FDD2     	movff	plusw1,15826	;volatile
 25979                           
 25980                           ;mcc_generated_files/uart2.c: 181:     }
 25981   017762  D011               	goto	l8414
 25982   017764                     l711:
 25983                           
 25984                           ; BSR set to: 57
 25985                           ;mcc_generated_files/uart2.c: 183:     {;mcc_generated_files/uart2.c: 184:         PIE6b
      +                          its.U2TXIE = 0;
 25986   017764  9796               	bcf	150,3,b	;volatile
 25987                           
 25988                           ; BSR set to: 57
 25989                           ;mcc_generated_files/uart2.c: 185:         uart2TxBuffer[uart2TxHead++] = txData;
 25990                           ;stkvar	_txData @ sp[(0)+-1]
 25991   017766  0E00               	movlw	low _uart2TxBuffer
 25992   017768  2415               	addwf	_uart2TxHead^0,w,c	;volatile
 25993   01776A  6ED9               	movwf	fsr2l,c
 25994   01776C  6ADA               	clrf	fsr2h,c
 25995   01776E  0E02               	movlw	high _uart2TxBuffer
 25996   017770  22DA               	addwfc	fsr2h,f,c
 25997   017772  0EFF               	movlw	-1
 25998   017774  006F FF8F FFDF     	movff	plusw1,indf2
 25999                           
 26000                           ; BSR set to: 57
 26001   01777A  2A15               	incf	_uart2TxHead^0,f,c	;volatile
 26002                           
 26003                           ; BSR set to: 57
 26004                           ;mcc_generated_files/uart2.c: 186:         if(sizeof(uart2TxBuffer) <= uart2TxHead)
 26005   01777C  0E3F               	movlw	63
 26006   01777E  6415               	cpfsgt	_uart2TxHead^0,c
 26007   017780  D001               	goto	l8412
 26008                           
 26009                           ; BSR set to: 57
 26010                           ;mcc_generated_files/uart2.c: 187:         {;mcc_generated_files/uart2.c: 188:          
      +                             uart2TxHead = 0;
 26011   017782  6A15               	clrf	_uart2TxHead^0,c	;volatile
 26012   017784                     l8412:
 26013                           
 26014                           ; BSR set to: 57
 26015                           ;mcc_generated_files/uart2.c: 190:         uart2TxBufferRemaining--;
 26016   017784  0613               	decf	_uart2TxBufferRemaining^0,f,c	;volatile
 26017   017786                     l8414:
 26018                           
 26019                           ; BSR set to: 57
 26020                           ;mcc_generated_files/uart2.c: 192:     PIE6bits.U2TXIE = 1;
 26021   017786  8796               	bsf	150,3,b	;volatile
 26022                           
 26023                           ; BSR set to: 57
 26024                           ; _UART2_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
 26025   017788  52E5               	movf	postdec1,f,c
 26026   01778A  0012               	return		;funcret
 26027   01778C                     __end_of_UART2_Write:
 26028                           	callstack 0
 26029                           
 26030 ;; *************** function _UART1_put_buffer *****************
 26031 ;; Defined at:
 26032 ;;		line 253 in file "mcc_generated_files/uart1.c"
 26033 ;; Parameters:    Size  Location     Type
 26034 ;;  bufData         1  [STACK] unsigned char 
 26035 ;; Auto vars:     Size  Location     Type
 26036 ;;		None
 26037 ;; Return value:  Size  Location     Type
 26038 ;;                  1  [STACK] void 
 26039 ;; Registers used:
 26040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 26041 ;; Tracked objects:
 26042 ;;		On entry : 0/39
 26043 ;;		On exit  : 3F/39
 26044 ;;		Unchanged: 0/0
 26045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26050 ;;Total ram usage:        0 bytes
 26051 ;; Hardware stack levels used: 1
 26052 ;; Hardware stack levels required when called: 3
 26053 ;; This function calls:
 26054 ;;		Nothing
 26055 ;; This function is called by:
 26056 ;;		_t_protocol
 26057 ;;		_secs_send
 26058 ;; This function uses a reentrant model
 26059 ;;
 26060                           
 26061                           	psect	text7
 26062   017A7A                     __ptext7:
 26063                           	callstack 0
 26064   017A7A                     _UART1_put_buffer:
 26065                           	callstack 25
 26066                           
 26067                           ;mcc_generated_files/uart1.c: 253: void UART1_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart1.c: 254: {;mcc_generated_files/uart1.c: 255:  PIE3bits.U1RXIE = 0;
 26068                           
 26069                           ; BSR set to: 57
 26070                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26071                           ;incstack = 0
 26072   017A7A  0139               	movlb	57	; () banked
 26073   017A7C  9793               	bcf	147,3,b	;volatile
 26074                           
 26075                           ; BSR set to: 57
 26076                           ;mcc_generated_files/uart1.c: 256:  uart1RxBuffer[uart1RxHead++] = bufData;
 26077                           ;stkvar	_bufData @ sp[(0)+-1]
 26078   017A7E  0E00               	movlw	low _uart1RxBuffer
 26079   017A80  2418               	addwf	_uart1RxHead^0,w,c	;volatile
 26080   017A82  6ED9               	movwf	fsr2l,c
 26081   017A84  6ADA               	clrf	fsr2h,c
 26082   017A86  0E04               	movlw	high _uart1RxBuffer
 26083   017A88  22DA               	addwfc	fsr2h,f,c
 26084   017A8A  0EFF               	movlw	-1
 26085   017A8C  006F FF8F FFDF     	movff	plusw1,indf2
 26086                           
 26087                           ; BSR set to: 57
 26088   017A92  2A18               	incf	_uart1RxHead^0,f,c	;volatile
 26089                           
 26090                           ; BSR set to: 57
 26091                           ;mcc_generated_files/uart1.c: 257:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 26092   017A94  2818               	incf	_uart1RxHead^0,w,c
 26093   017A96  B4D8               	btfsc	status,2,c
 26094                           
 26095                           ; BSR set to: 57
 26096                           ;mcc_generated_files/uart1.c: 258:   uart1RxHead = 0;
 26097   017A98  6A18               	clrf	_uart1RxHead^0,c	;volatile
 26098                           
 26099                           ; BSR set to: 57
 26100                           ;mcc_generated_files/uart1.c: 261:  uart1RxCount++;
 26101   017A9A  2A16               	incf	_uart1RxCount^0,f,c	;volatile
 26102                           
 26103                           ; BSR set to: 57
 26104                           ;mcc_generated_files/uart1.c: 262:  PIE3bits.U1RXIE = 1;
 26105   017A9C  8793               	bsf	147,3,b	;volatile
 26106                           
 26107                           ; BSR set to: 57
 26108                           ; _UART1_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 26109   017A9E  52E5               	movf	postdec1,f,c
 26110   017AA0  0012               	return		;funcret
 26111   017AA2                     __end_of_UART1_put_buffer:
 26112                           	callstack 0
 26113                           
 26114 ;; *************** function _UART1_is_tx_ready *****************
 26115 ;; Defined at:
 26116 ;;		line 152 in file "mcc_generated_files/uart1.c"
 26117 ;; Parameters:    Size  Location     Type
 26118 ;;		None
 26119 ;; Auto vars:     Size  Location     Type
 26120 ;;		None
 26121 ;; Return value:  Size  Location     Type
 26122 ;;                  1  [STACK] unsigned char 
 26123 ;; Registers used:
 26124 ;;		btemp
 26125 ;; Tracked objects:
 26126 ;;		On entry : 0/0
 26127 ;;		On exit  : 0/0
 26128 ;;		Unchanged: 0/0
 26129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26134 ;;Total ram usage:        0 bytes
 26135 ;; Hardware stack levels used: 1
 26136 ;; Hardware stack levels required when called: 3
 26137 ;; This function calls:
 26138 ;;		Nothing
 26139 ;; This function is called by:
 26140 ;;		_secs_send
 26141 ;; This function uses a reentrant model
 26142 ;;
 26143                           
 26144                           	psect	text8
 26145   0180BC                     __ptext8:
 26146                           	callstack 0
 26147   0180BC                     _UART1_is_tx_ready:
 26148                           	callstack 25
 26149                           
 26150                           ;mcc_generated_files/uart1.c: 154:  return uart1TxBufferRemaining;
 26151                           
 26152                           ; BSR set to: 57
 26153                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26154                           ;incstack = 0
 26155   0180BC  C019  F023         	movff	_uart1TxBufferRemaining,btemp	;volatile
 26156                           
 26157                           ; _UART1_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26158   0180C0  0012               	return		;funcret
 26159   0180C2                     __end_of_UART1_is_tx_ready:
 26160                           	callstack 0
 26161                           
 26162 ;; *************** function _secs_II_message *****************
 26163 ;; Defined at:
 26164 ;;		line 922 in file "gemsecs.c"
 26165 ;; Parameters:    Size  Location     Type
 26166 ;;  stream          1  [STACK] const unsigned char 
 26167 ;;  function        1  [STACK] const unsigned char 
 26168 ;; Auto vars:     Size  Location     Type
 26169 ;;  ceid            4  [STACK] unsigned long 
 26170 ;;  i               2  [STACK] unsigned short 
 26171 ;; Return value:  Size  Location     Type
 26172 ;;                  7  [STACK] struct response_type
 26173 ;; Registers used:
 26174 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 26175 ;; Tracked objects:
 26176 ;;		On entry : 0/3C
 26177 ;;		On exit  : 0/0
 26178 ;;		Unchanged: 0/0
 26179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26184 ;;Total ram usage:        0 bytes
 26185 ;; Hardware stack levels used: 1
 26186 ;; Hardware stack levels required when called: 13
 26187 ;; This function calls:
 26188 ;;		_DATAEE_WriteByte
 26189 ;;		_StartTimer
 26190 ;;		_TimerDone
 26191 ;;		_display_info
 26192 ;;		_format_display_text
 26193 ;;		_gem_messages
 26194 ;;		_parse_sid
 26195 ;;		_s10f1_opcmd
 26196 ;;		_s6f11_opcmd
 26197 ;;		_sequence_messages
 26198 ;;		_set_display_info
 26199 ;;		_set_temp_display_help
 26200 ;;		_terminal_format
 26201 ;;		_vterm_sequence
 26202 ;; This function is called by:
 26203 ;;		_t_protocol
 26204 ;; This function uses a reentrant model
 26205 ;;
 26206                           
 26207                           	psect	text9
 26208   0119E0                     __ptext9:
 26209                           	callstack 0
 26210   0119E0                     _secs_II_message:
 26211                           	callstack 0
 26212                           
 26213                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 var
      +                          gsize = 0, retsize = 7 argfudge = 5
 26214   0119E0  0E0B               	movlw	11
 26215   0119E2  26E1               	addwf	fsr1l,f,c
 26216   0119E4  0E00               	movlw	0
 26217   0119E6  22E2               	addwfc	fsr1h,f,c
 26218                           
 26219                           ;gemsecs.c: 922: response_type secs_II_message(const uint8_t stream, const uint8_t funct
      +                          ion);gemsecs.c: 923: {;gemsecs.c: 924:  static response_type block;;gemsecs.c: 925:  uin
      +                          t16_t i = 0;
 26220                           ;stkvar	_i @ sp[(-6)+4]
 26221                           
 26222                           ;incstack = 0
 26223   0119E8  0EFE               	movlw	-2
 26224   0119EA  6AE3               	clrf	plusw1,c
 26225   0119EC  0EFF               	movlw	-1
 26226   0119EE  6AE3               	clrf	plusw1,c
 26227   0119F0  A8BB               	btfss	187,4,c	;volatile
 26228   0119F2  D002               	goto	u9090
 26229   0119F4  0E01               	movlw	1
 26230   0119F6  D001               	goto	u9096
 26231   0119F8                     u9090:
 26232   0119F8  0E00               	movlw	0
 26233   0119FA                     u9096:
 26234   0119FA  0AFF               	xorlw	255
 26235   0119FC  6E2E               	movwf	(btemp+11)^0,c
 26236   0119FE  3A2E               	swapf	(btemp+11)^0,f,c
 26237   011A00  50BB               	movf	187,w,c	;volatile
 26238   011A02  182E               	xorwf	(btemp+11)^0,w,c
 26239   011A04  0BEF               	andlw	-17
 26240   011A06  182E               	xorwf	(btemp+11)^0,w,c
 26241   011A08  6EBB               	movwf	187,c	;volatile
 26242                           
 26243                           ;gemsecs.c: 928:  V.abort = LINK_ERROR_NONE;
 26244   011A0A  0E0A               	movlw	10
 26245   011A0C  006F FFA0  FD50    	movff	wreg,_V+310	;volatile
 26246                           
 26247                           ;gemsecs.c: 929:  V.queue = 0;
 26248   011A12  EE23  F168         	lfsr	2,_V+334	;volatile
 26249   011A16  98DF               	bcf	indf2,4,c
 26250                           
 26251                           ;gemsecs.c: 930:  block.respond = 0;
 26252   011A18  9022               	bcf	(secs_II_message@block+6)^0,0,c
 26253                           
 26254                           ;gemsecs.c: 932:  if (TimerDone(TMR_HBIO)) {
 26255   011A1A  0E06               	movlw	6
 26256   011A1C  6EE6               	movwf	postinc1,c
 26257   011A1E  ECCB  F0BE         	call	_TimerDone	;wreg free
 26258   011A22  5023               	movf	btemp^0,w,c
 26259   011A24  B4D8               	btfsc	status,2,c
 26260   011A26  D330               	goto	l12940
 26261                           
 26262                           ;gemsecs.c: 933:   if (V.stack) {
 26263   011A28  EE23  F169         	lfsr	2,_V+335	;volatile
 26264   011A2C  50DF               	movf	223,w,c
 26265   011A2E  0B07               	andlw	7
 26266   011A30  0900               	iorlw	0
 26267   011A32  B4D8               	btfsc	status,2,c
 26268   011A34  D02F               	goto	l12634
 26269                           
 26270                           ;gemsecs.c: 934:    gem_messages(&block, V.sid);
 26271   011A36  EE23  F199         	lfsr	2,_V+383	;volatile
 26272   011A3A  50DF               	movf	indf2,w,c
 26273   011A3C  6EE6               	movwf	postinc1,c
 26274   011A3E  0E1C               	movlw	secs_II_message@block& (0+255)
 26275   011A40  6EE6               	movwf	postinc1,c
 26276   011A42  ECCE  F0A9         	call	_gem_messages	;wreg free
 26277                           
 26278                           ;gemsecs.c: 935:    if (V.sid >= 10) {
 26279   011A46  EE23  F199         	lfsr	2,_V+383	;volatile
 26280   011A4A  0E09               	movlw	9
 26281   011A4C  64DF               	cpfsgt	indf2,c
 26282   011A4E  D005               	goto	l12622
 26283                           
 26284                           ;gemsecs.c: 936:     set_display_info(DIS_SEQUENCE_M);
 26285   011A50  0E08               	movlw	8
 26286   011A52  6EE6               	movwf	postinc1,c
 26287   011A54  EC48  F0BF         	call	_set_display_info	;wreg free
 26288                           
 26289                           ;gemsecs.c: 937:    } else {
 26290   011A58  D004               	goto	l12624
 26291   011A5A                     l12622:
 26292                           
 26293                           ;gemsecs.c: 938:     set_display_info(DIS_SEQUENCE);
 26294   011A5A  0E07               	movlw	7
 26295   011A5C  6EE6               	movwf	postinc1,c
 26296   011A5E  EC48  F0BF         	call	_set_display_info	;wreg free
 26297   011A62                     l12624:
 26298                           
 26299                           ;gemsecs.c: 940:    vterm_sequence();
 26300   011A62  ECB9  F093         	call	_vterm_sequence	;wreg free
 26301                           
 26302                           ; BSR set to: 1
 26303                           ;gemsecs.c: 941:    StartTimer(TMR_INFO, 3000);
 26304   011A66  0EB8               	movlw	184
 26305   011A68  6EE6               	movwf	postinc1,c
 26306   011A6A  0E0B               	movlw	11
 26307   011A6C  6EE6               	movwf	postinc1,c
 26308   011A6E  0E07               	movlw	7
 26309   011A70  6EE6               	movwf	postinc1,c
 26310   011A72  EC20  F0BC         	call	_StartTimer	;wreg free
 26311                           
 26312                           ;gemsecs.c: 942:    V.set_sequ = 1;
 26313   011A76  EE23  F167         	lfsr	2,_V+333	;volatile
 26314   011A7A  86DF               	bsf	indf2,3,c
 26315   011A7C                     l12630:
 26316                           
 26317                           ;gemsecs.c: 943:    return(block);
 26318   011A7C  EE20  F01C         	lfsr	2,secs_II_message@block
 26319                           
 26320                           ;stkvar	?_secs_II_message @ sp[(-6)+-7]
 26321   011A80  0E07               	movlw	7
 26322   011A82  6E23               	movwf	btemp^0,c
 26323   011A84  0EF3               	movlw	-13
 26324   011A86                     us913999:
 26325   011A86  006F FF7B FFE3     	movff	postinc2,plusw1
 26326   011A8C  28E8               	incf	wreg,w,c
 26327   011A8E  2E23               	decfsz	btemp^0,f,c
 26328   011A90  D7FA               	bra	us913999
 26329   011A92  D30F               	goto	l2124
 26330   011A94                     l12634:
 26331                           
 26332                           ;gemsecs.c: 945:   StartTimer(TMR_HBIO, 5000);
 26333   011A94  0E88               	movlw	136
 26334   011A96  6EE6               	movwf	postinc1,c
 26335   011A98  0E13               	movlw	19
 26336   011A9A  6EE6               	movwf	postinc1,c
 26337   011A9C  0E06               	movlw	6
 26338   011A9E  6EE6               	movwf	postinc1,c
 26339   011AA0  EC20  F0BC         	call	_StartTimer	;wreg free
 26340   011AA4  D2F1               	goto	l12940
 26341   011AA6                     l12636:
 26342                           
 26343                           ;gemsecs.c: 952:    block.header = (uint8_t*) & H12[0];
 26344   011AA6  0EC3               	movlw	low _H12
 26345   011AA8  6E1C               	movwf	secs_II_message@block^0,c
 26346   011AAA  0E02               	movlw	high _H12
 26347   011AAC  6E1D               	movwf	(secs_II_message@block+1)^0,c
 26348                           
 26349                           ;gemsecs.c: 953:    block.length = sizeof(header12);
 26350   011AAE  0E0F               	movlw	15
 26351   011AB0  6E1E               	movwf	(secs_II_message@block+2)^0,c
 26352                           
 26353                           ;gemsecs.c: 954:    H12[0].block.block.systemb = V.systemb;
 26354   011AB2  0063  F514  F2C7   	movff	_V+299,_H12+4	;volatile
 26355   011AB8  0063  F518  F2C8   	movff	_V+300,_H12+5	;volatile
 26356   011ABE  0063  F51C  F2C9   	movff	_V+301,_H12+6	;volatile
 26357   011AC4  0063  F520  F2CA   	movff	_V+302,_H12+7	;volatile
 26358                           
 26359                           ;gemsecs.c: 955:    H10[0].block.block.systemb = V.ticks;
 26360   011ACA  0063  F504  F102   	movff	_V+295,_H10+2	;volatile
 26361   011AD0  0063  F508  F103   	movff	_V+296,_H10+3	;volatile
 26362   011AD6  0063  F50C  F104   	movff	_V+297,_H10+4	;volatile
 26363   011ADC  0063  F510  F105   	movff	_V+298,_H10+5	;volatile
 26364                           
 26365                           ;gemsecs.c: 956:    block.respond = 1;
 26366   011AE2  8022               	bsf	(secs_II_message@block+6)^0,0,c
 26367                           
 26368                           ;gemsecs.c: 957:    block.reply = (uint8_t*) & H10[0];
 26369   011AE4  0E00               	movlw	low _H10
 26370   011AE6  6E1F               	movwf	(secs_II_message@block+3)^0,c
 26371   011AE8  0E01               	movlw	high _H10
 26372   011AEA  6E20               	movwf	(secs_II_message@block+4)^0,c
 26373                           
 26374                           ;gemsecs.c: 958:    block.reply_length = sizeof(header10);
 26375   011AEC  0E0D               	movlw	13
 26376   011AEE  6E21               	movwf	(secs_II_message@block+5)^0,c
 26377                           
 26378                           ;gemsecs.c: 959:    V.queue = 1;
 26379   011AF0  EE23  F168         	lfsr	2,_V+334	;volatile
 26380   011AF4  88DF               	bsf	indf2,4,c
 26381                           
 26382                           ;gemsecs.c: 960:    break;
 26383   011AF6  D7C2               	goto	l12630
 26384   011AF8                     l12650:
 26385                           
 26386                           ;gemsecs.c: 962:    block.header = (uint8_t*) & H10[0];
 26387   011AF8  0E00               	movlw	low _H10
 26388   011AFA  6E1C               	movwf	secs_II_message@block^0,c
 26389   011AFC  0E01               	movlw	high _H10
 26390   011AFE  6E1D               	movwf	(secs_II_message@block+1)^0,c
 26391                           
 26392                           ;gemsecs.c: 963:    block.length = sizeof(header10);
 26393   011B00  0E0D               	movlw	13
 26394   011B02  6E1E               	movwf	(secs_II_message@block+2)^0,c
 26395                           
 26396                           ;gemsecs.c: 964:    H10[0].block.block.systemb = V.systemb;
 26397   011B04  0063  F514  F102   	movff	_V+299,_H10+2	;volatile
 26398   011B0A  0063  F518  F103   	movff	_V+300,_H10+3	;volatile
 26399   011B10  0063  F51C  F104   	movff	_V+301,_H10+4	;volatile
 26400   011B16  0063  F520  F105   	movff	_V+302,_H10+5	;volatile
 26401                           
 26402                           ;gemsecs.c: 965:    break;
 26403   011B1C  D7AF               	goto	l12630
 26404   011B1E                     l12656:
 26405                           
 26406                           ;gemsecs.c: 967:    block.header = (uint8_t*) & H14[0];
 26407   011B1E  0EE4               	movlw	low _H14
 26408   011B20  6E1C               	movwf	secs_II_message@block^0,c
 26409   011B22  6A1D               	clrf	(secs_II_message@block+1)^0,c
 26410                           
 26411                           ;gemsecs.c: 968:    block.length = sizeof(header14);
 26412   011B24  0E11               	movlw	17
 26413   011B26  6E1E               	movwf	(secs_II_message@block+2)^0,c
 26414                           
 26415                           ;gemsecs.c: 969:    H14[0].block.block.systemb = V.systemb;
 26416   011B28  0063  F514  F0EA   	movff	_V+299,_H14+6	;volatile
 26417   011B2E  0063  F518  F0EB   	movff	_V+300,_H14+7	;volatile
 26418   011B34  0063  F51C  F0EC   	movff	_V+301,_H14+8	;volatile
 26419   011B3A  0063  F520  F0ED   	movff	_V+302,_H14+9	;volatile
 26420                           
 26421                           ;gemsecs.c: 970:    break;
 26422   011B40  D79D               	goto	l12630
 26423   011B42                     l12662:
 26424                           
 26425                           ;gemsecs.c: 972:    block.header = (uint8_t*) & H17[0];
 26426   011B42  0E9B               	movlw	low _H17
 26427   011B44  6E1C               	movwf	secs_II_message@block^0,c
 26428   011B46  0E01               	movlw	high _H17
 26429   011B48  6E1D               	movwf	(secs_II_message@block+1)^0,c
 26430                           
 26431                           ;gemsecs.c: 973:    block.length = sizeof(header17);
 26432   011B4A  0E14               	movlw	20
 26433   011B4C  6E1E               	movwf	(secs_II_message@block+2)^0,c
 26434                           
 26435                           ;gemsecs.c: 974:    H17[0].block.block.systemb = V.systemb;
 26436   011B4E  0063  F514  F1A4   	movff	_V+299,_H17+9	;volatile
 26437   011B54  0063  F518  F1A5   	movff	_V+300,_H17+10	;volatile
 26438   011B5A  0063  F51C  F1A6   	movff	_V+301,_H17+11	;volatile
 26439   011B60  0063  F520  F1A7   	movff	_V+302,_H17+12	;volatile
 26440                           
 26441                           ;gemsecs.c: 975:    H12[1].block.block.systemb = V.ticks;
 26442   011B66  0063  F504  F2D6   	movff	_V+295,_H12+19	;volatile
 26443   011B6C  0063  F508  F2D7   	movff	_V+296,_H12+20	;volatile
 26444   011B72  0063  F50C  F2D8   	movff	_V+297,_H12+21	;volatile
 26445   011B78  0063  F510  F2D9   	movff	_V+298,_H12+22	;volatile
 26446                           
 26447                           ;gemsecs.c: 976:    block.respond = 1;
 26448   011B7E  8022               	bsf	(secs_II_message@block+6)^0,0,c
 26449                           
 26450                           ;gemsecs.c: 977:    block.reply = (uint8_t*) & H12[1];
 26451   011B80  0ED2               	movlw	low (_H12+15)
 26452   011B82  6E1F               	movwf	(secs_II_message@block+3)^0,c
 26453   011B84  0E02               	movlw	high (_H12+15)
 26454   011B86  6E20               	movwf	(secs_II_message@block+4)^0,c
 26455                           
 26456                           ;gemsecs.c: 978:    block.reply_length = sizeof(header12);
 26457   011B88  0E0F               	movlw	15
 26458   011B8A  D7B1               	goto	L9
 26459   011B8C                     l12676:
 26460                           
 26461                           ;gemsecs.c: 987:    H10[2].block.block.stream = stream;
 26462                           ;stkvar	_stream @ sp[(-6)+-6]
 26463   011B8C  0EF4               	movlw	-12
 26464   011B8E  006F FF8C  F02E    	movff	plusw1,btemp+11
 26465   011B94  0101               	movlb	1	; () banked
 26466   011B96  5123               	movf	(_H10+35)& (0+255),w,b
 26467   011B98  182E               	xorwf	(btemp+11)^0,w,c
 26468   011B9A  0B80               	andlw	-128
 26469   011B9C  182E               	xorwf	(btemp+11)^0,w,c
 26470   011B9E  6F23               	movwf	(_H10+35)& (0+255),b
 26471                           
 26472                           ; BSR set to: 1
 26473                           ;gemsecs.c: 988:    block.header = (uint8_t*) & H10[2];
 26474   011BA0  0E1A               	movlw	low (_H10+26)
 26475   011BA2  6E1C               	movwf	secs_II_message@block^0,c
 26476   011BA4  0E01               	movlw	high (_H10+26)
 26477   011BA6  6E1D               	movwf	(secs_II_message@block+1)^0,c
 26478                           
 26479                           ; BSR set to: 1
 26480                           ;gemsecs.c: 989:    block.length = sizeof(header10);
 26481   011BA8  0E0D               	movlw	13
 26482   011BAA  6E1E               	movwf	(secs_II_message@block+2)^0,c
 26483                           
 26484                           ; BSR set to: 1
 26485                           ;gemsecs.c: 990:    H10[2].block.block.systemb = V.systemb;
 26486   011BAC  0063  F514  F11C   	movff	_V+299,_H10+28	;volatile
 26487   011BB2  0063  F518  F11D   	movff	_V+300,_H10+29	;volatile
 26488   011BB8  0063  F51C  F11E   	movff	_V+301,_H10+30	;volatile
 26489   011BBE  0063  F520  F11F   	movff	_V+302,_H10+31	;volatile
 26490                           
 26491                           ; BSR set to: 1
 26492                           ;gemsecs.c: 991:    V.abort = LINK_ERROR_ABORT;
 26493   011BC4  0E11               	movlw	17
 26494   011BC6  006F FFA0  FD50    	movff	wreg,_V+310	;volatile
 26495                           
 26496                           ; BSR set to: 1
 26497                           ;gemsecs.c: 992:    V.all_errors++;
 26498   011BCC  EE23  F165         	lfsr	2,_V+331	;volatile
 26499   011BD0  D131               	goto	L10
 26500   011BD2                     l12690:
 26501                           
 26502                           ;stkvar	_function @ sp[(-6)+-7]
 26503   011BD2  0EF3               	movlw	-13
 26504   011BD4  50E3               	movf	plusw1,w,c
 26505                           
 26506                           ; Switch size 1, requested type "simple"
 26507                           ; Number of cases is 4, Range of values is 1 to 13
 26508                           ; switch strategies available:
 26509                           ; Name         Instructions Cycles
 26510                           ; simple_byte           13     7 (average)
 26511                           ;	Chosen strategy is simple_byte
 26512   011BD6  0A01               	xorlw	1	; case 1
 26513   011BD8  B4D8               	btfsc	status,2,c
 26514   011BDA  D765               	goto	l12636
 26515   011BDC  0A03               	xorlw	3	; case 2
 26516   011BDE  B4D8               	btfsc	status,2,c
 26517   011BE0  D78B               	goto	l12650
 26518   011BE2  0A01               	xorlw	1	; case 3
 26519   011BE4  B4D8               	btfsc	status,2,c
 26520   011BE6  D79B               	goto	l12656
 26521   011BE8  0A0E               	xorlw	14	; case 13
 26522   011BEA  B4D8               	btfsc	status,2,c
 26523   011BEC  D7AA               	goto	l12662
 26524   011BEE  D7CE               	goto	l12676
 26525   011BF0                     l12692:
 26526                           
 26527                           ;gemsecs.c: 1000:    block.header = (uint8_t*) & H26[0];
 26528   011BF0  0EE1               	movlw	low _H26
 26529   011BF2  6E1C               	movwf	secs_II_message@block^0,c
 26530   011BF4  0E02               	movlw	high _H26
 26531   011BF6  6E1D               	movwf	(secs_II_message@block+1)^0,c
 26532                           
 26533                           ;gemsecs.c: 1001:    block.length = sizeof(header26);
 26534   011BF8  0E1D               	movlw	29
 26535   011BFA  6E1E               	movwf	(secs_II_message@block+2)^0,c
 26536                           
 26537                           ;gemsecs.c: 1002:    H26[0].block.block.systemb = V.systemb;
 26538   011BFC  0063  F514  F2F3   	movff	_V+299,_H26+18	;volatile
 26539   011C02  0063  F518  F2F4   	movff	_V+300,_H26+19	;volatile
 26540   011C08  0063  F51C  F2F5   	movff	_V+301,_H26+20	;volatile
 26541   011C0E  0063  F520  F2F6   	movff	_V+302,_H26+21	;volatile
 26542                           
 26543                           ;gemsecs.c: 1008:    break;
 26544   011C14  D733               	goto	l12630
 26545   011C16                     l12698:
 26546                           
 26547                           ;gemsecs.c: 1010:    block.header = (uint8_t*) & H13[3];
 26548   011C16  0E8B               	movlw	low (_H13+48)
 26549   011C18  6E1C               	movwf	secs_II_message@block^0,c
 26550   011C1A  0E01               	movlw	high (_H13+48)
 26551   011C1C  6E1D               	movwf	(secs_II_message@block+1)^0,c
 26552                           
 26553                           ;gemsecs.c: 1011:    block.length = sizeof(header13);
 26554   011C1E  0E10               	movlw	16
 26555   011C20  6E1E               	movwf	(secs_II_message@block+2)^0,c
 26556                           
 26557                           ;gemsecs.c: 1012:    H13[3].block.block.systemb = V.systemb;
 26558   011C22  0063  F514  F190   	movff	_V+299,_H13+53	;volatile
 26559   011C28  0063  F518  F191   	movff	_V+300,_H13+54	;volatile
 26560   011C2E  0063  F51C  F192   	movff	_V+301,_H13+55	;volatile
 26561   011C34  0063  F520  F193   	movff	_V+302,_H13+56	;volatile
 26562                           
 26563                           ;gemsecs.c: 1013:    break;
 26564   011C3A  D720               	goto	l12630
 26565   011C3C                     l12718:
 26566                           
 26567                           ;stkvar	_function @ sp[(-6)+-7]
 26568   011C3C  0EF3               	movlw	-13
 26569   011C3E  50E3               	movf	plusw1,w,c
 26570                           
 26571                           ; Switch size 1, requested type "simple"
 26572                           ; Number of cases is 2, Range of values is 17 to 25
 26573                           ; switch strategies available:
 26574                           ; Name         Instructions Cycles
 26575                           ; simple_byte            7     4 (average)
 26576                           ;	Chosen strategy is simple_byte
 26577   011C40  0A11               	xorlw	17	; case 17
 26578   011C42  B4D8               	btfsc	status,2,c
 26579   011C44  D7D5               	goto	l12692
 26580   011C46  0A08               	xorlw	8	; case 25
 26581   011C48  B4D8               	btfsc	status,2,c
 26582   011C4A  D7E5               	goto	l12698
 26583   011C4C  D79F               	goto	l12676
 26584   011C4E                     l12720:
 26585                           
 26586                           ;gemsecs.c: 1027:    block.header = (uint8_t*) & H13[2];
 26587   011C4E  0E7B               	movlw	low (_H13+32)
 26588   011C50  6E1C               	movwf	secs_II_message@block^0,c
 26589   011C52  0E01               	movlw	high (_H13+32)
 26590   011C54  6E1D               	movwf	(secs_II_message@block+1)^0,c
 26591                           
 26592                           ;gemsecs.c: 1028:    block.length = sizeof(header13);
 26593   011C56  0E10               	movlw	16
 26594   011C58  6E1E               	movwf	(secs_II_message@block+2)^0,c
 26595                           
 26596                           ;gemsecs.c: 1029:    H13[2].block.block.systemb = V.systemb;
 26597   011C5A  0063  F514  F180   	movff	_V+299,_H13+37	;volatile
 26598   011C60  0063  F518  F181   	movff	_V+300,_H13+38	;volatile
 26599   011C66  0063  F51C  F182   	movff	_V+301,_H13+39	;volatile
 26600   011C6C  0063  F520  F183   	movff	_V+302,_H13+40	;volatile
 26601                           
 26602                           ;gemsecs.c: 1030:    break;
 26603   011C72  D704               	goto	l12630
 26604   011C74                     l12740:
 26605                           
 26606                           ;stkvar	_function @ sp[(-6)+-7]
 26607   011C74  0EF3               	movlw	-13
 26608   011C76  50E3               	movf	plusw1,w,c
 26609                           
 26610                           ; Switch size 1, requested type "simple"
 26611                           ; Number of cases is 1, Range of values is 1 to 1
 26612                           ; switch strategies available:
 26613                           ; Name         Instructions Cycles
 26614                           ; simple_byte            4     3 (average)
 26615                           ;	Chosen strategy is simple_byte
 26616   011C78  0A01               	xorlw	1	; case 1
 26617   011C7A  B4D8               	btfsc	status,2,c
 26618   011C7C  D7E8               	goto	l12720
 26619   011C7E  D786               	goto	l12676
 26620   011C80                     l12744:
 26621                           
 26622                           ;gemsecs.c: 1045:    ceid = s6f11_opcmd();
 26623   011C80  ECDA  F0B8         	call	_s6f11_opcmd	;wreg free
 26624   011C84  C023  F02D         	movff	btemp,btemp+10
 26625   011C88  C024  F02E         	movff	btemp+1,btemp+11
 26626   011C8C  502D               	movf	(btemp+10)^0,w,c
 26627   011C8E  6E27               	movwf	(btemp+4)^0,c
 26628   011C90  502E               	movf	(btemp+11)^0,w,c
 26629   011C92  6E28               	movwf	(btemp+5)^0,c
 26630   011C94  6A29               	clrf	(btemp+6)^0,c
 26631   011C96  6A2A               	clrf	(btemp+7)^0,c
 26632                           
 26633                           ;stkvar	_ceid @ sp[(-6)+0]
 26634   011C98  0EFA               	movlw	-6
 26635   011C9A  0060  F09F  FFE3   	movff	btemp+4,plusw1
 26636   011CA0  0EFB               	movlw	-5
 26637   011CA2  0060  F0A3  FFE3   	movff	btemp+5,plusw1
 26638   011CA8  0EFC               	movlw	-4
 26639   011CAA  0060  F0A7  FFE3   	movff	btemp+6,plusw1
 26640   011CB0  0EFD               	movlw	-3
 26641   011CB2  0060  F0AB  FFE3   	movff	btemp+7,plusw1
 26642                           
 26643                           ;gemsecs.c: 1046:    switch (V.e_types) {
 26644   011CB8  D03C               	goto	l12762
 26645   011CBA                     l12746:
 26646                           
 26647                           ;gemsecs.c: 1048:     if (ceid == 93 || ceid == 94) {
 26648                           ;stkvar	_ceid @ sp[(-6)+0]
 26649   011CBA  0EFA               	movlw	-6
 26650   011CBC  006F FF8C  F023    	movff	plusw1,btemp
 26651   011CC2  0E5D               	movlw	93
 26652   011CC4  1823               	xorwf	btemp^0,w,c
 26653   011CC6  E10A               	bnz	u9140
 26654   011CC8  0EFB               	movlw	-5
 26655   011CCA  50E3               	movf	plusw1,w,c
 26656   011CCC  E107               	bnz	u9140
 26657   011CCE  0EFC               	movlw	-4
 26658   011CD0  50E3               	movf	plusw1,w,c
 26659   011CD2  E104               	bnz	u9140
 26660   011CD4  0EFD               	movlw	-3
 26661   011CD6  50E3               	movf	plusw1,w,c
 26662   011CD8  B4D8               	btfsc	status,2,c
 26663   011CDA  D011               	goto	u9150
 26664   011CDC                     u9140:
 26665                           
 26666                           ;stkvar	_ceid @ sp[(-6)+0]
 26667   011CDC  0EFA               	movlw	-6
 26668   011CDE  006F FF8C  F023    	movff	plusw1,btemp
 26669   011CE4  0E5E               	movlw	94
 26670   011CE6  1823               	xorwf	btemp^0,w,c
 26671   011CE8  E134               	bnz	l12764
 26672   011CEA  0EFB               	movlw	-5
 26673   011CEC  50E3               	movf	plusw1,w,c
 26674   011CEE  E131               	bnz	l12764
 26675   011CF0  0EFC               	movlw	-4
 26676   011CF2  50E3               	movf	plusw1,w,c
 26677   011CF4  E12E               	bnz	l12764
 26678   011CF6  0EFD               	movlw	-3
 26679   011CF8  50E3               	movf	plusw1,w,c
 26680   011CFA  A4D8               	btfss	status,2,c
 26681   011CFC  D02A               	goto	l12764
 26682   011CFE                     u9150:
 26683                           
 26684                           ;gemsecs.c: 1049:      V.response.host_display_ack = 1;
 26685   011CFE  EE23  F190         	lfsr	2,_V+374	;volatile
 26686   011D02  80DF               	bsf	indf2,0,c
 26687                           
 26688                           ;gemsecs.c: 1050:      V.sid = 10;
 26689   011D04  0E0A               	movlw	10
 26690   011D06  006F FFA0  FD99    	movff	wreg,_V+383	;volatile
 26691   011D0C  D022               	goto	l12764
 26692   011D0E                     l12754:
 26693                           
 26694                           ;gemsecs.c: 1054:     if (ceid == 81) {
 26695                           ;stkvar	_ceid @ sp[(-6)+0]
 26696   011D0E  0EFA               	movlw	-6
 26697   011D10  006F FF8C  F023    	movff	plusw1,btemp
 26698   011D16  0E51               	movlw	81
 26699   011D18  1823               	xorwf	btemp^0,w,c
 26700   011D1A  E11B               	bnz	l12764
 26701   011D1C  0EFB               	movlw	-5
 26702   011D1E  50E3               	movf	plusw1,w,c
 26703   011D20  E118               	bnz	l12764
 26704   011D22  0EFC               	movlw	-4
 26705   011D24  50E3               	movf	plusw1,w,c
 26706   011D26  E115               	bnz	l12764
 26707   011D28  0EFD               	movlw	-3
 26708   011D2A  50E3               	movf	plusw1,w,c
 26709   011D2C  B4D8               	btfsc	status,2,c
 26710   011D2E  D7E7               	goto	u9150
 26711   011D30  D010               	goto	l12764
 26712   011D32                     l12762:
 26713   011D32  EE23  F01D         	lfsr	2,_V+3	;volatile
 26714   011D36  50DF               	movf	indf2,w,c
 26715   011D38  6E2D               	movwf	(btemp+10)^0,c
 26716   011D3A  6A2E               	clrf	(btemp+11)^0,c
 26717                           
 26718                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26719                           ; Switch size 1, requested type "simple"
 26720                           ; Number of cases is 1, Range of values is 0 to 0
 26721                           ; switch strategies available:
 26722                           ; Name         Instructions Cycles
 26723                           ; simple_byte            4     3 (average)
 26724                           ;	Chosen strategy is simple_byte
 26725   011D3C  502E               	movf	(btemp+11)^0,w,c
 26726   011D3E  0A00               	xorlw	0	; case 0
 26727   011D40  A4D8               	btfss	status,2,c
 26728   011D42  D007               	goto	l12764
 26729                           
 26730                           ; Switch size 1, requested type "simple"
 26731                           ; Number of cases is 2, Range of values is 1 to 2
 26732                           ; switch strategies available:
 26733                           ; Name         Instructions Cycles
 26734                           ; simple_byte            7     4 (average)
 26735                           ;	Chosen strategy is simple_byte
 26736   011D44  502D               	movf	(btemp+10)^0,w,c
 26737   011D46  0A01               	xorlw	1	; case 1
 26738   011D48  B4D8               	btfsc	status,2,c
 26739   011D4A  D7B7               	goto	l12746
 26740   011D4C  0A03               	xorlw	3	; case 2
 26741   011D4E  B4D8               	btfsc	status,2,c
 26742   011D50  D7DE               	goto	l12754
 26743   011D52                     l12764:
 26744                           
 26745                           ;gemsecs.c: 1062:    if (ceid == 93 || ceid == 94) {
 26746                           ;stkvar	_ceid @ sp[(-6)+0]
 26747   011D52  0EFA               	movlw	-6
 26748   011D54  006F FF8C  F023    	movff	plusw1,btemp
 26749   011D5A  0E5D               	movlw	93
 26750   011D5C  1823               	xorwf	btemp^0,w,c
 26751   011D5E  E10A               	bnz	u9170
 26752   011D60  0EFB               	movlw	-5
 26753   011D62  50E3               	movf	plusw1,w,c
 26754   011D64  E107               	bnz	u9170
 26755   011D66  0EFC               	movlw	-4
 26756   011D68  50E3               	movf	plusw1,w,c
 26757   011D6A  E104               	bnz	u9170
 26758   011D6C  0EFD               	movlw	-3
 26759   011D6E  50E3               	movf	plusw1,w,c
 26760   011D70  B4D8               	btfsc	status,2,c
 26761   011D72  D011               	goto	u9180
 26762   011D74                     u9170:
 26763                           
 26764                           ;stkvar	_ceid @ sp[(-6)+0]
 26765   011D74  0EFA               	movlw	-6
 26766   011D76  006F FF8C  F023    	movff	plusw1,btemp
 26767   011D7C  0E5E               	movlw	94
 26768   011D7E  1823               	xorwf	btemp^0,w,c
 26769   011D80  E10D               	bnz	l12770
 26770   011D82  0EFB               	movlw	-5
 26771   011D84  50E3               	movf	plusw1,w,c
 26772   011D86  E10A               	bnz	l12770
 26773   011D88  0EFC               	movlw	-4
 26774   011D8A  50E3               	movf	plusw1,w,c
 26775   011D8C  E107               	bnz	l12770
 26776   011D8E  0EFD               	movlw	-3
 26777   011D90  50E3               	movf	plusw1,w,c
 26778   011D92  A4D8               	btfss	status,2,c
 26779   011D94  D003               	goto	l12770
 26780   011D96                     u9180:
 26781                           
 26782                           ;gemsecs.c: 1063:     V.response.host_display_ack = 1;
 26783   011D96  EE23  F190         	lfsr	2,_V+374	;volatile
 26784   011D9A  80DF               	bsf	indf2,0,c
 26785   011D9C                     l12770:
 26786                           
 26787                           ;gemsecs.c: 1065:    block.header = (uint8_t*) & H13[0];
 26788   011D9C  0E5B               	movlw	low _H13
 26789   011D9E  6E1C               	movwf	secs_II_message@block^0,c
 26790   011DA0  0E01               	movlw	high _H13
 26791   011DA2  6E1D               	movwf	(secs_II_message@block+1)^0,c
 26792                           
 26793                           ;gemsecs.c: 1066:    block.length = sizeof(header13);
 26794   011DA4  0E10               	movlw	16
 26795   011DA6  6E1E               	movwf	(secs_II_message@block+2)^0,c
 26796                           
 26797                           ;gemsecs.c: 1067:    H13[0].block.block.systemb = V.systemb;
 26798   011DA8  0063  F514  F160   	movff	_V+299,_H13+5	;volatile
 26799   011DAE  0063  F518  F161   	movff	_V+300,_H13+6	;volatile
 26800   011DB4  0063  F51C  F162   	movff	_V+301,_H13+7	;volatile
 26801   011DBA  0063  F520  F163   	movff	_V+302,_H13+8	;volatile
 26802                           
 26803                           ;gemsecs.c: 1068:    H13[0].block.block.function = 12;
 26804   011DC0  0E0C               	movlw	12
 26805   011DC2  D027               	goto	L12
 26806   011DC4                     l12778:
 26807                           
 26808                           ;gemsecs.c: 1071:    block.header = (uint8_t*) & H13[0];
 26809   011DC4  0E5B               	movlw	low _H13
 26810   011DC6  6E1C               	movwf	secs_II_message@block^0,c
 26811   011DC8  0E01               	movlw	high _H13
 26812   011DCA  6E1D               	movwf	(secs_II_message@block+1)^0,c
 26813                           
 26814                           ;gemsecs.c: 1072:    block.length = sizeof(header13);
 26815   011DCC  0E10               	movlw	16
 26816   011DCE  6E1E               	movwf	(secs_II_message@block+2)^0,c
 26817                           
 26818                           ;gemsecs.c: 1073:    H13[0].block.block.systemb = V.systemb;
 26819   011DD0  0063  F514  F160   	movff	_V+299,_H13+5	;volatile
 26820   011DD6  0063  F518  F161   	movff	_V+300,_H13+6	;volatile
 26821   011DDC  0063  F51C  F162   	movff	_V+301,_H13+7	;volatile
 26822   011DE2  0063  F520  F163   	movff	_V+302,_H13+8	;volatile
 26823                           
 26824                           ;gemsecs.c: 1074:    H13[0].block.block.function = 14;
 26825   011DE8  0E0E               	movlw	14
 26826   011DEA  D013               	goto	L12
 26827   011DEC                     l12786:
 26828                           
 26829                           ;gemsecs.c: 1077:    block.header = (uint8_t*) & H13[0];
 26830   011DEC  0E5B               	movlw	low _H13
 26831   011DEE  6E1C               	movwf	secs_II_message@block^0,c
 26832   011DF0  0E01               	movlw	high _H13
 26833   011DF2  6E1D               	movwf	(secs_II_message@block+1)^0,c
 26834                           
 26835                           ;gemsecs.c: 1078:    block.length = sizeof(header13);
 26836   011DF4  0E10               	movlw	16
 26837   011DF6  6E1E               	movwf	(secs_II_message@block+2)^0,c
 26838                           
 26839                           ;gemsecs.c: 1079:    H13[0].block.block.systemb = V.systemb;
 26840   011DF8  0063  F514  F160   	movff	_V+299,_H13+5	;volatile
 26841   011DFE  0063  F518  F161   	movff	_V+300,_H13+6	;volatile
 26842   011E04  0063  F51C  F162   	movff	_V+301,_H13+7	;volatile
 26843   011E0A  0063  F520  F163   	movff	_V+302,_H13+8	;volatile
 26844                           
 26845                           ;gemsecs.c: 1080:    H13[0].block.block.function = 26;
 26846   011E10  0E1A               	movlw	26
 26847   011E12                     L12:
 26848   011E12  0101               	movlb	1	; () banked
 26849   011E14  6F66               	movwf	(_H13+11)& (0+255),b
 26850                           
 26851                           ;gemsecs.c: 1081:    break;
 26852   011E16  D632               	goto	l12630
 26853   011E18                     l12808:
 26854                           
 26855                           ;stkvar	_function @ sp[(-6)+-7]
 26856   011E18  0EF3               	movlw	-13
 26857   011E1A  50E3               	movf	plusw1,w,c
 26858                           
 26859                           ; Switch size 1, requested type "simple"
 26860                           ; Number of cases is 3, Range of values is 11 to 25
 26861                           ; switch strategies available:
 26862                           ; Name         Instructions Cycles
 26863                           ; simple_byte           10     6 (average)
 26864                           ;	Chosen strategy is simple_byte
 26865   011E1C  0A0B               	xorlw	11	; case 11
 26866   011E1E  B4D8               	btfsc	status,2,c
 26867   011E20  D72F               	goto	l12744
 26868   011E22  0A06               	xorlw	6	; case 13
 26869   011E24  B4D8               	btfsc	status,2,c
 26870   011E26  D7CE               	goto	l12778
 26871   011E28  0A14               	xorlw	20	; case 25
 26872   011E2A  B4D8               	btfsc	status,2,c
 26873   011E2C  D7DF               	goto	l12786
 26874   011E2E  D6AE               	goto	l12676
 26875   011E30                     l12810:
 26876                           
 26877                           ;gemsecs.c: 1103:    V.equip_timeout++;
 26878   011E30  EE23  F161         	lfsr	2,_V+327	;volatile
 26879   011E34                     L10:
 26880   011E34  2ADE               	incf	postinc2,f,c
 26881   011E36  0E00               	movlw	0
 26882   011E38  22DD               	addwfc	postdec2,f,c
 26883                           
 26884                           ;gemsecs.c: 1104:    break;
 26885   011E3A  D620               	goto	l12630
 26886   011E3C                     l12826:
 26887                           
 26888                           ;stkvar	_function @ sp[(-6)+-7]
 26889   011E3C  0EF3               	movlw	-13
 26890   011E3E  50E3               	movf	plusw1,w,c
 26891                           
 26892                           ; Switch size 1, requested type "simple"
 26893                           ; Number of cases is 7, Range of values is 1 to 13
 26894                           ; switch strategies available:
 26895                           ; Name         Instructions Cycles
 26896                           ; simple_byte           22    12 (average)
 26897                           ;	Chosen strategy is simple_byte
 26898   011E40  0A01               	xorlw	1	; case 1
 26899   011E42  B4D8               	btfsc	status,2,c
 26900   011E44  D61B               	goto	l12630
 26901   011E46  0A02               	xorlw	2	; case 3
 26902   011E48  B4D8               	btfsc	status,2,c
 26903   011E4A  D618               	goto	l12630
 26904   011E4C  0A06               	xorlw	6	; case 5
 26905   011E4E  B4D8               	btfsc	status,2,c
 26906   011E50  D615               	goto	l12630
 26907   011E52  0A02               	xorlw	2	; case 7
 26908   011E54  B4D8               	btfsc	status,2,c
 26909   011E56  D612               	goto	l12630
 26910   011E58  0A0E               	xorlw	14	; case 9
 26911   011E5A  B4D8               	btfsc	status,2,c
 26912   011E5C  D7E9               	goto	l12810
 26913   011E5E  0A02               	xorlw	2	; case 11
 26914   011E60  B4D8               	btfsc	status,2,c
 26915   011E62  D60C               	goto	l12630
 26916   011E64  0A06               	xorlw	6	; case 13
 26917   011E66  B4D8               	btfsc	status,2,c
 26918   011E68  D609               	goto	l12630
 26919   011E6A  D690               	goto	l12676
 26920   011E6C                     l12828:
 26921                           
 26922                           ;gemsecs.c: 1120:   V.set_sequ = 1;
 26923   011E6C  EE23  F167         	lfsr	2,_V+333	;volatile
 26924   011E70  86DF               	bsf	indf2,3,c
 26925                           
 26926                           ;gemsecs.c: 1121:   switch (function) {
 26927   011E72  D104               	goto	l12924
 26928   011E74                     l12830:
 26929                           
 26930                           ;gemsecs.c: 1123:    block.header = (uint8_t*) & H13[1];
 26931   011E74  0E6B               	movlw	low (_H13+16)
 26932   011E76  6E1C               	movwf	secs_II_message@block^0,c
 26933   011E78  0E01               	movlw	high (_H13+16)
 26934   011E7A  6E1D               	movwf	(secs_II_message@block+1)^0,c
 26935                           
 26936                           ;gemsecs.c: 1124:    block.length = sizeof(header13);
 26937   011E7C  0E10               	movlw	16
 26938   011E7E  6E1E               	movwf	(secs_II_message@block+2)^0,c
 26939                           
 26940                           ;gemsecs.c: 1125:    H13[1].block.block.systemb = V.systemb;
 26941   011E80  0063  F514  F170   	movff	_V+299,_H13+21	;volatile
 26942   011E86  0063  F518  F171   	movff	_V+300,_H13+22	;volatile
 26943   011E8C  0063  F51C  F172   	movff	_V+301,_H13+23	;volatile
 26944   011E92  0063  F520  F173   	movff	_V+302,_H13+24	;volatile
 26945                           
 26946                           ;gemsecs.c: 1126:    H153[0].block.block.systemb = V.ticks;
 26947   011E98  EE23  F141         	lfsr	2,_V+295	;volatile
 26948   011E9C  006F FF78  FE2E    	movff	postinc2,_H153+145
 26949   011EA2  006F FF78  FE2F    	movff	postinc2,_H153+146
 26950   011EA8  006F FF78  FE30    	movff	postinc2,_H153+147
 26951   011EAE  006F FF74  FE31    	movff	postdec2,_H153+148
 26952                           
 26953                           ;gemsecs.c: 1127:    set_display_info(DIS_TERM);
 26954   011EB4  0E01               	movlw	1
 26955   011EB6  6EE6               	movwf	postinc1,c
 26956   011EB8  EC48  F0BF         	call	_set_display_info	;wreg free
 26957                           
 26958                           ;gemsecs.c: 1129:    switch (s10f1_opcmd()) {
 26959   011EBC  D0AC               	goto	l12902
 26960   011EBE                     l2180:
 26961                           
 26962                           ;gemsecs.c: 1131:     block.respond = 1;
 26963   011EBE  8022               	bsf	(secs_II_message@block+6)^0,0,c
 26964                           
 26965                           ;gemsecs.c: 1132:     block.reply = (uint8_t*) & H153[1];
 26966   011EC0  0E39               	movlw	low (_H153+156)
 26967   011EC2  6E1F               	movwf	(secs_II_message@block+3)^0,c
 26968   011EC4  0E0E               	movlw	high (_H153+156)
 26969   011EC6  6E20               	movwf	(secs_II_message@block+4)^0,c
 26970                           
 26971                           ;gemsecs.c: 1133:     block.reply_length = sizeof(header153);
 26972   011EC8  0E9C               	movlw	156
 26973   011ECA  6E21               	movwf	(secs_II_message@block+5)^0,c
 26974                           
 26975                           ;gemsecs.c: 1134:     H153[1].data[138] = V.response.TID;
 26976   011ECC  0063  F62C  FEC5   	movff	_V+369,_H153+296	;volatile
 26977   011ED2                     l12846:
 26978                           
 26979                           ;gemsecs.c: 1135:     V.queue = 1;
 26980   011ED2  EE23  F168         	lfsr	2,_V+334	;volatile
 26981   011ED6  88DF               	bsf	indf2,4,c
 26982                           
 26983                           ;gemsecs.c: 1136:     break;
 26984   011ED8  D0C0               	goto	l12904
 26985   011EDA                     l2182:
 26986                           
 26987                           ;gemsecs.c: 1138:     block.respond = 1;
 26988   011EDA  8022               	bsf	(secs_II_message@block+6)^0,0,c
 26989                           
 26990                           ;gemsecs.c: 1139:     block.reply = (uint8_t*) & H33[0];
 26991   011EDC  0EC0               	movlw	low _H33
 26992   011EDE  6E1F               	movwf	(secs_II_message@block+3)^0,c
 26993   011EE0  6A20               	clrf	(secs_II_message@block+4)^0,c
 26994                           
 26995                           ;gemsecs.c: 1140:     block.reply_length = sizeof(header33);
 26996   011EE2  0E24               	movlw	36
 26997   011EE4  6E21               	movwf	(secs_II_message@block+5)^0,c
 26998                           
 26999                           ;gemsecs.c: 1141:     V.queue = 1;
 27000   011EE6  EE23  F168         	lfsr	2,_V+334	;volatile
 27001   011EEA  88DF               	bsf	indf2,4,c
 27002                           
 27003                           ;gemsecs.c: 1142:     set_display_info(DIS_LOAD);
 27004   011EEC  0E03               	movlw	3
 27005   011EEE  6EE6               	movwf	postinc1,c
 27006   011EF0  EC48  F0BF         	call	_set_display_info	;wreg free
 27007                           
 27008                           ;gemsecs.c: 1143:     break;
 27009   011EF4  D0B2               	goto	l12904
 27010   011EF6                     l2183:
 27011                           
 27012                           ;gemsecs.c: 1145:     block.respond = 1;
 27013   011EF6  8022               	bsf	(secs_II_message@block+6)^0,0,c
 27014                           
 27015                           ;gemsecs.c: 1146:     block.reply = (uint8_t*) & H33[0];
 27016   011EF8  0EC0               	movlw	low _H33
 27017   011EFA  6E1F               	movwf	(secs_II_message@block+3)^0,c
 27018   011EFC  6A20               	clrf	(secs_II_message@block+4)^0,c
 27019                           
 27020                           ;gemsecs.c: 1147:     block.reply_length = sizeof(header33);
 27021   011EFE  0E24               	movlw	36
 27022   011F00  6E21               	movwf	(secs_II_message@block+5)^0,c
 27023                           
 27024                           ;gemsecs.c: 1148:     V.queue = 1;
 27025   011F02  EE23  F168         	lfsr	2,_V+334	;volatile
 27026   011F06  88DF               	bsf	indf2,4,c
 27027                           
 27028                           ;gemsecs.c: 1149:     set_display_info(DIS_UNLOAD);
 27029   011F08  0E04               	movlw	4
 27030   011F0A  6EE6               	movwf	postinc1,c
 27031   011F0C  EC48  F0BF         	call	_set_display_info	;wreg free
 27032                           
 27033                           ;gemsecs.c: 1150:     break;
 27034   011F10  D0A4               	goto	l12904
 27035   011F12                     l2184:
 27036                           
 27037                           ;gemsecs.c: 1152:     block.respond = 1;
 27038   011F12  8022               	bsf	(secs_II_message@block+6)^0,0,c
 27039                           
 27040                           ;gemsecs.c: 1153:     block.reply = (uint8_t*) & H33[0];
 27041   011F14  0EC0               	movlw	low _H33
 27042   011F16  6E1F               	movwf	(secs_II_message@block+3)^0,c
 27043   011F18  6A20               	clrf	(secs_II_message@block+4)^0,c
 27044                           
 27045                           ;gemsecs.c: 1154:     block.reply_length = sizeof(header33);
 27046   011F1A  0E24               	movlw	36
 27047   011F1C  6E21               	movwf	(secs_II_message@block+5)^0,c
 27048                           
 27049                           ;gemsecs.c: 1155:     V.queue = 1;
 27050   011F1E  EE23  F168         	lfsr	2,_V+334	;volatile
 27051   011F22  88DF               	bsf	indf2,4,c
 27052                           
 27053                           ;gemsecs.c: 1156:     set_display_info(DIS_PUMP);
 27054   011F24  0E05               	movlw	5
 27055   011F26  6EE6               	movwf	postinc1,c
 27056   011F28  EC48  F0BF         	call	_set_display_info	;wreg free
 27057                           
 27058                           ;gemsecs.c: 1157:     break;
 27059   011F2C  D096               	goto	l12904
 27060   011F2E                     l12872:
 27061                           
 27062                           ;gemsecs.c: 1159:     parse_sid();
 27063   011F2E  ECDE  F0B7         	call	_parse_sid	;wreg free
 27064                           
 27065                           ;gemsecs.c: 1160:     sequence_messages(V.sid);
 27066   011F32  EE23  F199         	lfsr	2,_V+383	;volatile
 27067   011F36  50DF               	movf	indf2,w,c
 27068   011F38  6EE6               	movwf	postinc1,c
 27069   011F3A  EC5A  F09D         	call	_sequence_messages	;wreg free
 27070                           
 27071                           ;gemsecs.c: 1161:     set_display_info(DIS_SEQUENCE);
 27072   011F3E  0E07               	movlw	7
 27073   011F40  6EE6               	movwf	postinc1,c
 27074   011F42  EC48  F0BF         	call	_set_display_info	;wreg free
 27075                           
 27076                           ;gemsecs.c: 1162:     V.sequences++;
 27077   011F46  EE23  F163         	lfsr	2,_V+329	;volatile
 27078   011F4A  2ADE               	incf	postinc2,f,c
 27079   011F4C  0E00               	movlw	0
 27080   011F4E  22DD               	addwfc	postdec2,f,c
 27081                           
 27082                           ;gemsecs.c: 1163:     break;
 27083   011F50  D084               	goto	l12904
 27084   011F52                     l2186:
 27085                           
 27086                           ;gemsecs.c: 1165:     block.respond = 1;
 27087   011F52  8022               	bsf	(secs_II_message@block+6)^0,0,c
 27088                           
 27089                           ;gemsecs.c: 1166:     block.reply = (uint8_t*) & H153[0];
 27090   011F54  0E9D               	movlw	low _H153
 27091   011F56  6E1F               	movwf	(secs_II_message@block+3)^0,c
 27092   011F58  0E0D               	movlw	high _H153
 27093   011F5A  6E20               	movwf	(secs_II_message@block+4)^0,c
 27094                           
 27095                           ;gemsecs.c: 1167:     block.reply_length = sizeof(header153);
 27096   011F5C  0E9C               	movlw	156
 27097   011F5E  6E21               	movwf	(secs_II_message@block+5)^0,c
 27098                           
 27099                           ;gemsecs.c: 1168:     H153[0].data[138] = V.response.TID;
 27100   011F60  0063  F62C  FE29   	movff	_V+369,_H153+140	;volatile
 27101                           
 27102                           ;gemsecs.c: 1169:     terminal_format(display_message);
 27103   011F66  0E00               	movlw	0
 27104   011F68  6EE6               	movwf	postinc1,c
 27105   011F6A  ECC4  F0A2         	call	_terminal_format	;wreg free
 27106                           
 27107                           ; BSR set to: 1
 27108                           ;gemsecs.c: 1170:     format_display_text(V.terminal);
 27109   011F6E  0E61               	movlw	low (_V+71)
 27110   011F70  6EE6               	movwf	postinc1,c
 27111   011F72  0E0C               	movlw	high (_V+71)
 27112   011F74  6EE6               	movwf	postinc1,c
 27113   011F76  ECF3  F0AB         	call	_format_display_text	;wreg free
 27114   011F7A  D7AB               	goto	l12846
 27115   011F7C                     l12892:
 27116                           
 27117                           ;gemsecs.c: 1175:      DATAEE_WriteByte(i, 0xff);
 27118   011F7C  0EFF               	movlw	255
 27119   011F7E  6EE6               	movwf	postinc1,c
 27120                           
 27121                           ;stkvar	_i @ sp[(-7)+4]
 27122   011F80  0EFD               	movlw	-3
 27123   011F82  006F FF8F FFE6     	movff	plusw1,postinc1
 27124   011F88  006F FF8F FFE6     	movff	plusw1,postinc1
 27125   011F8E  EC77  F0B7         	call	_DATAEE_WriteByte	;wreg free
 27126                           
 27127                           ;gemsecs.c: 1176:     } while (++i <= 764);
 27128                           ;stkvar	_i @ sp[(-6)+4]
 27129   011F92  0EFE               	movlw	-2
 27130   011F94  50E3               	movf	plusw1,w,c
 27131   011F96  0F01               	addlw	1
 27132   011F98  6E23               	movwf	btemp^0,c
 27133   011F9A  0EFE               	movlw	-2
 27134   011F9C  0060  F08F  FFE3   	movff	btemp,plusw1
 27135   011FA2  6A23               	clrf	btemp^0,c
 27136   011FA4  0EFF               	movlw	-1
 27137   011FA6  50E3               	movf	plusw1,w,c
 27138   011FA8  2023               	addwfc	btemp^0,w,c
 27139   011FAA  6E23               	movwf	btemp^0,c
 27140   011FAC  0EFF               	movlw	-1
 27141   011FAE  0060  F08F  FFE3   	movff	btemp,plusw1
 27142   011FB4  0EFE               	movlw	-2
 27143   011FB6  006F FF8C  F023    	movff	plusw1,btemp
 27144   011FBC  0EFD               	movlw	253
 27145   011FBE  5E23               	subwf	btemp^0,f,c
 27146   011FC0  0EFF               	movlw	-1
 27147   011FC2  006F FF8C  F023    	movff	plusw1,btemp
 27148   011FC8  0E02               	movlw	2
 27149   011FCA  5A23               	subwfb	btemp^0,f,c
 27150   011FCC  A0D8               	btfss	status,0,c
 27151   011FCE  D7D6               	goto	l12892
 27152                           
 27153                           ;gemsecs.c: 1177:     V.response.log_num = 0;
 27154   011FD0  0E00               	movlw	0
 27155   011FD2  006F FFA0  FD95    	movff	wreg,_V+379	;volatile
 27156   011FD8  0E00               	movlw	0
 27157   011FDA  006F FFA0  FD96    	movff	wreg,_V+380	;volatile
 27158                           
 27159                           ;gemsecs.c: 1178:     V.response.log_seq = 0;
 27160   011FE0  0E00               	movlw	0
 27161   011FE2  006F FFA0  FD8F    	movff	wreg,_V+373	;volatile
 27162                           
 27163                           ;gemsecs.c: 1179:     set_display_info(DIS_LOG);
 27164   011FE8  0E02               	movlw	2
 27165   011FEA  6EE6               	movwf	postinc1,c
 27166   011FEC  EC48  F0BF         	call	_set_display_info	;wreg free
 27167                           
 27168                           ;gemsecs.c: 1180:     break;
 27169   011FF0  D034               	goto	l12904
 27170   011FF2                     l12898:
 27171                           
 27172                           ;gemsecs.c: 1182:     V.debug = !V.debug;
 27173   011FF2  EE23  F168         	lfsr	2,_V+334	;volatile
 27174   011FF6  BADF               	btfsc	indf2,5,c
 27175   011FF8  D003               	goto	u9200
 27176   011FFA  6A2E               	clrf	(btemp+11)^0,c
 27177   011FFC  2A2E               	incf	(btemp+11)^0,f,c
 27178   011FFE  D001               	goto	u9218
 27179   012000                     u9200:
 27180   012000  6A2E               	clrf	(btemp+11)^0,c
 27181   012002                     u9218:
 27182   012002  EE23  F168         	lfsr	2,_V+334	;volatile
 27183   012006  3A2E               	swapf	(btemp+11)^0,f,c
 27184   012008  462E               	rlncf	(btemp+11)^0,f,c
 27185   01200A  50DF               	movf	223,w,c
 27186   01200C  182E               	xorwf	(btemp+11)^0,w,c
 27187   01200E  0BDF               	andlw	-33
 27188   012010  182E               	xorwf	(btemp+11)^0,w,c
 27189   012012  6EDF               	movwf	223,c
 27190   012014  D022               	goto	l12904
 27191   012016                     l12902:
 27192   012016  ECF6  F0A3         	call	_s10f1_opcmd	;wreg free
 27193   01201A  5023               	movf	btemp^0,w,c
 27194   01201C  6E2D               	movwf	(btemp+10)^0,c
 27195   01201E  6A2E               	clrf	(btemp+11)^0,c
 27196                           
 27197                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27198                           ; Switch size 1, requested type "simple"
 27199                           ; Number of cases is 1, Range of values is 0 to 0
 27200                           ; switch strategies available:
 27201                           ; Name         Instructions Cycles
 27202                           ; simple_byte            4     3 (average)
 27203                           ;	Chosen strategy is simple_byte
 27204   012020  502E               	movf	(btemp+11)^0,w,c
 27205   012022  0A00               	xorlw	0	; case 0
 27206   012024  A4D8               	btfss	status,2,c
 27207   012026  D019               	goto	l12904
 27208                           
 27209                           ; Switch size 1, requested type "simple"
 27210                           ; Number of cases is 8, Range of values is 0 to 11
 27211                           ; switch strategies available:
 27212                           ; Name         Instructions Cycles
 27213                           ; simple_byte           25    13 (average)
 27214                           ;	Chosen strategy is simple_byte
 27215   012028  502D               	movf	(btemp+10)^0,w,c
 27216   01202A  0A00               	xorlw	0	; case 0
 27217   01202C  B4D8               	btfsc	status,2,c
 27218   01202E  D791               	goto	l2186
 27219   012030  0A01               	xorlw	1	; case 1
 27220   012032  B4D8               	btfsc	status,2,c
 27221   012034  D744               	goto	l2180
 27222   012036  0A04               	xorlw	4	; case 5
 27223   012038  B4D8               	btfsc	status,2,c
 27224   01203A  D7DB               	goto	l12898
 27225   01203C  0A03               	xorlw	3	; case 6
 27226   01203E  B4D8               	btfsc	status,2,c
 27227   012040  D79D               	goto	l12892
 27228   012042  0A01               	xorlw	1	; case 7
 27229   012044  B4D8               	btfsc	status,2,c
 27230   012046  D749               	goto	l2182
 27231   012048  0A0F               	xorlw	15	; case 8
 27232   01204A  B4D8               	btfsc	status,2,c
 27233   01204C  D754               	goto	l2183
 27234   01204E  0A01               	xorlw	1	; case 9
 27235   012050  B4D8               	btfsc	status,2,c
 27236   012052  D75F               	goto	l2184
 27237   012054  0A02               	xorlw	2	; case 11
 27238   012056  B4D8               	btfsc	status,2,c
 27239   012058  D76A               	goto	l12872
 27240   01205A                     l12904:
 27241                           
 27242                           ;gemsecs.c: 1186:    set_temp_display_help(display_info());
 27243   01205A  EC53  F0C0         	call	_display_info	;wreg free
 27244   01205E  5023               	movf	btemp^0,w,c
 27245   012060  6EE6               	movwf	postinc1,c
 27246   012062  EC1C  F0C0         	call	_set_temp_display_help	;wreg free
 27247                           
 27248                           ;gemsecs.c: 1187:    vterm_sequence();
 27249   012066  ECB9  F093         	call	_vterm_sequence	;wreg free
 27250                           
 27251                           ; BSR set to: 1
 27252                           ;gemsecs.c: 1188:    StartTimer(TMR_INFO, 3000);
 27253   01206A  0EB8               	movlw	184
 27254   01206C  6EE6               	movwf	postinc1,c
 27255   01206E  0E0B               	movlw	11
 27256   012070  6EE6               	movwf	postinc1,c
 27257   012072  0E07               	movlw	7
 27258   012074  6EE6               	movwf	postinc1,c
 27259   012076  EC20  F0BC         	call	_StartTimer	;wreg free
 27260                           
 27261                           ;gemsecs.c: 1189:    break;
 27262   01207A  D500               	goto	l12630
 27263   01207C                     l12924:
 27264                           
 27265                           ;stkvar	_function @ sp[(-6)+-7]
 27266   01207C  0EF3               	movlw	-13
 27267   01207E  50E3               	movf	plusw1,w,c
 27268                           
 27269                           ; Switch size 1, requested type "simple"
 27270                           ; Number of cases is 1, Range of values is 1 to 1
 27271                           ; switch strategies available:
 27272                           ; Name         Instructions Cycles
 27273                           ; simple_byte            4     3 (average)
 27274                           ;	Chosen strategy is simple_byte
 27275   012080  0A01               	xorlw	1	; case 1
 27276   012082  B4D8               	btfsc	status,2,c
 27277   012084  D6F7               	goto	l12830
 27278   012086  D582               	goto	l12676
 27279   012088                     l12940:
 27280                           
 27281                           ;stkvar	_stream @ sp[(-6)+-6]
 27282   012088  0EF4               	movlw	-12
 27283   01208A  50E3               	movf	plusw1,w,c
 27284                           
 27285                           ; Switch size 1, requested type "simple"
 27286                           ; Number of cases is 6, Range of values is 1 to 10
 27287                           ; switch strategies available:
 27288                           ; Name         Instructions Cycles
 27289                           ; simple_byte           19    10 (average)
 27290                           ;	Chosen strategy is simple_byte
 27291   01208C  0A01               	xorlw	1	; case 1
 27292   01208E  B4D8               	btfsc	status,2,c
 27293   012090  D5A0               	goto	l12690
 27294   012092  0A03               	xorlw	3	; case 2
 27295   012094  B4D8               	btfsc	status,2,c
 27296   012096  D5D2               	goto	l12718
 27297   012098  0A07               	xorlw	7	; case 5
 27298   01209A  B4D8               	btfsc	status,2,c
 27299   01209C  D5EB               	goto	l12740
 27300   01209E  0A03               	xorlw	3	; case 6
 27301   0120A0  B4D8               	btfsc	status,2,c
 27302   0120A2  D6BA               	goto	l12808
 27303   0120A4  0A0F               	xorlw	15	; case 9
 27304   0120A6  B4D8               	btfsc	status,2,c
 27305   0120A8  D6C9               	goto	l12826
 27306   0120AA  0A03               	xorlw	3	; case 10
 27307   0120AC  B4D8               	btfsc	status,2,c
 27308   0120AE  D6DE               	goto	l12828
 27309   0120B0  D56D               	goto	l12676
 27310   0120B2                     l2124:
 27311                           
 27312                           ; _secs_II_message: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          7, argsize = 7, vargsize = 0
 27313   0120B2  0EFA               	movlw	250
 27314   0120B4  26E1               	addwf	fsr1l,f,c
 27315   0120B6  0EFF               	movlw	255
 27316   0120B8  22E2               	addwfc	fsr1h,f,c
 27317   0120BA  0012               	return		;funcret
 27318   0120BC                     __end_of_secs_II_message:
 27319                           	callstack 0
 27320                           
 27321 ;; *************** function _vterm_sequence *****************
 27322 ;; Defined at:
 27323 ;;		line 132 in file "mconfig.c"
 27324 ;; Parameters:    Size  Location     Type
 27325 ;;		None
 27326 ;; Auto vars:     Size  Location     Type
 27327 ;;		None
 27328 ;; Return value:  Size  Location     Type
 27329 ;;                  1  [STACK] void 
 27330 ;; Registers used:
 27331 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 27332 ;; Tracked objects:
 27333 ;;		On entry : 0/3C
 27334 ;;		On exit  : 3F/1
 27335 ;;		Unchanged: 0/0
 27336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27341 ;;Total ram usage:        0 bytes
 27342 ;; Hardware stack levels used: 1
 27343 ;; Hardware stack levels required when called: 12
 27344 ;; This function calls:
 27345 ;;		_get_vterm_ptr
 27346 ;;		_sprintf
 27347 ;; This function is called by:
 27348 ;;		_secs_II_message
 27349 ;; This function uses a reentrant model
 27350 ;;
 27351                           
 27352                           	psect	text10
 27353   012772                     __ptext10:
 27354                           	callstack 0
 27355   012772                     _vterm_sequence:
 27356                           	callstack 16
 27357                           
 27358                           ;mconfig.c: 134:  sprintf(get_vterm_ptr(2, 2), " Mesg %d Stack %d      ", V.msg_error, V
      +                          .stack);
 27359                           
 27360                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27361                           ;incstack = 0
 27362   012772  EE23  F169         	lfsr	2,_V+335	;volatile
 27363   012776  50DF               	movf	223,w,c
 27364   012778  0B07               	andlw	7
 27365   01277A  6EE6               	movwf	postinc1,c
 27366   01277C  0E00               	movlw	0
 27367   01277E  6EE6               	movwf	postinc1,c
 27368   012780  EE23  F151         	lfsr	2,_V+311	;volatile
 27369   012784  50DF               	movf	indf2,w,c
 27370   012786  6EE6               	movwf	postinc1,c
 27371   012788  0E00               	movlw	0
 27372   01278A  6EE6               	movwf	postinc1,c
 27373   01278C  0E54               	movlw	low STR_46
 27374   01278E  6EE6               	movwf	postinc1,c
 27375   012790  0EFD               	movlw	high STR_46
 27376   012792  6EE6               	movwf	postinc1,c
 27377   012794  0E02               	movlw	2
 27378   012796  6EE6               	movwf	postinc1,c
 27379   012798  0E02               	movlw	2
 27380   01279A  6EE6               	movwf	postinc1,c
 27381   01279C  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 27382   0127A0  0060  F08F  FFE6   	movff	btemp,postinc1
 27383   0127A6  0060  F093  FFE6   	movff	btemp+1,postinc1
 27384   0127AC  0E08               	movlw	8
 27385   0127AE  6EE6               	movwf	postinc1,c
 27386   0127B0  EC29  F0B2         	call	_sprintf	;wreg free
 27387                           
 27388                           ;mconfig.c: 135:  switch (V.response.info) {
 27389   0127B4  D213               	goto	l12392
 27390   0127B6                     l12372:
 27391                           
 27392                           ; BSR set to: 1
 27393                           ;mconfig.c: 137:   sprintf(get_vterm_ptr(0, 2), " S%dF%d log    %d    ", V.stream, V.fun
      +                          ction, V.response.log_seq & 0x03);
 27394                           ; multi bank
 27395   0127B6  010D               	movlb	(_V+373) shr (0+8)	;volatile
 27396   0127B8  518F               	movf	(_V+373)& (0+255),w,b	;volatile
 27397   0127BA  0B03               	andlw	3
 27398   0127BC  6EE6               	movwf	postinc1,c
 27399   0127BE  0E00               	movlw	0
 27400   0127C0  6EE6               	movwf	postinc1,c
 27401   0127C2  EE23  F14E         	lfsr	2,_V+308	;volatile
 27402   0127C6  50DF               	movf	indf2,w,c
 27403   0127C8  6EE6               	movwf	postinc1,c
 27404   0127CA  0E00               	movlw	0
 27405   0127CC  6EE6               	movwf	postinc1,c
 27406   0127CE  EE23  F14D         	lfsr	2,_V+307	;volatile
 27407   0127D2  50DF               	movf	indf2,w,c
 27408   0127D4  6EE6               	movwf	postinc1,c
 27409   0127D6  0E00               	movlw	0
 27410   0127D8  6EE6               	movwf	postinc1,c
 27411   0127DA  0ECA               	movlw	low STR_47
 27412   0127DC  6EE6               	movwf	postinc1,c
 27413   0127DE  0EFD               	movlw	high STR_47
 27414   0127E0  6EE6               	movwf	postinc1,c
 27415   0127E2  0E02               	movlw	2
 27416   0127E4  6EE6               	movwf	postinc1,c
 27417   0127E6  0E00               	movlw	0
 27418   0127E8  6EE6               	movwf	postinc1,c
 27419   0127EA  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 27420   0127EE  0060  F08F  FFE6   	movff	btemp,postinc1
 27421   0127F4  0060  F093  FFE6   	movff	btemp+1,postinc1
 27422   0127FA  0E0A               	movlw	10
 27423   0127FC  6EE6               	movwf	postinc1,c
 27424   0127FE  EC29  F0B2         	call	_sprintf	;wreg free
 27425                           
 27426                           ;mconfig.c: 138:   sprintf(get_vterm_ptr(1, 2), " Stored #%d        ", V.response.log_nu
      +                          m);
 27427   012802  EE23  F195         	lfsr	2,_V+379	;volatile
 27428   012806  006F FF78  F02D    	movff	postinc2,btemp+10
 27429   01280C  006F FF74  F02E    	movff	postdec2,btemp+11
 27430   012812  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 27431   012818  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 27432   01281E  0E87               	movlw	low STR_48
 27433   012820  6EE6               	movwf	postinc1,c
 27434   012822  0EFE               	movlw	high STR_48
 27435   012824  6EE6               	movwf	postinc1,c
 27436   012826  0E02               	movlw	2
 27437   012828  6EE6               	movwf	postinc1,c
 27438   01282A  0E01               	movlw	1
 27439   01282C  6EE6               	movwf	postinc1,c
 27440   01282E  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 27441   012832  0060  F08F  FFE6   	movff	btemp,postinc1
 27442   012838  0060  F093  FFE6   	movff	btemp+1,postinc1
 27443   01283E  0E06               	movlw	6
 27444   012840  6EE6               	movwf	postinc1,c
 27445   012842  EC29  F0B2         	call	_sprintf	;wreg free
 27446                           
 27447                           ;mconfig.c: 139:   break;
 27448   012846  0012               	return	
 27449   012848                     l12374:
 27450                           
 27451                           ; BSR set to: 1
 27452                           ;mconfig.c: 141:   sprintf(get_vterm_ptr(0, 2), " Ready LL        ");
 27453   012848  0E33               	movlw	low STR_49
 27454   01284A  6EE6               	movwf	postinc1,c
 27455   01284C  0EFF               	movlw	high STR_49
 27456   01284E  6EE6               	movwf	postinc1,c
 27457   012850  0E02               	movlw	2
 27458   012852  6EE6               	movwf	postinc1,c
 27459   012854  0E00               	movlw	0
 27460   012856  6EE6               	movwf	postinc1,c
 27461   012858  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 27462   01285C  0060  F08F  FFE6   	movff	btemp,postinc1
 27463   012862  0060  F093  FFE6   	movff	btemp+1,postinc1
 27464   012868  0E04               	movlw	4
 27465   01286A  6EE6               	movwf	postinc1,c
 27466   01286C  EC29  F0B2         	call	_sprintf	;wreg free
 27467                           
 27468                           ;mconfig.c: 142:   sprintf(get_vterm_ptr(1, 2), " S2F41 #%c         ", V.response.mcode)
      +                          ;
 27469   012870  EE23  F18C         	lfsr	2,_V+370	;volatile
 27470   012874  50DF               	movf	indf2,w,c
 27471   012876  6EE6               	movwf	postinc1,c
 27472   012878  0E00               	movlw	0
 27473   01287A  6EE6               	movwf	postinc1,c
 27474   01287C  0E73               	movlw	low STR_50
 27475   01287E  6EE6               	movwf	postinc1,c
 27476   012880  0EFE               	movlw	high STR_50
 27477   012882  6EE6               	movwf	postinc1,c
 27478   012884  0E02               	movlw	2
 27479   012886  6EE6               	movwf	postinc1,c
 27480   012888  0E01               	movlw	1
 27481   01288A  6EE6               	movwf	postinc1,c
 27482   01288C  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 27483   012890  0060  F08F  FFE6   	movff	btemp,postinc1
 27484   012896  0060  F093  FFE6   	movff	btemp+1,postinc1
 27485   01289C  0E06               	movlw	6
 27486   01289E  6EE6               	movwf	postinc1,c
 27487   0128A0  EC29  F0B2         	call	_sprintf	;wreg free
 27488                           
 27489                           ;mconfig.c: 143:   break;
 27490   0128A4  0012               	return	
 27491   0128A6                     l12376:
 27492                           
 27493                           ; BSR set to: 1
 27494                           ;mconfig.c: 145:   sprintf(get_vterm_ptr(0, 2), " Pump LL         ");
 27495   0128A6  0E21               	movlw	low STR_51
 27496   0128A8  6EE6               	movwf	postinc1,c
 27497   0128AA  0EFF               	movlw	high STR_51
 27498   0128AC  6EE6               	movwf	postinc1,c
 27499   0128AE  0E02               	movlw	2
 27500   0128B0  6EE6               	movwf	postinc1,c
 27501   0128B2  0E00               	movlw	0
 27502   0128B4  6EE6               	movwf	postinc1,c
 27503   0128B6  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 27504   0128BA  0060  F08F  FFE6   	movff	btemp,postinc1
 27505   0128C0  0060  F093  FFE6   	movff	btemp+1,postinc1
 27506   0128C6  0E04               	movlw	4
 27507   0128C8  6EE6               	movwf	postinc1,c
 27508   0128CA  EC29  F0B2         	call	_sprintf	;wreg free
 27509                           
 27510                           ;mconfig.c: 146:   sprintf(get_vterm_ptr(1, 2), " S2F41 #%c         ", V.response.mcode)
      +                          ;
 27511   0128CE  EE23  F18C         	lfsr	2,_V+370	;volatile
 27512   0128D2  50DF               	movf	indf2,w,c
 27513   0128D4  6EE6               	movwf	postinc1,c
 27514   0128D6  0E00               	movlw	0
 27515   0128D8  6EE6               	movwf	postinc1,c
 27516   0128DA  0E73               	movlw	low STR_50
 27517   0128DC  6EE6               	movwf	postinc1,c
 27518   0128DE  0EFE               	movlw	high STR_50
 27519   0128E0  6EE6               	movwf	postinc1,c
 27520   0128E2  0E02               	movlw	2
 27521   0128E4  6EE6               	movwf	postinc1,c
 27522   0128E6  0E01               	movlw	1
 27523   0128E8  6EE6               	movwf	postinc1,c
 27524   0128EA  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 27525   0128EE  0060  F08F  FFE6   	movff	btemp,postinc1
 27526   0128F4  0060  F093  FFE6   	movff	btemp+1,postinc1
 27527   0128FA  0E06               	movlw	6
 27528   0128FC  6EE6               	movwf	postinc1,c
 27529   0128FE  EC29  F0B2         	call	_sprintf	;wreg free
 27530                           
 27531                           ;mconfig.c: 147:   break;
 27532   012902  0012               	return	
 27533   012904                     l12378:
 27534                           
 27535                           ; BSR set to: 1
 27536                           ;mconfig.c: 149:   sprintf(get_vterm_ptr(0, 2), " Open LL         ");
 27537   012904  0E0F               	movlw	low STR_53
 27538   012906  6EE6               	movwf	postinc1,c
 27539   012908  0EFF               	movlw	high STR_53
 27540   01290A  6EE6               	movwf	postinc1,c
 27541   01290C  0E02               	movlw	2
 27542   01290E  6EE6               	movwf	postinc1,c
 27543   012910  0E00               	movlw	0
 27544   012912  6EE6               	movwf	postinc1,c
 27545   012914  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 27546   012918  0060  F08F  FFE6   	movff	btemp,postinc1
 27547   01291E  0060  F093  FFE6   	movff	btemp+1,postinc1
 27548   012924  0E04               	movlw	4
 27549   012926  6EE6               	movwf	postinc1,c
 27550   012928  EC29  F0B2         	call	_sprintf	;wreg free
 27551                           
 27552                           ;mconfig.c: 150:   sprintf(get_vterm_ptr(1, 2), " S2F41 #%c         ", V.response.mcode)
      +                          ;
 27553   01292C  EE23  F18C         	lfsr	2,_V+370	;volatile
 27554   012930  50DF               	movf	indf2,w,c
 27555   012932  6EE6               	movwf	postinc1,c
 27556   012934  0E00               	movlw	0
 27557   012936  6EE6               	movwf	postinc1,c
 27558   012938  0E73               	movlw	low STR_50
 27559   01293A  6EE6               	movwf	postinc1,c
 27560   01293C  0EFE               	movlw	high STR_50
 27561   01293E  6EE6               	movwf	postinc1,c
 27562   012940  0E02               	movlw	2
 27563   012942  6EE6               	movwf	postinc1,c
 27564   012944  0E01               	movlw	1
 27565   012946  6EE6               	movwf	postinc1,c
 27566   012948  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 27567   01294C  0060  F08F  FFE6   	movff	btemp,postinc1
 27568   012952  0060  F093  FFE6   	movff	btemp+1,postinc1
 27569   012958  0E06               	movlw	6
 27570   01295A  6EE6               	movwf	postinc1,c
 27571   01295C  EC29  F0B2         	call	_sprintf	;wreg free
 27572                           
 27573                           ;mconfig.c: 151:   break;
 27574   012960  0012               	return	
 27575   012962                     l12380:
 27576                           
 27577                           ; BSR set to: 1
 27578                           ;mconfig.c: 153:   sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 27579   012962  0EC9               	movlw	low STR_37
 27580   012964  6EE6               	movwf	postinc1,c
 27581   012966  0EFF               	movlw	high STR_37
 27582   012968  6EE6               	movwf	postinc1,c
 27583   01296A  0ED6               	movlw	low STR_39
 27584   01296C  6EE6               	movwf	postinc1,c
 27585   01296E  0EFE               	movlw	high STR_39
 27586   012970  6EE6               	movwf	postinc1,c
 27587   012972  0E01               	movlw	1
 27588   012974  6EE6               	movwf	postinc1,c
 27589   012976  0E00               	movlw	0
 27590   012978  6EE6               	movwf	postinc1,c
 27591   01297A  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 27592   01297E  0060  F08F  FFE6   	movff	btemp,postinc1
 27593   012984  0060  F093  FFE6   	movff	btemp+1,postinc1
 27594   01298A  0E06               	movlw	6
 27595   01298C  6EE6               	movwf	postinc1,c
 27596   01298E  EC29  F0B2         	call	_sprintf	;wreg free
 27597                           
 27598                           ;mconfig.c: 154:   sprintf(get_vterm_ptr(1, 1), "DISPLAY %s        ", build_time);
 27599   012992  0EDF               	movlw	low STR_38
 27600   012994  6EE6               	movwf	postinc1,c
 27601   012996  0EFF               	movlw	high STR_38
 27602   012998  6EE6               	movwf	postinc1,c
 27603   01299A  0EE9               	movlw	low STR_56
 27604   01299C  6EE6               	movwf	postinc1,c
 27605   01299E  0EFE               	movlw	high STR_56
 27606   0129A0  6EE6               	movwf	postinc1,c
 27607   0129A2  0E01               	movlw	1
 27608   0129A4  6EE6               	movwf	postinc1,c
 27609   0129A6  0E01               	movlw	1
 27610   0129A8  6EE6               	movwf	postinc1,c
 27611   0129AA  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 27612   0129AE  0060  F08F  FFE6   	movff	btemp,postinc1
 27613   0129B4  0060  F093  FFE6   	movff	btemp+1,postinc1
 27614   0129BA  0E06               	movlw	6
 27615   0129BC  6EE6               	movwf	postinc1,c
 27616   0129BE  EC29  F0B2         	call	_sprintf	;wreg free
 27617                           
 27618                           ;mconfig.c: 155:   break;
 27619   0129C2  0012               	return	
 27620   0129C4                     l12382:
 27621                           
 27622                           ; BSR set to: 1
 27623                           ;mconfig.c: 157:   sprintf(get_vterm_ptr(0, 2), " Load-lock num %d      ", V.llid);
 27624   0129C4  EE23  F198         	lfsr	2,_V+382	;volatile
 27625   0129C8  50DF               	movf	indf2,w,c
 27626   0129CA  6EE6               	movwf	postinc1,c
 27627   0129CC  0E00               	movlw	0
 27628   0129CE  6EE6               	movwf	postinc1,c
 27629   0129D0  0E6C               	movlw	low STR_57
 27630   0129D2  6EE6               	movwf	postinc1,c
 27631   0129D4  0EFD               	movlw	high STR_57
 27632   0129D6  6EE6               	movwf	postinc1,c
 27633   0129D8  0E02               	movlw	2
 27634   0129DA  6EE6               	movwf	postinc1,c
 27635   0129DC  0E00               	movlw	0
 27636   0129DE  6EE6               	movwf	postinc1,c
 27637   0129E0  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 27638   0129E4  0060  F08F  FFE6   	movff	btemp,postinc1
 27639   0129EA  0060  F093  FFE6   	movff	btemp+1,postinc1
 27640   0129F0  0E06               	movlw	6
 27641   0129F2  6EE6               	movwf	postinc1,c
 27642   0129F4  EC29  F0B2         	call	_sprintf	;wreg free
 27643                           
 27644                           ;mconfig.c: 158:   sprintf(get_vterm_ptr(1, 2), " SEQUENCE %d        ", V.sequences);
 27645   0129F8  EE23  F163         	lfsr	2,_V+329	;volatile
 27646   0129FC  006F FF78  F02D    	movff	postinc2,btemp+10
 27647   012A02  006F FF74  F02E    	movff	postdec2,btemp+11
 27648   012A08  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 27649   012A0E  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 27650   012A14  0EE0               	movlw	low STR_58
 27651   012A16  6EE6               	movwf	postinc1,c
 27652   012A18  0EFD               	movlw	high STR_58
 27653   012A1A  6EE6               	movwf	postinc1,c
 27654   012A1C  0E02               	movlw	2
 27655   012A1E  6EE6               	movwf	postinc1,c
 27656   012A20  0E01               	movlw	1
 27657   012A22  6EE6               	movwf	postinc1,c
 27658   012A24  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 27659   012A28  0060  F08F  FFE6   	movff	btemp,postinc1
 27660   012A2E  0060  F093  FFE6   	movff	btemp+1,postinc1
 27661   012A34  0E06               	movlw	6
 27662   012A36  6EE6               	movwf	postinc1,c
 27663   012A38  EC29  F0B2         	call	_sprintf	;wreg free
 27664                           
 27665                           ;mconfig.c: 159:   break;
 27666   012A3C  0012               	return	
 27667   012A3E                     l12384:
 27668                           
 27669                           ; BSR set to: 1
 27670                           ;mconfig.c: 161:   sprintf(get_vterm_ptr(0, 2), " Display num %d      ", V.response.mesg
      +                          id);
 27671   012A3E  EE23  F18A         	lfsr	2,_V+368	;volatile
 27672   012A42  50DF               	movf	indf2,w,c
 27673   012A44  6EE6               	movwf	postinc1,c
 27674   012A46  0E00               	movlw	0
 27675   012A48  6EE6               	movwf	postinc1,c
 27676   012A4A  0EB4               	movlw	low STR_59
 27677   012A4C  6EE6               	movwf	postinc1,c
 27678   012A4E  0EFD               	movlw	high STR_59
 27679   012A50  6EE6               	movwf	postinc1,c
 27680   012A52  0E02               	movlw	2
 27681   012A54  6EE6               	movwf	postinc1,c
 27682   012A56  0E00               	movlw	0
 27683   012A58  6EE6               	movwf	postinc1,c
 27684   012A5A  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 27685   012A5E  0060  F08F  FFE6   	movff	btemp,postinc1
 27686   012A64  0060  F093  FFE6   	movff	btemp+1,postinc1
 27687   012A6A  0E06               	movlw	6
 27688   012A6C  6EE6               	movwf	postinc1,c
 27689   012A6E  EC29  F0B2         	call	_sprintf	;wreg free
 27690                           
 27691                           ;mconfig.c: 162:   sprintf(get_vterm_ptr(1, 2), " SEQUENCE %d        ", V.sequences);
 27692   012A72  EE23  F163         	lfsr	2,_V+329	;volatile
 27693   012A76  006F FF78  F02D    	movff	postinc2,btemp+10
 27694   012A7C  006F FF74  F02E    	movff	postdec2,btemp+11
 27695   012A82  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 27696   012A88  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 27697   012A8E  0EE0               	movlw	low STR_58
 27698   012A90  6EE6               	movwf	postinc1,c
 27699   012A92  0EFD               	movlw	high STR_58
 27700   012A94  6EE6               	movwf	postinc1,c
 27701   012A96  0E02               	movlw	2
 27702   012A98  6EE6               	movwf	postinc1,c
 27703   012A9A  0E01               	movlw	1
 27704   012A9C  6EE6               	movwf	postinc1,c
 27705   012A9E  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 27706   012AA2  0060  F08F  FFE6   	movff	btemp,postinc1
 27707   012AA8  0060  F093  FFE6   	movff	btemp+1,postinc1
 27708   012AAE  0E06               	movlw	6
 27709   012AB0  6EE6               	movwf	postinc1,c
 27710   012AB2  EC29  F0B2         	call	_sprintf	;wreg free
 27711                           
 27712                           ;mconfig.c: 163:   break;
 27713   012AB6  0012               	return	
 27714   012AB8                     l12386:
 27715                           
 27716                           ; BSR set to: 1
 27717                           ;mconfig.c: 165:   sprintf(get_vterm_ptr(0, 2), " Terminal %d             ", V.response.
      +                          TID);
 27718   012AB8  EE23  F18B         	lfsr	2,_V+369	;volatile
 27719   012ABC  50DF               	movf	indf2,w,c
 27720   012ABE  6EE6               	movwf	postinc1,c
 27721   012AC0  0E00               	movlw	0
 27722   012AC2  6EE6               	movwf	postinc1,c
 27723   012AC4  0ED3               	movlw	low STR_61
 27724   012AC6  6EE6               	movwf	postinc1,c
 27725   012AC8  0EFC               	movlw	high STR_61
 27726   012ACA  6EE6               	movwf	postinc1,c
 27727   012ACC  0E02               	movlw	2
 27728   012ACE  6EE6               	movwf	postinc1,c
 27729   012AD0  0E00               	movlw	0
 27730   012AD2  6EE6               	movwf	postinc1,c
 27731   012AD4  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 27732   012AD8  0060  F08F  FFE6   	movff	btemp,postinc1
 27733   012ADE  0060  F093  FFE6   	movff	btemp+1,postinc1
 27734   012AE4  0E06               	movlw	6
 27735   012AE6  6EE6               	movwf	postinc1,c
 27736   012AE8  EC29  F0B2         	call	_sprintf	;wreg free
 27737                           
 27738                           ;mconfig.c: 166:   sprintf(get_vterm_ptr(1, 2), " CMD %c %c Len %d       ", V.response.m
      +                          code, V.response.mparm, V.response.cmdlen);
 27739   012AEC  EE23  F18E         	lfsr	2,_V+372	;volatile
 27740   012AF0  50DF               	movf	indf2,w,c
 27741   012AF2  6EE6               	movwf	postinc1,c
 27742   012AF4  0E00               	movlw	0
 27743   012AF6  6EE6               	movwf	postinc1,c
 27744   012AF8  EE23  F18D         	lfsr	2,_V+371	;volatile
 27745   012AFC  50DF               	movf	indf2,w,c
 27746   012AFE  6EE6               	movwf	postinc1,c
 27747   012B00  0E00               	movlw	0
 27748   012B02  6EE6               	movwf	postinc1,c
 27749   012B04  EE23  F18C         	lfsr	2,_V+370	;volatile
 27750   012B08  50DF               	movf	indf2,w,c
 27751   012B0A  6EE6               	movwf	postinc1,c
 27752   012B0C  0E00               	movlw	0
 27753   012B0E  6EE6               	movwf	postinc1,c
 27754   012B10  0E3B               	movlw	low STR_62
 27755   012B12  6EE6               	movwf	postinc1,c
 27756   012B14  0EFD               	movlw	high STR_62
 27757   012B16  6EE6               	movwf	postinc1,c
 27758   012B18  0E02               	movlw	2
 27759   012B1A  6EE6               	movwf	postinc1,c
 27760   012B1C  0E01               	movlw	1
 27761   012B1E  6EE6               	movwf	postinc1,c
 27762   012B20  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 27763   012B24  0060  F08F  FFE6   	movff	btemp,postinc1
 27764   012B2A  0060  F093  FFE6   	movff	btemp+1,postinc1
 27765   012B30  0E0A               	movlw	10
 27766   012B32  6EE6               	movwf	postinc1,c
 27767   012B34  EC29  F0B2         	call	_sprintf	;wreg free
 27768                           
 27769                           ;mconfig.c: 167:   break;
 27770   012B38  0012               	return	
 27771   012B3A                     l12388:
 27772                           
 27773                           ; BSR set to: 1
 27774                           ;mconfig.c: 170:   sprintf(get_vterm_ptr(0, 0), "                  ");
 27775   012B3A  0EC3               	movlw	low STR_63
 27776   012B3C  6EE6               	movwf	postinc1,c
 27777   012B3E  0EFE               	movlw	high STR_63
 27778   012B40  6EE6               	movwf	postinc1,c
 27779   012B42  0E00               	movlw	0
 27780   012B44  6EE6               	movwf	postinc1,c
 27781   012B46  0E00               	movlw	0
 27782   012B48  6EE6               	movwf	postinc1,c
 27783   012B4A  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 27784   012B4E  0060  F08F  FFE6   	movff	btemp,postinc1
 27785   012B54  0060  F093  FFE6   	movff	btemp+1,postinc1
 27786   012B5A  0E04               	movlw	4
 27787   012B5C  6EE6               	movwf	postinc1,c
 27788   012B5E  EC29  F0B2         	call	_sprintf	;wreg free
 27789                           
 27790                           ;mconfig.c: 171:   sprintf(get_vterm_ptr(1, 0), "                  ");
 27791   012B62  0EC3               	movlw	low STR_63
 27792   012B64  6EE6               	movwf	postinc1,c
 27793   012B66  0EFE               	movlw	high STR_63
 27794   012B68  6EE6               	movwf	postinc1,c
 27795   012B6A  0E00               	movlw	0
 27796   012B6C  6EE6               	movwf	postinc1,c
 27797   012B6E  0E01               	movlw	1
 27798   012B70  6EE6               	movwf	postinc1,c
 27799   012B72  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 27800   012B76  0060  F08F  FFE6   	movff	btemp,postinc1
 27801   012B7C  0060  F093  FFE6   	movff	btemp+1,postinc1
 27802   012B82  0E04               	movlw	4
 27803   012B84  6EE6               	movwf	postinc1,c
 27804   012B86  EC29  F0B2         	call	_sprintf	;wreg free
 27805                           
 27806                           ;mconfig.c: 172:   sprintf(get_vterm_ptr(0, 2), "                  ");
 27807   012B8A  0EC3               	movlw	low STR_63
 27808   012B8C  6EE6               	movwf	postinc1,c
 27809   012B8E  0EFE               	movlw	high STR_63
 27810   012B90  6EE6               	movwf	postinc1,c
 27811   012B92  0E02               	movlw	2
 27812   012B94  6EE6               	movwf	postinc1,c
 27813   012B96  0E00               	movlw	0
 27814   012B98  6EE6               	movwf	postinc1,c
 27815   012B9A  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 27816   012B9E  0060  F08F  FFE6   	movff	btemp,postinc1
 27817   012BA4  0060  F093  FFE6   	movff	btemp+1,postinc1
 27818   012BAA  0E04               	movlw	4
 27819   012BAC  6EE6               	movwf	postinc1,c
 27820   012BAE  EC29  F0B2         	call	_sprintf	;wreg free
 27821                           
 27822                           ;mconfig.c: 173:   sprintf(get_vterm_ptr(1, 2), "                  ");
 27823   012BB2  0EC3               	movlw	low STR_63
 27824   012BB4  6EE6               	movwf	postinc1,c
 27825   012BB6  0EFE               	movlw	high STR_63
 27826   012BB8  6EE6               	movwf	postinc1,c
 27827   012BBA  0E02               	movlw	2
 27828   012BBC  6EE6               	movwf	postinc1,c
 27829   012BBE  0E01               	movlw	1
 27830   012BC0  6EE6               	movwf	postinc1,c
 27831   012BC2  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 27832   012BC6  0060  F08F  FFE6   	movff	btemp,postinc1
 27833   012BCC  0060  F093  FFE6   	movff	btemp+1,postinc1
 27834   012BD2  0E04               	movlw	4
 27835   012BD4  6EE6               	movwf	postinc1,c
 27836   012BD6  EC29  F0B2         	call	_sprintf	;wreg free
 27837                           
 27838                           ;mconfig.c: 174:   break;
 27839   012BDA  0012               	return	
 27840   012BDC                     l12392:
 27841                           
 27842                           ; BSR set to: 1
 27843   012BDC  EE23  F191         	lfsr	2,_V+375	;volatile
 27844   012BE0  50DF               	movf	indf2,w,c
 27845   012BE2  6E2D               	movwf	(btemp+10)^0,c
 27846   012BE4  6A2E               	clrf	(btemp+11)^0,c
 27847                           
 27848                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27849                           ; Switch size 1, requested type "simple"
 27850                           ; Number of cases is 1, Range of values is 0 to 0
 27851                           ; switch strategies available:
 27852                           ; Name         Instructions Cycles
 27853                           ; simple_byte            4     3 (average)
 27854                           ;	Chosen strategy is simple_byte
 27855   012BE6  502E               	movf	(btemp+11)^0,w,c
 27856   012BE8  0A00               	xorlw	0	; case 0
 27857   012BEA  A4D8               	btfss	status,2,c
 27858   012BEC  D7A6               	goto	l12388
 27859                           
 27860                           ; BSR set to: 1
 27861                           ; Switch size 1, requested type "simple"
 27862                           ; Number of cases is 9, Range of values is 1 to 10
 27863                           ; switch strategies available:
 27864                           ; Name         Instructions Cycles
 27865                           ; simple_byte           28    15 (average)
 27866                           ;	Chosen strategy is simple_byte
 27867   012BEE  502D               	movf	(btemp+10)^0,w,c
 27868   012BF0  0A01               	xorlw	1	; case 1
 27869   012BF2  B4D8               	btfsc	status,2,c
 27870   012BF4  D761               	goto	l12386
 27871   012BF6  0A03               	xorlw	3	; case 2
 27872   012BF8  B4D8               	btfsc	status,2,c
 27873   012BFA  D5DD               	goto	l12372
 27874   012BFC  0A01               	xorlw	1	; case 3
 27875   012BFE  B4D8               	btfsc	status,2,c
 27876   012C00  D623               	goto	l12374
 27877   012C02  0A07               	xorlw	7	; case 4
 27878   012C04  B4D8               	btfsc	status,2,c
 27879   012C06  D67E               	goto	l12378
 27880   012C08  0A01               	xorlw	1	; case 5
 27881   012C0A  B4D8               	btfsc	status,2,c
 27882   012C0C  D64C               	goto	l12376
 27883   012C0E  0A03               	xorlw	3	; case 6
 27884   012C10  B4D8               	btfsc	status,2,c
 27885   012C12  D6A7               	goto	l12380
 27886   012C14  0A01               	xorlw	1	; case 7
 27887   012C16  B4D8               	btfsc	status,2,c
 27888   012C18  D6D5               	goto	l12382
 27889   012C1A  0A0F               	xorlw	15	; case 8
 27890   012C1C  B4D8               	btfsc	status,2,c
 27891   012C1E  D70F               	goto	l12384
 27892   012C20  0A02               	xorlw	2	; case 10
 27893   012C22  D78B               	goto	l12388
 27894   012C24                     __end_of_vterm_sequence:
 27895                           	callstack 0
 27896                           
 27897 ;; *************** function _s6f11_opcmd *****************
 27898 ;; Defined at:
 27899 ;;		line 877 in file "gemsecs.c"
 27900 ;; Parameters:    Size  Location     Type
 27901 ;;		None
 27902 ;; Auto vars:     Size  Location     Type
 27903 ;;		None
 27904 ;; Return value:  Size  Location     Type
 27905 ;;                  2  [STACK] unsigned short 
 27906 ;; Registers used:
 27907 ;;		wreg, fsr2l, fsr2h, status,2, btemp, btemp+1, btemp+10, btemp+11
 27908 ;; Tracked objects:
 27909 ;;		On entry : 0/3C
 27910 ;;		On exit  : 0/0
 27911 ;;		Unchanged: 0/0
 27912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27917 ;;Total ram usage:        0 bytes
 27918 ;; Hardware stack levels used: 1
 27919 ;; Hardware stack levels required when called: 3
 27920 ;; This function calls:
 27921 ;;		Nothing
 27922 ;; This function is called by:
 27923 ;;		_secs_II_message
 27924 ;; This function uses a reentrant model
 27925 ;;
 27926                           
 27927                           	psect	text11
 27928   0171B4                     __ptext11:
 27929                           	callstack 0
 27930   0171B4                     _s6f11_opcmd:
 27931                           	callstack 25
 27932                           
 27933                           ;gemsecs.c: 879:  V.response.ceid = V.response.ack[9];
 27934                           
 27935                           ; BSR set to: 1
 27936                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27937                           ;incstack = 0
 27938   0171B4  EE23  F173         	lfsr	2,_V+345	;volatile
 27939   0171B8  50DF               	movf	indf2,w,c
 27940   0171BA  6E2D               	movwf	(btemp+10)^0,c
 27941   0171BC  6A2E               	clrf	(btemp+11)^0,c
 27942   0171BE  0060  F0B4  FD93   	movff	btemp+10,_V+377	;volatile
 27943   0171C4  0060  F0B8  FD94   	movff	btemp+11,_V+378	;volatile
 27944                           
 27945                           ;gemsecs.c: 880:  V.response.ceid = H254[0].data[(sizeof(H254[0].data) - 1) - 9];
 27946   0171CA  EE23  F3C1         	lfsr	2,_H254+236
 27947   0171CE  50DF               	movf	indf2,w,c
 27948   0171D0  6E2D               	movwf	(btemp+10)^0,c
 27949   0171D2  6A2E               	clrf	(btemp+11)^0,c
 27950   0171D4  0060  F0B4  FD93   	movff	btemp+10,_V+377	;volatile
 27951   0171DA  0060  F0B8  FD94   	movff	btemp+11,_V+378	;volatile
 27952                           
 27953                           ;gemsecs.c: 882:  V.testing = (sizeof(H254[0].data) - 1) - 9;
 27954   0171E0  0EEA               	movlw	234
 27955   0171E2  006F FFA0  FD49    	movff	wreg,_V+303	;volatile
 27956   0171E8  0E00               	movlw	0
 27957   0171EA  006F FFA0  FD4A    	movff	wreg,_V+304	;volatile
 27958   0171F0  0E00               	movlw	0
 27959   0171F2  006F FFA0  FD4B    	movff	wreg,_V+305	;volatile
 27960   0171F8  0E00               	movlw	0
 27961   0171FA  006F FFA0  FD4C    	movff	wreg,_V+306	;volatile
 27962                           
 27963                           ;gemsecs.c: 884:  return V.response.ceid;
 27964   017200  EE23  F193         	lfsr	2,_V+377	;volatile
 27965   017204  006F FF78  F023    	movff	postinc2,btemp
 27966   01720A  006F FF74  F024    	movff	postdec2,btemp+1
 27967                           
 27968                           ; _s6f11_opcmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 27969   017210  0012               	return		;funcret
 27970   017212                     __end_of_s6f11_opcmd:
 27971                           	callstack 0
 27972                           
 27973 ;; *************** function _s10f1_opcmd *****************
 27974 ;; Defined at:
 27975 ;;		line 759 in file "gemsecs.c"
 27976 ;; Parameters:    Size  Location     Type
 27977 ;;		None
 27978 ;; Auto vars:     Size  Location     Type
 27979 ;;		None
 27980 ;; Return value:  Size  Location     Type
 27981 ;;                  1  [STACK] enum E16945
 27982 ;; Registers used:
 27983 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 27984 ;; Tracked objects:
 27985 ;;		On entry : 0/3C
 27986 ;;		On exit  : 3E/0
 27987 ;;		Unchanged: 0/0
 27988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27993 ;;Total ram usage:        0 bytes
 27994 ;; Hardware stack levels used: 1
 27995 ;; Hardware stack levels required when called: 12
 27996 ;; This function calls:
 27997 ;;		_parse_ll
 27998 ;;		_sprintf
 27999 ;; This function is called by:
 28000 ;;		_secs_II_message
 28001 ;; This function uses a reentrant model
 28002 ;;
 28003                           
 28004                           	psect	text12
 28005   0147EC                     __ptext12:
 28006                           	callstack 0
 28007   0147EC                     _s10f1_opcmd:
 28008                           	callstack 16
 28009                           
 28010                           ;gemsecs.c: 761:  sprintf(V.info, " Terminal          ");
 28011                           
 28012                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28013                           ;incstack = 0
 28014   0147EC  0E9B               	movlw	low STR_33
 28015   0147EE  6EE6               	movwf	postinc1,c
 28016   0147F0  0EFE               	movlw	high STR_33
 28017   0147F2  6EE6               	movwf	postinc1,c
 28018   0147F4  0E01               	movlw	low (_V+231)
 28019   0147F6  6EE6               	movwf	postinc1,c
 28020   0147F8  0E0D               	movlw	high (_V+231)
 28021   0147FA  6EE6               	movwf	postinc1,c
 28022   0147FC  0E04               	movlw	4
 28023   0147FE  6EE6               	movwf	postinc1,c
 28024   014800  EC29  F0B2         	call	_sprintf	;wreg free
 28025                           
 28026                           ; BSR set to: 1
 28027                           ;gemsecs.c: 762:  V.response.cmdlen = V.response.ack[6];
 28028   014804  0063  F5C0  FD8E   	movff	_V+342,_V+372	;volatile
 28029                           
 28030                           ; BSR set to: 1
 28031                           ;gemsecs.c: 763:  V.response.TID = V.response.ack[4];
 28032   01480A  0063  F5B8  FD8B   	movff	_V+340,_V+369	;volatile
 28033                           
 28034                           ; BSR set to: 1
 28035                           ;gemsecs.c: 764:  V.response.mcode = V.response.ack[7];
 28036   014810  0063  F5C4  FD8C   	movff	_V+343,_V+370	;volatile
 28037                           
 28038                           ; BSR set to: 1
 28039                           ;gemsecs.c: 765:  V.response.mparm = V.response.ack[8];
 28040   014816  0063  F5C8  FD8D   	movff	_V+344,_V+371	;volatile
 28041                           
 28042                           ; BSR set to: 1
 28043                           ;gemsecs.c: 767:  if (V.response.cmdlen == 0)
 28044   01481C  EE23  F18E         	lfsr	2,_V+372	;volatile
 28045   014820  50DF               	movf	indf2,w,c
 28046   014822  A4D8               	btfss	status,2,c
 28047   014824  D003               	goto	l12224
 28048                           
 28049                           ; BSR set to: 1
 28050                           ;gemsecs.c: 768:   return CODE_ERR;
 28051   014826  0E0C               	movlw	12
 28052   014828  6E23               	movwf	btemp^0,c
 28053   01482A  0012               	return	
 28054   01482C                     l12224:
 28055                           
 28056                           ; BSR set to: 1
 28057                           ;gemsecs.c: 770:  if (V.response.mcode == 'M' || V.response.mcode == 'm')
 28058   01482C  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28059   014832  0A4D               	xorlw	77
 28060   014834  B4D8               	btfsc	status,2,c
 28061   014836  D006               	goto	u8790
 28062                           
 28063                           ; BSR set to: 1
 28064   014838  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28065   01483E  0A6D               	xorlw	109
 28066   014840  A4D8               	btfss	status,2,c
 28067   014842  D003               	goto	l12232
 28068   014844                     u8790:
 28069                           
 28070                           ; BSR set to: 1
 28071                           ;gemsecs.c: 771:   return CODE_TS;
 28072   014844  0E00               	movlw	0
 28073   014846  6E23               	movwf	btemp^0,c
 28074   014848  0012               	return	
 28075   01484A                     l12232:
 28076                           
 28077                           ; BSR set to: 1
 28078                           ;gemsecs.c: 773:  if (V.response.mcode == 'C' || V.response.mcode == 'c') {
 28079   01484A  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28080   014850  0A43               	xorlw	67
 28081   014852  B4D8               	btfsc	status,2,c
 28082   014854  D006               	goto	u8810
 28083                           
 28084                           ; BSR set to: 1
 28085   014856  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28086   01485C  0A63               	xorlw	99
 28087   01485E  A4D8               	btfss	status,2,c
 28088   014860  D01E               	goto	l12250
 28089   014862                     u8810:
 28090                           
 28091                           ; BSR set to: 1
 28092                           ;gemsecs.c: 774:   parse_ll();
 28093   014862  ECAB  F0B7         	call	_parse_ll	;wreg free
 28094                           
 28095                           ;gemsecs.c: 776:   switch (V.e_types) {
 28096   014866  D008               	goto	l12244
 28097   014868                     l12238:
 28098                           
 28099                           ; BSR set to: 0
 28100                           ;gemsecs.c: 778:    H33[0].data[18] = '1';
 28101   014868  0E31               	movlw	49
 28102   01486A  6FD4               	movwf	(_H33+20)& (0+255),b
 28103                           
 28104                           ;gemsecs.c: 779:    H33[0].data[17] = '6';
 28105   01486C  0E36               	movlw	54
 28106   01486E  D029               	goto	L14
 28107   014870                     l12240:
 28108                           
 28109                           ; BSR set to: 0
 28110                           ;gemsecs.c: 782:    H33[0].data[18] = '1';
 28111   014870  0E31               	movlw	49
 28112   014872  6FD4               	movwf	(_H33+20)& (0+255),b
 28113                           
 28114                           ;gemsecs.c: 783:    H33[0].data[17] = '0';
 28115   014874  0E30               	movlw	48
 28116   014876  D025               	goto	L14
 28117   014878                     l12244:
 28118                           
 28119                           ; BSR set to: 0
 28120   014878  EE23  F01D         	lfsr	2,_V+3	;volatile
 28121   01487C  50DF               	movf	indf2,w,c
 28122   01487E  6E2D               	movwf	(btemp+10)^0,c
 28123   014880  6A2E               	clrf	(btemp+11)^0,c
 28124                           
 28125                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28126                           ; Switch size 1, requested type "simple"
 28127                           ; Number of cases is 1, Range of values is 0 to 0
 28128                           ; switch strategies available:
 28129                           ; Name         Instructions Cycles
 28130                           ; simple_byte            4     3 (average)
 28131                           ;	Chosen strategy is simple_byte
 28132   014882  502E               	movf	(btemp+11)^0,w,c
 28133   014884  0A00               	xorlw	0	; case 0
 28134   014886  A4D8               	btfss	status,2,c
 28135   014888  D007               	goto	l12246
 28136                           
 28137                           ; BSR set to: 0
 28138                           ; Switch size 1, requested type "simple"
 28139                           ; Number of cases is 2, Range of values is 1 to 2
 28140                           ; switch strategies available:
 28141                           ; Name         Instructions Cycles
 28142                           ; simple_byte            7     4 (average)
 28143                           ;	Chosen strategy is simple_byte
 28144   01488A  502D               	movf	(btemp+10)^0,w,c
 28145   01488C  0A01               	xorlw	1	; case 1
 28146   01488E  B4D8               	btfsc	status,2,c
 28147   014890  D7EB               	goto	l12238
 28148   014892  0A03               	xorlw	3	; case 2
 28149   014894  B4D8               	btfsc	status,2,c
 28150   014896  D7EC               	goto	l12240
 28151   014898                     l12246:
 28152                           
 28153                           ; BSR set to: 0
 28154                           ;gemsecs.c: 789:   return CODE_LOAD;
 28155   014898  0E07               	movlw	7
 28156   01489A  6E23               	movwf	btemp^0,c
 28157   01489C  0012               	return	
 28158   01489E                     l12250:
 28159                           
 28160                           ; BSR set to: 1
 28161                           ;gemsecs.c: 792:  if (V.response.mcode == 'R' || V.response.mcode == 'r') {
 28162   01489E  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28163   0148A4  0A52               	xorlw	82
 28164   0148A6  B4D8               	btfsc	status,2,c
 28165   0148A8  D006               	goto	u8830
 28166                           
 28167                           ; BSR set to: 1
 28168   0148AA  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28169   0148B0  0A72               	xorlw	114
 28170   0148B2  A4D8               	btfss	status,2,c
 28171   0148B4  D016               	goto	l12268
 28172   0148B6                     u8830:
 28173                           
 28174                           ; BSR set to: 1
 28175                           ;gemsecs.c: 793:   parse_ll();
 28176   0148B6  ECAB  F0B7         	call	_parse_ll	;wreg free
 28177                           
 28178                           ;gemsecs.c: 795:   switch (V.e_types) {
 28179   0148BA  D005               	goto	l12262
 28180   0148BC                     l12256:
 28181                           
 28182                           ; BSR set to: 0
 28183                           ;gemsecs.c: 797:    H33[0].data[18] = '1';
 28184   0148BC  0E31               	movlw	49
 28185   0148BE  6FD4               	movwf	(_H33+20)& (0+255),b
 28186                           
 28187                           ;gemsecs.c: 798:    H33[0].data[17] = '7';
 28188   0148C0  0E37               	movlw	55
 28189   0148C2                     L14:
 28190   0148C2  6FD3               	movwf	(_H33+19)& (0+255),b
 28191                           
 28192                           ;gemsecs.c: 799:    break;
 28193   0148C4  D7E9               	goto	l12246
 28194   0148C6                     l12262:
 28195                           
 28196                           ; BSR set to: 0
 28197   0148C6  EE23  F01D         	lfsr	2,_V+3	;volatile
 28198   0148CA  50DF               	movf	indf2,w,c
 28199   0148CC  6E2D               	movwf	(btemp+10)^0,c
 28200   0148CE  6A2E               	clrf	(btemp+11)^0,c
 28201                           
 28202                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28203                           ; Switch size 1, requested type "simple"
 28204                           ; Number of cases is 1, Range of values is 0 to 0
 28205                           ; switch strategies available:
 28206                           ; Name         Instructions Cycles
 28207                           ; simple_byte            4     3 (average)
 28208                           ;	Chosen strategy is simple_byte
 28209   0148D0  502E               	movf	(btemp+11)^0,w,c
 28210   0148D2  0A00               	xorlw	0	; case 0
 28211   0148D4  A4D8               	btfss	status,2,c
 28212   0148D6  D7E0               	goto	l12246
 28213                           
 28214                           ; BSR set to: 0
 28215                           ; Switch size 1, requested type "simple"
 28216                           ; Number of cases is 2, Range of values is 1 to 2
 28217                           ; switch strategies available:
 28218                           ; Name         Instructions Cycles
 28219                           ; simple_byte            7     4 (average)
 28220                           ;	Chosen strategy is simple_byte
 28221   0148D8  502D               	movf	(btemp+10)^0,w,c
 28222   0148DA  0A01               	xorlw	1	; case 1
 28223   0148DC  B4D8               	btfsc	status,2,c
 28224   0148DE  D7EE               	goto	l12256
 28225   0148E0  D7D8               	goto	L15
 28226   0148E2                     l12268:
 28227                           
 28228                           ; BSR set to: 1
 28229                           ;gemsecs.c: 811:  if (V.response.mcode == 'P' || V.response.mcode == 'p') {
 28230   0148E2  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28231   0148E8  0A50               	xorlw	80
 28232   0148EA  B4D8               	btfsc	status,2,c
 28233   0148EC  D006               	goto	u8850
 28234                           
 28235                           ; BSR set to: 1
 28236   0148EE  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28237   0148F4  0A70               	xorlw	112
 28238   0148F6  A4D8               	btfss	status,2,c
 28239   0148F8  D01F               	goto	l12286
 28240   0148FA                     u8850:
 28241                           
 28242                           ; BSR set to: 1
 28243                           ;gemsecs.c: 812:   parse_ll();
 28244   0148FA  ECAB  F0B7         	call	_parse_ll	;wreg free
 28245                           
 28246                           ;gemsecs.c: 814:   switch (V.e_types) {
 28247   0148FE  D009               	goto	l12280
 28248   014900                     l12274:
 28249                           
 28250                           ; BSR set to: 0
 28251                           ;gemsecs.c: 816:    H33[0].data[18] = '1';
 28252   014900  0E31               	movlw	49
 28253   014902  6FD4               	movwf	(_H33+20)& (0+255),b
 28254                           
 28255                           ;gemsecs.c: 817:    H33[0].data[17] = '8';
 28256   014904  0E38               	movlw	56
 28257   014906  D003               	goto	L16
 28258   014908                     l12276:
 28259                           
 28260                           ; BSR set to: 0
 28261                           ;gemsecs.c: 820:    H33[0].data[18] = '1';
 28262   014908  0E31               	movlw	49
 28263   01490A  6FD4               	movwf	(_H33+20)& (0+255),b
 28264                           
 28265                           ;gemsecs.c: 821:    H33[0].data[17] = '0';
 28266   01490C  0E30               	movlw	48
 28267   01490E                     L16:
 28268   01490E  6FD3               	movwf	(_H33+19)& (0+255),b
 28269                           
 28270                           ;gemsecs.c: 822:    break;
 28271   014910  D010               	goto	l12282
 28272   014912                     l12280:
 28273                           
 28274                           ; BSR set to: 0
 28275   014912  EE23  F01D         	lfsr	2,_V+3	;volatile
 28276   014916  50DF               	movf	indf2,w,c
 28277   014918  6E2D               	movwf	(btemp+10)^0,c
 28278   01491A  6A2E               	clrf	(btemp+11)^0,c
 28279                           
 28280                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28281                           ; Switch size 1, requested type "simple"
 28282                           ; Number of cases is 1, Range of values is 0 to 0
 28283                           ; switch strategies available:
 28284                           ; Name         Instructions Cycles
 28285                           ; simple_byte            4     3 (average)
 28286                           ;	Chosen strategy is simple_byte
 28287   01491C  502E               	movf	(btemp+11)^0,w,c
 28288   01491E  0A00               	xorlw	0	; case 0
 28289   014920  A4D8               	btfss	status,2,c
 28290   014922  D007               	goto	l12282
 28291                           
 28292                           ; BSR set to: 0
 28293                           ; Switch size 1, requested type "simple"
 28294                           ; Number of cases is 2, Range of values is 1 to 2
 28295                           ; switch strategies available:
 28296                           ; Name         Instructions Cycles
 28297                           ; simple_byte            7     4 (average)
 28298                           ;	Chosen strategy is simple_byte
 28299   014924  502D               	movf	(btemp+10)^0,w,c
 28300   014926  0A01               	xorlw	1	; case 1
 28301   014928  B4D8               	btfsc	status,2,c
 28302   01492A  D7EA               	goto	l12274
 28303   01492C  0A03               	xorlw	3	; case 2
 28304   01492E  B4D8               	btfsc	status,2,c
 28305   014930  D7EB               	goto	l12276
 28306   014932                     l12282:
 28307                           
 28308                           ; BSR set to: 0
 28309                           ;gemsecs.c: 827:   return CODE_PUMP;
 28310   014932  0E09               	movlw	9
 28311   014934  6E23               	movwf	btemp^0,c
 28312   014936  0012               	return	
 28313   014938                     l12286:
 28314                           
 28315                           ; BSR set to: 1
 28316                           ;gemsecs.c: 830:  if (V.response.mcode == 'O' || V.response.mcode == 'o') {
 28317   014938  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28318   01493E  0A4F               	xorlw	79
 28319   014940  B4D8               	btfsc	status,2,c
 28320   014942  D006               	goto	u8870
 28321                           
 28322                           ; BSR set to: 1
 28323   014944  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28324   01494A  0A6F               	xorlw	111
 28325   01494C  A4D8               	btfss	status,2,c
 28326   01494E  D01F               	goto	l12304
 28327   014950                     u8870:
 28328                           
 28329                           ; BSR set to: 1
 28330                           ;gemsecs.c: 831:   parse_ll();
 28331   014950  ECAB  F0B7         	call	_parse_ll	;wreg free
 28332                           
 28333                           ;gemsecs.c: 833:   switch (V.e_types) {
 28334   014954  D009               	goto	l12298
 28335   014956                     l12292:
 28336                           
 28337                           ; BSR set to: 0
 28338                           ;gemsecs.c: 835:    H33[0].data[18] = '1';
 28339   014956  0E31               	movlw	49
 28340   014958  6FD4               	movwf	(_H33+20)& (0+255),b
 28341                           
 28342                           ;gemsecs.c: 836:    H33[0].data[17] = '2';
 28343   01495A  0E32               	movlw	50
 28344   01495C  D003               	goto	L17
 28345   01495E                     l12294:
 28346                           
 28347                           ; BSR set to: 0
 28348                           ;gemsecs.c: 839:    H33[0].data[18] = '1';
 28349   01495E  0E31               	movlw	49
 28350   014960  6FD4               	movwf	(_H33+20)& (0+255),b
 28351                           
 28352                           ;gemsecs.c: 840:    H33[0].data[17] = '0';
 28353   014962  0E30               	movlw	48
 28354   014964                     L17:
 28355   014964  6FD3               	movwf	(_H33+19)& (0+255),b
 28356                           
 28357                           ;gemsecs.c: 841:    break;
 28358   014966  D010               	goto	l12300
 28359   014968                     l12298:
 28360                           
 28361                           ; BSR set to: 0
 28362   014968  EE23  F01D         	lfsr	2,_V+3	;volatile
 28363   01496C  50DF               	movf	indf2,w,c
 28364   01496E  6E2D               	movwf	(btemp+10)^0,c
 28365   014970  6A2E               	clrf	(btemp+11)^0,c
 28366                           
 28367                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28368                           ; Switch size 1, requested type "simple"
 28369                           ; Number of cases is 1, Range of values is 0 to 0
 28370                           ; switch strategies available:
 28371                           ; Name         Instructions Cycles
 28372                           ; simple_byte            4     3 (average)
 28373                           ;	Chosen strategy is simple_byte
 28374   014972  502E               	movf	(btemp+11)^0,w,c
 28375   014974  0A00               	xorlw	0	; case 0
 28376   014976  A4D8               	btfss	status,2,c
 28377   014978  D007               	goto	l12300
 28378                           
 28379                           ; BSR set to: 0
 28380                           ; Switch size 1, requested type "simple"
 28381                           ; Number of cases is 2, Range of values is 1 to 2
 28382                           ; switch strategies available:
 28383                           ; Name         Instructions Cycles
 28384                           ; simple_byte            7     4 (average)
 28385                           ;	Chosen strategy is simple_byte
 28386   01497A  502D               	movf	(btemp+10)^0,w,c
 28387   01497C  0A01               	xorlw	1	; case 1
 28388   01497E  B4D8               	btfsc	status,2,c
 28389   014980  D7EA               	goto	l12292
 28390   014982  0A03               	xorlw	3	; case 2
 28391   014984  B4D8               	btfsc	status,2,c
 28392   014986  D7EB               	goto	l12294
 28393   014988                     l12300:
 28394                           
 28395                           ; BSR set to: 0
 28396                           ;gemsecs.c: 846:   return CODE_UNLOAD;
 28397   014988  0E08               	movlw	8
 28398   01498A  6E23               	movwf	btemp^0,c
 28399   01498C  0012               	return	
 28400   01498E                     l12304:
 28401                           
 28402                           ; BSR set to: 1
 28403                           ;gemsecs.c: 849:  if (V.response.mcode == 'L' || V.response.mcode == 'l') {
 28404   01498E  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28405   014994  0A4C               	xorlw	76
 28406   014996  B4D8               	btfsc	status,2,c
 28407   014998  D006               	goto	u8890
 28408                           
 28409                           ; BSR set to: 1
 28410   01499A  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28411   0149A0  0A6C               	xorlw	108
 28412   0149A2  A4D8               	btfss	status,2,c
 28413   0149A4  D00F               	goto	l12314
 28414   0149A6                     u8890:
 28415                           
 28416                           ; BSR set to: 1
 28417                           ;gemsecs.c: 850:   sprintf(V.info, " Log file reset          ");
 28418   0149A6  0E07               	movlw	low STR_34
 28419   0149A8  6EE6               	movwf	postinc1,c
 28420   0149AA  0EFD               	movlw	high STR_34
 28421   0149AC  6EE6               	movwf	postinc1,c
 28422   0149AE  0E01               	movlw	low (_V+231)
 28423   0149B0  6EE6               	movwf	postinc1,c
 28424   0149B2  0E0D               	movlw	high (_V+231)
 28425   0149B4  6EE6               	movwf	postinc1,c
 28426   0149B6  0E04               	movlw	4
 28427   0149B8  6EE6               	movwf	postinc1,c
 28428   0149BA  EC29  F0B2         	call	_sprintf	;wreg free
 28429                           
 28430                           ; BSR set to: 1
 28431                           ;gemsecs.c: 851:   return CODE_LOG;
 28432   0149BE  0E06               	movlw	6
 28433   0149C0  6E23               	movwf	btemp^0,c
 28434   0149C2  0012               	return	
 28435   0149C4                     l12314:
 28436                           
 28437                           ; BSR set to: 1
 28438                           ;gemsecs.c: 854:  if (V.response.mcode == 'S' || V.response.mcode == 's') {
 28439   0149C4  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28440   0149CA  0A53               	xorlw	83
 28441   0149CC  B4D8               	btfsc	status,2,c
 28442   0149CE  D006               	goto	u8910
 28443                           
 28444                           ; BSR set to: 1
 28445   0149D0  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28446   0149D6  0A73               	xorlw	115
 28447   0149D8  A4D8               	btfss	status,2,c
 28448   0149DA  D010               	goto	l12326
 28449   0149DC                     u8910:
 28450                           
 28451                           ; BSR set to: 1
 28452   0149DC  EE23  F01D         	lfsr	2,_V+3	;volatile
 28453   0149E0  50DF               	movf	indf2,w,c
 28454   0149E2  6E2D               	movwf	(btemp+10)^0,c
 28455   0149E4  6A2E               	clrf	(btemp+11)^0,c
 28456                           
 28457                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28458                           ; Switch size 1, requested type "simple"
 28459                           ; Number of cases is 1, Range of values is 0 to 0
 28460                           ; switch strategies available:
 28461                           ; Name         Instructions Cycles
 28462                           ; simple_byte            4     3 (average)
 28463                           ;	Chosen strategy is simple_byte
 28464   0149E6  502E               	movf	(btemp+11)^0,w,c
 28465   0149E8  0A00               	xorlw	0	; case 0
 28466   0149EA  A4D8               	btfss	status,2,c
 28467   0149EC  D004               	goto	l12322
 28468                           
 28469                           ; BSR set to: 1
 28470                           ; Switch size 1, requested type "simple"
 28471                           ; Number of cases is 2, Range of values is 1 to 2
 28472                           ; switch strategies available:
 28473                           ; Name         Instructions Cycles
 28474                           ; simple_byte            7     4 (average)
 28475                           ;	Chosen strategy is simple_byte
 28476   0149EE  502D               	movf	(btemp+10)^0,w,c
 28477   0149F0  0A01               	xorlw	1	; case 1
 28478   0149F2  A4D8               	btfss	status,2,c
 28479   0149F4  0A03               	xorlw	3	; case 2
 28480   0149F6                     l12322:
 28481                           
 28482                           ; BSR set to: 1
 28483                           ;gemsecs.c: 863:   return CODE_SEQUENCE;
 28484   0149F6  0E0B               	movlw	11
 28485   0149F8  6E23               	movwf	btemp^0,c
 28486   0149FA  0012               	return	
 28487   0149FC                     l12326:
 28488                           
 28489                           ; BSR set to: 1
 28490                           ;gemsecs.c: 866:  if (V.response.mcode == 'D' || V.response.mcode == 'd') {
 28491   0149FC  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28492   014A02  0A44               	xorlw	68
 28493   014A04  B4D8               	btfsc	status,2,c
 28494   014A06  D006               	goto	u8930
 28495                           
 28496                           ; BSR set to: 1
 28497   014A08  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28498   014A0E  0A64               	xorlw	100
 28499   014A10  A4D8               	btfss	status,2,c
 28500   014A12  D718               	goto	u8790
 28501   014A14                     u8930:
 28502                           
 28503                           ; BSR set to: 1
 28504                           ;gemsecs.c: 867:   sprintf(V.info, " Debug Toggle            ");
 28505   014A14  0EED               	movlw	low STR_35
 28506   014A16  6EE6               	movwf	postinc1,c
 28507   014A18  0EFC               	movlw	high STR_35
 28508   014A1A  6EE6               	movwf	postinc1,c
 28509   014A1C  0E01               	movlw	low (_V+231)
 28510   014A1E  6EE6               	movwf	postinc1,c
 28511   014A20  0E0D               	movlw	high (_V+231)
 28512   014A22  6EE6               	movwf	postinc1,c
 28513   014A24  0E04               	movlw	4
 28514   014A26  6EE6               	movwf	postinc1,c
 28515   014A28  EC29  F0B2         	call	_sprintf	;wreg free
 28516                           
 28517                           ; BSR set to: 1
 28518                           ;gemsecs.c: 868:   return CODE_DEBUG;
 28519   014A2C  0E05               	movlw	5
 28520   014A2E  6E23               	movwf	btemp^0,c
 28521                           
 28522                           ; _s10f1_opcmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 28523   014A30  0012               	return		;funcret
 28524   014A32                     __end_of_s10f1_opcmd:
 28525                           	callstack 0
 28526                           
 28527 ;; *************** function _parse_ll *****************
 28528 ;; Defined at:
 28529 ;;		line 704 in file "gemsecs.c"
 28530 ;; Parameters:    Size  Location     Type
 28531 ;;		None
 28532 ;; Auto vars:     Size  Location     Type
 28533 ;;		None
 28534 ;; Return value:  Size  Location     Type
 28535 ;;                  1  [STACK] void 
 28536 ;; Registers used:
 28537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, btemp
 28538 ;; Tracked objects:
 28539 ;;		On entry : 3F/1
 28540 ;;		On exit  : 3F/0
 28541 ;;		Unchanged: 0/0
 28542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28547 ;;Total ram usage:        0 bytes
 28548 ;; Hardware stack levels used: 1
 28549 ;; Hardware stack levels required when called: 3
 28550 ;; This function calls:
 28551 ;;		Nothing
 28552 ;; This function is called by:
 28553 ;;		_s10f1_opcmd
 28554 ;; This function uses a reentrant model
 28555 ;;
 28556                           
 28557                           	psect	text13
 28558   016F56                     __ptext13:
 28559                           	callstack 0
 28560   016F56                     _parse_ll:
 28561                           	callstack 24
 28562                           
 28563                           ;gemsecs.c: 706:  if (V.response.cmdlen > 1) {
 28564                           
 28565                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28566                           ;incstack = 0
 28567   016F56  EE23  F18E         	lfsr	2,_V+372	;volatile
 28568   016F5A  0E01               	movlw	1
 28569   016F5C  64DF               	cpfsgt	indf2,c
 28570   016F5E  D005               	goto	l8330
 28571   016F60  D008               	goto	l8334
 28572   016F62                     l2022:
 28573                           
 28574                           ;gemsecs.c: 717:    H33[0].data[0] = V.response.mparm & 0x03;
 28575                           ; multi bank
 28576   016F62  010D               	movlb	(_V+371) shr (0+8)	;volatile
 28577   016F64  518D               	movf	(_V+371)& (0+255),w,b	;volatile
 28578   016F66  0B03               	andlw	3
 28579   016F68  D001               	goto	L18
 28580   016F6A                     l8330:
 28581                           
 28582                           ;gemsecs.c: 720:    H33[0].data[0] = 0x01;
 28583   016F6A  0E01               	movlw	1
 28584   016F6C                     L18:
 28585   016F6C  0100               	movlb	0	; () banked
 28586   016F6E  6FC2               	movwf	(_H33+2)& (0+255),b
 28587                           
 28588                           ;gemsecs.c: 721:    break;
 28589   016F70  D01F               	goto	l8338
 28590   016F72                     l8334:
 28591   016F72  EE23  F18D         	lfsr	2,_V+371	;volatile
 28592   016F76  50DF               	movf	indf2,w,c
 28593                           
 28594                           ; Switch size 1, requested type "simple"
 28595                           ; Number of cases is 9, Range of values is 49 to 99
 28596                           ; switch strategies available:
 28597                           ; Name         Instructions Cycles
 28598                           ; simple_byte           28    15 (average)
 28599                           ;	Chosen strategy is simple_byte
 28600   016F78  0A31               	xorlw	49	; case 49
 28601   016F7A  B4D8               	btfsc	status,2,c
 28602   016F7C  D7F2               	goto	l2022
 28603   016F7E  0A03               	xorlw	3	; case 50
 28604   016F80  B4D8               	btfsc	status,2,c
 28605   016F82  D7EF               	goto	l2022
 28606   016F84  0A01               	xorlw	1	; case 51
 28607   016F86  B4D8               	btfsc	status,2,c
 28608   016F88  D7EC               	goto	l2022
 28609   016F8A  0A72               	xorlw	114	; case 65
 28610   016F8C  B4D8               	btfsc	status,2,c
 28611   016F8E  D7E9               	goto	l2022
 28612   016F90  0A03               	xorlw	3	; case 66
 28613   016F92  B4D8               	btfsc	status,2,c
 28614   016F94  D7E6               	goto	l2022
 28615   016F96  0A01               	xorlw	1	; case 67
 28616   016F98  B4D8               	btfsc	status,2,c
 28617   016F9A  D7E3               	goto	l2022
 28618   016F9C  0A22               	xorlw	34	; case 97
 28619   016F9E  B4D8               	btfsc	status,2,c
 28620   016FA0  D7E0               	goto	l2022
 28621   016FA2  0A03               	xorlw	3	; case 98
 28622   016FA4  B4D8               	btfsc	status,2,c
 28623   016FA6  D7DD               	goto	l2022
 28624   016FA8  0A01               	xorlw	1	; case 99
 28625   016FAA  B4D8               	btfsc	status,2,c
 28626   016FAC  D7DA               	goto	l2022
 28627   016FAE  D7DD               	goto	l8330
 28628   016FB0                     l8338:
 28629                           
 28630                           ; BSR set to: 0
 28631                           ;gemsecs.c: 726:  V.llid = H33[0].data[0];
 28632   016FB0  EE23  F198         	lfsr	2,_V+382	;volatile
 28633   016FB4  0060  F30B  FFDF   	movff	_H33+2,indf2
 28634                           
 28635                           ; BSR set to: 0
 28636                           ; _parse_ll: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
 28637   016FBA  0012               	return		;funcret
 28638   016FBC                     __end_of_parse_ll:
 28639                           	callstack 0
 28640                           
 28641 ;; *************** function _parse_sid *****************
 28642 ;; Defined at:
 28643 ;;		line 732 in file "gemsecs.c"
 28644 ;; Parameters:    Size  Location     Type
 28645 ;;		None
 28646 ;; Auto vars:     Size  Location     Type
 28647 ;;		None
 28648 ;; Return value:  Size  Location     Type
 28649 ;;                  1  [STACK] void 
 28650 ;; Registers used:
 28651 ;;		wreg, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
 28652 ;; Tracked objects:
 28653 ;;		On entry : 0/0
 28654 ;;		On exit  : 0/0
 28655 ;;		Unchanged: 0/0
 28656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28661 ;;Total ram usage:        0 bytes
 28662 ;; Hardware stack levels used: 1
 28663 ;; Hardware stack levels required when called: 3
 28664 ;; This function calls:
 28665 ;;		Nothing
 28666 ;; This function is called by:
 28667 ;;		_secs_II_message
 28668 ;; This function uses a reentrant model
 28669 ;;
 28670                           
 28671                           	psect	text14
 28672   016FBC                     __ptext14:
 28673                           	callstack 0
 28674   016FBC                     _parse_sid:
 28675                           	callstack 25
 28676                           
 28677                           ;gemsecs.c: 734:  if (V.response.cmdlen > 1) {
 28678                           
 28679                           ; BSR set to: 0
 28680                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28681                           ;incstack = 0
 28682   016FBC  EE23  F18E         	lfsr	2,_V+372	;volatile
 28683   016FC0  0E01               	movlw	1
 28684   016FC2  64DF               	cpfsgt	indf2,c
 28685   016FC4  D00A               	goto	l2046
 28686   016FC6  D00E               	goto	l8602
 28687   016FC8                     l2039:
 28688                           
 28689                           ;gemsecs.c: 745:    V.sid = V.response.mparm & 0x03;
 28690   016FC8  0063  F634  F02E   	movff	_V+371,btemp+11	;volatile
 28691   016FCE  0E03               	movlw	3
 28692   016FD0  162E               	andwf	(btemp+11)^0,f,c
 28693   016FD2  0060  F0B8  FD99   	movff	btemp+11,_V+383	;volatile
 28694                           
 28695                           ;gemsecs.c: 746:    break;
 28696   016FD8  0012               	return	
 28697   016FDA                     l2046:
 28698                           
 28699                           ;gemsecs.c: 748:    V.sid = 0x01;
 28700   016FDA  0E01               	movlw	1
 28701   016FDC  006F FFA0  FD99    	movff	wreg,_V+383	;volatile
 28702                           
 28703                           ;gemsecs.c: 749:    break;
 28704   016FE2  0012               	return	
 28705   016FE4                     l8602:
 28706   016FE4  EE23  F18D         	lfsr	2,_V+371	;volatile
 28707   016FE8  50DF               	movf	indf2,w,c
 28708                           
 28709                           ; Switch size 1, requested type "simple"
 28710                           ; Number of cases is 9, Range of values is 49 to 99
 28711                           ; switch strategies available:
 28712                           ; Name         Instructions Cycles
 28713                           ; simple_byte           28    15 (average)
 28714                           ;	Chosen strategy is simple_byte
 28715   016FEA  0A31               	xorlw	49	; case 49
 28716   016FEC  B4D8               	btfsc	status,2,c
 28717   016FEE  D7EC               	goto	l2039
 28718   016FF0  0A03               	xorlw	3	; case 50
 28719   016FF2  B4D8               	btfsc	status,2,c
 28720   016FF4  D7E9               	goto	l2039
 28721   016FF6  0A01               	xorlw	1	; case 51
 28722   016FF8  B4D8               	btfsc	status,2,c
 28723   016FFA  D7E6               	goto	l2039
 28724   016FFC  0A72               	xorlw	114	; case 65
 28725   016FFE  B4D8               	btfsc	status,2,c
 28726   017000  D7E3               	goto	l2039
 28727   017002  0A03               	xorlw	3	; case 66
 28728   017004  B4D8               	btfsc	status,2,c
 28729   017006  D7E0               	goto	l2039
 28730   017008  0A01               	xorlw	1	; case 67
 28731   01700A  B4D8               	btfsc	status,2,c
 28732   01700C  D7DD               	goto	l2039
 28733   01700E  0A22               	xorlw	34	; case 97
 28734   017010  B4D8               	btfsc	status,2,c
 28735   017012  D7DA               	goto	l2039
 28736   017014  0A03               	xorlw	3	; case 98
 28737   017016  B4D8               	btfsc	status,2,c
 28738   017018  D7D7               	goto	l2039
 28739   01701A  0A01               	xorlw	1	; case 99
 28740   01701C  B4D8               	btfsc	status,2,c
 28741   01701E  D7D4               	goto	l2039
 28742   017020  D7DC               	goto	l2046
 28743   017022                     __end_of_parse_sid:
 28744                           	callstack 0
 28745                           
 28746 ;; *************** function _gem_messages *****************
 28747 ;; Defined at:
 28748 ;;		line 890 in file "gemsecs.c"
 28749 ;; Parameters:    Size  Location     Type
 28750 ;;  block           1  [STACK] PTR struct response_type
 28751 ;;		 -> secs_II_message@block(7), 
 28752 ;;  sid             1  [STACK] const unsigned char 
 28753 ;; Auto vars:     Size  Location     Type
 28754 ;;		None
 28755 ;; Return value:  Size  Location     Type
 28756 ;;                  1  [STACK] _Bool 
 28757 ;; Registers used:
 28758 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, pro
      +dh
 28759 ;; Tracked objects:
 28760 ;;		On entry : 0/3C
 28761 ;;		On exit  : 0/0
 28762 ;;		Unchanged: 0/0
 28763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28768 ;;Total ram usage:        0 bytes
 28769 ;; Hardware stack levels used: 1
 28770 ;; Hardware stack levels required when called: 4
 28771 ;; This function calls:
 28772 ;;		_StartTimer
 28773 ;; This function is called by:
 28774 ;;		_secs_II_message
 28775 ;; This function uses a reentrant model
 28776 ;;
 28777                           
 28778                           	psect	text15
 28779   01539C                     __ptext15:
 28780                           	callstack 0
 28781   01539C                     _gem_messages:
 28782                           	callstack 24
 28783                           
 28784                           ;gemsecs.c: 890: _Bool gem_messages(response_type *block, const uint8_t sid);gemsecs.c: 
      +                          891: {;gemsecs.c: 892:  if (!V.stack)
 28785                           
 28786                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28787                           ;incstack = 0
 28788   01539C  EE23  F169         	lfsr	2,_V+335	;volatile
 28789   0153A0  50DF               	movf	223,w,c
 28790   0153A2  0B07               	andlw	7
 28791   0153A4  0900               	iorlw	0
 28792   0153A6  B4D8               	btfsc	status,2,c
 28793   0153A8  D0B9               	goto	l2108
 28794   0153AA  D0A4               	goto	l8802
 28795   0153AC                     l8778:
 28796                           
 28797                           ;gemsecs.c: 897:   StartTimer(TMR_HBIO, S[V.stack - 1].delay);
 28798   0153AC  EE23  F169         	lfsr	2,_V+335	;volatile
 28799   0153B0  50DF               	movf	223,w,c
 28800   0153B2  0B07               	andlw	7
 28801   0153B4  0D2E               	mullw	46
 28802   0153B6  0EFF               	movlw	low (_S+65533)
 28803   0153B8  24F3               	addwf	243,w,c
 28804   0153BA  6ED9               	movwf	fsr2l,c
 28805   0153BC  0E08               	movlw	high (_S+65533)
 28806   0153BE  20F4               	addwfc	prodh,w,c
 28807   0153C0  6EDA               	movwf	fsr2h,c
 28808   0153C2  006F FF78  F02D    	movff	postinc2,btemp+10
 28809   0153C8  006F FF74  F02E    	movff	postdec2,btemp+11
 28810   0153CE  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 28811   0153D4  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 28812   0153DA  0E06               	movlw	6
 28813   0153DC  6EE6               	movwf	postinc1,c
 28814   0153DE  EC20  F0BC         	call	_StartTimer	;wreg free
 28815                           
 28816                           ;gemsecs.c: 898:   *block = S[V.stack - 1].block;
 28817   0153E2  EE23  F169         	lfsr	2,_V+335	;volatile
 28818   0153E6  50DF               	movf	223,w,c
 28819   0153E8  0B07               	andlw	7
 28820   0153EA  0D2E               	mullw	46
 28821   0153EC  0EF8               	movlw	low (_S+65526)
 28822   0153EE  24F3               	addwf	243,w,c
 28823   0153F0  6ED9               	movwf	fsr2l,c
 28824   0153F2  0E08               	movlw	high (_S+65526)
 28825   0153F4  20F4               	addwfc	prodh,w,c
 28826   0153F6  6EDA               	movwf	fsr2h,c
 28827                           
 28828                           ;stkvar	_block @ sp[(0)+-1]
 28829   0153F8  0EFF               	movlw	-1
 28830   0153FA  50E3               	movf	plusw1,w,c
 28831   0153FC  6EE9               	movwf	fsr0l,c
 28832   0153FE  6AEA               	clrf	fsr0h,c
 28833   015400  0E06               	movlw	6
 28834   015402                     u5711:
 28835   015402  006F FF6F FFEB     	movff	plusw2,plusw0
 28836   015408  06E8               	decf	wreg,f,c
 28837   01540A  E2FB               	bc	u5711
 28838                           
 28839                           ;gemsecs.c: 899:   S[V.stack - 1].message.block.block.systemb = V.ticks;
 28840   01540C  EE23  F141         	lfsr	2,_V+295	;volatile
 28841   015410  EE03  F169         	lfsr	0,_V+335	;volatile
 28842   015414  50EF               	movf	239,w,c
 28843   015416  0B07               	andlw	7
 28844   015418  0D2E               	mullw	46
 28845   01541A  0EED               	movlw	low (_S+65515)
 28846   01541C  24F3               	addwf	243,w,c
 28847   01541E  6EE9               	movwf	fsr0l,c
 28848   015420  0E08               	movlw	high (_S+65515)
 28849   015422  20F4               	addwfc	prodh,w,c
 28850   015424  6EEA               	movwf	fsr0h,c
 28851   015426  006F FF7B FFEE     	movff	postinc2,postinc0
 28852   01542C  006F FF7B FFEE     	movff	postinc2,postinc0
 28853   015432  006F FF7B FFEE     	movff	postinc2,postinc0
 28854   015438  006F FF7B FFEE     	movff	postinc2,postinc0
 28855                           
 28856                           ;gemsecs.c: 900:   V.llid = S[V.stack - 1].message.data[0];
 28857   01543E  EE23  F169         	lfsr	2,_V+335	;volatile
 28858   015442  50DF               	movf	223,w,c
 28859   015444  0B07               	andlw	7
 28860   015446  0D2E               	mullw	46
 28861   015448  0ED6               	movlw	low (_S+65492)
 28862   01544A  24F3               	addwf	243,w,c
 28863   01544C  6ED9               	movwf	fsr2l,c
 28864   01544E  0E08               	movlw	high (_S+65492)
 28865   015450  20F4               	addwfc	prodh,w,c
 28866   015452  6EDA               	movwf	fsr2h,c
 28867   015454  50DF               	movf	indf2,w,c
 28868   015456  6E2E               	movwf	(btemp+11)^0,c
 28869   015458  0060  F0B8  FD98   	movff	btemp+11,_V+382	;volatile
 28870                           
 28871                           ;gemsecs.c: 901:   break;
 28872   01545E  D053               	goto	l8804
 28873   015460                     l8786:
 28874                           
 28875                           ;gemsecs.c: 903:   StartTimer(TMR_HBIO, D[V.stack - 1].delay);
 28876   015460  EE23  F169         	lfsr	2,_V+335	;volatile
 28877   015464  50DF               	movf	223,w,c
 28878   015466  0B07               	andlw	7
 28879   015468  0DA6               	mullw	166
 28880   01546A  0ECB               	movlw	low (_D+65533)
 28881   01546C  24F3               	addwf	243,w,c
 28882   01546E  6ED9               	movwf	fsr2l,c
 28883   015470  0E0A               	movlw	high (_D+65533)
 28884   015472  20F4               	addwfc	prodh,w,c
 28885   015474  6EDA               	movwf	fsr2h,c
 28886   015476  006F FF78  F02D    	movff	postinc2,btemp+10
 28887   01547C  006F FF74  F02E    	movff	postdec2,btemp+11
 28888   015482  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 28889   015488  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 28890   01548E  0E06               	movlw	6
 28891   015490  6EE6               	movwf	postinc1,c
 28892   015492  EC20  F0BC         	call	_StartTimer	;wreg free
 28893                           
 28894                           ;gemsecs.c: 904:   *block = D[V.stack - 1].block;
 28895   015496  EE23  F169         	lfsr	2,_V+335	;volatile
 28896   01549A  50DF               	movf	223,w,c
 28897   01549C  0B07               	andlw	7
 28898   01549E  0DA6               	mullw	166
 28899   0154A0  0EC4               	movlw	low (_D+65526)
 28900   0154A2  24F3               	addwf	243,w,c
 28901   0154A4  6ED9               	movwf	fsr2l,c
 28902   0154A6  0E0A               	movlw	high (_D+65526)
 28903   0154A8  20F4               	addwfc	prodh,w,c
 28904   0154AA  6EDA               	movwf	fsr2h,c
 28905                           
 28906                           ;stkvar	_block @ sp[(0)+-1]
 28907   0154AC  0EFF               	movlw	-1
 28908   0154AE  50E3               	movf	plusw1,w,c
 28909   0154B0  6EE9               	movwf	fsr0l,c
 28910   0154B2  6AEA               	clrf	fsr0h,c
 28911   0154B4  0E06               	movlw	6
 28912   0154B6                     u5721:
 28913   0154B6  006F FF6F FFEB     	movff	plusw2,plusw0
 28914   0154BC  06E8               	decf	wreg,f,c
 28915   0154BE  E2FB               	bc	u5721
 28916                           
 28917                           ;gemsecs.c: 905:   D[V.stack - 1].message.block.block.systemb = V.ticks;
 28918   0154C0  EE23  F141         	lfsr	2,_V+295	;volatile
 28919   0154C4  EE03  F169         	lfsr	0,_V+335	;volatile
 28920   0154C8  50EF               	movf	239,w,c
 28921   0154CA  0B07               	andlw	7
 28922   0154CC  0DA6               	mullw	166
 28923   0154CE  0EB9               	movlw	low (_D+65515)
 28924   0154D0  24F3               	addwf	243,w,c
 28925   0154D2  6EE9               	movwf	fsr0l,c
 28926   0154D4  0E0A               	movlw	high (_D+65515)
 28927   0154D6  20F4               	addwfc	prodh,w,c
 28928   0154D8  6EEA               	movwf	fsr0h,c
 28929   0154DA  006F FF7B FFEE     	movff	postinc2,postinc0
 28930   0154E0  006F FF7B FFEE     	movff	postinc2,postinc0
 28931   0154E6  006F FF7B FFEE     	movff	postinc2,postinc0
 28932   0154EC  006F FF7B FFEE     	movff	postinc2,postinc0
 28933                           
 28934                           ;gemsecs.c: 906:   break;
 28935   0154F2  D009               	goto	l8804
 28936   0154F4                     l8802:
 28937                           
 28938                           ;stkvar	_sid @ sp[(0)+-2]
 28939   0154F4  0EFE               	movlw	-2
 28940   0154F6  50E3               	movf	plusw1,w,c
 28941                           
 28942                           ; Switch size 1, requested type "simple"
 28943                           ; Number of cases is 2, Range of values is 1 to 10
 28944                           ; switch strategies available:
 28945                           ; Name         Instructions Cycles
 28946                           ; simple_byte            7     4 (average)
 28947                           ;	Chosen strategy is simple_byte
 28948   0154F8  0A01               	xorlw	1	; case 1
 28949   0154FA  B4D8               	btfsc	status,2,c
 28950   0154FC  D757               	goto	l8778
 28951   0154FE  0A0B               	xorlw	11	; case 10
 28952   015500  B4D8               	btfsc	status,2,c
 28953   015502  D7AE               	goto	l8786
 28954   015504  D753               	goto	l8778
 28955   015506                     l8804:
 28956                           
 28957                           ;gemsecs.c: 915:  V.stack--;
 28958   015506  EE23  F169         	lfsr	2,_V+335	;volatile
 28959   01550A  50DF               	movf	223,w,c
 28960   01550C  0B07               	andlw	7
 28961   01550E  6E2E               	movwf	(btemp+11)^0,c
 28962   015510  062E               	decf	(btemp+11)^0,f,c
 28963   015512  50DF               	movf	223,w,c
 28964   015514  182E               	xorwf	(btemp+11)^0,w,c
 28965   015516  0BF8               	andlw	-8
 28966   015518  182E               	xorwf	(btemp+11)^0,w,c
 28967   01551A  6EDF               	movwf	223,c
 28968   01551C                     l2108:
 28969                           
 28970                           ; _gem_messages: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
 28971   01551C  52E5               	movf	postdec1,f,c
 28972   01551E  52E5               	movf	postdec1,f,c
 28973   015520  0012               	return		;funcret
 28974   015522                     __end_of_gem_messages:
 28975                           	callstack 0
 28976                           
 28977 ;; *************** function _srand *****************
 28978 ;; Defined at:
 28979 ;;		line 6 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/rand.c"
 28980 ;; Parameters:    Size  Location     Type
 28981 ;;  s               2  [STACK] unsigned int 
 28982 ;; Auto vars:     Size  Location     Type
 28983 ;;		None
 28984 ;; Return value:  Size  Location     Type
 28985 ;;                  1  [STACK] void 
 28986 ;; Registers used:
 28987 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
 28988 ;; Tracked objects:
 28989 ;;		On entry : 3F/0
 28990 ;;		On exit  : 3F/0
 28991 ;;		Unchanged: 0/0
 28992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28997 ;;Total ram usage:        0 bytes
 28998 ;; Hardware stack levels used: 1
 28999 ;; Hardware stack levels required when called: 3
 29000 ;; This function calls:
 29001 ;;		Nothing
 29002 ;; This function is called by:
 29003 ;;		_main
 29004 ;; This function uses a reentrant model
 29005 ;;
 29006                           
 29007                           	psect	text16
 29008   017AA2                     __ptext16:
 29009                           	callstack 0
 29010   017AA2                     _srand:
 29011                           	callstack 27
 29012                           
 29013                           ;stkvar	_s @ sp[(0)+-2]
 29014                           
 29015                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29016                           ;incstack = 0
 29017   017AA2  0EFE               	movlw	-2
 29018   017AA4  50E3               	movf	plusw1,w,c
 29019   017AA6  0FFF               	addlw	255
 29020   017AA8  6E2D               	movwf	(btemp+10)^0,c
 29021   017AAA  0EFF               	movlw	-1
 29022   017AAC  006F FF8C  F02E    	movff	plusw1,btemp+11
 29023   017AB2  0EFF               	movlw	255
 29024   017AB4  222E               	addwfc	(btemp+11)^0,f,c
 29025   017AB6  C02D  F0BC         	movff	btemp+10,_seed
 29026   017ABA  C02E  F0BD         	movff	btemp+11,_seed+1
 29027   017ABE  0100               	movlb	0	; () banked
 29028   017AC0  6BBE               	clrf	(_seed+2)& (0+255),b
 29029   017AC2  6BBF               	clrf	(_seed+3)& (0+255),b
 29030                           
 29031                           ; BSR set to: 0
 29032                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
 29033   017AC4  52E5               	movf	postdec1,f,c
 29034   017AC6  52E5               	movf	postdec1,f,c
 29035   017AC8  0012               	return		;funcret
 29036   017ACA                     __end_of_srand:
 29037                           	callstack 0
 29038                           
 29039 ;; *************** function _r_protocol *****************
 29040 ;; Defined at:
 29041 ;;		line 259 in file "gemsecs.c"
 29042 ;; Parameters:    Size  Location     Type
 29043 ;;  r_link          2  [STACK] PTR enum E17017
 29044 ;;		 -> V(387), 
 29045 ;; Auto vars:     Size  Location     Type
 29046 ;;  rxData          1  [STACK] unsigned char 
 29047 ;; Return value:  Size  Location     Type
 29048 ;;                  1  [STACK] enum E17295
 29049 ;; Registers used:
 29050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 29051 ;; Tracked objects:
 29052 ;;		On entry : 0/3C
 29053 ;;		On exit  : 0/0
 29054 ;;		Unchanged: 0/0
 29055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29060 ;;Total ram usage:        0 bytes
 29061 ;; Hardware stack levels used: 1
 29062 ;; Hardware stack levels required when called: 14
 29063 ;; This function calls:
 29064 ;;		_StartTimer
 29065 ;;		_TimerDone
 29066 ;;		_UART1_Read
 29067 ;;		_UART1_Write
 29068 ;;		_UART1_is_rx_ready
 29069 ;;		_WaitMs
 29070 ;;		_run_checksum
 29071 ;;		_secs_II_monitor_message
 29072 ;;		_secs_gem_state
 29073 ;; This function is called by:
 29074 ;;		_main
 29075 ;; This function uses a reentrant model
 29076 ;;
 29077                           
 29078                           	psect	text17
 29079   012C24                     __ptext17:
 29080                           	callstack 0
 29081   012C24                     _r_protocol:
 29082                           	callstack 0
 29083                           
 29084                           ; BSR set to: 0
 29085                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29086   012C24  52E6               	movf	postinc1,f,c
 29087                           
 29088                           ;gemsecs.c: 259: LINK_STATES r_protocol(LINK_STATES * r_link);gemsecs.c: 260: {;gemsecs.
      +                          c: 261:  uint8_t rxData;;gemsecs.c: 262:  static uint8_t rxData_l = 0, retry = 3, *b_blo
      +                          ck, d = 1;;gemsecs.c: 264:  switch (*r_link) {
 29089                           
 29090                           ;incstack = 0
 29091   012C26  D207               	goto	l13186
 29092   012C28                     l13038:
 29093                           
 29094                           ;gemsecs.c: 266:   if (UART1_is_rx_ready()) {
 29095   012C28  EC64  F0C0         	call	_UART1_is_rx_ready	;wreg free
 29096   012C2C  5023               	movf	btemp^0,w,c
 29097   012C2E  B4D8               	btfsc	status,2,c
 29098   012C30  D227               	goto	l13188
 29099                           
 29100                           ;gemsecs.c: 267:    rxData = UART1_Read();
 29101   012C32  ECE4  F0BB         	call	_UART1_Read	;wreg free
 29102                           
 29103                           ;stkvar	_rxData @ sp[(-1)+0]
 29104   012C36  0EFF               	movlw	-1
 29105   012C38  0060  F08F  FFE3   	movff	btemp,plusw1
 29106                           
 29107                           ; BSR set to: 57
 29108                           ;gemsecs.c: 268:    if (rxData == 0x05) {
 29109                           ;stkvar	_rxData @ sp[(-1)+0]
 29110   012C3E  0EFF               	movlw	-1
 29111   012C40  006F FF8C  F023    	movff	plusw1,btemp
 29112   012C46  0E05               	movlw	5
 29113   012C48  1823               	xorwf	btemp^0,w,c
 29114   012C4A  A4D8               	btfss	status,2,c
 29115   012C4C  D219               	goto	l13188
 29116                           
 29117                           ; BSR set to: 57
 29118                           
 29119                           ;gemsecs.c: 270:     do { LATEbits.LATE1 = 1; } while(0);
 29120   012C4E  82BE               	bsf	190,1,c	;volatile
 29121                           
 29122                           ; BSR set to: 57
 29123                           ;gemsecs.c: 271:     V.error = LINK_ERROR_NONE;
 29124   012C50  0E0A               	movlw	10
 29125   012C52  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 29126                           
 29127                           ; BSR set to: 57
 29128                           ;gemsecs.c: 272:     *r_link = LINK_STATE_ENQ;
 29129                           ;stkvar	_r_link @ sp[(-1)+-2]
 29130   012C58  0EFD               	movlw	-3
 29131   012C5A  006F FF8F FFD9     	movff	plusw1,fsr2l
 29132   012C60  0EFE               	movlw	-2
 29133   012C62  006F FF8F FFDA     	movff	plusw1,fsr2h
 29134   012C68  0E01               	movlw	1
 29135   012C6A  6EDF               	movwf	indf2,c
 29136                           
 29137                           ; BSR set to: 57
 29138                           ;gemsecs.c: 273:     if (TimerDone(TMR_HBIO))
 29139   012C6C  0E06               	movlw	6
 29140   012C6E  6EE6               	movwf	postinc1,c
 29141   012C70  ECCB  F0BE         	call	_TimerDone	;wreg free
 29142   012C74  5023               	movf	btemp^0,w,c
 29143   012C76  B4D8               	btfsc	status,2,c
 29144   012C78  D203               	goto	l13188
 29145                           
 29146                           ;gemsecs.c: 274:      StartTimer(TMR_HBIO, 5000);
 29147   012C7A  0E88               	movlw	136
 29148   012C7C  6EE6               	movwf	postinc1,c
 29149   012C7E  0E13               	movlw	19
 29150   012C80  6EE6               	movwf	postinc1,c
 29151   012C82  0E06               	movlw	6
 29152   012C84  6EE6               	movwf	postinc1,c
 29153   012C86  EC20  F0BC         	call	_StartTimer	;wreg free
 29154                           
 29155                           ;gemsecs.c: 275:    }
 29156   012C8A  D1FA               	goto	l13188
 29157   012C8C                     l1887:
 29158                           
 29159                           ;gemsecs.c: 279:   rxData_l = 0;
 29160   012C8C  6A0D               	clrf	r_protocol@rxData_l^0,c
 29161                           
 29162                           ;gemsecs.c: 280:   d = 1;
 29163   012C8E  0E01               	movlw	1
 29164   012C90  6E52               	movwf	r_protocol@d^0,c
 29165                           
 29166                           ;gemsecs.c: 281:   b_block = (uint8_t*) & H254[0];
 29167   012C92  0ED5               	movlw	low _H254
 29168   012C94  6E01               	movwf	r_protocol@b_block^0,c
 29169   012C96  0E0E               	movlw	high _H254
 29170   012C98  6E02               	movwf	(r_protocol@b_block+1)^0,c
 29171                           
 29172                           ;gemsecs.c: 282:   UART1_Write(0x04);
 29173   012C9A  0E04               	movlw	4
 29174   012C9C  6EE6               	movwf	postinc1,c
 29175   012C9E  EC67  F0BB         	call	_UART1_Write	;wreg free
 29176                           
 29177                           ; BSR set to: 57
 29178                           ;gemsecs.c: 283:   StartTimer(TMR_T2, 3000);
 29179   012CA2  0EB8               	movlw	184
 29180   012CA4  6EE6               	movwf	postinc1,c
 29181   012CA6  0E0B               	movlw	11
 29182   012CA8  6EE6               	movwf	postinc1,c
 29183   012CAA  0E02               	movlw	2
 29184   012CAC  6EE6               	movwf	postinc1,c
 29185   012CAE  EC20  F0BC         	call	_StartTimer	;wreg free
 29186                           
 29187                           ;gemsecs.c: 284:   *r_link = LINK_STATE_EOT;
 29188                           ;stkvar	_r_link @ sp[(-1)+-2]
 29189   012CB2  0EFD               	movlw	-3
 29190   012CB4  006F FF8F FFD9     	movff	plusw1,fsr2l
 29191   012CBA  0EFE               	movlw	-2
 29192   012CBC  006F FF8F FFDA     	movff	plusw1,fsr2h
 29193   012CC2  0E02               	movlw	2
 29194   012CC4  D02D               	goto	L19
 29195   012CC6                     l13060:
 29196                           
 29197                           ;gemsecs.c: 294:   if (TimerDone(TMR_T2)) {
 29198   012CC6  0E02               	movlw	2
 29199   012CC8  6EE6               	movwf	postinc1,c
 29200   012CCA  ECCB  F0BE         	call	_TimerDone	;wreg free
 29201   012CCE  5023               	movf	btemp^0,w,c
 29202   012CD0  B4D8               	btfsc	status,2,c
 29203   012CD2  D032               	goto	l13076
 29204                           
 29205                           ;gemsecs.c: 295:    V.timer_error++;
 29206   012CD4  EE23  F15B         	lfsr	2,_V+321	;volatile
 29207   012CD8  2ADE               	incf	postinc2,f,c
 29208   012CDA  0E00               	movlw	0
 29209   012CDC  22DD               	addwfc	postdec2,f,c
 29210                           
 29211                           ;gemsecs.c: 296:    V.all_errors++;
 29212   012CDE  EE23  F165         	lfsr	2,_V+331	;volatile
 29213   012CE2  2ADE               	incf	postinc2,f,c
 29214   012CE4  0E00               	movlw	0
 29215   012CE6  22DD               	addwfc	postdec2,f,c
 29216                           
 29217                           ;gemsecs.c: 297:    if (!retry--) {
 29218   012CE8  0653               	decf	r_protocol@retry^0,f,c
 29219   012CEA  2853               	incf	r_protocol@retry^0,w,c
 29220   012CEC  A4D8               	btfss	status,2,c
 29221   012CEE  D01A               	goto	l13074
 29222                           
 29223                           ;gemsecs.c: 298:     V.error = LINK_ERROR_T2;
 29224   012CF0  0E0C               	movlw	12
 29225   012CF2  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 29226                           
 29227                           ;gemsecs.c: 299:     V.failed_receive = 1;
 29228   012CF8  EE23  F168         	lfsr	2,_V+334	;volatile
 29229   012CFC  50DF               	movf	223,w,c
 29230   012CFE  0BF0               	andlw	-16
 29231   012D00  0901               	iorlw	1
 29232   012D02  6EDF               	movwf	223,c
 29233                           
 29234                           ;gemsecs.c: 300:     V.all_errors++;
 29235   012D04  EE23  F165         	lfsr	2,_V+331	;volatile
 29236   012D08  2ADE               	incf	postinc2,f,c
 29237   012D0A  0E00               	movlw	0
 29238   012D0C  22DD               	addwfc	postdec2,f,c
 29239   012D0E                     l13072:
 29240                           
 29241                           ;gemsecs.c: 301:     *r_link = LINK_STATE_NAK;
 29242                           ;stkvar	_r_link @ sp[(-1)+-2]
 29243   012D0E  0EFD               	movlw	-3
 29244   012D10  006F FF8F FFD9     	movff	plusw1,fsr2l
 29245   012D16  0EFE               	movlw	-2
 29246   012D18  006F FF8F FFDA     	movff	plusw1,fsr2h
 29247   012D1E  0E05               	movlw	5
 29248   012D20                     L19:
 29249   012D20  6EDF               	movwf	indf2,c
 29250                           
 29251                           ;gemsecs.c: 302:    } else {
 29252   012D22  D1AE               	goto	l13188
 29253   012D24                     l13074:
 29254                           
 29255                           ;gemsecs.c: 303:     *r_link = LINK_STATE_IDLE;
 29256                           ;stkvar	_r_link @ sp[(-1)+-2]
 29257   012D24  0EFD               	movlw	-3
 29258   012D26  006F FF8F FFD9     	movff	plusw1,fsr2l
 29259   012D2C  0EFE               	movlw	-2
 29260   012D2E  006F FF8F FFDA     	movff	plusw1,fsr2h
 29261   012D34  6ADF               	clrf	indf2,c
 29262   012D36  D1A4               	goto	l13188
 29263   012D38                     l13076:
 29264                           
 29265                           ;gemsecs.c: 306:    if (UART1_is_rx_ready()) {
 29266   012D38  EC64  F0C0         	call	_UART1_is_rx_ready	;wreg free
 29267   012D3C  5023               	movf	btemp^0,w,c
 29268   012D3E  B4D8               	btfsc	status,2,c
 29269   012D40  D19F               	goto	l13188
 29270                           
 29271                           ;gemsecs.c: 307:     rxData = UART1_Read();
 29272   012D42  ECE4  F0BB         	call	_UART1_Read	;wreg free
 29273                           
 29274                           ;stkvar	_rxData @ sp[(-1)+0]
 29275   012D46  0EFF               	movlw	-1
 29276   012D48  0060  F08F  FFE3   	movff	btemp,plusw1
 29277                           
 29278                           ; BSR set to: 57
 29279                           ;gemsecs.c: 308:     if (rxData_l == 0) {
 29280   012D4E  500D               	movf	r_protocol@rxData_l^0,w,c
 29281   012D50  A4D8               	btfss	status,2,c
 29282   012D52  D01C               	goto	l13090
 29283                           
 29284                           ; BSR set to: 57
 29285                           ;gemsecs.c: 309:      r_block.length = rxData;
 29286                           ;stkvar	_rxData @ sp[(-1)+0]
 29287   012D54  0EFF               	movlw	-1
 29288   012D56  006F FF8C  F086    	movff	plusw1,_r_block+12
 29289                           
 29290                           ; BSR set to: 57
 29291                           ;gemsecs.c: 310:      run_checksum(0, 1);
 29292   012D5C  0E01               	movlw	1
 29293   012D5E  6EE6               	movwf	postinc1,c
 29294   012D60  0E00               	movlw	0
 29295   012D62  6EE6               	movwf	postinc1,c
 29296   012D64  ECB9  F0BE         	call	_run_checksum	;wreg free
 29297                           
 29298                           ;gemsecs.c: 311:      rxData_l++;
 29299   012D68  2A0D               	incf	r_protocol@rxData_l^0,f,c
 29300                           
 29301                           ;gemsecs.c: 312:      b_block[sizeof(header254) - rxData_l] = rxData;
 29302                           ;stkvar	_rxData @ sp[(-1)+0]
 29303   012D6A  500D               	movf	r_protocol@rxData_l^0,w,c
 29304   012D6C  5C01               	subwf	r_protocol@b_block^0,w,c
 29305   012D6E  6E2D               	movwf	(btemp+10)^0,c
 29306   012D70  0E00               	movlw	0
 29307   012D72  5802               	subwfb	(r_protocol@b_block+1)^0,w,c
 29308   012D74  6E2E               	movwf	(btemp+11)^0,c
 29309   012D76  0E01               	movlw	1
 29310   012D78  242D               	addwf	(btemp+10)^0,w,c
 29311   012D7A  6ED9               	movwf	fsr2l,c
 29312   012D7C  0E01               	movlw	1
 29313   012D7E  202E               	addwfc	(btemp+11)^0,w,c
 29314   012D80  6EDA               	movwf	fsr2h,c
 29315   012D82  0EFF               	movlw	-1
 29316   012D84  006F FF8F FFDF     	movff	plusw1,indf2
 29317                           
 29318                           ;gemsecs.c: 313:     } else {
 29319   012D8A  D17A               	goto	l13188
 29320   012D8C                     l13090:
 29321                           
 29322                           ; BSR set to: 57
 29323                           ;gemsecs.c: 317:      if (rxData_l <= sizeof(block10))
 29324   012D8C  0E0B               	movlw	11
 29325   012D8E  600D               	cpfslt	r_protocol@rxData_l^0,c
 29326   012D90  D00C               	goto	l13094
 29327                           
 29328                           ; BSR set to: 57
 29329                           ;gemsecs.c: 318:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
 29330                           ;stkvar	_rxData @ sp[(-1)+0]
 29331   012D92  500D               	movf	r_protocol@rxData_l^0,w,c
 29332   012D94  0819               	sublw	low (_H10+25)
 29333   012D96  6ED9               	movwf	fsr2l,c
 29334   012D98  0E00               	movlw	0
 29335   012D9A  A0D8               	btfss	status,0,c
 29336   012D9C  2AE8               	incf	wreg,f,c
 29337   012D9E  0801               	sublw	high (_H10+25)
 29338   012DA0  6EDA               	movwf	fsr2h,c
 29339   012DA2  0EFF               	movlw	-1
 29340   012DA4  006F FF8F FFDF     	movff	plusw1,indf2
 29341   012DAA                     l13094:
 29342                           
 29343                           ; BSR set to: 57
 29344                           ;gemsecs.c: 320:      if (d <= 16) {
 29345   012DAA  0E11               	movlw	17
 29346   012DAC  6052               	cpfslt	r_protocol@d^0,c
 29347   012DAE  D01C               	goto	l13102
 29348                           
 29349                           ; BSR set to: 57
 29350                           ;gemsecs.c: 321:       if (rxData_l == sizeof(block10) + d) {
 29351   012DB0  500D               	movf	r_protocol@rxData_l^0,w,c
 29352   012DB2  6E2D               	movwf	(btemp+10)^0,c
 29353   012DB4  6A2E               	clrf	(btemp+11)^0,c
 29354   012DB6  5052               	movf	r_protocol@d^0,w,c
 29355   012DB8  6E2B               	movwf	(btemp+8)^0,c
 29356   012DBA  6A2C               	clrf	(btemp+9)^0,c
 29357   012DBC  0E0A               	movlw	10
 29358   012DBE  262B               	addwf	(btemp+8)^0,f,c
 29359   012DC0  0E00               	movlw	0
 29360   012DC2  222C               	addwfc	(btemp+9)^0,f,c
 29361   012DC4  502D               	movf	(btemp+10)^0,w,c
 29362   012DC6  182B               	xorwf	(btemp+8)^0,w,c
 29363   012DC8  E10F               	bnz	l13102
 29364   012DCA  502E               	movf	(btemp+11)^0,w,c
 29365   012DCC  182C               	xorwf	(btemp+9)^0,w,c
 29366   012DCE  A4D8               	btfss	status,2,c
 29367   012DD0  D00B               	goto	l13102
 29368                           
 29369                           ; BSR set to: 57
 29370                           ;gemsecs.c: 322:        V.response.ack[d - 1] = rxData;
 29371                           ;stkvar	_rxData @ sp[(-1)+0]
 29372   012DD2  0E69               	movlw	low (_V+335)
 29373   012DD4  2452               	addwf	r_protocol@d^0,w,c
 29374   012DD6  6ED9               	movwf	fsr2l,c
 29375   012DD8  6ADA               	clrf	fsr2h,c
 29376   012DDA  0E0D               	movlw	high (_V+335)
 29377   012DDC  22DA               	addwfc	fsr2h,f,c
 29378   012DDE  0EFF               	movlw	-1
 29379   012DE0  006F FF8F FFDF     	movff	plusw1,indf2
 29380                           
 29381                           ; BSR set to: 57
 29382                           ;gemsecs.c: 323:        d++;
 29383   012DE6  2A52               	incf	r_protocol@d^0,f,c
 29384   012DE8                     l13102:
 29385                           
 29386                           ; BSR set to: 57
 29387                           ;gemsecs.c: 327:      if (rxData_l <= r_block.length)
 29388   012DE8  500D               	movf	r_protocol@rxData_l^0,w,c
 29389   012DEA  0100               	movlb	0	; () banked
 29390   012DEC  5D86               	subwf	(_r_block+12)& (0+255),w,b
 29391   012DEE  A0D8               	btfss	status,0,c
 29392   012DF0  D00D               	goto	l13106
 29393                           
 29394                           ; BSR set to: 0
 29395                           ;gemsecs.c: 328:       V.r_checksum = run_checksum(rxData, 0);
 29396   012DF2  0E00               	movlw	0
 29397   012DF4  6EE6               	movwf	postinc1,c
 29398                           
 29399                           ;stkvar	_rxData @ sp[(-2)+0]
 29400   012DF6  0EFE               	movlw	-2
 29401   012DF8  50E3               	movf	plusw1,w,c
 29402   012DFA  6EE6               	movwf	postinc1,c
 29403   012DFC  ECB9  F0BE         	call	_run_checksum	;wreg free
 29404   012E00  0060  F08C  FD55   	movff	btemp,_V+315	;volatile
 29405   012E06  0060  F090  FD56   	movff	btemp+1,_V+316	;volatile
 29406   012E0C                     l13106:
 29407                           
 29408                           ;gemsecs.c: 330:      if (rxData_l == r_block.length + 1)
 29409   012E0C  500D               	movf	r_protocol@rxData_l^0,w,c
 29410   012E0E  6E2D               	movwf	(btemp+10)^0,c
 29411   012E10  6A2E               	clrf	(btemp+11)^0,c
 29412   012E12  0100               	movlb	0	; () banked
 29413   012E14  5186               	movf	(_r_block+12)& (0+255),w,b
 29414   012E16  6E2B               	movwf	(btemp+8)^0,c
 29415   012E18  6A2C               	clrf	(btemp+9)^0,c
 29416   012E1A  0E01               	movlw	1
 29417   012E1C  262B               	addwf	(btemp+8)^0,f,c
 29418   012E1E  0E00               	movlw	0
 29419   012E20  222C               	addwfc	(btemp+9)^0,f,c
 29420   012E22  502D               	movf	(btemp+10)^0,w,c
 29421   012E24  182B               	xorwf	(btemp+8)^0,w,c
 29422   012E26  E109               	bnz	l13110
 29423   012E28  502E               	movf	(btemp+11)^0,w,c
 29424   012E2A  182C               	xorwf	(btemp+9)^0,w,c
 29425   012E2C  A4D8               	btfss	status,2,c
 29426   012E2E  D005               	goto	l13110
 29427                           
 29428                           ; BSR set to: 0
 29429                           ;gemsecs.c: 331:       H10[1].checksum = (uint16_t) rxData << 8;
 29430                           ;stkvar	_rxData @ sp[(-1)+0]
 29431   012E30  0EFF               	movlw	-1
 29432   012E32  50E3               	movf	plusw1,w,c
 29433   012E34  0101               	movlb	1	; () banked
 29434   012E36  6F0E               	movwf	(_H10+14)& (0+255),b
 29435   012E38  6B0D               	clrf	(_H10+13)& (0+255),b
 29436   012E3A                     l13110:
 29437                           
 29438                           ;gemsecs.c: 332:      if (rxData_l == r_block.length + 2)
 29439   012E3A  500D               	movf	r_protocol@rxData_l^0,w,c
 29440   012E3C  6E2D               	movwf	(btemp+10)^0,c
 29441   012E3E  6A2E               	clrf	(btemp+11)^0,c
 29442   012E40  0100               	movlb	0	; () banked
 29443   012E42  5186               	movf	(_r_block+12)& (0+255),w,b
 29444   012E44  6E2B               	movwf	(btemp+8)^0,c
 29445   012E46  6A2C               	clrf	(btemp+9)^0,c
 29446   012E48  0E02               	movlw	2
 29447   012E4A  262B               	addwf	(btemp+8)^0,f,c
 29448   012E4C  0E00               	movlw	0
 29449   012E4E  222C               	addwfc	(btemp+9)^0,f,c
 29450   012E50  502D               	movf	(btemp+10)^0,w,c
 29451   012E52  182B               	xorwf	(btemp+8)^0,w,c
 29452   012E54  E10A               	bnz	l13114
 29453   012E56  502E               	movf	(btemp+11)^0,w,c
 29454   012E58  182C               	xorwf	(btemp+9)^0,w,c
 29455   012E5A  A4D8               	btfss	status,2,c
 29456   012E5C  D006               	goto	l13114
 29457                           
 29458                           ; BSR set to: 0
 29459                           ;gemsecs.c: 333:       H10[1].checksum += rxData;
 29460                           ;stkvar	_rxData @ sp[(-1)+0]
 29461   012E5E  0EFF               	movlw	-1
 29462   012E60  50E3               	movf	plusw1,w,c
 29463   012E62  0101               	movlb	1	; () banked
 29464   012E64  270D               	addwf	(_H10+13)& (0+255),f,b
 29465   012E66  0E00               	movlw	0
 29466   012E68  230E               	addwfc	(_H10+14)& (0+255),f,b
 29467   012E6A                     l13114:
 29468                           
 29469                           ;gemsecs.c: 335:      rxData_l++;
 29470   012E6A  2A0D               	incf	r_protocol@rxData_l^0,f,c
 29471                           
 29472                           ;gemsecs.c: 336:      b_block[sizeof(header254) - rxData_l] = rxData;
 29473                           ;stkvar	_rxData @ sp[(-1)+0]
 29474   012E6C  500D               	movf	r_protocol@rxData_l^0,w,c
 29475   012E6E  5C01               	subwf	r_protocol@b_block^0,w,c
 29476   012E70  6E2D               	movwf	(btemp+10)^0,c
 29477   012E72  0E00               	movlw	0
 29478   012E74  5802               	subwfb	(r_protocol@b_block+1)^0,w,c
 29479   012E76  6E2E               	movwf	(btemp+11)^0,c
 29480   012E78  0E01               	movlw	1
 29481   012E7A  242D               	addwf	(btemp+10)^0,w,c
 29482   012E7C  6ED9               	movwf	fsr2l,c
 29483   012E7E  0E01               	movlw	1
 29484   012E80  202E               	addwfc	(btemp+11)^0,w,c
 29485   012E82  6EDA               	movwf	fsr2h,c
 29486   012E84  0EFF               	movlw	-1
 29487   012E86  006F FF8F FFDF     	movff	plusw1,indf2
 29488                           
 29489                           ;gemsecs.c: 337:      if (rxData_l > (r_block.length + 2)) {
 29490   012E8C  500D               	movf	r_protocol@rxData_l^0,w,c
 29491   012E8E  6E2D               	movwf	(btemp+10)^0,c
 29492   012E90  6A2E               	clrf	(btemp+11)^0,c
 29493   012E92  0100               	movlb	0	; () banked
 29494   012E94  5186               	movf	(_r_block+12)& (0+255),w,b
 29495   012E96  6E2B               	movwf	(btemp+8)^0,c
 29496   012E98  6A2C               	clrf	(btemp+9)^0,c
 29497   012E9A  0E02               	movlw	2
 29498   012E9C  262B               	addwf	(btemp+8)^0,f,c
 29499   012E9E  0E00               	movlw	0
 29500   012EA0  222C               	addwfc	(btemp+9)^0,f,c
 29501   012EA2  502D               	movf	(btemp+10)^0,w,c
 29502   012EA4  5C2B               	subwf	(btemp+8)^0,w,c
 29503   012EA6  502C               	movf	(btemp+9)^0,w,c
 29504   012EA8  0A80               	xorlw	128
 29505   012EAA  6E23               	movwf	btemp^0,c
 29506   012EAC  502E               	movf	(btemp+11)^0,w,c
 29507   012EAE  0A80               	xorlw	128
 29508   012EB0  5823               	subwfb	btemp^0,w,c
 29509   012EB2  B0D8               	btfsc	status,0,c
 29510   012EB4  D0E5               	goto	l13188
 29511                           
 29512                           ; BSR set to: 0
 29513                           ;gemsecs.c: 338:       if (V.r_checksum == H10[1].checksum) {
 29514   012EB6  EE23  F155         	lfsr	2,_V+315	;volatile
 29515   012EBA  0101               	movlb	1	; () banked
 29516   012EBC  510D               	movf	(_H10+13)& (0+255),w,b
 29517   012EBE  18DE               	xorwf	postinc2,w,c
 29518   012EC0  E112               	bnz	l13128
 29519   012EC2  510E               	movf	(_H10+14)& (0+255),w,b
 29520   012EC4  18DE               	xorwf	postinc2,w,c
 29521   012EC6  A4D8               	btfss	status,2,c
 29522   012EC8  D00E               	goto	l13128
 29523                           
 29524                           ; BSR set to: 1
 29525                           ;gemsecs.c: 339:        *r_link = LINK_STATE_ACK;
 29526                           ;stkvar	_r_link @ sp[(-1)+-2]
 29527   012ECA  0EFD               	movlw	-3
 29528   012ECC  006F FF8F FFD9     	movff	plusw1,fsr2l
 29529   012ED2  0EFE               	movlw	-2
 29530   012ED4  006F FF8F FFDA     	movff	plusw1,fsr2h
 29531   012EDA  0E03               	movlw	3
 29532   012EDC  6EDF               	movwf	indf2,c
 29533                           
 29534                           ; BSR set to: 1
 29535   012EDE  82BE               	bsf	190,1,c	;volatile
 29536   012EE0  D0CF               	goto	l13188
 29537   012EE2                     l13126:
 29538   012EE2  ECE4  F0BB         	call	_UART1_Read	;wreg free
 29539   012EE6                     l13128:
 29540                           
 29541                           ;gemsecs.c: 342:        while (UART1_is_rx_ready())
 29542   012EE6  EC64  F0C0         	call	_UART1_is_rx_ready	;wreg free
 29543   012EEA  5023               	movf	btemp^0,w,c
 29544   012EEC  A4D8               	btfss	status,2,c
 29545   012EEE  D7F9               	goto	l13126
 29546                           
 29547                           ;gemsecs.c: 344:        WaitMs(500);
 29548   012EF0  0EF4               	movlw	244
 29549   012EF2  6EE6               	movwf	postinc1,c
 29550   012EF4  0E01               	movlw	1
 29551   012EF6  6EE6               	movwf	postinc1,c
 29552   012EF8  EC95  F0BC         	call	_WaitMs	;wreg free
 29553                           
 29554                           ;gemsecs.c: 345:        V.error = LINK_ERROR_CHECKSUM;
 29555   012EFC  0E0F               	movlw	15
 29556   012EFE  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 29557                           
 29558                           ;gemsecs.c: 346:        V.checksum_error++;
 29559   012F04  EE23  F159         	lfsr	2,_V+319	;volatile
 29560   012F08  2ADE               	incf	postinc2,f,c
 29561   012F0A  0E00               	movlw	0
 29562   012F0C  22DD               	addwfc	postdec2,f,c
 29563                           
 29564                           ;gemsecs.c: 347:        V.all_errors++;
 29565   012F0E  EE23  F165         	lfsr	2,_V+331	;volatile
 29566   012F12  2ADE               	incf	postinc2,f,c
 29567   012F14  0E00               	movlw	0
 29568   012F16  22DD               	addwfc	postdec2,f,c
 29569                           
 29570                           ;gemsecs.c: 348:        V.failed_receive = 2;
 29571   012F18  EE23  F168         	lfsr	2,_V+334	;volatile
 29572   012F1C  50DF               	movf	223,w,c
 29573   012F1E  0BF0               	andlw	-16
 29574   012F20  0902               	iorlw	2
 29575   012F22  6EDF               	movwf	223,c
 29576   012F24  D6F4               	goto	l13072
 29577   012F26                     l13142:
 29578                           
 29579                           ;gemsecs.c: 357:   UART1_Write(0x06);
 29580   012F26  0E06               	movlw	6
 29581   012F28  6EE6               	movwf	postinc1,c
 29582   012F2A  EC67  F0BB         	call	_UART1_Write	;wreg free
 29583                           
 29584                           ; BSR set to: 57
 29585                           ;gemsecs.c: 358:   V.stream = H10[1].block.block.stream;
 29586   012F2E  0101               	movlb	1	; () banked
 29587   012F30  5116               	movf	(_H10+22)& (0+255),w,b
 29588   012F32  0B7F               	andlw	127
 29589   012F34  6E2E               	movwf	(btemp+11)^0,c
 29590   012F36  0060  F0B8  FD4D   	movff	btemp+11,_V+307	;volatile
 29591                           
 29592                           ; BSR set to: 1
 29593                           ;gemsecs.c: 359:   V.function = H10[1].block.block.function;
 29594   012F3C  EE23  F14E         	lfsr	2,_V+308	;volatile
 29595   012F40  0060  F457  FFDF   	movff	_H10+21,indf2
 29596                           
 29597                           ; BSR set to: 1
 29598                           ;gemsecs.c: 360:   V.systemb = H10[1].block.block.systemb;
 29599   012F46  EE20  F10F         	lfsr	2,_H10+15
 29600   012F4A  006F FF78  FD45    	movff	postinc2,_V+299	;volatile
 29601   012F50  006F FF78  FD46    	movff	postinc2,_V+300	;volatile
 29602   012F56  006F FF78  FD47    	movff	postinc2,_V+301	;volatile
 29603   012F5C  006F FF74  FD48    	movff	postdec2,_V+302	;volatile
 29604                           
 29605                           ; BSR set to: 1
 29606                           ;gemsecs.c: 361:   V.rbit = H10[1].block.block.rbit;
 29607   012F62  EE23  F167         	lfsr	2,_V+333	;volatile
 29608   012F66  BF18               	btfsc	(_H10+24)& (0+255),7,b
 29609   012F68  D002               	bra	u9385
 29610   012F6A  90DF               	bcf	indf2,0,c
 29611   012F6C  D001               	bra	u9386
 29612   012F6E                     u9385:
 29613   012F6E  80DF               	bsf	indf2,0,c
 29614   012F70                     u9386:
 29615                           
 29616                           ;gemsecs.c: 362:   V.wbit = H10[1].block.block.wbit;
 29617   012F70  EE23  F167         	lfsr	2,_V+333	;volatile
 29618   012F74  0101               	movlb	1	; () banked
 29619   012F76  BF16               	btfsc	(_H10+22)& (0+255),7,b
 29620   012F78  D002               	bra	u9395
 29621   012F7A  92DF               	bcf	indf2,1,c
 29622   012F7C  D001               	bra	u9396
 29623   012F7E                     u9395:
 29624   012F7E  82DF               	bsf	indf2,1,c
 29625   012F80                     u9396:
 29626                           
 29627                           ;gemsecs.c: 363:   V.ebit = H10[1].block.block.ebit;
 29628   012F80  EE23  F167         	lfsr	2,_V+333	;volatile
 29629   012F84  0101               	movlb	1	; () banked
 29630   012F86  BF14               	btfsc	(_H10+20)& (0+255),7,b
 29631   012F88  D002               	bra	u9405
 29632   012F8A  94DF               	bcf	indf2,2,c
 29633   012F8C  D001               	bra	u9406
 29634   012F8E                     u9405:
 29635   012F8E  84DF               	bsf	indf2,2,c
 29636   012F90                     u9406:
 29637                           
 29638                           ;gemsecs.c: 364:   secs_II_monitor_message(V.stream, V.function, 500);
 29639   012F90  0EF4               	movlw	244
 29640   012F92  6EE6               	movwf	postinc1,c
 29641   012F94  0E01               	movlw	1
 29642   012F96  6EE6               	movwf	postinc1,c
 29643   012F98  EE23  F14E         	lfsr	2,_V+308	;volatile
 29644   012F9C  50DF               	movf	indf2,w,c
 29645   012F9E  6EE6               	movwf	postinc1,c
 29646   012FA0  EE23  F14D         	lfsr	2,_V+307	;volatile
 29647   012FA4  50DF               	movf	indf2,w,c
 29648   012FA6  6EE6               	movwf	postinc1,c
 29649   012FA8  EC92  F0AF         	call	_secs_II_monitor_message	;wreg free
 29650                           
 29651                           ;gemsecs.c: 365:   V.g_state = secs_gem_state(V.stream, V.function);
 29652   012FAC  EE23  F14E         	lfsr	2,_V+308	;volatile
 29653   012FB0  50DF               	movf	indf2,w,c
 29654   012FB2  6EE6               	movwf	postinc1,c
 29655   012FB4  EE23  F14D         	lfsr	2,_V+307	;volatile
 29656   012FB8  50DF               	movf	indf2,w,c
 29657   012FBA  6EE6               	movwf	postinc1,c
 29658   012FBC  EC2A  F0A8         	call	_secs_gem_state	;wreg free
 29659   012FC0  0060  F08C  FC1C   	movff	btemp,_V+2	;volatile
 29660                           
 29661                           ;gemsecs.c: 366:   V.failed_receive = 0;
 29662   012FC6  EE23  F168         	lfsr	2,_V+334	;volatile
 29663   012FCA  0EF0               	movlw	-16
 29664   012FCC  16DF               	andwf	223,f,c
 29665                           
 29666                           ;gemsecs.c: 367:   *r_link = LINK_STATE_DONE;
 29667                           ;stkvar	_r_link @ sp[(-1)+-2]
 29668   012FCE  0EFD               	movlw	-3
 29669   012FD0  006F FF8F FFD9     	movff	plusw1,fsr2l
 29670   012FD6  0EFE               	movlw	-2
 29671   012FD8  006F FF8F FFDA     	movff	plusw1,fsr2h
 29672   012FDE  0E04               	movlw	4
 29673   012FE0  6EDF               	movwf	indf2,c
 29674                           
 29675                           ;gemsecs.c: 368:   V.abort = LINK_ERROR_NONE;
 29676   012FE2  0E0A               	movlw	10
 29677   012FE4  006F FFA0  FD50    	movff	wreg,_V+310	;volatile
 29678                           
 29679                           ;gemsecs.c: 370:   break;
 29680   012FEA  D04A               	goto	l13188
 29681   012FEC                     l13166:
 29682                           
 29683                           ;gemsecs.c: 372:   UART1_Write(0x15);
 29684   012FEC  0E15               	movlw	21
 29685   012FEE  6EE6               	movwf	postinc1,c
 29686   012FF0  EC67  F0BB         	call	_UART1_Write	;wreg free
 29687                           
 29688                           ; BSR set to: 57
 29689                           ;gemsecs.c: 373:   *r_link = LINK_STATE_ERROR;
 29690                           ;stkvar	_r_link @ sp[(-1)+-2]
 29691   012FF4  0EFD               	movlw	-3
 29692   012FF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 29693   012FFC  0EFE               	movlw	-2
 29694   012FFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 29695   013004  0E06               	movlw	6
 29696   013006  6EDF               	movwf	indf2,c
 29697                           
 29698                           ; BSR set to: 57
 29699                           ;gemsecs.c: 374:   V.all_errors++;
 29700   013008  EE23  F165         	lfsr	2,_V+331	;volatile
 29701   01300C  2ADE               	incf	postinc2,f,c
 29702   01300E  0E00               	movlw	0
 29703   013010  22DD               	addwfc	postdec2,f,c
 29704                           
 29705                           ;gemsecs.c: 375:   while ((uart1RxCount)) {
 29706   013012  D002               	goto	l13174
 29707   013014                     l13172:
 29708                           
 29709                           ; BSR set to: 57
 29710                           ;gemsecs.c: 376:    UART1_Read();
 29711   013014  ECE4  F0BB         	call	_UART1_Read	;wreg free
 29712   013018                     l13174:
 29713                           
 29714                           ; BSR set to: 57
 29715                           ;gemsecs.c: 375:   while ((uart1RxCount)) {
 29716   013018  5016               	movf	_uart1RxCount^0,w,c	;volatile
 29717   01301A  A4D8               	btfss	status,2,c
 29718   01301C  D7FB               	goto	l13172
 29719                           
 29720                           ; BSR set to: 57
 29721                           ;gemsecs.c: 378:   retry = 3;
 29722   01301E  0E03               	movlw	3
 29723   013020  6E53               	movwf	r_protocol@retry^0,c
 29724                           
 29725                           ;gemsecs.c: 379:   break;
 29726   013022  D02E               	goto	l13188
 29727   013024                     l13178:
 29728                           
 29729                           ;gemsecs.c: 383:   V.failed_receive = 0;
 29730   013024  EE23  F168         	lfsr	2,_V+334	;volatile
 29731   013028  0EF0               	movlw	-16
 29732   01302A  16DF               	andwf	223,f,c
 29733                           
 29734                           ;gemsecs.c: 384:   V.abort = LINK_ERROR_NONE;
 29735   01302C  0E0A               	movlw	10
 29736   01302E  006F FFA0  FD50    	movff	wreg,_V+310	;volatile
 29737   013034  D677               	goto	l13074
 29738   013036                     l13186:
 29739                           
 29740                           ;stkvar	_r_link @ sp[(-1)+-2]
 29741   013036  0EFD               	movlw	-3
 29742   013038  006F FF8F FFD9     	movff	plusw1,fsr2l
 29743   01303E  0EFE               	movlw	-2
 29744   013040  006F FF8F FFDA     	movff	plusw1,fsr2h
 29745   013046  50DF               	movf	indf2,w,c
 29746   013048  6E2D               	movwf	(btemp+10)^0,c
 29747   01304A  6A2E               	clrf	(btemp+11)^0,c
 29748                           
 29749                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 29750                           ; Switch size 1, requested type "simple"
 29751                           ; Number of cases is 1, Range of values is 0 to 0
 29752                           ; switch strategies available:
 29753                           ; Name         Instructions Cycles
 29754                           ; simple_byte            4     3 (average)
 29755                           ;	Chosen strategy is simple_byte
 29756   01304C  502E               	movf	(btemp+11)^0,w,c
 29757   01304E  0A00               	xorlw	0	; case 0
 29758   013050  A4D8               	btfss	status,2,c
 29759   013052  D668               	goto	l13074
 29760                           
 29761                           ; Switch size 1, requested type "simple"
 29762                           ; Number of cases is 7, Range of values is 0 to 6
 29763                           ; switch strategies available:
 29764                           ; Name         Instructions Cycles
 29765                           ; simple_byte           22    12 (average)
 29766                           ;	Chosen strategy is simple_byte
 29767   013054  502D               	movf	(btemp+10)^0,w,c
 29768   013056  0A00               	xorlw	0	; case 0
 29769   013058  B4D8               	btfsc	status,2,c
 29770   01305A  D5E6               	goto	l13038
 29771   01305C  0A01               	xorlw	1	; case 1
 29772   01305E  B4D8               	btfsc	status,2,c
 29773   013060  D615               	goto	l1887
 29774   013062  0A03               	xorlw	3	; case 2
 29775   013064  B4D8               	btfsc	status,2,c
 29776   013066  D62F               	goto	l13060
 29777   013068  0A01               	xorlw	1	; case 3
 29778   01306A  B4D8               	btfsc	status,2,c
 29779   01306C  D75C               	goto	l13142
 29780   01306E  0A07               	xorlw	7	; case 4
 29781   013070  B4D8               	btfsc	status,2,c
 29782   013072  D7D8               	goto	l13178
 29783   013074  0A01               	xorlw	1	; case 5
 29784   013076  B4D8               	btfsc	status,2,c
 29785   013078  D7B9               	goto	l13166
 29786   01307A  0A03               	xorlw	3	; case 6
 29787   01307C  A4D8               	btfss	status,2,c
 29788   01307E  D652               	goto	l13074
 29789   013080                     l13188:
 29790                           
 29791                           ;gemsecs.c: 391:  return *r_link;
 29792                           ;stkvar	_r_link @ sp[(-1)+-2]
 29793   013080  0EFD               	movlw	-3
 29794   013082  006F FF8F FFD9     	movff	plusw1,fsr2l
 29795   013088  0EFE               	movlw	-2
 29796   01308A  006F FF8F FFDA     	movff	plusw1,fsr2h
 29797   013090  50DF               	movf	indf2,w,c
 29798   013092  6E23               	movwf	btemp^0,c
 29799                           
 29800                           ; _r_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
 29801   013094  52E5               	movf	postdec1,f,c
 29802   013096  52E5               	movf	postdec1,f,c
 29803   013098  52E5               	movf	postdec1,f,c
 29804   01309A  0012               	return		;funcret
 29805   01309C                     __end_of_r_protocol:
 29806                           	callstack 0
 29807                           
 29808 ;; *************** function _UART1_Write *****************
 29809 ;; Defined at:
 29810 ;;		line 180 in file "mcc_generated_files/uart1.c"
 29811 ;; Parameters:    Size  Location     Type
 29812 ;;  txData          1  [STACK] unsigned char 
 29813 ;; Auto vars:     Size  Location     Type
 29814 ;;		None
 29815 ;; Return value:  Size  Location     Type
 29816 ;;                  1  [STACK] void 
 29817 ;; Registers used:
 29818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 29819 ;; Tracked objects:
 29820 ;;		On entry : 0/3C
 29821 ;;		On exit  : 3F/39
 29822 ;;		Unchanged: 0/0
 29823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29828 ;;Total ram usage:        0 bytes
 29829 ;; Hardware stack levels used: 1
 29830 ;; Hardware stack levels required when called: 3
 29831 ;; This function calls:
 29832 ;;		Nothing
 29833 ;; This function is called by:
 29834 ;;		_r_protocol
 29835 ;;		_t_protocol
 29836 ;;		_secs_send
 29837 ;; This function uses a reentrant model
 29838 ;;
 29839                           
 29840                           	psect	text18
 29841   0176CE                     __ptext18:
 29842                           	callstack 0
 29843   0176CE                     _UART1_Write:
 29844                           	callstack 25
 29845                           
 29846                           ;mcc_generated_files/uart1.c: 182:  while (0 == uart1TxBufferRemaining) {
 29847                           
 29848                           ;mcc_generated_files/uart1.c: 180: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 181: {;mcc_generated_files/uart1.c: 182:  while (0 == uart1TxBufferRemaining) {
 29849                           
 29850                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29851                           ;incstack = 0
 29852   0176CE  5019               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
 29853   0176D0  B4D8               	btfsc	status,2,c
 29854   0176D2  D7FD               	goto	__ptext18
 29855                           
 29856                           ;mcc_generated_files/uart1.c: 185:  if (0 == PIE3bits.U1TXIE) {
 29857   0176D4  0139               	movlb	57	; () banked
 29858   0176D6  B993               	btfsc	147,4,b	;volatile
 29859   0176D8  D005               	goto	l589
 29860                           
 29861                           ; BSR set to: 57
 29862                           ;mcc_generated_files/uart1.c: 186:   U1TXB = txData;
 29863                           ;stkvar	_txData @ sp[(0)+-1]
 29864   0176DA  0EFF               	movlw	-1
 29865   0176DC  006F FF8F FDEA     	movff	plusw1,15850	;volatile
 29866                           
 29867                           ;mcc_generated_files/uart1.c: 187:  } else {
 29868   0176E2  D011               	goto	l8372
 29869   0176E4                     l589:
 29870                           
 29871                           ; BSR set to: 57
 29872                           ;mcc_generated_files/uart1.c: 188:   PIE3bits.U1TXIE = 0;
 29873   0176E4  9993               	bcf	147,4,b	;volatile
 29874                           
 29875                           ; BSR set to: 57
 29876                           ;mcc_generated_files/uart1.c: 189:   uart1TxBuffer[uart1TxHead++] = txData;
 29877                           ;stkvar	_txData @ sp[(0)+-1]
 29878   0176E6  0E40               	movlw	low _uart1TxBuffer
 29879   0176E8  241B               	addwf	_uart1TxHead^0,w,c	;volatile
 29880   0176EA  6ED9               	movwf	fsr2l,c
 29881   0176EC  6ADA               	clrf	fsr2h,c
 29882   0176EE  0E02               	movlw	high _uart1TxBuffer
 29883   0176F0  22DA               	addwfc	fsr2h,f,c
 29884   0176F2  0EFF               	movlw	-1
 29885   0176F4  006F FF8F FFDF     	movff	plusw1,indf2
 29886                           
 29887                           ; BSR set to: 57
 29888   0176FA  2A1B               	incf	_uart1TxHead^0,f,c	;volatile
 29889                           
 29890                           ; BSR set to: 57
 29891                           ;mcc_generated_files/uart1.c: 190:   if (sizeof(uart1TxBuffer) <= uart1TxHead) {
 29892   0176FC  0E3F               	movlw	63
 29893   0176FE  641B               	cpfsgt	_uart1TxHead^0,c
 29894   017700  D001               	goto	l8370
 29895                           
 29896                           ; BSR set to: 57
 29897                           ;mcc_generated_files/uart1.c: 191:    uart1TxHead = 0;
 29898   017702  6A1B               	clrf	_uart1TxHead^0,c	;volatile
 29899   017704                     l8370:
 29900                           
 29901                           ; BSR set to: 57
 29902                           ;mcc_generated_files/uart1.c: 193:   uart1TxBufferRemaining--;
 29903   017704  0619               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
 29904   017706                     l8372:
 29905                           
 29906                           ; BSR set to: 57
 29907                           ;mcc_generated_files/uart1.c: 195:  PIE3bits.U1TXIE = 1;
 29908   017706  8993               	bsf	147,4,b	;volatile
 29909                           
 29910                           ; BSR set to: 57
 29911   017708  92BE               	bcf	190,1,c	;volatile
 29912                           
 29913                           ; BSR set to: 57
 29914                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
 29915   01770A  52E5               	movf	postdec1,f,c
 29916   01770C  0012               	return		;funcret
 29917   01770E                     __end_of_UART1_Write:
 29918                           	callstack 0
 29919                           
 29920 ;; *************** function _m_protocol *****************
 29921 ;; Defined at:
 29922 ;;		line 54 in file "gemsecs.c"
 29923 ;; Parameters:    Size  Location     Type
 29924 ;;  m_link          2  [STACK] PTR enum E17017
 29925 ;;		 -> V(387), 
 29926 ;; Auto vars:     Size  Location     Type
 29927 ;;  rxData          1  [STACK] unsigned char 
 29928 ;; Return value:  Size  Location     Type
 29929 ;;                  1  [STACK] enum E17295
 29930 ;; Registers used:
 29931 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 29932 ;; Tracked objects:
 29933 ;;		On entry : 0/3C
 29934 ;;		On exit  : 0/0
 29935 ;;		Unchanged: 0/0
 29936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29941 ;;Total ram usage:        0 bytes
 29942 ;; Hardware stack levels used: 1
 29943 ;; Hardware stack levels required when called: 14
 29944 ;; This function calls:
 29945 ;;		_StartTimer
 29946 ;;		_TimerDone
 29947 ;;		_UART1_Read
 29948 ;;		_UART1_is_rx_ready
 29949 ;;		_UART2_Read
 29950 ;;		_UART2_is_rx_ready
 29951 ;;		_WaitMs
 29952 ;;		_run_checksum
 29953 ;;		_secs_II_monitor_message
 29954 ;;		_secs_gem_state
 29955 ;; This function is called by:
 29956 ;;		_main
 29957 ;; This function uses a reentrant model
 29958 ;;
 29959                           
 29960                           	psect	text19
 29961   0120BC                     __ptext19:
 29962                           	callstack 0
 29963   0120BC                     _m_protocol:
 29964                           	callstack 0
 29965                           
 29966                           ; BSR set to: 57
 29967                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29968   0120BC  52E6               	movf	postinc1,f,c
 29969                           
 29970                           ;gemsecs.c: 54: LINK_STATES m_protocol(LINK_STATES *m_link);gemsecs.c: 55: {;gemsecs.c: 
      +                          56:  uint8_t rxData;;gemsecs.c: 57:  static uint8_t rxData_l = 0, *b_block = (uint8_t*) 
      +                          & H254[0];;gemsecs.c: 59:  switch (*m_link) {
 29971                           
 29972                           ;incstack = 0
 29973   0120BE  D326               	goto	l13582
 29974   0120C0                     l13352:
 29975                           
 29976                           ;gemsecs.c: 64:   if (UART1_is_rx_ready()) {
 29977   0120C0  EC64  F0C0         	call	_UART1_is_rx_ready	;wreg free
 29978   0120C4  5023               	movf	btemp^0,w,c
 29979   0120C6  B4D8               	btfsc	status,2,c
 29980   0120C8  D028               	goto	l13366
 29981                           
 29982                           ;gemsecs.c: 65:    rxData = UART1_Read();
 29983   0120CA  ECE4  F0BB         	call	_UART1_Read	;wreg free
 29984                           
 29985                           ;stkvar	_rxData @ sp[(-1)+0]
 29986   0120CE  0EFF               	movlw	-1
 29987   0120D0  0060  F08F  FFE3   	movff	btemp,plusw1
 29988                           
 29989                           ; BSR set to: 57
 29990                           ;gemsecs.c: 66:    if (rxData == 0x05) {
 29991                           ;stkvar	_rxData @ sp[(-1)+0]
 29992   0120D6  0EFF               	movlw	-1
 29993   0120D8  006F FF8C  F023    	movff	plusw1,btemp
 29994   0120DE  0E05               	movlw	5
 29995   0120E0  1823               	xorwf	btemp^0,w,c
 29996   0120E2  A4D8               	btfss	status,2,c
 29997   0120E4  D01A               	goto	l13366
 29998                           
 29999                           ; BSR set to: 57
 30000                           ;gemsecs.c: 68:     V.uart = 1;
 30001   0120E6  0E01               	movlw	1
 30002   0120E8  006F FFA0  FD97    	movff	wreg,_V+381	;volatile
 30003                           
 30004                           ; BSR set to: 57
 30005                           ;gemsecs.c: 69:     StartTimer(TMR_T2, 3000);
 30006   0120EE  0EB8               	movlw	184
 30007   0120F0  6EE6               	movwf	postinc1,c
 30008   0120F2  0E0B               	movlw	11
 30009   0120F4  6EE6               	movwf	postinc1,c
 30010   0120F6  0E02               	movlw	2
 30011   0120F8  6EE6               	movwf	postinc1,c
 30012   0120FA  EC20  F0BC         	call	_StartTimer	;wreg free
 30013                           
 30014                           ;gemsecs.c: 70:     V.error = LINK_ERROR_NONE;
 30015   0120FE  0E0A               	movlw	10
 30016   012100  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 30017                           
 30018                           ;gemsecs.c: 71:     *m_link = LINK_STATE_ENQ;
 30019                           ;stkvar	_m_link @ sp[(-1)+-2]
 30020   012106  0EFD               	movlw	-3
 30021   012108  006F FF8F FFD9     	movff	plusw1,fsr2l
 30022   01210E  0EFE               	movlw	-2
 30023   012110  006F FF8F FFDA     	movff	plusw1,fsr2h
 30024   012116  0E01               	movlw	1
 30025   012118  6EDF               	movwf	indf2,c
 30026   01211A                     l13366:
 30027                           
 30028                           ;gemsecs.c: 74:   if (UART2_is_rx_ready()) {
 30029   01211A  EC61  F0C0         	call	_UART2_is_rx_ready	;wreg free
 30030   01211E  5023               	movf	btemp^0,w,c
 30031   012120  B4D8               	btfsc	status,2,c
 30032   012122  D319               	goto	l13584
 30033                           
 30034                           ;gemsecs.c: 75:    rxData = UART2_Read();
 30035   012124  ECC6  F0BB         	call	_UART2_Read	;wreg free
 30036                           
 30037                           ;stkvar	_rxData @ sp[(-1)+0]
 30038   012128  0EFF               	movlw	-1
 30039   01212A  0060  F08F  FFE3   	movff	btemp,plusw1
 30040                           
 30041                           ; BSR set to: 57
 30042                           ;gemsecs.c: 76:    if (rxData == 0x05) {
 30043                           ;stkvar	_rxData @ sp[(-1)+0]
 30044   012130  0EFF               	movlw	-1
 30045   012132  006F FF8C  F023    	movff	plusw1,btemp
 30046   012138  0E05               	movlw	5
 30047   01213A  1823               	xorwf	btemp^0,w,c
 30048   01213C  A4D8               	btfss	status,2,c
 30049   01213E  D30B               	goto	l13584
 30050                           
 30051                           ; BSR set to: 57
 30052                           ;gemsecs.c: 78:     V.uart = 2;
 30053   012140  0E02               	movlw	2
 30054   012142  006F FFA0  FD97    	movff	wreg,_V+381	;volatile
 30055                           
 30056                           ; BSR set to: 57
 30057                           ;gemsecs.c: 79:     StartTimer(TMR_T2, 3000);
 30058   012148  0EB8               	movlw	184
 30059   01214A  6EE6               	movwf	postinc1,c
 30060   01214C  0E0B               	movlw	11
 30061   01214E  6EE6               	movwf	postinc1,c
 30062   012150  0E02               	movlw	2
 30063   012152  6EE6               	movwf	postinc1,c
 30064   012154  EC20  F0BC         	call	_StartTimer	;wreg free
 30065                           
 30066                           ;gemsecs.c: 80:     V.error = LINK_ERROR_NONE;
 30067   012158  0E0A               	movlw	10
 30068   01215A  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 30069                           
 30070                           ;gemsecs.c: 81:     *m_link = LINK_STATE_ENQ;
 30071                           ;stkvar	_m_link @ sp[(-1)+-2]
 30072   012160  0EFD               	movlw	-3
 30073   012162  006F FF8F FFD9     	movff	plusw1,fsr2l
 30074   012168  0EFE               	movlw	-2
 30075   01216A  006F FF8F FFDA     	movff	plusw1,fsr2h
 30076   012170  0E01               	movlw	1
 30077   012172  D2A0               	goto	L25
 30078   012174                     l1821:
 30079                           
 30080                           ;gemsecs.c: 86:   rxData_l = 0;
 30081   012174  6A0E               	clrf	m_protocol@rxData_l^0,c
 30082                           
 30083                           ;gemsecs.c: 87:   if (TimerDone(TMR_T2)) {
 30084   012176  0E02               	movlw	2
 30085   012178  6EE6               	movwf	postinc1,c
 30086   01217A  ECCB  F0BE         	call	_TimerDone	;wreg free
 30087   01217E  5023               	movf	btemp^0,w,c
 30088   012180  B4D8               	btfsc	status,2,c
 30089   012182  D01E               	goto	l13390
 30090                           
 30091                           ;gemsecs.c: 88:    V.error = LINK_ERROR_T2;
 30092   012184  0E0C               	movlw	12
 30093   012186  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 30094                           
 30095                           ;gemsecs.c: 89:    V.all_errors++;
 30096   01218C  EE23  F165         	lfsr	2,_V+331	;volatile
 30097   012190  2ADE               	incf	postinc2,f,c
 30098   012192  0E00               	movlw	0
 30099   012194  22DD               	addwfc	postdec2,f,c
 30100                           
 30101                           ;gemsecs.c: 90:    V.timer_error++;
 30102   012196  EE23  F15B         	lfsr	2,_V+321	;volatile
 30103   01219A  2ADE               	incf	postinc2,f,c
 30104   01219C  0E00               	movlw	0
 30105   01219E  22DD               	addwfc	postdec2,f,c
 30106                           
 30107                           ;gemsecs.c: 91:    V.failed_receive = 2;
 30108   0121A0  EE23  F168         	lfsr	2,_V+334	;volatile
 30109   0121A4  50DF               	movf	223,w,c
 30110   0121A6  0BF0               	andlw	-16
 30111   0121A8  0902               	iorlw	2
 30112   0121AA  6EDF               	movwf	223,c
 30113                           
 30114                           ;gemsecs.c: 92:    *m_link = LINK_STATE_NAK;
 30115                           ;stkvar	_m_link @ sp[(-1)+-2]
 30116   0121AC  0EFD               	movlw	-3
 30117   0121AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 30118   0121B4  0EFE               	movlw	-2
 30119   0121B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 30120   0121BC  0E05               	movlw	5
 30121   0121BE  D27A               	goto	L25
 30122   0121C0                     l13390:
 30123                           
 30124                           ;gemsecs.c: 110:    if (V.uart == 2 && UART1_is_rx_ready()) {
 30125   0121C0  0063  F65F  FFE8   	movff	_V+381,wreg	;volatile
 30126   0121C6  0A02               	xorlw	2
 30127   0121C8  A4D8               	btfss	status,2,c
 30128   0121CA  D029               	goto	l13404
 30129   0121CC  EC64  F0C0         	call	_UART1_is_rx_ready	;wreg free
 30130   0121D0  5023               	movf	btemp^0,w,c
 30131   0121D2  B4D8               	btfsc	status,2,c
 30132   0121D4  D024               	goto	l13404
 30133                           
 30134                           ;gemsecs.c: 111:     rxData = UART1_Read();
 30135   0121D6  ECE4  F0BB         	call	_UART1_Read	;wreg free
 30136                           
 30137                           ;stkvar	_rxData @ sp[(-1)+0]
 30138   0121DA  0EFF               	movlw	-1
 30139   0121DC  0060  F08F  FFE3   	movff	btemp,plusw1
 30140                           
 30141                           ; BSR set to: 57
 30142                           ;gemsecs.c: 112:     if (rxData == 0x04) {
 30143                           ;stkvar	_rxData @ sp[(-1)+0]
 30144   0121E2  0EFF               	movlw	-1
 30145   0121E4  006F FF8C  F023    	movff	plusw1,btemp
 30146   0121EA  0E04               	movlw	4
 30147   0121EC  1823               	xorwf	btemp^0,w,c
 30148   0121EE  A4D8               	btfss	status,2,c
 30149   0121F0  D016               	goto	l13404
 30150                           
 30151                           ; BSR set to: 57
 30152                           ;gemsecs.c: 113:      StartTimer(TMR_T2, 3000);
 30153   0121F2  0EB8               	movlw	184
 30154   0121F4  6EE6               	movwf	postinc1,c
 30155   0121F6  0E0B               	movlw	11
 30156   0121F8  6EE6               	movwf	postinc1,c
 30157   0121FA  0E02               	movlw	2
 30158   0121FC  6EE6               	movwf	postinc1,c
 30159   0121FE  EC20  F0BC         	call	_StartTimer	;wreg free
 30160                           
 30161                           ;gemsecs.c: 114:      V.error = LINK_ERROR_NONE;
 30162   012202  0E0A               	movlw	10
 30163   012204  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 30164                           
 30165                           ;gemsecs.c: 115:      *m_link = LINK_STATE_EOT;
 30166                           ;stkvar	_m_link @ sp[(-1)+-2]
 30167   01220A  0EFD               	movlw	-3
 30168   01220C  006F FF8F FFD9     	movff	plusw1,fsr2l
 30169   012212  0EFE               	movlw	-2
 30170   012214  006F FF8F FFDA     	movff	plusw1,fsr2h
 30171   01221A  0E02               	movlw	2
 30172   01221C  6EDF               	movwf	indf2,c
 30173   01221E                     l13404:
 30174                           
 30175                           ;gemsecs.c: 118:    if (V.uart == 1 && UART2_is_rx_ready()) {
 30176   01221E  0063  F65F  FFE8   	movff	_V+381,wreg	;volatile
 30177   012224  0A01               	xorlw	1
 30178   012226  A4D8               	btfss	status,2,c
 30179   012228  D296               	goto	l13584
 30180   01222A  EC61  F0C0         	call	_UART2_is_rx_ready	;wreg free
 30181   01222E  5023               	movf	btemp^0,w,c
 30182   012230  B4D8               	btfsc	status,2,c
 30183   012232  D291               	goto	l13584
 30184                           
 30185                           ;gemsecs.c: 119:     rxData = UART2_Read();
 30186   012234  ECC6  F0BB         	call	_UART2_Read	;wreg free
 30187                           
 30188                           ;stkvar	_rxData @ sp[(-1)+0]
 30189   012238  0EFF               	movlw	-1
 30190   01223A  0060  F08F  FFE3   	movff	btemp,plusw1
 30191                           
 30192                           ; BSR set to: 57
 30193                           ;gemsecs.c: 120:     if (rxData == 0x04) {
 30194                           ;stkvar	_rxData @ sp[(-1)+0]
 30195   012240  0EFF               	movlw	-1
 30196   012242  006F FF8C  F023    	movff	plusw1,btemp
 30197   012248  0E04               	movlw	4
 30198   01224A  1823               	xorwf	btemp^0,w,c
 30199   01224C  A4D8               	btfss	status,2,c
 30200   01224E  D283               	goto	l13584
 30201                           
 30202                           ; BSR set to: 57
 30203                           ;gemsecs.c: 121:      StartTimer(TMR_T2, 3000);
 30204   012250  0EB8               	movlw	184
 30205   012252  6EE6               	movwf	postinc1,c
 30206   012254  0E0B               	movlw	11
 30207   012256  6EE6               	movwf	postinc1,c
 30208   012258  0E02               	movlw	2
 30209   01225A  6EE6               	movwf	postinc1,c
 30210   01225C  EC20  F0BC         	call	_StartTimer	;wreg free
 30211                           
 30212                           ;gemsecs.c: 122:      V.error = LINK_ERROR_NONE;
 30213   012260  0E0A               	movlw	10
 30214   012262  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 30215                           
 30216                           ;gemsecs.c: 123:      *m_link = LINK_STATE_EOT;
 30217                           ;stkvar	_m_link @ sp[(-1)+-2]
 30218   012268  0EFD               	movlw	-3
 30219   01226A  006F FF8F FFD9     	movff	plusw1,fsr2l
 30220   012270  0EFE               	movlw	-2
 30221   012272  006F FF8F FFDA     	movff	plusw1,fsr2h
 30222   012278  0E02               	movlw	2
 30223   01227A  D21C               	goto	L25
 30224   01227C                     l13418:
 30225                           
 30226                           ;gemsecs.c: 130:   if (TimerDone(TMR_T2)) {
 30227   01227C  0E02               	movlw	2
 30228   01227E  6EE6               	movwf	postinc1,c
 30229   012280  ECCB  F0BE         	call	_TimerDone	;wreg free
 30230   012284  5023               	movf	btemp^0,w,c
 30231   012286  B4D8               	btfsc	status,2,c
 30232   012288  D00C               	goto	l13428
 30233                           
 30234                           ;gemsecs.c: 131:    V.error = LINK_ERROR_T2;
 30235   01228A  0E0C               	movlw	12
 30236   01228C  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 30237                           
 30238                           ;gemsecs.c: 132:    V.timer_error++;
 30239   012292  EE23  F15B         	lfsr	2,_V+321	;volatile
 30240   012296  2ADE               	incf	postinc2,f,c
 30241   012298  0E00               	movlw	0
 30242   01229A  22DD               	addwfc	postdec2,f,c
 30243                           
 30244                           ;gemsecs.c: 133:    V.all_errors++;
 30245   01229C  EE23  F165         	lfsr	2,_V+331	;volatile
 30246   0122A0  D77C               	goto	L23
 30247   0122A2                     l13428:
 30248                           
 30249                           ;gemsecs.c: 137:    if (V.uart == 1 && UART1_is_rx_ready()) {
 30250   0122A2  0063  F65F  FFE8   	movff	_V+381,wreg	;volatile
 30251   0122A8  0A01               	xorlw	1
 30252   0122AA  A4D8               	btfss	status,2,c
 30253   0122AC  D0D7               	goto	l13486
 30254   0122AE  EC64  F0C0         	call	_UART1_is_rx_ready	;wreg free
 30255   0122B2  5023               	movf	btemp^0,w,c
 30256   0122B4  B4D8               	btfsc	status,2,c
 30257   0122B6  D0D2               	goto	l13486
 30258                           
 30259                           ;gemsecs.c: 138:     rxData = UART1_Read();
 30260   0122B8  ECE4  F0BB         	call	_UART1_Read	;wreg free
 30261                           
 30262                           ;stkvar	_rxData @ sp[(-1)+0]
 30263   0122BC  0EFF               	movlw	-1
 30264   0122BE  0060  F08F  FFE3   	movff	btemp,plusw1
 30265                           
 30266                           ; BSR set to: 57
 30267                           ;gemsecs.c: 139:     if (rxData_l == 0) {
 30268   0122C4  500E               	movf	m_protocol@rxData_l^0,w,c
 30269   0122C6  A4D8               	btfss	status,2,c
 30270   0122C8  D018               	goto	l13444
 30271                           
 30272                           ; BSR set to: 57
 30273                           ;gemsecs.c: 140:      r_block.length = rxData;
 30274                           ;stkvar	_rxData @ sp[(-1)+0]
 30275   0122CA  0EFF               	movlw	-1
 30276   0122CC  006F FF8C  F086    	movff	plusw1,_r_block+12
 30277                           
 30278                           ; BSR set to: 57
 30279                           ;gemsecs.c: 141:      run_checksum(0, 1);
 30280   0122D2  0E01               	movlw	1
 30281   0122D4  6EE6               	movwf	postinc1,c
 30282   0122D6  0E00               	movlw	0
 30283   0122D8  6EE6               	movwf	postinc1,c
 30284   0122DA  ECB9  F0BE         	call	_run_checksum	;wreg free
 30285                           
 30286                           ;gemsecs.c: 142:      rxData_l++;
 30287   0122DE  2A0E               	incf	m_protocol@rxData_l^0,f,c
 30288                           
 30289                           ;gemsecs.c: 143:      b_block[sizeof(header254) - rxData_l] = rxData;
 30290                           ;stkvar	_rxData @ sp[(-1)+0]
 30291   0122E0  500E               	movf	m_protocol@rxData_l^0,w,c
 30292   0122E2  08D6               	sublw	low (_H254+257)
 30293   0122E4  6ED9               	movwf	fsr2l,c
 30294   0122E6  0E00               	movlw	0
 30295   0122E8  A0D8               	btfss	status,0,c
 30296   0122EA  2AE8               	incf	wreg,f,c
 30297   0122EC  080F               	sublw	high (_H254+257)
 30298   0122EE  6EDA               	movwf	fsr2h,c
 30299   0122F0  0EFF               	movlw	-1
 30300   0122F2  006F FF8F FFDF     	movff	plusw1,indf2
 30301                           
 30302                           ;gemsecs.c: 144:     } else {
 30303   0122F8  D0B1               	goto	l13486
 30304   0122FA                     l13444:
 30305                           
 30306                           ; BSR set to: 57
 30307                           ;gemsecs.c: 148:      if (rxData_l <= sizeof(block10))
 30308   0122FA  0E0B               	movlw	11
 30309   0122FC  600E               	cpfslt	m_protocol@rxData_l^0,c
 30310   0122FE  D00C               	goto	l13448
 30311                           
 30312                           ; BSR set to: 57
 30313                           ;gemsecs.c: 149:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
 30314                           ;stkvar	_rxData @ sp[(-1)+0]
 30315   012300  500E               	movf	m_protocol@rxData_l^0,w,c
 30316   012302  0819               	sublw	low (_H10+25)
 30317   012304  6ED9               	movwf	fsr2l,c
 30318   012306  0E00               	movlw	0
 30319   012308  A0D8               	btfss	status,0,c
 30320   01230A  2AE8               	incf	wreg,f,c
 30321   01230C  0801               	sublw	high (_H10+25)
 30322   01230E  6EDA               	movwf	fsr2h,c
 30323   012310  0EFF               	movlw	-1
 30324   012312  006F FF8F FFDF     	movff	plusw1,indf2
 30325   012318                     l13448:
 30326                           
 30327                           ; BSR set to: 57
 30328                           ;gemsecs.c: 150:      if (rxData_l <= r_block.length)
 30329   012318  500E               	movf	m_protocol@rxData_l^0,w,c
 30330   01231A  0100               	movlb	0	; () banked
 30331   01231C  5D86               	subwf	(_r_block+12)& (0+255),w,b
 30332   01231E  A0D8               	btfss	status,0,c
 30333   012320  D00D               	goto	l13452
 30334                           
 30335                           ; BSR set to: 0
 30336                           ;gemsecs.c: 151:       V.r_checksum = run_checksum(rxData, 0);
 30337   012322  0E00               	movlw	0
 30338   012324  6EE6               	movwf	postinc1,c
 30339                           
 30340                           ;stkvar	_rxData @ sp[(-2)+0]
 30341   012326  0EFE               	movlw	-2
 30342   012328  50E3               	movf	plusw1,w,c
 30343   01232A  6EE6               	movwf	postinc1,c
 30344   01232C  ECB9  F0BE         	call	_run_checksum	;wreg free
 30345   012330  0060  F08C  FD55   	movff	btemp,_V+315	;volatile
 30346   012336  0060  F090  FD56   	movff	btemp+1,_V+316	;volatile
 30347   01233C                     l13452:
 30348                           
 30349                           ;gemsecs.c: 153:      if (rxData_l == r_block.length + 1)
 30350   01233C  500E               	movf	m_protocol@rxData_l^0,w,c
 30351   01233E  6E2D               	movwf	(btemp+10)^0,c
 30352   012340  6A2E               	clrf	(btemp+11)^0,c
 30353   012342  0100               	movlb	0	; () banked
 30354   012344  5186               	movf	(_r_block+12)& (0+255),w,b
 30355   012346  6E2B               	movwf	(btemp+8)^0,c
 30356   012348  6A2C               	clrf	(btemp+9)^0,c
 30357   01234A  0E01               	movlw	1
 30358   01234C  262B               	addwf	(btemp+8)^0,f,c
 30359   01234E  0E00               	movlw	0
 30360   012350  222C               	addwfc	(btemp+9)^0,f,c
 30361   012352  502D               	movf	(btemp+10)^0,w,c
 30362   012354  182B               	xorwf	(btemp+8)^0,w,c
 30363   012356  E109               	bnz	l13456
 30364   012358  502E               	movf	(btemp+11)^0,w,c
 30365   01235A  182C               	xorwf	(btemp+9)^0,w,c
 30366   01235C  A4D8               	btfss	status,2,c
 30367   01235E  D005               	goto	l13456
 30368                           
 30369                           ; BSR set to: 0
 30370                           ;gemsecs.c: 154:       H10[1].checksum = (uint16_t) rxData << 8;
 30371                           ;stkvar	_rxData @ sp[(-1)+0]
 30372   012360  0EFF               	movlw	-1
 30373   012362  50E3               	movf	plusw1,w,c
 30374   012364  0101               	movlb	1	; () banked
 30375   012366  6F0E               	movwf	(_H10+14)& (0+255),b
 30376   012368  6B0D               	clrf	(_H10+13)& (0+255),b
 30377   01236A                     l13456:
 30378                           
 30379                           ;gemsecs.c: 155:      if (rxData_l == r_block.length + 2)
 30380   01236A  500E               	movf	m_protocol@rxData_l^0,w,c
 30381   01236C  6E2D               	movwf	(btemp+10)^0,c
 30382   01236E  6A2E               	clrf	(btemp+11)^0,c
 30383   012370  0100               	movlb	0	; () banked
 30384   012372  5186               	movf	(_r_block+12)& (0+255),w,b
 30385   012374  6E2B               	movwf	(btemp+8)^0,c
 30386   012376  6A2C               	clrf	(btemp+9)^0,c
 30387   012378  0E02               	movlw	2
 30388   01237A  262B               	addwf	(btemp+8)^0,f,c
 30389   01237C  0E00               	movlw	0
 30390   01237E  222C               	addwfc	(btemp+9)^0,f,c
 30391   012380  502D               	movf	(btemp+10)^0,w,c
 30392   012382  182B               	xorwf	(btemp+8)^0,w,c
 30393   012384  E10A               	bnz	l13460
 30394   012386  502E               	movf	(btemp+11)^0,w,c
 30395   012388  182C               	xorwf	(btemp+9)^0,w,c
 30396   01238A  A4D8               	btfss	status,2,c
 30397   01238C  D006               	goto	l13460
 30398                           
 30399                           ; BSR set to: 0
 30400                           ;gemsecs.c: 156:       H10[1].checksum += rxData;
 30401                           ;stkvar	_rxData @ sp[(-1)+0]
 30402   01238E  0EFF               	movlw	-1
 30403   012390  50E3               	movf	plusw1,w,c
 30404   012392  0101               	movlb	1	; () banked
 30405   012394  270D               	addwf	(_H10+13)& (0+255),f,b
 30406   012396  0E00               	movlw	0
 30407   012398  230E               	addwfc	(_H10+14)& (0+255),f,b
 30408   01239A                     l13460:
 30409                           
 30410                           ;gemsecs.c: 158:      rxData_l++;
 30411   01239A  2A0E               	incf	m_protocol@rxData_l^0,f,c
 30412                           
 30413                           ;gemsecs.c: 159:      b_block[sizeof(header254) - rxData_l] = rxData;
 30414                           ;stkvar	_rxData @ sp[(-1)+0]
 30415   01239C  500E               	movf	m_protocol@rxData_l^0,w,c
 30416   01239E  08D6               	sublw	low (_H254+257)
 30417   0123A0  6ED9               	movwf	fsr2l,c
 30418   0123A2  0E00               	movlw	0
 30419   0123A4  A0D8               	btfss	status,0,c
 30420   0123A6  2AE8               	incf	wreg,f,c
 30421   0123A8  080F               	sublw	high (_H254+257)
 30422   0123AA  6EDA               	movwf	fsr2h,c
 30423   0123AC  0EFF               	movlw	-1
 30424   0123AE  006F FF8F FFDF     	movff	plusw1,indf2
 30425                           
 30426                           ;gemsecs.c: 160:      if (rxData_l > (r_block.length + 2)) {
 30427   0123B4  500E               	movf	m_protocol@rxData_l^0,w,c
 30428   0123B6  6E2D               	movwf	(btemp+10)^0,c
 30429   0123B8  6A2E               	clrf	(btemp+11)^0,c
 30430   0123BA  0100               	movlb	0	; () banked
 30431   0123BC  5186               	movf	(_r_block+12)& (0+255),w,b
 30432   0123BE  6E2B               	movwf	(btemp+8)^0,c
 30433   0123C0  6A2C               	clrf	(btemp+9)^0,c
 30434   0123C2  0E02               	movlw	2
 30435   0123C4  262B               	addwf	(btemp+8)^0,f,c
 30436   0123C6  0E00               	movlw	0
 30437   0123C8  222C               	addwfc	(btemp+9)^0,f,c
 30438   0123CA  502D               	movf	(btemp+10)^0,w,c
 30439   0123CC  5C2B               	subwf	(btemp+8)^0,w,c
 30440   0123CE  502C               	movf	(btemp+9)^0,w,c
 30441   0123D0  0A80               	xorlw	128
 30442   0123D2  6E23               	movwf	btemp^0,c
 30443   0123D4  502E               	movf	(btemp+11)^0,w,c
 30444   0123D6  0A80               	xorlw	128
 30445   0123D8  5823               	subwfb	btemp^0,w,c
 30446   0123DA  B0D8               	btfsc	status,0,c
 30447   0123DC  D03F               	goto	l13486
 30448                           
 30449                           ; BSR set to: 0
 30450                           ;gemsecs.c: 161:       if (V.r_checksum == H10[1].checksum) {
 30451   0123DE  EE23  F155         	lfsr	2,_V+315	;volatile
 30452   0123E2  0101               	movlb	1	; () banked
 30453   0123E4  510D               	movf	(_H10+13)& (0+255),w,b
 30454   0123E6  18DE               	xorwf	postinc2,w,c
 30455   0123E8  E110               	bnz	l13472
 30456   0123EA  510E               	movf	(_H10+14)& (0+255),w,b
 30457   0123EC  18DE               	xorwf	postinc2,w,c
 30458   0123EE  A4D8               	btfss	status,2,c
 30459   0123F0  D00C               	goto	l13472
 30460                           
 30461                           ; BSR set to: 1
 30462                           ;gemsecs.c: 162:        *m_link = LINK_STATE_ACK;
 30463                           ;stkvar	_m_link @ sp[(-1)+-2]
 30464   0123F2  0EFD               	movlw	-3
 30465   0123F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 30466   0123FA  0EFE               	movlw	-2
 30467   0123FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 30468   012402  0E03               	movlw	3
 30469   012404  D02A               	goto	L24
 30470   012406                     l13470:
 30471   012406  ECE4  F0BB         	call	_UART1_Read	;wreg free
 30472   01240A                     l13472:
 30473                           
 30474                           ;gemsecs.c: 164:        while (UART1_is_rx_ready())
 30475   01240A  EC64  F0C0         	call	_UART1_is_rx_ready	;wreg free
 30476   01240E  5023               	movf	btemp^0,w,c
 30477   012410  A4D8               	btfss	status,2,c
 30478   012412  D7F9               	goto	l13470
 30479                           
 30480                           ;gemsecs.c: 166:        WaitMs(500);
 30481   012414  0EF4               	movlw	244
 30482   012416  6EE6               	movwf	postinc1,c
 30483   012418  0E01               	movlw	1
 30484   01241A  6EE6               	movwf	postinc1,c
 30485   01241C  EC95  F0BC         	call	_WaitMs	;wreg free
 30486                           
 30487                           ;gemsecs.c: 167:        V.error = LINK_ERROR_CHECKSUM;
 30488   012420  0E0F               	movlw	15
 30489   012422  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 30490                           
 30491                           ;gemsecs.c: 168:        V.checksum_error++;
 30492   012428  EE23  F159         	lfsr	2,_V+319	;volatile
 30493   01242C  2ADE               	incf	postinc2,f,c
 30494   01242E  0E00               	movlw	0
 30495   012430  22DD               	addwfc	postdec2,f,c
 30496                           
 30497                           ;gemsecs.c: 169:        V.all_errors++;
 30498   012432  EE23  F165         	lfsr	2,_V+331	;volatile
 30499   012436  2ADE               	incf	postinc2,f,c
 30500   012438  0E00               	movlw	0
 30501   01243A  22DD               	addwfc	postdec2,f,c
 30502                           
 30503                           ;gemsecs.c: 170:        V.failed_receive = 3;
 30504   01243C  EE23  F168         	lfsr	2,_V+334	;volatile
 30505   012440  50DF               	movf	223,w,c
 30506   012442  0BF0               	andlw	-16
 30507   012444  0903               	iorlw	3
 30508   012446  6EDF               	movwf	223,c
 30509                           
 30510                           ;gemsecs.c: 171:        *m_link = LINK_STATE_NAK;
 30511                           ;stkvar	_m_link @ sp[(-1)+-2]
 30512   012448  0EFD               	movlw	-3
 30513   01244A  006F FF8F FFD9     	movff	plusw1,fsr2l
 30514   012450  0EFE               	movlw	-2
 30515   012452  006F FF8F FFDA     	movff	plusw1,fsr2h
 30516   012458  0E05               	movlw	5
 30517   01245A                     L24:
 30518   01245A  6EDF               	movwf	indf2,c
 30519   01245C                     l13486:
 30520                           
 30521                           ;gemsecs.c: 177:    if (V.uart == 2 && UART2_is_rx_ready()) {
 30522   01245C  0063  F65F  FFE8   	movff	_V+381,wreg	;volatile
 30523   012462  0A02               	xorlw	2
 30524   012464  A4D8               	btfss	status,2,c
 30525   012466  D177               	goto	l13584
 30526   012468  EC61  F0C0         	call	_UART2_is_rx_ready	;wreg free
 30527   01246C  5023               	movf	btemp^0,w,c
 30528   01246E  B4D8               	btfsc	status,2,c
 30529   012470  D172               	goto	l13584
 30530                           
 30531                           ;gemsecs.c: 178:     rxData = UART2_Read();
 30532   012472  ECC6  F0BB         	call	_UART2_Read	;wreg free
 30533                           
 30534                           ;stkvar	_rxData @ sp[(-1)+0]
 30535   012476  0EFF               	movlw	-1
 30536   012478  0060  F08F  FFE3   	movff	btemp,plusw1
 30537                           
 30538                           ; BSR set to: 57
 30539                           ;gemsecs.c: 179:     if (rxData_l == 0) {
 30540   01247E  500E               	movf	m_protocol@rxData_l^0,w,c
 30541   012480  A4D8               	btfss	status,2,c
 30542   012482  D018               	goto	l13502
 30543                           
 30544                           ; BSR set to: 57
 30545                           ;gemsecs.c: 180:      r_block.length = rxData;
 30546                           ;stkvar	_rxData @ sp[(-1)+0]
 30547   012484  0EFF               	movlw	-1
 30548   012486  006F FF8C  F086    	movff	plusw1,_r_block+12
 30549                           
 30550                           ; BSR set to: 57
 30551                           ;gemsecs.c: 181:      run_checksum(0, 1);
 30552   01248C  0E01               	movlw	1
 30553   01248E  6EE6               	movwf	postinc1,c
 30554   012490  0E00               	movlw	0
 30555   012492  6EE6               	movwf	postinc1,c
 30556   012494  ECB9  F0BE         	call	_run_checksum	;wreg free
 30557                           
 30558                           ;gemsecs.c: 182:      rxData_l++;
 30559   012498  2A0E               	incf	m_protocol@rxData_l^0,f,c
 30560                           
 30561                           ;gemsecs.c: 183:      b_block[sizeof(header254) - rxData_l] = rxData;
 30562                           ;stkvar	_rxData @ sp[(-1)+0]
 30563   01249A  500E               	movf	m_protocol@rxData_l^0,w,c
 30564   01249C  08D6               	sublw	low (_H254+257)
 30565   01249E  6ED9               	movwf	fsr2l,c
 30566   0124A0  0E00               	movlw	0
 30567   0124A2  A0D8               	btfss	status,0,c
 30568   0124A4  2AE8               	incf	wreg,f,c
 30569   0124A6  080F               	sublw	high (_H254+257)
 30570   0124A8  6EDA               	movwf	fsr2h,c
 30571   0124AA  0EFF               	movlw	-1
 30572   0124AC  006F FF8F FFDF     	movff	plusw1,indf2
 30573                           
 30574                           ;gemsecs.c: 184:     } else {
 30575   0124B2  D151               	goto	l13584
 30576   0124B4                     l13502:
 30577                           
 30578                           ; BSR set to: 57
 30579                           ;gemsecs.c: 188:      if (rxData_l <= sizeof(block10))
 30580   0124B4  0E0B               	movlw	11
 30581   0124B6  600E               	cpfslt	m_protocol@rxData_l^0,c
 30582   0124B8  D00C               	goto	l13506
 30583                           
 30584                           ; BSR set to: 57
 30585                           ;gemsecs.c: 189:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
 30586                           ;stkvar	_rxData @ sp[(-1)+0]
 30587   0124BA  500E               	movf	m_protocol@rxData_l^0,w,c
 30588   0124BC  0819               	sublw	low (_H10+25)
 30589   0124BE  6ED9               	movwf	fsr2l,c
 30590   0124C0  0E00               	movlw	0
 30591   0124C2  A0D8               	btfss	status,0,c
 30592   0124C4  2AE8               	incf	wreg,f,c
 30593   0124C6  0801               	sublw	high (_H10+25)
 30594   0124C8  6EDA               	movwf	fsr2h,c
 30595   0124CA  0EFF               	movlw	-1
 30596   0124CC  006F FF8F FFDF     	movff	plusw1,indf2
 30597   0124D2                     l13506:
 30598                           
 30599                           ; BSR set to: 57
 30600                           ;gemsecs.c: 190:      if (rxData_l <= r_block.length)
 30601   0124D2  500E               	movf	m_protocol@rxData_l^0,w,c
 30602   0124D4  0100               	movlb	0	; () banked
 30603   0124D6  5D86               	subwf	(_r_block+12)& (0+255),w,b
 30604   0124D8  A0D8               	btfss	status,0,c
 30605   0124DA  D00D               	goto	l13510
 30606                           
 30607                           ; BSR set to: 0
 30608                           ;gemsecs.c: 191:       V.r_checksum = run_checksum(rxData, 0);
 30609   0124DC  0E00               	movlw	0
 30610   0124DE  6EE6               	movwf	postinc1,c
 30611                           
 30612                           ;stkvar	_rxData @ sp[(-2)+0]
 30613   0124E0  0EFE               	movlw	-2
 30614   0124E2  50E3               	movf	plusw1,w,c
 30615   0124E4  6EE6               	movwf	postinc1,c
 30616   0124E6  ECB9  F0BE         	call	_run_checksum	;wreg free
 30617   0124EA  0060  F08C  FD55   	movff	btemp,_V+315	;volatile
 30618   0124F0  0060  F090  FD56   	movff	btemp+1,_V+316	;volatile
 30619   0124F6                     l13510:
 30620                           
 30621                           ;gemsecs.c: 193:      if (rxData_l == r_block.length + 1)
 30622   0124F6  500E               	movf	m_protocol@rxData_l^0,w,c
 30623   0124F8  6E2D               	movwf	(btemp+10)^0,c
 30624   0124FA  6A2E               	clrf	(btemp+11)^0,c
 30625   0124FC  0100               	movlb	0	; () banked
 30626   0124FE  5186               	movf	(_r_block+12)& (0+255),w,b
 30627   012500  6E2B               	movwf	(btemp+8)^0,c
 30628   012502  6A2C               	clrf	(btemp+9)^0,c
 30629   012504  0E01               	movlw	1
 30630   012506  262B               	addwf	(btemp+8)^0,f,c
 30631   012508  0E00               	movlw	0
 30632   01250A  222C               	addwfc	(btemp+9)^0,f,c
 30633   01250C  502D               	movf	(btemp+10)^0,w,c
 30634   01250E  182B               	xorwf	(btemp+8)^0,w,c
 30635   012510  E109               	bnz	l13514
 30636   012512  502E               	movf	(btemp+11)^0,w,c
 30637   012514  182C               	xorwf	(btemp+9)^0,w,c
 30638   012516  A4D8               	btfss	status,2,c
 30639   012518  D005               	goto	l13514
 30640                           
 30641                           ; BSR set to: 0
 30642                           ;gemsecs.c: 194:       H10[1].checksum = (uint16_t) rxData << 8;
 30643                           ;stkvar	_rxData @ sp[(-1)+0]
 30644   01251A  0EFF               	movlw	-1
 30645   01251C  50E3               	movf	plusw1,w,c
 30646   01251E  0101               	movlb	1	; () banked
 30647   012520  6F0E               	movwf	(_H10+14)& (0+255),b
 30648   012522  6B0D               	clrf	(_H10+13)& (0+255),b
 30649   012524                     l13514:
 30650                           
 30651                           ;gemsecs.c: 195:      if (rxData_l == r_block.length + 2)
 30652   012524  500E               	movf	m_protocol@rxData_l^0,w,c
 30653   012526  6E2D               	movwf	(btemp+10)^0,c
 30654   012528  6A2E               	clrf	(btemp+11)^0,c
 30655   01252A  0100               	movlb	0	; () banked
 30656   01252C  5186               	movf	(_r_block+12)& (0+255),w,b
 30657   01252E  6E2B               	movwf	(btemp+8)^0,c
 30658   012530  6A2C               	clrf	(btemp+9)^0,c
 30659   012532  0E02               	movlw	2
 30660   012534  262B               	addwf	(btemp+8)^0,f,c
 30661   012536  0E00               	movlw	0
 30662   012538  222C               	addwfc	(btemp+9)^0,f,c
 30663   01253A  502D               	movf	(btemp+10)^0,w,c
 30664   01253C  182B               	xorwf	(btemp+8)^0,w,c
 30665   01253E  E10A               	bnz	l13518
 30666   012540  502E               	movf	(btemp+11)^0,w,c
 30667   012542  182C               	xorwf	(btemp+9)^0,w,c
 30668   012544  A4D8               	btfss	status,2,c
 30669   012546  D006               	goto	l13518
 30670                           
 30671                           ; BSR set to: 0
 30672                           ;gemsecs.c: 196:       H10[1].checksum += rxData;
 30673                           ;stkvar	_rxData @ sp[(-1)+0]
 30674   012548  0EFF               	movlw	-1
 30675   01254A  50E3               	movf	plusw1,w,c
 30676   01254C  0101               	movlb	1	; () banked
 30677   01254E  270D               	addwf	(_H10+13)& (0+255),f,b
 30678   012550  0E00               	movlw	0
 30679   012552  230E               	addwfc	(_H10+14)& (0+255),f,b
 30680   012554                     l13518:
 30681                           
 30682                           ;gemsecs.c: 198:      rxData_l++;
 30683   012554  2A0E               	incf	m_protocol@rxData_l^0,f,c
 30684                           
 30685                           ;gemsecs.c: 199:      b_block[sizeof(header254) - rxData_l] = rxData;
 30686                           ;stkvar	_rxData @ sp[(-1)+0]
 30687   012556  500E               	movf	m_protocol@rxData_l^0,w,c
 30688   012558  08D6               	sublw	low (_H254+257)
 30689   01255A  6ED9               	movwf	fsr2l,c
 30690   01255C  0E00               	movlw	0
 30691   01255E  A0D8               	btfss	status,0,c
 30692   012560  2AE8               	incf	wreg,f,c
 30693   012562  080F               	sublw	high (_H254+257)
 30694   012564  6EDA               	movwf	fsr2h,c
 30695   012566  0EFF               	movlw	-1
 30696   012568  006F FF8F FFDF     	movff	plusw1,indf2
 30697                           
 30698                           ;gemsecs.c: 200:      if (rxData_l > (r_block.length + 2)) {
 30699   01256E  500E               	movf	m_protocol@rxData_l^0,w,c
 30700   012570  6E2D               	movwf	(btemp+10)^0,c
 30701   012572  6A2E               	clrf	(btemp+11)^0,c
 30702   012574  0100               	movlb	0	; () banked
 30703   012576  5186               	movf	(_r_block+12)& (0+255),w,b
 30704   012578  6E2B               	movwf	(btemp+8)^0,c
 30705   01257A  6A2C               	clrf	(btemp+9)^0,c
 30706   01257C  0E02               	movlw	2
 30707   01257E  262B               	addwf	(btemp+8)^0,f,c
 30708   012580  0E00               	movlw	0
 30709   012582  222C               	addwfc	(btemp+9)^0,f,c
 30710   012584  502D               	movf	(btemp+10)^0,w,c
 30711   012586  5C2B               	subwf	(btemp+8)^0,w,c
 30712   012588  502C               	movf	(btemp+9)^0,w,c
 30713   01258A  0A80               	xorlw	128
 30714   01258C  6E23               	movwf	btemp^0,c
 30715   01258E  502E               	movf	(btemp+11)^0,w,c
 30716   012590  0A80               	xorlw	128
 30717   012592  5823               	subwfb	btemp^0,w,c
 30718   012594  B0D8               	btfsc	status,0,c
 30719   012596  D0DF               	goto	l13584
 30720                           
 30721                           ; BSR set to: 0
 30722                           ;gemsecs.c: 201:       if (V.r_checksum == H10[1].checksum) {
 30723   012598  EE23  F155         	lfsr	2,_V+315	;volatile
 30724   01259C  0101               	movlb	1	; () banked
 30725   01259E  510D               	movf	(_H10+13)& (0+255),w,b
 30726   0125A0  18DE               	xorwf	postinc2,w,c
 30727   0125A2  E110               	bnz	l13530
 30728   0125A4  510E               	movf	(_H10+14)& (0+255),w,b
 30729   0125A6  18DE               	xorwf	postinc2,w,c
 30730   0125A8  A4D8               	btfss	status,2,c
 30731   0125AA  D00C               	goto	l13530
 30732                           
 30733                           ; BSR set to: 1
 30734                           ;gemsecs.c: 202:        *m_link = LINK_STATE_ACK;
 30735                           ;stkvar	_m_link @ sp[(-1)+-2]
 30736   0125AC  0EFD               	movlw	-3
 30737   0125AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 30738   0125B4  0EFE               	movlw	-2
 30739   0125B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 30740   0125BC  0E03               	movlw	3
 30741   0125BE  D07A               	goto	L25
 30742   0125C0                     l13528:
 30743   0125C0  ECC6  F0BB         	call	_UART2_Read	;wreg free
 30744   0125C4                     l13530:
 30745                           
 30746                           ;gemsecs.c: 204:        while (UART2_is_rx_ready())
 30747   0125C4  EC61  F0C0         	call	_UART2_is_rx_ready	;wreg free
 30748   0125C8  5023               	movf	btemp^0,w,c
 30749   0125CA  A4D8               	btfss	status,2,c
 30750   0125CC  D7F9               	goto	l13528
 30751                           
 30752                           ;gemsecs.c: 206:        WaitMs(500);
 30753   0125CE  0EF4               	movlw	244
 30754   0125D0  6EE6               	movwf	postinc1,c
 30755   0125D2  0E01               	movlw	1
 30756   0125D4  6EE6               	movwf	postinc1,c
 30757   0125D6  EC95  F0BC         	call	_WaitMs	;wreg free
 30758                           
 30759                           ;gemsecs.c: 207:        V.error = LINK_ERROR_CHECKSUM;
 30760   0125DA  0E0F               	movlw	15
 30761   0125DC  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 30762                           
 30763                           ;gemsecs.c: 208:        V.checksum_error++;
 30764   0125E2  EE23  F159         	lfsr	2,_V+319	;volatile
 30765   0125E6  2ADE               	incf	postinc2,f,c
 30766   0125E8  0E00               	movlw	0
 30767   0125EA  22DD               	addwfc	postdec2,f,c
 30768                           
 30769                           ;gemsecs.c: 209:        V.all_errors++;
 30770   0125EC  EE23  F165         	lfsr	2,_V+331	;volatile
 30771   0125F0  2ADE               	incf	postinc2,f,c
 30772   0125F2  0E00               	movlw	0
 30773   0125F4  22DD               	addwfc	postdec2,f,c
 30774                           
 30775                           ;gemsecs.c: 210:        V.failed_receive = 4;
 30776   0125F6  EE23  F168         	lfsr	2,_V+334	;volatile
 30777   0125FA  50DF               	movf	223,w,c
 30778   0125FC  0BF0               	andlw	-16
 30779   0125FE  0904               	iorlw	4
 30780   012600  D5D4               	goto	L26
 30781   012602                     l13544:
 30782                           
 30783                           ;gemsecs.c: 222:   V.stream = H10[1].block.block.stream;
 30784   012602  0101               	movlb	1	; () banked
 30785   012604  5116               	movf	(_H10+22)& (0+255),w,b
 30786   012606  0B7F               	andlw	127
 30787   012608  6E2E               	movwf	(btemp+11)^0,c
 30788   01260A  0060  F0B8  FD4D   	movff	btemp+11,_V+307	;volatile
 30789                           
 30790                           ; BSR set to: 1
 30791                           ;gemsecs.c: 223:   V.function = H10[1].block.block.function;
 30792   012610  EE23  F14E         	lfsr	2,_V+308	;volatile
 30793   012614  0060  F457  FFDF   	movff	_H10+21,indf2
 30794                           
 30795                           ; BSR set to: 1
 30796                           ;gemsecs.c: 224:   V.systemb = H10[1].block.block.systemb;
 30797   01261A  EE20  F10F         	lfsr	2,_H10+15
 30798   01261E  006F FF78  FD45    	movff	postinc2,_V+299	;volatile
 30799   012624  006F FF78  FD46    	movff	postinc2,_V+300	;volatile
 30800   01262A  006F FF78  FD47    	movff	postinc2,_V+301	;volatile
 30801   012630  006F FF74  FD48    	movff	postdec2,_V+302	;volatile
 30802                           
 30803                           ; BSR set to: 1
 30804                           ;gemsecs.c: 225:   V.rbit = H10[1].block.block.rbit;
 30805   012636  EE23  F167         	lfsr	2,_V+333	;volatile
 30806   01263A  BF18               	btfsc	(_H10+24)& (0+255),7,b
 30807   01263C  D002               	bra	u9965
 30808   01263E  90DF               	bcf	indf2,0,c
 30809   012640  D001               	bra	u9966
 30810   012642                     u9965:
 30811   012642  80DF               	bsf	indf2,0,c
 30812   012644                     u9966:
 30813                           
 30814                           ;gemsecs.c: 226:   V.wbit = H10[1].block.block.wbit;
 30815   012644  EE23  F167         	lfsr	2,_V+333	;volatile
 30816   012648  0101               	movlb	1	; () banked
 30817   01264A  BF16               	btfsc	(_H10+22)& (0+255),7,b
 30818   01264C  D002               	bra	u9975
 30819   01264E  92DF               	bcf	indf2,1,c
 30820   012650  D001               	bra	u9976
 30821   012652                     u9975:
 30822   012652  82DF               	bsf	indf2,1,c
 30823   012654                     u9976:
 30824                           
 30825                           ;gemsecs.c: 227:   V.ebit = H10[1].block.block.ebit;
 30826   012654  EE23  F167         	lfsr	2,_V+333	;volatile
 30827   012658  0101               	movlb	1	; () banked
 30828   01265A  BF14               	btfsc	(_H10+20)& (0+255),7,b
 30829   01265C  D002               	bra	u9985
 30830   01265E  94DF               	bcf	indf2,2,c
 30831   012660  D001               	bra	u9986
 30832   012662                     u9985:
 30833   012662  84DF               	bsf	indf2,2,c
 30834   012664                     u9986:
 30835                           
 30836                           ;gemsecs.c: 228:   V.failed_receive = 0;
 30837   012664  EE23  F168         	lfsr	2,_V+334	;volatile
 30838   012668  0EF0               	movlw	-16
 30839   01266A  16DF               	andwf	223,f,c
 30840                           
 30841                           ;gemsecs.c: 229:   secs_II_monitor_message(V.stream, V.function, 1000);
 30842   01266C  0EE8               	movlw	232
 30843   01266E  6EE6               	movwf	postinc1,c
 30844   012670  0E03               	movlw	3
 30845   012672  6EE6               	movwf	postinc1,c
 30846   012674  EE23  F14E         	lfsr	2,_V+308	;volatile
 30847   012678  50DF               	movf	indf2,w,c
 30848   01267A  6EE6               	movwf	postinc1,c
 30849   01267C  EE23  F14D         	lfsr	2,_V+307	;volatile
 30850   012680  50DF               	movf	indf2,w,c
 30851   012682  6EE6               	movwf	postinc1,c
 30852   012684  EC92  F0AF         	call	_secs_II_monitor_message	;wreg free
 30853                           
 30854                           ;gemsecs.c: 230:   V.g_state = secs_gem_state(V.stream, V.function);
 30855   012688  EE23  F14E         	lfsr	2,_V+308	;volatile
 30856   01268C  50DF               	movf	indf2,w,c
 30857   01268E  6EE6               	movwf	postinc1,c
 30858   012690  EE23  F14D         	lfsr	2,_V+307	;volatile
 30859   012694  50DF               	movf	indf2,w,c
 30860   012696  6EE6               	movwf	postinc1,c
 30861   012698  EC2A  F0A8         	call	_secs_gem_state	;wreg free
 30862   01269C  0060  F08C  FC1C   	movff	btemp,_V+2	;volatile
 30863                           
 30864                           ;gemsecs.c: 231:   *m_link = LINK_STATE_DONE;
 30865                           ;stkvar	_m_link @ sp[(-1)+-2]
 30866   0126A2  0EFD               	movlw	-3
 30867   0126A4  006F FF8F FFD9     	movff	plusw1,fsr2l
 30868   0126AA  0EFE               	movlw	-2
 30869   0126AC  006F FF8F FFDA     	movff	plusw1,fsr2h
 30870   0126B2  0E04               	movlw	4
 30871   0126B4                     L25:
 30872   0126B4  6EDF               	movwf	indf2,c
 30873                           
 30874                           ;gemsecs.c: 234:   break;
 30875   0126B6  D04F               	goto	l13584
 30876   0126B8                     l13564:
 30877                           
 30878                           ;gemsecs.c: 236:   *m_link = LINK_STATE_ERROR;
 30879                           ;stkvar	_m_link @ sp[(-1)+-2]
 30880   0126B8  0EFD               	movlw	-3
 30881   0126BA  006F FF8F FFD9     	movff	plusw1,fsr2l
 30882   0126C0  0EFE               	movlw	-2
 30883   0126C2  006F FF8F FFDA     	movff	plusw1,fsr2h
 30884   0126C8  0E06               	movlw	6
 30885   0126CA  6EDF               	movwf	indf2,c
 30886                           
 30887                           ;gemsecs.c: 237:   V.all_errors++;
 30888   0126CC  EE23  F165         	lfsr	2,_V+331	;volatile
 30889   0126D0  2ADE               	incf	postinc2,f,c
 30890   0126D2  0E00               	movlw	0
 30891   0126D4  22DD               	addwfc	postdec2,f,c
 30892                           
 30893                           ;gemsecs.c: 238:   while ((uart1RxCount)) {
 30894   0126D6  D002               	goto	l13570
 30895   0126D8                     l13568:
 30896                           
 30897                           ;gemsecs.c: 239:    UART1_Read();
 30898   0126D8  ECE4  F0BB         	call	_UART1_Read	;wreg free
 30899   0126DC                     l13570:
 30900                           
 30901                           ;gemsecs.c: 238:   while ((uart1RxCount)) {
 30902   0126DC  5016               	movf	_uart1RxCount^0,w,c	;volatile
 30903   0126DE  B4D8               	btfsc	status,2,c
 30904   0126E0  D003               	goto	l13574
 30905   0126E2  D7FA               	goto	l13568
 30906   0126E4                     l13572:
 30907                           
 30908                           ;gemsecs.c: 242:    UART2_Read();
 30909   0126E4  ECC6  F0BB         	call	_UART2_Read	;wreg free
 30910   0126E8                     l13574:
 30911                           
 30912                           ;gemsecs.c: 241:   while ((uart2RxCount)) {
 30913   0126E8  5010               	movf	_uart2RxCount^0,w,c	;volatile
 30914   0126EA  B4D8               	btfsc	status,2,c
 30915   0126EC  D034               	goto	l13584
 30916   0126EE  D7FA               	goto	l13572
 30917   0126F0                     l13576:
 30918                           
 30919                           ;gemsecs.c: 248:   V.failed_receive = 0;
 30920   0126F0  EE23  F168         	lfsr	2,_V+334	;volatile
 30921   0126F4  0EF0               	movlw	-16
 30922   0126F6  16DF               	andwf	223,f,c
 30923   0126F8                     l13578:
 30924                           
 30925                           ;gemsecs.c: 252:   *m_link = LINK_STATE_IDLE;
 30926                           ;stkvar	_m_link @ sp[(-1)+-2]
 30927   0126F8  0EFD               	movlw	-3
 30928   0126FA  006F FF8F FFD9     	movff	plusw1,fsr2l
 30929   012700  0EFE               	movlw	-2
 30930   012702  006F FF8F FFDA     	movff	plusw1,fsr2h
 30931   012708  6ADF               	clrf	indf2,c
 30932                           
 30933                           ;gemsecs.c: 253:   break;
 30934   01270A  D025               	goto	l13584
 30935   01270C                     l13582:
 30936                           
 30937                           ;stkvar	_m_link @ sp[(-1)+-2]
 30938   01270C  0EFD               	movlw	-3
 30939   01270E  006F FF8F FFD9     	movff	plusw1,fsr2l
 30940   012714  0EFE               	movlw	-2
 30941   012716  006F FF8F FFDA     	movff	plusw1,fsr2h
 30942   01271C  50DF               	movf	indf2,w,c
 30943   01271E  6E2D               	movwf	(btemp+10)^0,c
 30944   012720  6A2E               	clrf	(btemp+11)^0,c
 30945                           
 30946                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30947                           ; Switch size 1, requested type "simple"
 30948                           ; Number of cases is 1, Range of values is 0 to 0
 30949                           ; switch strategies available:
 30950                           ; Name         Instructions Cycles
 30951                           ; simple_byte            4     3 (average)
 30952                           ;	Chosen strategy is simple_byte
 30953   012722  502E               	movf	(btemp+11)^0,w,c
 30954   012724  0A00               	xorlw	0	; case 0
 30955   012726  A4D8               	btfss	status,2,c
 30956   012728  D7E7               	goto	l13578
 30957                           
 30958                           ; Switch size 1, requested type "simple"
 30959                           ; Number of cases is 7, Range of values is 0 to 6
 30960                           ; switch strategies available:
 30961                           ; Name         Instructions Cycles
 30962                           ; simple_byte           22    12 (average)
 30963                           ;	Chosen strategy is simple_byte
 30964   01272A  502D               	movf	(btemp+10)^0,w,c
 30965   01272C  0A00               	xorlw	0	; case 0
 30966   01272E  B4D8               	btfsc	status,2,c
 30967   012730  D4C7               	goto	l13352
 30968   012732  0A01               	xorlw	1	; case 1
 30969   012734  B4D8               	btfsc	status,2,c
 30970   012736  D51E               	goto	l1821
 30971   012738  0A03               	xorlw	3	; case 2
 30972   01273A  B4D8               	btfsc	status,2,c
 30973   01273C  D59F               	goto	l13418
 30974   01273E  0A01               	xorlw	1	; case 3
 30975   012740  B4D8               	btfsc	status,2,c
 30976   012742  D75F               	goto	l13544
 30977   012744  0A07               	xorlw	7	; case 4
 30978   012746  B4D8               	btfsc	status,2,c
 30979   012748  D7D3               	goto	l13576
 30980   01274A  0A01               	xorlw	1	; case 5
 30981   01274C  B4D8               	btfsc	status,2,c
 30982   01274E  D7B4               	goto	l13564
 30983   012750  0A03               	xorlw	3	; case 6
 30984   012752  A4D8               	btfss	status,2,c
 30985   012754  D7D1               	goto	l13578
 30986   012756                     l13584:
 30987                           
 30988                           ;gemsecs.c: 256:  return *m_link;
 30989                           ;stkvar	_m_link @ sp[(-1)+-2]
 30990   012756  0EFD               	movlw	-3
 30991   012758  006F FF8F FFD9     	movff	plusw1,fsr2l
 30992   01275E  0EFE               	movlw	-2
 30993   012760  006F FF8F FFDA     	movff	plusw1,fsr2h
 30994   012766  50DF               	movf	indf2,w,c
 30995   012768  6E23               	movwf	btemp^0,c
 30996                           
 30997                           ; _m_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
 30998   01276A  52E5               	movf	postdec1,f,c
 30999   01276C  52E5               	movf	postdec1,f,c
 31000   01276E  52E5               	movf	postdec1,f,c
 31001   012770  0012               	return		;funcret
 31002   012772                     __end_of_m_protocol:
 31003                           	callstack 0
 31004                           
 31005 ;; *************** function _secs_gem_state *****************
 31006 ;; Defined at:
 31007 ;;		line 1308 in file "gemsecs.c"
 31008 ;; Parameters:    Size  Location     Type
 31009 ;;  stream          1  [STACK] const unsigned char 
 31010 ;;  function        1  [STACK] const unsigned char 
 31011 ;; Auto vars:     Size  Location     Type
 31012 ;;		None
 31013 ;; Return value:  Size  Location     Type
 31014 ;;                  1  [STACK] enum E17003
 31015 ;; Registers used:
 31016 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 31017 ;; Tracked objects:
 31018 ;;		On entry : 0/1
 31019 ;;		On exit  : 0/0
 31020 ;;		Unchanged: 0/0
 31021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31026 ;;Total ram usage:        0 bytes
 31027 ;; Hardware stack levels used: 1
 31028 ;; Hardware stack levels required when called: 13
 31029 ;; This function calls:
 31030 ;;		_StartTimer
 31031 ;;		_TimerDone
 31032 ;;		_format_display_text
 31033 ;;		_sequence_messages
 31034 ;;		_set_display_info
 31035 ;;		_terminal_format
 31036 ;; This function is called by:
 31037 ;;		_m_protocol
 31038 ;;		_r_protocol
 31039 ;; This function uses a reentrant model
 31040 ;;
 31041                           
 31042                           	psect	text20
 31043   015054                     __ptext20:
 31044                           	callstack 0
 31045   015054                     _secs_gem_state:
 31046                           	callstack 16
 31047                           
 31048                           ;gemsecs.c: 1308: GEM_STATES secs_gem_state(const uint8_t stream, const uint8_t function
      +                          );gemsecs.c: 1309: {;gemsecs.c: 1310:  static GEM_STATES block = GEM_STATE_DISABLE;;gems
      +                          ecs.c: 1311:  static GEM_EQUIP equipment = GEM_GENERIC;;gemsecs.c: 1313:  switch (stream
      +                          ) {
 31049                           
 31050                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31051                           ;incstack = 0
 31052   015054  D0C3               	goto	l12594
 31053   015056                     l12490:
 31054                           
 31055                           ;gemsecs.c: 1320:    if (block != GEM_STATE_REMOTE) {
 31056   015056  0E04               	movlw	4
 31057   015058  180A               	xorwf	secs_gem_state@block^0,w,c
 31058   01505A  B4D8               	btfsc	status,2,c
 31059   01505C  D030               	goto	l12510
 31060                           
 31061                           ;gemsecs.c: 1321:     if (TimerDone(TMR_HBIO)) {
 31062   01505E  0E06               	movlw	6
 31063   015060  6EE6               	movwf	postinc1,c
 31064   015062  ECCB  F0BE         	call	_TimerDone	;wreg free
 31065   015066  5023               	movf	btemp^0,w,c
 31066   015068  B4D8               	btfsc	status,2,c
 31067   01506A  D008               	goto	l12496
 31068                           
 31069                           ;gemsecs.c: 1322:      StartTimer(TMR_HBIO, 30000);
 31070   01506C  0E30               	movlw	48
 31071   01506E  6EE6               	movwf	postinc1,c
 31072   015070  0E75               	movlw	117
 31073   015072  6EE6               	movwf	postinc1,c
 31074   015074  0E06               	movlw	6
 31075   015076  6EE6               	movwf	postinc1,c
 31076   015078  EC20  F0BC         	call	_StartTimer	;wreg free
 31077   01507C                     l12496:
 31078                           
 31079                           ;gemsecs.c: 1324:     terminal_format(display_online);
 31080   01507C  0E01               	movlw	1
 31081   01507E  6EE6               	movwf	postinc1,c
 31082   015080  ECC4  F0A2         	call	_terminal_format	;wreg free
 31083                           
 31084                           ; BSR set to: 1
 31085                           ;gemsecs.c: 1325:     format_display_text(V.terminal);
 31086   015084  0E61               	movlw	low (_V+71)
 31087   015086  6EE6               	movwf	postinc1,c
 31088   015088  0E0C               	movlw	high (_V+71)
 31089   01508A  6EE6               	movwf	postinc1,c
 31090   01508C  ECF3  F0AB         	call	_format_display_text	;wreg free
 31091                           
 31092                           ;gemsecs.c: 1326:     V.response.mesgid = 1;
 31093   015090  0E01               	movlw	1
 31094   015092  006F FFA0  FD8A    	movff	wreg,_V+368	;volatile
 31095                           
 31096                           ;gemsecs.c: 1327:     V.sequences++;
 31097   015098  EE23  F163         	lfsr	2,_V+329	;volatile
 31098   01509C  2ADE               	incf	postinc2,f,c
 31099   01509E  0E00               	movlw	0
 31100   0150A0  22DD               	addwfc	postdec2,f,c
 31101                           
 31102                           ;gemsecs.c: 1328:     V.sid = 10;
 31103   0150A2  0E0A               	movlw	10
 31104   0150A4  006F FFA0  FD99    	movff	wreg,_V+383	;volatile
 31105                           
 31106                           ;gemsecs.c: 1329:     sequence_messages(V.sid);
 31107   0150AA  EE23  F199         	lfsr	2,_V+383	;volatile
 31108   0150AE  50DF               	movf	indf2,w,c
 31109   0150B0  6EE6               	movwf	postinc1,c
 31110   0150B2  EC5A  F09D         	call	_sequence_messages	;wreg free
 31111                           
 31112                           ;gemsecs.c: 1330:     set_display_info(DIS_SEQUENCE_M);
 31113   0150B6  0E08               	movlw	8
 31114   0150B8  6EE6               	movwf	postinc1,c
 31115   0150BA  EC48  F0BF         	call	_set_display_info	;wreg free
 31116   0150BE                     l12510:
 31117                           
 31118                           ;gemsecs.c: 1333:    block = GEM_STATE_REMOTE;
 31119   0150BE  0E04               	movlw	4
 31120   0150C0                     L29:
 31121   0150C0  6E0A               	movwf	secs_gem_state@block^0,c
 31122   0150C2                     l12512:
 31123                           
 31124                           ;gemsecs.c: 1334:    V.ticker = 0;
 31125   0150C2  0E00               	movlw	0
 31126   0150C4  D087               	goto	L30
 31127   0150C6                     l12514:
 31128                           
 31129                           ;gemsecs.c: 1342:      equipment = GEM_VII80;
 31130   0150C6  0E01               	movlw	1
 31131   0150C8  D00A               	goto	L28
 31132   0150CA                     l2253:
 31133                           
 31134                           ;gemsecs.c: 1345:      equipment = GEM_GENERIC;
 31135   0150CA  6A09               	clrf	secs_gem_state@equipment^0,c
 31136                           
 31137                           ;gemsecs.c: 1346:      break;
 31138   0150CC  D01E               	goto	l12530
 31139   0150CE                     l12518:
 31140   0150CE  EE23  F16F         	lfsr	2,_V+341	;volatile
 31141   0150D2  50DF               	movf	indf2,w,c
 31142                           
 31143                           ; Switch size 1, requested type "simple"
 31144                           ; Number of cases is 1, Range of values is 73 to 73
 31145                           ; switch strategies available:
 31146                           ; Name         Instructions Cycles
 31147                           ; simple_byte            4     3 (average)
 31148                           ;	Chosen strategy is simple_byte
 31149   0150D4  0A49               	xorlw	73	; case 73
 31150   0150D6  B4D8               	btfsc	status,2,c
 31151   0150D8  D7F6               	goto	l12514
 31152   0150DA  D7F7               	goto	l2253
 31153   0150DC                     l12520:
 31154                           
 31155                           ;gemsecs.c: 1353:      equipment = GEM_E220;
 31156   0150DC  0E02               	movlw	2
 31157   0150DE                     L28:
 31158   0150DE  6E09               	movwf	secs_gem_state@equipment^0,c
 31159                           
 31160                           ;gemsecs.c: 1354:      break;
 31161   0150E0  D014               	goto	l12530
 31162   0150E2                     l12524:
 31163   0150E2  EE23  F16F         	lfsr	2,_V+341	;volatile
 31164   0150E6  50DF               	movf	indf2,w,c
 31165                           
 31166                           ; Switch size 1, requested type "simple"
 31167                           ; Number of cases is 2, Range of values is 50 to 53
 31168                           ; switch strategies available:
 31169                           ; Name         Instructions Cycles
 31170                           ; simple_byte            7     4 (average)
 31171                           ;	Chosen strategy is simple_byte
 31172   0150E8  0A32               	xorlw	50	; case 50
 31173   0150EA  B4D8               	btfsc	status,2,c
 31174   0150EC  D7F7               	goto	l12520
 31175   0150EE  0A07               	xorlw	7	; case 53
 31176   0150F0  B4D8               	btfsc	status,2,c
 31177   0150F2  D7F4               	goto	l12520
 31178   0150F4  D7EA               	goto	l2253
 31179   0150F6                     l12528:
 31180   0150F6  EE23  F16E         	lfsr	2,_V+340	;volatile
 31181   0150FA  50DF               	movf	indf2,w,c
 31182                           
 31183                           ; Switch size 1, requested type "simple"
 31184                           ; Number of cases is 2, Range of values is 69 to 86
 31185                           ; switch strategies available:
 31186                           ; Name         Instructions Cycles
 31187                           ; simple_byte            7     4 (average)
 31188                           ;	Chosen strategy is simple_byte
 31189   0150FC  0A45               	xorlw	69	; case 69
 31190   0150FE  B4D8               	btfsc	status,2,c
 31191   015100  D7F0               	goto	l12524
 31192   015102  0A13               	xorlw	19	; case 86
 31193   015104  B4D8               	btfsc	status,2,c
 31194   015106  D7E3               	goto	l12518
 31195   015108  D7E0               	goto	l2253
 31196   01510A                     l12530:
 31197                           
 31198                           ;gemsecs.c: 1365:    if (block != GEM_STATE_REMOTE) {
 31199   01510A  0E04               	movlw	4
 31200   01510C  180A               	xorwf	secs_gem_state@block^0,w,c
 31201   01510E  B4D8               	btfsc	status,2,c
 31202   015110  D7D8               	goto	l12512
 31203                           
 31204                           ;gemsecs.c: 1366:     terminal_format(display_online);
 31205   015112  0E01               	movlw	1
 31206   015114  6EE6               	movwf	postinc1,c
 31207   015116  ECC4  F0A2         	call	_terminal_format	;wreg free
 31208                           
 31209                           ; BSR set to: 1
 31210                           ;gemsecs.c: 1367:     format_display_text(V.terminal);
 31211   01511A  0E61               	movlw	low (_V+71)
 31212   01511C  6EE6               	movwf	postinc1,c
 31213   01511E  0E0C               	movlw	high (_V+71)
 31214   015120  6EE6               	movwf	postinc1,c
 31215   015122  ECF3  F0AB         	call	_format_display_text	;wreg free
 31216                           
 31217                           ;gemsecs.c: 1368:     V.response.mesgid = 1;
 31218   015126  0E01               	movlw	1
 31219   015128  006F FFA0  FD8A    	movff	wreg,_V+368	;volatile
 31220                           
 31221                           ;gemsecs.c: 1369:     V.sequences++;
 31222   01512E  EE23  F163         	lfsr	2,_V+329	;volatile
 31223   015132  2ADE               	incf	postinc2,f,c
 31224   015134  0E00               	movlw	0
 31225   015136  22DD               	addwfc	postdec2,f,c
 31226                           
 31227                           ;gemsecs.c: 1370:     V.sid = 11;
 31228   015138  0E0B               	movlw	11
 31229   01513A  006F FFA0  FD99    	movff	wreg,_V+383	;volatile
 31230                           
 31231                           ;gemsecs.c: 1371:     sequence_messages(V.sid);
 31232   015140  EE23  F199         	lfsr	2,_V+383	;volatile
 31233   015144  50DF               	movf	indf2,w,c
 31234   015146  6EE6               	movwf	postinc1,c
 31235   015148  EC5A  F09D         	call	_sequence_messages	;wreg free
 31236                           
 31237                           ;gemsecs.c: 1372:     set_display_info(DIS_SEQUENCE_M);
 31238   01514C  0E08               	movlw	8
 31239   01514E  6EE6               	movwf	postinc1,c
 31240   015150  EC48  F0BF         	call	_set_display_info	;wreg free
 31241                           
 31242                           ;gemsecs.c: 1373:     block = GEM_STATE_COMM;
 31243   015154  0E01               	movlw	1
 31244   015156  D7B4               	goto	L29
 31245   015158                     l12550:
 31246                           
 31247                           ;gemsecs.c: 1378:    if (block != GEM_STATE_REMOTE)
 31248   015158  0E04               	movlw	4
 31249   01515A  180A               	xorwf	secs_gem_state@block^0,w,c
 31250   01515C  B4D8               	btfsc	status,2,c
 31251   01515E  D002               	goto	l12554
 31252   015160                     u9050:
 31253                           
 31254                           ;gemsecs.c: 1379:     block = GEM_STATE_COMM;
 31255   015160  0E01               	movlw	1
 31256   015162  6E0A               	movwf	secs_gem_state@block^0,c
 31257   015164                     l12554:
 31258                           
 31259                           ;gemsecs.c: 1380:    V.ticker = 15;
 31260   015164  0E0F               	movlw	15
 31261   015166  D036               	goto	L30
 31262   015168                     l12556:
 31263                           
 31264                           ;gemsecs.c: 1386:    block = GEM_STATE_OFFLINE;
 31265   015168  0E02               	movlw	2
 31266   01516A  D7AA               	goto	L29
 31267   01516C                     l12560:
 31268                           
 31269                           ;gemsecs.c: 1393:    block = GEM_STATE_ONLINE;
 31270   01516C  0E03               	movlw	3
 31271   01516E  D7A8               	goto	L29
 31272   015170                     l12564:
 31273                           
 31274                           ;gemsecs.c: 1397:    if (block == GEM_STATE_DISABLE) {
 31275   015170  500A               	movf	secs_gem_state@block^0,w,c
 31276   015172  B4D8               	btfsc	status,2,c
 31277   015174  D7F5               	goto	u9050
 31278   015176  D03E               	goto	l12596
 31279   015178                     l12572:
 31280                           
 31281                           ;stkvar	_function @ sp[(0)+-2]
 31282   015178  0EFE               	movlw	-2
 31283   01517A  50E3               	movf	plusw1,w,c
 31284                           
 31285                           ; Switch size 1, requested type "simple"
 31286                           ; Number of cases is 5, Range of values is 2 to 18
 31287                           ; switch strategies available:
 31288                           ; Name         Instructions Cycles
 31289                           ; simple_byte           16     9 (average)
 31290                           ;	Chosen strategy is simple_byte
 31291   01517C  0A02               	xorlw	2	; case 2
 31292   01517E  B4D8               	btfsc	status,2,c
 31293   015180  D76A               	goto	l12490
 31294   015182  0A0F               	xorlw	15	; case 13
 31295   015184  B4D8               	btfsc	status,2,c
 31296   015186  D7B7               	goto	l12528
 31297   015188  0A03               	xorlw	3	; case 14
 31298   01518A  B4D8               	btfsc	status,2,c
 31299   01518C  D7E5               	goto	l12550
 31300   01518E  0A1E               	xorlw	30	; case 16
 31301   015190  B4D8               	btfsc	status,2,c
 31302   015192  D7EA               	goto	l12556
 31303   015194  0A02               	xorlw	2	; case 18
 31304   015196  B4D8               	btfsc	status,2,c
 31305   015198  D7E9               	goto	l12560
 31306   01519A  D7EA               	goto	l12564
 31307   01519C                     l12574:
 31308                           
 31309                           ;gemsecs.c: 1407:    V.alarm = function;
 31310                           ;stkvar	_function @ sp[(0)+-2]
 31311   01519C  0EFE               	movlw	-2
 31312   01519E  006F FF8C  F02E    	movff	plusw1,btemp+11
 31313   0151A4  0060  F0B8  FD53   	movff	btemp+11,_V+313	;volatile
 31314                           
 31315                           ;gemsecs.c: 1408:    break;
 31316   0151AA  D024               	goto	l12596
 31317   0151AC                     l12578:
 31318                           
 31319                           ;gemsecs.c: 1414:    V.alarm = function;
 31320                           ;stkvar	_function @ sp[(0)+-2]
 31321   0151AC  0EFE               	movlw	-2
 31322   0151AE  006F FF8C  F02E    	movff	plusw1,btemp+11
 31323   0151B4  0060  F0B8  FD53   	movff	btemp+11,_V+313	;volatile
 31324                           
 31325                           ;gemsecs.c: 1415:    if (V.ticker != 45)
 31326   0151BA  0063  F66F  FFE8   	movff	_V+385,wreg	;volatile
 31327   0151C0  0A2D               	xorlw	45
 31328   0151C2  A4D8               	btfss	status,2,c
 31329   0151C4  D7CF               	goto	l12554
 31330   0151C6  D016               	goto	l12596
 31331   0151C8                     l12586:
 31332                           
 31333                           ;gemsecs.c: 1421:   if (block == GEM_STATE_DISABLE) {
 31334   0151C8  500A               	movf	secs_gem_state@block^0,w,c
 31335   0151CA  A4D8               	btfss	status,2,c
 31336   0151CC  D013               	goto	l12596
 31337                           
 31338                           ;gemsecs.c: 1422:    block = GEM_STATE_COMM;
 31339   0151CE  0E01               	movlw	1
 31340   0151D0  6E0A               	movwf	secs_gem_state@block^0,c
 31341                           
 31342                           ;gemsecs.c: 1423:    V.ticker = 45;
 31343   0151D2  0E2D               	movlw	45
 31344   0151D4                     L30:
 31345   0151D4  006F FFA0  FD9B    	movff	wreg,_V+385	;volatile
 31346   0151DA  D00C               	goto	l12596
 31347   0151DC                     l12594:
 31348                           
 31349                           ;stkvar	_stream @ sp[(0)+-1]
 31350   0151DC  0EFF               	movlw	-1
 31351   0151DE  50E3               	movf	plusw1,w,c
 31352                           
 31353                           ; Switch size 1, requested type "simple"
 31354                           ; Number of cases is 3, Range of values is 1 to 9
 31355                           ; switch strategies available:
 31356                           ; Name         Instructions Cycles
 31357                           ; simple_byte           10     6 (average)
 31358                           ;	Chosen strategy is simple_byte
 31359   0151E0  0A01               	xorlw	1	; case 1
 31360   0151E2  B4D8               	btfsc	status,2,c
 31361   0151E4  D7C9               	goto	l12572
 31362   0151E6  0A04               	xorlw	4	; case 5
 31363   0151E8  B4D8               	btfsc	status,2,c
 31364   0151EA  D7D8               	goto	l12574
 31365   0151EC  0A0C               	xorlw	12	; case 9
 31366   0151EE  B4D8               	btfsc	status,2,c
 31367   0151F0  D7DD               	goto	l12578
 31368   0151F2  D7EA               	goto	l12586
 31369   0151F4                     l12596:
 31370                           
 31371                           ;gemsecs.c: 1428:  V.e_types = equipment;
 31372   0151F4  EE23  F01D         	lfsr	2,_V+3	;volatile
 31373   0151F8  0060  F027  FFDF   	movff	secs_gem_state@equipment,indf2
 31374                           
 31375                           ;gemsecs.c: 1429:  return(block);
 31376   0151FE  C00A  F023         	movff	secs_gem_state@block,btemp
 31377                           
 31378                           ; _secs_gem_state: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2
      +                          , argsize = 2, vargsize = 0
 31379   015202  52E5               	movf	postdec1,f,c
 31380   015204  52E5               	movf	postdec1,f,c
 31381   015206  0012               	return		;funcret
 31382   015208                     __end_of_secs_gem_state:
 31383                           	callstack 0
 31384                           
 31385 ;; *************** function _terminal_format *****************
 31386 ;; Defined at:
 31387 ;;		line 651 in file "gemsecs.c"
 31388 ;; Parameters:    Size  Location     Type
 31389 ;;  t_format        1  [STACK] enum E17472
 31390 ;; Auto vars:     Size  Location     Type
 31391 ;;		None
 31392 ;; Return value:  Size  Location     Type
 31393 ;;                  1  [STACK] void 
 31394 ;; Registers used:
 31395 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 31396 ;; Tracked objects:
 31397 ;;		On entry : 0/0
 31398 ;;		On exit  : 3F/1
 31399 ;;		Unchanged: 0/0
 31400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31405 ;;Total ram usage:        0 bytes
 31406 ;; Hardware stack levels used: 1
 31407 ;; Hardware stack levels required when called: 12
 31408 ;; This function calls:
 31409 ;;		_sprintf
 31410 ;; This function is called by:
 31411 ;;		_secs_II_message
 31412 ;;		_secs_gem_state
 31413 ;; This function uses a reentrant model
 31414 ;;
 31415                           
 31416                           	psect	text21
 31417   014588                     __ptext21:
 31418                           	callstack 0
 31419   014588                     _terminal_format:
 31420                           	callstack 16
 31421                           
 31422                           ;gemsecs.c: 651: void terminal_format(DISPLAY_TYPES t_format);gemsecs.c: 652: {;gemsecs.
      +                          c: 653:  switch (t_format) {
 31423                           
 31424                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31425                           ;incstack = 0
 31426   014588  D11C               	goto	l12202
 31427   01458A                     l12192:
 31428                           
 31429                           ;gemsecs.c: 655:   sprintf(V.terminal, msg0,
 31430   01458A  0EEF               	movlw	low STR_3
 31431   01458C  6EE6               	movwf	postinc1,c
 31432   01458E  0EFF               	movlw	high STR_3
 31433   014590  6EE6               	movwf	postinc1,c
 31434   014592  EE23  F159         	lfsr	2,_V+319	;volatile
 31435   014596  006F FF78  F02D    	movff	postinc2,btemp+10
 31436   01459C  006F FF74  F02E    	movff	postdec2,btemp+11
 31437   0145A2  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 31438   0145A8  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 31439   0145AE  EE23  F167         	lfsr	2,_V+333	;volatile
 31440   0145B2  38DF               	swapf	223,w,c
 31441   0145B4  0B0F               	andlw	15
 31442   0145B6  6EE6               	movwf	postinc1,c
 31443   0145B8  0E00               	movlw	0
 31444   0145BA  6EE6               	movwf	postinc1,c
 31445   0145BC  EE23  F020         	lfsr	2,_V+6	;volatile
 31446   0145C0  50DF               	movf	indf2,w,c
 31447   0145C2  6EE6               	movwf	postinc1,c
 31448   0145C4  0E00               	movlw	0
 31449   0145C6  6EE6               	movwf	postinc1,c
 31450   0145C8  EE23  F168         	lfsr	2,_V+334	;volatile
 31451   0145CC  50DF               	movf	223,w,c
 31452   0145CE  0B0F               	andlw	15
 31453   0145D0  6EE6               	movwf	postinc1,c
 31454   0145D2  0E00               	movlw	0
 31455   0145D4  6EE6               	movwf	postinc1,c
 31456   0145D6  EE23  F01F         	lfsr	2,_V+5	;volatile
 31457   0145DA  50DF               	movf	indf2,w,c
 31458   0145DC  6EE6               	movwf	postinc1,c
 31459   0145DE  0E00               	movlw	0
 31460   0145E0  6EE6               	movwf	postinc1,c
 31461   0145E2  EE23  F165         	lfsr	2,_V+331	;volatile
 31462   0145E6  006F FF78  F02D    	movff	postinc2,btemp+10
 31463   0145EC  006F FF74  F02E    	movff	postdec2,btemp+11
 31464   0145F2  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 31465   0145F8  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 31466   0145FE  0E77               	movlw	low _msg0
 31467   014600  6EE6               	movwf	postinc1,c
 31468   014602  0EFB               	movlw	high _msg0
 31469   014604  6EE6               	movwf	postinc1,c
 31470   014606  0E61               	movlw	low (_V+71)
 31471   014608  6EE6               	movwf	postinc1,c
 31472   01460A  0E0C               	movlw	high (_V+71)
 31473   01460C  6EE6               	movwf	postinc1,c
 31474   01460E  0E12               	movlw	18
 31475   014610  6EE6               	movwf	postinc1,c
 31476   014612  EC29  F0B2         	call	_sprintf	;wreg free
 31477                           
 31478                           ;gemsecs.c: 657:   break;
 31479   014616  D0E8               	goto	l2005
 31480   014618                     l12194:
 31481                           
 31482                           ;gemsecs.c: 659:   sprintf(V.terminal, msg1,
 31483   014618  0EEF               	movlw	low STR_3
 31484   01461A  6EE6               	movwf	postinc1,c
 31485   01461C  0EFF               	movlw	high STR_3
 31486   01461E  6EE6               	movwf	postinc1,c
 31487   014620  EE23  F159         	lfsr	2,_V+319	;volatile
 31488   014624  006F FF78  F02D    	movff	postinc2,btemp+10
 31489   01462A  006F FF74  F02E    	movff	postdec2,btemp+11
 31490   014630  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 31491   014636  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 31492   01463C  EE23  F167         	lfsr	2,_V+333	;volatile
 31493   014640  38DF               	swapf	223,w,c
 31494   014642  0B0F               	andlw	15
 31495   014644  6EE6               	movwf	postinc1,c
 31496   014646  0E00               	movlw	0
 31497   014648  6EE6               	movwf	postinc1,c
 31498   01464A  EE23  F020         	lfsr	2,_V+6	;volatile
 31499   01464E  50DF               	movf	indf2,w,c
 31500   014650  6EE6               	movwf	postinc1,c
 31501   014652  0E00               	movlw	0
 31502   014654  6EE6               	movwf	postinc1,c
 31503   014656  EE23  F168         	lfsr	2,_V+334	;volatile
 31504   01465A  50DF               	movf	223,w,c
 31505   01465C  0B0F               	andlw	15
 31506   01465E  6EE6               	movwf	postinc1,c
 31507   014660  0E00               	movlw	0
 31508   014662  6EE6               	movwf	postinc1,c
 31509   014664  EE23  F01F         	lfsr	2,_V+5	;volatile
 31510   014668  50DF               	movf	indf2,w,c
 31511   01466A  6EE6               	movwf	postinc1,c
 31512   01466C  0E00               	movlw	0
 31513   01466E  6EE6               	movwf	postinc1,c
 31514   014670  EE23  F165         	lfsr	2,_V+331	;volatile
 31515   014674  006F FF78  F02D    	movff	postinc2,btemp+10
 31516   01467A  006F FF74  F02E    	movff	postdec2,btemp+11
 31517   014680  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 31518   014686  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 31519   01468C  0ED0               	movlw	low _msg1
 31520   01468E  6EE6               	movwf	postinc1,c
 31521   014690  0EFB               	movlw	high _msg1
 31522   014692  6EE6               	movwf	postinc1,c
 31523   014694  0E61               	movlw	low (_V+71)
 31524   014696  6EE6               	movwf	postinc1,c
 31525   014698  0E0C               	movlw	high (_V+71)
 31526   01469A  6EE6               	movwf	postinc1,c
 31527   01469C  0E12               	movlw	18
 31528   01469E  6EE6               	movwf	postinc1,c
 31529   0146A0  EC29  F0B2         	call	_sprintf	;wreg free
 31530                           
 31531                           ;gemsecs.c: 661:   break;
 31532   0146A4  D0A1               	goto	l2005
 31533   0146A6                     l12196:
 31534                           
 31535                           ;gemsecs.c: 663:   sprintf(V.terminal, msg2,
 31536   0146A6  0EEF               	movlw	low STR_3
 31537   0146A8  6EE6               	movwf	postinc1,c
 31538   0146AA  0EFF               	movlw	high STR_3
 31539   0146AC  6EE6               	movwf	postinc1,c
 31540   0146AE  EE23  F159         	lfsr	2,_V+319	;volatile
 31541   0146B2  006F FF78  F02D    	movff	postinc2,btemp+10
 31542   0146B8  006F FF74  F02E    	movff	postdec2,btemp+11
 31543   0146BE  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 31544   0146C4  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 31545   0146CA  EE23  F167         	lfsr	2,_V+333	;volatile
 31546   0146CE  38DF               	swapf	223,w,c
 31547   0146D0  0B0F               	andlw	15
 31548   0146D2  6EE6               	movwf	postinc1,c
 31549   0146D4  0E00               	movlw	0
 31550   0146D6  6EE6               	movwf	postinc1,c
 31551   0146D8  EE23  F020         	lfsr	2,_V+6	;volatile
 31552   0146DC  50DF               	movf	indf2,w,c
 31553   0146DE  6EE6               	movwf	postinc1,c
 31554   0146E0  0E00               	movlw	0
 31555   0146E2  6EE6               	movwf	postinc1,c
 31556   0146E4  EE23  F168         	lfsr	2,_V+334	;volatile
 31557   0146E8  50DF               	movf	223,w,c
 31558   0146EA  0B0F               	andlw	15
 31559   0146EC  6EE6               	movwf	postinc1,c
 31560   0146EE  0E00               	movlw	0
 31561   0146F0  6EE6               	movwf	postinc1,c
 31562   0146F2  EE23  F01F         	lfsr	2,_V+5	;volatile
 31563   0146F6  50DF               	movf	indf2,w,c
 31564   0146F8  6EE6               	movwf	postinc1,c
 31565   0146FA  0E00               	movlw	0
 31566   0146FC  6EE6               	movwf	postinc1,c
 31567   0146FE  EE23  F165         	lfsr	2,_V+331	;volatile
 31568   014702  006F FF78  F02D    	movff	postinc2,btemp+10
 31569   014708  006F FF74  F02E    	movff	postdec2,btemp+11
 31570   01470E  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 31571   014714  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 31572   01471A  0E28               	movlw	low _msg2
 31573   01471C  6EE6               	movwf	postinc1,c
 31574   01471E  0EFC               	movlw	high _msg2
 31575   014720  6EE6               	movwf	postinc1,c
 31576   014722  0E61               	movlw	low (_V+71)
 31577   014724  6EE6               	movwf	postinc1,c
 31578   014726  0E0C               	movlw	high (_V+71)
 31579   014728  6EE6               	movwf	postinc1,c
 31580   01472A  0E12               	movlw	18
 31581   01472C  6EE6               	movwf	postinc1,c
 31582   01472E  EC29  F0B2         	call	_sprintf	;wreg free
 31583                           
 31584                           ;gemsecs.c: 665:   break;
 31585   014732  D05A               	goto	l2005
 31586   014734                     l12198:
 31587                           
 31588                           ;gemsecs.c: 667:   sprintf(V.terminal, msg99,
 31589   014734  0EEF               	movlw	low STR_3
 31590   014736  6EE6               	movwf	postinc1,c
 31591   014738  0EFF               	movlw	high STR_3
 31592   01473A  6EE6               	movwf	postinc1,c
 31593   01473C  EE23  F159         	lfsr	2,_V+319	;volatile
 31594   014740  006F FF78  F02D    	movff	postinc2,btemp+10
 31595   014746  006F FF74  F02E    	movff	postdec2,btemp+11
 31596   01474C  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 31597   014752  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 31598   014758  EE23  F167         	lfsr	2,_V+333	;volatile
 31599   01475C  38DF               	swapf	223,w,c
 31600   01475E  0B0F               	andlw	15
 31601   014760  6EE6               	movwf	postinc1,c
 31602   014762  0E00               	movlw	0
 31603   014764  6EE6               	movwf	postinc1,c
 31604   014766  EE23  F020         	lfsr	2,_V+6	;volatile
 31605   01476A  50DF               	movf	indf2,w,c
 31606   01476C  6EE6               	movwf	postinc1,c
 31607   01476E  0E00               	movlw	0
 31608   014770  6EE6               	movwf	postinc1,c
 31609   014772  EE23  F168         	lfsr	2,_V+334	;volatile
 31610   014776  50DF               	movf	223,w,c
 31611   014778  0B0F               	andlw	15
 31612   01477A  6EE6               	movwf	postinc1,c
 31613   01477C  0E00               	movlw	0
 31614   01477E  6EE6               	movwf	postinc1,c
 31615   014780  EE23  F01F         	lfsr	2,_V+5	;volatile
 31616   014784  50DF               	movf	indf2,w,c
 31617   014786  6EE6               	movwf	postinc1,c
 31618   014788  0E00               	movlw	0
 31619   01478A  6EE6               	movwf	postinc1,c
 31620   01478C  EE23  F165         	lfsr	2,_V+331	;volatile
 31621   014790  006F FF78  F02D    	movff	postinc2,btemp+10
 31622   014796  006F FF74  F02E    	movff	postdec2,btemp+11
 31623   01479C  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 31624   0147A2  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 31625   0147A8  0E7E               	movlw	low _msg99
 31626   0147AA  6EE6               	movwf	postinc1,c
 31627   0147AC  0EFC               	movlw	high _msg99
 31628   0147AE  6EE6               	movwf	postinc1,c
 31629   0147B0  0E61               	movlw	low (_V+71)
 31630   0147B2  6EE6               	movwf	postinc1,c
 31631   0147B4  0E0C               	movlw	high (_V+71)
 31632   0147B6  6EE6               	movwf	postinc1,c
 31633   0147B8  0E12               	movlw	18
 31634   0147BA  6EE6               	movwf	postinc1,c
 31635   0147BC  EC29  F0B2         	call	_sprintf	;wreg free
 31636                           
 31637                           ;gemsecs.c: 669:   break;
 31638   0147C0  D013               	goto	l2005
 31639   0147C2                     l12202:
 31640                           
 31641                           ;stkvar	_t_format @ sp[(0)+-1]
 31642   0147C2  0EFF               	movlw	-1
 31643   0147C4  50E3               	movf	plusw1,w,c
 31644   0147C6  6E2D               	movwf	(btemp+10)^0,c
 31645   0147C8  6A2E               	clrf	(btemp+11)^0,c
 31646                           
 31647                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31648                           ; Switch size 1, requested type "simple"
 31649                           ; Number of cases is 1, Range of values is 0 to 0
 31650                           ; switch strategies available:
 31651                           ; Name         Instructions Cycles
 31652                           ; simple_byte            4     3 (average)
 31653                           ;	Chosen strategy is simple_byte
 31654   0147CA  502E               	movf	(btemp+11)^0,w,c
 31655   0147CC  0A00               	xorlw	0	; case 0
 31656   0147CE  A4D8               	btfss	status,2,c
 31657   0147D0  D7B1               	goto	l12198
 31658                           
 31659                           ; Switch size 1, requested type "simple"
 31660                           ; Number of cases is 3, Range of values is 0 to 2
 31661                           ; switch strategies available:
 31662                           ; Name         Instructions Cycles
 31663                           ; simple_byte           10     6 (average)
 31664                           ;	Chosen strategy is simple_byte
 31665   0147D2  502D               	movf	(btemp+10)^0,w,c
 31666   0147D4  0A00               	xorlw	0	; case 0
 31667   0147D6  B4D8               	btfsc	status,2,c
 31668   0147D8  D6D8               	goto	l12192
 31669   0147DA  0A01               	xorlw	1	; case 1
 31670   0147DC  B4D8               	btfsc	status,2,c
 31671   0147DE  D71C               	goto	l12194
 31672   0147E0  0A03               	xorlw	3	; case 2
 31673   0147E2  B4D8               	btfsc	status,2,c
 31674   0147E4  D760               	goto	l12196
 31675   0147E6  D7A6               	goto	l12198
 31676   0147E8                     l2005:
 31677                           
 31678                           ; BSR set to: 1
 31679                           ; _terminal_format: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
 31680   0147E8  52E5               	movf	postdec1,f,c
 31681   0147EA  0012               	return		;funcret
 31682   0147EC                     __end_of_terminal_format:
 31683                           	callstack 0
 31684                           
 31685 ;; *************** function _sequence_messages *****************
 31686 ;; Defined at:
 31687 ;;		line 587 in file "gemsecs.c"
 31688 ;; Parameters:    Size  Location     Type
 31689 ;;  sid             1  [STACK] const unsigned char 
 31690 ;; Auto vars:     Size  Location     Type
 31691 ;;		None
 31692 ;; Return value:  Size  Location     Type
 31693 ;;                  1  [STACK] _Bool 
 31694 ;; Registers used:
 31695 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, t
      +blptrh, tblptru, prodl, prodh
 31696 ;; Tracked objects:
 31697 ;;		On entry : 0/0
 31698 ;;		On exit  : 0/0
 31699 ;;		Unchanged: 0/0
 31700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31705 ;;Total ram usage:        0 bytes
 31706 ;; Hardware stack levels used: 1
 31707 ;; Hardware stack levels required when called: 4
 31708 ;; This function calls:
 31709 ;;		_StartTimer
 31710 ;; This function is called by:
 31711 ;;		_secs_II_message
 31712 ;;		_secs_gem_state
 31713 ;; This function uses a reentrant model
 31714 ;;
 31715                           
 31716                           	psect	text22
 31717   013AB4                     __ptext22:
 31718                           	callstack 0
 31719   013AB4                     _sequence_messages:
 31720                           	callstack 24
 31721                           
 31722                           ;gemsecs.c: 587: _Bool sequence_messages(const uint8_t sid);gemsecs.c: 588: {;gemsecs.c:
      +                           589:  V.msg_error = MSG_ERROR_NONE;
 31723                           
 31724                           ; BSR set to: 1
 31725                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31726                           ;incstack = 0
 31727   013AB4  0E00               	movlw	0
 31728   013AB6  006F FFA0  FD51    	movff	wreg,_V+311	;volatile
 31729                           
 31730                           ;gemsecs.c: 590:  switch (sid) {
 31731   013ABC  D164               	goto	l8552
 31732   013ABE                     l1991:
 31733                           
 31734                           ;gemsecs.c: 592:   S[0].stack = 6;
 31735   013ABE  0E06               	movlw	6
 31736   013AC0  006F FFA0  F92F    	movff	wreg,_S+45
 31737                           
 31738                           ;gemsecs.c: 593:   S[0].message = HC33[1];
 31739   013AC6  0E53               	movlw	low (_HC33+36)
 31740   013AC8  6EF6               	movwf	tblptrl,c
 31741   013ACA  0EFB               	movlw	high (_HC33+36)
 31742   013ACC  6EF7               	movwf	tblptrh,c
 31743   013ACE                     	if	0	;tblptru may be non-zero
 31744   013ACE                     	endif
 31745   013ACE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 31746   013ACE  0E00               	movlw	low (__pmediumconst shr (0+16))
 31747   013AD0  6EF8               	movwf	tblptru,c
 31748   013AD2                     	endif
 31749   013AD2  EE22  F102         	lfsr	2,_S
 31750   013AD6  0E23               	movlw	35
 31751   013AD8                     u5420:
 31752   013AD8  0009               	tblrd		*+
 31753   013ADA  006F FFD7 FFDE     	movff	tablat,postinc2
 31754   013AE0  06E8               	decf	wreg,f,c
 31755   013AE2  E2FA               	bc	u5420
 31756                           
 31757                           ;gemsecs.c: 594:   S[1].message = HC33[1];
 31758   013AE4  0E53               	movlw	low (_HC33+36)
 31759   013AE6  6EF6               	movwf	tblptrl,c
 31760   013AE8  0EFB               	movlw	high (_HC33+36)
 31761   013AEA  6EF7               	movwf	tblptrh,c
 31762   013AEC                     	if	0	;tblptru may be non-zero
 31763   013AEC                     	endif
 31764   013AEC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 31765   013AEC  0E00               	movlw	low (__pmediumconst shr (0+16))
 31766   013AEE  6EF8               	movwf	tblptru,c
 31767   013AF0                     	endif
 31768   013AF0  EE22  F130         	lfsr	2,_S+46
 31769   013AF4  0E23               	movlw	35
 31770   013AF6                     u5430:
 31771   013AF6  0009               	tblrd		*+
 31772   013AF8  006F FFD7 FFDE     	movff	tablat,postinc2
 31773   013AFE  06E8               	decf	wreg,f,c
 31774   013B00  E2FA               	bc	u5430
 31775                           
 31776                           ;gemsecs.c: 595:   S[2].message = HC33[1];
 31777   013B02  0E53               	movlw	low (_HC33+36)
 31778   013B04  6EF6               	movwf	tblptrl,c
 31779   013B06  0EFB               	movlw	high (_HC33+36)
 31780   013B08  6EF7               	movwf	tblptrh,c
 31781   013B0A                     	if	0	;tblptru may be non-zero
 31782   013B0A                     	endif
 31783   013B0A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 31784   013B0A  0E00               	movlw	low (__pmediumconst shr (0+16))
 31785   013B0C  6EF8               	movwf	tblptru,c
 31786   013B0E                     	endif
 31787   013B0E  EE22  F15E         	lfsr	2,_S+92
 31788   013B12  0E23               	movlw	35
 31789   013B14                     u5440:
 31790   013B14  0009               	tblrd		*+
 31791   013B16  006F FFD7 FFDE     	movff	tablat,postinc2
 31792   013B1C  06E8               	decf	wreg,f,c
 31793   013B1E  E2FA               	bc	u5440
 31794                           
 31795                           ;gemsecs.c: 596:   S[3].message = HC33[0];
 31796   013B20  0E2F               	movlw	low _HC33
 31797   013B22  6EF6               	movwf	tblptrl,c
 31798   013B24                     	if	1	;There is more than 1 active tblptr byte
 31799   013B24  0EFB               	movlw	high _HC33
 31800   013B26  6EF7               	movwf	tblptrh,c
 31801   013B28                     	endif
 31802   013B28                     	if	1	;There are 3 active tblptr bytes
 31803   013B28  0E00               	movlw	low (_HC33 shr (0+16))
 31804   013B2A  6EF8               	movwf	tblptru,c
 31805   013B2C                     	endif
 31806   013B2C  EE22  F18C         	lfsr	2,_S+138
 31807   013B30  0E23               	movlw	35
 31808   013B32                     u5450:
 31809   013B32  0009               	tblrd		*+
 31810   013B34  006F FFD7 FFDE     	movff	tablat,postinc2
 31811   013B3A  06E8               	decf	wreg,f,c
 31812   013B3C  E2FA               	bc	u5450
 31813                           
 31814                           ;gemsecs.c: 597:   S[4].message = HC33[0];
 31815   013B3E  0E2F               	movlw	low _HC33
 31816   013B40  6EF6               	movwf	tblptrl,c
 31817   013B42                     	if	1	;There is more than 1 active tblptr byte
 31818   013B42  0EFB               	movlw	high _HC33
 31819   013B44  6EF7               	movwf	tblptrh,c
 31820   013B46                     	endif
 31821   013B46                     	if	1	;There are 3 active tblptr bytes
 31822   013B46  0E00               	movlw	low (_HC33 shr (0+16))
 31823   013B48  6EF8               	movwf	tblptru,c
 31824   013B4A                     	endif
 31825   013B4A  EE22  F1BA         	lfsr	2,_S+184
 31826   013B4E  0E23               	movlw	35
 31827   013B50                     u5460:
 31828   013B50  0009               	tblrd		*+
 31829   013B52  006F FFD7 FFDE     	movff	tablat,postinc2
 31830   013B58  06E8               	decf	wreg,f,c
 31831   013B5A  E2FA               	bc	u5460
 31832                           
 31833                           ;gemsecs.c: 598:   S[5].message = HC33[0];
 31834   013B5C  0E2F               	movlw	low _HC33
 31835   013B5E  6EF6               	movwf	tblptrl,c
 31836   013B60                     	if	1	;There is more than 1 active tblptr byte
 31837   013B60  0EFB               	movlw	high _HC33
 31838   013B62  6EF7               	movwf	tblptrh,c
 31839   013B64                     	endif
 31840   013B64                     	if	1	;There are 3 active tblptr bytes
 31841   013B64  0E00               	movlw	low (_HC33 shr (0+16))
 31842   013B66  6EF8               	movwf	tblptru,c
 31843   013B68                     	endif
 31844   013B68  EE22  F1E8         	lfsr	2,_S+230
 31845   013B6C  0E23               	movlw	35
 31846   013B6E                     u5470:
 31847   013B6E  0009               	tblrd		*+
 31848   013B70  006F FFD7 FFDE     	movff	tablat,postinc2
 31849   013B76  06E8               	decf	wreg,f,c
 31850   013B78  E2FA               	bc	u5470
 31851                           
 31852                           ;gemsecs.c: 600:   S[0].message.data[0] = 0x01;
 31853   013B7A  0E01               	movlw	1
 31854   013B7C  006F FFA0  F904    	movff	wreg,_S+2
 31855                           
 31856                           ;gemsecs.c: 601:   S[1].message.data[0] = 0x02;
 31857   013B82  0E02               	movlw	2
 31858   013B84  006F FFA0  F932    	movff	wreg,_S+48
 31859                           
 31860                           ;gemsecs.c: 602:   S[2].message.data[0] = 0x03;
 31861   013B8A  0E03               	movlw	3
 31862   013B8C  006F FFA0  F960    	movff	wreg,_S+94
 31863                           
 31864                           ;gemsecs.c: 603:   S[3].message.data[0] = 0x01;
 31865   013B92  0E01               	movlw	1
 31866   013B94  006F FFA0  F98E    	movff	wreg,_S+140
 31867                           
 31868                           ;gemsecs.c: 604:   S[4].message.data[0] = 0x02;
 31869   013B9A  0E02               	movlw	2
 31870   013B9C  006F FFA0  F9BC    	movff	wreg,_S+186
 31871                           
 31872                           ;gemsecs.c: 605:   S[5].message.data[0] = 0x03;
 31873   013BA2  0E03               	movlw	3
 31874   013BA4  006F FFA0  F9EA    	movff	wreg,_S+232
 31875                           
 31876                           ;gemsecs.c: 607:   S[0].delay = 10000;
 31877   013BAA  0E10               	movlw	16
 31878   013BAC  006F FFA0  F92D    	movff	wreg,_S+43
 31879   013BB2  0E27               	movlw	39
 31880   013BB4  006F FFA0  F92E    	movff	wreg,_S+44
 31881                           
 31882                           ;gemsecs.c: 608:   S[1].delay = 10000;
 31883   013BBA  0E10               	movlw	16
 31884   013BBC  006F FFA0  F95B    	movff	wreg,_S+89
 31885   013BC2  0E27               	movlw	39
 31886   013BC4  006F FFA0  F95C    	movff	wreg,_S+90
 31887                           
 31888                           ;gemsecs.c: 609:   S[2].delay = 10000;
 31889   013BCA  0E10               	movlw	16
 31890   013BCC  006F FFA0  F989    	movff	wreg,_S+135
 31891   013BD2  0E27               	movlw	39
 31892   013BD4  006F FFA0  F98A    	movff	wreg,_S+136
 31893                           
 31894                           ;gemsecs.c: 610:   S[3].delay = 10000;
 31895   013BDA  0E10               	movlw	16
 31896   013BDC  006F FFA0  F9B7    	movff	wreg,_S+181
 31897   013BE2  0E27               	movlw	39
 31898   013BE4  006F FFA0  F9B8    	movff	wreg,_S+182
 31899                           
 31900                           ;gemsecs.c: 611:   S[4].delay = 10000;
 31901   013BEA  0E10               	movlw	16
 31902   013BEC  006F FFA0  F9E5    	movff	wreg,_S+227
 31903   013BF2  0E27               	movlw	39
 31904   013BF4  006F FFA0  F9E6    	movff	wreg,_S+228
 31905                           
 31906                           ;gemsecs.c: 612:   S[5].delay = 10000;
 31907   013BFA  0E10               	movlw	16
 31908   013BFC  006F FFA0  FA13    	movff	wreg,_S+273
 31909   013C02  0E27               	movlw	39
 31910   013C04  006F FFA0  FA14    	movff	wreg,_S+274
 31911                           
 31912                           ;gemsecs.c: 614:   S[0].block.header = (uint8_t*) & S[0].message;
 31913   013C0A  0E02               	movlw	low _S
 31914   013C0C  006F FFA0  F926    	movff	wreg,_S+36
 31915   013C12  0E09               	movlw	high _S
 31916   013C14  006F FFA0  F927    	movff	wreg,_S+37
 31917                           
 31918                           ;gemsecs.c: 615:   S[0].block.length = sizeof(header33);
 31919   013C1A  0E24               	movlw	36
 31920   013C1C  006F FFA0  F928    	movff	wreg,_S+38
 31921                           
 31922                           ;gemsecs.c: 616:   S[1].block.header = (uint8_t*) & S[1].message;
 31923   013C22  0E30               	movlw	low (_S+46)
 31924   013C24  006F FFA0  F954    	movff	wreg,_S+82
 31925   013C2A  0E09               	movlw	high (_S+46)
 31926   013C2C  006F FFA0  F955    	movff	wreg,_S+83
 31927                           
 31928                           ;gemsecs.c: 617:   S[1].block.length = sizeof(header33);
 31929   013C32  0E24               	movlw	36
 31930   013C34  006F FFA0  F956    	movff	wreg,_S+84
 31931                           
 31932                           ;gemsecs.c: 618:   S[2].block.header = (uint8_t*) & S[2].message;
 31933   013C3A  0E5E               	movlw	low (_S+92)
 31934   013C3C  006F FFA0  F982    	movff	wreg,_S+128
 31935   013C42  0E09               	movlw	high (_S+92)
 31936   013C44  006F FFA0  F983    	movff	wreg,_S+129
 31937                           
 31938                           ;gemsecs.c: 619:   S[2].block.length = sizeof(header33);
 31939   013C4A  0E24               	movlw	36
 31940   013C4C  006F FFA0  F984    	movff	wreg,_S+130
 31941                           
 31942                           ;gemsecs.c: 620:   S[3].block.header = (uint8_t*) & S[3].message;
 31943   013C52  0E8C               	movlw	low (_S+138)
 31944   013C54  006F FFA0  F9B0    	movff	wreg,_S+174
 31945   013C5A  0E09               	movlw	high (_S+138)
 31946   013C5C  006F FFA0  F9B1    	movff	wreg,_S+175
 31947                           
 31948                           ;gemsecs.c: 621:   S[3].block.length = sizeof(header33);
 31949   013C62  0E24               	movlw	36
 31950   013C64  006F FFA0  F9B2    	movff	wreg,_S+176
 31951                           
 31952                           ;gemsecs.c: 622:   S[4].block.header = (uint8_t*) & S[4].message;
 31953   013C6A  0EBA               	movlw	low (_S+184)
 31954   013C6C  006F FFA0  F9DE    	movff	wreg,_S+220
 31955   013C72  0E09               	movlw	high (_S+184)
 31956   013C74  006F FFA0  F9DF    	movff	wreg,_S+221
 31957                           
 31958                           ;gemsecs.c: 623:   S[4].block.length = sizeof(header33);
 31959   013C7A  0E24               	movlw	36
 31960   013C7C  006F FFA0  F9E0    	movff	wreg,_S+222
 31961                           
 31962                           ;gemsecs.c: 624:   S[5].block.header = (uint8_t*) & S[5].message;
 31963   013C82  0EE8               	movlw	low (_S+230)
 31964   013C84  006F FFA0  FA0C    	movff	wreg,_S+266
 31965   013C8A  0E09               	movlw	high (_S+230)
 31966   013C8C  006F FFA0  FA0D    	movff	wreg,_S+267
 31967                           
 31968                           ;gemsecs.c: 625:   S[5].block.length = sizeof(header33);
 31969   013C92  0E24               	movlw	36
 31970   013C94  006F FFA0  FA0E    	movff	wreg,_S+268
 31971                           
 31972                           ;gemsecs.c: 626:   V.stack = S[0].stack;
 31973   013C9A  0062  F4BC  F02E   	movff	_S+45,btemp+11
 31974   013CA0  EE23  F169         	lfsr	2,_V+335	;volatile
 31975   013CA4  50DF               	movf	223,w,c
 31976   013CA6  182E               	xorwf	(btemp+11)^0,w,c
 31977   013CA8  0BF8               	andlw	-8
 31978   013CAA  182E               	xorwf	(btemp+11)^0,w,c
 31979   013CAC  6EDF               	movwf	223,c
 31980                           
 31981                           ;gemsecs.c: 627:   StartTimer(TMR_HBIO, S[V.stack - 1].delay);
 31982   013CAE  EE23  F169         	lfsr	2,_V+335	;volatile
 31983   013CB2  50DF               	movf	223,w,c
 31984   013CB4  0B07               	andlw	7
 31985   013CB6  0D2E               	mullw	46
 31986   013CB8  0EFF               	movlw	low (_S+65533)
 31987   013CBA  24F3               	addwf	243,w,c
 31988   013CBC  6ED9               	movwf	fsr2l,c
 31989   013CBE  0E08               	movlw	high (_S+65533)
 31990   013CC0  20F4               	addwfc	prodh,w,c
 31991   013CC2  6EDA               	movwf	fsr2h,c
 31992   013CC4  006F FF78  F02D    	movff	postinc2,btemp+10
 31993   013CCA  006F FF74  F02E    	movff	postdec2,btemp+11
 31994   013CD0  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 31995   013CD6  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 31996   013CDC  0E06               	movlw	6
 31997   013CDE  6EE6               	movwf	postinc1,c
 31998   013CE0  EC20  F0BC         	call	_StartTimer	;wreg free
 31999                           
 32000                           ;gemsecs.c: 628:   break;
 32001   013CE4  D05C               	goto	l1996
 32002   013CE6                     l1994:
 32003                           
 32004                           ;gemsecs.c: 631:   D[0].stack = 1;
 32005   013CE6  0E01               	movlw	1
 32006   013CE8  006F FFA0  FB73    	movff	wreg,_D+165
 32007                           
 32008                           ;gemsecs.c: 632:   D[0].message = H153[0];
 32009   013CEE  EE23  F19D         	lfsr	2,_H153
 32010   013CF2  EE02  F2CE         	lfsr	0,_D
 32011   013CF6  0E9B               	movlw	155
 32012   013CF8                     u5481:
 32013   013CF8  006F FF7B FFEE     	movff	postinc2,postinc0
 32014   013CFE  06E8               	decf	wreg,f,c
 32015   013D00  E2FB               	bc	u5481
 32016   013D02  0E9C               	movlw	156
 32017   013D04  5ED9               	subwf	fsr2l,f,c
 32018   013D06  5EE9               	subwf	fsr0l,f,c
 32019                           
 32020                           ;gemsecs.c: 633:   D[0].delay = 5000;
 32021   013D08  0E88               	movlw	136
 32022   013D0A  006F FFA0  FB71    	movff	wreg,_D+163
 32023   013D10  0E13               	movlw	19
 32024   013D12  006F FFA0  FB72    	movff	wreg,_D+164
 32025                           
 32026                           ;gemsecs.c: 634:   D[0].block.header = (uint8_t*) & D[0].message;
 32027   013D18  0ECE               	movlw	low _D
 32028   013D1A  006F FFA0  FB6A    	movff	wreg,_D+156
 32029   013D20  0E0A               	movlw	high _D
 32030   013D22  006F FFA0  FB6B    	movff	wreg,_D+157
 32031                           
 32032                           ;gemsecs.c: 635:   D[0].block.length = sizeof(header153);
 32033   013D28  0E9C               	movlw	156
 32034   013D2A  006F FFA0  FB6C    	movff	wreg,_D+158
 32035                           
 32036                           ;gemsecs.c: 636:   V.stack = D[0].stack;
 32037   013D30  0062  FDCC  F02E   	movff	_D+165,btemp+11
 32038   013D36  EE23  F169         	lfsr	2,_V+335	;volatile
 32039   013D3A  50DF               	movf	223,w,c
 32040   013D3C  182E               	xorwf	(btemp+11)^0,w,c
 32041   013D3E  0BF8               	andlw	-8
 32042   013D40  182E               	xorwf	(btemp+11)^0,w,c
 32043   013D42  6EDF               	movwf	223,c
 32044                           
 32045                           ;gemsecs.c: 637:   StartTimer(TMR_HBIO, D[V.stack - 1].delay);
 32046   013D44  EE23  F169         	lfsr	2,_V+335	;volatile
 32047   013D48  50DF               	movf	223,w,c
 32048   013D4A  0B07               	andlw	7
 32049   013D4C  0DA6               	mullw	166
 32050   013D4E  0ECB               	movlw	low (_D+65533)
 32051   013D50  24F3               	addwf	243,w,c
 32052   013D52  6ED9               	movwf	fsr2l,c
 32053   013D54  0E0A               	movlw	high (_D+65533)
 32054   013D56  20F4               	addwfc	prodh,w,c
 32055   013D58  6EDA               	movwf	fsr2h,c
 32056   013D5A  006F FF78  F02D    	movff	postinc2,btemp+10
 32057   013D60  006F FF74  F02E    	movff	postdec2,btemp+11
 32058   013D66  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 32059   013D6C  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 32060   013D72  0E06               	movlw	6
 32061   013D74  6EE6               	movwf	postinc1,c
 32062   013D76  EC20  F0BC         	call	_StartTimer	;wreg free
 32063                           
 32064                           ;gemsecs.c: 638:   break;
 32065   013D7A  D011               	goto	l1996
 32066   013D7C                     l8544:
 32067                           
 32068                           ;gemsecs.c: 640:   V.stack = 0;
 32069   013D7C  EE23  F169         	lfsr	2,_V+335	;volatile
 32070   013D80  0EF8               	movlw	-8
 32071   013D82  16DF               	andwf	223,f,c
 32072   013D84  D00C               	goto	l1996
 32073   013D86                     l8552:
 32074                           
 32075                           ;stkvar	_sid @ sp[(0)+-1]
 32076   013D86  0EFF               	movlw	-1
 32077   013D88  50E3               	movf	plusw1,w,c
 32078                           
 32079                           ; Switch size 1, requested type "simple"
 32080                           ; Number of cases is 3, Range of values is 1 to 11
 32081                           ; switch strategies available:
 32082                           ; Name         Instructions Cycles
 32083                           ; simple_byte           10     6 (average)
 32084                           ;	Chosen strategy is simple_byte
 32085   013D8A  0A01               	xorlw	1	; case 1
 32086   013D8C  B4D8               	btfsc	status,2,c
 32087   013D8E  D697               	goto	l1991
 32088   013D90  0A0B               	xorlw	11	; case 10
 32089   013D92  B4D8               	btfsc	status,2,c
 32090   013D94  D7A8               	goto	l1994
 32091   013D96  0A01               	xorlw	1	; case 11
 32092   013D98  B4D8               	btfsc	status,2,c
 32093   013D9A  D7A5               	goto	l1994
 32094   013D9C  D7EF               	goto	l8544
 32095   013D9E                     l1996:
 32096                           
 32097                           ; _sequence_messages: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 32098   013D9E  52E5               	movf	postdec1,f,c
 32099   013DA0  0012               	return		;funcret
 32100   013DA2                     __end_of_sequence_messages:
 32101                           	callstack 0
 32102                           
 32103 ;; *************** function _format_display_text *****************
 32104 ;; Defined at:
 32105 ;;		line 677 in file "gemsecs.c"
 32106 ;; Parameters:    Size  Location     Type
 32107 ;;  data            2  [STACK] PTR const unsigned char 
 32108 ;;		 -> V$terminal(160), V(387), 
 32109 ;; Auto vars:     Size  Location     Type
 32110 ;;  j               2  [STACK] short 
 32111 ;;  k               2  [STACK] unsigned short 
 32112 ;;  i               2  [STACK] short 
 32113 ;;  z               2  [STACK] short 
 32114 ;; Return value:  Size  Location     Type
 32115 ;;                  2  [STACK] unsigned short 
 32116 ;; Registers used:
 32117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
 32118 ;; Tracked objects:
 32119 ;;		On entry : 3F/1
 32120 ;;		On exit  : 0/0
 32121 ;;		Unchanged: 0/0
 32122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32127 ;;Total ram usage:        0 bytes
 32128 ;; Hardware stack levels used: 1
 32129 ;; Hardware stack levels required when called: 4
 32130 ;; This function calls:
 32131 ;;		_strlen
 32132 ;; This function is called by:
 32133 ;;		_secs_II_message
 32134 ;;		_secs_gem_state
 32135 ;; This function uses a reentrant model
 32136 ;;
 32137                           
 32138                           	psect	text23
 32139   0157E6                     __ptext23:
 32140                           	callstack 0
 32141   0157E6                     _format_display_text:
 32142                           	callstack 0
 32143                           
 32144                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32145   0157E6  0E08               	movlw	8
 32146   0157E8  26E1               	addwf	fsr1l,f,c
 32147   0157EA  0E00               	movlw	0
 32148   0157EC  22E2               	addwfc	fsr1h,f,c
 32149                           
 32150                           ;gemsecs.c: 677: uint16_t format_display_text(const char *data);gemsecs.c: 678: {;gemsec
      +                          s.c: 679:  int16_t j, i = 0, z = 0;
 32151                           ;stkvar	_i @ sp[(-8)+4]
 32152                           
 32153                           ;incstack = 0
 32154   0157EE  0EFC               	movlw	-4
 32155   0157F0  6AE3               	clrf	plusw1,c
 32156   0157F2  0EFD               	movlw	-3
 32157   0157F4  6AE3               	clrf	plusw1,c
 32158                           
 32159                           ;stkvar	_z @ sp[(-8)+6]
 32160   0157F6  0EFE               	movlw	-2
 32161   0157F8  6AE3               	clrf	plusw1,c
 32162   0157FA  0EFF               	movlw	-1
 32163   0157FC  6AE3               	clrf	plusw1,c
 32164                           
 32165                           ;gemsecs.c: 680:  uint16_t k;;gemsecs.c: 682:  k = (uint16_t) strlen(data);
 32166                           ;stkvar	_data @ sp[(-8)+-2]
 32167   0157FE  0EF6               	movlw	-10
 32168   015800  006F FF8F FFE6     	movff	plusw1,postinc1
 32169   015806  006F FF8F FFE6     	movff	plusw1,postinc1
 32170   01580C  EC00  F0B7         	call	_strlen	;wreg free
 32171                           
 32172                           ;stkvar	_k @ sp[(-8)+2]
 32173   015810  0EFA               	movlw	-6
 32174   015812  0060  F08F  FFE3   	movff	btemp,plusw1
 32175   015818  0EFB               	movlw	-5
 32176   01581A  0060  F093  FFE3   	movff	btemp+1,plusw1
 32177                           
 32178                           ;gemsecs.c: 684:  if (!k)
 32179                           ;stkvar	_k @ sp[(-8)+2]
 32180   015820  0EFA               	movlw	-6
 32181   015822  006F FF8C  F023    	movff	plusw1,btemp
 32182   015828  0EFB               	movlw	-5
 32183   01582A  50E3               	movf	plusw1,w,c
 32184   01582C  1023               	iorwf	btemp^0,w,c
 32185   01582E  B4D8               	btfsc	status,2,c
 32186   015830  D082               	goto	u5510
 32187                           
 32188                           ;gemsecs.c: 690:  for (j = 135; j >= z; j--) {
 32189   015832  0E87               	movlw	135
 32190   015834  6E2D               	movwf	(btemp+10)^0,c
 32191   015836  0E00               	movlw	0
 32192   015838  6E2E               	movwf	(btemp+11)^0,c
 32193                           
 32194                           ;stkvar	_j @ sp[(-8)+0]
 32195   01583A  0EF8               	movlw	-8
 32196   01583C  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 32197   015842  0EF9               	movlw	-7
 32198   015844  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 32199   01584A  D062               	goto	l8592
 32200   01584C                     l8582:
 32201                           
 32202                           ;gemsecs.c: 691:   if (i < k) {
 32203                           ;stkvar	_k @ sp[(-8)+2]
 32204                           ;stkvar	_i @ sp[(-8)+4]
 32205   01584C  50E1               	movf	fsr1l,w,c
 32206   01584E  0FFC               	addlw	-4
 32207   015850  6ED9               	movwf	fsr2l,c
 32208   015852  50E2               	movf	fsr1h,w,c
 32209   015854  6EDA               	movwf	fsr2h,c
 32210   015856  0EFF               	movlw	255
 32211   015858  22DA               	addwfc	fsr2h,f,c
 32212   01585A  0EFA               	movlw	-6
 32213   01585C  50E3               	movf	plusw1,w,c
 32214   01585E  5CDE               	subwf	postinc2,w,c
 32215   015860  0EFB               	movlw	-5
 32216   015862  50E3               	movf	plusw1,w,c
 32217   015864  58DE               	subwfb	postinc2,w,c
 32218   015866  B0D8               	btfsc	status,0,c
 32219   015868  D039               	goto	l8588
 32220                           
 32221                           ;gemsecs.c: 692:    H153[0].data[j] = data[i++];
 32222                           ;stkvar	_i @ sp[(-8)+4]
 32223   01586A  0EFC               	movlw	-4
 32224   01586C  006F FF8C  F02D    	movff	plusw1,btemp+10
 32225   015872  0EFD               	movlw	-3
 32226   015874  006F FF8C  F02E    	movff	plusw1,btemp+11
 32227                           
 32228                           ;stkvar	_data @ sp[(-8)+-2]
 32229   01587A  0EF6               	movlw	-10
 32230   01587C  006F FF8C  F02B    	movff	plusw1,btemp+8
 32231   015882  0EF7               	movlw	-9
 32232   015884  006F FF8C  F02C    	movff	plusw1,btemp+9
 32233   01588A  502D               	movf	(btemp+10)^0,w,c
 32234   01588C  242B               	addwf	(btemp+8)^0,w,c
 32235   01588E  6ED9               	movwf	fsr2l,c
 32236   015890  502E               	movf	(btemp+11)^0,w,c
 32237   015892  202C               	addwfc	(btemp+9)^0,w,c
 32238   015894  6EDA               	movwf	fsr2h,c
 32239                           
 32240                           ;stkvar	_j @ sp[(-8)+0]
 32241   015896  0EF8               	movlw	-8
 32242   015898  006F FF8C  F02D    	movff	plusw1,btemp+10
 32243   01589E  0EF9               	movlw	-7
 32244   0158A0  006F FF8C  F02E    	movff	plusw1,btemp+11
 32245   0158A6  0E9F               	movlw	low (_H153+2)
 32246   0158A8  242D               	addwf	(btemp+10)^0,w,c
 32247   0158AA  6EE9               	movwf	fsr0l,c
 32248   0158AC  0E0D               	movlw	high (_H153+2)
 32249   0158AE  202E               	addwfc	(btemp+11)^0,w,c
 32250   0158B0  6EEA               	movwf	fsr0h,c
 32251   0158B2  006F FF7F FFEF     	movff	indf2,indf0
 32252                           
 32253                           ;stkvar	_i @ sp[(-8)+4]
 32254   0158B8  0EFC               	movlw	-4
 32255   0158BA  50E3               	movf	plusw1,w,c
 32256   0158BC  0F01               	addlw	1
 32257   0158BE  6E23               	movwf	btemp^0,c
 32258   0158C0  0EFC               	movlw	-4
 32259   0158C2  0060  F08F  FFE3   	movff	btemp,plusw1
 32260   0158C8  6A23               	clrf	btemp^0,c
 32261   0158CA  0EFD               	movlw	-3
 32262   0158CC  50E3               	movf	plusw1,w,c
 32263   0158CE  2023               	addwfc	btemp^0,w,c
 32264   0158D0  6E23               	movwf	btemp^0,c
 32265   0158D2  0EFD               	movlw	-3
 32266   0158D4  0060  F08F  FFE3   	movff	btemp,plusw1
 32267                           
 32268                           ;gemsecs.c: 693:   } else {
 32269   0158DA  D010               	goto	l8590
 32270   0158DC                     l8588:
 32271                           
 32272                           ;gemsecs.c: 694:    H153[0].data[j] = ' ';
 32273                           ;stkvar	_j @ sp[(-8)+0]
 32274   0158DC  0EF8               	movlw	-8
 32275   0158DE  006F FF8C  F02D    	movff	plusw1,btemp+10
 32276   0158E4  0EF9               	movlw	-7
 32277   0158E6  006F FF8C  F02E    	movff	plusw1,btemp+11
 32278   0158EC  0E9F               	movlw	low (_H153+2)
 32279   0158EE  242D               	addwf	(btemp+10)^0,w,c
 32280   0158F0  6ED9               	movwf	fsr2l,c
 32281   0158F2  0E0D               	movlw	high (_H153+2)
 32282   0158F4  202E               	addwfc	(btemp+11)^0,w,c
 32283   0158F6  6EDA               	movwf	fsr2h,c
 32284   0158F8  0E20               	movlw	32
 32285   0158FA  6EDF               	movwf	indf2,c
 32286   0158FC                     l8590:
 32287                           
 32288                           ;gemsecs.c: 697:  }
 32289                           ;stkvar	_j @ sp[(-8)+0]
 32290   0158FC  50E1               	movf	fsr1l,w,c
 32291   0158FE  0FF8               	addlw	-8
 32292   015900  6ED9               	movwf	fsr2l,c
 32293   015902  50E2               	movf	fsr1h,w,c
 32294   015904  6EDA               	movwf	fsr2h,c
 32295   015906  0EFF               	movlw	255
 32296   015908  22DA               	addwfc	fsr2h,f,c
 32297   01590A  06DE               	decf	postinc2,f,c
 32298   01590C  0E00               	movlw	0
 32299   01590E  5ADD               	subwfb	postdec2,f,c
 32300   015910                     l8592:
 32301                           
 32302                           ;stkvar	_z @ sp[(-8)+6]
 32303                           ;stkvar	_j @ sp[(-8)+0]
 32304   015910  50E1               	movf	fsr1l,w,c
 32305   015912  0FF8               	addlw	-8
 32306   015914  6ED9               	movwf	fsr2l,c
 32307   015916  50E2               	movf	fsr1h,w,c
 32308   015918  6EDA               	movwf	fsr2h,c
 32309   01591A  0EFF               	movlw	255
 32310   01591C  22DA               	addwfc	fsr2h,f,c
 32311   01591E  0EFE               	movlw	-2
 32312   015920  50E3               	movf	plusw1,w,c
 32313   015922  5CDE               	subwf	postinc2,w,c
 32314   015924  50DE               	movf	postinc2,w,c
 32315   015926  0A80               	xorlw	128
 32316   015928  6E23               	movwf	btemp^0,c
 32317   01592A  0EFF               	movlw	-1
 32318   01592C  50E3               	movf	plusw1,w,c
 32319   01592E  0A80               	xorlw	128
 32320   015930  5823               	subwfb	btemp^0,w,c
 32321   015932  B0D8               	btfsc	status,0,c
 32322   015934  D78B               	goto	l8582
 32323   015936                     u5510:
 32324                           
 32325                           ; _format_display_text: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 2, argsize = 2, vargsize = 0
 32326   015936  0EF6               	movlw	246
 32327   015938  26E1               	addwf	fsr1l,f,c
 32328   01593A  0EFF               	movlw	255
 32329   01593C  22E2               	addwfc	fsr1h,f,c
 32330   01593E  0012               	return		;funcret
 32331   015940                     __end_of_format_display_text:
 32332                           	callstack 0
 32333                           
 32334 ;; *************** function _secs_II_monitor_message *****************
 32335 ;; Defined at:
 32336 ;;		line 1236 in file "gemsecs.c"
 32337 ;; Parameters:    Size  Location     Type
 32338 ;;  stream          1  [STACK] const unsigned char 
 32339 ;;  function        1  [STACK] const unsigned char 
 32340 ;;  dtime           2  [STACK] const unsigned short 
 32341 ;; Auto vars:     Size  Location     Type
 32342 ;;  msg_data        2  [STACK] PTR unsigned char 
 32343 ;;		 -> H254(257), 
 32344 ;; Return value:  Size  Location     Type
 32345 ;;                  1  [STACK] void 
 32346 ;; Registers used:
 32347 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 32348 ;; Tracked objects:
 32349 ;;		On entry : 0/1
 32350 ;;		On exit  : 0/0
 32351 ;;		Unchanged: 0/0
 32352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32357 ;;Total ram usage:        0 bytes
 32358 ;; Hardware stack levels used: 1
 32359 ;; Hardware stack levels required when called: 13
 32360 ;; This function calls:
 32361 ;;		_ee_logger
 32362 ;; This function is called by:
 32363 ;;		_m_protocol
 32364 ;;		_r_protocol
 32365 ;; This function uses a reentrant model
 32366 ;;
 32367                           
 32368                           	psect	text24
 32369   015F24                     __ptext24:
 32370                           	callstack 0
 32371   015F24                     _secs_II_monitor_message:
 32372                           	callstack 0
 32373                           
 32374                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32375   015F24  52E6               	movf	postinc1,f,c
 32376   015F26  52E6               	movf	postinc1,f,c
 32377                           
 32378                           ;gemsecs.c: 1236: void secs_II_monitor_message(const uint8_t stream, const uint8_t funct
      +                          ion, const uint16_t dtime);gemsecs.c: 1237: {;gemsecs.c: 1238:  uint8_t * msg_data = (ui
      +                          nt8_t*) & H254[0];
 32379                           ;stkvar	_msg_data @ sp[(-2)+0]
 32380                           
 32381                           ;incstack = 0
 32382   015F28  0E0E               	movlw	high _H254
 32383   015F2A  6E23               	movwf	btemp^0,c
 32384   015F2C  0EFF               	movlw	-1
 32385   015F2E  0060  F08F  FFE3   	movff	btemp,plusw1
 32386   015F34  0ED5               	movlw	low _H254
 32387   015F36  6E23               	movwf	btemp^0,c
 32388   015F38  0EFE               	movlw	-2
 32389   015F3A  0060  F08F  FFE3   	movff	btemp,plusw1
 32390                           
 32391                           ;gemsecs.c: 1239:  static uint8_t store1_1 = 1, store1_13 = 1, store6_11 = 1;;gemsecs.c:
      +                           1242:  ++V.ticks;
 32392   015F40  EE23  F141         	lfsr	2,_V+295	;volatile
 32393   015F44  2ADE               	incf	postinc2,f,c
 32394   015F46  0E00               	movlw	0
 32395   015F48  22DE               	addwfc	postinc2,f,c
 32396   015F4A  22DE               	addwfc	postinc2,f,c
 32397   015F4C  22DE               	addwfc	postinc2,f,c
 32398                           
 32399                           ;gemsecs.c: 1243:  switch (stream) {
 32400   015F4E  D068               	goto	l12486
 32401   015F50                     l12448:
 32402                           
 32403                           ;gemsecs.c: 1247:    if (!store1_1)
 32404   015F50  5051               	movf	secs_II_monitor_message@store1_1^0,w,c
 32405   015F52  B4D8               	btfsc	status,2,c
 32406   015F54  D070               	goto	l2233
 32407                           
 32408                           ;gemsecs.c: 1249:    store1_1 = 0;
 32409   015F56  6A51               	clrf	secs_II_monitor_message@store1_1^0,c
 32410   015F58                     l12452:
 32411                           
 32412                           ;gemsecs.c: 1251:    ee_logger(stream, function, dtime, msg_data);
 32413                           ;stkvar	_msg_data @ sp[(-2)+0]
 32414   015F58  0EFE               	movlw	-2
 32415   015F5A  006F FF8F FFE6     	movff	plusw1,postinc1
 32416   015F60  006F FF8F FFE6     	movff	plusw1,postinc1
 32417                           
 32418                           ;stkvar	_dtime @ sp[(-4)+-4]
 32419   015F66  0EF8               	movlw	-8
 32420   015F68  006F FF8F FFE6     	movff	plusw1,postinc1
 32421   015F6E  006F FF8F FFE6     	movff	plusw1,postinc1
 32422                           
 32423                           ;stkvar	_function @ sp[(-6)+-2]
 32424   015F74  0EF8               	movlw	-8
 32425   015F76  50E3               	movf	plusw1,w,c
 32426   015F78  6EE6               	movwf	postinc1,c
 32427                           
 32428                           ;stkvar	_stream @ sp[(-7)+-1]
 32429   015F7A  0EF8               	movlw	-8
 32430   015F7C  50E3               	movf	plusw1,w,c
 32431   015F7E  6EE6               	movwf	postinc1,c
 32432   015F80  EC70  F0AE         	call	_ee_logger	;wreg free
 32433                           
 32434                           ;gemsecs.c: 1252:    break;
 32435   015F84  D058               	goto	l2233
 32436   015F86                     l12454:
 32437                           
 32438                           ;gemsecs.c: 1254:    if (!store1_13)
 32439   015F86  5050               	movf	secs_II_monitor_message@store1_13^0,w,c
 32440   015F88  B4D8               	btfsc	status,2,c
 32441   015F8A  D055               	goto	l2233
 32442                           
 32443                           ;gemsecs.c: 1256:    store1_13 = 0;
 32444   015F8C  6A50               	clrf	secs_II_monitor_message@store1_13^0,c
 32445   015F8E  D7E4               	goto	l12452
 32446   015F90                     l12462:
 32447                           
 32448                           ;stkvar	_function @ sp[(-2)+-2]
 32449   015F90  0EFC               	movlw	-4
 32450   015F92  50E3               	movf	plusw1,w,c
 32451                           
 32452                           ; Switch size 1, requested type "simple"
 32453                           ; Number of cases is 2, Range of values is 1 to 13
 32454                           ; switch strategies available:
 32455                           ; Name         Instructions Cycles
 32456                           ; simple_byte            7     4 (average)
 32457                           ;	Chosen strategy is simple_byte
 32458   015F94  0A01               	xorlw	1	; case 1
 32459   015F96  B4D8               	btfsc	status,2,c
 32460   015F98  D7DB               	goto	l12448
 32461   015F9A  0A0C               	xorlw	12	; case 13
 32462   015F9C  B4D8               	btfsc	status,2,c
 32463   015F9E  D7F3               	goto	l12454
 32464   015FA0  D04A               	goto	l2233
 32465   015FA2                     l12464:
 32466                           
 32467                           ;gemsecs.c: 1269:    ee_logger(stream, function, dtime, msg_data);
 32468                           ;stkvar	_msg_data @ sp[(-2)+0]
 32469   015FA2  0EFE               	movlw	-2
 32470   015FA4  006F FF8F FFE6     	movff	plusw1,postinc1
 32471   015FAA  006F FF8F FFE6     	movff	plusw1,postinc1
 32472                           
 32473                           ;stkvar	_dtime @ sp[(-4)+-4]
 32474   015FB0  0EF8               	movlw	-8
 32475   015FB2  006F FF8F FFE6     	movff	plusw1,postinc1
 32476   015FB8  006F FF8F FFE6     	movff	plusw1,postinc1
 32477                           
 32478                           ;stkvar	_function @ sp[(-6)+-2]
 32479   015FBE  0EF8               	movlw	-8
 32480   015FC0  50E3               	movf	plusw1,w,c
 32481   015FC2  6EE6               	movwf	postinc1,c
 32482                           
 32483                           ;stkvar	_stream @ sp[(-7)+-1]
 32484   015FC4  0EF8               	movlw	-8
 32485   015FC6  50E3               	movf	plusw1,w,c
 32486   015FC8  6EE6               	movwf	postinc1,c
 32487   015FCA  EC70  F0AE         	call	_ee_logger	;wreg free
 32488                           
 32489                           ;gemsecs.c: 1270:    if (function == 42) {
 32490                           ;stkvar	_function @ sp[(-2)+-2]
 32491   015FCE  0EFC               	movlw	-4
 32492   015FD0  006F FF8C  F023    	movff	plusw1,btemp
 32493   015FD6  0E2A               	movlw	42
 32494   015FD8  1823               	xorwf	btemp^0,w,c
 32495   015FDA  A4D8               	btfss	status,2,c
 32496   015FDC  D01B               	goto	l12482
 32497                           
 32498                           ;gemsecs.c: 1275:     V.msg_ret = 0;
 32499   015FDE  0E00               	movlw	0
 32500   015FE0  006F FFA0  FD52    	movff	wreg,_V+312	;volatile
 32501                           
 32502                           ;gemsecs.c: 1276:     V.msg_error = MSG_ERROR_NONE;
 32503   015FE6  0E00               	movlw	0
 32504   015FE8  006F FFA0  FD51    	movff	wreg,_V+311	;volatile
 32505                           
 32506                           ;gemsecs.c: 1277:     V.response.info = DIS_STR;
 32507   015FEE  0E00               	movlw	0
 32508   015FF0  006F FFA0  FD91    	movff	wreg,_V+375	;volatile
 32509   015FF6  D00E               	goto	l12482
 32510   015FF8                     l12472:
 32511                           
 32512                           ;stkvar	_function @ sp[(-2)+-2]
 32513   015FF8  0EFC               	movlw	-4
 32514   015FFA  50E3               	movf	plusw1,w,c
 32515                           
 32516                           ; Switch size 1, requested type "simple"
 32517                           ; Number of cases is 2, Range of values is 41 to 42
 32518                           ; switch strategies available:
 32519                           ; Name         Instructions Cycles
 32520                           ; simple_byte            7     4 (average)
 32521                           ;	Chosen strategy is simple_byte
 32522   015FFC  0A29               	xorlw	41	; case 41
 32523   015FFE  B4D8               	btfsc	status,2,c
 32524   016000  D7D0               	goto	l12464
 32525   016002  0A03               	xorlw	3	; case 42
 32526   016004  B4D8               	btfsc	status,2,c
 32527   016006  D7CD               	goto	l12464
 32528                           
 32529                           ;gemsecs.c: 1285:   switch (function) {
 32530                           
 32531                           ;gemsecs.c: 1284:  case 6:
 32532   016008  D005               	goto	l12482
 32533   01600A                     l12474:
 32534                           
 32535                           ;gemsecs.c: 1287:    if (!store6_11)
 32536   01600A  504F               	movf	secs_II_monitor_message@store6_11^0,w,c
 32537   01600C  B4D8               	btfsc	status,2,c
 32538   01600E  D013               	goto	l2233
 32539                           
 32540                           ;gemsecs.c: 1289:    store6_11 = 0;
 32541   016010  6A4F               	clrf	secs_II_monitor_message@store6_11^0,c
 32542   016012  D7A2               	goto	l12452
 32543   016014                     l12482:
 32544                           
 32545                           ;stkvar	_function @ sp[(-2)+-2]
 32546   016014  0EFC               	movlw	-4
 32547   016016  50E3               	movf	plusw1,w,c
 32548                           
 32549                           ; Switch size 1, requested type "simple"
 32550                           ; Number of cases is 1, Range of values is 11 to 11
 32551                           ; switch strategies available:
 32552                           ; Name         Instructions Cycles
 32553                           ; simple_byte            4     3 (average)
 32554                           ;	Chosen strategy is simple_byte
 32555   016018  0A0B               	xorlw	11	; case 11
 32556   01601A  B4D8               	btfsc	status,2,c
 32557   01601C  D7F6               	goto	l12474
 32558   01601E  D00B               	goto	l2233
 32559   016020                     l12486:
 32560                           
 32561                           ;stkvar	_stream @ sp[(-2)+-1]
 32562   016020  0EFD               	movlw	-3
 32563   016022  50E3               	movf	plusw1,w,c
 32564                           
 32565                           ; Switch size 1, requested type "simple"
 32566                           ; Number of cases is 3, Range of values is 1 to 6
 32567                           ; switch strategies available:
 32568                           ; Name         Instructions Cycles
 32569                           ; simple_byte           10     6 (average)
 32570                           ;	Chosen strategy is simple_byte
 32571   016024  0A01               	xorlw	1	; case 1
 32572   016026  B4D8               	btfsc	status,2,c
 32573   016028  D7B3               	goto	l12462
 32574   01602A  0A03               	xorlw	3	; case 2
 32575   01602C  B4D8               	btfsc	status,2,c
 32576   01602E  D7E4               	goto	l12472
 32577   016030  0A04               	xorlw	4	; case 6
 32578   016032  B4D8               	btfsc	status,2,c
 32579   016034  D7EF               	goto	l12482
 32580   016036                     l2233:
 32581                           
 32582                           ; _secs_II_monitor_message: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 32583   016036  0EFA               	movlw	250
 32584   016038  26E1               	addwf	fsr1l,f,c
 32585   01603A  0EFF               	movlw	255
 32586   01603C  22E2               	addwfc	fsr1h,f,c
 32587   01603E  0012               	return		;funcret
 32588   016040                     __end_of_secs_II_monitor_message:
 32589                           	callstack 0
 32590                           
 32591 ;; *************** function _ee_logger *****************
 32592 ;; Defined at:
 32593 ;;		line 1216 in file "gemsecs.c"
 32594 ;; Parameters:    Size  Location     Type
 32595 ;;  stream          1  [STACK] const unsigned char 
 32596 ;;  function        1  [STACK] const unsigned char 
 32597 ;;  dtime           2  [STACK] const unsigned short 
 32598 ;;  msg_data        2  [STACK] PTR unsigned char 
 32599 ;;		 -> H254(257), 
 32600 ;; Auto vars:     Size  Location     Type
 32601 ;;  i               2  [STACK] unsigned short 
 32602 ;; Return value:  Size  Location     Type
 32603 ;;                  1  [STACK] void 
 32604 ;; Registers used:
 32605 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 32606 ;; Tracked objects:
 32607 ;;		On entry : 0/1
 32608 ;;		On exit  : 0/0
 32609 ;;		Unchanged: 0/0
 32610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32615 ;;Total ram usage:        0 bytes
 32616 ;; Hardware stack levels used: 1
 32617 ;; Hardware stack levels required when called: 12
 32618 ;; This function calls:
 32619 ;;		_DATAEE_WriteByte
 32620 ;;		_StartTimer
 32621 ;;		_sprintf
 32622 ;; This function is called by:
 32623 ;;		_secs_II_monitor_message
 32624 ;; This function uses a reentrant model
 32625 ;;
 32626                           
 32627                           	psect	text25
 32628   015CE0                     __ptext25:
 32629                           	callstack 0
 32630   015CE0                     _ee_logger:
 32631                           	callstack 0
 32632                           
 32633                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32634   015CE0  52E6               	movf	postinc1,f,c
 32635   015CE2  52E6               	movf	postinc1,f,c
 32636                           
 32637                           ;gemsecs.c: 1216: static void ee_logger(const uint8_t stream, const uint8_t function, co
      +                          nst uint16_t dtime, uint8_t *msg_data);gemsecs.c: 1217: {;gemsecs.c: 1218:  uint16_t i =
      +                           0;
 32638                           ;stkvar	_i @ sp[(-2)+0]
 32639                           
 32640                           ;incstack = 0
 32641   015CE4  0EFE               	movlw	-2
 32642   015CE6  6AE3               	clrf	plusw1,c
 32643   015CE8  0EFF               	movlw	-1
 32644   015CEA  6AE3               	clrf	plusw1,c
 32645   015CEC                     l12400:
 32646                           
 32647                           ;gemsecs.c: 1221:   DATAEE_WriteByte(i + ((V.response.log_seq & 0x03) << 8), msg_data[25
      +                          4 + 2 - i]);
 32648                           ;stkvar	_i @ sp[(-2)+0]
 32649                           ;stkvar	_msg_data @ sp[(-2)+-6]
 32650   015CEC  0EF8               	movlw	-8
 32651   015CEE  006F FF8C  F02D    	movff	plusw1,btemp+10
 32652   015CF4  0EF9               	movlw	-7
 32653   015CF6  006F FF8C  F02E    	movff	plusw1,btemp+11
 32654   015CFC  0EFE               	movlw	-2
 32655   015CFE  50E3               	movf	plusw1,w,c
 32656   015D00  5E2D               	subwf	(btemp+10)^0,f,c
 32657   015D02  0EFF               	movlw	-1
 32658   015D04  50E3               	movf	plusw1,w,c
 32659   015D06  5A2E               	subwfb	(btemp+11)^0,f,c
 32660   015D08  0E00               	movlw	0
 32661   015D0A  242D               	addwf	(btemp+10)^0,w,c
 32662   015D0C  6ED9               	movwf	fsr2l,c
 32663   015D0E  0E01               	movlw	1
 32664   015D10  202E               	addwfc	(btemp+11)^0,w,c
 32665   015D12  6EDA               	movwf	fsr2h,c
 32666   015D14  50DF               	movf	indf2,w,c
 32667   015D16  6EE6               	movwf	postinc1,c
 32668                           
 32669                           ;stkvar	_i @ sp[(-3)+0]
 32670                           ; multi bank
 32671   015D18  010D               	movlb	(_V+373) shr (0+8)	;volatile
 32672   015D1A  518F               	movf	(_V+373)& (0+255),w,b	;volatile
 32673   015D1C  0B03               	andlw	3
 32674   015D1E  6E2E               	movwf	(btemp+11)^0,c
 32675   015D20  6A2D               	clrf	(btemp+10)^0,c
 32676   015D22  0EFD               	movlw	-3
 32677   015D24  50E3               	movf	plusw1,w,c
 32678   015D26  262D               	addwf	(btemp+10)^0,f,c
 32679   015D28  0EFE               	movlw	-2
 32680   015D2A  50E3               	movf	plusw1,w,c
 32681   015D2C  222E               	addwfc	(btemp+11)^0,f,c
 32682   015D2E  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 32683   015D34  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 32684   015D3A  EC77  F0B7         	call	_DATAEE_WriteByte	;wreg free
 32685                           
 32686                           ;gemsecs.c: 1222:  } while (++i <= 255);
 32687                           ;stkvar	_i @ sp[(-2)+0]
 32688   015D3E  0EFE               	movlw	-2
 32689   015D40  50E3               	movf	plusw1,w,c
 32690   015D42  0F01               	addlw	1
 32691   015D44  6E23               	movwf	btemp^0,c
 32692   015D46  0EFE               	movlw	-2
 32693   015D48  0060  F08F  FFE3   	movff	btemp,plusw1
 32694   015D4E  6A23               	clrf	btemp^0,c
 32695   015D50  0EFF               	movlw	-1
 32696   015D52  50E3               	movf	plusw1,w,c
 32697   015D54  2023               	addwfc	btemp^0,w,c
 32698   015D56  6E23               	movwf	btemp^0,c
 32699   015D58  0EFF               	movlw	-1
 32700   015D5A  0060  F08F  FFE3   	movff	btemp,plusw1
 32701   015D60  0EFF               	movlw	-1
 32702   015D62  04E3               	decf	plusw1,w,c
 32703   015D64  A0D8               	btfss	status,0,c
 32704   015D66  D7C2               	goto	l12400
 32705                           
 32706                           ;gemsecs.c: 1224:  sprintf(V.info, "Saved S%dF%d %d     ", stream, function, V.response.
      +                          log_num);
 32707   015D68  EE23  F195         	lfsr	2,_V+379	;volatile
 32708   015D6C  006F FF78  F02D    	movff	postinc2,btemp+10
 32709   015D72  006F FF74  F02E    	movff	postdec2,btemp+11
 32710   015D78  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 32711   015D7E  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 32712                           
 32713                           ;stkvar	_function @ sp[(-4)+-2]
 32714   015D84  0EFA               	movlw	-6
 32715   015D86  50E3               	movf	plusw1,w,c
 32716   015D88  6EE6               	movwf	postinc1,c
 32717   015D8A  0E00               	movlw	0
 32718   015D8C  6EE6               	movwf	postinc1,c
 32719                           
 32720                           ;stkvar	_stream @ sp[(-6)+-1]
 32721   015D8E  0EF9               	movlw	-7
 32722   015D90  50E3               	movf	plusw1,w,c
 32723   015D92  6EE6               	movwf	postinc1,c
 32724   015D94  0E00               	movlw	0
 32725   015D96  6EE6               	movwf	postinc1,c
 32726   015D98  0EF5               	movlw	low STR_36
 32727   015D9A  6EE6               	movwf	postinc1,c
 32728   015D9C  0EFD               	movlw	high STR_36
 32729   015D9E  6EE6               	movwf	postinc1,c
 32730   015DA0  0E01               	movlw	low (_V+231)
 32731   015DA2  6EE6               	movwf	postinc1,c
 32732   015DA4  0E0D               	movlw	high (_V+231)
 32733   015DA6  6EE6               	movwf	postinc1,c
 32734   015DA8  0E0A               	movlw	10
 32735   015DAA  6EE6               	movwf	postinc1,c
 32736   015DAC  EC29  F0B2         	call	_sprintf	;wreg free
 32737                           
 32738                           ; BSR set to: 1
 32739                           ;gemsecs.c: 1225:  StartTimer(TMR_INFO, dtime);
 32740                           ;stkvar	_dtime @ sp[(-2)+-4]
 32741   015DB0  0EFA               	movlw	-6
 32742   015DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 32743   015DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 32744   015DBE  0E07               	movlw	7
 32745   015DC0  6EE6               	movwf	postinc1,c
 32746   015DC2  EC20  F0BC         	call	_StartTimer	;wreg free
 32747                           
 32748                           ;gemsecs.c: 1226:  V.response.info = DIS_LOG;
 32749   015DC6  0E02               	movlw	2
 32750   015DC8  006F FFA0  FD91    	movff	wreg,_V+375	;volatile
 32751                           
 32752                           ;gemsecs.c: 1227:  V.response.log_num++;
 32753   015DCE  EE23  F195         	lfsr	2,_V+379	;volatile
 32754   015DD2  2ADE               	incf	postinc2,f,c
 32755   015DD4  0E00               	movlw	0
 32756   015DD6  22DD               	addwfc	postdec2,f,c
 32757                           
 32758                           ;gemsecs.c: 1228:  V.response.log_seq++;
 32759   015DD8  0063  F63F  FFE8   	movff	_V+373,wreg	;volatile
 32760   015DDE  0F01               	addlw	1
 32761   015DE0  006F FFA0  FD8F    	movff	wreg,_V+373	;volatile
 32762                           
 32763                           ;gemsecs.c: 1229:  if (V.response.log_seq >= 3)
 32764   015DE6  EE23  F18F         	lfsr	2,_V+373	;volatile
 32765   015DEA  0E02               	movlw	2
 32766   015DEC  64DF               	cpfsgt	indf2,c
 32767   015DEE  D004               	goto	l2200
 32768                           
 32769                           ;gemsecs.c: 1230:   V.response.log_seq = 0;
 32770   015DF0  0E00               	movlw	0
 32771   015DF2  006F FFA0  FD8F    	movff	wreg,_V+373	;volatile
 32772   015DF8                     l2200:
 32773                           
 32774                           ; _ee_logger: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 32775   015DF8  0EF8               	movlw	248
 32776   015DFA  26E1               	addwf	fsr1l,f,c
 32777   015DFC  0EFF               	movlw	255
 32778   015DFE  22E2               	addwfc	fsr1h,f,c
 32779   015E00  0012               	return		;funcret
 32780   015E02                     __end_of_ee_logger:
 32781                           	callstack 0
 32782                           
 32783 ;; *************** function _DATAEE_WriteByte *****************
 32784 ;; Defined at:
 32785 ;;		line 172 in file "mcc_generated_files/memory.c"
 32786 ;; Parameters:    Size  Location     Type
 32787 ;;  bAdd            2  [STACK] unsigned short 
 32788 ;;  bData           1  [STACK] unsigned char 
 32789 ;; Auto vars:     Size  Location     Type
 32790 ;;  GIEBitValue     1  [STACK] unsigned char 
 32791 ;; Return value:  Size  Location     Type
 32792 ;;                  1  [STACK] void 
 32793 ;; Registers used:
 32794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 32795 ;; Tracked objects:
 32796 ;;		On entry : 0/3C
 32797 ;;		On exit  : 0/0
 32798 ;;		Unchanged: 0/0
 32799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32804 ;;Total ram usage:        0 bytes
 32805 ;; Hardware stack levels used: 1
 32806 ;; Hardware stack levels required when called: 3
 32807 ;; This function calls:
 32808 ;;		Nothing
 32809 ;; This function is called by:
 32810 ;;		_secs_II_message
 32811 ;;		_ee_logger
 32812 ;; This function uses a reentrant model
 32813 ;;
 32814                           
 32815                           	psect	text26
 32816   016EEE                     __ptext26:
 32817                           	callstack 0
 32818   016EEE                     _DATAEE_WriteByte:
 32819                           	callstack 0
 32820                           
 32821                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32822   016EEE  52E6               	movf	postinc1,f,c
 32823                           
 32824                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 32825                           
 32826                           ;incstack = 0
 32827   016EF0  AED2               	btfss	210,7,c	;volatile
 32828   016EF2  D003               	goto	u5220
 32829   016EF4  6A2E               	clrf	(btemp+11)^0,c
 32830   016EF6  2A2E               	incf	(btemp+11)^0,f,c
 32831   016EF8  D001               	goto	u5228
 32832   016EFA                     u5220:
 32833   016EFA  6A2E               	clrf	(btemp+11)^0,c
 32834   016EFC                     u5228:
 32835                           
 32836                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 32837   016EFC  0EFF               	movlw	-1
 32838   016EFE  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 32839                           
 32840                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 32841                           ;stkvar	_bAdd @ sp[(-1)+-2]
 32842   016F04  0EFE               	movlw	254
 32843   016F06  24E1               	addwf	fsr1l,w,c
 32844   016F08  6ED9               	movwf	fsr2l,c
 32845   016F0A  0EFF               	movlw	255
 32846   016F0C  20E2               	addwfc	fsr1h,w,c
 32847   016F0E  6EDA               	movwf	fsr2h,c
 32848   016F10  50DF               	movf	indf2,w,c
 32849   016F12  0B03               	andlw	3
 32850   016F14  0139               	movlb	57	; () banked
 32851   016F16  6FE1               	movwf	225,b	;volatile
 32852                           
 32853                           ; BSR set to: 57
 32854                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 32855                           ;stkvar	_bAdd @ sp[(-1)+-2]
 32856   016F18  0EFD               	movlw	-3
 32857   016F1A  006F FF8F F9E0     	movff	plusw1,14816	;volatile
 32858                           
 32859                           ; BSR set to: 57
 32860                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 32861                           ;stkvar	_bData @ sp[(-1)+-3]
 32862   016F20  0EFC               	movlw	-4
 32863   016F22  006F FF8F F9E3     	movff	plusw1,14819	;volatile
 32864                           
 32865                           ; BSR set to: 57
 32866                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 32867   016F28  0E3F               	movlw	-193
 32868   016F2A  17E5               	andwf	229,f,b	;volsfr
 32869                           
 32870                           ; BSR set to: 57
 32871                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 32872   016F2C  85E5               	bsf	229,2,b	;volsfr
 32873                           
 32874                           ; BSR set to: 57
 32875                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 32876   016F2E  9ED2               	bcf	210,7,c	;volatile
 32877                           
 32878                           ; BSR set to: 57
 32879                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 32880   016F30  0E55               	movlw	85
 32881   016F32  6FE6               	movwf	230,b	;volsfr
 32882                           
 32883                           ; BSR set to: 57
 32884                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 32885   016F34  0EAA               	movlw	170
 32886   016F36  6FE6               	movwf	230,b	;volsfr
 32887                           
 32888                           ; BSR set to: 57
 32889                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 32890   016F38  83E5               	bsf	229,1,b	;volsfr
 32891   016F3A                     l1080:
 32892                           
 32893                           ; BSR set to: 57
 32894                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 32895   016F3A  B3E5               	btfsc	229,1,b	;volsfr
 32896   016F3C  D7FE               	goto	l1080
 32897                           
 32898                           ; BSR set to: 57
 32899                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 32900   016F3E  95E5               	bcf	229,2,b	;volsfr
 32901                           
 32902                           ; BSR set to: 57
 32903                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 32904                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 32905   016F40  0EFF               	movlw	-1
 32906   016F42  B0E3               	btfsc	plusw1,0,c
 32907   016F44  D002               	bra	u5245
 32908   016F46  9ED2               	bcf	210,7,c	;volatile
 32909   016F48  D001               	bra	u5246
 32910   016F4A                     u5245:
 32911   016F4A  8ED2               	bsf	210,7,c	;volatile
 32912   016F4C                     u5246:
 32913                           
 32914                           ; _DATAEE_WriteByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 32915   016F4C  52E5               	movf	postdec1,f,c
 32916   016F4E  52E5               	movf	postdec1,f,c
 32917   016F50  52E5               	movf	postdec1,f,c
 32918   016F52  52E5               	movf	postdec1,f,c
 32919   016F54  0012               	return		;funcret
 32920   016F56                     __end_of_DATAEE_WriteByte:
 32921                           	callstack 0
 32922                           
 32923 ;; *************** function _run_checksum *****************
 32924 ;; Defined at:
 32925 ;;		line 43 in file "gemsecs.c"
 32926 ;; Parameters:    Size  Location     Type
 32927 ;;  byte_block      1  [STACK] const unsigned char 
 32928 ;;  clear           1  [STACK] const _Bool 
 32929 ;; Auto vars:     Size  Location     Type
 32930 ;;		None
 32931 ;; Return value:  Size  Location     Type
 32932 ;;                  2  [STACK] unsigned short 
 32933 ;; Registers used:
 32934 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 32935 ;; Tracked objects:
 32936 ;;		On entry : 6/39
 32937 ;;		On exit  : 0/0
 32938 ;;		Unchanged: 0/0
 32939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32944 ;;Total ram usage:        0 bytes
 32945 ;; Hardware stack levels used: 1
 32946 ;; Hardware stack levels required when called: 3
 32947 ;; This function calls:
 32948 ;;		Nothing
 32949 ;; This function is called by:
 32950 ;;		_m_protocol
 32951 ;;		_r_protocol
 32952 ;; This function uses a reentrant model
 32953 ;;
 32954                           
 32955                           	psect	text27
 32956   017D72                     __ptext27:
 32957                           	callstack 0
 32958   017D72                     _run_checksum:
 32959                           	callstack 26
 32960                           
 32961                           ;gemsecs.c: 43: uint16_t run_checksum(const uint8_t byte_block, const _Bool clear);gemse
      +                          cs.c: 44: {;gemsecs.c: 45:  static uint16_t sum = 0;;gemsecs.c: 47:  if (clear)
 32962                           ;stkvar	_clear @ sp[(0)+-2]
 32963                           
 32964                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32965                           ;incstack = 0
 32966   017D72  0EFE               	movlw	-2
 32967   017D74  50E3               	movf	plusw1,w,c
 32968   017D76  B4D8               	btfsc	status,2,c
 32969   017D78  D002               	goto	l9328
 32970                           
 32971                           ;gemsecs.c: 48:   sum = 0;
 32972   017D7A  6A03               	clrf	run_checksum@sum^0,c
 32973   017D7C  6A04               	clrf	(run_checksum@sum+1)^0,c
 32974   017D7E                     l9328:
 32975                           
 32976                           ;gemsecs.c: 50:  sum += byte_block;
 32977                           ;stkvar	_byte_block @ sp[(0)+-1]
 32978   017D7E  0EFF               	movlw	-1
 32979   017D80  50E3               	movf	plusw1,w,c
 32980   017D82  2603               	addwf	run_checksum@sum^0,f,c
 32981   017D84  0E00               	movlw	0
 32982   017D86  2204               	addwfc	(run_checksum@sum+1)^0,f,c
 32983                           
 32984                           ;gemsecs.c: 51:  return sum;
 32985   017D88  C003  F023         	movff	run_checksum@sum,btemp
 32986   017D8C  C004  F024         	movff	run_checksum@sum+1,btemp+1
 32987                           
 32988                           ; _run_checksum: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
 32989   017D90  52E5               	movf	postdec1,f,c
 32990   017D92  52E5               	movf	postdec1,f,c
 32991   017D94  0012               	return		;funcret
 32992   017D96                     __end_of_run_checksum:
 32993                           	callstack 0
 32994                           
 32995 ;; *************** function _UART2_is_rx_ready *****************
 32996 ;; Defined at:
 32997 ;;		line 137 in file "mcc_generated_files/uart2.c"
 32998 ;; Parameters:    Size  Location     Type
 32999 ;;		None
 33000 ;; Auto vars:     Size  Location     Type
 33001 ;;		None
 33002 ;; Return value:  Size  Location     Type
 33003 ;;                  1  [STACK] unsigned char 
 33004 ;; Registers used:
 33005 ;;		btemp
 33006 ;; Tracked objects:
 33007 ;;		On entry : 0/3C
 33008 ;;		On exit  : 0/0
 33009 ;;		Unchanged: 0/0
 33010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33015 ;;Total ram usage:        0 bytes
 33016 ;; Hardware stack levels used: 1
 33017 ;; Hardware stack levels required when called: 3
 33018 ;; This function calls:
 33019 ;;		Nothing
 33020 ;; This function is called by:
 33021 ;;		_m_protocol
 33022 ;; This function uses a reentrant model
 33023 ;;
 33024                           
 33025                           	psect	text28
 33026   0180C2                     __ptext28:
 33027                           	callstack 0
 33028   0180C2                     _UART2_is_rx_ready:
 33029                           	callstack 26
 33030                           
 33031                           ;mcc_generated_files/uart2.c: 139:     return uart2RxCount;
 33032                           
 33033                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33034                           ;incstack = 0
 33035   0180C2  C010  F023         	movff	_uart2RxCount,btemp	;volatile
 33036                           
 33037                           ; _UART2_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33038   0180C6  0012               	return		;funcret
 33039   0180C8                     __end_of_UART2_is_rx_ready:
 33040                           	callstack 0
 33041                           
 33042 ;; *************** function _UART2_Read *****************
 33043 ;; Defined at:
 33044 ;;		line 152 in file "mcc_generated_files/uart2.c"
 33045 ;; Parameters:    Size  Location     Type
 33046 ;;		None
 33047 ;; Auto vars:     Size  Location     Type
 33048 ;;  readValue       1  [STACK] unsigned char 
 33049 ;; Return value:  Size  Location     Type
 33050 ;;                  1  [STACK] unsigned char 
 33051 ;; Registers used:
 33052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
 33053 ;; Tracked objects:
 33054 ;;		On entry : 0/3C
 33055 ;;		On exit  : 3F/39
 33056 ;;		Unchanged: 0/0
 33057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33062 ;;Total ram usage:        0 bytes
 33063 ;; Hardware stack levels used: 1
 33064 ;; Hardware stack levels required when called: 3
 33065 ;; This function calls:
 33066 ;;		Nothing
 33067 ;; This function is called by:
 33068 ;;		_m_protocol
 33069 ;; This function uses a reentrant model
 33070 ;;
 33071                           
 33072                           	psect	text29
 33073   01778C                     __ptext29:
 33074                           	callstack 0
 33075   01778C                     _UART2_Read:
 33076                           	callstack 0
 33077                           
 33078                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33079   01778C  52E6               	movf	postinc1,f,c
 33080   01778E                     
 33081                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
 33082                           
 33083                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
 33084   01778E  5010               	movf	_uart2RxCount^0,w,c	;volatile
 33085   017790  B4D8               	btfsc	status,2,c
 33086   017792  D7FD               	goto	l9244
 33087                           
 33088                           ;mcc_generated_files/uart2.c: 160:     readValue = uart2RxBuffer[uart2RxTail++];
 33089   017794  0E00               	movlw	low _uart2RxBuffer
 33090   017796  2411               	addwf	_uart2RxTail^0,w,c	;volatile
 33091   017798  6ED9               	movwf	fsr2l,c
 33092   01779A  6ADA               	clrf	fsr2h,c
 33093   01779C  0E05               	movlw	high _uart2RxBuffer
 33094   01779E  22DA               	addwfc	fsr2h,f,c
 33095   0177A0  50DF               	movf	indf2,w,c
 33096   0177A2  6E2E               	movwf	(btemp+11)^0,c
 33097                           
 33098                           ;stkvar	_readValue @ sp[(-1)+0]
 33099   0177A4  0EFF               	movlw	-1
 33100   0177A6  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 33101   0177AC  2A11               	incf	_uart2RxTail^0,f,c	;volatile
 33102                           
 33103                           ;mcc_generated_files/uart2.c: 161:     if(sizeof(uart2RxBuffer) <= uart2RxTail)
 33104   0177AE  2811               	incf	_uart2RxTail^0,w,c
 33105   0177B0  B4D8               	btfsc	status,2,c
 33106                           
 33107                           ;mcc_generated_files/uart2.c: 162:     {;mcc_generated_files/uart2.c: 163:         uart2
      +                          RxTail = 0;
 33108   0177B2  6A11               	clrf	_uart2RxTail^0,c	;volatile
 33109                           
 33110                           ;mcc_generated_files/uart2.c: 165:     PIE6bits.U2RXIE = 0;
 33111                           
 33112                           ;mcc_generated_files/uart2.c: 164:     }
 33113   0177B4  0139               	movlb	57	; () banked
 33114   0177B6  9596               	bcf	150,2,b	;volatile
 33115                           
 33116                           ; BSR set to: 57
 33117                           ;mcc_generated_files/uart2.c: 166:     uart2RxCount--;
 33118   0177B8  0610               	decf	_uart2RxCount^0,f,c	;volatile
 33119                           
 33120                           ; BSR set to: 57
 33121                           ;mcc_generated_files/uart2.c: 167:     PIE6bits.U2RXIE = 1;
 33122   0177BA  8596               	bsf	150,2,b	;volatile
 33123                           
 33124                           ; BSR set to: 57
 33125                           ;mcc_generated_files/uart2.c: 169:     return readValue;
 33126                           ;stkvar	_readValue @ sp[(-1)+0]
 33127   0177BC  0EFF               	movlw	-1
 33128   0177BE  006F FF8C  F023    	movff	plusw1,btemp
 33129                           
 33130                           ; BSR set to: 57
 33131                           ; _UART2_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 33132   0177C4  52E5               	movf	postdec1,f,c
 33133   0177C6  0012               	return		;funcret
 33134   0177C8                     __end_of_UART2_Read:
 33135                           	callstack 0
 33136                           
 33137 ;; *************** function _UART1_is_rx_ready *****************
 33138 ;; Defined at:
 33139 ;;		line 147 in file "mcc_generated_files/uart1.c"
 33140 ;; Parameters:    Size  Location     Type
 33141 ;;		None
 33142 ;; Auto vars:     Size  Location     Type
 33143 ;;		None
 33144 ;; Return value:  Size  Location     Type
 33145 ;;                  1  [STACK] unsigned char 
 33146 ;; Registers used:
 33147 ;;		btemp
 33148 ;; Tracked objects:
 33149 ;;		On entry : 0/3C
 33150 ;;		On exit  : 0/0
 33151 ;;		Unchanged: 0/0
 33152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33157 ;;Total ram usage:        0 bytes
 33158 ;; Hardware stack levels used: 1
 33159 ;; Hardware stack levels required when called: 3
 33160 ;; This function calls:
 33161 ;;		Nothing
 33162 ;; This function is called by:
 33163 ;;		_m_protocol
 33164 ;;		_r_protocol
 33165 ;;		_t_protocol
 33166 ;; This function uses a reentrant model
 33167 ;;
 33168                           
 33169                           	psect	text30
 33170   0180C8                     __ptext30:
 33171                           	callstack 0
 33172   0180C8                     _UART1_is_rx_ready:
 33173                           	callstack 26
 33174                           
 33175                           ;mcc_generated_files/uart1.c: 149:  return uart1RxCount;
 33176                           
 33177                           ; BSR set to: 57
 33178                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33179                           ;incstack = 0
 33180   0180C8  C016  F023         	movff	_uart1RxCount,btemp	;volatile
 33181                           
 33182                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33183   0180CC  0012               	return		;funcret
 33184   0180CE                     __end_of_UART1_is_rx_ready:
 33185                           	callstack 0
 33186                           
 33187 ;; *************** function _UART1_Read *****************
 33188 ;; Defined at:
 33189 ;;		line 162 in file "mcc_generated_files/uart1.c"
 33190 ;; Parameters:    Size  Location     Type
 33191 ;;		None
 33192 ;; Auto vars:     Size  Location     Type
 33193 ;;  readValue       1  [STACK] unsigned char 
 33194 ;; Return value:  Size  Location     Type
 33195 ;;                  1  [STACK] unsigned char 
 33196 ;; Registers used:
 33197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
 33198 ;; Tracked objects:
 33199 ;;		On entry : 0/3C
 33200 ;;		On exit  : 3F/39
 33201 ;;		Unchanged: 0/0
 33202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33207 ;;Total ram usage:        0 bytes
 33208 ;; Hardware stack levels used: 1
 33209 ;; Hardware stack levels required when called: 3
 33210 ;; This function calls:
 33211 ;;		Nothing
 33212 ;; This function is called by:
 33213 ;;		_m_protocol
 33214 ;;		_r_protocol
 33215 ;;		_t_protocol
 33216 ;; This function uses a reentrant model
 33217 ;;
 33218                           
 33219                           	psect	text31
 33220   0177C8                     __ptext31:
 33221                           	callstack 0
 33222   0177C8                     _UART1_Read:
 33223                           	callstack 0
 33224                           
 33225                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33226   0177C8  52E6               	movf	postinc1,f,c
 33227   0177CA                     
 33228                           ;mcc_generated_files/uart1.c: 166:  while (0 == uart1RxCount) {
 33229                           
 33230                           ;mcc_generated_files/uart1.c: 166:  while (0 == uart1RxCount) {
 33231   0177CA  5016               	movf	_uart1RxCount^0,w,c	;volatile
 33232   0177CC  B4D8               	btfsc	status,2,c
 33233   0177CE  D7FD               	goto	l9220
 33234                           
 33235                           ;mcc_generated_files/uart1.c: 169:  readValue = uart1RxBuffer[uart1RxTail++];
 33236   0177D0  0E00               	movlw	low _uart1RxBuffer
 33237   0177D2  2417               	addwf	_uart1RxTail^0,w,c	;volatile
 33238   0177D4  6ED9               	movwf	fsr2l,c
 33239   0177D6  6ADA               	clrf	fsr2h,c
 33240   0177D8  0E04               	movlw	high _uart1RxBuffer
 33241   0177DA  22DA               	addwfc	fsr2h,f,c
 33242   0177DC  50DF               	movf	indf2,w,c
 33243   0177DE  6E2E               	movwf	(btemp+11)^0,c
 33244                           
 33245                           ;stkvar	_readValue @ sp[(-1)+0]
 33246   0177E0  0EFF               	movlw	-1
 33247   0177E2  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 33248   0177E8  2A17               	incf	_uart1RxTail^0,f,c	;volatile
 33249                           
 33250                           ;mcc_generated_files/uart1.c: 170:  if (sizeof(uart1RxBuffer) <= uart1RxTail) {
 33251   0177EA  2817               	incf	_uart1RxTail^0,w,c
 33252   0177EC  B4D8               	btfsc	status,2,c
 33253                           
 33254                           ;mcc_generated_files/uart1.c: 171:   uart1RxTail = 0;
 33255   0177EE  6A17               	clrf	_uart1RxTail^0,c	;volatile
 33256                           
 33257                           ;mcc_generated_files/uart1.c: 173:  PIE3bits.U1RXIE = 0;
 33258                           
 33259                           ;mcc_generated_files/uart1.c: 172:  }
 33260   0177F0  0139               	movlb	57	; () banked
 33261   0177F2  9793               	bcf	147,3,b	;volatile
 33262                           
 33263                           ; BSR set to: 57
 33264                           ;mcc_generated_files/uart1.c: 174:  uart1RxCount--;
 33265   0177F4  0616               	decf	_uart1RxCount^0,f,c	;volatile
 33266                           
 33267                           ; BSR set to: 57
 33268                           ;mcc_generated_files/uart1.c: 175:  PIE3bits.U1RXIE = 1;
 33269   0177F6  8793               	bsf	147,3,b	;volatile
 33270                           
 33271                           ; BSR set to: 57
 33272                           ;mcc_generated_files/uart1.c: 177:  return readValue;
 33273                           ;stkvar	_readValue @ sp[(-1)+0]
 33274   0177F8  0EFF               	movlw	-1
 33275   0177FA  006F FF8C  F023    	movff	plusw1,btemp
 33276                           
 33277                           ; BSR set to: 57
 33278                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 33279   017800  52E5               	movf	postdec1,f,c
 33280   017802  0012               	return		;funcret
 33281   017804                     __end_of_UART1_Read:
 33282                           	callstack 0
 33283                           
 33284 ;; *************** function _init_display *****************
 33285 ;; Defined at:
 33286 ;;		line 37 in file "eadog.c"
 33287 ;; Parameters:    Size  Location     Type
 33288 ;;		None
 33289 ;; Auto vars:     Size  Location     Type
 33290 ;;		None
 33291 ;; Return value:  Size  Location     Type
 33292 ;;                  1  [STACK] void 
 33293 ;; Registers used:
 33294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 33295 ;; Tracked objects:
 33296 ;;		On entry : 0/3C
 33297 ;;		On exit  : 3F/3D
 33298 ;;		Unchanged: 0/0
 33299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33304 ;;Total ram usage:        0 bytes
 33305 ;; Hardware stack levels used: 1
 33306 ;; Hardware stack levels required when called: 5
 33307 ;; This function calls:
 33308 ;;		_ringBufS_init
 33309 ;;		_send_lcd_cmd
 33310 ;;		_send_lcd_cmd_long
 33311 ;;		_wdtdelay
 33312 ;; This function is called by:
 33313 ;;		_main
 33314 ;; This function uses a reentrant model
 33315 ;;
 33316                           
 33317                           	psect	text32
 33318   016630                     __ptext32:
 33319                           	callstack 0
 33320   016630                     _init_display:
 33321                           	callstack 25
 33322                           
 33323                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
 33324                           
 33325                           ; BSR set to: 57
 33326                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33327                           ;incstack = 0
 33328   016630  0E80               	movlw	low _ring_buf1
 33329   016632  0100               	movlb	0	; () banked
 33330   016634  6F8D               	movwf	(_spi_link+6)& (0+255),b	;volatile
 33331   016636  0E02               	movlw	high _ring_buf1
 33332   016638  6F8E               	movwf	(_spi_link+7)& (0+255),b	;volatile
 33333                           
 33334                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
 33335   01663A  0E00               	movlw	low _ring_buf2
 33336   01663C  6F8B               	movwf	(_spi_link+4)& (0+255),b	;volatile
 33337   01663E  0E03               	movlw	high _ring_buf2
 33338   016640  6F8C               	movwf	(_spi_link+5)& (0+255),b	;volatile
 33339                           
 33340                           ; BSR set to: 0
 33341                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
 33342   016642  0060  F237  FFE6   	movff	_spi_link+6,postinc1
 33343   016648  0060  F23B  FFE6   	movff	_spi_link+7,postinc1
 33344   01664E  EC8D  F0BD         	call	_ringBufS_init	;wreg free
 33345                           
 33346                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
 33347   016652  0060  F22F  FFE6   	movff	_spi_link+4,postinc1
 33348   016658  0060  F233  FFE6   	movff	_spi_link+5,postinc1
 33349   01665E  EC8D  F0BD         	call	_ringBufS_init	;wreg free
 33350                           
 33351                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
 33352   016662  84BE               	bsf	190,2,c	;volatile
 33353   016664  84BC               	bsf	188,2,c	;volatile
 33354                           
 33355                           ;eadog.c: 46:  wdtdelay(350000);
 33356   016666  0E30               	movlw	48
 33357   016668  6EE6               	movwf	postinc1,c
 33358   01666A  0E57               	movlw	87
 33359   01666C  6EE6               	movwf	postinc1,c
 33360   01666E  0E05               	movlw	5
 33361   016670  6EE6               	movwf	postinc1,c
 33362   016672  0E00               	movlw	0
 33363   016674  6EE6               	movwf	postinc1,c
 33364   016676  EC65  F0B9         	call	_wdtdelay	;wreg free
 33365                           
 33366                           ; BSR set to: 0
 33367                           ;eadog.c: 47:  send_lcd_cmd(0x39);
 33368   01667A  0E39               	movlw	57
 33369   01667C  6EE6               	movwf	postinc1,c
 33370   01667E  EC79  F0BD         	call	_send_lcd_cmd	;wreg free
 33371                           
 33372                           ; BSR set to: 0
 33373                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
 33374   016682  0E1D               	movlw	29
 33375   016684  6EE6               	movwf	postinc1,c
 33376   016686  EC79  F0BD         	call	_send_lcd_cmd	;wreg free
 33377                           
 33378                           ; BSR set to: 0
 33379                           ;eadog.c: 49:  send_lcd_cmd(0x50);
 33380   01668A  0E50               	movlw	80
 33381   01668C  6EE6               	movwf	postinc1,c
 33382   01668E  EC79  F0BD         	call	_send_lcd_cmd	;wreg free
 33383                           
 33384                           ; BSR set to: 0
 33385                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
 33386   016692  0E6C               	movlw	108
 33387   016694  6EE6               	movwf	postinc1,c
 33388   016696  EC79  F0BD         	call	_send_lcd_cmd	;wreg free
 33389                           
 33390                           ; BSR set to: 0
 33391                           ;eadog.c: 51:  send_lcd_cmd(0x76);
 33392   01669A  0E76               	movlw	118
 33393   01669C  6EE6               	movwf	postinc1,c
 33394   01669E  EC79  F0BD         	call	_send_lcd_cmd	;wreg free
 33395                           
 33396                           ; BSR set to: 0
 33397                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
 33398   0166A2  0E38               	movlw	56
 33399   0166A4  6EE6               	movwf	postinc1,c
 33400   0166A6  EC65  F0BD         	call	_send_lcd_cmd_long	;wreg free
 33401                           
 33402                           ; BSR set to: 0
 33403                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
 33404   0166AA  0E0F               	movlw	15
 33405   0166AC  6EE6               	movwf	postinc1,c
 33406   0166AE  EC79  F0BD         	call	_send_lcd_cmd	;wreg free
 33407                           
 33408                           ; BSR set to: 0
 33409                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
 33410   0166B2  0E01               	movlw	1
 33411   0166B4  6EE6               	movwf	postinc1,c
 33412   0166B6  EC65  F0BD         	call	_send_lcd_cmd_long	;wreg free
 33413                           
 33414                           ; BSR set to: 0
 33415                           ;eadog.c: 55:  send_lcd_cmd(0x02);
 33416   0166BA  0E02               	movlw	2
 33417   0166BC  6EE6               	movwf	postinc1,c
 33418   0166BE  EC79  F0BD         	call	_send_lcd_cmd	;wreg free
 33419                           
 33420                           ; BSR set to: 0
 33421                           ;eadog.c: 56:  send_lcd_cmd(0x06);
 33422   0166C2  0E06               	movlw	6
 33423   0166C4  6EE6               	movwf	postinc1,c
 33424   0166C6  EC79  F0BD         	call	_send_lcd_cmd	;wreg free
 33425                           
 33426                           ; BSR set to: 0
 33427                           ;eadog.c: 57:  wdtdelay(30);
 33428   0166CA  0E1E               	movlw	30
 33429   0166CC  6EE6               	movwf	postinc1,c
 33430   0166CE  0E00               	movlw	0
 33431   0166D0  6EE6               	movwf	postinc1,c
 33432   0166D2  0E00               	movlw	0
 33433   0166D4  6EE6               	movwf	postinc1,c
 33434   0166D6  0E00               	movlw	0
 33435   0166D8  6EE6               	movwf	postinc1,c
 33436   0166DA  EC65  F0B9         	call	_wdtdelay	;wreg free
 33437                           
 33438                           ; BSR set to: 0
 33439                           ;eadog.c: 58:  SPI1CON2 = 0x02;
 33440   0166DE  0E02               	movlw	2
 33441   0166E0  013D               	movlb	61	; () banked
 33442   0166E2  6F16               	movwf	22,b	;volatile
 33443                           
 33444                           ; BSR set to: 61
 33445                           ;eadog.c: 59:  SPI1CON1 = 0x40;
 33446   0166E4  0E40               	movlw	64
 33447   0166E6  6F15               	movwf	21,b	;volatile
 33448                           
 33449                           ; BSR set to: 61
 33450                           ;eadog.c: 60:  SPI1CON0 = 0x83;
 33451   0166E8  0E83               	movlw	131
 33452   0166EA  6F14               	movwf	20,b	;volatile
 33453                           
 33454                           ; BSR set to: 61
 33455                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
 33456   0166EC  931A               	bcf	26,1,b	;volatile
 33457                           
 33458                           ; BSR set to: 61
 33459                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
 33460   0166EE  0E3F               	movlw	-193
 33461   0166F0  013B               	movlb	59	; () banked
 33462   0166F2  17FD               	andwf	253,f,b	;volatile
 33463                           
 33464                           ; BSR set to: 59
 33465                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
 33466   0166F4  9BFD               	bcf	253,5,b	;volatile
 33467                           
 33468                           ; BSR set to: 59
 33469                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
 33470   0166F6  51FD               	movf	253,w,b	;volatile
 33471   0166F8  0BF9               	andlw	-7
 33472   0166FA  0902               	iorlw	2
 33473   0166FC  6FFD               	movwf	253,b	;volatile
 33474                           
 33475                           ; BSR set to: 59
 33476                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
 33477   0166FE  0EE7               	movlw	-25
 33478   016700  17FD               	andwf	253,f,b	;volatile
 33479                           
 33480                           ; BSR set to: 59
 33481                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
 33482   016702  81FD               	bsf	253,0,b	;volatile
 33483                           
 33484                           ; BSR set to: 59
 33485                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
 33486   016704  0E80               	movlw	low _ring_buf1
 33487   016706  6FF9               	movwf	249,b	;volatile
 33488   016708  0E02               	movlw	high _ring_buf1
 33489   01670A  6FFA               	movwf	250,b	;volatile
 33490   01670C  0E00               	movlw	low (_ring_buf1 shr (0+16))
 33491   01670E  6FFB               	movwf	251,b	;volatile
 33492                           
 33493                           ; BSR set to: 59
 33494                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
 33495   016710  9BFC               	bcf	252,5,b	;volatile
 33496                           
 33497                           ; BSR set to: 59
 33498                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
 33499   016712  013D               	movlb	61	; () banked
 33500   016714  831A               	bsf	26,1,b	;volatile
 33501                           
 33502                           ; BSR set to: 61
 33503                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
 33504   016716  94BE               	bcf	190,2,c	;volatile
 33505                           
 33506                           ; BSR set to: 61
 33507                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 33508   016718  0012               	return		;funcret
 33509   01671A                     __end_of_init_display:
 33510                           	callstack 0
 33511                           
 33512 ;; *************** function _send_lcd_cmd_long *****************
 33513 ;; Defined at:
 33514 ;;		line 114 in file "eadog.c"
 33515 ;; Parameters:    Size  Location     Type
 33516 ;;  cmd             1  [STACK] const unsigned char 
 33517 ;; Auto vars:     Size  Location     Type
 33518 ;;		None
 33519 ;; Return value:  Size  Location     Type
 33520 ;;                  1  [STACK] void 
 33521 ;; Registers used:
 33522 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 33523 ;; Tracked objects:
 33524 ;;		On entry : 3F/0
 33525 ;;		On exit  : 3F/0
 33526 ;;		Unchanged: 0/0
 33527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33532 ;;Total ram usage:        0 bytes
 33533 ;; Hardware stack levels used: 1
 33534 ;; Hardware stack levels required when called: 4
 33535 ;; This function calls:
 33536 ;;		_SPI1_Exchange8bit
 33537 ;;		_wdtdelay
 33538 ;; This function is called by:
 33539 ;;		_init_display
 33540 ;; This function uses a reentrant model
 33541 ;;
 33542                           
 33543                           	psect	text33
 33544   017ACA                     __ptext33:
 33545                           	callstack 0
 33546   017ACA                     _send_lcd_cmd_long:
 33547                           	callstack 25
 33548                           
 33549                           ; BSR set to: 61
 33550                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33551                           ;incstack = 0
 33552                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
 33553   017ACA  92BC               	bcf	188,1,c	;volatile
 33554                           
 33555                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
 33556   017ACC  94BC               	bcf	188,2,c	;volatile
 33557                           
 33558                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
 33559                           ;stkvar	_cmd @ sp[(0)+-1]
 33560   017ACE  0EFF               	movlw	-1
 33561   017AD0  50E3               	movf	plusw1,w,c
 33562   017AD2  6EE6               	movwf	postinc1,c
 33563   017AD4  EC58  F0BF         	call	_SPI1_Exchange8bit	;wreg free
 33564                           
 33565                           ; BSR set to: 57
 33566                           ;eadog.c: 119:  wdtdelay(800);
 33567   017AD8  0E20               	movlw	32
 33568   017ADA  6EE6               	movwf	postinc1,c
 33569   017ADC  0E03               	movlw	3
 33570   017ADE  6EE6               	movwf	postinc1,c
 33571   017AE0  0E00               	movlw	0
 33572   017AE2  6EE6               	movwf	postinc1,c
 33573   017AE4  0E00               	movlw	0
 33574   017AE6  6EE6               	movwf	postinc1,c
 33575   017AE8  EC65  F0B9         	call	_wdtdelay	;wreg free
 33576                           
 33577                           ; BSR set to: 0
 33578   017AEC  82BC               	bsf	188,1,c	;volatile
 33579                           
 33580                           ; BSR set to: 0
 33581                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 33582   017AEE  52E5               	movf	postdec1,f,c
 33583   017AF0  0012               	return		;funcret
 33584   017AF2                     __end_of_send_lcd_cmd_long:
 33585                           	callstack 0
 33586                           
 33587 ;; *************** function _send_lcd_cmd *****************
 33588 ;; Defined at:
 33589 ;;		line 102 in file "eadog.c"
 33590 ;; Parameters:    Size  Location     Type
 33591 ;;  cmd             1  [STACK] const unsigned char 
 33592 ;; Auto vars:     Size  Location     Type
 33593 ;;		None
 33594 ;; Return value:  Size  Location     Type
 33595 ;;                  1  [STACK] void 
 33596 ;; Registers used:
 33597 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 33598 ;; Tracked objects:
 33599 ;;		On entry : 3F/0
 33600 ;;		On exit  : 3F/0
 33601 ;;		Unchanged: 0/0
 33602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33607 ;;Total ram usage:        0 bytes
 33608 ;; Hardware stack levels used: 1
 33609 ;; Hardware stack levels required when called: 4
 33610 ;; This function calls:
 33611 ;;		_SPI1_Exchange8bit
 33612 ;;		_wdtdelay
 33613 ;; This function is called by:
 33614 ;;		_init_display
 33615 ;; This function uses a reentrant model
 33616 ;;
 33617                           
 33618                           	psect	text34
 33619   017AF2                     __ptext34:
 33620                           	callstack 0
 33621   017AF2                     _send_lcd_cmd:
 33622                           	callstack 25
 33623                           
 33624                           ; BSR set to: 0
 33625                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33626                           ;incstack = 0
 33627                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
 33628   017AF2  92BC               	bcf	188,1,c	;volatile
 33629                           
 33630                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
 33631   017AF4  94BC               	bcf	188,2,c	;volatile
 33632                           
 33633                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
 33634                           ;stkvar	_cmd @ sp[(0)+-1]
 33635   017AF6  0EFF               	movlw	-1
 33636   017AF8  50E3               	movf	plusw1,w,c
 33637   017AFA  6EE6               	movwf	postinc1,c
 33638   017AFC  EC58  F0BF         	call	_SPI1_Exchange8bit	;wreg free
 33639                           
 33640                           ; BSR set to: 57
 33641                           ;eadog.c: 107:  wdtdelay(30);
 33642   017B00  0E1E               	movlw	30
 33643   017B02  6EE6               	movwf	postinc1,c
 33644   017B04  0E00               	movlw	0
 33645   017B06  6EE6               	movwf	postinc1,c
 33646   017B08  0E00               	movlw	0
 33647   017B0A  6EE6               	movwf	postinc1,c
 33648   017B0C  0E00               	movlw	0
 33649   017B0E  6EE6               	movwf	postinc1,c
 33650   017B10  EC65  F0B9         	call	_wdtdelay	;wreg free
 33651                           
 33652                           ; BSR set to: 0
 33653   017B14  82BC               	bsf	188,1,c	;volatile
 33654                           
 33655                           ; BSR set to: 0
 33656                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
 33657   017B16  52E5               	movf	postdec1,f,c
 33658   017B18  0012               	return		;funcret
 33659   017B1A                     __end_of_send_lcd_cmd:
 33660                           	callstack 0
 33661                           
 33662 ;; *************** function _SPI1_Exchange8bit *****************
 33663 ;; Defined at:
 33664 ;;		line 79 in file "mcc_generated_files/spi1.c"
 33665 ;; Parameters:    Size  Location     Type
 33666 ;;  data            1  [STACK] unsigned char 
 33667 ;; Auto vars:     Size  Location     Type
 33668 ;;		None
 33669 ;; Return value:  Size  Location     Type
 33670 ;;                  1  [STACK] unsigned char 
 33671 ;; Registers used:
 33672 ;;		wreg, fsr1l, fsr1h, status,2, btemp
 33673 ;; Tracked objects:
 33674 ;;		On entry : 0/0
 33675 ;;		On exit  : 3F/39
 33676 ;;		Unchanged: 0/0
 33677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33682 ;;Total ram usage:        0 bytes
 33683 ;; Hardware stack levels used: 1
 33684 ;; Hardware stack levels required when called: 3
 33685 ;; This function calls:
 33686 ;;		Nothing
 33687 ;; This function is called by:
 33688 ;;		_send_lcd_cmd
 33689 ;;		_send_lcd_cmd_long
 33690 ;; This function uses a reentrant model
 33691 ;;
 33692                           
 33693                           	psect	text35
 33694   017EB0                     __ptext35:
 33695                           	callstack 0
 33696   017EB0                     _SPI1_Exchange8bit:
 33697                           	callstack 25
 33698                           
 33699                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
 33700                           
 33701                           ; BSR set to: 0
 33702                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33703                           ;incstack = 0
 33704   017EB0  0E01               	movlw	1
 33705   017EB2  013D               	movlb	61	; () banked
 33706   017EB4  6F12               	movwf	18,b	;volatile
 33707                           
 33708                           ; BSR set to: 61
 33709                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
 33710                           ;stkvar	_data @ sp[(0)+-1]
 33711   017EB6  0EFF               	movlw	-1
 33712   017EB8  006F FF8F FD11     	movff	plusw1,15633	;volatile
 33713   017EBE                     l863:
 33714                           
 33715                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
 33716   017EBE  0139               	movlb	57	; () banked
 33717   017EC0  A9A2               	btfss	162,4,b	;volatile
 33718   017EC2  D7FD               	goto	l863
 33719                           
 33720                           ; BSR set to: 57
 33721                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
 33722   017EC4  006F F440  F023    	movff	15632,btemp	;volatile
 33723                           
 33724                           ; BSR set to: 57
 33725                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 33726   017ECA  52E5               	movf	postdec1,f,c
 33727   017ECC  0012               	return		;funcret
 33728   017ECE                     __end_of_SPI1_Exchange8bit:
 33729                           	callstack 0
 33730                           
 33731 ;; *************** function _ringBufS_init *****************
 33732 ;; Defined at:
 33733 ;;		line 22 in file "ringbufs.c"
 33734 ;; Parameters:    Size  Location     Type
 33735 ;;  _this           2  [STACK] PTR volatile struct ring
 33736 ;;		 -> ring_buf2(67), ring_buf1(67), 
 33737 ;; Auto vars:     Size  Location     Type
 33738 ;;		None
 33739 ;; Return value:  Size  Location     Type
 33740 ;;                  1  [STACK] void 
 33741 ;; Registers used:
 33742 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 33743 ;; Tracked objects:
 33744 ;;		On entry : 0/0
 33745 ;;		On exit  : 0/0
 33746 ;;		Unchanged: 0/0
 33747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33752 ;;Total ram usage:        0 bytes
 33753 ;; Hardware stack levels used: 1
 33754 ;; Hardware stack levels required when called: 4
 33755 ;; This function calls:
 33756 ;;		_memset
 33757 ;; This function is called by:
 33758 ;;		_init_display
 33759 ;; This function uses a reentrant model
 33760 ;;
 33761                           
 33762                           	psect	text36
 33763   017B1A                     __ptext36:
 33764                           	callstack 0
 33765   017B1A                     _ringBufS_init:
 33766                           	callstack 25
 33767                           
 33768                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
 33769                           
 33770                           ; BSR set to: 57
 33771                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33772                           ;incstack = 0
 33773   017B1A  0E43               	movlw	67
 33774   017B1C  6EE6               	movwf	postinc1,c
 33775   017B1E  0E00               	movlw	0
 33776   017B20  6EE6               	movwf	postinc1,c
 33777   017B22  0E00               	movlw	0
 33778   017B24  6EE6               	movwf	postinc1,c
 33779   017B26  0E00               	movlw	0
 33780   017B28  6EE6               	movwf	postinc1,c
 33781                           
 33782                           ;stkvar	__this @ sp[(-4)+-2]
 33783   017B2A  0EFA               	movlw	-6
 33784   017B2C  006F FF8F FFE6     	movff	plusw1,postinc1
 33785   017B32  006F FF8F FFE6     	movff	plusw1,postinc1
 33786   017B38  EC1E  F0B6         	call	_memset	;wreg free
 33787                           
 33788                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 33789   017B3C  52E5               	movf	postdec1,f,c
 33790   017B3E  52E5               	movf	postdec1,f,c
 33791   017B40  0012               	return		;funcret
 33792   017B42                     __end_of_ringBufS_init:
 33793                           	callstack 0
 33794                           
 33795 ;; *************** function _hb_message *****************
 33796 ;; Defined at:
 33797 ;;		line 572 in file "gemsecs.c"
 33798 ;; Parameters:    Size  Location     Type
 33799 ;;		None
 33800 ;; Auto vars:     Size  Location     Type
 33801 ;;		None
 33802 ;; Return value:  Size  Location     Type
 33803 ;;                  1  [STACK] void 
 33804 ;; Registers used:
 33805 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33806 ;; Tracked objects:
 33807 ;;		On entry : 0/3C
 33808 ;;		On exit  : 0/0
 33809 ;;		Unchanged: 0/0
 33810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33815 ;;Total ram usage:        0 bytes
 33816 ;; Hardware stack levels used: 1
 33817 ;; Hardware stack levels required when called: 3
 33818 ;; This function calls:
 33819 ;;		Nothing
 33820 ;; This function is called by:
 33821 ;;		_main
 33822 ;; This function uses a reentrant model
 33823 ;;
 33824                           
 33825                           	psect	text37
 33826   017378                     __ptext37:
 33827                           	callstack 0
 33828   017378                     _hb_message:
 33829                           	callstack 27
 33830                           
 33831                           ;gemsecs.c: 574:  V.ping++;
 33832                           
 33833                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33834                           ;incstack = 0
 33835   017378  EE23  F15D         	lfsr	2,_V+323	;volatile
 33836   01737C  2ADE               	incf	postinc2,f,c
 33837   01737E  0E00               	movlw	0
 33838   017380  22DD               	addwfc	postdec2,f,c
 33839                           
 33840                           ;gemsecs.c: 575:  V.s_state = SEQ_STATE_TX;
 33841   017382  0E02               	movlw	2
 33842   017384  006F FFA0  FC1A    	movff	wreg,_V
 33843                           
 33844                           ;gemsecs.c: 576:  V.failed_send = 0;
 33845   01738A  EE23  F167         	lfsr	2,_V+333	;volatile
 33846   01738E  0E0F               	movlw	-241
 33847   017390  16DF               	andwf	223,f,c
 33848                           
 33849                           ;gemsecs.c: 577:  V.t_l_state = LINK_STATE_IDLE;
 33850   017392  0E00               	movlw	0
 33851   017394  006F FFA0  FC20    	movff	wreg,_V+6	;volatile
 33852                           
 33853                           ;gemsecs.c: 578:  if (V.msg_error == MSG_ERROR_NONE) {
 33854   01739A  EE23  F151         	lfsr	2,_V+311	;volatile
 33855   01739E  50DF               	movf	indf2,w,c
 33856   0173A0  A4D8               	btfss	status,2,c
 33857   0173A2  D009               	goto	l1985
 33858                           
 33859                           ;gemsecs.c: 579:   V.stream = 1;
 33860   0173A4  0E01               	movlw	1
 33861   0173A6  006F FFA0  FD4D    	movff	wreg,_V+307	;volatile
 33862                           
 33863                           ;gemsecs.c: 580:   V.function = 2;
 33864   0173AC  0E02               	movlw	2
 33865   0173AE  006F FFA0  FD4E    	movff	wreg,_V+308	;volatile
 33866                           
 33867                           ;gemsecs.c: 581:  } else {
 33868   0173B4  0012               	return	
 33869   0173B6                     l1985:
 33870                           
 33871                           ;gemsecs.c: 582:   V.stream = 1;
 33872   0173B6  0E01               	movlw	1
 33873   0173B8  006F FFA0  FD4D    	movff	wreg,_V+307	;volatile
 33874                           
 33875                           ;gemsecs.c: 583:   V.function = 14;
 33876   0173BE  0E0E               	movlw	14
 33877   0173C0  006F FFA0  FD4E    	movff	wreg,_V+308	;volatile
 33878                           
 33879                           ; _hb_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 33880   0173C6  0012               	return		;funcret
 33881   0173C8                     __end_of_hb_message:
 33882                           	callstack 0
 33883                           
 33884 ;; *************** function _eaDogM_WriteCommand *****************
 33885 ;; Defined at:
 33886 ;;		line 160 in file "eadog.c"
 33887 ;; Parameters:    Size  Location     Type
 33888 ;;  cmd             1  [STACK] const unsigned char 
 33889 ;; Auto vars:     Size  Location     Type
 33890 ;;		None
 33891 ;; Return value:  Size  Location     Type
 33892 ;;                  1  [STACK] void 
 33893 ;; Registers used:
 33894 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 33895 ;; Tracked objects:
 33896 ;;		On entry : 3F/3D
 33897 ;;		On exit  : 3F/0
 33898 ;;		Unchanged: 0/0
 33899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33904 ;;Total ram usage:        0 bytes
 33905 ;; Hardware stack levels used: 1
 33906 ;; Hardware stack levels required when called: 13
 33907 ;; This function calls:
 33908 ;;		_send_lcd_cmd_dma
 33909 ;; This function is called by:
 33910 ;;		_main
 33911 ;; This function uses a reentrant model
 33912 ;;
 33913                           
 33914                           	psect	text38
 33915   01805C                     __ptext38:
 33916                           	callstack 0
 33917   01805C                     _eaDogM_WriteCommand:
 33918                           	callstack 17
 33919                           
 33920                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
 33921                           ;stkvar	_cmd @ sp[(0)+-1]
 33922                           
 33923                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33924                           ;incstack = 0
 33925   01805C  0EFF               	movlw	-1
 33926   01805E  50E3               	movf	plusw1,w,c
 33927   018060  6EE6               	movwf	postinc1,c
 33928   018062  EC92  F0B9         	call	_send_lcd_cmd_dma	;wreg free
 33929                           
 33930                           ; BSR set to: 0
 33931                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
 33932   018066  52E5               	movf	postdec1,f,c
 33933   018068  0012               	return		;funcret
 33934   01806A                     __end_of_eaDogM_WriteCommand:
 33935                           	callstack 0
 33936                           
 33937 ;; *************** function _check_help *****************
 33938 ;; Defined at:
 33939 ;;		line 40 in file "mconfig.c"
 33940 ;; Parameters:    Size  Location     Type
 33941 ;;  flipper         1  [STACK] _Bool 
 33942 ;; Auto vars:     Size  Location     Type
 33943 ;;		None
 33944 ;; Return value:  Size  Location     Type
 33945 ;;                  1  [STACK] void 
 33946 ;; Registers used:
 33947 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 33948 ;; Tracked objects:
 33949 ;;		On entry : 0/1
 33950 ;;		On exit  : 0/0
 33951 ;;		Unchanged: 0/0
 33952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33957 ;;Total ram usage:        0 bytes
 33958 ;; Hardware stack levels used: 1
 33959 ;; Hardware stack levels required when called: 15
 33960 ;; This function calls:
 33961 ;;		_StartTimer
 33962 ;;		_TimerDone
 33963 ;;		_display_help
 33964 ;;		_display_info
 33965 ;;		_get_vterm_ptr
 33966 ;;		_help_button
 33967 ;;		_mode_lamp_bright
 33968 ;;		_mode_lamp_dim
 33969 ;;		_set_display_info
 33970 ;;		_set_temp_display_help
 33971 ;;		_set_vterm
 33972 ;;		_sprintf
 33973 ;;		_update_lcd
 33974 ;;		_vterm_dump
 33975 ;; This function is called by:
 33976 ;;		_main
 33977 ;; This function uses a reentrant model
 33978 ;;
 33979                           
 33980                           	psect	text39
 33981   014A32                     __ptext39:
 33982                           	callstack 0
 33983   014A32                     _check_help:
 33984                           	callstack 15
 33985                           
 33986                           ;mconfig.c: 40: void check_help(_Bool flipper);mconfig.c: 41: {;mconfig.c: 45:  if (help
      +                          _button() && display_info() != DIS_HELP) {
 33987                           
 33988                           ; BSR set to: 0
 33989                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33990                           ;incstack = 0
 33991   014A32  EC02  F0BC         	call	_help_button	;wreg free
 33992   014A36  5023               	movf	btemp^0,w,c
 33993   014A38  B4D8               	btfsc	status,2,c
 33994   014A3A  D0CC               	goto	l13624
 33995   014A3C  EC53  F0C0         	call	_display_info	;wreg free
 33996   014A40  0E06               	movlw	6
 33997   014A42  1823               	xorwf	btemp^0,w,c
 33998   014A44  B4D8               	btfsc	status,2,c
 33999   014A46  D0C6               	goto	l13624
 34000                           
 34001                           ;mconfig.c: 46:   StartTimer(TMR_FLIPPER, 1500);
 34002   014A48  0EDC               	movlw	220
 34003   014A4A  6EE6               	movwf	postinc1,c
 34004   014A4C  0E05               	movlw	5
 34005   014A4E  6EE6               	movwf	postinc1,c
 34006   014A50  0E0C               	movlw	12
 34007   014A52  6EE6               	movwf	postinc1,c
 34008   014A54  EC20  F0BC         	call	_StartTimer	;wreg free
 34009                           
 34010                           ;mconfig.c: 47:   if (V.debug)
 34011   014A58  EE23  F168         	lfsr	2,_V+334	;volatile
 34012   014A5C  BADF               	btfsc	indf2,5,c
 34013                           
 34014                           ;mconfig.c: 48:    vterm_dump();
 34015   014A5E  EC47  F0AD         	call	_vterm_dump	;wreg free
 34016                           
 34017                           ;mconfig.c: 50:   set_vterm(1);
 34018   014A62  0E01               	movlw	1
 34019   014A64  6EE6               	movwf	postinc1,c
 34020   014A66  EC67  F0BF         	call	_set_vterm	;wreg free
 34021                           
 34022                           ;mconfig.c: 51:   set_temp_display_help(display_info());
 34023   014A6A  EC53  F0C0         	call	_display_info	;wreg free
 34024   014A6E  5023               	movf	btemp^0,w,c
 34025   014A70  6EE6               	movwf	postinc1,c
 34026   014A72  EC1C  F0C0         	call	_set_temp_display_help	;wreg free
 34027                           
 34028                           ;mconfig.c: 52:   set_display_info(DIS_HELP);
 34029   014A76  0E06               	movlw	6
 34030   014A78  6EE6               	movwf	postinc1,c
 34031   014A7A  EC48  F0BF         	call	_set_display_info	;wreg free
 34032                           
 34033                           ;mconfig.c: 53:   if (flipper) {
 34034                           ;stkvar	_flipper @ sp[(0)+-1]
 34035   014A7E  0EFF               	movlw	-1
 34036   014A80  50E3               	movf	plusw1,w,c
 34037   014A82  B4D8               	btfsc	status,2,c
 34038   014A84  D019               	goto	l13612
 34039                           
 34040                           ;mconfig.c: 54:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 34041   014A86  0EC9               	movlw	low STR_37
 34042   014A88  6EE6               	movwf	postinc1,c
 34043   014A8A  0EFF               	movlw	high STR_37
 34044   014A8C  6EE6               	movwf	postinc1,c
 34045   014A8E  0ED6               	movlw	low STR_39
 34046   014A90  6EE6               	movwf	postinc1,c
 34047   014A92  0EFE               	movlw	high STR_39
 34048   014A94  6EE6               	movwf	postinc1,c
 34049   014A96  0E01               	movlw	1
 34050   014A98  6EE6               	movwf	postinc1,c
 34051   014A9A  0E00               	movlw	0
 34052   014A9C  6EE6               	movwf	postinc1,c
 34053   014A9E  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 34054   014AA2  0060  F08F  FFE6   	movff	btemp,postinc1
 34055   014AA8  0060  F093  FFE6   	movff	btemp+1,postinc1
 34056   014AAE  0E06               	movlw	6
 34057   014AB0  6EE6               	movwf	postinc1,c
 34058   014AB2  EC29  F0B2         	call	_sprintf	;wreg free
 34059                           
 34060                           ;mconfig.c: 55:   } else {
 34061   014AB6  D018               	goto	l2376
 34062   014AB8                     l13612:
 34063                           
 34064                           ;mconfig.c: 56:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
 34065   014AB8  0EDF               	movlw	low STR_38
 34066   014ABA  6EE6               	movwf	postinc1,c
 34067   014ABC  0EFF               	movlw	high STR_38
 34068   014ABE  6EE6               	movwf	postinc1,c
 34069   014AC0  0ED6               	movlw	low STR_39
 34070   014AC2  6EE6               	movwf	postinc1,c
 34071   014AC4  0EFE               	movlw	high STR_39
 34072   014AC6  6EE6               	movwf	postinc1,c
 34073   014AC8  0E01               	movlw	1
 34074   014ACA  6EE6               	movwf	postinc1,c
 34075   014ACC  0E00               	movlw	0
 34076   014ACE  6EE6               	movwf	postinc1,c
 34077   014AD0  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 34078   014AD4  0060  F08F  FFE6   	movff	btemp,postinc1
 34079   014ADA  0060  F093  FFE6   	movff	btemp+1,postinc1
 34080   014AE0  0E06               	movlw	6
 34081   014AE2  6EE6               	movwf	postinc1,c
 34082   014AE4  EC29  F0B2         	call	_sprintf	;wreg free
 34083   014AE8                     l2376:
 34084                           
 34085                           ; BSR set to: 1
 34086                           ;mconfig.c: 58:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 34087   014AE8  EE23  F169         	lfsr	2,_V+335	;volatile
 34088   014AEC  30DF               	rrcf	223,w,c
 34089   014AEE  32E8               	rrcf	wreg,f,c
 34090   014AF0  32E8               	rrcf	wreg,f,c
 34091   014AF2  0B03               	andlw	3
 34092   014AF4  0D40               	mullw	64
 34093   014AF6  0E20               	movlw	low (_T+32)
 34094   014AF8  24F3               	addwf	243,w,c
 34095   014AFA  6E2D               	movwf	(btemp+10)^0,c
 34096   014AFC  0E06               	movlw	high (_T+32)
 34097   014AFE  20F4               	addwfc	prodh,w,c
 34098   014B00  6E2E               	movwf	(btemp+11)^0,c
 34099   014B02  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 34100   014B08  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 34101   014B0E  0ED5               	movlw	low STR_41
 34102   014B10  6EE6               	movwf	postinc1,c
 34103   014B12  0EFF               	movlw	high STR_41
 34104   014B14  6EE6               	movwf	postinc1,c
 34105   014B16  0E01               	movlw	1
 34106   014B18  6EE6               	movwf	postinc1,c
 34107   014B1A  0E01               	movlw	1
 34108   014B1C  6EE6               	movwf	postinc1,c
 34109   014B1E  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 34110   014B22  0060  F08F  FFE6   	movff	btemp,postinc1
 34111   014B28  0060  F093  FFE6   	movff	btemp+1,postinc1
 34112   014B2E  0E06               	movlw	6
 34113   014B30  6EE6               	movwf	postinc1,c
 34114   014B32  EC29  F0B2         	call	_sprintf	;wreg free
 34115                           
 34116                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 34117   014B36  EE23  F169         	lfsr	2,_V+335	;volatile
 34118   014B3A  30DF               	rrcf	223,w,c
 34119   014B3C  32E8               	rrcf	wreg,f,c
 34120   014B3E  32E8               	rrcf	wreg,f,c
 34121   014B40  0B03               	andlw	3
 34122   014B42  0D40               	mullw	64
 34123   014B44  0E00               	movlw	low _T
 34124   014B46  24F3               	addwf	243,w,c
 34125   014B48  6E2D               	movwf	(btemp+10)^0,c
 34126   014B4A  0E06               	movlw	high _T
 34127   014B4C  20F4               	addwfc	prodh,w,c
 34128   014B4E  6E2E               	movwf	(btemp+11)^0,c
 34129   014B50  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 34130   014B56  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 34131   014B5C  0ED5               	movlw	low STR_41
 34132   014B5E  6EE6               	movwf	postinc1,c
 34133   014B60  0EFF               	movlw	high STR_41
 34134   014B62  6EE6               	movwf	postinc1,c
 34135   014B64  0E01               	movlw	1
 34136   014B66  6EE6               	movwf	postinc1,c
 34137   014B68  0E02               	movlw	2
 34138   014B6A  6EE6               	movwf	postinc1,c
 34139   014B6C  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 34140   014B70  0060  F08F  FFE6   	movff	btemp,postinc1
 34141   014B76  0060  F093  FFE6   	movff	btemp+1,postinc1
 34142   014B7C  0E06               	movlw	6
 34143   014B7E  6EE6               	movwf	postinc1,c
 34144   014B80  EC29  F0B2         	call	_sprintf	;wreg free
 34145                           
 34146                           ; BSR set to: 1
 34147                           ;mconfig.c: 60:   V.help_id++;
 34148   014B84  EE23  F169         	lfsr	2,_V+335	;volatile
 34149   014B88  30DF               	rrcf	223,w,c
 34150   014B8A  6E2E               	movwf	(btemp+11)^0,c
 34151   014B8C  322E               	rrcf	(btemp+11)^0,f,c
 34152   014B8E  302E               	rrcf	(btemp+11)^0,w,c
 34153   014B90  0B03               	andlw	3
 34154   014B92  6E2E               	movwf	(btemp+11)^0,c
 34155   014B94  2A2E               	incf	(btemp+11)^0,f,c
 34156   014B96  362E               	rlcf	(btemp+11)^0,f,c
 34157   014B98  362E               	rlcf	(btemp+11)^0,f,c
 34158   014B9A  362E               	rlcf	(btemp+11)^0,f,c
 34159   014B9C  50DF               	movf	223,w,c
 34160   014B9E  182E               	xorwf	(btemp+11)^0,w,c
 34161   014BA0  0BE7               	andlw	-25
 34162   014BA2  182E               	xorwf	(btemp+11)^0,w,c
 34163   014BA4  6EDF               	movwf	223,c
 34164                           
 34165                           ; BSR set to: 1
 34166                           ;mconfig.c: 61:   StartTimer(TMR_HELPDIS, 3000);
 34167   014BA6  0EB8               	movlw	184
 34168   014BA8  6EE6               	movwf	postinc1,c
 34169   014BAA  0E0B               	movlw	11
 34170   014BAC  6EE6               	movwf	postinc1,c
 34171   014BAE  0E09               	movlw	9
 34172   014BB0  6EE6               	movwf	postinc1,c
 34173   014BB2  EC20  F0BC         	call	_StartTimer	;wreg free
 34174                           
 34175                           ;mconfig.c: 62:   StartTimer(TMR_INFO, 3000);
 34176   014BB6  0EB8               	movlw	184
 34177   014BB8  6EE6               	movwf	postinc1,c
 34178   014BBA  0E0B               	movlw	11
 34179   014BBC  6EE6               	movwf	postinc1,c
 34180   014BBE  0E07               	movlw	7
 34181   014BC0  6EE6               	movwf	postinc1,c
 34182   014BC2  EC20  F0BC         	call	_StartTimer	;wreg free
 34183                           
 34184                           ;mconfig.c: 63:   mode_lamp_bright();
 34185   014BC6  EC35  F0C0         	call	_mode_lamp_bright	;wreg free
 34186                           
 34187                           ;mconfig.c: 64:   update_lcd(1);
 34188   014BCA  0E01               	movlw	1
 34189   014BCC  6EE6               	movwf	postinc1,c
 34190   014BCE  ECA1  F0B2         	call	_update_lcd	;wreg free
 34191                           
 34192                           ;mconfig.c: 65:  } else {
 34193   014BD2  D03F               	goto	l2380
 34194   014BD4                     l13624:
 34195                           
 34196                           ;mconfig.c: 66:   if (TimerDone(TMR_HELPDIS)) {
 34197   014BD4  0E09               	movlw	9
 34198   014BD6  6EE6               	movwf	postinc1,c
 34199   014BD8  ECCB  F0BE         	call	_TimerDone	;wreg free
 34200   014BDC  5023               	movf	btemp^0,w,c
 34201   014BDE  B4D8               	btfsc	status,2,c
 34202   014BE0  D038               	goto	l2380
 34203                           
 34204                           ;mconfig.c: 67:    set_vterm(0);
 34205   014BE2  0E00               	movlw	0
 34206   014BE4  6EE6               	movwf	postinc1,c
 34207   014BE6  EC67  F0BF         	call	_set_vterm	;wreg free
 34208                           
 34209                           ;mconfig.c: 68:    V.help = 0;
 34210   014BEA  EE23  F168         	lfsr	2,_V+334	;volatile
 34211   014BEE  9CDF               	bcf	indf2,6,c
 34212                           
 34213                           ;mconfig.c: 69:    set_display_info(display_help());
 34214   014BF0  EC57  F0C0         	call	_display_help	;wreg free
 34215   014BF4  5023               	movf	btemp^0,w,c
 34216   014BF6  6EE6               	movwf	postinc1,c
 34217   014BF8  EC48  F0BF         	call	_set_display_info	;wreg free
 34218                           
 34219                           ;mconfig.c: 70:    mode_lamp_dim(V.mode_pwm);
 34220   014BFC  EE23  F15F         	lfsr	2,_V+325	;volatile
 34221   014C00  006F FF78  F02D    	movff	postinc2,btemp+10
 34222   014C06  006F FF74  F02E    	movff	postdec2,btemp+11
 34223   014C0C  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 34224   014C12  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 34225   014C18  ECE5  F0BF         	call	_mode_lamp_dim	;wreg free
 34226                           
 34227                           ;mconfig.c: 71:    if (TimerDone(TMR_FLIPPER)) {
 34228   014C1C  0E0C               	movlw	12
 34229   014C1E  6EE6               	movwf	postinc1,c
 34230   014C20  ECCB  F0BE         	call	_TimerDone	;wreg free
 34231   014C24  5023               	movf	btemp^0,w,c
 34232   014C26  B4D8               	btfsc	status,2,c
 34233   014C28  D014               	goto	l2380
 34234                           
 34235                           ;mconfig.c: 72:     V.flipper = !V.flipper;
 34236   014C2A  EE23  F19C         	lfsr	2,_V+386	;volatile
 34237   014C2E  50DF               	movf	indf2,w,c
 34238   014C30  A4D8               	btfss	status,2,c
 34239   014C32  D003               	goto	u10070
 34240   014C34  6A2E               	clrf	(btemp+11)^0,c
 34241   014C36  2A2E               	incf	(btemp+11)^0,f,c
 34242   014C38  D001               	goto	u10088
 34243   014C3A                     u10070:
 34244   014C3A  6A2E               	clrf	(btemp+11)^0,c
 34245   014C3C                     u10088:
 34246   014C3C  0060  F0B8  FD9C   	movff	btemp+11,_V+386	;volatile
 34247                           
 34248                           ;mconfig.c: 73:     StartTimer(TMR_FLIPPER, 1500);
 34249   014C42  0EDC               	movlw	220
 34250   014C44  6EE6               	movwf	postinc1,c
 34251   014C46  0E05               	movlw	5
 34252   014C48  6EE6               	movwf	postinc1,c
 34253   014C4A  0E0C               	movlw	12
 34254   014C4C  6EE6               	movwf	postinc1,c
 34255   014C4E  EC20  F0BC         	call	_StartTimer	;wreg free
 34256   014C52                     l2380:
 34257                           
 34258                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 34259   014C52  52E5               	movf	postdec1,f,c
 34260   014C54  0012               	return		;funcret
 34261   014C56                     __end_of_check_help:
 34262                           	callstack 0
 34263                           
 34264 ;; *************** function _vterm_dump *****************
 34265 ;; Defined at:
 34266 ;;		line 118 in file "mconfig.c"
 34267 ;; Parameters:    Size  Location     Type
 34268 ;;		None
 34269 ;; Auto vars:     Size  Location     Type
 34270 ;;		None
 34271 ;; Return value:  Size  Location     Type
 34272 ;;                  1  [STACK] void 
 34273 ;; Registers used:
 34274 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 34275 ;; Tracked objects:
 34276 ;;		On entry : 0/1
 34277 ;;		On exit  : 0/0
 34278 ;;		Unchanged: 0/0
 34279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34284 ;;Total ram usage:        0 bytes
 34285 ;; Hardware stack levels used: 1
 34286 ;; Hardware stack levels required when called: 14
 34287 ;; This function calls:
 34288 ;;		_WaitMs
 34289 ;;		_eaDogM_WriteStringAtPos
 34290 ;;		_get_vterm_ptr
 34291 ;;		_sprintf
 34292 ;;		_wait_lcd_done
 34293 ;; This function is called by:
 34294 ;;		_check_help
 34295 ;; This function uses a reentrant model
 34296 ;;
 34297                           
 34298                           	psect	text40
 34299   015A8E                     __ptext40:
 34300                           	callstack 0
 34301   015A8E                     _vterm_dump:
 34302                           	callstack 15
 34303                           
 34304                           ;mconfig.c: 120:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 34305                           
 34306                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34307                           ;incstack = 0
 34308   015A8E  0E01               	movlw	1
 34309   015A90  6EE6               	movwf	postinc1,c
 34310   015A92  0E00               	movlw	0
 34311   015A94  6EE6               	movwf	postinc1,c
 34312   015A96  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 34313   015A9A  0060  F08F  FFE6   	movff	btemp,postinc1
 34314   015AA0  0060  F093  FFE6   	movff	btemp+1,postinc1
 34315   015AA6  0E00               	movlw	0
 34316   015AA8  6EE6               	movwf	postinc1,c
 34317   015AAA  0E00               	movlw	0
 34318   015AAC  6EE6               	movwf	postinc1,c
 34319   015AAE  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 34320   015AB2  0060  F08F  FFE6   	movff	btemp,postinc1
 34321   015AB8  0060  F093  FFE6   	movff	btemp+1,postinc1
 34322   015ABE  0EAB               	movlw	low STR_43
 34323   015AC0  6EE6               	movwf	postinc1,c
 34324   015AC2  0EFF               	movlw	high STR_43
 34325   015AC4  6EE6               	movwf	postinc1,c
 34326   015AC6  0E21               	movlw	low (_V+7)
 34327   015AC8  6EE6               	movwf	postinc1,c
 34328   015ACA  0E0C               	movlw	high (_V+7)
 34329   015ACC  6EE6               	movwf	postinc1,c
 34330   015ACE  0E08               	movlw	8
 34331   015AD0  6EE6               	movwf	postinc1,c
 34332   015AD2  EC29  F0B2         	call	_sprintf	;wreg free
 34333                           
 34334                           ; BSR set to: 1
 34335                           ;mconfig.c: 121:  wait_lcd_done();
 34336   015AD6  ECB0  F0BF         	call	_wait_lcd_done	;wreg free
 34337                           
 34338                           ; BSR set to: 0
 34339                           ;mconfig.c: 122:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 34340   015ADA  0E21               	movlw	low (_V+7)
 34341   015ADC  6EE6               	movwf	postinc1,c
 34342   015ADE  0E0C               	movlw	high (_V+7)
 34343   015AE0  6EE6               	movwf	postinc1,c
 34344   015AE2  0E00               	movlw	0
 34345   015AE4  6EE6               	movwf	postinc1,c
 34346   015AE6  0E00               	movlw	0
 34347   015AE8  6EE6               	movwf	postinc1,c
 34348   015AEA  ECB0  F0BC         	call	_eaDogM_WriteStringAtPos	;wreg free
 34349                           
 34350                           ; BSR set to: 59
 34351                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 34352   015AEE  0E01               	movlw	1
 34353   015AF0  6EE6               	movwf	postinc1,c
 34354   015AF2  0E01               	movlw	1
 34355   015AF4  6EE6               	movwf	postinc1,c
 34356   015AF6  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 34357   015AFA  0060  F08F  FFE6   	movff	btemp,postinc1
 34358   015B00  0060  F093  FFE6   	movff	btemp+1,postinc1
 34359   015B06  0E00               	movlw	0
 34360   015B08  6EE6               	movwf	postinc1,c
 34361   015B0A  0E01               	movlw	1
 34362   015B0C  6EE6               	movwf	postinc1,c
 34363   015B0E  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 34364   015B12  0060  F08F  FFE6   	movff	btemp,postinc1
 34365   015B18  0060  F093  FFE6   	movff	btemp+1,postinc1
 34366   015B1E  0EAB               	movlw	low STR_43
 34367   015B20  6EE6               	movwf	postinc1,c
 34368   015B22  0EFF               	movlw	high STR_43
 34369   015B24  6EE6               	movwf	postinc1,c
 34370   015B26  0E21               	movlw	low (_V+7)
 34371   015B28  6EE6               	movwf	postinc1,c
 34372   015B2A  0E0C               	movlw	high (_V+7)
 34373   015B2C  6EE6               	movwf	postinc1,c
 34374   015B2E  0E08               	movlw	8
 34375   015B30  6EE6               	movwf	postinc1,c
 34376   015B32  EC29  F0B2         	call	_sprintf	;wreg free
 34377                           
 34378                           ; BSR set to: 1
 34379                           ;mconfig.c: 124:  wait_lcd_done();
 34380   015B36  ECB0  F0BF         	call	_wait_lcd_done	;wreg free
 34381                           
 34382                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 34383   015B3A  0E21               	movlw	low (_V+7)
 34384   015B3C  6EE6               	movwf	postinc1,c
 34385   015B3E  0E0C               	movlw	high (_V+7)
 34386   015B40  6EE6               	movwf	postinc1,c
 34387   015B42  0E00               	movlw	0
 34388   015B44  6EE6               	movwf	postinc1,c
 34389   015B46  0E01               	movlw	1
 34390   015B48  6EE6               	movwf	postinc1,c
 34391   015B4A  ECB0  F0BC         	call	_eaDogM_WriteStringAtPos	;wreg free
 34392                           
 34393                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 34394   015B4E  0E01               	movlw	1
 34395   015B50  6EE6               	movwf	postinc1,c
 34396   015B52  0E02               	movlw	2
 34397   015B54  6EE6               	movwf	postinc1,c
 34398   015B56  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 34399   015B5A  0060  F08F  FFE6   	movff	btemp,postinc1
 34400   015B60  0060  F093  FFE6   	movff	btemp+1,postinc1
 34401   015B66  0E00               	movlw	0
 34402   015B68  6EE6               	movwf	postinc1,c
 34403   015B6A  0E02               	movlw	2
 34404   015B6C  6EE6               	movwf	postinc1,c
 34405   015B6E  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 34406   015B72  0060  F08F  FFE6   	movff	btemp,postinc1
 34407   015B78  0060  F093  FFE6   	movff	btemp+1,postinc1
 34408   015B7E  0EAB               	movlw	low STR_43
 34409   015B80  6EE6               	movwf	postinc1,c
 34410   015B82  0EFF               	movlw	high STR_43
 34411   015B84  6EE6               	movwf	postinc1,c
 34412   015B86  0E21               	movlw	low (_V+7)
 34413   015B88  6EE6               	movwf	postinc1,c
 34414   015B8A  0E0C               	movlw	high (_V+7)
 34415   015B8C  6EE6               	movwf	postinc1,c
 34416   015B8E  0E08               	movlw	8
 34417   015B90  6EE6               	movwf	postinc1,c
 34418   015B92  EC29  F0B2         	call	_sprintf	;wreg free
 34419                           
 34420                           ; BSR set to: 1
 34421                           ;mconfig.c: 127:  wait_lcd_done();
 34422   015B96  ECB0  F0BF         	call	_wait_lcd_done	;wreg free
 34423                           
 34424                           ; BSR set to: 0
 34425                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 34426   015B9A  0E21               	movlw	low (_V+7)
 34427   015B9C  6EE6               	movwf	postinc1,c
 34428   015B9E  0E0C               	movlw	high (_V+7)
 34429   015BA0  6EE6               	movwf	postinc1,c
 34430   015BA2  0E00               	movlw	0
 34431   015BA4  6EE6               	movwf	postinc1,c
 34432   015BA6  0E02               	movlw	2
 34433   015BA8  6EE6               	movwf	postinc1,c
 34434   015BAA  ECB0  F0BC         	call	_eaDogM_WriteStringAtPos	;wreg free
 34435                           
 34436                           ; BSR set to: 59
 34437                           ;mconfig.c: 129:  WaitMs(3000);
 34438   015BAE  0EB8               	movlw	184
 34439   015BB0  6EE6               	movwf	postinc1,c
 34440   015BB2  0E0B               	movlw	11
 34441   015BB4  6EE6               	movwf	postinc1,c
 34442   015BB6  EC95  F0BC         	call	_WaitMs	;wreg free
 34443                           
 34444                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 34445   015BBA  0012               	return		;funcret
 34446   015BBC                     __end_of_vterm_dump:
 34447                           	callstack 0
 34448                           
 34449 ;; *************** function _WaitMs *****************
 34450 ;; Defined at:
 34451 ;;		line 32 in file "timers.c"
 34452 ;; Parameters:    Size  Location     Type
 34453 ;;  numMilliseco    2  [STACK] const unsigned short 
 34454 ;; Auto vars:     Size  Location     Type
 34455 ;;		None
 34456 ;; Return value:  Size  Location     Type
 34457 ;;                  1  [STACK] void 
 34458 ;; Registers used:
 34459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 34460 ;; Tracked objects:
 34461 ;;		On entry : 0/3C
 34462 ;;		On exit  : 0/0
 34463 ;;		Unchanged: 0/0
 34464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34469 ;;Total ram usage:        0 bytes
 34470 ;; Hardware stack levels used: 1
 34471 ;; Hardware stack levels required when called: 4
 34472 ;; This function calls:
 34473 ;;		_StartTimer
 34474 ;;		_TimerDone
 34475 ;; This function is called by:
 34476 ;;		_main
 34477 ;;		_m_protocol
 34478 ;;		_r_protocol
 34479 ;;		_vterm_dump
 34480 ;; This function uses a reentrant model
 34481 ;;
 34482                           
 34483                           	psect	text41
 34484   01792A                     __ptext41:
 34485                           	callstack 0
 34486   01792A                     _WaitMs:
 34487                           	callstack 25
 34488                           
 34489                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 34490                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 34491                           
 34492                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34493                           ;incstack = 0
 34494   01792A  0EFE               	movlw	-2
 34495   01792C  006F FF8F FFE6     	movff	plusw1,postinc1
 34496   017932  006F FF8F FFE6     	movff	plusw1,postinc1
 34497   017938  0E00               	movlw	0
 34498   01793A  6EE6               	movwf	postinc1,c
 34499   01793C  EC20  F0BC         	call	_StartTimer	;wreg free
 34500                           
 34501                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 34502   017940  D005               	goto	l8448
 34503   017942                     l2296:
 34504                           
 34505                           ;timers.c: 36:   __nop();
 34506   017942  0000               	nop	
 34507                           
 34508                           ;timers.c: 37:   __nop();
 34509   017944  0000               	nop	
 34510                           
 34511                           ;timers.c: 38:   __nop();
 34512   017946  0000               	nop	
 34513                           
 34514                           ;timers.c: 39:   __nop();
 34515   017948  0000               	nop	
 34516   01794A  0004               	clrwdt		;# 
 34517   01794C                     l8448:
 34518                           
 34519                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 34520   01794C  0E00               	movlw	0
 34521   01794E  6EE6               	movwf	postinc1,c
 34522   017950  ECCB  F0BE         	call	_TimerDone	;wreg free
 34523   017954  5023               	movf	btemp^0,w,c
 34524   017956  B4D8               	btfsc	status,2,c
 34525   017958  D7F4               	goto	l2296
 34526                           
 34527                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 34528   01795A  52E5               	movf	postdec1,f,c
 34529   01795C  52E5               	movf	postdec1,f,c
 34530   01795E  0012               	return		;funcret
 34531   017960                     __end_of_WaitMs:
 34532                           	callstack 0
 34533                           
 34534 ;; *************** function _set_vterm *****************
 34535 ;; Defined at:
 34536 ;;		line 104 in file "mconfig.c"
 34537 ;; Parameters:    Size  Location     Type
 34538 ;;  vterm           1  [STACK] unsigned char 
 34539 ;; Auto vars:     Size  Location     Type
 34540 ;;		None
 34541 ;; Return value:  Size  Location     Type
 34542 ;;                  1  [STACK] unsigned char 
 34543 ;; Registers used:
 34544 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 34545 ;; Tracked objects:
 34546 ;;		On entry : 0/0
 34547 ;;		On exit  : 0/0
 34548 ;;		Unchanged: 0/0
 34549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34554 ;;Total ram usage:        0 bytes
 34555 ;; Hardware stack levels used: 1
 34556 ;; Hardware stack levels required when called: 3
 34557 ;; This function calls:
 34558 ;;		Nothing
 34559 ;; This function is called by:
 34560 ;;		_main
 34561 ;;		_check_help
 34562 ;; This function uses a reentrant model
 34563 ;;
 34564                           
 34565                           	psect	text42
 34566   017ECE                     __ptext42:
 34567                           	callstack 0
 34568   017ECE                     _set_vterm:
 34569                           	callstack 27
 34570                           
 34571                           ;mconfig.c: 104: uint8_t set_vterm(uint8_t vterm);mconfig.c: 105: {;mconfig.c: 106:  D.v
      +                          term = vterm & 0x03;
 34572                           ;stkvar	_vterm @ sp[(0)+-1]
 34573                           
 34574                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34575                           ;incstack = 0
 34576   017ECE  0EFF               	movlw	-1
 34577   017ED0  006F FF8C  F02E    	movff	plusw1,btemp+11
 34578   017ED6  0E03               	movlw	3
 34579   017ED8  162E               	andwf	(btemp+11)^0,f,c
 34580   017EDA  EE22  F100         	lfsr	2,_D@mconfig$F5154+512
 34581   017EDE  50DF               	movf	223,w,c
 34582   017EE0  182E               	xorwf	(btemp+11)^0,w,c
 34583   017EE2  0BFE               	andlw	-2
 34584   017EE4  182E               	xorwf	(btemp+11)^0,w,c
 34585   017EE6  6EDF               	movwf	223,c
 34586                           
 34587                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 34588   017EE8  52E5               	movf	postdec1,f,c
 34589   017EEA  0012               	return		;funcret
 34590   017EEC                     __end_of_set_vterm:
 34591                           	callstack 0
 34592                           
 34593 ;; *************** function _set_temp_display_help *****************
 34594 ;; Defined at:
 34595 ;;		line 237 in file "mconfig.c"
 34596 ;; Parameters:    Size  Location     Type
 34597 ;;  new_response    1  [STACK] const enum E16750
 34598 ;; Auto vars:     Size  Location     Type
 34599 ;;		None
 34600 ;; Return value:  Size  Location     Type
 34601 ;;                  1  [STACK] enum E16960
 34602 ;; Registers used:
 34603 ;;		wreg, fsr1l, fsr1h, btemp+11
 34604 ;; Tracked objects:
 34605 ;;		On entry : 0/0
 34606 ;;		On exit  : 0/0
 34607 ;;		Unchanged: 0/0
 34608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34613 ;;Total ram usage:        0 bytes
 34614 ;; Hardware stack levels used: 1
 34615 ;; Hardware stack levels required when called: 3
 34616 ;; This function calls:
 34617 ;;		Nothing
 34618 ;; This function is called by:
 34619 ;;		_secs_II_message
 34620 ;;		_check_help
 34621 ;; This function uses a reentrant model
 34622 ;;
 34623                           
 34624                           	psect	text43
 34625   018038                     __ptext43:
 34626                           	callstack 0
 34627   018038                     _set_temp_display_help:
 34628                           	callstack 25
 34629                           
 34630                           ;mconfig.c: 242:  V.response.help_temp = new_response_info;
 34631                           ;stkvar	_new_response_info @ sp[(0)+-1]
 34632                           
 34633                           ;mconfig.c: 237: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 238: {;mconfig.c: 239:  static D_CODES old_info;;mconfig.c: 241:  old_info = V.respon
      +                          se.help_temp;
 34634                           
 34635                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34636                           ;incstack = 0
 34637   018038  0EFF               	movlw	-1
 34638   01803A  006F FF8C  F02E    	movff	plusw1,btemp+11
 34639   018040  0060  F0B8  FD92   	movff	btemp+11,_V+376	;volatile
 34640                           
 34641                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 34642   018046  52E5               	movf	postdec1,f,c
 34643   018048  0012               	return		;funcret
 34644   01804A                     __end_of_set_temp_display_help:
 34645                           	callstack 0
 34646                           
 34647 ;; *************** function _set_display_info *****************
 34648 ;; Defined at:
 34649 ;;		line 226 in file "mconfig.c"
 34650 ;; Parameters:    Size  Location     Type
 34651 ;;  new_response    1  [STACK] const enum E16750
 34652 ;; Auto vars:     Size  Location     Type
 34653 ;;		None
 34654 ;; Return value:  Size  Location     Type
 34655 ;;                  1  [STACK] enum E17238
 34656 ;; Registers used:
 34657 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
 34658 ;; Tracked objects:
 34659 ;;		On entry : 0/3C
 34660 ;;		On exit  : 0/0
 34661 ;;		Unchanged: 0/0
 34662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34667 ;;Total ram usage:        0 bytes
 34668 ;; Hardware stack levels used: 1
 34669 ;; Hardware stack levels required when called: 4
 34670 ;; This function calls:
 34671 ;;		_TimerDone
 34672 ;; This function is called by:
 34673 ;;		_main
 34674 ;;		_secs_II_message
 34675 ;;		_secs_gem_state
 34676 ;;		_check_help
 34677 ;; This function uses a reentrant model
 34678 ;;
 34679                           
 34680                           	psect	text44
 34681   017E90                     __ptext44:
 34682                           	callstack 0
 34683   017E90                     _set_display_info:
 34684                           	callstack 24
 34685                           
 34686                           ;mconfig.c: 226: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 22
      +                          7: {;mconfig.c: 228:  static D_CODES old_info = DIS_STR;;mconfig.c: 230:  if (TimerDone(
      +                          TMR_INFO)) {
 34687                           
 34688                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34689                           ;incstack = 0
 34690   017E90  0E07               	movlw	7
 34691   017E92  6EE6               	movwf	postinc1,c
 34692   017E94  ECCB  F0BE         	call	_TimerDone	;wreg free
 34693   017E98  5023               	movf	btemp^0,w,c
 34694   017E9A  B4D8               	btfsc	status,2,c
 34695   017E9C  D007               	goto	l2433
 34696                           
 34697                           ;mconfig.c: 232:   V.response.info = new_response_info;
 34698                           ;stkvar	_new_response_info @ sp[(0)+-1]
 34699                           
 34700                           ;mconfig.c: 231:   old_info = V.response.info;
 34701   017E9E  0EFF               	movlw	-1
 34702   017EA0  006F FF8C  F02E    	movff	plusw1,btemp+11
 34703   017EA6  0060  F0B8  FD91   	movff	btemp+11,_V+375	;volatile
 34704   017EAC                     l2433:
 34705                           
 34706                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 34707   017EAC  52E5               	movf	postdec1,f,c
 34708   017EAE  0012               	return		;funcret
 34709   017EB0                     __end_of_set_display_info:
 34710                           	callstack 0
 34711                           
 34712 ;; *************** function _mode_lamp_dim *****************
 34713 ;; Defined at:
 34714 ;;		line 13 in file "mconfig.c"
 34715 ;; Parameters:    Size  Location     Type
 34716 ;;  level           2  [STACK] const unsigned short 
 34717 ;; Auto vars:     Size  Location     Type
 34718 ;;		None
 34719 ;; Return value:  Size  Location     Type
 34720 ;;                  1  [STACK] void 
 34721 ;; Registers used:
 34722 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 34723 ;; Tracked objects:
 34724 ;;		On entry : 0/3C
 34725 ;;		On exit  : 0/0
 34726 ;;		Unchanged: 0/0
 34727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34732 ;;Total ram usage:        0 bytes
 34733 ;; Hardware stack levels used: 1
 34734 ;; Hardware stack levels required when called: 4
 34735 ;; This function calls:
 34736 ;;		_PWM8_LoadDutyValue
 34737 ;; This function is called by:
 34738 ;;		_main
 34739 ;;		_check_help
 34740 ;; This function uses a reentrant model
 34741 ;;
 34742                           
 34743                           	psect	text45
 34744   017FCA                     __ptext45:
 34745                           	callstack 0
 34746   017FCA                     _mode_lamp_dim:
 34747                           	callstack 26
 34748                           
 34749                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 34750                           ;stkvar	_level @ sp[(0)+-2]
 34751                           
 34752                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34753                           ;incstack = 0
 34754   017FCA  0EFE               	movlw	-2
 34755   017FCC  006F FF8F FFE6     	movff	plusw1,postinc1
 34756   017FD2  006F FF8F FFE6     	movff	plusw1,postinc1
 34757   017FD8  ECBE  F0BA         	call	_PWM8_LoadDutyValue	;wreg free
 34758                           
 34759                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 34760   017FDC  52E5               	movf	postdec1,f,c
 34761   017FDE  52E5               	movf	postdec1,f,c
 34762   017FE0  0012               	return		;funcret
 34763   017FE2                     __end_of_mode_lamp_dim:
 34764                           	callstack 0
 34765                           
 34766 ;; *************** function _mode_lamp_bright *****************
 34767 ;; Defined at:
 34768 ;;		line 18 in file "mconfig.c"
 34769 ;; Parameters:    Size  Location     Type
 34770 ;;		None
 34771 ;; Auto vars:     Size  Location     Type
 34772 ;;		None
 34773 ;; Return value:  Size  Location     Type
 34774 ;;                  1  [STACK] void 
 34775 ;; Registers used:
 34776 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 34777 ;; Tracked objects:
 34778 ;;		On entry : 0/1
 34779 ;;		On exit  : 0/0
 34780 ;;		Unchanged: 0/0
 34781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34786 ;;Total ram usage:        0 bytes
 34787 ;; Hardware stack levels used: 1
 34788 ;; Hardware stack levels required when called: 4
 34789 ;; This function calls:
 34790 ;;		_PWM8_LoadDutyValue
 34791 ;; This function is called by:
 34792 ;;		_check_help
 34793 ;; This function uses a reentrant model
 34794 ;;
 34795                           
 34796                           	psect	text46
 34797   01806A                     __ptext46:
 34798                           	callstack 0
 34799   01806A                     _mode_lamp_bright:
 34800                           	callstack 25
 34801                           
 34802                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 34803                           
 34804                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34805                           ;incstack = 0
 34806   01806A  0E2C               	movlw	44
 34807   01806C  6EE6               	movwf	postinc1,c
 34808   01806E  0E01               	movlw	1
 34809   018070  6EE6               	movwf	postinc1,c
 34810   018072  ECBE  F0BA         	call	_PWM8_LoadDutyValue	;wreg free
 34811                           
 34812                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 34813   018076  0012               	return		;funcret
 34814   018078                     __end_of_mode_lamp_bright:
 34815                           	callstack 0
 34816                           
 34817 ;; *************** function _PWM8_LoadDutyValue *****************
 34818 ;; Defined at:
 34819 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 34820 ;; Parameters:    Size  Location     Type
 34821 ;;  dutyValue       2  [STACK] unsigned short 
 34822 ;; Auto vars:     Size  Location     Type
 34823 ;;		None
 34824 ;; Return value:  Size  Location     Type
 34825 ;;                  1  [STACK] void 
 34826 ;; Registers used:
 34827 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 34828 ;; Tracked objects:
 34829 ;;		On entry : 0/3C
 34830 ;;		On exit  : 0/0
 34831 ;;		Unchanged: 0/0
 34832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34837 ;;Total ram usage:        0 bytes
 34838 ;; Hardware stack levels used: 1
 34839 ;; Hardware stack levels required when called: 3
 34840 ;; This function calls:
 34841 ;;		Nothing
 34842 ;; This function is called by:
 34843 ;;		_mode_lamp_dim
 34844 ;;		_mode_lamp_bright
 34845 ;; This function uses a reentrant model
 34846 ;;
 34847                           
 34848                           	psect	text47
 34849   01757C                     __ptext47:
 34850                           	callstack 0
 34851   01757C                     _PWM8_LoadDutyValue:
 34852                           	callstack 26
 34853                           
 34854                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 34855                           ;stkvar	_dutyValue @ sp[(0)+-2]
 34856                           
 34857                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34858                           ;incstack = 0
 34859   01757C  0EFE               	movlw	-2
 34860   01757E  006F FF8C  F02D    	movff	plusw1,btemp+10
 34861   017584  0EFF               	movlw	-1
 34862   017586  006F FF8C  F02E    	movff	plusw1,btemp+11
 34863   01758C  90D8               	bcf	status,0,c
 34864   01758E  322E               	rrcf	(btemp+11)^0,f,c
 34865   017590  322D               	rrcf	(btemp+10)^0,f,c
 34866   017592  90D8               	bcf	status,0,c
 34867   017594  322E               	rrcf	(btemp+11)^0,f,c
 34868   017596  322D               	rrcf	(btemp+10)^0,f,c
 34869   017598  502D               	movf	(btemp+10)^0,w,c
 34870   01759A  6E61               	movwf	97,c	;volatile
 34871                           
 34872                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 34873                           ;stkvar	_dutyValue @ sp[(0)+-2]
 34874   01759C  0EFE               	movlw	-2
 34875   01759E  006F FF8C  F02E    	movff	plusw1,btemp+11
 34876   0175A4  0E03               	movlw	3
 34877   0175A6  162E               	andwf	(btemp+11)^0,f,c
 34878   0175A8  0E06               	movlw	6
 34879   0175AA  6E23               	movwf	btemp^0,c
 34880   0175AC                     u5375:
 34881   0175AC  90D8               	bcf	status,0,c
 34882   0175AE  362E               	rlcf	(btemp+11)^0,f,c
 34883   0175B0  2E23               	decfsz	btemp^0,f,c
 34884   0175B2  D7FC               	goto	u5375
 34885   0175B4  502E               	movf	(btemp+11)^0,w,c
 34886   0175B6  6E60               	movwf	96,c	;volatile
 34887                           
 34888                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 34889   0175B8  52E5               	movf	postdec1,f,c
 34890   0175BA  52E5               	movf	postdec1,f,c
 34891   0175BC  0012               	return		;funcret
 34892   0175BE                     __end_of_PWM8_LoadDutyValue:
 34893                           	callstack 0
 34894                           
 34895 ;; *************** function _help_button *****************
 34896 ;; Defined at:
 34897 ;;		line 26 in file "mconfig.c"
 34898 ;; Parameters:    Size  Location     Type
 34899 ;;		None
 34900 ;; Auto vars:     Size  Location     Type
 34901 ;;		None
 34902 ;; Return value:  Size  Location     Type
 34903 ;;                  1  [STACK] _Bool 
 34904 ;; Registers used:
 34905 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 34906 ;; Tracked objects:
 34907 ;;		On entry : 0/1
 34908 ;;		On exit  : 0/0
 34909 ;;		Unchanged: 0/0
 34910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34915 ;;Total ram usage:        0 bytes
 34916 ;; Hardware stack levels used: 1
 34917 ;; Hardware stack levels required when called: 4
 34918 ;; This function calls:
 34919 ;;		_StartTimer
 34920 ;;		_TimerDone
 34921 ;; This function is called by:
 34922 ;;		_check_help
 34923 ;; This function uses a reentrant model
 34924 ;;
 34925                           
 34926                           	psect	text48
 34927   017804                     __ptext48:
 34928                           	callstack 0
 34929   017804                     _help_button:
 34930                           	callstack 25
 34931                           
 34932                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 34933                           
 34934                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34935                           ;incstack = 0
 34936   017804  B0CB               	btfsc	203,0,c	;volatile
 34937   017806  D00D               	goto	l9924
 34938                           
 34939                           ;mconfig.c: 29:   V.help = 1;
 34940   017808  EE23  F168         	lfsr	2,_V+334	;volatile
 34941   01780C  8CDF               	bsf	indf2,6,c
 34942                           
 34943                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 34944   01780E  0E08               	movlw	8
 34945   017810  6EE6               	movwf	postinc1,c
 34946   017812  ECCB  F0BE         	call	_TimerDone	;wreg free
 34947   017816  5023               	movf	btemp^0,w,c
 34948   017818  B4D8               	btfsc	status,2,c
 34949   01781A  D003               	goto	l9924
 34950                           
 34951                           ;mconfig.c: 31:    return 1;
 34952   01781C  0E01               	movlw	1
 34953   01781E  6E23               	movwf	btemp^0,c
 34954   017820  0012               	return	
 34955   017822                     l9924:
 34956                           
 34957                           ;mconfig.c: 34:  if (!V.help)
 34958   017822  EE23  F168         	lfsr	2,_V+334	;volatile
 34959   017826  BCDF               	btfsc	indf2,6,c
 34960   017828  D008               	goto	l9928
 34961                           
 34962                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 34963   01782A  0E2C               	movlw	44
 34964   01782C  6EE6               	movwf	postinc1,c
 34965   01782E  0E01               	movlw	1
 34966   017830  6EE6               	movwf	postinc1,c
 34967   017832  0E08               	movlw	8
 34968   017834  6EE6               	movwf	postinc1,c
 34969   017836  EC20  F0BC         	call	_StartTimer	;wreg free
 34970   01783A                     l9928:
 34971                           
 34972                           ;mconfig.c: 37:  return 0;
 34973   01783A  0E00               	movlw	0
 34974   01783C  6E23               	movwf	btemp^0,c
 34975                           
 34976                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 34977   01783E  0012               	return		;funcret
 34978   017840                     __end_of_help_button:
 34979                           	callstack 0
 34980                           
 34981 ;; *************** function _StartTimer *****************
 34982 ;; Defined at:
 34983 ;;		line 12 in file "timers.c"
 34984 ;; Parameters:    Size  Location     Type
 34985 ;;  timer           1  [STACK] const unsigned char 
 34986 ;;  count           2  [STACK] const unsigned short 
 34987 ;; Auto vars:     Size  Location     Type
 34988 ;;		None
 34989 ;; Return value:  Size  Location     Type
 34990 ;;                  1  [STACK] void 
 34991 ;; Registers used:
 34992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 34993 ;; Tracked objects:
 34994 ;;		On entry : 0/1
 34995 ;;		On exit  : 0/0
 34996 ;;		Unchanged: 0/0
 34997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35002 ;;Total ram usage:        0 bytes
 35003 ;; Hardware stack levels used: 1
 35004 ;; Hardware stack levels required when called: 3
 35005 ;; This function calls:
 35006 ;;		Nothing
 35007 ;; This function is called by:
 35008 ;;		_main
 35009 ;;		_m_protocol
 35010 ;;		_r_protocol
 35011 ;;		_t_protocol
 35012 ;;		_sequence_messages
 35013 ;;		_gem_messages
 35014 ;;		_secs_II_message
 35015 ;;		_ee_logger
 35016 ;;		_secs_gem_state
 35017 ;;		_WaitMs
 35018 ;;		_help_button
 35019 ;;		_check_help
 35020 ;; This function uses a reentrant model
 35021 ;;
 35022                           
 35023                           	psect	text49
 35024   017840                     __ptext49:
 35025                           	callstack 0
 35026   017840                     _StartTimer:
 35027                           	callstack 24
 35028                           
 35029                           ;timers.c: 12: __attribute__((inline)) void StartTimer(const uint8_t timer, const uint16
      +                          _t count);timers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
 35030                           ;stkvar	_count @ sp[(0)+-3]
 35031                           
 35032                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35033                           ;incstack = 0
 35034   017840  0EFD               	movlw	-3
 35035   017842  006F FF8C  F02D    	movff	plusw1,btemp+10
 35036   017848  0EFE               	movlw	-2
 35037   01784A  006F FF8C  F02E    	movff	plusw1,btemp+11
 35038   017850  90D8               	bcf	status,0,c
 35039   017852  342D               	rlcf	(btemp+10)^0,w,c
 35040   017854  6E2B               	movwf	(btemp+8)^0,c
 35041   017856  342E               	rlcf	(btemp+11)^0,w,c
 35042   017858  6E2C               	movwf	(btemp+9)^0,c
 35043                           
 35044                           ;stkvar	_timer @ sp[(0)+-1]
 35045   01785A  0EFF               	movlw	-1
 35046   01785C  50E3               	movf	plusw1,w,c
 35047   01785E  0D02               	mullw	2
 35048   017860  50F3               	movf	243,w,c
 35049   017862  0F60               	addlw	low _tickCount
 35050   017864  6ED9               	movwf	fsr2l,c
 35051   017866  6ADA               	clrf	fsr2h,c
 35052   017868  0060  F0AF  FFDE   	movff	btemp+8,postinc2
 35053   01786E  0060  F0B3  FFDD   	movff	btemp+9,postdec2
 35054                           
 35055                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 35056   017874  52E5               	movf	postdec1,f,c
 35057   017876  52E5               	movf	postdec1,f,c
 35058   017878  52E5               	movf	postdec1,f,c
 35059   01787A  0012               	return		;funcret
 35060   01787C                     __end_of_StartTimer:
 35061                           	callstack 0
 35062                           
 35063 ;; *************** function _display_info *****************
 35064 ;; Defined at:
 35065 ;;		line 216 in file "mconfig.c"
 35066 ;; Parameters:    Size  Location     Type
 35067 ;;		None
 35068 ;; Auto vars:     Size  Location     Type
 35069 ;;		None
 35070 ;; Return value:  Size  Location     Type
 35071 ;;                  1  [STACK] enum E16960
 35072 ;; Registers used:
 35073 ;;		btemp
 35074 ;; Tracked objects:
 35075 ;;		On entry : 0/0
 35076 ;;		On exit  : 0/0
 35077 ;;		Unchanged: 0/0
 35078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35083 ;;Total ram usage:        0 bytes
 35084 ;; Hardware stack levels used: 1
 35085 ;; Hardware stack levels required when called: 3
 35086 ;; This function calls:
 35087 ;;		Nothing
 35088 ;; This function is called by:
 35089 ;;		_secs_II_message
 35090 ;;		_check_help
 35091 ;; This function uses a reentrant model
 35092 ;;
 35093                           
 35094                           	psect	text50
 35095   0180A6                     __ptext50:
 35096                           	callstack 0
 35097   0180A6                     _display_info:
 35098                           	callstack 25
 35099                           
 35100                           ;mconfig.c: 218:  return V.response.info;
 35101                           
 35102                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35103                           ;incstack = 0
 35104   0180A6  0063  F644  F023   	movff	_V+375,btemp	;volatile
 35105                           
 35106                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 35107   0180AC  0012               	return		;funcret
 35108   0180AE                     __end_of_display_info:
 35109                           	callstack 0
 35110                           
 35111 ;; *************** function _display_help *****************
 35112 ;; Defined at:
 35113 ;;		line 221 in file "mconfig.c"
 35114 ;; Parameters:    Size  Location     Type
 35115 ;;		None
 35116 ;; Auto vars:     Size  Location     Type
 35117 ;;		None
 35118 ;; Return value:  Size  Location     Type
 35119 ;;                  1  [STACK] enum E16750
 35120 ;; Registers used:
 35121 ;;		btemp
 35122 ;; Tracked objects:
 35123 ;;		On entry : 0/1
 35124 ;;		On exit  : 0/0
 35125 ;;		Unchanged: 0/0
 35126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35131 ;;Total ram usage:        0 bytes
 35132 ;; Hardware stack levels used: 1
 35133 ;; Hardware stack levels required when called: 3
 35134 ;; This function calls:
 35135 ;;		Nothing
 35136 ;; This function is called by:
 35137 ;;		_check_help
 35138 ;; This function uses a reentrant model
 35139 ;;
 35140                           
 35141                           	psect	text51
 35142   0180AE                     __ptext51:
 35143                           	callstack 0
 35144   0180AE                     _display_help:
 35145                           	callstack 26
 35146                           
 35147                           ;mconfig.c: 223:  return V.response.help_temp;
 35148                           
 35149                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35150                           ;incstack = 0
 35151   0180AE  0063  F648  F023   	movff	_V+376,btemp	;volatile
 35152                           
 35153                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 35154   0180B4  0012               	return		;funcret
 35155   0180B6                     __end_of_display_help:
 35156                           	callstack 0
 35157                           
 35158 ;; *************** function _SYSTEM_Initialize *****************
 35159 ;; Defined at:
 35160 ;;		line 50 in file "mcc_generated_files/mcc.c"
 35161 ;; Parameters:    Size  Location     Type
 35162 ;;		None
 35163 ;; Auto vars:     Size  Location     Type
 35164 ;;		None
 35165 ;; Return value:  Size  Location     Type
 35166 ;;                  1  [STACK] void 
 35167 ;; Registers used:
 35168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 35169 ;; Tracked objects:
 35170 ;;		On entry : 0/0
 35171 ;;		On exit  : 3F/3C
 35172 ;;		Unchanged: 0/0
 35173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35178 ;;Total ram usage:        0 bytes
 35179 ;; Hardware stack levels used: 1
 35180 ;; Hardware stack levels required when called: 5
 35181 ;; This function calls:
 35182 ;;		_ADCC_Initialize
 35183 ;;		_CLC1_Initialize
 35184 ;;		_CLKREF_Initialize
 35185 ;;		_DMA1_Initialize
 35186 ;;		_DMA2_Initialize
 35187 ;;		_DSM_Initialize
 35188 ;;		_EXT_INT_Initialize
 35189 ;;		_INTERRUPT_Initialize
 35190 ;;		_NCO1_Initialize
 35191 ;;		_OSCILLATOR_Initialize
 35192 ;;		_PIN_MANAGER_Initialize
 35193 ;;		_PMD_Initialize
 35194 ;;		_PWM8_Initialize
 35195 ;;		_SPI1_Initialize
 35196 ;;		_TMR2_Initialize
 35197 ;;		_TMR5_Initialize
 35198 ;;		_TMR6_Initialize
 35199 ;;		_UART1_Initialize
 35200 ;;		_UART2_Initialize
 35201 ;; This function is called by:
 35202 ;;		_main
 35203 ;; This function uses a reentrant model
 35204 ;;
 35205                           
 35206                           	psect	text52
 35207   0173C8                     __ptext52:
 35208                           	callstack 0
 35209   0173C8                     _SYSTEM_Initialize:
 35210                           	callstack 25
 35211                           
 35212                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 35213                           
 35214                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35215                           ;incstack = 0
 35216   0173C8  EC11  F0B8         	call	_INTERRUPT_Initialize	;wreg free
 35217                           
 35218                           ; BSR set to: 57
 35219                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 35220   0173CC  EC12  F0C0         	call	_PMD_Initialize	;wreg free
 35221                           
 35222                           ; BSR set to: 57
 35223                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 35224   0173D0  EC23  F0B5         	call	_PIN_MANAGER_Initialize	;wreg free
 35225                           
 35226                           ; BSR set to: 58
 35227                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 35228   0173D4  EC07  F0C0         	call	_OSCILLATOR_Initialize	;wreg free
 35229                           
 35230                           ; BSR set to: 57
 35231                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 35232   0173D8  EC31  F0BA         	call	_ADCC_Initialize	;wreg free
 35233                           
 35234                           ;mcc_generated_files/mcc.c: 57:     NCO1_Initialize();
 35235   0173DC  EC94  F0BF         	call	_NCO1_Initialize	;wreg free
 35236                           
 35237                           ; BSR set to: 63
 35238                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 35239   0173E0  ECBE  F0BF         	call	_TMR2_Initialize	;wreg free
 35240                           
 35241                           ; BSR set to: 57
 35242                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 35243   0173E4  ECFC  F0BF         	call	_PWM8_Initialize	;wreg free
 35244                           
 35245                           ; BSR set to: 63
 35246                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 35247   0173E8  EC0B  F0BA         	call	_EXT_INT_Initialize	;wreg free
 35248                           
 35249                           ; BSR set to: 57
 35250                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 35251   0173EC  ECF1  F0BD         	call	_TMR6_Initialize	;wreg free
 35252                           
 35253                           ;mcc_generated_files/mcc.c: 62:     CLC1_Initialize();
 35254   0173F0  EC37  F0BF         	call	_CLC1_Initialize	;wreg free
 35255                           
 35256                           ; BSR set to: 60
 35257                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 35258   0173F4  EC9C  F0BA         	call	_TMR5_Initialize	;wreg free
 35259                           
 35260                           ;mcc_generated_files/mcc.c: 64:     DSM_Initialize();
 35261   0173F8  ECA2  F0BF         	call	_DSM_Initialize	;wreg free
 35262                           
 35263                           ; BSR set to: 60
 35264                           ;mcc_generated_files/mcc.c: 65:     UART1_Initialize();
 35265   0173FC  EC77  F0B8         	call	_UART1_Initialize	;wreg free
 35266                           
 35267                           ; BSR set to: 57
 35268                           ;mcc_generated_files/mcc.c: 66:     UART2_Initialize();
 35269   017400  EC09  F0B9         	call	_UART2_Initialize	;wreg free
 35270                           
 35271                           ; BSR set to: 57
 35272                           ;mcc_generated_files/mcc.c: 67:     SPI1_Initialize();
 35273   017404  ECF1  F0BF         	call	_SPI1_Initialize	;wreg free
 35274                           
 35275                           ; BSR set to: 61
 35276                           ;mcc_generated_files/mcc.c: 68:     DMA2_Initialize();
 35277   017408  EC38  F0B9         	call	_DMA2_Initialize	;wreg free
 35278                           
 35279                           ; BSR set to: 59
 35280                           ;mcc_generated_files/mcc.c: 69:     DMA1_Initialize();
 35281   01740C  EC42  F0B7         	call	_DMA1_Initialize	;wreg free
 35282                           
 35283                           ; BSR set to: 59
 35284                           ;mcc_generated_files/mcc.c: 70:     CLKREF_Initialize();
 35285   017410  EC3C  F0C0         	call	_CLKREF_Initialize	;wreg free
 35286                           
 35287                           ; BSR set to: 60
 35288                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35289   017414  0012               	return		;funcret
 35290   017416                     __end_of_SYSTEM_Initialize:
 35291                           	callstack 0
 35292                           
 35293 ;; *************** function _UART2_Initialize *****************
 35294 ;; Defined at:
 35295 ;;		line 78 in file "mcc_generated_files/uart2.c"
 35296 ;; Parameters:    Size  Location     Type
 35297 ;;		None
 35298 ;; Auto vars:     Size  Location     Type
 35299 ;;		None
 35300 ;; Return value:  Size  Location     Type
 35301 ;;                  1  [STACK] void 
 35302 ;; Registers used:
 35303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 35304 ;; Tracked objects:
 35305 ;;		On entry : 3F/39
 35306 ;;		On exit  : 3F/39
 35307 ;;		Unchanged: 0/0
 35308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35313 ;;Total ram usage:        0 bytes
 35314 ;; Hardware stack levels used: 1
 35315 ;; Hardware stack levels required when called: 4
 35316 ;; This function calls:
 35317 ;;		_UART2_SetRxInterruptHandler
 35318 ;;		_UART2_SetTxInterruptHandler
 35319 ;; This function is called by:
 35320 ;;		_SYSTEM_Initialize
 35321 ;; This function uses a reentrant model
 35322 ;;
 35323                           
 35324                           	psect	text53
 35325   017212                     __ptext53:
 35326                           	callstack 0
 35327   017212                     _UART2_Initialize:
 35328                           	callstack 25
 35329                           
 35330                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 35331                           
 35332                           ; BSR set to: 60
 35333                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35334                           ;incstack = 0
 35335   017212  0139               	movlb	57	; () banked
 35336   017214  9596               	bcf	150,2,b	;volatile
 35337                           
 35338                           ; BSR set to: 57
 35339                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 35340   017216  0E0A               	movlw	low _UART2_Receive_ISR
 35341   017218  6EE6               	movwf	postinc1,c
 35342   01721A  0E7F               	movlw	high _UART2_Receive_ISR
 35343   01721C  6EE6               	movwf	postinc1,c
 35344   01721E  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 35345   017220  6EE6               	movwf	postinc1,c
 35346   017222  ECB5  F0BD         	call	_UART2_SetRxInterruptHandler	;wreg free
 35347                           
 35348                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 35349   017226  0139               	movlb	57	; () banked
 35350   017228  9796               	bcf	150,3,b	;volatile
 35351                           
 35352                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 35353   01722A  0E26               	movlw	low _UART2_Transmit_ISR
 35354   01722C  6EE6               	movwf	postinc1,c
 35355   01722E  0E7A               	movlw	high _UART2_Transmit_ISR
 35356   017230  6EE6               	movwf	postinc1,c
 35357   017232  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 35358   017234  6EE6               	movwf	postinc1,c
 35359   017236  ECA1  F0BD         	call	_UART2_SetTxInterruptHandler	;wreg free
 35360                           
 35361                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 35362   01723A  013D               	movlb	61	; () banked
 35363   01723C  6BD4               	clrf	212,b	;volatile
 35364                           
 35365                           ; BSR set to: 61
 35366                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 35367   01723E  6BD6               	clrf	214,b	;volatile
 35368                           
 35369                           ; BSR set to: 61
 35370                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 35371   017240  6BD8               	clrf	216,b	;volatile
 35372                           
 35373                           ; BSR set to: 61
 35374                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 35375   017242  0EB0               	movlw	176
 35376   017244  6FDA               	movwf	218,b	;volatile
 35377                           
 35378                           ; BSR set to: 61
 35379                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 35380   017246  0E80               	movlw	128
 35381   017248  6FDB               	movwf	219,b	;volatile
 35382                           
 35383                           ; BSR set to: 61
 35384                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 35385   01724A  6BDC               	clrf	220,b	;volatile
 35386                           
 35387                           ; BSR set to: 61
 35388                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 35389   01724C  0E82               	movlw	130
 35390   01724E  6FDD               	movwf	221,b	;volatile
 35391                           
 35392                           ; BSR set to: 61
 35393                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 35394   017250  0E06               	movlw	6
 35395   017252  6FDE               	movwf	222,b	;volatile
 35396                           
 35397                           ; BSR set to: 61
 35398                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 35399   017254  6BDF               	clrf	223,b	;volatile
 35400                           
 35401                           ; BSR set to: 61
 35402                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 35403   017256  6BE0               	clrf	224,b	;volatile
 35404                           
 35405                           ; BSR set to: 61
 35406                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 35407   017258  6BE1               	clrf	225,b	;volatile
 35408                           
 35409                           ; BSR set to: 61
 35410                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 35411   01725A  6BE2               	clrf	226,b	;volatile
 35412                           
 35413                           ; BSR set to: 61
 35414                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 35415   01725C  6A15               	clrf	_uart2TxHead^0,c	;volatile
 35416                           
 35417                           ; BSR set to: 61
 35418                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 35419   01725E  6A14               	clrf	_uart2TxTail^0,c	;volatile
 35420                           
 35421                           ; BSR set to: 61
 35422                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 35423   017260  0E40               	movlw	64
 35424   017262  6E13               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 35425                           
 35426                           ; BSR set to: 61
 35427                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 35428   017264  6A12               	clrf	_uart2RxHead^0,c	;volatile
 35429                           
 35430                           ; BSR set to: 61
 35431                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 35432   017266  6A11               	clrf	_uart2RxTail^0,c	;volatile
 35433                           
 35434                           ; BSR set to: 61
 35435                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 35436   017268  6A10               	clrf	_uart2RxCount^0,c	;volatile
 35437                           
 35438                           ; BSR set to: 61
 35439                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 35440   01726A  0139               	movlb	57	; () banked
 35441   01726C  8596               	bsf	150,2,b	;volatile
 35442                           
 35443                           ; BSR set to: 57
 35444                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 35445   01726E  0012               	return		;funcret
 35446   017270                     __end_of_UART2_Initialize:
 35447                           	callstack 0
 35448                           
 35449 ;; *************** function _UART2_SetTxInterruptHandler *****************
 35450 ;; Defined at:
 35451 ;;		line 252 in file "mcc_generated_files/uart2.c"
 35452 ;; Parameters:    Size  Location     Type
 35453 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 35454 ;;		 -> UART2_Transmit_ISR(1), 
 35455 ;; Auto vars:     Size  Location     Type
 35456 ;;		None
 35457 ;; Return value:  Size  Location     Type
 35458 ;;                  1  [STACK] void 
 35459 ;; Registers used:
 35460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 35461 ;; Tracked objects:
 35462 ;;		On entry : 3F/39
 35463 ;;		On exit  : 0/0
 35464 ;;		Unchanged: 0/0
 35465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35470 ;;Total ram usage:        0 bytes
 35471 ;; Hardware stack levels used: 1
 35472 ;; Hardware stack levels required when called: 3
 35473 ;; This function calls:
 35474 ;;		Nothing
 35475 ;; This function is called by:
 35476 ;;		_UART2_Initialize
 35477 ;; This function uses a reentrant model
 35478 ;;
 35479                           
 35480                           	psect	text54
 35481   017B42                     __ptext54:
 35482                           	callstack 0
 35483   017B42                     _UART2_SetTxInterruptHandler:
 35484                           	callstack 25
 35485                           
 35486                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 35487                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 35488                           
 35489                           ; BSR set to: 57
 35490                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35491                           ;incstack = 0
 35492   017B42  50E1               	movf	fsr1l,w,c
 35493   017B44  0FFD               	addlw	-3
 35494   017B46  6ED9               	movwf	fsr2l,c
 35495   017B48  50E2               	movf	fsr1h,w,c
 35496   017B4A  6EDA               	movwf	fsr2h,c
 35497   017B4C  0EFF               	movlw	255
 35498   017B4E  22DA               	addwfc	fsr2h,f,c
 35499   017B50  006F FF78  F0AD    	movff	postinc2,_UART2_TxInterruptHandler
 35500   017B56  006F FF78  F0AE    	movff	postinc2,_UART2_TxInterruptHandler+1
 35501   017B5C  006F FF74  F0AF    	movff	postdec2,_UART2_TxInterruptHandler+2
 35502                           
 35503                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 35504   017B62  52E5               	movf	postdec1,f,c
 35505   017B64  52E5               	movf	postdec1,f,c
 35506   017B66  52E5               	movf	postdec1,f,c
 35507   017B68  0012               	return		;funcret
 35508   017B6A                     __end_of_UART2_SetTxInterruptHandler:
 35509                           	callstack 0
 35510                           
 35511 ;; *************** function _UART2_SetRxInterruptHandler *****************
 35512 ;; Defined at:
 35513 ;;		line 248 in file "mcc_generated_files/uart2.c"
 35514 ;; Parameters:    Size  Location     Type
 35515 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 35516 ;;		 -> UART2_Receive_ISR(1), 
 35517 ;; Auto vars:     Size  Location     Type
 35518 ;;		None
 35519 ;; Return value:  Size  Location     Type
 35520 ;;                  1  [STACK] void 
 35521 ;; Registers used:
 35522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 35523 ;; Tracked objects:
 35524 ;;		On entry : 3F/39
 35525 ;;		On exit  : 0/0
 35526 ;;		Unchanged: 0/0
 35527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35532 ;;Total ram usage:        0 bytes
 35533 ;; Hardware stack levels used: 1
 35534 ;; Hardware stack levels required when called: 3
 35535 ;; This function calls:
 35536 ;;		Nothing
 35537 ;; This function is called by:
 35538 ;;		_UART2_Initialize
 35539 ;; This function uses a reentrant model
 35540 ;;
 35541                           
 35542                           	psect	text55
 35543   017B6A                     __ptext55:
 35544                           	callstack 0
 35545   017B6A                     _UART2_SetRxInterruptHandler:
 35546                           	callstack 25
 35547                           
 35548                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 35549                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 35550                           
 35551                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35552                           ;incstack = 0
 35553   017B6A  50E1               	movf	fsr1l,w,c
 35554   017B6C  0FFD               	addlw	-3
 35555   017B6E  6ED9               	movwf	fsr2l,c
 35556   017B70  50E2               	movf	fsr1h,w,c
 35557   017B72  6EDA               	movwf	fsr2h,c
 35558   017B74  0EFF               	movlw	255
 35559   017B76  22DA               	addwfc	fsr2h,f,c
 35560   017B78  006F FF78  F0B0    	movff	postinc2,_UART2_RxInterruptHandler
 35561   017B7E  006F FF78  F0B1    	movff	postinc2,_UART2_RxInterruptHandler+1
 35562   017B84  006F FF74  F0B2    	movff	postdec2,_UART2_RxInterruptHandler+2
 35563                           
 35564                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 35565   017B8A  52E5               	movf	postdec1,f,c
 35566   017B8C  52E5               	movf	postdec1,f,c
 35567   017B8E  52E5               	movf	postdec1,f,c
 35568   017B90  0012               	return		;funcret
 35569   017B92                     __end_of_UART2_SetRxInterruptHandler:
 35570                           	callstack 0
 35571                           
 35572 ;; *************** function _UART1_Initialize *****************
 35573 ;; Defined at:
 35574 ;;		line 79 in file "mcc_generated_files/uart1.c"
 35575 ;; Parameters:    Size  Location     Type
 35576 ;;		None
 35577 ;; Auto vars:     Size  Location     Type
 35578 ;;		None
 35579 ;; Return value:  Size  Location     Type
 35580 ;;                  1  [STACK] void 
 35581 ;; Registers used:
 35582 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 35583 ;; Tracked objects:
 35584 ;;		On entry : 3F/3C
 35585 ;;		On exit  : 3F/39
 35586 ;;		Unchanged: 0/0
 35587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35592 ;;Total ram usage:        0 bytes
 35593 ;; Hardware stack levels used: 1
 35594 ;; Hardware stack levels required when called: 4
 35595 ;; This function calls:
 35596 ;;		_UART1_SetRxInterruptHandler
 35597 ;;		_UART1_SetTxInterruptHandler
 35598 ;; This function is called by:
 35599 ;;		_SYSTEM_Initialize
 35600 ;; This function uses a reentrant model
 35601 ;;
 35602                           
 35603                           	psect	text56
 35604   0170EE                     __ptext56:
 35605                           	callstack 0
 35606   0170EE                     _UART1_Initialize:
 35607                           	callstack 25
 35608                           
 35609                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 35610                           
 35611                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35612                           ;incstack = 0
 35613   0170EE  0139               	movlb	57	; () banked
 35614   0170F0  9793               	bcf	147,3,b	;volatile
 35615                           
 35616                           ; BSR set to: 57
 35617                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 35618   0170F2  0EEC               	movlw	low _UART1_Receive_ISR
 35619   0170F4  6EE6               	movwf	postinc1,c
 35620   0170F6  0E7E               	movlw	high _UART1_Receive_ISR
 35621   0170F8  6EE6               	movwf	postinc1,c
 35622   0170FA  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 35623   0170FC  6EE6               	movwf	postinc1,c
 35624   0170FE  ECDD  F0BD         	call	_UART1_SetRxInterruptHandler	;wreg free
 35625                           
 35626                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 35627   017102  0139               	movlb	57	; () banked
 35628   017104  9993               	bcf	147,4,b	;volatile
 35629                           
 35630                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 35631   017106  0EFA               	movlw	low _UART1_Transmit_ISR
 35632   017108  6EE6               	movwf	postinc1,c
 35633   01710A  0E79               	movlw	high _UART1_Transmit_ISR
 35634   01710C  6EE6               	movwf	postinc1,c
 35635   01710E  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 35636   017110  6EE6               	movwf	postinc1,c
 35637   017112  ECC9  F0BD         	call	_UART1_SetTxInterruptHandler	;wreg free
 35638                           
 35639                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 35640   017116  013D               	movlb	61	; () banked
 35641   017118  6BEC               	clrf	236,b	;volatile
 35642                           
 35643                           ; BSR set to: 61
 35644                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 35645   01711A  6BED               	clrf	237,b	;volatile
 35646                           
 35647                           ; BSR set to: 61
 35648                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 35649   01711C  6BEE               	clrf	238,b	;volatile
 35650                           
 35651                           ; BSR set to: 61
 35652                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 35653   01711E  6BEF               	clrf	239,b	;volatile
 35654                           
 35655                           ; BSR set to: 61
 35656                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 35657   017120  6BF0               	clrf	240,b	;volatile
 35658                           
 35659                           ; BSR set to: 61
 35660                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 35661   017122  6BF1               	clrf	241,b	;volatile
 35662                           
 35663                           ; BSR set to: 61
 35664                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 35665   017124  0EB0               	movlw	176
 35666   017126  6FF2               	movwf	242,b	;volatile
 35667                           
 35668                           ; BSR set to: 61
 35669                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 35670   017128  0E80               	movlw	128
 35671   01712A  6FF3               	movwf	243,b	;volatile
 35672                           
 35673                           ; BSR set to: 61
 35674                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 35675   01712C  6BF4               	clrf	244,b	;volatile
 35676                           
 35677                           ; BSR set to: 61
 35678                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 35679   01712E  0E82               	movlw	130
 35680   017130  6FF5               	movwf	245,b	;volatile
 35681                           
 35682                           ; BSR set to: 61
 35683                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 35684   017132  0E06               	movlw	6
 35685   017134  6FF6               	movwf	246,b	;volatile
 35686                           
 35687                           ; BSR set to: 61
 35688                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 35689   017136  6BF7               	clrf	247,b	;volatile
 35690                           
 35691                           ; BSR set to: 61
 35692                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 35693   017138  6BF8               	clrf	248,b	;volatile
 35694                           
 35695                           ; BSR set to: 61
 35696                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 35697   01713A  6BF9               	clrf	249,b	;volatile
 35698                           
 35699                           ; BSR set to: 61
 35700                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 35701   01713C  6BFA               	clrf	250,b	;volatile
 35702                           
 35703                           ; BSR set to: 61
 35704                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 35705   01713E  6A1B               	clrf	_uart1TxHead^0,c	;volatile
 35706                           
 35707                           ; BSR set to: 61
 35708                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 35709   017140  6A1A               	clrf	_uart1TxTail^0,c	;volatile
 35710                           
 35711                           ; BSR set to: 61
 35712                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 35713   017142  0E40               	movlw	64
 35714   017144  6E19               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 35715                           
 35716                           ; BSR set to: 61
 35717                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 35718   017146  6A18               	clrf	_uart1RxHead^0,c	;volatile
 35719                           
 35720                           ; BSR set to: 61
 35721                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 35722   017148  6A17               	clrf	_uart1RxTail^0,c	;volatile
 35723                           
 35724                           ; BSR set to: 61
 35725                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 35726   01714A  6A16               	clrf	_uart1RxCount^0,c	;volatile
 35727                           
 35728                           ; BSR set to: 61
 35729                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 35730   01714C  0139               	movlb	57	; () banked
 35731   01714E  8793               	bsf	147,3,b	;volatile
 35732                           
 35733                           ; BSR set to: 57
 35734                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 35735   017150  0012               	return		;funcret
 35736   017152                     __end_of_UART1_Initialize:
 35737                           	callstack 0
 35738                           
 35739 ;; *************** function _UART1_SetTxInterruptHandler *****************
 35740 ;; Defined at:
 35741 ;;		line 247 in file "mcc_generated_files/uart1.c"
 35742 ;; Parameters:    Size  Location     Type
 35743 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 35744 ;;		 -> UART1_Transmit_ISR(1), 
 35745 ;; Auto vars:     Size  Location     Type
 35746 ;;		None
 35747 ;; Return value:  Size  Location     Type
 35748 ;;                  1  [STACK] void 
 35749 ;; Registers used:
 35750 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 35751 ;; Tracked objects:
 35752 ;;		On entry : 3F/39
 35753 ;;		On exit  : 0/0
 35754 ;;		Unchanged: 0/0
 35755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35760 ;;Total ram usage:        0 bytes
 35761 ;; Hardware stack levels used: 1
 35762 ;; Hardware stack levels required when called: 3
 35763 ;; This function calls:
 35764 ;;		Nothing
 35765 ;; This function is called by:
 35766 ;;		_UART1_Initialize
 35767 ;; This function uses a reentrant model
 35768 ;;
 35769                           
 35770                           	psect	text57
 35771   017B92                     __ptext57:
 35772                           	callstack 0
 35773   017B92                     _UART1_SetTxInterruptHandler:
 35774                           	callstack 25
 35775                           
 35776                           ;mcc_generated_files/uart1.c: 247: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 248: {;mcc_generated_files/uart1.c: 249:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 35777                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 35778                           
 35779                           ; BSR set to: 57
 35780                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35781                           ;incstack = 0
 35782   017B92  50E1               	movf	fsr1l,w,c
 35783   017B94  0FFD               	addlw	-3
 35784   017B96  6ED9               	movwf	fsr2l,c
 35785   017B98  50E2               	movf	fsr1h,w,c
 35786   017B9A  6EDA               	movwf	fsr2h,c
 35787   017B9C  0EFF               	movlw	255
 35788   017B9E  22DA               	addwfc	fsr2h,f,c
 35789   017BA0  006F FF78  F0A7    	movff	postinc2,_UART1_TxInterruptHandler
 35790   017BA6  006F FF78  F0A8    	movff	postinc2,_UART1_TxInterruptHandler+1
 35791   017BAC  006F FF74  F0A9    	movff	postdec2,_UART1_TxInterruptHandler+2
 35792                           
 35793                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 35794   017BB2  52E5               	movf	postdec1,f,c
 35795   017BB4  52E5               	movf	postdec1,f,c
 35796   017BB6  52E5               	movf	postdec1,f,c
 35797   017BB8  0012               	return		;funcret
 35798   017BBA                     __end_of_UART1_SetTxInterruptHandler:
 35799                           	callstack 0
 35800                           
 35801 ;; *************** function _UART1_SetRxInterruptHandler *****************
 35802 ;; Defined at:
 35803 ;;		line 242 in file "mcc_generated_files/uart1.c"
 35804 ;; Parameters:    Size  Location     Type
 35805 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 35806 ;;		 -> UART1_Receive_ISR(1), 
 35807 ;; Auto vars:     Size  Location     Type
 35808 ;;		None
 35809 ;; Return value:  Size  Location     Type
 35810 ;;                  1  [STACK] void 
 35811 ;; Registers used:
 35812 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 35813 ;; Tracked objects:
 35814 ;;		On entry : 3F/39
 35815 ;;		On exit  : 0/0
 35816 ;;		Unchanged: 0/0
 35817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35822 ;;Total ram usage:        0 bytes
 35823 ;; Hardware stack levels used: 1
 35824 ;; Hardware stack levels required when called: 3
 35825 ;; This function calls:
 35826 ;;		Nothing
 35827 ;; This function is called by:
 35828 ;;		_UART1_Initialize
 35829 ;; This function uses a reentrant model
 35830 ;;
 35831                           
 35832                           	psect	text58
 35833   017BBA                     __ptext58:
 35834                           	callstack 0
 35835   017BBA                     _UART1_SetRxInterruptHandler:
 35836                           	callstack 25
 35837                           
 35838                           ;mcc_generated_files/uart1.c: 242: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 243: {;mcc_generated_files/uart1.c: 244:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 35839                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 35840                           
 35841                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35842                           ;incstack = 0
 35843   017BBA  50E1               	movf	fsr1l,w,c
 35844   017BBC  0FFD               	addlw	-3
 35845   017BBE  6ED9               	movwf	fsr2l,c
 35846   017BC0  50E2               	movf	fsr1h,w,c
 35847   017BC2  6EDA               	movwf	fsr2h,c
 35848   017BC4  0EFF               	movlw	255
 35849   017BC6  22DA               	addwfc	fsr2h,f,c
 35850   017BC8  006F FF78  F0AA    	movff	postinc2,_UART1_RxInterruptHandler
 35851   017BCE  006F FF78  F0AB    	movff	postinc2,_UART1_RxInterruptHandler+1
 35852   017BD4  006F FF74  F0AC    	movff	postdec2,_UART1_RxInterruptHandler+2
 35853                           
 35854                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 35855   017BDA  52E5               	movf	postdec1,f,c
 35856   017BDC  52E5               	movf	postdec1,f,c
 35857   017BDE  52E5               	movf	postdec1,f,c
 35858   017BE0  0012               	return		;funcret
 35859   017BE2                     __end_of_UART1_SetRxInterruptHandler:
 35860                           	callstack 0
 35861                           
 35862 ;; *************** function _TMR6_Initialize *****************
 35863 ;; Defined at:
 35864 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 35865 ;; Parameters:    Size  Location     Type
 35866 ;;		None
 35867 ;; Auto vars:     Size  Location     Type
 35868 ;;		None
 35869 ;; Return value:  Size  Location     Type
 35870 ;;                  1  [STACK] void 
 35871 ;; Registers used:
 35872 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 35873 ;; Tracked objects:
 35874 ;;		On entry : 3F/39
 35875 ;;		On exit  : 0/0
 35876 ;;		Unchanged: 0/0
 35877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35882 ;;Total ram usage:        0 bytes
 35883 ;; Hardware stack levels used: 1
 35884 ;; Hardware stack levels required when called: 4
 35885 ;; This function calls:
 35886 ;;		_TMR6_SetInterruptHandler
 35887 ;; This function is called by:
 35888 ;;		_SYSTEM_Initialize
 35889 ;; This function uses a reentrant model
 35890 ;;
 35891                           
 35892                           	psect	text59
 35893   017BE2                     __ptext59:
 35894                           	callstack 0
 35895   017BE2                     _TMR6_Initialize:
 35896                           	callstack 25
 35897                           
 35898                           ;mcc_generated_files/tmr6.c: 75:  T6CLKCON = 0x01;
 35899                           
 35900                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35901                           ;incstack = 0
 35902   017BE2  0E01               	movlw	1
 35903   017BE4  6E96               	movwf	150,c	;volatile
 35904                           
 35905                           ;mcc_generated_files/tmr6.c: 78:  T6HLT = 0x00;
 35906   017BE6  6A95               	clrf	149,c	;volatile
 35907                           
 35908                           ;mcc_generated_files/tmr6.c: 81:  T6RST = 0x00;
 35909   017BE8  6A97               	clrf	151,c	;volatile
 35910                           
 35911                           ;mcc_generated_files/tmr6.c: 84:  T6PR = 0x03;
 35912   017BEA  0E03               	movlw	3
 35913   017BEC  6E93               	movwf	147,c	;volatile
 35914                           
 35915                           ;mcc_generated_files/tmr6.c: 87:  T6TMR = 0x00;
 35916   017BEE  6A92               	clrf	146,c	;volatile
 35917                           
 35918                           ;mcc_generated_files/tmr6.c: 90:  PIR9bits.TMR6IF = 0;
 35919   017BF0  0139               	movlb	57	; () banked
 35920   017BF2  91A9               	bcf	169,0,b	;volatile
 35921                           
 35922                           ; BSR set to: 57
 35923                           ;mcc_generated_files/tmr6.c: 93:  PIE9bits.TMR6IE = 1;
 35924   017BF4  8199               	bsf	153,0,b	;volatile
 35925                           
 35926                           ; BSR set to: 57
 35927                           ;mcc_generated_files/tmr6.c: 96:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
 35928   017BF6  0EF2               	movlw	low _TMR6_DefaultInterruptHandler
 35929   017BF8  6EE6               	movwf	postinc1,c
 35930   017BFA  0E74               	movlw	high _TMR6_DefaultInterruptHandler
 35931   017BFC  6EE6               	movwf	postinc1,c
 35932   017BFE  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 35933   017C00  6EE6               	movwf	postinc1,c
 35934   017C02  EC05  F0BE         	call	_TMR6_SetInterruptHandler	;wreg free
 35935                           
 35936                           ;mcc_generated_files/tmr6.c: 99:  T6CON = 0xFF;
 35937   017C06  6894               	setf	148,c	;volatile
 35938                           
 35939                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35940   017C08  0012               	return		;funcret
 35941   017C0A                     __end_of_TMR6_Initialize:
 35942                           	callstack 0
 35943                           
 35944 ;; *************** function _TMR6_SetInterruptHandler *****************
 35945 ;; Defined at:
 35946 ;;		line 191 in file "mcc_generated_files/tmr6.c"
 35947 ;; Parameters:    Size  Location     Type
 35948 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 35949 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 35950 ;; Auto vars:     Size  Location     Type
 35951 ;;		None
 35952 ;; Return value:  Size  Location     Type
 35953 ;;                  1  [STACK] void 
 35954 ;; Registers used:
 35955 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 35956 ;; Tracked objects:
 35957 ;;		On entry : 3F/39
 35958 ;;		On exit  : 0/0
 35959 ;;		Unchanged: 0/0
 35960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35965 ;;Total ram usage:        0 bytes
 35966 ;; Hardware stack levels used: 1
 35967 ;; Hardware stack levels required when called: 3
 35968 ;; This function calls:
 35969 ;;		Nothing
 35970 ;; This function is called by:
 35971 ;;		_TMR6_Initialize
 35972 ;; This function uses a reentrant model
 35973 ;;
 35974                           
 35975                           	psect	text60
 35976   017C0A                     __ptext60:
 35977                           	callstack 0
 35978   017C0A                     _TMR6_SetInterruptHandler:
 35979                           	callstack 25
 35980                           
 35981                           ;mcc_generated_files/tmr6.c: 191: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 192: {;mcc_generated_files/tmr6.c: 193:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
 35982                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 35983                           
 35984                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35985                           ;incstack = 0
 35986   017C0A  50E1               	movf	fsr1l,w,c
 35987   017C0C  0FFD               	addlw	-3
 35988   017C0E  6ED9               	movwf	fsr2l,c
 35989   017C10  50E2               	movf	fsr1h,w,c
 35990   017C12  6EDA               	movwf	fsr2h,c
 35991   017C14  0EFF               	movlw	255
 35992   017C16  22DA               	addwfc	fsr2h,f,c
 35993   017C18  006F FF78  F0A1    	movff	postinc2,_TMR6_InterruptHandler
 35994   017C1E  006F FF78  F0A2    	movff	postinc2,_TMR6_InterruptHandler+1
 35995   017C24  006F FF74  F0A3    	movff	postdec2,_TMR6_InterruptHandler+2
 35996                           
 35997                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 35998   017C2A  52E5               	movf	postdec1,f,c
 35999   017C2C  52E5               	movf	postdec1,f,c
 36000   017C2E  52E5               	movf	postdec1,f,c
 36001   017C30  0012               	return		;funcret
 36002   017C32                     __end_of_TMR6_SetInterruptHandler:
 36003                           	callstack 0
 36004                           
 36005 ;; *************** function _TMR5_Initialize *****************
 36006 ;; Defined at:
 36007 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 36008 ;; Parameters:    Size  Location     Type
 36009 ;;		None
 36010 ;; Auto vars:     Size  Location     Type
 36011 ;;		None
 36012 ;; Return value:  Size  Location     Type
 36013 ;;                  1  [STACK] void 
 36014 ;; Registers used:
 36015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 36016 ;; Tracked objects:
 36017 ;;		On entry : 3F/3C
 36018 ;;		On exit  : 0/0
 36019 ;;		Unchanged: 0/0
 36020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36025 ;;Total ram usage:        0 bytes
 36026 ;; Hardware stack levels used: 1
 36027 ;; Hardware stack levels required when called: 4
 36028 ;; This function calls:
 36029 ;;		_TMR5_SetInterruptHandler
 36030 ;; This function is called by:
 36031 ;;		_SYSTEM_Initialize
 36032 ;; This function uses a reentrant model
 36033 ;;
 36034                           
 36035                           	psect	text61
 36036   017538                     __ptext61:
 36037                           	callstack 0
 36038   017538                     _TMR5_Initialize:
 36039                           	callstack 25
 36040                           
 36041                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 36042                           
 36043                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36044                           ;incstack = 0
 36045   017538  6A9B               	clrf	155,c	;volatile
 36046                           
 36047                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 36048   01753A  6A9C               	clrf	156,c	;volatile
 36049                           
 36050                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 36051   01753C  0E01               	movlw	1
 36052   01753E  6E9D               	movwf	157,c	;volatile
 36053                           
 36054                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 36055   017540  0E63               	movlw	99
 36056   017542  6E99               	movwf	153,c	;volatile
 36057                           
 36058                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 36059   017544  0EC0               	movlw	192
 36060   017546  6E98               	movwf	152,c	;volatile
 36061                           
 36062                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 36063   017548  5098               	movf	152,w,c	;volatile
 36064   01754A  006F FE64  F023    	movff	16281,btemp	;volatile
 36065   017550  6A24               	clrf	(btemp+1)^0,c
 36066   017552  C023  F024         	movff	btemp,btemp+1
 36067   017556  6A23               	clrf	btemp^0,c
 36068   017558  1023               	iorwf	btemp^0,w,c
 36069   01755A  6E07               	movwf	_timer5ReloadVal^0,c	;volatile
 36070   01755C  5024               	movf	(btemp+1)^0,w,c
 36071   01755E  6E08               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 36072                           
 36073                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 36074   017560  0139               	movlb	57	; () banked
 36075   017562  9DA8               	bcf	168,6,b	;volatile
 36076                           
 36077                           ; BSR set to: 57
 36078                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 36079   017564  8D98               	bsf	152,6,b	;volatile
 36080                           
 36081                           ; BSR set to: 57
 36082                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 36083   017566  0EB0               	movlw	low _TMR5_DefaultInterruptHandler
 36084   017568  6EE6               	movwf	postinc1,c
 36085   01756A  0E7F               	movlw	high _TMR5_DefaultInterruptHandler
 36086   01756C  6EE6               	movwf	postinc1,c
 36087   01756E  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 36088   017570  6EE6               	movwf	postinc1,c
 36089   017572  EC19  F0BE         	call	_TMR5_SetInterruptHandler	;wreg free
 36090                           
 36091                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 36092   017576  0E31               	movlw	49
 36093   017578  6E9A               	movwf	154,c	;volatile
 36094                           
 36095                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 36096   01757A  0012               	return		;funcret
 36097   01757C                     __end_of_TMR5_Initialize:
 36098                           	callstack 0
 36099                           
 36100 ;; *************** function _TMR5_SetInterruptHandler *****************
 36101 ;; Defined at:
 36102 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 36103 ;; Parameters:    Size  Location     Type
 36104 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 36105 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 36106 ;; Auto vars:     Size  Location     Type
 36107 ;;		None
 36108 ;; Return value:  Size  Location     Type
 36109 ;;                  1  [STACK] void 
 36110 ;; Registers used:
 36111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 36112 ;; Tracked objects:
 36113 ;;		On entry : 3F/39
 36114 ;;		On exit  : 0/0
 36115 ;;		Unchanged: 0/0
 36116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36121 ;;Total ram usage:        0 bytes
 36122 ;; Hardware stack levels used: 1
 36123 ;; Hardware stack levels required when called: 3
 36124 ;; This function calls:
 36125 ;;		Nothing
 36126 ;; This function is called by:
 36127 ;;		_TMR5_Initialize
 36128 ;; This function uses a reentrant model
 36129 ;;
 36130                           
 36131                           	psect	text62
 36132   017C32                     __ptext62:
 36133                           	callstack 0
 36134   017C32                     _TMR5_SetInterruptHandler:
 36135                           	callstack 25
 36136                           
 36137                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 36138                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 36139                           
 36140                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36141                           ;incstack = 0
 36142   017C32  50E1               	movf	fsr1l,w,c
 36143   017C34  0FFD               	addlw	-3
 36144   017C36  6ED9               	movwf	fsr2l,c
 36145   017C38  50E2               	movf	fsr1h,w,c
 36146   017C3A  6EDA               	movwf	fsr2h,c
 36147   017C3C  0EFF               	movlw	255
 36148   017C3E  22DA               	addwfc	fsr2h,f,c
 36149   017C40  006F FF78  F09E    	movff	postinc2,_TMR5_InterruptHandler
 36150   017C46  006F FF78  F09F    	movff	postinc2,_TMR5_InterruptHandler+1
 36151   017C4C  006F FF74  F0A0    	movff	postdec2,_TMR5_InterruptHandler+2
 36152                           
 36153                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 36154   017C52  52E5               	movf	postdec1,f,c
 36155   017C54  52E5               	movf	postdec1,f,c
 36156   017C56  52E5               	movf	postdec1,f,c
 36157   017C58  0012               	return		;funcret
 36158   017C5A                     __end_of_TMR5_SetInterruptHandler:
 36159                           	callstack 0
 36160                           
 36161 ;; *************** function _TMR2_Initialize *****************
 36162 ;; Defined at:
 36163 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 36164 ;; Parameters:    Size  Location     Type
 36165 ;;		None
 36166 ;; Auto vars:     Size  Location     Type
 36167 ;;		None
 36168 ;; Return value:  Size  Location     Type
 36169 ;;                  1  [STACK] void 
 36170 ;; Registers used:
 36171 ;;		wreg, status,2
 36172 ;; Tracked objects:
 36173 ;;		On entry : 3F/3F
 36174 ;;		On exit  : 3F/39
 36175 ;;		Unchanged: 0/0
 36176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36181 ;;Total ram usage:        0 bytes
 36182 ;; Hardware stack levels used: 1
 36183 ;; Hardware stack levels required when called: 3
 36184 ;; This function calls:
 36185 ;;		Nothing
 36186 ;; This function is called by:
 36187 ;;		_SYSTEM_Initialize
 36188 ;; This function uses a reentrant model
 36189 ;;
 36190                           
 36191                           	psect	text63
 36192   017F7C                     __ptext63:
 36193                           	callstack 0
 36194   017F7C                     _TMR2_Initialize:
 36195                           	callstack 26
 36196                           
 36197                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 36198                           
 36199                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36200                           ;incstack = 0
 36201   017F7C  0E01               	movlw	1
 36202   017F7E  6EAE               	movwf	174,c	;volatile
 36203                           
 36204                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 36205   017F80  6AAD               	clrf	173,c	;volatile
 36206                           
 36207                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x11;
 36208   017F82  0E11               	movlw	17
 36209   017F84  6EAF               	movwf	175,c	;volatile
 36210                           
 36211                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 36212   017F86  0E63               	movlw	99
 36213   017F88  6EAB               	movwf	171,c	;volatile
 36214                           
 36215                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 36216   017F8A  6AAA               	clrf	170,c	;volatile
 36217                           
 36218                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 36219   017F8C  0139               	movlb	57	; () banked
 36220   017F8E  95A4               	bcf	164,2,b	;volatile
 36221                           
 36222                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 36223   017F90  0EC0               	movlw	192
 36224   017F92  6EAC               	movwf	172,c	;volatile
 36225                           
 36226                           ; BSR set to: 57
 36227                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 36228   017F94  0012               	return		;funcret
 36229   017F96                     __end_of_TMR2_Initialize:
 36230                           	callstack 0
 36231                           
 36232 ;; *************** function _SPI1_Initialize *****************
 36233 ;; Defined at:
 36234 ;;		line 64 in file "mcc_generated_files/spi1.c"
 36235 ;; Parameters:    Size  Location     Type
 36236 ;;		None
 36237 ;; Auto vars:     Size  Location     Type
 36238 ;;		None
 36239 ;; Return value:  Size  Location     Type
 36240 ;;                  1  [STACK] void 
 36241 ;; Registers used:
 36242 ;;		wreg, status,2
 36243 ;; Tracked objects:
 36244 ;;		On entry : 3F/39
 36245 ;;		On exit  : 3F/3D
 36246 ;;		Unchanged: 0/0
 36247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36252 ;;Total ram usage:        0 bytes
 36253 ;; Hardware stack levels used: 1
 36254 ;; Hardware stack levels required when called: 3
 36255 ;; This function calls:
 36256 ;;		Nothing
 36257 ;; This function is called by:
 36258 ;;		_SYSTEM_Initialize
 36259 ;; This function uses a reentrant model
 36260 ;;
 36261                           
 36262                           	psect	text64
 36263   017FE2                     __ptext64:
 36264                           	callstack 0
 36265   017FE2                     _SPI1_Initialize:
 36266                           	callstack 26
 36267                           
 36268                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 36269                           
 36270                           ; BSR set to: 57
 36271                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36272                           ;incstack = 0
 36273   017FE2  0E40               	movlw	64
 36274   017FE4  013D               	movlb	61	; () banked
 36275   017FE6  6F15               	movwf	21,b	;volatile
 36276                           
 36277                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 36278   017FE8  0E03               	movlw	3
 36279   017FEA  6F16               	movwf	22,b	;volatile
 36280                           
 36281                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 36282   017FEC  0E4F               	movlw	79
 36283   017FEE  6F19               	movwf	25,b	;volatile
 36284                           
 36285                           ; BSR set to: 61
 36286                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 36287   017FF0  6B1C               	clrf	28,b	;volatile
 36288                           
 36289                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 36290   017FF2  0E83               	movlw	131
 36291   017FF4  6F14               	movwf	20,b	;volatile
 36292                           
 36293                           ; BSR set to: 61
 36294                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 36295   017FF6  0012               	return		;funcret
 36296   017FF8                     __end_of_SPI1_Initialize:
 36297                           	callstack 0
 36298                           
 36299 ;; *************** function _PWM8_Initialize *****************
 36300 ;; Defined at:
 36301 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 36302 ;; Parameters:    Size  Location     Type
 36303 ;;		None
 36304 ;; Auto vars:     Size  Location     Type
 36305 ;;		None
 36306 ;; Return value:  Size  Location     Type
 36307 ;;                  1  [STACK] void 
 36308 ;; Registers used:
 36309 ;;		wreg, status,2
 36310 ;; Tracked objects:
 36311 ;;		On entry : 3F/39
 36312 ;;		On exit  : 3F/3F
 36313 ;;		Unchanged: 0/0
 36314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36319 ;;Total ram usage:        0 bytes
 36320 ;; Hardware stack levels used: 1
 36321 ;; Hardware stack levels required when called: 3
 36322 ;; This function calls:
 36323 ;;		Nothing
 36324 ;; This function is called by:
 36325 ;;		_SYSTEM_Initialize
 36326 ;; This function uses a reentrant model
 36327 ;;
 36328                           
 36329                           	psect	text65
 36330   017FF8                     __ptext65:
 36331                           	callstack 0
 36332   017FF8                     _PWM8_Initialize:
 36333                           	callstack 26
 36334                           
 36335                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 36336                           
 36337                           ; BSR set to: 61
 36338                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36339                           ;incstack = 0
 36340   017FF8  0E80               	movlw	128
 36341   017FFA  6E62               	movwf	98,c	;volatile
 36342                           
 36343                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 36344   017FFC  6A61               	clrf	97,c	;volatile
 36345                           
 36346                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 36347   017FFE  0E40               	movlw	64
 36348   018000  6E60               	movwf	96,c	;volatile
 36349                           
 36350                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 36351   018002  013F               	movlb	63	; () banked
 36352   018004  515F               	movf	95,w,b	;volatile
 36353   018006  0B3F               	andlw	-193
 36354   018008  0940               	iorlw	64
 36355   01800A  6F5F               	movwf	95,b	;volatile
 36356                           
 36357                           ; BSR set to: 63
 36358                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 36359   01800C  0012               	return		;funcret
 36360   01800E                     __end_of_PWM8_Initialize:
 36361                           	callstack 0
 36362                           
 36363 ;; *************** function _PMD_Initialize *****************
 36364 ;; Defined at:
 36365 ;;		line 91 in file "mcc_generated_files/mcc.c"
 36366 ;; Parameters:    Size  Location     Type
 36367 ;;		None
 36368 ;; Auto vars:     Size  Location     Type
 36369 ;;		None
 36370 ;; Return value:  Size  Location     Type
 36371 ;;                  1  [STACK] void 
 36372 ;; Registers used:
 36373 ;;		None
 36374 ;; Tracked objects:
 36375 ;;		On entry : 3F/39
 36376 ;;		On exit  : 3F/39
 36377 ;;		Unchanged: 0/0
 36378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36383 ;;Total ram usage:        0 bytes
 36384 ;; Hardware stack levels used: 1
 36385 ;; Hardware stack levels required when called: 3
 36386 ;; This function calls:
 36387 ;;		Nothing
 36388 ;; This function is called by:
 36389 ;;		_SYSTEM_Initialize
 36390 ;; This function uses a reentrant model
 36391 ;;
 36392                           
 36393                           	psect	text66
 36394   018024                     __ptext66:
 36395                           	callstack 0
 36396   018024                     _PMD_Initialize:
 36397                           	callstack 26
 36398                           
 36399                           ;mcc_generated_files/mcc.c: 94:     PMD0 = 0x00;
 36400                           
 36401                           ; BSR set to: 63
 36402                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36403                           ;incstack = 0
 36404   018024  0139               	movlb	57	; () banked
 36405   018026  6BC0               	clrf	192,b	;volatile
 36406                           
 36407                           ;mcc_generated_files/mcc.c: 96:     PMD1 = 0x00;
 36408   018028  6BC1               	clrf	193,b	;volatile
 36409                           
 36410                           ;mcc_generated_files/mcc.c: 98:     PMD2 = 0x00;
 36411   01802A  6BC2               	clrf	194,b	;volatile
 36412                           
 36413                           ;mcc_generated_files/mcc.c: 100:     PMD3 = 0x00;
 36414   01802C  6BC3               	clrf	195,b	;volatile
 36415                           
 36416                           ;mcc_generated_files/mcc.c: 102:     PMD4 = 0x00;
 36417   01802E  6BC4               	clrf	196,b	;volatile
 36418                           
 36419                           ;mcc_generated_files/mcc.c: 104:     PMD5 = 0x00;
 36420   018030  6BC5               	clrf	197,b	;volatile
 36421                           
 36422                           ;mcc_generated_files/mcc.c: 106:     PMD6 = 0x00;
 36423   018032  6BC6               	clrf	198,b	;volatile
 36424                           
 36425                           ;mcc_generated_files/mcc.c: 108:     PMD7 = 0x00;
 36426   018034  6BC7               	clrf	199,b	;volatile
 36427                           
 36428                           ; BSR set to: 57
 36429                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 36430   018036  0012               	return		;funcret
 36431   018038                     __end_of_PMD_Initialize:
 36432                           	callstack 0
 36433                           
 36434 ;; *************** function _PIN_MANAGER_Initialize *****************
 36435 ;; Defined at:
 36436 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 36437 ;; Parameters:    Size  Location     Type
 36438 ;;		None
 36439 ;; Auto vars:     Size  Location     Type
 36440 ;;		None
 36441 ;; Return value:  Size  Location     Type
 36442 ;;                  1  [STACK] void 
 36443 ;; Registers used:
 36444 ;;		wreg, status,2
 36445 ;; Tracked objects:
 36446 ;;		On entry : 3F/39
 36447 ;;		On exit  : 3F/3A
 36448 ;;		Unchanged: 0/0
 36449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36454 ;;Total ram usage:        0 bytes
 36455 ;; Hardware stack levels used: 1
 36456 ;; Hardware stack levels required when called: 3
 36457 ;; This function calls:
 36458 ;;		Nothing
 36459 ;; This function is called by:
 36460 ;;		_SYSTEM_Initialize
 36461 ;; This function uses a reentrant model
 36462 ;;
 36463                           
 36464                           	psect	text67
 36465   016A46                     __ptext67:
 36466                           	callstack 0
 36467   016A46                     _PIN_MANAGER_Initialize:
 36468                           	callstack 26
 36469                           
 36470                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 36471                           
 36472                           ; BSR set to: 57
 36473                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36474                           ;incstack = 0
 36475   016A46  0E07               	movlw	7
 36476   016A48  6EBE               	movwf	190,c	;volatile
 36477                           
 36478                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 36479   016A4A  6ABD               	clrf	189,c	;volatile
 36480                           
 36481                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 36482   016A4C  6ABA               	clrf	186,c	;volatile
 36483                           
 36484                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 36485   016A4E  6ABF               	clrf	191,c	;volatile
 36486                           
 36487                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 36488   016A50  6ABB               	clrf	187,c	;volatile
 36489                           
 36490                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x06;
 36491   016A52  0E06               	movlw	6
 36492   016A54  6EBC               	movwf	188,c	;volatile
 36493                           
 36494                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 36495   016A56  6AC6               	clrf	198,c	;volatile
 36496                           
 36497                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 36498   016A58  0E0F               	movlw	15
 36499   016A5A  6EC7               	movwf	199,c	;volatile
 36500                           
 36501                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0x8F;
 36502   016A5C  0E8F               	movlw	143
 36503   016A5E  6EC2               	movwf	194,c	;volatile
 36504                           
 36505                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0x8F;
 36506   016A60  0E8F               	movlw	143
 36507   016A62  6EC3               	movwf	195,c	;volatile
 36508                           
 36509                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x91;
 36510   016A64  0E91               	movlw	145
 36511   016A66  6EC4               	movwf	196,c	;volatile
 36512                           
 36513                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 36514   016A68  0E0C               	movlw	12
 36515   016A6A  6EC5               	movwf	197,c	;volatile
 36516                           
 36517                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 36518   016A6C  013A               	movlb	58	; () banked
 36519   016A6E  6B70               	clrf	112,b	;volatile
 36520                           
 36521                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x01;
 36522   016A70  0E01               	movlw	1
 36523   016A72  6F60               	movwf	96,b	;volatile
 36524                           
 36525                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x08;
 36526   016A74  0E08               	movlw	8
 36527   016A76  6F50               	movwf	80,b	;volatile
 36528                           
 36529                           ; BSR set to: 58
 36530                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 36531   016A78  6B80               	clrf	128,b	;volatile
 36532                           
 36533                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x0F;
 36534   016A7A  0E0F               	movlw	15
 36535   016A7C  6F90               	movwf	144,b	;volatile
 36536                           
 36537                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0x8F;
 36538   016A7E  0E8F               	movlw	143
 36539   016A80  6F40               	movwf	64,b	;volatile
 36540                           
 36541                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0xFC;
 36542   016A82  0EFC               	movlw	252
 36543   016A84  6F71               	movwf	113,b	;volatile
 36544                           
 36545                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0xF0;
 36546   016A86  0EF0               	movlw	240
 36547   016A88  6F91               	movwf	145,b	;volatile
 36548                           
 36549                           ; BSR set to: 58
 36550                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 36551   016A8A  6B81               	clrf	129,b	;volatile
 36552                           
 36553                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 36554   016A8C  0E87               	movlw	135
 36555   016A8E  6F51               	movwf	81,b	;volatile
 36556                           
 36557                           ; BSR set to: 58
 36558                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 36559   016A90  6B41               	clrf	65,b	;volatile
 36560                           
 36561                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x90;
 36562   016A92  0E90               	movlw	144
 36563   016A94  6F61               	movwf	97,b	;volatile
 36564                           
 36565                           ; BSR set to: 58
 36566                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 36567   016A96  6B82               	clrf	130,b	;volatile
 36568                           
 36569                           ; BSR set to: 58
 36570                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 36571   016A98  6B92               	clrf	146,b	;volatile
 36572                           
 36573                           ; BSR set to: 58
 36574                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 36575   016A9A  6B42               	clrf	66,b	;volatile
 36576                           
 36577                           ; BSR set to: 58
 36578                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 36579   016A9C  6B52               	clrf	82,b	;volatile
 36580                           
 36581                           ; BSR set to: 58
 36582                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 36583   016A9E  6B62               	clrf	98,b	;volatile
 36584                           
 36585                           ; BSR set to: 58
 36586                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 36587   016AA0  6B72               	clrf	114,b	;volatile
 36588                           
 36589                           ; BSR set to: 58
 36590                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 36591   016AA2  6943               	setf	67,b	;volatile
 36592                           
 36593                           ; BSR set to: 58
 36594                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 36595   016AA4  6953               	setf	83,b	;volatile
 36596                           
 36597                           ; BSR set to: 58
 36598                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 36599   016AA6  6963               	setf	99,b	;volatile
 36600                           
 36601                           ; BSR set to: 58
 36602                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 36603   016AA8  6973               	setf	115,b	;volatile
 36604                           
 36605                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 36606   016AAA  0E07               	movlw	7
 36607   016AAC  6F83               	movwf	131,b	;volatile
 36608                           
 36609                           ; BSR set to: 58
 36610                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 36611   016AAE  6993               	setf	147,b	;volatile
 36612                           
 36613                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 36614   016AB0  0E0F               	movlw	15
 36615   016AB2  6FE8               	movwf	232,b	;volatile
 36616                           
 36617                           ;mcc_generated_files/pin_manager.c: 127:     RB6PPS = 0x16;
 36618   016AB4  0E16               	movlw	22
 36619   016AB6  6F0E               	movwf	14,b	;volatile
 36620                           
 36621                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x1E;
 36622   016AB8  0E1E               	movlw	30
 36623   016ABA  6F13               	movwf	19,b	;volatile
 36624                           
 36625                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x08;
 36626   016ABC  0E08               	movlw	8
 36627   016ABE  6FC0               	movwf	192,b	;volatile
 36628                           
 36629                           ;mcc_generated_files/pin_manager.c: 130:     INT2PPS = 0x0A;
 36630   016AC0  0E0A               	movlw	10
 36631   016AC2  6FC2               	movwf	194,b	;volatile
 36632                           
 36633                           ;mcc_generated_files/pin_manager.c: 131:     INT1PPS = 0x09;
 36634   016AC4  0E09               	movlw	9
 36635   016AC6  6FC1               	movwf	193,b	;volatile
 36636                           
 36637                           ;mcc_generated_files/pin_manager.c: 132:     U1RXPPS = 0x17;
 36638   016AC8  0E17               	movlw	23
 36639   016ACA  6FE5               	movwf	229,b	;volatile
 36640                           
 36641                           ;mcc_generated_files/pin_manager.c: 133:     SPI1SCKPPS = 0x13;
 36642   016ACC  0E13               	movlw	19
 36643   016ACE  6FDE               	movwf	222,b	;volatile
 36644                           
 36645                           ;mcc_generated_files/pin_manager.c: 134:     RA4PPS = 0x01;
 36646   016AD0  0E01               	movlw	1
 36647   016AD2  6F04               	movwf	4,b	;volatile
 36648                           
 36649                           ;mcc_generated_files/pin_manager.c: 135:     RA5PPS = 0x26;
 36650   016AD4  0E26               	movlw	38
 36651   016AD6  6F05               	movwf	5,b	;volatile
 36652                           
 36653                           ;mcc_generated_files/pin_manager.c: 136:     RA6PPS = 0x28;
 36654   016AD8  0E28               	movlw	40
 36655   016ADA  6F06               	movwf	6,b	;volatile
 36656                           
 36657                           ;mcc_generated_files/pin_manager.c: 137:     RD1PPS = 0x10;
 36658   016ADC  0E10               	movlw	16
 36659   016ADE  6F19               	movwf	25,b	;volatile
 36660                           
 36661                           ;mcc_generated_files/pin_manager.c: 138:     RC5PPS = 0x1F;
 36662   016AE0  0E1F               	movlw	31
 36663   016AE2  6F15               	movwf	21,b	;volatile
 36664                           
 36665                           ;mcc_generated_files/pin_manager.c: 139:     RC6PPS = 0x13;
 36666   016AE4  0E13               	movlw	19
 36667   016AE6  6F16               	movwf	22,b	;volatile
 36668                           
 36669                           ;mcc_generated_files/pin_manager.c: 140:     SPI1SDIPPS = 0x14;
 36670   016AE8  0E14               	movlw	20
 36671   016AEA  6FDF               	movwf	223,b	;volatile
 36672                           
 36673                           ; BSR set to: 58
 36674                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 36675   016AEC  0012               	return		;funcret
 36676   016AEE                     __end_of_PIN_MANAGER_Initialize:
 36677                           	callstack 0
 36678                           
 36679 ;; *************** function _OSCILLATOR_Initialize *****************
 36680 ;; Defined at:
 36681 ;;		line 73 in file "mcc_generated_files/mcc.c"
 36682 ;; Parameters:    Size  Location     Type
 36683 ;;		None
 36684 ;; Auto vars:     Size  Location     Type
 36685 ;;		None
 36686 ;; Return value:  Size  Location     Type
 36687 ;;                  1  [STACK] void 
 36688 ;; Registers used:
 36689 ;;		wreg, status,2
 36690 ;; Tracked objects:
 36691 ;;		On entry : 3F/3A
 36692 ;;		On exit  : 3F/39
 36693 ;;		Unchanged: 0/0
 36694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36699 ;;Total ram usage:        0 bytes
 36700 ;; Hardware stack levels used: 1
 36701 ;; Hardware stack levels required when called: 3
 36702 ;; This function calls:
 36703 ;;		Nothing
 36704 ;; This function is called by:
 36705 ;;		_SYSTEM_Initialize
 36706 ;; This function uses a reentrant model
 36707 ;;
 36708                           
 36709                           	psect	text68
 36710   01800E                     __ptext68:
 36711                           	callstack 0
 36712   01800E                     _OSCILLATOR_Initialize:
 36713                           	callstack 26
 36714                           
 36715                           ;mcc_generated_files/mcc.c: 76:     OSCCON1 = 0x20;
 36716                           
 36717                           ; BSR set to: 58
 36718                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36719                           ;incstack = 0
 36720   01800E  0E20               	movlw	32
 36721   018010  0139               	movlb	57	; () banked
 36722   018012  6FD9               	movwf	217,b	;volatile
 36723                           
 36724                           ; BSR set to: 57
 36725                           ;mcc_generated_files/mcc.c: 78:     OSCCON3 = 0x00;
 36726   018014  6BDB               	clrf	219,b	;volatile
 36727                           
 36728                           ; BSR set to: 57
 36729                           ;mcc_generated_files/mcc.c: 80:     OSCEN = 0x00;
 36730   018016  6BDD               	clrf	221,b	;volatile
 36731                           
 36732                           ;mcc_generated_files/mcc.c: 82:     OSCFRQ = 0x02;
 36733   018018  0E02               	movlw	2
 36734   01801A  6FDF               	movwf	223,b	;volatile
 36735                           
 36736                           ; BSR set to: 57
 36737                           ;mcc_generated_files/mcc.c: 84:     OSCTUNE = 0x00;
 36738   01801C  6BDE               	clrf	222,b	;volatile
 36739   01801E                     l200:
 36740                           
 36741                           ; BSR set to: 57
 36742                           ;mcc_generated_files/mcc.c: 86:     while(PLLR == 0)
 36743   01801E  B1DC               	btfsc	220,0,b	;volatile
 36744   018020  0012               	return	
 36745   018022  D7FD               	goto	l200
 36746   018024                     __end_of_OSCILLATOR_Initialize:
 36747                           	callstack 0
 36748                           
 36749 ;; *************** function _NCO1_Initialize *****************
 36750 ;; Defined at:
 36751 ;;		line 58 in file "mcc_generated_files/nco1.c"
 36752 ;; Parameters:    Size  Location     Type
 36753 ;;		None
 36754 ;; Auto vars:     Size  Location     Type
 36755 ;;		None
 36756 ;; Return value:  Size  Location     Type
 36757 ;;                  1  [STACK] void 
 36758 ;; Registers used:
 36759 ;;		wreg, status,2
 36760 ;; Tracked objects:
 36761 ;;		On entry : 0/39
 36762 ;;		On exit  : 3F/3F
 36763 ;;		Unchanged: 0/0
 36764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36769 ;;Total ram usage:        0 bytes
 36770 ;; Hardware stack levels used: 1
 36771 ;; Hardware stack levels required when called: 3
 36772 ;; This function calls:
 36773 ;;		Nothing
 36774 ;; This function is called by:
 36775 ;;		_SYSTEM_Initialize
 36776 ;; This function uses a reentrant model
 36777 ;;
 36778                           
 36779                           	psect	text69
 36780   017F28                     __ptext69:
 36781                           	callstack 0
 36782   017F28                     _NCO1_Initialize:
 36783                           	callstack 26
 36784                           
 36785                           ;mcc_generated_files/nco1.c: 62:     NCO1CON = 0x00;
 36786                           
 36787                           ; BSR set to: 57
 36788                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36789                           ;incstack = 0
 36790   017F28  013F               	movlb	63	; () banked
 36791   017F2A  6B3E               	clrf	62,b	;volatile
 36792                           
 36793                           ;mcc_generated_files/nco1.c: 64:     NCO1CLK = 0x00;
 36794   017F2C  6B3F               	clrf	63,b	;volatile
 36795                           
 36796                           ;mcc_generated_files/nco1.c: 66:     NCO1ACCU = 0x00;
 36797   017F2E  6B3A               	clrf	58,b	;volatile
 36798                           
 36799                           ;mcc_generated_files/nco1.c: 68:     NCO1ACCH = 0x00;
 36800   017F30  6B39               	clrf	57,b	;volatile
 36801                           
 36802                           ;mcc_generated_files/nco1.c: 70:     NCO1ACCL = 0x00;
 36803   017F32  6B38               	clrf	56,b	;volatile
 36804                           
 36805                           ; BSR set to: 63
 36806                           ;mcc_generated_files/nco1.c: 72:     NCO1INCU = 0x06;
 36807   017F34  0E06               	movlw	6
 36808   017F36  6F3D               	movwf	61,b	;volatile
 36809                           
 36810                           ;mcc_generated_files/nco1.c: 74:     NCO1INCH = 0xC7;
 36811   017F38  0EC7               	movlw	199
 36812   017F3A  6F3C               	movwf	60,b	;volatile
 36813                           
 36814                           ;mcc_generated_files/nco1.c: 76:     NCO1INCL = 0xAE;
 36815   017F3C  0EAE               	movlw	174
 36816   017F3E  6F3B               	movwf	59,b	;volatile
 36817                           
 36818                           ; BSR set to: 63
 36819                           ;mcc_generated_files/nco1.c: 79:     NCO1CONbits.EN = 1;
 36820   017F40  8F3E               	bsf	62,7,b	;volatile
 36821                           
 36822                           ; BSR set to: 63
 36823                           ; _NCO1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 36824   017F42  0012               	return		;funcret
 36825   017F44                     __end_of_NCO1_Initialize:
 36826                           	callstack 0
 36827                           
 36828 ;; *************** function _INTERRUPT_Initialize *****************
 36829 ;; Defined at:
 36830 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 36831 ;; Parameters:    Size  Location     Type
 36832 ;;		None
 36833 ;; Auto vars:     Size  Location     Type
 36834 ;;  state           1  [STACK] _Bool 
 36835 ;; Return value:  Size  Location     Type
 36836 ;;                  1  [STACK] void 
 36837 ;; Registers used:
 36838 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 36839 ;; Tracked objects:
 36840 ;;		On entry : 0/0
 36841 ;;		On exit  : 3F/39
 36842 ;;		Unchanged: 0/0
 36843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36848 ;;Total ram usage:        0 bytes
 36849 ;; Hardware stack levels used: 1
 36850 ;; Hardware stack levels required when called: 3
 36851 ;; This function calls:
 36852 ;;		Nothing
 36853 ;; This function is called by:
 36854 ;;		_SYSTEM_Initialize
 36855 ;; This function uses a reentrant model
 36856 ;;
 36857                           
 36858                           	psect	text70
 36859   017022                     __ptext70:
 36860                           	callstack 0
 36861   017022                     _INTERRUPT_Initialize:
 36862                           	callstack 0
 36863                           
 36864                           ; BSR set to: 63
 36865                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36866   017022  52E6               	movf	postinc1,f,c
 36867                           
 36868                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 36869                           
 36870                           ;incstack = 0
 36871   017024  8AD2               	bsf	210,5,c	;volatile
 36872                           
 36873                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 36874   017026  AED2               	btfss	16338,7,c	;volatile
 36875   017028  D003               	goto	u5750
 36876   01702A  6A2E               	clrf	(btemp+11)^0,c
 36877   01702C  2A2E               	incf	(btemp+11)^0,f,c
 36878   01702E  D001               	goto	u5768
 36879   017030                     u5750:
 36880   017030  6A2E               	clrf	(btemp+11)^0,c
 36881   017032                     u5768:
 36882                           
 36883                           ;stkvar	_state @ sp[(-1)+0]
 36884   017032  0EFF               	movlw	-1
 36885   017034  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 36886                           
 36887                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 36888   01703A  9ED2               	bcf	16338,7,c	;volatile
 36889                           
 36890                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 36891   01703C  0E55               	movlw	85
 36892   01703E  6ED4               	movwf	212,c	;volatile
 36893                           
 36894                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 36895   017040  0EAA               	movlw	170
 36896   017042  6ED4               	movwf	212,c	;volatile
 36897                           
 36898                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 36899   017044  90D4               	bcf	212,0,c	;volatile
 36900                           
 36901                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 36902   017046  0138               	movlb	56	; () banked
 36903   017048  6B9F               	clrf	159,b	;volatile
 36904                           
 36905                           ; BSR set to: 56
 36906                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 36907   01704A  6B9E               	clrf	158,b	;volatile
 36908                           
 36909                           ; BSR set to: 56
 36910                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 36911   01704C  0E08               	movlw	8
 36912   01704E  6F9D               	movwf	157,b	;volatile
 36913                           
 36914                           ; BSR set to: 56
 36915                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 36916   017050  0E55               	movlw	85
 36917   017052  6ED4               	movwf	212,c	;volatile
 36918                           
 36919                           ; BSR set to: 56
 36920                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 36921   017054  0EAA               	movlw	170
 36922   017056  6ED4               	movwf	212,c	;volatile
 36923                           
 36924                           ; BSR set to: 56
 36925                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 36926   017058  80D4               	bsf	212,0,c	;volatile
 36927                           
 36928                           ; BSR set to: 56
 36929                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 36930                           ;stkvar	_state @ sp[(-1)+0]
 36931   01705A  0EFF               	movlw	-1
 36932   01705C  B0E3               	btfsc	plusw1,0,c
 36933   01705E  D002               	bra	u5775
 36934   017060  9ED2               	bcf	16338,7,c	;volatile
 36935   017062  D001               	bra	u5776
 36936   017064                     u5775:
 36937   017064  8ED2               	bsf	16338,7,c	;volatile
 36938   017066                     u5776:
 36939                           
 36940                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 36941   017066  0139               	movlb	57	; () banked
 36942   017068  8782               	bsf	130,3,b	;volatile
 36943                           
 36944                           ; BSR set to: 57
 36945                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 36946   01706A  8382               	bsf	130,1,b	;volatile
 36947                           
 36948                           ; BSR set to: 57
 36949                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 36950   01706C  8182               	bsf	130,0,b	;volatile
 36951                           
 36952                           ; BSR set to: 57
 36953                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 36954   01706E  8582               	bsf	130,2,b	;volatile
 36955                           
 36956                           ; BSR set to: 57
 36957                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 36958   017070  8786               	bsf	134,3,b	;volatile
 36959                           
 36960                           ; BSR set to: 57
 36961                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 36962   017072  8586               	bsf	134,2,b	;volatile
 36963                           
 36964                           ; BSR set to: 57
 36965                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 36966   017074  8983               	bsf	131,4,b	;volatile
 36967                           
 36968                           ; BSR set to: 57
 36969                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 36970   017076  8783               	bsf	131,3,b	;volatile
 36971                           
 36972                           ; BSR set to: 57
 36973                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 36974   017078  8181               	bsf	129,0,b	;volatile
 36975                           
 36976                           ; BSR set to: 57
 36977                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 36978   01707A  8185               	bsf	133,0,b	;volatile
 36979                           
 36980                           ; BSR set to: 57
 36981                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR7bits.INT2IP = 1;
 36982   01707C  8B87               	bsf	135,5,b	;volatile
 36983                           
 36984                           ; BSR set to: 57
 36985                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR9bits.TMR6IP = 1;
 36986   01707E  8189               	bsf	137,0,b	;volatile
 36987                           
 36988                           ; BSR set to: 57
 36989                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR8bits.TMR5IP = 1;
 36990   017080  8D88               	bsf	136,6,b	;volatile
 36991                           
 36992                           ; BSR set to: 57
 36993                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADIP = 1;
 36994   017082  8581               	bsf	129,2,b	;volatile
 36995                           
 36996                           ; BSR set to: 57
 36997                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 36998   017084  52E5               	movf	postdec1,f,c
 36999   017086  0012               	return		;funcret
 37000   017088                     __end_of_INTERRUPT_Initialize:
 37001                           	callstack 0
 37002                           
 37003 ;; *************** function _EXT_INT_Initialize *****************
 37004 ;; Defined at:
 37005 ;;		line 119 in file "mcc_generated_files/ext_int.c"
 37006 ;; Parameters:    Size  Location     Type
 37007 ;;		None
 37008 ;; Auto vars:     Size  Location     Type
 37009 ;;		None
 37010 ;; Return value:  Size  Location     Type
 37011 ;;                  1  [STACK] void 
 37012 ;; Registers used:
 37013 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 37014 ;; Tracked objects:
 37015 ;;		On entry : 3F/3F
 37016 ;;		On exit  : 3F/39
 37017 ;;		Unchanged: 0/0
 37018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37023 ;;Total ram usage:        0 bytes
 37024 ;; Hardware stack levels used: 1
 37025 ;; Hardware stack levels required when called: 4
 37026 ;; This function calls:
 37027 ;;		_INT0_SetInterruptHandler
 37028 ;;		_INT1_SetInterruptHandler
 37029 ;;		_INT2_SetInterruptHandler
 37030 ;; This function is called by:
 37031 ;;		_SYSTEM_Initialize
 37032 ;; This function uses a reentrant model
 37033 ;;
 37034                           
 37035                           	psect	text71
 37036   017416                     __ptext71:
 37037                           	callstack 0
 37038   017416                     _EXT_INT_Initialize:
 37039                           	callstack 25
 37040                           
 37041                           ;mcc_generated_files/ext_int.c: 124:  (PIR1bits.INT0IF = 0);
 37042                           
 37043                           ; BSR set to: 57
 37044                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37045                           ;incstack = 0
 37046   017416  0139               	movlb	57	; () banked
 37047   017418  91A1               	bcf	161,0,b	;volatile
 37048                           
 37049                           ;mcc_generated_files/ext_int.c: 125:  (INTCON0bits.INT0EDG = 0);
 37050   01741A  90D2               	bcf	210,0,c	;volatile
 37051                           
 37052                           ; BSR set to: 57
 37053                           ;mcc_generated_files/ext_int.c: 127:  INT0_SetInterruptHandler(INT0_DefaultInterruptHand
      +                          ler);
 37054   01741C  0EE8               	movlw	low _INT0_DefaultInterruptHandler
 37055   01741E  6EE6               	movwf	postinc1,c
 37056   017420  0E80               	movlw	high _INT0_DefaultInterruptHandler
 37057   017422  6EE6               	movwf	postinc1,c
 37058   017424  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 37059   017426  6EE6               	movwf	postinc1,c
 37060   017428  EC55  F0BE         	call	_INT0_SetInterruptHandler	;wreg free
 37061                           
 37062                           ;mcc_generated_files/ext_int.c: 128:  (PIE1bits.INT0IE = 1);
 37063   01742C  0139               	movlb	57	; () banked
 37064   01742E  8191               	bsf	145,0,b	;volatile
 37065                           
 37066                           ; BSR set to: 57
 37067                           ;mcc_generated_files/ext_int.c: 133:  (PIR5bits.INT1IF = 0);
 37068   017430  91A5               	bcf	165,0,b	;volatile
 37069                           
 37070                           ; BSR set to: 57
 37071                           ;mcc_generated_files/ext_int.c: 134:  (INTCON0bits.INT1EDG = 0);
 37072   017432  92D2               	bcf	210,1,c	;volatile
 37073                           
 37074                           ;mcc_generated_files/ext_int.c: 136:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 37075   017434  0EEA               	movlw	low _INT1_DefaultInterruptHandler
 37076   017436  6EE6               	movwf	postinc1,c
 37077   017438  0E80               	movlw	high _INT1_DefaultInterruptHandler
 37078   01743A  6EE6               	movwf	postinc1,c
 37079   01743C  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 37080   01743E  6EE6               	movwf	postinc1,c
 37081   017440  EC41  F0BE         	call	_INT1_SetInterruptHandler	;wreg free
 37082                           
 37083                           ;mcc_generated_files/ext_int.c: 137:  (PIE5bits.INT1IE = 1);
 37084   017444  0139               	movlb	57	; () banked
 37085   017446  8195               	bsf	149,0,b	;volatile
 37086                           
 37087                           ; BSR set to: 57
 37088                           ;mcc_generated_files/ext_int.c: 142:  (PIR7bits.INT2IF = 0);
 37089   017448  9BA7               	bcf	167,5,b	;volatile
 37090                           
 37091                           ; BSR set to: 57
 37092                           ;mcc_generated_files/ext_int.c: 143:  (INTCON0bits.INT2EDG = 0);
 37093   01744A  94D2               	bcf	210,2,c	;volatile
 37094                           
 37095                           ;mcc_generated_files/ext_int.c: 145:  INT2_SetInterruptHandler(INT2_DefaultInterruptHand
      +                          ler);
 37096   01744C  0EEC               	movlw	low _INT2_DefaultInterruptHandler
 37097   01744E  6EE6               	movwf	postinc1,c
 37098   017450  0E80               	movlw	high _INT2_DefaultInterruptHandler
 37099   017452  6EE6               	movwf	postinc1,c
 37100   017454  0E01               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 37101   017456  6EE6               	movwf	postinc1,c
 37102   017458  EC2D  F0BE         	call	_INT2_SetInterruptHandler	;wreg free
 37103                           
 37104                           ;mcc_generated_files/ext_int.c: 146:  (PIE7bits.INT2IE = 1);
 37105   01745C  0139               	movlb	57	; () banked
 37106   01745E  8B97               	bsf	151,5,b	;volatile
 37107                           
 37108                           ; BSR set to: 57
 37109                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 37110   017460  0012               	return		;funcret
 37111   017462                     __end_of_EXT_INT_Initialize:
 37112                           	callstack 0
 37113                           
 37114 ;; *************** function _INT2_SetInterruptHandler *****************
 37115 ;; Defined at:
 37116 ;;		line 108 in file "mcc_generated_files/ext_int.c"
 37117 ;; Parameters:    Size  Location     Type
 37118 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 37119 ;;		 -> INT2_DefaultInterruptHandler(1), 
 37120 ;; Auto vars:     Size  Location     Type
 37121 ;;		None
 37122 ;; Return value:  Size  Location     Type
 37123 ;;                  1  [STACK] void 
 37124 ;; Registers used:
 37125 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 37126 ;; Tracked objects:
 37127 ;;		On entry : 3F/39
 37128 ;;		On exit  : 0/0
 37129 ;;		Unchanged: 0/0
 37130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37135 ;;Total ram usage:        0 bytes
 37136 ;; Hardware stack levels used: 1
 37137 ;; Hardware stack levels required when called: 3
 37138 ;; This function calls:
 37139 ;;		Nothing
 37140 ;; This function is called by:
 37141 ;;		_EXT_INT_Initialize
 37142 ;; This function uses a reentrant model
 37143 ;;
 37144                           
 37145                           	psect	text72
 37146   017C5A                     __ptext72:
 37147                           	callstack 0
 37148   017C5A                     _INT2_SetInterruptHandler:
 37149                           	callstack 25
 37150                           
 37151                           ;mcc_generated_files/ext_int.c: 108: void INT2_SetInterruptHandler(void (* InterruptHand
      +                          ler)(void));mcc_generated_files/ext_int.c: 109: {;mcc_generated_files/ext_int.c: 110:  I
      +                          NT2_InterruptHandler = InterruptHandler;
 37152                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 37153                           
 37154                           ; BSR set to: 57
 37155                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37156                           ;incstack = 0
 37157   017C5A  50E1               	movf	fsr1l,w,c
 37158   017C5C  0FFD               	addlw	-3
 37159   017C5E  6ED9               	movwf	fsr2l,c
 37160   017C60  50E2               	movf	fsr1h,w,c
 37161   017C62  6EDA               	movwf	fsr2h,c
 37162   017C64  0EFF               	movlw	255
 37163   017C66  22DA               	addwfc	fsr2h,f,c
 37164   017C68  006F FF78  F0B3    	movff	postinc2,_INT2_InterruptHandler
 37165   017C6E  006F FF78  F0B4    	movff	postinc2,_INT2_InterruptHandler+1
 37166   017C74  006F FF74  F0B5    	movff	postdec2,_INT2_InterruptHandler+2
 37167                           
 37168                           ; _INT2_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 37169   017C7A  52E5               	movf	postdec1,f,c
 37170   017C7C  52E5               	movf	postdec1,f,c
 37171   017C7E  52E5               	movf	postdec1,f,c
 37172   017C80  0012               	return		;funcret
 37173   017C82                     __end_of_INT2_SetInterruptHandler:
 37174                           	callstack 0
 37175                           
 37176 ;; *************** function _INT1_SetInterruptHandler *****************
 37177 ;; Defined at:
 37178 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 37179 ;; Parameters:    Size  Location     Type
 37180 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 37181 ;;		 -> INT1_DefaultInterruptHandler(1), 
 37182 ;; Auto vars:     Size  Location     Type
 37183 ;;		None
 37184 ;; Return value:  Size  Location     Type
 37185 ;;                  1  [STACK] void 
 37186 ;; Registers used:
 37187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 37188 ;; Tracked objects:
 37189 ;;		On entry : 3F/39
 37190 ;;		On exit  : 0/0
 37191 ;;		Unchanged: 0/0
 37192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37197 ;;Total ram usage:        0 bytes
 37198 ;; Hardware stack levels used: 1
 37199 ;; Hardware stack levels required when called: 3
 37200 ;; This function calls:
 37201 ;;		Nothing
 37202 ;; This function is called by:
 37203 ;;		_EXT_INT_Initialize
 37204 ;; This function uses a reentrant model
 37205 ;;
 37206                           
 37207                           	psect	text73
 37208   017C82                     __ptext73:
 37209                           	callstack 0
 37210   017C82                     _INT1_SetInterruptHandler:
 37211                           	callstack 25
 37212                           
 37213                           ;mcc_generated_files/ext_int.c: 81: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 82: {;mcc_generated_files/ext_int.c: 83:  INT1
      +                          _InterruptHandler = InterruptHandler;
 37214                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 37215                           
 37216                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37217                           ;incstack = 0
 37218   017C82  50E1               	movf	fsr1l,w,c
 37219   017C84  0FFD               	addlw	-3
 37220   017C86  6ED9               	movwf	fsr2l,c
 37221   017C88  50E2               	movf	fsr1h,w,c
 37222   017C8A  6EDA               	movwf	fsr2h,c
 37223   017C8C  0EFF               	movlw	255
 37224   017C8E  22DA               	addwfc	fsr2h,f,c
 37225   017C90  006F FF78  F0B6    	movff	postinc2,_INT1_InterruptHandler
 37226   017C96  006F FF78  F0B7    	movff	postinc2,_INT1_InterruptHandler+1
 37227   017C9C  006F FF74  F0B8    	movff	postdec2,_INT1_InterruptHandler+2
 37228                           
 37229                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 37230   017CA2  52E5               	movf	postdec1,f,c
 37231   017CA4  52E5               	movf	postdec1,f,c
 37232   017CA6  52E5               	movf	postdec1,f,c
 37233   017CA8  0012               	return		;funcret
 37234   017CAA                     __end_of_INT1_SetInterruptHandler:
 37235                           	callstack 0
 37236                           
 37237 ;; *************** function _INT0_SetInterruptHandler *****************
 37238 ;; Defined at:
 37239 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 37240 ;; Parameters:    Size  Location     Type
 37241 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 37242 ;;		 -> INT0_DefaultInterruptHandler(1), 
 37243 ;; Auto vars:     Size  Location     Type
 37244 ;;		None
 37245 ;; Return value:  Size  Location     Type
 37246 ;;                  1  [STACK] void 
 37247 ;; Registers used:
 37248 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 37249 ;; Tracked objects:
 37250 ;;		On entry : 3F/39
 37251 ;;		On exit  : 0/0
 37252 ;;		Unchanged: 0/0
 37253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37258 ;;Total ram usage:        0 bytes
 37259 ;; Hardware stack levels used: 1
 37260 ;; Hardware stack levels required when called: 3
 37261 ;; This function calls:
 37262 ;;		Nothing
 37263 ;; This function is called by:
 37264 ;;		_EXT_INT_Initialize
 37265 ;; This function uses a reentrant model
 37266 ;;
 37267                           
 37268                           	psect	text74
 37269   017CAA                     __ptext74:
 37270                           	callstack 0
 37271   017CAA                     _INT0_SetInterruptHandler:
 37272                           	callstack 25
 37273                           
 37274                           ;mcc_generated_files/ext_int.c: 54: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 55: {;mcc_generated_files/ext_int.c: 56:  INT0
      +                          _InterruptHandler = InterruptHandler;
 37275                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 37276                           
 37277                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37278                           ;incstack = 0
 37279   017CAA  50E1               	movf	fsr1l,w,c
 37280   017CAC  0FFD               	addlw	-3
 37281   017CAE  6ED9               	movwf	fsr2l,c
 37282   017CB0  50E2               	movf	fsr1h,w,c
 37283   017CB2  6EDA               	movwf	fsr2h,c
 37284   017CB4  0EFF               	movlw	255
 37285   017CB6  22DA               	addwfc	fsr2h,f,c
 37286   017CB8  006F FF78  F0B9    	movff	postinc2,_INT0_InterruptHandler
 37287   017CBE  006F FF78  F0BA    	movff	postinc2,_INT0_InterruptHandler+1
 37288   017CC4  006F FF74  F0BB    	movff	postdec2,_INT0_InterruptHandler+2
 37289                           
 37290                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 37291   017CCA  52E5               	movf	postdec1,f,c
 37292   017CCC  52E5               	movf	postdec1,f,c
 37293   017CCE  52E5               	movf	postdec1,f,c
 37294   017CD0  0012               	return		;funcret
 37295   017CD2                     __end_of_INT0_SetInterruptHandler:
 37296                           	callstack 0
 37297                           
 37298 ;; *************** function _DSM_Initialize *****************
 37299 ;; Defined at:
 37300 ;;		line 58 in file "mcc_generated_files/dsm.c"
 37301 ;; Parameters:    Size  Location     Type
 37302 ;;		None
 37303 ;; Auto vars:     Size  Location     Type
 37304 ;;		None
 37305 ;; Return value:  Size  Location     Type
 37306 ;;                  1  [STACK] void 
 37307 ;; Registers used:
 37308 ;;		wreg, status,2
 37309 ;; Tracked objects:
 37310 ;;		On entry : 0/3C
 37311 ;;		On exit  : 3F/3C
 37312 ;;		Unchanged: 0/0
 37313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37318 ;;Total ram usage:        0 bytes
 37319 ;; Hardware stack levels used: 1
 37320 ;; Hardware stack levels required when called: 3
 37321 ;; This function calls:
 37322 ;;		Nothing
 37323 ;; This function is called by:
 37324 ;;		_SYSTEM_Initialize
 37325 ;; This function uses a reentrant model
 37326 ;;
 37327                           
 37328                           	psect	text75
 37329   017F44                     __ptext75:
 37330                           	callstack 0
 37331   017F44                     _DSM_Initialize:
 37332                           	callstack 26
 37333                           
 37334                           ;mcc_generated_files/dsm.c: 63:     MD1CON0bits.MD1OPOL = 0;
 37335                           
 37336                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37337                           ;incstack = 0
 37338   017F44  013C               	movlb	60	; () banked
 37339   017F46  99FA               	bcf	250,4,b	;volatile
 37340                           
 37341                           ;mcc_generated_files/dsm.c: 66:     MD1CON1bits.MD1CLSYNC = 1;
 37342   017F48  81FB               	bsf	251,0,b	;volatile
 37343                           
 37344                           ;mcc_generated_files/dsm.c: 69:     MD1CON1bits.MD1CLPOL = 0;
 37345   017F4A  93FB               	bcf	251,1,b	;volatile
 37346                           
 37347                           ;mcc_generated_files/dsm.c: 72:     MD1CON1bits.MD1CHSYNC = 1;
 37348   017F4C  89FB               	bsf	251,4,b	;volatile
 37349                           
 37350                           ;mcc_generated_files/dsm.c: 75:     MD1CON1bits.MD1CHPOL = 0;
 37351   017F4E  9BFB               	bcf	251,5,b	;volatile
 37352                           
 37353                           ; BSR set to: 60
 37354                           ;mcc_generated_files/dsm.c: 78:     MD1SRC = 0x13;
 37355   017F50  0E13               	movlw	19
 37356   017F52  6FFC               	movwf	252,b	;volatile
 37357                           
 37358                           ;mcc_generated_files/dsm.c: 81:     MD1CARH = 0x0E;
 37359   017F54  0E0E               	movlw	14
 37360   017F56  6FFE               	movwf	254,b	;volatile
 37361                           
 37362                           ;mcc_generated_files/dsm.c: 84:     MD1CARL = 0x04;
 37363   017F58  0E04               	movlw	4
 37364   017F5A  6FFD               	movwf	253,b	;volatile
 37365                           
 37366                           ; BSR set to: 60
 37367                           ;mcc_generated_files/dsm.c: 87:     MD1CON0bits.MD1EN = 1;
 37368   017F5C  8FFA               	bsf	250,7,b	;volatile
 37369                           
 37370                           ; BSR set to: 60
 37371                           ; _DSM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 37372   017F5E  0012               	return		;funcret
 37373   017F60                     __end_of_DSM_Initialize:
 37374                           	callstack 0
 37375                           
 37376 ;; *************** function _DMA2_Initialize *****************
 37377 ;; Defined at:
 37378 ;;		line 61 in file "mcc_generated_files/dma2.c"
 37379 ;; Parameters:    Size  Location     Type
 37380 ;;		None
 37381 ;; Auto vars:     Size  Location     Type
 37382 ;;		None
 37383 ;; Return value:  Size  Location     Type
 37384 ;;                  1  [STACK] void 
 37385 ;; Registers used:
 37386 ;;		wreg, status,2
 37387 ;; Tracked objects:
 37388 ;;		On entry : 3F/3D
 37389 ;;		On exit  : 3F/3B
 37390 ;;		Unchanged: 0/0
 37391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37396 ;;Total ram usage:        0 bytes
 37397 ;; Hardware stack levels used: 1
 37398 ;; Hardware stack levels required when called: 3
 37399 ;; This function calls:
 37400 ;;		Nothing
 37401 ;; This function is called by:
 37402 ;;		_SYSTEM_Initialize
 37403 ;; This function uses a reentrant model
 37404 ;;
 37405                           
 37406                           	psect	text76
 37407   017270                     __ptext76:
 37408                           	callstack 0
 37409   017270                     _DMA2_Initialize:
 37410                           	callstack 26
 37411                           
 37412                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 37413                           
 37414                           ; BSR set to: 60
 37415                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37416                           ;incstack = 0
 37417   017270  0E00               	movlw	0
 37418   017272  013B               	movlb	59	; () banked
 37419   017274  6FD9               	movwf	217,b	;volatile
 37420   017276  0E10               	movlw	16
 37421   017278  6FDA               	movwf	218,b	;volatile
 37422   01727A  0E00               	movlw	0
 37423   01727C  6FDB               	movwf	219,b	;volatile
 37424                           
 37425                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 37426   01727E  0E3F               	movlw	63
 37427   017280  6FD1               	movwf	209,b	;volatile
 37428   017282  0EBB               	movlw	187
 37429   017284  6FD0               	movwf	208,b	;volatile
 37430                           
 37431                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 37432   017286  0E03               	movlw	3
 37433   017288  6FDD               	movwf	221,b	;volatile
 37434                           
 37435                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 37436   01728A  0E00               	movlw	0
 37437   01728C  6FD8               	movwf	216,b	;volatile
 37438   01728E  0E01               	movlw	1
 37439   017290  6FD7               	movwf	215,b	;volatile
 37440                           
 37441                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 37442   017292  0E00               	movlw	0
 37443   017294  6FCF               	movwf	207,b	;volatile
 37444   017296  0E01               	movlw	1
 37445   017298  6FCE               	movwf	206,b	;volatile
 37446                           
 37447                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 37448   01729A  0E46               	movlw	70
 37449   01729C  6FDF               	movwf	223,b	;volatile
 37450                           
 37451                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 37452   01729E  0E3D               	movlw	61
 37453   0172A0  6FDE               	movwf	222,b	;volatile
 37454                           
 37455                           ; BSR set to: 59
 37456                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 37457   0172A2  0139               	movlb	57	; () banked
 37458   0172A4  97A5               	bcf	165,3,b	;volatile
 37459                           
 37460                           ; BSR set to: 57
 37461                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 37462   0172A6  95A5               	bcf	165,2,b	;volatile
 37463                           
 37464                           ; BSR set to: 57
 37465                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 37466   0172A8  9BA5               	bcf	165,5,b	;volatile
 37467                           
 37468                           ; BSR set to: 57
 37469                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 37470   0172AA  99A5               	bcf	165,4,b	;volatile
 37471                           
 37472                           ; BSR set to: 57
 37473                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 37474   0172AC  9795               	bcf	149,3,b	;volatile
 37475                           
 37476                           ; BSR set to: 57
 37477                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 37478   0172AE  9595               	bcf	149,2,b	;volatile
 37479                           
 37480                           ; BSR set to: 57
 37481                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 37482   0172B0  9B95               	bcf	149,5,b	;volatile
 37483                           
 37484                           ; BSR set to: 57
 37485                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 37486   0172B2  9995               	bcf	149,4,b	;volatile
 37487   0172B4  9ED2               	bcf	16338,7,c	;# 
 37488   0172B6  0139               	banksel	14831	;# 
 37489   0172B8  0E55               	movlw	85	;# 
 37490   0172BA  6FEF               	movwf	14831,b	;# 
 37491   0172BC  0EAA               	movlw	170	;# 
 37492   0172BE  6FEF               	movwf	14831,b	;# 
 37493   0172C0  81EF               	bsf	14831,0,b	;# 
 37494   0172C2  8ED2               	bsf	16338,7,c	;# 
 37495                           
 37496                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 37497   0172C4  013B               	movlb	59	; () banked
 37498   0172C6  6BDC               	clrf	220,b	;volatile
 37499                           
 37500                           ; BSR set to: 59
 37501                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 37502   0172C8  0012               	return		;funcret
 37503   0172CA                     __end_of_DMA2_Initialize:
 37504                           	callstack 0
 37505                           
 37506 ;; *************** function _DMA1_Initialize *****************
 37507 ;; Defined at:
 37508 ;;		line 86 in file "mcc_generated_files/dma1.c"
 37509 ;; Parameters:    Size  Location     Type
 37510 ;;		None
 37511 ;; Auto vars:     Size  Location     Type
 37512 ;;		None
 37513 ;; Return value:  Size  Location     Type
 37514 ;;                  1  [STACK] void 
 37515 ;; Registers used:
 37516 ;;		wreg, status,2
 37517 ;; Tracked objects:
 37518 ;;		On entry : 3F/3B
 37519 ;;		On exit  : 3F/3B
 37520 ;;		Unchanged: 0/0
 37521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37526 ;;Total ram usage:        0 bytes
 37527 ;; Hardware stack levels used: 1
 37528 ;; Hardware stack levels required when called: 3
 37529 ;; This function calls:
 37530 ;;		Nothing
 37531 ;; This function is called by:
 37532 ;;		_SYSTEM_Initialize
 37533 ;; This function uses a reentrant model
 37534 ;;
 37535                           
 37536                           	psect	text77
 37537   016E84                     __ptext77:
 37538                           	callstack 0
 37539   016E84                     _DMA1_Initialize:
 37540                           	callstack 26
 37541                           
 37542                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 37543                           
 37544                           ; BSR set to: 59
 37545                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37546                           ;incstack = 0
 37547   016E84  0E00               	movlw	0
 37548   016E86  013B               	movlb	59	; () banked
 37549   016E88  6FF9               	movwf	249,b	;volatile
 37550   016E8A  0E10               	movlw	16
 37551   016E8C  6FFA               	movwf	250,b	;volatile
 37552   016E8E  0E00               	movlw	0
 37553   016E90  6FFB               	movwf	251,b	;volatile
 37554                           
 37555                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 37556   016E92  0E3D               	movlw	61
 37557   016E94  6FF1               	movwf	241,b	;volatile
 37558   016E96  0E11               	movlw	17
 37559   016E98  6FF0               	movwf	240,b	;volatile
 37560                           
 37561                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 37562   016E9A  0E03               	movlw	3
 37563   016E9C  6FFD               	movwf	253,b	;volatile
 37564                           
 37565                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 37566   016E9E  0E00               	movlw	0
 37567   016EA0  6FF8               	movwf	248,b	;volatile
 37568   016EA2  0E01               	movlw	1
 37569   016EA4  6FF7               	movwf	247,b	;volatile
 37570                           
 37571                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 37572   016EA6  0E00               	movlw	0
 37573   016EA8  6FEF               	movwf	239,b	;volatile
 37574   016EAA  0E01               	movlw	1
 37575   016EAC  6FEE               	movwf	238,b	;volatile
 37576                           
 37577                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 37578   016EAE  0E15               	movlw	21
 37579   016EB0  6FFF               	movwf	255,b	;volatile
 37580                           
 37581                           ; BSR set to: 59
 37582                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 37583   016EB2  6BFE               	clrf	254,b	;volatile
 37584                           
 37585                           ; BSR set to: 59
 37586                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 37587   016EB4  0139               	movlb	57	; () banked
 37588   016EB6  93A2               	bcf	162,1,b	;volatile
 37589                           
 37590                           ; BSR set to: 57
 37591                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 37592   016EB8  91A2               	bcf	162,0,b	;volatile
 37593                           
 37594                           ; BSR set to: 57
 37595                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 37596   016EBA  97A2               	bcf	162,3,b	;volatile
 37597                           
 37598                           ; BSR set to: 57
 37599                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 37600   016EBC  95A2               	bcf	162,2,b	;volatile
 37601                           
 37602                           ; BSR set to: 57
 37603                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 37604   016EBE  8392               	bsf	146,1,b	;volatile
 37605                           
 37606                           ; BSR set to: 57
 37607                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 37608   016EC0  8192               	bsf	146,0,b	;volatile
 37609                           
 37610                           ; BSR set to: 57
 37611                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 37612   016EC2  8792               	bsf	146,3,b	;volatile
 37613                           
 37614                           ; BSR set to: 57
 37615                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 37616   016EC4  8592               	bsf	146,2,b	;volatile
 37617                           
 37618                           ; BSR set to: 57
 37619                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 37620   016EC6  6BF1               	clrf	241,b	;volatile
 37621                           
 37622                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 37623   016EC8  0E01               	movlw	1
 37624   016ECA  6FF2               	movwf	242,b	;volatile
 37625                           
 37626                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 37627   016ECC  0E04               	movlw	4
 37628   016ECE  6FF3               	movwf	243,b	;volatile
 37629                           
 37630                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 37631   016ED0  0E02               	movlw	2
 37632   016ED2  6FF4               	movwf	244,b	;volatile
 37633                           
 37634                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 37635   016ED4  0E03               	movlw	3
 37636   016ED6  6FF7               	movwf	247,b	;volatile
 37637   016ED8  9ED2               	bcf	16338,7,c	;# 
 37638   016EDA  0139               	banksel	14831	;# 
 37639   016EDC  0E55               	movlw	85	;# 
 37640   016EDE  6FEF               	movwf	14831,b	;# 
 37641   016EE0  0EAA               	movlw	170	;# 
 37642   016EE2  6FEF               	movwf	14831,b	;# 
 37643   016EE4  81EF               	bsf	14831,0,b	;# 
 37644   016EE6  8ED2               	bsf	16338,7,c	;# 
 37645                           
 37646                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 37647   016EE8  013B               	movlb	59	; () banked
 37648   016EEA  6BFC               	clrf	252,b	;volatile
 37649                           
 37650                           ; BSR set to: 59
 37651                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 37652   016EEC  0012               	return		;funcret
 37653   016EEE                     __end_of_DMA1_Initialize:
 37654                           	callstack 0
 37655                           
 37656 ;; *************** function _CLKREF_Initialize *****************
 37657 ;; Defined at:
 37658 ;;		line 58 in file "mcc_generated_files/clkref.c"
 37659 ;; Parameters:    Size  Location     Type
 37660 ;;		None
 37661 ;; Auto vars:     Size  Location     Type
 37662 ;;		None
 37663 ;; Return value:  Size  Location     Type
 37664 ;;                  1  [STACK] void 
 37665 ;; Registers used:
 37666 ;;		wreg, status,2
 37667 ;; Tracked objects:
 37668 ;;		On entry : 3F/3B
 37669 ;;		On exit  : 3F/3C
 37670 ;;		Unchanged: 0/0
 37671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37676 ;;Total ram usage:        0 bytes
 37677 ;; Hardware stack levels used: 1
 37678 ;; Hardware stack levels required when called: 3
 37679 ;; This function calls:
 37680 ;;		Nothing
 37681 ;; This function is called by:
 37682 ;;		_SYSTEM_Initialize
 37683 ;; This function uses a reentrant model
 37684 ;;
 37685                           
 37686                           	psect	text78
 37687   018078                     __ptext78:
 37688                           	callstack 0
 37689   018078                     _CLKREF_Initialize:
 37690                           	callstack 26
 37691                           
 37692                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 37693                           
 37694                           ; BSR set to: 59
 37695                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37696                           ;incstack = 0
 37697   018078  013C               	movlb	60	; () banked
 37698   01807A  6BE6               	clrf	230,b	;volatile
 37699                           
 37700                           ; BSR set to: 60
 37701                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 37702   01807C  0E94               	movlw	148
 37703   01807E  6FE5               	movwf	229,b	;volatile
 37704                           
 37705                           ; BSR set to: 60
 37706                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 37707   018080  0012               	return		;funcret
 37708   018082                     __end_of_CLKREF_Initialize:
 37709                           	callstack 0
 37710                           
 37711 ;; *************** function _CLC1_Initialize *****************
 37712 ;; Defined at:
 37713 ;;		line 58 in file "mcc_generated_files/clc1.c"
 37714 ;; Parameters:    Size  Location     Type
 37715 ;;		None
 37716 ;; Auto vars:     Size  Location     Type
 37717 ;;		None
 37718 ;; Return value:  Size  Location     Type
 37719 ;;                  1  [STACK] void 
 37720 ;; Registers used:
 37721 ;;		wreg, status,2
 37722 ;; Tracked objects:
 37723 ;;		On entry : 0/39
 37724 ;;		On exit  : 3F/3C
 37725 ;;		Unchanged: 0/0
 37726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37731 ;;Total ram usage:        0 bytes
 37732 ;; Hardware stack levels used: 1
 37733 ;; Hardware stack levels required when called: 3
 37734 ;; This function calls:
 37735 ;;		Nothing
 37736 ;; This function is called by:
 37737 ;;		_SYSTEM_Initialize
 37738 ;; This function uses a reentrant model
 37739 ;;
 37740                           
 37741                           	psect	text79
 37742   017E6E                     __ptext79:
 37743                           	callstack 0
 37744   017E6E                     _CLC1_Initialize:
 37745                           	callstack 26
 37746                           
 37747                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x00;
 37748                           
 37749                           ; BSR set to: 60
 37750                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37751                           ;incstack = 0
 37752   017E6E  013C               	movlb	60	; () banked
 37753   017E70  6B75               	clrf	117,b	;volatile
 37754                           
 37755                           ; BSR set to: 60
 37756                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x04;
 37757   017E72  0E04               	movlw	4
 37758   017E74  6F76               	movwf	118,b	;volatile
 37759                           
 37760                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x04;
 37761   017E76  0E04               	movlw	4
 37762   017E78  6F77               	movwf	119,b	;volatile
 37763                           
 37764                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x04;
 37765   017E7A  0E04               	movlw	4
 37766   017E7C  6F78               	movwf	120,b	;volatile
 37767                           
 37768                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x04;
 37769   017E7E  0E04               	movlw	4
 37770   017E80  6F79               	movwf	121,b	;volatile
 37771                           
 37772                           ; BSR set to: 60
 37773                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x00;
 37774   017E82  6B7A               	clrf	122,b	;volatile
 37775                           
 37776                           ; BSR set to: 60
 37777                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
 37778   017E84  6B7B               	clrf	123,b	;volatile
 37779                           
 37780                           ; BSR set to: 60
 37781                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
 37782   017E86  6B7C               	clrf	124,b	;volatile
 37783                           
 37784                           ; BSR set to: 60
 37785                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
 37786   017E88  6B7D               	clrf	125,b	;volatile
 37787                           
 37788                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x81;
 37789   017E8A  0E81               	movlw	129
 37790   017E8C  6F74               	movwf	116,b	;volatile
 37791                           
 37792                           ; BSR set to: 60
 37793                           ; _CLC1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 37794   017E8E  0012               	return		;funcret
 37795   017E90                     __end_of_CLC1_Initialize:
 37796                           	callstack 0
 37797                           
 37798 ;; *************** function _ADCC_Initialize *****************
 37799 ;; Defined at:
 37800 ;;		line 64 in file "mcc_generated_files/adcc.c"
 37801 ;; Parameters:    Size  Location     Type
 37802 ;;		None
 37803 ;; Auto vars:     Size  Location     Type
 37804 ;;		None
 37805 ;; Return value:  Size  Location     Type
 37806 ;;                  1  [STACK] void 
 37807 ;; Registers used:
 37808 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 37809 ;; Tracked objects:
 37810 ;;		On entry : 3F/39
 37811 ;;		On exit  : 0/0
 37812 ;;		Unchanged: 0/0
 37813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37818 ;;Total ram usage:        0 bytes
 37819 ;; Hardware stack levels used: 1
 37820 ;; Hardware stack levels required when called: 4
 37821 ;; This function calls:
 37822 ;;		_ADCC_SetADIInterruptHandler
 37823 ;; This function is called by:
 37824 ;;		_SYSTEM_Initialize
 37825 ;; This function uses a reentrant model
 37826 ;;
 37827                           
 37828                           	psect	text80
 37829   017462                     __ptext80:
 37830                           	callstack 0
 37831   017462                     _ADCC_Initialize:
 37832                           	callstack 25
 37833                           
 37834                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 37835                           
 37836                           ; BSR set to: 60
 37837                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37838                           ;incstack = 0
 37839   017462  013E               	movlb	62	; () banked
 37840   017464  6BDE               	clrf	222,b	;volatile
 37841                           
 37842                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 37843   017466  6BDF               	clrf	223,b	;volatile
 37844                           
 37845                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 37846   017468  6BE0               	clrf	224,b	;volatile
 37847                           
 37848                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 37849   01746A  6BE1               	clrf	225,b	;volatile
 37850                           
 37851                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 37852   01746C  6BE4               	clrf	228,b	;volatile
 37853                           
 37854                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 37855   01746E  6BE5               	clrf	229,b	;volatile
 37856                           
 37857                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 37858   017470  6BEA               	clrf	234,b	;volatile
 37859                           
 37860                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 37861   017472  6BEC               	clrf	236,b	;volatile
 37862                           
 37863                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 37864   017474  6BF1               	clrf	241,b	;volatile
 37865                           
 37866                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 37867   017476  6BF3               	clrf	243,b	;volatile
 37868                           
 37869                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 37870   017478  6BF4               	clrf	244,b	;volatile
 37871                           
 37872                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 37873   01747A  6BF5               	clrf	245,b	;volatile
 37874                           
 37875                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 37876   01747C  6BF6               	clrf	246,b	;volatile
 37877                           
 37878                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 37879   01747E  6BF7               	clrf	247,b	;volatile
 37880                           
 37881                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 37882   017480  6BF9               	clrf	249,b	;volatile
 37883                           
 37884                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 37885   017482  6BFA               	clrf	250,b	;volatile
 37886                           
 37887                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 37888   017484  6BFB               	clrf	251,b	;volatile
 37889                           
 37890                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 37891   017486  6BFC               	clrf	252,b	;volatile
 37892                           
 37893                           ; BSR set to: 62
 37894                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 37895   017488  0E02               	movlw	2
 37896   01748A  6FFD               	movwf	253,b	;volatile
 37897                           
 37898                           ; BSR set to: 62
 37899                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 37900   01748C  6BFE               	clrf	254,b	;volatile
 37901                           
 37902                           ; BSR set to: 62
 37903                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 37904   01748E  6BFF               	clrf	255,b	;volatile
 37905                           
 37906                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 37907   017490  0E94               	movlw	148
 37908   017492  6FF8               	movwf	248,b	;volatile
 37909                           
 37910                           ; BSR set to: 62
 37911                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 37912   017494  0139               	movlb	57	; () banked
 37913   017496  95A1               	bcf	161,2,b	;volatile
 37914                           
 37915                           ; BSR set to: 57
 37916                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 37917   017498  8591               	bsf	145,2,b	;volatile
 37918                           
 37919                           ; BSR set to: 57
 37920                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 37921   01749A  0EEE               	movlw	low _ADCC_DefaultInterruptHandler
 37922   01749C  6EE6               	movwf	postinc1,c
 37923   01749E  0E80               	movlw	high _ADCC_DefaultInterruptHandler
 37924   0174A0  6EE6               	movwf	postinc1,c
 37925   0174A2  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 37926   0174A4  6EE6               	movwf	postinc1,c
 37927   0174A6  EC69  F0BE         	call	_ADCC_SetADIInterruptHandler	;wreg free
 37928                           
 37929                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 37930   0174AA  0012               	return		;funcret
 37931   0174AC                     __end_of_ADCC_Initialize:
 37932                           	callstack 0
 37933                           
 37934 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 37935 ;; Defined at:
 37936 ;;		line 316 in file "mcc_generated_files/adcc.c"
 37937 ;; Parameters:    Size  Location     Type
 37938 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 37939 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 37940 ;; Auto vars:     Size  Location     Type
 37941 ;;		None
 37942 ;; Return value:  Size  Location     Type
 37943 ;;                  1  [STACK] void 
 37944 ;; Registers used:
 37945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 37946 ;; Tracked objects:
 37947 ;;		On entry : 3F/39
 37948 ;;		On exit  : 0/0
 37949 ;;		Unchanged: 0/0
 37950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37955 ;;Total ram usage:        0 bytes
 37956 ;; Hardware stack levels used: 1
 37957 ;; Hardware stack levels required when called: 3
 37958 ;; This function calls:
 37959 ;;		Nothing
 37960 ;; This function is called by:
 37961 ;;		_ADCC_Initialize
 37962 ;; This function uses a reentrant model
 37963 ;;
 37964                           
 37965                           	psect	text81
 37966   017CD2                     __ptext81:
 37967                           	callstack 0
 37968   017CD2                     _ADCC_SetADIInterruptHandler:
 37969                           	callstack 25
 37970                           
 37971                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 37972                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 37973                           
 37974                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37975                           ;incstack = 0
 37976   017CD2  50E1               	movf	fsr1l,w,c
 37977   017CD4  0FFD               	addlw	-3
 37978   017CD6  6ED9               	movwf	fsr2l,c
 37979   017CD8  50E2               	movf	fsr1h,w,c
 37980   017CDA  6EDA               	movwf	fsr2h,c
 37981   017CDC  0EFF               	movlw	255
 37982   017CDE  22DA               	addwfc	fsr2h,f,c
 37983   017CE0  006F FF78  F0A4    	movff	postinc2,_ADCC_ADI_InterruptHandler
 37984   017CE6  006F FF78  F0A5    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 37985   017CEC  006F FF74  F0A6    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 37986                           
 37987                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 37988   017CF2  52E5               	movf	postdec1,f,c
 37989   017CF4  52E5               	movf	postdec1,f,c
 37990   017CF6  52E5               	movf	postdec1,f,c
 37991   017CF8  0012               	return		;funcret
 37992   017CFA                     __end_of_ADCC_SetADIInterruptHandler:
 37993                           	callstack 0
 37994                           
 37995 ;; *************** function _MyeaDogM_WriteStringAtPos *****************
 37996 ;; Defined at:
 37997 ;;		line 181 in file "mconfig.c"
 37998 ;; Parameters:    Size  Location     Type
 37999 ;;  r               1  [STACK] const unsigned char 
 38000 ;;  c               1  [STACK] const unsigned char 
 38001 ;;  strPtr          2  [STACK] PTR unsigned char 
 38002 ;;		 -> D$lcd(512), D@mconfig$F5154(514), V(387), 
 38003 ;; Auto vars:     Size  Location     Type
 38004 ;;		None
 38005 ;; Return value:  Size  Location     Type
 38006 ;;                  1  [STACK] void 
 38007 ;; Registers used:
 38008 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 38009 ;; Tracked objects:
 38010 ;;		On entry : 3F/1
 38011 ;;		On exit  : 0/0
 38012 ;;		Unchanged: 0/0
 38013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38018 ;;Total ram usage:        0 bytes
 38019 ;; Hardware stack levels used: 1
 38020 ;; Hardware stack levels required when called: 15
 38021 ;; This function calls:
 38022 ;;		_TimerDone
 38023 ;;		_eaDogM_WriteStringAtPos
 38024 ;;		_get_vterm_ptr
 38025 ;;		_sprintf
 38026 ;;		_update_lcd
 38027 ;;		_wait_lcd_done
 38028 ;; This function is called by:
 38029 ;;		_main
 38030 ;; This function uses a reentrant model
 38031 ;;
 38032                           
 38033                           	psect	text82
 38034   016040                     __ptext82:
 38035                           	callstack 0
 38036   016040                     _MyeaDogM_WriteStringAtPos:
 38037                           	callstack 15
 38038                           
 38039                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38040                           ;incstack = 0
 38041                           ;mconfig.c: 181: void MyeaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *
      +                          strPtr);mconfig.c: 182: {;mconfig.c: 184:  do { LATBbits.LATB5 = ~LATBbits.LATB5; } whil
      +                          e(0);
 38042   016040  AABB               	btfss	187,5,c	;volatile
 38043   016042  D002               	goto	u9420
 38044   016044  0E01               	movlw	1
 38045   016046  D001               	goto	u9426
 38046   016048                     u9420:
 38047   016048  0E00               	movlw	0
 38048   01604A                     u9426:
 38049   01604A  0AFF               	xorlw	255
 38050   01604C  6E2E               	movwf	(btemp+11)^0,c
 38051   01604E  3A2E               	swapf	(btemp+11)^0,f,c
 38052   016050  462E               	rlncf	(btemp+11)^0,f,c
 38053   016052  50BB               	movf	187,w,c	;volatile
 38054   016054  182E               	xorwf	(btemp+11)^0,w,c
 38055   016056  0BDF               	andlw	-33
 38056   016058  182E               	xorwf	(btemp+11)^0,w,c
 38057   01605A  6EBB               	movwf	187,c	;volatile
 38058                           
 38059                           ;mconfig.c: 185:  wait_lcd_done();
 38060   01605C  ECB0  F0BF         	call	_wait_lcd_done	;wreg free
 38061                           
 38062                           ; BSR set to: 0
 38063                           ;mconfig.c: 186:  if (V.response.info == DIS_STR) {
 38064   016060  EE23  F191         	lfsr	2,_V+375	;volatile
 38065   016064  50DF               	movf	indf2,w,c
 38066   016066  A4D8               	btfss	status,2,c
 38067   016068  D010               	goto	l13204
 38068                           
 38069                           ; BSR set to: 0
 38070                           ;mconfig.c: 187:   eaDogM_WriteStringAtPos(r, c, strPtr);
 38071                           ;stkvar	_strPtr @ sp[(0)+-4]
 38072   01606A  0EFC               	movlw	-4
 38073   01606C  006F FF8F FFE6     	movff	plusw1,postinc1
 38074   016072  006F FF8F FFE6     	movff	plusw1,postinc1
 38075                           
 38076                           ;stkvar	_c @ sp[(-2)+-2]
 38077   016078  0EFC               	movlw	-4
 38078   01607A  50E3               	movf	plusw1,w,c
 38079   01607C  6EE6               	movwf	postinc1,c
 38080                           
 38081                           ;stkvar	_r @ sp[(-3)+-1]
 38082   01607E  0EFC               	movlw	-4
 38083   016080  50E3               	movf	plusw1,w,c
 38084   016082  6EE6               	movwf	postinc1,c
 38085   016084  ECB0  F0BC         	call	_eaDogM_WriteStringAtPos	;wreg free
 38086                           
 38087                           ;mconfig.c: 188:  } else {
 38088   016088  D059               	goto	l13220
 38089   01608A                     l13204:
 38090                           
 38091                           ; BSR set to: 0
 38092                           ;mconfig.c: 189:   if (V.response.info == DIS_HELP) {
 38093   01608A  0063  F647  FFE8   	movff	_V+375,wreg	;volatile
 38094   016090  0A06               	xorlw	6
 38095   016092  A4D8               	btfss	status,2,c
 38096   016094  D01D               	goto	l13208
 38097                           
 38098                           ; BSR set to: 0
 38099                           ;mconfig.c: 190:    sprintf(get_vterm_ptr(2, 1), "%s", V.info);
 38100   016096  0E01               	movlw	low (_V+231)
 38101   016098  6EE6               	movwf	postinc1,c
 38102   01609A  0E0D               	movlw	high (_V+231)
 38103   01609C  6EE6               	movwf	postinc1,c
 38104   01609E  0EFC               	movlw	low STR_26
 38105   0160A0  6EE6               	movwf	postinc1,c
 38106   0160A2  0EFF               	movlw	high STR_26
 38107   0160A4  6EE6               	movwf	postinc1,c
 38108   0160A6  0E01               	movlw	1
 38109   0160A8  6EE6               	movwf	postinc1,c
 38110   0160AA  0E02               	movlw	2
 38111   0160AC  6EE6               	movwf	postinc1,c
 38112   0160AE  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 38113   0160B2  0060  F08F  FFE6   	movff	btemp,postinc1
 38114   0160B8  0060  F093  FFE6   	movff	btemp+1,postinc1
 38115   0160BE  0E06               	movlw	6
 38116   0160C0  6EE6               	movwf	postinc1,c
 38117   0160C2  EC29  F0B2         	call	_sprintf	;wreg free
 38118                           
 38119                           ;mconfig.c: 191:    update_lcd(1);
 38120   0160C6  0E01               	movlw	1
 38121   0160C8  6EE6               	movwf	postinc1,c
 38122   0160CA  ECA1  F0B2         	call	_update_lcd	;wreg free
 38123                           
 38124                           ;mconfig.c: 192:   } else {
 38125   0160CE  D026               	goto	l13214
 38126   0160D0                     l13208:
 38127                           
 38128                           ; BSR set to: 0
 38129                           ;mconfig.c: 193:    if ((V.response.info != DIS_STR)) {
 38130   0160D0  EE23  F191         	lfsr	2,_V+375	;volatile
 38131   0160D4  50DF               	movf	indf2,w,c
 38132   0160D6  B4D8               	btfsc	status,2,c
 38133   0160D8  D005               	goto	l13212
 38134                           
 38135                           ; BSR set to: 0
 38136                           ;mconfig.c: 194:     update_lcd(2);
 38137   0160DA  0E02               	movlw	2
 38138   0160DC  6EE6               	movwf	postinc1,c
 38139   0160DE  ECA1  F0B2         	call	_update_lcd	;wreg free
 38140                           
 38141                           ;mconfig.c: 195:    } else {
 38142   0160E2  D01C               	goto	l13214
 38143   0160E4                     l13212:
 38144                           
 38145                           ; BSR set to: 0
 38146                           ;mconfig.c: 196:     sprintf(get_vterm_ptr(2, 0), "%s", V.info);
 38147   0160E4  0E01               	movlw	low (_V+231)
 38148   0160E6  6EE6               	movwf	postinc1,c
 38149   0160E8  0E0D               	movlw	high (_V+231)
 38150   0160EA  6EE6               	movwf	postinc1,c
 38151   0160EC  0EFC               	movlw	low STR_26
 38152   0160EE  6EE6               	movwf	postinc1,c
 38153   0160F0  0EFF               	movlw	high STR_26
 38154   0160F2  6EE6               	movwf	postinc1,c
 38155   0160F4  0E00               	movlw	0
 38156   0160F6  6EE6               	movwf	postinc1,c
 38157   0160F8  0E02               	movlw	2
 38158   0160FA  6EE6               	movwf	postinc1,c
 38159   0160FC  EC5C  F0BC         	call	_get_vterm_ptr	;wreg free
 38160   016100  0060  F08F  FFE6   	movff	btemp,postinc1
 38161   016106  0060  F093  FFE6   	movff	btemp+1,postinc1
 38162   01610C  0E06               	movlw	6
 38163   01610E  6EE6               	movwf	postinc1,c
 38164   016110  EC29  F0B2         	call	_sprintf	;wreg free
 38165                           
 38166                           ;mconfig.c: 197:     update_lcd(0);
 38167   016114  0E00               	movlw	0
 38168   016116  6EE6               	movwf	postinc1,c
 38169   016118  ECA1  F0B2         	call	_update_lcd	;wreg free
 38170   01611C                     l13214:
 38171                           
 38172                           ;mconfig.c: 201:   if ((V.response.info != DIS_STR) && TimerDone(TMR_INFO))
 38173   01611C  EE23  F191         	lfsr	2,_V+375	;volatile
 38174   016120  50DF               	movf	indf2,w,c
 38175   016122  B4D8               	btfsc	status,2,c
 38176   016124  D00B               	goto	l13220
 38177   016126  0E07               	movlw	7
 38178   016128  6EE6               	movwf	postinc1,c
 38179   01612A  ECCB  F0BE         	call	_TimerDone	;wreg free
 38180   01612E  5023               	movf	btemp^0,w,c
 38181   016130  B4D8               	btfsc	status,2,c
 38182   016132  D004               	goto	l13220
 38183                           
 38184                           ;mconfig.c: 202:    V.response.info = DIS_STR;
 38185   016134  0E00               	movlw	0
 38186   016136  006F FFA0  FD91    	movff	wreg,_V+375	;volatile
 38187   01613C                     l13220:
 38188                           
 38189                           ;mconfig.c: 208:  if (D.last_info == DIS_HELP && V.response.info != DIS_HELP) {
 38190   01613C  0062  F407  FFE8   	movff	_D@mconfig$F5154+513,wreg
 38191   016142  0A06               	xorlw	6
 38192                           
 38193                           ;mconfig.c: 212:  D.last_info = V.response.info;
 38194                           
 38195                           ;mconfig.c: 210:  }
 38196   016144  0063  F644  F901   	movff	_V+375,_D@mconfig$F5154+513	;volatile
 38197                           
 38198                           ; _MyeaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 4, argsize = 4, vargsize = 0
 38199   01614A  52E5               	movf	postdec1,f,c
 38200   01614C  52E5               	movf	postdec1,f,c
 38201   01614E  52E5               	movf	postdec1,f,c
 38202   016150  52E5               	movf	postdec1,f,c
 38203   016152  0012               	return		;funcret
 38204   016154                     __end_of_MyeaDogM_WriteStringAtPos:
 38205                           	callstack 0
 38206                           
 38207 ;; *************** function _update_lcd *****************
 38208 ;; Defined at:
 38209 ;;		line 82 in file "mconfig.c"
 38210 ;; Parameters:    Size  Location     Type
 38211 ;;  vterm           1  [STACK] unsigned char 
 38212 ;; Auto vars:     Size  Location     Type
 38213 ;;		None
 38214 ;; Return value:  Size  Location     Type
 38215 ;;                  1  [STACK] unsigned char 
 38216 ;; Registers used:
 38217 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 38218 ;; Tracked objects:
 38219 ;;		On entry : 0/1
 38220 ;;		On exit  : 0/0
 38221 ;;		Unchanged: 0/0
 38222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38227 ;;Total ram usage:        0 bytes
 38228 ;; Hardware stack levels used: 1
 38229 ;; Hardware stack levels required when called: 14
 38230 ;; This function calls:
 38231 ;;		_eaDogM_WriteStringAtPos
 38232 ;;		_wait_lcd_done
 38233 ;; This function is called by:
 38234 ;;		_main
 38235 ;;		_check_help
 38236 ;;		_MyeaDogM_WriteStringAtPos
 38237 ;; This function uses a reentrant model
 38238 ;;
 38239                           
 38240                           	psect	text83
 38241   016542                     __ptext83:
 38242                           	callstack 0
 38243   016542                     _update_lcd:
 38244                           	callstack 16
 38245                           
 38246                           ;mconfig.c: 82: uint8_t update_lcd(uint8_t vterm);mconfig.c: 83: {;mconfig.c: 84:  vterm
      +                           = vterm & 0x03;
 38247                           ;stkvar	_vterm @ sp[(0)+-1]
 38248                           
 38249                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38250                           ;incstack = 0
 38251   016542  0EFF               	movlw	-1
 38252   016544  006F FF8C  F023    	movff	plusw1,btemp
 38253   01654A  0E03               	movlw	3
 38254   01654C  1623               	andwf	btemp^0,f,c
 38255   01654E  0EFF               	movlw	-1
 38256   016550  0060  F08F  FFE3   	movff	btemp,plusw1
 38257                           
 38258                           ;mconfig.c: 86:  if (D.vterm >= 1 && vterm == 0)
 38259   016556  EE22  F100         	lfsr	2,_D@mconfig$F5154+512
 38260   01655A  A0DF               	btfss	indf2,0,c
 38261   01655C  D004               	goto	l12426
 38262                           
 38263                           ;stkvar	_vterm @ sp[(0)+-1]
 38264   01655E  0EFF               	movlw	-1
 38265   016560  50E3               	movf	plusw1,w,c
 38266   016562  B4D8               	btfsc	status,2,c
 38267   016564  D063               	goto	l2384
 38268   016566                     l12426:
 38269                           
 38270                           ;mconfig.c: 89:  D.lcd[vterm][0][16] = 0;
 38271                           ;stkvar	_vterm @ sp[(0)+-1]
 38272   016566  0EFF               	movlw	-1
 38273   016568  50E3               	movf	plusw1,w,c
 38274   01656A  0D80               	mullw	128
 38275   01656C  0E10               	movlw	low (_D@mconfig$F5154+16)
 38276   01656E  24F3               	addwf	243,w,c
 38277   016570  6ED9               	movwf	fsr2l,c
 38278   016572  0E07               	movlw	high (_D@mconfig$F5154+16)
 38279   016574  20F4               	addwfc	prodh,w,c
 38280   016576  6EDA               	movwf	fsr2h,c
 38281   016578  6ADF               	clrf	indf2,c
 38282                           
 38283                           ;mconfig.c: 90:  D.lcd[vterm][1][16] = 0;
 38284                           ;stkvar	_vterm @ sp[(0)+-1]
 38285   01657A  0EFF               	movlw	-1
 38286   01657C  50E3               	movf	plusw1,w,c
 38287   01657E  0D80               	mullw	128
 38288   016580  0E30               	movlw	low (_D@mconfig$F5154+48)
 38289   016582  24F3               	addwf	243,w,c
 38290   016584  6ED9               	movwf	fsr2l,c
 38291   016586  0E07               	movlw	high (_D@mconfig$F5154+48)
 38292   016588  20F4               	addwfc	prodh,w,c
 38293   01658A  6EDA               	movwf	fsr2h,c
 38294   01658C  6ADF               	clrf	indf2,c
 38295                           
 38296                           ;mconfig.c: 91:  D.lcd[vterm][2][16] = 0;
 38297                           ;stkvar	_vterm @ sp[(0)+-1]
 38298   01658E  0EFF               	movlw	-1
 38299   016590  50E3               	movf	plusw1,w,c
 38300   016592  0D80               	mullw	128
 38301   016594  0E50               	movlw	low (_D@mconfig$F5154+80)
 38302   016596  24F3               	addwf	243,w,c
 38303   016598  6ED9               	movwf	fsr2l,c
 38304   01659A  0E07               	movlw	high (_D@mconfig$F5154+80)
 38305   01659C  20F4               	addwfc	prodh,w,c
 38306   01659E  6EDA               	movwf	fsr2h,c
 38307   0165A0  6ADF               	clrf	indf2,c
 38308                           
 38309                           ;mconfig.c: 92:  wait_lcd_done();
 38310   0165A2  ECB0  F0BF         	call	_wait_lcd_done	;wreg free
 38311                           
 38312                           ; BSR set to: 0
 38313                           ;mconfig.c: 93:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 38314                           ;stkvar	_vterm @ sp[(0)+-1]
 38315   0165A6  0EFF               	movlw	-1
 38316   0165A8  50E3               	movf	plusw1,w,c
 38317   0165AA  0D80               	mullw	128
 38318   0165AC  0E00               	movlw	low _D@mconfig$F5154
 38319   0165AE  24F3               	addwf	243,w,c
 38320   0165B0  6E2D               	movwf	(btemp+10)^0,c
 38321   0165B2  0E07               	movlw	high _D@mconfig$F5154
 38322   0165B4  20F4               	addwfc	prodh,w,c
 38323   0165B6  6E2E               	movwf	(btemp+11)^0,c
 38324   0165B8  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 38325   0165BE  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 38326   0165C4  0E00               	movlw	0
 38327   0165C6  6EE6               	movwf	postinc1,c
 38328   0165C8  0E00               	movlw	0
 38329   0165CA  6EE6               	movwf	postinc1,c
 38330   0165CC  ECB0  F0BC         	call	_eaDogM_WriteStringAtPos	;wreg free
 38331                           
 38332                           ; BSR set to: 59
 38333                           ;mconfig.c: 94:  wait_lcd_done();
 38334   0165D0  ECB0  F0BF         	call	_wait_lcd_done	;wreg free
 38335                           
 38336                           ; BSR set to: 0
 38337                           ;mconfig.c: 95:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 38338                           ;stkvar	_vterm @ sp[(0)+-1]
 38339   0165D4  0EFF               	movlw	-1
 38340   0165D6  50E3               	movf	plusw1,w,c
 38341   0165D8  0D80               	mullw	128
 38342   0165DA  0E20               	movlw	low (_D@mconfig$F5154+32)
 38343   0165DC  24F3               	addwf	243,w,c
 38344   0165DE  6E2D               	movwf	(btemp+10)^0,c
 38345   0165E0  0E07               	movlw	high (_D@mconfig$F5154+32)
 38346   0165E2  20F4               	addwfc	prodh,w,c
 38347   0165E4  6E2E               	movwf	(btemp+11)^0,c
 38348   0165E6  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 38349   0165EC  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 38350   0165F2  0E00               	movlw	0
 38351   0165F4  6EE6               	movwf	postinc1,c
 38352   0165F6  0E01               	movlw	1
 38353   0165F8  6EE6               	movwf	postinc1,c
 38354   0165FA  ECB0  F0BC         	call	_eaDogM_WriteStringAtPos	;wreg free
 38355                           
 38356                           ; BSR set to: 59
 38357                           ;mconfig.c: 96:  wait_lcd_done();
 38358   0165FE  ECB0  F0BF         	call	_wait_lcd_done	;wreg free
 38359                           
 38360                           ; BSR set to: 0
 38361                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 38362                           ;stkvar	_vterm @ sp[(0)+-1]
 38363   016602  0EFF               	movlw	-1
 38364   016604  50E3               	movf	plusw1,w,c
 38365   016606  0D80               	mullw	128
 38366   016608  0E40               	movlw	low (_D@mconfig$F5154+64)
 38367   01660A  24F3               	addwf	243,w,c
 38368   01660C  6E2D               	movwf	(btemp+10)^0,c
 38369   01660E  0E07               	movlw	high (_D@mconfig$F5154+64)
 38370   016610  20F4               	addwfc	prodh,w,c
 38371   016612  6E2E               	movwf	(btemp+11)^0,c
 38372   016614  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 38373   01661A  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 38374   016620  0E00               	movlw	0
 38375   016622  6EE6               	movwf	postinc1,c
 38376   016624  0E02               	movlw	2
 38377   016626  6EE6               	movwf	postinc1,c
 38378   016628  ECB0  F0BC         	call	_eaDogM_WriteStringAtPos	;wreg free
 38379   01662C                     l2384:
 38380                           
 38381                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 38382   01662C  52E5               	movf	postdec1,f,c
 38383   01662E  0012               	return		;funcret
 38384   016630                     __end_of_update_lcd:
 38385                           	callstack 0
 38386                           
 38387 ;; *************** function _eaDogM_WriteStringAtPos *****************
 38388 ;; Defined at:
 38389 ;;		line 252 in file "eadog.c"
 38390 ;; Parameters:    Size  Location     Type
 38391 ;;  r               1  [STACK] const unsigned char 
 38392 ;;  c               1  [STACK] const unsigned char 
 38393 ;;  strPtr          2  [STACK] PTR unsigned char 
 38394 ;;		 -> D$lcd(512), D@mconfig$F5154(514), V(387), 
 38395 ;; Auto vars:     Size  Location     Type
 38396 ;;		None
 38397 ;; Return value:  Size  Location     Type
 38398 ;;                  1  [STACK] void 
 38399 ;; Registers used:
 38400 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 38401 ;; Tracked objects:
 38402 ;;		On entry : 3F/0
 38403 ;;		On exit  : 3F/3B
 38404 ;;		Unchanged: 0/0
 38405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38410 ;;Total ram usage:        0 bytes
 38411 ;; Hardware stack levels used: 1
 38412 ;; Hardware stack levels required when called: 13
 38413 ;; This function calls:
 38414 ;;		_eaDogM_WriteString
 38415 ;;		_send_lcd_cmd_dma
 38416 ;; This function is called by:
 38417 ;;		_update_lcd
 38418 ;;		_vterm_dump
 38419 ;;		_MyeaDogM_WriteStringAtPos
 38420 ;; This function uses a reentrant model
 38421 ;;
 38422                           
 38423                           	psect	text84
 38424   017960                     __ptext84:
 38425                           	callstack 0
 38426   017960                     _eaDogM_WriteStringAtPos:
 38427                           	callstack 16
 38428                           
 38429                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
 38430                           ;stkvar	_c @ sp[(0)+-2]
 38431                           
 38432                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38433                           ;incstack = 0
 38434   017960  0EFE               	movlw	-2
 38435   017962  006F FF8C  F02E    	movff	plusw1,btemp+11
 38436                           
 38437                           ;stkvar	_r @ sp[(0)+-1]
 38438   017968  0EFF               	movlw	-1
 38439   01796A  50E3               	movf	plusw1,w,c
 38440   01796C  0D10               	mullw	16
 38441   01796E  50F3               	movf	243,w,c
 38442   017970  242E               	addwf	(btemp+11)^0,w,c
 38443   017972  0F80               	addlw	128
 38444   017974  6EE6               	movwf	postinc1,c
 38445   017976  EC92  F0B9         	call	_send_lcd_cmd_dma	;wreg free
 38446                           
 38447                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
 38448                           ;stkvar	_strPtr @ sp[(0)+-4]
 38449   01797A  0EFC               	movlw	-4
 38450   01797C  006F FF8F FFE6     	movff	plusw1,postinc1
 38451   017982  006F FF8F FFE6     	movff	plusw1,postinc1
 38452   017988  ECCB  F0B5         	call	_eaDogM_WriteString	;wreg free
 38453                           
 38454                           ; BSR set to: 59
 38455                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 38456   01798C  52E5               	movf	postdec1,f,c
 38457   01798E  52E5               	movf	postdec1,f,c
 38458   017990  52E5               	movf	postdec1,f,c
 38459   017992  52E5               	movf	postdec1,f,c
 38460   017994  0012               	return		;funcret
 38461   017996                     __end_of_eaDogM_WriteStringAtPos:
 38462                           	callstack 0
 38463                           
 38464 ;; *************** function _send_lcd_cmd_dma *****************
 38465 ;; Defined at:
 38466 ;;		line 205 in file "eadog.c"
 38467 ;; Parameters:    Size  Location     Type
 38468 ;;  strPtr          1  [STACK] unsigned char 
 38469 ;; Auto vars:     Size  Location     Type
 38470 ;;		None
 38471 ;; Return value:  Size  Location     Type
 38472 ;;                  1  [STACK] void 
 38473 ;; Registers used:
 38474 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 38475 ;; Tracked objects:
 38476 ;;		On entry : 0/3D
 38477 ;;		On exit  : 3F/0
 38478 ;;		Unchanged: 0/0
 38479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38484 ;;Total ram usage:        0 bytes
 38485 ;; Hardware stack levels used: 1
 38486 ;; Hardware stack levels required when called: 12
 38487 ;; This function calls:
 38488 ;;		_printf
 38489 ;;		_ringBufS_flush
 38490 ;;		_start_lcd
 38491 ;;		_wait_lcd_done
 38492 ;;		_wait_lcd_set
 38493 ;; This function is called by:
 38494 ;;		_eaDogM_WriteCommand
 38495 ;;		_eaDogM_WriteStringAtPos
 38496 ;; This function uses a reentrant model
 38497 ;;
 38498                           
 38499                           	psect	text85
 38500   017324                     __ptext85:
 38501                           	callstack 0
 38502   017324                     _send_lcd_cmd_dma:
 38503                           	callstack 16
 38504                           
 38505                           ; BSR set to: 59
 38506                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38507                           ;incstack = 0
 38508                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 207:  do {
      +                           LATEbits.LATE2 = 1; } while(0);
 38509   017324  84BE               	bsf	190,2,c	;volatile
 38510                           
 38511                           ;eadog.c: 208:  wait_lcd_set();
 38512   017326  EC67  F0C0         	call	_wait_lcd_set	;wreg free
 38513                           
 38514                           ; BSR set to: 0
 38515                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
 38516   01732A  0E00               	movlw	0
 38517   01732C  6EE6               	movwf	postinc1,c
 38518   01732E  0060  F237  FFE6   	movff	_spi_link+6,postinc1
 38519   017334  0060  F23B  FFE6   	movff	_spi_link+7,postinc1
 38520   01733A  ECBA  F0B6         	call	_ringBufS_flush	;wreg free
 38521   01733E  92BC               	bcf	188,1,c	;volatile
 38522   017340  94BC               	bcf	188,2,c	;volatile
 38523                           
 38524                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
 38525   017342  013B               	movlb	59	; () banked
 38526   017344  9FFC               	bcf	252,7,b	;volatile
 38527                           
 38528                           ; BSR set to: 59
 38529                           ;eadog.c: 214:  DMA1SSZ = 1;
 38530   017346  0E00               	movlw	0
 38531   017348  6FF8               	movwf	248,b	;volatile
 38532   01734A  0E01               	movlw	1
 38533   01734C  6FF7               	movwf	247,b	;volatile
 38534                           
 38535                           ; BSR set to: 59
 38536                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
 38537   01734E  8FFC               	bsf	252,7,b	;volatile
 38538                           
 38539                           ; BSR set to: 59
 38540                           ;eadog.c: 216:  printf("%c", strPtr);
 38541                           ;stkvar	_strPtr @ sp[(0)+-1]
 38542   017350  0EFF               	movlw	-1
 38543   017352  50E3               	movf	plusw1,w,c
 38544   017354  6EE6               	movwf	postinc1,c
 38545   017356  0E00               	movlw	0
 38546   017358  6EE6               	movwf	postinc1,c
 38547   01735A  0EF9               	movlw	low STR_27
 38548   01735C  6EE6               	movwf	postinc1,c
 38549   01735E  0EFF               	movlw	high STR_27
 38550   017360  6EE6               	movwf	postinc1,c
 38551   017362  0E04               	movlw	4
 38552   017364  6EE6               	movwf	postinc1,c
 38553   017366  ECA9  F0B8         	call	_printf	;wreg free
 38554                           
 38555                           ; BSR set to: 1
 38556                           ;eadog.c: 217:  start_lcd();
 38557   01736A  EC6A  F0C0         	call	_start_lcd	;wreg free
 38558                           
 38559                           ; BSR set to: 59
 38560                           ;eadog.c: 218:  wait_lcd_done();
 38561   01736E  ECB0  F0BF         	call	_wait_lcd_done	;wreg free
 38562                           
 38563                           ; BSR set to: 0
 38564   017372  82BC               	bsf	188,1,c	;volatile
 38565                           
 38566                           ; BSR set to: 0
 38567                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 38568   017374  52E5               	movf	postdec1,f,c
 38569   017376  0012               	return		;funcret
 38570   017378                     __end_of_send_lcd_cmd_dma:
 38571                           	callstack 0
 38572                           
 38573 ;; *************** function _wait_lcd_done *****************
 38574 ;; Defined at:
 38575 ;;		line 141 in file "eadog.c"
 38576 ;; Parameters:    Size  Location     Type
 38577 ;;		None
 38578 ;; Auto vars:     Size  Location     Type
 38579 ;;		None
 38580 ;; Return value:  Size  Location     Type
 38581 ;;                  1  [STACK] void 
 38582 ;; Registers used:
 38583 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 38584 ;; Tracked objects:
 38585 ;;		On entry : 0/1
 38586 ;;		On exit  : 3F/0
 38587 ;;		Unchanged: 0/0
 38588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38593 ;;Total ram usage:        0 bytes
 38594 ;; Hardware stack levels used: 1
 38595 ;; Hardware stack levels required when called: 4
 38596 ;; This function calls:
 38597 ;;		_wdtdelay
 38598 ;; This function is called by:
 38599 ;;		_send_lcd_cmd_dma
 38600 ;;		_update_lcd
 38601 ;;		_vterm_dump
 38602 ;;		_MyeaDogM_WriteStringAtPos
 38603 ;; This function uses a reentrant model
 38604 ;;
 38605                           
 38606                           	psect	text86
 38607   017F60                     __ptext86:
 38608                           	callstack 0
 38609   017F60                     _wait_lcd_done:
 38610                           	callstack 25
 38611                           
 38612                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
 38613                           
 38614                           ; BSR set to: 0
 38615                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38616                           ;incstack = 0
 38617   017F60  0100               	movlb	0	; () banked
 38618   017F62  B787               	btfsc	_spi_link& (0+255),3,b	;volatile
 38619   017F64  D7FD               	goto	__ptext86
 38620                           
 38621                           ; BSR set to: 0
 38622                           ;eadog.c: 144:  wdtdelay(50);
 38623   017F66  0E32               	movlw	50
 38624   017F68  6EE6               	movwf	postinc1,c
 38625   017F6A  0E00               	movlw	0
 38626   017F6C  6EE6               	movwf	postinc1,c
 38627   017F6E  0E00               	movlw	0
 38628   017F70  6EE6               	movwf	postinc1,c
 38629   017F72  0E00               	movlw	0
 38630   017F74  6EE6               	movwf	postinc1,c
 38631   017F76  EC65  F0B9         	call	_wdtdelay	;wreg free
 38632                           
 38633                           ; BSR set to: 0
 38634                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 38635   017F7A  0012               	return		;funcret
 38636   017F7C                     __end_of_wait_lcd_done:
 38637                           	callstack 0
 38638                           
 38639 ;; *************** function _wdtdelay *****************
 38640 ;; Defined at:
 38641 ;;		line 22 in file "eadog.c"
 38642 ;; Parameters:    Size  Location     Type
 38643 ;;  delay           4  [STACK] const unsigned long 
 38644 ;; Auto vars:     Size  Location     Type
 38645 ;;		None
 38646 ;; Return value:  Size  Location     Type
 38647 ;;                  1  [STACK] void 
 38648 ;; Registers used:
 38649 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 38650 ;; Tracked objects:
 38651 ;;		On entry : 0/0
 38652 ;;		On exit  : 3F/0
 38653 ;;		Unchanged: 0/0
 38654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38659 ;;Total ram usage:        0 bytes
 38660 ;; Hardware stack levels used: 1
 38661 ;; Hardware stack levels required when called: 3
 38662 ;; This function calls:
 38663 ;;		Nothing
 38664 ;; This function is called by:
 38665 ;;		_init_display
 38666 ;;		_send_lcd_cmd
 38667 ;;		_send_lcd_cmd_long
 38668 ;;		_wait_lcd_done
 38669 ;; This function uses a reentrant model
 38670 ;;
 38671                           
 38672                           	psect	text87
 38673   0172CA                     __ptext87:
 38674                           	callstack 0
 38675   0172CA                     _wdtdelay:
 38676                           	callstack 25
 38677                           
 38678                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
 38679                           
 38680                           ; BSR set to: 0
 38681                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38682                           ;incstack = 0
 38683   0172CA  0100               	movlb	0	; () banked
 38684   0172CC  6B9A               	clrf	wdtdelay@dcount& (0+255),b
 38685   0172CE  6B9B               	clrf	(wdtdelay@dcount+1)& (0+255),b
 38686   0172D0  6B9C               	clrf	(wdtdelay@dcount+2)& (0+255),b
 38687   0172D2  6B9D               	clrf	(wdtdelay@dcount+3)& (0+255),b
 38688   0172D4                     l1548:
 38689                           
 38690                           ; BSR set to: 0
 38691                           ;eadog.c: 27:   __nop();
 38692   0172D4  0000               	nop	
 38693   0172D6  0004               	clrwdt		;# 
 38694                           
 38695                           ;eadog.c: 29:  };
 38696   0172D8  0E01               	movlw	1
 38697   0172DA  0100               	movlb	0	; () banked
 38698   0172DC  279A               	addwf	wdtdelay@dcount& (0+255),f,b
 38699   0172DE  0E00               	movlw	0
 38700   0172E0  239B               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 38701   0172E2  239C               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 38702   0172E4  239D               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 38703                           
 38704                           ; BSR set to: 0
 38705                           ;stkvar	_delay @ sp[(0)+-4]
 38706   0172E6  0EFC               	movlw	-4
 38707   0172E8  006F FF8C  F023    	movff	plusw1,btemp
 38708   0172EE  519A               	movf	wdtdelay@dcount& (0+255),w,b
 38709   0172F0  5C23               	subwf	btemp^0,w,c
 38710   0172F2  0EFD               	movlw	-3
 38711   0172F4  006F FF8C  F023    	movff	plusw1,btemp
 38712   0172FA  519B               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 38713   0172FC  5823               	subwfb	btemp^0,w,c
 38714   0172FE  0EFE               	movlw	-2
 38715   017300  006F FF8C  F023    	movff	plusw1,btemp
 38716   017306  519C               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 38717   017308  5823               	subwfb	btemp^0,w,c
 38718   01730A  0EFF               	movlw	-1
 38719   01730C  006F FF8C  F023    	movff	plusw1,btemp
 38720   017312  519D               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 38721   017314  5823               	subwfb	btemp^0,w,c
 38722   017316  B0D8               	btfsc	status,0,c
 38723   017318  D7DD               	goto	l1548
 38724                           
 38725                           ; BSR set to: 0
 38726                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 38727   01731A  52E5               	movf	postdec1,f,c
 38728   01731C  52E5               	movf	postdec1,f,c
 38729   01731E  52E5               	movf	postdec1,f,c
 38730   017320  52E5               	movf	postdec1,f,c
 38731   017322  0012               	return		;funcret
 38732   017324                     __end_of_wdtdelay:
 38733                           	callstack 0
 38734                           
 38735 ;; *************** function _eaDogM_WriteString *****************
 38736 ;; Defined at:
 38737 ;;		line 184 in file "eadog.c"
 38738 ;; Parameters:    Size  Location     Type
 38739 ;;  strPtr          2  [STACK] PTR unsigned char 
 38740 ;;		 -> D$lcd(512), D@mconfig$F5154(514), V(387), 
 38741 ;; Auto vars:     Size  Location     Type
 38742 ;;		None
 38743 ;; Return value:  Size  Location     Type
 38744 ;;                  1  [STACK] void 
 38745 ;; Registers used:
 38746 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 38747 ;; Tracked objects:
 38748 ;;		On entry : 3F/0
 38749 ;;		On exit  : 3F/3B
 38750 ;;		Unchanged: 0/0
 38751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38756 ;;Total ram usage:        0 bytes
 38757 ;; Hardware stack levels used: 1
 38758 ;; Hardware stack levels required when called: 12
 38759 ;; This function calls:
 38760 ;;		_printf
 38761 ;;		_ringBufS_flush
 38762 ;;		_start_lcd
 38763 ;;		_strlen
 38764 ;;		_wait_lcd_set
 38765 ;; This function is called by:
 38766 ;;		_eaDogM_WriteStringAtPos
 38767 ;; This function uses a reentrant model
 38768 ;;
 38769                           
 38770                           	psect	text88
 38771   016B96                     __ptext88:
 38772                           	callstack 0
 38773   016B96                     _eaDogM_WriteString:
 38774                           	callstack 16
 38775                           
 38776                           ; BSR set to: 0
 38777                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38778                           ;incstack = 0
 38779                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 186:  do {
      +                           LATEbits.LATE2 = 1; } while(0);
 38780   016B96  84BE               	bsf	190,2,c	;volatile
 38781                           
 38782                           ;eadog.c: 187:  wait_lcd_set();
 38783   016B98  EC67  F0C0         	call	_wait_lcd_set	;wreg free
 38784                           
 38785                           ; BSR set to: 0
 38786                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
 38787   016B9C  0E00               	movlw	0
 38788   016B9E  6EE6               	movwf	postinc1,c
 38789   016BA0  0060  F237  FFE6   	movff	_spi_link+6,postinc1
 38790   016BA6  0060  F23B  FFE6   	movff	_spi_link+7,postinc1
 38791   016BAC  ECBA  F0B6         	call	_ringBufS_flush	;wreg free
 38792   016BB0  94BC               	bcf	188,2,c	;volatile
 38793                           
 38794                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 38795                           ;stkvar	_strPtr @ sp[(0)+-2]
 38796   016BB2  0EFE               	movlw	-2
 38797   016BB4  006F FF8F FFE6     	movff	plusw1,postinc1
 38798   016BBA  006F FF8F FFE6     	movff	plusw1,postinc1
 38799   016BC0  EC00  F0B7         	call	_strlen	;wreg free
 38800   016BC4  5024               	movf	(btemp+1)^0,w,c
 38801   016BC6  E104               	bnz	u8760
 38802   016BC8  0E41               	movlw	65
 38803   016BCA  5C23               	subwf	btemp^0,w,c
 38804   016BCC  A0D8               	btfss	status,0,c
 38805   016BCE  D00F               	goto	l12178
 38806   016BD0                     u8760:
 38807                           
 38808                           ;stkvar	_strPtr @ sp[(0)+-2]
 38809   016BD0  0EFE               	movlw	-2
 38810   016BD2  006F FF8C  F02D    	movff	plusw1,btemp+10
 38811   016BD8  0EFF               	movlw	-1
 38812   016BDA  006F FF8C  F02E    	movff	plusw1,btemp+11
 38813   016BE0  0E40               	movlw	64
 38814   016BE2  242D               	addwf	(btemp+10)^0,w,c
 38815   016BE4  6ED9               	movwf	fsr2l,c
 38816   016BE6  0E00               	movlw	0
 38817   016BE8  202E               	addwfc	(btemp+11)^0,w,c
 38818   016BEA  6EDA               	movwf	fsr2h,c
 38819   016BEC  6ADF               	clrf	indf2,c
 38820   016BEE                     l12178:
 38821                           
 38822                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
 38823   016BEE  013B               	movlb	59	; () banked
 38824   016BF0  9FFC               	bcf	252,7,b	;volatile
 38825                           
 38826                           ; BSR set to: 59
 38827                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
 38828                           ;stkvar	_strPtr @ sp[(0)+-2]
 38829   016BF2  0EFE               	movlw	-2
 38830   016BF4  006F FF8F FFE6     	movff	plusw1,postinc1
 38831   016BFA  006F FF8F FFE6     	movff	plusw1,postinc1
 38832   016C00  EC00  F0B7         	call	_strlen	;wreg free
 38833   016C04  0060  F08F  FBF7   	movff	btemp,15351	;volatile
 38834   016C0A  0060  F093  FBF8   	movff	btemp+1,15352	;volatile
 38835                           
 38836                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
 38837   016C10  013B               	movlb	59	; () banked
 38838   016C12  8FFC               	bsf	252,7,b	;volatile
 38839                           
 38840                           ; BSR set to: 59
 38841                           ;eadog.c: 195:  printf("%s", strPtr);
 38842                           ;stkvar	_strPtr @ sp[(0)+-2]
 38843   016C14  0EFE               	movlw	-2
 38844   016C16  006F FF8F FFE6     	movff	plusw1,postinc1
 38845   016C1C  006F FF8F FFE6     	movff	plusw1,postinc1
 38846   016C22  0EFC               	movlw	low STR_26
 38847   016C24  6EE6               	movwf	postinc1,c
 38848   016C26  0EFF               	movlw	high STR_26
 38849   016C28  6EE6               	movwf	postinc1,c
 38850   016C2A  0E04               	movlw	4
 38851   016C2C  6EE6               	movwf	postinc1,c
 38852   016C2E  ECA9  F0B8         	call	_printf	;wreg free
 38853                           
 38854                           ; BSR set to: 1
 38855                           ;eadog.c: 196:  start_lcd();
 38856   016C32  EC6A  F0C0         	call	_start_lcd	;wreg free
 38857                           
 38858                           ; BSR set to: 59
 38859                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 38860   016C36  52E5               	movf	postdec1,f,c
 38861   016C38  52E5               	movf	postdec1,f,c
 38862   016C3A  0012               	return		;funcret
 38863   016C3C                     __end_of_eaDogM_WriteString:
 38864                           	callstack 0
 38865                           
 38866 ;; *************** function _wait_lcd_set *****************
 38867 ;; Defined at:
 38868 ;;		line 131 in file "eadog.c"
 38869 ;; Parameters:    Size  Location     Type
 38870 ;;		None
 38871 ;; Auto vars:     Size  Location     Type
 38872 ;;		None
 38873 ;; Return value:  Size  Location     Type
 38874 ;;                  1  [STACK] void 
 38875 ;; Registers used:
 38876 ;;		None
 38877 ;; Tracked objects:
 38878 ;;		On entry : 0/3D
 38879 ;;		On exit  : 3F/0
 38880 ;;		Unchanged: 0/0
 38881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38886 ;;Total ram usage:        0 bytes
 38887 ;; Hardware stack levels used: 1
 38888 ;; Hardware stack levels required when called: 3
 38889 ;; This function calls:
 38890 ;;		Nothing
 38891 ;; This function is called by:
 38892 ;;		_eaDogM_WriteString
 38893 ;;		_send_lcd_cmd_dma
 38894 ;; This function uses a reentrant model
 38895 ;;
 38896                           
 38897                           	psect	text89
 38898   0180CE                     __ptext89:
 38899                           	callstack 0
 38900   0180CE                     _wait_lcd_set:
 38901                           	callstack 24
 38902                           
 38903                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
 38904                           
 38905                           ; BSR set to: 59
 38906                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38907                           ;incstack = 0
 38908   0180CE  0100               	movlb	0	; () banked
 38909   0180D0  8787               	bsf	_spi_link& (0+255),3,b	;volatile
 38910                           
 38911                           ; BSR set to: 0
 38912                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 38913   0180D2  0012               	return		;funcret
 38914   0180D4                     __end_of_wait_lcd_set:
 38915                           	callstack 0
 38916                           
 38917 ;; *************** function _start_lcd *****************
 38918 ;; Defined at:
 38919 ;;		line 126 in file "eadog.c"
 38920 ;; Parameters:    Size  Location     Type
 38921 ;;		None
 38922 ;; Auto vars:     Size  Location     Type
 38923 ;;		None
 38924 ;; Return value:  Size  Location     Type
 38925 ;;                  1  [STACK] void 
 38926 ;; Registers used:
 38927 ;;		None
 38928 ;; Tracked objects:
 38929 ;;		On entry : 3F/1
 38930 ;;		On exit  : 3F/3B
 38931 ;;		Unchanged: 0/0
 38932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38937 ;;Total ram usage:        0 bytes
 38938 ;; Hardware stack levels used: 1
 38939 ;; Hardware stack levels required when called: 3
 38940 ;; This function calls:
 38941 ;;		Nothing
 38942 ;; This function is called by:
 38943 ;;		_eaDogM_WriteString
 38944 ;;		_send_lcd_cmd_dma
 38945 ;; This function uses a reentrant model
 38946 ;;
 38947                           
 38948                           	psect	text90
 38949   0180D4                     __ptext90:
 38950                           	callstack 0
 38951   0180D4                     _start_lcd:
 38952                           	callstack 24
 38953                           
 38954                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
 38955                           
 38956                           ; BSR set to: 0
 38957                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38958                           ;incstack = 0
 38959   0180D4  013B               	movlb	59	; () banked
 38960   0180D6  8DFC               	bsf	252,6,b	;volatile
 38961                           
 38962                           ; BSR set to: 59
 38963                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 38964   0180D8  0012               	return		;funcret
 38965   0180DA                     __end_of_start_lcd:
 38966                           	callstack 0
 38967                           
 38968 ;; *************** function _ringBufS_flush *****************
 38969 ;; Defined at:
 38970 ;;		line 76 in file "ringbufs.c"
 38971 ;; Parameters:    Size  Location     Type
 38972 ;;  _this           2  [STACK] PTR struct ringBufS_t
 38973 ;;		 -> ring_buf1(67), 
 38974 ;;  clearBuffer     1  [STACK] const char 
 38975 ;; Auto vars:     Size  Location     Type
 38976 ;;		None
 38977 ;; Return value:  Size  Location     Type
 38978 ;;                  1  [STACK] void 
 38979 ;; Registers used:
 38980 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 38981 ;; Tracked objects:
 38982 ;;		On entry : 3F/0
 38983 ;;		On exit  : 0/0
 38984 ;;		Unchanged: 0/0
 38985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38990 ;;Total ram usage:        0 bytes
 38991 ;; Hardware stack levels used: 1
 38992 ;; Hardware stack levels required when called: 4
 38993 ;; This function calls:
 38994 ;;		_memset
 38995 ;; This function is called by:
 38996 ;;		_eaDogM_WriteString
 38997 ;;		_send_lcd_cmd_dma
 38998 ;; This function uses a reentrant model
 38999 ;;
 39000                           
 39001                           	psect	text91
 39002   016D74                     __ptext91:
 39003                           	callstack 0
 39004   016D74                     _ringBufS_flush:
 39005                           	callstack 23
 39006                           
 39007                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 39008                           ;stkvar	__this @ sp[(0)+-2]
 39009                           
 39010                           ; BSR set to: 59
 39011                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39012                           ;incstack = 0
 39013   016D74  0EFE               	movlw	-2
 39014   016D76  006F FF8C  F02D    	movff	plusw1,btemp+10
 39015   016D7C  0EFF               	movlw	-1
 39016   016D7E  006F FF8C  F02E    	movff	plusw1,btemp+11
 39017   016D84  0E42               	movlw	66
 39018   016D86  242D               	addwf	(btemp+10)^0,w,c
 39019   016D88  6ED9               	movwf	fsr2l,c
 39020   016D8A  0E00               	movlw	0
 39021   016D8C  202E               	addwfc	(btemp+11)^0,w,c
 39022   016D8E  6EDA               	movwf	fsr2h,c
 39023   016D90  6ADF               	clrf	indf2,c
 39024                           
 39025                           ;ringbufs.c: 79:  _this->head = 0;
 39026                           ;stkvar	__this @ sp[(0)+-2]
 39027   016D92  0EFE               	movlw	-2
 39028   016D94  006F FF8C  F02D    	movff	plusw1,btemp+10
 39029   016D9A  0EFF               	movlw	-1
 39030   016D9C  006F FF8C  F02E    	movff	plusw1,btemp+11
 39031   016DA2  0E40               	movlw	64
 39032   016DA4  242D               	addwf	(btemp+10)^0,w,c
 39033   016DA6  6ED9               	movwf	fsr2l,c
 39034   016DA8  0E00               	movlw	0
 39035   016DAA  202E               	addwfc	(btemp+11)^0,w,c
 39036   016DAC  6EDA               	movwf	fsr2h,c
 39037   016DAE  6ADF               	clrf	indf2,c
 39038                           
 39039                           ;ringbufs.c: 80:  _this->tail = 0;
 39040                           ;stkvar	__this @ sp[(0)+-2]
 39041   016DB0  0EFE               	movlw	-2
 39042   016DB2  006F FF8C  F02D    	movff	plusw1,btemp+10
 39043   016DB8  0EFF               	movlw	-1
 39044   016DBA  006F FF8C  F02E    	movff	plusw1,btemp+11
 39045   016DC0  0E41               	movlw	65
 39046   016DC2  242D               	addwf	(btemp+10)^0,w,c
 39047   016DC4  6ED9               	movwf	fsr2l,c
 39048   016DC6  0E00               	movlw	0
 39049   016DC8  202E               	addwfc	(btemp+11)^0,w,c
 39050   016DCA  6EDA               	movwf	fsr2h,c
 39051   016DCC  6ADF               	clrf	indf2,c
 39052                           
 39053                           ;ringbufs.c: 81:  if (clearBuffer) {
 39054                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 39055   016DCE  0EFD               	movlw	-3
 39056   016DD0  50E3               	movf	plusw1,w,c
 39057   016DD2  B4D8               	btfsc	status,2,c
 39058   016DD4  D011               	goto	l1694
 39059                           
 39060                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 39061   016DD6  0E40               	movlw	64
 39062   016DD8  6EE6               	movwf	postinc1,c
 39063   016DDA  0E00               	movlw	0
 39064   016DDC  6EE6               	movwf	postinc1,c
 39065   016DDE  0E00               	movlw	0
 39066   016DE0  6EE6               	movwf	postinc1,c
 39067   016DE2  0E00               	movlw	0
 39068   016DE4  6EE6               	movwf	postinc1,c
 39069                           
 39070                           ;stkvar	__this @ sp[(-4)+-2]
 39071   016DE6  0EFA               	movlw	-6
 39072   016DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 39073   016DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 39074   016DF4  EC1E  F0B6         	call	_memset	;wreg free
 39075   016DF8                     l1694:
 39076                           
 39077                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 39078   016DF8  52E5               	movf	postdec1,f,c
 39079   016DFA  52E5               	movf	postdec1,f,c
 39080   016DFC  52E5               	movf	postdec1,f,c
 39081   016DFE  0012               	return		;funcret
 39082   016E00                     __end_of_ringBufS_flush:
 39083                           	callstack 0
 39084                           
 39085 ;; *************** function _memset *****************
 39086 ;; Defined at:
 39087 ;;		line 3 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/memset.c"
 39088 ;; Parameters:    Size  Location     Type
 39089 ;;  dest            2  [STACK] PTR void 
 39090 ;;		 -> ring_buf2(67), ring_buf1(67), 
 39091 ;;  c               2  [STACK] int 
 39092 ;;  n               2  [STACK] unsigned int 
 39093 ;; Auto vars:     Size  Location     Type
 39094 ;;  p               2  [STACK] PTR unsigned char 
 39095 ;;		 -> ring_buf2(67), ring_buf1(67), 
 39096 ;; Return value:  Size  Location     Type
 39097 ;;                  2  [STACK] PTR void 
 39098 ;; Registers used:
 39099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 39100 ;; Tracked objects:
 39101 ;;		On entry : 0/0
 39102 ;;		On exit  : 0/0
 39103 ;;		Unchanged: 0/0
 39104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39109 ;;Total ram usage:        0 bytes
 39110 ;; Hardware stack levels used: 1
 39111 ;; Hardware stack levels required when called: 3
 39112 ;; This function calls:
 39113 ;;		Nothing
 39114 ;; This function is called by:
 39115 ;;		_ringBufS_init
 39116 ;;		_ringBufS_flush
 39117 ;; This function uses a reentrant model
 39118 ;;
 39119                           
 39120                           	psect	text92
 39121   016C3C                     __ptext92:
 39122                           	callstack 0
 39123   016C3C                     _memset:
 39124                           	callstack 0
 39125                           
 39126                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39127   016C3C  52E6               	movf	postinc1,f,c
 39128   016C3E  52E6               	movf	postinc1,f,c
 39129                           
 39130                           ;stkvar	_dest @ sp[(-2)+-2]
 39131                           
 39132                           ;incstack = 0
 39133   016C40  0EFC               	movlw	-4
 39134   016C42  006F FF8C  F02D    	movff	plusw1,btemp+10
 39135   016C48  0EFD               	movlw	-3
 39136   016C4A  006F FF8C  F02E    	movff	plusw1,btemp+11
 39137                           
 39138                           ;stkvar	_p @ sp[(-2)+0]
 39139   016C50  0EFF               	movlw	-1
 39140   016C52  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 39141   016C58  0EFE               	movlw	-2
 39142   016C5A  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 39143   016C60  D01D               	goto	l12112
 39144   016C62                     l12108:
 39145                           
 39146                           ;stkvar	_c @ sp[(-2)+-4]
 39147                           ;stkvar	_p @ sp[(-2)+0]
 39148   016C62  0EFE               	movlw	-2
 39149   016C64  006F FF8F FFD9     	movff	plusw1,fsr2l
 39150   016C6A  0EFF               	movlw	-1
 39151   016C6C  006F FF8F FFDA     	movff	plusw1,fsr2h
 39152   016C72  0EFA               	movlw	-6
 39153   016C74  006F FF8F FFDF     	movff	plusw1,indf2
 39154                           
 39155                           ;stkvar	_p @ sp[(-2)+0]
 39156   016C7A  0EFE               	movlw	-2
 39157   016C7C  50E3               	movf	plusw1,w,c
 39158   016C7E  0F01               	addlw	1
 39159   016C80  6E23               	movwf	btemp^0,c
 39160   016C82  0EFE               	movlw	-2
 39161   016C84  0060  F08F  FFE3   	movff	btemp,plusw1
 39162   016C8A  6A23               	clrf	btemp^0,c
 39163   016C8C  0EFF               	movlw	-1
 39164   016C8E  50E3               	movf	plusw1,w,c
 39165   016C90  2023               	addwfc	btemp^0,w,c
 39166   016C92  6E23               	movwf	btemp^0,c
 39167   016C94  0EFF               	movlw	-1
 39168   016C96  0060  F08F  FFE3   	movff	btemp,plusw1
 39169   016C9C                     l12112:
 39170                           
 39171                           ;stkvar	_n @ sp[(-2)+-6]
 39172   016C9C  0EF8               	movlw	-8
 39173   016C9E  006F FF8C  F023    	movff	plusw1,btemp
 39174   016CA4  0E01               	movlw	1
 39175   016CA6  5E23               	subwf	btemp^0,f,c
 39176   016CA8  0EF8               	movlw	-8
 39177   016CAA  0060  F08F  FFE3   	movff	btemp,plusw1
 39178   016CB0  0EF9               	movlw	-7
 39179   016CB2  006F FF8C  F023    	movff	plusw1,btemp
 39180   016CB8  0E00               	movlw	0
 39181   016CBA  5A23               	subwfb	btemp^0,f,c
 39182   016CBC  0EF9               	movlw	-7
 39183   016CBE  0060  F08F  FFE3   	movff	btemp,plusw1
 39184   016CC4  0EF8               	movlw	-8
 39185   016CC6  28E3               	incf	plusw1,w,c
 39186   016CC8  E1CC               	bnz	l12108
 39187   016CCA  0EF9               	movlw	-7
 39188   016CCC  28E3               	incf	plusw1,w,c
 39189   016CCE  A4D8               	btfss	status,2,c
 39190   016CD0  D7C8               	goto	l12108
 39191                           
 39192                           ; _memset: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 39193   016CD2  0EF8               	movlw	248
 39194   016CD4  26E1               	addwf	fsr1l,f,c
 39195   016CD6  0EFF               	movlw	255
 39196   016CD8  22E2               	addwfc	fsr1h,f,c
 39197   016CDA  0012               	return		;funcret
 39198   016CDC                     __end_of_memset:
 39199                           	callstack 0
 39200                           
 39201 ;; *************** function _printf *****************
 39202 ;; Defined at:
 39203 ;;		line 5 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/printf.c"
 39204 ;; Parameters:    Size  Location     Type
 39205 ;;  fmt             2  [STACK] PTR const unsigned char 
 39206 ;;		 -> STR_28(3), STR_27(3), STR_26(3), 
 39207 ;; Auto vars:     Size  Location     Type
 39208 ;;  ap              2  [STACK] PTR void [1]
 39209 ;;		 -> ?_printf(2), ?_sprintf(2), 
 39210 ;;  ret             2    0        int 
 39211 ;; Return value:  Size  Location     Type
 39212 ;;                  2  [STACK] int 
 39213 ;; Registers used:
 39214 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 39215 ;; Tracked objects:
 39216 ;;		On entry : 3F/3B
 39217 ;;		On exit  : 3F/1
 39218 ;;		Unchanged: 0/0
 39219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39224 ;;Total ram usage:        0 bytes
 39225 ;; Hardware stack levels used: 1
 39226 ;; Hardware stack levels required when called: 11
 39227 ;; This function calls:
 39228 ;;		_vfprintf
 39229 ;; This function is called by:
 39230 ;;		_eaDogM_WriteString
 39231 ;;		_send_lcd_cmd_dma
 39232 ;; This function uses a reentrant model
 39233 ;;
 39234                           
 39235                           	psect	text93
 39236   017152                     __ptext93:
 39237                           	callstack 0
 39238   017152                     _printf:
 39239                           	callstack 0
 39240                           
 39241                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39242   017152  52E6               	movf	postinc1,f,c
 39243   017154  52E6               	movf	postinc1,f,c
 39244                           
 39245                           ;stkvar	?_printf @ sp[(-2)+-3]
 39246                           
 39247                           ;incstack = 0
 39248   017156  0EFB               	movlw	251
 39249   017158  24E1               	addwf	fsr1l,w,c
 39250   01715A  6E2D               	movwf	(btemp+10)^0,c
 39251   01715C  0EFF               	movlw	255
 39252   01715E  20E2               	addwfc	fsr1h,w,c
 39253   017160  6E2E               	movwf	(btemp+11)^0,c
 39254                           
 39255                           ;stkvar	_ap @ sp[(-2)+0]
 39256   017162  0EFF               	movlw	-1
 39257   017164  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 39258   01716A  0EFE               	movlw	-2
 39259   01716C  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 39260                           
 39261                           ;stkvar	_ap @ sp[(-2)+0]
 39262   017172  0EFE               	movlw	254
 39263   017174  24E1               	addwf	fsr1l,w,c
 39264   017176  6E23               	movwf	btemp^0,c
 39265   017178  0EFF               	movlw	255
 39266   01717A  20E2               	addwfc	fsr1h,w,c
 39267   01717C  6E24               	movwf	(btemp+1)^0,c
 39268   01717E  0060  F08F  FFE6   	movff	btemp,postinc1
 39269   017184  0060  F093  FFE6   	movff	btemp+1,postinc1
 39270                           
 39271                           ;stkvar	_fmt @ sp[(-4)+-3]
 39272   01718A  0EF9               	movlw	-7
 39273   01718C  006F FF8F FFE6     	movff	plusw1,postinc1
 39274   017192  006F FF8F FFE6     	movff	plusw1,postinc1
 39275   017198  0E00               	movlw	0
 39276   01719A  6EE6               	movwf	postinc1,c
 39277   01719C  0E00               	movlw	0
 39278   01719E  6EE6               	movwf	postinc1,c
 39279   0171A0  EC77  F0B5         	call	_vfprintf	;wreg free
 39280                           
 39281                           ; BSR set to: 1
 39282                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 39283   0171A4  52E5               	movf	postdec1,f,c
 39284   0171A6  52E5               	movf	postdec1,f,c
 39285   0171A8  52E5               	movf	postdec1,f,c
 39286   0171AA  50E7               	movf	indf1,w,c
 39287   0171AC  5EE1               	subwf	fsr1l,f,c
 39288   0171AE  0E00               	movlw	0
 39289   0171B0  5AE2               	subwfb	fsr1h,f,c
 39290   0171B2  0012               	return		;funcret
 39291   0171B4                     __end_of_printf:
 39292                           	callstack 0
 39293                           
 39294 ;; *************** function _sprintf *****************
 39295 ;; Defined at:
 39296 ;;		line 9 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/nf_sprintf.c"
 39297 ;; Parameters:    Size  Location     Type
 39298 ;;  s               2  [STACK] PTR unsigned char 
 39299 ;;		 -> D$lcd(512), D@mconfig$F5154(514), V(387), 
 39300 ;;  fmt             2  [STACK] PTR const unsigned char 
 39301 ;;		 -> STR_68(3), STR_67(3), STR_66(19), STR_65(19), 
 39302 ;;		 -> STR_64(19), STR_63(19), STR_62(25), STR_61(26), 
 39303 ;;		 -> STR_60(21), STR_59(22), STR_58(21), STR_57(24), 
 39304 ;;		 -> STR_56(19), STR_55(19), STR_54(20), STR_53(18), 
 39305 ;;		 -> STR_52(20), STR_51(18), STR_50(20), STR_49(18), 
 39306 ;;		 -> STR_48(20), STR_47(22), STR_46(24), STR_45(15), 
 39307 ;;		 -> STR_44(15), STR_43(15), STR_42(10), STR_41(10), 
 39308 ;;		 -> STR_40(19), STR_39(19), STR_36(21), STR_35(26), 
 39309 ;;		 -> STR_34(26), STR_33(20), msg99(56), msg2(86), 
 39310 ;;		 -> msg1(88), msg0(89), STR_25(29), STR_24(26), 
 39311 ;;		 -> STR_23(21), STR_22(4), STR_21(19), STR_20(26), 
 39312 ;;		 -> STR_19(21), STR_18(20), STR_17(21), STR_16(21), 
 39313 ;;		 -> STR_15(18), STR_14(24), STR_13(24), STR_12(21), 
 39314 ;;		 -> STR_11(21), STR_10(21), STR_9(16), STR_8(17), 
 39315 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
 39316 ;;		 -> STR_1(17), 
 39317 ;; Auto vars:     Size  Location     Type
 39318 ;;  f              11  [STACK] struct _IO_FILE
 39319 ;;  ap              2  [STACK] PTR void [1]
 39320 ;;		 -> ?_printf(2), ?_sprintf(2), 
 39321 ;;  ret             2    0        int 
 39322 ;; Return value:  Size  Location     Type
 39323 ;;                  2  [STACK] int 
 39324 ;; Registers used:
 39325 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 39326 ;; Tracked objects:
 39327 ;;		On entry : 0/0
 39328 ;;		On exit  : 3F/1
 39329 ;;		Unchanged: 0/0
 39330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39335 ;;Total ram usage:        0 bytes
 39336 ;; Hardware stack levels used: 1
 39337 ;; Hardware stack levels required when called: 11
 39338 ;; This function calls:
 39339 ;;		_vfprintf
 39340 ;; This function is called by:
 39341 ;;		_main
 39342 ;;		_terminal_format
 39343 ;;		_s10f1_opcmd
 39344 ;;		_ee_logger
 39345 ;;		_check_help
 39346 ;;		_vterm_dump
 39347 ;;		_vterm_sequence
 39348 ;;		_MyeaDogM_WriteStringAtPos
 39349 ;; This function uses a reentrant model
 39350 ;;
 39351                           
 39352                           	psect	text94
 39353   016452                     __ptext94:
 39354                           	callstack 0
 39355   016452                     _sprintf:
 39356                           	callstack 0
 39357                           
 39358                           ; BSR set to: 1
 39359                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 18, argsize = 4 v
      +                          argsize = 0, retsize = 0 argfudge = 0
 39360   016452  0E0D               	movlw	13
 39361   016454  26E1               	addwf	fsr1l,f,c
 39362   016456  0E00               	movlw	0
 39363   016458  22E2               	addwfc	fsr1h,f,c
 39364                           
 39365                           ;stkvar	?_sprintf @ sp[(-13)+-3]
 39366                           
 39367                           ;incstack = 0
 39368   01645A  0EEE               	movlw	238
 39369   01645C  24E1               	addwf	fsr1l,w,c
 39370   01645E  6E2D               	movwf	(btemp+10)^0,c
 39371   016460  0EFF               	movlw	255
 39372   016462  20E2               	addwfc	fsr1h,w,c
 39373   016464  6E2E               	movwf	(btemp+11)^0,c
 39374                           
 39375                           ;stkvar	_ap @ sp[(-13)+11]
 39376   016466  0EFF               	movlw	-1
 39377   016468  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 39378   01646E  0EFE               	movlw	-2
 39379   016470  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 39380                           
 39381                           ;stkvar	_s @ sp[(-13)+-3]
 39382   016476  0EF0               	movlw	-16
 39383   016478  006F FF8C  F02D    	movff	plusw1,btemp+10
 39384   01647E  0EF1               	movlw	-15
 39385   016480  006F FF8C  F02E    	movff	plusw1,btemp+11
 39386                           
 39387                           ;stkvar	_f @ sp[(-13)+0]
 39388   016486  0EF4               	movlw	-12
 39389   016488  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 39390   01648E  0EF3               	movlw	-13
 39391   016490  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 39392                           
 39393                           ;stkvar	_f @ sp[(-13)+0]
 39394   016496  0EF5               	movlw	245
 39395   016498  24E1               	addwf	fsr1l,w,c
 39396   01649A  6ED9               	movwf	fsr2l,c
 39397   01649C  0EFF               	movlw	255
 39398   01649E  20E2               	addwfc	fsr1h,w,c
 39399   0164A0  6EDA               	movwf	fsr2h,c
 39400   0164A2  6ADE               	clrf	postinc2,c
 39401   0164A4  6ADD               	clrf	postdec2,c
 39402                           
 39403                           ;stkvar	_f @ sp[(-13)+0]
 39404   0164A6  0EFC               	movlw	252
 39405   0164A8  24E1               	addwf	fsr1l,w,c
 39406   0164AA  6ED9               	movwf	fsr2l,c
 39407   0164AC  0EFF               	movlw	255
 39408   0164AE  20E2               	addwfc	fsr1h,w,c
 39409   0164B0  6EDA               	movwf	fsr2h,c
 39410   0164B2  6ADE               	clrf	postinc2,c
 39411   0164B4  6ADD               	clrf	postdec2,c
 39412                           
 39413                           ;stkvar	_ap @ sp[(-13)+11]
 39414   0164B6  0EFE               	movlw	254
 39415   0164B8  24E1               	addwf	fsr1l,w,c
 39416   0164BA  6E23               	movwf	btemp^0,c
 39417   0164BC  0EFF               	movlw	255
 39418   0164BE  20E2               	addwfc	fsr1h,w,c
 39419   0164C0  6E24               	movwf	(btemp+1)^0,c
 39420   0164C2  0060  F08F  FFE6   	movff	btemp,postinc1
 39421   0164C8  0060  F093  FFE6   	movff	btemp+1,postinc1
 39422                           
 39423                           ;stkvar	_fmt @ sp[(-15)+-5]
 39424   0164CE  0EEC               	movlw	-20
 39425   0164D0  006F FF8F FFE6     	movff	plusw1,postinc1
 39426   0164D6  006F FF8F FFE6     	movff	plusw1,postinc1
 39427                           
 39428                           ;stkvar	_f @ sp[(-17)+0]
 39429   0164DC  0EEF               	movlw	239
 39430   0164DE  24E1               	addwf	fsr1l,w,c
 39431   0164E0  6E23               	movwf	btemp^0,c
 39432   0164E2  0EFF               	movlw	255
 39433   0164E4  20E2               	addwfc	fsr1h,w,c
 39434   0164E6  6E24               	movwf	(btemp+1)^0,c
 39435   0164E8  0060  F08F  FFE6   	movff	btemp,postinc1
 39436   0164EE  0060  F093  FFE6   	movff	btemp+1,postinc1
 39437   0164F4  EC77  F0B5         	call	_vfprintf	;wreg free
 39438                           
 39439                           ; BSR set to: 1
 39440                           ;stkvar	_f @ sp[(-13)+0]
 39441   0164F8  0EF5               	movlw	245
 39442   0164FA  24E1               	addwf	fsr1l,w,c
 39443   0164FC  6ED9               	movwf	fsr2l,c
 39444   0164FE  0EFF               	movlw	255
 39445   016500  20E2               	addwfc	fsr1h,w,c
 39446   016502  6EDA               	movwf	fsr2h,c
 39447   016504  006F FF78  F02D    	movff	postinc2,btemp+10
 39448   01650A  006F FF74  F02E    	movff	postdec2,btemp+11
 39449                           
 39450                           ;stkvar	_s @ sp[(-13)+-3]
 39451   016510  0EF0               	movlw	-16
 39452   016512  006F FF8C  F02B    	movff	plusw1,btemp+8
 39453   016518  0EF1               	movlw	-15
 39454   01651A  006F FF8C  F02C    	movff	plusw1,btemp+9
 39455   016520  502D               	movf	(btemp+10)^0,w,c
 39456   016522  242B               	addwf	(btemp+8)^0,w,c
 39457   016524  6ED9               	movwf	fsr2l,c
 39458   016526  502E               	movf	(btemp+11)^0,w,c
 39459   016528  202C               	addwfc	(btemp+9)^0,w,c
 39460   01652A  6EDA               	movwf	fsr2h,c
 39461   01652C  6ADF               	clrf	indf2,c
 39462                           
 39463                           ; BSR set to: 1
 39464                           ; _sprintf: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 18, arg
      +                          size = 4, vargsize = 0
 39465   01652E  0EF3               	movlw	243
 39466   016530  26E1               	addwf	fsr1l,f,c
 39467   016532  0EFF               	movlw	255
 39468   016534  22E2               	addwfc	fsr1h,f,c
 39469   016536  52E5               	movf	postdec1,f,c
 39470   016538  50E7               	movf	indf1,w,c
 39471   01653A  5EE1               	subwf	fsr1l,f,c
 39472   01653C  0E00               	movlw	0
 39473   01653E  5AE2               	subwfb	fsr1h,f,c
 39474   016540  0012               	return		;funcret
 39475   016542                     __end_of_sprintf:
 39476                           	callstack 0
 39477                           
 39478 ;; *************** function _vfprintf *****************
 39479 ;; Defined at:
 39480 ;;		line 1817 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c"
 39481 ;; Parameters:    Size  Location     Type
 39482 ;;  fp              2  [STACK] PTR struct _IO_FILE
 39483 ;;		 -> f(11), NULL(0), 
 39484 ;;  fmt             2  [STACK] PTR const unsigned char 
 39485 ;;		 -> STR_68(3), STR_67(3), STR_66(19), STR_65(19), 
 39486 ;;		 -> STR_64(19), STR_63(19), STR_62(25), STR_61(26), 
 39487 ;;		 -> STR_60(21), STR_59(22), STR_58(21), STR_57(24), 
 39488 ;;		 -> STR_56(19), STR_55(19), STR_54(20), STR_53(18), 
 39489 ;;		 -> STR_52(20), STR_51(18), STR_50(20), STR_49(18), 
 39490 ;;		 -> STR_48(20), STR_47(22), STR_46(24), STR_45(15), 
 39491 ;;		 -> STR_44(15), STR_43(15), STR_42(10), STR_41(10), 
 39492 ;;		 -> STR_40(19), STR_39(19), STR_36(21), STR_35(26), 
 39493 ;;		 -> STR_34(26), STR_33(20), msg99(56), msg2(86), 
 39494 ;;		 -> msg1(88), msg0(89), STR_28(3), STR_27(3), 
 39495 ;;		 -> STR_26(3), STR_25(29), STR_24(26), STR_23(21), 
 39496 ;;		 -> STR_22(4), STR_21(19), STR_20(26), STR_19(21), 
 39497 ;;		 -> STR_18(20), STR_17(21), STR_16(21), STR_15(18), 
 39498 ;;		 -> STR_14(24), STR_13(24), STR_12(21), STR_11(21), 
 39499 ;;		 -> STR_10(21), STR_9(16), STR_8(17), STR_6(15), 
 39500 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 39501 ;;  ap              2  [STACK] PTR PTR void 
 39502 ;;		 -> ap(2), ap(2), 
 39503 ;; Auto vars:     Size  Location     Type
 39504 ;;  cfmt            2  [STACK] PTR unsigned char 
 39505 ;;		 -> STR_68(3), STR_67(3), STR_66(19), STR_65(19), 
 39506 ;;		 -> STR_64(19), STR_63(19), STR_62(25), STR_61(26), 
 39507 ;;		 -> STR_60(21), STR_59(22), STR_58(21), STR_57(24), 
 39508 ;;		 -> STR_56(19), STR_55(19), STR_54(20), STR_53(18), 
 39509 ;;		 -> STR_52(20), STR_51(18), STR_50(20), STR_49(18), 
 39510 ;;		 -> STR_48(20), STR_47(22), STR_46(24), STR_45(15), 
 39511 ;;		 -> STR_44(15), STR_43(15), STR_42(10), STR_41(10), 
 39512 ;;		 -> STR_40(19), STR_39(19), STR_36(21), STR_35(26), 
 39513 ;;		 -> STR_34(26), STR_33(20), msg99(56), msg2(86), 
 39514 ;;		 -> msg1(88), msg0(89), STR_28(3), STR_27(3), 
 39515 ;;		 -> STR_26(3), STR_25(29), STR_24(26), STR_23(21), 
 39516 ;;		 -> STR_22(4), STR_21(19), STR_20(26), STR_19(21), 
 39517 ;;		 -> STR_18(20), STR_17(21), STR_16(21), STR_15(18), 
 39518 ;;		 -> STR_14(24), STR_13(24), STR_12(21), STR_11(21), 
 39519 ;;		 -> STR_10(21), STR_9(16), STR_8(17), STR_6(15), 
 39520 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 39521 ;; Return value:  Size  Location     Type
 39522 ;;                  2  [STACK] int 
 39523 ;; Registers used:
 39524 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 39525 ;; Tracked objects:
 39526 ;;		On entry : 0/3B
 39527 ;;		On exit  : 3F/1
 39528 ;;		Unchanged: 0/0
 39529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39534 ;;Total ram usage:        0 bytes
 39535 ;; Hardware stack levels used: 1
 39536 ;; Hardware stack levels required when called: 10
 39537 ;; This function calls:
 39538 ;;		_vfpfcnvrt
 39539 ;; This function is called by:
 39540 ;;		_sprintf
 39541 ;;		_printf
 39542 ;; This function uses a reentrant model
 39543 ;;
 39544                           
 39545                           	psect	text95
 39546   016AEE                     __ptext95:
 39547                           	callstack 0
 39548   016AEE                     _vfprintf:
 39549                           	callstack 0
 39550                           
 39551                           ; BSR set to: 1
 39552                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39553   016AEE  52E6               	movf	postinc1,f,c
 39554   016AF0  52E6               	movf	postinc1,f,c
 39555                           
 39556                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1817: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1
      +                          818: {;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1820:     char *cfmt;;/
      +                          opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1822:     cfmt = (char *)fmt;
 39557                           ;stkvar	_fmt @ sp[(-2)+-4]
 39558                           
 39559                           ;incstack = 0
 39560   016AF2  0EFA               	movlw	-6
 39561   016AF4  006F FF8C  F02D    	movff	plusw1,btemp+10
 39562   016AFA  0EFB               	movlw	-5
 39563   016AFC  006F FF8C  F02E    	movff	plusw1,btemp+11
 39564                           
 39565                           ;stkvar	_cfmt @ sp[(-2)+0]
 39566   016B02  0EFF               	movlw	-1
 39567   016B04  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 39568   016B0A  0EFE               	movlw	-2
 39569   016B0C  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 39570                           
 39571                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1824:     nout = 0;
 39572   016B12  0101               	movlb	1	; () banked
 39573   016B14  6BBF               	clrf	_nout& (0+255),b
 39574   016B16  6BC0               	clrf	(_nout+1)& (0+255),b
 39575                           
 39576                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1826:     while (*cfmt) {
 39577   016B18  D021               	goto	l12120
 39578   016B1A                     l12118:
 39579                           
 39580                           ; BSR set to: 1
 39581                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1828:         nout +=
 39582                           ;stkvar	_ap @ sp[(-2)+-6]
 39583   016B1A  0EF8               	movlw	-8
 39584   016B1C  006F FF8F FFE6     	movff	plusw1,postinc1
 39585   016B22  006F FF8F FFE6     	movff	plusw1,postinc1
 39586                           
 39587                           ;stkvar	_cfmt @ sp[(-4)+0]
 39588   016B28  0EFC               	movlw	252
 39589   016B2A  24E1               	addwf	fsr1l,w,c
 39590   016B2C  6E23               	movwf	btemp^0,c
 39591   016B2E  0EFF               	movlw	255
 39592   016B30  20E2               	addwfc	fsr1h,w,c
 39593   016B32  6E24               	movwf	(btemp+1)^0,c
 39594   016B34  0060  F08F  FFE6   	movff	btemp,postinc1
 39595   016B3A  0060  F093  FFE6   	movff	btemp+1,postinc1
 39596                           
 39597                           ;stkvar	_fp @ sp[(-6)+-2]
 39598   016B40  0EF8               	movlw	-8
 39599   016B42  006F FF8F FFE6     	movff	plusw1,postinc1
 39600   016B48  006F FF8F FFE6     	movff	plusw1,postinc1
 39601   016B4E  EC00  F080         	call	_vfpfcnvrt	;wreg free
 39602   016B52  5023               	movf	btemp^0,w,c
 39603   016B54  0101               	movlb	1	; () banked
 39604   016B56  27BF               	addwf	_nout& (0+255),f,b
 39605   016B58  5024               	movf	(btemp+1)^0,w,c
 39606   016B5A  23C0               	addwfc	(_nout+1)& (0+255),f,b
 39607   016B5C                     l12120:
 39608                           
 39609                           ; BSR set to: 1
 39610                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1826:     while (*cfmt) {
 39611                           ;stkvar	_cfmt @ sp[(-2)+0]
 39612   016B5C  50E1               	movf	fsr1l,w,c
 39613   016B5E  0FFE               	addlw	-2
 39614   016B60  6ED9               	movwf	fsr2l,c
 39615   016B62  50E2               	movf	fsr1h,w,c
 39616   016B64  6EDA               	movwf	fsr2h,c
 39617   016B66  0EFF               	movlw	255
 39618   016B68  22DA               	addwfc	fsr2h,f,c
 39619   016B6A  006F FF7B FFF6     	movff	postinc2,tblptrl
 39620   016B70  006F FF77 FFF7     	movff	postdec2,tblptrh
 39621   016B76                     	if	0	;tblptru may be non-zero
 39622   016B76                     	endif
 39623   016B76                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 39624   016B76  0E00               	movlw	low (__pmediumconst shr (0+16))
 39625   016B78  6EF8               	movwf	tblptru,c
 39626   016B7A                     	endif
 39627   016B7A  0008               	tblrd		*
 39628   016B7C  50F5               	movf	tablat,w,c
 39629   016B7E  0900               	iorlw	0
 39630   016B80  A4D8               	btfss	status,2,c
 39631   016B82  D7CB               	goto	l12118
 39632                           
 39633                           ; BSR set to: 1
 39634                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1835:  return 0;
 39635   016B84  0E00               	movlw	0
 39636   016B86  6E23               	movwf	btemp^0,c
 39637   016B88  0E00               	movlw	0
 39638   016B8A  6E24               	movwf	(btemp+1)^0,c
 39639                           
 39640                           ; BSR set to: 1
 39641                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 39642   016B8C  0EF8               	movlw	248
 39643   016B8E  26E1               	addwf	fsr1l,f,c
 39644   016B90  0EFF               	movlw	255
 39645   016B92  22E2               	addwfc	fsr1h,f,c
 39646   016B94  0012               	return		;funcret
 39647   016B96                     __end_of_vfprintf:
 39648                           	callstack 0
 39649                           
 39650 ;; *************** function _vfpfcnvrt *****************
 39651 ;; Defined at:
 39652 ;;		line 1177 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c"
 39653 ;; Parameters:    Size  Location     Type
 39654 ;;  fp              2  [STACK] PTR struct _IO_FILE
 39655 ;;		 -> f(11), NULL(0), 
 39656 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 39657 ;;		 -> cfmt(2), 
 39658 ;;  ap              2  [STACK] PTR PTR void 
 39659 ;;		 -> ap(2), ap(2), 
 39660 ;; Auto vars:     Size  Location     Type
 39661 ;;  convarg         4  [STACK] struct .
 39662 ;;  cp              2  [STACK] PTR unsigned char 
 39663 ;;		 -> STR_68(3), STR_67(3), STR_66(19), STR_65(19), 
 39664 ;;		 -> STR_64(19), STR_63(19), STR_62(25), STR_61(26), 
 39665 ;;		 -> STR_60(21), STR_59(22), STR_58(21), STR_57(24), 
 39666 ;;		 -> STR_56(19), STR_55(19), STR_54(20), STR_53(18), 
 39667 ;;		 -> STR_52(20), STR_51(18), STR_50(20), STR_49(18), 
 39668 ;;		 -> STR_48(20), STR_47(22), STR_46(24), STR_45(15), 
 39669 ;;		 -> STR_44(15), STR_43(15), STR_42(10), STR_41(10), 
 39670 ;;		 -> STR_40(19), STR_39(19), STR_36(21), STR_35(26), 
 39671 ;;		 -> STR_34(26), STR_33(20), msg99(56), msg2(86), 
 39672 ;;		 -> msg1(88), msg0(89), STR_28(3), STR_27(3), 
 39673 ;;		 -> STR_26(3), STR_25(29), STR_24(26), STR_23(21), 
 39674 ;;		 -> STR_22(4), STR_21(19), STR_20(26), STR_19(21), 
 39675 ;;		 -> STR_18(20), STR_17(21), STR_16(21), STR_15(18), 
 39676 ;;		 -> STR_14(24), STR_13(24), STR_12(21), STR_11(21), 
 39677 ;;		 -> STR_10(21), STR_9(16), STR_8(17), STR_6(15), 
 39678 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 39679 ;;  c               1  [STACK] unsigned char 
 39680 ;;  done            1  [STACK] _Bool 
 39681 ;; Return value:  Size  Location     Type
 39682 ;;                  2  [STACK] int 
 39683 ;; Registers used:
 39684 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 39685 ;; Tracked objects:
 39686 ;;		On entry : 0/1
 39687 ;;		On exit  : 0/0
 39688 ;;		Unchanged: 0/0
 39689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39694 ;;Total ram usage:        0 bytes
 39695 ;; Hardware stack levels used: 1
 39696 ;; Hardware stack levels required when called: 9
 39697 ;; This function calls:
 39698 ;;		_ctoa
 39699 ;;		_dtoa
 39700 ;;		_fputc
 39701 ;;		_otoa
 39702 ;;		_read_prec_or_width
 39703 ;;		_stoa
 39704 ;;		_utoa
 39705 ;;		_xtoa
 39706 ;; This function is called by:
 39707 ;;		_vfprintf
 39708 ;; This function uses a reentrant model
 39709 ;;
 39710                           
 39711                           	psect	text96
 39712   010000                     __ptext96:
 39713                           	callstack 0
 39714   010000                     _vfpfcnvrt:
 39715                           	callstack 0
 39716                           
 39717                           ; BSR set to: 1
 39718                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39719   010000  0E08               	movlw	8
 39720   010002  26E1               	addwf	fsr1l,f,c
 39721   010004  0E00               	movlw	0
 39722   010006  22E2               	addwfc	fsr1h,f,c
 39723                           
 39724                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1177: vfpfcnvrt(FILE *fp, cha
      +                          r *fmt[], va_list ap);/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1178: {;
      +                          /opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1179:     char c, *cp;;/opt/mi
      +                          crochip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1180:     _Bool done;;/opt/microchip/
      +                          xc8/v3.00/pic/sources/c99/common/doprnt.c: 1188:  } convarg;;/opt/microchip/xc8/v3.00/pi
      +                          c/sources/c99/common/doprnt.c: 1201:     if ((*fmt)[0] == '%') {
 39725                           ;stkvar	_fmt @ sp[(-8)+-4]
 39726                           
 39727                           ;incstack = 0
 39728   010008  0EF4               	movlw	-12
 39729   01000A  006F FF8F FFD9     	movff	plusw1,fsr2l
 39730   010010  0EF5               	movlw	-11
 39731   010012  006F FF8F FFDA     	movff	plusw1,fsr2h
 39732   010018  006F FF7B FFF6     	movff	postinc2,tblptrl
 39733   01001E  006F FF77 FFF7     	movff	postdec2,tblptrh
 39734   010024                     	if	0	;tblptru may be non-zero
 39735   010024                     	endif
 39736   010024                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 39737   010024  0E00               	movlw	low (__pmediumconst shr (0+16))
 39738   010026  6EF8               	movwf	tblptru,c
 39739   010028                     	endif
 39740   010028  0008               	tblrd		*
 39741   01002A  50F5               	movf	tablat,w,c
 39742   01002C  0A25               	xorlw	37
 39743   01002E  A4D8               	btfss	status,2,c
 39744   010030  EF8B  F086         	goto	l12098
 39745                           
 39746                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1202:         ++*fmt;
 39747                           ;stkvar	_fmt @ sp[(-8)+-4]
 39748   010034  0EF4               	movlw	-12
 39749   010036  006F FF8F FFD9     	movff	plusw1,fsr2l
 39750   01003C  0EF5               	movlw	-11
 39751   01003E  006F FF8F FFDA     	movff	plusw1,fsr2h
 39752   010044  2ADE               	incf	postinc2,f,c
 39753   010046  0E00               	movlw	0
 39754   010048  22DD               	addwfc	postdec2,f,c
 39755                           
 39756                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1204:         flags = width =
      +                           0;
 39757   01004A  0E00               	movlw	0
 39758   01004C  0101               	movlb	1	; () banked
 39759   01004E  6FC2               	movwf	(_width+1)& (0+255),b
 39760   010050  0E00               	movlw	0
 39761   010052  6FC1               	movwf	_width& (0+255),b
 39762   010054  C1C1  F1C5         	movff	_width,_flags
 39763                           
 39764                           ; BSR set to: 1
 39765                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1205:         prec = -1;
 39766   010058  69C3               	setf	_prec& (0+255),b
 39767   01005A  69C4               	setf	(_prec+1)& (0+255),b
 39768                           
 39769                           ; BSR set to: 1
 39770                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1209:         done = 0;
 39771                           ;stkvar	_done @ sp[(-8)+7]
 39772   01005C  0EFF               	movlw	-1
 39773   01005E  6AE3               	clrf	plusw1,c
 39774                           
 39775                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1210:         while (!done) {
 39776   010060  D040               	goto	l11906
 39777   010062                     l11880:
 39778                           
 39779                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1214:                     fla
      +                          gs |= (1 << 0);
 39780   010062  0101               	movlb	1	; () banked
 39781   010064  81C5               	bsf	_flags& (0+255),0,b
 39782   010066                     l11882:
 39783                           
 39784                           ; BSR set to: 1
 39785                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1215:                     ++*
      +                          fmt;
 39786                           ;stkvar	_fmt @ sp[(-8)+-4]
 39787   010066  0EF4               	movlw	-12
 39788   010068  006F FF8F FFD9     	movff	plusw1,fsr2l
 39789   01006E  0EF5               	movlw	-11
 39790   010070  006F FF8F FFDA     	movff	plusw1,fsr2h
 39791   010076  2ADE               	incf	postinc2,f,c
 39792   010078  0E00               	movlw	0
 39793   01007A  22DD               	addwfc	postdec2,f,c
 39794                           
 39795                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1216:                     bre
      +                          ak;
 39796   01007C  D032               	goto	l11906
 39797   01007E                     l11884:
 39798                           
 39799                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1220:                     fla
      +                          gs |= (1 << 1);
 39800   01007E  0101               	movlb	1	; () banked
 39801   010080  83C5               	bsf	_flags& (0+255),1,b
 39802   010082  D7F1               	goto	l11882
 39803   010084                     l11888:
 39804                           
 39805                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1226:                     fla
      +                          gs |= (1 << 2);
 39806   010084  0101               	movlb	1	; () banked
 39807   010086  85C5               	bsf	_flags& (0+255),2,b
 39808   010088  D7EE               	goto	l11882
 39809   01008A                     l11892:
 39810                           
 39811                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1232:                     fla
      +                          gs |= (1 << 3);
 39812   01008A  0101               	movlb	1	; () banked
 39813   01008C  87C5               	bsf	_flags& (0+255),3,b
 39814   01008E  D7EB               	goto	l11882
 39815   010090                     l11896:
 39816                           
 39817                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1238:                     fla
      +                          gs |= (1 << 4);
 39818   010090  0101               	movlb	1	; () banked
 39819   010092  89C5               	bsf	_flags& (0+255),4,b
 39820   010094  D7E8               	goto	l11882
 39821   010096                     l11900:
 39822                           
 39823                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1243:                     don
      +                          e = 1;
 39824                           ;stkvar	_done @ sp[(-8)+7]
 39825   010096  0EFF               	movlw	-1
 39826   010098  6AE3               	clrf	plusw1,c
 39827   01009A  2AE3               	incf	plusw1,f,c
 39828                           
 39829                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1244:                     bre
      +                          ak;
 39830   01009C  D022               	goto	l11906
 39831   01009E                     l11904:
 39832                           
 39833                           ;stkvar	_fmt @ sp[(-8)+-4]
 39834   01009E  0EF4               	movlw	-12
 39835   0100A0  006F FF8F FFD9     	movff	plusw1,fsr2l
 39836   0100A6  0EF5               	movlw	-11
 39837   0100A8  006F FF8F FFDA     	movff	plusw1,fsr2h
 39838   0100AE  006F FF7B FFF6     	movff	postinc2,tblptrl
 39839   0100B4  006F FF77 FFF7     	movff	postdec2,tblptrh
 39840   0100BA                     	if	0	;tblptru may be non-zero
 39841   0100BA                     	endif
 39842   0100BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 39843   0100BA  0E00               	movlw	low (__pmediumconst shr (0+16))
 39844   0100BC  6EF8               	movwf	tblptru,c
 39845   0100BE                     	endif
 39846   0100BE  0008               	tblrd		*
 39847   0100C0  50F5               	movf	tablat,w,c
 39848                           
 39849                           ; Switch size 1, requested type "simple"
 39850                           ; Number of cases is 5, Range of values is 32 to 48
 39851                           ; switch strategies available:
 39852                           ; Name         Instructions Cycles
 39853                           ; simple_byte           16     9 (average)
 39854                           ;	Chosen strategy is simple_byte
 39855   0100C2  0A20               	xorlw	32	; case 32
 39856   0100C4  B4D8               	btfsc	status,2,c
 39857   0100C6  D7E1               	goto	l11892
 39858   0100C8  0A03               	xorlw	3	; case 35
 39859   0100CA  B4D8               	btfsc	status,2,c
 39860   0100CC  D7E1               	goto	l11896
 39861   0100CE  0A08               	xorlw	8	; case 43
 39862   0100D0  B4D8               	btfsc	status,2,c
 39863   0100D2  D7D8               	goto	l11888
 39864   0100D4  0A06               	xorlw	6	; case 45
 39865   0100D6  B4D8               	btfsc	status,2,c
 39866   0100D8  D7C4               	goto	l11880
 39867   0100DA  0A1D               	xorlw	29	; case 48
 39868   0100DC  B4D8               	btfsc	status,2,c
 39869   0100DE  D7CF               	goto	l11884
 39870   0100E0  D7DA               	goto	l11900
 39871   0100E2                     l11906:
 39872                           
 39873                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1210:         while (!done) {
 39874                           ;stkvar	_done @ sp[(-8)+7]
 39875   0100E2  0EFF               	movlw	-1
 39876   0100E4  50E3               	movf	plusw1,w,c
 39877   0100E6  B4D8               	btfsc	status,2,c
 39878   0100E8  D7DA               	goto	l11904
 39879                           
 39880                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1248:         if (flags & (1 
      +                          << 0)) {
 39881   0100EA  0101               	movlb	1	; () banked
 39882   0100EC  B1C5               	btfsc	_flags& (0+255),0,b
 39883                           
 39884                           ; BSR set to: 1
 39885                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1249:             flags &= ~(
      +                          1 << 1);
 39886   0100EE  93C5               	bcf	_flags& (0+255),1,b
 39887                           
 39888                           ; BSR set to: 1
 39889                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1256:   width = read_prec_or_
      +                          width(fmt, ap);
 39890                           ;stkvar	_ap @ sp[(-8)+-6]
 39891   0100F0  0EF2               	movlw	-14
 39892   0100F2  006F FF8F FFE6     	movff	plusw1,postinc1
 39893   0100F8  006F FF8F FFE6     	movff	plusw1,postinc1
 39894                           
 39895                           ;stkvar	_fmt @ sp[(-10)+-4]
 39896   0100FE  0EF2               	movlw	-14
 39897   010100  006F FF8F FFE6     	movff	plusw1,postinc1
 39898   010106  006F FF8F FFE6     	movff	plusw1,postinc1
 39899   01010C  ECA0  F0AC         	call	_read_prec_or_width	;wreg free
 39900   010110  C023  F1C1         	movff	btemp,_width
 39901   010114  C024  F1C2         	movff	btemp+1,_width+1
 39902                           
 39903                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1257:   if (width < 0) {
 39904   010118  0101               	movlb	1	; () banked
 39905   01011A  AFC2               	btfss	(_width+1)& (0+255),7,b
 39906   01011C  D005               	goto	l11916
 39907                           
 39908                           ; BSR set to: 1
 39909                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1258:    flags |= (1 << 0);
 39910   01011E  81C5               	bsf	_flags& (0+255),0,b
 39911                           
 39912                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1259:    width = -width;
 39913   010120  6DC1               	negf	_width& (0+255),b
 39914   010122  1FC2               	comf	(_width+1)& (0+255),f,b
 39915   010124  B0D8               	btfsc	status,0,c
 39916   010126  2BC2               	incf	(_width+1)& (0+255),f,b
 39917   010128                     l11916:
 39918                           
 39919                           ; BSR set to: 1
 39920                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1265:         if ((*fmt)[0] =
      +                          = '.') {
 39921                           ;stkvar	_fmt @ sp[(-8)+-4]
 39922   010128  0EF4               	movlw	-12
 39923   01012A  006F FF8F FFD9     	movff	plusw1,fsr2l
 39924   010130  0EF5               	movlw	-11
 39925   010132  006F FF8F FFDA     	movff	plusw1,fsr2h
 39926   010138  006F FF7B FFF6     	movff	postinc2,tblptrl
 39927   01013E  006F FF77 FFF7     	movff	postdec2,tblptrh
 39928   010144                     	if	0	;tblptru may be non-zero
 39929   010144                     	endif
 39930   010144                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 39931   010144  0E00               	movlw	low (__pmediumconst shr (0+16))
 39932   010146  6EF8               	movwf	tblptru,c
 39933   010148                     	endif
 39934   010148  0008               	tblrd		*
 39935   01014A  50F5               	movf	tablat,w,c
 39936   01014C  0A2E               	xorlw	46
 39937   01014E  A4D8               	btfss	status,2,c
 39938   010150  D01F               	goto	l11922
 39939                           
 39940                           ; BSR set to: 1
 39941                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1266:             ++*fmt;
 39942                           ;stkvar	_fmt @ sp[(-8)+-4]
 39943   010152  0EF4               	movlw	-12
 39944   010154  006F FF8F FFD9     	movff	plusw1,fsr2l
 39945   01015A  0EF5               	movlw	-11
 39946   01015C  006F FF8F FFDA     	movff	plusw1,fsr2h
 39947   010162  2ADE               	incf	postinc2,f,c
 39948   010164  0E00               	movlw	0
 39949   010166  22DD               	addwfc	postdec2,f,c
 39950                           
 39951                           ; BSR set to: 1
 39952                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1267:    prec = read_prec_or_
      +                          width(fmt, ap);
 39953                           ;stkvar	_ap @ sp[(-8)+-6]
 39954   010168  0EF2               	movlw	-14
 39955   01016A  006F FF8F FFE6     	movff	plusw1,postinc1
 39956   010170  006F FF8F FFE6     	movff	plusw1,postinc1
 39957                           
 39958                           ;stkvar	_fmt @ sp[(-10)+-4]
 39959   010176  0EF2               	movlw	-14
 39960   010178  006F FF8F FFE6     	movff	plusw1,postinc1
 39961   01017E  006F FF8F FFE6     	movff	plusw1,postinc1
 39962   010184  ECA0  F0AC         	call	_read_prec_or_width	;wreg free
 39963   010188  C023  F1C3         	movff	btemp,_prec
 39964   01018C  C024  F1C4         	movff	btemp+1,_prec+1
 39965   010190                     l11922:
 39966                           
 39967                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1273:         if ((*fmt)[0] =
      +                          = 'c') {
 39968                           ;stkvar	_fmt @ sp[(-8)+-4]
 39969   010190  0EF4               	movlw	-12
 39970   010192  006F FF8F FFD9     	movff	plusw1,fsr2l
 39971   010198  0EF5               	movlw	-11
 39972   01019A  006F FF8F FFDA     	movff	plusw1,fsr2h
 39973   0101A0  006F FF7B FFF6     	movff	postinc2,tblptrl
 39974   0101A6  006F FF77 FFF7     	movff	postdec2,tblptrh
 39975   0101AC                     	if	0	;tblptru may be non-zero
 39976   0101AC                     	endif
 39977   0101AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 39978   0101AC  0E00               	movlw	low (__pmediumconst shr (0+16))
 39979   0101AE  6EF8               	movwf	tblptru,c
 39980   0101B0                     	endif
 39981   0101B0  0008               	tblrd		*
 39982   0101B2  50F5               	movf	tablat,w,c
 39983   0101B4  0A63               	xorlw	99
 39984   0101B6  A4D8               	btfss	status,2,c
 39985   0101B8  D037               	goto	l11932
 39986                           
 39987                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1274:             ++*fmt;
 39988                           ;stkvar	_fmt @ sp[(-8)+-4]
 39989   0101BA  0EF4               	movlw	-12
 39990   0101BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 39991   0101C2  0EF5               	movlw	-11
 39992   0101C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 39993   0101CA  2ADE               	incf	postinc2,f,c
 39994   0101CC  0E00               	movlw	0
 39995   0101CE  22DD               	addwfc	postdec2,f,c
 39996                           
 39997                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1275:             c = (unsign
      +                          ed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 39998                           ;stkvar	_ap @ sp[(-8)+-6]
 39999   0101D0  0EF2               	movlw	-14
 40000   0101D2  006F FF8F FFD9     	movff	plusw1,fsr2l
 40001   0101D8  0EF3               	movlw	-13
 40002   0101DA  006F FF8F FFDA     	movff	plusw1,fsr2h
 40003   0101E0  0E02               	movlw	2
 40004   0101E2  5EDE               	subwf	postinc2,f,c
 40005   0101E4  0E00               	movlw	0
 40006   0101E6  5ADD               	subwfb	postdec2,f,c
 40007   0101E8  006F FF78  F02D    	movff	postinc2,btemp+10
 40008   0101EE  006F FF74  F02E    	movff	postdec2,btemp+11
 40009   0101F4  0060  F0B7  FFD9   	movff	btemp+10,fsr2l
 40010   0101FA  0060  F0BB  FFDA   	movff	btemp+11,fsr2h
 40011   010200  50DF               	movf	indf2,w,c
 40012   010202  6E2E               	movwf	(btemp+11)^0,c
 40013                           
 40014                           ;stkvar	_c @ sp[(-8)+6]
 40015   010204  0EFE               	movlw	-2
 40016   010206  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 40017                           
 40018                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1284:             return (int
      +                          ) ctoa(fp, c);
 40019                           ;stkvar	_c @ sp[(-8)+6]
 40020   01020C  0EFE               	movlw	-2
 40021   01020E  50E3               	movf	plusw1,w,c
 40022   010210  6EE6               	movwf	postinc1,c
 40023                           
 40024                           ;stkvar	_fp @ sp[(-9)+-2]
 40025   010212  0EF5               	movlw	-11
 40026   010214  006F FF8F FFE6     	movff	plusw1,postinc1
 40027   01021A  006F FF8F FFE6     	movff	plusw1,postinc1
 40028   010220  EC01  F0AF         	call	_ctoa	;wreg free
 40029   010224  EFB5  F086         	goto	l3298
 40030   010228                     l11932:
 40031                           
 40032                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1291:   cp = *fmt;
 40033                           ;stkvar	_fmt @ sp[(-8)+-4]
 40034   010228  0EF4               	movlw	-12
 40035   01022A  006F FF8F FFD9     	movff	plusw1,fsr2l
 40036   010230  0EF5               	movlw	-11
 40037   010232  006F FF8F FFDA     	movff	plusw1,fsr2h
 40038   010238  006F FF78  F02D    	movff	postinc2,btemp+10
 40039   01023E  006F FF74  F02E    	movff	postdec2,btemp+11
 40040                           
 40041                           ;stkvar	_cp @ sp[(-8)+4]
 40042   010244  0EFD               	movlw	-3
 40043   010246  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 40044   01024C  0EFC               	movlw	-4
 40045   01024E  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 40046                           
 40047                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1293:   c = *cp;
 40048                           ;stkvar	_cp @ sp[(-8)+4]
 40049   010254  50E1               	movf	fsr1l,w,c
 40050   010256  0FFC               	addlw	-4
 40051   010258  6ED9               	movwf	fsr2l,c
 40052   01025A  50E2               	movf	fsr1h,w,c
 40053   01025C  6EDA               	movwf	fsr2h,c
 40054   01025E  0EFF               	movlw	255
 40055   010260  22DA               	addwfc	fsr2h,f,c
 40056   010262  006F FF7B FFF6     	movff	postinc2,tblptrl
 40057   010268  006F FF77 FFF7     	movff	postdec2,tblptrh
 40058   01026E                     	if	0	;tblptru may be non-zero
 40059   01026E                     	endif
 40060   01026E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40061   01026E  0E00               	movlw	low (__pmediumconst shr (0+16))
 40062   010270  6EF8               	movwf	tblptru,c
 40063   010272                     	endif
 40064                           
 40065                           ;stkvar	_c @ sp[(-8)+6]
 40066   010272  0008               	tblrd		*
 40067   010274  0EFE               	movlw	-2
 40068   010276  006F FFD7 FFE3     	movff	tablat,plusw1
 40069                           
 40070                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1294:   switch(c) {
 40071   01027C  D045               	goto	l11954
 40072   01027E                     l11936:
 40073                           
 40074                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1298:     cp++;
 40075                           ;stkvar	_cp @ sp[(-8)+4]
 40076   01027E  0EFC               	movlw	-4
 40077   010280  50E3               	movf	plusw1,w,c
 40078   010282  0F01               	addlw	1
 40079   010284  6E23               	movwf	btemp^0,c
 40080   010286  0EFC               	movlw	-4
 40081   010288  0060  F08F  FFE3   	movff	btemp,plusw1
 40082   01028E  6A23               	clrf	btemp^0,c
 40083   010290  0EFD               	movlw	-3
 40084   010292  50E3               	movf	plusw1,w,c
 40085   010294  2023               	addwfc	btemp^0,w,c
 40086   010296  6E23               	movwf	btemp^0,c
 40087   010298  0EFD               	movlw	-3
 40088   01029A  0060  F08F  FFE3   	movff	btemp,plusw1
 40089                           
 40090                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1300:     if (*cp == 'h') {
 40091                           ;stkvar	_cp @ sp[(-8)+4]
 40092   0102A0  50E1               	movf	fsr1l,w,c
 40093   0102A2  0FFC               	addlw	-4
 40094   0102A4  6ED9               	movwf	fsr2l,c
 40095   0102A6  50E2               	movf	fsr1h,w,c
 40096   0102A8  6EDA               	movwf	fsr2h,c
 40097   0102AA  0EFF               	movlw	255
 40098   0102AC  22DA               	addwfc	fsr2h,f,c
 40099   0102AE  006F FF7B FFF6     	movff	postinc2,tblptrl
 40100   0102B4  006F FF77 FFF7     	movff	postdec2,tblptrh
 40101   0102BA                     	if	0	;tblptru may be non-zero
 40102   0102BA                     	endif
 40103   0102BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40104   0102BA  0E00               	movlw	low (__pmediumconst shr (0+16))
 40105   0102BC  6EF8               	movwf	tblptru,c
 40106   0102BE                     	endif
 40107   0102BE  0008               	tblrd		*
 40108   0102C0  50F5               	movf	tablat,w,c
 40109   0102C2  0A68               	xorlw	104
 40110   0102C4  A4D8               	btfss	status,2,c
 40111   0102C6  D044               	goto	l11956
 40112                           
 40113                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1301:      c = 'H';
 40114                           ;stkvar	_c @ sp[(-8)+6]
 40115   0102C8  0EFE               	movlw	-2
 40116   0102CA  6AE3               	clrf	plusw1,c
 40117   0102CC  86E3               	bsf	plusw1,3,c
 40118   0102CE  8CE3               	bsf	plusw1,6,c	;indir
 40119   0102D0                     l11942:
 40120                           
 40121                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1302:      cp++;
 40122                           ;stkvar	_cp @ sp[(-8)+4]
 40123   0102D0  0EFC               	movlw	-4
 40124   0102D2  50E3               	movf	plusw1,w,c
 40125   0102D4  0F01               	addlw	1
 40126   0102D6  6E23               	movwf	btemp^0,c
 40127   0102D8  0EFC               	movlw	-4
 40128   0102DA  0060  F08F  FFE3   	movff	btemp,plusw1
 40129   0102E0  6A23               	clrf	btemp^0,c
 40130   0102E2  0EFD               	movlw	-3
 40131   0102E4  50E3               	movf	plusw1,w,c
 40132   0102E6  2023               	addwfc	btemp^0,w,c
 40133   0102E8  6E23               	movwf	btemp^0,c
 40134   0102EA  0EFD               	movlw	-3
 40135   0102EC  0060  F08F  FFE3   	movff	btemp,plusw1
 40136   0102F2  D02E               	goto	l11956
 40137   0102F4                     l3309:
 40138                           
 40139                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1350:     c = 'i';
 40140   0102F4  0E69               	movlw	105
 40141   0102F6  6E2E               	movwf	(btemp+11)^0,c
 40142                           
 40143                           ;stkvar	_c @ sp[(-8)+6]
 40144   0102F8  0EFE               	movlw	-2
 40145   0102FA  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 40146                           
 40147                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1351:     break;
 40148   010300  D027               	goto	l11956
 40149   010302                     l11950:
 40150                           
 40151                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1353:     c = 0;
 40152                           ;stkvar	_c @ sp[(-8)+6]
 40153   010302  0EFE               	movlw	-2
 40154   010304  6AE3               	clrf	plusw1,c
 40155                           
 40156                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1354:     break;
 40157   010306  D024               	goto	l11956
 40158   010308                     l11954:
 40159                           
 40160                           ;stkvar	_c @ sp[(-8)+6]
 40161   010308  0EFE               	movlw	-2
 40162   01030A  50E3               	movf	plusw1,w,c
 40163                           
 40164                           ; Switch size 1, requested type "simple"
 40165                           ; Number of cases is 11, Range of values is 88 to 122
 40166                           ; switch strategies available:
 40167                           ; Name         Instructions Cycles
 40168                           ; simple_byte           34    18 (average)
 40169                           ;	Chosen strategy is simple_byte
 40170   01030C  0A58               	xorlw	88	; case 88
 40171   01030E  B4D8               	btfsc	status,2,c
 40172   010310  D7F1               	goto	l3309
 40173   010312  0A3C               	xorlw	60	; case 100
 40174   010314  B4D8               	btfsc	status,2,c
 40175   010316  D7EE               	goto	l3309
 40176   010318  0A0C               	xorlw	12	; case 104
 40177   01031A  B4D8               	btfsc	status,2,c
 40178   01031C  D7B0               	goto	l11936
 40179   01031E  0A01               	xorlw	1	; case 105
 40180   010320  B4D8               	btfsc	status,2,c
 40181   010322  D7E8               	goto	l3309
 40182   010324  0A05               	xorlw	5	; case 108
 40183   010326  B4D8               	btfsc	status,2,c
 40184   010328  D7D3               	goto	l11942
 40185   01032A  0A02               	xorlw	2	; case 110
 40186   01032C  B4D8               	btfsc	status,2,c
 40187   01032E  D7E2               	goto	l3309
 40188   010330  0A01               	xorlw	1	; case 111
 40189   010332  B4D8               	btfsc	status,2,c
 40190   010334  D7DF               	goto	l3309
 40191   010336  0A1B               	xorlw	27	; case 116
 40192   010338  B4D8               	btfsc	status,2,c
 40193   01033A  D7CA               	goto	l11942
 40194   01033C  0A01               	xorlw	1	; case 117
 40195   01033E  B4D8               	btfsc	status,2,c
 40196   010340  D7D9               	goto	l3309
 40197   010342  0A0D               	xorlw	13	; case 120
 40198   010344  B4D8               	btfsc	status,2,c
 40199   010346  D7D6               	goto	l3309
 40200   010348  0A02               	xorlw	2	; case 122
 40201   01034A  B4D8               	btfsc	status,2,c
 40202   01034C  D7C1               	goto	l11942
 40203   01034E  D7D9               	goto	l11950
 40204   010350                     l11956:
 40205                           
 40206                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1361:   if (*cp == 'd' || *cp
      +                           == 'i') {
 40207                           ;stkvar	_cp @ sp[(-8)+4]
 40208   010350  50E1               	movf	fsr1l,w,c
 40209   010352  0FFC               	addlw	-4
 40210   010354  6ED9               	movwf	fsr2l,c
 40211   010356  50E2               	movf	fsr1h,w,c
 40212   010358  6EDA               	movwf	fsr2h,c
 40213   01035A  0EFF               	movlw	255
 40214   01035C  22DA               	addwfc	fsr2h,f,c
 40215   01035E  006F FF7B FFF6     	movff	postinc2,tblptrl
 40216   010364  006F FF77 FFF7     	movff	postdec2,tblptrh
 40217   01036A                     	if	0	;tblptru may be non-zero
 40218   01036A                     	endif
 40219   01036A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40220   01036A  0E00               	movlw	low (__pmediumconst shr (0+16))
 40221   01036C  6EF8               	movwf	tblptru,c
 40222   01036E                     	endif
 40223   01036E  0008               	tblrd		*
 40224   010370  50F5               	movf	tablat,w,c
 40225   010372  0A64               	xorlw	100
 40226   010374  B4D8               	btfsc	status,2,c
 40227   010376  D0D2               	goto	l11974
 40228                           
 40229                           ;stkvar	_cp @ sp[(-8)+4]
 40230   010378  50E1               	movf	fsr1l,w,c
 40231   01037A  0FFC               	addlw	-4
 40232   01037C  6ED9               	movwf	fsr2l,c
 40233   01037E  50E2               	movf	fsr1h,w,c
 40234   010380  6EDA               	movwf	fsr2h,c
 40235   010382  0EFF               	movlw	255
 40236   010384  22DA               	addwfc	fsr2h,f,c
 40237   010386  006F FF7B FFF6     	movff	postinc2,tblptrl
 40238   01038C  006F FF77 FFF7     	movff	postdec2,tblptrh
 40239   010392                     	if	0	;tblptru may be non-zero
 40240   010392                     	endif
 40241   010392                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40242   010392  0E00               	movlw	low (__pmediumconst shr (0+16))
 40243   010394  6EF8               	movwf	tblptru,c
 40244   010396                     	endif
 40245   010396  0008               	tblrd		*
 40246   010398  50F5               	movf	tablat,w,c
 40247   01039A  0A69               	xorlw	105
 40248   01039C  B4D8               	btfsc	status,2,c
 40249   01039E  D0BE               	goto	l11974
 40250   0103A0  D100               	goto	l11982
 40251   0103A2                     l11964:
 40252                           
 40253                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1374:      convarg.sint = (vf
      +                          pf_sint_t)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 40254                           ;stkvar	_ap @ sp[(-8)+-6]
 40255   0103A2  0EF2               	movlw	-14
 40256   0103A4  006F FF8F FFD9     	movff	plusw1,fsr2l
 40257   0103AA  0EF3               	movlw	-13
 40258   0103AC  006F FF8F FFDA     	movff	plusw1,fsr2h
 40259   0103B2  0E02               	movlw	2
 40260   0103B4  5EDE               	subwf	postinc2,f,c
 40261   0103B6  0E00               	movlw	0
 40262   0103B8  5ADD               	subwfb	postdec2,f,c
 40263   0103BA  006F FF78  F02D    	movff	postinc2,btemp+10
 40264   0103C0  006F FF74  F02E    	movff	postdec2,btemp+11
 40265   0103C6  0060  F0B7  FFD9   	movff	btemp+10,fsr2l
 40266   0103CC  0060  F0BB  FFDA   	movff	btemp+11,fsr2h
 40267   0103D2  50DF               	movf	indf2,w,c
 40268   0103D4  6E2B               	movwf	(btemp+8)^0,c
 40269   0103D6  0E00               	movlw	0
 40270   0103D8  BE2B               	btfsc	(btemp+8)^0,7,c
 40271   0103DA  0EFF               	movlw	255
 40272   0103DC  6E2C               	movwf	(btemp+9)^0,c
 40273   0103DE  6E2D               	movwf	(btemp+10)^0,c
 40274   0103E0  6E2E               	movwf	(btemp+11)^0,c
 40275   0103E2  D024               	goto	L31
 40276   0103E4                     l11966:
 40277                           
 40278                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1379:      convarg.sint = (vf
      +                          pf_sint_t)(*(long *)__va_arg(*(long **)ap, (long)0));
 40279                           ;stkvar	_ap @ sp[(-8)+-6]
 40280   0103E4  0EF2               	movlw	-14
 40281   0103E6  006F FF8F FFD9     	movff	plusw1,fsr2l
 40282   0103EC  0EF3               	movlw	-13
 40283   0103EE  006F FF8F FFDA     	movff	plusw1,fsr2h
 40284   0103F4  0E04               	movlw	4
 40285   0103F6  5EDE               	subwf	postinc2,f,c
 40286   0103F8  0E00               	movlw	0
 40287   0103FA  5ADD               	subwfb	postdec2,f,c
 40288   0103FC  006F FF78  F02D    	movff	postinc2,btemp+10
 40289   010402  006F FF74  F02E    	movff	postdec2,btemp+11
 40290   010408  0060  F0B7  FFD9   	movff	btemp+10,fsr2l
 40291   01040E  0060  F0BB  FFDA   	movff	btemp+11,fsr2h
 40292   010414  006F FF78  F02B    	movff	postinc2,btemp+8
 40293   01041A  006F FF78  F02C    	movff	postinc2,btemp+9
 40294   010420  006F FF78  F02D    	movff	postinc2,btemp+10
 40295   010426  006F FF78  F02E    	movff	postinc2,btemp+11
 40296   01042C                     L31:
 40297                           
 40298                           ;stkvar	_convarg @ sp[(-8)+0]
 40299   01042C  0EF8               	movlw	-8
 40300   01042E  0060  F0AF  FFE3   	movff	btemp+8,plusw1
 40301   010434  0EF9               	movlw	-7
 40302   010436  0060  F0B3  FFE3   	movff	btemp+9,plusw1
 40303   01043C  0EFA               	movlw	-6
 40304   01043E  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 40305   010444  0EFB               	movlw	-5
 40306   010446  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 40307                           
 40308                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1380:      break;
 40309   01044C  D07B               	goto	l11976
 40310   01044E                     l11968:
 40311                           
 40312                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1389:      convarg.sint = (vf
      +                          pf_sint_t)(*(ptrdiff_t *)__va_arg(*(ptrdiff_t **)ap, (ptrdiff_t)0));
 40313                           ;stkvar	_ap @ sp[(-8)+-6]
 40314   01044E  0EF2               	movlw	-14
 40315   010450  006F FF8F FFD9     	movff	plusw1,fsr2l
 40316   010456  0EF3               	movlw	-13
 40317   010458  006F FF8F FFDA     	movff	plusw1,fsr2h
 40318   01045E  0E02               	movlw	2
 40319   010460  5EDE               	subwf	postinc2,f,c
 40320   010462  0E00               	movlw	0
 40321   010464  5ADD               	subwfb	postdec2,f,c
 40322   010466  006F FF78  F02D    	movff	postinc2,btemp+10
 40323   01046C  006F FF74  F02E    	movff	postdec2,btemp+11
 40324   010472  0060  F0B7  FFD9   	movff	btemp+10,fsr2l
 40325   010478  0060  F0BB  FFDA   	movff	btemp+11,fsr2h
 40326   01047E  006F FF78  F02D    	movff	postinc2,btemp+10
 40327   010484  006F FF74  F02E    	movff	postdec2,btemp+11
 40328                           
 40329                           ;stkvar	_convarg @ sp[(-8)+0]
 40330   01048A  0EF8               	movlw	-8
 40331   01048C  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 40332   010492  0EF9               	movlw	-7
 40333   010494  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 40334   01049A  6A23               	clrf	btemp^0,c
 40335   01049C  BEE3               	btfsc	plusw1,7,c
 40336   01049E  6823               	setf	btemp^0,c
 40337   0104A0  0EFA               	movlw	-6
 40338   0104A2  0060  F08F  FFE3   	movff	btemp,plusw1
 40339   0104A8  0EFB               	movlw	-5
 40340   0104AA  0060  F08F  FFE3   	movff	btemp,plusw1
 40341                           
 40342                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1390:      break;
 40343   0104B0  D049               	goto	l11976
 40344   0104B2                     l11970:
 40345                           
 40346                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1399:      convarg.sint = (vf
      +                          pf_sint_t)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 40347                           ;stkvar	_ap @ sp[(-8)+-6]
 40348   0104B2  0EF2               	movlw	-14
 40349   0104B4  006F FF8F FFD9     	movff	plusw1,fsr2l
 40350   0104BA  0EF3               	movlw	-13
 40351   0104BC  006F FF8F FFDA     	movff	plusw1,fsr2h
 40352   0104C2  0E02               	movlw	2
 40353   0104C4  5EDE               	subwf	postinc2,f,c
 40354   0104C6  0E00               	movlw	0
 40355   0104C8  5ADD               	subwfb	postdec2,f,c
 40356   0104CA  006F FF78  F02D    	movff	postinc2,btemp+10
 40357   0104D0  006F FF74  F02E    	movff	postdec2,btemp+11
 40358   0104D6  0060  F0B7  FFD9   	movff	btemp+10,fsr2l
 40359   0104DC  0060  F0BB  FFDA   	movff	btemp+11,fsr2h
 40360   0104E2  006F FF78  F02D    	movff	postinc2,btemp+10
 40361   0104E8  006F FF74  F02E    	movff	postdec2,btemp+11
 40362   0104EE  502D               	movf	(btemp+10)^0,w,c
 40363   0104F0  6E27               	movwf	(btemp+4)^0,c
 40364   0104F2  502E               	movf	(btemp+11)^0,w,c
 40365   0104F4  6E28               	movwf	(btemp+5)^0,c
 40366   0104F6  6A29               	clrf	(btemp+6)^0,c
 40367   0104F8  6A2A               	clrf	(btemp+7)^0,c
 40368                           
 40369                           ;stkvar	_convarg @ sp[(-8)+0]
 40370   0104FA  0EF8               	movlw	-8
 40371   0104FC  0060  F09F  FFE3   	movff	btemp+4,plusw1
 40372   010502  0EF9               	movlw	-7
 40373   010504  0060  F0A3  FFE3   	movff	btemp+5,plusw1
 40374   01050A  0EFA               	movlw	-6
 40375   01050C  0060  F0A7  FFE3   	movff	btemp+6,plusw1
 40376   010512  0EFB               	movlw	-5
 40377   010514  0060  F0AB  FFE3   	movff	btemp+7,plusw1
 40378                           
 40379                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1400:      break;
 40380   01051A  D014               	goto	l11976
 40381   01051C                     l11974:
 40382                           
 40383                           ;stkvar	_c @ sp[(-8)+6]
 40384   01051C  0EFE               	movlw	-2
 40385   01051E  50E3               	movf	plusw1,w,c
 40386                           
 40387                           ; Switch size 1, requested type "simple"
 40388                           ; Number of cases is 6, Range of values is 72 to 122
 40389                           ; switch strategies available:
 40390                           ; Name         Instructions Cycles
 40391                           ; simple_byte           19    10 (average)
 40392                           ;	Chosen strategy is simple_byte
 40393   010520  0A48               	xorlw	72	; case 72
 40394   010522  B4D8               	btfsc	status,2,c
 40395   010524  D73E               	goto	l11964
 40396   010526  0A20               	xorlw	32	; case 104
 40397   010528  B4D8               	btfsc	status,2,c
 40398   01052A  D791               	goto	l11968
 40399   01052C  0A01               	xorlw	1	; case 105
 40400   01052E  B4D8               	btfsc	status,2,c
 40401   010530  D78E               	goto	l11968
 40402   010532  0A05               	xorlw	5	; case 108
 40403   010534  B4D8               	btfsc	status,2,c
 40404   010536  D756               	goto	l11966
 40405   010538  0A18               	xorlw	24	; case 116
 40406   01053A  B4D8               	btfsc	status,2,c
 40407   01053C  D788               	goto	l11968
 40408   01053E  0A0E               	xorlw	14	; case 122
 40409   010540  B4D8               	btfsc	status,2,c
 40410   010542  D7B7               	goto	l11970
 40411   010544                     l11976:
 40412                           
 40413                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1406:    *fmt = cp+1;
 40414                           ;stkvar	_cp @ sp[(-8)+4]
 40415   010544  0EFC               	movlw	-4
 40416   010546  50E3               	movf	plusw1,w,c
 40417   010548  0F01               	addlw	1
 40418   01054A  6E2D               	movwf	(btemp+10)^0,c
 40419   01054C  0EFD               	movlw	-3
 40420   01054E  006F FF8C  F02E    	movff	plusw1,btemp+11
 40421   010554  0E00               	movlw	0
 40422   010556  222E               	addwfc	(btemp+11)^0,f,c
 40423                           
 40424                           ;stkvar	_fmt @ sp[(-8)+-4]
 40425   010558  0EF4               	movlw	-12
 40426   01055A  006F FF8F FFD9     	movff	plusw1,fsr2l
 40427   010560  0EF5               	movlw	-11
 40428   010562  006F FF8F FFDA     	movff	plusw1,fsr2h
 40429   010568  0060  F0B7  FFDE   	movff	btemp+10,postinc2
 40430   01056E  0060  F0BB  FFDD   	movff	btemp+11,postdec2
 40431                           
 40432                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1432:    return (int) dtoa(fp
      +                          , convarg.sint);
 40433                           ;stkvar	_convarg @ sp[(-8)+0]
 40434   010574  0EF8               	movlw	-8
 40435   010576  006F FF8F FFE6     	movff	plusw1,postinc1
 40436   01057C  006F FF8F FFE6     	movff	plusw1,postinc1
 40437   010582  006F FF8F FFE6     	movff	plusw1,postinc1
 40438   010588  006F FF8F FFE6     	movff	plusw1,postinc1
 40439                           
 40440                           ;stkvar	_fp @ sp[(-12)+-2]
 40441   01058E  0EF2               	movlw	-14
 40442   010590  006F FF8F FFE6     	movff	plusw1,postinc1
 40443   010596  006F FF8F FFE6     	movff	plusw1,postinc1
 40444   01059C  ECD1  F09E         	call	_dtoa	;wreg free
 40445   0105A0  D3E4               	goto	l3298
 40446   0105A2                     l11982:
 40447                           
 40448                           ;stkvar	_cp @ sp[(-8)+4]
 40449   0105A2  50E1               	movf	fsr1l,w,c
 40450   0105A4  0FFC               	addlw	-4
 40451   0105A6  6ED9               	movwf	fsr2l,c
 40452   0105A8  50E2               	movf	fsr1h,w,c
 40453   0105AA  6EDA               	movwf	fsr2h,c
 40454   0105AC  0EFF               	movlw	255
 40455   0105AE  22DA               	addwfc	fsr2h,f,c
 40456   0105B0  006F FF7B FFF6     	movff	postinc2,tblptrl
 40457   0105B6  006F FF77 FFF7     	movff	postdec2,tblptrh
 40458   0105BC                     	if	0	;tblptru may be non-zero
 40459   0105BC                     	endif
 40460   0105BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40461   0105BC  0E00               	movlw	low (__pmediumconst shr (0+16))
 40462   0105BE  6EF8               	movwf	tblptru,c
 40463   0105C0                     	endif
 40464   0105C0  0008               	tblrd		*
 40465   0105C2  50F5               	movf	tablat,w,c
 40466   0105C4  0A78               	xorlw	120
 40467   0105C6  B4D8               	btfsc	status,2,c
 40468   0105C8  D0F7               	goto	l12004
 40469                           
 40470                           ;stkvar	_cp @ sp[(-8)+4]
 40471   0105CA  50E1               	movf	fsr1l,w,c
 40472   0105CC  0FFC               	addlw	-4
 40473   0105CE  6ED9               	movwf	fsr2l,c
 40474   0105D0  50E2               	movf	fsr1h,w,c
 40475   0105D2  6EDA               	movwf	fsr2h,c
 40476   0105D4  0EFF               	movlw	255
 40477   0105D6  22DA               	addwfc	fsr2h,f,c
 40478   0105D8  006F FF7B FFF6     	movff	postinc2,tblptrl
 40479   0105DE  006F FF77 FFF7     	movff	postdec2,tblptrh
 40480   0105E4                     	if	0	;tblptru may be non-zero
 40481   0105E4                     	endif
 40482   0105E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40483   0105E4  0E00               	movlw	low (__pmediumconst shr (0+16))
 40484   0105E6  6EF8               	movwf	tblptru,c
 40485   0105E8                     	endif
 40486   0105E8  0008               	tblrd		*
 40487   0105EA  50F5               	movf	tablat,w,c
 40488   0105EC  0A58               	xorlw	88
 40489   0105EE  B4D8               	btfsc	status,2,c
 40490   0105F0  D0E3               	goto	l12004
 40491                           
 40492                           ;stkvar	_cp @ sp[(-8)+4]
 40493   0105F2  50E1               	movf	fsr1l,w,c
 40494   0105F4  0FFC               	addlw	-4
 40495   0105F6  6ED9               	movwf	fsr2l,c
 40496   0105F8  50E2               	movf	fsr1h,w,c
 40497   0105FA  6EDA               	movwf	fsr2h,c
 40498   0105FC  0EFF               	movlw	255
 40499   0105FE  22DA               	addwfc	fsr2h,f,c
 40500   010600  006F FF7B FFF6     	movff	postinc2,tblptrl
 40501   010606  006F FF77 FFF7     	movff	postdec2,tblptrh
 40502   01060C                     	if	0	;tblptru may be non-zero
 40503   01060C                     	endif
 40504   01060C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40505   01060C  0E00               	movlw	low (__pmediumconst shr (0+16))
 40506   01060E  6EF8               	movwf	tblptru,c
 40507   010610                     	endif
 40508   010610  0008               	tblrd		*
 40509   010612  50F5               	movf	tablat,w,c
 40510   010614  0A6F               	xorlw	111
 40511   010616  B4D8               	btfsc	status,2,c
 40512   010618  D0CF               	goto	l12004
 40513                           
 40514                           ;stkvar	_cp @ sp[(-8)+4]
 40515   01061A  50E1               	movf	fsr1l,w,c
 40516   01061C  0FFC               	addlw	-4
 40517   01061E  6ED9               	movwf	fsr2l,c
 40518   010620  50E2               	movf	fsr1h,w,c
 40519   010622  6EDA               	movwf	fsr2h,c
 40520   010624  0EFF               	movlw	255
 40521   010626  22DA               	addwfc	fsr2h,f,c
 40522   010628  006F FF7B FFF6     	movff	postinc2,tblptrl
 40523   01062E  006F FF77 FFF7     	movff	postdec2,tblptrh
 40524   010634                     	if	0	;tblptru may be non-zero
 40525   010634                     	endif
 40526   010634                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40527   010634  0E00               	movlw	low (__pmediumconst shr (0+16))
 40528   010636  6EF8               	movwf	tblptru,c
 40529   010638                     	endif
 40530   010638  0008               	tblrd		*
 40531   01063A  50F5               	movf	tablat,w,c
 40532   01063C  0A75               	xorlw	117
 40533   01063E  B4D8               	btfsc	status,2,c
 40534   010640  D0BB               	goto	l12004
 40535   010642  D15B               	goto	l12024
 40536   010644                     l11994:
 40537                           
 40538                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1465:      convarg.uint = (vf
      +                          pf_uint_t)(unsigned char)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)
      +                          0));
 40539                           ;stkvar	_ap @ sp[(-8)+-6]
 40540   010644  0EF2               	movlw	-14
 40541   010646  006F FF8F FFD9     	movff	plusw1,fsr2l
 40542   01064C  0EF3               	movlw	-13
 40543   01064E  006F FF8F FFDA     	movff	plusw1,fsr2h
 40544   010654  0E02               	movlw	2
 40545   010656  5EDE               	subwf	postinc2,f,c
 40546   010658  0E00               	movlw	0
 40547   01065A  5ADD               	subwfb	postdec2,f,c
 40548   01065C  006F FF78  F02D    	movff	postinc2,btemp+10
 40549   010662  006F FF74  F02E    	movff	postdec2,btemp+11
 40550   010668  0060  F0B7  FFD9   	movff	btemp+10,fsr2l
 40551   01066E  0060  F0BB  FFDA   	movff	btemp+11,fsr2h
 40552   010674  50DF               	movf	indf2,w,c
 40553   010676  6E2E               	movwf	(btemp+11)^0,c
 40554   010678  C02E  F027         	movff	btemp+11,btemp+4
 40555   01067C  6A28               	clrf	(btemp+5)^0,c
 40556   01067E  D089               	goto	L33
 40557   010680                     l11996:
 40558                           
 40559                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1470:      convarg.uint = (vf
      +                          pf_uint_t)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 40560                           ;stkvar	_ap @ sp[(-8)+-6]
 40561   010680  0EF2               	movlw	-14
 40562   010682  006F FF8F FFD9     	movff	plusw1,fsr2l
 40563   010688  0EF3               	movlw	-13
 40564   01068A  006F FF8F FFDA     	movff	plusw1,fsr2h
 40565   010690  0E04               	movlw	4
 40566   010692  5EDE               	subwf	postinc2,f,c
 40567   010694  0E00               	movlw	0
 40568   010696  5ADD               	subwfb	postdec2,f,c
 40569   010698  006F FF78  F02D    	movff	postinc2,btemp+10
 40570   01069E  006F FF74  F02E    	movff	postdec2,btemp+11
 40571   0106A4  0060  F0B7  FFD9   	movff	btemp+10,fsr2l
 40572   0106AA  0060  F0BB  FFDA   	movff	btemp+11,fsr2h
 40573   0106B0  006F FF78  F02B    	movff	postinc2,btemp+8
 40574   0106B6  006F FF78  F02C    	movff	postinc2,btemp+9
 40575   0106BC  006F FF78  F02D    	movff	postinc2,btemp+10
 40576   0106C2  006F FF78  F02E    	movff	postinc2,btemp+11
 40577                           
 40578                           ;stkvar	_convarg @ sp[(-8)+0]
 40579   0106C8  0EF8               	movlw	-8
 40580   0106CA  0060  F0AF  FFE3   	movff	btemp+8,plusw1
 40581   0106D0  0EF9               	movlw	-7
 40582   0106D2  0060  F0B3  FFE3   	movff	btemp+9,plusw1
 40583   0106D8  0EFA               	movlw	-6
 40584   0106DA  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 40585   0106E0  0EFB               	movlw	-5
 40586   0106E2  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 40587                           
 40588                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1471:      break;
 40589   0106E8  D07B               	goto	l12006
 40590   0106EA                     l11998:
 40591                           
 40592                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1480:      convarg.uint = (vf
      +                          pf_uint_t)(*(ptrdiff_t *)__va_arg(*(ptrdiff_t **)ap, (ptrdiff_t)0));
 40593                           ;stkvar	_ap @ sp[(-8)+-6]
 40594   0106EA  0EF2               	movlw	-14
 40595   0106EC  006F FF8F FFD9     	movff	plusw1,fsr2l
 40596   0106F2  0EF3               	movlw	-13
 40597   0106F4  006F FF8F FFDA     	movff	plusw1,fsr2h
 40598   0106FA  0E02               	movlw	2
 40599   0106FC  5EDE               	subwf	postinc2,f,c
 40600   0106FE  0E00               	movlw	0
 40601   010700  5ADD               	subwfb	postdec2,f,c
 40602   010702  006F FF78  F02D    	movff	postinc2,btemp+10
 40603   010708  006F FF74  F02E    	movff	postdec2,btemp+11
 40604   01070E  0060  F0B7  FFD9   	movff	btemp+10,fsr2l
 40605   010714  0060  F0BB  FFDA   	movff	btemp+11,fsr2h
 40606   01071A  006F FF78  F02D    	movff	postinc2,btemp+10
 40607   010720  006F FF74  F02E    	movff	postdec2,btemp+11
 40608                           
 40609                           ;stkvar	_convarg @ sp[(-8)+0]
 40610   010726  0EF8               	movlw	-8
 40611   010728  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 40612   01072E  0EF9               	movlw	-7
 40613   010730  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 40614   010736  6A23               	clrf	btemp^0,c
 40615   010738  BEE3               	btfsc	plusw1,7,c
 40616   01073A  6823               	setf	btemp^0,c
 40617   01073C  0EFA               	movlw	-6
 40618   01073E  0060  F08F  FFE3   	movff	btemp,plusw1
 40619   010744  0EFB               	movlw	-5
 40620   010746  0060  F08F  FFE3   	movff	btemp,plusw1
 40621                           
 40622                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1481:      break;
 40623   01074C  D049               	goto	l12006
 40624   01074E                     l12000:
 40625                           
 40626                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1490:      convarg.uint = (vf
      +                          pf_uint_t)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 40627                           ;stkvar	_ap @ sp[(-8)+-6]
 40628   01074E  0EF2               	movlw	-14
 40629   010750  006F FF8F FFD9     	movff	plusw1,fsr2l
 40630   010756  0EF3               	movlw	-13
 40631   010758  006F FF8F FFDA     	movff	plusw1,fsr2h
 40632   01075E  0E02               	movlw	2
 40633   010760  5EDE               	subwf	postinc2,f,c
 40634   010762  0E00               	movlw	0
 40635   010764  5ADD               	subwfb	postdec2,f,c
 40636   010766  006F FF78  F02D    	movff	postinc2,btemp+10
 40637   01076C  006F FF74  F02E    	movff	postdec2,btemp+11
 40638   010772  0060  F0B7  FFD9   	movff	btemp+10,fsr2l
 40639   010778  0060  F0BB  FFDA   	movff	btemp+11,fsr2h
 40640   01077E  006F FF78  F02D    	movff	postinc2,btemp+10
 40641   010784  006F FF74  F02E    	movff	postdec2,btemp+11
 40642   01078A  502D               	movf	(btemp+10)^0,w,c
 40643   01078C  6E27               	movwf	(btemp+4)^0,c
 40644   01078E  502E               	movf	(btemp+11)^0,w,c
 40645   010790  6E28               	movwf	(btemp+5)^0,c
 40646   010792                     L33:
 40647   010792  6A29               	clrf	(btemp+6)^0,c
 40648   010794  6A2A               	clrf	(btemp+7)^0,c
 40649                           
 40650                           ;stkvar	_convarg @ sp[(-8)+0]
 40651   010796  0EF8               	movlw	-8
 40652   010798  0060  F09F  FFE3   	movff	btemp+4,plusw1
 40653   01079E  0EF9               	movlw	-7
 40654   0107A0  0060  F0A3  FFE3   	movff	btemp+5,plusw1
 40655   0107A6  0EFA               	movlw	-6
 40656   0107A8  0060  F0A7  FFE3   	movff	btemp+6,plusw1
 40657   0107AE  0EFB               	movlw	-5
 40658   0107B0  0060  F0AB  FFE3   	movff	btemp+7,plusw1
 40659                           
 40660                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1491:      break;
 40661   0107B6  D014               	goto	l12006
 40662   0107B8                     l12004:
 40663                           
 40664                           ;stkvar	_c @ sp[(-8)+6]
 40665   0107B8  0EFE               	movlw	-2
 40666   0107BA  50E3               	movf	plusw1,w,c
 40667                           
 40668                           ; Switch size 1, requested type "simple"
 40669                           ; Number of cases is 6, Range of values is 72 to 122
 40670                           ; switch strategies available:
 40671                           ; Name         Instructions Cycles
 40672                           ; simple_byte           19    10 (average)
 40673                           ;	Chosen strategy is simple_byte
 40674   0107BC  0A48               	xorlw	72	; case 72
 40675   0107BE  B4D8               	btfsc	status,2,c
 40676   0107C0  D741               	goto	l11994
 40677   0107C2  0A20               	xorlw	32	; case 104
 40678   0107C4  B4D8               	btfsc	status,2,c
 40679   0107C6  D7C3               	goto	l12000
 40680   0107C8  0A01               	xorlw	1	; case 105
 40681   0107CA  B4D8               	btfsc	status,2,c
 40682   0107CC  D7C0               	goto	l12000
 40683   0107CE  0A05               	xorlw	5	; case 108
 40684   0107D0  B4D8               	btfsc	status,2,c
 40685   0107D2  D756               	goto	l11996
 40686   0107D4  0A18               	xorlw	24	; case 116
 40687   0107D6  B4D8               	btfsc	status,2,c
 40688   0107D8  D788               	goto	l11998
 40689   0107DA  0A0E               	xorlw	14	; case 122
 40690   0107DC  B4D8               	btfsc	status,2,c
 40691   0107DE  D7B7               	goto	l12000
 40692   0107E0                     l12006:
 40693                           
 40694                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1497:    *fmt = cp+1;
 40695                           ;stkvar	_cp @ sp[(-8)+4]
 40696   0107E0  0EFC               	movlw	-4
 40697   0107E2  50E3               	movf	plusw1,w,c
 40698   0107E4  0F01               	addlw	1
 40699   0107E6  6E2D               	movwf	(btemp+10)^0,c
 40700   0107E8  0EFD               	movlw	-3
 40701   0107EA  006F FF8C  F02E    	movff	plusw1,btemp+11
 40702   0107F0  0E00               	movlw	0
 40703   0107F2  222E               	addwfc	(btemp+11)^0,f,c
 40704                           
 40705                           ;stkvar	_fmt @ sp[(-8)+-4]
 40706   0107F4  0EF4               	movlw	-12
 40707   0107F6  006F FF8F FFD9     	movff	plusw1,fsr2l
 40708   0107FC  0EF5               	movlw	-11
 40709   0107FE  006F FF8F FFDA     	movff	plusw1,fsr2h
 40710   010804  0060  F0B7  FFDE   	movff	btemp+10,postinc2
 40711   01080A  0060  F0BB  FFDD   	movff	btemp+11,postdec2
 40712                           
 40713                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1498:    switch (*cp) {
 40714   010810  D057               	goto	l12022
 40715   010812                     l12008:
 40716                           
 40717                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1519:      return (int) otoa(
      +                          fp, convarg.uint);
 40718                           ;stkvar	_convarg @ sp[(-8)+0]
 40719   010812  0EF8               	movlw	-8
 40720   010814  006F FF8F FFE6     	movff	plusw1,postinc1
 40721   01081A  006F FF8F FFE6     	movff	plusw1,postinc1
 40722   010820  006F FF8F FFE6     	movff	plusw1,postinc1
 40723   010826  006F FF8F FFE6     	movff	plusw1,postinc1
 40724                           
 40725                           ;stkvar	_fp @ sp[(-12)+-2]
 40726   01082C  0EF2               	movlw	-14
 40727   01082E  006F FF8F FFE6     	movff	plusw1,postinc1
 40728   010834  006F FF8F FFE6     	movff	plusw1,postinc1
 40729   01083A  EC2B  F0A6         	call	_otoa	;wreg free
 40730   01083E  D295               	goto	l3298
 40731   010840                     l12012:
 40732                           
 40733                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1542:      return (int) utoa(
      +                          fp, convarg.uint);
 40734                           ;stkvar	_convarg @ sp[(-8)+0]
 40735   010840  0EF8               	movlw	-8
 40736   010842  006F FF8F FFE6     	movff	plusw1,postinc1
 40737   010848  006F FF8F FFE6     	movff	plusw1,postinc1
 40738   01084E  006F FF8F FFE6     	movff	plusw1,postinc1
 40739   010854  006F FF8F FFE6     	movff	plusw1,postinc1
 40740                           
 40741                           ;stkvar	_fp @ sp[(-12)+-2]
 40742   01085A  0EF2               	movlw	-14
 40743   01085C  006F FF8F FFE6     	movff	plusw1,postinc1
 40744   010862  006F FF8F FFE6     	movff	plusw1,postinc1
 40745   010868  EC33  F0A7         	call	_utoa	;wreg free
 40746   01086C  D27E               	goto	l3298
 40747   01086E                     l12016:
 40748                           
 40749                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1586:      return (int) xtoa(
      +                          fp,convarg.uint,*cp);
 40750                           ;stkvar	_cp @ sp[(-8)+4]
 40751   01086E  50E1               	movf	fsr1l,w,c
 40752   010870  0FFC               	addlw	-4
 40753   010872  6ED9               	movwf	fsr2l,c
 40754   010874  50E2               	movf	fsr1h,w,c
 40755   010876  6EDA               	movwf	fsr2h,c
 40756   010878  0EFF               	movlw	255
 40757   01087A  22DA               	addwfc	fsr2h,f,c
 40758   01087C  006F FF7B FFF6     	movff	postinc2,tblptrl
 40759   010882  006F FF77 FFF7     	movff	postdec2,tblptrh
 40760   010888                     	if	0	;tblptru may be non-zero
 40761   010888                     	endif
 40762   010888                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40763   010888  0E00               	movlw	low (__pmediumconst shr (0+16))
 40764   01088A  6EF8               	movwf	tblptru,c
 40765   01088C                     	endif
 40766   01088C  0008               	tblrd		*
 40767   01088E  50F5               	movf	tablat,w,c
 40768   010890  6EE6               	movwf	postinc1,c
 40769                           
 40770                           ;stkvar	_convarg @ sp[(-9)+0]
 40771   010892  0EF7               	movlw	-9
 40772   010894  006F FF8F FFE6     	movff	plusw1,postinc1
 40773   01089A  006F FF8F FFE6     	movff	plusw1,postinc1
 40774   0108A0  006F FF8F FFE6     	movff	plusw1,postinc1
 40775   0108A6  006F FF8F FFE6     	movff	plusw1,postinc1
 40776                           
 40777                           ;stkvar	_fp @ sp[(-13)+-2]
 40778   0108AC  0EF1               	movlw	-15
 40779   0108AE  006F FF8F FFE6     	movff	plusw1,postinc1
 40780   0108B4  006F FF8F FFE6     	movff	plusw1,postinc1
 40781   0108BA  ECD9  F09B         	call	_xtoa	;wreg free
 40782   0108BE  D255               	goto	l3298
 40783   0108C0                     l12022:
 40784                           
 40785                           ;stkvar	_cp @ sp[(-8)+4]
 40786   0108C0  50E1               	movf	fsr1l,w,c
 40787   0108C2  0FFC               	addlw	-4
 40788   0108C4  6ED9               	movwf	fsr2l,c
 40789   0108C6  50E2               	movf	fsr1h,w,c
 40790   0108C8  6EDA               	movwf	fsr2h,c
 40791   0108CA  0EFF               	movlw	255
 40792   0108CC  22DA               	addwfc	fsr2h,f,c
 40793   0108CE  006F FF7B FFF6     	movff	postinc2,tblptrl
 40794   0108D4  006F FF77 FFF7     	movff	postdec2,tblptrh
 40795   0108DA                     	if	0	;tblptru may be non-zero
 40796   0108DA                     	endif
 40797   0108DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40798   0108DA  0E00               	movlw	low (__pmediumconst shr (0+16))
 40799   0108DC  6EF8               	movwf	tblptru,c
 40800   0108DE                     	endif
 40801   0108DE  0008               	tblrd		*
 40802   0108E0  50F5               	movf	tablat,w,c
 40803                           
 40804                           ; Switch size 1, requested type "simple"
 40805                           ; Number of cases is 4, Range of values is 88 to 120
 40806                           ; switch strategies available:
 40807                           ; Name         Instructions Cycles
 40808                           ; simple_byte           13     7 (average)
 40809                           ;	Chosen strategy is simple_byte
 40810   0108E2  0A58               	xorlw	88	; case 88
 40811   0108E4  B4D8               	btfsc	status,2,c
 40812   0108E6  D7C3               	goto	l12016
 40813   0108E8  0A37               	xorlw	55	; case 111
 40814   0108EA  B4D8               	btfsc	status,2,c
 40815   0108EC  D792               	goto	l12008
 40816   0108EE  0A1A               	xorlw	26	; case 117
 40817   0108F0  B4D8               	btfsc	status,2,c
 40818   0108F2  D7A6               	goto	l12012
 40819   0108F4  0A0D               	xorlw	13	; case 120
 40820   0108F6  B4D8               	btfsc	status,2,c
 40821   0108F8  D7BA               	goto	l12016
 40822   0108FA                     l12024:
 40823                           
 40824                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1595:   if (*cp == 'n') {
 40825                           ;stkvar	_cp @ sp[(-8)+4]
 40826   0108FA  50E1               	movf	fsr1l,w,c
 40827   0108FC  0FFC               	addlw	-4
 40828   0108FE  6ED9               	movwf	fsr2l,c
 40829   010900  50E2               	movf	fsr1h,w,c
 40830   010902  6EDA               	movwf	fsr2h,c
 40831   010904  0EFF               	movlw	255
 40832   010906  22DA               	addwfc	fsr2h,f,c
 40833   010908  006F FF7B FFF6     	movff	postinc2,tblptrl
 40834   01090E  006F FF77 FFF7     	movff	postdec2,tblptrh
 40835   010914                     	if	0	;tblptru may be non-zero
 40836   010914                     	endif
 40837   010914                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40838   010914  0E00               	movlw	low (__pmediumconst shr (0+16))
 40839   010916  6EF8               	movwf	tblptru,c
 40840   010918                     	endif
 40841   010918  0008               	tblrd		*
 40842   01091A  50F5               	movf	tablat,w,c
 40843   01091C  0A6E               	xorlw	110
 40844   01091E  B4D8               	btfsc	status,2,c
 40845   010920  D07C               	goto	l12042
 40846   010922  D0A9               	goto	l12050
 40847   010924                     l12032:
 40848                           
 40849                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1608:      *(*(signed char* *
      +                          )__va_arg(*(signed char* **)ap, (signed char*)0)) = (signed char) nout;
 40850                           ;stkvar	_ap @ sp[(-8)+-6]
 40851   010924  0EF2               	movlw	-14
 40852   010926  006F FF8F FFD9     	movff	plusw1,fsr2l
 40853   01092C  0EF3               	movlw	-13
 40854   01092E  006F FF8F FFDA     	movff	plusw1,fsr2h
 40855   010934  0E02               	movlw	2
 40856   010936  5EDE               	subwf	postinc2,f,c
 40857   010938  0E00               	movlw	0
 40858   01093A  5ADD               	subwfb	postdec2,f,c
 40859   01093C  006F FF78  F02D    	movff	postinc2,btemp+10
 40860   010942  006F FF74  F02E    	movff	postdec2,btemp+11
 40861   010948  0060  F0B7  FFD9   	movff	btemp+10,fsr2l
 40862   01094E  0060  F0BB  FFDA   	movff	btemp+11,fsr2h
 40863   010954  006F FF7B FFE9     	movff	postinc2,fsr0l
 40864   01095A  006F FF7B FFEA     	movff	postinc2,fsr0h
 40865   010960  0060  F6FF  FFEF   	movff	_nout,indf0
 40866                           
 40867                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1609:      break;
 40868   010966  D06D               	goto	l12044
 40869   010968                     l12034:
 40870                           
 40871                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1613:      *(*(long* *)__va_a
      +                          rg(*(long* **)ap, (long*)0)) = (long) nout;
 40872   010968  C1BF  F02B         	movff	_nout,btemp+8
 40873   01096C  C1C0  F02C         	movff	_nout+1,btemp+9
 40874   010970  0E00               	movlw	0
 40875   010972  BE2C               	btfsc	(btemp+9)^0,7,c
 40876   010974  0EFF               	movlw	255
 40877   010976  6E2D               	movwf	(btemp+10)^0,c
 40878   010978  6E2E               	movwf	(btemp+11)^0,c
 40879                           
 40880                           ;stkvar	_ap @ sp[(-8)+-6]
 40881   01097A  0EF2               	movlw	-14
 40882   01097C  006F FF8F FFD9     	movff	plusw1,fsr2l
 40883   010982  0EF3               	movlw	-13
 40884   010984  006F FF8F FFDA     	movff	plusw1,fsr2h
 40885   01098A  0E02               	movlw	2
 40886   01098C  5EDE               	subwf	postinc2,f,c
 40887   01098E  0E00               	movlw	0
 40888   010990  5ADD               	subwfb	postdec2,f,c
 40889   010992  006F FF78  F029    	movff	postinc2,btemp+6
 40890   010998  006F FF74  F02A    	movff	postdec2,btemp+7
 40891   01099E  0060  F0A7  FFD9   	movff	btemp+6,fsr2l
 40892   0109A4  0060  F0AB  FFDA   	movff	btemp+7,fsr2h
 40893   0109AA  006F FF7B FFE9     	movff	postinc2,fsr0l
 40894   0109B0  006F FF7B FFEA     	movff	postinc2,fsr0h
 40895   0109B6  0060  F0AF  FFEE   	movff	btemp+8,postinc0
 40896   0109BC  0060  F0B3  FFEE   	movff	btemp+9,postinc0
 40897   0109C2  0060  F0B7  FFEE   	movff	btemp+10,postinc0
 40898   0109C8  0060  F0BB  FFEF   	movff	btemp+11,indf0
 40899                           
 40900                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1614:      break;
 40901   0109CE  D039               	goto	l12044
 40902   0109D0                     l12036:
 40903                           
 40904                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1633:      *(*(size_t* *)__va
      +                          _arg(*(size_t* **)ap, (size_t*)0)) = (size_t) nout;
 40905                           ;stkvar	_ap @ sp[(-8)+-6]
 40906                           
 40907                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1624:      break;
 40908                           
 40909                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1623:      *(*(ptrdiff_t* *)_
      +                          _va_arg(*(ptrdiff_t* **)ap, (ptrdiff_t*)0)) = (ptrdiff_t) nout;
 40910                           ;stkvar	_ap @ sp[(-8)+-6]
 40911   0109D0  0EF2               	movlw	-14
 40912   0109D2  006F FF8F FFD9     	movff	plusw1,fsr2l
 40913   0109D8  0EF3               	movlw	-13
 40914   0109DA  006F FF8F FFDA     	movff	plusw1,fsr2h
 40915   0109E0  0E02               	movlw	2
 40916   0109E2  5EDE               	subwf	postinc2,f,c
 40917   0109E4  0E00               	movlw	0
 40918   0109E6  5ADD               	subwfb	postdec2,f,c
 40919   0109E8  006F FF78  F02D    	movff	postinc2,btemp+10
 40920   0109EE  006F FF74  F02E    	movff	postdec2,btemp+11
 40921   0109F4  0060  F0B7  FFD9   	movff	btemp+10,fsr2l
 40922   0109FA  0060  F0BB  FFDA   	movff	btemp+11,fsr2h
 40923   010A00  006F FF7B FFE9     	movff	postinc2,fsr0l
 40924   010A06  006F FF7B FFEA     	movff	postinc2,fsr0h
 40925   010A0C  0060  F6FF  FFEE   	movff	_nout,postinc0
 40926   010A12  0060  F703  FFEF   	movff	_nout+1,indf0
 40927                           
 40928                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1634:      break;
 40929   010A18  D014               	goto	l12044
 40930   010A1A                     l12042:
 40931                           
 40932                           ;stkvar	_c @ sp[(-8)+6]
 40933   010A1A  0EFE               	movlw	-2
 40934   010A1C  50E3               	movf	plusw1,w,c
 40935                           
 40936                           ; Switch size 1, requested type "simple"
 40937                           ; Number of cases is 6, Range of values is 72 to 122
 40938                           ; switch strategies available:
 40939                           ; Name         Instructions Cycles
 40940                           ; simple_byte           19    10 (average)
 40941                           ;	Chosen strategy is simple_byte
 40942   010A1E  0A48               	xorlw	72	; case 72
 40943   010A20  B4D8               	btfsc	status,2,c
 40944   010A22  D780               	goto	l12032
 40945   010A24  0A20               	xorlw	32	; case 104
 40946   010A26  B4D8               	btfsc	status,2,c
 40947   010A28  D7D3               	goto	l12036
 40948   010A2A  0A01               	xorlw	1	; case 105
 40949   010A2C  B4D8               	btfsc	status,2,c
 40950   010A2E  D7D0               	goto	l12036
 40951   010A30  0A05               	xorlw	5	; case 108
 40952   010A32  B4D8               	btfsc	status,2,c
 40953   010A34  D799               	goto	l12034
 40954   010A36  0A18               	xorlw	24	; case 116
 40955   010A38  B4D8               	btfsc	status,2,c
 40956   010A3A  D7CA               	goto	l12036
 40957   010A3C  0A0E               	xorlw	14	; case 122
 40958   010A3E  B4D8               	btfsc	status,2,c
 40959   010A40  D7C7               	goto	l12036
 40960   010A42                     l12044:
 40961                           
 40962                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1640:    *fmt = cp+1;
 40963                           ;stkvar	_cp @ sp[(-8)+4]
 40964   010A42  0EFC               	movlw	-4
 40965   010A44  50E3               	movf	plusw1,w,c
 40966   010A46  0F01               	addlw	1
 40967   010A48  6E2D               	movwf	(btemp+10)^0,c
 40968   010A4A  0EFD               	movlw	-3
 40969   010A4C  006F FF8C  F02E    	movff	plusw1,btemp+11
 40970   010A52  0E00               	movlw	0
 40971   010A54  222E               	addwfc	(btemp+11)^0,f,c
 40972                           
 40973                           ;stkvar	_fmt @ sp[(-8)+-4]
 40974   010A56  0EF4               	movlw	-12
 40975   010A58  006F FF8F FFD9     	movff	plusw1,fsr2l
 40976   010A5E  0EF5               	movlw	-11
 40977   010A60  006F FF8F FFDA     	movff	plusw1,fsr2h
 40978   010A66  0060  F0B7  FFDE   	movff	btemp+10,postinc2
 40979   010A6C  0060  F0BB  FFDD   	movff	btemp+11,postdec2
 40980   010A72                     l12046:
 40981                           
 40982                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1641:    return (int) 0;
 40983   010A72  0E00               	movlw	0
 40984   010A74  D140               	goto	L34
 40985   010A76                     l12050:
 40986                           
 40987                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1648:         if ((*fmt)[0] =
      +                          = 'p') {
 40988                           ;stkvar	_fmt @ sp[(-8)+-4]
 40989   010A76  0EF4               	movlw	-12
 40990   010A78  006F FF8F FFD9     	movff	plusw1,fsr2l
 40991   010A7E  0EF5               	movlw	-11
 40992   010A80  006F FF8F FFDA     	movff	plusw1,fsr2h
 40993   010A86  006F FF7B FFF6     	movff	postinc2,tblptrl
 40994   010A8C  006F FF77 FFF7     	movff	postdec2,tblptrh
 40995   010A92                     	if	0	;tblptru may be non-zero
 40996   010A92                     	endif
 40997   010A92                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40998   010A92  0E00               	movlw	low (__pmediumconst shr (0+16))
 40999   010A94  6EF8               	movwf	tblptru,c
 41000   010A96                     	endif
 41001   010A96  0008               	tblrd		*
 41002   010A98  50F5               	movf	tablat,w,c
 41003   010A9A  0A70               	xorlw	112
 41004   010A9C  A4D8               	btfss	status,2,c
 41005   010A9E  D047               	goto	l12058
 41006                           
 41007                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1649:             ++*fmt;
 41008                           ;stkvar	_fmt @ sp[(-8)+-4]
 41009   010AA0  0EF4               	movlw	-12
 41010   010AA2  006F FF8F FFD9     	movff	plusw1,fsr2l
 41011   010AA8  0EF5               	movlw	-11
 41012   010AAA  006F FF8F FFDA     	movff	plusw1,fsr2h
 41013   010AB0  2ADE               	incf	postinc2,f,c
 41014   010AB2  0E00               	movlw	0
 41015   010AB4  22DD               	addwfc	postdec2,f,c
 41016                           
 41017                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1650:             return (int
      +                          ) xtoa(fp,(vfpf_uint_t)(uintptr_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)),'x');
 41018   010AB6  0E78               	movlw	120
 41019   010AB8  6EE6               	movwf	postinc1,c
 41020                           
 41021                           ;stkvar	_ap @ sp[(-9)+-6]
 41022   010ABA  0EF1               	movlw	-15
 41023   010ABC  006F FF8F FFD9     	movff	plusw1,fsr2l
 41024   010AC2  0EF2               	movlw	-14
 41025   010AC4  006F FF8F FFDA     	movff	plusw1,fsr2h
 41026   010ACA  0E02               	movlw	2
 41027   010ACC  5EDE               	subwf	postinc2,f,c
 41028   010ACE  0E00               	movlw	0
 41029   010AD0  5ADD               	subwfb	postdec2,f,c
 41030   010AD2  006F FF78  F02D    	movff	postinc2,btemp+10
 41031   010AD8  006F FF74  F02E    	movff	postdec2,btemp+11
 41032   010ADE  0060  F0B7  FFD9   	movff	btemp+10,fsr2l
 41033   010AE4  0060  F0BB  FFDA   	movff	btemp+11,fsr2h
 41034   010AEA  006F FF78  F02D    	movff	postinc2,btemp+10
 41035   010AF0  006F FF74  F02E    	movff	postdec2,btemp+11
 41036   010AF6  502D               	movf	(btemp+10)^0,w,c
 41037   010AF8  6E27               	movwf	(btemp+4)^0,c
 41038   010AFA  502E               	movf	(btemp+11)^0,w,c
 41039   010AFC  6E28               	movwf	(btemp+5)^0,c
 41040   010AFE  6A29               	clrf	(btemp+6)^0,c
 41041   010B00  6A2A               	clrf	(btemp+7)^0,c
 41042   010B02  0060  F09F  FFE6   	movff	btemp+4,postinc1
 41043   010B08  0060  F0A3  FFE6   	movff	btemp+5,postinc1
 41044   010B0E  0060  F0A7  FFE6   	movff	btemp+6,postinc1
 41045   010B14  0060  F0AB  FFE6   	movff	btemp+7,postinc1
 41046                           
 41047                           ;stkvar	_fp @ sp[(-13)+-2]
 41048   010B1A  0EF1               	movlw	-15
 41049   010B1C  006F FF8F FFE6     	movff	plusw1,postinc1
 41050   010B22  006F FF8F FFE6     	movff	plusw1,postinc1
 41051   010B28  ECD9  F09B         	call	_xtoa	;wreg free
 41052   010B2C  D11E               	goto	l3298
 41053   010B2E                     l12058:
 41054                           
 41055                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1656:   done = 0;
 41056                           ;stkvar	_done @ sp[(-8)+7]
 41057   010B2E  0EFF               	movlw	-1
 41058   010B30  6AE3               	clrf	plusw1,c
 41059                           
 41060                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1657:   if ((*fmt)[0] == 's')
      +                           {
 41061                           ;stkvar	_fmt @ sp[(-8)+-4]
 41062   010B32  0EF4               	movlw	-12
 41063   010B34  006F FF8F FFD9     	movff	plusw1,fsr2l
 41064   010B3A  0EF5               	movlw	-11
 41065   010B3C  006F FF8F FFDA     	movff	plusw1,fsr2h
 41066   010B42  006F FF7B FFF6     	movff	postinc2,tblptrl
 41067   010B48  006F FF77 FFF7     	movff	postdec2,tblptrh
 41068   010B4E                     	if	0	;tblptru may be non-zero
 41069   010B4E                     	endif
 41070   010B4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 41071   010B4E  0E00               	movlw	low (__pmediumconst shr (0+16))
 41072   010B50  6EF8               	movwf	tblptru,c
 41073   010B52                     	endif
 41074   010B52  0008               	tblrd		*
 41075   010B54  50F5               	movf	tablat,w,c
 41076   010B56  0A73               	xorlw	115
 41077   010B58  A4D8               	btfss	status,2,c
 41078   010B5A  D00F               	goto	l12066
 41079                           
 41080                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1658:    ++*fmt;
 41081                           ;stkvar	_fmt @ sp[(-8)+-4]
 41082   010B5C  0EF4               	movlw	-12
 41083   010B5E  006F FF8F FFD9     	movff	plusw1,fsr2l
 41084   010B64  0EF5               	movlw	-11
 41085   010B66  006F FF8F FFDA     	movff	plusw1,fsr2h
 41086   010B6C  2ADE               	incf	postinc2,f,c
 41087   010B6E  0E00               	movlw	0
 41088   010B70  22DD               	addwfc	postdec2,f,c
 41089                           
 41090                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1659:    done = 1;
 41091                           ;stkvar	_done @ sp[(-8)+7]
 41092   010B72  0EFF               	movlw	-1
 41093   010B74  6AE3               	clrf	plusw1,c
 41094   010B76  2AE3               	incf	plusw1,f,c
 41095                           
 41096                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1660:   }
 41097   010B78  D05E               	goto	l12076
 41098   010B7A                     l12066:
 41099                           
 41100                           ;stkvar	_fmt @ sp[(-8)+-4]
 41101   010B7A  0EF4               	movlw	-12
 41102   010B7C  006F FF8F FFD9     	movff	plusw1,fsr2l
 41103   010B82  0EF5               	movlw	-11
 41104   010B84  006F FF8F FFDA     	movff	plusw1,fsr2h
 41105   010B8A  006F FF7B FFF6     	movff	postinc2,tblptrl
 41106   010B90  006F FF77 FFF7     	movff	postdec2,tblptrh
 41107   010B96                     	if	0	;tblptru may be non-zero
 41108   010B96                     	endif
 41109   010B96                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 41110   010B96  0E00               	movlw	low (__pmediumconst shr (0+16))
 41111   010B98  6EF8               	movwf	tblptru,c
 41112   010B9A                     	endif
 41113   010B9A  0008               	tblrd		*
 41114   010B9C  50F5               	movf	tablat,w,c
 41115   010B9E  0A6C               	xorlw	108
 41116   010BA0  A4D8               	btfss	status,2,c
 41117   010BA2  D049               	goto	l12076
 41118                           
 41119                           ;stkvar	_fmt @ sp[(-8)+-4]
 41120   010BA4  0EF4               	movlw	-12
 41121   010BA6  006F FF8F FFD9     	movff	plusw1,fsr2l
 41122   010BAC  0EF5               	movlw	-11
 41123   010BAE  006F FF8F FFDA     	movff	plusw1,fsr2h
 41124   010BB4  006F FF78  F02D    	movff	postinc2,btemp+10
 41125   010BBA  006F FF74  F02E    	movff	postdec2,btemp+11
 41126   010BC0  0E01               	movlw	1
 41127   010BC2  262D               	addwf	(btemp+10)^0,f,c
 41128   010BC4  0E00               	movlw	0
 41129   010BC6  222E               	addwfc	(btemp+11)^0,f,c
 41130   010BC8  0060  F0B7  FFF6   	movff	btemp+10,tblptrl
 41131   010BCE  0060  F0BB  FFF7   	movff	btemp+11,tblptrh
 41132   010BD4                     	if	0	;tblptru may be non-zero
 41133   010BD4                     	endif
 41134   010BD4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 41135   010BD4  0E00               	movlw	low (__pmediumconst shr (0+16))
 41136   010BD6  6EF8               	movwf	tblptru,c
 41137   010BD8                     	endif
 41138   010BD8  0008               	tblrd		*
 41139   010BDA  50F5               	movf	tablat,w,c
 41140   010BDC  0A6C               	xorlw	108
 41141   010BDE  A4D8               	btfss	status,2,c
 41142   010BE0  D02A               	goto	l12076
 41143                           
 41144                           ;stkvar	_fmt @ sp[(-8)+-4]
 41145   010BE2  0EF4               	movlw	-12
 41146   010BE4  006F FF8F FFD9     	movff	plusw1,fsr2l
 41147   010BEA  0EF5               	movlw	-11
 41148   010BEC  006F FF8F FFDA     	movff	plusw1,fsr2h
 41149   010BF2  006F FF78  F02D    	movff	postinc2,btemp+10
 41150   010BF8  006F FF74  F02E    	movff	postdec2,btemp+11
 41151   010BFE  0E02               	movlw	2
 41152   010C00  262D               	addwf	(btemp+10)^0,f,c
 41153   010C02  0E00               	movlw	0
 41154   010C04  222E               	addwfc	(btemp+11)^0,f,c
 41155   010C06  0060  F0B7  FFF6   	movff	btemp+10,tblptrl
 41156   010C0C  0060  F0BB  FFF7   	movff	btemp+11,tblptrh
 41157   010C12                     	if	0	;tblptru may be non-zero
 41158   010C12                     	endif
 41159   010C12                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 41160   010C12  0E00               	movlw	low (__pmediumconst shr (0+16))
 41161   010C14  6EF8               	movwf	tblptru,c
 41162   010C16                     	endif
 41163   010C16  0008               	tblrd		*
 41164   010C18  50F5               	movf	tablat,w,c
 41165   010C1A  0A73               	xorlw	115
 41166   010C1C  A4D8               	btfss	status,2,c
 41167   010C1E  D00B               	goto	l12076
 41168                           
 41169                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1662:    *fmt += 3;
 41170                           ;stkvar	_fmt @ sp[(-8)+-4]
 41171   010C20  0EF4               	movlw	-12
 41172   010C22  006F FF8F FFD9     	movff	plusw1,fsr2l
 41173   010C28  0EF5               	movlw	-11
 41174   010C2A  006F FF8F FFDA     	movff	plusw1,fsr2h
 41175   010C30  0E03               	movlw	3
 41176   010C32  26DE               	addwf	postinc2,f,c
 41177   010C34  D79C               	goto	L35
 41178   010C36                     l12076:
 41179                           
 41180                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1665:   if (done) {
 41181                           ;stkvar	_done @ sp[(-8)+7]
 41182   010C36  0EFF               	movlw	-1
 41183   010C38  50E3               	movf	plusw1,w,c
 41184   010C3A  B4D8               	btfsc	status,2,c
 41185   010C3C  D02E               	goto	l12082
 41186                           
 41187                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1682:    return (int) stoa(fp
      +                          , (*(char * *)__va_arg(*(char * **)ap, (char *)0)));
 41188                           ;stkvar	_ap @ sp[(-8)+-6]
 41189   010C3E  0EF2               	movlw	-14
 41190   010C40  006F FF8F FFD9     	movff	plusw1,fsr2l
 41191   010C46  0EF3               	movlw	-13
 41192   010C48  006F FF8F FFDA     	movff	plusw1,fsr2h
 41193   010C4E  0E02               	movlw	2
 41194   010C50  5EDE               	subwf	postinc2,f,c
 41195   010C52  0E00               	movlw	0
 41196   010C54  5ADD               	subwfb	postdec2,f,c
 41197   010C56  006F FF78  F02D    	movff	postinc2,btemp+10
 41198   010C5C  006F FF74  F02E    	movff	postdec2,btemp+11
 41199   010C62  0060  F0B7  FFD9   	movff	btemp+10,fsr2l
 41200   010C68  0060  F0BB  FFDA   	movff	btemp+11,fsr2h
 41201   010C6E  006F FF78  F02D    	movff	postinc2,btemp+10
 41202   010C74  006F FF74  F02E    	movff	postdec2,btemp+11
 41203   010C7A  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 41204   010C80  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 41205                           
 41206                           ;stkvar	_fp @ sp[(-10)+-2]
 41207   010C86  0EF4               	movlw	-12
 41208   010C88  006F FF8F FFE6     	movff	plusw1,postinc1
 41209   010C8E  006F FF8F FFE6     	movff	plusw1,postinc1
 41210   010C94  EC38  F0A0         	call	_stoa	;wreg free
 41211   010C98  D068               	goto	l3298
 41212   010C9A                     l12082:
 41213                           
 41214                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1798:         if ((*fmt)[0] =
      +                          = '%') {
 41215                           ;stkvar	_fmt @ sp[(-8)+-4]
 41216   010C9A  0EF4               	movlw	-12
 41217   010C9C  006F FF8F FFD9     	movff	plusw1,fsr2l
 41218   010CA2  0EF5               	movlw	-11
 41219   010CA4  006F FF8F FFDA     	movff	plusw1,fsr2h
 41220   010CAA  006F FF7B FFF6     	movff	postinc2,tblptrl
 41221   010CB0  006F FF77 FFF7     	movff	postdec2,tblptrh
 41222   010CB6                     	if	0	;tblptru may be non-zero
 41223   010CB6                     	endif
 41224   010CB6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 41225   010CB6  0E00               	movlw	low (__pmediumconst shr (0+16))
 41226   010CB8  6EF8               	movwf	tblptru,c
 41227   010CBA                     	endif
 41228   010CBA  0008               	tblrd		*
 41229   010CBC  50F5               	movf	tablat,w,c
 41230   010CBE  0A25               	xorlw	37
 41231   010CC0  A4D8               	btfss	status,2,c
 41232   010CC2  D01D               	goto	l12092
 41233                           
 41234                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1799:             ++*fmt;
 41235                           ;stkvar	_fmt @ sp[(-8)+-4]
 41236   010CC4  0EF4               	movlw	-12
 41237   010CC6  006F FF8F FFD9     	movff	plusw1,fsr2l
 41238   010CCC  0EF5               	movlw	-11
 41239   010CCE  006F FF8F FFDA     	movff	plusw1,fsr2h
 41240   010CD4  2ADE               	incf	postinc2,f,c
 41241   010CD6  0E00               	movlw	0
 41242   010CD8  22DD               	addwfc	postdec2,f,c
 41243                           
 41244                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1800:             fputc((int)
      +                          '%', fp);
 41245                           ;stkvar	_fp @ sp[(-8)+-2]
 41246   010CDA  0EF6               	movlw	-10
 41247   010CDC  006F FF8F FFE6     	movff	plusw1,postinc1
 41248   010CE2  006F FF8F FFE6     	movff	plusw1,postinc1
 41249   010CE8  0E25               	movlw	37
 41250   010CEA  6EE6               	movwf	postinc1,c
 41251   010CEC  0E00               	movlw	0
 41252   010CEE  6EE6               	movwf	postinc1,c
 41253   010CF0  ECDE  F0AD         	call	_fputc	;wreg free
 41254   010CF4                     l12088:
 41255                           
 41256                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1801:             return (int
      +                          ) 1;
 41257   010CF4  0E01               	movlw	1
 41258   010CF6                     L34:
 41259   010CF6  6E23               	movwf	btemp^0,c
 41260   010CF8  0E00               	movlw	0
 41261   010CFA  6E24               	movwf	(btemp+1)^0,c
 41262   010CFC  D036               	goto	l3298
 41263   010CFE                     l12092:
 41264                           
 41265                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1806:         ++*fmt;
 41266                           ;stkvar	_fmt @ sp[(-8)+-4]
 41267   010CFE  0EF4               	movlw	-12
 41268   010D00  006F FF8F FFD9     	movff	plusw1,fsr2l
 41269   010D06  0EF5               	movlw	-11
 41270   010D08  006F FF8F FFDA     	movff	plusw1,fsr2h
 41271   010D0E  2ADE               	incf	postinc2,f,c
 41272   010D10  0E00               	movlw	0
 41273   010D12  22DD               	addwfc	postdec2,f,c
 41274   010D14  D6AE               	goto	l12046
 41275   010D16                     l12098:
 41276                           
 41277                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1811:     fputc((int)(*fmt)[0
      +                          ], fp);
 41278                           ;stkvar	_fp @ sp[(-8)+-2]
 41279   010D16  0EF6               	movlw	-10
 41280   010D18  006F FF8F FFE6     	movff	plusw1,postinc1
 41281   010D1E  006F FF8F FFE6     	movff	plusw1,postinc1
 41282                           
 41283                           ;stkvar	_fmt @ sp[(-10)+-4]
 41284   010D24  0EF2               	movlw	-14
 41285   010D26  006F FF8F FFD9     	movff	plusw1,fsr2l
 41286   010D2C  0EF3               	movlw	-13
 41287   010D2E  006F FF8F FFDA     	movff	plusw1,fsr2h
 41288   010D34  006F FF7B FFF6     	movff	postinc2,tblptrl
 41289   010D3A  006F FF77 FFF7     	movff	postdec2,tblptrh
 41290   010D40                     	if	0	;tblptru may be non-zero
 41291   010D40                     	endif
 41292   010D40                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 41293   010D40  0E00               	movlw	low (__pmediumconst shr (0+16))
 41294   010D42  6EF8               	movwf	tblptru,c
 41295   010D44                     	endif
 41296   010D44  0008               	tblrd		*
 41297   010D46  50F5               	movf	tablat,w,c
 41298   010D48  6EE6               	movwf	postinc1,c
 41299   010D4A  0E00               	movlw	0
 41300   010D4C  6EE6               	movwf	postinc1,c
 41301   010D4E  ECDE  F0AD         	call	_fputc	;wreg free
 41302                           
 41303                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1812:     ++*fmt;
 41304                           ;stkvar	_fmt @ sp[(-8)+-4]
 41305   010D52  0EF4               	movlw	-12
 41306   010D54  006F FF8F FFD9     	movff	plusw1,fsr2l
 41307   010D5A  0EF5               	movlw	-11
 41308   010D5C  006F FF8F FFDA     	movff	plusw1,fsr2h
 41309   010D62  2ADE               	incf	postinc2,f,c
 41310   010D64  0E00               	movlw	0
 41311   010D66  22DD               	addwfc	postdec2,f,c
 41312   010D68  D7C5               	goto	l12088
 41313   010D6A                     l3298:
 41314                           
 41315                           ; _vfpfcnvrt: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 41316   010D6A  0EF2               	movlw	242
 41317   010D6C  26E1               	addwf	fsr1l,f,c
 41318   010D6E  0EFF               	movlw	255
 41319   010D70  22E2               	addwfc	fsr1h,f,c
 41320   010D72  0012               	return		;funcret
 41321   010D74                     __end_of_vfpfcnvrt:
 41322                           	callstack 0
 41323                           
 41324 ;; *************** function _xtoa *****************
 41325 ;; Defined at:
 41326 ;;		line 1052 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c"
 41327 ;; Parameters:    Size  Location     Type
 41328 ;;  fp              2  [STACK] PTR struct _IO_FILE
 41329 ;;		 -> f(11), NULL(0), 
 41330 ;;  d               4  [STACK] unsigned long 
 41331 ;;  x               1  [STACK] unsigned char 
 41332 ;; Auto vars:     Size  Location     Type
 41333 ;;  i               2  [STACK] int 
 41334 ;;  w               2  [STACK] int 
 41335 ;;  p               2  [STACK] int 
 41336 ;;  c               1  [STACK] unsigned char 
 41337 ;;  d_nonzero       1  [STACK] _Bool 
 41338 ;;  a               1  [STACK] unsigned char 
 41339 ;; Return value:  Size  Location     Type
 41340 ;;                  2  [STACK] int 
 41341 ;; Registers used:
 41342 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
 41343 ;; Tracked objects:
 41344 ;;		On entry : 0/1
 41345 ;;		On exit  : 0/0
 41346 ;;		Unchanged: 0/0
 41347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41352 ;;Total ram usage:        0 bytes
 41353 ;; Hardware stack levels used: 1
 41354 ;; Hardware stack levels required when called: 8
 41355 ;; This function calls:
 41356 ;;		_pad
 41357 ;; This function is called by:
 41358 ;;		_vfpfcnvrt
 41359 ;; This function uses a reentrant model
 41360 ;;
 41361                           
 41362                           	psect	text97
 41363   0137B2                     __ptext97:
 41364                           	callstack 0
 41365   0137B2                     _xtoa:
 41366                           	callstack 0
 41367                           
 41368                           ; autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 41369   0137B2  0E0B               	movlw	11
 41370   0137B4  26E1               	addwf	fsr1l,f,c
 41371   0137B6  0E00               	movlw	0
 41372   0137B8  22E2               	addwfc	fsr1h,f,c
 41373                           
 41374                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1076:     if (!(prec < 0)) {
 41375                           
 41376                           ;incstack = 0
 41377   0137BA  0101               	movlb	1	; () banked
 41378   0137BC  AFC4               	btfss	(_prec+1)& (0+255),7,b
 41379                           
 41380                           ; BSR set to: 1
 41381                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1077:         flags &= ~(1 <<
      +                           1);
 41382   0137BE  93C5               	bcf	_flags& (0+255),1,b
 41383                           
 41384                           ; BSR set to: 1
 41385                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1080:     p = (0 <= prec) ? p
      +                          rec : 1;
 41386   0137C0  AFC4               	btfss	(_prec+1)& (0+255),7,b
 41387   0137C2  D00D               	goto	l11808
 41388                           
 41389                           ; BSR set to: 1
 41390   0137C4  0E01               	movlw	1
 41391   0137C6  6E2D               	movwf	(btemp+10)^0,c
 41392   0137C8  0E00               	movlw	0
 41393   0137CA  6E2E               	movwf	(btemp+11)^0,c
 41394                           
 41395                           ;stkvar	_p @ sp[(-11)+6]
 41396   0137CC  0EFB               	movlw	-5
 41397   0137CE  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 41398   0137D4  0EFC               	movlw	-4
 41399   0137D6  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 41400   0137DC  D008               	goto	l3255
 41401   0137DE                     l11808:
 41402                           
 41403                           ; BSR set to: 1
 41404                           ;stkvar	_p @ sp[(-11)+6]
 41405   0137DE  0EFB               	movlw	-5
 41406   0137E0  0060  F70F  FFE3   	movff	_prec,plusw1
 41407   0137E6  0EFC               	movlw	-4
 41408   0137E8  0060  F713  FFE3   	movff	_prec+1,plusw1
 41409   0137EE                     l3255:
 41410                           
 41411                           ; BSR set to: 1
 41412                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1082:     w = width;
 41413                           ;stkvar	_w @ sp[(-11)+4]
 41414   0137EE  0EF9               	movlw	-7
 41415   0137F0  0060  F707  FFE3   	movff	_width,plusw1
 41416   0137F6  0EFA               	movlw	-6
 41417   0137F8  0060  F70B  FFE3   	movff	_width+1,plusw1
 41418                           
 41419                           ; BSR set to: 1
 41420                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1084:  d_nonzero = d != 0;
 41421                           ;stkvar	_d @ sp[(-11)+-6]
 41422   0137FE  0EEF               	movlw	-17
 41423   013800  50E3               	movf	plusw1,w,c
 41424   013802  E10A               	bnz	u8371
 41425   013804  0EF0               	movlw	-16
 41426   013806  50E3               	movf	plusw1,w,c
 41427   013808  E107               	bnz	u8371
 41428   01380A  0EF1               	movlw	-15
 41429   01380C  50E3               	movf	plusw1,w,c
 41430   01380E  E104               	bnz	u8371
 41431   013810  0EF2               	movlw	-14
 41432   013812  50E3               	movf	plusw1,w,c
 41433   013814  B4D8               	btfsc	status,2,c
 41434   013816  D003               	goto	u8370
 41435   013818                     u8371:
 41436   013818  6A2E               	clrf	(btemp+11)^0,c
 41437   01381A  2A2E               	incf	(btemp+11)^0,f,c
 41438   01381C  D001               	goto	u8388
 41439   01381E                     u8370:
 41440   01381E  6A2E               	clrf	(btemp+11)^0,c
 41441   013820                     u8388:
 41442                           
 41443                           ;stkvar	_d_nonzero @ sp[(-11)+9]
 41444   013820  0EFE               	movlw	-2
 41445   013822  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 41446                           
 41447                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1085:     if ((flags & (1 << 
      +                          4)) && d_nonzero) {
 41448   013828  0101               	movlb	1	; () banked
 41449   01382A  A9C5               	btfss	_flags& (0+255),4,b
 41450   01382C  D00F               	goto	l11818
 41451                           
 41452                           ; BSR set to: 1
 41453                           ;stkvar	_d_nonzero @ sp[(-11)+9]
 41454   01382E  0EFE               	movlw	-2
 41455   013830  50E3               	movf	plusw1,w,c
 41456   013832  B4D8               	btfsc	status,2,c
 41457   013834  D00B               	goto	l11818
 41458                           
 41459                           ; BSR set to: 1
 41460                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1086:         w -= 2;
 41461                           ;stkvar	_w @ sp[(-11)+4]
 41462   013836  50E1               	movf	fsr1l,w,c
 41463   013838  0FF9               	addlw	-7
 41464   01383A  6ED9               	movwf	fsr2l,c
 41465   01383C  50E2               	movf	fsr1h,w,c
 41466   01383E  6EDA               	movwf	fsr2h,c
 41467   013840  0EFF               	movlw	255
 41468   013842  22DA               	addwfc	fsr2h,f,c
 41469   013844  0EFE               	movlw	254
 41470   013846  26DE               	addwf	postinc2,f,c
 41471   013848  0EFF               	movlw	255
 41472   01384A  22DD               	addwfc	postdec2,f,c
 41473   01384C                     l11818:
 41474                           
 41475                           ; BSR set to: 1
 41476                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1091:  a = x == 'x' ? 'a' : '
      +                          A';
 41477                           ;stkvar	_x @ sp[(-11)+-7]
 41478   01384C  0EEE               	movlw	-18
 41479   01384E  006F FF8C  F023    	movff	plusw1,btemp
 41480   013854  0E78               	movlw	120
 41481   013856  1823               	xorwf	btemp^0,w,c
 41482   013858  B4D8               	btfsc	status,2,c
 41483   01385A  D002               	goto	l11822
 41484                           
 41485                           ; BSR set to: 1
 41486   01385C  0E41               	movlw	65
 41487   01385E  D001               	goto	L36
 41488   013860                     l11822:
 41489                           
 41490                           ; BSR set to: 1
 41491   013860  0E61               	movlw	97
 41492   013862                     L36:
 41493   013862  6E2D               	movwf	(btemp+10)^0,c
 41494   013864  0E00               	movlw	0
 41495   013866  6E2E               	movwf	(btemp+11)^0,c
 41496                           
 41497                           ;stkvar	_xtoa$5786 @ sp[(-11)+0]
 41498   013868  0EF5               	movlw	-11
 41499   01386A  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 41500   013870  0EF6               	movlw	-10
 41501   013872  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 41502                           
 41503                           ; BSR set to: 1
 41504                           ;stkvar	_xtoa$5786 @ sp[(-11)+0]
 41505                           ;stkvar	_a @ sp[(-11)+10]
 41506   013878  0EF5               	movlw	-11
 41507   01387A  006F FF8C  F023    	movff	plusw1,btemp
 41508   013880  0EFF               	movlw	-1
 41509   013882  0060  F08F  FFE3   	movff	btemp,plusw1
 41510                           
 41511                           ; BSR set to: 1
 41512                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1095:     i = sizeof(dbuf) - 
      +                          1;
 41513   013888  0E1F               	movlw	31
 41514   01388A  6E2D               	movwf	(btemp+10)^0,c
 41515   01388C  0E00               	movlw	0
 41516   01388E  6E2E               	movwf	(btemp+11)^0,c
 41517                           
 41518                           ;stkvar	_i @ sp[(-11)+2]
 41519   013890  0EF7               	movlw	-9
 41520   013892  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 41521   013898  0EF8               	movlw	-8
 41522   01389A  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 41523                           
 41524                           ; BSR set to: 1
 41525                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1096:     dbuf[i] = '\0';
 41526   0138A0  6BE5               	clrf	(_dbuf+31)& (0+255),b
 41527                           
 41528                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1097:     while (!(i < 2) && 
      +                          (d != 0
 41529   0138A2  D070               	goto	l11846
 41530   0138A4                     l11830:
 41531                           
 41532                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1106:     )) {;/opt/microchip
      +                          /xc8/v3.00/pic/sources/c99/common/doprnt.c: 1107:         --i;
 41533                           ;stkvar	_i @ sp[(-11)+2]
 41534   0138A4  50E1               	movf	fsr1l,w,c
 41535   0138A6  0FF7               	addlw	-9
 41536   0138A8  6ED9               	movwf	fsr2l,c
 41537   0138AA  50E2               	movf	fsr1h,w,c
 41538   0138AC  6EDA               	movwf	fsr2h,c
 41539   0138AE  0EFF               	movlw	255
 41540   0138B0  22DA               	addwfc	fsr2h,f,c
 41541   0138B2  06DE               	decf	postinc2,f,c
 41542   0138B4  0E00               	movlw	0
 41543   0138B6  5ADD               	subwfb	postdec2,f,c
 41544                           
 41545                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1108:         c = d & 0x0f;
 41546                           ;stkvar	_d @ sp[(-11)+-6]
 41547   0138B8  0EEF               	movlw	-17
 41548   0138BA  006F FF8C  F02E    	movff	plusw1,btemp+11
 41549   0138C0  0E0F               	movlw	15
 41550   0138C2  162E               	andwf	(btemp+11)^0,f,c
 41551                           
 41552                           ;stkvar	_c @ sp[(-11)+8]
 41553   0138C4  0EFD               	movlw	-3
 41554   0138C6  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 41555                           
 41556                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1109:   if (c < 10) {
 41557                           ;stkvar	_c @ sp[(-11)+8]
 41558   0138CC  0EFD               	movlw	-3
 41559   0138CE  006F FF8C  F023    	movff	plusw1,btemp
 41560   0138D4  0E0A               	movlw	10
 41561   0138D6  6023               	cpfslt	btemp^0,c
 41562   0138D8  D00B               	goto	l11838
 41563                           
 41564                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1110:    c += '0';
 41565                           ;stkvar	_c @ sp[(-11)+8]
 41566   0138DA  0EFD               	movlw	-3
 41567   0138DC  006F FF8C  F023    	movff	plusw1,btemp
 41568   0138E2  0E30               	movlw	48
 41569   0138E4  2623               	addwf	btemp^0,f,c
 41570   0138E6  0EFD               	movlw	-3
 41571   0138E8  0060  F08F  FFE3   	movff	btemp,plusw1
 41572                           
 41573                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1111:   }
 41574   0138EE  D00F               	goto	l3264
 41575   0138F0                     l11838:
 41576                           
 41577                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1114:    c += a - 10;
 41578   0138F0  0EF6               	movlw	246
 41579   0138F2  6E2E               	movwf	(btemp+11)^0,c
 41580                           
 41581                           ;stkvar	_a @ sp[(-11)+10]
 41582   0138F4  0EFF               	movlw	-1
 41583   0138F6  50E3               	movf	plusw1,w,c
 41584   0138F8  242E               	addwf	(btemp+11)^0,w,c
 41585   0138FA  6E2D               	movwf	(btemp+10)^0,c
 41586                           
 41587                           ;stkvar	_c @ sp[(-11)+8]
 41588   0138FC  50E1               	movf	fsr1l,w,c
 41589   0138FE  0FFD               	addlw	-3
 41590   013900  6ED9               	movwf	fsr2l,c
 41591   013902  50E2               	movf	fsr1h,w,c
 41592   013904  6EDA               	movwf	fsr2h,c
 41593   013906  0EFF               	movlw	255
 41594   013908  22DA               	addwfc	fsr2h,f,c
 41595   01390A  502D               	movf	(btemp+10)^0,w,c
 41596   01390C  26DF               	addwf	indf2,f,c
 41597   01390E                     l3264:
 41598                           
 41599                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1121:   dbuf[i] = c;
 41600                           ;stkvar	_c @ sp[(-11)+8]
 41601                           ;stkvar	_i @ sp[(-11)+2]
 41602   01390E  0EF7               	movlw	-9
 41603   013910  006F FF8C  F02D    	movff	plusw1,btemp+10
 41604   013916  0EF8               	movlw	-8
 41605   013918  006F FF8C  F02E    	movff	plusw1,btemp+11
 41606   01391E  0EC6               	movlw	low _dbuf
 41607   013920  242D               	addwf	(btemp+10)^0,w,c
 41608   013922  6ED9               	movwf	fsr2l,c
 41609   013924  0E01               	movlw	high _dbuf
 41610   013926  202E               	addwfc	(btemp+11)^0,w,c
 41611   013928  6EDA               	movwf	fsr2h,c
 41612   01392A  0EFD               	movlw	-3
 41613   01392C  006F FF8F FFDF     	movff	plusw1,indf2
 41614                           
 41615                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1123:         --p;
 41616                           ;stkvar	_p @ sp[(-11)+6]
 41617   013932  50E1               	movf	fsr1l,w,c
 41618   013934  0FFB               	addlw	-5
 41619   013936  6ED9               	movwf	fsr2l,c
 41620   013938  50E2               	movf	fsr1h,w,c
 41621   01393A  6EDA               	movwf	fsr2h,c
 41622   01393C  0EFF               	movlw	255
 41623   01393E  22DA               	addwfc	fsr2h,f,c
 41624   013940  06DE               	decf	postinc2,f,c
 41625   013942  0E00               	movlw	0
 41626   013944  5ADD               	subwfb	postdec2,f,c
 41627                           
 41628                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1127:         --w;
 41629                           ;stkvar	_w @ sp[(-11)+4]
 41630   013946  50E1               	movf	fsr1l,w,c
 41631   013948  0FF9               	addlw	-7
 41632   01394A  6ED9               	movwf	fsr2l,c
 41633   01394C  50E2               	movf	fsr1h,w,c
 41634   01394E  6EDA               	movwf	fsr2h,c
 41635   013950  0EFF               	movlw	255
 41636   013952  22DA               	addwfc	fsr2h,f,c
 41637   013954  06DE               	decf	postinc2,f,c
 41638   013956  0E00               	movlw	0
 41639   013958  5ADD               	subwfb	postdec2,f,c
 41640                           
 41641                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1128:         d = d >> 4;
 41642   01395A  0E04               	movlw	4
 41643   01395C  6E2E               	movwf	(btemp+11)^0,c
 41644                           
 41645                           ;stkvar	_d @ sp[(-11)+-6]
 41646   01395E  50E1               	movf	fsr1l,w,c
 41647   013960  0FEF               	addlw	-17
 41648   013962  6ED9               	movwf	fsr2l,c
 41649   013964  50E2               	movf	fsr1h,w,c
 41650   013966  6EDA               	movwf	fsr2h,c
 41651   013968  0EFF               	movlw	255
 41652   01396A  22DA               	addwfc	fsr2h,f,c
 41653   01396C  282E               	incf	(btemp+11)^0,w,c
 41654   01396E  52DE               	movf	postinc2,f,c
 41655   013970  D007               	goto	u8430
 41656   013972                     u8435:
 41657   013972  52DE               	movf	postinc2,f,c
 41658   013974  52DE               	movf	postinc2,f,c
 41659   013976  90D8               	bcf	status,0,c
 41660   013978  32DD               	rrcf	postdec2,f,c
 41661   01397A  32DD               	rrcf	postdec2,f,c
 41662   01397C  32DD               	rrcf	postdec2,f,c
 41663   01397E  32DE               	rrcf	postinc2,f,c
 41664   013980                     u8430:
 41665   013980  2EE8               	decfsz	wreg,f,c
 41666   013982  D7F7               	goto	u8435
 41667   013984                     l11846:
 41668                           
 41669                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1097:     while (!(i < 2) && 
      +                          (d != 0
 41670                           ;stkvar	_i @ sp[(-11)+2]
 41671   013984  0EF8               	movlw	-8
 41672   013986  BEE3               	btfsc	plusw1,7,c
 41673   013988  D02F               	goto	u8480
 41674   01398A  0EF8               	movlw	-8
 41675   01398C  50E3               	movf	plusw1,w,c
 41676   01398E  E108               	bnz	u8440
 41677   013990  0EF7               	movlw	-9
 41678   013992  006F FF8C  F023    	movff	plusw1,btemp
 41679   013998  0E02               	movlw	2
 41680   01399A  5E23               	subwf	btemp^0,f,c
 41681   01399C  A0D8               	btfss	status,0,c
 41682   01399E  D024               	goto	u8480
 41683   0139A0                     u8440:
 41684                           
 41685                           ;stkvar	_d @ sp[(-11)+-6]
 41686   0139A0  0EEF               	movlw	-17
 41687   0139A2  50E3               	movf	plusw1,w,c
 41688   0139A4  E109               	bnz	u8451
 41689   0139A6  0EF0               	movlw	-16
 41690   0139A8  50E3               	movf	plusw1,w,c
 41691   0139AA  E106               	bnz	u8451
 41692   0139AC  0EF1               	movlw	-15
 41693   0139AE  50E3               	movf	plusw1,w,c
 41694   0139B0  E103               	bnz	u8451
 41695   0139B2  0EF2               	movlw	-14
 41696   0139B4  50E3               	movf	plusw1,w,c
 41697   0139B6  A4D8               	btfss	status,2,c
 41698   0139B8                     u8451:
 41699   0139B8  D775               	goto	l11830
 41700                           
 41701                           ;stkvar	_p @ sp[(-11)+6]
 41702   0139BA  0EFC               	movlw	-4
 41703   0139BC  BEE3               	btfsc	plusw1,7,c
 41704   0139BE  D007               	goto	u8460
 41705   0139C0  0EFC               	movlw	-4
 41706   0139C2  50E3               	movf	plusw1,w,c
 41707   0139C4  E103               	bnz	u8461
 41708   0139C6  0EFB               	movlw	-5
 41709   0139C8  04E3               	decf	plusw1,w,c
 41710   0139CA  B0D8               	btfsc	status,0,c
 41711   0139CC                     u8461:
 41712   0139CC  D76B               	goto	l11830
 41713   0139CE                     u8460:
 41714                           
 41715                           ;stkvar	_w @ sp[(-11)+4]
 41716   0139CE  0EFA               	movlw	-6
 41717   0139D0  BEE3               	btfsc	plusw1,7,c
 41718   0139D2  D00A               	goto	u8480
 41719   0139D4  0EFA               	movlw	-6
 41720   0139D6  50E3               	movf	plusw1,w,c
 41721   0139D8  E104               	bnz	u8470
 41722   0139DA  0EF9               	movlw	-7
 41723   0139DC  04E3               	decf	plusw1,w,c
 41724   0139DE  A0D8               	btfss	status,0,c
 41725   0139E0  D003               	goto	u8480
 41726   0139E2                     u8470:
 41727   0139E2  0101               	movlb	1	; () banked
 41728   0139E4  B3C5               	btfsc	_flags& (0+255),1,b
 41729   0139E6  D75E               	goto	l11830
 41730   0139E8                     u8480:
 41731                           
 41732                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1133:     if ((flags & (1 << 
      +                          4)) && d_nonzero
 41733   0139E8  0101               	movlb	1	; () banked
 41734   0139EA  A9C5               	btfss	_flags& (0+255),4,b
 41735   0139EC  D03E               	goto	l11866
 41736                           
 41737                           ; BSR set to: 1
 41738                           ;stkvar	_d_nonzero @ sp[(-11)+9]
 41739   0139EE  0EFE               	movlw	-2
 41740   0139F0  50E3               	movf	plusw1,w,c
 41741   0139F2  B4D8               	btfsc	status,2,c
 41742   0139F4  D03A               	goto	l11866
 41743                           
 41744                           ; BSR set to: 1
 41745   0139F6  51C3               	movf	_prec& (0+255),w,b
 41746   0139F8  11C4               	iorwf	(_prec+1)& (0+255),w,b
 41747   0139FA  B4D8               	btfsc	status,2,c
 41748   0139FC  D036               	goto	l11866
 41749                           
 41750                           ; BSR set to: 1
 41751                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1137:     ) {;/opt/microchip/
      +                          xc8/v3.00/pic/sources/c99/common/doprnt.c: 1138:         --i;
 41752                           ;stkvar	_i @ sp[(-11)+2]
 41753   0139FE  50E1               	movf	fsr1l,w,c
 41754   013A00  0FF7               	addlw	-9
 41755   013A02  6ED9               	movwf	fsr2l,c
 41756   013A04  50E2               	movf	fsr1h,w,c
 41757   013A06  6EDA               	movwf	fsr2h,c
 41758   013A08  0EFF               	movlw	255
 41759   013A0A  22DA               	addwfc	fsr2h,f,c
 41760   013A0C  06DE               	decf	postinc2,f,c
 41761   013A0E  0E00               	movlw	0
 41762   013A10  5ADD               	subwfb	postdec2,f,c
 41763                           
 41764                           ; BSR set to: 1
 41765                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1140:         dbuf[i] = x;
 41766                           ;stkvar	_x @ sp[(-11)+-7]
 41767                           ;stkvar	_i @ sp[(-11)+2]
 41768   013A12  0EF7               	movlw	-9
 41769   013A14  006F FF8C  F02D    	movff	plusw1,btemp+10
 41770   013A1A  0EF8               	movlw	-8
 41771   013A1C  006F FF8C  F02E    	movff	plusw1,btemp+11
 41772   013A22  0EC6               	movlw	low _dbuf
 41773   013A24  242D               	addwf	(btemp+10)^0,w,c
 41774   013A26  6ED9               	movwf	fsr2l,c
 41775   013A28  0E01               	movlw	high _dbuf
 41776   013A2A  202E               	addwfc	(btemp+11)^0,w,c
 41777   013A2C  6EDA               	movwf	fsr2h,c
 41778   013A2E  0EEE               	movlw	-18
 41779   013A30  006F FF8F FFDF     	movff	plusw1,indf2
 41780                           
 41781                           ; BSR set to: 1
 41782                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1146:         --i;
 41783                           ;stkvar	_i @ sp[(-11)+2]
 41784   013A36  50E1               	movf	fsr1l,w,c
 41785   013A38  0FF7               	addlw	-9
 41786   013A3A  6ED9               	movwf	fsr2l,c
 41787   013A3C  50E2               	movf	fsr1h,w,c
 41788   013A3E  6EDA               	movwf	fsr2h,c
 41789   013A40  0EFF               	movlw	255
 41790   013A42  22DA               	addwfc	fsr2h,f,c
 41791   013A44  06DE               	decf	postinc2,f,c
 41792   013A46  0E00               	movlw	0
 41793   013A48  5ADD               	subwfb	postdec2,f,c
 41794                           
 41795                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1147:         dbuf[i] = '0';
 41796                           ;stkvar	_i @ sp[(-11)+2]
 41797   013A4A  0EF7               	movlw	-9
 41798   013A4C  006F FF8C  F02D    	movff	plusw1,btemp+10
 41799   013A52  0EF8               	movlw	-8
 41800   013A54  006F FF8C  F02E    	movff	plusw1,btemp+11
 41801   013A5A  0EC6               	movlw	low _dbuf
 41802   013A5C  242D               	addwf	(btemp+10)^0,w,c
 41803   013A5E  6ED9               	movwf	fsr2l,c
 41804   013A60  0E01               	movlw	high _dbuf
 41805   013A62  202E               	addwfc	(btemp+11)^0,w,c
 41806   013A64  6EDA               	movwf	fsr2h,c
 41807   013A66  0E30               	movlw	48
 41808   013A68  6EDF               	movwf	indf2,c
 41809   013A6A                     l11866:
 41810                           
 41811                           ; BSR set to: 1
 41812                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1152:     return (int) pad(fp
      +                          , &dbuf[i], w);
 41813                           ;stkvar	_w @ sp[(-11)+4]
 41814   013A6A  0EF9               	movlw	-7
 41815   013A6C  006F FF8F FFE6     	movff	plusw1,postinc1
 41816   013A72  006F FF8F FFE6     	movff	plusw1,postinc1
 41817                           
 41818                           ;stkvar	_i @ sp[(-13)+2]
 41819   013A78  0EC6               	movlw	low _dbuf
 41820   013A7A  6E2D               	movwf	(btemp+10)^0,c
 41821   013A7C  0E01               	movlw	high _dbuf
 41822   013A7E  6E2E               	movwf	(btemp+11)^0,c
 41823   013A80  0EF5               	movlw	-11
 41824   013A82  50E3               	movf	plusw1,w,c
 41825   013A84  262D               	addwf	(btemp+10)^0,f,c
 41826   013A86  0EF6               	movlw	-10
 41827   013A88  50E3               	movf	plusw1,w,c
 41828   013A8A  222E               	addwfc	(btemp+11)^0,f,c
 41829   013A8C  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 41830   013A92  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 41831                           
 41832                           ;stkvar	_fp @ sp[(-15)+-2]
 41833   013A98  0EEF               	movlw	-17
 41834   013A9A  006F FF8F FFE6     	movff	plusw1,postinc1
 41835   013AA0  006F FF8F FFE6     	movff	plusw1,postinc1
 41836   013AA6  ECB0  F0B1         	call	_pad	;wreg free
 41837                           
 41838                           ; _xtoa: autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize
      +                           = 7, vargsize = 0
 41839   013AAA  0EEE               	movlw	238
 41840   013AAC  26E1               	addwf	fsr1l,f,c
 41841   013AAE  0EFF               	movlw	255
 41842   013AB0  22E2               	addwfc	fsr1h,f,c
 41843   013AB2  0012               	return		;funcret
 41844   013AB4                     __end_of_xtoa:
 41845                           	callstack 0
 41846                           
 41847 ;; *************** function _utoa *****************
 41848 ;; Defined at:
 41849 ;;		line 1001 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c"
 41850 ;; Parameters:    Size  Location     Type
 41851 ;;  fp              2  [STACK] PTR struct _IO_FILE
 41852 ;;		 -> f(11), NULL(0), 
 41853 ;;  d               4  [STACK] unsigned long 
 41854 ;; Auto vars:     Size  Location     Type
 41855 ;;  i               2  [STACK] int 
 41856 ;;  w               2  [STACK] int 
 41857 ;;  p               2  [STACK] int 
 41858 ;; Return value:  Size  Location     Type
 41859 ;;                  2  [STACK] int 
 41860 ;; Registers used:
 41861 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl
 41862 ;; Tracked objects:
 41863 ;;		On entry : 0/1
 41864 ;;		On exit  : 0/0
 41865 ;;		Unchanged: 0/0
 41866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41871 ;;Total ram usage:        0 bytes
 41872 ;; Hardware stack levels used: 1
 41873 ;; Hardware stack levels required when called: 8
 41874 ;; This function calls:
 41875 ;;		___lldiv
 41876 ;;		___llmod
 41877 ;;		_pad
 41878 ;; This function is called by:
 41879 ;;		_vfpfcnvrt
 41880 ;; This function uses a reentrant model
 41881 ;;
 41882                           
 41883                           	psect	text98
 41884   014E66                     __ptext98:
 41885                           	callstack 0
 41886   014E66                     _utoa:
 41887                           	callstack 0
 41888                           
 41889                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41890   014E66  0E06               	movlw	6
 41891   014E68  26E1               	addwf	fsr1l,f,c
 41892   014E6A  0E00               	movlw	0
 41893   014E6C  22E2               	addwfc	fsr1h,f,c
 41894                           
 41895                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1001: static int utoa(FILE *f
      +                          p, vfpf_uint_t d);/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1002: {;/opt
      +                          /microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1003:     int i, w;;/opt/microchip
      +                          /xc8/v3.00/pic/sources/c99/common/doprnt.c: 1005:  int p;;/opt/microchip/xc8/v3.00/pic/s
      +                          ources/c99/common/doprnt.c: 1013:     if (!(prec < 0)) {
 41896                           
 41897                           ;incstack = 0
 41898   014E6E  0101               	movlb	1	; () banked
 41899   014E70  AFC4               	btfss	(_prec+1)& (0+255),7,b
 41900                           
 41901                           ; BSR set to: 1
 41902                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1014:         flags &= ~(1 <<
      +                           1);
 41903   014E72  93C5               	bcf	_flags& (0+255),1,b
 41904                           
 41905                           ; BSR set to: 1
 41906                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1017:     p = (0 <= prec) ? p
      +                          rec : 1;
 41907   014E74  AFC4               	btfss	(_prec+1)& (0+255),7,b
 41908   014E76  D00D               	goto	l11768
 41909                           
 41910                           ; BSR set to: 1
 41911   014E78  0E01               	movlw	1
 41912   014E7A  6E2D               	movwf	(btemp+10)^0,c
 41913   014E7C  0E00               	movlw	0
 41914   014E7E  6E2E               	movwf	(btemp+11)^0,c
 41915                           
 41916                           ;stkvar	_p @ sp[(-6)+4]
 41917   014E80  0EFE               	movlw	-2
 41918   014E82  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 41919   014E88  0EFF               	movlw	-1
 41920   014E8A  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 41921   014E90  D008               	goto	l3240
 41922   014E92                     l11768:
 41923                           
 41924                           ; BSR set to: 1
 41925                           ;stkvar	_p @ sp[(-6)+4]
 41926   014E92  0EFE               	movlw	-2
 41927   014E94  0060  F70F  FFE3   	movff	_prec,plusw1
 41928   014E9A  0EFF               	movlw	-1
 41929   014E9C  0060  F713  FFE3   	movff	_prec+1,plusw1
 41930   014EA2                     l3240:
 41931                           
 41932                           ; BSR set to: 1
 41933                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1019:     w = width;
 41934                           ;stkvar	_w @ sp[(-6)+2]
 41935   014EA2  0EFC               	movlw	-4
 41936   014EA4  0060  F707  FFE3   	movff	_width,plusw1
 41937   014EAA  0EFD               	movlw	-3
 41938   014EAC  0060  F70B  FFE3   	movff	_width+1,plusw1
 41939                           
 41940                           ; BSR set to: 1
 41941                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1022:     i = sizeof(dbuf) - 
      +                          1;
 41942   014EB2  0E1F               	movlw	31
 41943   014EB4  6E2D               	movwf	(btemp+10)^0,c
 41944   014EB6  0E00               	movlw	0
 41945   014EB8  6E2E               	movwf	(btemp+11)^0,c
 41946                           
 41947                           ;stkvar	_i @ sp[(-6)+0]
 41948   014EBA  0EFA               	movlw	-6
 41949   014EBC  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 41950   014EC2  0EFB               	movlw	-5
 41951   014EC4  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 41952                           
 41953                           ; BSR set to: 1
 41954                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1023:     dbuf[i] = '\0';
 41955   014ECA  6BE5               	clrf	(_dbuf+31)& (0+255),b
 41956                           
 41957                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1024:     while (i && (d != 0
 41958   014ECC  D071               	goto	l11784
 41959   014ECE                     l11774:
 41960                           
 41961                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1033:     )) {;/opt/microchip
      +                          /xc8/v3.00/pic/sources/c99/common/doprnt.c: 1034:         --i;
 41962                           ;stkvar	_i @ sp[(-6)+0]
 41963   014ECE  50E1               	movf	fsr1l,w,c
 41964   014ED0  0FFA               	addlw	-6
 41965   014ED2  6ED9               	movwf	fsr2l,c
 41966   014ED4  50E2               	movf	fsr1h,w,c
 41967   014ED6  6EDA               	movwf	fsr2h,c
 41968   014ED8  0EFF               	movlw	255
 41969   014EDA  22DA               	addwfc	fsr2h,f,c
 41970   014EDC  06DE               	decf	postinc2,f,c
 41971   014EDE  0E00               	movlw	0
 41972   014EE0  5ADD               	subwfb	postdec2,f,c
 41973                           
 41974                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1035:         dbuf[i] = '0' +
      +                           (d % 10);
 41975   014EE2  0E0A               	movlw	10
 41976   014EE4  6EE6               	movwf	postinc1,c
 41977   014EE6  0E00               	movlw	0
 41978   014EE8  6EE6               	movwf	postinc1,c
 41979   014EEA  0E00               	movlw	0
 41980   014EEC  6EE6               	movwf	postinc1,c
 41981   014EEE  0E00               	movlw	0
 41982   014EF0  6EE6               	movwf	postinc1,c
 41983                           
 41984                           ;stkvar	_d @ sp[(-10)+-6]
 41985   014EF2  0EF0               	movlw	-16
 41986   014EF4  006F FF8F FFE6     	movff	plusw1,postinc1
 41987   014EFA  006F FF8F FFE6     	movff	plusw1,postinc1
 41988   014F00  006F FF8F FFE6     	movff	plusw1,postinc1
 41989   014F06  006F FF8F FFE6     	movff	plusw1,postinc1
 41990   014F0C  ECFE  F0B3         	call	___llmod	;wreg free
 41991   014F10  C023  F02E         	movff	btemp,btemp+11
 41992   014F14  0E30               	movlw	48
 41993   014F16  262E               	addwf	(btemp+11)^0,f,c
 41994                           
 41995                           ;stkvar	_i @ sp[(-6)+0]
 41996   014F18  0EFA               	movlw	-6
 41997   014F1A  006F FF8C  F02B    	movff	plusw1,btemp+8
 41998   014F20  0EFB               	movlw	-5
 41999   014F22  006F FF8C  F02C    	movff	plusw1,btemp+9
 42000   014F28  0EC6               	movlw	low _dbuf
 42001   014F2A  242B               	addwf	(btemp+8)^0,w,c
 42002   014F2C  6ED9               	movwf	fsr2l,c
 42003   014F2E  0E01               	movlw	high _dbuf
 42004   014F30  202C               	addwfc	(btemp+9)^0,w,c
 42005   014F32  6EDA               	movwf	fsr2h,c
 42006   014F34  0060  F0BB  FFDF   	movff	btemp+11,indf2
 42007                           
 42008                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1037:         --p;
 42009                           ;stkvar	_p @ sp[(-6)+4]
 42010   014F3A  50E1               	movf	fsr1l,w,c
 42011   014F3C  0FFE               	addlw	-2
 42012   014F3E  6ED9               	movwf	fsr2l,c
 42013   014F40  50E2               	movf	fsr1h,w,c
 42014   014F42  6EDA               	movwf	fsr2h,c
 42015   014F44  0EFF               	movlw	255
 42016   014F46  22DA               	addwfc	fsr2h,f,c
 42017   014F48  06DE               	decf	postinc2,f,c
 42018   014F4A  0E00               	movlw	0
 42019   014F4C  5ADD               	subwfb	postdec2,f,c
 42020                           
 42021                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1041:         --w;
 42022                           ;stkvar	_w @ sp[(-6)+2]
 42023   014F4E  50E1               	movf	fsr1l,w,c
 42024   014F50  0FFC               	addlw	-4
 42025   014F52  6ED9               	movwf	fsr2l,c
 42026   014F54  50E2               	movf	fsr1h,w,c
 42027   014F56  6EDA               	movwf	fsr2h,c
 42028   014F58  0EFF               	movlw	255
 42029   014F5A  22DA               	addwfc	fsr2h,f,c
 42030   014F5C  06DE               	decf	postinc2,f,c
 42031   014F5E  0E00               	movlw	0
 42032   014F60  5ADD               	subwfb	postdec2,f,c
 42033                           
 42034                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1042:         d = d / 10;
 42035   014F62  0E0A               	movlw	10
 42036   014F64  6EE6               	movwf	postinc1,c
 42037   014F66  0E00               	movlw	0
 42038   014F68  6EE6               	movwf	postinc1,c
 42039   014F6A  0E00               	movlw	0
 42040   014F6C  6EE6               	movwf	postinc1,c
 42041   014F6E  0E00               	movlw	0
 42042   014F70  6EE6               	movwf	postinc1,c
 42043                           
 42044                           ;stkvar	_d @ sp[(-10)+-6]
 42045   014F72  0EF0               	movlw	-16
 42046   014F74  006F FF8F FFE6     	movff	plusw1,postinc1
 42047   014F7A  006F FF8F FFE6     	movff	plusw1,postinc1
 42048   014F80  006F FF8F FFE6     	movff	plusw1,postinc1
 42049   014F86  006F FF8F FFE6     	movff	plusw1,postinc1
 42050   014F8C  ECAA  F0B0         	call	___lldiv	;wreg free
 42051                           
 42052                           ;stkvar	_d @ sp[(-6)+-6]
 42053   014F90  0EF4               	movlw	-12
 42054   014F92  0060  F08F  FFE3   	movff	btemp,plusw1
 42055   014F98  0EF5               	movlw	-11
 42056   014F9A  0060  F093  FFE3   	movff	btemp+1,plusw1
 42057   014FA0  0EF6               	movlw	-10
 42058   014FA2  0060  F097  FFE3   	movff	btemp+2,plusw1
 42059   014FA8  0EF7               	movlw	-9
 42060   014FAA  0060  F09B  FFE3   	movff	btemp+3,plusw1
 42061   014FB0                     l11784:
 42062                           
 42063                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1024:     while (i && (d != 0
 42064                           ;stkvar	_i @ sp[(-6)+0]
 42065   014FB0  0EFA               	movlw	-6
 42066   014FB2  006F FF8C  F023    	movff	plusw1,btemp
 42067   014FB8  0EFB               	movlw	-5
 42068   014FBA  50E3               	movf	plusw1,w,c
 42069   014FBC  1023               	iorwf	btemp^0,w,c
 42070   014FBE  B4D8               	btfsc	status,2,c
 42071   014FC0  D024               	goto	u8340
 42072                           
 42073                           ;stkvar	_d @ sp[(-6)+-6]
 42074   014FC2  0EF4               	movlw	-12
 42075   014FC4  50E3               	movf	plusw1,w,c
 42076   014FC6  E183               	bnz	l11774
 42077   014FC8  0EF5               	movlw	-11
 42078   014FCA  50E3               	movf	plusw1,w,c
 42079   014FCC  E180               	bnz	l11774
 42080   014FCE  0EF6               	movlw	-10
 42081   014FD0  50E3               	movf	plusw1,w,c
 42082   014FD2  E103               	bnz	u8311
 42083   014FD4  0EF7               	movlw	-9
 42084   014FD6  50E3               	movf	plusw1,w,c
 42085   014FD8  A4D8               	btfss	status,2,c
 42086   014FDA                     u8311:
 42087   014FDA  D779               	goto	l11774
 42088                           
 42089                           ;stkvar	_p @ sp[(-6)+4]
 42090   014FDC  0EFF               	movlw	-1
 42091   014FDE  BEE3               	btfsc	plusw1,7,c
 42092   014FE0  D007               	goto	u8320
 42093   014FE2  0EFF               	movlw	-1
 42094   014FE4  50E3               	movf	plusw1,w,c
 42095   014FE6  E103               	bnz	u8321
 42096   014FE8  0EFE               	movlw	-2
 42097   014FEA  04E3               	decf	plusw1,w,c
 42098   014FEC  B0D8               	btfsc	status,0,c
 42099   014FEE                     u8321:
 42100   014FEE  D76F               	goto	l11774
 42101   014FF0                     u8320:
 42102                           
 42103                           ;stkvar	_w @ sp[(-6)+2]
 42104   014FF0  0EFD               	movlw	-3
 42105   014FF2  BEE3               	btfsc	plusw1,7,c
 42106   014FF4  D00A               	goto	u8340
 42107   014FF6  0EFD               	movlw	-3
 42108   014FF8  50E3               	movf	plusw1,w,c
 42109   014FFA  E104               	bnz	u8330
 42110   014FFC  0EFC               	movlw	-4
 42111   014FFE  04E3               	decf	plusw1,w,c
 42112   015000  A0D8               	btfss	status,0,c
 42113   015002  D003               	goto	u8340
 42114   015004                     u8330:
 42115   015004  0101               	movlb	1	; () banked
 42116   015006  B3C5               	btfsc	_flags& (0+255),1,b
 42117   015008  D762               	goto	l11774
 42118   01500A                     u8340:
 42119                           
 42120                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1046:     return (int) pad(fp
      +                          , &dbuf[i], w);
 42121                           ;stkvar	_w @ sp[(-6)+2]
 42122   01500A  0EFC               	movlw	-4
 42123   01500C  006F FF8F FFE6     	movff	plusw1,postinc1
 42124   015012  006F FF8F FFE6     	movff	plusw1,postinc1
 42125                           
 42126                           ;stkvar	_i @ sp[(-8)+0]
 42127   015018  0EC6               	movlw	low _dbuf
 42128   01501A  6E2D               	movwf	(btemp+10)^0,c
 42129   01501C  0E01               	movlw	high _dbuf
 42130   01501E  6E2E               	movwf	(btemp+11)^0,c
 42131   015020  0EF8               	movlw	-8
 42132   015022  50E3               	movf	plusw1,w,c
 42133   015024  262D               	addwf	(btemp+10)^0,f,c
 42134   015026  0EF9               	movlw	-7
 42135   015028  50E3               	movf	plusw1,w,c
 42136   01502A  222E               	addwfc	(btemp+11)^0,f,c
 42137   01502C  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 42138   015032  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 42139                           
 42140                           ;stkvar	_fp @ sp[(-10)+-2]
 42141   015038  0EF4               	movlw	-12
 42142   01503A  006F FF8F FFE6     	movff	plusw1,postinc1
 42143   015040  006F FF8F FFE6     	movff	plusw1,postinc1
 42144   015046  ECB0  F0B1         	call	_pad	;wreg free
 42145                           
 42146                           ; _utoa: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize 
      +                          = 6, vargsize = 0
 42147   01504A  0EF4               	movlw	244
 42148   01504C  26E1               	addwf	fsr1l,f,c
 42149   01504E  0EFF               	movlw	255
 42150   015050  22E2               	addwfc	fsr1h,f,c
 42151   015052  0012               	return		;funcret
 42152   015054                     __end_of_utoa:
 42153                           	callstack 0
 42154                           
 42155 ;; *************** function ___llmod *****************
 42156 ;; Defined at:
 42157 ;;		line 7 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/llmod.c"
 42158 ;; Parameters:    Size  Location     Type
 42159 ;;  dividend        4  [STACK] unsigned long 
 42160 ;;  divisor         4  [STACK] unsigned long 
 42161 ;; Auto vars:     Size  Location     Type
 42162 ;;  counter         1  [STACK] unsigned char 
 42163 ;; Return value:  Size  Location     Type
 42164 ;;                  4  [STACK] unsigned long 
 42165 ;; Registers used:
 42166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 42167 ;; Tracked objects:
 42168 ;;		On entry : 0/1
 42169 ;;		On exit  : 0/0
 42170 ;;		Unchanged: 0/0
 42171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 42172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42176 ;;Total ram usage:        0 bytes
 42177 ;; Hardware stack levels used: 1
 42178 ;; Hardware stack levels required when called: 3
 42179 ;; This function calls:
 42180 ;;		Nothing
 42181 ;; This function is called by:
 42182 ;;		_utoa
 42183 ;; This function uses a reentrant model
 42184 ;;
 42185                           
 42186                           	psect	text99
 42187   0167FC                     __ptext99:
 42188                           	callstack 0
 42189   0167FC                     ___llmod:
 42190                           	callstack 0
 42191                           
 42192                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 42193   0167FC  52E6               	movf	postinc1,f,c
 42194                           
 42195                           ;stkvar	_divisor @ sp[(-1)+-8]
 42196                           
 42197                           ;incstack = 0
 42198   0167FE  0EF7               	movlw	-9
 42199   016800  50E3               	movf	plusw1,w,c
 42200   016802  E10A               	bnz	u4200
 42201   016804  0EF8               	movlw	-8
 42202   016806  50E3               	movf	plusw1,w,c
 42203   016808  E107               	bnz	u4200
 42204   01680A  0EF9               	movlw	-7
 42205   01680C  50E3               	movf	plusw1,w,c
 42206   01680E  E104               	bnz	u4200
 42207   016810  0EFA               	movlw	-6
 42208   016812  50E3               	movf	plusw1,w,c
 42209   016814  B4D8               	btfsc	status,2,c
 42210   016816  D04D               	goto	u4230
 42211   016818                     u4200:
 42212                           
 42213                           ;stkvar	_counter @ sp[(-1)+0]
 42214   016818  0EFF               	movlw	-1
 42215   01681A  6AE3               	clrf	plusw1,c
 42216   01681C  D00A               	goto	L37
 42217   01681E                     l7582:
 42218                           
 42219                           ;stkvar	_divisor @ sp[(-1)+-8]
 42220   01681E  90D8               	bcf	status,0,c
 42221   016820  0EF7               	movlw	-9
 42222   016822  36E3               	rlcf	plusw1,f,c
 42223   016824  0EF8               	movlw	-8
 42224   016826  36E3               	rlcf	plusw1,f,c
 42225   016828  0EF9               	movlw	-7
 42226   01682A  36E3               	rlcf	plusw1,f,c
 42227   01682C  0EFA               	movlw	-6
 42228   01682E  36E3               	rlcf	plusw1,f,c
 42229                           
 42230                           ;stkvar	_counter @ sp[(-1)+0]
 42231   016830  0EFF               	movlw	-1
 42232   016832                     L37:
 42233   016832  2AE3               	incf	plusw1,f,c
 42234                           
 42235                           ;stkvar	_divisor @ sp[(-1)+-8]
 42236   016834  0EFA               	movlw	-6
 42237   016836  AEE3               	btfss	plusw1,7,c
 42238   016838  D7F2               	goto	l7582
 42239   01683A                     u4210:
 42240                           
 42241                           ;stkvar	_divisor @ sp[(-1)+-8]
 42242                           ;stkvar	_dividend @ sp[(-1)+-4]
 42243   01683A  50E1               	movf	fsr1l,w,c
 42244   01683C  0FFB               	addlw	-5
 42245   01683E  6ED9               	movwf	fsr2l,c
 42246   016840  50E2               	movf	fsr1h,w,c
 42247   016842  6EDA               	movwf	fsr2h,c
 42248   016844  0EFF               	movlw	255
 42249   016846  22DA               	addwfc	fsr2h,f,c
 42250   016848  0EF7               	movlw	-9
 42251   01684A  50E3               	movf	plusw1,w,c
 42252   01684C  5CDE               	subwf	postinc2,w,c
 42253   01684E  0EF8               	movlw	-8
 42254   016850  50E3               	movf	plusw1,w,c
 42255   016852  58DE               	subwfb	postinc2,w,c
 42256   016854  0EF9               	movlw	-7
 42257   016856  50E3               	movf	plusw1,w,c
 42258   016858  58DE               	subwfb	postinc2,w,c
 42259   01685A  0EFA               	movlw	-6
 42260   01685C  50E3               	movf	plusw1,w,c
 42261   01685E  58DE               	subwfb	postinc2,w,c
 42262   016860  A0D8               	btfss	status,0,c
 42263   016862  D013               	goto	l7590
 42264                           
 42265                           ;stkvar	_divisor @ sp[(-1)+-8]
 42266                           ;stkvar	_dividend @ sp[(-1)+-4]
 42267   016864  50E1               	movf	fsr1l,w,c
 42268   016866  0FFB               	addlw	-5
 42269   016868  6ED9               	movwf	fsr2l,c
 42270   01686A  50E2               	movf	fsr1h,w,c
 42271   01686C  6EDA               	movwf	fsr2h,c
 42272   01686E  0EFF               	movlw	255
 42273   016870  22DA               	addwfc	fsr2h,f,c
 42274   016872  0EF7               	movlw	-9
 42275   016874  50E3               	movf	plusw1,w,c
 42276   016876  5EDE               	subwf	postinc2,f,c
 42277   016878  0EF8               	movlw	-8
 42278   01687A  50E3               	movf	plusw1,w,c
 42279   01687C  5ADE               	subwfb	postinc2,f,c
 42280   01687E  0EF9               	movlw	-7
 42281   016880  50E3               	movf	plusw1,w,c
 42282   016882  5ADE               	subwfb	postinc2,f,c
 42283   016884  0EFA               	movlw	-6
 42284   016886  50E3               	movf	plusw1,w,c
 42285   016888  5ADE               	subwfb	postinc2,f,c
 42286   01688A                     l7590:
 42287                           
 42288                           ;stkvar	_divisor @ sp[(-1)+-8]
 42289   01688A  90D8               	bcf	status,0,c
 42290   01688C  0EFA               	movlw	-6
 42291   01688E  32E3               	rrcf	plusw1,f,c
 42292   016890  0EF9               	movlw	-7
 42293   016892  32E3               	rrcf	plusw1,f,c
 42294   016894  0EF8               	movlw	-8
 42295   016896  32E3               	rrcf	plusw1,f,c
 42296   016898  0EF7               	movlw	-9
 42297   01689A  32E3               	rrcf	plusw1,f,c
 42298                           
 42299                           ;stkvar	_counter @ sp[(-1)+0]
 42300   01689C  0EFF               	movlw	-1
 42301   01689E  50E3               	movf	plusw1,w,c
 42302   0168A0  6E23               	movwf	btemp^0,c
 42303   0168A2  0E01               	movlw	1
 42304   0168A4  5E23               	subwf	btemp^0,f,c
 42305   0168A6  0EFF               	movlw	-1
 42306   0168A8  0060  F08F  FFE3   	movff	btemp,plusw1
 42307   0168AE  A4D8               	btfss	status,2,c
 42308   0168B0  D7C4               	goto	u4210
 42309   0168B2                     u4230:
 42310                           
 42311                           ;stkvar	_dividend @ sp[(-1)+-4]
 42312   0168B2  0EFB               	movlw	-5
 42313   0168B4  006F FF8C  F023    	movff	plusw1,btemp
 42314   0168BA  0EFC               	movlw	-4
 42315   0168BC  006F FF8C  F024    	movff	plusw1,btemp+1
 42316   0168C2  0EFD               	movlw	-3
 42317   0168C4  006F FF8C  F025    	movff	plusw1,btemp+2
 42318   0168CA  0EFE               	movlw	-2
 42319   0168CC  006F FF8C  F026    	movff	plusw1,btemp+3
 42320                           
 42321                           ; ___llmod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 42322   0168D2  0EF7               	movlw	247
 42323   0168D4  26E1               	addwf	fsr1l,f,c
 42324   0168D6  0EFF               	movlw	255
 42325   0168D8  22E2               	addwfc	fsr1h,f,c
 42326   0168DA  0012               	return		;funcret
 42327   0168DC                     __end_of___llmod:
 42328                           	callstack 0
 42329                           
 42330 ;; *************** function ___lldiv *****************
 42331 ;; Defined at:
 42332 ;;		line 7 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/__lldiv.c"
 42333 ;; Parameters:    Size  Location     Type
 42334 ;;  dividend        4  [STACK] unsigned long 
 42335 ;;  divisor         4  [STACK] unsigned long 
 42336 ;; Auto vars:     Size  Location     Type
 42337 ;;  quotient        4  [STACK] unsigned long 
 42338 ;;  counter         1  [STACK] unsigned char 
 42339 ;; Return value:  Size  Location     Type
 42340 ;;                  4  [STACK] unsigned long 
 42341 ;; Registers used:
 42342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 42343 ;; Tracked objects:
 42344 ;;		On entry : 0/1
 42345 ;;		On exit  : 0/0
 42346 ;;		Unchanged: 0/0
 42347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 42348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42352 ;;Total ram usage:        0 bytes
 42353 ;; Hardware stack levels used: 1
 42354 ;; Hardware stack levels required when called: 3
 42355 ;; This function calls:
 42356 ;;		Nothing
 42357 ;; This function is called by:
 42358 ;;		_utoa
 42359 ;; This function uses a reentrant model
 42360 ;;
 42361                           
 42362                           	psect	text100
 42363   016154                     __ptext100:
 42364                           	callstack 0
 42365   016154                     ___lldiv:
 42366                           	callstack 0
 42367                           
 42368                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 42369   016154  0E05               	movlw	5
 42370   016156  26E1               	addwf	fsr1l,f,c
 42371   016158  0E00               	movlw	0
 42372   01615A  22E2               	addwfc	fsr1h,f,c
 42373                           
 42374                           ;stkvar	_quotient @ sp[(-5)+0]
 42375                           
 42376                           ;incstack = 0
 42377   01615C  0EFB               	movlw	-5
 42378   01615E  6AE3               	clrf	plusw1,c
 42379   016160  0EFC               	movlw	-4
 42380   016162  6AE3               	clrf	plusw1,c
 42381   016164  0EFD               	movlw	-3
 42382   016166  6AE3               	clrf	plusw1,c
 42383   016168  0EFE               	movlw	-2
 42384   01616A  6AE3               	clrf	plusw1,c
 42385                           
 42386                           ;stkvar	_divisor @ sp[(-5)+-8]
 42387   01616C  0EF3               	movlw	-13
 42388   01616E  50E3               	movf	plusw1,w,c
 42389   016170  E10A               	bnz	u3960
 42390   016172  0EF4               	movlw	-12
 42391   016174  50E3               	movf	plusw1,w,c
 42392   016176  E107               	bnz	u3960
 42393   016178  0EF5               	movlw	-11
 42394   01617A  50E3               	movf	plusw1,w,c
 42395   01617C  E104               	bnz	u3960
 42396   01617E  0EF6               	movlw	-10
 42397   016180  50E3               	movf	plusw1,w,c
 42398   016182  B4D8               	btfsc	status,2,c
 42399   016184  D058               	goto	u3990
 42400   016186                     u3960:
 42401                           
 42402                           ;stkvar	_counter @ sp[(-5)+4]
 42403   016186  0EFF               	movlw	-1
 42404   016188  6AE3               	clrf	plusw1,c
 42405   01618A  D00A               	goto	L38
 42406   01618C                     l7478:
 42407                           
 42408                           ;stkvar	_divisor @ sp[(-5)+-8]
 42409   01618C  90D8               	bcf	status,0,c
 42410   01618E  0EF3               	movlw	-13
 42411   016190  36E3               	rlcf	plusw1,f,c
 42412   016192  0EF4               	movlw	-12
 42413   016194  36E3               	rlcf	plusw1,f,c
 42414   016196  0EF5               	movlw	-11
 42415   016198  36E3               	rlcf	plusw1,f,c
 42416   01619A  0EF6               	movlw	-10
 42417   01619C  36E3               	rlcf	plusw1,f,c
 42418                           
 42419                           ;stkvar	_counter @ sp[(-5)+4]
 42420   01619E  0EFF               	movlw	-1
 42421   0161A0                     L38:
 42422   0161A0  2AE3               	incf	plusw1,f,c
 42423                           
 42424                           ;stkvar	_divisor @ sp[(-5)+-8]
 42425   0161A2  0EF6               	movlw	-10
 42426   0161A4  AEE3               	btfss	plusw1,7,c
 42427   0161A6  D7F2               	goto	l7478
 42428   0161A8                     u3970:
 42429                           
 42430                           ;stkvar	_quotient @ sp[(-5)+0]
 42431   0161A8  90D8               	bcf	status,0,c
 42432   0161AA  0EFB               	movlw	-5
 42433   0161AC  36E3               	rlcf	plusw1,f,c
 42434   0161AE  0EFC               	movlw	-4
 42435   0161B0  36E3               	rlcf	plusw1,f,c
 42436   0161B2  0EFD               	movlw	-3
 42437   0161B4  36E3               	rlcf	plusw1,f,c
 42438   0161B6  0EFE               	movlw	-2
 42439   0161B8  36E3               	rlcf	plusw1,f,c
 42440                           
 42441                           ;stkvar	_divisor @ sp[(-5)+-8]
 42442                           ;stkvar	_dividend @ sp[(-5)+-4]
 42443   0161BA  50E1               	movf	fsr1l,w,c
 42444   0161BC  0FF7               	addlw	-9
 42445   0161BE  6ED9               	movwf	fsr2l,c
 42446   0161C0  50E2               	movf	fsr1h,w,c
 42447   0161C2  6EDA               	movwf	fsr2h,c
 42448   0161C4  0EFF               	movlw	255
 42449   0161C6  22DA               	addwfc	fsr2h,f,c
 42450   0161C8  0EF3               	movlw	-13
 42451   0161CA  50E3               	movf	plusw1,w,c
 42452   0161CC  5CDE               	subwf	postinc2,w,c
 42453   0161CE  0EF4               	movlw	-12
 42454   0161D0  50E3               	movf	plusw1,w,c
 42455   0161D2  58DE               	subwfb	postinc2,w,c
 42456   0161D4  0EF5               	movlw	-11
 42457   0161D6  50E3               	movf	plusw1,w,c
 42458   0161D8  58DE               	subwfb	postinc2,w,c
 42459   0161DA  0EF6               	movlw	-10
 42460   0161DC  50E3               	movf	plusw1,w,c
 42461   0161DE  58DE               	subwfb	postinc2,w,c
 42462   0161E0  A0D8               	btfss	status,0,c
 42463   0161E2  D015               	goto	l7490
 42464                           
 42465                           ;stkvar	_divisor @ sp[(-5)+-8]
 42466                           ;stkvar	_dividend @ sp[(-5)+-4]
 42467   0161E4  50E1               	movf	fsr1l,w,c
 42468   0161E6  0FF7               	addlw	-9
 42469   0161E8  6ED9               	movwf	fsr2l,c
 42470   0161EA  50E2               	movf	fsr1h,w,c
 42471   0161EC  6EDA               	movwf	fsr2h,c
 42472   0161EE  0EFF               	movlw	255
 42473   0161F0  22DA               	addwfc	fsr2h,f,c
 42474   0161F2  0EF3               	movlw	-13
 42475   0161F4  50E3               	movf	plusw1,w,c
 42476   0161F6  5EDE               	subwf	postinc2,f,c
 42477   0161F8  0EF4               	movlw	-12
 42478   0161FA  50E3               	movf	plusw1,w,c
 42479   0161FC  5ADE               	subwfb	postinc2,f,c
 42480   0161FE  0EF5               	movlw	-11
 42481   016200  50E3               	movf	plusw1,w,c
 42482   016202  5ADE               	subwfb	postinc2,f,c
 42483   016204  0EF6               	movlw	-10
 42484   016206  50E3               	movf	plusw1,w,c
 42485   016208  5ADE               	subwfb	postinc2,f,c
 42486                           
 42487                           ;stkvar	_quotient @ sp[(-5)+0]
 42488   01620A  0EFB               	movlw	-5
 42489   01620C  80E3               	bsf	plusw1,0,c
 42490   01620E                     l7490:
 42491                           
 42492                           ;stkvar	_divisor @ sp[(-5)+-8]
 42493   01620E  90D8               	bcf	status,0,c
 42494   016210  0EF6               	movlw	-10
 42495   016212  32E3               	rrcf	plusw1,f,c
 42496   016214  0EF5               	movlw	-11
 42497   016216  32E3               	rrcf	plusw1,f,c
 42498   016218  0EF4               	movlw	-12
 42499   01621A  32E3               	rrcf	plusw1,f,c
 42500   01621C  0EF3               	movlw	-13
 42501   01621E  32E3               	rrcf	plusw1,f,c
 42502                           
 42503                           ;stkvar	_counter @ sp[(-5)+4]
 42504   016220  0EFF               	movlw	-1
 42505   016222  50E3               	movf	plusw1,w,c
 42506   016224  6E23               	movwf	btemp^0,c
 42507   016226  0E01               	movlw	1
 42508   016228  5E23               	subwf	btemp^0,f,c
 42509   01622A  0EFF               	movlw	-1
 42510   01622C  0060  F08F  FFE3   	movff	btemp,plusw1
 42511   016232  A4D8               	btfss	status,2,c
 42512   016234  D7B9               	goto	u3970
 42513   016236                     u3990:
 42514                           
 42515                           ;stkvar	_quotient @ sp[(-5)+0]
 42516   016236  0EFB               	movlw	-5
 42517   016238  006F FF8C  F023    	movff	plusw1,btemp
 42518   01623E  0EFC               	movlw	-4
 42519   016240  006F FF8C  F024    	movff	plusw1,btemp+1
 42520   016246  0EFD               	movlw	-3
 42521   016248  006F FF8C  F025    	movff	plusw1,btemp+2
 42522   01624E  0EFE               	movlw	-2
 42523   016250  006F FF8C  F026    	movff	plusw1,btemp+3
 42524                           
 42525                           ; ___lldiv: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 42526   016256  0EF3               	movlw	243
 42527   016258  26E1               	addwf	fsr1l,f,c
 42528   01625A  0EFF               	movlw	255
 42529   01625C  22E2               	addwfc	fsr1h,f,c
 42530   01625E  0012               	return		;funcret
 42531   016260                     __end_of___lldiv:
 42532                           	callstack 0
 42533                           
 42534 ;; *************** function _stoa *****************
 42535 ;; Defined at:
 42536 ;;		line 942 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c"
 42537 ;; Parameters:    Size  Location     Type
 42538 ;;  fp              2  [STACK] PTR struct _IO_FILE
 42539 ;;		 -> f(11), NULL(0), 
 42540 ;;  s               2  [STACK] PTR unsigned char 
 42541 ;;		 -> ?_printf(2), ?_sprintf(2), STR_38(9), STR_37(12), 
 42542 ;;		 -> D$lcd(512), D@mconfig$F5154(514), STR_32(6), STR_31(6), 
 42543 ;;		 -> STR_30(6), STR_29(6), STR_7(6), STR_3(6), 
 42544 ;;		 -> T(256), V(387), 
 42545 ;; Auto vars:     Size  Location     Type
 42546 ;;  l               2  [STACK] int 
 42547 ;;  cp              2  [STACK] PTR unsigned char 
 42548 ;;		 -> ?_printf(2), STR_69(7), ?_sprintf(2), STR_38(9), 
 42549 ;;		 -> STR_37(12), D$lcd(512), D@mconfig$F5154(514), STR_32(6), 
 42550 ;;		 -> STR_31(6), STR_30(6), STR_29(6), STR_7(6), 
 42551 ;;		 -> STR_3(6), T(256), V(387), 
 42552 ;;  w               2  [STACK] int 
 42553 ;;  p               2  [STACK] int 
 42554 ;; Return value:  Size  Location     Type
 42555 ;;                  2  [STACK] int 
 42556 ;; Registers used:
 42557 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 42558 ;; Tracked objects:
 42559 ;;		On entry : 0/1
 42560 ;;		On exit  : 0/0
 42561 ;;		Unchanged: 0/0
 42562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 42563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42567 ;;Total ram usage:        0 bytes
 42568 ;; Hardware stack levels used: 1
 42569 ;; Hardware stack levels required when called: 6
 42570 ;; This function calls:
 42571 ;;		_fputc
 42572 ;; This function is called by:
 42573 ;;		_vfpfcnvrt
 42574 ;; This function uses a reentrant model
 42575 ;;
 42576                           
 42577                           	psect	text101
 42578   014070                     __ptext101:
 42579                           	callstack 0
 42580   014070                     _stoa:
 42581                           	callstack 0
 42582                           
 42583                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 42584   014070  0E08               	movlw	8
 42585   014072  26E1               	addwf	fsr1l,f,c
 42586   014074  0E00               	movlw	0
 42587   014076  22E2               	addwfc	fsr1h,f,c
 42588                           
 42589                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 942: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 943: {;/opt/microch
      +                          ip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 944:     char *cp;;/opt/microchip/xc8/v3.0
      +                          0/pic/sources/c99/common/doprnt.c: 945:     int l, p;;/opt/microchip/xc8/v3.00/pic/sourc
      +                          es/c99/common/doprnt.c: 947:  int w;;/opt/microchip/xc8/v3.00/pic/sources/c99/common/dop
      +                          rnt.c: 951:     cp = s;
 42590                           ;stkvar	_s @ sp[(-8)+-4]
 42591                           
 42592                           ;incstack = 0
 42593   014078  0EF4               	movlw	-12
 42594   01407A  006F FF8C  F02D    	movff	plusw1,btemp+10
 42595   014080  0EF5               	movlw	-11
 42596   014082  006F FF8C  F02E    	movff	plusw1,btemp+11
 42597                           
 42598                           ;stkvar	_cp @ sp[(-8)+2]
 42599   014088  0EFB               	movlw	-5
 42600   01408A  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 42601   014090  0EFA               	movlw	-6
 42602   014092  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 42603                           
 42604                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 952:     if (!cp) {
 42605                           ;stkvar	_cp @ sp[(-8)+2]
 42606   014098  0EFA               	movlw	-6
 42607   01409A  006F FF8C  F023    	movff	plusw1,btemp
 42608   0140A0  0EFB               	movlw	-5
 42609   0140A2  50E3               	movf	plusw1,w,c
 42610   0140A4  1023               	iorwf	btemp^0,w,c
 42611   0140A6  A4D8               	btfss	status,2,c
 42612   0140A8  D00C               	goto	l11716
 42613                           
 42614                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 953:         cp = "(null)";
 42615                           ;stkvar	_cp @ sp[(-8)+2]
 42616   0140AA  0EFF               	movlw	high STR_69
 42617   0140AC  6E23               	movwf	btemp^0,c
 42618   0140AE  0EFB               	movlw	-5
 42619   0140B0  0060  F08F  FFE3   	movff	btemp,plusw1
 42620   0140B6  0EE8               	movlw	low STR_69
 42621   0140B8  6E23               	movwf	btemp^0,c
 42622   0140BA  0EFA               	movlw	-6
 42623   0140BC  0060  F08F  FFE3   	movff	btemp,plusw1
 42624   0140C2                     l11716:
 42625                           
 42626                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 957:  for (l = 0; cp[l] != '\
      +                          0'; l++) {
 42627                           ;stkvar	_l @ sp[(-8)+0]
 42628   0140C2  0EF8               	movlw	-8
 42629   0140C4  6AE3               	clrf	plusw1,c
 42630   0140C6  0EF9               	movlw	-7
 42631   0140C8  6AE3               	clrf	plusw1,c
 42632   0140CA  D011               	goto	l11720
 42633   0140CC                     l11718:
 42634                           
 42635                           ;stkvar	_l @ sp[(-8)+0]
 42636   0140CC  0EF8               	movlw	-8
 42637   0140CE  50E3               	movf	plusw1,w,c
 42638   0140D0  0F01               	addlw	1
 42639   0140D2  6E23               	movwf	btemp^0,c
 42640   0140D4  0EF8               	movlw	-8
 42641   0140D6  0060  F08F  FFE3   	movff	btemp,plusw1
 42642   0140DC  6A23               	clrf	btemp^0,c
 42643   0140DE  0EF9               	movlw	-7
 42644   0140E0  50E3               	movf	plusw1,w,c
 42645   0140E2  2023               	addwfc	btemp^0,w,c
 42646   0140E4  6E23               	movwf	btemp^0,c
 42647   0140E6  0EF9               	movlw	-7
 42648   0140E8  0060  F08F  FFE3   	movff	btemp,plusw1
 42649   0140EE                     l11720:
 42650                           
 42651                           ;stkvar	_l @ sp[(-8)+0]
 42652                           ;stkvar	_cp @ sp[(-8)+2]
 42653   0140EE  0EFA               	movlw	-6
 42654   0140F0  006F FF8C  F02D    	movff	plusw1,btemp+10
 42655   0140F6  0EFB               	movlw	-5
 42656   0140F8  006F FF8C  F02E    	movff	plusw1,btemp+11
 42657   0140FE  0EF8               	movlw	-8
 42658   014100  50E3               	movf	plusw1,w,c
 42659   014102  262D               	addwf	(btemp+10)^0,f,c
 42660   014104  0EF9               	movlw	-7
 42661   014106  50E3               	movf	plusw1,w,c
 42662   014108  222E               	addwfc	(btemp+11)^0,f,c
 42663   01410A  0060  F0B7  FFF6   	movff	btemp+10,tblptrl
 42664   014110  0060  F0BB  FFF7   	movff	btemp+11,tblptrh
 42665   014116  0E00               	movlw	low (__pmediumconst shr (0+16))
 42666   014118  6EF8               	movwf	tblptru,c
 42667   01411A  0E1F               	movlw	(high __ramtop+-1)
 42668   01411C  64F7               	cpfsgt	tblptrh,c
 42669   01411E  D003               	bra	u8187
 42670   014120  0008               	tblrd		*
 42671   014122  50F5               	movf	tablat,w,c
 42672   014124  D007               	bra	u8180
 42673   014126                     u8187:
 42674   014126  006F FFDB FFE9     	movff	tblptrl,fsr0l
 42675   01412C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 42676   014132  50EF               	movf	indf0,w,c
 42677   014134                     u8180:
 42678   014134  0900               	iorlw	0
 42679   014136  A4D8               	btfss	status,2,c
 42680   014138  D7C9               	goto	l11718
 42681                           
 42682                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 961:  if (!(prec < 0) && (pre
      +                          c < l)) {
 42683   01413A  0101               	movlb	1	; () banked
 42684   01413C  BFC4               	btfsc	(_prec+1)& (0+255),7,b
 42685   01413E  D014               	goto	l11728
 42686                           
 42687                           ; BSR set to: 1
 42688                           ;stkvar	_l @ sp[(-8)+0]
 42689   014140  0EF8               	movlw	-8
 42690   014142  50E3               	movf	plusw1,w,c
 42691   014144  5DC3               	subwf	_prec& (0+255),w,b
 42692   014146  51C4               	movf	(_prec+1)& (0+255),w,b
 42693   014148  0A80               	xorlw	128
 42694   01414A  6E23               	movwf	btemp^0,c
 42695   01414C  0EF9               	movlw	-7
 42696   01414E  50E3               	movf	plusw1,w,c
 42697   014150  0A80               	xorlw	128
 42698   014152  5823               	subwfb	btemp^0,w,c
 42699   014154  B0D8               	btfsc	status,0,c
 42700   014156  D008               	goto	l11728
 42701                           
 42702                           ; BSR set to: 1
 42703                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 962:   l = prec;
 42704                           ;stkvar	_l @ sp[(-8)+0]
 42705   014158  0EF8               	movlw	-8
 42706   01415A  0060  F70F  FFE3   	movff	_prec,plusw1
 42707   014160  0EF9               	movlw	-7
 42708   014162  0060  F713  FFE3   	movff	_prec+1,plusw1
 42709   014168                     l11728:
 42710                           
 42711                           ; BSR set to: 1
 42712                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 965:     p = l;
 42713                           ;stkvar	_l @ sp[(-8)+0]
 42714                           ;stkvar	_p @ sp[(-8)+6]
 42715   014168  0EF8               	movlw	-8
 42716   01416A  006F FF8C  F023    	movff	plusw1,btemp
 42717   014170  0EFE               	movlw	-2
 42718   014172  0060  F08F  FFE3   	movff	btemp,plusw1
 42719   014178  0EF9               	movlw	-7
 42720   01417A  006F FF8C  F023    	movff	plusw1,btemp
 42721   014180  0EFF               	movlw	-1
 42722   014182  0060  F08F  FFE3   	movff	btemp,plusw1
 42723                           
 42724                           ; BSR set to: 1
 42725                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 969:     w = width;
 42726                           ;stkvar	_w @ sp[(-8)+4]
 42727   014188  0EFC               	movlw	-4
 42728   01418A  0060  F707  FFE3   	movff	_width,plusw1
 42729   014190  0EFD               	movlw	-3
 42730   014192  0060  F70B  FFE3   	movff	_width+1,plusw1
 42731                           
 42732                           ; BSR set to: 1
 42733                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 970:     if (!(flags & (1 << 
      +                          0))) {
 42734   014198  A1C5               	btfss	_flags& (0+255),0,b
 42735   01419A  D01F               	goto	l11740
 42736   01419C  D066               	goto	l11746
 42737   01419E                     l11736:
 42738                           
 42739                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 972:             fputc(' ', f
      +                          p);
 42740                           ;stkvar	_fp @ sp[(-8)+-2]
 42741   01419E  0EF6               	movlw	-10
 42742   0141A0  006F FF8F FFE6     	movff	plusw1,postinc1
 42743   0141A6  006F FF8F FFE6     	movff	plusw1,postinc1
 42744   0141AC  0E20               	movlw	32
 42745   0141AE  6EE6               	movwf	postinc1,c
 42746   0141B0  0E00               	movlw	0
 42747   0141B2  6EE6               	movwf	postinc1,c
 42748   0141B4  ECDE  F0AD         	call	_fputc	;wreg free
 42749                           
 42750                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 973:             ++l;
 42751                           ;stkvar	_l @ sp[(-8)+0]
 42752   0141B8  0EF8               	movlw	-8
 42753   0141BA  50E3               	movf	plusw1,w,c
 42754   0141BC  0F01               	addlw	1
 42755   0141BE  6E23               	movwf	btemp^0,c
 42756   0141C0  0EF8               	movlw	-8
 42757   0141C2  0060  F08F  FFE3   	movff	btemp,plusw1
 42758   0141C8  6A23               	clrf	btemp^0,c
 42759   0141CA  0EF9               	movlw	-7
 42760   0141CC  50E3               	movf	plusw1,w,c
 42761   0141CE  2023               	addwfc	btemp^0,w,c
 42762   0141D0  6E23               	movwf	btemp^0,c
 42763   0141D2  0EF9               	movlw	-7
 42764   0141D4  0060  F08F  FFE3   	movff	btemp,plusw1
 42765   0141DA                     l11740:
 42766                           
 42767                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 971:         while (l < w) {
 42768                           ;stkvar	_w @ sp[(-8)+4]
 42769                           ;stkvar	_l @ sp[(-8)+0]
 42770   0141DA  50E1               	movf	fsr1l,w,c
 42771   0141DC  0FF8               	addlw	-8
 42772   0141DE  6ED9               	movwf	fsr2l,c
 42773   0141E0  50E2               	movf	fsr1h,w,c
 42774   0141E2  6EDA               	movwf	fsr2h,c
 42775   0141E4  0EFF               	movlw	255
 42776   0141E6  22DA               	addwfc	fsr2h,f,c
 42777   0141E8  0EFC               	movlw	-4
 42778   0141EA  50E3               	movf	plusw1,w,c
 42779   0141EC  5CDE               	subwf	postinc2,w,c
 42780   0141EE  50DE               	movf	postinc2,w,c
 42781   0141F0  0A80               	xorlw	128
 42782   0141F2  6E23               	movwf	btemp^0,c
 42783   0141F4  0EFD               	movlw	-3
 42784   0141F6  50E3               	movf	plusw1,w,c
 42785   0141F8  0A80               	xorlw	128
 42786   0141FA  5823               	subwfb	btemp^0,w,c
 42787   0141FC  B0D8               	btfsc	status,0,c
 42788   0141FE  D035               	goto	l11746
 42789   014200  D7CE               	goto	l11736
 42790   014202                     l11742:
 42791                           
 42792                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 980:         fputc(*cp, fp);
 42793                           ;stkvar	_fp @ sp[(-8)+-2]
 42794   014202  0EF6               	movlw	-10
 42795   014204  006F FF8F FFE6     	movff	plusw1,postinc1
 42796   01420A  006F FF8F FFE6     	movff	plusw1,postinc1
 42797                           
 42798                           ;stkvar	_cp @ sp[(-10)+2]
 42799   014210  0EF8               	movlw	-8
 42800   014212  006F FF8F FFF6     	movff	plusw1,tblptrl
 42801   014218  0EF9               	movlw	-7
 42802   01421A  006F FF8F FFF7     	movff	plusw1,tblptrh
 42803   014220  0E00               	movlw	low (__pmediumconst shr (0+16))
 42804   014222  6EF8               	movwf	tblptru,c
 42805   014224  0E1F               	movlw	(high __ramtop+-1)
 42806   014226  64F7               	cpfsgt	tblptrh,c
 42807   014228  D003               	bra	u8247
 42808   01422A  0008               	tblrd		*
 42809   01422C  50F5               	movf	tablat,w,c
 42810   01422E  D007               	bra	u8240
 42811   014230                     u8247:
 42812   014230  006F FFDB FFE9     	movff	tblptrl,fsr0l
 42813   014236  006F FFDF FFEA     	movff	tblptrh,fsr0h
 42814   01423C  50EF               	movf	indf0,w,c
 42815   01423E                     u8240:
 42816   01423E  6EE6               	movwf	postinc1,c
 42817   014240  0E00               	movlw	0
 42818   014242  6EE6               	movwf	postinc1,c
 42819   014244  ECDE  F0AD         	call	_fputc	;wreg free
 42820                           
 42821                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 981:         ++cp;
 42822                           ;stkvar	_cp @ sp[(-8)+2]
 42823   014248  0EFA               	movlw	-6
 42824   01424A  50E3               	movf	plusw1,w,c
 42825   01424C  0F01               	addlw	1
 42826   01424E  6E23               	movwf	btemp^0,c
 42827   014250  0EFA               	movlw	-6
 42828   014252  0060  F08F  FFE3   	movff	btemp,plusw1
 42829   014258  6A23               	clrf	btemp^0,c
 42830   01425A  0EFB               	movlw	-5
 42831   01425C  50E3               	movf	plusw1,w,c
 42832   01425E  2023               	addwfc	btemp^0,w,c
 42833   014260  6E23               	movwf	btemp^0,c
 42834   014262  0EFB               	movlw	-5
 42835   014264  0060  F08F  FFE3   	movff	btemp,plusw1
 42836   01426A                     l11746:
 42837                           
 42838                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 979:     while (p--) {
 42839                           ;stkvar	_p @ sp[(-8)+6]
 42840   01426A  50E1               	movf	fsr1l,w,c
 42841   01426C  0FFE               	addlw	-2
 42842   01426E  6ED9               	movwf	fsr2l,c
 42843   014270  50E2               	movf	fsr1h,w,c
 42844   014272  6EDA               	movwf	fsr2h,c
 42845   014274  0EFF               	movlw	255
 42846   014276  22DA               	addwfc	fsr2h,f,c
 42847   014278  06DE               	decf	postinc2,f,c
 42848   01427A  0E00               	movlw	0
 42849   01427C  5ADD               	subwfb	postdec2,f,c
 42850   01427E  28DE               	incf	postinc2,w,c
 42851   014280  E1C0               	bnz	l11742
 42852   014282  28DE               	incf	postinc2,w,c
 42853   014284  A4D8               	btfss	status,2,c
 42854   014286  D7BD               	goto	l11742
 42855                           
 42856                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 986:     if (flags & (1 << 0)
      +                          ) {
 42857   014288  0101               	movlb	1	; () banked
 42858   01428A  B1C5               	btfsc	_flags& (0+255),0,b
 42859   01428C  D01F               	goto	l11754
 42860   01428E  D031               	goto	u8270
 42861   014290                     l11750:
 42862                           
 42863                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 988:             fputc(' ', f
      +                          p);
 42864                           ;stkvar	_fp @ sp[(-8)+-2]
 42865   014290  0EF6               	movlw	-10
 42866   014292  006F FF8F FFE6     	movff	plusw1,postinc1
 42867   014298  006F FF8F FFE6     	movff	plusw1,postinc1
 42868   01429E  0E20               	movlw	32
 42869   0142A0  6EE6               	movwf	postinc1,c
 42870   0142A2  0E00               	movlw	0
 42871   0142A4  6EE6               	movwf	postinc1,c
 42872   0142A6  ECDE  F0AD         	call	_fputc	;wreg free
 42873                           
 42874                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 989:             ++l;
 42875                           ;stkvar	_l @ sp[(-8)+0]
 42876   0142AA  0EF8               	movlw	-8
 42877   0142AC  50E3               	movf	plusw1,w,c
 42878   0142AE  0F01               	addlw	1
 42879   0142B0  6E23               	movwf	btemp^0,c
 42880   0142B2  0EF8               	movlw	-8
 42881   0142B4  0060  F08F  FFE3   	movff	btemp,plusw1
 42882   0142BA  6A23               	clrf	btemp^0,c
 42883   0142BC  0EF9               	movlw	-7
 42884   0142BE  50E3               	movf	plusw1,w,c
 42885   0142C0  2023               	addwfc	btemp^0,w,c
 42886   0142C2  6E23               	movwf	btemp^0,c
 42887   0142C4  0EF9               	movlw	-7
 42888   0142C6  0060  F08F  FFE3   	movff	btemp,plusw1
 42889   0142CC                     l11754:
 42890                           
 42891                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 987:         while (l < w) {
 42892                           ;stkvar	_w @ sp[(-8)+4]
 42893                           ;stkvar	_l @ sp[(-8)+0]
 42894   0142CC  50E1               	movf	fsr1l,w,c
 42895   0142CE  0FF8               	addlw	-8
 42896   0142D0  6ED9               	movwf	fsr2l,c
 42897   0142D2  50E2               	movf	fsr1h,w,c
 42898   0142D4  6EDA               	movwf	fsr2h,c
 42899   0142D6  0EFF               	movlw	255
 42900   0142D8  22DA               	addwfc	fsr2h,f,c
 42901   0142DA  0EFC               	movlw	-4
 42902   0142DC  50E3               	movf	plusw1,w,c
 42903   0142DE  5CDE               	subwf	postinc2,w,c
 42904   0142E0  50DE               	movf	postinc2,w,c
 42905   0142E2  0A80               	xorlw	128
 42906   0142E4  6E23               	movwf	btemp^0,c
 42907   0142E6  0EFD               	movlw	-3
 42908   0142E8  50E3               	movf	plusw1,w,c
 42909   0142EA  0A80               	xorlw	128
 42910   0142EC  5823               	subwfb	btemp^0,w,c
 42911   0142EE  A0D8               	btfss	status,0,c
 42912   0142F0  D7CF               	goto	l11750
 42913   0142F2                     u8270:
 42914                           
 42915                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 995:     return l;
 42916                           ;stkvar	_l @ sp[(-8)+0]
 42917   0142F2  0EF8               	movlw	-8
 42918   0142F4  006F FF8C  F023    	movff	plusw1,btemp
 42919   0142FA  0EF9               	movlw	-7
 42920   0142FC  006F FF8C  F024    	movff	plusw1,btemp+1
 42921                           
 42922                           ; _stoa: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize 
      +                          = 4, vargsize = 0
 42923   014302  0EF4               	movlw	244
 42924   014304  26E1               	addwf	fsr1l,f,c
 42925   014306  0EFF               	movlw	255
 42926   014308  22E2               	addwfc	fsr1h,f,c
 42927   01430A  0012               	return		;funcret
 42928   01430C                     __end_of_stoa:
 42929                           	callstack 0
 42930                           
 42931 ;; *************** function _read_prec_or_width *****************
 42932 ;; Defined at:
 42933 ;;		line 1158 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c"
 42934 ;; Parameters:    Size  Location     Type
 42935 ;;  fmt             2  [STACK] PTR PTR const unsigned c
 42936 ;;		 -> cfmt(2), 
 42937 ;;  ap              2  [STACK] PTR PTR void [1]
 42938 ;;		 -> ap(2), ap(2), 
 42939 ;; Auto vars:     Size  Location     Type
 42940 ;;  c               1  [STACK] unsigned char 
 42941 ;;  n               2  [STACK] int 
 42942 ;; Return value:  Size  Location     Type
 42943 ;;                  2  [STACK] int 
 42944 ;; Registers used:
 42945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 42946 ;; Tracked objects:
 42947 ;;		On entry : 3F/1
 42948 ;;		On exit  : 0/0
 42949 ;;		Unchanged: 0/0
 42950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 42951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42955 ;;Total ram usage:        0 bytes
 42956 ;; Hardware stack levels used: 1
 42957 ;; Hardware stack levels required when called: 3
 42958 ;; This function calls:
 42959 ;;		Nothing
 42960 ;; This function is called by:
 42961 ;;		_vfpfcnvrt
 42962 ;; This function uses a reentrant model
 42963 ;;
 42964                           
 42965                           	psect	text102
 42966   015940                     __ptext102:
 42967                           	callstack 0
 42968   015940                     _read_prec_or_width:
 42969                           	callstack 0
 42970                           
 42971                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 42972   015940  52E6               	movf	postinc1,f,c
 42973   015942  52E6               	movf	postinc1,f,c
 42974   015944  52E6               	movf	postinc1,f,c
 42975                           
 42976                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1159:     int n = 0;
 42977                           ;stkvar	_n @ sp[(-3)+1]
 42978                           
 42979                           ;incstack = 0
 42980   015946  0EFE               	movlw	-2
 42981   015948  6AE3               	clrf	plusw1,c
 42982   01594A  0EFF               	movlw	-1
 42983   01594C  6AE3               	clrf	plusw1,c
 42984                           
 42985                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1160:     if ((*fmt)[0] == '*
      +                          ') {
 42986                           ;stkvar	_fmt @ sp[(-3)+-2]
 42987   01594E  0EFB               	movlw	-5
 42988   015950  006F FF8F FFD9     	movff	plusw1,fsr2l
 42989   015956  0EFC               	movlw	-4
 42990   015958  006F FF8F FFDA     	movff	plusw1,fsr2h
 42991   01595E  006F FF7B FFF6     	movff	postinc2,tblptrl
 42992   015964  006F FF77 FFF7     	movff	postdec2,tblptrh
 42993   01596A                     	if	0	;tblptru may be non-zero
 42994   01596A                     	endif
 42995   01596A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 42996   01596A  0E00               	movlw	low (__pmediumconst shr (0+16))
 42997   01596C  6EF8               	movwf	tblptru,c
 42998   01596E                     	endif
 42999   01596E  0008               	tblrd		*
 43000   015970  50F5               	movf	tablat,w,c
 43001   015972  0A2A               	xorlw	42
 43002   015974  A4D8               	btfss	status,2,c
 43003   015976  D05D               	goto	l7942
 43004                           
 43005                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1161:         ++*fmt;
 43006                           ;stkvar	_fmt @ sp[(-3)+-2]
 43007   015978  0EFB               	movlw	-5
 43008   01597A  006F FF8F FFD9     	movff	plusw1,fsr2l
 43009   015980  0EFC               	movlw	-4
 43010   015982  006F FF8F FFDA     	movff	plusw1,fsr2h
 43011   015988  2ADE               	incf	postinc2,f,c
 43012   01598A  0E00               	movlw	0
 43013   01598C  22DD               	addwfc	postdec2,f,c
 43014                           
 43015                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1162:         n = (*(int *)__
      +                          va_arg(*(int **)*ap, (int)0));
 43016                           ;stkvar	_ap @ sp[(-3)+-4]
 43017   01598E  0EF9               	movlw	-7
 43018   015990  006F FF8F FFD9     	movff	plusw1,fsr2l
 43019   015996  0EFA               	movlw	-6
 43020   015998  006F FF8F FFDA     	movff	plusw1,fsr2h
 43021   01599E  0E02               	movlw	2
 43022   0159A0  5EDE               	subwf	postinc2,f,c
 43023   0159A2  0E00               	movlw	0
 43024   0159A4  5ADD               	subwfb	postdec2,f,c
 43025   0159A6  006F FF78  F02D    	movff	postinc2,btemp+10
 43026   0159AC  006F FF74  F02E    	movff	postdec2,btemp+11
 43027   0159B2  0060  F0B7  FFD9   	movff	btemp+10,fsr2l
 43028   0159B8  0060  F0BB  FFDA   	movff	btemp+11,fsr2h
 43029   0159BE  006F FF78  F02D    	movff	postinc2,btemp+10
 43030   0159C4  006F FF74  F02E    	movff	postdec2,btemp+11
 43031                           
 43032                           ;stkvar	_n @ sp[(-3)+1]
 43033   0159CA  0EFE               	movlw	-2
 43034   0159CC  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 43035   0159D2  0EFF               	movlw	-1
 43036   0159D4  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 43037                           
 43038                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1163:     } else {
 43039   0159DA  D04C               	goto	u4950
 43040   0159DC                     l7938:
 43041                           
 43042                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1166:             n = n * 10 
      +                          + c;
 43043                           ;stkvar	_n @ sp[(-3)+1]
 43044   0159DC  0EFE               	movlw	-2
 43045   0159DE  006F FF8C  F02D    	movff	plusw1,btemp+10
 43046   0159E4  0EFF               	movlw	-1
 43047   0159E6  006F FF8C  F02E    	movff	plusw1,btemp+11
 43048   0159EC  0E0A               	movlw	10
 43049   0159EE  022D               	mulwf	(btemp+10)^0,c
 43050   0159F0  006F FFCC  F02B    	movff	prodl,btemp+8
 43051   0159F6  006F FFD0  F02C    	movff	prodh,btemp+9
 43052   0159FC  022E               	mulwf	(btemp+11)^0,c
 43053   0159FE  50F3               	movf	prodl,w,c
 43054   015A00  262C               	addwf	(btemp+9)^0,f,c
 43055                           
 43056                           ;stkvar	_c @ sp[(-3)+0]
 43057   015A02  0EFD               	movlw	-3
 43058   015A04  50E3               	movf	plusw1,w,c
 43059   015A06  262B               	addwf	(btemp+8)^0,f,c
 43060   015A08  0E00               	movlw	0
 43061   015A0A  222C               	addwfc	(btemp+9)^0,f,c
 43062                           
 43063                           ;stkvar	_n @ sp[(-3)+1]
 43064   015A0C  0EFE               	movlw	-2
 43065   015A0E  0060  F0AF  FFE3   	movff	btemp+8,plusw1
 43066   015A14  0EFF               	movlw	-1
 43067   015A16  0060  F0B3  FFE3   	movff	btemp+9,plusw1
 43068                           
 43069                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1167:             ++*fmt;
 43070                           ;stkvar	_fmt @ sp[(-3)+-2]
 43071   015A1C  0EFB               	movlw	-5
 43072   015A1E  006F FF8F FFD9     	movff	plusw1,fsr2l
 43073   015A24  0EFC               	movlw	-4
 43074   015A26  006F FF8F FFDA     	movff	plusw1,fsr2h
 43075   015A2C  2ADE               	incf	postinc2,f,c
 43076   015A2E  0E00               	movlw	0
 43077   015A30  22DD               	addwfc	postdec2,f,c
 43078   015A32                     l7942:
 43079                           
 43080                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1165:         while ((c = ((u
      +                          nsigned)(*fmt)[0]) - '0') < 10) {
 43081                           ;stkvar	_fmt @ sp[(-3)+-2]
 43082   015A32  0EFB               	movlw	-5
 43083   015A34  006F FF8F FFD9     	movff	plusw1,fsr2l
 43084   015A3A  0EFC               	movlw	-4
 43085   015A3C  006F FF8F FFDA     	movff	plusw1,fsr2h
 43086   015A42  006F FF7B FFF6     	movff	postinc2,tblptrl
 43087   015A48  006F FF77 FFF7     	movff	postdec2,tblptrh
 43088   015A4E                     	if	0	;tblptru may be non-zero
 43089   015A4E                     	endif
 43090   015A4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 43091   015A4E  0E00               	movlw	low (__pmediumconst shr (0+16))
 43092   015A50  6EF8               	movwf	tblptru,c
 43093   015A52                     	endif
 43094   015A52  0008               	tblrd		*
 43095   015A54  006F FFD4  F02E    	movff	tablat,btemp+11
 43096   015A5A  0ED0               	movlw	208
 43097   015A5C  262E               	addwf	(btemp+11)^0,f,c
 43098                           
 43099                           ;stkvar	_c @ sp[(-3)+0]
 43100   015A5E  0EFD               	movlw	-3
 43101   015A60  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 43102   015A66  0EFD               	movlw	-3
 43103   015A68  006F FF8C  F023    	movff	plusw1,btemp
 43104   015A6E  0E09               	movlw	9
 43105   015A70  6423               	cpfsgt	btemp^0,c
 43106   015A72  D7B4               	goto	l7938
 43107   015A74                     u4950:
 43108                           
 43109                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1170:     return n;
 43110                           ;stkvar	_n @ sp[(-3)+1]
 43111   015A74  0EFE               	movlw	-2
 43112   015A76  006F FF8C  F023    	movff	plusw1,btemp
 43113   015A7C  0EFF               	movlw	-1
 43114   015A7E  006F FF8C  F024    	movff	plusw1,btemp+1
 43115                           
 43116                           ; _read_prec_or_width: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 4, argsize = 4, vargsize = 0
 43117   015A84  0EF9               	movlw	249
 43118   015A86  26E1               	addwf	fsr1l,f,c
 43119   015A88  0EFF               	movlw	255
 43120   015A8A  22E2               	addwfc	fsr1h,f,c
 43121   015A8C  0012               	return		;funcret
 43122   015A8E                     __end_of_read_prec_or_width:
 43123                           	callstack 0
 43124                           
 43125 ;; *************** function _otoa *****************
 43126 ;; Defined at:
 43127 ;;		line 872 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c"
 43128 ;; Parameters:    Size  Location     Type
 43129 ;;  fp              2  [STACK] PTR struct _IO_FILE
 43130 ;;		 -> f(11), NULL(0), 
 43131 ;;  d               4  [STACK] unsigned long 
 43132 ;; Auto vars:     Size  Location     Type
 43133 ;;  i               2  [STACK] int 
 43134 ;;  w               2  [STACK] int 
 43135 ;;  p               2  [STACK] int 
 43136 ;;  t               1  [STACK] unsigned char 
 43137 ;; Return value:  Size  Location     Type
 43138 ;;                  2  [STACK] int 
 43139 ;; Registers used:
 43140 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
 43141 ;; Tracked objects:
 43142 ;;		On entry : 0/1
 43143 ;;		On exit  : 0/0
 43144 ;;		Unchanged: 0/0
 43145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43150 ;;Total ram usage:        0 bytes
 43151 ;; Hardware stack levels used: 1
 43152 ;; Hardware stack levels required when called: 8
 43153 ;; This function calls:
 43154 ;;		_pad
 43155 ;; This function is called by:
 43156 ;;		_vfpfcnvrt
 43157 ;; This function uses a reentrant model
 43158 ;;
 43159                           
 43160                           	psect	text103
 43161   014C56                     __ptext103:
 43162                           	callstack 0
 43163   014C56                     _otoa:
 43164                           	callstack 0
 43165                           
 43166                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43167   014C56  0E07               	movlw	7
 43168   014C58  26E1               	addwf	fsr1l,f,c
 43169   014C5A  0E00               	movlw	0
 43170   014C5C  22E2               	addwfc	fsr1h,f,c
 43171                           
 43172                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 872: static int otoa(FILE *fp
      +                          , vfpf_uint_t d);/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 873: {;/opt/m
      +                          icrochip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 875:  char t;;/opt/microchip/xc8/v3.
      +                          00/pic/sources/c99/common/doprnt.c: 877:     int i, w;;/opt/microchip/xc8/v3.00/pic/sour
      +                          ces/c99/common/doprnt.c: 879:  int p;;/opt/microchip/xc8/v3.00/pic/sources/c99/common/do
      +                          prnt.c: 887:     if (!(prec < 0)) {
 43173                           
 43174                           ;incstack = 0
 43175   014C5E  0101               	movlb	1	; () banked
 43176   014C60  AFC4               	btfss	(_prec+1)& (0+255),7,b
 43177                           
 43178                           ; BSR set to: 1
 43179                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 888:         flags &= ~(1 << 
      +                          1);
 43180   014C62  93C5               	bcf	_flags& (0+255),1,b
 43181                           
 43182                           ; BSR set to: 1
 43183                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 891:     p = (0 <= prec) ? pr
      +                          ec : 1;
 43184   014C64  AFC4               	btfss	(_prec+1)& (0+255),7,b
 43185   014C66  D00D               	goto	l11666
 43186                           
 43187                           ; BSR set to: 1
 43188   014C68  0E01               	movlw	1
 43189   014C6A  6E2D               	movwf	(btemp+10)^0,c
 43190   014C6C  0E00               	movlw	0
 43191   014C6E  6E2E               	movwf	(btemp+11)^0,c
 43192                           
 43193                           ;stkvar	_p @ sp[(-7)+4]
 43194   014C70  0EFD               	movlw	-3
 43195   014C72  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 43196   014C78  0EFE               	movlw	-2
 43197   014C7A  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 43198   014C80  D008               	goto	l3202
 43199   014C82                     l11666:
 43200                           
 43201                           ; BSR set to: 1
 43202                           ;stkvar	_p @ sp[(-7)+4]
 43203   014C82  0EFD               	movlw	-3
 43204   014C84  0060  F70F  FFE3   	movff	_prec,plusw1
 43205   014C8A  0EFE               	movlw	-2
 43206   014C8C  0060  F713  FFE3   	movff	_prec+1,plusw1
 43207   014C92                     l3202:
 43208                           
 43209                           ; BSR set to: 1
 43210                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 893:     w = width;
 43211                           ;stkvar	_w @ sp[(-7)+2]
 43212   014C92  0EFB               	movlw	-5
 43213   014C94  0060  F707  FFE3   	movff	_width,plusw1
 43214   014C9A  0EFC               	movlw	-4
 43215   014C9C  0060  F70B  FFE3   	movff	_width+1,plusw1
 43216                           
 43217                           ; BSR set to: 1
 43218                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 896:     i = sizeof(dbuf) - 1
      +                          ;
 43219   014CA2  0E1F               	movlw	31
 43220   014CA4  6E2D               	movwf	(btemp+10)^0,c
 43221   014CA6  0E00               	movlw	0
 43222   014CA8  6E2E               	movwf	(btemp+11)^0,c
 43223                           
 43224                           ;stkvar	_i @ sp[(-7)+0]
 43225   014CAA  0EF9               	movlw	-7
 43226   014CAC  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 43227   014CB2  0EFA               	movlw	-6
 43228   014CB4  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 43229                           
 43230                           ; BSR set to: 1
 43231                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 897:     dbuf[i] = '\0';
 43232   014CBA  6BE5               	clrf	(_dbuf+31)& (0+255),b
 43233                           
 43234                           ; BSR set to: 1
 43235                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 899:     t = 0;
 43236                           ;stkvar	_t @ sp[(-7)+6]
 43237   014CBC  0EFF               	movlw	-1
 43238   014CBE  6AE3               	clrf	plusw1,c
 43239                           
 43240                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 901:     while (!(i < 1) && (
      +                          d != 0
 43241   014CC0  D04F               	goto	l11686
 43242   014CC2                     l11674:
 43243                           
 43244                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 910:     )) {;/opt/microchip/
      +                          xc8/v3.00/pic/sources/c99/common/doprnt.c: 911:         --i;
 43245                           ;stkvar	_i @ sp[(-7)+0]
 43246   014CC2  50E1               	movf	fsr1l,w,c
 43247   014CC4  0FF9               	addlw	-7
 43248   014CC6  6ED9               	movwf	fsr2l,c
 43249   014CC8  50E2               	movf	fsr1h,w,c
 43250   014CCA  6EDA               	movwf	fsr2h,c
 43251   014CCC  0EFF               	movlw	255
 43252   014CCE  22DA               	addwfc	fsr2h,f,c
 43253   014CD0  06DE               	decf	postinc2,f,c
 43254   014CD2  0E00               	movlw	0
 43255   014CD4  5ADD               	subwfb	postdec2,f,c
 43256                           
 43257                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 913:         t = d & 07;
 43258                           ;stkvar	_d @ sp[(-7)+-6]
 43259   014CD6  0EF3               	movlw	-13
 43260   014CD8  006F FF8C  F02E    	movff	plusw1,btemp+11
 43261   014CDE  0E07               	movlw	7
 43262   014CE0  162E               	andwf	(btemp+11)^0,f,c
 43263                           
 43264                           ;stkvar	_t @ sp[(-7)+6]
 43265   014CE2  0EFF               	movlw	-1
 43266   014CE4  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 43267                           
 43268                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 914:         dbuf[i] = (char)
      +                          ((int)'0' + t);
 43269                           ;stkvar	_i @ sp[(-7)+0]
 43270   014CEA  0EF9               	movlw	-7
 43271   014CEC  006F FF8C  F02D    	movff	plusw1,btemp+10
 43272   014CF2  0EFA               	movlw	-6
 43273   014CF4  006F FF8C  F02E    	movff	plusw1,btemp+11
 43274   014CFA  0EC6               	movlw	low _dbuf
 43275   014CFC  242D               	addwf	(btemp+10)^0,w,c
 43276   014CFE  6ED9               	movwf	fsr2l,c
 43277   014D00  0E01               	movlw	high _dbuf
 43278   014D02  202E               	addwfc	(btemp+11)^0,w,c
 43279   014D04  6EDA               	movwf	fsr2h,c
 43280                           
 43281                           ;stkvar	_t @ sp[(-7)+6]
 43282   014D06  0EFF               	movlw	-1
 43283   014D08  50E3               	movf	plusw1,w,c
 43284   014D0A  0F30               	addlw	48
 43285   014D0C  6EDF               	movwf	indf2,c
 43286                           
 43287                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 919:         --p;
 43288                           ;stkvar	_p @ sp[(-7)+4]
 43289   014D0E  50E1               	movf	fsr1l,w,c
 43290   014D10  0FFD               	addlw	-3
 43291   014D12  6ED9               	movwf	fsr2l,c
 43292   014D14  50E2               	movf	fsr1h,w,c
 43293   014D16  6EDA               	movwf	fsr2h,c
 43294   014D18  0EFF               	movlw	255
 43295   014D1A  22DA               	addwfc	fsr2h,f,c
 43296   014D1C  06DE               	decf	postinc2,f,c
 43297   014D1E  0E00               	movlw	0
 43298   014D20  5ADD               	subwfb	postdec2,f,c
 43299                           
 43300                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 923:         --w;
 43301                           ;stkvar	_w @ sp[(-7)+2]
 43302   014D22  50E1               	movf	fsr1l,w,c
 43303   014D24  0FFB               	addlw	-5
 43304   014D26  6ED9               	movwf	fsr2l,c
 43305   014D28  50E2               	movf	fsr1h,w,c
 43306   014D2A  6EDA               	movwf	fsr2h,c
 43307   014D2C  0EFF               	movlw	255
 43308   014D2E  22DA               	addwfc	fsr2h,f,c
 43309   014D30  06DE               	decf	postinc2,f,c
 43310   014D32  0E00               	movlw	0
 43311   014D34  5ADD               	subwfb	postdec2,f,c
 43312                           
 43313                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 924:         d = d >> 3;
 43314   014D36  0E03               	movlw	3
 43315   014D38  6E2E               	movwf	(btemp+11)^0,c
 43316                           
 43317                           ;stkvar	_d @ sp[(-7)+-6]
 43318   014D3A  50E1               	movf	fsr1l,w,c
 43319   014D3C  0FF3               	addlw	-13
 43320   014D3E  6ED9               	movwf	fsr2l,c
 43321   014D40  50E2               	movf	fsr1h,w,c
 43322   014D42  6EDA               	movwf	fsr2h,c
 43323   014D44  0EFF               	movlw	255
 43324   014D46  22DA               	addwfc	fsr2h,f,c
 43325   014D48  282E               	incf	(btemp+11)^0,w,c
 43326   014D4A  52DE               	movf	postinc2,f,c
 43327   014D4C  D007               	goto	u8080
 43328   014D4E                     u8085:
 43329   014D4E  52DE               	movf	postinc2,f,c
 43330   014D50  52DE               	movf	postinc2,f,c
 43331   014D52  90D8               	bcf	status,0,c
 43332   014D54  32DD               	rrcf	postdec2,f,c
 43333   014D56  32DD               	rrcf	postdec2,f,c
 43334   014D58  32DD               	rrcf	postdec2,f,c
 43335   014D5A  32DE               	rrcf	postinc2,f,c
 43336   014D5C                     u8080:
 43337   014D5C  2EE8               	decfsz	wreg,f,c
 43338   014D5E  D7F7               	goto	u8085
 43339   014D60                     l11686:
 43340                           
 43341                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 901:     while (!(i < 1) && (
      +                          d != 0
 43342                           ;stkvar	_i @ sp[(-7)+0]
 43343   014D60  0EFA               	movlw	-6
 43344   014D62  BEE3               	btfsc	plusw1,7,c
 43345   014D64  D02B               	goto	u8130
 43346   014D66  0EFA               	movlw	-6
 43347   014D68  50E3               	movf	plusw1,w,c
 43348   014D6A  E104               	bnz	u8090
 43349   014D6C  0EF9               	movlw	-7
 43350   014D6E  04E3               	decf	plusw1,w,c
 43351   014D70  A0D8               	btfss	status,0,c
 43352   014D72  D024               	goto	u8130
 43353   014D74                     u8090:
 43354                           
 43355                           ;stkvar	_d @ sp[(-7)+-6]
 43356   014D74  0EF3               	movlw	-13
 43357   014D76  50E3               	movf	plusw1,w,c
 43358   014D78  E1A4               	bnz	l11674
 43359   014D7A  0EF4               	movlw	-12
 43360   014D7C  50E3               	movf	plusw1,w,c
 43361   014D7E  E1A1               	bnz	l11674
 43362   014D80  0EF5               	movlw	-11
 43363   014D82  50E3               	movf	plusw1,w,c
 43364   014D84  E19E               	bnz	l11674
 43365   014D86  0EF6               	movlw	-10
 43366   014D88  50E3               	movf	plusw1,w,c
 43367   014D8A  A4D8               	btfss	status,2,c
 43368   014D8C  D79A               	goto	l11674
 43369                           
 43370                           ;stkvar	_p @ sp[(-7)+4]
 43371   014D8E  0EFE               	movlw	-2
 43372   014D90  BEE3               	btfsc	plusw1,7,c
 43373   014D92  D007               	goto	u8110
 43374   014D94  0EFE               	movlw	-2
 43375   014D96  50E3               	movf	plusw1,w,c
 43376   014D98  E194               	bnz	l11674
 43377   014D9A  0EFD               	movlw	-3
 43378   014D9C  04E3               	decf	plusw1,w,c
 43379   014D9E  B0D8               	btfsc	status,0,c
 43380   014DA0  D790               	goto	l11674
 43381   014DA2                     u8110:
 43382                           
 43383                           ;stkvar	_w @ sp[(-7)+2]
 43384   014DA2  0EFC               	movlw	-4
 43385   014DA4  BEE3               	btfsc	plusw1,7,c
 43386   014DA6  D00A               	goto	u8130
 43387   014DA8  0EFC               	movlw	-4
 43388   014DAA  50E3               	movf	plusw1,w,c
 43389   014DAC  E104               	bnz	u8120
 43390   014DAE  0EFB               	movlw	-5
 43391   014DB0  04E3               	decf	plusw1,w,c
 43392   014DB2  A0D8               	btfss	status,0,c
 43393   014DB4  D003               	goto	u8130
 43394   014DB6                     u8120:
 43395   014DB6  0101               	movlb	1	; () banked
 43396   014DB8  B3C5               	btfsc	_flags& (0+255),1,b
 43397   014DBA  D783               	goto	l11674
 43398   014DBC                     u8130:
 43399                           
 43400                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 929:     if ((t || prec == 0)
      +                           && (flags & (1 << 4))) {
 43401                           ;stkvar	_t @ sp[(-7)+6]
 43402   014DBC  0EFF               	movlw	-1
 43403   014DBE  50E3               	movf	plusw1,w,c
 43404   014DC0  A4D8               	btfss	status,2,c
 43405   014DC2  D005               	goto	u8150
 43406   014DC4  0101               	movlb	1	; () banked
 43407   014DC6  51C3               	movf	_prec& (0+255),w,b
 43408   014DC8  11C4               	iorwf	(_prec+1)& (0+255),w,b
 43409   014DCA  A4D8               	btfss	status,2,c
 43410   014DCC  D027               	goto	l11706
 43411   014DCE                     u8150:
 43412   014DCE  0101               	movlb	1	; () banked
 43413   014DD0  A9C5               	btfss	_flags& (0+255),4,b
 43414   014DD2  D024               	goto	l11706
 43415                           
 43416                           ; BSR set to: 1
 43417                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 930:         --i;
 43418                           ;stkvar	_i @ sp[(-7)+0]
 43419   014DD4  50E1               	movf	fsr1l,w,c
 43420   014DD6  0FF9               	addlw	-7
 43421   014DD8  6ED9               	movwf	fsr2l,c
 43422   014DDA  50E2               	movf	fsr1h,w,c
 43423   014DDC  6EDA               	movwf	fsr2h,c
 43424   014DDE  0EFF               	movlw	255
 43425   014DE0  22DA               	addwfc	fsr2h,f,c
 43426   014DE2  06DE               	decf	postinc2,f,c
 43427   014DE4  0E00               	movlw	0
 43428   014DE6  5ADD               	subwfb	postdec2,f,c
 43429                           
 43430                           ; BSR set to: 1
 43431                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 931:         dbuf[i] = '0';
 43432                           ;stkvar	_i @ sp[(-7)+0]
 43433   014DE8  0EF9               	movlw	-7
 43434   014DEA  006F FF8C  F02D    	movff	plusw1,btemp+10
 43435   014DF0  0EFA               	movlw	-6
 43436   014DF2  006F FF8C  F02E    	movff	plusw1,btemp+11
 43437   014DF8  0EC6               	movlw	low _dbuf
 43438   014DFA  242D               	addwf	(btemp+10)^0,w,c
 43439   014DFC  6ED9               	movwf	fsr2l,c
 43440   014DFE  0E01               	movlw	high _dbuf
 43441   014E00  202E               	addwfc	(btemp+11)^0,w,c
 43442   014E02  6EDA               	movwf	fsr2h,c
 43443   014E04  0E30               	movlw	48
 43444   014E06  6EDF               	movwf	indf2,c
 43445                           
 43446                           ; BSR set to: 1
 43447                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 932:         --w;
 43448                           ;stkvar	_w @ sp[(-7)+2]
 43449   014E08  50E1               	movf	fsr1l,w,c
 43450   014E0A  0FFB               	addlw	-5
 43451   014E0C  6ED9               	movwf	fsr2l,c
 43452   014E0E  50E2               	movf	fsr1h,w,c
 43453   014E10  6EDA               	movwf	fsr2h,c
 43454   014E12  0EFF               	movlw	255
 43455   014E14  22DA               	addwfc	fsr2h,f,c
 43456   014E16  06DE               	decf	postinc2,f,c
 43457   014E18  0E00               	movlw	0
 43458   014E1A  5ADD               	subwfb	postdec2,f,c
 43459   014E1C                     l11706:
 43460                           
 43461                           ; BSR set to: 1
 43462                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 937:     return (int) pad(fp,
      +                           &dbuf[i], w);
 43463                           ;stkvar	_w @ sp[(-7)+2]
 43464   014E1C  0EFB               	movlw	-5
 43465   014E1E  006F FF8F FFE6     	movff	plusw1,postinc1
 43466   014E24  006F FF8F FFE6     	movff	plusw1,postinc1
 43467                           
 43468                           ;stkvar	_i @ sp[(-9)+0]
 43469   014E2A  0EC6               	movlw	low _dbuf
 43470   014E2C  6E2D               	movwf	(btemp+10)^0,c
 43471   014E2E  0E01               	movlw	high _dbuf
 43472   014E30  6E2E               	movwf	(btemp+11)^0,c
 43473   014E32  0EF7               	movlw	-9
 43474   014E34  50E3               	movf	plusw1,w,c
 43475   014E36  262D               	addwf	(btemp+10)^0,f,c
 43476   014E38  0EF8               	movlw	-8
 43477   014E3A  50E3               	movf	plusw1,w,c
 43478   014E3C  222E               	addwfc	(btemp+11)^0,f,c
 43479   014E3E  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 43480   014E44  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 43481                           
 43482                           ;stkvar	_fp @ sp[(-11)+-2]
 43483   014E4A  0EF3               	movlw	-13
 43484   014E4C  006F FF8F FFE6     	movff	plusw1,postinc1
 43485   014E52  006F FF8F FFE6     	movff	plusw1,postinc1
 43486   014E58  ECB0  F0B1         	call	_pad	;wreg free
 43487                           
 43488                           ; _otoa: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize 
      +                          = 6, vargsize = 0
 43489   014E5C  0EF3               	movlw	243
 43490   014E5E  26E1               	addwf	fsr1l,f,c
 43491   014E60  0EFF               	movlw	255
 43492   014E62  22E2               	addwfc	fsr1h,f,c
 43493   014E64  0012               	return		;funcret
 43494   014E66                     __end_of_otoa:
 43495                           	callstack 0
 43496                           
 43497 ;; *************** function _dtoa *****************
 43498 ;; Defined at:
 43499 ;;		line 513 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c"
 43500 ;; Parameters:    Size  Location     Type
 43501 ;;  fp              2  [STACK] PTR struct _IO_FILE
 43502 ;;		 -> f(11), NULL(0), 
 43503 ;;  d               4  [STACK] long 
 43504 ;; Auto vars:     Size  Location     Type
 43505 ;;  i               2  [STACK] int 
 43506 ;;  w               2  [STACK] int 
 43507 ;;  p               2  [STACK] int 
 43508 ;;  s               1  [STACK] unsigned char 
 43509 ;; Return value:  Size  Location     Type
 43510 ;;                  2  [STACK] int 
 43511 ;; Registers used:
 43512 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl
 43513 ;; Tracked objects:
 43514 ;;		On entry : 0/1
 43515 ;;		On exit  : 0/0
 43516 ;;		Unchanged: 0/0
 43517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43522 ;;Total ram usage:        0 bytes
 43523 ;; Hardware stack levels used: 1
 43524 ;; Hardware stack levels required when called: 8
 43525 ;; This function calls:
 43526 ;;		___aldiv
 43527 ;;		___almod
 43528 ;;		_abs
 43529 ;;		_pad
 43530 ;; This function is called by:
 43531 ;;		_vfpfcnvrt
 43532 ;; This function uses a reentrant model
 43533 ;;
 43534                           
 43535                           	psect	text104
 43536   013DA2                     __ptext104:
 43537                           	callstack 0
 43538   013DA2                     _dtoa:
 43539                           	callstack 0
 43540                           
 43541                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43542   013DA2  0E09               	movlw	9
 43543   013DA4  26E1               	addwf	fsr1l,f,c
 43544   013DA6  0E00               	movlw	0
 43545   013DA8  22E2               	addwfc	fsr1h,f,c
 43546                           
 43547                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 513: static int dtoa(FILE *fp
      +                          , vfpf_sint_t d);/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 514: {;/opt/m
      +                          icrochip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 515:  char s;;/opt/microchip/xc8/v3.
      +                          00/pic/sources/c99/common/doprnt.c: 516:     int i, w;;/opt/microchip/xc8/v3.00/pic/sour
      +                          ces/c99/common/doprnt.c: 518:  int p;;/opt/microchip/xc8/v3.00/pic/sources/c99/common/do
      +                          prnt.c: 524:     s = d < 0 ? 1 : 0;
 43548                           ;stkvar	_d @ sp[(-9)+-6]
 43549                           
 43550                           ;incstack = 0
 43551   013DAA  0EF4               	movlw	-12
 43552   013DAC  AEE3               	btfss	plusw1,7,c
 43553   013DAE  D003               	goto	u7920
 43554   013DB0  6A2E               	clrf	(btemp+11)^0,c
 43555   013DB2  2A2E               	incf	(btemp+11)^0,f,c
 43556   013DB4  D001               	goto	u7938
 43557   013DB6                     u7920:
 43558   013DB6  6A2E               	clrf	(btemp+11)^0,c
 43559   013DB8                     u7938:
 43560                           
 43561                           ;stkvar	_s @ sp[(-9)+8]
 43562   013DB8  0EFF               	movlw	-1
 43563   013DBA  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 43564                           
 43565                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 529:     if (!(prec < 0)) {
 43566   013DC0  0101               	movlb	1	; () banked
 43567   013DC2  AFC4               	btfss	(_prec+1)& (0+255),7,b
 43568                           
 43569                           ; BSR set to: 1
 43570                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 530:         flags &= ~(1 << 
      +                          1);
 43571   013DC4  93C5               	bcf	_flags& (0+255),1,b
 43572                           
 43573                           ; BSR set to: 1
 43574                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 533:     p = (0 <= prec) ? pr
      +                          ec : 1;
 43575   013DC6  AFC4               	btfss	(_prec+1)& (0+255),7,b
 43576   013DC8  D00D               	goto	l11604
 43577                           
 43578                           ; BSR set to: 1
 43579   013DCA  0E01               	movlw	1
 43580   013DCC  6E2D               	movwf	(btemp+10)^0,c
 43581   013DCE  0E00               	movlw	0
 43582   013DD0  6E2E               	movwf	(btemp+11)^0,c
 43583                           
 43584                           ;stkvar	_p @ sp[(-9)+6]
 43585   013DD2  0EFD               	movlw	-3
 43586   013DD4  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 43587   013DDA  0EFE               	movlw	-2
 43588   013DDC  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 43589   013DE2  D008               	goto	l3177
 43590   013DE4                     l11604:
 43591                           
 43592                           ; BSR set to: 1
 43593                           ;stkvar	_p @ sp[(-9)+6]
 43594   013DE4  0EFD               	movlw	-3
 43595   013DE6  0060  F70F  FFE3   	movff	_prec,plusw1
 43596   013DEC  0EFE               	movlw	-2
 43597   013DEE  0060  F713  FFE3   	movff	_prec+1,plusw1
 43598   013DF4                     l3177:
 43599                           
 43600                           ; BSR set to: 1
 43601                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 535:     w = width;
 43602                           ;stkvar	_w @ sp[(-9)+4]
 43603   013DF4  0EFB               	movlw	-5
 43604   013DF6  0060  F707  FFE3   	movff	_width,plusw1
 43605   013DFC  0EFC               	movlw	-4
 43606   013DFE  0060  F70B  FFE3   	movff	_width+1,plusw1
 43607                           
 43608                           ; BSR set to: 1
 43609                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 536:     if (s
 43610                           ;stkvar	_s @ sp[(-9)+8]
 43611   013E04  0EFF               	movlw	-1
 43612   013E06  50E3               	movf	plusw1,w,c
 43613   013E08  A4D8               	btfss	status,2,c
 43614   013E0A  D002               	goto	u7970
 43615                           
 43616                           ; BSR set to: 1
 43617   013E0C  A5C5               	btfss	_flags& (0+255),2,b
 43618   013E0E  D025               	goto	l3178
 43619   013E10                     u7970:
 43620                           
 43621                           ; BSR set to: 1
 43622                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 540:     ) {;/opt/microchip/x
      +                          c8/v3.00/pic/sources/c99/common/doprnt.c: 541:         --w;
 43623                           ;stkvar	_w @ sp[(-9)+4]
 43624   013E10  50E1               	movf	fsr1l,w,c
 43625   013E12  0FFB               	addlw	-5
 43626   013E14  6ED9               	movwf	fsr2l,c
 43627   013E16  50E2               	movf	fsr1h,w,c
 43628   013E18  6EDA               	movwf	fsr2h,c
 43629   013E1A  0EFF               	movlw	255
 43630   013E1C  22DA               	addwfc	fsr2h,f,c
 43631   013E1E  06DE               	decf	postinc2,f,c
 43632   013E20  0E00               	movlw	0
 43633   013E22  5ADD               	subwfb	postdec2,f,c
 43634                           
 43635                           ; BSR set to: 1
 43636                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 542:   s = s ? '-' : '+';
 43637                           ;stkvar	_s @ sp[(-9)+8]
 43638   013E24  0EFF               	movlw	-1
 43639   013E26  50E3               	movf	plusw1,w,c
 43640   013E28  A4D8               	btfss	status,2,c
 43641   013E2A  D002               	goto	l11616
 43642                           
 43643                           ; BSR set to: 1
 43644   013E2C  0E2B               	movlw	43
 43645   013E2E  D001               	goto	L39
 43646   013E30                     l11616:
 43647                           
 43648                           ; BSR set to: 1
 43649   013E30  0E2D               	movlw	45
 43650   013E32                     L39:
 43651   013E32  6E2D               	movwf	(btemp+10)^0,c
 43652   013E34  0E00               	movlw	0
 43653   013E36  6E2E               	movwf	(btemp+11)^0,c
 43654                           
 43655                           ;stkvar	_dtoa$5753 @ sp[(-9)+0]
 43656   013E38  0EF7               	movlw	-9
 43657   013E3A  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 43658   013E40  0EF8               	movlw	-8
 43659   013E42  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 43660                           
 43661                           ; BSR set to: 1
 43662                           ;stkvar	_dtoa$5753 @ sp[(-9)+0]
 43663                           ;stkvar	_s @ sp[(-9)+8]
 43664   013E48  0EF7               	movlw	-9
 43665   013E4A  006F FF8C  F023    	movff	plusw1,btemp
 43666   013E50  0EFF               	movlw	-1
 43667   013E52  0060  F08F  FFE3   	movff	btemp,plusw1
 43668                           
 43669                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 543:     }
 43670   013E58  D00F               	goto	l11624
 43671   013E5A                     l3178:
 43672                           
 43673                           ; BSR set to: 1
 43674   013E5A  A7C5               	btfss	_flags& (0+255),3,b
 43675   013E5C  D00D               	goto	l11624
 43676                           
 43677                           ; BSR set to: 1
 43678                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 546:         --w;
 43679                           ;stkvar	_w @ sp[(-9)+4]
 43680   013E5E  50E1               	movf	fsr1l,w,c
 43681   013E60  0FFB               	addlw	-5
 43682   013E62  6ED9               	movwf	fsr2l,c
 43683   013E64  50E2               	movf	fsr1h,w,c
 43684   013E66  6EDA               	movwf	fsr2h,c
 43685   013E68  0EFF               	movlw	255
 43686   013E6A  22DA               	addwfc	fsr2h,f,c
 43687   013E6C  06DE               	decf	postinc2,f,c
 43688   013E6E  0E00               	movlw	0
 43689   013E70  5ADD               	subwfb	postdec2,f,c
 43690                           
 43691                           ; BSR set to: 1
 43692                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 547:   s = ' ';
 43693                           ;stkvar	_s @ sp[(-9)+8]
 43694   013E72  0EFF               	movlw	-1
 43695   013E74  6AE3               	clrf	plusw1,c
 43696   013E76  8AE3               	bsf	plusw1,5,c
 43697   013E78                     l11624:
 43698                           
 43699                           ; BSR set to: 1
 43700                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 552:     i = sizeof(dbuf) - 1
      +                          ;
 43701   013E78  0E1F               	movlw	31
 43702   013E7A  6E2D               	movwf	(btemp+10)^0,c
 43703   013E7C  0E00               	movlw	0
 43704   013E7E  6E2E               	movwf	(btemp+11)^0,c
 43705                           
 43706                           ;stkvar	_i @ sp[(-9)+2]
 43707   013E80  0EF9               	movlw	-7
 43708   013E82  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 43709   013E88  0EFA               	movlw	-6
 43710   013E8A  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 43711                           
 43712                           ; BSR set to: 1
 43713                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 553:     dbuf[i] = '\0';
 43714   013E90  6BE5               	clrf	(_dbuf+31)& (0+255),b
 43715                           
 43716                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 554:     while (!(i < 1) && (
      +                          d != 0
 43717   013E92  D07B               	goto	l11638
 43718   013E94                     l11628:
 43719                           
 43720                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 563:     )) {;/opt/microchip/
      +                          xc8/v3.00/pic/sources/c99/common/doprnt.c: 564:         --i;
 43721                           ;stkvar	_i @ sp[(-9)+2]
 43722   013E94  50E1               	movf	fsr1l,w,c
 43723   013E96  0FF9               	addlw	-7
 43724   013E98  6ED9               	movwf	fsr2l,c
 43725   013E9A  50E2               	movf	fsr1h,w,c
 43726   013E9C  6EDA               	movwf	fsr2h,c
 43727   013E9E  0EFF               	movlw	255
 43728   013EA0  22DA               	addwfc	fsr2h,f,c
 43729   013EA2  06DE               	decf	postinc2,f,c
 43730   013EA4  0E00               	movlw	0
 43731   013EA6  5ADD               	subwfb	postdec2,f,c
 43732                           
 43733                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 565:         dbuf[i] = (char)
      +                          ((int)'0' + abs(d % 10));
 43734   013EA8  0E0A               	movlw	10
 43735   013EAA  6EE6               	movwf	postinc1,c
 43736   013EAC  0E00               	movlw	0
 43737   013EAE  6EE6               	movwf	postinc1,c
 43738   013EB0  0E00               	movlw	0
 43739   013EB2  6EE6               	movwf	postinc1,c
 43740   013EB4  0E00               	movlw	0
 43741   013EB6  6EE6               	movwf	postinc1,c
 43742                           
 43743                           ;stkvar	_d @ sp[(-13)+-6]
 43744   013EB8  0EED               	movlw	-19
 43745   013EBA  006F FF8F FFE6     	movff	plusw1,postinc1
 43746   013EC0  006F FF8F FFE6     	movff	plusw1,postinc1
 43747   013EC6  006F FF8F FFE6     	movff	plusw1,postinc1
 43748   013ECC  006F FF8F FFE6     	movff	plusw1,postinc1
 43749   013ED2  EC91  F0AA         	call	___almod	;wreg free
 43750   013ED6  C023  F02D         	movff	btemp,btemp+10
 43751   013EDA  C024  F02E         	movff	btemp+1,btemp+11
 43752   013EDE  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 43753   013EE4  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 43754   013EEA  EC79  F0BC         	call	_abs	;wreg free
 43755   013EEE  0E30               	movlw	48
 43756   013EF0  2623               	addwf	btemp^0,f,c
 43757                           
 43758                           ;stkvar	_i @ sp[(-9)+2]
 43759   013EF2  0EF9               	movlw	-7
 43760   013EF4  006F FF8C  F02D    	movff	plusw1,btemp+10
 43761   013EFA  0EFA               	movlw	-6
 43762   013EFC  006F FF8C  F02E    	movff	plusw1,btemp+11
 43763   013F02  0EC6               	movlw	low _dbuf
 43764   013F04  242D               	addwf	(btemp+10)^0,w,c
 43765   013F06  6ED9               	movwf	fsr2l,c
 43766   013F08  0E01               	movlw	high _dbuf
 43767   013F0A  202E               	addwfc	(btemp+11)^0,w,c
 43768   013F0C  6EDA               	movwf	fsr2h,c
 43769   013F0E  0060  F08F  FFDF   	movff	btemp,indf2
 43770                           
 43771                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 567:         --p;
 43772                           ;stkvar	_p @ sp[(-9)+6]
 43773   013F14  50E1               	movf	fsr1l,w,c
 43774   013F16  0FFD               	addlw	-3
 43775   013F18  6ED9               	movwf	fsr2l,c
 43776   013F1A  50E2               	movf	fsr1h,w,c
 43777   013F1C  6EDA               	movwf	fsr2h,c
 43778   013F1E  0EFF               	movlw	255
 43779   013F20  22DA               	addwfc	fsr2h,f,c
 43780   013F22  06DE               	decf	postinc2,f,c
 43781   013F24  0E00               	movlw	0
 43782   013F26  5ADD               	subwfb	postdec2,f,c
 43783                           
 43784                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 571:         --w;
 43785                           ;stkvar	_w @ sp[(-9)+4]
 43786   013F28  50E1               	movf	fsr1l,w,c
 43787   013F2A  0FFB               	addlw	-5
 43788   013F2C  6ED9               	movwf	fsr2l,c
 43789   013F2E  50E2               	movf	fsr1h,w,c
 43790   013F30  6EDA               	movwf	fsr2h,c
 43791   013F32  0EFF               	movlw	255
 43792   013F34  22DA               	addwfc	fsr2h,f,c
 43793   013F36  06DE               	decf	postinc2,f,c
 43794   013F38  0E00               	movlw	0
 43795   013F3A  5ADD               	subwfb	postdec2,f,c
 43796                           
 43797                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 572:         d = d / 10;
 43798   013F3C  0E0A               	movlw	10
 43799   013F3E  6EE6               	movwf	postinc1,c
 43800   013F40  0E00               	movlw	0
 43801   013F42  6EE6               	movwf	postinc1,c
 43802   013F44  0E00               	movlw	0
 43803   013F46  6EE6               	movwf	postinc1,c
 43804   013F48  0E00               	movlw	0
 43805   013F4A  6EE6               	movwf	postinc1,c
 43806                           
 43807                           ;stkvar	_d @ sp[(-13)+-6]
 43808   013F4C  0EED               	movlw	-19
 43809   013F4E  006F FF8F FFE6     	movff	plusw1,postinc1
 43810   013F54  006F FF8F FFE6     	movff	plusw1,postinc1
 43811   013F5A  006F FF8F FFE6     	movff	plusw1,postinc1
 43812   013F60  006F FF8F FFE6     	movff	plusw1,postinc1
 43813   013F66  EC04  F0A9         	call	___aldiv	;wreg free
 43814                           
 43815                           ;stkvar	_d @ sp[(-9)+-6]
 43816   013F6A  0EF1               	movlw	-15
 43817   013F6C  0060  F08F  FFE3   	movff	btemp,plusw1
 43818   013F72  0EF2               	movlw	-14
 43819   013F74  0060  F093  FFE3   	movff	btemp+1,plusw1
 43820   013F7A  0EF3               	movlw	-13
 43821   013F7C  0060  F097  FFE3   	movff	btemp+2,plusw1
 43822   013F82  0EF4               	movlw	-12
 43823   013F84  0060  F09B  FFE3   	movff	btemp+3,plusw1
 43824   013F8A                     l11638:
 43825                           
 43826                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 554:     while (!(i < 1) && (
      +                          d != 0
 43827                           ;stkvar	_i @ sp[(-9)+2]
 43828   013F8A  0EFA               	movlw	-6
 43829   013F8C  BEE3               	btfsc	plusw1,7,c
 43830   013F8E  D02B               	goto	u8040
 43831   013F90  0EFA               	movlw	-6
 43832   013F92  50E3               	movf	plusw1,w,c
 43833   013F94  E104               	bnz	u8000
 43834   013F96  0EF9               	movlw	-7
 43835   013F98  04E3               	decf	plusw1,w,c
 43836   013F9A  A0D8               	btfss	status,0,c
 43837   013F9C  D024               	goto	u8040
 43838   013F9E                     u8000:
 43839                           
 43840                           ;stkvar	_d @ sp[(-9)+-6]
 43841   013F9E  0EF1               	movlw	-15
 43842   013FA0  50E3               	movf	plusw1,w,c
 43843   013FA2  E109               	bnz	u8011
 43844   013FA4  0EF2               	movlw	-14
 43845   013FA6  50E3               	movf	plusw1,w,c
 43846   013FA8  E106               	bnz	u8011
 43847   013FAA  0EF3               	movlw	-13
 43848   013FAC  50E3               	movf	plusw1,w,c
 43849   013FAE  E103               	bnz	u8011
 43850   013FB0  0EF4               	movlw	-12
 43851   013FB2  50E3               	movf	plusw1,w,c
 43852   013FB4  A4D8               	btfss	status,2,c
 43853   013FB6                     u8011:
 43854   013FB6  D76E               	goto	l11628
 43855                           
 43856                           ;stkvar	_p @ sp[(-9)+6]
 43857   013FB8  0EFE               	movlw	-2
 43858   013FBA  BEE3               	btfsc	plusw1,7,c
 43859   013FBC  D007               	goto	u8020
 43860   013FBE  0EFE               	movlw	-2
 43861   013FC0  50E3               	movf	plusw1,w,c
 43862   013FC2  E103               	bnz	u8021
 43863   013FC4  0EFD               	movlw	-3
 43864   013FC6  04E3               	decf	plusw1,w,c
 43865   013FC8  B0D8               	btfsc	status,0,c
 43866   013FCA                     u8021:
 43867   013FCA  D764               	goto	l11628
 43868   013FCC                     u8020:
 43869                           
 43870                           ;stkvar	_w @ sp[(-9)+4]
 43871   013FCC  0EFC               	movlw	-4
 43872   013FCE  BEE3               	btfsc	plusw1,7,c
 43873   013FD0  D00A               	goto	u8040
 43874   013FD2  0EFC               	movlw	-4
 43875   013FD4  50E3               	movf	plusw1,w,c
 43876   013FD6  E104               	bnz	u8030
 43877   013FD8  0EFB               	movlw	-5
 43878   013FDA  04E3               	decf	plusw1,w,c
 43879   013FDC  A0D8               	btfss	status,0,c
 43880   013FDE  D003               	goto	u8040
 43881   013FE0                     u8030:
 43882   013FE0  0101               	movlb	1	; () banked
 43883   013FE2  B3C5               	btfsc	_flags& (0+255),1,b
 43884   013FE4  D757               	goto	l11628
 43885   013FE6                     u8040:
 43886                           
 43887                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 576:     if (s != 0) {
 43888                           ;stkvar	_s @ sp[(-9)+8]
 43889   013FE6  0EFF               	movlw	-1
 43890   013FE8  50E3               	movf	plusw1,w,c
 43891   013FEA  B4D8               	btfsc	status,2,c
 43892   013FEC  D01C               	goto	l11654
 43893                           
 43894                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 577:         --i;
 43895                           ;stkvar	_i @ sp[(-9)+2]
 43896   013FEE  50E1               	movf	fsr1l,w,c
 43897   013FF0  0FF9               	addlw	-7
 43898   013FF2  6ED9               	movwf	fsr2l,c
 43899   013FF4  50E2               	movf	fsr1h,w,c
 43900   013FF6  6EDA               	movwf	fsr2h,c
 43901   013FF8  0EFF               	movlw	255
 43902   013FFA  22DA               	addwfc	fsr2h,f,c
 43903   013FFC  06DE               	decf	postinc2,f,c
 43904   013FFE  0E00               	movlw	0
 43905   014000  5ADD               	subwfb	postdec2,f,c
 43906                           
 43907                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 578:         dbuf[i] = s;
 43908                           ;stkvar	_s @ sp[(-9)+8]
 43909                           ;stkvar	_i @ sp[(-9)+2]
 43910   014002  0EF9               	movlw	-7
 43911   014004  006F FF8C  F02D    	movff	plusw1,btemp+10
 43912   01400A  0EFA               	movlw	-6
 43913   01400C  006F FF8C  F02E    	movff	plusw1,btemp+11
 43914   014012  0EC6               	movlw	low _dbuf
 43915   014014  242D               	addwf	(btemp+10)^0,w,c
 43916   014016  6ED9               	movwf	fsr2l,c
 43917   014018  0E01               	movlw	high _dbuf
 43918   01401A  202E               	addwfc	(btemp+11)^0,w,c
 43919   01401C  6EDA               	movwf	fsr2h,c
 43920   01401E  0EFF               	movlw	-1
 43921   014020  006F FF8F FFDF     	movff	plusw1,indf2
 43922   014026                     l11654:
 43923                           
 43924                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 582:     return (int) pad(fp,
      +                           &dbuf[i], w);
 43925                           ;stkvar	_w @ sp[(-9)+4]
 43926   014026  0EFB               	movlw	-5
 43927   014028  006F FF8F FFE6     	movff	plusw1,postinc1
 43928   01402E  006F FF8F FFE6     	movff	plusw1,postinc1
 43929                           
 43930                           ;stkvar	_i @ sp[(-11)+2]
 43931   014034  0EC6               	movlw	low _dbuf
 43932   014036  6E2D               	movwf	(btemp+10)^0,c
 43933   014038  0E01               	movlw	high _dbuf
 43934   01403A  6E2E               	movwf	(btemp+11)^0,c
 43935   01403C  0EF7               	movlw	-9
 43936   01403E  50E3               	movf	plusw1,w,c
 43937   014040  262D               	addwf	(btemp+10)^0,f,c
 43938   014042  0EF8               	movlw	-8
 43939   014044  50E3               	movf	plusw1,w,c
 43940   014046  222E               	addwfc	(btemp+11)^0,f,c
 43941   014048  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 43942   01404E  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 43943                           
 43944                           ;stkvar	_fp @ sp[(-13)+-2]
 43945   014054  0EF1               	movlw	-15
 43946   014056  006F FF8F FFE6     	movff	plusw1,postinc1
 43947   01405C  006F FF8F FFE6     	movff	plusw1,postinc1
 43948   014062  ECB0  F0B1         	call	_pad	;wreg free
 43949                           
 43950                           ; _dtoa: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize 
      +                          = 6, vargsize = 0
 43951   014066  0EF1               	movlw	241
 43952   014068  26E1               	addwf	fsr1l,f,c
 43953   01406A  0EFF               	movlw	255
 43954   01406C  22E2               	addwfc	fsr1h,f,c
 43955   01406E  0012               	return		;funcret
 43956   014070                     __end_of_dtoa:
 43957                           	callstack 0
 43958                           
 43959 ;; *************** function _pad *****************
 43960 ;; Defined at:
 43961 ;;		line 193 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c"
 43962 ;; Parameters:    Size  Location     Type
 43963 ;;  fp              2  [STACK] PTR struct _IO_FILE
 43964 ;;		 -> f(11), NULL(0), 
 43965 ;;  buf             2  [STACK] PTR unsigned char 
 43966 ;;		 -> dbuf(32), 
 43967 ;;  p               2  [STACK] int 
 43968 ;; Auto vars:     Size  Location     Type
 43969 ;;  i               2  [STACK] int 
 43970 ;; Return value:  Size  Location     Type
 43971 ;;                  2  [STACK] int 
 43972 ;; Registers used:
 43973 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
 43974 ;; Tracked objects:
 43975 ;;		On entry : 0/1
 43976 ;;		On exit  : 0/0
 43977 ;;		Unchanged: 0/0
 43978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43983 ;;Total ram usage:        0 bytes
 43984 ;; Hardware stack levels used: 1
 43985 ;; Hardware stack levels required when called: 7
 43986 ;; This function calls:
 43987 ;;		_fputc
 43988 ;;		_fputs
 43989 ;;		_strlen
 43990 ;; This function is called by:
 43991 ;;		_dtoa
 43992 ;;		_otoa
 43993 ;;		_utoa
 43994 ;;		_xtoa
 43995 ;; This function uses a reentrant model
 43996 ;;
 43997                           
 43998                           	psect	text105
 43999   016360                     __ptext105:
 44000                           	callstack 0
 44001   016360                     _pad:
 44002                           	callstack 0
 44003                           
 44004                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44005   016360  52E6               	movf	postinc1,f,c
 44006   016362  52E6               	movf	postinc1,f,c
 44007                           
 44008                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 193: static int pad(FILE *fp,
      +                           char *buf, int p);/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 194: {;/opt
      +                          /microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 195:     int i;;/opt/microchip/xc8
      +                          /v3.00/pic/sources/c99/common/doprnt.c: 199:     if (flags & (1 << 0)) {
 44009                           
 44010                           ;incstack = 0
 44011   016364  0101               	movlb	1	; () banked
 44012   016366  A1C5               	btfss	_flags& (0+255),0,b
 44013   016368  D010               	goto	l11550
 44014                           
 44015                           ; BSR set to: 1
 44016                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 200:         fputs((const cha
      +                          r *)buf, fp);
 44017                           ;stkvar	_fp @ sp[(-2)+-2]
 44018   01636A  0EFC               	movlw	-4
 44019   01636C  006F FF8F FFE6     	movff	plusw1,postinc1
 44020   016372  006F FF8F FFE6     	movff	plusw1,postinc1
 44021                           
 44022                           ;stkvar	_buf @ sp[(-4)+-4]
 44023   016378  0EF8               	movlw	-8
 44024   01637A  006F FF8F FFE6     	movff	plusw1,postinc1
 44025   016380  006F FF8F FFE6     	movff	plusw1,postinc1
 44026   016386  EC6E  F0B6         	call	_fputs	;wreg free
 44027   01638A                     l11550:
 44028                           
 44029                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 205:  if (p < 0) {
 44030                           ;stkvar	_p @ sp[(-2)+-6]
 44031   01638A  0EF9               	movlw	-7
 44032   01638C  AEE3               	btfss	plusw1,7,c
 44033   01638E  D004               	goto	l3149
 44034                           
 44035                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 206:   p = 0;
 44036                           ;stkvar	_p @ sp[(-2)+-6]
 44037   016390  0EF8               	movlw	-8
 44038   016392  6AE3               	clrf	plusw1,c
 44039   016394  0EF9               	movlw	-7
 44040   016396  6AE3               	clrf	plusw1,c
 44041   016398                     l3149:
 44042                           
 44043                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 208:     i = 0;
 44044                           ;stkvar	_i @ sp[(-2)+0]
 44045   016398  0EFE               	movlw	-2
 44046   01639A  6AE3               	clrf	plusw1,c
 44047   01639C  0EFF               	movlw	-1
 44048   01639E  6AE3               	clrf	plusw1,c
 44049                           
 44050                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 209:     while (i < p) {
 44051   0163A0  D01E               	goto	l11558
 44052   0163A2                     l11554:
 44053                           
 44054                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 210:         fputc(' ', fp);
 44055                           ;stkvar	_fp @ sp[(-2)+-2]
 44056   0163A2  0EFC               	movlw	-4
 44057   0163A4  006F FF8F FFE6     	movff	plusw1,postinc1
 44058   0163AA  006F FF8F FFE6     	movff	plusw1,postinc1
 44059   0163B0  0E20               	movlw	32
 44060   0163B2  6EE6               	movwf	postinc1,c
 44061   0163B4  0E00               	movlw	0
 44062   0163B6  6EE6               	movwf	postinc1,c
 44063   0163B8  ECDE  F0AD         	call	_fputc	;wreg free
 44064                           
 44065                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 211:         ++i;
 44066                           ;stkvar	_i @ sp[(-2)+0]
 44067   0163BC  0EFE               	movlw	-2
 44068   0163BE  50E3               	movf	plusw1,w,c
 44069   0163C0  0F01               	addlw	1
 44070   0163C2  6E23               	movwf	btemp^0,c
 44071   0163C4  0EFE               	movlw	-2
 44072   0163C6  0060  F08F  FFE3   	movff	btemp,plusw1
 44073   0163CC  6A23               	clrf	btemp^0,c
 44074   0163CE  0EFF               	movlw	-1
 44075   0163D0  50E3               	movf	plusw1,w,c
 44076   0163D2  2023               	addwfc	btemp^0,w,c
 44077   0163D4  6E23               	movwf	btemp^0,c
 44078   0163D6  0EFF               	movlw	-1
 44079   0163D8  0060  F08F  FFE3   	movff	btemp,plusw1
 44080   0163DE                     l11558:
 44081                           
 44082                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 209:     while (i < p) {
 44083                           ;stkvar	_p @ sp[(-2)+-6]
 44084                           ;stkvar	_i @ sp[(-2)+0]
 44085   0163DE  50E1               	movf	fsr1l,w,c
 44086   0163E0  0FFE               	addlw	-2
 44087   0163E2  6ED9               	movwf	fsr2l,c
 44088   0163E4  50E2               	movf	fsr1h,w,c
 44089   0163E6  6EDA               	movwf	fsr2h,c
 44090   0163E8  0EFF               	movlw	255
 44091   0163EA  22DA               	addwfc	fsr2h,f,c
 44092   0163EC  0EF8               	movlw	-8
 44093   0163EE  50E3               	movf	plusw1,w,c
 44094   0163F0  5CDE               	subwf	postinc2,w,c
 44095   0163F2  50DE               	movf	postinc2,w,c
 44096   0163F4  0A80               	xorlw	128
 44097   0163F6  6E23               	movwf	btemp^0,c
 44098   0163F8  0EF9               	movlw	-7
 44099   0163FA  50E3               	movf	plusw1,w,c
 44100   0163FC  0A80               	xorlw	128
 44101   0163FE  5823               	subwfb	btemp^0,w,c
 44102   016400  A0D8               	btfss	status,0,c
 44103   016402  D7CF               	goto	l11554
 44104                           
 44105                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 216:     if (!(flags & (1 << 
      +                          0))) {
 44106   016404  0101               	movlb	1	; () banked
 44107   016406  B1C5               	btfsc	_flags& (0+255),0,b
 44108   016408  D010               	goto	l11562
 44109                           
 44110                           ; BSR set to: 1
 44111                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 218:         fputs((const cha
      +                          r *)buf, fp);
 44112                           ;stkvar	_fp @ sp[(-2)+-2]
 44113   01640A  0EFC               	movlw	-4
 44114   01640C  006F FF8F FFE6     	movff	plusw1,postinc1
 44115   016412  006F FF8F FFE6     	movff	plusw1,postinc1
 44116                           
 44117                           ;stkvar	_buf @ sp[(-4)+-4]
 44118   016418  0EF8               	movlw	-8
 44119   01641A  006F FF8F FFE6     	movff	plusw1,postinc1
 44120   016420  006F FF8F FFE6     	movff	plusw1,postinc1
 44121   016426  EC6E  F0B6         	call	_fputs	;wreg free
 44122   01642A                     l11562:
 44123                           
 44124                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 224:     return (int)(strlen(
      +                          buf) + (size_t)p);
 44125                           ;stkvar	_p @ sp[(-2)+-6]
 44126                           ;stkvar	_buf @ sp[(-2)+-4]
 44127   01642A  0EFA               	movlw	-6
 44128   01642C  006F FF8F FFE6     	movff	plusw1,postinc1
 44129   016432  006F FF8F FFE6     	movff	plusw1,postinc1
 44130   016438  EC00  F0B7         	call	_strlen	;wreg free
 44131   01643C  0EF8               	movlw	-8
 44132   01643E  50E3               	movf	plusw1,w,c
 44133   016440  2623               	addwf	btemp^0,f,c
 44134   016442  0EF9               	movlw	-7
 44135   016444  50E3               	movf	plusw1,w,c
 44136   016446  2224               	addwfc	(btemp+1)^0,f,c
 44137                           
 44138                           ; _pad: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 44139   016448  0EF8               	movlw	248
 44140   01644A  26E1               	addwf	fsr1l,f,c
 44141   01644C  0EFF               	movlw	255
 44142   01644E  22E2               	addwfc	fsr1h,f,c
 44143   016450  0012               	return		;funcret
 44144   016452                     __end_of_pad:
 44145                           	callstack 0
 44146                           
 44147 ;; *************** function _strlen *****************
 44148 ;; Defined at:
 44149 ;;		line 5 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/strlen.c"
 44150 ;; Parameters:    Size  Location     Type
 44151 ;;  s               2  [STACK] PTR const unsigned char 
 44152 ;;		 -> dbuf(32), D$lcd(512), D@mconfig$F5154(514), V$terminal(160), 
 44153 ;;		 -> V(387), 
 44154 ;; Auto vars:     Size  Location     Type
 44155 ;;  a               2  [STACK] PTR const unsigned char 
 44156 ;;		 -> dbuf(32), D$lcd(512), D@mconfig$F5154(514), V$terminal(160), 
 44157 ;;		 -> V(387), 
 44158 ;; Return value:  Size  Location     Type
 44159 ;;                  2  [STACK] unsigned int 
 44160 ;; Registers used:
 44161 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 44162 ;; Tracked objects:
 44163 ;;		On entry : 0/1
 44164 ;;		On exit  : 0/0
 44165 ;;		Unchanged: 0/0
 44166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44171 ;;Total ram usage:        0 bytes
 44172 ;; Hardware stack levels used: 1
 44173 ;; Hardware stack levels required when called: 3
 44174 ;; This function calls:
 44175 ;;		Nothing
 44176 ;; This function is called by:
 44177 ;;		_eaDogM_WriteString
 44178 ;;		_format_display_text
 44179 ;;		_pad
 44180 ;; This function uses a reentrant model
 44181 ;;
 44182                           
 44183                           	psect	text106
 44184   016E00                     __ptext106:
 44185                           	callstack 0
 44186   016E00                     _strlen:
 44187                           	callstack 0
 44188                           
 44189                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44190   016E00  52E6               	movf	postinc1,f,c
 44191   016E02  52E6               	movf	postinc1,f,c
 44192                           
 44193                           ;stkvar	_s @ sp[(-2)+-2]
 44194                           
 44195                           ;incstack = 0
 44196   016E04  0EFC               	movlw	-4
 44197   016E06  006F FF8C  F02D    	movff	plusw1,btemp+10
 44198   016E0C  0EFD               	movlw	-3
 44199   016E0E  006F FF8C  F02E    	movff	plusw1,btemp+11
 44200                           
 44201                           ;stkvar	_a @ sp[(-2)+0]
 44202   016E14  0EFF               	movlw	-1
 44203   016E16  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 44204   016E1C  0EFE               	movlw	-2
 44205   016E1E  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 44206   016E24  D011               	goto	l7458
 44207   016E26                     l7456:
 44208                           
 44209                           ;stkvar	_s @ sp[(-2)+-2]
 44210   016E26  0EFC               	movlw	-4
 44211   016E28  50E3               	movf	plusw1,w,c
 44212   016E2A  0F01               	addlw	1
 44213   016E2C  6E23               	movwf	btemp^0,c
 44214   016E2E  0EFC               	movlw	-4
 44215   016E30  0060  F08F  FFE3   	movff	btemp,plusw1
 44216   016E36  6A23               	clrf	btemp^0,c
 44217   016E38  0EFD               	movlw	-3
 44218   016E3A  50E3               	movf	plusw1,w,c
 44219   016E3C  2023               	addwfc	btemp^0,w,c
 44220   016E3E  6E23               	movwf	btemp^0,c
 44221   016E40  0EFD               	movlw	-3
 44222   016E42  0060  F08F  FFE3   	movff	btemp,plusw1
 44223   016E48                     l7458:
 44224                           
 44225                           ;stkvar	_s @ sp[(-2)+-2]
 44226   016E48  0EFC               	movlw	-4
 44227   016E4A  006F FF8F FFD9     	movff	plusw1,fsr2l
 44228   016E50  0EFD               	movlw	-3
 44229   016E52  006F FF8F FFDA     	movff	plusw1,fsr2h
 44230   016E58  50DF               	movf	indf2,w,c
 44231   016E5A  A4D8               	btfss	status,2,c
 44232   016E5C  D7E4               	goto	l7456
 44233                           
 44234                           ;stkvar	_a @ sp[(-2)+0]
 44235                           ;stkvar	_s @ sp[(-2)+-2]
 44236   016E5E  0EFC               	movlw	-4
 44237   016E60  006F FF8C  F023    	movff	plusw1,btemp
 44238   016E66  0EFD               	movlw	-3
 44239   016E68  006F FF8C  F024    	movff	plusw1,btemp+1
 44240   016E6E  0EFE               	movlw	-2
 44241   016E70  50E3               	movf	plusw1,w,c
 44242   016E72  5E23               	subwf	btemp^0,f,c
 44243   016E74  0EFF               	movlw	-1
 44244   016E76  50E3               	movf	plusw1,w,c
 44245   016E78  5A24               	subwfb	(btemp+1)^0,f,c
 44246                           
 44247                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 44248   016E7A  52E5               	movf	postdec1,f,c
 44249   016E7C  52E5               	movf	postdec1,f,c
 44250   016E7E  52E5               	movf	postdec1,f,c
 44251   016E80  52E5               	movf	postdec1,f,c
 44252   016E82  0012               	return		;funcret
 44253   016E84                     __end_of_strlen:
 44254                           	callstack 0
 44255                           
 44256 ;; *************** function _fputs *****************
 44257 ;; Defined at:
 44258 ;;		line 8 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/nf_fputs.c"
 44259 ;; Parameters:    Size  Location     Type
 44260 ;;  s               2  [STACK] PTR const unsigned char 
 44261 ;;		 -> dbuf(32), 
 44262 ;;  fp              2  [STACK] PTR struct _IO_FILE
 44263 ;;		 -> f(11), NULL(0), 
 44264 ;; Auto vars:     Size  Location     Type
 44265 ;;  i               2  [STACK] int 
 44266 ;;  c               1  [STACK] unsigned char 
 44267 ;; Return value:  Size  Location     Type
 44268 ;;                  2  [STACK] int 
 44269 ;; Registers used:
 44270 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 44271 ;; Tracked objects:
 44272 ;;		On entry : 3F/1
 44273 ;;		On exit  : 0/0
 44274 ;;		Unchanged: 0/0
 44275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44280 ;;Total ram usage:        0 bytes
 44281 ;; Hardware stack levels used: 1
 44282 ;; Hardware stack levels required when called: 6
 44283 ;; This function calls:
 44284 ;;		_fputc
 44285 ;; This function is called by:
 44286 ;;		_pad
 44287 ;; This function uses a reentrant model
 44288 ;;
 44289                           
 44290                           	psect	text107
 44291   016CDC                     __ptext107:
 44292                           	callstack 0
 44293   016CDC                     _fputs:
 44294                           	callstack 0
 44295                           
 44296                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44297   016CDC  52E6               	movf	postinc1,f,c
 44298   016CDE  52E6               	movf	postinc1,f,c
 44299   016CE0  52E6               	movf	postinc1,f,c
 44300                           
 44301                           ;stkvar	_i @ sp[(-3)+0]
 44302                           
 44303                           ;incstack = 0
 44304   016CE2  0EFD               	movlw	-3
 44305   016CE4  6AE3               	clrf	plusw1,c
 44306   016CE6  0EFE               	movlw	-2
 44307   016CE8  6AE3               	clrf	plusw1,c
 44308   016CEA  D01F               	goto	l11544
 44309   016CEC                     l11540:
 44310                           
 44311                           ;stkvar	_fp @ sp[(-3)+-4]
 44312   016CEC  0EF9               	movlw	-7
 44313   016CEE  006F FF8F FFE6     	movff	plusw1,postinc1
 44314   016CF4  006F FF8F FFE6     	movff	plusw1,postinc1
 44315                           
 44316                           ;stkvar	_c @ sp[(-5)+2]
 44317   016CFA  0EFD               	movlw	-3
 44318   016CFC  50E3               	movf	plusw1,w,c
 44319   016CFE  6EE6               	movwf	postinc1,c
 44320   016D00  0E00               	movlw	0
 44321   016D02  6EE6               	movwf	postinc1,c
 44322   016D04  ECDE  F0AD         	call	_fputc	;wreg free
 44323                           
 44324                           ;stkvar	_i @ sp[(-3)+0]
 44325   016D08  0EFD               	movlw	-3
 44326   016D0A  50E3               	movf	plusw1,w,c
 44327   016D0C  0F01               	addlw	1
 44328   016D0E  6E23               	movwf	btemp^0,c
 44329   016D10  0EFD               	movlw	-3
 44330   016D12  0060  F08F  FFE3   	movff	btemp,plusw1
 44331   016D18  6A23               	clrf	btemp^0,c
 44332   016D1A  0EFE               	movlw	-2
 44333   016D1C  50E3               	movf	plusw1,w,c
 44334   016D1E  2023               	addwfc	btemp^0,w,c
 44335   016D20  6E23               	movwf	btemp^0,c
 44336   016D22  0EFE               	movlw	-2
 44337   016D24  0060  F08F  FFE3   	movff	btemp,plusw1
 44338   016D2A                     l11544:
 44339                           
 44340                           ;stkvar	_i @ sp[(-3)+0]
 44341   016D2A  0EFD               	movlw	-3
 44342   016D2C  006F FF8C  F02D    	movff	plusw1,btemp+10
 44343   016D32  0EFE               	movlw	-2
 44344   016D34  006F FF8C  F02E    	movff	plusw1,btemp+11
 44345                           
 44346                           ;stkvar	_s @ sp[(-3)+-2]
 44347   016D3A  0EFB               	movlw	-5
 44348   016D3C  006F FF8C  F02B    	movff	plusw1,btemp+8
 44349   016D42  0EFC               	movlw	-4
 44350   016D44  006F FF8C  F02C    	movff	plusw1,btemp+9
 44351   016D4A  502D               	movf	(btemp+10)^0,w,c
 44352   016D4C  242B               	addwf	(btemp+8)^0,w,c
 44353   016D4E  6ED9               	movwf	fsr2l,c
 44354   016D50  502E               	movf	(btemp+11)^0,w,c
 44355   016D52  202C               	addwfc	(btemp+9)^0,w,c
 44356   016D54  6EDA               	movwf	fsr2h,c
 44357   016D56  50DF               	movf	indf2,w,c
 44358   016D58  6E2E               	movwf	(btemp+11)^0,c
 44359                           
 44360                           ;stkvar	_c @ sp[(-3)+2]
 44361   016D5A  0EFF               	movlw	-1
 44362   016D5C  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 44363   016D62  0EFF               	movlw	-1
 44364   016D64  50E3               	movf	plusw1,w,c
 44365   016D66  A4D8               	btfss	status,2,c
 44366   016D68  D7C1               	goto	l11540
 44367                           
 44368                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 44369   016D6A  0EF9               	movlw	249
 44370   016D6C  26E1               	addwf	fsr1l,f,c
 44371   016D6E  0EFF               	movlw	255
 44372   016D70  22E2               	addwfc	fsr1h,f,c
 44373   016D72  0012               	return		;funcret
 44374   016D74                     __end_of_fputs:
 44375                           	callstack 0
 44376                           
 44377 ;; *************** function _abs *****************
 44378 ;; Defined at:
 44379 ;;		line 1 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/abs.c"
 44380 ;; Parameters:    Size  Location     Type
 44381 ;;  a               2  [STACK] int 
 44382 ;; Auto vars:     Size  Location     Type
 44383 ;;		None
 44384 ;; Return value:  Size  Location     Type
 44385 ;;                  2  [STACK] int 
 44386 ;; Registers used:
 44387 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 44388 ;; Tracked objects:
 44389 ;;		On entry : 0/1
 44390 ;;		On exit  : 0/0
 44391 ;;		Unchanged: 0/0
 44392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44397 ;;Total ram usage:        0 bytes
 44398 ;; Hardware stack levels used: 1
 44399 ;; Hardware stack levels required when called: 3
 44400 ;; This function calls:
 44401 ;;		Nothing
 44402 ;; This function is called by:
 44403 ;;		_dtoa
 44404 ;; This function uses a reentrant model
 44405 ;;
 44406                           
 44407                           	psect	text108
 44408   0178F2                     __ptext108:
 44409                           	callstack 0
 44410   0178F2                     _abs:
 44411                           	callstack 20
 44412                           
 44413                           ;stkvar	_a @ sp[(0)+-2]
 44414                           
 44415                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44416                           ;incstack = 0
 44417   0178F2  0EFF               	movlw	-1
 44418   0178F4  BEE3               	btfsc	plusw1,7,c
 44419   0178F6  D009               	goto	l7622
 44420                           
 44421                           ;stkvar	_a @ sp[(0)+-2]
 44422   0178F8  0EFE               	movlw	-2
 44423   0178FA  006F FF8C  F023    	movff	plusw1,btemp
 44424   017900  0EFF               	movlw	-1
 44425   017902  006F FF8C  F024    	movff	plusw1,btemp+1
 44426   017908  D00D               	goto	l3369
 44427   01790A                     l7622:
 44428                           
 44429                           ;stkvar	_a @ sp[(0)+-2]
 44430   01790A  0EFE               	movlw	-2
 44431   01790C  006F FF8C  F023    	movff	plusw1,btemp
 44432   017912  1E23               	comf	btemp^0,f,c
 44433   017914  0EFF               	movlw	-1
 44434   017916  006F FF8C  F024    	movff	plusw1,btemp+1
 44435   01791C  1E24               	comf	(btemp+1)^0,f,c
 44436   01791E  2A23               	incf	btemp^0,f,c
 44437   017920  B4D8               	btfsc	status,2,c
 44438   017922  2A24               	incf	(btemp+1)^0,f,c
 44439   017924                     l3369:
 44440                           
 44441                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 44442   017924  52E5               	movf	postdec1,f,c
 44443   017926  52E5               	movf	postdec1,f,c
 44444   017928  0012               	return		;funcret
 44445   01792A                     __end_of_abs:
 44446                           	callstack 0
 44447                           
 44448 ;; *************** function ___almod *****************
 44449 ;; Defined at:
 44450 ;;		line 7 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/almod.c"
 44451 ;; Parameters:    Size  Location     Type
 44452 ;;  dividend        4  [STACK] long 
 44453 ;;  divisor         4  [STACK] long 
 44454 ;; Auto vars:     Size  Location     Type
 44455 ;;  sign            1  [STACK] unsigned char 
 44456 ;;  counter         1  [STACK] unsigned char 
 44457 ;; Return value:  Size  Location     Type
 44458 ;;                  4  [STACK] long 
 44459 ;; Registers used:
 44460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 44461 ;; Tracked objects:
 44462 ;;		On entry : 0/1
 44463 ;;		On exit  : 0/0
 44464 ;;		Unchanged: 0/0
 44465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44470 ;;Total ram usage:        0 bytes
 44471 ;; Hardware stack levels used: 1
 44472 ;; Hardware stack levels required when called: 3
 44473 ;; This function calls:
 44474 ;;		Nothing
 44475 ;; This function is called by:
 44476 ;;		_dtoa
 44477 ;; This function uses a reentrant model
 44478 ;;
 44479                           
 44480                           	psect	text109
 44481   015522                     __ptext109:
 44482                           	callstack 0
 44483   015522                     ___almod:
 44484                           	callstack 0
 44485                           
 44486                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44487   015522  52E6               	movf	postinc1,f,c
 44488   015524  52E6               	movf	postinc1,f,c
 44489                           
 44490                           ;stkvar	_sign @ sp[(-2)+0]
 44491                           
 44492                           ;incstack = 0
 44493   015526  0EFE               	movlw	-2
 44494   015528  6AE3               	clrf	plusw1,c
 44495                           
 44496                           ;stkvar	_dividend @ sp[(-2)+-4]
 44497   01552A  0EFD               	movlw	-3
 44498   01552C  AEE3               	btfss	plusw1,7,c
 44499   01552E  D014               	goto	l7550
 44500                           
 44501                           ;stkvar	_dividend @ sp[(-2)+-4]
 44502                           ;stkvar	_dividend @ sp[(-2)+-4]
 44503   015530  0EFA               	movlw	-6
 44504   015532  6CE3               	negf	plusw1,c
 44505   015534  0EFB               	movlw	-5
 44506   015536  1EE3               	comf	plusw1,f,c
 44507   015538  0EFC               	movlw	-4
 44508   01553A  1EE3               	comf	plusw1,f,c
 44509   01553C  0EFD               	movlw	-3
 44510   01553E  1EE3               	comf	plusw1,f,c
 44511   015540  E308               	bnc	u4110
 44512   015542  0EFB               	movlw	-5
 44513   015544  2AE3               	incf	plusw1,f,c
 44514   015546  E305               	bnc	u4110
 44515   015548  0EFC               	movlw	-4
 44516   01554A  2AE3               	incf	plusw1,f,c
 44517   01554C  E302               	bnc	u4110
 44518   01554E  0EFD               	movlw	-3
 44519   015550  2AE3               	incf	plusw1,f,c
 44520   015552                     u4110:
 44521                           
 44522                           ;stkvar	_sign @ sp[(-2)+0]
 44523   015552  0EFE               	movlw	-2
 44524   015554  6AE3               	clrf	plusw1,c
 44525   015556  2AE3               	incf	plusw1,f,c
 44526   015558                     l7550:
 44527                           
 44528                           ;stkvar	_divisor @ sp[(-2)+-8]
 44529   015558  0EF9               	movlw	-7
 44530   01555A  AEE3               	btfss	plusw1,7,c
 44531   01555C  D011               	goto	u4130
 44532                           
 44533                           ;stkvar	_divisor @ sp[(-2)+-8]
 44534                           ;stkvar	_divisor @ sp[(-2)+-8]
 44535   01555E  0EF6               	movlw	-10
 44536   015560  6CE3               	negf	plusw1,c
 44537   015562  0EF7               	movlw	-9
 44538   015564  1EE3               	comf	plusw1,f,c
 44539   015566  0EF8               	movlw	-8
 44540   015568  1EE3               	comf	plusw1,f,c
 44541   01556A  0EF9               	movlw	-7
 44542   01556C  1EE3               	comf	plusw1,f,c
 44543   01556E  E308               	bnc	u4130
 44544   015570  0EF7               	movlw	-9
 44545   015572  2AE3               	incf	plusw1,f,c
 44546   015574  E305               	bnc	u4130
 44547   015576  0EF8               	movlw	-8
 44548   015578  2AE3               	incf	plusw1,f,c
 44549   01557A  E302               	bnc	u4130
 44550   01557C  0EF9               	movlw	-7
 44551   01557E  2AE3               	incf	plusw1,f,c
 44552   015580                     u4130:
 44553                           
 44554                           ;stkvar	_divisor @ sp[(-2)+-8]
 44555   015580  0EF6               	movlw	-10
 44556   015582  50E3               	movf	plusw1,w,c
 44557   015584  E10A               	bnz	u4140
 44558   015586  0EF7               	movlw	-9
 44559   015588  50E3               	movf	plusw1,w,c
 44560   01558A  E107               	bnz	u4140
 44561   01558C  0EF8               	movlw	-8
 44562   01558E  50E3               	movf	plusw1,w,c
 44563   015590  E104               	bnz	u4140
 44564   015592  0EF9               	movlw	-7
 44565   015594  50E3               	movf	plusw1,w,c
 44566   015596  B4D8               	btfsc	status,2,c
 44567   015598  D04D               	goto	u4170
 44568   01559A                     u4140:
 44569                           
 44570                           ;stkvar	_counter @ sp[(-2)+1]
 44571   01559A  0EFF               	movlw	-1
 44572   01559C  6AE3               	clrf	plusw1,c
 44573   01559E  D00A               	goto	L40
 44574   0155A0                     l7558:
 44575                           
 44576                           ;stkvar	_divisor @ sp[(-2)+-8]
 44577   0155A0  90D8               	bcf	status,0,c
 44578   0155A2  0EF6               	movlw	-10
 44579   0155A4  36E3               	rlcf	plusw1,f,c
 44580   0155A6  0EF7               	movlw	-9
 44581   0155A8  36E3               	rlcf	plusw1,f,c
 44582   0155AA  0EF8               	movlw	-8
 44583   0155AC  36E3               	rlcf	plusw1,f,c
 44584   0155AE  0EF9               	movlw	-7
 44585   0155B0  36E3               	rlcf	plusw1,f,c
 44586                           
 44587                           ;stkvar	_counter @ sp[(-2)+1]
 44588   0155B2  0EFF               	movlw	-1
 44589   0155B4                     L40:
 44590   0155B4  2AE3               	incf	plusw1,f,c
 44591                           
 44592                           ;stkvar	_divisor @ sp[(-2)+-8]
 44593   0155B6  0EF9               	movlw	-7
 44594   0155B8  AEE3               	btfss	plusw1,7,c
 44595   0155BA  D7F2               	goto	l7558
 44596   0155BC                     u4150:
 44597                           
 44598                           ;stkvar	_divisor @ sp[(-2)+-8]
 44599                           ;stkvar	_dividend @ sp[(-2)+-4]
 44600   0155BC  50E1               	movf	fsr1l,w,c
 44601   0155BE  0FFA               	addlw	-6
 44602   0155C0  6ED9               	movwf	fsr2l,c
 44603   0155C2  50E2               	movf	fsr1h,w,c
 44604   0155C4  6EDA               	movwf	fsr2h,c
 44605   0155C6  0EFF               	movlw	255
 44606   0155C8  22DA               	addwfc	fsr2h,f,c
 44607   0155CA  0EF6               	movlw	-10
 44608   0155CC  50E3               	movf	plusw1,w,c
 44609   0155CE  5CDE               	subwf	postinc2,w,c
 44610   0155D0  0EF7               	movlw	-9
 44611   0155D2  50E3               	movf	plusw1,w,c
 44612   0155D4  58DE               	subwfb	postinc2,w,c
 44613   0155D6  0EF8               	movlw	-8
 44614   0155D8  50E3               	movf	plusw1,w,c
 44615   0155DA  58DE               	subwfb	postinc2,w,c
 44616   0155DC  0EF9               	movlw	-7
 44617   0155DE  50E3               	movf	plusw1,w,c
 44618   0155E0  58DE               	subwfb	postinc2,w,c
 44619   0155E2  A0D8               	btfss	status,0,c
 44620   0155E4  D013               	goto	l7566
 44621                           
 44622                           ;stkvar	_divisor @ sp[(-2)+-8]
 44623                           ;stkvar	_dividend @ sp[(-2)+-4]
 44624   0155E6  50E1               	movf	fsr1l,w,c
 44625   0155E8  0FFA               	addlw	-6
 44626   0155EA  6ED9               	movwf	fsr2l,c
 44627   0155EC  50E2               	movf	fsr1h,w,c
 44628   0155EE  6EDA               	movwf	fsr2h,c
 44629   0155F0  0EFF               	movlw	255
 44630   0155F2  22DA               	addwfc	fsr2h,f,c
 44631   0155F4  0EF6               	movlw	-10
 44632   0155F6  50E3               	movf	plusw1,w,c
 44633   0155F8  5EDE               	subwf	postinc2,f,c
 44634   0155FA  0EF7               	movlw	-9
 44635   0155FC  50E3               	movf	plusw1,w,c
 44636   0155FE  5ADE               	subwfb	postinc2,f,c
 44637   015600  0EF8               	movlw	-8
 44638   015602  50E3               	movf	plusw1,w,c
 44639   015604  5ADE               	subwfb	postinc2,f,c
 44640   015606  0EF9               	movlw	-7
 44641   015608  50E3               	movf	plusw1,w,c
 44642   01560A  5ADE               	subwfb	postinc2,f,c
 44643   01560C                     l7566:
 44644                           
 44645                           ;stkvar	_divisor @ sp[(-2)+-8]
 44646   01560C  90D8               	bcf	status,0,c
 44647   01560E  0EF9               	movlw	-7
 44648   015610  32E3               	rrcf	plusw1,f,c
 44649   015612  0EF8               	movlw	-8
 44650   015614  32E3               	rrcf	plusw1,f,c
 44651   015616  0EF7               	movlw	-9
 44652   015618  32E3               	rrcf	plusw1,f,c
 44653   01561A  0EF6               	movlw	-10
 44654   01561C  32E3               	rrcf	plusw1,f,c
 44655                           
 44656                           ;stkvar	_counter @ sp[(-2)+1]
 44657   01561E  0EFF               	movlw	-1
 44658   015620  50E3               	movf	plusw1,w,c
 44659   015622  6E23               	movwf	btemp^0,c
 44660   015624  0E01               	movlw	1
 44661   015626  5E23               	subwf	btemp^0,f,c
 44662   015628  0EFF               	movlw	-1
 44663   01562A  0060  F08F  FFE3   	movff	btemp,plusw1
 44664   015630  A4D8               	btfss	status,2,c
 44665   015632  D7C4               	goto	u4150
 44666   015634                     u4170:
 44667                           
 44668                           ;stkvar	_sign @ sp[(-2)+0]
 44669   015634  0EFE               	movlw	-2
 44670   015636  50E3               	movf	plusw1,w,c
 44671   015638  B4D8               	btfsc	status,2,c
 44672   01563A  D011               	goto	u4190
 44673                           
 44674                           ;stkvar	_dividend @ sp[(-2)+-4]
 44675                           ;stkvar	_dividend @ sp[(-2)+-4]
 44676   01563C  0EFA               	movlw	-6
 44677   01563E  6CE3               	negf	plusw1,c
 44678   015640  0EFB               	movlw	-5
 44679   015642  1EE3               	comf	plusw1,f,c
 44680   015644  0EFC               	movlw	-4
 44681   015646  1EE3               	comf	plusw1,f,c
 44682   015648  0EFD               	movlw	-3
 44683   01564A  1EE3               	comf	plusw1,f,c
 44684   01564C  E308               	bnc	u4190
 44685   01564E  0EFB               	movlw	-5
 44686   015650  2AE3               	incf	plusw1,f,c
 44687   015652  E305               	bnc	u4190
 44688   015654  0EFC               	movlw	-4
 44689   015656  2AE3               	incf	plusw1,f,c
 44690   015658  E302               	bnc	u4190
 44691   01565A  0EFD               	movlw	-3
 44692   01565C  2AE3               	incf	plusw1,f,c
 44693   01565E                     u4190:
 44694                           
 44695                           ;stkvar	_dividend @ sp[(-2)+-4]
 44696   01565E  0EFA               	movlw	-6
 44697   015660  006F FF8C  F023    	movff	plusw1,btemp
 44698   015666  0EFB               	movlw	-5
 44699   015668  006F FF8C  F024    	movff	plusw1,btemp+1
 44700   01566E  0EFC               	movlw	-4
 44701   015670  006F FF8C  F025    	movff	plusw1,btemp+2
 44702   015676  0EFD               	movlw	-3
 44703   015678  006F FF8C  F026    	movff	plusw1,btemp+3
 44704                           
 44705                           ; ___almod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 44706   01567E  0EF6               	movlw	246
 44707   015680  26E1               	addwf	fsr1l,f,c
 44708   015682  0EFF               	movlw	255
 44709   015684  22E2               	addwfc	fsr1h,f,c
 44710   015686  0012               	return		;funcret
 44711   015688                     __end_of___almod:
 44712                           	callstack 0
 44713                           
 44714 ;; *************** function ___aldiv *****************
 44715 ;; Defined at:
 44716 ;;		line 7 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/aldiv.c"
 44717 ;; Parameters:    Size  Location     Type
 44718 ;;  dividend        4  [STACK] long 
 44719 ;;  divisor         4  [STACK] long 
 44720 ;; Auto vars:     Size  Location     Type
 44721 ;;  quotient        4  [STACK] long 
 44722 ;;  sign            1  [STACK] unsigned char 
 44723 ;;  counter         1  [STACK] unsigned char 
 44724 ;; Return value:  Size  Location     Type
 44725 ;;                  4  [STACK] long 
 44726 ;; Registers used:
 44727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 44728 ;; Tracked objects:
 44729 ;;		On entry : 0/1
 44730 ;;		On exit  : 0/0
 44731 ;;		Unchanged: 0/0
 44732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44737 ;;Total ram usage:        0 bytes
 44738 ;; Hardware stack levels used: 1
 44739 ;; Hardware stack levels required when called: 3
 44740 ;; This function calls:
 44741 ;;		Nothing
 44742 ;; This function is called by:
 44743 ;;		_dtoa
 44744 ;; This function uses a reentrant model
 44745 ;;
 44746                           
 44747                           	psect	text110
 44748   015208                     __ptext110:
 44749                           	callstack 0
 44750   015208                     ___aldiv:
 44751                           	callstack 0
 44752                           
 44753                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44754   015208  0E06               	movlw	6
 44755   01520A  26E1               	addwf	fsr1l,f,c
 44756   01520C  0E00               	movlw	0
 44757   01520E  22E2               	addwfc	fsr1h,f,c
 44758                           
 44759                           ;stkvar	_sign @ sp[(-6)+4]
 44760                           
 44761                           ;incstack = 0
 44762   015210  0EFE               	movlw	-2
 44763   015212  6AE3               	clrf	plusw1,c
 44764                           
 44765                           ;stkvar	_divisor @ sp[(-6)+-8]
 44766   015214  0EF5               	movlw	-11
 44767   015216  AEE3               	btfss	plusw1,7,c
 44768   015218  D014               	goto	l7506
 44769                           
 44770                           ;stkvar	_divisor @ sp[(-6)+-8]
 44771                           ;stkvar	_divisor @ sp[(-6)+-8]
 44772   01521A  0EF2               	movlw	-14
 44773   01521C  6CE3               	negf	plusw1,c
 44774   01521E  0EF3               	movlw	-13
 44775   015220  1EE3               	comf	plusw1,f,c
 44776   015222  0EF4               	movlw	-12
 44777   015224  1EE3               	comf	plusw1,f,c
 44778   015226  0EF5               	movlw	-11
 44779   015228  1EE3               	comf	plusw1,f,c
 44780   01522A  E308               	bnc	u4010
 44781   01522C  0EF3               	movlw	-13
 44782   01522E  2AE3               	incf	plusw1,f,c
 44783   015230  E305               	bnc	u4010
 44784   015232  0EF4               	movlw	-12
 44785   015234  2AE3               	incf	plusw1,f,c
 44786   015236  E302               	bnc	u4010
 44787   015238  0EF5               	movlw	-11
 44788   01523A  2AE3               	incf	plusw1,f,c
 44789   01523C                     u4010:
 44790                           
 44791                           ;stkvar	_sign @ sp[(-6)+4]
 44792   01523C  0EFE               	movlw	-2
 44793   01523E  6AE3               	clrf	plusw1,c
 44794   015240  2AE3               	incf	plusw1,f,c
 44795   015242                     l7506:
 44796                           
 44797                           ;stkvar	_dividend @ sp[(-6)+-4]
 44798   015242  0EF9               	movlw	-7
 44799   015244  AEE3               	btfss	plusw1,7,c
 44800   015246  D013               	goto	l7512
 44801                           
 44802                           ;stkvar	_dividend @ sp[(-6)+-4]
 44803                           ;stkvar	_dividend @ sp[(-6)+-4]
 44804   015248  0EF6               	movlw	-10
 44805   01524A  6CE3               	negf	plusw1,c
 44806   01524C  0EF7               	movlw	-9
 44807   01524E  1EE3               	comf	plusw1,f,c
 44808   015250  0EF8               	movlw	-8
 44809   015252  1EE3               	comf	plusw1,f,c
 44810   015254  0EF9               	movlw	-7
 44811   015256  1EE3               	comf	plusw1,f,c
 44812   015258  E308               	bnc	u4030
 44813   01525A  0EF7               	movlw	-9
 44814   01525C  2AE3               	incf	plusw1,f,c
 44815   01525E  E305               	bnc	u4030
 44816   015260  0EF8               	movlw	-8
 44817   015262  2AE3               	incf	plusw1,f,c
 44818   015264  E302               	bnc	u4030
 44819   015266  0EF9               	movlw	-7
 44820   015268  2AE3               	incf	plusw1,f,c
 44821   01526A                     u4030:
 44822                           
 44823                           ;stkvar	_sign @ sp[(-6)+4]
 44824   01526A  0EFE               	movlw	-2
 44825   01526C  70E3               	btg	plusw1,0,c
 44826   01526E                     l7512:
 44827                           
 44828                           ;stkvar	_quotient @ sp[(-6)+0]
 44829   01526E  0EFA               	movlw	-6
 44830   015270  6AE3               	clrf	plusw1,c
 44831   015272  0EFB               	movlw	-5
 44832   015274  6AE3               	clrf	plusw1,c
 44833   015276  0EFC               	movlw	-4
 44834   015278  6AE3               	clrf	plusw1,c
 44835   01527A  0EFD               	movlw	-3
 44836   01527C  6AE3               	clrf	plusw1,c
 44837                           
 44838                           ;stkvar	_divisor @ sp[(-6)+-8]
 44839   01527E  0EF2               	movlw	-14
 44840   015280  50E3               	movf	plusw1,w,c
 44841   015282  E10A               	bnz	u4040
 44842   015284  0EF3               	movlw	-13
 44843   015286  50E3               	movf	plusw1,w,c
 44844   015288  E107               	bnz	u4040
 44845   01528A  0EF4               	movlw	-12
 44846   01528C  50E3               	movf	plusw1,w,c
 44847   01528E  E104               	bnz	u4040
 44848   015290  0EF5               	movlw	-11
 44849   015292  50E3               	movf	plusw1,w,c
 44850   015294  B4D8               	btfsc	status,2,c
 44851   015296  D058               	goto	u4070
 44852   015298                     u4040:
 44853                           
 44854                           ;stkvar	_counter @ sp[(-6)+5]
 44855   015298  0EFF               	movlw	-1
 44856   01529A  6AE3               	clrf	plusw1,c
 44857   01529C  D00A               	goto	L41
 44858   01529E                     l7518:
 44859                           
 44860                           ;stkvar	_divisor @ sp[(-6)+-8]
 44861   01529E  90D8               	bcf	status,0,c
 44862   0152A0  0EF2               	movlw	-14
 44863   0152A2  36E3               	rlcf	plusw1,f,c
 44864   0152A4  0EF3               	movlw	-13
 44865   0152A6  36E3               	rlcf	plusw1,f,c
 44866   0152A8  0EF4               	movlw	-12
 44867   0152AA  36E3               	rlcf	plusw1,f,c
 44868   0152AC  0EF5               	movlw	-11
 44869   0152AE  36E3               	rlcf	plusw1,f,c
 44870                           
 44871                           ;stkvar	_counter @ sp[(-6)+5]
 44872   0152B0  0EFF               	movlw	-1
 44873   0152B2                     L41:
 44874   0152B2  2AE3               	incf	plusw1,f,c
 44875                           
 44876                           ;stkvar	_divisor @ sp[(-6)+-8]
 44877   0152B4  0EF5               	movlw	-11
 44878   0152B6  AEE3               	btfss	plusw1,7,c
 44879   0152B8  D7F2               	goto	l7518
 44880   0152BA                     u4050:
 44881                           
 44882                           ;stkvar	_quotient @ sp[(-6)+0]
 44883   0152BA  90D8               	bcf	status,0,c
 44884   0152BC  0EFA               	movlw	-6
 44885   0152BE  36E3               	rlcf	plusw1,f,c
 44886   0152C0  0EFB               	movlw	-5
 44887   0152C2  36E3               	rlcf	plusw1,f,c
 44888   0152C4  0EFC               	movlw	-4
 44889   0152C6  36E3               	rlcf	plusw1,f,c
 44890   0152C8  0EFD               	movlw	-3
 44891   0152CA  36E3               	rlcf	plusw1,f,c
 44892                           
 44893                           ;stkvar	_divisor @ sp[(-6)+-8]
 44894                           ;stkvar	_dividend @ sp[(-6)+-4]
 44895   0152CC  50E1               	movf	fsr1l,w,c
 44896   0152CE  0FF6               	addlw	-10
 44897   0152D0  6ED9               	movwf	fsr2l,c
 44898   0152D2  50E2               	movf	fsr1h,w,c
 44899   0152D4  6EDA               	movwf	fsr2h,c
 44900   0152D6  0EFF               	movlw	255
 44901   0152D8  22DA               	addwfc	fsr2h,f,c
 44902   0152DA  0EF2               	movlw	-14
 44903   0152DC  50E3               	movf	plusw1,w,c
 44904   0152DE  5CDE               	subwf	postinc2,w,c
 44905   0152E0  0EF3               	movlw	-13
 44906   0152E2  50E3               	movf	plusw1,w,c
 44907   0152E4  58DE               	subwfb	postinc2,w,c
 44908   0152E6  0EF4               	movlw	-12
 44909   0152E8  50E3               	movf	plusw1,w,c
 44910   0152EA  58DE               	subwfb	postinc2,w,c
 44911   0152EC  0EF5               	movlw	-11
 44912   0152EE  50E3               	movf	plusw1,w,c
 44913   0152F0  58DE               	subwfb	postinc2,w,c
 44914   0152F2  A0D8               	btfss	status,0,c
 44915   0152F4  D015               	goto	l7530
 44916                           
 44917                           ;stkvar	_divisor @ sp[(-6)+-8]
 44918                           ;stkvar	_dividend @ sp[(-6)+-4]
 44919   0152F6  50E1               	movf	fsr1l,w,c
 44920   0152F8  0FF6               	addlw	-10
 44921   0152FA  6ED9               	movwf	fsr2l,c
 44922   0152FC  50E2               	movf	fsr1h,w,c
 44923   0152FE  6EDA               	movwf	fsr2h,c
 44924   015300  0EFF               	movlw	255
 44925   015302  22DA               	addwfc	fsr2h,f,c
 44926   015304  0EF2               	movlw	-14
 44927   015306  50E3               	movf	plusw1,w,c
 44928   015308  5EDE               	subwf	postinc2,f,c
 44929   01530A  0EF3               	movlw	-13
 44930   01530C  50E3               	movf	plusw1,w,c
 44931   01530E  5ADE               	subwfb	postinc2,f,c
 44932   015310  0EF4               	movlw	-12
 44933   015312  50E3               	movf	plusw1,w,c
 44934   015314  5ADE               	subwfb	postinc2,f,c
 44935   015316  0EF5               	movlw	-11
 44936   015318  50E3               	movf	plusw1,w,c
 44937   01531A  5ADE               	subwfb	postinc2,f,c
 44938                           
 44939                           ;stkvar	_quotient @ sp[(-6)+0]
 44940   01531C  0EFA               	movlw	-6
 44941   01531E  80E3               	bsf	plusw1,0,c
 44942   015320                     l7530:
 44943                           
 44944                           ;stkvar	_divisor @ sp[(-6)+-8]
 44945   015320  90D8               	bcf	status,0,c
 44946   015322  0EF5               	movlw	-11
 44947   015324  32E3               	rrcf	plusw1,f,c
 44948   015326  0EF4               	movlw	-12
 44949   015328  32E3               	rrcf	plusw1,f,c
 44950   01532A  0EF3               	movlw	-13
 44951   01532C  32E3               	rrcf	plusw1,f,c
 44952   01532E  0EF2               	movlw	-14
 44953   015330  32E3               	rrcf	plusw1,f,c
 44954                           
 44955                           ;stkvar	_counter @ sp[(-6)+5]
 44956   015332  0EFF               	movlw	-1
 44957   015334  50E3               	movf	plusw1,w,c
 44958   015336  6E23               	movwf	btemp^0,c
 44959   015338  0E01               	movlw	1
 44960   01533A  5E23               	subwf	btemp^0,f,c
 44961   01533C  0EFF               	movlw	-1
 44962   01533E  0060  F08F  FFE3   	movff	btemp,plusw1
 44963   015344  A4D8               	btfss	status,2,c
 44964   015346  D7B9               	goto	u4050
 44965   015348                     u4070:
 44966                           
 44967                           ;stkvar	_sign @ sp[(-6)+4]
 44968   015348  0EFE               	movlw	-2
 44969   01534A  50E3               	movf	plusw1,w,c
 44970   01534C  B4D8               	btfsc	status,2,c
 44971   01534E  D011               	goto	u4090
 44972                           
 44973                           ;stkvar	_quotient @ sp[(-6)+0]
 44974                           ;stkvar	_quotient @ sp[(-6)+0]
 44975   015350  0EFA               	movlw	-6
 44976   015352  6CE3               	negf	plusw1,c
 44977   015354  0EFB               	movlw	-5
 44978   015356  1EE3               	comf	plusw1,f,c
 44979   015358  0EFC               	movlw	-4
 44980   01535A  1EE3               	comf	plusw1,f,c
 44981   01535C  0EFD               	movlw	-3
 44982   01535E  1EE3               	comf	plusw1,f,c
 44983   015360  E308               	bnc	u4090
 44984   015362  0EFB               	movlw	-5
 44985   015364  2AE3               	incf	plusw1,f,c
 44986   015366  E305               	bnc	u4090
 44987   015368  0EFC               	movlw	-4
 44988   01536A  2AE3               	incf	plusw1,f,c
 44989   01536C  E302               	bnc	u4090
 44990   01536E  0EFD               	movlw	-3
 44991   015370  2AE3               	incf	plusw1,f,c
 44992   015372                     u4090:
 44993                           
 44994                           ;stkvar	_quotient @ sp[(-6)+0]
 44995   015372  0EFA               	movlw	-6
 44996   015374  006F FF8C  F023    	movff	plusw1,btemp
 44997   01537A  0EFB               	movlw	-5
 44998   01537C  006F FF8C  F024    	movff	plusw1,btemp+1
 44999   015382  0EFC               	movlw	-4
 45000   015384  006F FF8C  F025    	movff	plusw1,btemp+2
 45001   01538A  0EFD               	movlw	-3
 45002   01538C  006F FF8C  F026    	movff	plusw1,btemp+3
 45003                           
 45004                           ; ___aldiv: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 45005   015392  0EF2               	movlw	242
 45006   015394  26E1               	addwf	fsr1l,f,c
 45007   015396  0EFF               	movlw	255
 45008   015398  22E2               	addwfc	fsr1h,f,c
 45009   01539A  0012               	return		;funcret
 45010   01539C                     __end_of___aldiv:
 45011                           	callstack 0
 45012                           
 45013 ;; *************** function _ctoa *****************
 45014 ;; Defined at:
 45015 ;;		line 476 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c"
 45016 ;; Parameters:    Size  Location     Type
 45017 ;;  fp              2  [STACK] PTR struct _IO_FILE
 45018 ;;		 -> f(11), NULL(0), 
 45019 ;;  c               1  [STACK] unsigned char 
 45020 ;; Auto vars:     Size  Location     Type
 45021 ;;  w               2  [STACK] int 
 45022 ;;  l               2  [STACK] int 
 45023 ;; Return value:  Size  Location     Type
 45024 ;;                  2  [STACK] int 
 45025 ;; Registers used:
 45026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
 45027 ;; Tracked objects:
 45028 ;;		On entry : 0/1
 45029 ;;		On exit  : 0/0
 45030 ;;		Unchanged: 0/0
 45031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45036 ;;Total ram usage:        0 bytes
 45037 ;; Hardware stack levels used: 1
 45038 ;; Hardware stack levels required when called: 6
 45039 ;; This function calls:
 45040 ;;		_fputc
 45041 ;; This function is called by:
 45042 ;;		_vfpfcnvrt
 45043 ;; This function uses a reentrant model
 45044 ;;
 45045                           
 45046                           	psect	text111
 45047   015E02                     __ptext111:
 45048                           	callstack 0
 45049   015E02                     _ctoa:
 45050                           	callstack 0
 45051                           
 45052                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45053   015E02  52E6               	movf	postinc1,f,c
 45054   015E04  52E6               	movf	postinc1,f,c
 45055   015E06  52E6               	movf	postinc1,f,c
 45056   015E08  52E6               	movf	postinc1,f,c
 45057                           
 45058                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 476: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 477: {;/opt/microchi
      +                          p/xc8/v3.00/pic/sources/c99/common/doprnt.c: 478:     int l,w;;/opt/microchip/xc8/v3.00/
      +                          pic/sources/c99/common/doprnt.c: 481:     w = width ? width - 1 : width;
 45059                           
 45060                           ;incstack = 0
 45061   015E0A  0101               	movlb	1	; () banked
 45062   015E0C  51C1               	movf	_width& (0+255),w,b
 45063   015E0E  11C2               	iorwf	(_width+1)& (0+255),w,b
 45064   015E10  A4D8               	btfss	status,2,c
 45065   015E12  D009               	goto	l11570
 45066                           
 45067                           ; BSR set to: 1
 45068                           ;stkvar	_w @ sp[(-4)+0]
 45069   015E14  0EFC               	movlw	-4
 45070   015E16  0060  F707  FFE3   	movff	_width,plusw1
 45071   015E1C  0EFD               	movlw	-3
 45072   015E1E  0060  F70B  FFE3   	movff	_width+1,plusw1
 45073   015E24  D012               	goto	l11572
 45074   015E26                     l11570:
 45075                           
 45076                           ; BSR set to: 1
 45077   015E26  C1C1  F02D         	movff	_width,btemp+10
 45078   015E2A  C1C2  F02E         	movff	_width+1,btemp+11
 45079   015E2E  0EFF               	movlw	255
 45080   015E30  242D               	addwf	(btemp+10)^0,w,c
 45081   015E32  6E2B               	movwf	(btemp+8)^0,c
 45082   015E34  0EFF               	movlw	255
 45083   015E36  202E               	addwfc	(btemp+11)^0,w,c
 45084   015E38  6E2C               	movwf	(btemp+9)^0,c
 45085                           
 45086                           ;stkvar	_w @ sp[(-4)+0]
 45087   015E3A  0EFC               	movlw	-4
 45088   015E3C  0060  F0AF  FFE3   	movff	btemp+8,plusw1
 45089   015E42  0EFD               	movlw	-3
 45090   015E44  0060  F0B3  FFE3   	movff	btemp+9,plusw1
 45091   015E4A                     l11572:
 45092                           
 45093                           ; BSR set to: 1
 45094                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 485:     if (flags & (1 << 0)
      +                          ) {
 45095   015E4A  A1C5               	btfss	_flags& (0+255),0,b
 45096   015E4C  D00E               	goto	l11576
 45097                           
 45098                           ; BSR set to: 1
 45099                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 486:         fputc(c, fp);
 45100                           ;stkvar	_fp @ sp[(-4)+-2]
 45101   015E4E  0EFA               	movlw	-6
 45102   015E50  006F FF8F FFE6     	movff	plusw1,postinc1
 45103   015E56  006F FF8F FFE6     	movff	plusw1,postinc1
 45104                           
 45105                           ;stkvar	_c @ sp[(-6)+-3]
 45106   015E5C  0EF7               	movlw	-9
 45107   015E5E  50E3               	movf	plusw1,w,c
 45108   015E60  6EE6               	movwf	postinc1,c
 45109   015E62  0E00               	movlw	0
 45110   015E64  6EE6               	movwf	postinc1,c
 45111   015E66  ECDE  F0AD         	call	_fputc	;wreg free
 45112   015E6A                     l11576:
 45113                           
 45114                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 491:     w = (w < 0) ? 0 : w;
 45115                           ;stkvar	_w @ sp[(-4)+0]
 45116   015E6A  0EFD               	movlw	-3
 45117   015E6C  AEE3               	btfss	plusw1,7,c
 45118   015E6E  D004               	goto	l3165
 45119                           
 45120                           ;stkvar	_w @ sp[(-4)+0]
 45121   015E70  0EFC               	movlw	-4
 45122   015E72  6AE3               	clrf	plusw1,c
 45123   015E74  0EFD               	movlw	-3
 45124   015E76  6AE3               	clrf	plusw1,c
 45125   015E78                     l3165:
 45126                           
 45127                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 492:     l = 0;
 45128                           ;stkvar	_l @ sp[(-4)+2]
 45129   015E78  0EFE               	movlw	-2
 45130   015E7A  6AE3               	clrf	plusw1,c
 45131   015E7C  0EFF               	movlw	-1
 45132   015E7E  6AE3               	clrf	plusw1,c
 45133                           
 45134                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 493:     while (l < w) {
 45135   015E80  D01E               	goto	l11586
 45136   015E82                     l11582:
 45137                           
 45138                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 494:         fputc(' ', fp);
 45139                           ;stkvar	_fp @ sp[(-4)+-2]
 45140   015E82  0EFA               	movlw	-6
 45141   015E84  006F FF8F FFE6     	movff	plusw1,postinc1
 45142   015E8A  006F FF8F FFE6     	movff	plusw1,postinc1
 45143   015E90  0E20               	movlw	32
 45144   015E92  6EE6               	movwf	postinc1,c
 45145   015E94  0E00               	movlw	0
 45146   015E96  6EE6               	movwf	postinc1,c
 45147   015E98  ECDE  F0AD         	call	_fputc	;wreg free
 45148                           
 45149                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 495:         ++l;
 45150                           ;stkvar	_l @ sp[(-4)+2]
 45151   015E9C  0EFE               	movlw	-2
 45152   015E9E  50E3               	movf	plusw1,w,c
 45153   015EA0  0F01               	addlw	1
 45154   015EA2  6E23               	movwf	btemp^0,c
 45155   015EA4  0EFE               	movlw	-2
 45156   015EA6  0060  F08F  FFE3   	movff	btemp,plusw1
 45157   015EAC  6A23               	clrf	btemp^0,c
 45158   015EAE  0EFF               	movlw	-1
 45159   015EB0  50E3               	movf	plusw1,w,c
 45160   015EB2  2023               	addwfc	btemp^0,w,c
 45161   015EB4  6E23               	movwf	btemp^0,c
 45162   015EB6  0EFF               	movlw	-1
 45163   015EB8  0060  F08F  FFE3   	movff	btemp,plusw1
 45164   015EBE                     l11586:
 45165                           
 45166                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 493:     while (l < w) {
 45167                           ;stkvar	_w @ sp[(-4)+0]
 45168                           ;stkvar	_l @ sp[(-4)+2]
 45169   015EBE  50E1               	movf	fsr1l,w,c
 45170   015EC0  0FFE               	addlw	-2
 45171   015EC2  6ED9               	movwf	fsr2l,c
 45172   015EC4  50E2               	movf	fsr1h,w,c
 45173   015EC6  6EDA               	movwf	fsr2h,c
 45174   015EC8  0EFF               	movlw	255
 45175   015ECA  22DA               	addwfc	fsr2h,f,c
 45176   015ECC  0EFC               	movlw	-4
 45177   015ECE  50E3               	movf	plusw1,w,c
 45178   015ED0  5CDE               	subwf	postinc2,w,c
 45179   015ED2  50DE               	movf	postinc2,w,c
 45180   015ED4  0A80               	xorlw	128
 45181   015ED6  6E23               	movwf	btemp^0,c
 45182   015ED8  0EFD               	movlw	-3
 45183   015EDA  50E3               	movf	plusw1,w,c
 45184   015EDC  0A80               	xorlw	128
 45185   015EDE  5823               	subwfb	btemp^0,w,c
 45186   015EE0  A0D8               	btfss	status,0,c
 45187   015EE2  D7CF               	goto	l11582
 45188                           
 45189                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 499:     if (!(flags & (1 << 
      +                          0))) {
 45190   015EE4  0101               	movlb	1	; () banked
 45191   015EE6  B1C5               	btfsc	_flags& (0+255),0,b
 45192   015EE8  D00E               	goto	l11590
 45193                           
 45194                           ; BSR set to: 1
 45195                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 501:         fputc(c, fp);
 45196                           ;stkvar	_fp @ sp[(-4)+-2]
 45197   015EEA  0EFA               	movlw	-6
 45198   015EEC  006F FF8F FFE6     	movff	plusw1,postinc1
 45199   015EF2  006F FF8F FFE6     	movff	plusw1,postinc1
 45200                           
 45201                           ;stkvar	_c @ sp[(-6)+-3]
 45202   015EF8  0EF7               	movlw	-9
 45203   015EFA  50E3               	movf	plusw1,w,c
 45204   015EFC  6EE6               	movwf	postinc1,c
 45205   015EFE  0E00               	movlw	0
 45206   015F00  6EE6               	movwf	postinc1,c
 45207   015F02  ECDE  F0AD         	call	_fputc	;wreg free
 45208   015F06                     l11590:
 45209                           
 45210                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 507:     return l+1;
 45211                           ;stkvar	_l @ sp[(-4)+2]
 45212   015F06  0EFE               	movlw	-2
 45213   015F08  50E3               	movf	plusw1,w,c
 45214   015F0A  0F01               	addlw	1
 45215   015F0C  6E23               	movwf	btemp^0,c
 45216   015F0E  0EFF               	movlw	-1
 45217   015F10  006F FF8C  F024    	movff	plusw1,btemp+1
 45218   015F16  0E00               	movlw	0
 45219   015F18  2224               	addwfc	(btemp+1)^0,f,c
 45220                           
 45221                           ; _ctoa: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 45222   015F1A  0EF9               	movlw	249
 45223   015F1C  26E1               	addwf	fsr1l,f,c
 45224   015F1E  0EFF               	movlw	255
 45225   015F20  22E2               	addwfc	fsr1h,f,c
 45226   015F22  0012               	return		;funcret
 45227   015F24                     __end_of_ctoa:
 45228                           	callstack 0
 45229                           
 45230 ;; *************** function _fputc *****************
 45231 ;; Defined at:
 45232 ;;		line 8 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/nf_fputc.c"
 45233 ;; Parameters:    Size  Location     Type
 45234 ;;  c               2  [STACK] int 
 45235 ;;  fp              2  [STACK] PTR struct _IO_FILE
 45236 ;;		 -> f(11), NULL(0), 
 45237 ;; Auto vars:     Size  Location     Type
 45238 ;;		None
 45239 ;; Return value:  Size  Location     Type
 45240 ;;                  2  [STACK] int 
 45241 ;; Registers used:
 45242 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 45243 ;; Tracked objects:
 45244 ;;		On entry : 0/1
 45245 ;;		On exit  : 0/0
 45246 ;;		Unchanged: 0/0
 45247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45252 ;;Total ram usage:        0 bytes
 45253 ;; Hardware stack levels used: 1
 45254 ;; Hardware stack levels required when called: 5
 45255 ;; This function calls:
 45256 ;;		_putch
 45257 ;; This function is called by:
 45258 ;;		_pad
 45259 ;;		_ctoa
 45260 ;;		_stoa
 45261 ;;		_vfpfcnvrt
 45262 ;;		_fputs
 45263 ;; This function uses a reentrant model
 45264 ;;
 45265                           
 45266                           	psect	text112
 45267   015BBC                     __ptext112:
 45268                           	callstack 0
 45269   015BBC                     _fputc:
 45270                           	callstack 16
 45271                           
 45272                           ;stkvar	_fp @ sp[(0)+-4]
 45273                           
 45274                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45275                           ;incstack = 0
 45276   015BBC  0EFC               	movlw	-4
 45277   015BBE  006F FF8C  F023    	movff	plusw1,btemp
 45278   015BC4  0EFD               	movlw	-3
 45279   015BC6  50E3               	movf	plusw1,w,c
 45280   015BC8  1023               	iorwf	btemp^0,w,c
 45281   015BCA  B4D8               	btfsc	status,2,c
 45282   015BCC  D009               	goto	u7790
 45283                           
 45284                           ;stkvar	_fp @ sp[(0)+-4]
 45285   015BCE  0EFC               	movlw	-4
 45286   015BD0  006F FF8C  F023    	movff	plusw1,btemp
 45287   015BD6  0EFD               	movlw	-3
 45288   015BD8  50E3               	movf	plusw1,w,c
 45289   015BDA  1023               	iorwf	btemp^0,w,c
 45290   015BDC  A4D8               	btfss	status,2,c
 45291   015BDE  D006               	goto	l11528
 45292   015BE0                     u7790:
 45293                           
 45294                           ;stkvar	_c @ sp[(0)+-2]
 45295   015BE0  0EFE               	movlw	-2
 45296   015BE2  50E3               	movf	plusw1,w,c
 45297   015BE4  6EE6               	movwf	postinc1,c
 45298   015BE6  ECCB  F0BF         	call	_putch	;wreg free
 45299   015BEA  D075               	goto	l3381
 45300   015BEC                     l11528:
 45301                           
 45302                           ;stkvar	_fp @ sp[(0)+-4]
 45303   015BEC  0EFC               	movlw	-4
 45304   015BEE  006F FF8C  F02D    	movff	plusw1,btemp+10
 45305   015BF4  0EFD               	movlw	-3
 45306   015BF6  006F FF8C  F02E    	movff	plusw1,btemp+11
 45307   015BFC  0E09               	movlw	9
 45308   015BFE  242D               	addwf	(btemp+10)^0,w,c
 45309   015C00  6ED9               	movwf	fsr2l,c
 45310   015C02  0E00               	movlw	0
 45311   015C04  202E               	addwfc	(btemp+11)^0,w,c
 45312   015C06  6EDA               	movwf	fsr2h,c
 45313   015C08  50DE               	movf	postinc2,w,c
 45314   015C0A  10DE               	iorwf	postinc2,w,c
 45315   015C0C  B4D8               	btfsc	status,2,c
 45316   015C0E  D026               	goto	u7810
 45317                           
 45318                           ;stkvar	_fp @ sp[(0)+-4]
 45319   015C10  0EFC               	movlw	-4
 45320   015C12  006F FF8C  F02D    	movff	plusw1,btemp+10
 45321   015C18  0EFD               	movlw	-3
 45322   015C1A  006F FF8C  F02E    	movff	plusw1,btemp+11
 45323   015C20  0E09               	movlw	9
 45324   015C22  242D               	addwf	(btemp+10)^0,w,c
 45325   015C24  6ED9               	movwf	fsr2l,c
 45326   015C26  0E00               	movlw	0
 45327   015C28  202E               	addwfc	(btemp+11)^0,w,c
 45328   015C2A  6EDA               	movwf	fsr2h,c
 45329                           
 45330                           ;stkvar	_fp @ sp[(0)+-4]
 45331   015C2C  0EFC               	movlw	-4
 45332   015C2E  006F FF8C  F02D    	movff	plusw1,btemp+10
 45333   015C34  0EFD               	movlw	-3
 45334   015C36  006F FF8C  F02E    	movff	plusw1,btemp+11
 45335   015C3C  0E02               	movlw	2
 45336   015C3E  242D               	addwf	(btemp+10)^0,w,c
 45337   015C40  6EE9               	movwf	fsr0l,c
 45338   015C42  0E00               	movlw	0
 45339   015C44  202E               	addwfc	(btemp+11)^0,w,c
 45340   015C46  6EEA               	movwf	fsr0h,c
 45341   015C48  50DE               	movf	postinc2,w,c
 45342   015C4A  5CEE               	subwf	postinc0,w,c
 45343   015C4C  50EE               	movf	postinc0,w,c
 45344   015C4E  0A80               	xorlw	128
 45345   015C50  6E23               	movwf	btemp^0,c
 45346   015C52  50DE               	movf	postinc2,w,c
 45347   015C54  0A80               	xorlw	128
 45348   015C56  5823               	subwfb	btemp^0,w,c
 45349   015C58  B0D8               	btfsc	status,0,c
 45350   015C5A  D03D               	goto	l3381
 45351   015C5C                     u7810:
 45352                           
 45353                           ;stkvar	_c @ sp[(0)+-2]
 45354                           ;stkvar	_fp @ sp[(0)+-4]
 45355   015C5C  0EFC               	movlw	-4
 45356   015C5E  006F FF8C  F02D    	movff	plusw1,btemp+10
 45357   015C64  0EFD               	movlw	-3
 45358   015C66  006F FF8C  F02E    	movff	plusw1,btemp+11
 45359   015C6C  0E02               	movlw	2
 45360   015C6E  242D               	addwf	(btemp+10)^0,w,c
 45361   015C70  6ED9               	movwf	fsr2l,c
 45362   015C72  0E00               	movlw	0
 45363   015C74  202E               	addwfc	(btemp+11)^0,w,c
 45364   015C76  6EDA               	movwf	fsr2h,c
 45365   015C78  006F FF78  F02D    	movff	postinc2,btemp+10
 45366   015C7E  006F FF74  F02E    	movff	postdec2,btemp+11
 45367                           
 45368                           ;stkvar	_fp @ sp[(0)+-4]
 45369   015C84  0EFC               	movlw	-4
 45370   015C86  006F FF8F FFD9     	movff	plusw1,fsr2l
 45371   015C8C  0EFD               	movlw	-3
 45372   015C8E  006F FF8F FFDA     	movff	plusw1,fsr2h
 45373   015C94  006F FF78  F02B    	movff	postinc2,btemp+8
 45374   015C9A  006F FF74  F02C    	movff	postdec2,btemp+9
 45375   015CA0  502D               	movf	(btemp+10)^0,w,c
 45376   015CA2  242B               	addwf	(btemp+8)^0,w,c
 45377   015CA4  6ED9               	movwf	fsr2l,c
 45378   015CA6  502E               	movf	(btemp+11)^0,w,c
 45379   015CA8  202C               	addwfc	(btemp+9)^0,w,c
 45380   015CAA  6EDA               	movwf	fsr2h,c
 45381   015CAC  0EFE               	movlw	-2
 45382   015CAE  006F FF8F FFDF     	movff	plusw1,indf2
 45383                           
 45384                           ;stkvar	_fp @ sp[(0)+-4]
 45385   015CB4  0EFC               	movlw	-4
 45386   015CB6  006F FF8C  F02D    	movff	plusw1,btemp+10
 45387   015CBC  0EFD               	movlw	-3
 45388   015CBE  006F FF8C  F02E    	movff	plusw1,btemp+11
 45389   015CC4  0E02               	movlw	2
 45390   015CC6  242D               	addwf	(btemp+10)^0,w,c
 45391   015CC8  6ED9               	movwf	fsr2l,c
 45392   015CCA  0E00               	movlw	0
 45393   015CCC  202E               	addwfc	(btemp+11)^0,w,c
 45394   015CCE  6EDA               	movwf	fsr2h,c
 45395   015CD0  2ADE               	incf	postinc2,f,c
 45396   015CD2  0E00               	movlw	0
 45397   015CD4  22DD               	addwfc	postdec2,f,c
 45398   015CD6                     l3381:
 45399                           
 45400                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 45401   015CD6  52E5               	movf	postdec1,f,c
 45402   015CD8  52E5               	movf	postdec1,f,c
 45403   015CDA  52E5               	movf	postdec1,f,c
 45404   015CDC  52E5               	movf	postdec1,f,c
 45405   015CDE  0012               	return		;funcret
 45406   015CE0                     __end_of_fputc:
 45407                           	callstack 0
 45408                           
 45409 ;; *************** function _putch *****************
 45410 ;; Defined at:
 45411 ;;		line 155 in file "eadog.c"
 45412 ;; Parameters:    Size  Location     Type
 45413 ;;  c               1  [STACK] unsigned char 
 45414 ;; Auto vars:     Size  Location     Type
 45415 ;;		None
 45416 ;; Return value:  Size  Location     Type
 45417 ;;                  1  [STACK] void 
 45418 ;; Registers used:
 45419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 45420 ;; Tracked objects:
 45421 ;;		On entry : 0/1
 45422 ;;		On exit  : 0/0
 45423 ;;		Unchanged: 0/0
 45424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45429 ;;Total ram usage:        0 bytes
 45430 ;; Hardware stack levels used: 1
 45431 ;; Hardware stack levels required when called: 4
 45432 ;; This function calls:
 45433 ;;		_ringBufS_put_dma
 45434 ;; This function is called by:
 45435 ;;		_fputc
 45436 ;; This function uses a reentrant model
 45437 ;;
 45438                           
 45439                           	psect	text113
 45440   017F96                     __ptext113:
 45441                           	callstack 0
 45442   017F96                     _putch:
 45443                           	callstack 16
 45444                           
 45445                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 45446                           ;stkvar	_c @ sp[(0)+-1]
 45447                           
 45448                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45449                           ;incstack = 0
 45450   017F96  0EFF               	movlw	-1
 45451   017F98  50E3               	movf	plusw1,w,c
 45452   017F9A  6EE6               	movwf	postinc1,c
 45453   017F9C  0060  F237  FFE6   	movff	_spi_link+6,postinc1
 45454   017FA2  0060  F23B  FFE6   	movff	_spi_link+7,postinc1
 45455   017FA8  ECCE  F0B4         	call	_ringBufS_put_dma	;wreg free
 45456                           
 45457                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 45458   017FAC  52E5               	movf	postdec1,f,c
 45459   017FAE  0012               	return		;funcret
 45460   017FB0                     __end_of_putch:
 45461                           	callstack 0
 45462                           
 45463 ;; *************** function _ringBufS_put_dma *****************
 45464 ;; Defined at:
 45465 ;;		line 67 in file "ringbufs.c"
 45466 ;; Parameters:    Size  Location     Type
 45467 ;;  _this           2  [STACK] PTR struct ringBufS_t
 45468 ;;		 -> ring_buf1(67), 
 45469 ;;  c               1  [STACK] const unsigned char 
 45470 ;; Auto vars:     Size  Location     Type
 45471 ;;		None
 45472 ;; Return value:  Size  Location     Type
 45473 ;;                  1  [STACK] void 
 45474 ;; Registers used:
 45475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 45476 ;; Tracked objects:
 45477 ;;		On entry : 0/1
 45478 ;;		On exit  : 0/0
 45479 ;;		Unchanged: 0/0
 45480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45485 ;;Total ram usage:        0 bytes
 45486 ;; Hardware stack levels used: 1
 45487 ;; Hardware stack levels required when called: 3
 45488 ;; This function calls:
 45489 ;;		Nothing
 45490 ;; This function is called by:
 45491 ;;		_putch
 45492 ;; This function uses a reentrant model
 45493 ;;
 45494                           
 45495                           	psect	text114
 45496   01699C                     __ptext114:
 45497                           	callstack 0
 45498   01699C                     _ringBufS_put_dma:
 45499                           	callstack 16
 45500                           
 45501                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 45502                           ;stkvar	__this @ sp[(0)+-2]
 45503                           
 45504                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45505                           ;incstack = 0
 45506   01699C  0EFE               	movlw	-2
 45507   01699E  006F FF8C  F02D    	movff	plusw1,btemp+10
 45508   0169A4  0EFF               	movlw	-1
 45509   0169A6  006F FF8C  F02E    	movff	plusw1,btemp+11
 45510   0169AC  0E42               	movlw	66
 45511   0169AE  242D               	addwf	(btemp+10)^0,w,c
 45512   0169B0  6ED9               	movwf	fsr2l,c
 45513   0169B2  0E00               	movlw	0
 45514   0169B4  202E               	addwfc	(btemp+11)^0,w,c
 45515   0169B6  6EDA               	movwf	fsr2h,c
 45516   0169B8  0E40               	movlw	64
 45517   0169BA  60DF               	cpfslt	indf2,c
 45518   0169BC  D040               	goto	l1690
 45519                           
 45520                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 45521                           ;stkvar	_c @ sp[(0)+-3]
 45522                           ;stkvar	__this @ sp[(0)+-2]
 45523   0169BE  0EFE               	movlw	-2
 45524   0169C0  006F FF8C  F02D    	movff	plusw1,btemp+10
 45525   0169C6  0EFF               	movlw	-1
 45526   0169C8  006F FF8C  F02E    	movff	plusw1,btemp+11
 45527   0169CE  0E40               	movlw	64
 45528   0169D0  242D               	addwf	(btemp+10)^0,w,c
 45529   0169D2  6ED9               	movwf	fsr2l,c
 45530   0169D4  0E00               	movlw	0
 45531   0169D6  202E               	addwfc	(btemp+11)^0,w,c
 45532   0169D8  6EDA               	movwf	fsr2h,c
 45533   0169DA  50DF               	movf	indf2,w,c
 45534   0169DC  6E2E               	movwf	(btemp+11)^0,c
 45535                           
 45536                           ;stkvar	__this @ sp[(0)+-2]
 45537   0169DE  0EFE               	movlw	-2
 45538   0169E0  006F FF8C  F02B    	movff	plusw1,btemp+8
 45539   0169E6  0EFF               	movlw	-1
 45540   0169E8  006F FF8C  F02C    	movff	plusw1,btemp+9
 45541   0169EE  502E               	movf	(btemp+11)^0,w,c
 45542   0169F0  242B               	addwf	(btemp+8)^0,w,c
 45543   0169F2  6ED9               	movwf	fsr2l,c
 45544   0169F4  0E00               	movlw	0
 45545   0169F6  202C               	addwfc	(btemp+9)^0,w,c
 45546   0169F8  6EDA               	movwf	fsr2h,c
 45547   0169FA  0EFD               	movlw	-3
 45548   0169FC  006F FF8F FFDF     	movff	plusw1,indf2
 45549                           
 45550                           ;ringbufs.c: 71:   ++_this->head;
 45551                           ;stkvar	__this @ sp[(0)+-2]
 45552   016A02  0EFE               	movlw	-2
 45553   016A04  006F FF8C  F02D    	movff	plusw1,btemp+10
 45554   016A0A  0EFF               	movlw	-1
 45555   016A0C  006F FF8C  F02E    	movff	plusw1,btemp+11
 45556   016A12  0E40               	movlw	64
 45557   016A14  242D               	addwf	(btemp+10)^0,w,c
 45558   016A16  6ED9               	movwf	fsr2l,c
 45559   016A18  0E00               	movlw	0
 45560   016A1A  202E               	addwfc	(btemp+11)^0,w,c
 45561   016A1C  6EDA               	movwf	fsr2h,c
 45562   016A1E  2ADF               	incf	indf2,f,c
 45563                           
 45564                           ;ringbufs.c: 72:   ++_this->count;
 45565                           ;stkvar	__this @ sp[(0)+-2]
 45566   016A20  0EFE               	movlw	-2
 45567   016A22  006F FF8C  F02D    	movff	plusw1,btemp+10
 45568   016A28  0EFF               	movlw	-1
 45569   016A2A  006F FF8C  F02E    	movff	plusw1,btemp+11
 45570   016A30  0E42               	movlw	66
 45571   016A32  242D               	addwf	(btemp+10)^0,w,c
 45572   016A34  6ED9               	movwf	fsr2l,c
 45573   016A36  0E00               	movlw	0
 45574   016A38  202E               	addwfc	(btemp+11)^0,w,c
 45575   016A3A  6EDA               	movwf	fsr2h,c
 45576   016A3C  2ADF               	incf	indf2,f,c
 45577   016A3E                     l1690:
 45578                           
 45579                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 45580   016A3E  52E5               	movf	postdec1,f,c
 45581   016A40  52E5               	movf	postdec1,f,c
 45582   016A42  52E5               	movf	postdec1,f,c
 45583   016A44  0012               	return		;funcret
 45584   016A46                     __end_of_ringBufS_put_dma:
 45585                           	callstack 0
 45586                           
 45587 ;; *************** function _get_vterm_ptr *****************
 45588 ;; Defined at:
 45589 ;;		line 113 in file "mconfig.c"
 45590 ;; Parameters:    Size  Location     Type
 45591 ;;  line            1  [STACK] unsigned char 
 45592 ;;  vterm           1  [STACK] unsigned char 
 45593 ;; Auto vars:     Size  Location     Type
 45594 ;;		None
 45595 ;; Return value:  Size  Location     Type
 45596 ;;                  2  [STACK] PTR unsigned char 
 45597 ;; Registers used:
 45598 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 45599 ;; Tracked objects:
 45600 ;;		On entry : 0/0
 45601 ;;		On exit  : 0/0
 45602 ;;		Unchanged: 0/0
 45603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45608 ;;Total ram usage:        0 bytes
 45609 ;; Hardware stack levels used: 1
 45610 ;; Hardware stack levels required when called: 3
 45611 ;; This function calls:
 45612 ;;		Nothing
 45613 ;; This function is called by:
 45614 ;;		_main
 45615 ;;		_check_help
 45616 ;;		_vterm_dump
 45617 ;;		_vterm_sequence
 45618 ;;		_MyeaDogM_WriteStringAtPos
 45619 ;; This function uses a reentrant model
 45620 ;;
 45621                           
 45622                           	psect	text115
 45623   0178B8                     __ptext115:
 45624                           	callstack 0
 45625   0178B8                     _get_vterm_ptr:
 45626                           	callstack 24
 45627                           
 45628                           ;mconfig.c: 113: char * get_vterm_ptr(uint8_t line, uint8_t vterm);mconfig.c: 114: {;mco
      +                          nfig.c: 115:  return D.lcd[vterm & 0x03][line & 0x03];
 45629                           ;stkvar	_line @ sp[(0)+-1]
 45630                           
 45631                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45632                           ;incstack = 0
 45633   0178B8  0EFF               	movlw	-1
 45634   0178BA  50E3               	movf	plusw1,w,c
 45635   0178BC  0B03               	andlw	3
 45636   0178BE  0D20               	mullw	32
 45637   0178C0  006F FFCC  F02D    	movff	prodl,btemp+10
 45638   0178C6  006F FFD0  F02E    	movff	prodh,btemp+11
 45639                           
 45640                           ;stkvar	_vterm @ sp[(0)+-2]
 45641   0178CC  0EFE               	movlw	-2
 45642   0178CE  50E3               	movf	plusw1,w,c
 45643   0178D0  0B03               	andlw	3
 45644   0178D2  0D80               	mullw	128
 45645   0178D4  0E00               	movlw	low _D@mconfig$F5154
 45646   0178D6  24F3               	addwf	243,w,c
 45647   0178D8  6E2B               	movwf	(btemp+8)^0,c
 45648   0178DA  0E07               	movlw	high _D@mconfig$F5154
 45649   0178DC  20F4               	addwfc	prodh,w,c
 45650   0178DE  6E2C               	movwf	(btemp+9)^0,c
 45651   0178E0  502D               	movf	(btemp+10)^0,w,c
 45652   0178E2  242B               	addwf	(btemp+8)^0,w,c
 45653   0178E4  6E23               	movwf	btemp^0,c
 45654   0178E6  502E               	movf	(btemp+11)^0,w,c
 45655   0178E8  202C               	addwfc	(btemp+9)^0,w,c
 45656   0178EA  6E24               	movwf	(btemp+1)^0,c
 45657                           
 45658                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 45659   0178EC  52E5               	movf	postdec1,f,c
 45660   0178EE  52E5               	movf	postdec1,f,c
 45661   0178F0  0012               	return		;funcret
 45662   0178F2                     __end_of_get_vterm_ptr:
 45663                           	callstack 0
 45664                           
 45665 ;; *************** function _TimerDone *****************
 45666 ;; Defined at:
 45667 ;;		line 20 in file "timers.c"
 45668 ;; Parameters:    Size  Location     Type
 45669 ;;  timer           1  [STACK] const unsigned char 
 45670 ;; Auto vars:     Size  Location     Type
 45671 ;;		None
 45672 ;; Return value:  Size  Location     Type
 45673 ;;                  1  [STACK] _Bool 
 45674 ;; Registers used:
 45675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 45676 ;; Tracked objects:
 45677 ;;		On entry : 0/3C
 45678 ;;		On exit  : 0/0
 45679 ;;		Unchanged: 0/0
 45680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45685 ;;Total ram usage:        0 bytes
 45686 ;; Hardware stack levels used: 1
 45687 ;; Hardware stack levels required when called: 3
 45688 ;; This function calls:
 45689 ;;		Nothing
 45690 ;; This function is called by:
 45691 ;;		_main
 45692 ;;		_m_protocol
 45693 ;;		_r_protocol
 45694 ;;		_t_protocol
 45695 ;;		_secs_II_message
 45696 ;;		_secs_gem_state
 45697 ;;		_WaitMs
 45698 ;;		_help_button
 45699 ;;		_check_help
 45700 ;;		_MyeaDogM_WriteStringAtPos
 45701 ;;		_set_display_info
 45702 ;; This function uses a reentrant model
 45703 ;;
 45704                           
 45705                           	psect	text116
 45706   017D96                     __ptext116:
 45707                           	callstack 0
 45708   017D96                     _TimerDone:
 45709                           	callstack 24
 45710                           
 45711                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45712                           ;incstack = 0
 45713   017D96  0004               	clrwdt		;# 
 45714                           
 45715                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 45716                           ;stkvar	_timer @ sp[(0)+-1]
 45717   017D98  0EFF               	movlw	-1
 45718   017D9A  50E3               	movf	plusw1,w,c
 45719   017D9C  0D02               	mullw	2
 45720   017D9E  50F3               	movf	243,w,c
 45721   017DA0  0F60               	addlw	low _tickCount
 45722   017DA2  6ED9               	movwf	fsr2l,c
 45723   017DA4  6ADA               	clrf	fsr2h,c
 45724   017DA6  50DE               	movf	postinc2,w,c
 45725   017DA8  10DE               	iorwf	postinc2,w,c
 45726   017DAA  A4D8               	btfss	status,2,c
 45727   017DAC  D002               	goto	l8282
 45728                           
 45729                           ;timers.c: 24:   return 1;
 45730   017DAE  0E01               	movlw	1
 45731   017DB0  D001               	goto	L42
 45732   017DB2                     l8282:
 45733                           
 45734                           ;timers.c: 26:  return 0;
 45735   017DB2  0E00               	movlw	0
 45736   017DB4                     L42:
 45737   017DB4  6E23               	movwf	btemp^0,c
 45738                           
 45739                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 45740   017DB6  52E5               	movf	postdec1,f,c
 45741   017DB8  0012               	return		;funcret
 45742   017DBA                     __end_of_TimerDone:
 45743                           	callstack 0
 45744                           
 45745 ;; *************** function _INT0_ISR *****************
 45746 ;; Defined at:
 45747 ;;		line 38 in file "mcc_generated_files/ext_int.c"
 45748 ;; Parameters:    Size  Location     Type
 45749 ;;		None
 45750 ;; Auto vars:     Size  Location     Type
 45751 ;;		None
 45752 ;; Return value:  Size  Location     Type
 45753 ;;                  1    wreg      void 
 45754 ;; Registers used:
 45755 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl
 45756 ;; Tracked objects:
 45757 ;;		On entry : 0/0
 45758 ;;		On exit  : 0/0
 45759 ;;		Unchanged: 0/0
 45760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45763 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45764 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45765 ;;Total ram usage:        2 bytes
 45766 ;; Hardware stack levels used: 1
 45767 ;; Hardware stack levels required when called: 2
 45768 ;; This function calls:
 45769 ;;		_INT0_CallBack
 45770 ;; This function is called by:
 45771 ;;		Interrupt level 2
 45772 ;; This function uses a non-reentrant model
 45773 ;;
 45774                           
 45775                           	psect	text117
 45776   017CFC                     __ptext117:
 45777                           	callstack 0
 45778   017CFC                     _INT0_ISR:
 45779                           	callstack 15
 45780                           
 45781                           ;incstack = 0
 45782   017CFC  006F FFE8  F043    	movff	pclath,??_INT0_ISR
 45783   017D02  006F FFEC  F044    	movff	pclatu,??_INT0_ISR+1
 45784   017D08  EE15  F3EB         	lfsr	1,___inthi_sp
 45785                           
 45786                           ;mcc_generated_files/ext_int.c: 40:  (PIR1bits.INT0IF = 0);
 45787   017D0C  0139               	movlb	57	; () banked
 45788   017D0E  91A1               	bcf	161,0,b	;volatile
 45789                           
 45790                           ; BSR set to: 57
 45791                           ;mcc_generated_files/ext_int.c: 43:  INT0_CallBack();
 45792   017D10  ECDD  F0BE         	call	_INT0_CallBack	;wreg free
 45793   017D14  0060  F113  FFFB   	movff	??_INT0_ISR+1,pclatu
 45794   017D1A  0060  F10F  FFFA   	movff	??_INT0_ISR,pclath
 45795   017D20  0011               	retfie		f
 45796   017D22                     __end_of_INT0_ISR:
 45797                           	callstack 0
 45798                           
 45799 ;; *************** function _INT0_CallBack *****************
 45800 ;; Defined at:
 45801 ;;		line 46 in file "mcc_generated_files/ext_int.c"
 45802 ;; Parameters:    Size  Location     Type
 45803 ;;		None
 45804 ;; Auto vars:     Size  Location     Type
 45805 ;;		None
 45806 ;; Return value:  Size  Location     Type
 45807 ;;                  1  [STACK] void 
 45808 ;; Registers used:
 45809 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl
 45810 ;; Tracked objects:
 45811 ;;		On entry : 3F/39
 45812 ;;		On exit  : 0/0
 45813 ;;		Unchanged: 0/0
 45814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45819 ;;Total ram usage:        0 bytes
 45820 ;; Hardware stack levels used: 1
 45821 ;; Hardware stack levels required when called: 1
 45822 ;; This function calls:
 45823 ;;		NULL
 45824 ;;		_INT0_DefaultInterruptHandler
 45825 ;; This function is called by:
 45826 ;;		_INT0_ISR
 45827 ;; This function uses a reentrant model
 45828 ;;
 45829                           
 45830                           	psect	text118
 45831   017DBA                     __ptext118:
 45832                           	callstack 0
 45833   017DBA                     _INT0_CallBack:
 45834                           	callstack 15
 45835                           
 45836                           ;mcc_generated_files/ext_int.c: 49:  if (INT0_InterruptHandler) {
 45837                           
 45838                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45839                           ;incstack = 0
 45840   017DBA  0100               	movlb	0	; () banked
 45841   017DBC  51B9               	movf	_INT0_InterruptHandler& (0+255),w,b
 45842   017DBE  11BA               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 45843   017DC0  11BB               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 45844   017DC2  B4D8               	btfsc	status,2,c
 45845   017DC4  0012               	return	
 45846                           
 45847                           ; BSR set to: 0
 45848                           ;mcc_generated_files/ext_int.c: 50:   INT0_InterruptHandler();
 45849   017DC6  D801               	call	u624_48
 45850   017DC8  0012               	return	
 45851   017DCA                     u624_48:
 45852   017DCA  0005               	push	
 45853   017DCC  6EFA               	movwf	pclath,c
 45854   017DCE  51B9               	movf	_INT0_InterruptHandler& (0+255),w,b
 45855   017DD0  6EFD               	movwf	tosl,c
 45856   017DD2  51BA               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 45857   017DD4  6EFE               	movwf	tosh,c
 45858   017DD6  51BB               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 45859   017DD8  6EFF               	movwf	tosu,c
 45860   017DDA  50FA               	movf	pclath,w,c
 45861   017DDC  0012               	return		;indir
 45862   017DDE                     __end_of_INT0_CallBack:
 45863                           	callstack 0
 45864                           
 45865 ;; *************** function _INT0_DefaultInterruptHandler *****************
 45866 ;; Defined at:
 45867 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 45868 ;; Parameters:    Size  Location     Type
 45869 ;;		None
 45870 ;; Auto vars:     Size  Location     Type
 45871 ;;		None
 45872 ;; Return value:  Size  Location     Type
 45873 ;;                  1  [STACK] void 
 45874 ;; Registers used:
 45875 ;;		None
 45876 ;; Tracked objects:
 45877 ;;		On entry : 3F/0
 45878 ;;		On exit  : 0/0
 45879 ;;		Unchanged: 0/0
 45880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45885 ;;Total ram usage:        0 bytes
 45886 ;; Hardware stack levels used: 1
 45887 ;; This function calls:
 45888 ;;		Nothing
 45889 ;; This function is called by:
 45890 ;;		_EXT_INT_Initialize
 45891 ;;		_INT0_CallBack
 45892 ;; This function uses a reentrant model
 45893 ;;
 45894                           
 45895                           	psect	text119
 45896   0180E8                     __ptext119:
 45897                           	callstack 0
 45898   0180E8                     _INT0_DefaultInterruptHandler:
 45899                           	callstack 15
 45900                           
 45901                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 45902                           
 45903                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45904                           ;incstack = 0
 45905   0180E8  0012               	return		;funcret
 45906   0180EA                     __end_of_INT0_DefaultInterruptHandler:
 45907                           	callstack 0
 45908                           
 45909 ;; *************** function _INT1_ISR *****************
 45910 ;; Defined at:
 45911 ;;		line 65 in file "mcc_generated_files/ext_int.c"
 45912 ;; Parameters:    Size  Location     Type
 45913 ;;		None
 45914 ;; Auto vars:     Size  Location     Type
 45915 ;;		None
 45916 ;; Return value:  Size  Location     Type
 45917 ;;                  1    wreg      void 
 45918 ;; Registers used:
 45919 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl
 45920 ;; Tracked objects:
 45921 ;;		On entry : 0/0
 45922 ;;		On exit  : 0/0
 45923 ;;		Unchanged: 0/0
 45924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45927 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45928 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45929 ;;Total ram usage:        2 bytes
 45930 ;; Hardware stack levels used: 1
 45931 ;; Hardware stack levels required when called: 2
 45932 ;; This function calls:
 45933 ;;		_INT1_CallBack
 45934 ;; This function is called by:
 45935 ;;		Interrupt level 2
 45936 ;; This function uses a non-reentrant model
 45937 ;;
 45938                           
 45939                           	psect	text120
 45940   017D24                     __ptext120:
 45941                           	callstack 0
 45942   017D24                     _INT1_ISR:
 45943                           	callstack 15
 45944                           
 45945                           ;incstack = 0
 45946   017D24  006F FFE8  F045    	movff	pclath,??_INT1_ISR
 45947   017D2A  006F FFEC  F046    	movff	pclatu,??_INT1_ISR+1
 45948   017D30  EE15  F3EB         	lfsr	1,___inthi_sp
 45949                           
 45950                           ;mcc_generated_files/ext_int.c: 67:  (PIR5bits.INT1IF = 0);
 45951   017D34  0139               	movlb	57	; () banked
 45952   017D36  91A5               	bcf	165,0,b	;volatile
 45953                           
 45954                           ; BSR set to: 57
 45955                           ;mcc_generated_files/ext_int.c: 70:  INT1_CallBack();
 45956   017D38  ECEF  F0BE         	call	_INT1_CallBack	;wreg free
 45957   017D3C  0060  F11B  FFFB   	movff	??_INT1_ISR+1,pclatu
 45958   017D42  0060  F117  FFFA   	movff	??_INT1_ISR,pclath
 45959   017D48  0011               	retfie		f
 45960   017D4A                     __end_of_INT1_ISR:
 45961                           	callstack 0
 45962                           
 45963 ;; *************** function _INT1_CallBack *****************
 45964 ;; Defined at:
 45965 ;;		line 73 in file "mcc_generated_files/ext_int.c"
 45966 ;; Parameters:    Size  Location     Type
 45967 ;;		None
 45968 ;; Auto vars:     Size  Location     Type
 45969 ;;		None
 45970 ;; Return value:  Size  Location     Type
 45971 ;;                  1  [STACK] void 
 45972 ;; Registers used:
 45973 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl
 45974 ;; Tracked objects:
 45975 ;;		On entry : 3F/39
 45976 ;;		On exit  : 0/0
 45977 ;;		Unchanged: 0/0
 45978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45983 ;;Total ram usage:        0 bytes
 45984 ;; Hardware stack levels used: 1
 45985 ;; Hardware stack levels required when called: 1
 45986 ;; This function calls:
 45987 ;;		NULL
 45988 ;;		_INT1_DefaultInterruptHandler
 45989 ;; This function is called by:
 45990 ;;		_INT1_ISR
 45991 ;; This function uses a reentrant model
 45992 ;;
 45993                           
 45994                           	psect	text121
 45995   017DDE                     __ptext121:
 45996                           	callstack 0
 45997   017DDE                     _INT1_CallBack:
 45998                           	callstack 15
 45999                           
 46000                           ;mcc_generated_files/ext_int.c: 76:  if (INT1_InterruptHandler) {
 46001                           
 46002                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46003                           ;incstack = 0
 46004   017DDE  0100               	movlb	0	; () banked
 46005   017DE0  51B6               	movf	_INT1_InterruptHandler& (0+255),w,b
 46006   017DE2  11B7               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 46007   017DE4  11B8               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 46008   017DE6  B4D8               	btfsc	status,2,c
 46009   017DE8  0012               	return	
 46010                           
 46011                           ; BSR set to: 0
 46012                           ;mcc_generated_files/ext_int.c: 77:   INT1_InterruptHandler();
 46013   017DEA  D801               	call	u626_48
 46014   017DEC  0012               	return	
 46015   017DEE                     u626_48:
 46016   017DEE  0005               	push	
 46017   017DF0  6EFA               	movwf	pclath,c
 46018   017DF2  51B6               	movf	_INT1_InterruptHandler& (0+255),w,b
 46019   017DF4  6EFD               	movwf	tosl,c
 46020   017DF6  51B7               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 46021   017DF8  6EFE               	movwf	tosh,c
 46022   017DFA  51B8               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 46023   017DFC  6EFF               	movwf	tosu,c
 46024   017DFE  50FA               	movf	pclath,w,c
 46025   017E00  0012               	return		;indir
 46026   017E02                     __end_of_INT1_CallBack:
 46027                           	callstack 0
 46028                           
 46029 ;; *************** function _INT1_DefaultInterruptHandler *****************
 46030 ;; Defined at:
 46031 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 46032 ;; Parameters:    Size  Location     Type
 46033 ;;		None
 46034 ;; Auto vars:     Size  Location     Type
 46035 ;;		None
 46036 ;; Return value:  Size  Location     Type
 46037 ;;                  1  [STACK] void 
 46038 ;; Registers used:
 46039 ;;		None
 46040 ;; Tracked objects:
 46041 ;;		On entry : 3F/0
 46042 ;;		On exit  : 0/0
 46043 ;;		Unchanged: 0/0
 46044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46049 ;;Total ram usage:        0 bytes
 46050 ;; Hardware stack levels used: 1
 46051 ;; This function calls:
 46052 ;;		Nothing
 46053 ;; This function is called by:
 46054 ;;		_EXT_INT_Initialize
 46055 ;;		_INT1_CallBack
 46056 ;; This function uses a reentrant model
 46057 ;;
 46058                           
 46059                           	psect	text122
 46060   0180EA                     __ptext122:
 46061                           	callstack 0
 46062   0180EA                     _INT1_DefaultInterruptHandler:
 46063                           	callstack 15
 46064                           
 46065                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 46066                           
 46067                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46068                           ;incstack = 0
 46069   0180EA  0012               	return		;funcret
 46070   0180EC                     __end_of_INT1_DefaultInterruptHandler:
 46071                           	callstack 0
 46072                           
 46073 ;; *************** function _INT2_ISR *****************
 46074 ;; Defined at:
 46075 ;;		line 92 in file "mcc_generated_files/ext_int.c"
 46076 ;; Parameters:    Size  Location     Type
 46077 ;;		None
 46078 ;; Auto vars:     Size  Location     Type
 46079 ;;		None
 46080 ;; Return value:  Size  Location     Type
 46081 ;;                  1    wreg      void 
 46082 ;; Registers used:
 46083 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl
 46084 ;; Tracked objects:
 46085 ;;		On entry : 0/0
 46086 ;;		On exit  : 0/0
 46087 ;;		Unchanged: 0/0
 46088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46091 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46092 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46093 ;;Total ram usage:        2 bytes
 46094 ;; Hardware stack levels used: 1
 46095 ;; Hardware stack levels required when called: 2
 46096 ;; This function calls:
 46097 ;;		_INT2_CallBack
 46098 ;; This function is called by:
 46099 ;;		Interrupt level 2
 46100 ;; This function uses a non-reentrant model
 46101 ;;
 46102                           
 46103                           	psect	text123
 46104   017D4C                     __ptext123:
 46105                           	callstack 0
 46106   017D4C                     _INT2_ISR:
 46107                           	callstack 15
 46108                           
 46109                           ;incstack = 0
 46110   017D4C  006F FFE8  F047    	movff	pclath,??_INT2_ISR
 46111   017D52  006F FFEC  F048    	movff	pclatu,??_INT2_ISR+1
 46112   017D58  EE15  F3EB         	lfsr	1,___inthi_sp
 46113                           
 46114                           ;mcc_generated_files/ext_int.c: 94:  (PIR7bits.INT2IF = 0);
 46115   017D5C  0139               	movlb	57	; () banked
 46116   017D5E  9BA7               	bcf	167,5,b	;volatile
 46117                           
 46118                           ; BSR set to: 57
 46119                           ;mcc_generated_files/ext_int.c: 97:  INT2_CallBack();
 46120   017D60  EC01  F0BF         	call	_INT2_CallBack	;wreg free
 46121   017D64  0060  F123  FFFB   	movff	??_INT2_ISR+1,pclatu
 46122   017D6A  0060  F11F  FFFA   	movff	??_INT2_ISR,pclath
 46123   017D70  0011               	retfie		f
 46124   017D72                     __end_of_INT2_ISR:
 46125                           	callstack 0
 46126                           
 46127 ;; *************** function _INT2_CallBack *****************
 46128 ;; Defined at:
 46129 ;;		line 100 in file "mcc_generated_files/ext_int.c"
 46130 ;; Parameters:    Size  Location     Type
 46131 ;;		None
 46132 ;; Auto vars:     Size  Location     Type
 46133 ;;		None
 46134 ;; Return value:  Size  Location     Type
 46135 ;;                  1  [STACK] void 
 46136 ;; Registers used:
 46137 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl
 46138 ;; Tracked objects:
 46139 ;;		On entry : 3F/39
 46140 ;;		On exit  : 0/0
 46141 ;;		Unchanged: 0/0
 46142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46147 ;;Total ram usage:        0 bytes
 46148 ;; Hardware stack levels used: 1
 46149 ;; Hardware stack levels required when called: 1
 46150 ;; This function calls:
 46151 ;;		NULL
 46152 ;;		_INT2_DefaultInterruptHandler
 46153 ;; This function is called by:
 46154 ;;		_INT2_ISR
 46155 ;; This function uses a reentrant model
 46156 ;;
 46157                           
 46158                           	psect	text124
 46159   017E02                     __ptext124:
 46160                           	callstack 0
 46161   017E02                     _INT2_CallBack:
 46162                           	callstack 15
 46163                           
 46164                           ;mcc_generated_files/ext_int.c: 103:  if (INT2_InterruptHandler) {
 46165                           
 46166                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46167                           ;incstack = 0
 46168   017E02  0100               	movlb	0	; () banked
 46169   017E04  51B3               	movf	_INT2_InterruptHandler& (0+255),w,b
 46170   017E06  11B4               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
 46171   017E08  11B5               	iorwf	(_INT2_InterruptHandler+2)& (0+255),w,b
 46172   017E0A  B4D8               	btfsc	status,2,c
 46173   017E0C  0012               	return	
 46174                           
 46175                           ; BSR set to: 0
 46176                           ;mcc_generated_files/ext_int.c: 104:   INT2_InterruptHandler();
 46177   017E0E  D801               	call	u628_48
 46178   017E10  0012               	return	
 46179   017E12                     u628_48:
 46180   017E12  0005               	push	
 46181   017E14  6EFA               	movwf	pclath,c
 46182   017E16  51B3               	movf	_INT2_InterruptHandler& (0+255),w,b
 46183   017E18  6EFD               	movwf	tosl,c
 46184   017E1A  51B4               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
 46185   017E1C  6EFE               	movwf	tosh,c
 46186   017E1E  51B5               	movf	(_INT2_InterruptHandler+2)& (0+255),w,b
 46187   017E20  6EFF               	movwf	tosu,c
 46188   017E22  50FA               	movf	pclath,w,c
 46189   017E24  0012               	return		;indir
 46190   017E26                     __end_of_INT2_CallBack:
 46191                           	callstack 0
 46192                           
 46193 ;; *************** function _INT2_DefaultInterruptHandler *****************
 46194 ;; Defined at:
 46195 ;;		line 113 in file "mcc_generated_files/ext_int.c"
 46196 ;; Parameters:    Size  Location     Type
 46197 ;;		None
 46198 ;; Auto vars:     Size  Location     Type
 46199 ;;		None
 46200 ;; Return value:  Size  Location     Type
 46201 ;;                  1  [STACK] void 
 46202 ;; Registers used:
 46203 ;;		None
 46204 ;; Tracked objects:
 46205 ;;		On entry : 3F/0
 46206 ;;		On exit  : 0/0
 46207 ;;		Unchanged: 0/0
 46208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46213 ;;Total ram usage:        0 bytes
 46214 ;; Hardware stack levels used: 1
 46215 ;; This function calls:
 46216 ;;		Nothing
 46217 ;; This function is called by:
 46218 ;;		_EXT_INT_Initialize
 46219 ;;		_INT2_CallBack
 46220 ;; This function uses a reentrant model
 46221 ;;
 46222                           
 46223                           	psect	text125
 46224   0180EC                     __ptext125:
 46225                           	callstack 0
 46226   0180EC                     _INT2_DefaultInterruptHandler:
 46227                           	callstack 15
 46228                           
 46229                           ; _INT2_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 46230                           
 46231                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46232                           ;incstack = 0
 46233   0180EC  0012               	return		;funcret
 46234   0180EE                     __end_of_INT2_DefaultInterruptHandler:
 46235                           	callstack 0
 46236                           
 46237 ;; *************** function _Default_ISR *****************
 46238 ;; Defined at:
 46239 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 46240 ;; Parameters:    Size  Location     Type
 46241 ;;		None
 46242 ;; Auto vars:     Size  Location     Type
 46243 ;;		None
 46244 ;; Return value:  Size  Location     Type
 46245 ;;                  1    wreg      void 
 46246 ;; Registers used:
 46247 ;;		None
 46248 ;; Tracked objects:
 46249 ;;		On entry : 0/0
 46250 ;;		On exit  : 0/0
 46251 ;;		Unchanged: 0/0
 46252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46257 ;;Total ram usage:        0 bytes
 46258 ;; Hardware stack levels used: 1
 46259 ;; This function calls:
 46260 ;;		Nothing
 46261 ;; This function is called by:
 46262 ;;		Interrupt level 2
 46263 ;; This function uses a non-reentrant model
 46264 ;;
 46265                           
 46266                           	psect	text126
 46267   0180DC                     __ptext126:
 46268                           	callstack 0
 46269   0180DC                     _Default_ISR:
 46270                           	callstack 17
 46271                           
 46272                           ;incstack = 0
 46273   0180DC  EE15  F3EB         	lfsr	1,___inthi_sp
 46274   0180E0  0011               	retfie		f
 46275   0180E2                     __end_of_Default_ISR:
 46276                           	callstack 0
 46277                           
 46278 ;; *************** function _ADCC_ISR *****************
 46279 ;; Defined at:
 46280 ;;		line 307 in file "mcc_generated_files/adcc.c"
 46281 ;; Parameters:    Size  Location     Type
 46282 ;;		None
 46283 ;; Auto vars:     Size  Location     Type
 46284 ;;		None
 46285 ;; Return value:  Size  Location     Type
 46286 ;;                  1    wreg      void 
 46287 ;; Registers used:
 46288 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl
 46289 ;; Tracked objects:
 46290 ;;		On entry : 0/0
 46291 ;;		On exit  : 0/0
 46292 ;;		Unchanged: 0/0
 46293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46296 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46297 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46298 ;;Total ram usage:        2 bytes
 46299 ;; Hardware stack levels used: 1
 46300 ;; Hardware stack levels required when called: 1
 46301 ;; This function calls:
 46302 ;;		NULL
 46303 ;;		_ADCC_DefaultInterruptHandler
 46304 ;; This function is called by:
 46305 ;;		Interrupt level 2
 46306 ;; This function uses a non-reentrant model
 46307 ;;
 46308                           
 46309                           	psect	text127
 46310   0174AC                     __ptext127:
 46311                           	callstack 0
 46312   0174AC                     _ADCC_ISR:
 46313                           	callstack 16
 46314                           
 46315                           ;incstack = 0
 46316   0174AC  006F FFE8  F049    	movff	pclath,??_ADCC_ISR
 46317   0174B2  006F FFEC  F04A    	movff	pclatu,??_ADCC_ISR+1
 46318   0174B8  EE15  F3EB         	lfsr	1,___inthi_sp
 46319                           
 46320                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 46321   0174BC  0139               	movlb	57	; () banked
 46322   0174BE  95A1               	bcf	161,2,b	;volatile
 46323                           
 46324                           ; BSR set to: 57
 46325                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 46326   0174C0  0100               	movlb	0	; () banked
 46327   0174C2  51A4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 46328   0174C4  11A5               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 46329   0174C6  11A6               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 46330   0174C8  B4D8               	btfsc	status,2,c
 46331   0174CA  D00C               	goto	i2u729_49
 46332                           
 46333                           ; BSR set to: 0
 46334                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 46335   0174CC  D801               	call	i2u729_48
 46336   0174CE  D00A               	goto	i2u729_49
 46337   0174D0                     i2u729_48:
 46338   0174D0  0005               	push	
 46339   0174D2  6EFA               	movwf	pclath,c
 46340   0174D4  51A4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 46341   0174D6  6EFD               	movwf	tosl,c
 46342   0174D8  51A5               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 46343   0174DA  6EFE               	movwf	tosh,c
 46344   0174DC  51A6               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 46345   0174DE  6EFF               	movwf	tosu,c
 46346   0174E0  50FA               	movf	pclath,w,c
 46347   0174E2  0012               	return		;indir
 46348   0174E4                     i2u729_49:
 46349   0174E4  0060  F12B  FFFB   	movff	??_ADCC_ISR+1,pclatu
 46350   0174EA  0060  F127  FFFA   	movff	??_ADCC_ISR,pclath
 46351   0174F0  0011               	retfie		f
 46352   0174F2                     __end_of_ADCC_ISR:
 46353                           	callstack 0
 46354                           
 46355 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 46356 ;; Defined at:
 46357 ;;		line 320 in file "mcc_generated_files/adcc.c"
 46358 ;; Parameters:    Size  Location     Type
 46359 ;;		None
 46360 ;; Auto vars:     Size  Location     Type
 46361 ;;		None
 46362 ;; Return value:  Size  Location     Type
 46363 ;;                  1  [STACK] void 
 46364 ;; Registers used:
 46365 ;;		None
 46366 ;; Tracked objects:
 46367 ;;		On entry : 3F/0
 46368 ;;		On exit  : 0/0
 46369 ;;		Unchanged: 0/0
 46370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46375 ;;Total ram usage:        0 bytes
 46376 ;; Hardware stack levels used: 1
 46377 ;; This function calls:
 46378 ;;		Nothing
 46379 ;; This function is called by:
 46380 ;;		_ADCC_Initialize
 46381 ;;		_ADCC_ISR
 46382 ;; This function uses a reentrant model
 46383 ;;
 46384                           
 46385                           	psect	text128
 46386   0180EE                     __ptext128:
 46387                           	callstack 0
 46388   0180EE                     _ADCC_DefaultInterruptHandler:
 46389                           	callstack 16
 46390                           
 46391                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 46392                           
 46393                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46394                           ;incstack = 0
 46395   0180EE  0012               	return		;funcret
 46396   0180F0                     __end_of_ADCC_DefaultInterruptHandler:
 46397                           	callstack 0
 46398                           
 46399 ;; *************** function _UART1_tx_vect_isr *****************
 46400 ;; Defined at:
 46401 ;;		line 200 in file "mcc_generated_files/uart1.c"
 46402 ;; Parameters:    Size  Location     Type
 46403 ;;		None
 46404 ;; Auto vars:     Size  Location     Type
 46405 ;;		None
 46406 ;; Return value:  Size  Location     Type
 46407 ;;                  1    wreg      void 
 46408 ;; Registers used:
 46409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl
 46410 ;; Tracked objects:
 46411 ;;		On entry : 0/0
 46412 ;;		On exit  : 0/0
 46413 ;;		Unchanged: 0/0
 46414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46417 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46418 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46419 ;;Total ram usage:        2 bytes
 46420 ;; Hardware stack levels used: 1
 46421 ;; Hardware stack levels required when called: 1
 46422 ;; This function calls:
 46423 ;;		NULL
 46424 ;;		_UART1_Transmit_ISR
 46425 ;; This function is called by:
 46426 ;;		Interrupt level 2
 46427 ;; This function uses a non-reentrant model
 46428 ;;
 46429                           
 46430                           	psect	text129
 46431   0175C0                     __ptext129:
 46432                           	callstack 0
 46433   0175C0                     _UART1_tx_vect_isr:
 46434                           	callstack 16
 46435                           
 46436                           ;incstack = 0
 46437   0175C0  006F FFE8  F04B    	movff	pclath,??_UART1_tx_vect_isr
 46438   0175C6  006F FFEC  F04C    	movff	pclatu,??_UART1_tx_vect_isr+1
 46439   0175CC  EE15  F3EB         	lfsr	1,___inthi_sp
 46440                           
 46441                           ;mcc_generated_files/uart1.c: 202:  if (UART1_TxInterruptHandler) {
 46442   0175D0  0100               	movlb	0	; () banked
 46443   0175D2  51A7               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 46444   0175D4  11A8               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 46445   0175D6  11A9               	iorwf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 46446   0175D8  B4D8               	btfsc	status,2,c
 46447   0175DA  D00C               	goto	i2u731_49
 46448                           
 46449                           ; BSR set to: 0
 46450                           ;mcc_generated_files/uart1.c: 203:   UART1_TxInterruptHandler();
 46451   0175DC  D801               	call	i2u731_48
 46452   0175DE  D00A               	goto	i2u731_49
 46453   0175E0                     i2u731_48:
 46454   0175E0  0005               	push	
 46455   0175E2  6EFA               	movwf	pclath,c
 46456   0175E4  51A7               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 46457   0175E6  6EFD               	movwf	tosl,c
 46458   0175E8  51A8               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 46459   0175EA  6EFE               	movwf	tosh,c
 46460   0175EC  51A9               	movf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 46461   0175EE  6EFF               	movwf	tosu,c
 46462   0175F0  50FA               	movf	pclath,w,c
 46463   0175F2  0012               	return		;indir
 46464   0175F4                     i2u731_49:
 46465   0175F4  0060  F133  FFFB   	movff	??_UART1_tx_vect_isr+1,pclatu
 46466   0175FA  0060  F12F  FFFA   	movff	??_UART1_tx_vect_isr,pclath
 46467   017600  0011               	retfie		f
 46468   017602                     __end_of_UART1_tx_vect_isr:
 46469                           	callstack 0
 46470                           
 46471 ;; *************** function _UART1_Transmit_ISR *****************
 46472 ;; Defined at:
 46473 ;;		line 214 in file "mcc_generated_files/uart1.c"
 46474 ;; Parameters:    Size  Location     Type
 46475 ;;		None
 46476 ;; Auto vars:     Size  Location     Type
 46477 ;;		None
 46478 ;; Return value:  Size  Location     Type
 46479 ;;                  1  [STACK] void 
 46480 ;; Registers used:
 46481 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 46482 ;; Tracked objects:
 46483 ;;		On entry : 3F/0
 46484 ;;		On exit  : 3B/39
 46485 ;;		Unchanged: 0/0
 46486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46491 ;;Total ram usage:        0 bytes
 46492 ;; Hardware stack levels used: 1
 46493 ;; This function calls:
 46494 ;;		Nothing
 46495 ;; This function is called by:
 46496 ;;		_UART1_Initialize
 46497 ;;		_UART1_tx_vect_isr
 46498 ;; This function uses a reentrant model
 46499 ;;
 46500                           
 46501                           	psect	text130
 46502   0179FA                     __ptext130:
 46503                           	callstack 0
 46504   0179FA                     _UART1_Transmit_ISR:
 46505                           	callstack 16
 46506                           
 46507                           ;mcc_generated_files/uart1.c: 217:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 46508                           
 46509                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46510                           ;incstack = 0
 46511   0179FA  0E40               	movlw	64
 46512   0179FC  6019               	cpfslt	_uart1TxBufferRemaining^0,c
 46513   0179FE  D010               	goto	l609
 46514                           
 46515                           ;mcc_generated_files/uart1.c: 218:   U1TXB = uart1TxBuffer[uart1TxTail++];
 46516   017A00  0E40               	movlw	low _uart1TxBuffer
 46517   017A02  241A               	addwf	_uart1TxTail^0,w,c	;volatile
 46518   017A04  6ED9               	movwf	fsr2l,c
 46519   017A06  6ADA               	clrf	fsr2h,c
 46520   017A08  0E02               	movlw	high _uart1TxBuffer
 46521   017A0A  22DA               	addwfc	fsr2h,f,c
 46522   017A0C  50DF               	movf	indf2,w,c
 46523   017A0E  013D               	movlb	61	; () banked
 46524   017A10  6FEA               	movwf	234,b	;volatile
 46525                           
 46526                           ; BSR set to: 61
 46527   017A12  2A1A               	incf	_uart1TxTail^0,f,c	;volatile
 46528                           
 46529                           ; BSR set to: 61
 46530                           ;mcc_generated_files/uart1.c: 219:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 46531   017A14  0E3F               	movlw	63
 46532   017A16  641A               	cpfsgt	_uart1TxTail^0,c
 46533   017A18  D001               	goto	l10012
 46534                           
 46535                           ; BSR set to: 61
 46536                           ;mcc_generated_files/uart1.c: 220:    uart1TxTail = 0;
 46537   017A1A  6A1A               	clrf	_uart1TxTail^0,c	;volatile
 46538   017A1C                     l10012:
 46539                           
 46540                           ; BSR set to: 61
 46541                           ;mcc_generated_files/uart1.c: 222:   uart1TxBufferRemaining++;
 46542   017A1C  2A19               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 46543                           
 46544                           ;mcc_generated_files/uart1.c: 223:  } else {
 46545   017A1E  0012               	return	
 46546   017A20                     l609:
 46547                           
 46548                           ;mcc_generated_files/uart1.c: 224:   PIE3bits.U1TXIE = 0;
 46549   017A20  0139               	movlb	57	; () banked
 46550   017A22  9993               	bcf	147,4,b	;volatile
 46551                           
 46552                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 46553   017A24  0012               	return		;funcret
 46554   017A26                     __end_of_UART1_Transmit_ISR:
 46555                           	callstack 0
 46556                           
 46557 ;; *************** function _UART1_rx_vect_isr *****************
 46558 ;; Defined at:
 46559 ;;		line 207 in file "mcc_generated_files/uart1.c"
 46560 ;; Parameters:    Size  Location     Type
 46561 ;;		None
 46562 ;; Auto vars:     Size  Location     Type
 46563 ;;		None
 46564 ;; Return value:  Size  Location     Type
 46565 ;;                  1    wreg      void 
 46566 ;; Registers used:
 46567 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl
 46568 ;; Tracked objects:
 46569 ;;		On entry : 0/0
 46570 ;;		On exit  : 0/0
 46571 ;;		Unchanged: 0/0
 46572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46575 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46576 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46577 ;;Total ram usage:        2 bytes
 46578 ;; Hardware stack levels used: 1
 46579 ;; Hardware stack levels required when called: 1
 46580 ;; This function calls:
 46581 ;;		NULL
 46582 ;;		_UART1_Receive_ISR
 46583 ;; This function is called by:
 46584 ;;		Interrupt level 2
 46585 ;; This function uses a non-reentrant model
 46586 ;;
 46587                           
 46588                           	psect	text131
 46589   017604                     __ptext131:
 46590                           	callstack 0
 46591   017604                     _UART1_rx_vect_isr:
 46592                           	callstack 16
 46593                           
 46594                           ;incstack = 0
 46595   017604  006F FFE8  F04D    	movff	pclath,??_UART1_rx_vect_isr
 46596   01760A  006F FFEC  F04E    	movff	pclatu,??_UART1_rx_vect_isr+1
 46597   017610  EE15  F3EB         	lfsr	1,___inthi_sp
 46598                           
 46599                           ;mcc_generated_files/uart1.c: 209:  if (UART1_RxInterruptHandler) {
 46600   017614  0100               	movlb	0	; () banked
 46601   017616  51AA               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 46602   017618  11AB               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 46603   01761A  11AC               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 46604   01761C  B4D8               	btfsc	status,2,c
 46605   01761E  D00C               	goto	i2u733_49
 46606                           
 46607                           ; BSR set to: 0
 46608                           ;mcc_generated_files/uart1.c: 210:   UART1_RxInterruptHandler();
 46609   017620  D801               	call	i2u733_48
 46610   017622  D00A               	goto	i2u733_49
 46611   017624                     i2u733_48:
 46612   017624  0005               	push	
 46613   017626  6EFA               	movwf	pclath,c
 46614   017628  51AA               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 46615   01762A  6EFD               	movwf	tosl,c
 46616   01762C  51AB               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 46617   01762E  6EFE               	movwf	tosh,c
 46618   017630  51AC               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 46619   017632  6EFF               	movwf	tosu,c
 46620   017634  50FA               	movf	pclath,w,c
 46621   017636  0012               	return		;indir
 46622   017638                     i2u733_49:
 46623   017638  0060  F13B  FFFB   	movff	??_UART1_rx_vect_isr+1,pclatu
 46624   01763E  0060  F137  FFFA   	movff	??_UART1_rx_vect_isr,pclath
 46625   017644  0011               	retfie		f
 46626   017646                     __end_of_UART1_rx_vect_isr:
 46627                           	callstack 0
 46628                           
 46629 ;; *************** function _UART1_Receive_ISR *****************
 46630 ;; Defined at:
 46631 ;;		line 230 in file "mcc_generated_files/uart1.c"
 46632 ;; Parameters:    Size  Location     Type
 46633 ;;		None
 46634 ;; Auto vars:     Size  Location     Type
 46635 ;;		None
 46636 ;; Return value:  Size  Location     Type
 46637 ;;                  1  [STACK] void 
 46638 ;; Registers used:
 46639 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 46640 ;; Tracked objects:
 46641 ;;		On entry : 3F/0
 46642 ;;		On exit  : 0/0
 46643 ;;		Unchanged: 0/0
 46644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46649 ;;Total ram usage:        0 bytes
 46650 ;; Hardware stack levels used: 1
 46651 ;; This function calls:
 46652 ;;		Nothing
 46653 ;; This function is called by:
 46654 ;;		_UART1_Initialize
 46655 ;;		_UART1_rx_vect_isr
 46656 ;; This function uses a reentrant model
 46657 ;;
 46658                           
 46659                           	psect	text132
 46660   017EEC                     __ptext132:
 46661                           	callstack 0
 46662   017EEC                     _UART1_Receive_ISR:
 46663                           	callstack 16
 46664                           
 46665                           ;mcc_generated_files/uart1.c: 233:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 46666                           
 46667                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46668                           ;incstack = 0
 46669   017EEC  0E00               	movlw	low _uart1RxBuffer
 46670   017EEE  2418               	addwf	_uart1RxHead^0,w,c	;volatile
 46671   017EF0  6ED9               	movwf	fsr2l,c
 46672   017EF2  6ADA               	clrf	fsr2h,c
 46673   017EF4  0E04               	movlw	high _uart1RxBuffer
 46674   017EF6  22DA               	addwfc	fsr2h,f,c
 46675   017EF8  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 46676   017EFE  2A18               	incf	_uart1RxHead^0,f,c	;volatile
 46677                           
 46678                           ;mcc_generated_files/uart1.c: 234:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 46679   017F00  2818               	incf	_uart1RxHead^0,w,c
 46680   017F02  B4D8               	btfsc	status,2,c
 46681                           
 46682                           ;mcc_generated_files/uart1.c: 235:   uart1RxHead = 0;
 46683   017F04  6A18               	clrf	_uart1RxHead^0,c	;volatile
 46684                           
 46685                           ;mcc_generated_files/uart1.c: 237:  uart1RxCount++;
 46686   017F06  2A16               	incf	_uart1RxCount^0,f,c	;volatile
 46687                           
 46688                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 46689   017F08  0012               	return		;funcret
 46690   017F0A                     __end_of_UART1_Receive_ISR:
 46691                           	callstack 0
 46692                           
 46693 ;; *************** function _UART2_tx_vect_isr *****************
 46694 ;; Defined at:
 46695 ;;		line 195 in file "mcc_generated_files/uart2.c"
 46696 ;; Parameters:    Size  Location     Type
 46697 ;;		None
 46698 ;; Auto vars:     Size  Location     Type
 46699 ;;		None
 46700 ;; Return value:  Size  Location     Type
 46701 ;;                  1    wreg      void 
 46702 ;; Registers used:
 46703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl
 46704 ;; Tracked objects:
 46705 ;;		On entry : 0/0
 46706 ;;		On exit  : 0/0
 46707 ;;		Unchanged: 0/0
 46708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46711 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46712 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46713 ;;Total ram usage:        2 bytes
 46714 ;; Hardware stack levels used: 1
 46715 ;; Hardware stack levels required when called: 1
 46716 ;; This function calls:
 46717 ;;		NULL
 46718 ;;		_UART2_Transmit_ISR
 46719 ;; This function is called by:
 46720 ;;		Interrupt level 2
 46721 ;; This function uses a non-reentrant model
 46722 ;;
 46723                           
 46724                           	psect	text133
 46725   017648                     __ptext133:
 46726                           	callstack 0
 46727   017648                     _UART2_tx_vect_isr:
 46728                           	callstack 16
 46729                           
 46730                           ;incstack = 0
 46731   017648  006F FFE8  F0F5    	movff	pclath,??_UART2_tx_vect_isr
 46732   01764E  006F FFEC  F0F6    	movff	pclatu,??_UART2_tx_vect_isr+1
 46733   017654  EE15  F3EB         	lfsr	1,___inthi_sp
 46734                           
 46735                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 46736   017658  0100               	movlb	0	; () banked
 46737   01765A  51AD               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 46738   01765C  11AE               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 46739   01765E  11AF               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 46740   017660  B4D8               	btfsc	status,2,c
 46741   017662  D00C               	goto	i2u1010_49
 46742                           
 46743                           ; BSR set to: 0
 46744                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 46745   017664  D801               	call	i2u1010_48
 46746   017666  D00A               	goto	i2u1010_49
 46747   017668                     i2u1010_48:
 46748   017668  0005               	push	
 46749   01766A  6EFA               	movwf	pclath,c
 46750   01766C  51AD               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 46751   01766E  6EFD               	movwf	tosl,c
 46752   017670  51AE               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 46753   017672  6EFE               	movwf	tosh,c
 46754   017674  51AF               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 46755   017676  6EFF               	movwf	tosu,c
 46756   017678  50FA               	movf	pclath,w,c
 46757   01767A  0012               	return		;indir
 46758   01767C                     i2u1010_49:
 46759   01767C  0060  F3DB  FFFB   	movff	??_UART2_tx_vect_isr+1,pclatu
 46760   017682  0060  F3D7  FFFA   	movff	??_UART2_tx_vect_isr,pclath
 46761   017688  0011               	retfie		f
 46762   01768A                     __end_of_UART2_tx_vect_isr:
 46763                           	callstack 0
 46764                           
 46765 ;; *************** function _UART2_Transmit_ISR *****************
 46766 ;; Defined at:
 46767 ;;		line 213 in file "mcc_generated_files/uart2.c"
 46768 ;; Parameters:    Size  Location     Type
 46769 ;;		None
 46770 ;; Auto vars:     Size  Location     Type
 46771 ;;		None
 46772 ;; Return value:  Size  Location     Type
 46773 ;;                  1  [STACK] void 
 46774 ;; Registers used:
 46775 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 46776 ;; Tracked objects:
 46777 ;;		On entry : 3F/0
 46778 ;;		On exit  : 3B/39
 46779 ;;		Unchanged: 0/0
 46780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46785 ;;Total ram usage:        0 bytes
 46786 ;; Hardware stack levels used: 1
 46787 ;; This function calls:
 46788 ;;		Nothing
 46789 ;; This function is called by:
 46790 ;;		_UART2_Initialize
 46791 ;;		_UART2_tx_vect_isr
 46792 ;; This function uses a reentrant model
 46793 ;;
 46794                           
 46795                           	psect	text134
 46796   017A26                     __ptext134:
 46797                           	callstack 0
 46798   017A26                     _UART2_Transmit_ISR:
 46799                           	callstack 16
 46800                           
 46801                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 46802                           
 46803                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46804                           ;incstack = 0
 46805   017A26  0E40               	movlw	64
 46806   017A28  6013               	cpfslt	_uart2TxBufferRemaining^0,c
 46807   017A2A  D010               	goto	l729
 46808                           
 46809                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 46810   017A2C  0E00               	movlw	low _uart2TxBuffer
 46811   017A2E  2414               	addwf	_uart2TxTail^0,w,c	;volatile
 46812   017A30  6ED9               	movwf	fsr2l,c
 46813   017A32  6ADA               	clrf	fsr2h,c
 46814   017A34  0E02               	movlw	high _uart2TxBuffer
 46815   017A36  22DA               	addwfc	fsr2h,f,c
 46816   017A38  50DF               	movf	indf2,w,c
 46817   017A3A  013D               	movlb	61	; () banked
 46818   017A3C  6FD2               	movwf	210,b	;volatile
 46819                           
 46820                           ; BSR set to: 61
 46821   017A3E  2A14               	incf	_uart2TxTail^0,f,c	;volatile
 46822                           
 46823                           ; BSR set to: 61
 46824                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 46825   017A40  0E3F               	movlw	63
 46826   017A42  6414               	cpfsgt	_uart2TxTail^0,c
 46827   017A44  D001               	goto	l10034
 46828                           
 46829                           ; BSR set to: 61
 46830                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 46831   017A46  6A14               	clrf	_uart2TxTail^0,c	;volatile
 46832   017A48                     l10034:
 46833                           
 46834                           ; BSR set to: 61
 46835                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 46836   017A48  2A13               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 46837                           
 46838                           ;mcc_generated_files/uart2.c: 224:     }
 46839   017A4A  0012               	return	
 46840   017A4C                     l729:
 46841                           
 46842                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 46843   017A4C  0139               	movlb	57	; () banked
 46844   017A4E  9796               	bcf	150,3,b	;volatile
 46845                           
 46846                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 46847   017A50  0012               	return		;funcret
 46848   017A52                     __end_of_UART2_Transmit_ISR:
 46849                           	callstack 0
 46850                           
 46851 ;; *************** function _UART2_rx_vect_isr *****************
 46852 ;; Defined at:
 46853 ;;		line 203 in file "mcc_generated_files/uart2.c"
 46854 ;; Parameters:    Size  Location     Type
 46855 ;;		None
 46856 ;; Auto vars:     Size  Location     Type
 46857 ;;		None
 46858 ;; Return value:  Size  Location     Type
 46859 ;;                  1    wreg      void 
 46860 ;; Registers used:
 46861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl
 46862 ;; Tracked objects:
 46863 ;;		On entry : 0/0
 46864 ;;		On exit  : 0/0
 46865 ;;		Unchanged: 0/0
 46866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46869 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46870 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46871 ;;Total ram usage:        2 bytes
 46872 ;; Hardware stack levels used: 1
 46873 ;; Hardware stack levels required when called: 1
 46874 ;; This function calls:
 46875 ;;		NULL
 46876 ;;		_UART2_Receive_ISR
 46877 ;; This function is called by:
 46878 ;;		Interrupt level 2
 46879 ;; This function uses a non-reentrant model
 46880 ;;
 46881                           
 46882                           	psect	text135
 46883   01768C                     __ptext135:
 46884                           	callstack 0
 46885   01768C                     _UART2_rx_vect_isr:
 46886                           	callstack 16
 46887                           
 46888                           ;incstack = 0
 46889   01768C  006F FFE8  F0F7    	movff	pclath,??_UART2_rx_vect_isr
 46890   017692  006F FFEC  F0F8    	movff	pclatu,??_UART2_rx_vect_isr+1
 46891   017698  EE15  F3EB         	lfsr	1,___inthi_sp
 46892                           
 46893                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 46894   01769C  0100               	movlb	0	; () banked
 46895   01769E  51B0               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 46896   0176A0  11B1               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 46897   0176A2  11B2               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 46898   0176A4  B4D8               	btfsc	status,2,c
 46899   0176A6  D00C               	goto	i2u1012_49
 46900                           
 46901                           ; BSR set to: 0
 46902                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 46903   0176A8  D801               	call	i2u1012_48
 46904   0176AA  D00A               	goto	i2u1012_49
 46905   0176AC                     i2u1012_48:
 46906   0176AC  0005               	push	
 46907   0176AE  6EFA               	movwf	pclath,c
 46908   0176B0  51B0               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 46909   0176B2  6EFD               	movwf	tosl,c
 46910   0176B4  51B1               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 46911   0176B6  6EFE               	movwf	tosh,c
 46912   0176B8  51B2               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 46913   0176BA  6EFF               	movwf	tosu,c
 46914   0176BC  50FA               	movf	pclath,w,c
 46915   0176BE  0012               	return		;indir
 46916   0176C0                     i2u1012_49:
 46917   0176C0  0060  F3E3  FFFB   	movff	??_UART2_rx_vect_isr+1,pclatu
 46918   0176C6  0060  F3DF  FFFA   	movff	??_UART2_rx_vect_isr,pclath
 46919   0176CC  0011               	retfie		f
 46920   0176CE                     __end_of_UART2_rx_vect_isr:
 46921                           	callstack 0
 46922                           
 46923 ;; *************** function _UART2_Receive_ISR *****************
 46924 ;; Defined at:
 46925 ;;		line 233 in file "mcc_generated_files/uart2.c"
 46926 ;; Parameters:    Size  Location     Type
 46927 ;;		None
 46928 ;; Auto vars:     Size  Location     Type
 46929 ;;		None
 46930 ;; Return value:  Size  Location     Type
 46931 ;;                  1  [STACK] void 
 46932 ;; Registers used:
 46933 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 46934 ;; Tracked objects:
 46935 ;;		On entry : 3F/0
 46936 ;;		On exit  : 0/0
 46937 ;;		Unchanged: 0/0
 46938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46943 ;;Total ram usage:        0 bytes
 46944 ;; Hardware stack levels used: 1
 46945 ;; This function calls:
 46946 ;;		Nothing
 46947 ;; This function is called by:
 46948 ;;		_UART2_Initialize
 46949 ;;		_UART2_rx_vect_isr
 46950 ;; This function uses a reentrant model
 46951 ;;
 46952                           
 46953                           	psect	text136
 46954   017F0A                     __ptext136:
 46955                           	callstack 0
 46956   017F0A                     _UART2_Receive_ISR:
 46957                           	callstack 16
 46958                           
 46959                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 46960                           
 46961                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46962                           ;incstack = 0
 46963   017F0A  0E00               	movlw	low _uart2RxBuffer
 46964   017F0C  2412               	addwf	_uart2RxHead^0,w,c	;volatile
 46965   017F0E  6ED9               	movwf	fsr2l,c
 46966   017F10  6ADA               	clrf	fsr2h,c
 46967   017F12  0E05               	movlw	high _uart2RxBuffer
 46968   017F14  22DA               	addwfc	fsr2h,f,c
 46969   017F16  006F F743 FFDF     	movff	15824,indf2	;volatile
 46970   017F1C  2A12               	incf	_uart2RxHead^0,f,c	;volatile
 46971                           
 46972                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 46973   017F1E  2812               	incf	_uart2RxHead^0,w,c
 46974   017F20  B4D8               	btfsc	status,2,c
 46975                           
 46976                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 46977   017F22  6A12               	clrf	_uart2RxHead^0,c	;volatile
 46978                           
 46979                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 46980   017F24  2A10               	incf	_uart2RxCount^0,f,c	;volatile
 46981                           
 46982                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 46983   017F26  0012               	return		;funcret
 46984   017F28                     __end_of_UART2_Receive_ISR:
 46985                           	callstack 0
 46986                           
 46987 ;; *************** function _TMR6_ISR *****************
 46988 ;; Defined at:
 46989 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 46990 ;; Parameters:    Size  Location     Type
 46991 ;;		None
 46992 ;; Auto vars:     Size  Location     Type
 46993 ;;		None
 46994 ;; Return value:  Size  Location     Type
 46995 ;;                  1    wreg      void 
 46996 ;; Registers used:
 46997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, tosl, prodl, prodh
 46998 ;; Tracked objects:
 46999 ;;		On entry : 0/0
 47000 ;;		On exit  : 0/0
 47001 ;;		Unchanged: 0/0
 47002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47005 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47006 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47007 ;;Total ram usage:        3 bytes
 47008 ;; Hardware stack levels used: 1
 47009 ;; Hardware stack levels required when called: 2
 47010 ;; This function calls:
 47011 ;;		_TMR6_CallBack
 47012 ;; This function is called by:
 47013 ;;		Interrupt level 2
 47014 ;; This function uses a non-reentrant model
 47015 ;;
 47016                           
 47017                           	psect	text137
 47018   0179CC                     __ptext137:
 47019                           	callstack 0
 47020   0179CC                     _TMR6_ISR:
 47021                           	callstack 15
 47022                           
 47023                           ;incstack = 0
 47024   0179CC  006F FFE8  F0F9    	movff	pclath,??_TMR6_ISR
 47025   0179D2  006F FFEC  F0FA    	movff	pclatu,??_TMR6_ISR+1
 47026   0179D8  C023  F0FB         	movff	btemp,??_TMR6_ISR+2
 47027   0179DC  EE15  F3EB         	lfsr	1,___inthi_sp
 47028                           
 47029                           ;mcc_generated_files/tmr6.c: 175:  PIR9bits.TMR6IF = 0;
 47030   0179E0  0139               	movlb	57	; () banked
 47031   0179E2  91A9               	bcf	169,0,b	;volatile
 47032                           
 47033                           ; BSR set to: 57
 47034                           ;mcc_generated_files/tmr6.c: 179:  TMR6_CallBack();
 47035   0179E4  EC13  F0BF         	call	_TMR6_CallBack	;wreg free
 47036   0179E8  C0FB  F023         	movff	??_TMR6_ISR+2,btemp
 47037   0179EC  0060  F3EB  FFFB   	movff	??_TMR6_ISR+1,pclatu
 47038   0179F2  0060  F3E7  FFFA   	movff	??_TMR6_ISR,pclath
 47039   0179F8  0011               	retfie		f
 47040   0179FA                     __end_of_TMR6_ISR:
 47041                           	callstack 0
 47042                           
 47043 ;; *************** function _TMR6_CallBack *****************
 47044 ;; Defined at:
 47045 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 47046 ;; Parameters:    Size  Location     Type
 47047 ;;		None
 47048 ;; Auto vars:     Size  Location     Type
 47049 ;;		None
 47050 ;; Return value:  Size  Location     Type
 47051 ;;                  1  [STACK] void 
 47052 ;; Registers used:
 47053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, tosl, prodl, prodh
 47054 ;; Tracked objects:
 47055 ;;		On entry : 3F/39
 47056 ;;		On exit  : 0/0
 47057 ;;		Unchanged: 0/0
 47058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47063 ;;Total ram usage:        0 bytes
 47064 ;; Hardware stack levels used: 1
 47065 ;; Hardware stack levels required when called: 1
 47066 ;; This function calls:
 47067 ;;		NULL
 47068 ;;		_TMR6_DefaultInterruptHandler
 47069 ;; This function is called by:
 47070 ;;		_TMR6_ISR
 47071 ;; This function uses a reentrant model
 47072 ;;
 47073                           
 47074                           	psect	text138
 47075   017E26                     __ptext138:
 47076                           	callstack 0
 47077   017E26                     _TMR6_CallBack:
 47078                           	callstack 15
 47079                           
 47080                           ;mcc_generated_files/tmr6.c: 186:  if (TMR6_InterruptHandler) {
 47081                           
 47082                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47083                           ;incstack = 0
 47084   017E26  0100               	movlb	0	; () banked
 47085   017E28  51A1               	movf	_TMR6_InterruptHandler& (0+255),w,b
 47086   017E2A  11A2               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 47087   017E2C  11A3               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 47088   017E2E  B4D8               	btfsc	status,2,c
 47089   017E30  0012               	return	
 47090                           
 47091                           ; BSR set to: 0
 47092                           ;mcc_generated_files/tmr6.c: 187:   TMR6_InterruptHandler();
 47093   017E32  D801               	call	u636_48
 47094   017E34  0012               	return	
 47095   017E36                     u636_48:
 47096   017E36  0005               	push	
 47097   017E38  6EFA               	movwf	pclath,c
 47098   017E3A  51A1               	movf	_TMR6_InterruptHandler& (0+255),w,b
 47099   017E3C  6EFD               	movwf	tosl,c
 47100   017E3E  51A2               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 47101   017E40  6EFE               	movwf	tosh,c
 47102   017E42  51A3               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 47103   017E44  6EFF               	movwf	tosu,c
 47104   017E46  50FA               	movf	pclath,w,c
 47105   017E48  0012               	return		;indir
 47106   017E4A                     __end_of_TMR6_CallBack:
 47107                           	callstack 0
 47108                           
 47109 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 47110 ;; Defined at:
 47111 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 47112 ;; Parameters:    Size  Location     Type
 47113 ;;		None
 47114 ;; Auto vars:     Size  Location     Type
 47115 ;;  i               1  [STACK] unsigned char 
 47116 ;; Return value:  Size  Location     Type
 47117 ;;                  1  [STACK] void 
 47118 ;; Registers used:
 47119 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 47120 ;; Tracked objects:
 47121 ;;		On entry : 3F/0
 47122 ;;		On exit  : 0/0
 47123 ;;		Unchanged: 0/0
 47124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47129 ;;Total ram usage:        0 bytes
 47130 ;; Hardware stack levels used: 1
 47131 ;; This function calls:
 47132 ;;		Nothing
 47133 ;; This function is called by:
 47134 ;;		_TMR6_Initialize
 47135 ;;		_TMR6_CallBack
 47136 ;; This function uses a reentrant model
 47137 ;;
 47138                           
 47139                           	psect	text139
 47140   0174F2                     __ptext139:
 47141                           	callstack 0
 47142   0174F2                     _TMR6_DefaultInterruptHandler:
 47143                           	callstack 0
 47144                           
 47145                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47146   0174F2  52E6               	movf	postinc1,f,c
 47147                           
 47148                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 47149                           ;stkvar	_i @ sp[(-1)+0]
 47150                           
 47151                           ;incstack = 0
 47152   0174F4  0EFF               	movlw	-1
 47153   0174F6  6AE3               	clrf	plusw1,c
 47154   0174F8                     l9270:
 47155                           
 47156                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 47157                           ;stkvar	_i @ sp[(-1)+0]
 47158   0174F8  0EFF               	movlw	-1
 47159   0174FA  50E3               	movf	plusw1,w,c
 47160   0174FC  0D02               	mullw	2
 47161   0174FE  50F3               	movf	243,w,c
 47162   017500  0F60               	addlw	low _tickCount
 47163   017502  6ED9               	movwf	fsr2l,c
 47164   017504  6ADA               	clrf	fsr2h,c
 47165   017506  50DE               	movf	postinc2,w,c
 47166   017508  10DE               	iorwf	postinc2,w,c
 47167   01750A  B4D8               	btfsc	status,2,c
 47168   01750C  D00A               	goto	l9274
 47169                           
 47170                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 47171                           ;stkvar	_i @ sp[(-1)+0]
 47172   01750E  0EFF               	movlw	-1
 47173   017510  50E3               	movf	plusw1,w,c
 47174   017512  0D02               	mullw	2
 47175   017514  50F3               	movf	243,w,c
 47176   017516  0F60               	addlw	low _tickCount
 47177   017518  6ED9               	movwf	fsr2l,c
 47178   01751A  6ADA               	clrf	fsr2h,c
 47179   01751C  06DE               	decf	postinc2,f,c
 47180   01751E  0E00               	movlw	0
 47181   017520  5ADD               	subwfb	postdec2,f,c
 47182   017522                     l9274:
 47183                           
 47184                           ;mcc_generated_files/tmr6.c: 207:  }
 47185                           ;stkvar	_i @ sp[(-1)+0]
 47186   017522  0EFF               	movlw	-1
 47187   017524  2AE3               	incf	plusw1,f,c
 47188                           
 47189                           ;stkvar	_i @ sp[(-1)+0]
 47190   017526  0EFF               	movlw	-1
 47191   017528  006F FF8C  F023    	movff	plusw1,btemp
 47192   01752E  0E0C               	movlw	12
 47193   017530  6423               	cpfsgt	btemp^0,c
 47194   017532  D7E2               	goto	l9270
 47195                           
 47196                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 47197   017534  52E5               	movf	postdec1,f,c
 47198   017536  0012               	return		;funcret
 47199   017538                     __end_of_TMR6_DefaultInterruptHandler:
 47200                           	callstack 0
 47201                           
 47202 ;; *************** function _DMA1_DMASCNT_ISR *****************
 47203 ;; Defined at:
 47204 ;;		line 126 in file "mcc_generated_files/dma1.c"
 47205 ;; Parameters:    Size  Location     Type
 47206 ;;		None
 47207 ;; Auto vars:     Size  Location     Type
 47208 ;;		None
 47209 ;; Return value:  Size  Location     Type
 47210 ;;                  1    wreg      void 
 47211 ;; Registers used:
 47212 ;;		None
 47213 ;; Tracked objects:
 47214 ;;		On entry : 0/0
 47215 ;;		On exit  : 3F/0
 47216 ;;		Unchanged: 0/0
 47217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47222 ;;Total ram usage:        0 bytes
 47223 ;; Hardware stack levels used: 1
 47224 ;; This function calls:
 47225 ;;		Nothing
 47226 ;; This function is called by:
 47227 ;;		Interrupt level 2
 47228 ;; This function uses a non-reentrant model
 47229 ;;
 47230                           
 47231                           	psect	text140
 47232   01804C                     __ptext140:
 47233                           	callstack 0
 47234   01804C                     _DMA1_DMASCNT_ISR:
 47235                           	callstack 17
 47236                           
 47237                           ;incstack = 0
 47238   01804C  EE15  F3EB         	lfsr	1,___inthi_sp
 47239                           
 47240                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 47241   018050  0139               	movlb	57	; () banked
 47242   018052  91A2               	bcf	162,0,b	;volatile
 47243                           
 47244                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 47245   018054  0100               	movlb	0	; () banked
 47246   018056  9787               	bcf	_spi_link& (0+255),3,b	;volatile
 47247                           
 47248                           ; BSR set to: 0
 47249                           
 47250                           ;mcc_generated_files/dma1.c: 131:  do { LATEbits.LATE2 = 0; } while(0);
 47251   018058  94BE               	bcf	190,2,c	;volatile
 47252                           
 47253                           ; BSR set to: 0
 47254   01805A  0011               	retfie		f
 47255   01805C                     __end_of_DMA1_DMASCNT_ISR:
 47256                           	callstack 0
 47257                           
 47258 ;; *************** function _DMA1_DMADCNT_ISR *****************
 47259 ;; Defined at:
 47260 ;;		line 134 in file "mcc_generated_files/dma1.c"
 47261 ;; Parameters:    Size  Location     Type
 47262 ;;		None
 47263 ;; Auto vars:     Size  Location     Type
 47264 ;;		None
 47265 ;; Return value:  Size  Location     Type
 47266 ;;                  1    wreg      void 
 47267 ;; Registers used:
 47268 ;;		None
 47269 ;; Tracked objects:
 47270 ;;		On entry : 0/0
 47271 ;;		On exit  : 3F/39
 47272 ;;		Unchanged: 0/0
 47273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47278 ;;Total ram usage:        0 bytes
 47279 ;; Hardware stack levels used: 1
 47280 ;; This function calls:
 47281 ;;		Nothing
 47282 ;; This function is called by:
 47283 ;;		Interrupt level 2
 47284 ;; This function uses a non-reentrant model
 47285 ;;
 47286                           
 47287                           	psect	text141
 47288   018084                     __ptext141:
 47289                           	callstack 0
 47290   018084                     _DMA1_DMADCNT_ISR:
 47291                           	callstack 17
 47292                           
 47293                           ; BSR set to: 0
 47294                           ;incstack = 0
 47295   018084  EE15  F3EB         	lfsr	1,___inthi_sp
 47296                           
 47297                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 47298   018088  0139               	movlb	57	; () banked
 47299   01808A  93A2               	bcf	162,1,b	;volatile
 47300                           
 47301                           ; BSR set to: 57
 47302   01808C  0011               	retfie		f
 47303   01808E                     __end_of_DMA1_DMADCNT_ISR:
 47304                           	callstack 0
 47305                           
 47306 ;; *************** function _DMA1_DMAA_ISR *****************
 47307 ;; Defined at:
 47308 ;;		line 144 in file "mcc_generated_files/dma1.c"
 47309 ;; Parameters:    Size  Location     Type
 47310 ;;		None
 47311 ;; Auto vars:     Size  Location     Type
 47312 ;;		None
 47313 ;; Return value:  Size  Location     Type
 47314 ;;                  1    wreg      void 
 47315 ;; Registers used:
 47316 ;;		None
 47317 ;; Tracked objects:
 47318 ;;		On entry : 0/0
 47319 ;;		On exit  : 3F/39
 47320 ;;		Unchanged: 0/0
 47321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47326 ;;Total ram usage:        0 bytes
 47327 ;; Hardware stack levels used: 1
 47328 ;; This function calls:
 47329 ;;		Nothing
 47330 ;; This function is called by:
 47331 ;;		Interrupt level 2
 47332 ;; This function uses a non-reentrant model
 47333 ;;
 47334                           
 47335                           	psect	text142
 47336   018090                     __ptext142:
 47337                           	callstack 0
 47338   018090                     _DMA1_DMAA_ISR:
 47339                           	callstack 17
 47340                           
 47341                           ; BSR set to: 57
 47342                           ;incstack = 0
 47343   018090  EE15  F3EB         	lfsr	1,___inthi_sp
 47344                           
 47345                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 47346   018094  0139               	movlb	57	; () banked
 47347   018096  97A2               	bcf	162,3,b	;volatile
 47348                           
 47349                           ; BSR set to: 57
 47350   018098  0011               	retfie		f
 47351   01809A                     __end_of_DMA1_DMAA_ISR:
 47352                           	callstack 0
 47353                           
 47354 ;; *************** function _DMA1_DMAOR_ISR *****************
 47355 ;; Defined at:
 47356 ;;		line 155 in file "mcc_generated_files/dma1.c"
 47357 ;; Parameters:    Size  Location     Type
 47358 ;;		None
 47359 ;; Auto vars:     Size  Location     Type
 47360 ;;		None
 47361 ;; Return value:  Size  Location     Type
 47362 ;;                  1    wreg      void 
 47363 ;; Registers used:
 47364 ;;		None
 47365 ;; Tracked objects:
 47366 ;;		On entry : 0/0
 47367 ;;		On exit  : 3F/39
 47368 ;;		Unchanged: 0/0
 47369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47374 ;;Total ram usage:        0 bytes
 47375 ;; Hardware stack levels used: 1
 47376 ;; This function calls:
 47377 ;;		Nothing
 47378 ;; This function is called by:
 47379 ;;		Interrupt level 2
 47380 ;; This function uses a non-reentrant model
 47381 ;;
 47382                           
 47383                           	psect	text143
 47384   01809C                     __ptext143:
 47385                           	callstack 0
 47386   01809C                     _DMA1_DMAOR_ISR:
 47387                           	callstack 17
 47388                           
 47389                           ; BSR set to: 57
 47390                           ;incstack = 0
 47391   01809C  EE15  F3EB         	lfsr	1,___inthi_sp
 47392                           
 47393                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 47394   0180A0  0139               	movlb	57	; () banked
 47395   0180A2  95A2               	bcf	162,2,b	;volatile
 47396                           
 47397                           ; BSR set to: 57
 47398   0180A4  0011               	retfie		f
 47399   0180A6                     __end_of_DMA1_DMAOR_ISR:
 47400                           	callstack 0
 47401                           
 47402 ;; *************** function _TMR5_ISR *****************
 47403 ;; Defined at:
 47404 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 47405 ;; Parameters:    Size  Location     Type
 47406 ;;		None
 47407 ;; Auto vars:     Size  Location     Type
 47408 ;;		None
 47409 ;; Return value:  Size  Location     Type
 47410 ;;                  1    wreg      void 
 47411 ;; Registers used:
 47412 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp+11, tosl
 47413 ;; Tracked objects:
 47414 ;;		On entry : 0/0
 47415 ;;		On exit  : 0/0
 47416 ;;		Unchanged: 0/0
 47417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47420 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47421 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47422 ;;Total ram usage:        5 bytes
 47423 ;; Hardware stack levels used: 1
 47424 ;; Hardware stack levels required when called: 2
 47425 ;; This function calls:
 47426 ;;		_TMR5_CallBack
 47427 ;;		_TMR5_WriteTimer
 47428 ;; This function is called by:
 47429 ;;		Interrupt level 2
 47430 ;; This function uses a non-reentrant model
 47431 ;;
 47432                           
 47433                           	psect	text144
 47434   017088                     __ptext144:
 47435                           	callstack 0
 47436   017088                     _TMR5_ISR:
 47437                           	callstack 15
 47438                           
 47439                           ; BSR set to: 57
 47440                           ;incstack = 0
 47441   017088  006F FFE8  F1E8    	movff	pclath,??_TMR5_ISR+2
 47442   01708E  006F FFEC  F1E9    	movff	pclatu,??_TMR5_ISR+3
 47443   017094  C02E  F1EA         	movff	btemp+11,??_TMR5_ISR+4
 47444   017098  EE15  F3EB         	lfsr	1,___inthi_sp
 47445                           
 47446                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 47447   01709C  0139               	movlb	57	; () banked
 47448   01709E  9DA8               	bcf	168,6,b	;volatile
 47449                           
 47450                           ; BSR set to: 57
 47451                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 47452   0170A0  0060  F01F  FFE6   	movff	_timer5ReloadVal,postinc1
 47453   0170A6  0060  F023  FFE6   	movff	_timer5ReloadVal+1,postinc1
 47454   0170AC  EC87  F0BB         	call	_TMR5_WriteTimer	;wreg free
 47455                           
 47456                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 47457   0170B0  EE23  F19B         	lfsr	2,_V+385	;volatile
 47458   0170B4  50DF               	movf	indf2,w,c
 47459   0170B6  0101               	movlb	1	; () banked
 47460   0170B8  6FE6               	movwf	??_TMR5_ISR& (0+255),b
 47461   0170BA  6BE7               	clrf	(??_TMR5_ISR+1)& (0+255),b
 47462   0170BC  0E05               	movlw	5
 47463   0170BE  27E6               	addwf	??_TMR5_ISR& (0+255),f,b
 47464   0170C0  0E00               	movlw	0
 47465   0170C2  23E7               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 47466   0170C4  4A05               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 47467   0170C6  2A06               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 47468   0170C8  51E6               	movf	??_TMR5_ISR& (0+255),w,b
 47469   0170CA  5C05               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 47470   0170CC  51E7               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 47471   0170CE  5806               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 47472   0170D0  A0D8               	btfss	status,0,c
 47473   0170D2  D004               	goto	i2l1157
 47474                           
 47475                           ; BSR set to: 1
 47476                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 47477   0170D4  EC25  F0BF         	call	_TMR5_CallBack	;wreg free
 47478                           
 47479                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 47480   0170D8  6A05               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 47481   0170DA  6A06               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 47482   0170DC                     i2l1157:
 47483   0170DC  C1EA  F02E         	movff	??_TMR5_ISR+4,btemp+11
 47484   0170E0  0060  F7A7  FFFB   	movff	??_TMR5_ISR+3,pclatu
 47485   0170E6  0060  F7A3  FFFA   	movff	??_TMR5_ISR+2,pclath
 47486   0170EC  0011               	retfie		f
 47487   0170EE                     __end_of_TMR5_ISR:
 47488                           	callstack 0
 47489                           
 47490 ;; *************** function _TMR5_WriteTimer *****************
 47491 ;; Defined at:
 47492 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 47493 ;; Parameters:    Size  Location     Type
 47494 ;;  timerVal        2  [STACK] unsigned short 
 47495 ;; Auto vars:     Size  Location     Type
 47496 ;;		None
 47497 ;; Return value:  Size  Location     Type
 47498 ;;                  1  [STACK] void 
 47499 ;; Registers used:
 47500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 47501 ;; Tracked objects:
 47502 ;;		On entry : 3F/39
 47503 ;;		On exit  : 0/0
 47504 ;;		Unchanged: 0/0
 47505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47510 ;;Total ram usage:        0 bytes
 47511 ;; Hardware stack levels used: 1
 47512 ;; This function calls:
 47513 ;;		Nothing
 47514 ;; This function is called by:
 47515 ;;		_TMR5_ISR
 47516 ;; This function uses a reentrant model
 47517 ;;
 47518                           
 47519                           	psect	text145
 47520   01770E                     __ptext145:
 47521                           	callstack 0
 47522   01770E                     _TMR5_WriteTimer:
 47523                           	callstack 16
 47524                           
 47525                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 47526                           
 47527                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47528                           ;incstack = 0
 47529   01770E  A49A               	btfss	154,2,c	;volatile
 47530   017710  D00F               	goto	l10060
 47531                           
 47532                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 47533   017712  909A               	bcf	154,0,c	;volatile
 47534                           
 47535                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 47536                           ;stkvar	_timerVal @ sp[(0)+-2]
 47537   017714  0EFF               	movlw	255
 47538   017716  24E1               	addwf	fsr1l,w,c
 47539   017718  6ED9               	movwf	fsr2l,c
 47540   01771A  0EFF               	movlw	255
 47541   01771C  20E2               	addwfc	fsr1h,w,c
 47542   01771E  6EDA               	movwf	fsr2h,c
 47543   017720  50DF               	movf	indf2,w,c
 47544   017722  6E99               	movwf	153,c	;volatile
 47545                           
 47546                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 47547                           ;stkvar	_timerVal @ sp[(0)+-2]
 47548   017724  0EFE               	movlw	-2
 47549   017726  006F FF8F FF98     	movff	plusw1,16280	;volatile
 47550                           
 47551                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 47552   01772C  809A               	bsf	154,0,c	;volatile
 47553                           
 47554                           ;mcc_generated_files/tmr5.c: 142:  } else {
 47555   01772E  D00C               	goto	l1140
 47556   017730                     l10060:
 47557                           
 47558                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 47559                           ;stkvar	_timerVal @ sp[(0)+-2]
 47560   017730  0EFF               	movlw	255
 47561   017732  24E1               	addwf	fsr1l,w,c
 47562   017734  6ED9               	movwf	fsr2l,c
 47563   017736  0EFF               	movlw	255
 47564   017738  20E2               	addwfc	fsr1h,w,c
 47565   01773A  6EDA               	movwf	fsr2h,c
 47566   01773C  50DF               	movf	indf2,w,c
 47567   01773E  6E99               	movwf	153,c	;volatile
 47568                           
 47569                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 47570                           ;stkvar	_timerVal @ sp[(0)+-2]
 47571   017740  0EFE               	movlw	-2
 47572   017742  006F FF8F FF98     	movff	plusw1,16280	;volatile
 47573   017748                     l1140:
 47574                           
 47575                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 47576   017748  52E5               	movf	postdec1,f,c
 47577   01774A  52E5               	movf	postdec1,f,c
 47578   01774C  0012               	return		;funcret
 47579   01774E                     __end_of_TMR5_WriteTimer:
 47580                           	callstack 0
 47581                           
 47582 ;; *************** function _TMR5_CallBack *****************
 47583 ;; Defined at:
 47584 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 47585 ;; Parameters:    Size  Location     Type
 47586 ;;		None
 47587 ;; Auto vars:     Size  Location     Type
 47588 ;;		None
 47589 ;; Return value:  Size  Location     Type
 47590 ;;                  1  [STACK] void 
 47591 ;; Registers used:
 47592 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, btemp+11, tosl
 47593 ;; Tracked objects:
 47594 ;;		On entry : 3F/1
 47595 ;;		On exit  : 0/0
 47596 ;;		Unchanged: 0/0
 47597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47602 ;;Total ram usage:        0 bytes
 47603 ;; Hardware stack levels used: 1
 47604 ;; Hardware stack levels required when called: 1
 47605 ;; This function calls:
 47606 ;;		NULL
 47607 ;;		_TMR5_DefaultInterruptHandler
 47608 ;; This function is called by:
 47609 ;;		_TMR5_ISR
 47610 ;; This function uses a reentrant model
 47611 ;;
 47612                           
 47613                           	psect	text146
 47614   017E4A                     __ptext146:
 47615                           	callstack 0
 47616   017E4A                     _TMR5_CallBack:
 47617                           	callstack 15
 47618                           
 47619                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 47620                           
 47621                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47622                           ;incstack = 0
 47623   017E4A  0100               	movlb	0	; () banked
 47624   017E4C  519E               	movf	_TMR5_InterruptHandler& (0+255),w,b
 47625   017E4E  119F               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 47626   017E50  11A0               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 47627   017E52  B4D8               	btfsc	status,2,c
 47628   017E54  0012               	return	
 47629                           
 47630                           ; BSR set to: 0
 47631                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 47632   017E56  D801               	call	u639_48
 47633   017E58  0012               	return	
 47634   017E5A                     u639_48:
 47635   017E5A  0005               	push	
 47636   017E5C  6EFA               	movwf	pclath,c
 47637   017E5E  519E               	movf	_TMR5_InterruptHandler& (0+255),w,b
 47638   017E60  6EFD               	movwf	tosl,c
 47639   017E62  519F               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 47640   017E64  6EFE               	movwf	tosh,c
 47641   017E66  51A0               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 47642   017E68  6EFF               	movwf	tosu,c
 47643   017E6A  50FA               	movf	pclath,w,c
 47644   017E6C  0012               	return		;indir
 47645   017E6E                     __end_of_TMR5_CallBack:
 47646                           	callstack 0
 47647                           
 47648 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 47649 ;; Defined at:
 47650 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 47651 ;; Parameters:    Size  Location     Type
 47652 ;;		None
 47653 ;; Auto vars:     Size  Location     Type
 47654 ;;		None
 47655 ;; Return value:  Size  Location     Type
 47656 ;;                  1  [STACK] void 
 47657 ;; Registers used:
 47658 ;;		wreg, status,2, status,0, btemp+11
 47659 ;; Tracked objects:
 47660 ;;		On entry : 3F/0
 47661 ;;		On exit  : 0/0
 47662 ;;		Unchanged: 0/0
 47663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47668 ;;Total ram usage:        0 bytes
 47669 ;; Hardware stack levels used: 1
 47670 ;; This function calls:
 47671 ;;		Nothing
 47672 ;; This function is called by:
 47673 ;;		_TMR5_Initialize
 47674 ;;		_TMR5_CallBack
 47675 ;; This function uses a reentrant model
 47676 ;;
 47677                           
 47678                           	psect	text147
 47679   017FB0                     __ptext147:
 47680                           	callstack 0
 47681   017FB0                     _TMR5_DefaultInterruptHandler:
 47682                           	callstack 15
 47683                           
 47684                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 47685                           
 47686                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47687                           ;incstack = 0
 47688   017FB0  A0BE               	btfss	190,0,c	;volatile
 47689   017FB2  D002               	goto	u585_40
 47690   017FB4  0E01               	movlw	1
 47691   017FB6  D001               	goto	u585_46
 47692   017FB8                     u585_40:
 47693   017FB8  0E00               	movlw	0
 47694   017FBA                     u585_46:
 47695   017FBA  0AFF               	xorlw	255
 47696   017FBC  6E2E               	movwf	(btemp+11)^0,c
 47697   017FBE  50BE               	movf	190,w,c	;volatile
 47698   017FC0  182E               	xorwf	(btemp+11)^0,w,c
 47699   017FC2  0BFE               	andlw	-2
 47700   017FC4  182E               	xorwf	(btemp+11)^0,w,c
 47701   017FC6  6EBE               	movwf	190,c	;volatile
 47702                           
 47703                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 47704   017FC8  0012               	return		;funcret
 47705   017FCA                     __end_of_TMR5_DefaultInterruptHandler:
 47706                           	callstack 0
 47707                           
 47708                           ;
 47709                           ; H/W Interrupt Vector Table @ 0x8
 47710                           ;
 47711                           
 47712                           	psect	ivt0x8
 47713   000008                     __pivt0x8:
 47714                           	callstack 0
 47715   000008                     ivt0x8_base:
 47716                           	callstack 0
 47717                           
 47718                           ; Vector 0 : SWINT
 47719   000008  6037               	dw	_Default_ISR shr (0+2)
 47720                           
 47721                           ; Vector 1 : HLVD
 47722   00000A  6037               	dw	_Default_ISR shr (0+2)
 47723                           
 47724                           ; Vector 2 : OSF
 47725   00000C  6037               	dw	_Default_ISR shr (0+2)
 47726                           
 47727                           ; Vector 3 : CSW
 47728   00000E  6037               	dw	_Default_ISR shr (0+2)
 47729                           
 47730                           ; Vector 4 : NVM
 47731   000010  6037               	dw	_Default_ISR shr (0+2)
 47732                           
 47733                           ; Vector 5 : SCAN
 47734   000012  6037               	dw	_Default_ISR shr (0+2)
 47735                           
 47736                           ; Vector 6 : CRC
 47737   000014  6037               	dw	_Default_ISR shr (0+2)
 47738                           
 47739                           ; Vector 7 : IOC
 47740   000016  6037               	dw	_Default_ISR shr (0+2)
 47741                           
 47742                           ; Vector 8 : INT0
 47743   000018  5F3F               	dw	_INT0_ISR shr (0+2)
 47744                           
 47745                           ; Vector 9 : ZCD
 47746   00001A  6037               	dw	_Default_ISR shr (0+2)
 47747                           
 47748                           ; Vector 10 : AD
 47749   00001C  5D2B               	dw	_ADCC_ISR shr (0+2)
 47750                           
 47751                           ; Vector 11 : ADT
 47752   00001E  6037               	dw	_Default_ISR shr (0+2)
 47753                           
 47754                           ; Vector 12 : CMP1
 47755   000020  6037               	dw	_Default_ISR shr (0+2)
 47756                           
 47757                           ; Vector 13 : SMT1
 47758   000022  6037               	dw	_Default_ISR shr (0+2)
 47759                           
 47760                           ; Vector 14 : SMT1PRA
 47761   000024  6037               	dw	_Default_ISR shr (0+2)
 47762                           
 47763                           ; Vector 15 : SMT1PRW
 47764   000026  6037               	dw	_Default_ISR shr (0+2)
 47765                           
 47766                           ; Vector 16 : DMA1SCNT
 47767   000028  6013               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 47768                           
 47769                           ; Vector 17 : DMA1DCNT
 47770   00002A  6021               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 47771                           
 47772                           ; Vector 18 : DMA1OR
 47773   00002C  6027               	dw	_DMA1_DMAOR_ISR shr (0+2)
 47774                           
 47775                           ; Vector 19 : DMA1A
 47776   00002E  6024               	dw	_DMA1_DMAA_ISR shr (0+2)
 47777                           
 47778                           ; Vector 20 : SPI1RX
 47779   000030  6037               	dw	_Default_ISR shr (0+2)
 47780                           
 47781                           ; Vector 21 : SPI1TX
 47782   000032  6037               	dw	_Default_ISR shr (0+2)
 47783                           
 47784                           ; Vector 22 : SPI1
 47785   000034  6037               	dw	_Default_ISR shr (0+2)
 47786                           
 47787                           ; Vector 23 : I2C1RX
 47788   000036  6037               	dw	_Default_ISR shr (0+2)
 47789                           
 47790                           ; Vector 24 : I2C1TX
 47791   000038  6037               	dw	_Default_ISR shr (0+2)
 47792                           
 47793                           ; Vector 25 : I2C1
 47794   00003A  6037               	dw	_Default_ISR shr (0+2)
 47795                           
 47796                           ; Vector 26 : I2C1E
 47797   00003C  6037               	dw	_Default_ISR shr (0+2)
 47798                           
 47799                           ; Vector 27 : U1RX
 47800   00003E  5D81               	dw	_UART1_rx_vect_isr shr (0+2)
 47801                           
 47802                           ; Vector 28 : U1TX
 47803   000040  5D70               	dw	_UART1_tx_vect_isr shr (0+2)
 47804                           
 47805                           ; Vector 29 : U1E
 47806   000042  6037               	dw	_Default_ISR shr (0+2)
 47807                           
 47808                           ; Vector 30 : U1
 47809   000044  6037               	dw	_Default_ISR shr (0+2)
 47810                           
 47811                           ; Vector 31 : TMR0
 47812   000046  6037               	dw	_Default_ISR shr (0+2)
 47813                           
 47814                           ; Vector 32 : TMR1
 47815   000048  6037               	dw	_Default_ISR shr (0+2)
 47816                           
 47817                           ; Vector 33 : TMR1G
 47818   00004A  6037               	dw	_Default_ISR shr (0+2)
 47819                           
 47820                           ; Vector 34 : TMR2
 47821   00004C  6037               	dw	_Default_ISR shr (0+2)
 47822                           
 47823                           ; Vector 35 : CCP1
 47824   00004E  6037               	dw	_Default_ISR shr (0+2)
 47825                           
 47826                           ; Vector 36 : Undefined
 47827   000050  002B               	dw	ivt0x8_undefint shr (0+2)
 47828                           
 47829                           ; Vector 37 : NCO1
 47830   000052  6037               	dw	_Default_ISR shr (0+2)
 47831                           
 47832                           ; Vector 38 : CWG1
 47833   000054  6037               	dw	_Default_ISR shr (0+2)
 47834                           
 47835                           ; Vector 39 : CLC1
 47836   000056  6037               	dw	_Default_ISR shr (0+2)
 47837                           
 47838                           ; Vector 40 : INT1
 47839   000058  5F49               	dw	_INT1_ISR shr (0+2)
 47840                           
 47841                           ; Vector 41 : CMP2
 47842   00005A  6037               	dw	_Default_ISR shr (0+2)
 47843                           
 47844                           ; Vector 42 : DMA2SCNT
 47845   00005C  6037               	dw	_Default_ISR shr (0+2)
 47846                           
 47847                           ; Vector 43 : DMA2DCNT
 47848   00005E  6037               	dw	_Default_ISR shr (0+2)
 47849                           
 47850                           ; Vector 44 : DMA2OR
 47851   000060  6037               	dw	_Default_ISR shr (0+2)
 47852                           
 47853                           ; Vector 45 : DMA2A
 47854   000062  6037               	dw	_Default_ISR shr (0+2)
 47855                           
 47856                           ; Vector 46 : I2C2RX
 47857   000064  6037               	dw	_Default_ISR shr (0+2)
 47858                           
 47859                           ; Vector 47 : I2C2TX
 47860   000066  6037               	dw	_Default_ISR shr (0+2)
 47861                           
 47862                           ; Vector 48 : I2C2
 47863   000068  6037               	dw	_Default_ISR shr (0+2)
 47864                           
 47865                           ; Vector 49 : I2C2E
 47866   00006A  6037               	dw	_Default_ISR shr (0+2)
 47867                           
 47868                           ; Vector 50 : U2RX
 47869   00006C  5DA3               	dw	_UART2_rx_vect_isr shr (0+2)
 47870                           
 47871                           ; Vector 51 : U2TX
 47872   00006E  5D92               	dw	_UART2_tx_vect_isr shr (0+2)
 47873                           
 47874                           ; Vector 52 : U2E
 47875   000070  6037               	dw	_Default_ISR shr (0+2)
 47876                           
 47877                           ; Vector 53 : U2
 47878   000072  6037               	dw	_Default_ISR shr (0+2)
 47879                           
 47880                           ; Vector 54 : TMR3
 47881   000074  6037               	dw	_Default_ISR shr (0+2)
 47882                           
 47883                           ; Vector 55 : TMR3G
 47884   000076  6037               	dw	_Default_ISR shr (0+2)
 47885                           
 47886                           ; Vector 56 : TMR4
 47887   000078  6037               	dw	_Default_ISR shr (0+2)
 47888                           
 47889                           ; Vector 57 : CCP2
 47890   00007A  6037               	dw	_Default_ISR shr (0+2)
 47891                           
 47892                           ; Vector 58 : Undefined
 47893   00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 47894                           
 47895                           ; Vector 59 : CWG2
 47896   00007E  6037               	dw	_Default_ISR shr (0+2)
 47897                           
 47898                           ; Vector 60 : CLC2
 47899   000080  6037               	dw	_Default_ISR shr (0+2)
 47900                           
 47901                           ; Vector 61 : INT2
 47902   000082  5F53               	dw	_INT2_ISR shr (0+2)
 47903                           
 47904                           ; Vector 62 : Undefined
 47905   000084  002B               	dw	ivt0x8_undefint shr (0+2)
 47906                           
 47907                           ; Vector 63 : Undefined
 47908   000086  002B               	dw	ivt0x8_undefint shr (0+2)
 47909                           
 47910                           ; Vector 64 : Undefined
 47911   000088  002B               	dw	ivt0x8_undefint shr (0+2)
 47912                           
 47913                           ; Vector 65 : Undefined
 47914   00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 47915                           
 47916                           ; Vector 66 : Undefined
 47917   00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 47918                           
 47919                           ; Vector 67 : Undefined
 47920   00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 47921                           
 47922                           ; Vector 68 : Undefined
 47923   000090  002B               	dw	ivt0x8_undefint shr (0+2)
 47924                           
 47925                           ; Vector 69 : Undefined
 47926   000092  002B               	dw	ivt0x8_undefint shr (0+2)
 47927                           
 47928                           ; Vector 70 : TMR5
 47929   000094  5C22               	dw	_TMR5_ISR shr (0+2)
 47930                           
 47931                           ; Vector 71 : TMR5G
 47932   000096  6037               	dw	_Default_ISR shr (0+2)
 47933                           
 47934                           ; Vector 72 : TMR6
 47935   000098  5E73               	dw	_TMR6_ISR shr (0+2)
 47936                           
 47937                           ; Vector 73 : CCP3
 47938   00009A  6037               	dw	_Default_ISR shr (0+2)
 47939                           
 47940                           ; Vector 74 : CWG3
 47941   00009C  6037               	dw	_Default_ISR shr (0+2)
 47942                           
 47943                           ; Vector 75 : CLC3
 47944   00009E  6037               	dw	_Default_ISR shr (0+2)
 47945                           
 47946                           ; Vector 76 : Undefined
 47947   0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 47948                           
 47949                           ; Vector 77 : Undefined
 47950   0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 47951                           
 47952                           ; Vector 78 : Undefined
 47953   0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 47954                           
 47955                           ; Vector 79 : Undefined
 47956   0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 47957                           
 47958                           ; Vector 80 : CCP4
 47959   0000A8  6037               	dw	_Default_ISR shr (0+2)
 47960                           
 47961                           ; Vector 81 : CLC4
 47962   0000AA  6037               	dw	_Default_ISR shr (0+2)
 47963   0000AC                     ivt0x8_undefint:
 47964                           	callstack 0
 47965   0000AC  00FF               	reset	
 47966                           
 47967                           	psect	rparam
 47968   000001                     ___rparam_used  equ	1
 47969   000000                     ___param_bank   equ	0
 47970   000000                     __Lparam        equ	__Lrparam
 47971   000000                     __Hparam        equ	__Hrparam
 47972                           
 47973                           	psect	temp
 47974   000023                     btemp:
 47975                           	callstack 0
 47976   000023                     	ds	32
 47977   000023                     wtemp0          set	btemp
 47978   000025                     wtemp1          set	btemp+2
 47979   000027                     wtemp2          set	btemp+4
 47980   000029                     wtemp3          set	btemp+6
 47981   00002B                     wtemp4          set	btemp+8
 47982   00002D                     wtemp5          set	btemp+10
 47983   000024                     wtemp8          set	btemp+1
 47984   000023                     ttemp0          set	btemp
 47985   000026                     ttemp1          set	btemp+3
 47986   000029                     ttemp2          set	btemp+6
 47987   00002C                     ttemp3          set	btemp+9
 47988   000024                     ttemp5          set	btemp+1
 47989   000027                     ttemp6          set	btemp+4
 47990   00002B                     ttemp7          set	btemp+8
 47991   000023                     ltemp0          set	btemp
 47992   000027                     ltemp1          set	btemp+4
 47993   00002B                     ltemp2          set	btemp+8
 47994   000023                     lltemp0         set	btemp
 47995   00002B                     lltemp1         set	btemp+8
 47996   000033                     lltemp2         set	btemp+16
 47997   00003B                     lltemp3         set	btemp+24
 47998                           
 47999                           	psect	idloc
 48000                           
 48001                           ;Config register IDLOC0 @ 0x200000
 48002                           ;	unspecified, using default values
 48003   200000                     	org	2097152
 48004   200000  FFFF               	dw	65535
 48005                           
 48006                           ;Config register IDLOC1 @ 0x200002
 48007                           ;	unspecified, using default values
 48008   200002                     	org	2097154
 48009   200002  FFFF               	dw	65535
 48010                           
 48011                           ;Config register IDLOC2 @ 0x200004
 48012                           ;	unspecified, using default values
 48013   200004                     	org	2097156
 48014   200004  FFFF               	dw	65535
 48015                           
 48016                           ;Config register IDLOC3 @ 0x200006
 48017                           ;	unspecified, using default values
 48018   200006                     	org	2097158
 48019   200006  FFFF               	dw	65535
 48020                           
 48021                           ;Config register IDLOC4 @ 0x200008
 48022                           ;	unspecified, using default values
 48023   200008                     	org	2097160
 48024   200008  FFFF               	dw	65535
 48025                           
 48026                           ;Config register IDLOC5 @ 0x20000A
 48027                           ;	unspecified, using default values
 48028   20000A                     	org	2097162
 48029   20000A  FFFF               	dw	65535
 48030                           
 48031                           ;Config register IDLOC6 @ 0x20000C
 48032                           ;	unspecified, using default values
 48033   20000C                     	org	2097164
 48034   20000C  FFFF               	dw	65535
 48035                           
 48036                           ;Config register IDLOC7 @ 0x20000E
 48037                           ;	unspecified, using default values
 48038   20000E                     	org	2097166
 48039   20000E  FFFF               	dw	65535
 48040                           
 48041                           	psect	config
 48042                           
 48043                           ;Config register CONFIG1L @ 0x300000
 48044                           ;	External Oscillator Selection
 48045                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz; PFM set to high power
 48046                           ;	Reset Oscillator Selection
 48047                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 48048   300000                     	org	3145728
 48049   300000  AF                 	db	175
 48050                           
 48051                           ;Config register CONFIG1H @ 0x300001
 48052                           ;	Clock out Enable bit
 48053                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 48054                           ;	PRLOCKED One-Way Set Enable bit
 48055                           ;	PR1WAY = OFF, PRLOCK bit can be set and cleared repeatedly
 48056                           ;	Clock Switch Enable bit
 48057                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 48058                           ;	Fail-Safe Clock Monitor Enable bit
 48059                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 48060   300001                     	org	3145729
 48061   300001  FD                 	db	253
 48062                           
 48063                           ;Config register CONFIG2L @ 0x300002
 48064                           ;	MCLR Enable bit
 48065                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 48066                           ;	Power-up timer selection bits
 48067                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 48068                           ;	Multi-vector enable bit
 48069                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 48070                           ;	IVTLOCK bit One-way set enable bit
 48071                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 48072                           ;	Low Power BOR Enable bit
 48073                           ;	LPBOREN = OFF, ULPBOR disabled
 48074                           ;	Brown-out Reset Enable bits
 48075                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 48076   300002                     	org	3145730
 48077   300002  FF                 	db	255
 48078                           
 48079                           ;Config register CONFIG2H @ 0x300003
 48080                           ;	Brown-out Reset Voltage Selection bits
 48081                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 48082                           ;	ZCD Disable bit
 48083                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 48084                           ;	PPSLOCK bit One-Way Set Enable bit
 48085                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 48086                           ;	Stack Full/Underflow Reset Enable bit
 48087                           ;	STVREN = ON, Stack full/underflow will cause Reset
 48088                           ;	Debugger Enable bit
 48089                           ;	DEBUG = OFF, Background debugger disabled
 48090                           ;	Extended Instruction Set Enable bit
 48091                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 48092   300003                     	org	3145731
 48093   300003  FF                 	db	255
 48094                           
 48095                           ;Config register CONFIG3L @ 0x300004
 48096                           ;	WDT Period selection bits
 48097                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 48098                           ;	WDT operating mode
 48099                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 48100   300004                     	org	3145732
 48101   300004  9F                 	db	159
 48102                           
 48103                           ;Config register CONFIG3H @ 0x300005
 48104                           ;	WDT Window Select bits
 48105                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 48106                           ;	WDT input clock selector
 48107                           ;	WDTCCS = SC, Software Control
 48108   300005                     	org	3145733
 48109   300005  FF                 	db	255
 48110                           
 48111                           ;Config register CONFIG4L @ 0x300006
 48112                           ;	Boot Block Size selection bits
 48113                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 48114                           ;	Boot Block enable bit
 48115                           ;	BBEN = OFF, Boot block disabled
 48116                           ;	Storage Area Flash enable bit
 48117                           ;	SAFEN = OFF, SAF disabled
 48118                           ;	Application Block write protection bit
 48119                           ;	WRTAPP = OFF, Application Block not write protected
 48120   300006                     	org	3145734
 48121   300006  FF                 	db	255
 48122                           
 48123                           ;Config register CONFIG4H @ 0x300007
 48124                           ;	Boot Block Write Protection bit
 48125                           ;	WRTB = OFF, Boot Block not write-protected
 48126                           ;	Configuration Register Write Protection bit
 48127                           ;	WRTC = OFF, Configuration registers not write-protected
 48128                           ;	Data EEPROM Write Protection bit
 48129                           ;	WRTD = OFF, Data EEPROM not write-protected
 48130                           ;	SAF Write protection bit
 48131                           ;	WRTSAF = OFF, SAF not Write Protected
 48132                           ;	Low Voltage Programming Enable bit
 48133                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 48134   300007                     	org	3145735
 48135   300007  FF                 	db	255
 48136                           
 48137                           ;Config register CONFIG5L @ 0x300008
 48138                           ;	PFM and Data EEPROM Code Protection bit
 48139                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 48140   300008                     	org	3145736
 48141   300008  FF                 	db	255
 48142                           
 48143                           ;Config register CONFIG5H @ 0x300009
 48144                           ;	unspecified, using default values
 48145   300009                     	org	3145737
 48146   300009  FF                 	db	255
 48147                           tosu	equ	0x3FFF
 48148                           tosh	equ	0x3FFE
 48149                           tosl	equ	0x3FFD
 48150                           stkptr	equ	0x3FFC
 48151                           pclatu	equ	0x3FFB
 48152                           pclath	equ	0x3FFA
 48153                           pcl	equ	0x3FF9
 48154                           tblptru	equ	0x3FF8
 48155                           tblptrh	equ	0x3FF7
 48156                           tblptrl	equ	0x3FF6
 48157                           tablat	equ	0x3FF5
 48158                           prodh	equ	0x3FF4
 48159                           prodl	equ	0x3FF3
 48160                           indf0	equ	0x3FEF
 48161                           postinc0	equ	0x3FEE
 48162                           postdec0	equ	0x3FED
 48163                           preinc0	equ	0x3FEC
 48164                           plusw0	equ	0x3FEB
 48165                           fsr0h	equ	0x3FEA
 48166                           fsr0l	equ	0x3FE9
 48167                           wreg	equ	0x3FE8
 48168                           indf1	equ	0x3FE7
 48169                           postinc1	equ	0x3FE6
 48170                           postdec1	equ	0x3FE5
 48171                           preinc1	equ	0x3FE4
 48172                           plusw1	equ	0x3FE3
 48173                           fsr1h	equ	0x3FE2
 48174                           fsr1l	equ	0x3FE1
 48175                           bsr	equ	0x3FE0
 48176                           indf2	equ	0x3FDF
 48177                           postinc2	equ	0x3FDE
 48178                           postdec2	equ	0x3FDD
 48179                           preinc2	equ	0x3FDC
 48180                           plusw2	equ	0x3FDB
 48181                           fsr2h	equ	0x3FDA
 48182                           fsr2l	equ	0x3FD9
 48183                           status	equ	0x3FD8

Data Sizes:
    Strings     841
    Constant    391
    Data        1520
    BSS         2247
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     12      51
    BANK0           160      7     156
    BANK1           256      5     235
    BANK2           256      0     254
    BANK3           256      0      67
    BANK4           256      0     255
    BANK5           256      0     255
    BANK6           256      0     256
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    a	PTR const unsigned char  size(2) Largest target is 514
		 -> D$lcd(BIGRAM[512]), D@mconfig$F5154(BIGRAM[514]), dbuf(BANK1[32]), V(BIGRAM[387]), 
		 -> V$terminal(BIGRAM[160]), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), NULL(), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    ap	PTR PTR void [1] size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    block	PTR struct response_type size(1) Largest target is 9
		 -> secs_II_message@block(COMRAM[7]), 

    buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_37(CODE[12]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_38(CODE[9]), 

    byte_block	PTR unsigned char  size(2) Largest target is 312
		 -> D$message(BIGRAM[156]), H10(BANK1[91]), H12(BANK2[30]), H13(BANK1[64]), 
		 -> H14(BANK0[17]), H153(BIGRAM[312]), H17(BANK1[20]), H26(BANK2[29]), 
		 -> H33(BANK0[36]), S$message(BIGRAM[36]), 

    byte_block	PTR unsigned char  size(2) Largest target is 312
		 -> D$message(BIGRAM[156]), H10(BANK1[91]), H12(BANK2[30]), H13(BANK1[64]), 
		 -> H14(BANK0[17]), H153(BIGRAM[312]), H17(BANK1[20]), H26(BANK2[29]), 
		 -> H33(BANK0[36]), S$message(BIGRAM[36]), 

    cfmt	PTR unsigned char  size(2) Largest target is 89
		 -> msg0(CODE[89]), msg1(CODE[88]), msg2(CODE[86]), msg99(CODE[56]), 
		 -> STR_1(CODE[17]), STR_10(CODE[21]), STR_11(CODE[21]), STR_12(CODE[21]), 
		 -> STR_13(CODE[24]), STR_14(CODE[24]), STR_15(CODE[18]), STR_16(CODE[21]), 
		 -> STR_17(CODE[21]), STR_18(CODE[20]), STR_19(CODE[21]), STR_2(CODE[15]), 
		 -> STR_20(CODE[26]), STR_21(CODE[19]), STR_22(CODE[4]), STR_23(CODE[21]), 
		 -> STR_24(CODE[26]), STR_25(CODE[29]), STR_26(CODE[3]), STR_27(CODE[3]), 
		 -> STR_28(CODE[3]), STR_33(CODE[20]), STR_34(CODE[26]), STR_35(CODE[26]), 
		 -> STR_36(CODE[21]), STR_39(CODE[19]), STR_4(CODE[17]), STR_40(CODE[19]), 
		 -> STR_41(CODE[10]), STR_42(CODE[10]), STR_43(CODE[15]), STR_44(CODE[15]), 
		 -> STR_45(CODE[15]), STR_46(CODE[24]), STR_47(CODE[22]), STR_48(CODE[20]), 
		 -> STR_49(CODE[18]), STR_5(CODE[17]), STR_50(CODE[20]), STR_51(CODE[18]), 
		 -> STR_52(CODE[20]), STR_53(CODE[18]), STR_54(CODE[20]), STR_55(CODE[19]), 
		 -> STR_56(CODE[19]), STR_57(CODE[24]), STR_58(CODE[21]), STR_59(CODE[22]), 
		 -> STR_6(CODE[15]), STR_60(CODE[21]), STR_61(CODE[26]), STR_62(CODE[25]), 
		 -> STR_63(CODE[19]), STR_64(CODE[19]), STR_65(CODE[19]), STR_66(CODE[19]), 
		 -> STR_67(CODE[3]), STR_68(CODE[3]), STR_8(CODE[17]), STR_9(CODE[16]), 

    cp	PTR unsigned char  size(2) Largest target is 89
		 -> msg0(CODE[89]), msg1(CODE[88]), msg2(CODE[86]), msg99(CODE[56]), 
		 -> STR_1(CODE[17]), STR_10(CODE[21]), STR_11(CODE[21]), STR_12(CODE[21]), 
		 -> STR_13(CODE[24]), STR_14(CODE[24]), STR_15(CODE[18]), STR_16(CODE[21]), 
		 -> STR_17(CODE[21]), STR_18(CODE[20]), STR_19(CODE[21]), STR_2(CODE[15]), 
		 -> STR_20(CODE[26]), STR_21(CODE[19]), STR_22(CODE[4]), STR_23(CODE[21]), 
		 -> STR_24(CODE[26]), STR_25(CODE[29]), STR_26(CODE[3]), STR_27(CODE[3]), 
		 -> STR_28(CODE[3]), STR_33(CODE[20]), STR_34(CODE[26]), STR_35(CODE[26]), 
		 -> STR_36(CODE[21]), STR_39(CODE[19]), STR_4(CODE[17]), STR_40(CODE[19]), 
		 -> STR_41(CODE[10]), STR_42(CODE[10]), STR_43(CODE[15]), STR_44(CODE[15]), 
		 -> STR_45(CODE[15]), STR_46(CODE[24]), STR_47(CODE[22]), STR_48(CODE[20]), 
		 -> STR_49(CODE[18]), STR_5(CODE[17]), STR_50(CODE[20]), STR_51(CODE[18]), 
		 -> STR_52(CODE[20]), STR_53(CODE[18]), STR_54(CODE[20]), STR_55(CODE[19]), 
		 -> STR_56(CODE[19]), STR_57(CODE[24]), STR_58(CODE[21]), STR_59(CODE[22]), 
		 -> STR_6(CODE[15]), STR_60(CODE[21]), STR_61(CODE[26]), STR_62(CODE[25]), 
		 -> STR_63(CODE[19]), STR_64(CODE[19]), STR_65(CODE[19]), STR_66(CODE[19]), 
		 -> STR_67(CODE[3]), STR_68(CODE[3]), STR_8(CODE[17]), STR_9(CODE[16]), 

    cp	PTR unsigned char  size(2) Largest target is 514
		 -> D$lcd(BIGRAM[512]), D@mconfig$F5154(BIGRAM[514]), ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 
		 -> STR_29(CODE[6]), STR_3(CODE[6]), STR_30(CODE[6]), STR_31(CODE[6]), 
		 -> STR_32(CODE[6]), STR_37(CODE[12]), STR_38(CODE[9]), STR_69(CODE[7]), 
		 -> STR_7(CODE[6]), T(BANK6[256]), V(BIGRAM[387]), 

    D$block$header	PTR unsigned char  size(2) Largest target is 156
		 -> D$message(BIGRAM[156]), H10(BANK1[91]), H12(BANK2[30]), H13(BANK1[64]), 
		 -> H14(BANK0[17]), H17(BANK1[20]), H26(BANK2[29]), S$message(BIGRAM[36]), 

    D$block$reply	PTR unsigned char  size(2) Largest target is 312
		 -> H10(BANK1[91]), H12(BANK2[30]), H153(BIGRAM[312]), H33(BANK0[36]), 

    D$message$data$header	PTR unsigned char  size(2) Largest target is 336
		 -> D(BIGRAM[332]), D$message(BIGRAM[156]), D$message$checksum(BIGRAM[2]), H10(BANK1[91]), 
		 -> H12(BANK2[30]), H13(BANK1[64]), H14(BANK0[17]), H17(BANK1[20]), 
		 -> H26(BANK2[29]), S$message(BIGRAM[36]), 

    D$message$data$reply	PTR unsigned char  size(2) Largest target is 312
		 -> H10(BANK1[91]), H12(BANK2[30]), H153(BIGRAM[312]), H33(BANK0[36]), 

    data	PTR const unsigned char  size(2) Largest target is 387
		 -> V(BIGRAM[387]), V$terminal(BIGRAM[160]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), ring_buf2(BANK3[67]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 514
		 -> D$lcd(BIGRAM[512]), D@mconfig$F5154(BIGRAM[514]), V(BIGRAM[387]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    F17672$header	PTR unsigned char  size(2) Largest target is 156
		 -> D$message(BIGRAM[156]), H10(BANK1[91]), H12(BANK2[30]), H13(BANK1[64]), 
		 -> H14(BANK0[17]), H17(BANK1[20]), H26(BANK2[29]), S$message(BIGRAM[36]), 

    F17672$reply	PTR unsigned char  size(2) Largest target is 312
		 -> H10(BANK1[91]), H12(BANK2[30]), H153(BIGRAM[312]), H33(BANK0[36]), 

    F17702$header	PTR unsigned char  size(2) Largest target is 156
		 -> D$message(BIGRAM[156]), H10(BANK1[91]), H12(BANK2[30]), H13(BANK1[64]), 
		 -> H14(BANK0[17]), H17(BANK1[20]), H26(BANK2[29]), S$message(BIGRAM[36]), 

    F17702$reply	PTR unsigned char  size(2) Largest target is 312
		 -> H10(BANK1[91]), H12(BANK2[30]), H153(BIGRAM[312]), H33(BANK0[36]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_26(CODE[3]), STR_27(CODE[3]), STR_28(CODE[3]), 

    fmt	PTR const unsigned char  size(2) Largest target is 89
		 -> msg0(CODE[89]), msg1(CODE[88]), msg2(CODE[86]), msg99(CODE[56]), 
		 -> STR_1(CODE[17]), STR_10(CODE[21]), STR_11(CODE[21]), STR_12(CODE[21]), 
		 -> STR_13(CODE[24]), STR_14(CODE[24]), STR_15(CODE[18]), STR_16(CODE[21]), 
		 -> STR_17(CODE[21]), STR_18(CODE[20]), STR_19(CODE[21]), STR_2(CODE[15]), 
		 -> STR_20(CODE[26]), STR_21(CODE[19]), STR_22(CODE[4]), STR_23(CODE[21]), 
		 -> STR_24(CODE[26]), STR_25(CODE[29]), STR_33(CODE[20]), STR_34(CODE[26]), 
		 -> STR_35(CODE[26]), STR_36(CODE[21]), STR_39(CODE[19]), STR_4(CODE[17]), 
		 -> STR_40(CODE[19]), STR_41(CODE[10]), STR_42(CODE[10]), STR_43(CODE[15]), 
		 -> STR_44(CODE[15]), STR_45(CODE[15]), STR_46(CODE[24]), STR_47(CODE[22]), 
		 -> STR_48(CODE[20]), STR_49(CODE[18]), STR_5(CODE[17]), STR_50(CODE[20]), 
		 -> STR_51(CODE[18]), STR_52(CODE[20]), STR_53(CODE[18]), STR_54(CODE[20]), 
		 -> STR_55(CODE[19]), STR_56(CODE[19]), STR_57(CODE[24]), STR_58(CODE[21]), 
		 -> STR_59(CODE[22]), STR_6(CODE[15]), STR_60(CODE[21]), STR_61(CODE[26]), 
		 -> STR_62(CODE[25]), STR_63(CODE[19]), STR_64(CODE[19]), STR_65(CODE[19]), 
		 -> STR_66(CODE[19]), STR_67(CODE[3]), STR_68(CODE[3]), STR_8(CODE[17]), 
		 -> STR_9(CODE[16]), 

    fmt	PTR const unsigned char  size(2) Largest target is 89
		 -> msg0(CODE[89]), msg1(CODE[88]), msg2(CODE[86]), msg99(CODE[56]), 
		 -> STR_1(CODE[17]), STR_10(CODE[21]), STR_11(CODE[21]), STR_12(CODE[21]), 
		 -> STR_13(CODE[24]), STR_14(CODE[24]), STR_15(CODE[18]), STR_16(CODE[21]), 
		 -> STR_17(CODE[21]), STR_18(CODE[20]), STR_19(CODE[21]), STR_2(CODE[15]), 
		 -> STR_20(CODE[26]), STR_21(CODE[19]), STR_22(CODE[4]), STR_23(CODE[21]), 
		 -> STR_24(CODE[26]), STR_25(CODE[29]), STR_26(CODE[3]), STR_27(CODE[3]), 
		 -> STR_28(CODE[3]), STR_33(CODE[20]), STR_34(CODE[26]), STR_35(CODE[26]), 
		 -> STR_36(CODE[21]), STR_39(CODE[19]), STR_4(CODE[17]), STR_40(CODE[19]), 
		 -> STR_41(CODE[10]), STR_42(CODE[10]), STR_43(CODE[15]), STR_44(CODE[15]), 
		 -> STR_45(CODE[15]), STR_46(CODE[24]), STR_47(CODE[22]), STR_48(CODE[20]), 
		 -> STR_49(CODE[18]), STR_5(CODE[17]), STR_50(CODE[20]), STR_51(CODE[18]), 
		 -> STR_52(CODE[20]), STR_53(CODE[18]), STR_54(CODE[20]), STR_55(CODE[19]), 
		 -> STR_56(CODE[19]), STR_57(CODE[24]), STR_58(CODE[21]), STR_59(CODE[22]), 
		 -> STR_6(CODE[15]), STR_60(CODE[21]), STR_61(CODE[26]), STR_62(CODE[25]), 
		 -> STR_63(CODE[19]), STR_64(CODE[19]), STR_65(CODE[19]), STR_66(CODE[19]), 
		 -> STR_67(CODE[3]), STR_68(CODE[3]), STR_8(CODE[17]), STR_9(CODE[16]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> f(STACK[11]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> f(STACK[11]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> f(STACK[11]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> f(STACK[11]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> f(STACK[11]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> f(STACK[11]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> f(STACK[11]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> f(STACK[11]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> f(STACK[11]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> f(STACK[11]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> f(STACK[11]), NULL(NULL[0]), 

    fp$.$buffer	PTR unsigned char  size(2) Largest target is 514
		 -> D@mconfig$F5154(BIGRAM[514]), V(BIGRAM[387]), 

    fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), NULL(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    k	PTR unsigned char  size(2) Largest target is 312
		 -> D$message(BIGRAM[156]), H10(BANK1[91]), H12(BANK2[30]), H13(BANK1[64]), 
		 -> H14(BANK0[17]), H153(BIGRAM[312]), H17(BANK1[20]), H26(BANK2[29]), 
		 -> H33(BANK0[36]), S$message(BIGRAM[36]), 

    m_link	PTR enum E17017 size(2) Largest target is 387
		 -> V(BIGRAM[387]), 

    m_protocol@b_block	PTR unsigned char  size(2) Largest target is 257
		 -> H254(BIGRAM[257]), 

    msg_data	PTR unsigned char  size(2) Largest target is 257
		 -> H254(BIGRAM[257]), 

    msg_data	PTR unsigned char  size(2) Largest target is 257
		 -> H254(BIGRAM[257]), 

    p	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), ring_buf2(BANK3[67]), 

    r_link	PTR enum E17017 size(2) Largest target is 387
		 -> V(BIGRAM[387]), 

    r_protocol@b_block	PTR unsigned char  size(2) Largest target is 257
		 -> H254(BIGRAM[257]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 514
		 -> D$lcd(BIGRAM[512]), D@mconfig$F5154(BIGRAM[514]), 

    s	PTR const unsigned char  size(2) Largest target is 514
		 -> D$lcd(BIGRAM[512]), D@mconfig$F5154(BIGRAM[514]), dbuf(BANK1[32]), V(BIGRAM[387]), 
		 -> V$terminal(BIGRAM[160]), 

    s	PTR unsigned char  size(2) Largest target is 514
		 -> D$lcd(BIGRAM[512]), D@mconfig$F5154(BIGRAM[514]), V(BIGRAM[387]), 

    s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    s	PTR unsigned char  size(2) Largest target is 514
		 -> D$lcd(BIGRAM[512]), D@mconfig$F5154(BIGRAM[514]), ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 
		 -> STR_29(CODE[6]), STR_3(CODE[6]), STR_30(CODE[6]), STR_31(CODE[6]), 
		 -> STR_32(CODE[6]), STR_37(CODE[12]), STR_38(CODE[9]), STR_7(CODE[6]), 
		 -> T(BANK6[256]), V(BIGRAM[387]), 

    S$block$header	PTR unsigned char  size(2) Largest target is 156
		 -> D$message(BIGRAM[156]), H10(BANK1[91]), H12(BANK2[30]), H13(BANK1[64]), 
		 -> H14(BANK0[17]), H17(BANK1[20]), H26(BANK2[29]), S$message(BIGRAM[36]), 

    S$block$reply	PTR unsigned char  size(2) Largest target is 312
		 -> H10(BANK1[91]), H12(BANK2[30]), H153(BIGRAM[312]), H33(BANK0[36]), 

    S$message$data$header	PTR unsigned char  size(2) Largest target is 480
		 -> D$message(BIGRAM[156]), H10(BANK1[91]), H12(BANK2[30]), H13(BANK1[64]), 
		 -> H14(BANK0[17]), H17(BANK1[20]), H26(BANK2[29]), S(BIGRAM[460]), 
		 -> S$message(BIGRAM[36]), S$message$checksum(BIGRAM[2]), 

    S$message$data$reply	PTR unsigned char  size(2) Largest target is 312
		 -> H10(BANK1[91]), H12(BANK2[30]), H153(BIGRAM[312]), H33(BANK0[36]), 

    S1867spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    S1867spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    S3224response_type$header	PTR unsigned char  size(2) Largest target is 156
		 -> D$message(BIGRAM[156]), H10(BANK1[91]), H12(BANK2[30]), H13(BANK1[64]), 
		 -> H14(BANK0[17]), H17(BANK1[20]), H26(BANK2[29]), S$message(BIGRAM[36]), 

    S3224response_type$reply	PTR unsigned char  size(2) Largest target is 312
		 -> H10(BANK1[91]), H12(BANK2[30]), H153(BIGRAM[312]), H33(BANK0[36]), 

    S5667$buffer	PTR unsigned char  size(2) Largest target is 514
		 -> D@mconfig$F5154(BIGRAM[514]), V(BIGRAM[387]), 

    S5667$source	PTR const unsigned char  size(2) Largest target is 0

    ?_secs_II_message$header	PTR unsigned char  size(2) Largest target is 156
		 -> D$message(BIGRAM[156]), H10(BANK1[91]), H12(BANK2[30]), H13(BANK1[64]), 
		 -> H14(BANK0[17]), H17(BANK1[20]), H26(BANK2[29]), S$message(BIGRAM[36]), 

    ?_secs_II_message$reply	PTR unsigned char  size(2) Largest target is 312
		 -> H10(BANK1[91]), H12(BANK2[30]), H153(BIGRAM[312]), H33(BANK0[36]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 514
		 -> D$lcd(BIGRAM[512]), D@mconfig$F5154(BIGRAM[514]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), ring_buf2(BANK3[67]), 

    spi_link$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    spi_link$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 514
		 -> D$lcd(BIGRAM[512]), D@mconfig$F5154(BIGRAM[514]), V(BIGRAM[387]), 

    strPtr	PTR unsigned char  size(2) Largest target is 514
		 -> D$lcd(BIGRAM[512]), D@mconfig$F5154(BIGRAM[514]), V(BIGRAM[387]), 

    strPtr	PTR unsigned char  size(2) Largest target is 514
		 -> D$lcd(BIGRAM[512]), D@mconfig$F5154(BIGRAM[514]), V(BIGRAM[387]), 

    t_link	PTR enum E17017 size(2) Largest target is 387
		 -> V(BIGRAM[387]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), ring_buf2(BANK3[67]), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), NULL(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), NULL(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), NULL(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), NULL(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), NULL(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), NULL(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  360213
          _MyeaDogM_WriteStringAtPos
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                         _check_help
                _eaDogM_WriteCommand
                      _get_vterm_ptr
                         _hb_message
                       _init_display
                         _m_protocol
                      _mode_lamp_dim
                         _r_protocol
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                         _t_protocol
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _t_protocol                                           3     1      2   50232
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                   _UART1_put_buffer
                    _secs_II_message
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_send                                           10     5      5     913
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART1_put_buffer
                        _UART2_Write
                  _UART2_is_tx_ready
                   _UART2_put_buffer
                     _block_checksum
 ---------------------------------------------------------------------------------
 (3) _block_checksum                                       8     4      4     158
 ---------------------------------------------------------------------------------
 (3) _UART2_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART2_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART2_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _UART1_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _secs_II_message                                     13     6      7   48661
                   _DATAEE_WriteByte
                         _StartTimer
                          _TimerDone
                       _display_info
                _format_display_text
                       _gem_messages
                          _parse_sid
                        _s10f1_opcmd
                        _s6f11_opcmd
                  _sequence_messages
                   _set_display_info
              _set_temp_display_help
                    _terminal_format
                     _vterm_sequence
 ---------------------------------------------------------------------------------
 (3) _vterm_sequence                                       0     0      0   15770
                      _get_vterm_ptr
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _s6f11_opcmd                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _s10f1_opcmd                                          0     0      0   15726
                           _parse_ll
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _parse_ll                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _parse_sid                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _gem_messages                                         2     0      2     132
                         _StartTimer
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _r_protocol                                           3     1      2   34014
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                             _WaitMs
                       _run_checksum
            _secs_II_monitor_message
                     _secs_gem_state
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _m_protocol                                           3     1      2   34412
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                  _UART1_is_rx_ready
                         _UART2_Read
                  _UART2_is_rx_ready
                             _WaitMs
                       _run_checksum
            _secs_II_monitor_message
                     _secs_gem_state
 ---------------------------------------------------------------------------------
 (2) _secs_gem_state                                       2     0      2   16385
                         _StartTimer
                          _TimerDone
                _format_display_text
                  _sequence_messages
                   _set_display_info
                    _terminal_format
 ---------------------------------------------------------------------------------
 (3) _terminal_format                                      1     0      1   15757
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sequence_messages                                    1     0      1      66
                         _StartTimer
 ---------------------------------------------------------------------------------
 (3) _format_display_text                                 10     8      2     328
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _secs_II_monitor_message                              6     2      4   16734
                          _ee_logger
 ---------------------------------------------------------------------------------
 (3) _ee_logger                                            8     2      6   16080
                   _DATAEE_WriteByte
                         _StartTimer
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3      90
 ---------------------------------------------------------------------------------
 (2) _run_checksum                                         2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _UART2_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART2_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0     388
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2     168
                             _memset
 ---------------------------------------------------------------------------------
 (1) _hb_message                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   15899
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _check_help                                           1     0      1   96233
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   47870
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (3) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                    _CLC1_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                     _DSM_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      66
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DSM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      22
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (1) _MyeaDogM_WriteStringAtPos                            4     0      4   80129
                          _TimerDone
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                         _update_lcd
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   32232
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   31968
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   15868
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   16007
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3     292
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                               8     2      6     137
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   15501
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             33    15     18   15726
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   15294
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           14     8      6   14980
                               _ctoa
                               _dtoa
                              _fputc
                               _otoa
                 _read_prec_or_width
                               _stoa
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                18    11      7    2325
                                _pad
 ---------------------------------------------------------------------------------
 (7) _utoa                                                12     6      6    2303
                            ___lldiv
                            ___llmod
                                _pad
 ---------------------------------------------------------------------------------
 (8) ___llmod                                              9     1      8     159
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             13     5      8     162
 ---------------------------------------------------------------------------------
 (7) _stoa                                                12     8      4    1060
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _read_prec_or_width                                   7     3      4     180
 ---------------------------------------------------------------------------------
 (7) _otoa                                                13     7      6    2056
                                _pad
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                15     9      6    2885
                            ___aldiv
                            ___almod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                  8     2      6    1617
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___almod                                             10     2      8     296
 ---------------------------------------------------------------------------------
 (8) ___aldiv                                             14     6      8     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3     828
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (4) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (4) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT0_ISR                                            2     2      0       0
                                              0 COMRAM     2     2      0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT0_CallBack                                       0     0      0       0
                                NULL *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            2     2      0       0
                                              2 COMRAM     2     2      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0       0
                                NULL *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT2_ISR                                            2     2      0       0
                                              4 COMRAM     2     2      0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT2_CallBack                                       0     0      0       0
                                NULL *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _ADCC_ISR                                            2     2      0       0
                                              6 COMRAM     2     2      0
                                NULL *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (15) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _UART1_tx_vect_isr                                   2     2      0       0
                                              8 COMRAM     2     2      0
                                NULL *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (15) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _UART1_rx_vect_isr                                   2     2      0       0
                                             10 COMRAM     2     2      0
                                NULL *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (15) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _UART2_tx_vect_isr                                   2     2      0       0
                                              0 BANK0      2     2      0
                                NULL *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (15) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _UART2_rx_vect_isr                                   2     2      0       0
                                              2 BANK0      2     2      0
                                NULL *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (15) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR6_ISR                                            3     3      0      90
                                              4 BANK0      3     3      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR6_CallBack                                       0     0      0      90
                                NULL *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            5     5      0      90
                                              0 BANK1      5     5      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                                NULL *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MyeaDogM_WriteStringAtPos
     _TimerDone
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _ctoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _dtoa
                 ___aldiv
                 ___almod
                 _abs
                 _pad
                   _fputc
                   _fputs
                     _fputc
                   _strlen
               _fputc
               _otoa
                 _pad
               _read_prec_or_width
               _stoa
                 _fputc
               _utoa
                 ___lldiv
                 ___llmod
                 _pad
               _xtoa
                 _pad
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
         _ringBufS_flush
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _get_vterm_ptr
     _sprintf
       _vfprintf
     _update_lcd
       _eaDogM_WriteStringAtPos
       _wait_lcd_done
     _wait_lcd_done
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLC1_Initialize
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _DSM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
     _update_lcd
     _vterm_dump
       _WaitMs
       _eaDogM_WriteStringAtPos
       _get_vterm_ptr
       _sprintf
       _wait_lcd_done
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
   _get_vterm_ptr
   _hb_message
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _m_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_is_rx_ready
     _UART2_Read
     _UART2_is_rx_ready
     _WaitMs
     _run_checksum
     _secs_II_monitor_message
       _ee_logger
         _DATAEE_WriteByte
         _StartTimer
         _sprintf
     _secs_gem_state
       _StartTimer
       _TimerDone
       _format_display_text
         _strlen
       _sequence_messages
         _StartTimer
       _set_display_info
       _terminal_format
         _sprintf
   _mode_lamp_dim
   _r_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _WaitMs
     _run_checksum
     _secs_II_monitor_message
     _secs_gem_state
   _set_display_info
   _set_vterm
   _sprintf
   _srand
   _t_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_put_buffer
     _secs_II_message
       _DATAEE_WriteByte
       _StartTimer
       _TimerDone
       _display_info
       _format_display_text
       _gem_messages
         _StartTimer
       _parse_sid
       _s10f1_opcmd
         _parse_ll
         _sprintf
       _s6f11_opcmd
       _sequence_messages
       _set_display_info
       _set_temp_display_help
       _terminal_format
       _vterm_sequence
         _get_vterm_ptr
         _sprintf
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _UART2_Write
       _UART2_is_tx_ready
       _UART2_put_buffer
       _block_checksum
   _update_lcd

 _INT0_ISR (ROOT)
   _INT0_CallBack
     NULL(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     NULL(Fake) *
     _INT1_DefaultInterruptHandler *

 _INT2_ISR (ROOT)
   _INT2_CallBack
     NULL(Fake) *
     _INT2_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   NULL(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   NULL(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   NULL(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   NULL(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   NULL(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     NULL(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     NULL(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0    2262     27.6%
BITBIGSFRlh       1448      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0     256    100.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0     255     99.6%
BITBANK4           256      0       0      0.0%
BANK4              256      0     255     99.6%
BITBANK3           256      0       0      0.0%
BANK3              256      0      67     26.2%
BITBANK2           256      0       0      0.0%
BANK2              256      0     254     99.2%
BITBANK1           256      0       0      0.0%
BANK1              256      5     235     91.8%
BITBIGSFRlllllh    227      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      7     156     97.5%
BITBIGSFRllllll    157      0       0      0.0%
BITBIGSFRh          80      0       0      0.0%
BITCOMRAM           63      0       0      0.0%
COMRAM              63     12      51     81.0%
BITBIGSFRlllh       61      0       0      0.0%
BITBIGSFRllh        36      0       0      0.0%
BITBIGSFRllllh      31      0       0      0.0%
STACK                0      0     122      0.0%
DATA                 0      0    3913      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Jan 14 06:51:42 2025

                   _SPI1_Exchange8bit 7EB0              __end_of_set_display_info 7EB0  
                                   _D 0ACE                                     _S 0902  
                                   _T 0600                                     _V 0C1A  
    __end_of_TMR5_SetInterruptHandler 7C5A             __end_of_UART2_is_rx_ready 80C8  
           __end_of_UART2_is_tx_ready 80BC                                   _H10 0100  
                                 _H12 02C3                                   _H13 015B  
                                 _H14 00E4                                   _H17 019B  
                                 _H33 00C0                                   _H26 02E1  
                                 l200 801E                                   l711 7764  
                                 l609 7A20                                   l729 7A4C  
                                 l589 76E4                                   l863 7EBE  
                                 _GIE 1FE97                                   _abs 78F2  
                                 _pad 6360                                   fsr0 3FE9  
                                 fsr2 3FD9                       _TMR2_Initialize 7F7C  
                                 prod 3FF3                                   tosl 3FFD  
                                 wreg 3FE8                         _INT0_CallBack 7DBA  
                        _run_checksum 7D72                    _UART1_Transmit_ISR 79FA  
                 __end_of_s10f1_opcmd 4A32                         _INT1_CallBack 7DDE  
                                _H153 0D9D                                  _H254 0ED5  
                                l1140 7748                                  l2005 47E8  
                                l2022 6F62                                  l1080 6F3A  
                                l2200 5DF8                                  l1402 1242  
                                l2108 551C                                  l2124 20B2  
                                l1404 12C6                                  l2046 6FDA  
                                l1406 12D0                                  l2039 6FC8  
                                l2233 6036                                  l1433 1824  
                                l3202 4C92                                  l1426 16F6  
                                l1419 157C                                  l2180 1EBE  
                                l2253 50CA                                  l1429 1732  
                                l2182 1EDA                                  l1446 188E  
                                l2183 1EF6                                  l3240 4EA2  
                                l2184 1F12                                  l2433 7EAC  
                                l1465 18BA                                  l1393 10E6  
                                l2186 1F52                                  l1386 0F8C  
                                l1378 0DB8                                  l1395 117E  
                                l1548 72D4                                  l2380 4C52  
                                l3165 5E78                                  l3149 6398  
                                l3309 02F4                                  l1821 2174  
                                l3255 37EE                                  l3264 390E  
                                l2384 662C                                  l2296 7942  
                                l2376 4AE8                                  l3177 3DF4  
                                l1690 6A3E                                  l3178 3E5A  
                                l3381 5CD6                                  l1694 6DF8  
                                l1942 362C                                  l1928 345C  
                                l3369 7924                                  l3298 0D6A  
                                l1963 457E                                  l1991 3ABE  
                                l1887 2C8C                                  l1985 73B6  
                                l1994 3CE6                                  l1996 3D9E  
                                _HC33 FB2F                                  l7512 526E  
                                l7530 5320                                  l7506 5242  
                                l8330 6F6A                                  l9220 77CA  
                                l8412 7784                                  l7518 529E  
                                l7550 5558                                  l7622 790A  
                                l8334 6F72                                  l8414 7786  
                                l7456 6E26                                  l8282 7DB2  
                                l7458 6E48                                  l7490 620E  
                                l8370 7704                                  l8602 6FE4  
                                l8338 6FB0                                  l9244 778E  
                                l8372 7706                                  l9270 74F8  
                                l7566 560C                                  l7558 55A0  
                                l7478 618C                                  l7590 688A  
                                l7582 681E                                  l8448 794C  
                                l9328 7D7E                                  l8544 3D7C  
                                l8552 3D86                                  l9274 7522  
                                l8802 54F4                                  l8466 6744  
                                l8804 5506                                  l7942 5A32  
                                l8590 58FC                                  l8582 584C  
                                l8592 5910                                  l7938 59DC  
                                l8588 58DC                                  l9902 453E  
                                l9910 456C                                  l9904 4566  
                                l8786 5460                                  l8778 53AC  
                                l9924 7822                                  STR_1 FF8A  
                                l9928 783A                                  l9872 4468  
                                l9864 43B2                                  STR_2 FFBA  
                                STR_3 FFEF                                  l9890 44EA  
                                STR_4 FF68                                  STR_5 FF79  
                                l9884 44BC                                  l9876 4482  
                                STR_6 FFBA                                  STR_7 FFEF  
                                l9894 4504                                  l9886 44E4  
                                STR_8 FF57                                  STR_9 FF9B  
                                _LATA 3FBA                                  _LATB 3FBB  
                                _LATC 3FBC                                  _LATD 3FBD  
                                _LATE 3FBE                                  u4010 523C  
                                _LATF 3FBF                                  u4030 526A  
                                u4110 5552                                  u4040 5298  
                                u4200 6818                                  u4050 52BA  
                                u4130 5580                                  u4210 683A  
                                _T2PR 3FAB                                  u4140 559A  
                                u4070 5348                                  u4150 55BC  
                                u4230 68B2                                  u4090 5372  
                                u4170 5634                                  u5220 6EFA  
                                u4190 565E                                  u5410 67E2  
                                u6130 4392                                  _T6PR 3F93  
                                u5228 6EFC                                  u5420 3AD8  
                                _PMD0 39C0                                  u5245 6F4A  
                                _PMD1 39C1                                  u5246 6F4C  
                                u5510 5936                                  u5430 3AF6  
                                _PMD2 39C2                                  _PMD3 39C3  
                                u8000 3F9E                                  u5440 3B14  
                                _PMD4 39C4                                  _PMD5 39C5  
                                u5450 3B32                                  _PMD6 39C6  
                                u8011 3FB6                                  _PMD7 39C7  
                                u8020 3FCC                                  u5460 3B50  
                                u8021 3FCA                                  u8030 3FE0  
                                u8110 4DA2                                  u5470 3B6E  
                                u5375 75AC                                  u5711 5402  
                                u8040 3FE6                                  u8120 4DB6  
                                u3960 6186                                  u5481 3CF8  
                                u5721 54B6                                  u8130 4DBC  
                                u3970 61A8                                  u8150 4DCE  
                                u4950 5A74                                  u3990 6236  
                                u5750 7030                                  u8311 4FDA  
                                u8080 4D5C                                  u8240 423E  
                                u8320 4FF0                                  u9200 2000  
                                u8321 4FEE                                  u8090 4D74  
                                u8330 5004                                  u9050 5160  
                                u8180 4134                                  u8340 500A  
                                u9140 1CDC                                  u8085 4D4E  
                                u8270 42F2                                  u8430 3980  
                                u9150 1CFE                                  u8247 4230  
                                u5775 7064                                  u8440 39A0  
                                u5776 7066                                  u5768 7032  
                                u7810 5C5C                                  u8370 381E  
                                u9218 2002                                  u9170 1D74  
                                u9090 19F8                                  u8187 4126  
                                u8451 39B8                                  u8435 3972  
                                u8371 3818                                  u8460 39CE  
                                u9420 6048                                  u9180 1D96  
                                u8461 39CC                                  u9405 2F8E  
                                u8470 39E2                                  u9406 2F90  
                                u7920 3DB6                                  u8480 39E8  
                                u9096 19FA                                  u9426 604A  
                                u8810 4862                                  u8388 3820  
                                u7790 5BE0                                  u8910 49DC  
                                u8830 48B6                                  u9551 3598  
                                u8760 6BD0                                  u9385 2F6E  
                                u7970 3E10                                  u7938 3DB8  
                                u9386 2F70                                  u8930 4A14  
                                u8850 48FA                                  _PLLR 1CEE0  
                                u9395 2F7E                                  u9396 2F80  
                                u8870 4950                                  u8790 4844  
                                u8890 49A6                                  u9965 2642  
                                u9966 2644                                  u9975 2652  
                                u9976 2654                                  u9985 2662  
                                u9986 2664                                  _WPUA 3A41  
                                _WPUB 3A51                                  _WPUC 3A61  
                                _WPUD 3A71                                  _WPUE 3A81  
                                _WPUF 3A91                         _INT2_CallBack 7E02  
                    __end_of_ADCC_ISR 74F2                                  _dbuf 01C6  
                                _ctoa 5E02                                  _main 0D74  
                                _dtoa 3DA2                                  _msg0 FB77  
                                _msg1 FBD0                                  _msg2 FC28  
                                _seed 00BC                                  _prec 01C3  
                                _otoa 4C56                                  _nout 01BF  
                                fsr0h 3FEA                                  fsr1h 3FE2  
                                indf0 3FEF                                  fsr2h 3FDA  
                                fsr0l 3FE9                                  indf1 3FE7  
                                indf2 3FDF                                  fsr1l 3FE1  
                                fsr2l 3FD9                                  _stoa 4070  
                                btemp 0023                                  _utoa 4E66  
                                _xtoa 37B2                                  prodh 3FF4  
                                prodl 3FF3                                  start 00AE  
                     _timer5ReloadVal 0007             __end_of_SPI1_Exchange8bit 7ECE  
                   _UART1_rx_vect_isr 7604                          ___param_bank 0000  
                  ?_UART1_rx_vect_isr 0043                      __end_of_INT0_ISR 7D22  
                    __end_of_INT1_ISR 7D4A                      __end_of_INT2_ISR 7D72  
            __end_of_ringBufS_put_dma 6A46         __end_of_OSCILLATOR_Initialize 8024  
                               l10012 7A1C                                 l10034 7A48  
                               l10060 7730                                 l12000 074E  
                               l12012 0840                                 l12004 07B8  
                               l12022 08C0                                 l12006 07E0  
                               l12032 0924                                 l12016 086E  
                               l12008 0812                                 l12024 08FA  
                               l12120 6B5C                                 l12112 6C9C  
                               l12034 0968                                 l12042 0A1A  
                               l12050 0A76                                 l12202 47C2  
                               l12036 09D0                                 l12044 0A42  
                               l12108 6C62                                 l12300 4988  
                               l12046 0A72                                 l12118 6B1A  
                               l13110 2E3A                                 l13102 2DE8  
                               l12400 5CEC                                 l12304 498E  
                               l12240 4870                                 l12232 484A  
                               l12224 482C                                 l12082 0C9A  
                               l12066 0B7A                                 l12058 0B2E  
                               l13114 2E6A                                 l13106 2E0C  
                               l12322 49F6                                 l12314 49C4  
                               l12250 489E                                 l11540 6CEC  
                               l11604 3DE4                                 l12092 0CFE  
                               l12076 0C36                                 l13212 60E4  
                               l13220 613C                                 l13204 608A  
                               l13060 2CC6                                 l12244 4878  
                               l11550 638A                                 l13214 611C  
                               l12510 50BE                                 l13142 2F26  
                               l13126 2EE2                                 l13038 2C28  
                               l12326 49FC                                 l12262 48C6  
                               l12246 4898                                 l12238 4868  
                               l13302 3680                                 l11528 5BEC  
                               l11544 6D2A                                 l11624 3E78  
                               l11616 3E30                                 l11720 40EE  
                               l12088 0CF4                                 l13208 60D0  
                               l12192 458A                                 l12520 50DC  
                               l12512 50C2                                 l13128 2EE6  
                               l13072 2D0E                                 l12280 4912  
                               l12256 48BC                                 l13312 36B6  
                               l11570 5E26                                 l11562 642A  
                               l11554 63A2                                 l11706 4E1C  
                               l12098 0D16                                 l12178 6BEE  
                               l12426 6566                                 l12194 4618  
                               l12530 510A                                 l12514 50C6  
                               l13090 2D8C                                 l13074 2D24  
                               l12282 4932                                 l12274 4900  
                               l13330 3726                                 l13322 36F8  
                               l13250 3502                                 l13234 3494  
                               l11572 5E4A                                 l11628 3E94  
                               l11740 41DA                                 l11716 40C2  
                               l11900 0096                                 l12452 5F58  
                               l12196 46A6                                 l12524 50E2  
                               l13404 221E                                 l13172 3014  
                               l13076 2D38                                 l12292 4956  
                               l12276 4908                                 l12268 48E2  
                               l12380 2962                                 l12372 27B6  
                               l13332 372E                                 l13324 3702  
                               l13260 354C                                 l13340 374C  
                               PRLOCK 39EF                                 l11590 5F06  
                               l11582 5E82                                 l11558 63DE  
                               l11654 4026                                 l11638 3F8A  
                               l11750 4290                                 l11742 4202  
                               l11718 40CC                                 l11830 38A4  
                               l11822 3860                                 l12462 5F90  
                               l12454 5F86                                 l12198 4734  
                               l12550 5158                                 l12518 50CE  
                               l13510 24F6                                 l13502 24B4  
                               l13174 3018                                 l13166 2FEC  
                               l13094 2DAA                                 l12294 495E  
                               l12286 4938                                 l12382 29C4  
                               l12374 2848                                 l12630 1A7C  
                               l12622 1A5A                                 l13270 35A4  
                               l13342 3796                                 l11576 5E6A  
                               l11736 419E                                 l11728 4168  
                               l11808 37DE                                 l11904 009E  
                               l12472 5FF8                                 l12464 5FA2  
                               l12448 5F50                                 l12560 516C  
                               l12528 50F6                                 l13352 20C0  
                               l12384 2A3E                                 l12376 28A6  
                               l12392 2BDC                                 l12720 1C4E  
                               l12624 1A62                                 l13336 3738  
                               l13328 3722                                 l13280 35FA  
                               l13248 34F0                                 l11586 5EBE  
                               l11674 4CC2                                 l11666 4C82  
                               l11754 42CC                                 l11746 426A  
                               l11818 384C                                 l11922 0190  
                               l11906 00E2                                 l12474 600A  
                               l12482 6014                                 l12554 5164  
                               l12490 5056                                 l13530 25C4  
                               l13514 2524                                 l13506 24D2  
                               l13418 227C                                 l13178 3024  
                               l13186 3036                                 l12298 4968  
                               l12386 2AB8                                 l12378 2904  
                               l12810 1E30                                 l12650 1AF8  
                               l12634 1A94                                 l13266 3578  
                               l11932 0228                                 l11916 0128  
                               l13612 4AB8                                 l12572 5178  
                               l12564 5170                                 l12556 5168  
                               l13460 239A                                 l13452 233C  
                               l13444 22FA                                 l13428 22A2  
                               l13188 3080                                 l12388 2B3A  
                               l12740 1C74                                 l12636 1AA6  
                               l13292 3652                                 l11686 4D60  
                               l11774 4ECE                                 l11838 38F0  
                               l11846 3984                                 l11950 0302  
                               l11942 02D0                                 l12486 6020  
                               l12574 519C                                 l13518 2554  
                               l13470 2406                                 l13390 21C0  
                               l13366 211A                                 l12902 2016  
                               l12830 1E74                                 l12718 1C3C  
                               l12662 1B42                                 l11784 4FB0  
                               l11768 4E92                                 l11936 027E  
                               l11880 0062                                 l13624 4BD4  
                               l12496 507C                                 l13544 2602  
                               l13528 25C0                                 l13472 240A  
                               l13456 236A                                 l13448 2318  
                               l12904 205A                                 l12808 1E18  
                               l12744 1C80                                 l12656 1B1E  
                               l13296 3674                                 l11866 3A6A  
                               l11970 04B2                                 l11954 0308  
                               l11882 0066                                 l12586 51C8  
                               l12578 51AC                                 l12594 51DC  
                               l13570 26DC                                 l12826 1E3C  
                               l12770 1D9C                                 l12754 1D0E  
                               l12746 1CBA                                 l12762 1D32  
                               l12690 1BD2                                 l13802 1408  
                               l13730 1064                                 l11964 03A2  
                               l11956 0350                                 l11892 008A  
                               l11884 007E                                 l12596 51F4  
                               l13572 26E4                                 l13564 26B8  
                               l12924 207C                                 l12828 1E6C  
                               l12764 1D52                                 l12692 1BF0  
                               l12676 1B8C                                 l12940 2088  
                               l13900 18F6                                 l13804 1458  
                               l11966 03E4                                 l11982 05A2  
                               l11974 051C                                 l13574 26E8  
                               l13486 245C                                 l13582 270C  
                               l12846 1ED2                                 l13830 14D6  
                               l11968 044E                                 l11976 0544  
                               l11896 0090                                 l11888 0084  
                               l13576 26F0                                 l13568 26D8  
                               l13584 2756                                 l12872 1F2E  
                               l13760 118E                                 l13744 1124  
                               l13728 1012                                 l11994 0644  
                               l13578 26F8                                 l12786 1DEC  
                               l12778 1DC4                                 l12698 1C16  
                               l13906 1994                                 l13682 0DEE  
                               l11996 0680                                 l12892 1F7C  
                               l13852 15E2                                 l13780 128C  
                               l13764 11AA                                 l13756 1186  
                               l13676 0DA2                                 l11998 06EA  
                               l13918 19CE                                 l13870 173C  
                               l13862 16E6                                 l13854 165C  
                               l13846 1572                                 l13790 1356  
                               l13678 0DAA                                 l13872 176C  
                               l13768 11BA                                 l13792 138C  
                               l13880 182E                                 l12898 1FF2  
                               l13882 185A                                 l13892 18C2  
                               l13876 17AA                                 l13888 1896  
                     __end_of___aldiv 539C                                 _ADCAP 3EF5  
                               _ADACT 3EFE                       __end_of___almod 5688  
                               _ADCLK 3EFF                                 _ADPCH 3EF1  
                               _ADREF 3EFD                                 STR_10 FE5E  
                               STR_11 FE1F                                 STR_12 FE0A  
                               STR_20 FD21                                 STR_21 FEFC  
                               STR_13 FD9C                                 STR_30 FFEF  
                               STR_22 FFF5                                 STR_14 FD84  
                               STR_31 FFEF                                 STR_15 FF45  
                               STR_23 FE34                                 STR_40 FED6  
                               STR_24 FD21                                 STR_32 FFEF  
                               STR_16 FE49                                 STR_17 FE5E  
                               STR_41 FFD5                                 STR_33 FE9B  
                               STR_25 FCB6                                 STR_42 FFD5  
                               STR_26 FFFC                                 STR_18 FEAF  
                               STR_50 FE73                                 STR_34 FD07  
                               STR_19 FE49                                 STR_27 FFF9  
                               STR_43 FFAB                                 STR_51 FF21  
                               STR_35 FCED                                 STR_52 FE73  
                               STR_60 FDE0                                 STR_44 FFAB  
                               STR_36 FDF5                                 STR_45 FFAB  
                               STR_29 FFEF                                 STR_37 FFC9  
                               STR_53 FF0F                                 STR_61 FCD3  
                               STR_54 FE73                                 STR_38 FFDF  
                               STR_46 FD54                                 STR_62 FD3B  
                               STR_55 FED6                                 STR_39 FED6  
                               STR_63 FEC3                                 STR_47 FDCA  
                               STR_64 FEC3                                 STR_56 FEE9  
                               STR_48 FE87                                 _ADRPT 3EEC  
                               STR_65 FEC3                                 STR_49 FF33  
                               STR_57 FD6C                                 STR_66 FEC3  
                               STR_58 FDE0                                 STR_67 FFFC  
                               STR_59 FDB4                                 STR_68 FFFC  
                               STR_69 FFE8                       __end_of___lldiv 6260  
                               u10070 4C3A                                 u10088 4C3C  
                     __end_of___llmod 68DC                                 _U1P1H 3DED  
                               _U1P2H 3DEF                                 _U1P1L 3DEC  
                               _U1P3H 3DF1                                 _T2CON 3FAC  
                               _U1P2L 3DEE                                 _U1P3L 3DF0  
                               _U2P1L 3DD4                                 _U2P2L 3DD6  
                               _U2P3L 3DD8                                 _T5CLK 3F9D  
                               _T2HLT 3FAD                                 _T5CON 3F9A  
                               _T6CON 3F94                                 _T6HLT 3F95  
                               _T2TMR 3FAA                                 _U1UIR 3DF8  
                               _T2RST 3FAF                                 _U1RXB 3DE8  
                               _U2UIR 3DE0                                 _U1TXB 3DEA  
                               _U2RXB 3DD0                                 _U2TXB 3DD2  
                               _T6TMR 3F92                                 _T6RST 3F97  
                 ??_UART1_rx_vect_isr 004D                                 _ISRPR 39F1  
                               _OSCEN 39DD               secs_gem_state@equipment 0009  
                               _TMR5H 3F99                                 _TMR5L 3F98  
                               _TRISA 3FC2                                 _TRISB 3FC3  
                               _TRISC 3FC4                                 _TRISD 3FC5  
                               _TRISE 3FC6                                 _TRISF 3FC7  
                         _Default_ISR 80DC                     _UART1_tx_vect_isr 75C0  
                    __end_of_TMR5_ISR 70EE                          _DMA1CON0bits 3BFC  
                    __end_of_TMR6_ISR 79FA                          _DMA1CON1bits 3BFD  
                  r_protocol@rxData_l 000D                                 _flags 01C5  
                               _msg99 FC7E                                 _fputc 5BBC  
                               _fputs 6CDC                    ?_UART1_tx_vect_isr 0043  
                               _srand 7AA2                                 _width 01C1  
                               _putch 7F96              _INT1_SetInterruptHandler 7C82  
                               pclath 3FFA                                 pclatu 3FFB  
                               tablat 3FF5                                 ltemp0 0023  
                               ltemp1 0027                                 ltemp2 002B  
                               plusw0 3FEB                                 plusw1 3FE3  
                               plusw2 3FDB                                 ttemp0 0023  
                               ttemp1 0026                                 ttemp2 0029  
                               ttemp3 002C                                 ttemp5 0024  
                               ttemp6 0027                                 ttemp7 002B  
                      _secs_gem_state 5054                                 status 3FD8  
 __end_of_UART1_SetRxInterruptHandler 7BE2           _UART1_SetRxInterruptHandler 7BBA  
                               wtemp0 0023                                 wtemp1 0025  
                               wtemp2 0027                                 wtemp3 0029  
                               wtemp4 002B                                 wtemp5 002D  
                               wtemp8 0024                       __end_of_sprintf 6542  
                 ??_UART1_tx_vect_isr 004B             __end_of_UART1_rx_vect_isr 7646  
                        __end_of_HC33 FB77                       _TMR5_Initialize 7538  
               __end_of_ringBufS_init 7B42                       __initialization 5688  
                   _UART2_rx_vect_isr 768C                          __end_of_ctoa 5F24  
                        __end_of_main 19E0                          __end_of_dtoa 4070  
                        __end_of_msg0 FBD0                          __end_of_msg1 FC28  
                        __end_of_msg2 FC7E                          __end_of_otoa 4E66  
                        __end_of_stoa 430C                          __end_of_utoa 5054  
                        __end_of_xtoa 3AB4                    ?_UART2_rx_vect_isr 0043  
             __end_of_TMR2_Initialize 7F96      secs_II_monitor_message@store1_13 0050  
    secs_II_monitor_message@store6_11 004F              _TMR5_SetInterruptHandler 7C32  
                       __activetblptr 0003                           _s10f1_opcmd 47EC  
                 ??_UART2_rx_vect_isr 00F7             __end_of_UART1_tx_vect_isr 7602  
                              INTCON0 3FD2            __end_of_read_prec_or_width 5A8E  
                     _TMR6_Initialize 7BE2                       _PWM8_Initialize 7FF8  
                    _UART1_Initialize 70EE                     _UART2_tx_vect_isr 7648  
                  _UART2_Transmit_ISR 7A26                                _ADACCU 3EEA  
                              _ADACQH 3EF4                                _ADACQL 3EF3  
                              _ADCON0 3EF8                                _ADCON1 3EF9  
                              _ADCON2 3EFA                                _ADCON3 3EFB  
                              _ADLTHH 3EDF                  __end_of_gem_messages 5522  
                              _ADLTHL 3EDE                                _ADPREH 3EF7  
                              _ADPREL 3EF6                                _DMA1PR 39F3  
                              _DMA2PR 39F4                                _ADSTAT 3EFC  
                              _ADUTHH 3EE1                                _ADUTHL 3EE0  
                  _PWM8_LoadDutyValue 757C                                _ANSELA 3A40  
                              _ANSELB 3A50                                _ANSELC 3A60  
                              _ANSELD 3A70                                _ANSELE 3A80  
                              _ANSELF 3A90                    ?_UART2_tx_vect_isr 0043  
                              _MD1SRC 3CFC                __end_of_secs_gem_state 5208  
                              _U1CON0 3DF2                                _U1CON1 3DF3  
                              _U1CON2 3DF4                                _U1BRGH 3DF6  
                              _U1FIFO 3DF7                                _U2CON0 3DDA  
                              _U2CON1 3DDB                                _U1BRGL 3DF5  
                              _U2CON2 3DDC                                _U2BRGH 3DDE  
                              _U2FIFO 3DDF                                _U2BRGL 3DDD  
                              _T5GATE 3F9C                                _T5GCON 3F9B  
                              _MAINPR 39F2                                _RA4PPS 3A04  
                              _RA5PPS 3A05                                _RA6PPS 3A06  
                              _RC3PPS 3A13                                _RD1PPS 3A19  
                              _RB6PPS 3A0E                                _RC5PPS 3A15  
                              _ODCONA 3A42                                _ODCONB 3A52  
                              _ODCONC 3A62                                _RC6PPS 3A16  
                              _ODCOND 3A72                                _ODCONE 3A82  
                              _ODCONF 3A92                                i2l1157 70DC  
                    _mode_lamp_bright 806A                                _SCANPR 39F7  
                              _IVTADH 389E                                _IVTADL 389D  
                              _IVTADU 389F                                u624_48 7DCA  
                              u626_48 7DEE                                _OSCFRQ 39DF  
                              u636_48 7E36                                u628_48 7E12  
                              u639_48 7E5A                                u585_40 7FB8  
                              u585_46 7FBA                                _NVMDAT 39E3  
           _MyeaDogM_WriteStringAtPos 6040              __end_of_send_lcd_cmd_dma 7378  
                 ??_UART2_tx_vect_isr 00F5             __end_of_UART2_rx_vect_isr 76CE  
                 __end_of_s6f11_opcmd 7212                     _CLKREF_Initialize 8078  
                    _UART2_Initialize 7212                                _WaitMs 792A  
                        _CCPTMRS1bits 3F5F                        _ringBufS_flush 6D74  
                              _memset 6C3C                                clear_0 5764  
                              clear_1 5778                                clear_2 578C  
                              clear_3 579E                                clear_4 57AA  
                              clear_5 57B6                                clear_6 57C2  
                              clear_7 57CE                                isa$std 0001  
                              _printf 7152                    _eaDogM_WriteString 6B96  
                    __end_of_parse_ll 6FBC                             ?_ADCC_ISR 0043  
                              _strlen 6E00                          __pdataBIGRAM 0C1A  
                     _ADCC_Initialize 7462                        _PMD_Initialize 8024  
__end_of_INT2_DefaultInterruptHandler 80EE          _INT2_DefaultInterruptHandler 80EC  
                        __pdataCOMRAM 004F             __end_of_UART2_tx_vect_isr 768A  
                              lltemp0 0023                                lltemp1 002B  
                              lltemp2 0033                                lltemp3 003B  
                        __mediumconst FB2E               _secs_II_monitor_message 5F24  
                              tblptrh 3FF7                                tblptrl 3FF6  
                              tblptru 3FF8                      __end_of_wdtdelay 7324  
                    __end_of_vfprintf 6B96                            _StartTimer 7840  
                     _CLC1_Initialize 7E6E               __end_of_TMR5_Initialize 757C  
                   _SYSTEM_Initialize 73C8                            __accesstop 0060  
             __end_of__initialization 57E0                             ?_INT0_ISR 0043  
                           ?_INT1_ISR 0043                             ?_INT2_ISR 0043  
                __end_of_display_help 80B6                  __end_of_display_info 80AE  
           __end_of_CLKREF_Initialize 8082                         ___rparam_used 0001  
                     _TMR5_WriteTimer 770E                 _set_temp_display_help 8038  
              __end_of_ringBufS_flush 6E00                        __pcstackCOMRAM 0043  
                          ___inthi_sp 17EB                          __pidataBANK0 7996  
                        __pidataBANK1 68DC                          __pidataBANK2 787C  
                        __pidataBANK6 6260                             ?_TMR5_ISR 0043  
                           ?_TMR6_ISR 0043                         __end_of_msg99 FCB6  
                    _DATAEE_WriteByte 6EEE                        ivt0x8_undefint 00AC  
                       __end_of_fputc 5CE0                         __end_of_fputs 6D74  
     secs_II_monitor_message@store1_1 0051                         __end_of_srand 7ACA  
               __end_of_TMR5_CallBack 7E6E                         __end_of_putch 7FB0  
             __end_of_PWM8_Initialize 800E               __end_of_TMR6_Initialize 7C0A  
              __end_of_PMD_Initialize 8038                            ??_ADCC_ISR 0049  
               __end_of_TMR6_CallBack 7E4A                         _DMA1_DMAA_ISR 8090  
    __end_of_INT2_SetInterruptHandler 7C82              _UART2_RxInterruptHandler 00B0  
           __end_of_SYSTEM_Initialize 7416                        _DSM_Initialize 7F44  
         __end_of_format_display_text 5940                            __pbssBANK0 0060  
                          __pbssBANK1 01BF                            __pbssBANK2 0200  
                          __pbssBANK3 0300                            __pbssBANK4 0400  
                          __pbssBANK5 0500                            _check_help 4A32  
                         _s6f11_opcmd 71B4                 _INT0_InterruptHandler 00B9  
                          ??_INT0_ISR 0043                            ??_INT1_ISR 0045  
                          ??_INT2_ISR 0047                     __end_of_TimerDone 7DBA  
                    _DMA1_DMADCNT_ISR 8084                               IVTBASEH 3FD6  
                             IVTBASEL 3FD5                               IVTBASEU 3FD7  
                          _hb_message 7378                 __end_of_wait_lcd_done 7F7C  
    __end_of_TMR6_SetInterruptHandler 7C32               __end_of_ADCC_Initialize 74AC  
                          ??_TMR5_ISR 01E6                            ??_TMR6_ISR 00F9  
                             _CLC1CON 3C74                               _CLC1POL 3C75  
                             _DMA1DSA 3BF0                               _DMA2DSA 3BD0  
                             _DMA1DSZ 3BEE                               _DMA2DSZ 3BCE  
                             _DMA1SSA 3BF9                               _DMA2SSA 3BD9  
                             _DMA1SSZ 3BF7                               _DMA2SSZ 3BD7  
                             _ADSTPTH 3EE5                               _ADSTPTL 3EE4  
                             _MD1CARH 3CFE                               _MD1CARL 3CFD  
                   _UART1_Receive_ISR 7EEC                               _CLKRCLK 3CE6  
                             _CLKRCON 3CE5                               _NCO1CLK 3F3F  
                      ?_DMA1_DMAA_ISR 0043                      _DMA1_DMASCNT_ISR 804C  
                             _NCO1CON 3F3E                               _U1ERRIE 3DFA  
                             _U1ERRIR 3DF9               __end_of_CLC1_Initialize 7E90  
                             _U2ERRIE 3DE2                               _U2ERRIR 3DE1  
                             _INT0PPS 3AC0                               _INT1PPS 3AC1  
                             _INT2PPS 3AC2                          ?_Default_ISR 0043  
                             _U1RXPPS 3AE5                               _U2RXPPS 3AE8  
                             _OSCCON1 39D9                               _OSCCON3 39DB  
                             _IVTLOCK 3FD4                               _SPI1CLK 3D1C  
                         r_protocol@d 0052                               _SPI1RXB 3D10  
                             _NVMADRH 39E1                               _NVMADRL 39E0  
                             _SPI1TXB 3D11                               _OSCTUNE 39DE  
                             _NVMCON2 39E6                               _PWM8DCH 3F61  
                             _PWM8DCL 3F60                               _PWM8CON 3F62  
              __end_of_DSM_Initialize 7F60                               _SLRCONA 3A43  
                             _SLRCONB 3A53                               _SLRCONC 3A63  
                             _SLRCOND 3A73                               _SLRCONE 3A83  
                             _SLRCONF 3A93               __end_of_TMR5_WriteTimer 774E  
                   __end_of_ee_logger 5E02                    __end_of_UART1_Read 7804  
                  __end_of_UART2_Read 77C8                               __Hparam 0000  
                       _mode_lamp_dim 7FCA                               __Lparam 0000  
            __end_of_UART1_Initialize 7152                               ___aldiv 5208  
                             ___almod 5522                            _m_protocol 20BC  
                             ___lldiv 6154                               ___llmod 67FC  
                        _gem_messages 539C             __end_of_UART1_Receive_ISR 7F0A  
                __end_of_init_display 671A                               __pcinit 5688  
            __end_of_mode_lamp_bright 8078                   _eaDogM_WriteCommand 805C  
                             __ramtop 2000                               __ptext0 0D74  
                             __ptext1 3458                               __ptext2 430C  
                             __ptext3 671A                               __ptext4 7A52  
                             __ptext5 80B6                               __ptext6 774E  
                             __ptext7 7A7A                               __ptext8 80BC  
                             __ptext9 19E0                     _UART2_Receive_ISR 7F0A  
               _OSCILLATOR_Initialize 800E                               _r_block 007A  
                             us913999 1A86                               _mode_sw 000F  
                           _T5CONbits 3F9A              __end_of_UART2_Initialize 7270  
                  m_protocol@rxData_l 000E                     __end_of_parse_sid 7022  
                             _sprintf 6452                  end_of_initialization 57E0  
                   __end_of_secs_send 4588              _INT2_SetInterruptHandler 7C5A  
                          _r_protocol 2C24   __end_of_UART1_SetTxInterruptHandler 7BBA  
         _UART1_SetTxInterruptHandler 7B92       __end_of_secs_II_monitor_message 6040  
 __end_of_UART2_SetRxInterruptHandler 7B92           _UART2_SetRxInterruptHandler 7B6A  
                           i2u1010_48 7668                             i2u1010_49 767C  
                           i2u1012_48 76AC                             i2u1012_49 76C0  
                  _read_prec_or_width 5940                     __end_of_set_vterm 7EEC  
                          _t_protocol 3458                     __end_of_vfpfcnvrt 0D74  
                           _SPI1TCNTL 3D12                               postdec1 3FE5  
                             postdec2 3FDD                               postinc0 3FEE  
                             postinc1 3FE6                               postinc2 3FDE  
                   __end_of_start_lcd 80DA             __end_of_UART2_Receive_ISR 7F28  
                      wdtdelay@dcount 009A                       ??_DMA1_DMAA_ISR 004F  
                      _block_checksum 671A                 _INT1_InterruptHandler 00B6  
                           _PORTBbits 3FCB              _TMR6_SetInterruptHandler 7C0A  
                        _display_help 80AE                 _TMR5_InterruptHandler 009E  
                        _display_info 80A6   __end_of_ADCC_SetADIInterruptHandler 7CFA  
         _ADCC_SetADIInterruptHandler 7CD2                            _update_lcd 6542  
            __end_of_DATAEE_WriteByte 6F56                       _DMA1_Initialize 6E84  
                     _SPI1_Initialize 7FE2                 __end_of_get_vterm_ptr 78F2  
                     _terminal_format 4588                      _UART1_put_buffer 7A7A  
                   r_protocol@b_block 0001                     _sequence_messages 3AB4  
                      __end_of_WaitMs 7960          __end_of_INTERRUPT_Initialize 7088  
              __end_of_block_checksum 67FC                            _vterm_dump 5A8E  
__end_of_INT0_DefaultInterruptHandler 80EA          _INT0_DefaultInterruptHandler 80E8  
                     _DMA2_Initialize 7270                         __pidataBIGRAM 309C  
                       __pidataCOMRAM 80E2                        __end_of_memset 6CDC  
                      __end_of_printf 71B4              __end_of_DMA1_DMADCNT_ISR 808E  
                    _UART2_put_buffer 7A52                 __end_of_INT0_CallBack 7DDE  
                      __end_of_strlen 6E84                   start_initialization 5688  
__end_of_TMR5_DefaultInterruptHandler 7FCA          _TMR5_DefaultInterruptHandler 7FB0  
                         __end_of_abs 792A                 __end_of_INT1_CallBack 7E02  
                         __end_of_pad 6452                  __end_of_send_lcd_cmd 7B1A  
                          ivt0x8_base 0008                 __end_of_INT2_CallBack 7E26  
                secs_II_message@block 001C                         _uart1RxBuffer 0400  
                       _uart2RxBuffer 0500                         _uart1TxBuffer 0240  
            __end_of_DMA1_DMASCNT_ISR 805C                         _uart2TxBuffer 0200  
                      _DMA1_DMAOR_ISR 809C             __end_of_sequence_messages 3DA2  
                           _TimerDone 7D96                         _ringBufS_init 7B1A  
                         _MD1CON0bits 3CFA                           _MD1CON1bits 3CFB  
                         __pdataBANK0 00C0                           __pdataBANK1 0100  
                         __pdataBANK2 02C3                           __pdataBANK6 0600  
          __end_of_EXT_INT_Initialize 7462                       run_checksum@sum 0003  
                 __end_of_help_button 7840       __end_of_eaDogM_WriteStringAtPos 7996  
                         __pbssBIGRAM 0700               __end_of_DMA1_Initialize 6EEE  
                         __pbssCOMRAM 0001      __end_of_INT0_SetInterruptHandler 7CD2  
                       __pcstackBANK0 00F5                         __pcstackBANK1 01E6  
             __end_of_SPI1_Initialize 7FF8              _UART1_RxInterruptHandler 00AA  
            _UART2_TxInterruptHandler 00AD               __end_of_terminal_format 47EC  
                        _init_display 6630                __end_of_DMA1_DMAOR_ISR 80A6  
               _INT2_InterruptHandler 00B3                 _TMR6_InterruptHandler 00A1  
                           _ee_logger 5CE0               __end_of_DMA2_Initialize 72CA  
              _PIN_MANAGER_Initialize 6A46                  __end_of_wait_lcd_set 80D4  
                       __pmediumconst FB2E                             __ptext100 6154  
                           __ptext101 4070                             __ptext110 5208  
                           __ptext102 5940                             __ptext111 5E02  
                           __ptext103 4C56                             __ptext120 7D24  
                           __ptext112 5BBC                             __ptext104 3DA2  
                           __ptext121 7DDE                             __ptext113 7F96  
                           __ptext105 6360                             __ptext130 79FA  
                           __ptext122 80EA                             __ptext114 699C  
                           __ptext106 6E00                             __ptext131 7604  
                           __ptext123 7D4C                             __ptext115 78B8  
                           __ptext107 6CDC                             __ptext140 804C  
                           __ptext132 7EEC                             __ptext124 7E02  
                           __ptext116 7D96                             __ptext108 78F2  
                           __ptext141 8084                             __ptext133 7648  
                           __ptext125 80EC                             __ptext117 7CFC  
                           __ptext109 5522                             __ptext142 8090  
                           __ptext134 7A26                             __ptext126 80DC  
                           __ptext118 7DBA                             __ptext143 809C  
                           __ptext135 768C                             __ptext127 74AC  
                           __ptext119 80E8                             __ptext144 7088  
                           __ptext136 7F0A                             __ptext128 80EE  
                           __ptext145 770E                             __ptext137 79CC  
                           __ptext129 75C0                             __ptext146 7E4A  
                           __ptext138 7E26                             __ptext147 7FB0  
                           __ptext139 74F2                    __end_of_StartTimer 787C  
                            _ADCC_ISR 74AC                           __smallconst FB2E  
                            _CLC1GLS0 3C7A                              _CLC1GLS1 3C7B  
                            _CLC1GLS2 3C7C                              _CLC1GLS3 3C7D  
                            _CLC1SEL0 3C76                              _CLC1SEL1 3C77  
                            _CLC1SEL2 3C78                              _CLC1SEL3 3C79  
                            _DMA1CON0 3BFC                              _DMA1CON1 3BFD  
                            _DMA1AIRQ 3BFE                              _DMA2CON0 3BDC  
                            _DMA2CON1 3BDD                              _DMA2AIRQ 3BDE  
                            _DMA1SIRQ 3BFF                              _DMA2SIRQ 3BDF  
                         _NCO1CONbits 3F3E                        _vterm_sequence 2772  
                            _T2CLKCON 3FAE                              _NCO1ACCH 3F39  
                            _NCO1ACCL 3F38                              _NCO1ACCU 3F3A  
                _INTERRUPT_Initialize 7022                              _T6CLKCON 3F96  
                            _NCO1INCH 3F3C                              _NCO1INCL 3F3B  
                            _NCO1INCU 3F3D                             _parse_sid 6FBC  
                     ?_DMA1_DMAOR_ISR 0043                              _INT0_ISR 7CFC  
                            _INT1_ISR 7D24                              _INT2_ISR 7D4C  
                            _LATBbits 3FBB                              _LATCbits 3FBC  
                            _LATDbits 3FBD                              _LATEbits 3FBE  
                            _LATFbits 3FBF                             _secs_send 430C  
                            _IPR1bits 3981                              _IPR2bits 3982  
                            _PIE1bits 3991                              _IPR3bits 3983  
                            _PIE2bits 3992                              _IPR5bits 3985  
                            _PIE3bits 3993                             _tickCount 0060  
                            _IPR6bits 3986                              _PIE5bits 3995  
                            _IPR7bits 3987                              _IPR8bits 3988  
                            _PIE6bits 3996                              _PIE7bits 3997  
                            _IPR9bits 3989                              _PIE8bits 3998  
                            _PIE9bits 3999                             _ring_buf1 0280  
                           _ring_buf2 0300                              _PIR1bits 39A1  
                            _PIR2bits 39A2                              _SPI1BAUD 3D19  
                            _PIR4bits 39A4                              _SPI1CON0 3D14  
                            _SPI1CON1 3D15                              _SPI1CON2 3D16  
                            _PIR5bits 39A5                              i2u731_48 75E0  
                            i2u731_49 75F4                              _PIR7bits 39A7  
                            i2u733_48 7624                              i2u733_49 7638  
                            _PIR8bits 39A8                              _PIR9bits 39A9  
                            i2u729_48 74D0                              i2u729_49 74E4  
                           _set_vterm 7ECE                           _help_button 7804  
          __end_of_UART1_Transmit_ISR 7A26                              _TMR5_ISR 7088  
                            _TMR6_ISR 79CC                             _port_data 01AF  
                           _vfpfcnvrt 0000                          _SPI1INTFbits 3D1A  
                       _TMR5_CallBack 7E4A                    __end_of_check_help 4C56  
                           _start_lcd 80D4                         _TMR6_CallBack 7E26  
            __end_of_UART1_put_buffer 7AA2                __end_of_vterm_sequence 2C24  
                 __end_of_UART1_Write 770E                   __end_of_UART2_Write 778C  
                    _set_display_info 7E90                    __end_of_hb_message 73C8  
                         _INTCON0bits 3FD2                             copy_data0 569C  
                           copy_data1 56C2                             copy_data2 56E8  
                           copy_data3 570A                             copy_data4 572C  
                           copy_data5 574E              _INT0_SetInterruptHandler 7CAA  
              _uart1TxBufferRemaining 0019   __end_of_UART2_SetTxInterruptHandler 7B6A  
         _UART2_SetTxInterruptHandler 7B42                          _uart1RxCount 0016  
            __end_of_UART2_put_buffer 7A7A                          _uart2RxCount 0010  
                            __Hrparam 0000                  __end_of_run_checksum 7D96  
                            __Lrparam 0000                         _wait_lcd_done 7F60  
                        _send_lcd_cmd 7AF2                       _NCO1_Initialize 7F28  
               __end_of_DMA1_DMAA_ISR 809A                     ?_DMA1_DMADCNT_ISR 0043  
         __end_of_eaDogM_WriteCommand 806A                              __pivt0x8 0008  
                  ??_DMA1_DMADCNT_ISR 004F                              __ptext10 2772  
                            __ptext11 71B4                              __ptext20 5054  
                            __ptext12 47EC                              __ptext21 4588  
                            __ptext13 6F56                              __ptext30 80C8  
                            __ptext22 3AB4                              __ptext14 6FBC  
                            __ptext31 77C8                              __ptext23 57E6  
                            __ptext15 539C                              __ptext40 5A8E  
                            __ptext32 6630                              __ptext24 5F24  
                            __ptext16 7AA2                              __ptext41 792A  
                            __ptext33 7ACA                              __ptext25 5CE0  
                            __ptext17 2C24                              __ptext50 80A6  
                            __ptext42 7ECE                              __ptext34 7AF2  
                            __ptext26 6EEE                              __ptext18 76CE  
                            __ptext51 80AE                              __ptext43 8038  
                            __ptext35 7EB0                              __ptext27 7D72  
                            __ptext19 20BC                              __ptext60 7C0A  
                            __ptext52 73C8                              __ptext44 7E90  
                            __ptext36 7B1A                              __ptext28 80C2  
                            __ptext61 7538                              __ptext53 7212  
                            __ptext45 7FCA                              __ptext37 7378  
                            __ptext29 778C                              __ptext70 7022  
                            __ptext62 7C32                              __ptext54 7B42  
                            __ptext46 806A                              __ptext38 805C  
                            __ptext71 7416                              __ptext63 7F7C  
                            __ptext55 7B6A                              __ptext47 757C  
                            __ptext39 4A32                              __ptext80 7462  
                            __ptext72 7C5A                              __ptext64 7FE2  
                            __ptext56 70EE                              __ptext48 7804  
                            __ptext81 7CD2                              __ptext73 7C82  
                            __ptext65 7FF8                              __ptext57 7B92  
                            __ptext49 7840                              __ptext90 80D4  
                            __ptext82 6040                              __ptext74 7CAA  
                            __ptext66 8024                              __ptext58 7BBA  
                            __ptext91 6D74                              __ptext83 6542  
                            __ptext75 7F44                              __ptext67 6A46  
                            __ptext59 7BE2                              __ptext92 6C3C  
                            __ptext84 7960                              __ptext76 7270  
                            __ptext68 800E                              __ptext93 7152  
                            __ptext85 7324                              __ptext77 6E84  
                            __ptext69 7F28                              __ptext94 6452  
                            __ptext86 7F60                              __ptext78 8078  
                            __ptext95 6AEE                              __ptext87 72CA  
                            __ptext79 7E6E                              __ptext96 0000  
                            __ptext88 6B96                              __ptext97 37B2  
                            __ptext89 80CE                              __ptext98 4E66  
                            __ptext99 67FC                       _secs_II_message 19E0  
                    _ringBufS_put_dma 699C                    __end_of_m_protocol 2772  
                            _parse_ll 6F56                     ?_DMA1_DMASCNT_ISR 0043  
                         _IVTLOCKbits 3FD4             _ADCC_ADI_InterruptHandler 00A4  
                  ??_DMA1_DMASCNT_ISR 004F                              isa$xinst 0000  
                            _spi_link 0087                              _wdtdelay 72CA  
          __end_of_UART2_Transmit_ISR 7A52                              _vfprintf 6AEE  
                 secs_gem_state@block 000A                     _UART1_is_rx_ready 80C8  
          __end_of_PWM8_LoadDutyValue 75BE                           _UART1_Write 76CE  
__end_of_INT1_DefaultInterruptHandler 80EC          _INT1_DefaultInterruptHandler 80EA  
                         _UART2_Write 774E                     _UART1_is_tx_ready 80BC  
                     r_protocol@retry 0053                     t_protocol@requeue 000B  
   __end_of_MyeaDogM_WriteStringAtPos 6154                         ??_Default_ISR 0049  
                  __end_of_r_protocol 309C                           _uart1RxHead 0018  
                         _uart1TxHead 001B                           _uart2RxHead 0012  
                         _uart1RxTail 0017                           _NVMCON1bits 39E5  
                 _format_display_text 57E6                           _uart2TxHead 0015  
                         _uart1TxTail 001A                           _uart2RxTail 0011  
                         _uart2TxTail 0014                       _D@mconfig$F5154 0700  
                        _wait_lcd_set 80CE                    _EXT_INT_Initialize 7416  
__end_of_TMR6_DefaultInterruptHandler 7538          _TMR6_DefaultInterruptHandler 74F2  
                  __end_of_t_protocol 37B2  __end_of_ADCC_DefaultInterruptHandler 80F0  
        _ADCC_DefaultInterruptHandler 80EE                              intlevel2 0000  
                   _send_lcd_cmd_long 7ACA         __end_of_set_temp_display_help 804A  
          __end_of_eaDogM_WriteString 6C3C                 __end_of_mode_lamp_dim 7FE2  
             __end_of_NCO1_Initialize 7F44                            _SPI1SCKPPS 3ADE  
                          _SPI1SDIPPS 3ADF             __end_of_UART1_is_rx_ready 80CE  
                          _UART1_Read 77C8                            _UART2_Read 778C  
                  __end_of_update_lcd 6630             __end_of_UART1_is_tx_ready 80C2  
                   _UART2_is_rx_ready 80C2                _uart2TxBufferRemaining 0013  
                   _UART2_is_tx_ready 80B6                      _send_lcd_cmd_dma 7324  
               TMR5_ISR@CountCallBack 0005               __end_of_secs_II_message 20BC  
    __end_of_INT1_SetInterruptHandler 7CAA                       t_protocol@block 0093  
                    ??_DMA1_DMAOR_ISR 004F              _UART1_TxInterruptHandler 00A7  
                     t_protocol@retry 000C             __end_of_send_lcd_cmd_long 7AF2  
                 __end_of_Default_ISR 80E2        __end_of_PIN_MANAGER_Initialize 6AEE  
                  __end_of_vterm_dump 5BBC               _eaDogM_WriteStringAtPos 7960  
                       _get_vterm_ptr 78B8  
