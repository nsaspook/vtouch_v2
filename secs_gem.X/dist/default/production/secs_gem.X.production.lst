

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Dec 17 09:54:28 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	idataBIGRAM,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	idataBANK0,global,class=CODE,space=0,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,space=0,delta=1,noexec
     9                           	psect	idataBANK2,global,class=CODE,space=0,delta=1,noexec
    10                           	psect	idataBANK6,global,class=CODE,space=0,delta=1,noexec
    11                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    23                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    24                           	psect	dataBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    25                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    28                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    29                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    30                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=3
    47                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    75                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    76                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    77                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    78                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    79                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1,inline
    80                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1,inline
    81                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1,inline
    82                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    83                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    84                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    85                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    86                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    87                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    88                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    89                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1
    90                           	psect	text60,global,reloc=2,class=CODE,space=0,delta=1
    91                           	psect	text61,global,reloc=2,class=CODE,space=0,delta=1
    92                           	psect	text62,global,reloc=2,class=CODE,space=0,delta=1
    93                           	psect	text63,global,reloc=2,class=CODE,space=0,delta=1
    94                           	psect	text64,global,reloc=2,class=CODE,space=0,delta=1
    95                           	psect	text65,global,reloc=2,class=CODE,space=0,delta=1
    96                           	psect	text66,global,reloc=2,class=CODE,space=0,delta=1
    97                           	psect	text67,global,reloc=2,class=CODE,space=0,delta=1
    98                           	psect	text68,global,reloc=2,class=CODE,space=0,delta=1
    99                           	psect	text69,global,reloc=2,class=CODE,space=0,delta=1
   100                           	psect	text70,global,reloc=2,class=CODE,space=0,delta=1
   101                           	psect	text71,global,reloc=2,class=CODE,space=0,delta=1
   102                           	psect	text72,global,reloc=2,class=CODE,space=0,delta=1
   103                           	psect	text73,global,reloc=2,class=CODE,space=0,delta=1
   104                           	psect	text74,global,reloc=2,class=CODE,space=0,delta=1
   105                           	psect	text75,global,reloc=2,class=CODE,space=0,delta=1
   106                           	psect	text76,global,reloc=2,class=CODE,space=0,delta=1
   107                           	psect	text77,global,reloc=2,class=CODE,space=0,delta=1
   108                           	psect	text78,global,reloc=2,class=CODE,space=0,delta=1
   109                           	psect	text79,global,reloc=2,class=CODE,space=0,delta=1
   110                           	psect	text80,global,reloc=2,class=CODE,space=0,delta=1
   111                           	psect	text81,global,reloc=2,class=CODE,space=0,delta=1
   112                           	psect	text82,global,reloc=2,class=CODE,space=0,delta=1
   113                           	psect	text83,global,reloc=2,class=CODE,space=0,delta=1
   114                           	psect	text84,global,reloc=2,class=CODE,space=0,delta=1
   115                           	psect	text85,global,reloc=2,class=CODE,space=0,delta=1
   116                           	psect	text86,global,reloc=2,class=CODE,space=0,delta=1
   117                           	psect	text87,global,reloc=2,class=CODE,space=0,delta=1
   118                           	psect	text88,global,reloc=2,class=CODE,space=0,delta=1
   119                           	psect	text89,global,reloc=2,class=CODE,space=0,delta=1
   120                           	psect	text90,global,reloc=2,class=CODE,space=0,delta=1
   121                           	psect	text91,global,reloc=2,class=CODE,space=0,delta=1
   122                           	psect	text92,global,reloc=2,class=CODE,space=0,delta=1,group=3
   123                           	psect	text93,global,reloc=2,class=CODE,space=0,delta=1,group=3
   124                           	psect	text94,global,reloc=2,class=CODE,space=0,delta=1,group=3
   125                           	psect	text95,global,reloc=2,class=CODE,space=0,delta=1,group=1
   126                           	psect	text96,global,reloc=2,class=CODE,space=0,delta=1,group=1
   127                           	psect	text97,global,reloc=2,class=CODE,space=0,delta=1,group=1
   128                           	psect	text98,global,reloc=2,class=CODE,space=0,delta=1,group=1
   129                           	psect	text99,global,reloc=2,class=CODE,space=0,delta=1,group=2
   130                           	psect	text100,global,reloc=2,class=CODE,space=0,delta=1,group=2
   131                           	psect	text101,global,reloc=2,class=CODE,space=0,delta=1,group=1
   132                           	psect	text102,global,reloc=2,class=CODE,space=0,delta=1,group=1
   133                           	psect	text103,global,reloc=2,class=CODE,space=0,delta=1,group=1
   134                           	psect	text104,global,reloc=2,class=CODE,space=0,delta=1,group=1
   135                           	psect	text105,global,reloc=2,class=CODE,space=0,delta=1,group=1
   136                           	psect	text106,global,reloc=2,class=CODE,space=0,delta=1,group=3
   137                           	psect	text107,global,reloc=2,class=CODE,space=0,delta=1,group=3
   138                           	psect	text108,global,reloc=2,class=CODE,space=0,delta=1,group=3
   139                           	psect	text109,global,reloc=2,class=CODE,space=0,delta=1,group=2
   140                           	psect	text110,global,reloc=2,class=CODE,space=0,delta=1,group=2
   141                           	psect	text111,global,reloc=2,class=CODE,space=0,delta=1,group=1
   142                           	psect	text112,global,reloc=2,class=CODE,space=0,delta=1,group=3
   143                           	psect	text113,global,reloc=2,class=CODE,space=0,delta=1
   144                           	psect	text114,global,reloc=2,class=CODE,space=0,delta=1
   145                           	psect	text115,global,reloc=2,class=CODE,space=0,delta=1
   146                           	psect	text116,global,reloc=2,class=CODE,space=0,delta=1,inline
   147                           	psect	text117,global,reloc=4,class=CODE,space=0,delta=1
   148                           	psect	text118,global,reloc=2,class=CODE,space=0,delta=1
   149                           	psect	text119,global,reloc=2,class=CODE,space=0,delta=1
   150                           	psect	text120,global,reloc=4,class=CODE,space=0,delta=1
   151                           	psect	text121,global,reloc=2,class=CODE,space=0,delta=1
   152                           	psect	text122,global,reloc=2,class=CODE,space=0,delta=1
   153                           	psect	text123,global,reloc=4,class=CODE,space=0,delta=1
   154                           	psect	text124,global,reloc=2,class=CODE,space=0,delta=1
   155                           	psect	text125,global,reloc=2,class=CODE,space=0,delta=1
   156                           	psect	text126,global,reloc=4,class=CODE,space=0,delta=1
   157                           	psect	text127,global,reloc=4,class=CODE,space=0,delta=1
   158                           	psect	text128,global,reloc=2,class=CODE,space=0,delta=1
   159                           	psect	text129,global,reloc=4,class=CODE,space=0,delta=1
   160                           	psect	text130,global,reloc=2,class=CODE,space=0,delta=1
   161                           	psect	text131,global,reloc=4,class=CODE,space=0,delta=1
   162                           	psect	text132,global,reloc=2,class=CODE,space=0,delta=1
   163                           	psect	text133,global,reloc=4,class=CODE,space=0,delta=1
   164                           	psect	text134,global,reloc=2,class=CODE,space=0,delta=1
   165                           	psect	text135,global,reloc=4,class=CODE,space=0,delta=1
   166                           	psect	text136,global,reloc=2,class=CODE,space=0,delta=1
   167                           	psect	text137,global,reloc=4,class=CODE,space=0,delta=1
   168                           	psect	text138,global,reloc=2,class=CODE,space=0,delta=1
   169                           	psect	text139,global,reloc=2,class=CODE,space=0,delta=1
   170                           	psect	text140,global,reloc=4,class=CODE,space=0,delta=1
   171                           	psect	text141,global,reloc=4,class=CODE,space=0,delta=1
   172                           	psect	text142,global,reloc=4,class=CODE,space=0,delta=1
   173                           	psect	text143,global,reloc=4,class=CODE,space=0,delta=1
   174                           	psect	text144,global,reloc=4,class=CODE,space=0,delta=1
   175                           	psect	text145,global,reloc=2,class=CODE,space=0,delta=1
   176                           	psect	text146,global,reloc=2,class=CODE,space=0,delta=1
   177                           	psect	text147,global,reloc=2,class=CODE,space=0,delta=1
   178                           	psect	ivt0x8,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
   179                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   180                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   181                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
   182                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   183                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   184   000000                     
   185                           ; Generated 12/10/2023 GMT
   186                           ; 
   187                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   188                           ; All rights reserved.
   189                           ; 
   190                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   191                           ; 
   192                           ; Redistribution and use in source and binary forms, with or without modification, are
   193                           ; permitted provided that the following conditions are met:
   194                           ; 
   195                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   196                           ;        conditions and the following disclaimer.
   197                           ; 
   198                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   199                           ;        of conditions and the following disclaimer in the documentation and/or other
   200                           ;        materials provided with the distribution. Publication is not required when
   201                           ;        this file is used in an embedded application.
   202                           ; 
   203                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   204                           ;        software without specific prior written permission.
   205                           ; 
   206                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   207                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   208                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   209                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   210                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   211                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   212                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   213                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   214                           ; 
   215                           ; 
   216                           ; Code-generator required, PIC18F57K42 Definitions
   217                           ; 
   218                           ; SFR Addresses
   219   003FE0                     bsr             equ	16352
   220   003FE9                     fsr0            equ	16361
   221   003FEA                     fsr0h           equ	16362
   222   003FE9                     fsr0l           equ	16361
   223   003FE1                     fsr1            equ	16353
   224   003FE2                     fsr1h           equ	16354
   225   003FE1                     fsr1l           equ	16353
   226   003FD9                     fsr2            equ	16345
   227   003FDA                     fsr2h           equ	16346
   228   003FD9                     fsr2l           equ	16345
   229   003FEF                     indf0           equ	16367
   230   003FE7                     indf1           equ	16359
   231   003FDF                     indf2           equ	16351
   232   003FD2                     intcon          equ	16338
   233   0039E5                     nvmcon          equ	14821
   234   003FF9                     pcl             equ	16377
   235   003FFA                     pclath          equ	16378
   236   003FFB                     pclatu          equ	16379
   237   003FEB                     plusw0          equ	16363
   238   003FE3                     plusw1          equ	16355
   239   003FDB                     plusw2          equ	16347
   240   003FED                     postdec0        equ	16365
   241   003FE5                     postdec1        equ	16357
   242   003FDD                     postdec2        equ	16349
   243   003FEE                     postinc0        equ	16366
   244   003FE6                     postinc1        equ	16358
   245   003FDE                     postinc2        equ	16350
   246   003FEC                     preinc0         equ	16364
   247   003FE4                     preinc1         equ	16356
   248   003FDC                     preinc2         equ	16348
   249   003FF3                     prod            equ	16371
   250   003FF4                     prodh           equ	16372
   251   003FF3                     prodl           equ	16371
   252   003FD8                     status          equ	16344
   253   003FF5                     tablat          equ	16373
   254   003FF6                     tblptr          equ	16374
   255   003FF7                     tblptrh         equ	16375
   256   003FF6                     tblptrl         equ	16374
   257   003FF8                     tblptru         equ	16376
   258   003FFD                     tosl            equ	16381
   259   003FE8                     wreg            equ	16360
   260   003880                     STATUS_CSHAD    equ	14464	;# 
   261   003881                     WREG_CSHAD      equ	14465	;# 
   262   003882                     BSR_CSHAD       equ	14466	;# 
   263   003883                     SHADCON         equ	14467	;# 
   264   003884                     STATUS_SHAD     equ	14468	;# 
   265   003885                     WREG_SHAD       equ	14469	;# 
   266   003886                     BSR_SHAD        equ	14470	;# 
   267   003887                     PCLATH_SHAD     equ	14471	;# 
   268   003888                     PCLATU_SHAD     equ	14472	;# 
   269   003889                     FSR0SH          equ	14473	;# 
   270   003889                     FSR0L_SHAD      equ	14473	;# 
   271   00388A                     FSR0H_SHAD      equ	14474	;# 
   272   00388B                     FSR1SH          equ	14475	;# 
   273   00388B                     FSR1L_SHAD      equ	14475	;# 
   274   00388C                     FSR1H_SHAD      equ	14476	;# 
   275   00388D                     FSR2SH          equ	14477	;# 
   276   00388D                     FSR2L_SHAD      equ	14477	;# 
   277   00388E                     FSR2H_SHAD      equ	14478	;# 
   278   00388F                     PRODSH          equ	14479	;# 
   279   00388F                     PRODL_SHAD      equ	14479	;# 
   280   003890                     PRODH_SHAD      equ	14480	;# 
   281   00389D                     IVTADL          equ	14493	;# 
   282   00389E                     IVTADH          equ	14494	;# 
   283   00389F                     IVTADU          equ	14495	;# 
   284   00395B                     WDTCON0         equ	14683	;# 
   285   00395C                     WDTCON1         equ	14684	;# 
   286   00395D                     WDTPSL          equ	14685	;# 
   287   00395E                     WDTPSH          equ	14686	;# 
   288   00395F                     WDTTMR          equ	14687	;# 
   289   003960                     CRCDATA         equ	14688	;# 
   290   003960                     CRCDATL         equ	14688	;# 
   291   003961                     CRCDATH         equ	14689	;# 
   292   003962                     CRCACC          equ	14690	;# 
   293   003962                     CRCACCL         equ	14690	;# 
   294   003963                     CRCACCH         equ	14691	;# 
   295   003964                     CRCSHFT         equ	14692	;# 
   296   003964                     CRCSHIFTL       equ	14692	;# 
   297   003965                     CRCSHIFTH       equ	14693	;# 
   298   003966                     CRCXOR          equ	14694	;# 
   299   003966                     CRCXORL         equ	14694	;# 
   300   003967                     CRCXORH         equ	14695	;# 
   301   003968                     CRCCON0         equ	14696	;# 
   302   003969                     CRCCON1         equ	14697	;# 
   303   003976                     SCANLADR        equ	14710	;# 
   304   003976                     SCANLADRL       equ	14710	;# 
   305   003977                     SCANLADRH       equ	14711	;# 
   306   003978                     SCANLADRU       equ	14712	;# 
   307   003979                     SCANHADR        equ	14713	;# 
   308   003979                     SCANHADRL       equ	14713	;# 
   309   00397A                     SCANHADRH       equ	14714	;# 
   310   00397B                     SCANHADRU       equ	14715	;# 
   311   00397C                     SCANCON0        equ	14716	;# 
   312   00397D                     SCANTRIG        equ	14717	;# 
   313   003980                     IPR0            equ	14720	;# 
   314   003981                     IPR1            equ	14721	;# 
   315   003982                     IPR2            equ	14722	;# 
   316   003983                     IPR3            equ	14723	;# 
   317   003984                     IPR4            equ	14724	;# 
   318   003985                     IPR5            equ	14725	;# 
   319   003986                     IPR6            equ	14726	;# 
   320   003987                     IPR7            equ	14727	;# 
   321   003988                     IPR8            equ	14728	;# 
   322   003989                     IPR9            equ	14729	;# 
   323   00398A                     IPR10           equ	14730	;# 
   324   003990                     PIE0            equ	14736	;# 
   325   003991                     PIE1            equ	14737	;# 
   326   003992                     PIE2            equ	14738	;# 
   327   003993                     PIE3            equ	14739	;# 
   328   003994                     PIE4            equ	14740	;# 
   329   003995                     PIE5            equ	14741	;# 
   330   003996                     PIE6            equ	14742	;# 
   331   003997                     PIE7            equ	14743	;# 
   332   003998                     PIE8            equ	14744	;# 
   333   003999                     PIE9            equ	14745	;# 
   334   00399A                     PIE10           equ	14746	;# 
   335   0039A0                     PIR0            equ	14752	;# 
   336   0039A1                     PIR1            equ	14753	;# 
   337   0039A2                     PIR2            equ	14754	;# 
   338   0039A3                     PIR3            equ	14755	;# 
   339   0039A4                     PIR4            equ	14756	;# 
   340   0039A5                     PIR5            equ	14757	;# 
   341   0039A6                     PIR6            equ	14758	;# 
   342   0039A7                     PIR7            equ	14759	;# 
   343   0039A8                     PIR8            equ	14760	;# 
   344   0039A9                     PIR9            equ	14761	;# 
   345   0039AA                     PIR10           equ	14762	;# 
   346   0039C0                     PMD0            equ	14784	;# 
   347   0039C1                     PMD1            equ	14785	;# 
   348   0039C2                     PMD2            equ	14786	;# 
   349   0039C3                     PMD3            equ	14787	;# 
   350   0039C4                     PMD4            equ	14788	;# 
   351   0039C5                     PMD5            equ	14789	;# 
   352   0039C6                     PMD6            equ	14790	;# 
   353   0039C7                     PMD7            equ	14791	;# 
   354   0039D0                     BORCON          equ	14800	;# 
   355   0039D1                     VREGCON         equ	14801	;# 
   356   0039D8                     CPUDOZE         equ	14808	;# 
   357   0039D9                     OSCCON1         equ	14809	;# 
   358   0039DA                     OSCCON2         equ	14810	;# 
   359   0039DB                     OSCCON3         equ	14811	;# 
   360   0039DC                     OSCSTAT         equ	14812	;# 
   361   0039DC                     OSCSTAT1        equ	14812	;# 
   362   0039DD                     OSCEN           equ	14813	;# 
   363   0039DE                     OSCTUNE         equ	14814	;# 
   364   0039DF                     OSCFRQ          equ	14815	;# 
   365   0039E0                     NVMADRL         equ	14816	;# 
   366   0039E1                     NVMADRH         equ	14817	;# 
   367   0039E3                     NVMDAT          equ	14819	;# 
   368   0039E5                     NVMCON1         equ	14821	;# 
   369   0039E6                     NVMCON2         equ	14822	;# 
   370   0039EF                     PRLOCK          equ	14831	;# 
   371   0039F1                     ISRPR           equ	14833	;# 
   372   0039F2                     MAINPR          equ	14834	;# 
   373   0039F3                     DMA1PR          equ	14835	;# 
   374   0039F4                     DMA2PR          equ	14836	;# 
   375   0039F7                     SCANPR          equ	14839	;# 
   376   003A00                     RA0PPS          equ	14848	;# 
   377   003A01                     RA1PPS          equ	14849	;# 
   378   003A02                     RA2PPS          equ	14850	;# 
   379   003A03                     RA3PPS          equ	14851	;# 
   380   003A04                     RA4PPS          equ	14852	;# 
   381   003A05                     RA5PPS          equ	14853	;# 
   382   003A06                     RA6PPS          equ	14854	;# 
   383   003A07                     RA7PPS          equ	14855	;# 
   384   003A08                     RB0PPS          equ	14856	;# 
   385   003A09                     RB1PPS          equ	14857	;# 
   386   003A0A                     RB2PPS          equ	14858	;# 
   387   003A0B                     RB3PPS          equ	14859	;# 
   388   003A0C                     RB4PPS          equ	14860	;# 
   389   003A0D                     RB5PPS          equ	14861	;# 
   390   003A0E                     RB6PPS          equ	14862	;# 
   391   003A0F                     RB7PPS          equ	14863	;# 
   392   003A10                     RC0PPS          equ	14864	;# 
   393   003A11                     RC1PPS          equ	14865	;# 
   394   003A12                     RC2PPS          equ	14866	;# 
   395   003A13                     RC3PPS          equ	14867	;# 
   396   003A14                     RC4PPS          equ	14868	;# 
   397   003A15                     RC5PPS          equ	14869	;# 
   398   003A16                     RC6PPS          equ	14870	;# 
   399   003A17                     RC7PPS          equ	14871	;# 
   400   003A18                     RD0PPS          equ	14872	;# 
   401   003A19                     RD1PPS          equ	14873	;# 
   402   003A1A                     RD2PPS          equ	14874	;# 
   403   003A1B                     RD3PPS          equ	14875	;# 
   404   003A1C                     RD4PPS          equ	14876	;# 
   405   003A1D                     RD5PPS          equ	14877	;# 
   406   003A1E                     RD6PPS          equ	14878	;# 
   407   003A1F                     RD7PPS          equ	14879	;# 
   408   003A20                     RE0PPS          equ	14880	;# 
   409   003A21                     RE1PPS          equ	14881	;# 
   410   003A22                     RE2PPS          equ	14882	;# 
   411   003A28                     RF0PPS          equ	14888	;# 
   412   003A29                     RF1PPS          equ	14889	;# 
   413   003A2A                     RF2PPS          equ	14890	;# 
   414   003A2B                     RF3PPS          equ	14891	;# 
   415   003A2C                     RF4PPS          equ	14892	;# 
   416   003A2D                     RF5PPS          equ	14893	;# 
   417   003A2E                     RF6PPS          equ	14894	;# 
   418   003A2F                     RF7PPS          equ	14895	;# 
   419   003A40                     ANSELA          equ	14912	;# 
   420   003A41                     WPUA            equ	14913	;# 
   421   003A42                     ODCONA          equ	14914	;# 
   422   003A43                     SLRCONA         equ	14915	;# 
   423   003A44                     INLVLA          equ	14916	;# 
   424   003A45                     IOCAP           equ	14917	;# 
   425   003A46                     IOCAN           equ	14918	;# 
   426   003A47                     IOCAF           equ	14919	;# 
   427   003A50                     ANSELB          equ	14928	;# 
   428   003A51                     WPUB            equ	14929	;# 
   429   003A52                     ODCONB          equ	14930	;# 
   430   003A53                     SLRCONB         equ	14931	;# 
   431   003A54                     INLVLB          equ	14932	;# 
   432   003A55                     IOCBP           equ	14933	;# 
   433   003A56                     IOCBN           equ	14934	;# 
   434   003A57                     IOCBF           equ	14935	;# 
   435   003A5A                     RB1I2C          equ	14938	;# 
   436   003A5B                     RB2I2C          equ	14939	;# 
   437   003A60                     ANSELC          equ	14944	;# 
   438   003A61                     WPUC            equ	14945	;# 
   439   003A62                     ODCONC          equ	14946	;# 
   440   003A63                     SLRCONC         equ	14947	;# 
   441   003A64                     INLVLC          equ	14948	;# 
   442   003A65                     IOCCP           equ	14949	;# 
   443   003A66                     IOCCN           equ	14950	;# 
   444   003A67                     IOCCF           equ	14951	;# 
   445   003A6A                     RC3I2C          equ	14954	;# 
   446   003A6B                     RC4I2C          equ	14955	;# 
   447   003A70                     ANSELD          equ	14960	;# 
   448   003A71                     WPUD            equ	14961	;# 
   449   003A72                     ODCOND          equ	14962	;# 
   450   003A73                     SLRCOND         equ	14963	;# 
   451   003A74                     INLVLD          equ	14964	;# 
   452   003A7A                     RD0I2C          equ	14970	;# 
   453   003A7B                     RD1I2C          equ	14971	;# 
   454   003A80                     ANSELE          equ	14976	;# 
   455   003A81                     WPUE            equ	14977	;# 
   456   003A82                     ODCONE          equ	14978	;# 
   457   003A83                     SLRCONE         equ	14979	;# 
   458   003A84                     INLVLE          equ	14980	;# 
   459   003A85                     IOCEP           equ	14981	;# 
   460   003A86                     IOCEN           equ	14982	;# 
   461   003A87                     IOCEF           equ	14983	;# 
   462   003A90                     ANSELF          equ	14992	;# 
   463   003A91                     WPUF            equ	14993	;# 
   464   003A92                     ODCONF          equ	14994	;# 
   465   003A93                     SLRCONF         equ	14995	;# 
   466   003A94                     INLVLF          equ	14996	;# 
   467   003ABF                     PPSLOCK         equ	15039	;# 
   468   003AC0                     INT0PPS         equ	15040	;# 
   469   003AC1                     INT1PPS         equ	15041	;# 
   470   003AC2                     INT2PPS         equ	15042	;# 
   471   003AC3                     T0CKIPPS        equ	15043	;# 
   472   003AC4                     T1CKIPPS        equ	15044	;# 
   473   003AC5                     T1GPPS          equ	15045	;# 
   474   003AC6                     T3CKIPPS        equ	15046	;# 
   475   003AC7                     T3GPPS          equ	15047	;# 
   476   003AC8                     T5CKIPPS        equ	15048	;# 
   477   003AC9                     T5GPPS          equ	15049	;# 
   478   003ACA                     T2INPPS         equ	15050	;# 
   479   003ACB                     T4INPPS         equ	15051	;# 
   480   003ACC                     T6INPPS         equ	15052	;# 
   481   003ACD                     CCP1PPS         equ	15053	;# 
   482   003ACE                     CCP2PPS         equ	15054	;# 
   483   003ACF                     CCP3PPS         equ	15055	;# 
   484   003AD0                     CCP4PPS         equ	15056	;# 
   485   003AD1                     SMT1WINPPS      equ	15057	;# 
   486   003AD2                     SMT1SIGPPS      equ	15058	;# 
   487   003AD3                     CWG1INPPS       equ	15059	;# 
   488   003AD4                     CWG2INPPS       equ	15060	;# 
   489   003AD5                     CWG3INPPS       equ	15061	;# 
   490   003AD6                     MD1CARLPPS      equ	15062	;# 
   491   003AD7                     MD1CARHPPS      equ	15063	;# 
   492   003AD8                     MD1SRCPPS       equ	15064	;# 
   493   003AD9                     CLCIN0PPS       equ	15065	;# 
   494   003ADA                     CLCIN1PPS       equ	15066	;# 
   495   003ADB                     CLCIN2PPS       equ	15067	;# 
   496   003ADC                     CLCIN3PPS       equ	15068	;# 
   497   003ADD                     ADACTPPS        equ	15069	;# 
   498   003ADE                     SPI1SCKPPS      equ	15070	;# 
   499   003ADF                     SPI1SDIPPS      equ	15071	;# 
   500   003AE0                     SPI1SSPPS       equ	15072	;# 
   501   003AE1                     I2C1SCLPPS      equ	15073	;# 
   502   003AE2                     I2C1SDAPPS      equ	15074	;# 
   503   003AE3                     I2C2SCLPPS      equ	15075	;# 
   504   003AE4                     I2C2SDAPPS      equ	15076	;# 
   505   003AE5                     U1RXPPS         equ	15077	;# 
   506   003AE6                     U1CTSPPS        equ	15078	;# 
   507   003AE8                     U2RXPPS         equ	15080	;# 
   508   003AE9                     U2CTSPPS        equ	15081	;# 
   509   003BC9                     DMA2BUF         equ	15305	;# 
   510   003BCA                     DMA2DCNT        equ	15306	;# 
   511   003BCA                     DMA2DCNTL       equ	15306	;# 
   512   003BCB                     DMA2DCNTH       equ	15307	;# 
   513   003BCC                     DMA2DPTR        equ	15308	;# 
   514   003BCC                     DMA2DPTRL       equ	15308	;# 
   515   003BCD                     DMA2DPTRH       equ	15309	;# 
   516   003BCE                     DMA2DSZ         equ	15310	;# 
   517   003BCE                     DMA2DSZL        equ	15310	;# 
   518   003BCF                     DMA2DSZH        equ	15311	;# 
   519   003BD0                     DMA2DSA         equ	15312	;# 
   520   003BD0                     DMA2DSAL        equ	15312	;# 
   521   003BD1                     DMA2DSAH        equ	15313	;# 
   522   003BD2                     DMA2SCNT        equ	15314	;# 
   523   003BD2                     DMA2SCNTL       equ	15314	;# 
   524   003BD3                     DMA2SCNTH       equ	15315	;# 
   525   003BD4                     DMA2SPTR        equ	15316	;# 
   526   003BD4                     DMA2SPTRL       equ	15316	;# 
   527   003BD5                     DMA2SPTRH       equ	15317	;# 
   528   003BD6                     DMA2SPTRU       equ	15318	;# 
   529   003BD7                     DMA2SSZ         equ	15319	;# 
   530   003BD7                     DMA2SSZL        equ	15319	;# 
   531   003BD8                     DMA2SSZH        equ	15320	;# 
   532   003BD9                     DMA2SSA         equ	15321	;# 
   533   003BD9                     DMA2SSAL        equ	15321	;# 
   534   003BDA                     DMA2SSAH        equ	15322	;# 
   535   003BDB                     DMA2SSAU        equ	15323	;# 
   536   003BDC                     DMA2CON0        equ	15324	;# 
   537   003BDD                     DMA2CON1        equ	15325	;# 
   538   003BDE                     DMA2AIRQ        equ	15326	;# 
   539   003BDF                     DMA2SIRQ        equ	15327	;# 
   540   003BE9                     DMA1BUF         equ	15337	;# 
   541   003BEA                     DMA1DCNT        equ	15338	;# 
   542   003BEA                     DMA1DCNTL       equ	15338	;# 
   543   003BEB                     DMA1DCNTH       equ	15339	;# 
   544   003BEC                     DMA1DPTR        equ	15340	;# 
   545   003BEC                     DMA1DPTRL       equ	15340	;# 
   546   003BED                     DMA1DPTRH       equ	15341	;# 
   547   003BEE                     DMA1DSZ         equ	15342	;# 
   548   003BEE                     DMA1DSZL        equ	15342	;# 
   549   003BEF                     DMA1DSZH        equ	15343	;# 
   550   003BF0                     DMA1DSA         equ	15344	;# 
   551   003BF0                     DMA1DSAL        equ	15344	;# 
   552   003BF1                     DMA1DSAH        equ	15345	;# 
   553   003BF2                     DMA1SCNT        equ	15346	;# 
   554   003BF2                     DMA1SCNTL       equ	15346	;# 
   555   003BF3                     DMA1SCNTH       equ	15347	;# 
   556   003BF4                     DMA1SPTR        equ	15348	;# 
   557   003BF4                     DMA1SPTRL       equ	15348	;# 
   558   003BF5                     DMA1SPTRH       equ	15349	;# 
   559   003BF6                     DMA1SPTRU       equ	15350	;# 
   560   003BF7                     DMA1SSZ         equ	15351	;# 
   561   003BF7                     DMA1SSZL        equ	15351	;# 
   562   003BF8                     DMA1SSZH        equ	15352	;# 
   563   003BF9                     DMA1SSA         equ	15353	;# 
   564   003BF9                     DMA1SSAL        equ	15353	;# 
   565   003BFA                     DMA1SSAH        equ	15354	;# 
   566   003BFB                     DMA1SSAU        equ	15355	;# 
   567   003BFC                     DMA1CON0        equ	15356	;# 
   568   003BFD                     DMA1CON1        equ	15357	;# 
   569   003BFE                     DMA1AIRQ        equ	15358	;# 
   570   003BFF                     DMA1SIRQ        equ	15359	;# 
   571   003C56                     CLC4CON         equ	15446	;# 
   572   003C57                     CLC4POL         equ	15447	;# 
   573   003C58                     CLC4SEL0        equ	15448	;# 
   574   003C59                     CLC4SEL1        equ	15449	;# 
   575   003C5A                     CLC4SEL2        equ	15450	;# 
   576   003C5B                     CLC4SEL3        equ	15451	;# 
   577   003C5C                     CLC4GLS0        equ	15452	;# 
   578   003C5D                     CLC4GLS1        equ	15453	;# 
   579   003C5E                     CLC4GLS2        equ	15454	;# 
   580   003C5F                     CLC4GLS3        equ	15455	;# 
   581   003C60                     CLC3CON         equ	15456	;# 
   582   003C61                     CLC3POL         equ	15457	;# 
   583   003C62                     CLC3SEL0        equ	15458	;# 
   584   003C63                     CLC3SEL1        equ	15459	;# 
   585   003C64                     CLC3SEL2        equ	15460	;# 
   586   003C65                     CLC3SEL3        equ	15461	;# 
   587   003C66                     CLC3GLS0        equ	15462	;# 
   588   003C67                     CLC3GLS1        equ	15463	;# 
   589   003C68                     CLC3GLS2        equ	15464	;# 
   590   003C69                     CLC3GLS3        equ	15465	;# 
   591   003C6A                     CLC2CON         equ	15466	;# 
   592   003C6B                     CLC2POL         equ	15467	;# 
   593   003C6C                     CLC2SEL0        equ	15468	;# 
   594   003C6D                     CLC2SEL1        equ	15469	;# 
   595   003C6E                     CLC2SEL2        equ	15470	;# 
   596   003C6F                     CLC2SEL3        equ	15471	;# 
   597   003C70                     CLC2GLS0        equ	15472	;# 
   598   003C71                     CLC2GLS1        equ	15473	;# 
   599   003C72                     CLC2GLS2        equ	15474	;# 
   600   003C73                     CLC2GLS3        equ	15475	;# 
   601   003C74                     CLC1CON         equ	15476	;# 
   602   003C75                     CLC1POL         equ	15477	;# 
   603   003C76                     CLC1SEL0        equ	15478	;# 
   604   003C77                     CLC1SEL1        equ	15479	;# 
   605   003C78                     CLC1SEL2        equ	15480	;# 
   606   003C79                     CLC1SEL3        equ	15481	;# 
   607   003C7A                     CLC1GLS0        equ	15482	;# 
   608   003C7B                     CLC1GLS1        equ	15483	;# 
   609   003C7C                     CLC1GLS2        equ	15484	;# 
   610   003C7D                     CLC1GLS3        equ	15485	;# 
   611   003C7E                     CLCDATA0        equ	15486	;# 
   612   003CE5                     CLKRCON         equ	15589	;# 
   613   003CE6                     CLKRCLK         equ	15590	;# 
   614   003CFA                     MD1CON0         equ	15610	;# 
   615   003CFB                     MD1CON1         equ	15611	;# 
   616   003CFC                     MD1SRC          equ	15612	;# 
   617   003CFD                     MD1CARL         equ	15613	;# 
   618   003CFE                     MD1CARH         equ	15614	;# 
   619   003D10                     SPI1RXB         equ	15632	;# 
   620   003D11                     SPI1TXB         equ	15633	;# 
   621   003D12                     SPI1TCNT        equ	15634	;# 
   622   003D12                     SPI1TCNTL       equ	15634	;# 
   623   003D13                     SPI1TCNTH       equ	15635	;# 
   624   003D14                     SPI1CON0        equ	15636	;# 
   625   003D15                     SPI1CON1        equ	15637	;# 
   626   003D16                     SPI1CON2        equ	15638	;# 
   627   003D17                     SPI1STATUS      equ	15639	;# 
   628   003D18                     SPI1TWIDTH      equ	15640	;# 
   629   003D19                     SPI1BAUD        equ	15641	;# 
   630   003D1A                     SPI1INTF        equ	15642	;# 
   631   003D1B                     SPI1INTE        equ	15643	;# 
   632   003D1C                     SPI1CLK         equ	15644	;# 
   633   003D54                     I2C2RXB         equ	15700	;# 
   634   003D55                     I2C2TXB         equ	15701	;# 
   635   003D56                     I2C2CNT         equ	15702	;# 
   636   003D57                     I2C2ADB0        equ	15703	;# 
   637   003D58                     I2C2ADB1        equ	15704	;# 
   638   003D59                     I2C2ADR0        equ	15705	;# 
   639   003D5A                     I2C2ADR1        equ	15706	;# 
   640   003D5B                     I2C2ADR2        equ	15707	;# 
   641   003D5C                     I2C2ADR3        equ	15708	;# 
   642   003D5D                     I2C2CON0        equ	15709	;# 
   643   003D5E                     I2C2CON1        equ	15710	;# 
   644   003D5F                     I2C2CON2        equ	15711	;# 
   645   003D60                     I2C2ERR         equ	15712	;# 
   646   003D61                     I2C2STAT0       equ	15713	;# 
   647   003D62                     I2C2STAT1       equ	15714	;# 
   648   003D63                     I2C2PIR         equ	15715	;# 
   649   003D64                     I2C2PIE         equ	15716	;# 
   650   003D65                     I2C2CLK         equ	15717	;# 
   651   003D66                     I2C2BTO         equ	15718	;# 
   652   003D6A                     I2C1RXB         equ	15722	;# 
   653   003D6B                     I2C1TXB         equ	15723	;# 
   654   003D6C                     I2C1CNT         equ	15724	;# 
   655   003D6D                     I2C1ADB0        equ	15725	;# 
   656   003D6E                     I2C1ADB1        equ	15726	;# 
   657   003D6F                     I2C1ADR0        equ	15727	;# 
   658   003D70                     I2C1ADR1        equ	15728	;# 
   659   003D71                     I2C1ADR2        equ	15729	;# 
   660   003D72                     I2C1ADR3        equ	15730	;# 
   661   003D73                     I2C1CON0        equ	15731	;# 
   662   003D74                     I2C1CON1        equ	15732	;# 
   663   003D75                     I2C1CON2        equ	15733	;# 
   664   003D76                     I2C1ERR         equ	15734	;# 
   665   003D77                     I2C1STAT0       equ	15735	;# 
   666   003D78                     I2C1STAT1       equ	15736	;# 
   667   003D79                     I2C1PIR         equ	15737	;# 
   668   003D7A                     I2C1PIE         equ	15738	;# 
   669   003D7B                     I2C1CLK         equ	15739	;# 
   670   003D7C                     I2C1BTO         equ	15740	;# 
   671   003DD0                     U2RXB           equ	15824	;# 
   672   003DD0                     U2RXBL          equ	15824	;# 
   673   003DD2                     U2TXB           equ	15826	;# 
   674   003DD2                     U2TXBL          equ	15826	;# 
   675   003DD4                     U2P1            equ	15828	;# 
   676   003DD4                     U2P1L           equ	15828	;# 
   677   003DD6                     U2P2            equ	15830	;# 
   678   003DD6                     U2P2L           equ	15830	;# 
   679   003DD8                     U2P3            equ	15832	;# 
   680   003DD8                     U2P3L           equ	15832	;# 
   681   003DDA                     U2CON0          equ	15834	;# 
   682   003DDB                     U2CON1          equ	15835	;# 
   683   003DDC                     U2CON2          equ	15836	;# 
   684   003DDD                     U2BRG           equ	15837	;# 
   685   003DDD                     U2BRGL          equ	15837	;# 
   686   003DDE                     U2BRGH          equ	15838	;# 
   687   003DDF                     U2FIFO          equ	15839	;# 
   688   003DE0                     U2UIR           equ	15840	;# 
   689   003DE1                     U2ERRIR         equ	15841	;# 
   690   003DE2                     U2ERRIE         equ	15842	;# 
   691   003DE8                     U1RXB           equ	15848	;# 
   692   003DE8                     U1RXBL          equ	15848	;# 
   693   003DE9                     U1RXCHK         equ	15849	;# 
   694   003DEA                     U1TXB           equ	15850	;# 
   695   003DEA                     U1TXBL          equ	15850	;# 
   696   003DEB                     U1TXCHK         equ	15851	;# 
   697   003DEC                     U1P1            equ	15852	;# 
   698   003DEC                     U1P1L           equ	15852	;# 
   699   003DED                     U1P1H           equ	15853	;# 
   700   003DEE                     U1P2            equ	15854	;# 
   701   003DEE                     U1P2L           equ	15854	;# 
   702   003DEF                     U1P2H           equ	15855	;# 
   703   003DF0                     U1P3            equ	15856	;# 
   704   003DF0                     U1P3L           equ	15856	;# 
   705   003DF1                     U1P3H           equ	15857	;# 
   706   003DF2                     U1CON0          equ	15858	;# 
   707   003DF3                     U1CON1          equ	15859	;# 
   708   003DF4                     U1CON2          equ	15860	;# 
   709   003DF5                     U1BRG           equ	15861	;# 
   710   003DF5                     U1BRGL          equ	15861	;# 
   711   003DF6                     U1BRGH          equ	15862	;# 
   712   003DF7                     U1FIFO          equ	15863	;# 
   713   003DF8                     U1UIR           equ	15864	;# 
   714   003DF9                     U1ERRIR         equ	15865	;# 
   715   003DFA                     U1ERRIE         equ	15866	;# 
   716   003E9C                     DAC1CON1        equ	16028	;# 
   717   003E9E                     DAC1CON0        equ	16030	;# 
   718   003EB8                     CM2CON0         equ	16056	;# 
   719   003EB9                     CM2CON1         equ	16057	;# 
   720   003EBA                     CM2NCH          equ	16058	;# 
   721   003EBB                     CM2PCH          equ	16059	;# 
   722   003EBC                     CM1CON0         equ	16060	;# 
   723   003EBD                     CM1CON1         equ	16061	;# 
   724   003EBE                     CM1NCH          equ	16062	;# 
   725   003EBF                     CM1PCH          equ	16063	;# 
   726   003EC0                     CMOUT           equ	16064	;# 
   727   003EC1                     FVRCON          equ	16065	;# 
   728   003EC3                     ZCDCON          equ	16067	;# 
   729   003EC9                     HLVDCON0        equ	16073	;# 
   730   003ECA                     HLVDCON1        equ	16074	;# 
   731   003ED7                     ADCP            equ	16087	;# 
   732   003EDE                     ADLTH           equ	16094	;# 
   733   003EDE                     ADLTHL          equ	16094	;# 
   734   003EDF                     ADLTHH          equ	16095	;# 
   735   003EE0                     ADUTH           equ	16096	;# 
   736   003EE0                     ADUTHL          equ	16096	;# 
   737   003EE1                     ADUTHH          equ	16097	;# 
   738   003EE2                     ADERR           equ	16098	;# 
   739   003EE2                     ADERRL          equ	16098	;# 
   740   003EE3                     ADERRH          equ	16099	;# 
   741   003EE4                     ADSTPT          equ	16100	;# 
   742   003EE4                     ADSTPTL         equ	16100	;# 
   743   003EE5                     ADSTPTH         equ	16101	;# 
   744   003EE6                     ADFLTR          equ	16102	;# 
   745   003EE6                     ADFLTRL         equ	16102	;# 
   746   003EE7                     ADFLTRH         equ	16103	;# 
   747   003EE8                     ADACC           equ	16104	;# 
   748   003EE8                     ADACCL          equ	16104	;# 
   749   003EE9                     ADACCH          equ	16105	;# 
   750   003EEA                     ADACCU          equ	16106	;# 
   751   003EEB                     ADCNT           equ	16107	;# 
   752   003EEC                     ADRPT           equ	16108	;# 
   753   003EED                     ADPREV          equ	16109	;# 
   754   003EED                     ADPREVL         equ	16109	;# 
   755   003EEE                     ADPREVH         equ	16110	;# 
   756   003EEF                     ADRES           equ	16111	;# 
   757   003EEF                     ADRESL          equ	16111	;# 
   758   003EF0                     ADRESH          equ	16112	;# 
   759   003EF1                     ADPCH           equ	16113	;# 
   760   003EF3                     ADACQ           equ	16115	;# 
   761   003EF3                     ADACQL          equ	16115	;# 
   762   003EF4                     ADACQH          equ	16116	;# 
   763   003EF5                     ADCAP           equ	16117	;# 
   764   003EF6                     ADPRE           equ	16118	;# 
   765   003EF6                     ADPREL          equ	16118	;# 
   766   003EF7                     ADPREH          equ	16119	;# 
   767   003EF8                     ADCON0          equ	16120	;# 
   768   003EF9                     ADCON1          equ	16121	;# 
   769   003EFA                     ADCON2          equ	16122	;# 
   770   003EFB                     ADCON3          equ	16123	;# 
   771   003EFC                     ADSTAT          equ	16124	;# 
   772   003EFD                     ADREF           equ	16125	;# 
   773   003EFE                     ADACT           equ	16126	;# 
   774   003EFF                     ADCLK           equ	16127	;# 
   775   003F12                     SMT1TMR         equ	16146	;# 
   776   003F12                     SMT1TMRL        equ	16146	;# 
   777   003F13                     SMT1TMRH        equ	16147	;# 
   778   003F14                     SMT1TMRU        equ	16148	;# 
   779   003F15                     SMT1CPR         equ	16149	;# 
   780   003F15                     SMT1CPRL        equ	16149	;# 
   781   003F16                     SMT1CPRH        equ	16150	;# 
   782   003F17                     SMT1CPRU        equ	16151	;# 
   783   003F18                     SMT1CPW         equ	16152	;# 
   784   003F18                     SMT1CPWL        equ	16152	;# 
   785   003F19                     SMT1CPWH        equ	16153	;# 
   786   003F1A                     SMT1CPWU        equ	16154	;# 
   787   003F1B                     SMT1PR          equ	16155	;# 
   788   003F1B                     SMT1PRL         equ	16155	;# 
   789   003F1C                     SMT1PRH         equ	16156	;# 
   790   003F1D                     SMT1PRU         equ	16157	;# 
   791   003F1E                     SMT1CON0        equ	16158	;# 
   792   003F1F                     SMT1CON1        equ	16159	;# 
   793   003F20                     SMT1STAT        equ	16160	;# 
   794   003F21                     SMT1CLK         equ	16161	;# 
   795   003F22                     SMT1SIG         equ	16162	;# 
   796   003F23                     SMT1WIN         equ	16163	;# 
   797   003F38                     NCO1ACC         equ	16184	;# 
   798   003F38                     NCO1ACCL        equ	16184	;# 
   799   003F39                     NCO1ACCH        equ	16185	;# 
   800   003F3A                     NCO1ACCU        equ	16186	;# 
   801   003F3B                     NCO1INC         equ	16187	;# 
   802   003F3B                     NCO1INCL        equ	16187	;# 
   803   003F3C                     NCO1INCH        equ	16188	;# 
   804   003F3D                     NCO1INCU        equ	16189	;# 
   805   003F3E                     NCO1CON         equ	16190	;# 
   806   003F3F                     NCO1CLK         equ	16191	;# 
   807   003F40                     CWG3CLK         equ	16192	;# 
   808   003F40                     CWG3CLKCON      equ	16192	;# 
   809   003F41                     CWG3ISM         equ	16193	;# 
   810   003F41                     CWG3DAT         equ	16193	;# 
   811   003F42                     CWG3DBR         equ	16194	;# 
   812   003F43                     CWG3DBF         equ	16195	;# 
   813   003F44                     CWG3CON0        equ	16196	;# 
   814   003F45                     CWG3CON1        equ	16197	;# 
   815   003F46                     CWG3AS0         equ	16198	;# 
   816   003F47                     CWG3AS1         equ	16199	;# 
   817   003F48                     CWG3STR         equ	16200	;# 
   818   003F49                     CWG2CLK         equ	16201	;# 
   819   003F49                     CWG2CLKCON      equ	16201	;# 
   820   003F4A                     CWG2ISM         equ	16202	;# 
   821   003F4A                     CWG2DAT         equ	16202	;# 
   822   003F4B                     CWG2DBR         equ	16203	;# 
   823   003F4C                     CWG2DBF         equ	16204	;# 
   824   003F4D                     CWG2CON0        equ	16205	;# 
   825   003F4E                     CWG2CON1        equ	16206	;# 
   826   003F4F                     CWG2AS0         equ	16207	;# 
   827   003F50                     CWG2AS1         equ	16208	;# 
   828   003F51                     CWG2STR         equ	16209	;# 
   829   003F52                     CWG1CLK         equ	16210	;# 
   830   003F52                     CWG1CLKCON      equ	16210	;# 
   831   003F53                     CWG1ISM         equ	16211	;# 
   832   003F53                     CWG1DAT         equ	16211	;# 
   833   003F54                     CWG1DBR         equ	16212	;# 
   834   003F55                     CWG1DBF         equ	16213	;# 
   835   003F56                     CWG1CON0        equ	16214	;# 
   836   003F57                     CWG1CON1        equ	16215	;# 
   837   003F58                     CWG1AS0         equ	16216	;# 
   838   003F59                     CWG1AS1         equ	16217	;# 
   839   003F5A                     CWG1STR         equ	16218	;# 
   840   003F5E                     CCPTMRS0        equ	16222	;# 
   841   003F5F                     CCPTMRS1        equ	16223	;# 
   842   003F60                     PWM8DC          equ	16224	;# 
   843   003F60                     PWM8DCL         equ	16224	;# 
   844   003F61                     PWM8DCH         equ	16225	;# 
   845   003F62                     PWM8CON         equ	16226	;# 
   846   003F64                     PWM7DC          equ	16228	;# 
   847   003F64                     PWM7DCL         equ	16228	;# 
   848   003F65                     PWM7DCH         equ	16229	;# 
   849   003F66                     PWM7CON         equ	16230	;# 
   850   003F68                     PWM6DC          equ	16232	;# 
   851   003F68                     PWM6DCL         equ	16232	;# 
   852   003F69                     PWM6DCH         equ	16233	;# 
   853   003F6A                     PWM6CON         equ	16234	;# 
   854   003F6C                     PWM5DC          equ	16236	;# 
   855   003F6C                     PWM5DCL         equ	16236	;# 
   856   003F6D                     PWM5DCH         equ	16237	;# 
   857   003F6E                     PWM5CON         equ	16238	;# 
   858   003F70                     CCPR4           equ	16240	;# 
   859   003F70                     CCPR4L          equ	16240	;# 
   860   003F71                     CCPR4H          equ	16241	;# 
   861   003F72                     CCP4CON         equ	16242	;# 
   862   003F73                     CCP4CAP         equ	16243	;# 
   863   003F74                     CCPR3           equ	16244	;# 
   864   003F74                     CCPR3L          equ	16244	;# 
   865   003F75                     CCPR3H          equ	16245	;# 
   866   003F76                     CCP3CON         equ	16246	;# 
   867   003F77                     CCP3CAP         equ	16247	;# 
   868   003F78                     CCPR2           equ	16248	;# 
   869   003F78                     CCPR2L          equ	16248	;# 
   870   003F79                     CCPR2H          equ	16249	;# 
   871   003F7A                     CCP2CON         equ	16250	;# 
   872   003F7B                     CCP2CAP         equ	16251	;# 
   873   003F7C                     CCPR1           equ	16252	;# 
   874   003F7C                     CCPR1L          equ	16252	;# 
   875   003F7D                     CCPR1H          equ	16253	;# 
   876   003F7E                     CCP1CON         equ	16254	;# 
   877   003F7F                     CCP1CAP         equ	16255	;# 
   878   003F92                     T6TMR           equ	16274	;# 
   879   003F92                     TMR6            equ	16274	;# 
   880   003F93                     T6PR            equ	16275	;# 
   881   003F93                     PR6             equ	16275	;# 
   882   003F94                     T6CON           equ	16276	;# 
   883   003F95                     T6HLT           equ	16277	;# 
   884   003F96                     T6CLKCON        equ	16278	;# 
   885   003F96                     T6CLK           equ	16278	;# 
   886   003F97                     T6RST           equ	16279	;# 
   887   003F98                     TMR5            equ	16280	;# 
   888   003F98                     TMR5L           equ	16280	;# 
   889   003F99                     TMR5H           equ	16281	;# 
   890   003F9A                     T5CON           equ	16282	;# 
   891   003F9A                     TMR5CON         equ	16282	;# 
   892   003F9B                     T5GCON          equ	16283	;# 
   893   003F9B                     TMR5GCON        equ	16283	;# 
   894   003F9C                     T5GATE          equ	16284	;# 
   895   003F9C                     TMR5GATE        equ	16284	;# 
   896   003F9D                     T5CLK           equ	16285	;# 
   897   003F9D                     TMR5CLK         equ	16285	;# 
   898   003F9D                     PR5             equ	16285	;# 
   899   003F9E                     T4TMR           equ	16286	;# 
   900   003F9E                     TMR4            equ	16286	;# 
   901   003F9F                     T4PR            equ	16287	;# 
   902   003F9F                     PR4             equ	16287	;# 
   903   003FA0                     T4CON           equ	16288	;# 
   904   003FA1                     T4HLT           equ	16289	;# 
   905   003FA2                     T4CLKCON        equ	16290	;# 
   906   003FA2                     T4CLK           equ	16290	;# 
   907   003FA3                     T4RST           equ	16291	;# 
   908   003FA4                     TMR3            equ	16292	;# 
   909   003FA4                     TMR3L           equ	16292	;# 
   910   003FA5                     TMR3H           equ	16293	;# 
   911   003FA6                     T3CON           equ	16294	;# 
   912   003FA6                     TMR3CON         equ	16294	;# 
   913   003FA7                     T3GCON          equ	16295	;# 
   914   003FA7                     TMR3GCON        equ	16295	;# 
   915   003FA8                     T3GATE          equ	16296	;# 
   916   003FA8                     TMR3GATE        equ	16296	;# 
   917   003FA9                     T3CLK           equ	16297	;# 
   918   003FA9                     TMR3CLK         equ	16297	;# 
   919   003FA9                     PR3             equ	16297	;# 
   920   003FAA                     T2TMR           equ	16298	;# 
   921   003FAA                     TMR2            equ	16298	;# 
   922   003FAB                     T2PR            equ	16299	;# 
   923   003FAB                     PR2             equ	16299	;# 
   924   003FAC                     T2CON           equ	16300	;# 
   925   003FAD                     T2HLT           equ	16301	;# 
   926   003FAE                     T2CLKCON        equ	16302	;# 
   927   003FAE                     T2CLK           equ	16302	;# 
   928   003FAF                     T2RST           equ	16303	;# 
   929   003FB0                     TMR1            equ	16304	;# 
   930   003FB0                     TMR1L           equ	16304	;# 
   931   003FB1                     TMR1H           equ	16305	;# 
   932   003FB2                     T1CON           equ	16306	;# 
   933   003FB2                     TMR1CON         equ	16306	;# 
   934   003FB3                     T1GCON          equ	16307	;# 
   935   003FB3                     TMR1GCON        equ	16307	;# 
   936   003FB4                     T1GATE          equ	16308	;# 
   937   003FB4                     TMR1GATE        equ	16308	;# 
   938   003FB5                     T1CLK           equ	16309	;# 
   939   003FB5                     TMR1CLK         equ	16309	;# 
   940   003FB5                     PR1             equ	16309	;# 
   941   003FB6                     TMR0L           equ	16310	;# 
   942   003FB6                     TMR0            equ	16310	;# 
   943   003FB7                     TMR0H           equ	16311	;# 
   944   003FB7                     PR0             equ	16311	;# 
   945   003FB8                     T0CON0          equ	16312	;# 
   946   003FB9                     T0CON1          equ	16313	;# 
   947   003FBA                     LATA            equ	16314	;# 
   948   003FBB                     LATB            equ	16315	;# 
   949   003FBC                     LATC            equ	16316	;# 
   950   003FBD                     LATD            equ	16317	;# 
   951   003FBE                     LATE            equ	16318	;# 
   952   003FBF                     LATF            equ	16319	;# 
   953   003FC2                     TRISA           equ	16322	;# 
   954   003FC3                     TRISB           equ	16323	;# 
   955   003FC4                     TRISC           equ	16324	;# 
   956   003FC5                     TRISD           equ	16325	;# 
   957   003FC6                     TRISE           equ	16326	;# 
   958   003FC7                     TRISF           equ	16327	;# 
   959   003FCA                     PORTA           equ	16330	;# 
   960   003FCB                     PORTB           equ	16331	;# 
   961   003FCC                     PORTC           equ	16332	;# 
   962   003FCD                     PORTD           equ	16333	;# 
   963   003FCE                     PORTE           equ	16334	;# 
   964   003FCF                     PORTF           equ	16335	;# 
   965   003FD2                     INTCON0         equ	16338	;# 
   966   003FD3                     INTCON1         equ	16339	;# 
   967   003FD4                     IVTLOCK         equ	16340	;# 
   968   003FD5                     IVTBASE         equ	16341	;# 
   969   003FD5                     IVTBASEL        equ	16341	;# 
   970   003FD6                     IVTBASEH        equ	16342	;# 
   971   003FD7                     IVTBASEU        equ	16343	;# 
   972   003FD8                     STATUS          equ	16344	;# 
   973   003FD9                     FSR2            equ	16345	;# 
   974   003FD9                     FSR2L           equ	16345	;# 
   975   003FDA                     FSR2H           equ	16346	;# 
   976   003FDB                     PLUSW2          equ	16347	;# 
   977   003FDC                     PREINC2         equ	16348	;# 
   978   003FDD                     POSTDEC2        equ	16349	;# 
   979   003FDE                     POSTINC2        equ	16350	;# 
   980   003FDF                     INDF2           equ	16351	;# 
   981   003FE0                     BSR             equ	16352	;# 
   982   003FE1                     FSR1            equ	16353	;# 
   983   003FE1                     FSR1L           equ	16353	;# 
   984   003FE2                     FSR1H           equ	16354	;# 
   985   003FE3                     PLUSW1          equ	16355	;# 
   986   003FE4                     PREINC1         equ	16356	;# 
   987   003FE5                     POSTDEC1        equ	16357	;# 
   988   003FE6                     POSTINC1        equ	16358	;# 
   989   003FE7                     INDF1           equ	16359	;# 
   990   003FE8                     WREG            equ	16360	;# 
   991   003FE9                     FSR0            equ	16361	;# 
   992   003FE9                     FSR0L           equ	16361	;# 
   993   003FEA                     FSR0H           equ	16362	;# 
   994   003FEB                     PLUSW0          equ	16363	;# 
   995   003FEC                     PREINC0         equ	16364	;# 
   996   003FED                     POSTDEC0        equ	16365	;# 
   997   003FEE                     POSTINC0        equ	16366	;# 
   998   003FEF                     INDF0           equ	16367	;# 
   999   003FF0                     PCON0           equ	16368	;# 
  1000   003FF1                     PCON1           equ	16369	;# 
  1001   003FF3                     PROD            equ	16371	;# 
  1002   003FF3                     PRODL           equ	16371	;# 
  1003   003FF4                     PRODH           equ	16372	;# 
  1004   003FF5                     TABLAT          equ	16373	;# 
  1005   003FF6                     TBLPTR          equ	16374	;# 
  1006   003FF6                     TBLPTRL         equ	16374	;# 
  1007   003FF7                     TBLPTRH         equ	16375	;# 
  1008   003FF8                     TBLPTRU         equ	16376	;# 
  1009   003FF9                     PCLAT           equ	16377	;# 
  1010   003FF9                     PCL             equ	16377	;# 
  1011   003FFA                     PCLATH          equ	16378	;# 
  1012   003FFB                     PCLATU          equ	16379	;# 
  1013   003FFC                     STKPTR          equ	16380	;# 
  1014   003FFD                     TOS             equ	16381	;# 
  1015   003FFD                     TOSL            equ	16381	;# 
  1016   003FFE                     TOSH            equ	16382	;# 
  1017   003FFF                     TOSU            equ	16383	;# 
  1018   003880                     STATUS_CSHAD    equ	14464	;# 
  1019   003881                     WREG_CSHAD      equ	14465	;# 
  1020   003882                     BSR_CSHAD       equ	14466	;# 
  1021   003883                     SHADCON         equ	14467	;# 
  1022   003884                     STATUS_SHAD     equ	14468	;# 
  1023   003885                     WREG_SHAD       equ	14469	;# 
  1024   003886                     BSR_SHAD        equ	14470	;# 
  1025   003887                     PCLATH_SHAD     equ	14471	;# 
  1026   003888                     PCLATU_SHAD     equ	14472	;# 
  1027   003889                     FSR0SH          equ	14473	;# 
  1028   003889                     FSR0L_SHAD      equ	14473	;# 
  1029   00388A                     FSR0H_SHAD      equ	14474	;# 
  1030   00388B                     FSR1SH          equ	14475	;# 
  1031   00388B                     FSR1L_SHAD      equ	14475	;# 
  1032   00388C                     FSR1H_SHAD      equ	14476	;# 
  1033   00388D                     FSR2SH          equ	14477	;# 
  1034   00388D                     FSR2L_SHAD      equ	14477	;# 
  1035   00388E                     FSR2H_SHAD      equ	14478	;# 
  1036   00388F                     PRODSH          equ	14479	;# 
  1037   00388F                     PRODL_SHAD      equ	14479	;# 
  1038   003890                     PRODH_SHAD      equ	14480	;# 
  1039   00389D                     IVTADL          equ	14493	;# 
  1040   00389E                     IVTADH          equ	14494	;# 
  1041   00389F                     IVTADU          equ	14495	;# 
  1042   00395B                     WDTCON0         equ	14683	;# 
  1043   00395C                     WDTCON1         equ	14684	;# 
  1044   00395D                     WDTPSL          equ	14685	;# 
  1045   00395E                     WDTPSH          equ	14686	;# 
  1046   00395F                     WDTTMR          equ	14687	;# 
  1047   003960                     CRCDATA         equ	14688	;# 
  1048   003960                     CRCDATL         equ	14688	;# 
  1049   003961                     CRCDATH         equ	14689	;# 
  1050   003962                     CRCACC          equ	14690	;# 
  1051   003962                     CRCACCL         equ	14690	;# 
  1052   003963                     CRCACCH         equ	14691	;# 
  1053   003964                     CRCSHFT         equ	14692	;# 
  1054   003964                     CRCSHIFTL       equ	14692	;# 
  1055   003965                     CRCSHIFTH       equ	14693	;# 
  1056   003966                     CRCXOR          equ	14694	;# 
  1057   003966                     CRCXORL         equ	14694	;# 
  1058   003967                     CRCXORH         equ	14695	;# 
  1059   003968                     CRCCON0         equ	14696	;# 
  1060   003969                     CRCCON1         equ	14697	;# 
  1061   003976                     SCANLADR        equ	14710	;# 
  1062   003976                     SCANLADRL       equ	14710	;# 
  1063   003977                     SCANLADRH       equ	14711	;# 
  1064   003978                     SCANLADRU       equ	14712	;# 
  1065   003979                     SCANHADR        equ	14713	;# 
  1066   003979                     SCANHADRL       equ	14713	;# 
  1067   00397A                     SCANHADRH       equ	14714	;# 
  1068   00397B                     SCANHADRU       equ	14715	;# 
  1069   00397C                     SCANCON0        equ	14716	;# 
  1070   00397D                     SCANTRIG        equ	14717	;# 
  1071   003980                     IPR0            equ	14720	;# 
  1072   003981                     IPR1            equ	14721	;# 
  1073   003982                     IPR2            equ	14722	;# 
  1074   003983                     IPR3            equ	14723	;# 
  1075   003984                     IPR4            equ	14724	;# 
  1076   003985                     IPR5            equ	14725	;# 
  1077   003986                     IPR6            equ	14726	;# 
  1078   003987                     IPR7            equ	14727	;# 
  1079   003988                     IPR8            equ	14728	;# 
  1080   003989                     IPR9            equ	14729	;# 
  1081   00398A                     IPR10           equ	14730	;# 
  1082   003990                     PIE0            equ	14736	;# 
  1083   003991                     PIE1            equ	14737	;# 
  1084   003992                     PIE2            equ	14738	;# 
  1085   003993                     PIE3            equ	14739	;# 
  1086   003994                     PIE4            equ	14740	;# 
  1087   003995                     PIE5            equ	14741	;# 
  1088   003996                     PIE6            equ	14742	;# 
  1089   003997                     PIE7            equ	14743	;# 
  1090   003998                     PIE8            equ	14744	;# 
  1091   003999                     PIE9            equ	14745	;# 
  1092   00399A                     PIE10           equ	14746	;# 
  1093   0039A0                     PIR0            equ	14752	;# 
  1094   0039A1                     PIR1            equ	14753	;# 
  1095   0039A2                     PIR2            equ	14754	;# 
  1096   0039A3                     PIR3            equ	14755	;# 
  1097   0039A4                     PIR4            equ	14756	;# 
  1098   0039A5                     PIR5            equ	14757	;# 
  1099   0039A6                     PIR6            equ	14758	;# 
  1100   0039A7                     PIR7            equ	14759	;# 
  1101   0039A8                     PIR8            equ	14760	;# 
  1102   0039A9                     PIR9            equ	14761	;# 
  1103   0039AA                     PIR10           equ	14762	;# 
  1104   0039C0                     PMD0            equ	14784	;# 
  1105   0039C1                     PMD1            equ	14785	;# 
  1106   0039C2                     PMD2            equ	14786	;# 
  1107   0039C3                     PMD3            equ	14787	;# 
  1108   0039C4                     PMD4            equ	14788	;# 
  1109   0039C5                     PMD5            equ	14789	;# 
  1110   0039C6                     PMD6            equ	14790	;# 
  1111   0039C7                     PMD7            equ	14791	;# 
  1112   0039D0                     BORCON          equ	14800	;# 
  1113   0039D1                     VREGCON         equ	14801	;# 
  1114   0039D8                     CPUDOZE         equ	14808	;# 
  1115   0039D9                     OSCCON1         equ	14809	;# 
  1116   0039DA                     OSCCON2         equ	14810	;# 
  1117   0039DB                     OSCCON3         equ	14811	;# 
  1118   0039DC                     OSCSTAT         equ	14812	;# 
  1119   0039DC                     OSCSTAT1        equ	14812	;# 
  1120   0039DD                     OSCEN           equ	14813	;# 
  1121   0039DE                     OSCTUNE         equ	14814	;# 
  1122   0039DF                     OSCFRQ          equ	14815	;# 
  1123   0039E0                     NVMADRL         equ	14816	;# 
  1124   0039E1                     NVMADRH         equ	14817	;# 
  1125   0039E3                     NVMDAT          equ	14819	;# 
  1126   0039E5                     NVMCON1         equ	14821	;# 
  1127   0039E6                     NVMCON2         equ	14822	;# 
  1128   0039EF                     PRLOCK          equ	14831	;# 
  1129   0039F1                     ISRPR           equ	14833	;# 
  1130   0039F2                     MAINPR          equ	14834	;# 
  1131   0039F3                     DMA1PR          equ	14835	;# 
  1132   0039F4                     DMA2PR          equ	14836	;# 
  1133   0039F7                     SCANPR          equ	14839	;# 
  1134   003A00                     RA0PPS          equ	14848	;# 
  1135   003A01                     RA1PPS          equ	14849	;# 
  1136   003A02                     RA2PPS          equ	14850	;# 
  1137   003A03                     RA3PPS          equ	14851	;# 
  1138   003A04                     RA4PPS          equ	14852	;# 
  1139   003A05                     RA5PPS          equ	14853	;# 
  1140   003A06                     RA6PPS          equ	14854	;# 
  1141   003A07                     RA7PPS          equ	14855	;# 
  1142   003A08                     RB0PPS          equ	14856	;# 
  1143   003A09                     RB1PPS          equ	14857	;# 
  1144   003A0A                     RB2PPS          equ	14858	;# 
  1145   003A0B                     RB3PPS          equ	14859	;# 
  1146   003A0C                     RB4PPS          equ	14860	;# 
  1147   003A0D                     RB5PPS          equ	14861	;# 
  1148   003A0E                     RB6PPS          equ	14862	;# 
  1149   003A0F                     RB7PPS          equ	14863	;# 
  1150   003A10                     RC0PPS          equ	14864	;# 
  1151   003A11                     RC1PPS          equ	14865	;# 
  1152   003A12                     RC2PPS          equ	14866	;# 
  1153   003A13                     RC3PPS          equ	14867	;# 
  1154   003A14                     RC4PPS          equ	14868	;# 
  1155   003A15                     RC5PPS          equ	14869	;# 
  1156   003A16                     RC6PPS          equ	14870	;# 
  1157   003A17                     RC7PPS          equ	14871	;# 
  1158   003A18                     RD0PPS          equ	14872	;# 
  1159   003A19                     RD1PPS          equ	14873	;# 
  1160   003A1A                     RD2PPS          equ	14874	;# 
  1161   003A1B                     RD3PPS          equ	14875	;# 
  1162   003A1C                     RD4PPS          equ	14876	;# 
  1163   003A1D                     RD5PPS          equ	14877	;# 
  1164   003A1E                     RD6PPS          equ	14878	;# 
  1165   003A1F                     RD7PPS          equ	14879	;# 
  1166   003A20                     RE0PPS          equ	14880	;# 
  1167   003A21                     RE1PPS          equ	14881	;# 
  1168   003A22                     RE2PPS          equ	14882	;# 
  1169   003A28                     RF0PPS          equ	14888	;# 
  1170   003A29                     RF1PPS          equ	14889	;# 
  1171   003A2A                     RF2PPS          equ	14890	;# 
  1172   003A2B                     RF3PPS          equ	14891	;# 
  1173   003A2C                     RF4PPS          equ	14892	;# 
  1174   003A2D                     RF5PPS          equ	14893	;# 
  1175   003A2E                     RF6PPS          equ	14894	;# 
  1176   003A2F                     RF7PPS          equ	14895	;# 
  1177   003A40                     ANSELA          equ	14912	;# 
  1178   003A41                     WPUA            equ	14913	;# 
  1179   003A42                     ODCONA          equ	14914	;# 
  1180   003A43                     SLRCONA         equ	14915	;# 
  1181   003A44                     INLVLA          equ	14916	;# 
  1182   003A45                     IOCAP           equ	14917	;# 
  1183   003A46                     IOCAN           equ	14918	;# 
  1184   003A47                     IOCAF           equ	14919	;# 
  1185   003A50                     ANSELB          equ	14928	;# 
  1186   003A51                     WPUB            equ	14929	;# 
  1187   003A52                     ODCONB          equ	14930	;# 
  1188   003A53                     SLRCONB         equ	14931	;# 
  1189   003A54                     INLVLB          equ	14932	;# 
  1190   003A55                     IOCBP           equ	14933	;# 
  1191   003A56                     IOCBN           equ	14934	;# 
  1192   003A57                     IOCBF           equ	14935	;# 
  1193   003A5A                     RB1I2C          equ	14938	;# 
  1194   003A5B                     RB2I2C          equ	14939	;# 
  1195   003A60                     ANSELC          equ	14944	;# 
  1196   003A61                     WPUC            equ	14945	;# 
  1197   003A62                     ODCONC          equ	14946	;# 
  1198   003A63                     SLRCONC         equ	14947	;# 
  1199   003A64                     INLVLC          equ	14948	;# 
  1200   003A65                     IOCCP           equ	14949	;# 
  1201   003A66                     IOCCN           equ	14950	;# 
  1202   003A67                     IOCCF           equ	14951	;# 
  1203   003A6A                     RC3I2C          equ	14954	;# 
  1204   003A6B                     RC4I2C          equ	14955	;# 
  1205   003A70                     ANSELD          equ	14960	;# 
  1206   003A71                     WPUD            equ	14961	;# 
  1207   003A72                     ODCOND          equ	14962	;# 
  1208   003A73                     SLRCOND         equ	14963	;# 
  1209   003A74                     INLVLD          equ	14964	;# 
  1210   003A7A                     RD0I2C          equ	14970	;# 
  1211   003A7B                     RD1I2C          equ	14971	;# 
  1212   003A80                     ANSELE          equ	14976	;# 
  1213   003A81                     WPUE            equ	14977	;# 
  1214   003A82                     ODCONE          equ	14978	;# 
  1215   003A83                     SLRCONE         equ	14979	;# 
  1216   003A84                     INLVLE          equ	14980	;# 
  1217   003A85                     IOCEP           equ	14981	;# 
  1218   003A86                     IOCEN           equ	14982	;# 
  1219   003A87                     IOCEF           equ	14983	;# 
  1220   003A90                     ANSELF          equ	14992	;# 
  1221   003A91                     WPUF            equ	14993	;# 
  1222   003A92                     ODCONF          equ	14994	;# 
  1223   003A93                     SLRCONF         equ	14995	;# 
  1224   003A94                     INLVLF          equ	14996	;# 
  1225   003ABF                     PPSLOCK         equ	15039	;# 
  1226   003AC0                     INT0PPS         equ	15040	;# 
  1227   003AC1                     INT1PPS         equ	15041	;# 
  1228   003AC2                     INT2PPS         equ	15042	;# 
  1229   003AC3                     T0CKIPPS        equ	15043	;# 
  1230   003AC4                     T1CKIPPS        equ	15044	;# 
  1231   003AC5                     T1GPPS          equ	15045	;# 
  1232   003AC6                     T3CKIPPS        equ	15046	;# 
  1233   003AC7                     T3GPPS          equ	15047	;# 
  1234   003AC8                     T5CKIPPS        equ	15048	;# 
  1235   003AC9                     T5GPPS          equ	15049	;# 
  1236   003ACA                     T2INPPS         equ	15050	;# 
  1237   003ACB                     T4INPPS         equ	15051	;# 
  1238   003ACC                     T6INPPS         equ	15052	;# 
  1239   003ACD                     CCP1PPS         equ	15053	;# 
  1240   003ACE                     CCP2PPS         equ	15054	;# 
  1241   003ACF                     CCP3PPS         equ	15055	;# 
  1242   003AD0                     CCP4PPS         equ	15056	;# 
  1243   003AD1                     SMT1WINPPS      equ	15057	;# 
  1244   003AD2                     SMT1SIGPPS      equ	15058	;# 
  1245   003AD3                     CWG1INPPS       equ	15059	;# 
  1246   003AD4                     CWG2INPPS       equ	15060	;# 
  1247   003AD5                     CWG3INPPS       equ	15061	;# 
  1248   003AD6                     MD1CARLPPS      equ	15062	;# 
  1249   003AD7                     MD1CARHPPS      equ	15063	;# 
  1250   003AD8                     MD1SRCPPS       equ	15064	;# 
  1251   003AD9                     CLCIN0PPS       equ	15065	;# 
  1252   003ADA                     CLCIN1PPS       equ	15066	;# 
  1253   003ADB                     CLCIN2PPS       equ	15067	;# 
  1254   003ADC                     CLCIN3PPS       equ	15068	;# 
  1255   003ADD                     ADACTPPS        equ	15069	;# 
  1256   003ADE                     SPI1SCKPPS      equ	15070	;# 
  1257   003ADF                     SPI1SDIPPS      equ	15071	;# 
  1258   003AE0                     SPI1SSPPS       equ	15072	;# 
  1259   003AE1                     I2C1SCLPPS      equ	15073	;# 
  1260   003AE2                     I2C1SDAPPS      equ	15074	;# 
  1261   003AE3                     I2C2SCLPPS      equ	15075	;# 
  1262   003AE4                     I2C2SDAPPS      equ	15076	;# 
  1263   003AE5                     U1RXPPS         equ	15077	;# 
  1264   003AE6                     U1CTSPPS        equ	15078	;# 
  1265   003AE8                     U2RXPPS         equ	15080	;# 
  1266   003AE9                     U2CTSPPS        equ	15081	;# 
  1267   003BC9                     DMA2BUF         equ	15305	;# 
  1268   003BCA                     DMA2DCNT        equ	15306	;# 
  1269   003BCA                     DMA2DCNTL       equ	15306	;# 
  1270   003BCB                     DMA2DCNTH       equ	15307	;# 
  1271   003BCC                     DMA2DPTR        equ	15308	;# 
  1272   003BCC                     DMA2DPTRL       equ	15308	;# 
  1273   003BCD                     DMA2DPTRH       equ	15309	;# 
  1274   003BCE                     DMA2DSZ         equ	15310	;# 
  1275   003BCE                     DMA2DSZL        equ	15310	;# 
  1276   003BCF                     DMA2DSZH        equ	15311	;# 
  1277   003BD0                     DMA2DSA         equ	15312	;# 
  1278   003BD0                     DMA2DSAL        equ	15312	;# 
  1279   003BD1                     DMA2DSAH        equ	15313	;# 
  1280   003BD2                     DMA2SCNT        equ	15314	;# 
  1281   003BD2                     DMA2SCNTL       equ	15314	;# 
  1282   003BD3                     DMA2SCNTH       equ	15315	;# 
  1283   003BD4                     DMA2SPTR        equ	15316	;# 
  1284   003BD4                     DMA2SPTRL       equ	15316	;# 
  1285   003BD5                     DMA2SPTRH       equ	15317	;# 
  1286   003BD6                     DMA2SPTRU       equ	15318	;# 
  1287   003BD7                     DMA2SSZ         equ	15319	;# 
  1288   003BD7                     DMA2SSZL        equ	15319	;# 
  1289   003BD8                     DMA2SSZH        equ	15320	;# 
  1290   003BD9                     DMA2SSA         equ	15321	;# 
  1291   003BD9                     DMA2SSAL        equ	15321	;# 
  1292   003BDA                     DMA2SSAH        equ	15322	;# 
  1293   003BDB                     DMA2SSAU        equ	15323	;# 
  1294   003BDC                     DMA2CON0        equ	15324	;# 
  1295   003BDD                     DMA2CON1        equ	15325	;# 
  1296   003BDE                     DMA2AIRQ        equ	15326	;# 
  1297   003BDF                     DMA2SIRQ        equ	15327	;# 
  1298   003BE9                     DMA1BUF         equ	15337	;# 
  1299   003BEA                     DMA1DCNT        equ	15338	;# 
  1300   003BEA                     DMA1DCNTL       equ	15338	;# 
  1301   003BEB                     DMA1DCNTH       equ	15339	;# 
  1302   003BEC                     DMA1DPTR        equ	15340	;# 
  1303   003BEC                     DMA1DPTRL       equ	15340	;# 
  1304   003BED                     DMA1DPTRH       equ	15341	;# 
  1305   003BEE                     DMA1DSZ         equ	15342	;# 
  1306   003BEE                     DMA1DSZL        equ	15342	;# 
  1307   003BEF                     DMA1DSZH        equ	15343	;# 
  1308   003BF0                     DMA1DSA         equ	15344	;# 
  1309   003BF0                     DMA1DSAL        equ	15344	;# 
  1310   003BF1                     DMA1DSAH        equ	15345	;# 
  1311   003BF2                     DMA1SCNT        equ	15346	;# 
  1312   003BF2                     DMA1SCNTL       equ	15346	;# 
  1313   003BF3                     DMA1SCNTH       equ	15347	;# 
  1314   003BF4                     DMA1SPTR        equ	15348	;# 
  1315   003BF4                     DMA1SPTRL       equ	15348	;# 
  1316   003BF5                     DMA1SPTRH       equ	15349	;# 
  1317   003BF6                     DMA1SPTRU       equ	15350	;# 
  1318   003BF7                     DMA1SSZ         equ	15351	;# 
  1319   003BF7                     DMA1SSZL        equ	15351	;# 
  1320   003BF8                     DMA1SSZH        equ	15352	;# 
  1321   003BF9                     DMA1SSA         equ	15353	;# 
  1322   003BF9                     DMA1SSAL        equ	15353	;# 
  1323   003BFA                     DMA1SSAH        equ	15354	;# 
  1324   003BFB                     DMA1SSAU        equ	15355	;# 
  1325   003BFC                     DMA1CON0        equ	15356	;# 
  1326   003BFD                     DMA1CON1        equ	15357	;# 
  1327   003BFE                     DMA1AIRQ        equ	15358	;# 
  1328   003BFF                     DMA1SIRQ        equ	15359	;# 
  1329   003C56                     CLC4CON         equ	15446	;# 
  1330   003C57                     CLC4POL         equ	15447	;# 
  1331   003C58                     CLC4SEL0        equ	15448	;# 
  1332   003C59                     CLC4SEL1        equ	15449	;# 
  1333   003C5A                     CLC4SEL2        equ	15450	;# 
  1334   003C5B                     CLC4SEL3        equ	15451	;# 
  1335   003C5C                     CLC4GLS0        equ	15452	;# 
  1336   003C5D                     CLC4GLS1        equ	15453	;# 
  1337   003C5E                     CLC4GLS2        equ	15454	;# 
  1338   003C5F                     CLC4GLS3        equ	15455	;# 
  1339   003C60                     CLC3CON         equ	15456	;# 
  1340   003C61                     CLC3POL         equ	15457	;# 
  1341   003C62                     CLC3SEL0        equ	15458	;# 
  1342   003C63                     CLC3SEL1        equ	15459	;# 
  1343   003C64                     CLC3SEL2        equ	15460	;# 
  1344   003C65                     CLC3SEL3        equ	15461	;# 
  1345   003C66                     CLC3GLS0        equ	15462	;# 
  1346   003C67                     CLC3GLS1        equ	15463	;# 
  1347   003C68                     CLC3GLS2        equ	15464	;# 
  1348   003C69                     CLC3GLS3        equ	15465	;# 
  1349   003C6A                     CLC2CON         equ	15466	;# 
  1350   003C6B                     CLC2POL         equ	15467	;# 
  1351   003C6C                     CLC2SEL0        equ	15468	;# 
  1352   003C6D                     CLC2SEL1        equ	15469	;# 
  1353   003C6E                     CLC2SEL2        equ	15470	;# 
  1354   003C6F                     CLC2SEL3        equ	15471	;# 
  1355   003C70                     CLC2GLS0        equ	15472	;# 
  1356   003C71                     CLC2GLS1        equ	15473	;# 
  1357   003C72                     CLC2GLS2        equ	15474	;# 
  1358   003C73                     CLC2GLS3        equ	15475	;# 
  1359   003C74                     CLC1CON         equ	15476	;# 
  1360   003C75                     CLC1POL         equ	15477	;# 
  1361   003C76                     CLC1SEL0        equ	15478	;# 
  1362   003C77                     CLC1SEL1        equ	15479	;# 
  1363   003C78                     CLC1SEL2        equ	15480	;# 
  1364   003C79                     CLC1SEL3        equ	15481	;# 
  1365   003C7A                     CLC1GLS0        equ	15482	;# 
  1366   003C7B                     CLC1GLS1        equ	15483	;# 
  1367   003C7C                     CLC1GLS2        equ	15484	;# 
  1368   003C7D                     CLC1GLS3        equ	15485	;# 
  1369   003C7E                     CLCDATA0        equ	15486	;# 
  1370   003CE5                     CLKRCON         equ	15589	;# 
  1371   003CE6                     CLKRCLK         equ	15590	;# 
  1372   003CFA                     MD1CON0         equ	15610	;# 
  1373   003CFB                     MD1CON1         equ	15611	;# 
  1374   003CFC                     MD1SRC          equ	15612	;# 
  1375   003CFD                     MD1CARL         equ	15613	;# 
  1376   003CFE                     MD1CARH         equ	15614	;# 
  1377   003D10                     SPI1RXB         equ	15632	;# 
  1378   003D11                     SPI1TXB         equ	15633	;# 
  1379   003D12                     SPI1TCNT        equ	15634	;# 
  1380   003D12                     SPI1TCNTL       equ	15634	;# 
  1381   003D13                     SPI1TCNTH       equ	15635	;# 
  1382   003D14                     SPI1CON0        equ	15636	;# 
  1383   003D15                     SPI1CON1        equ	15637	;# 
  1384   003D16                     SPI1CON2        equ	15638	;# 
  1385   003D17                     SPI1STATUS      equ	15639	;# 
  1386   003D18                     SPI1TWIDTH      equ	15640	;# 
  1387   003D19                     SPI1BAUD        equ	15641	;# 
  1388   003D1A                     SPI1INTF        equ	15642	;# 
  1389   003D1B                     SPI1INTE        equ	15643	;# 
  1390   003D1C                     SPI1CLK         equ	15644	;# 
  1391   003D54                     I2C2RXB         equ	15700	;# 
  1392   003D55                     I2C2TXB         equ	15701	;# 
  1393   003D56                     I2C2CNT         equ	15702	;# 
  1394   003D57                     I2C2ADB0        equ	15703	;# 
  1395   003D58                     I2C2ADB1        equ	15704	;# 
  1396   003D59                     I2C2ADR0        equ	15705	;# 
  1397   003D5A                     I2C2ADR1        equ	15706	;# 
  1398   003D5B                     I2C2ADR2        equ	15707	;# 
  1399   003D5C                     I2C2ADR3        equ	15708	;# 
  1400   003D5D                     I2C2CON0        equ	15709	;# 
  1401   003D5E                     I2C2CON1        equ	15710	;# 
  1402   003D5F                     I2C2CON2        equ	15711	;# 
  1403   003D60                     I2C2ERR         equ	15712	;# 
  1404   003D61                     I2C2STAT0       equ	15713	;# 
  1405   003D62                     I2C2STAT1       equ	15714	;# 
  1406   003D63                     I2C2PIR         equ	15715	;# 
  1407   003D64                     I2C2PIE         equ	15716	;# 
  1408   003D65                     I2C2CLK         equ	15717	;# 
  1409   003D66                     I2C2BTO         equ	15718	;# 
  1410   003D6A                     I2C1RXB         equ	15722	;# 
  1411   003D6B                     I2C1TXB         equ	15723	;# 
  1412   003D6C                     I2C1CNT         equ	15724	;# 
  1413   003D6D                     I2C1ADB0        equ	15725	;# 
  1414   003D6E                     I2C1ADB1        equ	15726	;# 
  1415   003D6F                     I2C1ADR0        equ	15727	;# 
  1416   003D70                     I2C1ADR1        equ	15728	;# 
  1417   003D71                     I2C1ADR2        equ	15729	;# 
  1418   003D72                     I2C1ADR3        equ	15730	;# 
  1419   003D73                     I2C1CON0        equ	15731	;# 
  1420   003D74                     I2C1CON1        equ	15732	;# 
  1421   003D75                     I2C1CON2        equ	15733	;# 
  1422   003D76                     I2C1ERR         equ	15734	;# 
  1423   003D77                     I2C1STAT0       equ	15735	;# 
  1424   003D78                     I2C1STAT1       equ	15736	;# 
  1425   003D79                     I2C1PIR         equ	15737	;# 
  1426   003D7A                     I2C1PIE         equ	15738	;# 
  1427   003D7B                     I2C1CLK         equ	15739	;# 
  1428   003D7C                     I2C1BTO         equ	15740	;# 
  1429   003DD0                     U2RXB           equ	15824	;# 
  1430   003DD0                     U2RXBL          equ	15824	;# 
  1431   003DD2                     U2TXB           equ	15826	;# 
  1432   003DD2                     U2TXBL          equ	15826	;# 
  1433   003DD4                     U2P1            equ	15828	;# 
  1434   003DD4                     U2P1L           equ	15828	;# 
  1435   003DD6                     U2P2            equ	15830	;# 
  1436   003DD6                     U2P2L           equ	15830	;# 
  1437   003DD8                     U2P3            equ	15832	;# 
  1438   003DD8                     U2P3L           equ	15832	;# 
  1439   003DDA                     U2CON0          equ	15834	;# 
  1440   003DDB                     U2CON1          equ	15835	;# 
  1441   003DDC                     U2CON2          equ	15836	;# 
  1442   003DDD                     U2BRG           equ	15837	;# 
  1443   003DDD                     U2BRGL          equ	15837	;# 
  1444   003DDE                     U2BRGH          equ	15838	;# 
  1445   003DDF                     U2FIFO          equ	15839	;# 
  1446   003DE0                     U2UIR           equ	15840	;# 
  1447   003DE1                     U2ERRIR         equ	15841	;# 
  1448   003DE2                     U2ERRIE         equ	15842	;# 
  1449   003DE8                     U1RXB           equ	15848	;# 
  1450   003DE8                     U1RXBL          equ	15848	;# 
  1451   003DE9                     U1RXCHK         equ	15849	;# 
  1452   003DEA                     U1TXB           equ	15850	;# 
  1453   003DEA                     U1TXBL          equ	15850	;# 
  1454   003DEB                     U1TXCHK         equ	15851	;# 
  1455   003DEC                     U1P1            equ	15852	;# 
  1456   003DEC                     U1P1L           equ	15852	;# 
  1457   003DED                     U1P1H           equ	15853	;# 
  1458   003DEE                     U1P2            equ	15854	;# 
  1459   003DEE                     U1P2L           equ	15854	;# 
  1460   003DEF                     U1P2H           equ	15855	;# 
  1461   003DF0                     U1P3            equ	15856	;# 
  1462   003DF0                     U1P3L           equ	15856	;# 
  1463   003DF1                     U1P3H           equ	15857	;# 
  1464   003DF2                     U1CON0          equ	15858	;# 
  1465   003DF3                     U1CON1          equ	15859	;# 
  1466   003DF4                     U1CON2          equ	15860	;# 
  1467   003DF5                     U1BRG           equ	15861	;# 
  1468   003DF5                     U1BRGL          equ	15861	;# 
  1469   003DF6                     U1BRGH          equ	15862	;# 
  1470   003DF7                     U1FIFO          equ	15863	;# 
  1471   003DF8                     U1UIR           equ	15864	;# 
  1472   003DF9                     U1ERRIR         equ	15865	;# 
  1473   003DFA                     U1ERRIE         equ	15866	;# 
  1474   003E9C                     DAC1CON1        equ	16028	;# 
  1475   003E9E                     DAC1CON0        equ	16030	;# 
  1476   003EB8                     CM2CON0         equ	16056	;# 
  1477   003EB9                     CM2CON1         equ	16057	;# 
  1478   003EBA                     CM2NCH          equ	16058	;# 
  1479   003EBB                     CM2PCH          equ	16059	;# 
  1480   003EBC                     CM1CON0         equ	16060	;# 
  1481   003EBD                     CM1CON1         equ	16061	;# 
  1482   003EBE                     CM1NCH          equ	16062	;# 
  1483   003EBF                     CM1PCH          equ	16063	;# 
  1484   003EC0                     CMOUT           equ	16064	;# 
  1485   003EC1                     FVRCON          equ	16065	;# 
  1486   003EC3                     ZCDCON          equ	16067	;# 
  1487   003EC9                     HLVDCON0        equ	16073	;# 
  1488   003ECA                     HLVDCON1        equ	16074	;# 
  1489   003ED7                     ADCP            equ	16087	;# 
  1490   003EDE                     ADLTH           equ	16094	;# 
  1491   003EDE                     ADLTHL          equ	16094	;# 
  1492   003EDF                     ADLTHH          equ	16095	;# 
  1493   003EE0                     ADUTH           equ	16096	;# 
  1494   003EE0                     ADUTHL          equ	16096	;# 
  1495   003EE1                     ADUTHH          equ	16097	;# 
  1496   003EE2                     ADERR           equ	16098	;# 
  1497   003EE2                     ADERRL          equ	16098	;# 
  1498   003EE3                     ADERRH          equ	16099	;# 
  1499   003EE4                     ADSTPT          equ	16100	;# 
  1500   003EE4                     ADSTPTL         equ	16100	;# 
  1501   003EE5                     ADSTPTH         equ	16101	;# 
  1502   003EE6                     ADFLTR          equ	16102	;# 
  1503   003EE6                     ADFLTRL         equ	16102	;# 
  1504   003EE7                     ADFLTRH         equ	16103	;# 
  1505   003EE8                     ADACC           equ	16104	;# 
  1506   003EE8                     ADACCL          equ	16104	;# 
  1507   003EE9                     ADACCH          equ	16105	;# 
  1508   003EEA                     ADACCU          equ	16106	;# 
  1509   003EEB                     ADCNT           equ	16107	;# 
  1510   003EEC                     ADRPT           equ	16108	;# 
  1511   003EED                     ADPREV          equ	16109	;# 
  1512   003EED                     ADPREVL         equ	16109	;# 
  1513   003EEE                     ADPREVH         equ	16110	;# 
  1514   003EEF                     ADRES           equ	16111	;# 
  1515   003EEF                     ADRESL          equ	16111	;# 
  1516   003EF0                     ADRESH          equ	16112	;# 
  1517   003EF1                     ADPCH           equ	16113	;# 
  1518   003EF3                     ADACQ           equ	16115	;# 
  1519   003EF3                     ADACQL          equ	16115	;# 
  1520   003EF4                     ADACQH          equ	16116	;# 
  1521   003EF5                     ADCAP           equ	16117	;# 
  1522   003EF6                     ADPRE           equ	16118	;# 
  1523   003EF6                     ADPREL          equ	16118	;# 
  1524   003EF7                     ADPREH          equ	16119	;# 
  1525   003EF8                     ADCON0          equ	16120	;# 
  1526   003EF9                     ADCON1          equ	16121	;# 
  1527   003EFA                     ADCON2          equ	16122	;# 
  1528   003EFB                     ADCON3          equ	16123	;# 
  1529   003EFC                     ADSTAT          equ	16124	;# 
  1530   003EFD                     ADREF           equ	16125	;# 
  1531   003EFE                     ADACT           equ	16126	;# 
  1532   003EFF                     ADCLK           equ	16127	;# 
  1533   003F12                     SMT1TMR         equ	16146	;# 
  1534   003F12                     SMT1TMRL        equ	16146	;# 
  1535   003F13                     SMT1TMRH        equ	16147	;# 
  1536   003F14                     SMT1TMRU        equ	16148	;# 
  1537   003F15                     SMT1CPR         equ	16149	;# 
  1538   003F15                     SMT1CPRL        equ	16149	;# 
  1539   003F16                     SMT1CPRH        equ	16150	;# 
  1540   003F17                     SMT1CPRU        equ	16151	;# 
  1541   003F18                     SMT1CPW         equ	16152	;# 
  1542   003F18                     SMT1CPWL        equ	16152	;# 
  1543   003F19                     SMT1CPWH        equ	16153	;# 
  1544   003F1A                     SMT1CPWU        equ	16154	;# 
  1545   003F1B                     SMT1PR          equ	16155	;# 
  1546   003F1B                     SMT1PRL         equ	16155	;# 
  1547   003F1C                     SMT1PRH         equ	16156	;# 
  1548   003F1D                     SMT1PRU         equ	16157	;# 
  1549   003F1E                     SMT1CON0        equ	16158	;# 
  1550   003F1F                     SMT1CON1        equ	16159	;# 
  1551   003F20                     SMT1STAT        equ	16160	;# 
  1552   003F21                     SMT1CLK         equ	16161	;# 
  1553   003F22                     SMT1SIG         equ	16162	;# 
  1554   003F23                     SMT1WIN         equ	16163	;# 
  1555   003F38                     NCO1ACC         equ	16184	;# 
  1556   003F38                     NCO1ACCL        equ	16184	;# 
  1557   003F39                     NCO1ACCH        equ	16185	;# 
  1558   003F3A                     NCO1ACCU        equ	16186	;# 
  1559   003F3B                     NCO1INC         equ	16187	;# 
  1560   003F3B                     NCO1INCL        equ	16187	;# 
  1561   003F3C                     NCO1INCH        equ	16188	;# 
  1562   003F3D                     NCO1INCU        equ	16189	;# 
  1563   003F3E                     NCO1CON         equ	16190	;# 
  1564   003F3F                     NCO1CLK         equ	16191	;# 
  1565   003F40                     CWG3CLK         equ	16192	;# 
  1566   003F40                     CWG3CLKCON      equ	16192	;# 
  1567   003F41                     CWG3ISM         equ	16193	;# 
  1568   003F41                     CWG3DAT         equ	16193	;# 
  1569   003F42                     CWG3DBR         equ	16194	;# 
  1570   003F43                     CWG3DBF         equ	16195	;# 
  1571   003F44                     CWG3CON0        equ	16196	;# 
  1572   003F45                     CWG3CON1        equ	16197	;# 
  1573   003F46                     CWG3AS0         equ	16198	;# 
  1574   003F47                     CWG3AS1         equ	16199	;# 
  1575   003F48                     CWG3STR         equ	16200	;# 
  1576   003F49                     CWG2CLK         equ	16201	;# 
  1577   003F49                     CWG2CLKCON      equ	16201	;# 
  1578   003F4A                     CWG2ISM         equ	16202	;# 
  1579   003F4A                     CWG2DAT         equ	16202	;# 
  1580   003F4B                     CWG2DBR         equ	16203	;# 
  1581   003F4C                     CWG2DBF         equ	16204	;# 
  1582   003F4D                     CWG2CON0        equ	16205	;# 
  1583   003F4E                     CWG2CON1        equ	16206	;# 
  1584   003F4F                     CWG2AS0         equ	16207	;# 
  1585   003F50                     CWG2AS1         equ	16208	;# 
  1586   003F51                     CWG2STR         equ	16209	;# 
  1587   003F52                     CWG1CLK         equ	16210	;# 
  1588   003F52                     CWG1CLKCON      equ	16210	;# 
  1589   003F53                     CWG1ISM         equ	16211	;# 
  1590   003F53                     CWG1DAT         equ	16211	;# 
  1591   003F54                     CWG1DBR         equ	16212	;# 
  1592   003F55                     CWG1DBF         equ	16213	;# 
  1593   003F56                     CWG1CON0        equ	16214	;# 
  1594   003F57                     CWG1CON1        equ	16215	;# 
  1595   003F58                     CWG1AS0         equ	16216	;# 
  1596   003F59                     CWG1AS1         equ	16217	;# 
  1597   003F5A                     CWG1STR         equ	16218	;# 
  1598   003F5E                     CCPTMRS0        equ	16222	;# 
  1599   003F5F                     CCPTMRS1        equ	16223	;# 
  1600   003F60                     PWM8DC          equ	16224	;# 
  1601   003F60                     PWM8DCL         equ	16224	;# 
  1602   003F61                     PWM8DCH         equ	16225	;# 
  1603   003F62                     PWM8CON         equ	16226	;# 
  1604   003F64                     PWM7DC          equ	16228	;# 
  1605   003F64                     PWM7DCL         equ	16228	;# 
  1606   003F65                     PWM7DCH         equ	16229	;# 
  1607   003F66                     PWM7CON         equ	16230	;# 
  1608   003F68                     PWM6DC          equ	16232	;# 
  1609   003F68                     PWM6DCL         equ	16232	;# 
  1610   003F69                     PWM6DCH         equ	16233	;# 
  1611   003F6A                     PWM6CON         equ	16234	;# 
  1612   003F6C                     PWM5DC          equ	16236	;# 
  1613   003F6C                     PWM5DCL         equ	16236	;# 
  1614   003F6D                     PWM5DCH         equ	16237	;# 
  1615   003F6E                     PWM5CON         equ	16238	;# 
  1616   003F70                     CCPR4           equ	16240	;# 
  1617   003F70                     CCPR4L          equ	16240	;# 
  1618   003F71                     CCPR4H          equ	16241	;# 
  1619   003F72                     CCP4CON         equ	16242	;# 
  1620   003F73                     CCP4CAP         equ	16243	;# 
  1621   003F74                     CCPR3           equ	16244	;# 
  1622   003F74                     CCPR3L          equ	16244	;# 
  1623   003F75                     CCPR3H          equ	16245	;# 
  1624   003F76                     CCP3CON         equ	16246	;# 
  1625   003F77                     CCP3CAP         equ	16247	;# 
  1626   003F78                     CCPR2           equ	16248	;# 
  1627   003F78                     CCPR2L          equ	16248	;# 
  1628   003F79                     CCPR2H          equ	16249	;# 
  1629   003F7A                     CCP2CON         equ	16250	;# 
  1630   003F7B                     CCP2CAP         equ	16251	;# 
  1631   003F7C                     CCPR1           equ	16252	;# 
  1632   003F7C                     CCPR1L          equ	16252	;# 
  1633   003F7D                     CCPR1H          equ	16253	;# 
  1634   003F7E                     CCP1CON         equ	16254	;# 
  1635   003F7F                     CCP1CAP         equ	16255	;# 
  1636   003F92                     T6TMR           equ	16274	;# 
  1637   003F92                     TMR6            equ	16274	;# 
  1638   003F93                     T6PR            equ	16275	;# 
  1639   003F93                     PR6             equ	16275	;# 
  1640   003F94                     T6CON           equ	16276	;# 
  1641   003F95                     T6HLT           equ	16277	;# 
  1642   003F96                     T6CLKCON        equ	16278	;# 
  1643   003F96                     T6CLK           equ	16278	;# 
  1644   003F97                     T6RST           equ	16279	;# 
  1645   003F98                     TMR5            equ	16280	;# 
  1646   003F98                     TMR5L           equ	16280	;# 
  1647   003F99                     TMR5H           equ	16281	;# 
  1648   003F9A                     T5CON           equ	16282	;# 
  1649   003F9A                     TMR5CON         equ	16282	;# 
  1650   003F9B                     T5GCON          equ	16283	;# 
  1651   003F9B                     TMR5GCON        equ	16283	;# 
  1652   003F9C                     T5GATE          equ	16284	;# 
  1653   003F9C                     TMR5GATE        equ	16284	;# 
  1654   003F9D                     T5CLK           equ	16285	;# 
  1655   003F9D                     TMR5CLK         equ	16285	;# 
  1656   003F9D                     PR5             equ	16285	;# 
  1657   003F9E                     T4TMR           equ	16286	;# 
  1658   003F9E                     TMR4            equ	16286	;# 
  1659   003F9F                     T4PR            equ	16287	;# 
  1660   003F9F                     PR4             equ	16287	;# 
  1661   003FA0                     T4CON           equ	16288	;# 
  1662   003FA1                     T4HLT           equ	16289	;# 
  1663   003FA2                     T4CLKCON        equ	16290	;# 
  1664   003FA2                     T4CLK           equ	16290	;# 
  1665   003FA3                     T4RST           equ	16291	;# 
  1666   003FA4                     TMR3            equ	16292	;# 
  1667   003FA4                     TMR3L           equ	16292	;# 
  1668   003FA5                     TMR3H           equ	16293	;# 
  1669   003FA6                     T3CON           equ	16294	;# 
  1670   003FA6                     TMR3CON         equ	16294	;# 
  1671   003FA7                     T3GCON          equ	16295	;# 
  1672   003FA7                     TMR3GCON        equ	16295	;# 
  1673   003FA8                     T3GATE          equ	16296	;# 
  1674   003FA8                     TMR3GATE        equ	16296	;# 
  1675   003FA9                     T3CLK           equ	16297	;# 
  1676   003FA9                     TMR3CLK         equ	16297	;# 
  1677   003FA9                     PR3             equ	16297	;# 
  1678   003FAA                     T2TMR           equ	16298	;# 
  1679   003FAA                     TMR2            equ	16298	;# 
  1680   003FAB                     T2PR            equ	16299	;# 
  1681   003FAB                     PR2             equ	16299	;# 
  1682   003FAC                     T2CON           equ	16300	;# 
  1683   003FAD                     T2HLT           equ	16301	;# 
  1684   003FAE                     T2CLKCON        equ	16302	;# 
  1685   003FAE                     T2CLK           equ	16302	;# 
  1686   003FAF                     T2RST           equ	16303	;# 
  1687   003FB0                     TMR1            equ	16304	;# 
  1688   003FB0                     TMR1L           equ	16304	;# 
  1689   003FB1                     TMR1H           equ	16305	;# 
  1690   003FB2                     T1CON           equ	16306	;# 
  1691   003FB2                     TMR1CON         equ	16306	;# 
  1692   003FB3                     T1GCON          equ	16307	;# 
  1693   003FB3                     TMR1GCON        equ	16307	;# 
  1694   003FB4                     T1GATE          equ	16308	;# 
  1695   003FB4                     TMR1GATE        equ	16308	;# 
  1696   003FB5                     T1CLK           equ	16309	;# 
  1697   003FB5                     TMR1CLK         equ	16309	;# 
  1698   003FB5                     PR1             equ	16309	;# 
  1699   003FB6                     TMR0L           equ	16310	;# 
  1700   003FB6                     TMR0            equ	16310	;# 
  1701   003FB7                     TMR0H           equ	16311	;# 
  1702   003FB7                     PR0             equ	16311	;# 
  1703   003FB8                     T0CON0          equ	16312	;# 
  1704   003FB9                     T0CON1          equ	16313	;# 
  1705   003FBA                     LATA            equ	16314	;# 
  1706   003FBB                     LATB            equ	16315	;# 
  1707   003FBC                     LATC            equ	16316	;# 
  1708   003FBD                     LATD            equ	16317	;# 
  1709   003FBE                     LATE            equ	16318	;# 
  1710   003FBF                     LATF            equ	16319	;# 
  1711   003FC2                     TRISA           equ	16322	;# 
  1712   003FC3                     TRISB           equ	16323	;# 
  1713   003FC4                     TRISC           equ	16324	;# 
  1714   003FC5                     TRISD           equ	16325	;# 
  1715   003FC6                     TRISE           equ	16326	;# 
  1716   003FC7                     TRISF           equ	16327	;# 
  1717   003FCA                     PORTA           equ	16330	;# 
  1718   003FCB                     PORTB           equ	16331	;# 
  1719   003FCC                     PORTC           equ	16332	;# 
  1720   003FCD                     PORTD           equ	16333	;# 
  1721   003FCE                     PORTE           equ	16334	;# 
  1722   003FCF                     PORTF           equ	16335	;# 
  1723   003FD2                     INTCON0         equ	16338	;# 
  1724   003FD3                     INTCON1         equ	16339	;# 
  1725   003FD4                     IVTLOCK         equ	16340	;# 
  1726   003FD5                     IVTBASE         equ	16341	;# 
  1727   003FD5                     IVTBASEL        equ	16341	;# 
  1728   003FD6                     IVTBASEH        equ	16342	;# 
  1729   003FD7                     IVTBASEU        equ	16343	;# 
  1730   003FD8                     STATUS          equ	16344	;# 
  1731   003FD9                     FSR2            equ	16345	;# 
  1732   003FD9                     FSR2L           equ	16345	;# 
  1733   003FDA                     FSR2H           equ	16346	;# 
  1734   003FDB                     PLUSW2          equ	16347	;# 
  1735   003FDC                     PREINC2         equ	16348	;# 
  1736   003FDD                     POSTDEC2        equ	16349	;# 
  1737   003FDE                     POSTINC2        equ	16350	;# 
  1738   003FDF                     INDF2           equ	16351	;# 
  1739   003FE0                     BSR             equ	16352	;# 
  1740   003FE1                     FSR1            equ	16353	;# 
  1741   003FE1                     FSR1L           equ	16353	;# 
  1742   003FE2                     FSR1H           equ	16354	;# 
  1743   003FE3                     PLUSW1          equ	16355	;# 
  1744   003FE4                     PREINC1         equ	16356	;# 
  1745   003FE5                     POSTDEC1        equ	16357	;# 
  1746   003FE6                     POSTINC1        equ	16358	;# 
  1747   003FE7                     INDF1           equ	16359	;# 
  1748   003FE8                     WREG            equ	16360	;# 
  1749   003FE9                     FSR0            equ	16361	;# 
  1750   003FE9                     FSR0L           equ	16361	;# 
  1751   003FEA                     FSR0H           equ	16362	;# 
  1752   003FEB                     PLUSW0          equ	16363	;# 
  1753   003FEC                     PREINC0         equ	16364	;# 
  1754   003FED                     POSTDEC0        equ	16365	;# 
  1755   003FEE                     POSTINC0        equ	16366	;# 
  1756   003FEF                     INDF0           equ	16367	;# 
  1757   003FF0                     PCON0           equ	16368	;# 
  1758   003FF1                     PCON1           equ	16369	;# 
  1759   003FF3                     PROD            equ	16371	;# 
  1760   003FF3                     PRODL           equ	16371	;# 
  1761   003FF4                     PRODH           equ	16372	;# 
  1762   003FF5                     TABLAT          equ	16373	;# 
  1763   003FF6                     TBLPTR          equ	16374	;# 
  1764   003FF6                     TBLPTRL         equ	16374	;# 
  1765   003FF7                     TBLPTRH         equ	16375	;# 
  1766   003FF8                     TBLPTRU         equ	16376	;# 
  1767   003FF9                     PCLAT           equ	16377	;# 
  1768   003FF9                     PCL             equ	16377	;# 
  1769   003FFA                     PCLATH          equ	16378	;# 
  1770   003FFB                     PCLATU          equ	16379	;# 
  1771   003FFC                     STKPTR          equ	16380	;# 
  1772   003FFD                     TOS             equ	16381	;# 
  1773   003FFD                     TOSL            equ	16381	;# 
  1774   003FFE                     TOSH            equ	16382	;# 
  1775   003FFF                     TOSU            equ	16383	;# 
  1776   003880                     STATUS_CSHAD    equ	14464	;# 
  1777   003881                     WREG_CSHAD      equ	14465	;# 
  1778   003882                     BSR_CSHAD       equ	14466	;# 
  1779   003883                     SHADCON         equ	14467	;# 
  1780   003884                     STATUS_SHAD     equ	14468	;# 
  1781   003885                     WREG_SHAD       equ	14469	;# 
  1782   003886                     BSR_SHAD        equ	14470	;# 
  1783   003887                     PCLATH_SHAD     equ	14471	;# 
  1784   003888                     PCLATU_SHAD     equ	14472	;# 
  1785   003889                     FSR0SH          equ	14473	;# 
  1786   003889                     FSR0L_SHAD      equ	14473	;# 
  1787   00388A                     FSR0H_SHAD      equ	14474	;# 
  1788   00388B                     FSR1SH          equ	14475	;# 
  1789   00388B                     FSR1L_SHAD      equ	14475	;# 
  1790   00388C                     FSR1H_SHAD      equ	14476	;# 
  1791   00388D                     FSR2SH          equ	14477	;# 
  1792   00388D                     FSR2L_SHAD      equ	14477	;# 
  1793   00388E                     FSR2H_SHAD      equ	14478	;# 
  1794   00388F                     PRODSH          equ	14479	;# 
  1795   00388F                     PRODL_SHAD      equ	14479	;# 
  1796   003890                     PRODH_SHAD      equ	14480	;# 
  1797   00389D                     IVTADL          equ	14493	;# 
  1798   00389E                     IVTADH          equ	14494	;# 
  1799   00389F                     IVTADU          equ	14495	;# 
  1800   00395B                     WDTCON0         equ	14683	;# 
  1801   00395C                     WDTCON1         equ	14684	;# 
  1802   00395D                     WDTPSL          equ	14685	;# 
  1803   00395E                     WDTPSH          equ	14686	;# 
  1804   00395F                     WDTTMR          equ	14687	;# 
  1805   003960                     CRCDATA         equ	14688	;# 
  1806   003960                     CRCDATL         equ	14688	;# 
  1807   003961                     CRCDATH         equ	14689	;# 
  1808   003962                     CRCACC          equ	14690	;# 
  1809   003962                     CRCACCL         equ	14690	;# 
  1810   003963                     CRCACCH         equ	14691	;# 
  1811   003964                     CRCSHFT         equ	14692	;# 
  1812   003964                     CRCSHIFTL       equ	14692	;# 
  1813   003965                     CRCSHIFTH       equ	14693	;# 
  1814   003966                     CRCXOR          equ	14694	;# 
  1815   003966                     CRCXORL         equ	14694	;# 
  1816   003967                     CRCXORH         equ	14695	;# 
  1817   003968                     CRCCON0         equ	14696	;# 
  1818   003969                     CRCCON1         equ	14697	;# 
  1819   003976                     SCANLADR        equ	14710	;# 
  1820   003976                     SCANLADRL       equ	14710	;# 
  1821   003977                     SCANLADRH       equ	14711	;# 
  1822   003978                     SCANLADRU       equ	14712	;# 
  1823   003979                     SCANHADR        equ	14713	;# 
  1824   003979                     SCANHADRL       equ	14713	;# 
  1825   00397A                     SCANHADRH       equ	14714	;# 
  1826   00397B                     SCANHADRU       equ	14715	;# 
  1827   00397C                     SCANCON0        equ	14716	;# 
  1828   00397D                     SCANTRIG        equ	14717	;# 
  1829   003980                     IPR0            equ	14720	;# 
  1830   003981                     IPR1            equ	14721	;# 
  1831   003982                     IPR2            equ	14722	;# 
  1832   003983                     IPR3            equ	14723	;# 
  1833   003984                     IPR4            equ	14724	;# 
  1834   003985                     IPR5            equ	14725	;# 
  1835   003986                     IPR6            equ	14726	;# 
  1836   003987                     IPR7            equ	14727	;# 
  1837   003988                     IPR8            equ	14728	;# 
  1838   003989                     IPR9            equ	14729	;# 
  1839   00398A                     IPR10           equ	14730	;# 
  1840   003990                     PIE0            equ	14736	;# 
  1841   003991                     PIE1            equ	14737	;# 
  1842   003992                     PIE2            equ	14738	;# 
  1843   003993                     PIE3            equ	14739	;# 
  1844   003994                     PIE4            equ	14740	;# 
  1845   003995                     PIE5            equ	14741	;# 
  1846   003996                     PIE6            equ	14742	;# 
  1847   003997                     PIE7            equ	14743	;# 
  1848   003998                     PIE8            equ	14744	;# 
  1849   003999                     PIE9            equ	14745	;# 
  1850   00399A                     PIE10           equ	14746	;# 
  1851   0039A0                     PIR0            equ	14752	;# 
  1852   0039A1                     PIR1            equ	14753	;# 
  1853   0039A2                     PIR2            equ	14754	;# 
  1854   0039A3                     PIR3            equ	14755	;# 
  1855   0039A4                     PIR4            equ	14756	;# 
  1856   0039A5                     PIR5            equ	14757	;# 
  1857   0039A6                     PIR6            equ	14758	;# 
  1858   0039A7                     PIR7            equ	14759	;# 
  1859   0039A8                     PIR8            equ	14760	;# 
  1860   0039A9                     PIR9            equ	14761	;# 
  1861   0039AA                     PIR10           equ	14762	;# 
  1862   0039C0                     PMD0            equ	14784	;# 
  1863   0039C1                     PMD1            equ	14785	;# 
  1864   0039C2                     PMD2            equ	14786	;# 
  1865   0039C3                     PMD3            equ	14787	;# 
  1866   0039C4                     PMD4            equ	14788	;# 
  1867   0039C5                     PMD5            equ	14789	;# 
  1868   0039C6                     PMD6            equ	14790	;# 
  1869   0039C7                     PMD7            equ	14791	;# 
  1870   0039D0                     BORCON          equ	14800	;# 
  1871   0039D1                     VREGCON         equ	14801	;# 
  1872   0039D8                     CPUDOZE         equ	14808	;# 
  1873   0039D9                     OSCCON1         equ	14809	;# 
  1874   0039DA                     OSCCON2         equ	14810	;# 
  1875   0039DB                     OSCCON3         equ	14811	;# 
  1876   0039DC                     OSCSTAT         equ	14812	;# 
  1877   0039DC                     OSCSTAT1        equ	14812	;# 
  1878   0039DD                     OSCEN           equ	14813	;# 
  1879   0039DE                     OSCTUNE         equ	14814	;# 
  1880   0039DF                     OSCFRQ          equ	14815	;# 
  1881   0039E0                     NVMADRL         equ	14816	;# 
  1882   0039E1                     NVMADRH         equ	14817	;# 
  1883   0039E3                     NVMDAT          equ	14819	;# 
  1884   0039E5                     NVMCON1         equ	14821	;# 
  1885   0039E6                     NVMCON2         equ	14822	;# 
  1886   0039EF                     PRLOCK          equ	14831	;# 
  1887   0039F1                     ISRPR           equ	14833	;# 
  1888   0039F2                     MAINPR          equ	14834	;# 
  1889   0039F3                     DMA1PR          equ	14835	;# 
  1890   0039F4                     DMA2PR          equ	14836	;# 
  1891   0039F7                     SCANPR          equ	14839	;# 
  1892   003A00                     RA0PPS          equ	14848	;# 
  1893   003A01                     RA1PPS          equ	14849	;# 
  1894   003A02                     RA2PPS          equ	14850	;# 
  1895   003A03                     RA3PPS          equ	14851	;# 
  1896   003A04                     RA4PPS          equ	14852	;# 
  1897   003A05                     RA5PPS          equ	14853	;# 
  1898   003A06                     RA6PPS          equ	14854	;# 
  1899   003A07                     RA7PPS          equ	14855	;# 
  1900   003A08                     RB0PPS          equ	14856	;# 
  1901   003A09                     RB1PPS          equ	14857	;# 
  1902   003A0A                     RB2PPS          equ	14858	;# 
  1903   003A0B                     RB3PPS          equ	14859	;# 
  1904   003A0C                     RB4PPS          equ	14860	;# 
  1905   003A0D                     RB5PPS          equ	14861	;# 
  1906   003A0E                     RB6PPS          equ	14862	;# 
  1907   003A0F                     RB7PPS          equ	14863	;# 
  1908   003A10                     RC0PPS          equ	14864	;# 
  1909   003A11                     RC1PPS          equ	14865	;# 
  1910   003A12                     RC2PPS          equ	14866	;# 
  1911   003A13                     RC3PPS          equ	14867	;# 
  1912   003A14                     RC4PPS          equ	14868	;# 
  1913   003A15                     RC5PPS          equ	14869	;# 
  1914   003A16                     RC6PPS          equ	14870	;# 
  1915   003A17                     RC7PPS          equ	14871	;# 
  1916   003A18                     RD0PPS          equ	14872	;# 
  1917   003A19                     RD1PPS          equ	14873	;# 
  1918   003A1A                     RD2PPS          equ	14874	;# 
  1919   003A1B                     RD3PPS          equ	14875	;# 
  1920   003A1C                     RD4PPS          equ	14876	;# 
  1921   003A1D                     RD5PPS          equ	14877	;# 
  1922   003A1E                     RD6PPS          equ	14878	;# 
  1923   003A1F                     RD7PPS          equ	14879	;# 
  1924   003A20                     RE0PPS          equ	14880	;# 
  1925   003A21                     RE1PPS          equ	14881	;# 
  1926   003A22                     RE2PPS          equ	14882	;# 
  1927   003A28                     RF0PPS          equ	14888	;# 
  1928   003A29                     RF1PPS          equ	14889	;# 
  1929   003A2A                     RF2PPS          equ	14890	;# 
  1930   003A2B                     RF3PPS          equ	14891	;# 
  1931   003A2C                     RF4PPS          equ	14892	;# 
  1932   003A2D                     RF5PPS          equ	14893	;# 
  1933   003A2E                     RF6PPS          equ	14894	;# 
  1934   003A2F                     RF7PPS          equ	14895	;# 
  1935   003A40                     ANSELA          equ	14912	;# 
  1936   003A41                     WPUA            equ	14913	;# 
  1937   003A42                     ODCONA          equ	14914	;# 
  1938   003A43                     SLRCONA         equ	14915	;# 
  1939   003A44                     INLVLA          equ	14916	;# 
  1940   003A45                     IOCAP           equ	14917	;# 
  1941   003A46                     IOCAN           equ	14918	;# 
  1942   003A47                     IOCAF           equ	14919	;# 
  1943   003A50                     ANSELB          equ	14928	;# 
  1944   003A51                     WPUB            equ	14929	;# 
  1945   003A52                     ODCONB          equ	14930	;# 
  1946   003A53                     SLRCONB         equ	14931	;# 
  1947   003A54                     INLVLB          equ	14932	;# 
  1948   003A55                     IOCBP           equ	14933	;# 
  1949   003A56                     IOCBN           equ	14934	;# 
  1950   003A57                     IOCBF           equ	14935	;# 
  1951   003A5A                     RB1I2C          equ	14938	;# 
  1952   003A5B                     RB2I2C          equ	14939	;# 
  1953   003A60                     ANSELC          equ	14944	;# 
  1954   003A61                     WPUC            equ	14945	;# 
  1955   003A62                     ODCONC          equ	14946	;# 
  1956   003A63                     SLRCONC         equ	14947	;# 
  1957   003A64                     INLVLC          equ	14948	;# 
  1958   003A65                     IOCCP           equ	14949	;# 
  1959   003A66                     IOCCN           equ	14950	;# 
  1960   003A67                     IOCCF           equ	14951	;# 
  1961   003A6A                     RC3I2C          equ	14954	;# 
  1962   003A6B                     RC4I2C          equ	14955	;# 
  1963   003A70                     ANSELD          equ	14960	;# 
  1964   003A71                     WPUD            equ	14961	;# 
  1965   003A72                     ODCOND          equ	14962	;# 
  1966   003A73                     SLRCOND         equ	14963	;# 
  1967   003A74                     INLVLD          equ	14964	;# 
  1968   003A7A                     RD0I2C          equ	14970	;# 
  1969   003A7B                     RD1I2C          equ	14971	;# 
  1970   003A80                     ANSELE          equ	14976	;# 
  1971   003A81                     WPUE            equ	14977	;# 
  1972   003A82                     ODCONE          equ	14978	;# 
  1973   003A83                     SLRCONE         equ	14979	;# 
  1974   003A84                     INLVLE          equ	14980	;# 
  1975   003A85                     IOCEP           equ	14981	;# 
  1976   003A86                     IOCEN           equ	14982	;# 
  1977   003A87                     IOCEF           equ	14983	;# 
  1978   003A90                     ANSELF          equ	14992	;# 
  1979   003A91                     WPUF            equ	14993	;# 
  1980   003A92                     ODCONF          equ	14994	;# 
  1981   003A93                     SLRCONF         equ	14995	;# 
  1982   003A94                     INLVLF          equ	14996	;# 
  1983   003ABF                     PPSLOCK         equ	15039	;# 
  1984   003AC0                     INT0PPS         equ	15040	;# 
  1985   003AC1                     INT1PPS         equ	15041	;# 
  1986   003AC2                     INT2PPS         equ	15042	;# 
  1987   003AC3                     T0CKIPPS        equ	15043	;# 
  1988   003AC4                     T1CKIPPS        equ	15044	;# 
  1989   003AC5                     T1GPPS          equ	15045	;# 
  1990   003AC6                     T3CKIPPS        equ	15046	;# 
  1991   003AC7                     T3GPPS          equ	15047	;# 
  1992   003AC8                     T5CKIPPS        equ	15048	;# 
  1993   003AC9                     T5GPPS          equ	15049	;# 
  1994   003ACA                     T2INPPS         equ	15050	;# 
  1995   003ACB                     T4INPPS         equ	15051	;# 
  1996   003ACC                     T6INPPS         equ	15052	;# 
  1997   003ACD                     CCP1PPS         equ	15053	;# 
  1998   003ACE                     CCP2PPS         equ	15054	;# 
  1999   003ACF                     CCP3PPS         equ	15055	;# 
  2000   003AD0                     CCP4PPS         equ	15056	;# 
  2001   003AD1                     SMT1WINPPS      equ	15057	;# 
  2002   003AD2                     SMT1SIGPPS      equ	15058	;# 
  2003   003AD3                     CWG1INPPS       equ	15059	;# 
  2004   003AD4                     CWG2INPPS       equ	15060	;# 
  2005   003AD5                     CWG3INPPS       equ	15061	;# 
  2006   003AD6                     MD1CARLPPS      equ	15062	;# 
  2007   003AD7                     MD1CARHPPS      equ	15063	;# 
  2008   003AD8                     MD1SRCPPS       equ	15064	;# 
  2009   003AD9                     CLCIN0PPS       equ	15065	;# 
  2010   003ADA                     CLCIN1PPS       equ	15066	;# 
  2011   003ADB                     CLCIN2PPS       equ	15067	;# 
  2012   003ADC                     CLCIN3PPS       equ	15068	;# 
  2013   003ADD                     ADACTPPS        equ	15069	;# 
  2014   003ADE                     SPI1SCKPPS      equ	15070	;# 
  2015   003ADF                     SPI1SDIPPS      equ	15071	;# 
  2016   003AE0                     SPI1SSPPS       equ	15072	;# 
  2017   003AE1                     I2C1SCLPPS      equ	15073	;# 
  2018   003AE2                     I2C1SDAPPS      equ	15074	;# 
  2019   003AE3                     I2C2SCLPPS      equ	15075	;# 
  2020   003AE4                     I2C2SDAPPS      equ	15076	;# 
  2021   003AE5                     U1RXPPS         equ	15077	;# 
  2022   003AE6                     U1CTSPPS        equ	15078	;# 
  2023   003AE8                     U2RXPPS         equ	15080	;# 
  2024   003AE9                     U2CTSPPS        equ	15081	;# 
  2025   003BC9                     DMA2BUF         equ	15305	;# 
  2026   003BCA                     DMA2DCNT        equ	15306	;# 
  2027   003BCA                     DMA2DCNTL       equ	15306	;# 
  2028   003BCB                     DMA2DCNTH       equ	15307	;# 
  2029   003BCC                     DMA2DPTR        equ	15308	;# 
  2030   003BCC                     DMA2DPTRL       equ	15308	;# 
  2031   003BCD                     DMA2DPTRH       equ	15309	;# 
  2032   003BCE                     DMA2DSZ         equ	15310	;# 
  2033   003BCE                     DMA2DSZL        equ	15310	;# 
  2034   003BCF                     DMA2DSZH        equ	15311	;# 
  2035   003BD0                     DMA2DSA         equ	15312	;# 
  2036   003BD0                     DMA2DSAL        equ	15312	;# 
  2037   003BD1                     DMA2DSAH        equ	15313	;# 
  2038   003BD2                     DMA2SCNT        equ	15314	;# 
  2039   003BD2                     DMA2SCNTL       equ	15314	;# 
  2040   003BD3                     DMA2SCNTH       equ	15315	;# 
  2041   003BD4                     DMA2SPTR        equ	15316	;# 
  2042   003BD4                     DMA2SPTRL       equ	15316	;# 
  2043   003BD5                     DMA2SPTRH       equ	15317	;# 
  2044   003BD6                     DMA2SPTRU       equ	15318	;# 
  2045   003BD7                     DMA2SSZ         equ	15319	;# 
  2046   003BD7                     DMA2SSZL        equ	15319	;# 
  2047   003BD8                     DMA2SSZH        equ	15320	;# 
  2048   003BD9                     DMA2SSA         equ	15321	;# 
  2049   003BD9                     DMA2SSAL        equ	15321	;# 
  2050   003BDA                     DMA2SSAH        equ	15322	;# 
  2051   003BDB                     DMA2SSAU        equ	15323	;# 
  2052   003BDC                     DMA2CON0        equ	15324	;# 
  2053   003BDD                     DMA2CON1        equ	15325	;# 
  2054   003BDE                     DMA2AIRQ        equ	15326	;# 
  2055   003BDF                     DMA2SIRQ        equ	15327	;# 
  2056   003BE9                     DMA1BUF         equ	15337	;# 
  2057   003BEA                     DMA1DCNT        equ	15338	;# 
  2058   003BEA                     DMA1DCNTL       equ	15338	;# 
  2059   003BEB                     DMA1DCNTH       equ	15339	;# 
  2060   003BEC                     DMA1DPTR        equ	15340	;# 
  2061   003BEC                     DMA1DPTRL       equ	15340	;# 
  2062   003BED                     DMA1DPTRH       equ	15341	;# 
  2063   003BEE                     DMA1DSZ         equ	15342	;# 
  2064   003BEE                     DMA1DSZL        equ	15342	;# 
  2065   003BEF                     DMA1DSZH        equ	15343	;# 
  2066   003BF0                     DMA1DSA         equ	15344	;# 
  2067   003BF0                     DMA1DSAL        equ	15344	;# 
  2068   003BF1                     DMA1DSAH        equ	15345	;# 
  2069   003BF2                     DMA1SCNT        equ	15346	;# 
  2070   003BF2                     DMA1SCNTL       equ	15346	;# 
  2071   003BF3                     DMA1SCNTH       equ	15347	;# 
  2072   003BF4                     DMA1SPTR        equ	15348	;# 
  2073   003BF4                     DMA1SPTRL       equ	15348	;# 
  2074   003BF5                     DMA1SPTRH       equ	15349	;# 
  2075   003BF6                     DMA1SPTRU       equ	15350	;# 
  2076   003BF7                     DMA1SSZ         equ	15351	;# 
  2077   003BF7                     DMA1SSZL        equ	15351	;# 
  2078   003BF8                     DMA1SSZH        equ	15352	;# 
  2079   003BF9                     DMA1SSA         equ	15353	;# 
  2080   003BF9                     DMA1SSAL        equ	15353	;# 
  2081   003BFA                     DMA1SSAH        equ	15354	;# 
  2082   003BFB                     DMA1SSAU        equ	15355	;# 
  2083   003BFC                     DMA1CON0        equ	15356	;# 
  2084   003BFD                     DMA1CON1        equ	15357	;# 
  2085   003BFE                     DMA1AIRQ        equ	15358	;# 
  2086   003BFF                     DMA1SIRQ        equ	15359	;# 
  2087   003C56                     CLC4CON         equ	15446	;# 
  2088   003C57                     CLC4POL         equ	15447	;# 
  2089   003C58                     CLC4SEL0        equ	15448	;# 
  2090   003C59                     CLC4SEL1        equ	15449	;# 
  2091   003C5A                     CLC4SEL2        equ	15450	;# 
  2092   003C5B                     CLC4SEL3        equ	15451	;# 
  2093   003C5C                     CLC4GLS0        equ	15452	;# 
  2094   003C5D                     CLC4GLS1        equ	15453	;# 
  2095   003C5E                     CLC4GLS2        equ	15454	;# 
  2096   003C5F                     CLC4GLS3        equ	15455	;# 
  2097   003C60                     CLC3CON         equ	15456	;# 
  2098   003C61                     CLC3POL         equ	15457	;# 
  2099   003C62                     CLC3SEL0        equ	15458	;# 
  2100   003C63                     CLC3SEL1        equ	15459	;# 
  2101   003C64                     CLC3SEL2        equ	15460	;# 
  2102   003C65                     CLC3SEL3        equ	15461	;# 
  2103   003C66                     CLC3GLS0        equ	15462	;# 
  2104   003C67                     CLC3GLS1        equ	15463	;# 
  2105   003C68                     CLC3GLS2        equ	15464	;# 
  2106   003C69                     CLC3GLS3        equ	15465	;# 
  2107   003C6A                     CLC2CON         equ	15466	;# 
  2108   003C6B                     CLC2POL         equ	15467	;# 
  2109   003C6C                     CLC2SEL0        equ	15468	;# 
  2110   003C6D                     CLC2SEL1        equ	15469	;# 
  2111   003C6E                     CLC2SEL2        equ	15470	;# 
  2112   003C6F                     CLC2SEL3        equ	15471	;# 
  2113   003C70                     CLC2GLS0        equ	15472	;# 
  2114   003C71                     CLC2GLS1        equ	15473	;# 
  2115   003C72                     CLC2GLS2        equ	15474	;# 
  2116   003C73                     CLC2GLS3        equ	15475	;# 
  2117   003C74                     CLC1CON         equ	15476	;# 
  2118   003C75                     CLC1POL         equ	15477	;# 
  2119   003C76                     CLC1SEL0        equ	15478	;# 
  2120   003C77                     CLC1SEL1        equ	15479	;# 
  2121   003C78                     CLC1SEL2        equ	15480	;# 
  2122   003C79                     CLC1SEL3        equ	15481	;# 
  2123   003C7A                     CLC1GLS0        equ	15482	;# 
  2124   003C7B                     CLC1GLS1        equ	15483	;# 
  2125   003C7C                     CLC1GLS2        equ	15484	;# 
  2126   003C7D                     CLC1GLS3        equ	15485	;# 
  2127   003C7E                     CLCDATA0        equ	15486	;# 
  2128   003CE5                     CLKRCON         equ	15589	;# 
  2129   003CE6                     CLKRCLK         equ	15590	;# 
  2130   003CFA                     MD1CON0         equ	15610	;# 
  2131   003CFB                     MD1CON1         equ	15611	;# 
  2132   003CFC                     MD1SRC          equ	15612	;# 
  2133   003CFD                     MD1CARL         equ	15613	;# 
  2134   003CFE                     MD1CARH         equ	15614	;# 
  2135   003D10                     SPI1RXB         equ	15632	;# 
  2136   003D11                     SPI1TXB         equ	15633	;# 
  2137   003D12                     SPI1TCNT        equ	15634	;# 
  2138   003D12                     SPI1TCNTL       equ	15634	;# 
  2139   003D13                     SPI1TCNTH       equ	15635	;# 
  2140   003D14                     SPI1CON0        equ	15636	;# 
  2141   003D15                     SPI1CON1        equ	15637	;# 
  2142   003D16                     SPI1CON2        equ	15638	;# 
  2143   003D17                     SPI1STATUS      equ	15639	;# 
  2144   003D18                     SPI1TWIDTH      equ	15640	;# 
  2145   003D19                     SPI1BAUD        equ	15641	;# 
  2146   003D1A                     SPI1INTF        equ	15642	;# 
  2147   003D1B                     SPI1INTE        equ	15643	;# 
  2148   003D1C                     SPI1CLK         equ	15644	;# 
  2149   003D54                     I2C2RXB         equ	15700	;# 
  2150   003D55                     I2C2TXB         equ	15701	;# 
  2151   003D56                     I2C2CNT         equ	15702	;# 
  2152   003D57                     I2C2ADB0        equ	15703	;# 
  2153   003D58                     I2C2ADB1        equ	15704	;# 
  2154   003D59                     I2C2ADR0        equ	15705	;# 
  2155   003D5A                     I2C2ADR1        equ	15706	;# 
  2156   003D5B                     I2C2ADR2        equ	15707	;# 
  2157   003D5C                     I2C2ADR3        equ	15708	;# 
  2158   003D5D                     I2C2CON0        equ	15709	;# 
  2159   003D5E                     I2C2CON1        equ	15710	;# 
  2160   003D5F                     I2C2CON2        equ	15711	;# 
  2161   003D60                     I2C2ERR         equ	15712	;# 
  2162   003D61                     I2C2STAT0       equ	15713	;# 
  2163   003D62                     I2C2STAT1       equ	15714	;# 
  2164   003D63                     I2C2PIR         equ	15715	;# 
  2165   003D64                     I2C2PIE         equ	15716	;# 
  2166   003D65                     I2C2CLK         equ	15717	;# 
  2167   003D66                     I2C2BTO         equ	15718	;# 
  2168   003D6A                     I2C1RXB         equ	15722	;# 
  2169   003D6B                     I2C1TXB         equ	15723	;# 
  2170   003D6C                     I2C1CNT         equ	15724	;# 
  2171   003D6D                     I2C1ADB0        equ	15725	;# 
  2172   003D6E                     I2C1ADB1        equ	15726	;# 
  2173   003D6F                     I2C1ADR0        equ	15727	;# 
  2174   003D70                     I2C1ADR1        equ	15728	;# 
  2175   003D71                     I2C1ADR2        equ	15729	;# 
  2176   003D72                     I2C1ADR3        equ	15730	;# 
  2177   003D73                     I2C1CON0        equ	15731	;# 
  2178   003D74                     I2C1CON1        equ	15732	;# 
  2179   003D75                     I2C1CON2        equ	15733	;# 
  2180   003D76                     I2C1ERR         equ	15734	;# 
  2181   003D77                     I2C1STAT0       equ	15735	;# 
  2182   003D78                     I2C1STAT1       equ	15736	;# 
  2183   003D79                     I2C1PIR         equ	15737	;# 
  2184   003D7A                     I2C1PIE         equ	15738	;# 
  2185   003D7B                     I2C1CLK         equ	15739	;# 
  2186   003D7C                     I2C1BTO         equ	15740	;# 
  2187   003DD0                     U2RXB           equ	15824	;# 
  2188   003DD0                     U2RXBL          equ	15824	;# 
  2189   003DD2                     U2TXB           equ	15826	;# 
  2190   003DD2                     U2TXBL          equ	15826	;# 
  2191   003DD4                     U2P1            equ	15828	;# 
  2192   003DD4                     U2P1L           equ	15828	;# 
  2193   003DD6                     U2P2            equ	15830	;# 
  2194   003DD6                     U2P2L           equ	15830	;# 
  2195   003DD8                     U2P3            equ	15832	;# 
  2196   003DD8                     U2P3L           equ	15832	;# 
  2197   003DDA                     U2CON0          equ	15834	;# 
  2198   003DDB                     U2CON1          equ	15835	;# 
  2199   003DDC                     U2CON2          equ	15836	;# 
  2200   003DDD                     U2BRG           equ	15837	;# 
  2201   003DDD                     U2BRGL          equ	15837	;# 
  2202   003DDE                     U2BRGH          equ	15838	;# 
  2203   003DDF                     U2FIFO          equ	15839	;# 
  2204   003DE0                     U2UIR           equ	15840	;# 
  2205   003DE1                     U2ERRIR         equ	15841	;# 
  2206   003DE2                     U2ERRIE         equ	15842	;# 
  2207   003DE8                     U1RXB           equ	15848	;# 
  2208   003DE8                     U1RXBL          equ	15848	;# 
  2209   003DE9                     U1RXCHK         equ	15849	;# 
  2210   003DEA                     U1TXB           equ	15850	;# 
  2211   003DEA                     U1TXBL          equ	15850	;# 
  2212   003DEB                     U1TXCHK         equ	15851	;# 
  2213   003DEC                     U1P1            equ	15852	;# 
  2214   003DEC                     U1P1L           equ	15852	;# 
  2215   003DED                     U1P1H           equ	15853	;# 
  2216   003DEE                     U1P2            equ	15854	;# 
  2217   003DEE                     U1P2L           equ	15854	;# 
  2218   003DEF                     U1P2H           equ	15855	;# 
  2219   003DF0                     U1P3            equ	15856	;# 
  2220   003DF0                     U1P3L           equ	15856	;# 
  2221   003DF1                     U1P3H           equ	15857	;# 
  2222   003DF2                     U1CON0          equ	15858	;# 
  2223   003DF3                     U1CON1          equ	15859	;# 
  2224   003DF4                     U1CON2          equ	15860	;# 
  2225   003DF5                     U1BRG           equ	15861	;# 
  2226   003DF5                     U1BRGL          equ	15861	;# 
  2227   003DF6                     U1BRGH          equ	15862	;# 
  2228   003DF7                     U1FIFO          equ	15863	;# 
  2229   003DF8                     U1UIR           equ	15864	;# 
  2230   003DF9                     U1ERRIR         equ	15865	;# 
  2231   003DFA                     U1ERRIE         equ	15866	;# 
  2232   003E9C                     DAC1CON1        equ	16028	;# 
  2233   003E9E                     DAC1CON0        equ	16030	;# 
  2234   003EB8                     CM2CON0         equ	16056	;# 
  2235   003EB9                     CM2CON1         equ	16057	;# 
  2236   003EBA                     CM2NCH          equ	16058	;# 
  2237   003EBB                     CM2PCH          equ	16059	;# 
  2238   003EBC                     CM1CON0         equ	16060	;# 
  2239   003EBD                     CM1CON1         equ	16061	;# 
  2240   003EBE                     CM1NCH          equ	16062	;# 
  2241   003EBF                     CM1PCH          equ	16063	;# 
  2242   003EC0                     CMOUT           equ	16064	;# 
  2243   003EC1                     FVRCON          equ	16065	;# 
  2244   003EC3                     ZCDCON          equ	16067	;# 
  2245   003EC9                     HLVDCON0        equ	16073	;# 
  2246   003ECA                     HLVDCON1        equ	16074	;# 
  2247   003ED7                     ADCP            equ	16087	;# 
  2248   003EDE                     ADLTH           equ	16094	;# 
  2249   003EDE                     ADLTHL          equ	16094	;# 
  2250   003EDF                     ADLTHH          equ	16095	;# 
  2251   003EE0                     ADUTH           equ	16096	;# 
  2252   003EE0                     ADUTHL          equ	16096	;# 
  2253   003EE1                     ADUTHH          equ	16097	;# 
  2254   003EE2                     ADERR           equ	16098	;# 
  2255   003EE2                     ADERRL          equ	16098	;# 
  2256   003EE3                     ADERRH          equ	16099	;# 
  2257   003EE4                     ADSTPT          equ	16100	;# 
  2258   003EE4                     ADSTPTL         equ	16100	;# 
  2259   003EE5                     ADSTPTH         equ	16101	;# 
  2260   003EE6                     ADFLTR          equ	16102	;# 
  2261   003EE6                     ADFLTRL         equ	16102	;# 
  2262   003EE7                     ADFLTRH         equ	16103	;# 
  2263   003EE8                     ADACC           equ	16104	;# 
  2264   003EE8                     ADACCL          equ	16104	;# 
  2265   003EE9                     ADACCH          equ	16105	;# 
  2266   003EEA                     ADACCU          equ	16106	;# 
  2267   003EEB                     ADCNT           equ	16107	;# 
  2268   003EEC                     ADRPT           equ	16108	;# 
  2269   003EED                     ADPREV          equ	16109	;# 
  2270   003EED                     ADPREVL         equ	16109	;# 
  2271   003EEE                     ADPREVH         equ	16110	;# 
  2272   003EEF                     ADRES           equ	16111	;# 
  2273   003EEF                     ADRESL          equ	16111	;# 
  2274   003EF0                     ADRESH          equ	16112	;# 
  2275   003EF1                     ADPCH           equ	16113	;# 
  2276   003EF3                     ADACQ           equ	16115	;# 
  2277   003EF3                     ADACQL          equ	16115	;# 
  2278   003EF4                     ADACQH          equ	16116	;# 
  2279   003EF5                     ADCAP           equ	16117	;# 
  2280   003EF6                     ADPRE           equ	16118	;# 
  2281   003EF6                     ADPREL          equ	16118	;# 
  2282   003EF7                     ADPREH          equ	16119	;# 
  2283   003EF8                     ADCON0          equ	16120	;# 
  2284   003EF9                     ADCON1          equ	16121	;# 
  2285   003EFA                     ADCON2          equ	16122	;# 
  2286   003EFB                     ADCON3          equ	16123	;# 
  2287   003EFC                     ADSTAT          equ	16124	;# 
  2288   003EFD                     ADREF           equ	16125	;# 
  2289   003EFE                     ADACT           equ	16126	;# 
  2290   003EFF                     ADCLK           equ	16127	;# 
  2291   003F12                     SMT1TMR         equ	16146	;# 
  2292   003F12                     SMT1TMRL        equ	16146	;# 
  2293   003F13                     SMT1TMRH        equ	16147	;# 
  2294   003F14                     SMT1TMRU        equ	16148	;# 
  2295   003F15                     SMT1CPR         equ	16149	;# 
  2296   003F15                     SMT1CPRL        equ	16149	;# 
  2297   003F16                     SMT1CPRH        equ	16150	;# 
  2298   003F17                     SMT1CPRU        equ	16151	;# 
  2299   003F18                     SMT1CPW         equ	16152	;# 
  2300   003F18                     SMT1CPWL        equ	16152	;# 
  2301   003F19                     SMT1CPWH        equ	16153	;# 
  2302   003F1A                     SMT1CPWU        equ	16154	;# 
  2303   003F1B                     SMT1PR          equ	16155	;# 
  2304   003F1B                     SMT1PRL         equ	16155	;# 
  2305   003F1C                     SMT1PRH         equ	16156	;# 
  2306   003F1D                     SMT1PRU         equ	16157	;# 
  2307   003F1E                     SMT1CON0        equ	16158	;# 
  2308   003F1F                     SMT1CON1        equ	16159	;# 
  2309   003F20                     SMT1STAT        equ	16160	;# 
  2310   003F21                     SMT1CLK         equ	16161	;# 
  2311   003F22                     SMT1SIG         equ	16162	;# 
  2312   003F23                     SMT1WIN         equ	16163	;# 
  2313   003F38                     NCO1ACC         equ	16184	;# 
  2314   003F38                     NCO1ACCL        equ	16184	;# 
  2315   003F39                     NCO1ACCH        equ	16185	;# 
  2316   003F3A                     NCO1ACCU        equ	16186	;# 
  2317   003F3B                     NCO1INC         equ	16187	;# 
  2318   003F3B                     NCO1INCL        equ	16187	;# 
  2319   003F3C                     NCO1INCH        equ	16188	;# 
  2320   003F3D                     NCO1INCU        equ	16189	;# 
  2321   003F3E                     NCO1CON         equ	16190	;# 
  2322   003F3F                     NCO1CLK         equ	16191	;# 
  2323   003F40                     CWG3CLK         equ	16192	;# 
  2324   003F40                     CWG3CLKCON      equ	16192	;# 
  2325   003F41                     CWG3ISM         equ	16193	;# 
  2326   003F41                     CWG3DAT         equ	16193	;# 
  2327   003F42                     CWG3DBR         equ	16194	;# 
  2328   003F43                     CWG3DBF         equ	16195	;# 
  2329   003F44                     CWG3CON0        equ	16196	;# 
  2330   003F45                     CWG3CON1        equ	16197	;# 
  2331   003F46                     CWG3AS0         equ	16198	;# 
  2332   003F47                     CWG3AS1         equ	16199	;# 
  2333   003F48                     CWG3STR         equ	16200	;# 
  2334   003F49                     CWG2CLK         equ	16201	;# 
  2335   003F49                     CWG2CLKCON      equ	16201	;# 
  2336   003F4A                     CWG2ISM         equ	16202	;# 
  2337   003F4A                     CWG2DAT         equ	16202	;# 
  2338   003F4B                     CWG2DBR         equ	16203	;# 
  2339   003F4C                     CWG2DBF         equ	16204	;# 
  2340   003F4D                     CWG2CON0        equ	16205	;# 
  2341   003F4E                     CWG2CON1        equ	16206	;# 
  2342   003F4F                     CWG2AS0         equ	16207	;# 
  2343   003F50                     CWG2AS1         equ	16208	;# 
  2344   003F51                     CWG2STR         equ	16209	;# 
  2345   003F52                     CWG1CLK         equ	16210	;# 
  2346   003F52                     CWG1CLKCON      equ	16210	;# 
  2347   003F53                     CWG1ISM         equ	16211	;# 
  2348   003F53                     CWG1DAT         equ	16211	;# 
  2349   003F54                     CWG1DBR         equ	16212	;# 
  2350   003F55                     CWG1DBF         equ	16213	;# 
  2351   003F56                     CWG1CON0        equ	16214	;# 
  2352   003F57                     CWG1CON1        equ	16215	;# 
  2353   003F58                     CWG1AS0         equ	16216	;# 
  2354   003F59                     CWG1AS1         equ	16217	;# 
  2355   003F5A                     CWG1STR         equ	16218	;# 
  2356   003F5E                     CCPTMRS0        equ	16222	;# 
  2357   003F5F                     CCPTMRS1        equ	16223	;# 
  2358   003F60                     PWM8DC          equ	16224	;# 
  2359   003F60                     PWM8DCL         equ	16224	;# 
  2360   003F61                     PWM8DCH         equ	16225	;# 
  2361   003F62                     PWM8CON         equ	16226	;# 
  2362   003F64                     PWM7DC          equ	16228	;# 
  2363   003F64                     PWM7DCL         equ	16228	;# 
  2364   003F65                     PWM7DCH         equ	16229	;# 
  2365   003F66                     PWM7CON         equ	16230	;# 
  2366   003F68                     PWM6DC          equ	16232	;# 
  2367   003F68                     PWM6DCL         equ	16232	;# 
  2368   003F69                     PWM6DCH         equ	16233	;# 
  2369   003F6A                     PWM6CON         equ	16234	;# 
  2370   003F6C                     PWM5DC          equ	16236	;# 
  2371   003F6C                     PWM5DCL         equ	16236	;# 
  2372   003F6D                     PWM5DCH         equ	16237	;# 
  2373   003F6E                     PWM5CON         equ	16238	;# 
  2374   003F70                     CCPR4           equ	16240	;# 
  2375   003F70                     CCPR4L          equ	16240	;# 
  2376   003F71                     CCPR4H          equ	16241	;# 
  2377   003F72                     CCP4CON         equ	16242	;# 
  2378   003F73                     CCP4CAP         equ	16243	;# 
  2379   003F74                     CCPR3           equ	16244	;# 
  2380   003F74                     CCPR3L          equ	16244	;# 
  2381   003F75                     CCPR3H          equ	16245	;# 
  2382   003F76                     CCP3CON         equ	16246	;# 
  2383   003F77                     CCP3CAP         equ	16247	;# 
  2384   003F78                     CCPR2           equ	16248	;# 
  2385   003F78                     CCPR2L          equ	16248	;# 
  2386   003F79                     CCPR2H          equ	16249	;# 
  2387   003F7A                     CCP2CON         equ	16250	;# 
  2388   003F7B                     CCP2CAP         equ	16251	;# 
  2389   003F7C                     CCPR1           equ	16252	;# 
  2390   003F7C                     CCPR1L          equ	16252	;# 
  2391   003F7D                     CCPR1H          equ	16253	;# 
  2392   003F7E                     CCP1CON         equ	16254	;# 
  2393   003F7F                     CCP1CAP         equ	16255	;# 
  2394   003F92                     T6TMR           equ	16274	;# 
  2395   003F92                     TMR6            equ	16274	;# 
  2396   003F93                     T6PR            equ	16275	;# 
  2397   003F93                     PR6             equ	16275	;# 
  2398   003F94                     T6CON           equ	16276	;# 
  2399   003F95                     T6HLT           equ	16277	;# 
  2400   003F96                     T6CLKCON        equ	16278	;# 
  2401   003F96                     T6CLK           equ	16278	;# 
  2402   003F97                     T6RST           equ	16279	;# 
  2403   003F98                     TMR5            equ	16280	;# 
  2404   003F98                     TMR5L           equ	16280	;# 
  2405   003F99                     TMR5H           equ	16281	;# 
  2406   003F9A                     T5CON           equ	16282	;# 
  2407   003F9A                     TMR5CON         equ	16282	;# 
  2408   003F9B                     T5GCON          equ	16283	;# 
  2409   003F9B                     TMR5GCON        equ	16283	;# 
  2410   003F9C                     T5GATE          equ	16284	;# 
  2411   003F9C                     TMR5GATE        equ	16284	;# 
  2412   003F9D                     T5CLK           equ	16285	;# 
  2413   003F9D                     TMR5CLK         equ	16285	;# 
  2414   003F9D                     PR5             equ	16285	;# 
  2415   003F9E                     T4TMR           equ	16286	;# 
  2416   003F9E                     TMR4            equ	16286	;# 
  2417   003F9F                     T4PR            equ	16287	;# 
  2418   003F9F                     PR4             equ	16287	;# 
  2419   003FA0                     T4CON           equ	16288	;# 
  2420   003FA1                     T4HLT           equ	16289	;# 
  2421   003FA2                     T4CLKCON        equ	16290	;# 
  2422   003FA2                     T4CLK           equ	16290	;# 
  2423   003FA3                     T4RST           equ	16291	;# 
  2424   003FA4                     TMR3            equ	16292	;# 
  2425   003FA4                     TMR3L           equ	16292	;# 
  2426   003FA5                     TMR3H           equ	16293	;# 
  2427   003FA6                     T3CON           equ	16294	;# 
  2428   003FA6                     TMR3CON         equ	16294	;# 
  2429   003FA7                     T3GCON          equ	16295	;# 
  2430   003FA7                     TMR3GCON        equ	16295	;# 
  2431   003FA8                     T3GATE          equ	16296	;# 
  2432   003FA8                     TMR3GATE        equ	16296	;# 
  2433   003FA9                     T3CLK           equ	16297	;# 
  2434   003FA9                     TMR3CLK         equ	16297	;# 
  2435   003FA9                     PR3             equ	16297	;# 
  2436   003FAA                     T2TMR           equ	16298	;# 
  2437   003FAA                     TMR2            equ	16298	;# 
  2438   003FAB                     T2PR            equ	16299	;# 
  2439   003FAB                     PR2             equ	16299	;# 
  2440   003FAC                     T2CON           equ	16300	;# 
  2441   003FAD                     T2HLT           equ	16301	;# 
  2442   003FAE                     T2CLKCON        equ	16302	;# 
  2443   003FAE                     T2CLK           equ	16302	;# 
  2444   003FAF                     T2RST           equ	16303	;# 
  2445   003FB0                     TMR1            equ	16304	;# 
  2446   003FB0                     TMR1L           equ	16304	;# 
  2447   003FB1                     TMR1H           equ	16305	;# 
  2448   003FB2                     T1CON           equ	16306	;# 
  2449   003FB2                     TMR1CON         equ	16306	;# 
  2450   003FB3                     T1GCON          equ	16307	;# 
  2451   003FB3                     TMR1GCON        equ	16307	;# 
  2452   003FB4                     T1GATE          equ	16308	;# 
  2453   003FB4                     TMR1GATE        equ	16308	;# 
  2454   003FB5                     T1CLK           equ	16309	;# 
  2455   003FB5                     TMR1CLK         equ	16309	;# 
  2456   003FB5                     PR1             equ	16309	;# 
  2457   003FB6                     TMR0L           equ	16310	;# 
  2458   003FB6                     TMR0            equ	16310	;# 
  2459   003FB7                     TMR0H           equ	16311	;# 
  2460   003FB7                     PR0             equ	16311	;# 
  2461   003FB8                     T0CON0          equ	16312	;# 
  2462   003FB9                     T0CON1          equ	16313	;# 
  2463   003FBA                     LATA            equ	16314	;# 
  2464   003FBB                     LATB            equ	16315	;# 
  2465   003FBC                     LATC            equ	16316	;# 
  2466   003FBD                     LATD            equ	16317	;# 
  2467   003FBE                     LATE            equ	16318	;# 
  2468   003FBF                     LATF            equ	16319	;# 
  2469   003FC2                     TRISA           equ	16322	;# 
  2470   003FC3                     TRISB           equ	16323	;# 
  2471   003FC4                     TRISC           equ	16324	;# 
  2472   003FC5                     TRISD           equ	16325	;# 
  2473   003FC6                     TRISE           equ	16326	;# 
  2474   003FC7                     TRISF           equ	16327	;# 
  2475   003FCA                     PORTA           equ	16330	;# 
  2476   003FCB                     PORTB           equ	16331	;# 
  2477   003FCC                     PORTC           equ	16332	;# 
  2478   003FCD                     PORTD           equ	16333	;# 
  2479   003FCE                     PORTE           equ	16334	;# 
  2480   003FCF                     PORTF           equ	16335	;# 
  2481   003FD2                     INTCON0         equ	16338	;# 
  2482   003FD3                     INTCON1         equ	16339	;# 
  2483   003FD4                     IVTLOCK         equ	16340	;# 
  2484   003FD5                     IVTBASE         equ	16341	;# 
  2485   003FD5                     IVTBASEL        equ	16341	;# 
  2486   003FD6                     IVTBASEH        equ	16342	;# 
  2487   003FD7                     IVTBASEU        equ	16343	;# 
  2488   003FD8                     STATUS          equ	16344	;# 
  2489   003FD9                     FSR2            equ	16345	;# 
  2490   003FD9                     FSR2L           equ	16345	;# 
  2491   003FDA                     FSR2H           equ	16346	;# 
  2492   003FDB                     PLUSW2          equ	16347	;# 
  2493   003FDC                     PREINC2         equ	16348	;# 
  2494   003FDD                     POSTDEC2        equ	16349	;# 
  2495   003FDE                     POSTINC2        equ	16350	;# 
  2496   003FDF                     INDF2           equ	16351	;# 
  2497   003FE0                     BSR             equ	16352	;# 
  2498   003FE1                     FSR1            equ	16353	;# 
  2499   003FE1                     FSR1L           equ	16353	;# 
  2500   003FE2                     FSR1H           equ	16354	;# 
  2501   003FE3                     PLUSW1          equ	16355	;# 
  2502   003FE4                     PREINC1         equ	16356	;# 
  2503   003FE5                     POSTDEC1        equ	16357	;# 
  2504   003FE6                     POSTINC1        equ	16358	;# 
  2505   003FE7                     INDF1           equ	16359	;# 
  2506   003FE8                     WREG            equ	16360	;# 
  2507   003FE9                     FSR0            equ	16361	;# 
  2508   003FE9                     FSR0L           equ	16361	;# 
  2509   003FEA                     FSR0H           equ	16362	;# 
  2510   003FEB                     PLUSW0          equ	16363	;# 
  2511   003FEC                     PREINC0         equ	16364	;# 
  2512   003FED                     POSTDEC0        equ	16365	;# 
  2513   003FEE                     POSTINC0        equ	16366	;# 
  2514   003FEF                     INDF0           equ	16367	;# 
  2515   003FF0                     PCON0           equ	16368	;# 
  2516   003FF1                     PCON1           equ	16369	;# 
  2517   003FF3                     PROD            equ	16371	;# 
  2518   003FF3                     PRODL           equ	16371	;# 
  2519   003FF4                     PRODH           equ	16372	;# 
  2520   003FF5                     TABLAT          equ	16373	;# 
  2521   003FF6                     TBLPTR          equ	16374	;# 
  2522   003FF6                     TBLPTRL         equ	16374	;# 
  2523   003FF7                     TBLPTRH         equ	16375	;# 
  2524   003FF8                     TBLPTRU         equ	16376	;# 
  2525   003FF9                     PCLAT           equ	16377	;# 
  2526   003FF9                     PCL             equ	16377	;# 
  2527   003FFA                     PCLATH          equ	16378	;# 
  2528   003FFB                     PCLATU          equ	16379	;# 
  2529   003FFC                     STKPTR          equ	16380	;# 
  2530   003FFD                     TOS             equ	16381	;# 
  2531   003FFD                     TOSL            equ	16381	;# 
  2532   003FFE                     TOSH            equ	16382	;# 
  2533   003FFF                     TOSU            equ	16383	;# 
  2534   003880                     STATUS_CSHAD    equ	14464	;# 
  2535   003881                     WREG_CSHAD      equ	14465	;# 
  2536   003882                     BSR_CSHAD       equ	14466	;# 
  2537   003883                     SHADCON         equ	14467	;# 
  2538   003884                     STATUS_SHAD     equ	14468	;# 
  2539   003885                     WREG_SHAD       equ	14469	;# 
  2540   003886                     BSR_SHAD        equ	14470	;# 
  2541   003887                     PCLATH_SHAD     equ	14471	;# 
  2542   003888                     PCLATU_SHAD     equ	14472	;# 
  2543   003889                     FSR0SH          equ	14473	;# 
  2544   003889                     FSR0L_SHAD      equ	14473	;# 
  2545   00388A                     FSR0H_SHAD      equ	14474	;# 
  2546   00388B                     FSR1SH          equ	14475	;# 
  2547   00388B                     FSR1L_SHAD      equ	14475	;# 
  2548   00388C                     FSR1H_SHAD      equ	14476	;# 
  2549   00388D                     FSR2SH          equ	14477	;# 
  2550   00388D                     FSR2L_SHAD      equ	14477	;# 
  2551   00388E                     FSR2H_SHAD      equ	14478	;# 
  2552   00388F                     PRODSH          equ	14479	;# 
  2553   00388F                     PRODL_SHAD      equ	14479	;# 
  2554   003890                     PRODH_SHAD      equ	14480	;# 
  2555   00389D                     IVTADL          equ	14493	;# 
  2556   00389E                     IVTADH          equ	14494	;# 
  2557   00389F                     IVTADU          equ	14495	;# 
  2558   00395B                     WDTCON0         equ	14683	;# 
  2559   00395C                     WDTCON1         equ	14684	;# 
  2560   00395D                     WDTPSL          equ	14685	;# 
  2561   00395E                     WDTPSH          equ	14686	;# 
  2562   00395F                     WDTTMR          equ	14687	;# 
  2563   003960                     CRCDATA         equ	14688	;# 
  2564   003960                     CRCDATL         equ	14688	;# 
  2565   003961                     CRCDATH         equ	14689	;# 
  2566   003962                     CRCACC          equ	14690	;# 
  2567   003962                     CRCACCL         equ	14690	;# 
  2568   003963                     CRCACCH         equ	14691	;# 
  2569   003964                     CRCSHFT         equ	14692	;# 
  2570   003964                     CRCSHIFTL       equ	14692	;# 
  2571   003965                     CRCSHIFTH       equ	14693	;# 
  2572   003966                     CRCXOR          equ	14694	;# 
  2573   003966                     CRCXORL         equ	14694	;# 
  2574   003967                     CRCXORH         equ	14695	;# 
  2575   003968                     CRCCON0         equ	14696	;# 
  2576   003969                     CRCCON1         equ	14697	;# 
  2577   003976                     SCANLADR        equ	14710	;# 
  2578   003976                     SCANLADRL       equ	14710	;# 
  2579   003977                     SCANLADRH       equ	14711	;# 
  2580   003978                     SCANLADRU       equ	14712	;# 
  2581   003979                     SCANHADR        equ	14713	;# 
  2582   003979                     SCANHADRL       equ	14713	;# 
  2583   00397A                     SCANHADRH       equ	14714	;# 
  2584   00397B                     SCANHADRU       equ	14715	;# 
  2585   00397C                     SCANCON0        equ	14716	;# 
  2586   00397D                     SCANTRIG        equ	14717	;# 
  2587   003980                     IPR0            equ	14720	;# 
  2588   003981                     IPR1            equ	14721	;# 
  2589   003982                     IPR2            equ	14722	;# 
  2590   003983                     IPR3            equ	14723	;# 
  2591   003984                     IPR4            equ	14724	;# 
  2592   003985                     IPR5            equ	14725	;# 
  2593   003986                     IPR6            equ	14726	;# 
  2594   003987                     IPR7            equ	14727	;# 
  2595   003988                     IPR8            equ	14728	;# 
  2596   003989                     IPR9            equ	14729	;# 
  2597   00398A                     IPR10           equ	14730	;# 
  2598   003990                     PIE0            equ	14736	;# 
  2599   003991                     PIE1            equ	14737	;# 
  2600   003992                     PIE2            equ	14738	;# 
  2601   003993                     PIE3            equ	14739	;# 
  2602   003994                     PIE4            equ	14740	;# 
  2603   003995                     PIE5            equ	14741	;# 
  2604   003996                     PIE6            equ	14742	;# 
  2605   003997                     PIE7            equ	14743	;# 
  2606   003998                     PIE8            equ	14744	;# 
  2607   003999                     PIE9            equ	14745	;# 
  2608   00399A                     PIE10           equ	14746	;# 
  2609   0039A0                     PIR0            equ	14752	;# 
  2610   0039A1                     PIR1            equ	14753	;# 
  2611   0039A2                     PIR2            equ	14754	;# 
  2612   0039A3                     PIR3            equ	14755	;# 
  2613   0039A4                     PIR4            equ	14756	;# 
  2614   0039A5                     PIR5            equ	14757	;# 
  2615   0039A6                     PIR6            equ	14758	;# 
  2616   0039A7                     PIR7            equ	14759	;# 
  2617   0039A8                     PIR8            equ	14760	;# 
  2618   0039A9                     PIR9            equ	14761	;# 
  2619   0039AA                     PIR10           equ	14762	;# 
  2620   0039C0                     PMD0            equ	14784	;# 
  2621   0039C1                     PMD1            equ	14785	;# 
  2622   0039C2                     PMD2            equ	14786	;# 
  2623   0039C3                     PMD3            equ	14787	;# 
  2624   0039C4                     PMD4            equ	14788	;# 
  2625   0039C5                     PMD5            equ	14789	;# 
  2626   0039C6                     PMD6            equ	14790	;# 
  2627   0039C7                     PMD7            equ	14791	;# 
  2628   0039D0                     BORCON          equ	14800	;# 
  2629   0039D1                     VREGCON         equ	14801	;# 
  2630   0039D8                     CPUDOZE         equ	14808	;# 
  2631   0039D9                     OSCCON1         equ	14809	;# 
  2632   0039DA                     OSCCON2         equ	14810	;# 
  2633   0039DB                     OSCCON3         equ	14811	;# 
  2634   0039DC                     OSCSTAT         equ	14812	;# 
  2635   0039DC                     OSCSTAT1        equ	14812	;# 
  2636   0039DD                     OSCEN           equ	14813	;# 
  2637   0039DE                     OSCTUNE         equ	14814	;# 
  2638   0039DF                     OSCFRQ          equ	14815	;# 
  2639   0039E0                     NVMADRL         equ	14816	;# 
  2640   0039E1                     NVMADRH         equ	14817	;# 
  2641   0039E3                     NVMDAT          equ	14819	;# 
  2642   0039E5                     NVMCON1         equ	14821	;# 
  2643   0039E6                     NVMCON2         equ	14822	;# 
  2644   0039EF                     PRLOCK          equ	14831	;# 
  2645   0039F1                     ISRPR           equ	14833	;# 
  2646   0039F2                     MAINPR          equ	14834	;# 
  2647   0039F3                     DMA1PR          equ	14835	;# 
  2648   0039F4                     DMA2PR          equ	14836	;# 
  2649   0039F7                     SCANPR          equ	14839	;# 
  2650   003A00                     RA0PPS          equ	14848	;# 
  2651   003A01                     RA1PPS          equ	14849	;# 
  2652   003A02                     RA2PPS          equ	14850	;# 
  2653   003A03                     RA3PPS          equ	14851	;# 
  2654   003A04                     RA4PPS          equ	14852	;# 
  2655   003A05                     RA5PPS          equ	14853	;# 
  2656   003A06                     RA6PPS          equ	14854	;# 
  2657   003A07                     RA7PPS          equ	14855	;# 
  2658   003A08                     RB0PPS          equ	14856	;# 
  2659   003A09                     RB1PPS          equ	14857	;# 
  2660   003A0A                     RB2PPS          equ	14858	;# 
  2661   003A0B                     RB3PPS          equ	14859	;# 
  2662   003A0C                     RB4PPS          equ	14860	;# 
  2663   003A0D                     RB5PPS          equ	14861	;# 
  2664   003A0E                     RB6PPS          equ	14862	;# 
  2665   003A0F                     RB7PPS          equ	14863	;# 
  2666   003A10                     RC0PPS          equ	14864	;# 
  2667   003A11                     RC1PPS          equ	14865	;# 
  2668   003A12                     RC2PPS          equ	14866	;# 
  2669   003A13                     RC3PPS          equ	14867	;# 
  2670   003A14                     RC4PPS          equ	14868	;# 
  2671   003A15                     RC5PPS          equ	14869	;# 
  2672   003A16                     RC6PPS          equ	14870	;# 
  2673   003A17                     RC7PPS          equ	14871	;# 
  2674   003A18                     RD0PPS          equ	14872	;# 
  2675   003A19                     RD1PPS          equ	14873	;# 
  2676   003A1A                     RD2PPS          equ	14874	;# 
  2677   003A1B                     RD3PPS          equ	14875	;# 
  2678   003A1C                     RD4PPS          equ	14876	;# 
  2679   003A1D                     RD5PPS          equ	14877	;# 
  2680   003A1E                     RD6PPS          equ	14878	;# 
  2681   003A1F                     RD7PPS          equ	14879	;# 
  2682   003A20                     RE0PPS          equ	14880	;# 
  2683   003A21                     RE1PPS          equ	14881	;# 
  2684   003A22                     RE2PPS          equ	14882	;# 
  2685   003A28                     RF0PPS          equ	14888	;# 
  2686   003A29                     RF1PPS          equ	14889	;# 
  2687   003A2A                     RF2PPS          equ	14890	;# 
  2688   003A2B                     RF3PPS          equ	14891	;# 
  2689   003A2C                     RF4PPS          equ	14892	;# 
  2690   003A2D                     RF5PPS          equ	14893	;# 
  2691   003A2E                     RF6PPS          equ	14894	;# 
  2692   003A2F                     RF7PPS          equ	14895	;# 
  2693   003A40                     ANSELA          equ	14912	;# 
  2694   003A41                     WPUA            equ	14913	;# 
  2695   003A42                     ODCONA          equ	14914	;# 
  2696   003A43                     SLRCONA         equ	14915	;# 
  2697   003A44                     INLVLA          equ	14916	;# 
  2698   003A45                     IOCAP           equ	14917	;# 
  2699   003A46                     IOCAN           equ	14918	;# 
  2700   003A47                     IOCAF           equ	14919	;# 
  2701   003A50                     ANSELB          equ	14928	;# 
  2702   003A51                     WPUB            equ	14929	;# 
  2703   003A52                     ODCONB          equ	14930	;# 
  2704   003A53                     SLRCONB         equ	14931	;# 
  2705   003A54                     INLVLB          equ	14932	;# 
  2706   003A55                     IOCBP           equ	14933	;# 
  2707   003A56                     IOCBN           equ	14934	;# 
  2708   003A57                     IOCBF           equ	14935	;# 
  2709   003A5A                     RB1I2C          equ	14938	;# 
  2710   003A5B                     RB2I2C          equ	14939	;# 
  2711   003A60                     ANSELC          equ	14944	;# 
  2712   003A61                     WPUC            equ	14945	;# 
  2713   003A62                     ODCONC          equ	14946	;# 
  2714   003A63                     SLRCONC         equ	14947	;# 
  2715   003A64                     INLVLC          equ	14948	;# 
  2716   003A65                     IOCCP           equ	14949	;# 
  2717   003A66                     IOCCN           equ	14950	;# 
  2718   003A67                     IOCCF           equ	14951	;# 
  2719   003A6A                     RC3I2C          equ	14954	;# 
  2720   003A6B                     RC4I2C          equ	14955	;# 
  2721   003A70                     ANSELD          equ	14960	;# 
  2722   003A71                     WPUD            equ	14961	;# 
  2723   003A72                     ODCOND          equ	14962	;# 
  2724   003A73                     SLRCOND         equ	14963	;# 
  2725   003A74                     INLVLD          equ	14964	;# 
  2726   003A7A                     RD0I2C          equ	14970	;# 
  2727   003A7B                     RD1I2C          equ	14971	;# 
  2728   003A80                     ANSELE          equ	14976	;# 
  2729   003A81                     WPUE            equ	14977	;# 
  2730   003A82                     ODCONE          equ	14978	;# 
  2731   003A83                     SLRCONE         equ	14979	;# 
  2732   003A84                     INLVLE          equ	14980	;# 
  2733   003A85                     IOCEP           equ	14981	;# 
  2734   003A86                     IOCEN           equ	14982	;# 
  2735   003A87                     IOCEF           equ	14983	;# 
  2736   003A90                     ANSELF          equ	14992	;# 
  2737   003A91                     WPUF            equ	14993	;# 
  2738   003A92                     ODCONF          equ	14994	;# 
  2739   003A93                     SLRCONF         equ	14995	;# 
  2740   003A94                     INLVLF          equ	14996	;# 
  2741   003ABF                     PPSLOCK         equ	15039	;# 
  2742   003AC0                     INT0PPS         equ	15040	;# 
  2743   003AC1                     INT1PPS         equ	15041	;# 
  2744   003AC2                     INT2PPS         equ	15042	;# 
  2745   003AC3                     T0CKIPPS        equ	15043	;# 
  2746   003AC4                     T1CKIPPS        equ	15044	;# 
  2747   003AC5                     T1GPPS          equ	15045	;# 
  2748   003AC6                     T3CKIPPS        equ	15046	;# 
  2749   003AC7                     T3GPPS          equ	15047	;# 
  2750   003AC8                     T5CKIPPS        equ	15048	;# 
  2751   003AC9                     T5GPPS          equ	15049	;# 
  2752   003ACA                     T2INPPS         equ	15050	;# 
  2753   003ACB                     T4INPPS         equ	15051	;# 
  2754   003ACC                     T6INPPS         equ	15052	;# 
  2755   003ACD                     CCP1PPS         equ	15053	;# 
  2756   003ACE                     CCP2PPS         equ	15054	;# 
  2757   003ACF                     CCP3PPS         equ	15055	;# 
  2758   003AD0                     CCP4PPS         equ	15056	;# 
  2759   003AD1                     SMT1WINPPS      equ	15057	;# 
  2760   003AD2                     SMT1SIGPPS      equ	15058	;# 
  2761   003AD3                     CWG1INPPS       equ	15059	;# 
  2762   003AD4                     CWG2INPPS       equ	15060	;# 
  2763   003AD5                     CWG3INPPS       equ	15061	;# 
  2764   003AD6                     MD1CARLPPS      equ	15062	;# 
  2765   003AD7                     MD1CARHPPS      equ	15063	;# 
  2766   003AD8                     MD1SRCPPS       equ	15064	;# 
  2767   003AD9                     CLCIN0PPS       equ	15065	;# 
  2768   003ADA                     CLCIN1PPS       equ	15066	;# 
  2769   003ADB                     CLCIN2PPS       equ	15067	;# 
  2770   003ADC                     CLCIN3PPS       equ	15068	;# 
  2771   003ADD                     ADACTPPS        equ	15069	;# 
  2772   003ADE                     SPI1SCKPPS      equ	15070	;# 
  2773   003ADF                     SPI1SDIPPS      equ	15071	;# 
  2774   003AE0                     SPI1SSPPS       equ	15072	;# 
  2775   003AE1                     I2C1SCLPPS      equ	15073	;# 
  2776   003AE2                     I2C1SDAPPS      equ	15074	;# 
  2777   003AE3                     I2C2SCLPPS      equ	15075	;# 
  2778   003AE4                     I2C2SDAPPS      equ	15076	;# 
  2779   003AE5                     U1RXPPS         equ	15077	;# 
  2780   003AE6                     U1CTSPPS        equ	15078	;# 
  2781   003AE8                     U2RXPPS         equ	15080	;# 
  2782   003AE9                     U2CTSPPS        equ	15081	;# 
  2783   003BC9                     DMA2BUF         equ	15305	;# 
  2784   003BCA                     DMA2DCNT        equ	15306	;# 
  2785   003BCA                     DMA2DCNTL       equ	15306	;# 
  2786   003BCB                     DMA2DCNTH       equ	15307	;# 
  2787   003BCC                     DMA2DPTR        equ	15308	;# 
  2788   003BCC                     DMA2DPTRL       equ	15308	;# 
  2789   003BCD                     DMA2DPTRH       equ	15309	;# 
  2790   003BCE                     DMA2DSZ         equ	15310	;# 
  2791   003BCE                     DMA2DSZL        equ	15310	;# 
  2792   003BCF                     DMA2DSZH        equ	15311	;# 
  2793   003BD0                     DMA2DSA         equ	15312	;# 
  2794   003BD0                     DMA2DSAL        equ	15312	;# 
  2795   003BD1                     DMA2DSAH        equ	15313	;# 
  2796   003BD2                     DMA2SCNT        equ	15314	;# 
  2797   003BD2                     DMA2SCNTL       equ	15314	;# 
  2798   003BD3                     DMA2SCNTH       equ	15315	;# 
  2799   003BD4                     DMA2SPTR        equ	15316	;# 
  2800   003BD4                     DMA2SPTRL       equ	15316	;# 
  2801   003BD5                     DMA2SPTRH       equ	15317	;# 
  2802   003BD6                     DMA2SPTRU       equ	15318	;# 
  2803   003BD7                     DMA2SSZ         equ	15319	;# 
  2804   003BD7                     DMA2SSZL        equ	15319	;# 
  2805   003BD8                     DMA2SSZH        equ	15320	;# 
  2806   003BD9                     DMA2SSA         equ	15321	;# 
  2807   003BD9                     DMA2SSAL        equ	15321	;# 
  2808   003BDA                     DMA2SSAH        equ	15322	;# 
  2809   003BDB                     DMA2SSAU        equ	15323	;# 
  2810   003BDC                     DMA2CON0        equ	15324	;# 
  2811   003BDD                     DMA2CON1        equ	15325	;# 
  2812   003BDE                     DMA2AIRQ        equ	15326	;# 
  2813   003BDF                     DMA2SIRQ        equ	15327	;# 
  2814   003BE9                     DMA1BUF         equ	15337	;# 
  2815   003BEA                     DMA1DCNT        equ	15338	;# 
  2816   003BEA                     DMA1DCNTL       equ	15338	;# 
  2817   003BEB                     DMA1DCNTH       equ	15339	;# 
  2818   003BEC                     DMA1DPTR        equ	15340	;# 
  2819   003BEC                     DMA1DPTRL       equ	15340	;# 
  2820   003BED                     DMA1DPTRH       equ	15341	;# 
  2821   003BEE                     DMA1DSZ         equ	15342	;# 
  2822   003BEE                     DMA1DSZL        equ	15342	;# 
  2823   003BEF                     DMA1DSZH        equ	15343	;# 
  2824   003BF0                     DMA1DSA         equ	15344	;# 
  2825   003BF0                     DMA1DSAL        equ	15344	;# 
  2826   003BF1                     DMA1DSAH        equ	15345	;# 
  2827   003BF2                     DMA1SCNT        equ	15346	;# 
  2828   003BF2                     DMA1SCNTL       equ	15346	;# 
  2829   003BF3                     DMA1SCNTH       equ	15347	;# 
  2830   003BF4                     DMA1SPTR        equ	15348	;# 
  2831   003BF4                     DMA1SPTRL       equ	15348	;# 
  2832   003BF5                     DMA1SPTRH       equ	15349	;# 
  2833   003BF6                     DMA1SPTRU       equ	15350	;# 
  2834   003BF7                     DMA1SSZ         equ	15351	;# 
  2835   003BF7                     DMA1SSZL        equ	15351	;# 
  2836   003BF8                     DMA1SSZH        equ	15352	;# 
  2837   003BF9                     DMA1SSA         equ	15353	;# 
  2838   003BF9                     DMA1SSAL        equ	15353	;# 
  2839   003BFA                     DMA1SSAH        equ	15354	;# 
  2840   003BFB                     DMA1SSAU        equ	15355	;# 
  2841   003BFC                     DMA1CON0        equ	15356	;# 
  2842   003BFD                     DMA1CON1        equ	15357	;# 
  2843   003BFE                     DMA1AIRQ        equ	15358	;# 
  2844   003BFF                     DMA1SIRQ        equ	15359	;# 
  2845   003C56                     CLC4CON         equ	15446	;# 
  2846   003C57                     CLC4POL         equ	15447	;# 
  2847   003C58                     CLC4SEL0        equ	15448	;# 
  2848   003C59                     CLC4SEL1        equ	15449	;# 
  2849   003C5A                     CLC4SEL2        equ	15450	;# 
  2850   003C5B                     CLC4SEL3        equ	15451	;# 
  2851   003C5C                     CLC4GLS0        equ	15452	;# 
  2852   003C5D                     CLC4GLS1        equ	15453	;# 
  2853   003C5E                     CLC4GLS2        equ	15454	;# 
  2854   003C5F                     CLC4GLS3        equ	15455	;# 
  2855   003C60                     CLC3CON         equ	15456	;# 
  2856   003C61                     CLC3POL         equ	15457	;# 
  2857   003C62                     CLC3SEL0        equ	15458	;# 
  2858   003C63                     CLC3SEL1        equ	15459	;# 
  2859   003C64                     CLC3SEL2        equ	15460	;# 
  2860   003C65                     CLC3SEL3        equ	15461	;# 
  2861   003C66                     CLC3GLS0        equ	15462	;# 
  2862   003C67                     CLC3GLS1        equ	15463	;# 
  2863   003C68                     CLC3GLS2        equ	15464	;# 
  2864   003C69                     CLC3GLS3        equ	15465	;# 
  2865   003C6A                     CLC2CON         equ	15466	;# 
  2866   003C6B                     CLC2POL         equ	15467	;# 
  2867   003C6C                     CLC2SEL0        equ	15468	;# 
  2868   003C6D                     CLC2SEL1        equ	15469	;# 
  2869   003C6E                     CLC2SEL2        equ	15470	;# 
  2870   003C6F                     CLC2SEL3        equ	15471	;# 
  2871   003C70                     CLC2GLS0        equ	15472	;# 
  2872   003C71                     CLC2GLS1        equ	15473	;# 
  2873   003C72                     CLC2GLS2        equ	15474	;# 
  2874   003C73                     CLC2GLS3        equ	15475	;# 
  2875   003C74                     CLC1CON         equ	15476	;# 
  2876   003C75                     CLC1POL         equ	15477	;# 
  2877   003C76                     CLC1SEL0        equ	15478	;# 
  2878   003C77                     CLC1SEL1        equ	15479	;# 
  2879   003C78                     CLC1SEL2        equ	15480	;# 
  2880   003C79                     CLC1SEL3        equ	15481	;# 
  2881   003C7A                     CLC1GLS0        equ	15482	;# 
  2882   003C7B                     CLC1GLS1        equ	15483	;# 
  2883   003C7C                     CLC1GLS2        equ	15484	;# 
  2884   003C7D                     CLC1GLS3        equ	15485	;# 
  2885   003C7E                     CLCDATA0        equ	15486	;# 
  2886   003CE5                     CLKRCON         equ	15589	;# 
  2887   003CE6                     CLKRCLK         equ	15590	;# 
  2888   003CFA                     MD1CON0         equ	15610	;# 
  2889   003CFB                     MD1CON1         equ	15611	;# 
  2890   003CFC                     MD1SRC          equ	15612	;# 
  2891   003CFD                     MD1CARL         equ	15613	;# 
  2892   003CFE                     MD1CARH         equ	15614	;# 
  2893   003D10                     SPI1RXB         equ	15632	;# 
  2894   003D11                     SPI1TXB         equ	15633	;# 
  2895   003D12                     SPI1TCNT        equ	15634	;# 
  2896   003D12                     SPI1TCNTL       equ	15634	;# 
  2897   003D13                     SPI1TCNTH       equ	15635	;# 
  2898   003D14                     SPI1CON0        equ	15636	;# 
  2899   003D15                     SPI1CON1        equ	15637	;# 
  2900   003D16                     SPI1CON2        equ	15638	;# 
  2901   003D17                     SPI1STATUS      equ	15639	;# 
  2902   003D18                     SPI1TWIDTH      equ	15640	;# 
  2903   003D19                     SPI1BAUD        equ	15641	;# 
  2904   003D1A                     SPI1INTF        equ	15642	;# 
  2905   003D1B                     SPI1INTE        equ	15643	;# 
  2906   003D1C                     SPI1CLK         equ	15644	;# 
  2907   003D54                     I2C2RXB         equ	15700	;# 
  2908   003D55                     I2C2TXB         equ	15701	;# 
  2909   003D56                     I2C2CNT         equ	15702	;# 
  2910   003D57                     I2C2ADB0        equ	15703	;# 
  2911   003D58                     I2C2ADB1        equ	15704	;# 
  2912   003D59                     I2C2ADR0        equ	15705	;# 
  2913   003D5A                     I2C2ADR1        equ	15706	;# 
  2914   003D5B                     I2C2ADR2        equ	15707	;# 
  2915   003D5C                     I2C2ADR3        equ	15708	;# 
  2916   003D5D                     I2C2CON0        equ	15709	;# 
  2917   003D5E                     I2C2CON1        equ	15710	;# 
  2918   003D5F                     I2C2CON2        equ	15711	;# 
  2919   003D60                     I2C2ERR         equ	15712	;# 
  2920   003D61                     I2C2STAT0       equ	15713	;# 
  2921   003D62                     I2C2STAT1       equ	15714	;# 
  2922   003D63                     I2C2PIR         equ	15715	;# 
  2923   003D64                     I2C2PIE         equ	15716	;# 
  2924   003D65                     I2C2CLK         equ	15717	;# 
  2925   003D66                     I2C2BTO         equ	15718	;# 
  2926   003D6A                     I2C1RXB         equ	15722	;# 
  2927   003D6B                     I2C1TXB         equ	15723	;# 
  2928   003D6C                     I2C1CNT         equ	15724	;# 
  2929   003D6D                     I2C1ADB0        equ	15725	;# 
  2930   003D6E                     I2C1ADB1        equ	15726	;# 
  2931   003D6F                     I2C1ADR0        equ	15727	;# 
  2932   003D70                     I2C1ADR1        equ	15728	;# 
  2933   003D71                     I2C1ADR2        equ	15729	;# 
  2934   003D72                     I2C1ADR3        equ	15730	;# 
  2935   003D73                     I2C1CON0        equ	15731	;# 
  2936   003D74                     I2C1CON1        equ	15732	;# 
  2937   003D75                     I2C1CON2        equ	15733	;# 
  2938   003D76                     I2C1ERR         equ	15734	;# 
  2939   003D77                     I2C1STAT0       equ	15735	;# 
  2940   003D78                     I2C1STAT1       equ	15736	;# 
  2941   003D79                     I2C1PIR         equ	15737	;# 
  2942   003D7A                     I2C1PIE         equ	15738	;# 
  2943   003D7B                     I2C1CLK         equ	15739	;# 
  2944   003D7C                     I2C1BTO         equ	15740	;# 
  2945   003DD0                     U2RXB           equ	15824	;# 
  2946   003DD0                     U2RXBL          equ	15824	;# 
  2947   003DD2                     U2TXB           equ	15826	;# 
  2948   003DD2                     U2TXBL          equ	15826	;# 
  2949   003DD4                     U2P1            equ	15828	;# 
  2950   003DD4                     U2P1L           equ	15828	;# 
  2951   003DD6                     U2P2            equ	15830	;# 
  2952   003DD6                     U2P2L           equ	15830	;# 
  2953   003DD8                     U2P3            equ	15832	;# 
  2954   003DD8                     U2P3L           equ	15832	;# 
  2955   003DDA                     U2CON0          equ	15834	;# 
  2956   003DDB                     U2CON1          equ	15835	;# 
  2957   003DDC                     U2CON2          equ	15836	;# 
  2958   003DDD                     U2BRG           equ	15837	;# 
  2959   003DDD                     U2BRGL          equ	15837	;# 
  2960   003DDE                     U2BRGH          equ	15838	;# 
  2961   003DDF                     U2FIFO          equ	15839	;# 
  2962   003DE0                     U2UIR           equ	15840	;# 
  2963   003DE1                     U2ERRIR         equ	15841	;# 
  2964   003DE2                     U2ERRIE         equ	15842	;# 
  2965   003DE8                     U1RXB           equ	15848	;# 
  2966   003DE8                     U1RXBL          equ	15848	;# 
  2967   003DE9                     U1RXCHK         equ	15849	;# 
  2968   003DEA                     U1TXB           equ	15850	;# 
  2969   003DEA                     U1TXBL          equ	15850	;# 
  2970   003DEB                     U1TXCHK         equ	15851	;# 
  2971   003DEC                     U1P1            equ	15852	;# 
  2972   003DEC                     U1P1L           equ	15852	;# 
  2973   003DED                     U1P1H           equ	15853	;# 
  2974   003DEE                     U1P2            equ	15854	;# 
  2975   003DEE                     U1P2L           equ	15854	;# 
  2976   003DEF                     U1P2H           equ	15855	;# 
  2977   003DF0                     U1P3            equ	15856	;# 
  2978   003DF0                     U1P3L           equ	15856	;# 
  2979   003DF1                     U1P3H           equ	15857	;# 
  2980   003DF2                     U1CON0          equ	15858	;# 
  2981   003DF3                     U1CON1          equ	15859	;# 
  2982   003DF4                     U1CON2          equ	15860	;# 
  2983   003DF5                     U1BRG           equ	15861	;# 
  2984   003DF5                     U1BRGL          equ	15861	;# 
  2985   003DF6                     U1BRGH          equ	15862	;# 
  2986   003DF7                     U1FIFO          equ	15863	;# 
  2987   003DF8                     U1UIR           equ	15864	;# 
  2988   003DF9                     U1ERRIR         equ	15865	;# 
  2989   003DFA                     U1ERRIE         equ	15866	;# 
  2990   003E9C                     DAC1CON1        equ	16028	;# 
  2991   003E9E                     DAC1CON0        equ	16030	;# 
  2992   003EB8                     CM2CON0         equ	16056	;# 
  2993   003EB9                     CM2CON1         equ	16057	;# 
  2994   003EBA                     CM2NCH          equ	16058	;# 
  2995   003EBB                     CM2PCH          equ	16059	;# 
  2996   003EBC                     CM1CON0         equ	16060	;# 
  2997   003EBD                     CM1CON1         equ	16061	;# 
  2998   003EBE                     CM1NCH          equ	16062	;# 
  2999   003EBF                     CM1PCH          equ	16063	;# 
  3000   003EC0                     CMOUT           equ	16064	;# 
  3001   003EC1                     FVRCON          equ	16065	;# 
  3002   003EC3                     ZCDCON          equ	16067	;# 
  3003   003EC9                     HLVDCON0        equ	16073	;# 
  3004   003ECA                     HLVDCON1        equ	16074	;# 
  3005   003ED7                     ADCP            equ	16087	;# 
  3006   003EDE                     ADLTH           equ	16094	;# 
  3007   003EDE                     ADLTHL          equ	16094	;# 
  3008   003EDF                     ADLTHH          equ	16095	;# 
  3009   003EE0                     ADUTH           equ	16096	;# 
  3010   003EE0                     ADUTHL          equ	16096	;# 
  3011   003EE1                     ADUTHH          equ	16097	;# 
  3012   003EE2                     ADERR           equ	16098	;# 
  3013   003EE2                     ADERRL          equ	16098	;# 
  3014   003EE3                     ADERRH          equ	16099	;# 
  3015   003EE4                     ADSTPT          equ	16100	;# 
  3016   003EE4                     ADSTPTL         equ	16100	;# 
  3017   003EE5                     ADSTPTH         equ	16101	;# 
  3018   003EE6                     ADFLTR          equ	16102	;# 
  3019   003EE6                     ADFLTRL         equ	16102	;# 
  3020   003EE7                     ADFLTRH         equ	16103	;# 
  3021   003EE8                     ADACC           equ	16104	;# 
  3022   003EE8                     ADACCL          equ	16104	;# 
  3023   003EE9                     ADACCH          equ	16105	;# 
  3024   003EEA                     ADACCU          equ	16106	;# 
  3025   003EEB                     ADCNT           equ	16107	;# 
  3026   003EEC                     ADRPT           equ	16108	;# 
  3027   003EED                     ADPREV          equ	16109	;# 
  3028   003EED                     ADPREVL         equ	16109	;# 
  3029   003EEE                     ADPREVH         equ	16110	;# 
  3030   003EEF                     ADRES           equ	16111	;# 
  3031   003EEF                     ADRESL          equ	16111	;# 
  3032   003EF0                     ADRESH          equ	16112	;# 
  3033   003EF1                     ADPCH           equ	16113	;# 
  3034   003EF3                     ADACQ           equ	16115	;# 
  3035   003EF3                     ADACQL          equ	16115	;# 
  3036   003EF4                     ADACQH          equ	16116	;# 
  3037   003EF5                     ADCAP           equ	16117	;# 
  3038   003EF6                     ADPRE           equ	16118	;# 
  3039   003EF6                     ADPREL          equ	16118	;# 
  3040   003EF7                     ADPREH          equ	16119	;# 
  3041   003EF8                     ADCON0          equ	16120	;# 
  3042   003EF9                     ADCON1          equ	16121	;# 
  3043   003EFA                     ADCON2          equ	16122	;# 
  3044   003EFB                     ADCON3          equ	16123	;# 
  3045   003EFC                     ADSTAT          equ	16124	;# 
  3046   003EFD                     ADREF           equ	16125	;# 
  3047   003EFE                     ADACT           equ	16126	;# 
  3048   003EFF                     ADCLK           equ	16127	;# 
  3049   003F12                     SMT1TMR         equ	16146	;# 
  3050   003F12                     SMT1TMRL        equ	16146	;# 
  3051   003F13                     SMT1TMRH        equ	16147	;# 
  3052   003F14                     SMT1TMRU        equ	16148	;# 
  3053   003F15                     SMT1CPR         equ	16149	;# 
  3054   003F15                     SMT1CPRL        equ	16149	;# 
  3055   003F16                     SMT1CPRH        equ	16150	;# 
  3056   003F17                     SMT1CPRU        equ	16151	;# 
  3057   003F18                     SMT1CPW         equ	16152	;# 
  3058   003F18                     SMT1CPWL        equ	16152	;# 
  3059   003F19                     SMT1CPWH        equ	16153	;# 
  3060   003F1A                     SMT1CPWU        equ	16154	;# 
  3061   003F1B                     SMT1PR          equ	16155	;# 
  3062   003F1B                     SMT1PRL         equ	16155	;# 
  3063   003F1C                     SMT1PRH         equ	16156	;# 
  3064   003F1D                     SMT1PRU         equ	16157	;# 
  3065   003F1E                     SMT1CON0        equ	16158	;# 
  3066   003F1F                     SMT1CON1        equ	16159	;# 
  3067   003F20                     SMT1STAT        equ	16160	;# 
  3068   003F21                     SMT1CLK         equ	16161	;# 
  3069   003F22                     SMT1SIG         equ	16162	;# 
  3070   003F23                     SMT1WIN         equ	16163	;# 
  3071   003F38                     NCO1ACC         equ	16184	;# 
  3072   003F38                     NCO1ACCL        equ	16184	;# 
  3073   003F39                     NCO1ACCH        equ	16185	;# 
  3074   003F3A                     NCO1ACCU        equ	16186	;# 
  3075   003F3B                     NCO1INC         equ	16187	;# 
  3076   003F3B                     NCO1INCL        equ	16187	;# 
  3077   003F3C                     NCO1INCH        equ	16188	;# 
  3078   003F3D                     NCO1INCU        equ	16189	;# 
  3079   003F3E                     NCO1CON         equ	16190	;# 
  3080   003F3F                     NCO1CLK         equ	16191	;# 
  3081   003F40                     CWG3CLK         equ	16192	;# 
  3082   003F40                     CWG3CLKCON      equ	16192	;# 
  3083   003F41                     CWG3ISM         equ	16193	;# 
  3084   003F41                     CWG3DAT         equ	16193	;# 
  3085   003F42                     CWG3DBR         equ	16194	;# 
  3086   003F43                     CWG3DBF         equ	16195	;# 
  3087   003F44                     CWG3CON0        equ	16196	;# 
  3088   003F45                     CWG3CON1        equ	16197	;# 
  3089   003F46                     CWG3AS0         equ	16198	;# 
  3090   003F47                     CWG3AS1         equ	16199	;# 
  3091   003F48                     CWG3STR         equ	16200	;# 
  3092   003F49                     CWG2CLK         equ	16201	;# 
  3093   003F49                     CWG2CLKCON      equ	16201	;# 
  3094   003F4A                     CWG2ISM         equ	16202	;# 
  3095   003F4A                     CWG2DAT         equ	16202	;# 
  3096   003F4B                     CWG2DBR         equ	16203	;# 
  3097   003F4C                     CWG2DBF         equ	16204	;# 
  3098   003F4D                     CWG2CON0        equ	16205	;# 
  3099   003F4E                     CWG2CON1        equ	16206	;# 
  3100   003F4F                     CWG2AS0         equ	16207	;# 
  3101   003F50                     CWG2AS1         equ	16208	;# 
  3102   003F51                     CWG2STR         equ	16209	;# 
  3103   003F52                     CWG1CLK         equ	16210	;# 
  3104   003F52                     CWG1CLKCON      equ	16210	;# 
  3105   003F53                     CWG1ISM         equ	16211	;# 
  3106   003F53                     CWG1DAT         equ	16211	;# 
  3107   003F54                     CWG1DBR         equ	16212	;# 
  3108   003F55                     CWG1DBF         equ	16213	;# 
  3109   003F56                     CWG1CON0        equ	16214	;# 
  3110   003F57                     CWG1CON1        equ	16215	;# 
  3111   003F58                     CWG1AS0         equ	16216	;# 
  3112   003F59                     CWG1AS1         equ	16217	;# 
  3113   003F5A                     CWG1STR         equ	16218	;# 
  3114   003F5E                     CCPTMRS0        equ	16222	;# 
  3115   003F5F                     CCPTMRS1        equ	16223	;# 
  3116   003F60                     PWM8DC          equ	16224	;# 
  3117   003F60                     PWM8DCL         equ	16224	;# 
  3118   003F61                     PWM8DCH         equ	16225	;# 
  3119   003F62                     PWM8CON         equ	16226	;# 
  3120   003F64                     PWM7DC          equ	16228	;# 
  3121   003F64                     PWM7DCL         equ	16228	;# 
  3122   003F65                     PWM7DCH         equ	16229	;# 
  3123   003F66                     PWM7CON         equ	16230	;# 
  3124   003F68                     PWM6DC          equ	16232	;# 
  3125   003F68                     PWM6DCL         equ	16232	;# 
  3126   003F69                     PWM6DCH         equ	16233	;# 
  3127   003F6A                     PWM6CON         equ	16234	;# 
  3128   003F6C                     PWM5DC          equ	16236	;# 
  3129   003F6C                     PWM5DCL         equ	16236	;# 
  3130   003F6D                     PWM5DCH         equ	16237	;# 
  3131   003F6E                     PWM5CON         equ	16238	;# 
  3132   003F70                     CCPR4           equ	16240	;# 
  3133   003F70                     CCPR4L          equ	16240	;# 
  3134   003F71                     CCPR4H          equ	16241	;# 
  3135   003F72                     CCP4CON         equ	16242	;# 
  3136   003F73                     CCP4CAP         equ	16243	;# 
  3137   003F74                     CCPR3           equ	16244	;# 
  3138   003F74                     CCPR3L          equ	16244	;# 
  3139   003F75                     CCPR3H          equ	16245	;# 
  3140   003F76                     CCP3CON         equ	16246	;# 
  3141   003F77                     CCP3CAP         equ	16247	;# 
  3142   003F78                     CCPR2           equ	16248	;# 
  3143   003F78                     CCPR2L          equ	16248	;# 
  3144   003F79                     CCPR2H          equ	16249	;# 
  3145   003F7A                     CCP2CON         equ	16250	;# 
  3146   003F7B                     CCP2CAP         equ	16251	;# 
  3147   003F7C                     CCPR1           equ	16252	;# 
  3148   003F7C                     CCPR1L          equ	16252	;# 
  3149   003F7D                     CCPR1H          equ	16253	;# 
  3150   003F7E                     CCP1CON         equ	16254	;# 
  3151   003F7F                     CCP1CAP         equ	16255	;# 
  3152   003F92                     T6TMR           equ	16274	;# 
  3153   003F92                     TMR6            equ	16274	;# 
  3154   003F93                     T6PR            equ	16275	;# 
  3155   003F93                     PR6             equ	16275	;# 
  3156   003F94                     T6CON           equ	16276	;# 
  3157   003F95                     T6HLT           equ	16277	;# 
  3158   003F96                     T6CLKCON        equ	16278	;# 
  3159   003F96                     T6CLK           equ	16278	;# 
  3160   003F97                     T6RST           equ	16279	;# 
  3161   003F98                     TMR5            equ	16280	;# 
  3162   003F98                     TMR5L           equ	16280	;# 
  3163   003F99                     TMR5H           equ	16281	;# 
  3164   003F9A                     T5CON           equ	16282	;# 
  3165   003F9A                     TMR5CON         equ	16282	;# 
  3166   003F9B                     T5GCON          equ	16283	;# 
  3167   003F9B                     TMR5GCON        equ	16283	;# 
  3168   003F9C                     T5GATE          equ	16284	;# 
  3169   003F9C                     TMR5GATE        equ	16284	;# 
  3170   003F9D                     T5CLK           equ	16285	;# 
  3171   003F9D                     TMR5CLK         equ	16285	;# 
  3172   003F9D                     PR5             equ	16285	;# 
  3173   003F9E                     T4TMR           equ	16286	;# 
  3174   003F9E                     TMR4            equ	16286	;# 
  3175   003F9F                     T4PR            equ	16287	;# 
  3176   003F9F                     PR4             equ	16287	;# 
  3177   003FA0                     T4CON           equ	16288	;# 
  3178   003FA1                     T4HLT           equ	16289	;# 
  3179   003FA2                     T4CLKCON        equ	16290	;# 
  3180   003FA2                     T4CLK           equ	16290	;# 
  3181   003FA3                     T4RST           equ	16291	;# 
  3182   003FA4                     TMR3            equ	16292	;# 
  3183   003FA4                     TMR3L           equ	16292	;# 
  3184   003FA5                     TMR3H           equ	16293	;# 
  3185   003FA6                     T3CON           equ	16294	;# 
  3186   003FA6                     TMR3CON         equ	16294	;# 
  3187   003FA7                     T3GCON          equ	16295	;# 
  3188   003FA7                     TMR3GCON        equ	16295	;# 
  3189   003FA8                     T3GATE          equ	16296	;# 
  3190   003FA8                     TMR3GATE        equ	16296	;# 
  3191   003FA9                     T3CLK           equ	16297	;# 
  3192   003FA9                     TMR3CLK         equ	16297	;# 
  3193   003FA9                     PR3             equ	16297	;# 
  3194   003FAA                     T2TMR           equ	16298	;# 
  3195   003FAA                     TMR2            equ	16298	;# 
  3196   003FAB                     T2PR            equ	16299	;# 
  3197   003FAB                     PR2             equ	16299	;# 
  3198   003FAC                     T2CON           equ	16300	;# 
  3199   003FAD                     T2HLT           equ	16301	;# 
  3200   003FAE                     T2CLKCON        equ	16302	;# 
  3201   003FAE                     T2CLK           equ	16302	;# 
  3202   003FAF                     T2RST           equ	16303	;# 
  3203   003FB0                     TMR1            equ	16304	;# 
  3204   003FB0                     TMR1L           equ	16304	;# 
  3205   003FB1                     TMR1H           equ	16305	;# 
  3206   003FB2                     T1CON           equ	16306	;# 
  3207   003FB2                     TMR1CON         equ	16306	;# 
  3208   003FB3                     T1GCON          equ	16307	;# 
  3209   003FB3                     TMR1GCON        equ	16307	;# 
  3210   003FB4                     T1GATE          equ	16308	;# 
  3211   003FB4                     TMR1GATE        equ	16308	;# 
  3212   003FB5                     T1CLK           equ	16309	;# 
  3213   003FB5                     TMR1CLK         equ	16309	;# 
  3214   003FB5                     PR1             equ	16309	;# 
  3215   003FB6                     TMR0L           equ	16310	;# 
  3216   003FB6                     TMR0            equ	16310	;# 
  3217   003FB7                     TMR0H           equ	16311	;# 
  3218   003FB7                     PR0             equ	16311	;# 
  3219   003FB8                     T0CON0          equ	16312	;# 
  3220   003FB9                     T0CON1          equ	16313	;# 
  3221   003FBA                     LATA            equ	16314	;# 
  3222   003FBB                     LATB            equ	16315	;# 
  3223   003FBC                     LATC            equ	16316	;# 
  3224   003FBD                     LATD            equ	16317	;# 
  3225   003FBE                     LATE            equ	16318	;# 
  3226   003FBF                     LATF            equ	16319	;# 
  3227   003FC2                     TRISA           equ	16322	;# 
  3228   003FC3                     TRISB           equ	16323	;# 
  3229   003FC4                     TRISC           equ	16324	;# 
  3230   003FC5                     TRISD           equ	16325	;# 
  3231   003FC6                     TRISE           equ	16326	;# 
  3232   003FC7                     TRISF           equ	16327	;# 
  3233   003FCA                     PORTA           equ	16330	;# 
  3234   003FCB                     PORTB           equ	16331	;# 
  3235   003FCC                     PORTC           equ	16332	;# 
  3236   003FCD                     PORTD           equ	16333	;# 
  3237   003FCE                     PORTE           equ	16334	;# 
  3238   003FCF                     PORTF           equ	16335	;# 
  3239   003FD2                     INTCON0         equ	16338	;# 
  3240   003FD3                     INTCON1         equ	16339	;# 
  3241   003FD4                     IVTLOCK         equ	16340	;# 
  3242   003FD5                     IVTBASE         equ	16341	;# 
  3243   003FD5                     IVTBASEL        equ	16341	;# 
  3244   003FD6                     IVTBASEH        equ	16342	;# 
  3245   003FD7                     IVTBASEU        equ	16343	;# 
  3246   003FD8                     STATUS          equ	16344	;# 
  3247   003FD9                     FSR2            equ	16345	;# 
  3248   003FD9                     FSR2L           equ	16345	;# 
  3249   003FDA                     FSR2H           equ	16346	;# 
  3250   003FDB                     PLUSW2          equ	16347	;# 
  3251   003FDC                     PREINC2         equ	16348	;# 
  3252   003FDD                     POSTDEC2        equ	16349	;# 
  3253   003FDE                     POSTINC2        equ	16350	;# 
  3254   003FDF                     INDF2           equ	16351	;# 
  3255   003FE0                     BSR             equ	16352	;# 
  3256   003FE1                     FSR1            equ	16353	;# 
  3257   003FE1                     FSR1L           equ	16353	;# 
  3258   003FE2                     FSR1H           equ	16354	;# 
  3259   003FE3                     PLUSW1          equ	16355	;# 
  3260   003FE4                     PREINC1         equ	16356	;# 
  3261   003FE5                     POSTDEC1        equ	16357	;# 
  3262   003FE6                     POSTINC1        equ	16358	;# 
  3263   003FE7                     INDF1           equ	16359	;# 
  3264   003FE8                     WREG            equ	16360	;# 
  3265   003FE9                     FSR0            equ	16361	;# 
  3266   003FE9                     FSR0L           equ	16361	;# 
  3267   003FEA                     FSR0H           equ	16362	;# 
  3268   003FEB                     PLUSW0          equ	16363	;# 
  3269   003FEC                     PREINC0         equ	16364	;# 
  3270   003FED                     POSTDEC0        equ	16365	;# 
  3271   003FEE                     POSTINC0        equ	16366	;# 
  3272   003FEF                     INDF0           equ	16367	;# 
  3273   003FF0                     PCON0           equ	16368	;# 
  3274   003FF1                     PCON1           equ	16369	;# 
  3275   003FF3                     PROD            equ	16371	;# 
  3276   003FF3                     PRODL           equ	16371	;# 
  3277   003FF4                     PRODH           equ	16372	;# 
  3278   003FF5                     TABLAT          equ	16373	;# 
  3279   003FF6                     TBLPTR          equ	16374	;# 
  3280   003FF6                     TBLPTRL         equ	16374	;# 
  3281   003FF7                     TBLPTRH         equ	16375	;# 
  3282   003FF8                     TBLPTRU         equ	16376	;# 
  3283   003FF9                     PCLAT           equ	16377	;# 
  3284   003FF9                     PCL             equ	16377	;# 
  3285   003FFA                     PCLATH          equ	16378	;# 
  3286   003FFB                     PCLATU          equ	16379	;# 
  3287   003FFC                     STKPTR          equ	16380	;# 
  3288   003FFD                     TOS             equ	16381	;# 
  3289   003FFD                     TOSL            equ	16381	;# 
  3290   003FFE                     TOSH            equ	16382	;# 
  3291   003FFF                     TOSU            equ	16383	;# 
  3292   003880                     STATUS_CSHAD    equ	14464	;# 
  3293   003881                     WREG_CSHAD      equ	14465	;# 
  3294   003882                     BSR_CSHAD       equ	14466	;# 
  3295   003883                     SHADCON         equ	14467	;# 
  3296   003884                     STATUS_SHAD     equ	14468	;# 
  3297   003885                     WREG_SHAD       equ	14469	;# 
  3298   003886                     BSR_SHAD        equ	14470	;# 
  3299   003887                     PCLATH_SHAD     equ	14471	;# 
  3300   003888                     PCLATU_SHAD     equ	14472	;# 
  3301   003889                     FSR0SH          equ	14473	;# 
  3302   003889                     FSR0L_SHAD      equ	14473	;# 
  3303   00388A                     FSR0H_SHAD      equ	14474	;# 
  3304   00388B                     FSR1SH          equ	14475	;# 
  3305   00388B                     FSR1L_SHAD      equ	14475	;# 
  3306   00388C                     FSR1H_SHAD      equ	14476	;# 
  3307   00388D                     FSR2SH          equ	14477	;# 
  3308   00388D                     FSR2L_SHAD      equ	14477	;# 
  3309   00388E                     FSR2H_SHAD      equ	14478	;# 
  3310   00388F                     PRODSH          equ	14479	;# 
  3311   00388F                     PRODL_SHAD      equ	14479	;# 
  3312   003890                     PRODH_SHAD      equ	14480	;# 
  3313   00389D                     IVTADL          equ	14493	;# 
  3314   00389E                     IVTADH          equ	14494	;# 
  3315   00389F                     IVTADU          equ	14495	;# 
  3316   00395B                     WDTCON0         equ	14683	;# 
  3317   00395C                     WDTCON1         equ	14684	;# 
  3318   00395D                     WDTPSL          equ	14685	;# 
  3319   00395E                     WDTPSH          equ	14686	;# 
  3320   00395F                     WDTTMR          equ	14687	;# 
  3321   003960                     CRCDATA         equ	14688	;# 
  3322   003960                     CRCDATL         equ	14688	;# 
  3323   003961                     CRCDATH         equ	14689	;# 
  3324   003962                     CRCACC          equ	14690	;# 
  3325   003962                     CRCACCL         equ	14690	;# 
  3326   003963                     CRCACCH         equ	14691	;# 
  3327   003964                     CRCSHFT         equ	14692	;# 
  3328   003964                     CRCSHIFTL       equ	14692	;# 
  3329   003965                     CRCSHIFTH       equ	14693	;# 
  3330   003966                     CRCXOR          equ	14694	;# 
  3331   003966                     CRCXORL         equ	14694	;# 
  3332   003967                     CRCXORH         equ	14695	;# 
  3333   003968                     CRCCON0         equ	14696	;# 
  3334   003969                     CRCCON1         equ	14697	;# 
  3335   003976                     SCANLADR        equ	14710	;# 
  3336   003976                     SCANLADRL       equ	14710	;# 
  3337   003977                     SCANLADRH       equ	14711	;# 
  3338   003978                     SCANLADRU       equ	14712	;# 
  3339   003979                     SCANHADR        equ	14713	;# 
  3340   003979                     SCANHADRL       equ	14713	;# 
  3341   00397A                     SCANHADRH       equ	14714	;# 
  3342   00397B                     SCANHADRU       equ	14715	;# 
  3343   00397C                     SCANCON0        equ	14716	;# 
  3344   00397D                     SCANTRIG        equ	14717	;# 
  3345   003980                     IPR0            equ	14720	;# 
  3346   003981                     IPR1            equ	14721	;# 
  3347   003982                     IPR2            equ	14722	;# 
  3348   003983                     IPR3            equ	14723	;# 
  3349   003984                     IPR4            equ	14724	;# 
  3350   003985                     IPR5            equ	14725	;# 
  3351   003986                     IPR6            equ	14726	;# 
  3352   003987                     IPR7            equ	14727	;# 
  3353   003988                     IPR8            equ	14728	;# 
  3354   003989                     IPR9            equ	14729	;# 
  3355   00398A                     IPR10           equ	14730	;# 
  3356   003990                     PIE0            equ	14736	;# 
  3357   003991                     PIE1            equ	14737	;# 
  3358   003992                     PIE2            equ	14738	;# 
  3359   003993                     PIE3            equ	14739	;# 
  3360   003994                     PIE4            equ	14740	;# 
  3361   003995                     PIE5            equ	14741	;# 
  3362   003996                     PIE6            equ	14742	;# 
  3363   003997                     PIE7            equ	14743	;# 
  3364   003998                     PIE8            equ	14744	;# 
  3365   003999                     PIE9            equ	14745	;# 
  3366   00399A                     PIE10           equ	14746	;# 
  3367   0039A0                     PIR0            equ	14752	;# 
  3368   0039A1                     PIR1            equ	14753	;# 
  3369   0039A2                     PIR2            equ	14754	;# 
  3370   0039A3                     PIR3            equ	14755	;# 
  3371   0039A4                     PIR4            equ	14756	;# 
  3372   0039A5                     PIR5            equ	14757	;# 
  3373   0039A6                     PIR6            equ	14758	;# 
  3374   0039A7                     PIR7            equ	14759	;# 
  3375   0039A8                     PIR8            equ	14760	;# 
  3376   0039A9                     PIR9            equ	14761	;# 
  3377   0039AA                     PIR10           equ	14762	;# 
  3378   0039C0                     PMD0            equ	14784	;# 
  3379   0039C1                     PMD1            equ	14785	;# 
  3380   0039C2                     PMD2            equ	14786	;# 
  3381   0039C3                     PMD3            equ	14787	;# 
  3382   0039C4                     PMD4            equ	14788	;# 
  3383   0039C5                     PMD5            equ	14789	;# 
  3384   0039C6                     PMD6            equ	14790	;# 
  3385   0039C7                     PMD7            equ	14791	;# 
  3386   0039D0                     BORCON          equ	14800	;# 
  3387   0039D1                     VREGCON         equ	14801	;# 
  3388   0039D8                     CPUDOZE         equ	14808	;# 
  3389   0039D9                     OSCCON1         equ	14809	;# 
  3390   0039DA                     OSCCON2         equ	14810	;# 
  3391   0039DB                     OSCCON3         equ	14811	;# 
  3392   0039DC                     OSCSTAT         equ	14812	;# 
  3393   0039DC                     OSCSTAT1        equ	14812	;# 
  3394   0039DD                     OSCEN           equ	14813	;# 
  3395   0039DE                     OSCTUNE         equ	14814	;# 
  3396   0039DF                     OSCFRQ          equ	14815	;# 
  3397   0039E0                     NVMADRL         equ	14816	;# 
  3398   0039E1                     NVMADRH         equ	14817	;# 
  3399   0039E3                     NVMDAT          equ	14819	;# 
  3400   0039E5                     NVMCON1         equ	14821	;# 
  3401   0039E6                     NVMCON2         equ	14822	;# 
  3402   0039EF                     PRLOCK          equ	14831	;# 
  3403   0039F1                     ISRPR           equ	14833	;# 
  3404   0039F2                     MAINPR          equ	14834	;# 
  3405   0039F3                     DMA1PR          equ	14835	;# 
  3406   0039F4                     DMA2PR          equ	14836	;# 
  3407   0039F7                     SCANPR          equ	14839	;# 
  3408   003A00                     RA0PPS          equ	14848	;# 
  3409   003A01                     RA1PPS          equ	14849	;# 
  3410   003A02                     RA2PPS          equ	14850	;# 
  3411   003A03                     RA3PPS          equ	14851	;# 
  3412   003A04                     RA4PPS          equ	14852	;# 
  3413   003A05                     RA5PPS          equ	14853	;# 
  3414   003A06                     RA6PPS          equ	14854	;# 
  3415   003A07                     RA7PPS          equ	14855	;# 
  3416   003A08                     RB0PPS          equ	14856	;# 
  3417   003A09                     RB1PPS          equ	14857	;# 
  3418   003A0A                     RB2PPS          equ	14858	;# 
  3419   003A0B                     RB3PPS          equ	14859	;# 
  3420   003A0C                     RB4PPS          equ	14860	;# 
  3421   003A0D                     RB5PPS          equ	14861	;# 
  3422   003A0E                     RB6PPS          equ	14862	;# 
  3423   003A0F                     RB7PPS          equ	14863	;# 
  3424   003A10                     RC0PPS          equ	14864	;# 
  3425   003A11                     RC1PPS          equ	14865	;# 
  3426   003A12                     RC2PPS          equ	14866	;# 
  3427   003A13                     RC3PPS          equ	14867	;# 
  3428   003A14                     RC4PPS          equ	14868	;# 
  3429   003A15                     RC5PPS          equ	14869	;# 
  3430   003A16                     RC6PPS          equ	14870	;# 
  3431   003A17                     RC7PPS          equ	14871	;# 
  3432   003A18                     RD0PPS          equ	14872	;# 
  3433   003A19                     RD1PPS          equ	14873	;# 
  3434   003A1A                     RD2PPS          equ	14874	;# 
  3435   003A1B                     RD3PPS          equ	14875	;# 
  3436   003A1C                     RD4PPS          equ	14876	;# 
  3437   003A1D                     RD5PPS          equ	14877	;# 
  3438   003A1E                     RD6PPS          equ	14878	;# 
  3439   003A1F                     RD7PPS          equ	14879	;# 
  3440   003A20                     RE0PPS          equ	14880	;# 
  3441   003A21                     RE1PPS          equ	14881	;# 
  3442   003A22                     RE2PPS          equ	14882	;# 
  3443   003A28                     RF0PPS          equ	14888	;# 
  3444   003A29                     RF1PPS          equ	14889	;# 
  3445   003A2A                     RF2PPS          equ	14890	;# 
  3446   003A2B                     RF3PPS          equ	14891	;# 
  3447   003A2C                     RF4PPS          equ	14892	;# 
  3448   003A2D                     RF5PPS          equ	14893	;# 
  3449   003A2E                     RF6PPS          equ	14894	;# 
  3450   003A2F                     RF7PPS          equ	14895	;# 
  3451   003A40                     ANSELA          equ	14912	;# 
  3452   003A41                     WPUA            equ	14913	;# 
  3453   003A42                     ODCONA          equ	14914	;# 
  3454   003A43                     SLRCONA         equ	14915	;# 
  3455   003A44                     INLVLA          equ	14916	;# 
  3456   003A45                     IOCAP           equ	14917	;# 
  3457   003A46                     IOCAN           equ	14918	;# 
  3458   003A47                     IOCAF           equ	14919	;# 
  3459   003A50                     ANSELB          equ	14928	;# 
  3460   003A51                     WPUB            equ	14929	;# 
  3461   003A52                     ODCONB          equ	14930	;# 
  3462   003A53                     SLRCONB         equ	14931	;# 
  3463   003A54                     INLVLB          equ	14932	;# 
  3464   003A55                     IOCBP           equ	14933	;# 
  3465   003A56                     IOCBN           equ	14934	;# 
  3466   003A57                     IOCBF           equ	14935	;# 
  3467   003A5A                     RB1I2C          equ	14938	;# 
  3468   003A5B                     RB2I2C          equ	14939	;# 
  3469   003A60                     ANSELC          equ	14944	;# 
  3470   003A61                     WPUC            equ	14945	;# 
  3471   003A62                     ODCONC          equ	14946	;# 
  3472   003A63                     SLRCONC         equ	14947	;# 
  3473   003A64                     INLVLC          equ	14948	;# 
  3474   003A65                     IOCCP           equ	14949	;# 
  3475   003A66                     IOCCN           equ	14950	;# 
  3476   003A67                     IOCCF           equ	14951	;# 
  3477   003A6A                     RC3I2C          equ	14954	;# 
  3478   003A6B                     RC4I2C          equ	14955	;# 
  3479   003A70                     ANSELD          equ	14960	;# 
  3480   003A71                     WPUD            equ	14961	;# 
  3481   003A72                     ODCOND          equ	14962	;# 
  3482   003A73                     SLRCOND         equ	14963	;# 
  3483   003A74                     INLVLD          equ	14964	;# 
  3484   003A7A                     RD0I2C          equ	14970	;# 
  3485   003A7B                     RD1I2C          equ	14971	;# 
  3486   003A80                     ANSELE          equ	14976	;# 
  3487   003A81                     WPUE            equ	14977	;# 
  3488   003A82                     ODCONE          equ	14978	;# 
  3489   003A83                     SLRCONE         equ	14979	;# 
  3490   003A84                     INLVLE          equ	14980	;# 
  3491   003A85                     IOCEP           equ	14981	;# 
  3492   003A86                     IOCEN           equ	14982	;# 
  3493   003A87                     IOCEF           equ	14983	;# 
  3494   003A90                     ANSELF          equ	14992	;# 
  3495   003A91                     WPUF            equ	14993	;# 
  3496   003A92                     ODCONF          equ	14994	;# 
  3497   003A93                     SLRCONF         equ	14995	;# 
  3498   003A94                     INLVLF          equ	14996	;# 
  3499   003ABF                     PPSLOCK         equ	15039	;# 
  3500   003AC0                     INT0PPS         equ	15040	;# 
  3501   003AC1                     INT1PPS         equ	15041	;# 
  3502   003AC2                     INT2PPS         equ	15042	;# 
  3503   003AC3                     T0CKIPPS        equ	15043	;# 
  3504   003AC4                     T1CKIPPS        equ	15044	;# 
  3505   003AC5                     T1GPPS          equ	15045	;# 
  3506   003AC6                     T3CKIPPS        equ	15046	;# 
  3507   003AC7                     T3GPPS          equ	15047	;# 
  3508   003AC8                     T5CKIPPS        equ	15048	;# 
  3509   003AC9                     T5GPPS          equ	15049	;# 
  3510   003ACA                     T2INPPS         equ	15050	;# 
  3511   003ACB                     T4INPPS         equ	15051	;# 
  3512   003ACC                     T6INPPS         equ	15052	;# 
  3513   003ACD                     CCP1PPS         equ	15053	;# 
  3514   003ACE                     CCP2PPS         equ	15054	;# 
  3515   003ACF                     CCP3PPS         equ	15055	;# 
  3516   003AD0                     CCP4PPS         equ	15056	;# 
  3517   003AD1                     SMT1WINPPS      equ	15057	;# 
  3518   003AD2                     SMT1SIGPPS      equ	15058	;# 
  3519   003AD3                     CWG1INPPS       equ	15059	;# 
  3520   003AD4                     CWG2INPPS       equ	15060	;# 
  3521   003AD5                     CWG3INPPS       equ	15061	;# 
  3522   003AD6                     MD1CARLPPS      equ	15062	;# 
  3523   003AD7                     MD1CARHPPS      equ	15063	;# 
  3524   003AD8                     MD1SRCPPS       equ	15064	;# 
  3525   003AD9                     CLCIN0PPS       equ	15065	;# 
  3526   003ADA                     CLCIN1PPS       equ	15066	;# 
  3527   003ADB                     CLCIN2PPS       equ	15067	;# 
  3528   003ADC                     CLCIN3PPS       equ	15068	;# 
  3529   003ADD                     ADACTPPS        equ	15069	;# 
  3530   003ADE                     SPI1SCKPPS      equ	15070	;# 
  3531   003ADF                     SPI1SDIPPS      equ	15071	;# 
  3532   003AE0                     SPI1SSPPS       equ	15072	;# 
  3533   003AE1                     I2C1SCLPPS      equ	15073	;# 
  3534   003AE2                     I2C1SDAPPS      equ	15074	;# 
  3535   003AE3                     I2C2SCLPPS      equ	15075	;# 
  3536   003AE4                     I2C2SDAPPS      equ	15076	;# 
  3537   003AE5                     U1RXPPS         equ	15077	;# 
  3538   003AE6                     U1CTSPPS        equ	15078	;# 
  3539   003AE8                     U2RXPPS         equ	15080	;# 
  3540   003AE9                     U2CTSPPS        equ	15081	;# 
  3541   003BC9                     DMA2BUF         equ	15305	;# 
  3542   003BCA                     DMA2DCNT        equ	15306	;# 
  3543   003BCA                     DMA2DCNTL       equ	15306	;# 
  3544   003BCB                     DMA2DCNTH       equ	15307	;# 
  3545   003BCC                     DMA2DPTR        equ	15308	;# 
  3546   003BCC                     DMA2DPTRL       equ	15308	;# 
  3547   003BCD                     DMA2DPTRH       equ	15309	;# 
  3548   003BCE                     DMA2DSZ         equ	15310	;# 
  3549   003BCE                     DMA2DSZL        equ	15310	;# 
  3550   003BCF                     DMA2DSZH        equ	15311	;# 
  3551   003BD0                     DMA2DSA         equ	15312	;# 
  3552   003BD0                     DMA2DSAL        equ	15312	;# 
  3553   003BD1                     DMA2DSAH        equ	15313	;# 
  3554   003BD2                     DMA2SCNT        equ	15314	;# 
  3555   003BD2                     DMA2SCNTL       equ	15314	;# 
  3556   003BD3                     DMA2SCNTH       equ	15315	;# 
  3557   003BD4                     DMA2SPTR        equ	15316	;# 
  3558   003BD4                     DMA2SPTRL       equ	15316	;# 
  3559   003BD5                     DMA2SPTRH       equ	15317	;# 
  3560   003BD6                     DMA2SPTRU       equ	15318	;# 
  3561   003BD7                     DMA2SSZ         equ	15319	;# 
  3562   003BD7                     DMA2SSZL        equ	15319	;# 
  3563   003BD8                     DMA2SSZH        equ	15320	;# 
  3564   003BD9                     DMA2SSA         equ	15321	;# 
  3565   003BD9                     DMA2SSAL        equ	15321	;# 
  3566   003BDA                     DMA2SSAH        equ	15322	;# 
  3567   003BDB                     DMA2SSAU        equ	15323	;# 
  3568   003BDC                     DMA2CON0        equ	15324	;# 
  3569   003BDD                     DMA2CON1        equ	15325	;# 
  3570   003BDE                     DMA2AIRQ        equ	15326	;# 
  3571   003BDF                     DMA2SIRQ        equ	15327	;# 
  3572   003BE9                     DMA1BUF         equ	15337	;# 
  3573   003BEA                     DMA1DCNT        equ	15338	;# 
  3574   003BEA                     DMA1DCNTL       equ	15338	;# 
  3575   003BEB                     DMA1DCNTH       equ	15339	;# 
  3576   003BEC                     DMA1DPTR        equ	15340	;# 
  3577   003BEC                     DMA1DPTRL       equ	15340	;# 
  3578   003BED                     DMA1DPTRH       equ	15341	;# 
  3579   003BEE                     DMA1DSZ         equ	15342	;# 
  3580   003BEE                     DMA1DSZL        equ	15342	;# 
  3581   003BEF                     DMA1DSZH        equ	15343	;# 
  3582   003BF0                     DMA1DSA         equ	15344	;# 
  3583   003BF0                     DMA1DSAL        equ	15344	;# 
  3584   003BF1                     DMA1DSAH        equ	15345	;# 
  3585   003BF2                     DMA1SCNT        equ	15346	;# 
  3586   003BF2                     DMA1SCNTL       equ	15346	;# 
  3587   003BF3                     DMA1SCNTH       equ	15347	;# 
  3588   003BF4                     DMA1SPTR        equ	15348	;# 
  3589   003BF4                     DMA1SPTRL       equ	15348	;# 
  3590   003BF5                     DMA1SPTRH       equ	15349	;# 
  3591   003BF6                     DMA1SPTRU       equ	15350	;# 
  3592   003BF7                     DMA1SSZ         equ	15351	;# 
  3593   003BF7                     DMA1SSZL        equ	15351	;# 
  3594   003BF8                     DMA1SSZH        equ	15352	;# 
  3595   003BF9                     DMA1SSA         equ	15353	;# 
  3596   003BF9                     DMA1SSAL        equ	15353	;# 
  3597   003BFA                     DMA1SSAH        equ	15354	;# 
  3598   003BFB                     DMA1SSAU        equ	15355	;# 
  3599   003BFC                     DMA1CON0        equ	15356	;# 
  3600   003BFD                     DMA1CON1        equ	15357	;# 
  3601   003BFE                     DMA1AIRQ        equ	15358	;# 
  3602   003BFF                     DMA1SIRQ        equ	15359	;# 
  3603   003C56                     CLC4CON         equ	15446	;# 
  3604   003C57                     CLC4POL         equ	15447	;# 
  3605   003C58                     CLC4SEL0        equ	15448	;# 
  3606   003C59                     CLC4SEL1        equ	15449	;# 
  3607   003C5A                     CLC4SEL2        equ	15450	;# 
  3608   003C5B                     CLC4SEL3        equ	15451	;# 
  3609   003C5C                     CLC4GLS0        equ	15452	;# 
  3610   003C5D                     CLC4GLS1        equ	15453	;# 
  3611   003C5E                     CLC4GLS2        equ	15454	;# 
  3612   003C5F                     CLC4GLS3        equ	15455	;# 
  3613   003C60                     CLC3CON         equ	15456	;# 
  3614   003C61                     CLC3POL         equ	15457	;# 
  3615   003C62                     CLC3SEL0        equ	15458	;# 
  3616   003C63                     CLC3SEL1        equ	15459	;# 
  3617   003C64                     CLC3SEL2        equ	15460	;# 
  3618   003C65                     CLC3SEL3        equ	15461	;# 
  3619   003C66                     CLC3GLS0        equ	15462	;# 
  3620   003C67                     CLC3GLS1        equ	15463	;# 
  3621   003C68                     CLC3GLS2        equ	15464	;# 
  3622   003C69                     CLC3GLS3        equ	15465	;# 
  3623   003C6A                     CLC2CON         equ	15466	;# 
  3624   003C6B                     CLC2POL         equ	15467	;# 
  3625   003C6C                     CLC2SEL0        equ	15468	;# 
  3626   003C6D                     CLC2SEL1        equ	15469	;# 
  3627   003C6E                     CLC2SEL2        equ	15470	;# 
  3628   003C6F                     CLC2SEL3        equ	15471	;# 
  3629   003C70                     CLC2GLS0        equ	15472	;# 
  3630   003C71                     CLC2GLS1        equ	15473	;# 
  3631   003C72                     CLC2GLS2        equ	15474	;# 
  3632   003C73                     CLC2GLS3        equ	15475	;# 
  3633   003C74                     CLC1CON         equ	15476	;# 
  3634   003C75                     CLC1POL         equ	15477	;# 
  3635   003C76                     CLC1SEL0        equ	15478	;# 
  3636   003C77                     CLC1SEL1        equ	15479	;# 
  3637   003C78                     CLC1SEL2        equ	15480	;# 
  3638   003C79                     CLC1SEL3        equ	15481	;# 
  3639   003C7A                     CLC1GLS0        equ	15482	;# 
  3640   003C7B                     CLC1GLS1        equ	15483	;# 
  3641   003C7C                     CLC1GLS2        equ	15484	;# 
  3642   003C7D                     CLC1GLS3        equ	15485	;# 
  3643   003C7E                     CLCDATA0        equ	15486	;# 
  3644   003CE5                     CLKRCON         equ	15589	;# 
  3645   003CE6                     CLKRCLK         equ	15590	;# 
  3646   003CFA                     MD1CON0         equ	15610	;# 
  3647   003CFB                     MD1CON1         equ	15611	;# 
  3648   003CFC                     MD1SRC          equ	15612	;# 
  3649   003CFD                     MD1CARL         equ	15613	;# 
  3650   003CFE                     MD1CARH         equ	15614	;# 
  3651   003D10                     SPI1RXB         equ	15632	;# 
  3652   003D11                     SPI1TXB         equ	15633	;# 
  3653   003D12                     SPI1TCNT        equ	15634	;# 
  3654   003D12                     SPI1TCNTL       equ	15634	;# 
  3655   003D13                     SPI1TCNTH       equ	15635	;# 
  3656   003D14                     SPI1CON0        equ	15636	;# 
  3657   003D15                     SPI1CON1        equ	15637	;# 
  3658   003D16                     SPI1CON2        equ	15638	;# 
  3659   003D17                     SPI1STATUS      equ	15639	;# 
  3660   003D18                     SPI1TWIDTH      equ	15640	;# 
  3661   003D19                     SPI1BAUD        equ	15641	;# 
  3662   003D1A                     SPI1INTF        equ	15642	;# 
  3663   003D1B                     SPI1INTE        equ	15643	;# 
  3664   003D1C                     SPI1CLK         equ	15644	;# 
  3665   003D54                     I2C2RXB         equ	15700	;# 
  3666   003D55                     I2C2TXB         equ	15701	;# 
  3667   003D56                     I2C2CNT         equ	15702	;# 
  3668   003D57                     I2C2ADB0        equ	15703	;# 
  3669   003D58                     I2C2ADB1        equ	15704	;# 
  3670   003D59                     I2C2ADR0        equ	15705	;# 
  3671   003D5A                     I2C2ADR1        equ	15706	;# 
  3672   003D5B                     I2C2ADR2        equ	15707	;# 
  3673   003D5C                     I2C2ADR3        equ	15708	;# 
  3674   003D5D                     I2C2CON0        equ	15709	;# 
  3675   003D5E                     I2C2CON1        equ	15710	;# 
  3676   003D5F                     I2C2CON2        equ	15711	;# 
  3677   003D60                     I2C2ERR         equ	15712	;# 
  3678   003D61                     I2C2STAT0       equ	15713	;# 
  3679   003D62                     I2C2STAT1       equ	15714	;# 
  3680   003D63                     I2C2PIR         equ	15715	;# 
  3681   003D64                     I2C2PIE         equ	15716	;# 
  3682   003D65                     I2C2CLK         equ	15717	;# 
  3683   003D66                     I2C2BTO         equ	15718	;# 
  3684   003D6A                     I2C1RXB         equ	15722	;# 
  3685   003D6B                     I2C1TXB         equ	15723	;# 
  3686   003D6C                     I2C1CNT         equ	15724	;# 
  3687   003D6D                     I2C1ADB0        equ	15725	;# 
  3688   003D6E                     I2C1ADB1        equ	15726	;# 
  3689   003D6F                     I2C1ADR0        equ	15727	;# 
  3690   003D70                     I2C1ADR1        equ	15728	;# 
  3691   003D71                     I2C1ADR2        equ	15729	;# 
  3692   003D72                     I2C1ADR3        equ	15730	;# 
  3693   003D73                     I2C1CON0        equ	15731	;# 
  3694   003D74                     I2C1CON1        equ	15732	;# 
  3695   003D75                     I2C1CON2        equ	15733	;# 
  3696   003D76                     I2C1ERR         equ	15734	;# 
  3697   003D77                     I2C1STAT0       equ	15735	;# 
  3698   003D78                     I2C1STAT1       equ	15736	;# 
  3699   003D79                     I2C1PIR         equ	15737	;# 
  3700   003D7A                     I2C1PIE         equ	15738	;# 
  3701   003D7B                     I2C1CLK         equ	15739	;# 
  3702   003D7C                     I2C1BTO         equ	15740	;# 
  3703   003DD0                     U2RXB           equ	15824	;# 
  3704   003DD0                     U2RXBL          equ	15824	;# 
  3705   003DD2                     U2TXB           equ	15826	;# 
  3706   003DD2                     U2TXBL          equ	15826	;# 
  3707   003DD4                     U2P1            equ	15828	;# 
  3708   003DD4                     U2P1L           equ	15828	;# 
  3709   003DD6                     U2P2            equ	15830	;# 
  3710   003DD6                     U2P2L           equ	15830	;# 
  3711   003DD8                     U2P3            equ	15832	;# 
  3712   003DD8                     U2P3L           equ	15832	;# 
  3713   003DDA                     U2CON0          equ	15834	;# 
  3714   003DDB                     U2CON1          equ	15835	;# 
  3715   003DDC                     U2CON2          equ	15836	;# 
  3716   003DDD                     U2BRG           equ	15837	;# 
  3717   003DDD                     U2BRGL          equ	15837	;# 
  3718   003DDE                     U2BRGH          equ	15838	;# 
  3719   003DDF                     U2FIFO          equ	15839	;# 
  3720   003DE0                     U2UIR           equ	15840	;# 
  3721   003DE1                     U2ERRIR         equ	15841	;# 
  3722   003DE2                     U2ERRIE         equ	15842	;# 
  3723   003DE8                     U1RXB           equ	15848	;# 
  3724   003DE8                     U1RXBL          equ	15848	;# 
  3725   003DE9                     U1RXCHK         equ	15849	;# 
  3726   003DEA                     U1TXB           equ	15850	;# 
  3727   003DEA                     U1TXBL          equ	15850	;# 
  3728   003DEB                     U1TXCHK         equ	15851	;# 
  3729   003DEC                     U1P1            equ	15852	;# 
  3730   003DEC                     U1P1L           equ	15852	;# 
  3731   003DED                     U1P1H           equ	15853	;# 
  3732   003DEE                     U1P2            equ	15854	;# 
  3733   003DEE                     U1P2L           equ	15854	;# 
  3734   003DEF                     U1P2H           equ	15855	;# 
  3735   003DF0                     U1P3            equ	15856	;# 
  3736   003DF0                     U1P3L           equ	15856	;# 
  3737   003DF1                     U1P3H           equ	15857	;# 
  3738   003DF2                     U1CON0          equ	15858	;# 
  3739   003DF3                     U1CON1          equ	15859	;# 
  3740   003DF4                     U1CON2          equ	15860	;# 
  3741   003DF5                     U1BRG           equ	15861	;# 
  3742   003DF5                     U1BRGL          equ	15861	;# 
  3743   003DF6                     U1BRGH          equ	15862	;# 
  3744   003DF7                     U1FIFO          equ	15863	;# 
  3745   003DF8                     U1UIR           equ	15864	;# 
  3746   003DF9                     U1ERRIR         equ	15865	;# 
  3747   003DFA                     U1ERRIE         equ	15866	;# 
  3748   003E9C                     DAC1CON1        equ	16028	;# 
  3749   003E9E                     DAC1CON0        equ	16030	;# 
  3750   003EB8                     CM2CON0         equ	16056	;# 
  3751   003EB9                     CM2CON1         equ	16057	;# 
  3752   003EBA                     CM2NCH          equ	16058	;# 
  3753   003EBB                     CM2PCH          equ	16059	;# 
  3754   003EBC                     CM1CON0         equ	16060	;# 
  3755   003EBD                     CM1CON1         equ	16061	;# 
  3756   003EBE                     CM1NCH          equ	16062	;# 
  3757   003EBF                     CM1PCH          equ	16063	;# 
  3758   003EC0                     CMOUT           equ	16064	;# 
  3759   003EC1                     FVRCON          equ	16065	;# 
  3760   003EC3                     ZCDCON          equ	16067	;# 
  3761   003EC9                     HLVDCON0        equ	16073	;# 
  3762   003ECA                     HLVDCON1        equ	16074	;# 
  3763   003ED7                     ADCP            equ	16087	;# 
  3764   003EDE                     ADLTH           equ	16094	;# 
  3765   003EDE                     ADLTHL          equ	16094	;# 
  3766   003EDF                     ADLTHH          equ	16095	;# 
  3767   003EE0                     ADUTH           equ	16096	;# 
  3768   003EE0                     ADUTHL          equ	16096	;# 
  3769   003EE1                     ADUTHH          equ	16097	;# 
  3770   003EE2                     ADERR           equ	16098	;# 
  3771   003EE2                     ADERRL          equ	16098	;# 
  3772   003EE3                     ADERRH          equ	16099	;# 
  3773   003EE4                     ADSTPT          equ	16100	;# 
  3774   003EE4                     ADSTPTL         equ	16100	;# 
  3775   003EE5                     ADSTPTH         equ	16101	;# 
  3776   003EE6                     ADFLTR          equ	16102	;# 
  3777   003EE6                     ADFLTRL         equ	16102	;# 
  3778   003EE7                     ADFLTRH         equ	16103	;# 
  3779   003EE8                     ADACC           equ	16104	;# 
  3780   003EE8                     ADACCL          equ	16104	;# 
  3781   003EE9                     ADACCH          equ	16105	;# 
  3782   003EEA                     ADACCU          equ	16106	;# 
  3783   003EEB                     ADCNT           equ	16107	;# 
  3784   003EEC                     ADRPT           equ	16108	;# 
  3785   003EED                     ADPREV          equ	16109	;# 
  3786   003EED                     ADPREVL         equ	16109	;# 
  3787   003EEE                     ADPREVH         equ	16110	;# 
  3788   003EEF                     ADRES           equ	16111	;# 
  3789   003EEF                     ADRESL          equ	16111	;# 
  3790   003EF0                     ADRESH          equ	16112	;# 
  3791   003EF1                     ADPCH           equ	16113	;# 
  3792   003EF3                     ADACQ           equ	16115	;# 
  3793   003EF3                     ADACQL          equ	16115	;# 
  3794   003EF4                     ADACQH          equ	16116	;# 
  3795   003EF5                     ADCAP           equ	16117	;# 
  3796   003EF6                     ADPRE           equ	16118	;# 
  3797   003EF6                     ADPREL          equ	16118	;# 
  3798   003EF7                     ADPREH          equ	16119	;# 
  3799   003EF8                     ADCON0          equ	16120	;# 
  3800   003EF9                     ADCON1          equ	16121	;# 
  3801   003EFA                     ADCON2          equ	16122	;# 
  3802   003EFB                     ADCON3          equ	16123	;# 
  3803   003EFC                     ADSTAT          equ	16124	;# 
  3804   003EFD                     ADREF           equ	16125	;# 
  3805   003EFE                     ADACT           equ	16126	;# 
  3806   003EFF                     ADCLK           equ	16127	;# 
  3807   003F12                     SMT1TMR         equ	16146	;# 
  3808   003F12                     SMT1TMRL        equ	16146	;# 
  3809   003F13                     SMT1TMRH        equ	16147	;# 
  3810   003F14                     SMT1TMRU        equ	16148	;# 
  3811   003F15                     SMT1CPR         equ	16149	;# 
  3812   003F15                     SMT1CPRL        equ	16149	;# 
  3813   003F16                     SMT1CPRH        equ	16150	;# 
  3814   003F17                     SMT1CPRU        equ	16151	;# 
  3815   003F18                     SMT1CPW         equ	16152	;# 
  3816   003F18                     SMT1CPWL        equ	16152	;# 
  3817   003F19                     SMT1CPWH        equ	16153	;# 
  3818   003F1A                     SMT1CPWU        equ	16154	;# 
  3819   003F1B                     SMT1PR          equ	16155	;# 
  3820   003F1B                     SMT1PRL         equ	16155	;# 
  3821   003F1C                     SMT1PRH         equ	16156	;# 
  3822   003F1D                     SMT1PRU         equ	16157	;# 
  3823   003F1E                     SMT1CON0        equ	16158	;# 
  3824   003F1F                     SMT1CON1        equ	16159	;# 
  3825   003F20                     SMT1STAT        equ	16160	;# 
  3826   003F21                     SMT1CLK         equ	16161	;# 
  3827   003F22                     SMT1SIG         equ	16162	;# 
  3828   003F23                     SMT1WIN         equ	16163	;# 
  3829   003F38                     NCO1ACC         equ	16184	;# 
  3830   003F38                     NCO1ACCL        equ	16184	;# 
  3831   003F39                     NCO1ACCH        equ	16185	;# 
  3832   003F3A                     NCO1ACCU        equ	16186	;# 
  3833   003F3B                     NCO1INC         equ	16187	;# 
  3834   003F3B                     NCO1INCL        equ	16187	;# 
  3835   003F3C                     NCO1INCH        equ	16188	;# 
  3836   003F3D                     NCO1INCU        equ	16189	;# 
  3837   003F3E                     NCO1CON         equ	16190	;# 
  3838   003F3F                     NCO1CLK         equ	16191	;# 
  3839   003F40                     CWG3CLK         equ	16192	;# 
  3840   003F40                     CWG3CLKCON      equ	16192	;# 
  3841   003F41                     CWG3ISM         equ	16193	;# 
  3842   003F41                     CWG3DAT         equ	16193	;# 
  3843   003F42                     CWG3DBR         equ	16194	;# 
  3844   003F43                     CWG3DBF         equ	16195	;# 
  3845   003F44                     CWG3CON0        equ	16196	;# 
  3846   003F45                     CWG3CON1        equ	16197	;# 
  3847   003F46                     CWG3AS0         equ	16198	;# 
  3848   003F47                     CWG3AS1         equ	16199	;# 
  3849   003F48                     CWG3STR         equ	16200	;# 
  3850   003F49                     CWG2CLK         equ	16201	;# 
  3851   003F49                     CWG2CLKCON      equ	16201	;# 
  3852   003F4A                     CWG2ISM         equ	16202	;# 
  3853   003F4A                     CWG2DAT         equ	16202	;# 
  3854   003F4B                     CWG2DBR         equ	16203	;# 
  3855   003F4C                     CWG2DBF         equ	16204	;# 
  3856   003F4D                     CWG2CON0        equ	16205	;# 
  3857   003F4E                     CWG2CON1        equ	16206	;# 
  3858   003F4F                     CWG2AS0         equ	16207	;# 
  3859   003F50                     CWG2AS1         equ	16208	;# 
  3860   003F51                     CWG2STR         equ	16209	;# 
  3861   003F52                     CWG1CLK         equ	16210	;# 
  3862   003F52                     CWG1CLKCON      equ	16210	;# 
  3863   003F53                     CWG1ISM         equ	16211	;# 
  3864   003F53                     CWG1DAT         equ	16211	;# 
  3865   003F54                     CWG1DBR         equ	16212	;# 
  3866   003F55                     CWG1DBF         equ	16213	;# 
  3867   003F56                     CWG1CON0        equ	16214	;# 
  3868   003F57                     CWG1CON1        equ	16215	;# 
  3869   003F58                     CWG1AS0         equ	16216	;# 
  3870   003F59                     CWG1AS1         equ	16217	;# 
  3871   003F5A                     CWG1STR         equ	16218	;# 
  3872   003F5E                     CCPTMRS0        equ	16222	;# 
  3873   003F5F                     CCPTMRS1        equ	16223	;# 
  3874   003F60                     PWM8DC          equ	16224	;# 
  3875   003F60                     PWM8DCL         equ	16224	;# 
  3876   003F61                     PWM8DCH         equ	16225	;# 
  3877   003F62                     PWM8CON         equ	16226	;# 
  3878   003F64                     PWM7DC          equ	16228	;# 
  3879   003F64                     PWM7DCL         equ	16228	;# 
  3880   003F65                     PWM7DCH         equ	16229	;# 
  3881   003F66                     PWM7CON         equ	16230	;# 
  3882   003F68                     PWM6DC          equ	16232	;# 
  3883   003F68                     PWM6DCL         equ	16232	;# 
  3884   003F69                     PWM6DCH         equ	16233	;# 
  3885   003F6A                     PWM6CON         equ	16234	;# 
  3886   003F6C                     PWM5DC          equ	16236	;# 
  3887   003F6C                     PWM5DCL         equ	16236	;# 
  3888   003F6D                     PWM5DCH         equ	16237	;# 
  3889   003F6E                     PWM5CON         equ	16238	;# 
  3890   003F70                     CCPR4           equ	16240	;# 
  3891   003F70                     CCPR4L          equ	16240	;# 
  3892   003F71                     CCPR4H          equ	16241	;# 
  3893   003F72                     CCP4CON         equ	16242	;# 
  3894   003F73                     CCP4CAP         equ	16243	;# 
  3895   003F74                     CCPR3           equ	16244	;# 
  3896   003F74                     CCPR3L          equ	16244	;# 
  3897   003F75                     CCPR3H          equ	16245	;# 
  3898   003F76                     CCP3CON         equ	16246	;# 
  3899   003F77                     CCP3CAP         equ	16247	;# 
  3900   003F78                     CCPR2           equ	16248	;# 
  3901   003F78                     CCPR2L          equ	16248	;# 
  3902   003F79                     CCPR2H          equ	16249	;# 
  3903   003F7A                     CCP2CON         equ	16250	;# 
  3904   003F7B                     CCP2CAP         equ	16251	;# 
  3905   003F7C                     CCPR1           equ	16252	;# 
  3906   003F7C                     CCPR1L          equ	16252	;# 
  3907   003F7D                     CCPR1H          equ	16253	;# 
  3908   003F7E                     CCP1CON         equ	16254	;# 
  3909   003F7F                     CCP1CAP         equ	16255	;# 
  3910   003F92                     T6TMR           equ	16274	;# 
  3911   003F92                     TMR6            equ	16274	;# 
  3912   003F93                     T6PR            equ	16275	;# 
  3913   003F93                     PR6             equ	16275	;# 
  3914   003F94                     T6CON           equ	16276	;# 
  3915   003F95                     T6HLT           equ	16277	;# 
  3916   003F96                     T6CLKCON        equ	16278	;# 
  3917   003F96                     T6CLK           equ	16278	;# 
  3918   003F97                     T6RST           equ	16279	;# 
  3919   003F98                     TMR5            equ	16280	;# 
  3920   003F98                     TMR5L           equ	16280	;# 
  3921   003F99                     TMR5H           equ	16281	;# 
  3922   003F9A                     T5CON           equ	16282	;# 
  3923   003F9A                     TMR5CON         equ	16282	;# 
  3924   003F9B                     T5GCON          equ	16283	;# 
  3925   003F9B                     TMR5GCON        equ	16283	;# 
  3926   003F9C                     T5GATE          equ	16284	;# 
  3927   003F9C                     TMR5GATE        equ	16284	;# 
  3928   003F9D                     T5CLK           equ	16285	;# 
  3929   003F9D                     TMR5CLK         equ	16285	;# 
  3930   003F9D                     PR5             equ	16285	;# 
  3931   003F9E                     T4TMR           equ	16286	;# 
  3932   003F9E                     TMR4            equ	16286	;# 
  3933   003F9F                     T4PR            equ	16287	;# 
  3934   003F9F                     PR4             equ	16287	;# 
  3935   003FA0                     T4CON           equ	16288	;# 
  3936   003FA1                     T4HLT           equ	16289	;# 
  3937   003FA2                     T4CLKCON        equ	16290	;# 
  3938   003FA2                     T4CLK           equ	16290	;# 
  3939   003FA3                     T4RST           equ	16291	;# 
  3940   003FA4                     TMR3            equ	16292	;# 
  3941   003FA4                     TMR3L           equ	16292	;# 
  3942   003FA5                     TMR3H           equ	16293	;# 
  3943   003FA6                     T3CON           equ	16294	;# 
  3944   003FA6                     TMR3CON         equ	16294	;# 
  3945   003FA7                     T3GCON          equ	16295	;# 
  3946   003FA7                     TMR3GCON        equ	16295	;# 
  3947   003FA8                     T3GATE          equ	16296	;# 
  3948   003FA8                     TMR3GATE        equ	16296	;# 
  3949   003FA9                     T3CLK           equ	16297	;# 
  3950   003FA9                     TMR3CLK         equ	16297	;# 
  3951   003FA9                     PR3             equ	16297	;# 
  3952   003FAA                     T2TMR           equ	16298	;# 
  3953   003FAA                     TMR2            equ	16298	;# 
  3954   003FAB                     T2PR            equ	16299	;# 
  3955   003FAB                     PR2             equ	16299	;# 
  3956   003FAC                     T2CON           equ	16300	;# 
  3957   003FAD                     T2HLT           equ	16301	;# 
  3958   003FAE                     T2CLKCON        equ	16302	;# 
  3959   003FAE                     T2CLK           equ	16302	;# 
  3960   003FAF                     T2RST           equ	16303	;# 
  3961   003FB0                     TMR1            equ	16304	;# 
  3962   003FB0                     TMR1L           equ	16304	;# 
  3963   003FB1                     TMR1H           equ	16305	;# 
  3964   003FB2                     T1CON           equ	16306	;# 
  3965   003FB2                     TMR1CON         equ	16306	;# 
  3966   003FB3                     T1GCON          equ	16307	;# 
  3967   003FB3                     TMR1GCON        equ	16307	;# 
  3968   003FB4                     T1GATE          equ	16308	;# 
  3969   003FB4                     TMR1GATE        equ	16308	;# 
  3970   003FB5                     T1CLK           equ	16309	;# 
  3971   003FB5                     TMR1CLK         equ	16309	;# 
  3972   003FB5                     PR1             equ	16309	;# 
  3973   003FB6                     TMR0L           equ	16310	;# 
  3974   003FB6                     TMR0            equ	16310	;# 
  3975   003FB7                     TMR0H           equ	16311	;# 
  3976   003FB7                     PR0             equ	16311	;# 
  3977   003FB8                     T0CON0          equ	16312	;# 
  3978   003FB9                     T0CON1          equ	16313	;# 
  3979   003FBA                     LATA            equ	16314	;# 
  3980   003FBB                     LATB            equ	16315	;# 
  3981   003FBC                     LATC            equ	16316	;# 
  3982   003FBD                     LATD            equ	16317	;# 
  3983   003FBE                     LATE            equ	16318	;# 
  3984   003FBF                     LATF            equ	16319	;# 
  3985   003FC2                     TRISA           equ	16322	;# 
  3986   003FC3                     TRISB           equ	16323	;# 
  3987   003FC4                     TRISC           equ	16324	;# 
  3988   003FC5                     TRISD           equ	16325	;# 
  3989   003FC6                     TRISE           equ	16326	;# 
  3990   003FC7                     TRISF           equ	16327	;# 
  3991   003FCA                     PORTA           equ	16330	;# 
  3992   003FCB                     PORTB           equ	16331	;# 
  3993   003FCC                     PORTC           equ	16332	;# 
  3994   003FCD                     PORTD           equ	16333	;# 
  3995   003FCE                     PORTE           equ	16334	;# 
  3996   003FCF                     PORTF           equ	16335	;# 
  3997   003FD2                     INTCON0         equ	16338	;# 
  3998   003FD3                     INTCON1         equ	16339	;# 
  3999   003FD4                     IVTLOCK         equ	16340	;# 
  4000   003FD5                     IVTBASE         equ	16341	;# 
  4001   003FD5                     IVTBASEL        equ	16341	;# 
  4002   003FD6                     IVTBASEH        equ	16342	;# 
  4003   003FD7                     IVTBASEU        equ	16343	;# 
  4004   003FD8                     STATUS          equ	16344	;# 
  4005   003FD9                     FSR2            equ	16345	;# 
  4006   003FD9                     FSR2L           equ	16345	;# 
  4007   003FDA                     FSR2H           equ	16346	;# 
  4008   003FDB                     PLUSW2          equ	16347	;# 
  4009   003FDC                     PREINC2         equ	16348	;# 
  4010   003FDD                     POSTDEC2        equ	16349	;# 
  4011   003FDE                     POSTINC2        equ	16350	;# 
  4012   003FDF                     INDF2           equ	16351	;# 
  4013   003FE0                     BSR             equ	16352	;# 
  4014   003FE1                     FSR1            equ	16353	;# 
  4015   003FE1                     FSR1L           equ	16353	;# 
  4016   003FE2                     FSR1H           equ	16354	;# 
  4017   003FE3                     PLUSW1          equ	16355	;# 
  4018   003FE4                     PREINC1         equ	16356	;# 
  4019   003FE5                     POSTDEC1        equ	16357	;# 
  4020   003FE6                     POSTINC1        equ	16358	;# 
  4021   003FE7                     INDF1           equ	16359	;# 
  4022   003FE8                     WREG            equ	16360	;# 
  4023   003FE9                     FSR0            equ	16361	;# 
  4024   003FE9                     FSR0L           equ	16361	;# 
  4025   003FEA                     FSR0H           equ	16362	;# 
  4026   003FEB                     PLUSW0          equ	16363	;# 
  4027   003FEC                     PREINC0         equ	16364	;# 
  4028   003FED                     POSTDEC0        equ	16365	;# 
  4029   003FEE                     POSTINC0        equ	16366	;# 
  4030   003FEF                     INDF0           equ	16367	;# 
  4031   003FF0                     PCON0           equ	16368	;# 
  4032   003FF1                     PCON1           equ	16369	;# 
  4033   003FF3                     PROD            equ	16371	;# 
  4034   003FF3                     PRODL           equ	16371	;# 
  4035   003FF4                     PRODH           equ	16372	;# 
  4036   003FF5                     TABLAT          equ	16373	;# 
  4037   003FF6                     TBLPTR          equ	16374	;# 
  4038   003FF6                     TBLPTRL         equ	16374	;# 
  4039   003FF7                     TBLPTRH         equ	16375	;# 
  4040   003FF8                     TBLPTRU         equ	16376	;# 
  4041   003FF9                     PCLAT           equ	16377	;# 
  4042   003FF9                     PCL             equ	16377	;# 
  4043   003FFA                     PCLATH          equ	16378	;# 
  4044   003FFB                     PCLATU          equ	16379	;# 
  4045   003FFC                     STKPTR          equ	16380	;# 
  4046   003FFD                     TOS             equ	16381	;# 
  4047   003FFD                     TOSL            equ	16381	;# 
  4048   003FFE                     TOSH            equ	16382	;# 
  4049   003FFF                     TOSU            equ	16383	;# 
  4050   003880                     STATUS_CSHAD    equ	14464	;# 
  4051   003881                     WREG_CSHAD      equ	14465	;# 
  4052   003882                     BSR_CSHAD       equ	14466	;# 
  4053   003883                     SHADCON         equ	14467	;# 
  4054   003884                     STATUS_SHAD     equ	14468	;# 
  4055   003885                     WREG_SHAD       equ	14469	;# 
  4056   003886                     BSR_SHAD        equ	14470	;# 
  4057   003887                     PCLATH_SHAD     equ	14471	;# 
  4058   003888                     PCLATU_SHAD     equ	14472	;# 
  4059   003889                     FSR0SH          equ	14473	;# 
  4060   003889                     FSR0L_SHAD      equ	14473	;# 
  4061   00388A                     FSR0H_SHAD      equ	14474	;# 
  4062   00388B                     FSR1SH          equ	14475	;# 
  4063   00388B                     FSR1L_SHAD      equ	14475	;# 
  4064   00388C                     FSR1H_SHAD      equ	14476	;# 
  4065   00388D                     FSR2SH          equ	14477	;# 
  4066   00388D                     FSR2L_SHAD      equ	14477	;# 
  4067   00388E                     FSR2H_SHAD      equ	14478	;# 
  4068   00388F                     PRODSH          equ	14479	;# 
  4069   00388F                     PRODL_SHAD      equ	14479	;# 
  4070   003890                     PRODH_SHAD      equ	14480	;# 
  4071   00389D                     IVTADL          equ	14493	;# 
  4072   00389E                     IVTADH          equ	14494	;# 
  4073   00389F                     IVTADU          equ	14495	;# 
  4074   00395B                     WDTCON0         equ	14683	;# 
  4075   00395C                     WDTCON1         equ	14684	;# 
  4076   00395D                     WDTPSL          equ	14685	;# 
  4077   00395E                     WDTPSH          equ	14686	;# 
  4078   00395F                     WDTTMR          equ	14687	;# 
  4079   003960                     CRCDATA         equ	14688	;# 
  4080   003960                     CRCDATL         equ	14688	;# 
  4081   003961                     CRCDATH         equ	14689	;# 
  4082   003962                     CRCACC          equ	14690	;# 
  4083   003962                     CRCACCL         equ	14690	;# 
  4084   003963                     CRCACCH         equ	14691	;# 
  4085   003964                     CRCSHFT         equ	14692	;# 
  4086   003964                     CRCSHIFTL       equ	14692	;# 
  4087   003965                     CRCSHIFTH       equ	14693	;# 
  4088   003966                     CRCXOR          equ	14694	;# 
  4089   003966                     CRCXORL         equ	14694	;# 
  4090   003967                     CRCXORH         equ	14695	;# 
  4091   003968                     CRCCON0         equ	14696	;# 
  4092   003969                     CRCCON1         equ	14697	;# 
  4093   003976                     SCANLADR        equ	14710	;# 
  4094   003976                     SCANLADRL       equ	14710	;# 
  4095   003977                     SCANLADRH       equ	14711	;# 
  4096   003978                     SCANLADRU       equ	14712	;# 
  4097   003979                     SCANHADR        equ	14713	;# 
  4098   003979                     SCANHADRL       equ	14713	;# 
  4099   00397A                     SCANHADRH       equ	14714	;# 
  4100   00397B                     SCANHADRU       equ	14715	;# 
  4101   00397C                     SCANCON0        equ	14716	;# 
  4102   00397D                     SCANTRIG        equ	14717	;# 
  4103   003980                     IPR0            equ	14720	;# 
  4104   003981                     IPR1            equ	14721	;# 
  4105   003982                     IPR2            equ	14722	;# 
  4106   003983                     IPR3            equ	14723	;# 
  4107   003984                     IPR4            equ	14724	;# 
  4108   003985                     IPR5            equ	14725	;# 
  4109   003986                     IPR6            equ	14726	;# 
  4110   003987                     IPR7            equ	14727	;# 
  4111   003988                     IPR8            equ	14728	;# 
  4112   003989                     IPR9            equ	14729	;# 
  4113   00398A                     IPR10           equ	14730	;# 
  4114   003990                     PIE0            equ	14736	;# 
  4115   003991                     PIE1            equ	14737	;# 
  4116   003992                     PIE2            equ	14738	;# 
  4117   003993                     PIE3            equ	14739	;# 
  4118   003994                     PIE4            equ	14740	;# 
  4119   003995                     PIE5            equ	14741	;# 
  4120   003996                     PIE6            equ	14742	;# 
  4121   003997                     PIE7            equ	14743	;# 
  4122   003998                     PIE8            equ	14744	;# 
  4123   003999                     PIE9            equ	14745	;# 
  4124   00399A                     PIE10           equ	14746	;# 
  4125   0039A0                     PIR0            equ	14752	;# 
  4126   0039A1                     PIR1            equ	14753	;# 
  4127   0039A2                     PIR2            equ	14754	;# 
  4128   0039A3                     PIR3            equ	14755	;# 
  4129   0039A4                     PIR4            equ	14756	;# 
  4130   0039A5                     PIR5            equ	14757	;# 
  4131   0039A6                     PIR6            equ	14758	;# 
  4132   0039A7                     PIR7            equ	14759	;# 
  4133   0039A8                     PIR8            equ	14760	;# 
  4134   0039A9                     PIR9            equ	14761	;# 
  4135   0039AA                     PIR10           equ	14762	;# 
  4136   0039C0                     PMD0            equ	14784	;# 
  4137   0039C1                     PMD1            equ	14785	;# 
  4138   0039C2                     PMD2            equ	14786	;# 
  4139   0039C3                     PMD3            equ	14787	;# 
  4140   0039C4                     PMD4            equ	14788	;# 
  4141   0039C5                     PMD5            equ	14789	;# 
  4142   0039C6                     PMD6            equ	14790	;# 
  4143   0039C7                     PMD7            equ	14791	;# 
  4144   0039D0                     BORCON          equ	14800	;# 
  4145   0039D1                     VREGCON         equ	14801	;# 
  4146   0039D8                     CPUDOZE         equ	14808	;# 
  4147   0039D9                     OSCCON1         equ	14809	;# 
  4148   0039DA                     OSCCON2         equ	14810	;# 
  4149   0039DB                     OSCCON3         equ	14811	;# 
  4150   0039DC                     OSCSTAT         equ	14812	;# 
  4151   0039DC                     OSCSTAT1        equ	14812	;# 
  4152   0039DD                     OSCEN           equ	14813	;# 
  4153   0039DE                     OSCTUNE         equ	14814	;# 
  4154   0039DF                     OSCFRQ          equ	14815	;# 
  4155   0039E0                     NVMADRL         equ	14816	;# 
  4156   0039E1                     NVMADRH         equ	14817	;# 
  4157   0039E3                     NVMDAT          equ	14819	;# 
  4158   0039E5                     NVMCON1         equ	14821	;# 
  4159   0039E6                     NVMCON2         equ	14822	;# 
  4160   0039EF                     PRLOCK          equ	14831	;# 
  4161   0039F1                     ISRPR           equ	14833	;# 
  4162   0039F2                     MAINPR          equ	14834	;# 
  4163   0039F3                     DMA1PR          equ	14835	;# 
  4164   0039F4                     DMA2PR          equ	14836	;# 
  4165   0039F7                     SCANPR          equ	14839	;# 
  4166   003A00                     RA0PPS          equ	14848	;# 
  4167   003A01                     RA1PPS          equ	14849	;# 
  4168   003A02                     RA2PPS          equ	14850	;# 
  4169   003A03                     RA3PPS          equ	14851	;# 
  4170   003A04                     RA4PPS          equ	14852	;# 
  4171   003A05                     RA5PPS          equ	14853	;# 
  4172   003A06                     RA6PPS          equ	14854	;# 
  4173   003A07                     RA7PPS          equ	14855	;# 
  4174   003A08                     RB0PPS          equ	14856	;# 
  4175   003A09                     RB1PPS          equ	14857	;# 
  4176   003A0A                     RB2PPS          equ	14858	;# 
  4177   003A0B                     RB3PPS          equ	14859	;# 
  4178   003A0C                     RB4PPS          equ	14860	;# 
  4179   003A0D                     RB5PPS          equ	14861	;# 
  4180   003A0E                     RB6PPS          equ	14862	;# 
  4181   003A0F                     RB7PPS          equ	14863	;# 
  4182   003A10                     RC0PPS          equ	14864	;# 
  4183   003A11                     RC1PPS          equ	14865	;# 
  4184   003A12                     RC2PPS          equ	14866	;# 
  4185   003A13                     RC3PPS          equ	14867	;# 
  4186   003A14                     RC4PPS          equ	14868	;# 
  4187   003A15                     RC5PPS          equ	14869	;# 
  4188   003A16                     RC6PPS          equ	14870	;# 
  4189   003A17                     RC7PPS          equ	14871	;# 
  4190   003A18                     RD0PPS          equ	14872	;# 
  4191   003A19                     RD1PPS          equ	14873	;# 
  4192   003A1A                     RD2PPS          equ	14874	;# 
  4193   003A1B                     RD3PPS          equ	14875	;# 
  4194   003A1C                     RD4PPS          equ	14876	;# 
  4195   003A1D                     RD5PPS          equ	14877	;# 
  4196   003A1E                     RD6PPS          equ	14878	;# 
  4197   003A1F                     RD7PPS          equ	14879	;# 
  4198   003A20                     RE0PPS          equ	14880	;# 
  4199   003A21                     RE1PPS          equ	14881	;# 
  4200   003A22                     RE2PPS          equ	14882	;# 
  4201   003A28                     RF0PPS          equ	14888	;# 
  4202   003A29                     RF1PPS          equ	14889	;# 
  4203   003A2A                     RF2PPS          equ	14890	;# 
  4204   003A2B                     RF3PPS          equ	14891	;# 
  4205   003A2C                     RF4PPS          equ	14892	;# 
  4206   003A2D                     RF5PPS          equ	14893	;# 
  4207   003A2E                     RF6PPS          equ	14894	;# 
  4208   003A2F                     RF7PPS          equ	14895	;# 
  4209   003A40                     ANSELA          equ	14912	;# 
  4210   003A41                     WPUA            equ	14913	;# 
  4211   003A42                     ODCONA          equ	14914	;# 
  4212   003A43                     SLRCONA         equ	14915	;# 
  4213   003A44                     INLVLA          equ	14916	;# 
  4214   003A45                     IOCAP           equ	14917	;# 
  4215   003A46                     IOCAN           equ	14918	;# 
  4216   003A47                     IOCAF           equ	14919	;# 
  4217   003A50                     ANSELB          equ	14928	;# 
  4218   003A51                     WPUB            equ	14929	;# 
  4219   003A52                     ODCONB          equ	14930	;# 
  4220   003A53                     SLRCONB         equ	14931	;# 
  4221   003A54                     INLVLB          equ	14932	;# 
  4222   003A55                     IOCBP           equ	14933	;# 
  4223   003A56                     IOCBN           equ	14934	;# 
  4224   003A57                     IOCBF           equ	14935	;# 
  4225   003A5A                     RB1I2C          equ	14938	;# 
  4226   003A5B                     RB2I2C          equ	14939	;# 
  4227   003A60                     ANSELC          equ	14944	;# 
  4228   003A61                     WPUC            equ	14945	;# 
  4229   003A62                     ODCONC          equ	14946	;# 
  4230   003A63                     SLRCONC         equ	14947	;# 
  4231   003A64                     INLVLC          equ	14948	;# 
  4232   003A65                     IOCCP           equ	14949	;# 
  4233   003A66                     IOCCN           equ	14950	;# 
  4234   003A67                     IOCCF           equ	14951	;# 
  4235   003A6A                     RC3I2C          equ	14954	;# 
  4236   003A6B                     RC4I2C          equ	14955	;# 
  4237   003A70                     ANSELD          equ	14960	;# 
  4238   003A71                     WPUD            equ	14961	;# 
  4239   003A72                     ODCOND          equ	14962	;# 
  4240   003A73                     SLRCOND         equ	14963	;# 
  4241   003A74                     INLVLD          equ	14964	;# 
  4242   003A7A                     RD0I2C          equ	14970	;# 
  4243   003A7B                     RD1I2C          equ	14971	;# 
  4244   003A80                     ANSELE          equ	14976	;# 
  4245   003A81                     WPUE            equ	14977	;# 
  4246   003A82                     ODCONE          equ	14978	;# 
  4247   003A83                     SLRCONE         equ	14979	;# 
  4248   003A84                     INLVLE          equ	14980	;# 
  4249   003A85                     IOCEP           equ	14981	;# 
  4250   003A86                     IOCEN           equ	14982	;# 
  4251   003A87                     IOCEF           equ	14983	;# 
  4252   003A90                     ANSELF          equ	14992	;# 
  4253   003A91                     WPUF            equ	14993	;# 
  4254   003A92                     ODCONF          equ	14994	;# 
  4255   003A93                     SLRCONF         equ	14995	;# 
  4256   003A94                     INLVLF          equ	14996	;# 
  4257   003ABF                     PPSLOCK         equ	15039	;# 
  4258   003AC0                     INT0PPS         equ	15040	;# 
  4259   003AC1                     INT1PPS         equ	15041	;# 
  4260   003AC2                     INT2PPS         equ	15042	;# 
  4261   003AC3                     T0CKIPPS        equ	15043	;# 
  4262   003AC4                     T1CKIPPS        equ	15044	;# 
  4263   003AC5                     T1GPPS          equ	15045	;# 
  4264   003AC6                     T3CKIPPS        equ	15046	;# 
  4265   003AC7                     T3GPPS          equ	15047	;# 
  4266   003AC8                     T5CKIPPS        equ	15048	;# 
  4267   003AC9                     T5GPPS          equ	15049	;# 
  4268   003ACA                     T2INPPS         equ	15050	;# 
  4269   003ACB                     T4INPPS         equ	15051	;# 
  4270   003ACC                     T6INPPS         equ	15052	;# 
  4271   003ACD                     CCP1PPS         equ	15053	;# 
  4272   003ACE                     CCP2PPS         equ	15054	;# 
  4273   003ACF                     CCP3PPS         equ	15055	;# 
  4274   003AD0                     CCP4PPS         equ	15056	;# 
  4275   003AD1                     SMT1WINPPS      equ	15057	;# 
  4276   003AD2                     SMT1SIGPPS      equ	15058	;# 
  4277   003AD3                     CWG1INPPS       equ	15059	;# 
  4278   003AD4                     CWG2INPPS       equ	15060	;# 
  4279   003AD5                     CWG3INPPS       equ	15061	;# 
  4280   003AD6                     MD1CARLPPS      equ	15062	;# 
  4281   003AD7                     MD1CARHPPS      equ	15063	;# 
  4282   003AD8                     MD1SRCPPS       equ	15064	;# 
  4283   003AD9                     CLCIN0PPS       equ	15065	;# 
  4284   003ADA                     CLCIN1PPS       equ	15066	;# 
  4285   003ADB                     CLCIN2PPS       equ	15067	;# 
  4286   003ADC                     CLCIN3PPS       equ	15068	;# 
  4287   003ADD                     ADACTPPS        equ	15069	;# 
  4288   003ADE                     SPI1SCKPPS      equ	15070	;# 
  4289   003ADF                     SPI1SDIPPS      equ	15071	;# 
  4290   003AE0                     SPI1SSPPS       equ	15072	;# 
  4291   003AE1                     I2C1SCLPPS      equ	15073	;# 
  4292   003AE2                     I2C1SDAPPS      equ	15074	;# 
  4293   003AE3                     I2C2SCLPPS      equ	15075	;# 
  4294   003AE4                     I2C2SDAPPS      equ	15076	;# 
  4295   003AE5                     U1RXPPS         equ	15077	;# 
  4296   003AE6                     U1CTSPPS        equ	15078	;# 
  4297   003AE8                     U2RXPPS         equ	15080	;# 
  4298   003AE9                     U2CTSPPS        equ	15081	;# 
  4299   003BC9                     DMA2BUF         equ	15305	;# 
  4300   003BCA                     DMA2DCNT        equ	15306	;# 
  4301   003BCA                     DMA2DCNTL       equ	15306	;# 
  4302   003BCB                     DMA2DCNTH       equ	15307	;# 
  4303   003BCC                     DMA2DPTR        equ	15308	;# 
  4304   003BCC                     DMA2DPTRL       equ	15308	;# 
  4305   003BCD                     DMA2DPTRH       equ	15309	;# 
  4306   003BCE                     DMA2DSZ         equ	15310	;# 
  4307   003BCE                     DMA2DSZL        equ	15310	;# 
  4308   003BCF                     DMA2DSZH        equ	15311	;# 
  4309   003BD0                     DMA2DSA         equ	15312	;# 
  4310   003BD0                     DMA2DSAL        equ	15312	;# 
  4311   003BD1                     DMA2DSAH        equ	15313	;# 
  4312   003BD2                     DMA2SCNT        equ	15314	;# 
  4313   003BD2                     DMA2SCNTL       equ	15314	;# 
  4314   003BD3                     DMA2SCNTH       equ	15315	;# 
  4315   003BD4                     DMA2SPTR        equ	15316	;# 
  4316   003BD4                     DMA2SPTRL       equ	15316	;# 
  4317   003BD5                     DMA2SPTRH       equ	15317	;# 
  4318   003BD6                     DMA2SPTRU       equ	15318	;# 
  4319   003BD7                     DMA2SSZ         equ	15319	;# 
  4320   003BD7                     DMA2SSZL        equ	15319	;# 
  4321   003BD8                     DMA2SSZH        equ	15320	;# 
  4322   003BD9                     DMA2SSA         equ	15321	;# 
  4323   003BD9                     DMA2SSAL        equ	15321	;# 
  4324   003BDA                     DMA2SSAH        equ	15322	;# 
  4325   003BDB                     DMA2SSAU        equ	15323	;# 
  4326   003BDC                     DMA2CON0        equ	15324	;# 
  4327   003BDD                     DMA2CON1        equ	15325	;# 
  4328   003BDE                     DMA2AIRQ        equ	15326	;# 
  4329   003BDF                     DMA2SIRQ        equ	15327	;# 
  4330   003BE9                     DMA1BUF         equ	15337	;# 
  4331   003BEA                     DMA1DCNT        equ	15338	;# 
  4332   003BEA                     DMA1DCNTL       equ	15338	;# 
  4333   003BEB                     DMA1DCNTH       equ	15339	;# 
  4334   003BEC                     DMA1DPTR        equ	15340	;# 
  4335   003BEC                     DMA1DPTRL       equ	15340	;# 
  4336   003BED                     DMA1DPTRH       equ	15341	;# 
  4337   003BEE                     DMA1DSZ         equ	15342	;# 
  4338   003BEE                     DMA1DSZL        equ	15342	;# 
  4339   003BEF                     DMA1DSZH        equ	15343	;# 
  4340   003BF0                     DMA1DSA         equ	15344	;# 
  4341   003BF0                     DMA1DSAL        equ	15344	;# 
  4342   003BF1                     DMA1DSAH        equ	15345	;# 
  4343   003BF2                     DMA1SCNT        equ	15346	;# 
  4344   003BF2                     DMA1SCNTL       equ	15346	;# 
  4345   003BF3                     DMA1SCNTH       equ	15347	;# 
  4346   003BF4                     DMA1SPTR        equ	15348	;# 
  4347   003BF4                     DMA1SPTRL       equ	15348	;# 
  4348   003BF5                     DMA1SPTRH       equ	15349	;# 
  4349   003BF6                     DMA1SPTRU       equ	15350	;# 
  4350   003BF7                     DMA1SSZ         equ	15351	;# 
  4351   003BF7                     DMA1SSZL        equ	15351	;# 
  4352   003BF8                     DMA1SSZH        equ	15352	;# 
  4353   003BF9                     DMA1SSA         equ	15353	;# 
  4354   003BF9                     DMA1SSAL        equ	15353	;# 
  4355   003BFA                     DMA1SSAH        equ	15354	;# 
  4356   003BFB                     DMA1SSAU        equ	15355	;# 
  4357   003BFC                     DMA1CON0        equ	15356	;# 
  4358   003BFD                     DMA1CON1        equ	15357	;# 
  4359   003BFE                     DMA1AIRQ        equ	15358	;# 
  4360   003BFF                     DMA1SIRQ        equ	15359	;# 
  4361   003C56                     CLC4CON         equ	15446	;# 
  4362   003C57                     CLC4POL         equ	15447	;# 
  4363   003C58                     CLC4SEL0        equ	15448	;# 
  4364   003C59                     CLC4SEL1        equ	15449	;# 
  4365   003C5A                     CLC4SEL2        equ	15450	;# 
  4366   003C5B                     CLC4SEL3        equ	15451	;# 
  4367   003C5C                     CLC4GLS0        equ	15452	;# 
  4368   003C5D                     CLC4GLS1        equ	15453	;# 
  4369   003C5E                     CLC4GLS2        equ	15454	;# 
  4370   003C5F                     CLC4GLS3        equ	15455	;# 
  4371   003C60                     CLC3CON         equ	15456	;# 
  4372   003C61                     CLC3POL         equ	15457	;# 
  4373   003C62                     CLC3SEL0        equ	15458	;# 
  4374   003C63                     CLC3SEL1        equ	15459	;# 
  4375   003C64                     CLC3SEL2        equ	15460	;# 
  4376   003C65                     CLC3SEL3        equ	15461	;# 
  4377   003C66                     CLC3GLS0        equ	15462	;# 
  4378   003C67                     CLC3GLS1        equ	15463	;# 
  4379   003C68                     CLC3GLS2        equ	15464	;# 
  4380   003C69                     CLC3GLS3        equ	15465	;# 
  4381   003C6A                     CLC2CON         equ	15466	;# 
  4382   003C6B                     CLC2POL         equ	15467	;# 
  4383   003C6C                     CLC2SEL0        equ	15468	;# 
  4384   003C6D                     CLC2SEL1        equ	15469	;# 
  4385   003C6E                     CLC2SEL2        equ	15470	;# 
  4386   003C6F                     CLC2SEL3        equ	15471	;# 
  4387   003C70                     CLC2GLS0        equ	15472	;# 
  4388   003C71                     CLC2GLS1        equ	15473	;# 
  4389   003C72                     CLC2GLS2        equ	15474	;# 
  4390   003C73                     CLC2GLS3        equ	15475	;# 
  4391   003C74                     CLC1CON         equ	15476	;# 
  4392   003C75                     CLC1POL         equ	15477	;# 
  4393   003C76                     CLC1SEL0        equ	15478	;# 
  4394   003C77                     CLC1SEL1        equ	15479	;# 
  4395   003C78                     CLC1SEL2        equ	15480	;# 
  4396   003C79                     CLC1SEL3        equ	15481	;# 
  4397   003C7A                     CLC1GLS0        equ	15482	;# 
  4398   003C7B                     CLC1GLS1        equ	15483	;# 
  4399   003C7C                     CLC1GLS2        equ	15484	;# 
  4400   003C7D                     CLC1GLS3        equ	15485	;# 
  4401   003C7E                     CLCDATA0        equ	15486	;# 
  4402   003CE5                     CLKRCON         equ	15589	;# 
  4403   003CE6                     CLKRCLK         equ	15590	;# 
  4404   003CFA                     MD1CON0         equ	15610	;# 
  4405   003CFB                     MD1CON1         equ	15611	;# 
  4406   003CFC                     MD1SRC          equ	15612	;# 
  4407   003CFD                     MD1CARL         equ	15613	;# 
  4408   003CFE                     MD1CARH         equ	15614	;# 
  4409   003D10                     SPI1RXB         equ	15632	;# 
  4410   003D11                     SPI1TXB         equ	15633	;# 
  4411   003D12                     SPI1TCNT        equ	15634	;# 
  4412   003D12                     SPI1TCNTL       equ	15634	;# 
  4413   003D13                     SPI1TCNTH       equ	15635	;# 
  4414   003D14                     SPI1CON0        equ	15636	;# 
  4415   003D15                     SPI1CON1        equ	15637	;# 
  4416   003D16                     SPI1CON2        equ	15638	;# 
  4417   003D17                     SPI1STATUS      equ	15639	;# 
  4418   003D18                     SPI1TWIDTH      equ	15640	;# 
  4419   003D19                     SPI1BAUD        equ	15641	;# 
  4420   003D1A                     SPI1INTF        equ	15642	;# 
  4421   003D1B                     SPI1INTE        equ	15643	;# 
  4422   003D1C                     SPI1CLK         equ	15644	;# 
  4423   003D54                     I2C2RXB         equ	15700	;# 
  4424   003D55                     I2C2TXB         equ	15701	;# 
  4425   003D56                     I2C2CNT         equ	15702	;# 
  4426   003D57                     I2C2ADB0        equ	15703	;# 
  4427   003D58                     I2C2ADB1        equ	15704	;# 
  4428   003D59                     I2C2ADR0        equ	15705	;# 
  4429   003D5A                     I2C2ADR1        equ	15706	;# 
  4430   003D5B                     I2C2ADR2        equ	15707	;# 
  4431   003D5C                     I2C2ADR3        equ	15708	;# 
  4432   003D5D                     I2C2CON0        equ	15709	;# 
  4433   003D5E                     I2C2CON1        equ	15710	;# 
  4434   003D5F                     I2C2CON2        equ	15711	;# 
  4435   003D60                     I2C2ERR         equ	15712	;# 
  4436   003D61                     I2C2STAT0       equ	15713	;# 
  4437   003D62                     I2C2STAT1       equ	15714	;# 
  4438   003D63                     I2C2PIR         equ	15715	;# 
  4439   003D64                     I2C2PIE         equ	15716	;# 
  4440   003D65                     I2C2CLK         equ	15717	;# 
  4441   003D66                     I2C2BTO         equ	15718	;# 
  4442   003D6A                     I2C1RXB         equ	15722	;# 
  4443   003D6B                     I2C1TXB         equ	15723	;# 
  4444   003D6C                     I2C1CNT         equ	15724	;# 
  4445   003D6D                     I2C1ADB0        equ	15725	;# 
  4446   003D6E                     I2C1ADB1        equ	15726	;# 
  4447   003D6F                     I2C1ADR0        equ	15727	;# 
  4448   003D70                     I2C1ADR1        equ	15728	;# 
  4449   003D71                     I2C1ADR2        equ	15729	;# 
  4450   003D72                     I2C1ADR3        equ	15730	;# 
  4451   003D73                     I2C1CON0        equ	15731	;# 
  4452   003D74                     I2C1CON1        equ	15732	;# 
  4453   003D75                     I2C1CON2        equ	15733	;# 
  4454   003D76                     I2C1ERR         equ	15734	;# 
  4455   003D77                     I2C1STAT0       equ	15735	;# 
  4456   003D78                     I2C1STAT1       equ	15736	;# 
  4457   003D79                     I2C1PIR         equ	15737	;# 
  4458   003D7A                     I2C1PIE         equ	15738	;# 
  4459   003D7B                     I2C1CLK         equ	15739	;# 
  4460   003D7C                     I2C1BTO         equ	15740	;# 
  4461   003DD0                     U2RXB           equ	15824	;# 
  4462   003DD0                     U2RXBL          equ	15824	;# 
  4463   003DD2                     U2TXB           equ	15826	;# 
  4464   003DD2                     U2TXBL          equ	15826	;# 
  4465   003DD4                     U2P1            equ	15828	;# 
  4466   003DD4                     U2P1L           equ	15828	;# 
  4467   003DD6                     U2P2            equ	15830	;# 
  4468   003DD6                     U2P2L           equ	15830	;# 
  4469   003DD8                     U2P3            equ	15832	;# 
  4470   003DD8                     U2P3L           equ	15832	;# 
  4471   003DDA                     U2CON0          equ	15834	;# 
  4472   003DDB                     U2CON1          equ	15835	;# 
  4473   003DDC                     U2CON2          equ	15836	;# 
  4474   003DDD                     U2BRG           equ	15837	;# 
  4475   003DDD                     U2BRGL          equ	15837	;# 
  4476   003DDE                     U2BRGH          equ	15838	;# 
  4477   003DDF                     U2FIFO          equ	15839	;# 
  4478   003DE0                     U2UIR           equ	15840	;# 
  4479   003DE1                     U2ERRIR         equ	15841	;# 
  4480   003DE2                     U2ERRIE         equ	15842	;# 
  4481   003DE8                     U1RXB           equ	15848	;# 
  4482   003DE8                     U1RXBL          equ	15848	;# 
  4483   003DE9                     U1RXCHK         equ	15849	;# 
  4484   003DEA                     U1TXB           equ	15850	;# 
  4485   003DEA                     U1TXBL          equ	15850	;# 
  4486   003DEB                     U1TXCHK         equ	15851	;# 
  4487   003DEC                     U1P1            equ	15852	;# 
  4488   003DEC                     U1P1L           equ	15852	;# 
  4489   003DED                     U1P1H           equ	15853	;# 
  4490   003DEE                     U1P2            equ	15854	;# 
  4491   003DEE                     U1P2L           equ	15854	;# 
  4492   003DEF                     U1P2H           equ	15855	;# 
  4493   003DF0                     U1P3            equ	15856	;# 
  4494   003DF0                     U1P3L           equ	15856	;# 
  4495   003DF1                     U1P3H           equ	15857	;# 
  4496   003DF2                     U1CON0          equ	15858	;# 
  4497   003DF3                     U1CON1          equ	15859	;# 
  4498   003DF4                     U1CON2          equ	15860	;# 
  4499   003DF5                     U1BRG           equ	15861	;# 
  4500   003DF5                     U1BRGL          equ	15861	;# 
  4501   003DF6                     U1BRGH          equ	15862	;# 
  4502   003DF7                     U1FIFO          equ	15863	;# 
  4503   003DF8                     U1UIR           equ	15864	;# 
  4504   003DF9                     U1ERRIR         equ	15865	;# 
  4505   003DFA                     U1ERRIE         equ	15866	;# 
  4506   003E9C                     DAC1CON1        equ	16028	;# 
  4507   003E9E                     DAC1CON0        equ	16030	;# 
  4508   003EB8                     CM2CON0         equ	16056	;# 
  4509   003EB9                     CM2CON1         equ	16057	;# 
  4510   003EBA                     CM2NCH          equ	16058	;# 
  4511   003EBB                     CM2PCH          equ	16059	;# 
  4512   003EBC                     CM1CON0         equ	16060	;# 
  4513   003EBD                     CM1CON1         equ	16061	;# 
  4514   003EBE                     CM1NCH          equ	16062	;# 
  4515   003EBF                     CM1PCH          equ	16063	;# 
  4516   003EC0                     CMOUT           equ	16064	;# 
  4517   003EC1                     FVRCON          equ	16065	;# 
  4518   003EC3                     ZCDCON          equ	16067	;# 
  4519   003EC9                     HLVDCON0        equ	16073	;# 
  4520   003ECA                     HLVDCON1        equ	16074	;# 
  4521   003ED7                     ADCP            equ	16087	;# 
  4522   003EDE                     ADLTH           equ	16094	;# 
  4523   003EDE                     ADLTHL          equ	16094	;# 
  4524   003EDF                     ADLTHH          equ	16095	;# 
  4525   003EE0                     ADUTH           equ	16096	;# 
  4526   003EE0                     ADUTHL          equ	16096	;# 
  4527   003EE1                     ADUTHH          equ	16097	;# 
  4528   003EE2                     ADERR           equ	16098	;# 
  4529   003EE2                     ADERRL          equ	16098	;# 
  4530   003EE3                     ADERRH          equ	16099	;# 
  4531   003EE4                     ADSTPT          equ	16100	;# 
  4532   003EE4                     ADSTPTL         equ	16100	;# 
  4533   003EE5                     ADSTPTH         equ	16101	;# 
  4534   003EE6                     ADFLTR          equ	16102	;# 
  4535   003EE6                     ADFLTRL         equ	16102	;# 
  4536   003EE7                     ADFLTRH         equ	16103	;# 
  4537   003EE8                     ADACC           equ	16104	;# 
  4538   003EE8                     ADACCL          equ	16104	;# 
  4539   003EE9                     ADACCH          equ	16105	;# 
  4540   003EEA                     ADACCU          equ	16106	;# 
  4541   003EEB                     ADCNT           equ	16107	;# 
  4542   003EEC                     ADRPT           equ	16108	;# 
  4543   003EED                     ADPREV          equ	16109	;# 
  4544   003EED                     ADPREVL         equ	16109	;# 
  4545   003EEE                     ADPREVH         equ	16110	;# 
  4546   003EEF                     ADRES           equ	16111	;# 
  4547   003EEF                     ADRESL          equ	16111	;# 
  4548   003EF0                     ADRESH          equ	16112	;# 
  4549   003EF1                     ADPCH           equ	16113	;# 
  4550   003EF3                     ADACQ           equ	16115	;# 
  4551   003EF3                     ADACQL          equ	16115	;# 
  4552   003EF4                     ADACQH          equ	16116	;# 
  4553   003EF5                     ADCAP           equ	16117	;# 
  4554   003EF6                     ADPRE           equ	16118	;# 
  4555   003EF6                     ADPREL          equ	16118	;# 
  4556   003EF7                     ADPREH          equ	16119	;# 
  4557   003EF8                     ADCON0          equ	16120	;# 
  4558   003EF9                     ADCON1          equ	16121	;# 
  4559   003EFA                     ADCON2          equ	16122	;# 
  4560   003EFB                     ADCON3          equ	16123	;# 
  4561   003EFC                     ADSTAT          equ	16124	;# 
  4562   003EFD                     ADREF           equ	16125	;# 
  4563   003EFE                     ADACT           equ	16126	;# 
  4564   003EFF                     ADCLK           equ	16127	;# 
  4565   003F12                     SMT1TMR         equ	16146	;# 
  4566   003F12                     SMT1TMRL        equ	16146	;# 
  4567   003F13                     SMT1TMRH        equ	16147	;# 
  4568   003F14                     SMT1TMRU        equ	16148	;# 
  4569   003F15                     SMT1CPR         equ	16149	;# 
  4570   003F15                     SMT1CPRL        equ	16149	;# 
  4571   003F16                     SMT1CPRH        equ	16150	;# 
  4572   003F17                     SMT1CPRU        equ	16151	;# 
  4573   003F18                     SMT1CPW         equ	16152	;# 
  4574   003F18                     SMT1CPWL        equ	16152	;# 
  4575   003F19                     SMT1CPWH        equ	16153	;# 
  4576   003F1A                     SMT1CPWU        equ	16154	;# 
  4577   003F1B                     SMT1PR          equ	16155	;# 
  4578   003F1B                     SMT1PRL         equ	16155	;# 
  4579   003F1C                     SMT1PRH         equ	16156	;# 
  4580   003F1D                     SMT1PRU         equ	16157	;# 
  4581   003F1E                     SMT1CON0        equ	16158	;# 
  4582   003F1F                     SMT1CON1        equ	16159	;# 
  4583   003F20                     SMT1STAT        equ	16160	;# 
  4584   003F21                     SMT1CLK         equ	16161	;# 
  4585   003F22                     SMT1SIG         equ	16162	;# 
  4586   003F23                     SMT1WIN         equ	16163	;# 
  4587   003F38                     NCO1ACC         equ	16184	;# 
  4588   003F38                     NCO1ACCL        equ	16184	;# 
  4589   003F39                     NCO1ACCH        equ	16185	;# 
  4590   003F3A                     NCO1ACCU        equ	16186	;# 
  4591   003F3B                     NCO1INC         equ	16187	;# 
  4592   003F3B                     NCO1INCL        equ	16187	;# 
  4593   003F3C                     NCO1INCH        equ	16188	;# 
  4594   003F3D                     NCO1INCU        equ	16189	;# 
  4595   003F3E                     NCO1CON         equ	16190	;# 
  4596   003F3F                     NCO1CLK         equ	16191	;# 
  4597   003F40                     CWG3CLK         equ	16192	;# 
  4598   003F40                     CWG3CLKCON      equ	16192	;# 
  4599   003F41                     CWG3ISM         equ	16193	;# 
  4600   003F41                     CWG3DAT         equ	16193	;# 
  4601   003F42                     CWG3DBR         equ	16194	;# 
  4602   003F43                     CWG3DBF         equ	16195	;# 
  4603   003F44                     CWG3CON0        equ	16196	;# 
  4604   003F45                     CWG3CON1        equ	16197	;# 
  4605   003F46                     CWG3AS0         equ	16198	;# 
  4606   003F47                     CWG3AS1         equ	16199	;# 
  4607   003F48                     CWG3STR         equ	16200	;# 
  4608   003F49                     CWG2CLK         equ	16201	;# 
  4609   003F49                     CWG2CLKCON      equ	16201	;# 
  4610   003F4A                     CWG2ISM         equ	16202	;# 
  4611   003F4A                     CWG2DAT         equ	16202	;# 
  4612   003F4B                     CWG2DBR         equ	16203	;# 
  4613   003F4C                     CWG2DBF         equ	16204	;# 
  4614   003F4D                     CWG2CON0        equ	16205	;# 
  4615   003F4E                     CWG2CON1        equ	16206	;# 
  4616   003F4F                     CWG2AS0         equ	16207	;# 
  4617   003F50                     CWG2AS1         equ	16208	;# 
  4618   003F51                     CWG2STR         equ	16209	;# 
  4619   003F52                     CWG1CLK         equ	16210	;# 
  4620   003F52                     CWG1CLKCON      equ	16210	;# 
  4621   003F53                     CWG1ISM         equ	16211	;# 
  4622   003F53                     CWG1DAT         equ	16211	;# 
  4623   003F54                     CWG1DBR         equ	16212	;# 
  4624   003F55                     CWG1DBF         equ	16213	;# 
  4625   003F56                     CWG1CON0        equ	16214	;# 
  4626   003F57                     CWG1CON1        equ	16215	;# 
  4627   003F58                     CWG1AS0         equ	16216	;# 
  4628   003F59                     CWG1AS1         equ	16217	;# 
  4629   003F5A                     CWG1STR         equ	16218	;# 
  4630   003F5E                     CCPTMRS0        equ	16222	;# 
  4631   003F5F                     CCPTMRS1        equ	16223	;# 
  4632   003F60                     PWM8DC          equ	16224	;# 
  4633   003F60                     PWM8DCL         equ	16224	;# 
  4634   003F61                     PWM8DCH         equ	16225	;# 
  4635   003F62                     PWM8CON         equ	16226	;# 
  4636   003F64                     PWM7DC          equ	16228	;# 
  4637   003F64                     PWM7DCL         equ	16228	;# 
  4638   003F65                     PWM7DCH         equ	16229	;# 
  4639   003F66                     PWM7CON         equ	16230	;# 
  4640   003F68                     PWM6DC          equ	16232	;# 
  4641   003F68                     PWM6DCL         equ	16232	;# 
  4642   003F69                     PWM6DCH         equ	16233	;# 
  4643   003F6A                     PWM6CON         equ	16234	;# 
  4644   003F6C                     PWM5DC          equ	16236	;# 
  4645   003F6C                     PWM5DCL         equ	16236	;# 
  4646   003F6D                     PWM5DCH         equ	16237	;# 
  4647   003F6E                     PWM5CON         equ	16238	;# 
  4648   003F70                     CCPR4           equ	16240	;# 
  4649   003F70                     CCPR4L          equ	16240	;# 
  4650   003F71                     CCPR4H          equ	16241	;# 
  4651   003F72                     CCP4CON         equ	16242	;# 
  4652   003F73                     CCP4CAP         equ	16243	;# 
  4653   003F74                     CCPR3           equ	16244	;# 
  4654   003F74                     CCPR3L          equ	16244	;# 
  4655   003F75                     CCPR3H          equ	16245	;# 
  4656   003F76                     CCP3CON         equ	16246	;# 
  4657   003F77                     CCP3CAP         equ	16247	;# 
  4658   003F78                     CCPR2           equ	16248	;# 
  4659   003F78                     CCPR2L          equ	16248	;# 
  4660   003F79                     CCPR2H          equ	16249	;# 
  4661   003F7A                     CCP2CON         equ	16250	;# 
  4662   003F7B                     CCP2CAP         equ	16251	;# 
  4663   003F7C                     CCPR1           equ	16252	;# 
  4664   003F7C                     CCPR1L          equ	16252	;# 
  4665   003F7D                     CCPR1H          equ	16253	;# 
  4666   003F7E                     CCP1CON         equ	16254	;# 
  4667   003F7F                     CCP1CAP         equ	16255	;# 
  4668   003F92                     T6TMR           equ	16274	;# 
  4669   003F92                     TMR6            equ	16274	;# 
  4670   003F93                     T6PR            equ	16275	;# 
  4671   003F93                     PR6             equ	16275	;# 
  4672   003F94                     T6CON           equ	16276	;# 
  4673   003F95                     T6HLT           equ	16277	;# 
  4674   003F96                     T6CLKCON        equ	16278	;# 
  4675   003F96                     T6CLK           equ	16278	;# 
  4676   003F97                     T6RST           equ	16279	;# 
  4677   003F98                     TMR5            equ	16280	;# 
  4678   003F98                     TMR5L           equ	16280	;# 
  4679   003F99                     TMR5H           equ	16281	;# 
  4680   003F9A                     T5CON           equ	16282	;# 
  4681   003F9A                     TMR5CON         equ	16282	;# 
  4682   003F9B                     T5GCON          equ	16283	;# 
  4683   003F9B                     TMR5GCON        equ	16283	;# 
  4684   003F9C                     T5GATE          equ	16284	;# 
  4685   003F9C                     TMR5GATE        equ	16284	;# 
  4686   003F9D                     T5CLK           equ	16285	;# 
  4687   003F9D                     TMR5CLK         equ	16285	;# 
  4688   003F9D                     PR5             equ	16285	;# 
  4689   003F9E                     T4TMR           equ	16286	;# 
  4690   003F9E                     TMR4            equ	16286	;# 
  4691   003F9F                     T4PR            equ	16287	;# 
  4692   003F9F                     PR4             equ	16287	;# 
  4693   003FA0                     T4CON           equ	16288	;# 
  4694   003FA1                     T4HLT           equ	16289	;# 
  4695   003FA2                     T4CLKCON        equ	16290	;# 
  4696   003FA2                     T4CLK           equ	16290	;# 
  4697   003FA3                     T4RST           equ	16291	;# 
  4698   003FA4                     TMR3            equ	16292	;# 
  4699   003FA4                     TMR3L           equ	16292	;# 
  4700   003FA5                     TMR3H           equ	16293	;# 
  4701   003FA6                     T3CON           equ	16294	;# 
  4702   003FA6                     TMR3CON         equ	16294	;# 
  4703   003FA7                     T3GCON          equ	16295	;# 
  4704   003FA7                     TMR3GCON        equ	16295	;# 
  4705   003FA8                     T3GATE          equ	16296	;# 
  4706   003FA8                     TMR3GATE        equ	16296	;# 
  4707   003FA9                     T3CLK           equ	16297	;# 
  4708   003FA9                     TMR3CLK         equ	16297	;# 
  4709   003FA9                     PR3             equ	16297	;# 
  4710   003FAA                     T2TMR           equ	16298	;# 
  4711   003FAA                     TMR2            equ	16298	;# 
  4712   003FAB                     T2PR            equ	16299	;# 
  4713   003FAB                     PR2             equ	16299	;# 
  4714   003FAC                     T2CON           equ	16300	;# 
  4715   003FAD                     T2HLT           equ	16301	;# 
  4716   003FAE                     T2CLKCON        equ	16302	;# 
  4717   003FAE                     T2CLK           equ	16302	;# 
  4718   003FAF                     T2RST           equ	16303	;# 
  4719   003FB0                     TMR1            equ	16304	;# 
  4720   003FB0                     TMR1L           equ	16304	;# 
  4721   003FB1                     TMR1H           equ	16305	;# 
  4722   003FB2                     T1CON           equ	16306	;# 
  4723   003FB2                     TMR1CON         equ	16306	;# 
  4724   003FB3                     T1GCON          equ	16307	;# 
  4725   003FB3                     TMR1GCON        equ	16307	;# 
  4726   003FB4                     T1GATE          equ	16308	;# 
  4727   003FB4                     TMR1GATE        equ	16308	;# 
  4728   003FB5                     T1CLK           equ	16309	;# 
  4729   003FB5                     TMR1CLK         equ	16309	;# 
  4730   003FB5                     PR1             equ	16309	;# 
  4731   003FB6                     TMR0L           equ	16310	;# 
  4732   003FB6                     TMR0            equ	16310	;# 
  4733   003FB7                     TMR0H           equ	16311	;# 
  4734   003FB7                     PR0             equ	16311	;# 
  4735   003FB8                     T0CON0          equ	16312	;# 
  4736   003FB9                     T0CON1          equ	16313	;# 
  4737   003FBA                     LATA            equ	16314	;# 
  4738   003FBB                     LATB            equ	16315	;# 
  4739   003FBC                     LATC            equ	16316	;# 
  4740   003FBD                     LATD            equ	16317	;# 
  4741   003FBE                     LATE            equ	16318	;# 
  4742   003FBF                     LATF            equ	16319	;# 
  4743   003FC2                     TRISA           equ	16322	;# 
  4744   003FC3                     TRISB           equ	16323	;# 
  4745   003FC4                     TRISC           equ	16324	;# 
  4746   003FC5                     TRISD           equ	16325	;# 
  4747   003FC6                     TRISE           equ	16326	;# 
  4748   003FC7                     TRISF           equ	16327	;# 
  4749   003FCA                     PORTA           equ	16330	;# 
  4750   003FCB                     PORTB           equ	16331	;# 
  4751   003FCC                     PORTC           equ	16332	;# 
  4752   003FCD                     PORTD           equ	16333	;# 
  4753   003FCE                     PORTE           equ	16334	;# 
  4754   003FCF                     PORTF           equ	16335	;# 
  4755   003FD2                     INTCON0         equ	16338	;# 
  4756   003FD3                     INTCON1         equ	16339	;# 
  4757   003FD4                     IVTLOCK         equ	16340	;# 
  4758   003FD5                     IVTBASE         equ	16341	;# 
  4759   003FD5                     IVTBASEL        equ	16341	;# 
  4760   003FD6                     IVTBASEH        equ	16342	;# 
  4761   003FD7                     IVTBASEU        equ	16343	;# 
  4762   003FD8                     STATUS          equ	16344	;# 
  4763   003FD9                     FSR2            equ	16345	;# 
  4764   003FD9                     FSR2L           equ	16345	;# 
  4765   003FDA                     FSR2H           equ	16346	;# 
  4766   003FDB                     PLUSW2          equ	16347	;# 
  4767   003FDC                     PREINC2         equ	16348	;# 
  4768   003FDD                     POSTDEC2        equ	16349	;# 
  4769   003FDE                     POSTINC2        equ	16350	;# 
  4770   003FDF                     INDF2           equ	16351	;# 
  4771   003FE0                     BSR             equ	16352	;# 
  4772   003FE1                     FSR1            equ	16353	;# 
  4773   003FE1                     FSR1L           equ	16353	;# 
  4774   003FE2                     FSR1H           equ	16354	;# 
  4775   003FE3                     PLUSW1          equ	16355	;# 
  4776   003FE4                     PREINC1         equ	16356	;# 
  4777   003FE5                     POSTDEC1        equ	16357	;# 
  4778   003FE6                     POSTINC1        equ	16358	;# 
  4779   003FE7                     INDF1           equ	16359	;# 
  4780   003FE8                     WREG            equ	16360	;# 
  4781   003FE9                     FSR0            equ	16361	;# 
  4782   003FE9                     FSR0L           equ	16361	;# 
  4783   003FEA                     FSR0H           equ	16362	;# 
  4784   003FEB                     PLUSW0          equ	16363	;# 
  4785   003FEC                     PREINC0         equ	16364	;# 
  4786   003FED                     POSTDEC0        equ	16365	;# 
  4787   003FEE                     POSTINC0        equ	16366	;# 
  4788   003FEF                     INDF0           equ	16367	;# 
  4789   003FF0                     PCON0           equ	16368	;# 
  4790   003FF1                     PCON1           equ	16369	;# 
  4791   003FF3                     PROD            equ	16371	;# 
  4792   003FF3                     PRODL           equ	16371	;# 
  4793   003FF4                     PRODH           equ	16372	;# 
  4794   003FF5                     TABLAT          equ	16373	;# 
  4795   003FF6                     TBLPTR          equ	16374	;# 
  4796   003FF6                     TBLPTRL         equ	16374	;# 
  4797   003FF7                     TBLPTRH         equ	16375	;# 
  4798   003FF8                     TBLPTRU         equ	16376	;# 
  4799   003FF9                     PCLAT           equ	16377	;# 
  4800   003FF9                     PCL             equ	16377	;# 
  4801   003FFA                     PCLATH          equ	16378	;# 
  4802   003FFB                     PCLATU          equ	16379	;# 
  4803   003FFC                     STKPTR          equ	16380	;# 
  4804   003FFD                     TOS             equ	16381	;# 
  4805   003FFD                     TOSL            equ	16381	;# 
  4806   003FFE                     TOSH            equ	16382	;# 
  4807   003FFF                     TOSU            equ	16383	;# 
  4808   003880                     STATUS_CSHAD    equ	14464	;# 
  4809   003881                     WREG_CSHAD      equ	14465	;# 
  4810   003882                     BSR_CSHAD       equ	14466	;# 
  4811   003883                     SHADCON         equ	14467	;# 
  4812   003884                     STATUS_SHAD     equ	14468	;# 
  4813   003885                     WREG_SHAD       equ	14469	;# 
  4814   003886                     BSR_SHAD        equ	14470	;# 
  4815   003887                     PCLATH_SHAD     equ	14471	;# 
  4816   003888                     PCLATU_SHAD     equ	14472	;# 
  4817   003889                     FSR0SH          equ	14473	;# 
  4818   003889                     FSR0L_SHAD      equ	14473	;# 
  4819   00388A                     FSR0H_SHAD      equ	14474	;# 
  4820   00388B                     FSR1SH          equ	14475	;# 
  4821   00388B                     FSR1L_SHAD      equ	14475	;# 
  4822   00388C                     FSR1H_SHAD      equ	14476	;# 
  4823   00388D                     FSR2SH          equ	14477	;# 
  4824   00388D                     FSR2L_SHAD      equ	14477	;# 
  4825   00388E                     FSR2H_SHAD      equ	14478	;# 
  4826   00388F                     PRODSH          equ	14479	;# 
  4827   00388F                     PRODL_SHAD      equ	14479	;# 
  4828   003890                     PRODH_SHAD      equ	14480	;# 
  4829   00389D                     IVTADL          equ	14493	;# 
  4830   00389E                     IVTADH          equ	14494	;# 
  4831   00389F                     IVTADU          equ	14495	;# 
  4832   00395B                     WDTCON0         equ	14683	;# 
  4833   00395C                     WDTCON1         equ	14684	;# 
  4834   00395D                     WDTPSL          equ	14685	;# 
  4835   00395E                     WDTPSH          equ	14686	;# 
  4836   00395F                     WDTTMR          equ	14687	;# 
  4837   003960                     CRCDATA         equ	14688	;# 
  4838   003960                     CRCDATL         equ	14688	;# 
  4839   003961                     CRCDATH         equ	14689	;# 
  4840   003962                     CRCACC          equ	14690	;# 
  4841   003962                     CRCACCL         equ	14690	;# 
  4842   003963                     CRCACCH         equ	14691	;# 
  4843   003964                     CRCSHFT         equ	14692	;# 
  4844   003964                     CRCSHIFTL       equ	14692	;# 
  4845   003965                     CRCSHIFTH       equ	14693	;# 
  4846   003966                     CRCXOR          equ	14694	;# 
  4847   003966                     CRCXORL         equ	14694	;# 
  4848   003967                     CRCXORH         equ	14695	;# 
  4849   003968                     CRCCON0         equ	14696	;# 
  4850   003969                     CRCCON1         equ	14697	;# 
  4851   003976                     SCANLADR        equ	14710	;# 
  4852   003976                     SCANLADRL       equ	14710	;# 
  4853   003977                     SCANLADRH       equ	14711	;# 
  4854   003978                     SCANLADRU       equ	14712	;# 
  4855   003979                     SCANHADR        equ	14713	;# 
  4856   003979                     SCANHADRL       equ	14713	;# 
  4857   00397A                     SCANHADRH       equ	14714	;# 
  4858   00397B                     SCANHADRU       equ	14715	;# 
  4859   00397C                     SCANCON0        equ	14716	;# 
  4860   00397D                     SCANTRIG        equ	14717	;# 
  4861   003980                     IPR0            equ	14720	;# 
  4862   003981                     IPR1            equ	14721	;# 
  4863   003982                     IPR2            equ	14722	;# 
  4864   003983                     IPR3            equ	14723	;# 
  4865   003984                     IPR4            equ	14724	;# 
  4866   003985                     IPR5            equ	14725	;# 
  4867   003986                     IPR6            equ	14726	;# 
  4868   003987                     IPR7            equ	14727	;# 
  4869   003988                     IPR8            equ	14728	;# 
  4870   003989                     IPR9            equ	14729	;# 
  4871   00398A                     IPR10           equ	14730	;# 
  4872   003990                     PIE0            equ	14736	;# 
  4873   003991                     PIE1            equ	14737	;# 
  4874   003992                     PIE2            equ	14738	;# 
  4875   003993                     PIE3            equ	14739	;# 
  4876   003994                     PIE4            equ	14740	;# 
  4877   003995                     PIE5            equ	14741	;# 
  4878   003996                     PIE6            equ	14742	;# 
  4879   003997                     PIE7            equ	14743	;# 
  4880   003998                     PIE8            equ	14744	;# 
  4881   003999                     PIE9            equ	14745	;# 
  4882   00399A                     PIE10           equ	14746	;# 
  4883   0039A0                     PIR0            equ	14752	;# 
  4884   0039A1                     PIR1            equ	14753	;# 
  4885   0039A2                     PIR2            equ	14754	;# 
  4886   0039A3                     PIR3            equ	14755	;# 
  4887   0039A4                     PIR4            equ	14756	;# 
  4888   0039A5                     PIR5            equ	14757	;# 
  4889   0039A6                     PIR6            equ	14758	;# 
  4890   0039A7                     PIR7            equ	14759	;# 
  4891   0039A8                     PIR8            equ	14760	;# 
  4892   0039A9                     PIR9            equ	14761	;# 
  4893   0039AA                     PIR10           equ	14762	;# 
  4894   0039C0                     PMD0            equ	14784	;# 
  4895   0039C1                     PMD1            equ	14785	;# 
  4896   0039C2                     PMD2            equ	14786	;# 
  4897   0039C3                     PMD3            equ	14787	;# 
  4898   0039C4                     PMD4            equ	14788	;# 
  4899   0039C5                     PMD5            equ	14789	;# 
  4900   0039C6                     PMD6            equ	14790	;# 
  4901   0039C7                     PMD7            equ	14791	;# 
  4902   0039D0                     BORCON          equ	14800	;# 
  4903   0039D1                     VREGCON         equ	14801	;# 
  4904   0039D8                     CPUDOZE         equ	14808	;# 
  4905   0039D9                     OSCCON1         equ	14809	;# 
  4906   0039DA                     OSCCON2         equ	14810	;# 
  4907   0039DB                     OSCCON3         equ	14811	;# 
  4908   0039DC                     OSCSTAT         equ	14812	;# 
  4909   0039DC                     OSCSTAT1        equ	14812	;# 
  4910   0039DD                     OSCEN           equ	14813	;# 
  4911   0039DE                     OSCTUNE         equ	14814	;# 
  4912   0039DF                     OSCFRQ          equ	14815	;# 
  4913   0039E0                     NVMADRL         equ	14816	;# 
  4914   0039E1                     NVMADRH         equ	14817	;# 
  4915   0039E3                     NVMDAT          equ	14819	;# 
  4916   0039E5                     NVMCON1         equ	14821	;# 
  4917   0039E6                     NVMCON2         equ	14822	;# 
  4918   0039EF                     PRLOCK          equ	14831	;# 
  4919   0039F1                     ISRPR           equ	14833	;# 
  4920   0039F2                     MAINPR          equ	14834	;# 
  4921   0039F3                     DMA1PR          equ	14835	;# 
  4922   0039F4                     DMA2PR          equ	14836	;# 
  4923   0039F7                     SCANPR          equ	14839	;# 
  4924   003A00                     RA0PPS          equ	14848	;# 
  4925   003A01                     RA1PPS          equ	14849	;# 
  4926   003A02                     RA2PPS          equ	14850	;# 
  4927   003A03                     RA3PPS          equ	14851	;# 
  4928   003A04                     RA4PPS          equ	14852	;# 
  4929   003A05                     RA5PPS          equ	14853	;# 
  4930   003A06                     RA6PPS          equ	14854	;# 
  4931   003A07                     RA7PPS          equ	14855	;# 
  4932   003A08                     RB0PPS          equ	14856	;# 
  4933   003A09                     RB1PPS          equ	14857	;# 
  4934   003A0A                     RB2PPS          equ	14858	;# 
  4935   003A0B                     RB3PPS          equ	14859	;# 
  4936   003A0C                     RB4PPS          equ	14860	;# 
  4937   003A0D                     RB5PPS          equ	14861	;# 
  4938   003A0E                     RB6PPS          equ	14862	;# 
  4939   003A0F                     RB7PPS          equ	14863	;# 
  4940   003A10                     RC0PPS          equ	14864	;# 
  4941   003A11                     RC1PPS          equ	14865	;# 
  4942   003A12                     RC2PPS          equ	14866	;# 
  4943   003A13                     RC3PPS          equ	14867	;# 
  4944   003A14                     RC4PPS          equ	14868	;# 
  4945   003A15                     RC5PPS          equ	14869	;# 
  4946   003A16                     RC6PPS          equ	14870	;# 
  4947   003A17                     RC7PPS          equ	14871	;# 
  4948   003A18                     RD0PPS          equ	14872	;# 
  4949   003A19                     RD1PPS          equ	14873	;# 
  4950   003A1A                     RD2PPS          equ	14874	;# 
  4951   003A1B                     RD3PPS          equ	14875	;# 
  4952   003A1C                     RD4PPS          equ	14876	;# 
  4953   003A1D                     RD5PPS          equ	14877	;# 
  4954   003A1E                     RD6PPS          equ	14878	;# 
  4955   003A1F                     RD7PPS          equ	14879	;# 
  4956   003A20                     RE0PPS          equ	14880	;# 
  4957   003A21                     RE1PPS          equ	14881	;# 
  4958   003A22                     RE2PPS          equ	14882	;# 
  4959   003A28                     RF0PPS          equ	14888	;# 
  4960   003A29                     RF1PPS          equ	14889	;# 
  4961   003A2A                     RF2PPS          equ	14890	;# 
  4962   003A2B                     RF3PPS          equ	14891	;# 
  4963   003A2C                     RF4PPS          equ	14892	;# 
  4964   003A2D                     RF5PPS          equ	14893	;# 
  4965   003A2E                     RF6PPS          equ	14894	;# 
  4966   003A2F                     RF7PPS          equ	14895	;# 
  4967   003A40                     ANSELA          equ	14912	;# 
  4968   003A41                     WPUA            equ	14913	;# 
  4969   003A42                     ODCONA          equ	14914	;# 
  4970   003A43                     SLRCONA         equ	14915	;# 
  4971   003A44                     INLVLA          equ	14916	;# 
  4972   003A45                     IOCAP           equ	14917	;# 
  4973   003A46                     IOCAN           equ	14918	;# 
  4974   003A47                     IOCAF           equ	14919	;# 
  4975   003A50                     ANSELB          equ	14928	;# 
  4976   003A51                     WPUB            equ	14929	;# 
  4977   003A52                     ODCONB          equ	14930	;# 
  4978   003A53                     SLRCONB         equ	14931	;# 
  4979   003A54                     INLVLB          equ	14932	;# 
  4980   003A55                     IOCBP           equ	14933	;# 
  4981   003A56                     IOCBN           equ	14934	;# 
  4982   003A57                     IOCBF           equ	14935	;# 
  4983   003A5A                     RB1I2C          equ	14938	;# 
  4984   003A5B                     RB2I2C          equ	14939	;# 
  4985   003A60                     ANSELC          equ	14944	;# 
  4986   003A61                     WPUC            equ	14945	;# 
  4987   003A62                     ODCONC          equ	14946	;# 
  4988   003A63                     SLRCONC         equ	14947	;# 
  4989   003A64                     INLVLC          equ	14948	;# 
  4990   003A65                     IOCCP           equ	14949	;# 
  4991   003A66                     IOCCN           equ	14950	;# 
  4992   003A67                     IOCCF           equ	14951	;# 
  4993   003A6A                     RC3I2C          equ	14954	;# 
  4994   003A6B                     RC4I2C          equ	14955	;# 
  4995   003A70                     ANSELD          equ	14960	;# 
  4996   003A71                     WPUD            equ	14961	;# 
  4997   003A72                     ODCOND          equ	14962	;# 
  4998   003A73                     SLRCOND         equ	14963	;# 
  4999   003A74                     INLVLD          equ	14964	;# 
  5000   003A7A                     RD0I2C          equ	14970	;# 
  5001   003A7B                     RD1I2C          equ	14971	;# 
  5002   003A80                     ANSELE          equ	14976	;# 
  5003   003A81                     WPUE            equ	14977	;# 
  5004   003A82                     ODCONE          equ	14978	;# 
  5005   003A83                     SLRCONE         equ	14979	;# 
  5006   003A84                     INLVLE          equ	14980	;# 
  5007   003A85                     IOCEP           equ	14981	;# 
  5008   003A86                     IOCEN           equ	14982	;# 
  5009   003A87                     IOCEF           equ	14983	;# 
  5010   003A90                     ANSELF          equ	14992	;# 
  5011   003A91                     WPUF            equ	14993	;# 
  5012   003A92                     ODCONF          equ	14994	;# 
  5013   003A93                     SLRCONF         equ	14995	;# 
  5014   003A94                     INLVLF          equ	14996	;# 
  5015   003ABF                     PPSLOCK         equ	15039	;# 
  5016   003AC0                     INT0PPS         equ	15040	;# 
  5017   003AC1                     INT1PPS         equ	15041	;# 
  5018   003AC2                     INT2PPS         equ	15042	;# 
  5019   003AC3                     T0CKIPPS        equ	15043	;# 
  5020   003AC4                     T1CKIPPS        equ	15044	;# 
  5021   003AC5                     T1GPPS          equ	15045	;# 
  5022   003AC6                     T3CKIPPS        equ	15046	;# 
  5023   003AC7                     T3GPPS          equ	15047	;# 
  5024   003AC8                     T5CKIPPS        equ	15048	;# 
  5025   003AC9                     T5GPPS          equ	15049	;# 
  5026   003ACA                     T2INPPS         equ	15050	;# 
  5027   003ACB                     T4INPPS         equ	15051	;# 
  5028   003ACC                     T6INPPS         equ	15052	;# 
  5029   003ACD                     CCP1PPS         equ	15053	;# 
  5030   003ACE                     CCP2PPS         equ	15054	;# 
  5031   003ACF                     CCP3PPS         equ	15055	;# 
  5032   003AD0                     CCP4PPS         equ	15056	;# 
  5033   003AD1                     SMT1WINPPS      equ	15057	;# 
  5034   003AD2                     SMT1SIGPPS      equ	15058	;# 
  5035   003AD3                     CWG1INPPS       equ	15059	;# 
  5036   003AD4                     CWG2INPPS       equ	15060	;# 
  5037   003AD5                     CWG3INPPS       equ	15061	;# 
  5038   003AD6                     MD1CARLPPS      equ	15062	;# 
  5039   003AD7                     MD1CARHPPS      equ	15063	;# 
  5040   003AD8                     MD1SRCPPS       equ	15064	;# 
  5041   003AD9                     CLCIN0PPS       equ	15065	;# 
  5042   003ADA                     CLCIN1PPS       equ	15066	;# 
  5043   003ADB                     CLCIN2PPS       equ	15067	;# 
  5044   003ADC                     CLCIN3PPS       equ	15068	;# 
  5045   003ADD                     ADACTPPS        equ	15069	;# 
  5046   003ADE                     SPI1SCKPPS      equ	15070	;# 
  5047   003ADF                     SPI1SDIPPS      equ	15071	;# 
  5048   003AE0                     SPI1SSPPS       equ	15072	;# 
  5049   003AE1                     I2C1SCLPPS      equ	15073	;# 
  5050   003AE2                     I2C1SDAPPS      equ	15074	;# 
  5051   003AE3                     I2C2SCLPPS      equ	15075	;# 
  5052   003AE4                     I2C2SDAPPS      equ	15076	;# 
  5053   003AE5                     U1RXPPS         equ	15077	;# 
  5054   003AE6                     U1CTSPPS        equ	15078	;# 
  5055   003AE8                     U2RXPPS         equ	15080	;# 
  5056   003AE9                     U2CTSPPS        equ	15081	;# 
  5057   003BC9                     DMA2BUF         equ	15305	;# 
  5058   003BCA                     DMA2DCNT        equ	15306	;# 
  5059   003BCA                     DMA2DCNTL       equ	15306	;# 
  5060   003BCB                     DMA2DCNTH       equ	15307	;# 
  5061   003BCC                     DMA2DPTR        equ	15308	;# 
  5062   003BCC                     DMA2DPTRL       equ	15308	;# 
  5063   003BCD                     DMA2DPTRH       equ	15309	;# 
  5064   003BCE                     DMA2DSZ         equ	15310	;# 
  5065   003BCE                     DMA2DSZL        equ	15310	;# 
  5066   003BCF                     DMA2DSZH        equ	15311	;# 
  5067   003BD0                     DMA2DSA         equ	15312	;# 
  5068   003BD0                     DMA2DSAL        equ	15312	;# 
  5069   003BD1                     DMA2DSAH        equ	15313	;# 
  5070   003BD2                     DMA2SCNT        equ	15314	;# 
  5071   003BD2                     DMA2SCNTL       equ	15314	;# 
  5072   003BD3                     DMA2SCNTH       equ	15315	;# 
  5073   003BD4                     DMA2SPTR        equ	15316	;# 
  5074   003BD4                     DMA2SPTRL       equ	15316	;# 
  5075   003BD5                     DMA2SPTRH       equ	15317	;# 
  5076   003BD6                     DMA2SPTRU       equ	15318	;# 
  5077   003BD7                     DMA2SSZ         equ	15319	;# 
  5078   003BD7                     DMA2SSZL        equ	15319	;# 
  5079   003BD8                     DMA2SSZH        equ	15320	;# 
  5080   003BD9                     DMA2SSA         equ	15321	;# 
  5081   003BD9                     DMA2SSAL        equ	15321	;# 
  5082   003BDA                     DMA2SSAH        equ	15322	;# 
  5083   003BDB                     DMA2SSAU        equ	15323	;# 
  5084   003BDC                     DMA2CON0        equ	15324	;# 
  5085   003BDD                     DMA2CON1        equ	15325	;# 
  5086   003BDE                     DMA2AIRQ        equ	15326	;# 
  5087   003BDF                     DMA2SIRQ        equ	15327	;# 
  5088   003BE9                     DMA1BUF         equ	15337	;# 
  5089   003BEA                     DMA1DCNT        equ	15338	;# 
  5090   003BEA                     DMA1DCNTL       equ	15338	;# 
  5091   003BEB                     DMA1DCNTH       equ	15339	;# 
  5092   003BEC                     DMA1DPTR        equ	15340	;# 
  5093   003BEC                     DMA1DPTRL       equ	15340	;# 
  5094   003BED                     DMA1DPTRH       equ	15341	;# 
  5095   003BEE                     DMA1DSZ         equ	15342	;# 
  5096   003BEE                     DMA1DSZL        equ	15342	;# 
  5097   003BEF                     DMA1DSZH        equ	15343	;# 
  5098   003BF0                     DMA1DSA         equ	15344	;# 
  5099   003BF0                     DMA1DSAL        equ	15344	;# 
  5100   003BF1                     DMA1DSAH        equ	15345	;# 
  5101   003BF2                     DMA1SCNT        equ	15346	;# 
  5102   003BF2                     DMA1SCNTL       equ	15346	;# 
  5103   003BF3                     DMA1SCNTH       equ	15347	;# 
  5104   003BF4                     DMA1SPTR        equ	15348	;# 
  5105   003BF4                     DMA1SPTRL       equ	15348	;# 
  5106   003BF5                     DMA1SPTRH       equ	15349	;# 
  5107   003BF6                     DMA1SPTRU       equ	15350	;# 
  5108   003BF7                     DMA1SSZ         equ	15351	;# 
  5109   003BF7                     DMA1SSZL        equ	15351	;# 
  5110   003BF8                     DMA1SSZH        equ	15352	;# 
  5111   003BF9                     DMA1SSA         equ	15353	;# 
  5112   003BF9                     DMA1SSAL        equ	15353	;# 
  5113   003BFA                     DMA1SSAH        equ	15354	;# 
  5114   003BFB                     DMA1SSAU        equ	15355	;# 
  5115   003BFC                     DMA1CON0        equ	15356	;# 
  5116   003BFD                     DMA1CON1        equ	15357	;# 
  5117   003BFE                     DMA1AIRQ        equ	15358	;# 
  5118   003BFF                     DMA1SIRQ        equ	15359	;# 
  5119   003C56                     CLC4CON         equ	15446	;# 
  5120   003C57                     CLC4POL         equ	15447	;# 
  5121   003C58                     CLC4SEL0        equ	15448	;# 
  5122   003C59                     CLC4SEL1        equ	15449	;# 
  5123   003C5A                     CLC4SEL2        equ	15450	;# 
  5124   003C5B                     CLC4SEL3        equ	15451	;# 
  5125   003C5C                     CLC4GLS0        equ	15452	;# 
  5126   003C5D                     CLC4GLS1        equ	15453	;# 
  5127   003C5E                     CLC4GLS2        equ	15454	;# 
  5128   003C5F                     CLC4GLS3        equ	15455	;# 
  5129   003C60                     CLC3CON         equ	15456	;# 
  5130   003C61                     CLC3POL         equ	15457	;# 
  5131   003C62                     CLC3SEL0        equ	15458	;# 
  5132   003C63                     CLC3SEL1        equ	15459	;# 
  5133   003C64                     CLC3SEL2        equ	15460	;# 
  5134   003C65                     CLC3SEL3        equ	15461	;# 
  5135   003C66                     CLC3GLS0        equ	15462	;# 
  5136   003C67                     CLC3GLS1        equ	15463	;# 
  5137   003C68                     CLC3GLS2        equ	15464	;# 
  5138   003C69                     CLC3GLS3        equ	15465	;# 
  5139   003C6A                     CLC2CON         equ	15466	;# 
  5140   003C6B                     CLC2POL         equ	15467	;# 
  5141   003C6C                     CLC2SEL0        equ	15468	;# 
  5142   003C6D                     CLC2SEL1        equ	15469	;# 
  5143   003C6E                     CLC2SEL2        equ	15470	;# 
  5144   003C6F                     CLC2SEL3        equ	15471	;# 
  5145   003C70                     CLC2GLS0        equ	15472	;# 
  5146   003C71                     CLC2GLS1        equ	15473	;# 
  5147   003C72                     CLC2GLS2        equ	15474	;# 
  5148   003C73                     CLC2GLS3        equ	15475	;# 
  5149   003C74                     CLC1CON         equ	15476	;# 
  5150   003C75                     CLC1POL         equ	15477	;# 
  5151   003C76                     CLC1SEL0        equ	15478	;# 
  5152   003C77                     CLC1SEL1        equ	15479	;# 
  5153   003C78                     CLC1SEL2        equ	15480	;# 
  5154   003C79                     CLC1SEL3        equ	15481	;# 
  5155   003C7A                     CLC1GLS0        equ	15482	;# 
  5156   003C7B                     CLC1GLS1        equ	15483	;# 
  5157   003C7C                     CLC1GLS2        equ	15484	;# 
  5158   003C7D                     CLC1GLS3        equ	15485	;# 
  5159   003C7E                     CLCDATA0        equ	15486	;# 
  5160   003CE5                     CLKRCON         equ	15589	;# 
  5161   003CE6                     CLKRCLK         equ	15590	;# 
  5162   003CFA                     MD1CON0         equ	15610	;# 
  5163   003CFB                     MD1CON1         equ	15611	;# 
  5164   003CFC                     MD1SRC          equ	15612	;# 
  5165   003CFD                     MD1CARL         equ	15613	;# 
  5166   003CFE                     MD1CARH         equ	15614	;# 
  5167   003D10                     SPI1RXB         equ	15632	;# 
  5168   003D11                     SPI1TXB         equ	15633	;# 
  5169   003D12                     SPI1TCNT        equ	15634	;# 
  5170   003D12                     SPI1TCNTL       equ	15634	;# 
  5171   003D13                     SPI1TCNTH       equ	15635	;# 
  5172   003D14                     SPI1CON0        equ	15636	;# 
  5173   003D15                     SPI1CON1        equ	15637	;# 
  5174   003D16                     SPI1CON2        equ	15638	;# 
  5175   003D17                     SPI1STATUS      equ	15639	;# 
  5176   003D18                     SPI1TWIDTH      equ	15640	;# 
  5177   003D19                     SPI1BAUD        equ	15641	;# 
  5178   003D1A                     SPI1INTF        equ	15642	;# 
  5179   003D1B                     SPI1INTE        equ	15643	;# 
  5180   003D1C                     SPI1CLK         equ	15644	;# 
  5181   003D54                     I2C2RXB         equ	15700	;# 
  5182   003D55                     I2C2TXB         equ	15701	;# 
  5183   003D56                     I2C2CNT         equ	15702	;# 
  5184   003D57                     I2C2ADB0        equ	15703	;# 
  5185   003D58                     I2C2ADB1        equ	15704	;# 
  5186   003D59                     I2C2ADR0        equ	15705	;# 
  5187   003D5A                     I2C2ADR1        equ	15706	;# 
  5188   003D5B                     I2C2ADR2        equ	15707	;# 
  5189   003D5C                     I2C2ADR3        equ	15708	;# 
  5190   003D5D                     I2C2CON0        equ	15709	;# 
  5191   003D5E                     I2C2CON1        equ	15710	;# 
  5192   003D5F                     I2C2CON2        equ	15711	;# 
  5193   003D60                     I2C2ERR         equ	15712	;# 
  5194   003D61                     I2C2STAT0       equ	15713	;# 
  5195   003D62                     I2C2STAT1       equ	15714	;# 
  5196   003D63                     I2C2PIR         equ	15715	;# 
  5197   003D64                     I2C2PIE         equ	15716	;# 
  5198   003D65                     I2C2CLK         equ	15717	;# 
  5199   003D66                     I2C2BTO         equ	15718	;# 
  5200   003D6A                     I2C1RXB         equ	15722	;# 
  5201   003D6B                     I2C1TXB         equ	15723	;# 
  5202   003D6C                     I2C1CNT         equ	15724	;# 
  5203   003D6D                     I2C1ADB0        equ	15725	;# 
  5204   003D6E                     I2C1ADB1        equ	15726	;# 
  5205   003D6F                     I2C1ADR0        equ	15727	;# 
  5206   003D70                     I2C1ADR1        equ	15728	;# 
  5207   003D71                     I2C1ADR2        equ	15729	;# 
  5208   003D72                     I2C1ADR3        equ	15730	;# 
  5209   003D73                     I2C1CON0        equ	15731	;# 
  5210   003D74                     I2C1CON1        equ	15732	;# 
  5211   003D75                     I2C1CON2        equ	15733	;# 
  5212   003D76                     I2C1ERR         equ	15734	;# 
  5213   003D77                     I2C1STAT0       equ	15735	;# 
  5214   003D78                     I2C1STAT1       equ	15736	;# 
  5215   003D79                     I2C1PIR         equ	15737	;# 
  5216   003D7A                     I2C1PIE         equ	15738	;# 
  5217   003D7B                     I2C1CLK         equ	15739	;# 
  5218   003D7C                     I2C1BTO         equ	15740	;# 
  5219   003DD0                     U2RXB           equ	15824	;# 
  5220   003DD0                     U2RXBL          equ	15824	;# 
  5221   003DD2                     U2TXB           equ	15826	;# 
  5222   003DD2                     U2TXBL          equ	15826	;# 
  5223   003DD4                     U2P1            equ	15828	;# 
  5224   003DD4                     U2P1L           equ	15828	;# 
  5225   003DD6                     U2P2            equ	15830	;# 
  5226   003DD6                     U2P2L           equ	15830	;# 
  5227   003DD8                     U2P3            equ	15832	;# 
  5228   003DD8                     U2P3L           equ	15832	;# 
  5229   003DDA                     U2CON0          equ	15834	;# 
  5230   003DDB                     U2CON1          equ	15835	;# 
  5231   003DDC                     U2CON2          equ	15836	;# 
  5232   003DDD                     U2BRG           equ	15837	;# 
  5233   003DDD                     U2BRGL          equ	15837	;# 
  5234   003DDE                     U2BRGH          equ	15838	;# 
  5235   003DDF                     U2FIFO          equ	15839	;# 
  5236   003DE0                     U2UIR           equ	15840	;# 
  5237   003DE1                     U2ERRIR         equ	15841	;# 
  5238   003DE2                     U2ERRIE         equ	15842	;# 
  5239   003DE8                     U1RXB           equ	15848	;# 
  5240   003DE8                     U1RXBL          equ	15848	;# 
  5241   003DE9                     U1RXCHK         equ	15849	;# 
  5242   003DEA                     U1TXB           equ	15850	;# 
  5243   003DEA                     U1TXBL          equ	15850	;# 
  5244   003DEB                     U1TXCHK         equ	15851	;# 
  5245   003DEC                     U1P1            equ	15852	;# 
  5246   003DEC                     U1P1L           equ	15852	;# 
  5247   003DED                     U1P1H           equ	15853	;# 
  5248   003DEE                     U1P2            equ	15854	;# 
  5249   003DEE                     U1P2L           equ	15854	;# 
  5250   003DEF                     U1P2H           equ	15855	;# 
  5251   003DF0                     U1P3            equ	15856	;# 
  5252   003DF0                     U1P3L           equ	15856	;# 
  5253   003DF1                     U1P3H           equ	15857	;# 
  5254   003DF2                     U1CON0          equ	15858	;# 
  5255   003DF3                     U1CON1          equ	15859	;# 
  5256   003DF4                     U1CON2          equ	15860	;# 
  5257   003DF5                     U1BRG           equ	15861	;# 
  5258   003DF5                     U1BRGL          equ	15861	;# 
  5259   003DF6                     U1BRGH          equ	15862	;# 
  5260   003DF7                     U1FIFO          equ	15863	;# 
  5261   003DF8                     U1UIR           equ	15864	;# 
  5262   003DF9                     U1ERRIR         equ	15865	;# 
  5263   003DFA                     U1ERRIE         equ	15866	;# 
  5264   003E9C                     DAC1CON1        equ	16028	;# 
  5265   003E9E                     DAC1CON0        equ	16030	;# 
  5266   003EB8                     CM2CON0         equ	16056	;# 
  5267   003EB9                     CM2CON1         equ	16057	;# 
  5268   003EBA                     CM2NCH          equ	16058	;# 
  5269   003EBB                     CM2PCH          equ	16059	;# 
  5270   003EBC                     CM1CON0         equ	16060	;# 
  5271   003EBD                     CM1CON1         equ	16061	;# 
  5272   003EBE                     CM1NCH          equ	16062	;# 
  5273   003EBF                     CM1PCH          equ	16063	;# 
  5274   003EC0                     CMOUT           equ	16064	;# 
  5275   003EC1                     FVRCON          equ	16065	;# 
  5276   003EC3                     ZCDCON          equ	16067	;# 
  5277   003EC9                     HLVDCON0        equ	16073	;# 
  5278   003ECA                     HLVDCON1        equ	16074	;# 
  5279   003ED7                     ADCP            equ	16087	;# 
  5280   003EDE                     ADLTH           equ	16094	;# 
  5281   003EDE                     ADLTHL          equ	16094	;# 
  5282   003EDF                     ADLTHH          equ	16095	;# 
  5283   003EE0                     ADUTH           equ	16096	;# 
  5284   003EE0                     ADUTHL          equ	16096	;# 
  5285   003EE1                     ADUTHH          equ	16097	;# 
  5286   003EE2                     ADERR           equ	16098	;# 
  5287   003EE2                     ADERRL          equ	16098	;# 
  5288   003EE3                     ADERRH          equ	16099	;# 
  5289   003EE4                     ADSTPT          equ	16100	;# 
  5290   003EE4                     ADSTPTL         equ	16100	;# 
  5291   003EE5                     ADSTPTH         equ	16101	;# 
  5292   003EE6                     ADFLTR          equ	16102	;# 
  5293   003EE6                     ADFLTRL         equ	16102	;# 
  5294   003EE7                     ADFLTRH         equ	16103	;# 
  5295   003EE8                     ADACC           equ	16104	;# 
  5296   003EE8                     ADACCL          equ	16104	;# 
  5297   003EE9                     ADACCH          equ	16105	;# 
  5298   003EEA                     ADACCU          equ	16106	;# 
  5299   003EEB                     ADCNT           equ	16107	;# 
  5300   003EEC                     ADRPT           equ	16108	;# 
  5301   003EED                     ADPREV          equ	16109	;# 
  5302   003EED                     ADPREVL         equ	16109	;# 
  5303   003EEE                     ADPREVH         equ	16110	;# 
  5304   003EEF                     ADRES           equ	16111	;# 
  5305   003EEF                     ADRESL          equ	16111	;# 
  5306   003EF0                     ADRESH          equ	16112	;# 
  5307   003EF1                     ADPCH           equ	16113	;# 
  5308   003EF3                     ADACQ           equ	16115	;# 
  5309   003EF3                     ADACQL          equ	16115	;# 
  5310   003EF4                     ADACQH          equ	16116	;# 
  5311   003EF5                     ADCAP           equ	16117	;# 
  5312   003EF6                     ADPRE           equ	16118	;# 
  5313   003EF6                     ADPREL          equ	16118	;# 
  5314   003EF7                     ADPREH          equ	16119	;# 
  5315   003EF8                     ADCON0          equ	16120	;# 
  5316   003EF9                     ADCON1          equ	16121	;# 
  5317   003EFA                     ADCON2          equ	16122	;# 
  5318   003EFB                     ADCON3          equ	16123	;# 
  5319   003EFC                     ADSTAT          equ	16124	;# 
  5320   003EFD                     ADREF           equ	16125	;# 
  5321   003EFE                     ADACT           equ	16126	;# 
  5322   003EFF                     ADCLK           equ	16127	;# 
  5323   003F12                     SMT1TMR         equ	16146	;# 
  5324   003F12                     SMT1TMRL        equ	16146	;# 
  5325   003F13                     SMT1TMRH        equ	16147	;# 
  5326   003F14                     SMT1TMRU        equ	16148	;# 
  5327   003F15                     SMT1CPR         equ	16149	;# 
  5328   003F15                     SMT1CPRL        equ	16149	;# 
  5329   003F16                     SMT1CPRH        equ	16150	;# 
  5330   003F17                     SMT1CPRU        equ	16151	;# 
  5331   003F18                     SMT1CPW         equ	16152	;# 
  5332   003F18                     SMT1CPWL        equ	16152	;# 
  5333   003F19                     SMT1CPWH        equ	16153	;# 
  5334   003F1A                     SMT1CPWU        equ	16154	;# 
  5335   003F1B                     SMT1PR          equ	16155	;# 
  5336   003F1B                     SMT1PRL         equ	16155	;# 
  5337   003F1C                     SMT1PRH         equ	16156	;# 
  5338   003F1D                     SMT1PRU         equ	16157	;# 
  5339   003F1E                     SMT1CON0        equ	16158	;# 
  5340   003F1F                     SMT1CON1        equ	16159	;# 
  5341   003F20                     SMT1STAT        equ	16160	;# 
  5342   003F21                     SMT1CLK         equ	16161	;# 
  5343   003F22                     SMT1SIG         equ	16162	;# 
  5344   003F23                     SMT1WIN         equ	16163	;# 
  5345   003F38                     NCO1ACC         equ	16184	;# 
  5346   003F38                     NCO1ACCL        equ	16184	;# 
  5347   003F39                     NCO1ACCH        equ	16185	;# 
  5348   003F3A                     NCO1ACCU        equ	16186	;# 
  5349   003F3B                     NCO1INC         equ	16187	;# 
  5350   003F3B                     NCO1INCL        equ	16187	;# 
  5351   003F3C                     NCO1INCH        equ	16188	;# 
  5352   003F3D                     NCO1INCU        equ	16189	;# 
  5353   003F3E                     NCO1CON         equ	16190	;# 
  5354   003F3F                     NCO1CLK         equ	16191	;# 
  5355   003F40                     CWG3CLK         equ	16192	;# 
  5356   003F40                     CWG3CLKCON      equ	16192	;# 
  5357   003F41                     CWG3ISM         equ	16193	;# 
  5358   003F41                     CWG3DAT         equ	16193	;# 
  5359   003F42                     CWG3DBR         equ	16194	;# 
  5360   003F43                     CWG3DBF         equ	16195	;# 
  5361   003F44                     CWG3CON0        equ	16196	;# 
  5362   003F45                     CWG3CON1        equ	16197	;# 
  5363   003F46                     CWG3AS0         equ	16198	;# 
  5364   003F47                     CWG3AS1         equ	16199	;# 
  5365   003F48                     CWG3STR         equ	16200	;# 
  5366   003F49                     CWG2CLK         equ	16201	;# 
  5367   003F49                     CWG2CLKCON      equ	16201	;# 
  5368   003F4A                     CWG2ISM         equ	16202	;# 
  5369   003F4A                     CWG2DAT         equ	16202	;# 
  5370   003F4B                     CWG2DBR         equ	16203	;# 
  5371   003F4C                     CWG2DBF         equ	16204	;# 
  5372   003F4D                     CWG2CON0        equ	16205	;# 
  5373   003F4E                     CWG2CON1        equ	16206	;# 
  5374   003F4F                     CWG2AS0         equ	16207	;# 
  5375   003F50                     CWG2AS1         equ	16208	;# 
  5376   003F51                     CWG2STR         equ	16209	;# 
  5377   003F52                     CWG1CLK         equ	16210	;# 
  5378   003F52                     CWG1CLKCON      equ	16210	;# 
  5379   003F53                     CWG1ISM         equ	16211	;# 
  5380   003F53                     CWG1DAT         equ	16211	;# 
  5381   003F54                     CWG1DBR         equ	16212	;# 
  5382   003F55                     CWG1DBF         equ	16213	;# 
  5383   003F56                     CWG1CON0        equ	16214	;# 
  5384   003F57                     CWG1CON1        equ	16215	;# 
  5385   003F58                     CWG1AS0         equ	16216	;# 
  5386   003F59                     CWG1AS1         equ	16217	;# 
  5387   003F5A                     CWG1STR         equ	16218	;# 
  5388   003F5E                     CCPTMRS0        equ	16222	;# 
  5389   003F5F                     CCPTMRS1        equ	16223	;# 
  5390   003F60                     PWM8DC          equ	16224	;# 
  5391   003F60                     PWM8DCL         equ	16224	;# 
  5392   003F61                     PWM8DCH         equ	16225	;# 
  5393   003F62                     PWM8CON         equ	16226	;# 
  5394   003F64                     PWM7DC          equ	16228	;# 
  5395   003F64                     PWM7DCL         equ	16228	;# 
  5396   003F65                     PWM7DCH         equ	16229	;# 
  5397   003F66                     PWM7CON         equ	16230	;# 
  5398   003F68                     PWM6DC          equ	16232	;# 
  5399   003F68                     PWM6DCL         equ	16232	;# 
  5400   003F69                     PWM6DCH         equ	16233	;# 
  5401   003F6A                     PWM6CON         equ	16234	;# 
  5402   003F6C                     PWM5DC          equ	16236	;# 
  5403   003F6C                     PWM5DCL         equ	16236	;# 
  5404   003F6D                     PWM5DCH         equ	16237	;# 
  5405   003F6E                     PWM5CON         equ	16238	;# 
  5406   003F70                     CCPR4           equ	16240	;# 
  5407   003F70                     CCPR4L          equ	16240	;# 
  5408   003F71                     CCPR4H          equ	16241	;# 
  5409   003F72                     CCP4CON         equ	16242	;# 
  5410   003F73                     CCP4CAP         equ	16243	;# 
  5411   003F74                     CCPR3           equ	16244	;# 
  5412   003F74                     CCPR3L          equ	16244	;# 
  5413   003F75                     CCPR3H          equ	16245	;# 
  5414   003F76                     CCP3CON         equ	16246	;# 
  5415   003F77                     CCP3CAP         equ	16247	;# 
  5416   003F78                     CCPR2           equ	16248	;# 
  5417   003F78                     CCPR2L          equ	16248	;# 
  5418   003F79                     CCPR2H          equ	16249	;# 
  5419   003F7A                     CCP2CON         equ	16250	;# 
  5420   003F7B                     CCP2CAP         equ	16251	;# 
  5421   003F7C                     CCPR1           equ	16252	;# 
  5422   003F7C                     CCPR1L          equ	16252	;# 
  5423   003F7D                     CCPR1H          equ	16253	;# 
  5424   003F7E                     CCP1CON         equ	16254	;# 
  5425   003F7F                     CCP1CAP         equ	16255	;# 
  5426   003F92                     T6TMR           equ	16274	;# 
  5427   003F92                     TMR6            equ	16274	;# 
  5428   003F93                     T6PR            equ	16275	;# 
  5429   003F93                     PR6             equ	16275	;# 
  5430   003F94                     T6CON           equ	16276	;# 
  5431   003F95                     T6HLT           equ	16277	;# 
  5432   003F96                     T6CLKCON        equ	16278	;# 
  5433   003F96                     T6CLK           equ	16278	;# 
  5434   003F97                     T6RST           equ	16279	;# 
  5435   003F98                     TMR5            equ	16280	;# 
  5436   003F98                     TMR5L           equ	16280	;# 
  5437   003F99                     TMR5H           equ	16281	;# 
  5438   003F9A                     T5CON           equ	16282	;# 
  5439   003F9A                     TMR5CON         equ	16282	;# 
  5440   003F9B                     T5GCON          equ	16283	;# 
  5441   003F9B                     TMR5GCON        equ	16283	;# 
  5442   003F9C                     T5GATE          equ	16284	;# 
  5443   003F9C                     TMR5GATE        equ	16284	;# 
  5444   003F9D                     T5CLK           equ	16285	;# 
  5445   003F9D                     TMR5CLK         equ	16285	;# 
  5446   003F9D                     PR5             equ	16285	;# 
  5447   003F9E                     T4TMR           equ	16286	;# 
  5448   003F9E                     TMR4            equ	16286	;# 
  5449   003F9F                     T4PR            equ	16287	;# 
  5450   003F9F                     PR4             equ	16287	;# 
  5451   003FA0                     T4CON           equ	16288	;# 
  5452   003FA1                     T4HLT           equ	16289	;# 
  5453   003FA2                     T4CLKCON        equ	16290	;# 
  5454   003FA2                     T4CLK           equ	16290	;# 
  5455   003FA3                     T4RST           equ	16291	;# 
  5456   003FA4                     TMR3            equ	16292	;# 
  5457   003FA4                     TMR3L           equ	16292	;# 
  5458   003FA5                     TMR3H           equ	16293	;# 
  5459   003FA6                     T3CON           equ	16294	;# 
  5460   003FA6                     TMR3CON         equ	16294	;# 
  5461   003FA7                     T3GCON          equ	16295	;# 
  5462   003FA7                     TMR3GCON        equ	16295	;# 
  5463   003FA8                     T3GATE          equ	16296	;# 
  5464   003FA8                     TMR3GATE        equ	16296	;# 
  5465   003FA9                     T3CLK           equ	16297	;# 
  5466   003FA9                     TMR3CLK         equ	16297	;# 
  5467   003FA9                     PR3             equ	16297	;# 
  5468   003FAA                     T2TMR           equ	16298	;# 
  5469   003FAA                     TMR2            equ	16298	;# 
  5470   003FAB                     T2PR            equ	16299	;# 
  5471   003FAB                     PR2             equ	16299	;# 
  5472   003FAC                     T2CON           equ	16300	;# 
  5473   003FAD                     T2HLT           equ	16301	;# 
  5474   003FAE                     T2CLKCON        equ	16302	;# 
  5475   003FAE                     T2CLK           equ	16302	;# 
  5476   003FAF                     T2RST           equ	16303	;# 
  5477   003FB0                     TMR1            equ	16304	;# 
  5478   003FB0                     TMR1L           equ	16304	;# 
  5479   003FB1                     TMR1H           equ	16305	;# 
  5480   003FB2                     T1CON           equ	16306	;# 
  5481   003FB2                     TMR1CON         equ	16306	;# 
  5482   003FB3                     T1GCON          equ	16307	;# 
  5483   003FB3                     TMR1GCON        equ	16307	;# 
  5484   003FB4                     T1GATE          equ	16308	;# 
  5485   003FB4                     TMR1GATE        equ	16308	;# 
  5486   003FB5                     T1CLK           equ	16309	;# 
  5487   003FB5                     TMR1CLK         equ	16309	;# 
  5488   003FB5                     PR1             equ	16309	;# 
  5489   003FB6                     TMR0L           equ	16310	;# 
  5490   003FB6                     TMR0            equ	16310	;# 
  5491   003FB7                     TMR0H           equ	16311	;# 
  5492   003FB7                     PR0             equ	16311	;# 
  5493   003FB8                     T0CON0          equ	16312	;# 
  5494   003FB9                     T0CON1          equ	16313	;# 
  5495   003FBA                     LATA            equ	16314	;# 
  5496   003FBB                     LATB            equ	16315	;# 
  5497   003FBC                     LATC            equ	16316	;# 
  5498   003FBD                     LATD            equ	16317	;# 
  5499   003FBE                     LATE            equ	16318	;# 
  5500   003FBF                     LATF            equ	16319	;# 
  5501   003FC2                     TRISA           equ	16322	;# 
  5502   003FC3                     TRISB           equ	16323	;# 
  5503   003FC4                     TRISC           equ	16324	;# 
  5504   003FC5                     TRISD           equ	16325	;# 
  5505   003FC6                     TRISE           equ	16326	;# 
  5506   003FC7                     TRISF           equ	16327	;# 
  5507   003FCA                     PORTA           equ	16330	;# 
  5508   003FCB                     PORTB           equ	16331	;# 
  5509   003FCC                     PORTC           equ	16332	;# 
  5510   003FCD                     PORTD           equ	16333	;# 
  5511   003FCE                     PORTE           equ	16334	;# 
  5512   003FCF                     PORTF           equ	16335	;# 
  5513   003FD2                     INTCON0         equ	16338	;# 
  5514   003FD3                     INTCON1         equ	16339	;# 
  5515   003FD4                     IVTLOCK         equ	16340	;# 
  5516   003FD5                     IVTBASE         equ	16341	;# 
  5517   003FD5                     IVTBASEL        equ	16341	;# 
  5518   003FD6                     IVTBASEH        equ	16342	;# 
  5519   003FD7                     IVTBASEU        equ	16343	;# 
  5520   003FD8                     STATUS          equ	16344	;# 
  5521   003FD9                     FSR2            equ	16345	;# 
  5522   003FD9                     FSR2L           equ	16345	;# 
  5523   003FDA                     FSR2H           equ	16346	;# 
  5524   003FDB                     PLUSW2          equ	16347	;# 
  5525   003FDC                     PREINC2         equ	16348	;# 
  5526   003FDD                     POSTDEC2        equ	16349	;# 
  5527   003FDE                     POSTINC2        equ	16350	;# 
  5528   003FDF                     INDF2           equ	16351	;# 
  5529   003FE0                     BSR             equ	16352	;# 
  5530   003FE1                     FSR1            equ	16353	;# 
  5531   003FE1                     FSR1L           equ	16353	;# 
  5532   003FE2                     FSR1H           equ	16354	;# 
  5533   003FE3                     PLUSW1          equ	16355	;# 
  5534   003FE4                     PREINC1         equ	16356	;# 
  5535   003FE5                     POSTDEC1        equ	16357	;# 
  5536   003FE6                     POSTINC1        equ	16358	;# 
  5537   003FE7                     INDF1           equ	16359	;# 
  5538   003FE8                     WREG            equ	16360	;# 
  5539   003FE9                     FSR0            equ	16361	;# 
  5540   003FE9                     FSR0L           equ	16361	;# 
  5541   003FEA                     FSR0H           equ	16362	;# 
  5542   003FEB                     PLUSW0          equ	16363	;# 
  5543   003FEC                     PREINC0         equ	16364	;# 
  5544   003FED                     POSTDEC0        equ	16365	;# 
  5545   003FEE                     POSTINC0        equ	16366	;# 
  5546   003FEF                     INDF0           equ	16367	;# 
  5547   003FF0                     PCON0           equ	16368	;# 
  5548   003FF1                     PCON1           equ	16369	;# 
  5549   003FF3                     PROD            equ	16371	;# 
  5550   003FF3                     PRODL           equ	16371	;# 
  5551   003FF4                     PRODH           equ	16372	;# 
  5552   003FF5                     TABLAT          equ	16373	;# 
  5553   003FF6                     TBLPTR          equ	16374	;# 
  5554   003FF6                     TBLPTRL         equ	16374	;# 
  5555   003FF7                     TBLPTRH         equ	16375	;# 
  5556   003FF8                     TBLPTRU         equ	16376	;# 
  5557   003FF9                     PCLAT           equ	16377	;# 
  5558   003FF9                     PCL             equ	16377	;# 
  5559   003FFA                     PCLATH          equ	16378	;# 
  5560   003FFB                     PCLATU          equ	16379	;# 
  5561   003FFC                     STKPTR          equ	16380	;# 
  5562   003FFD                     TOS             equ	16381	;# 
  5563   003FFD                     TOSL            equ	16381	;# 
  5564   003FFE                     TOSH            equ	16382	;# 
  5565   003FFF                     TOSU            equ	16383	;# 
  5566   003880                     STATUS_CSHAD    equ	14464	;# 
  5567   003881                     WREG_CSHAD      equ	14465	;# 
  5568   003882                     BSR_CSHAD       equ	14466	;# 
  5569   003883                     SHADCON         equ	14467	;# 
  5570   003884                     STATUS_SHAD     equ	14468	;# 
  5571   003885                     WREG_SHAD       equ	14469	;# 
  5572   003886                     BSR_SHAD        equ	14470	;# 
  5573   003887                     PCLATH_SHAD     equ	14471	;# 
  5574   003888                     PCLATU_SHAD     equ	14472	;# 
  5575   003889                     FSR0SH          equ	14473	;# 
  5576   003889                     FSR0L_SHAD      equ	14473	;# 
  5577   00388A                     FSR0H_SHAD      equ	14474	;# 
  5578   00388B                     FSR1SH          equ	14475	;# 
  5579   00388B                     FSR1L_SHAD      equ	14475	;# 
  5580   00388C                     FSR1H_SHAD      equ	14476	;# 
  5581   00388D                     FSR2SH          equ	14477	;# 
  5582   00388D                     FSR2L_SHAD      equ	14477	;# 
  5583   00388E                     FSR2H_SHAD      equ	14478	;# 
  5584   00388F                     PRODSH          equ	14479	;# 
  5585   00388F                     PRODL_SHAD      equ	14479	;# 
  5586   003890                     PRODH_SHAD      equ	14480	;# 
  5587   00389D                     IVTADL          equ	14493	;# 
  5588   00389E                     IVTADH          equ	14494	;# 
  5589   00389F                     IVTADU          equ	14495	;# 
  5590   00395B                     WDTCON0         equ	14683	;# 
  5591   00395C                     WDTCON1         equ	14684	;# 
  5592   00395D                     WDTPSL          equ	14685	;# 
  5593   00395E                     WDTPSH          equ	14686	;# 
  5594   00395F                     WDTTMR          equ	14687	;# 
  5595   003960                     CRCDATA         equ	14688	;# 
  5596   003960                     CRCDATL         equ	14688	;# 
  5597   003961                     CRCDATH         equ	14689	;# 
  5598   003962                     CRCACC          equ	14690	;# 
  5599   003962                     CRCACCL         equ	14690	;# 
  5600   003963                     CRCACCH         equ	14691	;# 
  5601   003964                     CRCSHFT         equ	14692	;# 
  5602   003964                     CRCSHIFTL       equ	14692	;# 
  5603   003965                     CRCSHIFTH       equ	14693	;# 
  5604   003966                     CRCXOR          equ	14694	;# 
  5605   003966                     CRCXORL         equ	14694	;# 
  5606   003967                     CRCXORH         equ	14695	;# 
  5607   003968                     CRCCON0         equ	14696	;# 
  5608   003969                     CRCCON1         equ	14697	;# 
  5609   003976                     SCANLADR        equ	14710	;# 
  5610   003976                     SCANLADRL       equ	14710	;# 
  5611   003977                     SCANLADRH       equ	14711	;# 
  5612   003978                     SCANLADRU       equ	14712	;# 
  5613   003979                     SCANHADR        equ	14713	;# 
  5614   003979                     SCANHADRL       equ	14713	;# 
  5615   00397A                     SCANHADRH       equ	14714	;# 
  5616   00397B                     SCANHADRU       equ	14715	;# 
  5617   00397C                     SCANCON0        equ	14716	;# 
  5618   00397D                     SCANTRIG        equ	14717	;# 
  5619   003980                     IPR0            equ	14720	;# 
  5620   003981                     IPR1            equ	14721	;# 
  5621   003982                     IPR2            equ	14722	;# 
  5622   003983                     IPR3            equ	14723	;# 
  5623   003984                     IPR4            equ	14724	;# 
  5624   003985                     IPR5            equ	14725	;# 
  5625   003986                     IPR6            equ	14726	;# 
  5626   003987                     IPR7            equ	14727	;# 
  5627   003988                     IPR8            equ	14728	;# 
  5628   003989                     IPR9            equ	14729	;# 
  5629   00398A                     IPR10           equ	14730	;# 
  5630   003990                     PIE0            equ	14736	;# 
  5631   003991                     PIE1            equ	14737	;# 
  5632   003992                     PIE2            equ	14738	;# 
  5633   003993                     PIE3            equ	14739	;# 
  5634   003994                     PIE4            equ	14740	;# 
  5635   003995                     PIE5            equ	14741	;# 
  5636   003996                     PIE6            equ	14742	;# 
  5637   003997                     PIE7            equ	14743	;# 
  5638   003998                     PIE8            equ	14744	;# 
  5639   003999                     PIE9            equ	14745	;# 
  5640   00399A                     PIE10           equ	14746	;# 
  5641   0039A0                     PIR0            equ	14752	;# 
  5642   0039A1                     PIR1            equ	14753	;# 
  5643   0039A2                     PIR2            equ	14754	;# 
  5644   0039A3                     PIR3            equ	14755	;# 
  5645   0039A4                     PIR4            equ	14756	;# 
  5646   0039A5                     PIR5            equ	14757	;# 
  5647   0039A6                     PIR6            equ	14758	;# 
  5648   0039A7                     PIR7            equ	14759	;# 
  5649   0039A8                     PIR8            equ	14760	;# 
  5650   0039A9                     PIR9            equ	14761	;# 
  5651   0039AA                     PIR10           equ	14762	;# 
  5652   0039C0                     PMD0            equ	14784	;# 
  5653   0039C1                     PMD1            equ	14785	;# 
  5654   0039C2                     PMD2            equ	14786	;# 
  5655   0039C3                     PMD3            equ	14787	;# 
  5656   0039C4                     PMD4            equ	14788	;# 
  5657   0039C5                     PMD5            equ	14789	;# 
  5658   0039C6                     PMD6            equ	14790	;# 
  5659   0039C7                     PMD7            equ	14791	;# 
  5660   0039D0                     BORCON          equ	14800	;# 
  5661   0039D1                     VREGCON         equ	14801	;# 
  5662   0039D8                     CPUDOZE         equ	14808	;# 
  5663   0039D9                     OSCCON1         equ	14809	;# 
  5664   0039DA                     OSCCON2         equ	14810	;# 
  5665   0039DB                     OSCCON3         equ	14811	;# 
  5666   0039DC                     OSCSTAT         equ	14812	;# 
  5667   0039DC                     OSCSTAT1        equ	14812	;# 
  5668   0039DD                     OSCEN           equ	14813	;# 
  5669   0039DE                     OSCTUNE         equ	14814	;# 
  5670   0039DF                     OSCFRQ          equ	14815	;# 
  5671   0039E0                     NVMADRL         equ	14816	;# 
  5672   0039E1                     NVMADRH         equ	14817	;# 
  5673   0039E3                     NVMDAT          equ	14819	;# 
  5674   0039E5                     NVMCON1         equ	14821	;# 
  5675   0039E6                     NVMCON2         equ	14822	;# 
  5676   0039EF                     PRLOCK          equ	14831	;# 
  5677   0039F1                     ISRPR           equ	14833	;# 
  5678   0039F2                     MAINPR          equ	14834	;# 
  5679   0039F3                     DMA1PR          equ	14835	;# 
  5680   0039F4                     DMA2PR          equ	14836	;# 
  5681   0039F7                     SCANPR          equ	14839	;# 
  5682   003A00                     RA0PPS          equ	14848	;# 
  5683   003A01                     RA1PPS          equ	14849	;# 
  5684   003A02                     RA2PPS          equ	14850	;# 
  5685   003A03                     RA3PPS          equ	14851	;# 
  5686   003A04                     RA4PPS          equ	14852	;# 
  5687   003A05                     RA5PPS          equ	14853	;# 
  5688   003A06                     RA6PPS          equ	14854	;# 
  5689   003A07                     RA7PPS          equ	14855	;# 
  5690   003A08                     RB0PPS          equ	14856	;# 
  5691   003A09                     RB1PPS          equ	14857	;# 
  5692   003A0A                     RB2PPS          equ	14858	;# 
  5693   003A0B                     RB3PPS          equ	14859	;# 
  5694   003A0C                     RB4PPS          equ	14860	;# 
  5695   003A0D                     RB5PPS          equ	14861	;# 
  5696   003A0E                     RB6PPS          equ	14862	;# 
  5697   003A0F                     RB7PPS          equ	14863	;# 
  5698   003A10                     RC0PPS          equ	14864	;# 
  5699   003A11                     RC1PPS          equ	14865	;# 
  5700   003A12                     RC2PPS          equ	14866	;# 
  5701   003A13                     RC3PPS          equ	14867	;# 
  5702   003A14                     RC4PPS          equ	14868	;# 
  5703   003A15                     RC5PPS          equ	14869	;# 
  5704   003A16                     RC6PPS          equ	14870	;# 
  5705   003A17                     RC7PPS          equ	14871	;# 
  5706   003A18                     RD0PPS          equ	14872	;# 
  5707   003A19                     RD1PPS          equ	14873	;# 
  5708   003A1A                     RD2PPS          equ	14874	;# 
  5709   003A1B                     RD3PPS          equ	14875	;# 
  5710   003A1C                     RD4PPS          equ	14876	;# 
  5711   003A1D                     RD5PPS          equ	14877	;# 
  5712   003A1E                     RD6PPS          equ	14878	;# 
  5713   003A1F                     RD7PPS          equ	14879	;# 
  5714   003A20                     RE0PPS          equ	14880	;# 
  5715   003A21                     RE1PPS          equ	14881	;# 
  5716   003A22                     RE2PPS          equ	14882	;# 
  5717   003A28                     RF0PPS          equ	14888	;# 
  5718   003A29                     RF1PPS          equ	14889	;# 
  5719   003A2A                     RF2PPS          equ	14890	;# 
  5720   003A2B                     RF3PPS          equ	14891	;# 
  5721   003A2C                     RF4PPS          equ	14892	;# 
  5722   003A2D                     RF5PPS          equ	14893	;# 
  5723   003A2E                     RF6PPS          equ	14894	;# 
  5724   003A2F                     RF7PPS          equ	14895	;# 
  5725   003A40                     ANSELA          equ	14912	;# 
  5726   003A41                     WPUA            equ	14913	;# 
  5727   003A42                     ODCONA          equ	14914	;# 
  5728   003A43                     SLRCONA         equ	14915	;# 
  5729   003A44                     INLVLA          equ	14916	;# 
  5730   003A45                     IOCAP           equ	14917	;# 
  5731   003A46                     IOCAN           equ	14918	;# 
  5732   003A47                     IOCAF           equ	14919	;# 
  5733   003A50                     ANSELB          equ	14928	;# 
  5734   003A51                     WPUB            equ	14929	;# 
  5735   003A52                     ODCONB          equ	14930	;# 
  5736   003A53                     SLRCONB         equ	14931	;# 
  5737   003A54                     INLVLB          equ	14932	;# 
  5738   003A55                     IOCBP           equ	14933	;# 
  5739   003A56                     IOCBN           equ	14934	;# 
  5740   003A57                     IOCBF           equ	14935	;# 
  5741   003A5A                     RB1I2C          equ	14938	;# 
  5742   003A5B                     RB2I2C          equ	14939	;# 
  5743   003A60                     ANSELC          equ	14944	;# 
  5744   003A61                     WPUC            equ	14945	;# 
  5745   003A62                     ODCONC          equ	14946	;# 
  5746   003A63                     SLRCONC         equ	14947	;# 
  5747   003A64                     INLVLC          equ	14948	;# 
  5748   003A65                     IOCCP           equ	14949	;# 
  5749   003A66                     IOCCN           equ	14950	;# 
  5750   003A67                     IOCCF           equ	14951	;# 
  5751   003A6A                     RC3I2C          equ	14954	;# 
  5752   003A6B                     RC4I2C          equ	14955	;# 
  5753   003A70                     ANSELD          equ	14960	;# 
  5754   003A71                     WPUD            equ	14961	;# 
  5755   003A72                     ODCOND          equ	14962	;# 
  5756   003A73                     SLRCOND         equ	14963	;# 
  5757   003A74                     INLVLD          equ	14964	;# 
  5758   003A7A                     RD0I2C          equ	14970	;# 
  5759   003A7B                     RD1I2C          equ	14971	;# 
  5760   003A80                     ANSELE          equ	14976	;# 
  5761   003A81                     WPUE            equ	14977	;# 
  5762   003A82                     ODCONE          equ	14978	;# 
  5763   003A83                     SLRCONE         equ	14979	;# 
  5764   003A84                     INLVLE          equ	14980	;# 
  5765   003A85                     IOCEP           equ	14981	;# 
  5766   003A86                     IOCEN           equ	14982	;# 
  5767   003A87                     IOCEF           equ	14983	;# 
  5768   003A90                     ANSELF          equ	14992	;# 
  5769   003A91                     WPUF            equ	14993	;# 
  5770   003A92                     ODCONF          equ	14994	;# 
  5771   003A93                     SLRCONF         equ	14995	;# 
  5772   003A94                     INLVLF          equ	14996	;# 
  5773   003ABF                     PPSLOCK         equ	15039	;# 
  5774   003AC0                     INT0PPS         equ	15040	;# 
  5775   003AC1                     INT1PPS         equ	15041	;# 
  5776   003AC2                     INT2PPS         equ	15042	;# 
  5777   003AC3                     T0CKIPPS        equ	15043	;# 
  5778   003AC4                     T1CKIPPS        equ	15044	;# 
  5779   003AC5                     T1GPPS          equ	15045	;# 
  5780   003AC6                     T3CKIPPS        equ	15046	;# 
  5781   003AC7                     T3GPPS          equ	15047	;# 
  5782   003AC8                     T5CKIPPS        equ	15048	;# 
  5783   003AC9                     T5GPPS          equ	15049	;# 
  5784   003ACA                     T2INPPS         equ	15050	;# 
  5785   003ACB                     T4INPPS         equ	15051	;# 
  5786   003ACC                     T6INPPS         equ	15052	;# 
  5787   003ACD                     CCP1PPS         equ	15053	;# 
  5788   003ACE                     CCP2PPS         equ	15054	;# 
  5789   003ACF                     CCP3PPS         equ	15055	;# 
  5790   003AD0                     CCP4PPS         equ	15056	;# 
  5791   003AD1                     SMT1WINPPS      equ	15057	;# 
  5792   003AD2                     SMT1SIGPPS      equ	15058	;# 
  5793   003AD3                     CWG1INPPS       equ	15059	;# 
  5794   003AD4                     CWG2INPPS       equ	15060	;# 
  5795   003AD5                     CWG3INPPS       equ	15061	;# 
  5796   003AD6                     MD1CARLPPS      equ	15062	;# 
  5797   003AD7                     MD1CARHPPS      equ	15063	;# 
  5798   003AD8                     MD1SRCPPS       equ	15064	;# 
  5799   003AD9                     CLCIN0PPS       equ	15065	;# 
  5800   003ADA                     CLCIN1PPS       equ	15066	;# 
  5801   003ADB                     CLCIN2PPS       equ	15067	;# 
  5802   003ADC                     CLCIN3PPS       equ	15068	;# 
  5803   003ADD                     ADACTPPS        equ	15069	;# 
  5804   003ADE                     SPI1SCKPPS      equ	15070	;# 
  5805   003ADF                     SPI1SDIPPS      equ	15071	;# 
  5806   003AE0                     SPI1SSPPS       equ	15072	;# 
  5807   003AE1                     I2C1SCLPPS      equ	15073	;# 
  5808   003AE2                     I2C1SDAPPS      equ	15074	;# 
  5809   003AE3                     I2C2SCLPPS      equ	15075	;# 
  5810   003AE4                     I2C2SDAPPS      equ	15076	;# 
  5811   003AE5                     U1RXPPS         equ	15077	;# 
  5812   003AE6                     U1CTSPPS        equ	15078	;# 
  5813   003AE8                     U2RXPPS         equ	15080	;# 
  5814   003AE9                     U2CTSPPS        equ	15081	;# 
  5815   003BC9                     DMA2BUF         equ	15305	;# 
  5816   003BCA                     DMA2DCNT        equ	15306	;# 
  5817   003BCA                     DMA2DCNTL       equ	15306	;# 
  5818   003BCB                     DMA2DCNTH       equ	15307	;# 
  5819   003BCC                     DMA2DPTR        equ	15308	;# 
  5820   003BCC                     DMA2DPTRL       equ	15308	;# 
  5821   003BCD                     DMA2DPTRH       equ	15309	;# 
  5822   003BCE                     DMA2DSZ         equ	15310	;# 
  5823   003BCE                     DMA2DSZL        equ	15310	;# 
  5824   003BCF                     DMA2DSZH        equ	15311	;# 
  5825   003BD0                     DMA2DSA         equ	15312	;# 
  5826   003BD0                     DMA2DSAL        equ	15312	;# 
  5827   003BD1                     DMA2DSAH        equ	15313	;# 
  5828   003BD2                     DMA2SCNT        equ	15314	;# 
  5829   003BD2                     DMA2SCNTL       equ	15314	;# 
  5830   003BD3                     DMA2SCNTH       equ	15315	;# 
  5831   003BD4                     DMA2SPTR        equ	15316	;# 
  5832   003BD4                     DMA2SPTRL       equ	15316	;# 
  5833   003BD5                     DMA2SPTRH       equ	15317	;# 
  5834   003BD6                     DMA2SPTRU       equ	15318	;# 
  5835   003BD7                     DMA2SSZ         equ	15319	;# 
  5836   003BD7                     DMA2SSZL        equ	15319	;# 
  5837   003BD8                     DMA2SSZH        equ	15320	;# 
  5838   003BD9                     DMA2SSA         equ	15321	;# 
  5839   003BD9                     DMA2SSAL        equ	15321	;# 
  5840   003BDA                     DMA2SSAH        equ	15322	;# 
  5841   003BDB                     DMA2SSAU        equ	15323	;# 
  5842   003BDC                     DMA2CON0        equ	15324	;# 
  5843   003BDD                     DMA2CON1        equ	15325	;# 
  5844   003BDE                     DMA2AIRQ        equ	15326	;# 
  5845   003BDF                     DMA2SIRQ        equ	15327	;# 
  5846   003BE9                     DMA1BUF         equ	15337	;# 
  5847   003BEA                     DMA1DCNT        equ	15338	;# 
  5848   003BEA                     DMA1DCNTL       equ	15338	;# 
  5849   003BEB                     DMA1DCNTH       equ	15339	;# 
  5850   003BEC                     DMA1DPTR        equ	15340	;# 
  5851   003BEC                     DMA1DPTRL       equ	15340	;# 
  5852   003BED                     DMA1DPTRH       equ	15341	;# 
  5853   003BEE                     DMA1DSZ         equ	15342	;# 
  5854   003BEE                     DMA1DSZL        equ	15342	;# 
  5855   003BEF                     DMA1DSZH        equ	15343	;# 
  5856   003BF0                     DMA1DSA         equ	15344	;# 
  5857   003BF0                     DMA1DSAL        equ	15344	;# 
  5858   003BF1                     DMA1DSAH        equ	15345	;# 
  5859   003BF2                     DMA1SCNT        equ	15346	;# 
  5860   003BF2                     DMA1SCNTL       equ	15346	;# 
  5861   003BF3                     DMA1SCNTH       equ	15347	;# 
  5862   003BF4                     DMA1SPTR        equ	15348	;# 
  5863   003BF4                     DMA1SPTRL       equ	15348	;# 
  5864   003BF5                     DMA1SPTRH       equ	15349	;# 
  5865   003BF6                     DMA1SPTRU       equ	15350	;# 
  5866   003BF7                     DMA1SSZ         equ	15351	;# 
  5867   003BF7                     DMA1SSZL        equ	15351	;# 
  5868   003BF8                     DMA1SSZH        equ	15352	;# 
  5869   003BF9                     DMA1SSA         equ	15353	;# 
  5870   003BF9                     DMA1SSAL        equ	15353	;# 
  5871   003BFA                     DMA1SSAH        equ	15354	;# 
  5872   003BFB                     DMA1SSAU        equ	15355	;# 
  5873   003BFC                     DMA1CON0        equ	15356	;# 
  5874   003BFD                     DMA1CON1        equ	15357	;# 
  5875   003BFE                     DMA1AIRQ        equ	15358	;# 
  5876   003BFF                     DMA1SIRQ        equ	15359	;# 
  5877   003C56                     CLC4CON         equ	15446	;# 
  5878   003C57                     CLC4POL         equ	15447	;# 
  5879   003C58                     CLC4SEL0        equ	15448	;# 
  5880   003C59                     CLC4SEL1        equ	15449	;# 
  5881   003C5A                     CLC4SEL2        equ	15450	;# 
  5882   003C5B                     CLC4SEL3        equ	15451	;# 
  5883   003C5C                     CLC4GLS0        equ	15452	;# 
  5884   003C5D                     CLC4GLS1        equ	15453	;# 
  5885   003C5E                     CLC4GLS2        equ	15454	;# 
  5886   003C5F                     CLC4GLS3        equ	15455	;# 
  5887   003C60                     CLC3CON         equ	15456	;# 
  5888   003C61                     CLC3POL         equ	15457	;# 
  5889   003C62                     CLC3SEL0        equ	15458	;# 
  5890   003C63                     CLC3SEL1        equ	15459	;# 
  5891   003C64                     CLC3SEL2        equ	15460	;# 
  5892   003C65                     CLC3SEL3        equ	15461	;# 
  5893   003C66                     CLC3GLS0        equ	15462	;# 
  5894   003C67                     CLC3GLS1        equ	15463	;# 
  5895   003C68                     CLC3GLS2        equ	15464	;# 
  5896   003C69                     CLC3GLS3        equ	15465	;# 
  5897   003C6A                     CLC2CON         equ	15466	;# 
  5898   003C6B                     CLC2POL         equ	15467	;# 
  5899   003C6C                     CLC2SEL0        equ	15468	;# 
  5900   003C6D                     CLC2SEL1        equ	15469	;# 
  5901   003C6E                     CLC2SEL2        equ	15470	;# 
  5902   003C6F                     CLC2SEL3        equ	15471	;# 
  5903   003C70                     CLC2GLS0        equ	15472	;# 
  5904   003C71                     CLC2GLS1        equ	15473	;# 
  5905   003C72                     CLC2GLS2        equ	15474	;# 
  5906   003C73                     CLC2GLS3        equ	15475	;# 
  5907   003C74                     CLC1CON         equ	15476	;# 
  5908   003C75                     CLC1POL         equ	15477	;# 
  5909   003C76                     CLC1SEL0        equ	15478	;# 
  5910   003C77                     CLC1SEL1        equ	15479	;# 
  5911   003C78                     CLC1SEL2        equ	15480	;# 
  5912   003C79                     CLC1SEL3        equ	15481	;# 
  5913   003C7A                     CLC1GLS0        equ	15482	;# 
  5914   003C7B                     CLC1GLS1        equ	15483	;# 
  5915   003C7C                     CLC1GLS2        equ	15484	;# 
  5916   003C7D                     CLC1GLS3        equ	15485	;# 
  5917   003C7E                     CLCDATA0        equ	15486	;# 
  5918   003CE5                     CLKRCON         equ	15589	;# 
  5919   003CE6                     CLKRCLK         equ	15590	;# 
  5920   003CFA                     MD1CON0         equ	15610	;# 
  5921   003CFB                     MD1CON1         equ	15611	;# 
  5922   003CFC                     MD1SRC          equ	15612	;# 
  5923   003CFD                     MD1CARL         equ	15613	;# 
  5924   003CFE                     MD1CARH         equ	15614	;# 
  5925   003D10                     SPI1RXB         equ	15632	;# 
  5926   003D11                     SPI1TXB         equ	15633	;# 
  5927   003D12                     SPI1TCNT        equ	15634	;# 
  5928   003D12                     SPI1TCNTL       equ	15634	;# 
  5929   003D13                     SPI1TCNTH       equ	15635	;# 
  5930   003D14                     SPI1CON0        equ	15636	;# 
  5931   003D15                     SPI1CON1        equ	15637	;# 
  5932   003D16                     SPI1CON2        equ	15638	;# 
  5933   003D17                     SPI1STATUS      equ	15639	;# 
  5934   003D18                     SPI1TWIDTH      equ	15640	;# 
  5935   003D19                     SPI1BAUD        equ	15641	;# 
  5936   003D1A                     SPI1INTF        equ	15642	;# 
  5937   003D1B                     SPI1INTE        equ	15643	;# 
  5938   003D1C                     SPI1CLK         equ	15644	;# 
  5939   003D54                     I2C2RXB         equ	15700	;# 
  5940   003D55                     I2C2TXB         equ	15701	;# 
  5941   003D56                     I2C2CNT         equ	15702	;# 
  5942   003D57                     I2C2ADB0        equ	15703	;# 
  5943   003D58                     I2C2ADB1        equ	15704	;# 
  5944   003D59                     I2C2ADR0        equ	15705	;# 
  5945   003D5A                     I2C2ADR1        equ	15706	;# 
  5946   003D5B                     I2C2ADR2        equ	15707	;# 
  5947   003D5C                     I2C2ADR3        equ	15708	;# 
  5948   003D5D                     I2C2CON0        equ	15709	;# 
  5949   003D5E                     I2C2CON1        equ	15710	;# 
  5950   003D5F                     I2C2CON2        equ	15711	;# 
  5951   003D60                     I2C2ERR         equ	15712	;# 
  5952   003D61                     I2C2STAT0       equ	15713	;# 
  5953   003D62                     I2C2STAT1       equ	15714	;# 
  5954   003D63                     I2C2PIR         equ	15715	;# 
  5955   003D64                     I2C2PIE         equ	15716	;# 
  5956   003D65                     I2C2CLK         equ	15717	;# 
  5957   003D66                     I2C2BTO         equ	15718	;# 
  5958   003D6A                     I2C1RXB         equ	15722	;# 
  5959   003D6B                     I2C1TXB         equ	15723	;# 
  5960   003D6C                     I2C1CNT         equ	15724	;# 
  5961   003D6D                     I2C1ADB0        equ	15725	;# 
  5962   003D6E                     I2C1ADB1        equ	15726	;# 
  5963   003D6F                     I2C1ADR0        equ	15727	;# 
  5964   003D70                     I2C1ADR1        equ	15728	;# 
  5965   003D71                     I2C1ADR2        equ	15729	;# 
  5966   003D72                     I2C1ADR3        equ	15730	;# 
  5967   003D73                     I2C1CON0        equ	15731	;# 
  5968   003D74                     I2C1CON1        equ	15732	;# 
  5969   003D75                     I2C1CON2        equ	15733	;# 
  5970   003D76                     I2C1ERR         equ	15734	;# 
  5971   003D77                     I2C1STAT0       equ	15735	;# 
  5972   003D78                     I2C1STAT1       equ	15736	;# 
  5973   003D79                     I2C1PIR         equ	15737	;# 
  5974   003D7A                     I2C1PIE         equ	15738	;# 
  5975   003D7B                     I2C1CLK         equ	15739	;# 
  5976   003D7C                     I2C1BTO         equ	15740	;# 
  5977   003DD0                     U2RXB           equ	15824	;# 
  5978   003DD0                     U2RXBL          equ	15824	;# 
  5979   003DD2                     U2TXB           equ	15826	;# 
  5980   003DD2                     U2TXBL          equ	15826	;# 
  5981   003DD4                     U2P1            equ	15828	;# 
  5982   003DD4                     U2P1L           equ	15828	;# 
  5983   003DD6                     U2P2            equ	15830	;# 
  5984   003DD6                     U2P2L           equ	15830	;# 
  5985   003DD8                     U2P3            equ	15832	;# 
  5986   003DD8                     U2P3L           equ	15832	;# 
  5987   003DDA                     U2CON0          equ	15834	;# 
  5988   003DDB                     U2CON1          equ	15835	;# 
  5989   003DDC                     U2CON2          equ	15836	;# 
  5990   003DDD                     U2BRG           equ	15837	;# 
  5991   003DDD                     U2BRGL          equ	15837	;# 
  5992   003DDE                     U2BRGH          equ	15838	;# 
  5993   003DDF                     U2FIFO          equ	15839	;# 
  5994   003DE0                     U2UIR           equ	15840	;# 
  5995   003DE1                     U2ERRIR         equ	15841	;# 
  5996   003DE2                     U2ERRIE         equ	15842	;# 
  5997   003DE8                     U1RXB           equ	15848	;# 
  5998   003DE8                     U1RXBL          equ	15848	;# 
  5999   003DE9                     U1RXCHK         equ	15849	;# 
  6000   003DEA                     U1TXB           equ	15850	;# 
  6001   003DEA                     U1TXBL          equ	15850	;# 
  6002   003DEB                     U1TXCHK         equ	15851	;# 
  6003   003DEC                     U1P1            equ	15852	;# 
  6004   003DEC                     U1P1L           equ	15852	;# 
  6005   003DED                     U1P1H           equ	15853	;# 
  6006   003DEE                     U1P2            equ	15854	;# 
  6007   003DEE                     U1P2L           equ	15854	;# 
  6008   003DEF                     U1P2H           equ	15855	;# 
  6009   003DF0                     U1P3            equ	15856	;# 
  6010   003DF0                     U1P3L           equ	15856	;# 
  6011   003DF1                     U1P3H           equ	15857	;# 
  6012   003DF2                     U1CON0          equ	15858	;# 
  6013   003DF3                     U1CON1          equ	15859	;# 
  6014   003DF4                     U1CON2          equ	15860	;# 
  6015   003DF5                     U1BRG           equ	15861	;# 
  6016   003DF5                     U1BRGL          equ	15861	;# 
  6017   003DF6                     U1BRGH          equ	15862	;# 
  6018   003DF7                     U1FIFO          equ	15863	;# 
  6019   003DF8                     U1UIR           equ	15864	;# 
  6020   003DF9                     U1ERRIR         equ	15865	;# 
  6021   003DFA                     U1ERRIE         equ	15866	;# 
  6022   003E9C                     DAC1CON1        equ	16028	;# 
  6023   003E9E                     DAC1CON0        equ	16030	;# 
  6024   003EB8                     CM2CON0         equ	16056	;# 
  6025   003EB9                     CM2CON1         equ	16057	;# 
  6026   003EBA                     CM2NCH          equ	16058	;# 
  6027   003EBB                     CM2PCH          equ	16059	;# 
  6028   003EBC                     CM1CON0         equ	16060	;# 
  6029   003EBD                     CM1CON1         equ	16061	;# 
  6030   003EBE                     CM1NCH          equ	16062	;# 
  6031   003EBF                     CM1PCH          equ	16063	;# 
  6032   003EC0                     CMOUT           equ	16064	;# 
  6033   003EC1                     FVRCON          equ	16065	;# 
  6034   003EC3                     ZCDCON          equ	16067	;# 
  6035   003EC9                     HLVDCON0        equ	16073	;# 
  6036   003ECA                     HLVDCON1        equ	16074	;# 
  6037   003ED7                     ADCP            equ	16087	;# 
  6038   003EDE                     ADLTH           equ	16094	;# 
  6039   003EDE                     ADLTHL          equ	16094	;# 
  6040   003EDF                     ADLTHH          equ	16095	;# 
  6041   003EE0                     ADUTH           equ	16096	;# 
  6042   003EE0                     ADUTHL          equ	16096	;# 
  6043   003EE1                     ADUTHH          equ	16097	;# 
  6044   003EE2                     ADERR           equ	16098	;# 
  6045   003EE2                     ADERRL          equ	16098	;# 
  6046   003EE3                     ADERRH          equ	16099	;# 
  6047   003EE4                     ADSTPT          equ	16100	;# 
  6048   003EE4                     ADSTPTL         equ	16100	;# 
  6049   003EE5                     ADSTPTH         equ	16101	;# 
  6050   003EE6                     ADFLTR          equ	16102	;# 
  6051   003EE6                     ADFLTRL         equ	16102	;# 
  6052   003EE7                     ADFLTRH         equ	16103	;# 
  6053   003EE8                     ADACC           equ	16104	;# 
  6054   003EE8                     ADACCL          equ	16104	;# 
  6055   003EE9                     ADACCH          equ	16105	;# 
  6056   003EEA                     ADACCU          equ	16106	;# 
  6057   003EEB                     ADCNT           equ	16107	;# 
  6058   003EEC                     ADRPT           equ	16108	;# 
  6059   003EED                     ADPREV          equ	16109	;# 
  6060   003EED                     ADPREVL         equ	16109	;# 
  6061   003EEE                     ADPREVH         equ	16110	;# 
  6062   003EEF                     ADRES           equ	16111	;# 
  6063   003EEF                     ADRESL          equ	16111	;# 
  6064   003EF0                     ADRESH          equ	16112	;# 
  6065   003EF1                     ADPCH           equ	16113	;# 
  6066   003EF3                     ADACQ           equ	16115	;# 
  6067   003EF3                     ADACQL          equ	16115	;# 
  6068   003EF4                     ADACQH          equ	16116	;# 
  6069   003EF5                     ADCAP           equ	16117	;# 
  6070   003EF6                     ADPRE           equ	16118	;# 
  6071   003EF6                     ADPREL          equ	16118	;# 
  6072   003EF7                     ADPREH          equ	16119	;# 
  6073   003EF8                     ADCON0          equ	16120	;# 
  6074   003EF9                     ADCON1          equ	16121	;# 
  6075   003EFA                     ADCON2          equ	16122	;# 
  6076   003EFB                     ADCON3          equ	16123	;# 
  6077   003EFC                     ADSTAT          equ	16124	;# 
  6078   003EFD                     ADREF           equ	16125	;# 
  6079   003EFE                     ADACT           equ	16126	;# 
  6080   003EFF                     ADCLK           equ	16127	;# 
  6081   003F12                     SMT1TMR         equ	16146	;# 
  6082   003F12                     SMT1TMRL        equ	16146	;# 
  6083   003F13                     SMT1TMRH        equ	16147	;# 
  6084   003F14                     SMT1TMRU        equ	16148	;# 
  6085   003F15                     SMT1CPR         equ	16149	;# 
  6086   003F15                     SMT1CPRL        equ	16149	;# 
  6087   003F16                     SMT1CPRH        equ	16150	;# 
  6088   003F17                     SMT1CPRU        equ	16151	;# 
  6089   003F18                     SMT1CPW         equ	16152	;# 
  6090   003F18                     SMT1CPWL        equ	16152	;# 
  6091   003F19                     SMT1CPWH        equ	16153	;# 
  6092   003F1A                     SMT1CPWU        equ	16154	;# 
  6093   003F1B                     SMT1PR          equ	16155	;# 
  6094   003F1B                     SMT1PRL         equ	16155	;# 
  6095   003F1C                     SMT1PRH         equ	16156	;# 
  6096   003F1D                     SMT1PRU         equ	16157	;# 
  6097   003F1E                     SMT1CON0        equ	16158	;# 
  6098   003F1F                     SMT1CON1        equ	16159	;# 
  6099   003F20                     SMT1STAT        equ	16160	;# 
  6100   003F21                     SMT1CLK         equ	16161	;# 
  6101   003F22                     SMT1SIG         equ	16162	;# 
  6102   003F23                     SMT1WIN         equ	16163	;# 
  6103   003F38                     NCO1ACC         equ	16184	;# 
  6104   003F38                     NCO1ACCL        equ	16184	;# 
  6105   003F39                     NCO1ACCH        equ	16185	;# 
  6106   003F3A                     NCO1ACCU        equ	16186	;# 
  6107   003F3B                     NCO1INC         equ	16187	;# 
  6108   003F3B                     NCO1INCL        equ	16187	;# 
  6109   003F3C                     NCO1INCH        equ	16188	;# 
  6110   003F3D                     NCO1INCU        equ	16189	;# 
  6111   003F3E                     NCO1CON         equ	16190	;# 
  6112   003F3F                     NCO1CLK         equ	16191	;# 
  6113   003F40                     CWG3CLK         equ	16192	;# 
  6114   003F40                     CWG3CLKCON      equ	16192	;# 
  6115   003F41                     CWG3ISM         equ	16193	;# 
  6116   003F41                     CWG3DAT         equ	16193	;# 
  6117   003F42                     CWG3DBR         equ	16194	;# 
  6118   003F43                     CWG3DBF         equ	16195	;# 
  6119   003F44                     CWG3CON0        equ	16196	;# 
  6120   003F45                     CWG3CON1        equ	16197	;# 
  6121   003F46                     CWG3AS0         equ	16198	;# 
  6122   003F47                     CWG3AS1         equ	16199	;# 
  6123   003F48                     CWG3STR         equ	16200	;# 
  6124   003F49                     CWG2CLK         equ	16201	;# 
  6125   003F49                     CWG2CLKCON      equ	16201	;# 
  6126   003F4A                     CWG2ISM         equ	16202	;# 
  6127   003F4A                     CWG2DAT         equ	16202	;# 
  6128   003F4B                     CWG2DBR         equ	16203	;# 
  6129   003F4C                     CWG2DBF         equ	16204	;# 
  6130   003F4D                     CWG2CON0        equ	16205	;# 
  6131   003F4E                     CWG2CON1        equ	16206	;# 
  6132   003F4F                     CWG2AS0         equ	16207	;# 
  6133   003F50                     CWG2AS1         equ	16208	;# 
  6134   003F51                     CWG2STR         equ	16209	;# 
  6135   003F52                     CWG1CLK         equ	16210	;# 
  6136   003F52                     CWG1CLKCON      equ	16210	;# 
  6137   003F53                     CWG1ISM         equ	16211	;# 
  6138   003F53                     CWG1DAT         equ	16211	;# 
  6139   003F54                     CWG1DBR         equ	16212	;# 
  6140   003F55                     CWG1DBF         equ	16213	;# 
  6141   003F56                     CWG1CON0        equ	16214	;# 
  6142   003F57                     CWG1CON1        equ	16215	;# 
  6143   003F58                     CWG1AS0         equ	16216	;# 
  6144   003F59                     CWG1AS1         equ	16217	;# 
  6145   003F5A                     CWG1STR         equ	16218	;# 
  6146   003F5E                     CCPTMRS0        equ	16222	;# 
  6147   003F5F                     CCPTMRS1        equ	16223	;# 
  6148   003F60                     PWM8DC          equ	16224	;# 
  6149   003F60                     PWM8DCL         equ	16224	;# 
  6150   003F61                     PWM8DCH         equ	16225	;# 
  6151   003F62                     PWM8CON         equ	16226	;# 
  6152   003F64                     PWM7DC          equ	16228	;# 
  6153   003F64                     PWM7DCL         equ	16228	;# 
  6154   003F65                     PWM7DCH         equ	16229	;# 
  6155   003F66                     PWM7CON         equ	16230	;# 
  6156   003F68                     PWM6DC          equ	16232	;# 
  6157   003F68                     PWM6DCL         equ	16232	;# 
  6158   003F69                     PWM6DCH         equ	16233	;# 
  6159   003F6A                     PWM6CON         equ	16234	;# 
  6160   003F6C                     PWM5DC          equ	16236	;# 
  6161   003F6C                     PWM5DCL         equ	16236	;# 
  6162   003F6D                     PWM5DCH         equ	16237	;# 
  6163   003F6E                     PWM5CON         equ	16238	;# 
  6164   003F70                     CCPR4           equ	16240	;# 
  6165   003F70                     CCPR4L          equ	16240	;# 
  6166   003F71                     CCPR4H          equ	16241	;# 
  6167   003F72                     CCP4CON         equ	16242	;# 
  6168   003F73                     CCP4CAP         equ	16243	;# 
  6169   003F74                     CCPR3           equ	16244	;# 
  6170   003F74                     CCPR3L          equ	16244	;# 
  6171   003F75                     CCPR3H          equ	16245	;# 
  6172   003F76                     CCP3CON         equ	16246	;# 
  6173   003F77                     CCP3CAP         equ	16247	;# 
  6174   003F78                     CCPR2           equ	16248	;# 
  6175   003F78                     CCPR2L          equ	16248	;# 
  6176   003F79                     CCPR2H          equ	16249	;# 
  6177   003F7A                     CCP2CON         equ	16250	;# 
  6178   003F7B                     CCP2CAP         equ	16251	;# 
  6179   003F7C                     CCPR1           equ	16252	;# 
  6180   003F7C                     CCPR1L          equ	16252	;# 
  6181   003F7D                     CCPR1H          equ	16253	;# 
  6182   003F7E                     CCP1CON         equ	16254	;# 
  6183   003F7F                     CCP1CAP         equ	16255	;# 
  6184   003F92                     T6TMR           equ	16274	;# 
  6185   003F92                     TMR6            equ	16274	;# 
  6186   003F93                     T6PR            equ	16275	;# 
  6187   003F93                     PR6             equ	16275	;# 
  6188   003F94                     T6CON           equ	16276	;# 
  6189   003F95                     T6HLT           equ	16277	;# 
  6190   003F96                     T6CLKCON        equ	16278	;# 
  6191   003F96                     T6CLK           equ	16278	;# 
  6192   003F97                     T6RST           equ	16279	;# 
  6193   003F98                     TMR5            equ	16280	;# 
  6194   003F98                     TMR5L           equ	16280	;# 
  6195   003F99                     TMR5H           equ	16281	;# 
  6196   003F9A                     T5CON           equ	16282	;# 
  6197   003F9A                     TMR5CON         equ	16282	;# 
  6198   003F9B                     T5GCON          equ	16283	;# 
  6199   003F9B                     TMR5GCON        equ	16283	;# 
  6200   003F9C                     T5GATE          equ	16284	;# 
  6201   003F9C                     TMR5GATE        equ	16284	;# 
  6202   003F9D                     T5CLK           equ	16285	;# 
  6203   003F9D                     TMR5CLK         equ	16285	;# 
  6204   003F9D                     PR5             equ	16285	;# 
  6205   003F9E                     T4TMR           equ	16286	;# 
  6206   003F9E                     TMR4            equ	16286	;# 
  6207   003F9F                     T4PR            equ	16287	;# 
  6208   003F9F                     PR4             equ	16287	;# 
  6209   003FA0                     T4CON           equ	16288	;# 
  6210   003FA1                     T4HLT           equ	16289	;# 
  6211   003FA2                     T4CLKCON        equ	16290	;# 
  6212   003FA2                     T4CLK           equ	16290	;# 
  6213   003FA3                     T4RST           equ	16291	;# 
  6214   003FA4                     TMR3            equ	16292	;# 
  6215   003FA4                     TMR3L           equ	16292	;# 
  6216   003FA5                     TMR3H           equ	16293	;# 
  6217   003FA6                     T3CON           equ	16294	;# 
  6218   003FA6                     TMR3CON         equ	16294	;# 
  6219   003FA7                     T3GCON          equ	16295	;# 
  6220   003FA7                     TMR3GCON        equ	16295	;# 
  6221   003FA8                     T3GATE          equ	16296	;# 
  6222   003FA8                     TMR3GATE        equ	16296	;# 
  6223   003FA9                     T3CLK           equ	16297	;# 
  6224   003FA9                     TMR3CLK         equ	16297	;# 
  6225   003FA9                     PR3             equ	16297	;# 
  6226   003FAA                     T2TMR           equ	16298	;# 
  6227   003FAA                     TMR2            equ	16298	;# 
  6228   003FAB                     T2PR            equ	16299	;# 
  6229   003FAB                     PR2             equ	16299	;# 
  6230   003FAC                     T2CON           equ	16300	;# 
  6231   003FAD                     T2HLT           equ	16301	;# 
  6232   003FAE                     T2CLKCON        equ	16302	;# 
  6233   003FAE                     T2CLK           equ	16302	;# 
  6234   003FAF                     T2RST           equ	16303	;# 
  6235   003FB0                     TMR1            equ	16304	;# 
  6236   003FB0                     TMR1L           equ	16304	;# 
  6237   003FB1                     TMR1H           equ	16305	;# 
  6238   003FB2                     T1CON           equ	16306	;# 
  6239   003FB2                     TMR1CON         equ	16306	;# 
  6240   003FB3                     T1GCON          equ	16307	;# 
  6241   003FB3                     TMR1GCON        equ	16307	;# 
  6242   003FB4                     T1GATE          equ	16308	;# 
  6243   003FB4                     TMR1GATE        equ	16308	;# 
  6244   003FB5                     T1CLK           equ	16309	;# 
  6245   003FB5                     TMR1CLK         equ	16309	;# 
  6246   003FB5                     PR1             equ	16309	;# 
  6247   003FB6                     TMR0L           equ	16310	;# 
  6248   003FB6                     TMR0            equ	16310	;# 
  6249   003FB7                     TMR0H           equ	16311	;# 
  6250   003FB7                     PR0             equ	16311	;# 
  6251   003FB8                     T0CON0          equ	16312	;# 
  6252   003FB9                     T0CON1          equ	16313	;# 
  6253   003FBA                     LATA            equ	16314	;# 
  6254   003FBB                     LATB            equ	16315	;# 
  6255   003FBC                     LATC            equ	16316	;# 
  6256   003FBD                     LATD            equ	16317	;# 
  6257   003FBE                     LATE            equ	16318	;# 
  6258   003FBF                     LATF            equ	16319	;# 
  6259   003FC2                     TRISA           equ	16322	;# 
  6260   003FC3                     TRISB           equ	16323	;# 
  6261   003FC4                     TRISC           equ	16324	;# 
  6262   003FC5                     TRISD           equ	16325	;# 
  6263   003FC6                     TRISE           equ	16326	;# 
  6264   003FC7                     TRISF           equ	16327	;# 
  6265   003FCA                     PORTA           equ	16330	;# 
  6266   003FCB                     PORTB           equ	16331	;# 
  6267   003FCC                     PORTC           equ	16332	;# 
  6268   003FCD                     PORTD           equ	16333	;# 
  6269   003FCE                     PORTE           equ	16334	;# 
  6270   003FCF                     PORTF           equ	16335	;# 
  6271   003FD2                     INTCON0         equ	16338	;# 
  6272   003FD3                     INTCON1         equ	16339	;# 
  6273   003FD4                     IVTLOCK         equ	16340	;# 
  6274   003FD5                     IVTBASE         equ	16341	;# 
  6275   003FD5                     IVTBASEL        equ	16341	;# 
  6276   003FD6                     IVTBASEH        equ	16342	;# 
  6277   003FD7                     IVTBASEU        equ	16343	;# 
  6278   003FD8                     STATUS          equ	16344	;# 
  6279   003FD9                     FSR2            equ	16345	;# 
  6280   003FD9                     FSR2L           equ	16345	;# 
  6281   003FDA                     FSR2H           equ	16346	;# 
  6282   003FDB                     PLUSW2          equ	16347	;# 
  6283   003FDC                     PREINC2         equ	16348	;# 
  6284   003FDD                     POSTDEC2        equ	16349	;# 
  6285   003FDE                     POSTINC2        equ	16350	;# 
  6286   003FDF                     INDF2           equ	16351	;# 
  6287   003FE0                     BSR             equ	16352	;# 
  6288   003FE1                     FSR1            equ	16353	;# 
  6289   003FE1                     FSR1L           equ	16353	;# 
  6290   003FE2                     FSR1H           equ	16354	;# 
  6291   003FE3                     PLUSW1          equ	16355	;# 
  6292   003FE4                     PREINC1         equ	16356	;# 
  6293   003FE5                     POSTDEC1        equ	16357	;# 
  6294   003FE6                     POSTINC1        equ	16358	;# 
  6295   003FE7                     INDF1           equ	16359	;# 
  6296   003FE8                     WREG            equ	16360	;# 
  6297   003FE9                     FSR0            equ	16361	;# 
  6298   003FE9                     FSR0L           equ	16361	;# 
  6299   003FEA                     FSR0H           equ	16362	;# 
  6300   003FEB                     PLUSW0          equ	16363	;# 
  6301   003FEC                     PREINC0         equ	16364	;# 
  6302   003FED                     POSTDEC0        equ	16365	;# 
  6303   003FEE                     POSTINC0        equ	16366	;# 
  6304   003FEF                     INDF0           equ	16367	;# 
  6305   003FF0                     PCON0           equ	16368	;# 
  6306   003FF1                     PCON1           equ	16369	;# 
  6307   003FF3                     PROD            equ	16371	;# 
  6308   003FF3                     PRODL           equ	16371	;# 
  6309   003FF4                     PRODH           equ	16372	;# 
  6310   003FF5                     TABLAT          equ	16373	;# 
  6311   003FF6                     TBLPTR          equ	16374	;# 
  6312   003FF6                     TBLPTRL         equ	16374	;# 
  6313   003FF7                     TBLPTRH         equ	16375	;# 
  6314   003FF8                     TBLPTRU         equ	16376	;# 
  6315   003FF9                     PCLAT           equ	16377	;# 
  6316   003FF9                     PCL             equ	16377	;# 
  6317   003FFA                     PCLATH          equ	16378	;# 
  6318   003FFB                     PCLATU          equ	16379	;# 
  6319   003FFC                     STKPTR          equ	16380	;# 
  6320   003FFD                     TOS             equ	16381	;# 
  6321   003FFD                     TOSL            equ	16381	;# 
  6322   003FFE                     TOSH            equ	16382	;# 
  6323   003FFF                     TOSU            equ	16383	;# 
  6324   003880                     STATUS_CSHAD    equ	14464	;# 
  6325   003881                     WREG_CSHAD      equ	14465	;# 
  6326   003882                     BSR_CSHAD       equ	14466	;# 
  6327   003883                     SHADCON         equ	14467	;# 
  6328   003884                     STATUS_SHAD     equ	14468	;# 
  6329   003885                     WREG_SHAD       equ	14469	;# 
  6330   003886                     BSR_SHAD        equ	14470	;# 
  6331   003887                     PCLATH_SHAD     equ	14471	;# 
  6332   003888                     PCLATU_SHAD     equ	14472	;# 
  6333   003889                     FSR0SH          equ	14473	;# 
  6334   003889                     FSR0L_SHAD      equ	14473	;# 
  6335   00388A                     FSR0H_SHAD      equ	14474	;# 
  6336   00388B                     FSR1SH          equ	14475	;# 
  6337   00388B                     FSR1L_SHAD      equ	14475	;# 
  6338   00388C                     FSR1H_SHAD      equ	14476	;# 
  6339   00388D                     FSR2SH          equ	14477	;# 
  6340   00388D                     FSR2L_SHAD      equ	14477	;# 
  6341   00388E                     FSR2H_SHAD      equ	14478	;# 
  6342   00388F                     PRODSH          equ	14479	;# 
  6343   00388F                     PRODL_SHAD      equ	14479	;# 
  6344   003890                     PRODH_SHAD      equ	14480	;# 
  6345   00389D                     IVTADL          equ	14493	;# 
  6346   00389E                     IVTADH          equ	14494	;# 
  6347   00389F                     IVTADU          equ	14495	;# 
  6348   00395B                     WDTCON0         equ	14683	;# 
  6349   00395C                     WDTCON1         equ	14684	;# 
  6350   00395D                     WDTPSL          equ	14685	;# 
  6351   00395E                     WDTPSH          equ	14686	;# 
  6352   00395F                     WDTTMR          equ	14687	;# 
  6353   003960                     CRCDATA         equ	14688	;# 
  6354   003960                     CRCDATL         equ	14688	;# 
  6355   003961                     CRCDATH         equ	14689	;# 
  6356   003962                     CRCACC          equ	14690	;# 
  6357   003962                     CRCACCL         equ	14690	;# 
  6358   003963                     CRCACCH         equ	14691	;# 
  6359   003964                     CRCSHFT         equ	14692	;# 
  6360   003964                     CRCSHIFTL       equ	14692	;# 
  6361   003965                     CRCSHIFTH       equ	14693	;# 
  6362   003966                     CRCXOR          equ	14694	;# 
  6363   003966                     CRCXORL         equ	14694	;# 
  6364   003967                     CRCXORH         equ	14695	;# 
  6365   003968                     CRCCON0         equ	14696	;# 
  6366   003969                     CRCCON1         equ	14697	;# 
  6367   003976                     SCANLADR        equ	14710	;# 
  6368   003976                     SCANLADRL       equ	14710	;# 
  6369   003977                     SCANLADRH       equ	14711	;# 
  6370   003978                     SCANLADRU       equ	14712	;# 
  6371   003979                     SCANHADR        equ	14713	;# 
  6372   003979                     SCANHADRL       equ	14713	;# 
  6373   00397A                     SCANHADRH       equ	14714	;# 
  6374   00397B                     SCANHADRU       equ	14715	;# 
  6375   00397C                     SCANCON0        equ	14716	;# 
  6376   00397D                     SCANTRIG        equ	14717	;# 
  6377   003980                     IPR0            equ	14720	;# 
  6378   003981                     IPR1            equ	14721	;# 
  6379   003982                     IPR2            equ	14722	;# 
  6380   003983                     IPR3            equ	14723	;# 
  6381   003984                     IPR4            equ	14724	;# 
  6382   003985                     IPR5            equ	14725	;# 
  6383   003986                     IPR6            equ	14726	;# 
  6384   003987                     IPR7            equ	14727	;# 
  6385   003988                     IPR8            equ	14728	;# 
  6386   003989                     IPR9            equ	14729	;# 
  6387   00398A                     IPR10           equ	14730	;# 
  6388   003990                     PIE0            equ	14736	;# 
  6389   003991                     PIE1            equ	14737	;# 
  6390   003992                     PIE2            equ	14738	;# 
  6391   003993                     PIE3            equ	14739	;# 
  6392   003994                     PIE4            equ	14740	;# 
  6393   003995                     PIE5            equ	14741	;# 
  6394   003996                     PIE6            equ	14742	;# 
  6395   003997                     PIE7            equ	14743	;# 
  6396   003998                     PIE8            equ	14744	;# 
  6397   003999                     PIE9            equ	14745	;# 
  6398   00399A                     PIE10           equ	14746	;# 
  6399   0039A0                     PIR0            equ	14752	;# 
  6400   0039A1                     PIR1            equ	14753	;# 
  6401   0039A2                     PIR2            equ	14754	;# 
  6402   0039A3                     PIR3            equ	14755	;# 
  6403   0039A4                     PIR4            equ	14756	;# 
  6404   0039A5                     PIR5            equ	14757	;# 
  6405   0039A6                     PIR6            equ	14758	;# 
  6406   0039A7                     PIR7            equ	14759	;# 
  6407   0039A8                     PIR8            equ	14760	;# 
  6408   0039A9                     PIR9            equ	14761	;# 
  6409   0039AA                     PIR10           equ	14762	;# 
  6410   0039C0                     PMD0            equ	14784	;# 
  6411   0039C1                     PMD1            equ	14785	;# 
  6412   0039C2                     PMD2            equ	14786	;# 
  6413   0039C3                     PMD3            equ	14787	;# 
  6414   0039C4                     PMD4            equ	14788	;# 
  6415   0039C5                     PMD5            equ	14789	;# 
  6416   0039C6                     PMD6            equ	14790	;# 
  6417   0039C7                     PMD7            equ	14791	;# 
  6418   0039D0                     BORCON          equ	14800	;# 
  6419   0039D1                     VREGCON         equ	14801	;# 
  6420   0039D8                     CPUDOZE         equ	14808	;# 
  6421   0039D9                     OSCCON1         equ	14809	;# 
  6422   0039DA                     OSCCON2         equ	14810	;# 
  6423   0039DB                     OSCCON3         equ	14811	;# 
  6424   0039DC                     OSCSTAT         equ	14812	;# 
  6425   0039DC                     OSCSTAT1        equ	14812	;# 
  6426   0039DD                     OSCEN           equ	14813	;# 
  6427   0039DE                     OSCTUNE         equ	14814	;# 
  6428   0039DF                     OSCFRQ          equ	14815	;# 
  6429   0039E0                     NVMADRL         equ	14816	;# 
  6430   0039E1                     NVMADRH         equ	14817	;# 
  6431   0039E3                     NVMDAT          equ	14819	;# 
  6432   0039E5                     NVMCON1         equ	14821	;# 
  6433   0039E6                     NVMCON2         equ	14822	;# 
  6434   0039EF                     PRLOCK          equ	14831	;# 
  6435   0039F1                     ISRPR           equ	14833	;# 
  6436   0039F2                     MAINPR          equ	14834	;# 
  6437   0039F3                     DMA1PR          equ	14835	;# 
  6438   0039F4                     DMA2PR          equ	14836	;# 
  6439   0039F7                     SCANPR          equ	14839	;# 
  6440   003A00                     RA0PPS          equ	14848	;# 
  6441   003A01                     RA1PPS          equ	14849	;# 
  6442   003A02                     RA2PPS          equ	14850	;# 
  6443   003A03                     RA3PPS          equ	14851	;# 
  6444   003A04                     RA4PPS          equ	14852	;# 
  6445   003A05                     RA5PPS          equ	14853	;# 
  6446   003A06                     RA6PPS          equ	14854	;# 
  6447   003A07                     RA7PPS          equ	14855	;# 
  6448   003A08                     RB0PPS          equ	14856	;# 
  6449   003A09                     RB1PPS          equ	14857	;# 
  6450   003A0A                     RB2PPS          equ	14858	;# 
  6451   003A0B                     RB3PPS          equ	14859	;# 
  6452   003A0C                     RB4PPS          equ	14860	;# 
  6453   003A0D                     RB5PPS          equ	14861	;# 
  6454   003A0E                     RB6PPS          equ	14862	;# 
  6455   003A0F                     RB7PPS          equ	14863	;# 
  6456   003A10                     RC0PPS          equ	14864	;# 
  6457   003A11                     RC1PPS          equ	14865	;# 
  6458   003A12                     RC2PPS          equ	14866	;# 
  6459   003A13                     RC3PPS          equ	14867	;# 
  6460   003A14                     RC4PPS          equ	14868	;# 
  6461   003A15                     RC5PPS          equ	14869	;# 
  6462   003A16                     RC6PPS          equ	14870	;# 
  6463   003A17                     RC7PPS          equ	14871	;# 
  6464   003A18                     RD0PPS          equ	14872	;# 
  6465   003A19                     RD1PPS          equ	14873	;# 
  6466   003A1A                     RD2PPS          equ	14874	;# 
  6467   003A1B                     RD3PPS          equ	14875	;# 
  6468   003A1C                     RD4PPS          equ	14876	;# 
  6469   003A1D                     RD5PPS          equ	14877	;# 
  6470   003A1E                     RD6PPS          equ	14878	;# 
  6471   003A1F                     RD7PPS          equ	14879	;# 
  6472   003A20                     RE0PPS          equ	14880	;# 
  6473   003A21                     RE1PPS          equ	14881	;# 
  6474   003A22                     RE2PPS          equ	14882	;# 
  6475   003A28                     RF0PPS          equ	14888	;# 
  6476   003A29                     RF1PPS          equ	14889	;# 
  6477   003A2A                     RF2PPS          equ	14890	;# 
  6478   003A2B                     RF3PPS          equ	14891	;# 
  6479   003A2C                     RF4PPS          equ	14892	;# 
  6480   003A2D                     RF5PPS          equ	14893	;# 
  6481   003A2E                     RF6PPS          equ	14894	;# 
  6482   003A2F                     RF7PPS          equ	14895	;# 
  6483   003A40                     ANSELA          equ	14912	;# 
  6484   003A41                     WPUA            equ	14913	;# 
  6485   003A42                     ODCONA          equ	14914	;# 
  6486   003A43                     SLRCONA         equ	14915	;# 
  6487   003A44                     INLVLA          equ	14916	;# 
  6488   003A45                     IOCAP           equ	14917	;# 
  6489   003A46                     IOCAN           equ	14918	;# 
  6490   003A47                     IOCAF           equ	14919	;# 
  6491   003A50                     ANSELB          equ	14928	;# 
  6492   003A51                     WPUB            equ	14929	;# 
  6493   003A52                     ODCONB          equ	14930	;# 
  6494   003A53                     SLRCONB         equ	14931	;# 
  6495   003A54                     INLVLB          equ	14932	;# 
  6496   003A55                     IOCBP           equ	14933	;# 
  6497   003A56                     IOCBN           equ	14934	;# 
  6498   003A57                     IOCBF           equ	14935	;# 
  6499   003A5A                     RB1I2C          equ	14938	;# 
  6500   003A5B                     RB2I2C          equ	14939	;# 
  6501   003A60                     ANSELC          equ	14944	;# 
  6502   003A61                     WPUC            equ	14945	;# 
  6503   003A62                     ODCONC          equ	14946	;# 
  6504   003A63                     SLRCONC         equ	14947	;# 
  6505   003A64                     INLVLC          equ	14948	;# 
  6506   003A65                     IOCCP           equ	14949	;# 
  6507   003A66                     IOCCN           equ	14950	;# 
  6508   003A67                     IOCCF           equ	14951	;# 
  6509   003A6A                     RC3I2C          equ	14954	;# 
  6510   003A6B                     RC4I2C          equ	14955	;# 
  6511   003A70                     ANSELD          equ	14960	;# 
  6512   003A71                     WPUD            equ	14961	;# 
  6513   003A72                     ODCOND          equ	14962	;# 
  6514   003A73                     SLRCOND         equ	14963	;# 
  6515   003A74                     INLVLD          equ	14964	;# 
  6516   003A7A                     RD0I2C          equ	14970	;# 
  6517   003A7B                     RD1I2C          equ	14971	;# 
  6518   003A80                     ANSELE          equ	14976	;# 
  6519   003A81                     WPUE            equ	14977	;# 
  6520   003A82                     ODCONE          equ	14978	;# 
  6521   003A83                     SLRCONE         equ	14979	;# 
  6522   003A84                     INLVLE          equ	14980	;# 
  6523   003A85                     IOCEP           equ	14981	;# 
  6524   003A86                     IOCEN           equ	14982	;# 
  6525   003A87                     IOCEF           equ	14983	;# 
  6526   003A90                     ANSELF          equ	14992	;# 
  6527   003A91                     WPUF            equ	14993	;# 
  6528   003A92                     ODCONF          equ	14994	;# 
  6529   003A93                     SLRCONF         equ	14995	;# 
  6530   003A94                     INLVLF          equ	14996	;# 
  6531   003ABF                     PPSLOCK         equ	15039	;# 
  6532   003AC0                     INT0PPS         equ	15040	;# 
  6533   003AC1                     INT1PPS         equ	15041	;# 
  6534   003AC2                     INT2PPS         equ	15042	;# 
  6535   003AC3                     T0CKIPPS        equ	15043	;# 
  6536   003AC4                     T1CKIPPS        equ	15044	;# 
  6537   003AC5                     T1GPPS          equ	15045	;# 
  6538   003AC6                     T3CKIPPS        equ	15046	;# 
  6539   003AC7                     T3GPPS          equ	15047	;# 
  6540   003AC8                     T5CKIPPS        equ	15048	;# 
  6541   003AC9                     T5GPPS          equ	15049	;# 
  6542   003ACA                     T2INPPS         equ	15050	;# 
  6543   003ACB                     T4INPPS         equ	15051	;# 
  6544   003ACC                     T6INPPS         equ	15052	;# 
  6545   003ACD                     CCP1PPS         equ	15053	;# 
  6546   003ACE                     CCP2PPS         equ	15054	;# 
  6547   003ACF                     CCP3PPS         equ	15055	;# 
  6548   003AD0                     CCP4PPS         equ	15056	;# 
  6549   003AD1                     SMT1WINPPS      equ	15057	;# 
  6550   003AD2                     SMT1SIGPPS      equ	15058	;# 
  6551   003AD3                     CWG1INPPS       equ	15059	;# 
  6552   003AD4                     CWG2INPPS       equ	15060	;# 
  6553   003AD5                     CWG3INPPS       equ	15061	;# 
  6554   003AD6                     MD1CARLPPS      equ	15062	;# 
  6555   003AD7                     MD1CARHPPS      equ	15063	;# 
  6556   003AD8                     MD1SRCPPS       equ	15064	;# 
  6557   003AD9                     CLCIN0PPS       equ	15065	;# 
  6558   003ADA                     CLCIN1PPS       equ	15066	;# 
  6559   003ADB                     CLCIN2PPS       equ	15067	;# 
  6560   003ADC                     CLCIN3PPS       equ	15068	;# 
  6561   003ADD                     ADACTPPS        equ	15069	;# 
  6562   003ADE                     SPI1SCKPPS      equ	15070	;# 
  6563   003ADF                     SPI1SDIPPS      equ	15071	;# 
  6564   003AE0                     SPI1SSPPS       equ	15072	;# 
  6565   003AE1                     I2C1SCLPPS      equ	15073	;# 
  6566   003AE2                     I2C1SDAPPS      equ	15074	;# 
  6567   003AE3                     I2C2SCLPPS      equ	15075	;# 
  6568   003AE4                     I2C2SDAPPS      equ	15076	;# 
  6569   003AE5                     U1RXPPS         equ	15077	;# 
  6570   003AE6                     U1CTSPPS        equ	15078	;# 
  6571   003AE8                     U2RXPPS         equ	15080	;# 
  6572   003AE9                     U2CTSPPS        equ	15081	;# 
  6573   003BC9                     DMA2BUF         equ	15305	;# 
  6574   003BCA                     DMA2DCNT        equ	15306	;# 
  6575   003BCA                     DMA2DCNTL       equ	15306	;# 
  6576   003BCB                     DMA2DCNTH       equ	15307	;# 
  6577   003BCC                     DMA2DPTR        equ	15308	;# 
  6578   003BCC                     DMA2DPTRL       equ	15308	;# 
  6579   003BCD                     DMA2DPTRH       equ	15309	;# 
  6580   003BCE                     DMA2DSZ         equ	15310	;# 
  6581   003BCE                     DMA2DSZL        equ	15310	;# 
  6582   003BCF                     DMA2DSZH        equ	15311	;# 
  6583   003BD0                     DMA2DSA         equ	15312	;# 
  6584   003BD0                     DMA2DSAL        equ	15312	;# 
  6585   003BD1                     DMA2DSAH        equ	15313	;# 
  6586   003BD2                     DMA2SCNT        equ	15314	;# 
  6587   003BD2                     DMA2SCNTL       equ	15314	;# 
  6588   003BD3                     DMA2SCNTH       equ	15315	;# 
  6589   003BD4                     DMA2SPTR        equ	15316	;# 
  6590   003BD4                     DMA2SPTRL       equ	15316	;# 
  6591   003BD5                     DMA2SPTRH       equ	15317	;# 
  6592   003BD6                     DMA2SPTRU       equ	15318	;# 
  6593   003BD7                     DMA2SSZ         equ	15319	;# 
  6594   003BD7                     DMA2SSZL        equ	15319	;# 
  6595   003BD8                     DMA2SSZH        equ	15320	;# 
  6596   003BD9                     DMA2SSA         equ	15321	;# 
  6597   003BD9                     DMA2SSAL        equ	15321	;# 
  6598   003BDA                     DMA2SSAH        equ	15322	;# 
  6599   003BDB                     DMA2SSAU        equ	15323	;# 
  6600   003BDC                     DMA2CON0        equ	15324	;# 
  6601   003BDD                     DMA2CON1        equ	15325	;# 
  6602   003BDE                     DMA2AIRQ        equ	15326	;# 
  6603   003BDF                     DMA2SIRQ        equ	15327	;# 
  6604   003BE9                     DMA1BUF         equ	15337	;# 
  6605   003BEA                     DMA1DCNT        equ	15338	;# 
  6606   003BEA                     DMA1DCNTL       equ	15338	;# 
  6607   003BEB                     DMA1DCNTH       equ	15339	;# 
  6608   003BEC                     DMA1DPTR        equ	15340	;# 
  6609   003BEC                     DMA1DPTRL       equ	15340	;# 
  6610   003BED                     DMA1DPTRH       equ	15341	;# 
  6611   003BEE                     DMA1DSZ         equ	15342	;# 
  6612   003BEE                     DMA1DSZL        equ	15342	;# 
  6613   003BEF                     DMA1DSZH        equ	15343	;# 
  6614   003BF0                     DMA1DSA         equ	15344	;# 
  6615   003BF0                     DMA1DSAL        equ	15344	;# 
  6616   003BF1                     DMA1DSAH        equ	15345	;# 
  6617   003BF2                     DMA1SCNT        equ	15346	;# 
  6618   003BF2                     DMA1SCNTL       equ	15346	;# 
  6619   003BF3                     DMA1SCNTH       equ	15347	;# 
  6620   003BF4                     DMA1SPTR        equ	15348	;# 
  6621   003BF4                     DMA1SPTRL       equ	15348	;# 
  6622   003BF5                     DMA1SPTRH       equ	15349	;# 
  6623   003BF6                     DMA1SPTRU       equ	15350	;# 
  6624   003BF7                     DMA1SSZ         equ	15351	;# 
  6625   003BF7                     DMA1SSZL        equ	15351	;# 
  6626   003BF8                     DMA1SSZH        equ	15352	;# 
  6627   003BF9                     DMA1SSA         equ	15353	;# 
  6628   003BF9                     DMA1SSAL        equ	15353	;# 
  6629   003BFA                     DMA1SSAH        equ	15354	;# 
  6630   003BFB                     DMA1SSAU        equ	15355	;# 
  6631   003BFC                     DMA1CON0        equ	15356	;# 
  6632   003BFD                     DMA1CON1        equ	15357	;# 
  6633   003BFE                     DMA1AIRQ        equ	15358	;# 
  6634   003BFF                     DMA1SIRQ        equ	15359	;# 
  6635   003C56                     CLC4CON         equ	15446	;# 
  6636   003C57                     CLC4POL         equ	15447	;# 
  6637   003C58                     CLC4SEL0        equ	15448	;# 
  6638   003C59                     CLC4SEL1        equ	15449	;# 
  6639   003C5A                     CLC4SEL2        equ	15450	;# 
  6640   003C5B                     CLC4SEL3        equ	15451	;# 
  6641   003C5C                     CLC4GLS0        equ	15452	;# 
  6642   003C5D                     CLC4GLS1        equ	15453	;# 
  6643   003C5E                     CLC4GLS2        equ	15454	;# 
  6644   003C5F                     CLC4GLS3        equ	15455	;# 
  6645   003C60                     CLC3CON         equ	15456	;# 
  6646   003C61                     CLC3POL         equ	15457	;# 
  6647   003C62                     CLC3SEL0        equ	15458	;# 
  6648   003C63                     CLC3SEL1        equ	15459	;# 
  6649   003C64                     CLC3SEL2        equ	15460	;# 
  6650   003C65                     CLC3SEL3        equ	15461	;# 
  6651   003C66                     CLC3GLS0        equ	15462	;# 
  6652   003C67                     CLC3GLS1        equ	15463	;# 
  6653   003C68                     CLC3GLS2        equ	15464	;# 
  6654   003C69                     CLC3GLS3        equ	15465	;# 
  6655   003C6A                     CLC2CON         equ	15466	;# 
  6656   003C6B                     CLC2POL         equ	15467	;# 
  6657   003C6C                     CLC2SEL0        equ	15468	;# 
  6658   003C6D                     CLC2SEL1        equ	15469	;# 
  6659   003C6E                     CLC2SEL2        equ	15470	;# 
  6660   003C6F                     CLC2SEL3        equ	15471	;# 
  6661   003C70                     CLC2GLS0        equ	15472	;# 
  6662   003C71                     CLC2GLS1        equ	15473	;# 
  6663   003C72                     CLC2GLS2        equ	15474	;# 
  6664   003C73                     CLC2GLS3        equ	15475	;# 
  6665   003C74                     CLC1CON         equ	15476	;# 
  6666   003C75                     CLC1POL         equ	15477	;# 
  6667   003C76                     CLC1SEL0        equ	15478	;# 
  6668   003C77                     CLC1SEL1        equ	15479	;# 
  6669   003C78                     CLC1SEL2        equ	15480	;# 
  6670   003C79                     CLC1SEL3        equ	15481	;# 
  6671   003C7A                     CLC1GLS0        equ	15482	;# 
  6672   003C7B                     CLC1GLS1        equ	15483	;# 
  6673   003C7C                     CLC1GLS2        equ	15484	;# 
  6674   003C7D                     CLC1GLS3        equ	15485	;# 
  6675   003C7E                     CLCDATA0        equ	15486	;# 
  6676   003CE5                     CLKRCON         equ	15589	;# 
  6677   003CE6                     CLKRCLK         equ	15590	;# 
  6678   003CFA                     MD1CON0         equ	15610	;# 
  6679   003CFB                     MD1CON1         equ	15611	;# 
  6680   003CFC                     MD1SRC          equ	15612	;# 
  6681   003CFD                     MD1CARL         equ	15613	;# 
  6682   003CFE                     MD1CARH         equ	15614	;# 
  6683   003D10                     SPI1RXB         equ	15632	;# 
  6684   003D11                     SPI1TXB         equ	15633	;# 
  6685   003D12                     SPI1TCNT        equ	15634	;# 
  6686   003D12                     SPI1TCNTL       equ	15634	;# 
  6687   003D13                     SPI1TCNTH       equ	15635	;# 
  6688   003D14                     SPI1CON0        equ	15636	;# 
  6689   003D15                     SPI1CON1        equ	15637	;# 
  6690   003D16                     SPI1CON2        equ	15638	;# 
  6691   003D17                     SPI1STATUS      equ	15639	;# 
  6692   003D18                     SPI1TWIDTH      equ	15640	;# 
  6693   003D19                     SPI1BAUD        equ	15641	;# 
  6694   003D1A                     SPI1INTF        equ	15642	;# 
  6695   003D1B                     SPI1INTE        equ	15643	;# 
  6696   003D1C                     SPI1CLK         equ	15644	;# 
  6697   003D54                     I2C2RXB         equ	15700	;# 
  6698   003D55                     I2C2TXB         equ	15701	;# 
  6699   003D56                     I2C2CNT         equ	15702	;# 
  6700   003D57                     I2C2ADB0        equ	15703	;# 
  6701   003D58                     I2C2ADB1        equ	15704	;# 
  6702   003D59                     I2C2ADR0        equ	15705	;# 
  6703   003D5A                     I2C2ADR1        equ	15706	;# 
  6704   003D5B                     I2C2ADR2        equ	15707	;# 
  6705   003D5C                     I2C2ADR3        equ	15708	;# 
  6706   003D5D                     I2C2CON0        equ	15709	;# 
  6707   003D5E                     I2C2CON1        equ	15710	;# 
  6708   003D5F                     I2C2CON2        equ	15711	;# 
  6709   003D60                     I2C2ERR         equ	15712	;# 
  6710   003D61                     I2C2STAT0       equ	15713	;# 
  6711   003D62                     I2C2STAT1       equ	15714	;# 
  6712   003D63                     I2C2PIR         equ	15715	;# 
  6713   003D64                     I2C2PIE         equ	15716	;# 
  6714   003D65                     I2C2CLK         equ	15717	;# 
  6715   003D66                     I2C2BTO         equ	15718	;# 
  6716   003D6A                     I2C1RXB         equ	15722	;# 
  6717   003D6B                     I2C1TXB         equ	15723	;# 
  6718   003D6C                     I2C1CNT         equ	15724	;# 
  6719   003D6D                     I2C1ADB0        equ	15725	;# 
  6720   003D6E                     I2C1ADB1        equ	15726	;# 
  6721   003D6F                     I2C1ADR0        equ	15727	;# 
  6722   003D70                     I2C1ADR1        equ	15728	;# 
  6723   003D71                     I2C1ADR2        equ	15729	;# 
  6724   003D72                     I2C1ADR3        equ	15730	;# 
  6725   003D73                     I2C1CON0        equ	15731	;# 
  6726   003D74                     I2C1CON1        equ	15732	;# 
  6727   003D75                     I2C1CON2        equ	15733	;# 
  6728   003D76                     I2C1ERR         equ	15734	;# 
  6729   003D77                     I2C1STAT0       equ	15735	;# 
  6730   003D78                     I2C1STAT1       equ	15736	;# 
  6731   003D79                     I2C1PIR         equ	15737	;# 
  6732   003D7A                     I2C1PIE         equ	15738	;# 
  6733   003D7B                     I2C1CLK         equ	15739	;# 
  6734   003D7C                     I2C1BTO         equ	15740	;# 
  6735   003DD0                     U2RXB           equ	15824	;# 
  6736   003DD0                     U2RXBL          equ	15824	;# 
  6737   003DD2                     U2TXB           equ	15826	;# 
  6738   003DD2                     U2TXBL          equ	15826	;# 
  6739   003DD4                     U2P1            equ	15828	;# 
  6740   003DD4                     U2P1L           equ	15828	;# 
  6741   003DD6                     U2P2            equ	15830	;# 
  6742   003DD6                     U2P2L           equ	15830	;# 
  6743   003DD8                     U2P3            equ	15832	;# 
  6744   003DD8                     U2P3L           equ	15832	;# 
  6745   003DDA                     U2CON0          equ	15834	;# 
  6746   003DDB                     U2CON1          equ	15835	;# 
  6747   003DDC                     U2CON2          equ	15836	;# 
  6748   003DDD                     U2BRG           equ	15837	;# 
  6749   003DDD                     U2BRGL          equ	15837	;# 
  6750   003DDE                     U2BRGH          equ	15838	;# 
  6751   003DDF                     U2FIFO          equ	15839	;# 
  6752   003DE0                     U2UIR           equ	15840	;# 
  6753   003DE1                     U2ERRIR         equ	15841	;# 
  6754   003DE2                     U2ERRIE         equ	15842	;# 
  6755   003DE8                     U1RXB           equ	15848	;# 
  6756   003DE8                     U1RXBL          equ	15848	;# 
  6757   003DE9                     U1RXCHK         equ	15849	;# 
  6758   003DEA                     U1TXB           equ	15850	;# 
  6759   003DEA                     U1TXBL          equ	15850	;# 
  6760   003DEB                     U1TXCHK         equ	15851	;# 
  6761   003DEC                     U1P1            equ	15852	;# 
  6762   003DEC                     U1P1L           equ	15852	;# 
  6763   003DED                     U1P1H           equ	15853	;# 
  6764   003DEE                     U1P2            equ	15854	;# 
  6765   003DEE                     U1P2L           equ	15854	;# 
  6766   003DEF                     U1P2H           equ	15855	;# 
  6767   003DF0                     U1P3            equ	15856	;# 
  6768   003DF0                     U1P3L           equ	15856	;# 
  6769   003DF1                     U1P3H           equ	15857	;# 
  6770   003DF2                     U1CON0          equ	15858	;# 
  6771   003DF3                     U1CON1          equ	15859	;# 
  6772   003DF4                     U1CON2          equ	15860	;# 
  6773   003DF5                     U1BRG           equ	15861	;# 
  6774   003DF5                     U1BRGL          equ	15861	;# 
  6775   003DF6                     U1BRGH          equ	15862	;# 
  6776   003DF7                     U1FIFO          equ	15863	;# 
  6777   003DF8                     U1UIR           equ	15864	;# 
  6778   003DF9                     U1ERRIR         equ	15865	;# 
  6779   003DFA                     U1ERRIE         equ	15866	;# 
  6780   003E9C                     DAC1CON1        equ	16028	;# 
  6781   003E9E                     DAC1CON0        equ	16030	;# 
  6782   003EB8                     CM2CON0         equ	16056	;# 
  6783   003EB9                     CM2CON1         equ	16057	;# 
  6784   003EBA                     CM2NCH          equ	16058	;# 
  6785   003EBB                     CM2PCH          equ	16059	;# 
  6786   003EBC                     CM1CON0         equ	16060	;# 
  6787   003EBD                     CM1CON1         equ	16061	;# 
  6788   003EBE                     CM1NCH          equ	16062	;# 
  6789   003EBF                     CM1PCH          equ	16063	;# 
  6790   003EC0                     CMOUT           equ	16064	;# 
  6791   003EC1                     FVRCON          equ	16065	;# 
  6792   003EC3                     ZCDCON          equ	16067	;# 
  6793   003EC9                     HLVDCON0        equ	16073	;# 
  6794   003ECA                     HLVDCON1        equ	16074	;# 
  6795   003ED7                     ADCP            equ	16087	;# 
  6796   003EDE                     ADLTH           equ	16094	;# 
  6797   003EDE                     ADLTHL          equ	16094	;# 
  6798   003EDF                     ADLTHH          equ	16095	;# 
  6799   003EE0                     ADUTH           equ	16096	;# 
  6800   003EE0                     ADUTHL          equ	16096	;# 
  6801   003EE1                     ADUTHH          equ	16097	;# 
  6802   003EE2                     ADERR           equ	16098	;# 
  6803   003EE2                     ADERRL          equ	16098	;# 
  6804   003EE3                     ADERRH          equ	16099	;# 
  6805   003EE4                     ADSTPT          equ	16100	;# 
  6806   003EE4                     ADSTPTL         equ	16100	;# 
  6807   003EE5                     ADSTPTH         equ	16101	;# 
  6808   003EE6                     ADFLTR          equ	16102	;# 
  6809   003EE6                     ADFLTRL         equ	16102	;# 
  6810   003EE7                     ADFLTRH         equ	16103	;# 
  6811   003EE8                     ADACC           equ	16104	;# 
  6812   003EE8                     ADACCL          equ	16104	;# 
  6813   003EE9                     ADACCH          equ	16105	;# 
  6814   003EEA                     ADACCU          equ	16106	;# 
  6815   003EEB                     ADCNT           equ	16107	;# 
  6816   003EEC                     ADRPT           equ	16108	;# 
  6817   003EED                     ADPREV          equ	16109	;# 
  6818   003EED                     ADPREVL         equ	16109	;# 
  6819   003EEE                     ADPREVH         equ	16110	;# 
  6820   003EEF                     ADRES           equ	16111	;# 
  6821   003EEF                     ADRESL          equ	16111	;# 
  6822   003EF0                     ADRESH          equ	16112	;# 
  6823   003EF1                     ADPCH           equ	16113	;# 
  6824   003EF3                     ADACQ           equ	16115	;# 
  6825   003EF3                     ADACQL          equ	16115	;# 
  6826   003EF4                     ADACQH          equ	16116	;# 
  6827   003EF5                     ADCAP           equ	16117	;# 
  6828   003EF6                     ADPRE           equ	16118	;# 
  6829   003EF6                     ADPREL          equ	16118	;# 
  6830   003EF7                     ADPREH          equ	16119	;# 
  6831   003EF8                     ADCON0          equ	16120	;# 
  6832   003EF9                     ADCON1          equ	16121	;# 
  6833   003EFA                     ADCON2          equ	16122	;# 
  6834   003EFB                     ADCON3          equ	16123	;# 
  6835   003EFC                     ADSTAT          equ	16124	;# 
  6836   003EFD                     ADREF           equ	16125	;# 
  6837   003EFE                     ADACT           equ	16126	;# 
  6838   003EFF                     ADCLK           equ	16127	;# 
  6839   003F12                     SMT1TMR         equ	16146	;# 
  6840   003F12                     SMT1TMRL        equ	16146	;# 
  6841   003F13                     SMT1TMRH        equ	16147	;# 
  6842   003F14                     SMT1TMRU        equ	16148	;# 
  6843   003F15                     SMT1CPR         equ	16149	;# 
  6844   003F15                     SMT1CPRL        equ	16149	;# 
  6845   003F16                     SMT1CPRH        equ	16150	;# 
  6846   003F17                     SMT1CPRU        equ	16151	;# 
  6847   003F18                     SMT1CPW         equ	16152	;# 
  6848   003F18                     SMT1CPWL        equ	16152	;# 
  6849   003F19                     SMT1CPWH        equ	16153	;# 
  6850   003F1A                     SMT1CPWU        equ	16154	;# 
  6851   003F1B                     SMT1PR          equ	16155	;# 
  6852   003F1B                     SMT1PRL         equ	16155	;# 
  6853   003F1C                     SMT1PRH         equ	16156	;# 
  6854   003F1D                     SMT1PRU         equ	16157	;# 
  6855   003F1E                     SMT1CON0        equ	16158	;# 
  6856   003F1F                     SMT1CON1        equ	16159	;# 
  6857   003F20                     SMT1STAT        equ	16160	;# 
  6858   003F21                     SMT1CLK         equ	16161	;# 
  6859   003F22                     SMT1SIG         equ	16162	;# 
  6860   003F23                     SMT1WIN         equ	16163	;# 
  6861   003F38                     NCO1ACC         equ	16184	;# 
  6862   003F38                     NCO1ACCL        equ	16184	;# 
  6863   003F39                     NCO1ACCH        equ	16185	;# 
  6864   003F3A                     NCO1ACCU        equ	16186	;# 
  6865   003F3B                     NCO1INC         equ	16187	;# 
  6866   003F3B                     NCO1INCL        equ	16187	;# 
  6867   003F3C                     NCO1INCH        equ	16188	;# 
  6868   003F3D                     NCO1INCU        equ	16189	;# 
  6869   003F3E                     NCO1CON         equ	16190	;# 
  6870   003F3F                     NCO1CLK         equ	16191	;# 
  6871   003F40                     CWG3CLK         equ	16192	;# 
  6872   003F40                     CWG3CLKCON      equ	16192	;# 
  6873   003F41                     CWG3ISM         equ	16193	;# 
  6874   003F41                     CWG3DAT         equ	16193	;# 
  6875   003F42                     CWG3DBR         equ	16194	;# 
  6876   003F43                     CWG3DBF         equ	16195	;# 
  6877   003F44                     CWG3CON0        equ	16196	;# 
  6878   003F45                     CWG3CON1        equ	16197	;# 
  6879   003F46                     CWG3AS0         equ	16198	;# 
  6880   003F47                     CWG3AS1         equ	16199	;# 
  6881   003F48                     CWG3STR         equ	16200	;# 
  6882   003F49                     CWG2CLK         equ	16201	;# 
  6883   003F49                     CWG2CLKCON      equ	16201	;# 
  6884   003F4A                     CWG2ISM         equ	16202	;# 
  6885   003F4A                     CWG2DAT         equ	16202	;# 
  6886   003F4B                     CWG2DBR         equ	16203	;# 
  6887   003F4C                     CWG2DBF         equ	16204	;# 
  6888   003F4D                     CWG2CON0        equ	16205	;# 
  6889   003F4E                     CWG2CON1        equ	16206	;# 
  6890   003F4F                     CWG2AS0         equ	16207	;# 
  6891   003F50                     CWG2AS1         equ	16208	;# 
  6892   003F51                     CWG2STR         equ	16209	;# 
  6893   003F52                     CWG1CLK         equ	16210	;# 
  6894   003F52                     CWG1CLKCON      equ	16210	;# 
  6895   003F53                     CWG1ISM         equ	16211	;# 
  6896   003F53                     CWG1DAT         equ	16211	;# 
  6897   003F54                     CWG1DBR         equ	16212	;# 
  6898   003F55                     CWG1DBF         equ	16213	;# 
  6899   003F56                     CWG1CON0        equ	16214	;# 
  6900   003F57                     CWG1CON1        equ	16215	;# 
  6901   003F58                     CWG1AS0         equ	16216	;# 
  6902   003F59                     CWG1AS1         equ	16217	;# 
  6903   003F5A                     CWG1STR         equ	16218	;# 
  6904   003F5E                     CCPTMRS0        equ	16222	;# 
  6905   003F5F                     CCPTMRS1        equ	16223	;# 
  6906   003F60                     PWM8DC          equ	16224	;# 
  6907   003F60                     PWM8DCL         equ	16224	;# 
  6908   003F61                     PWM8DCH         equ	16225	;# 
  6909   003F62                     PWM8CON         equ	16226	;# 
  6910   003F64                     PWM7DC          equ	16228	;# 
  6911   003F64                     PWM7DCL         equ	16228	;# 
  6912   003F65                     PWM7DCH         equ	16229	;# 
  6913   003F66                     PWM7CON         equ	16230	;# 
  6914   003F68                     PWM6DC          equ	16232	;# 
  6915   003F68                     PWM6DCL         equ	16232	;# 
  6916   003F69                     PWM6DCH         equ	16233	;# 
  6917   003F6A                     PWM6CON         equ	16234	;# 
  6918   003F6C                     PWM5DC          equ	16236	;# 
  6919   003F6C                     PWM5DCL         equ	16236	;# 
  6920   003F6D                     PWM5DCH         equ	16237	;# 
  6921   003F6E                     PWM5CON         equ	16238	;# 
  6922   003F70                     CCPR4           equ	16240	;# 
  6923   003F70                     CCPR4L          equ	16240	;# 
  6924   003F71                     CCPR4H          equ	16241	;# 
  6925   003F72                     CCP4CON         equ	16242	;# 
  6926   003F73                     CCP4CAP         equ	16243	;# 
  6927   003F74                     CCPR3           equ	16244	;# 
  6928   003F74                     CCPR3L          equ	16244	;# 
  6929   003F75                     CCPR3H          equ	16245	;# 
  6930   003F76                     CCP3CON         equ	16246	;# 
  6931   003F77                     CCP3CAP         equ	16247	;# 
  6932   003F78                     CCPR2           equ	16248	;# 
  6933   003F78                     CCPR2L          equ	16248	;# 
  6934   003F79                     CCPR2H          equ	16249	;# 
  6935   003F7A                     CCP2CON         equ	16250	;# 
  6936   003F7B                     CCP2CAP         equ	16251	;# 
  6937   003F7C                     CCPR1           equ	16252	;# 
  6938   003F7C                     CCPR1L          equ	16252	;# 
  6939   003F7D                     CCPR1H          equ	16253	;# 
  6940   003F7E                     CCP1CON         equ	16254	;# 
  6941   003F7F                     CCP1CAP         equ	16255	;# 
  6942   003F92                     T6TMR           equ	16274	;# 
  6943   003F92                     TMR6            equ	16274	;# 
  6944   003F93                     T6PR            equ	16275	;# 
  6945   003F93                     PR6             equ	16275	;# 
  6946   003F94                     T6CON           equ	16276	;# 
  6947   003F95                     T6HLT           equ	16277	;# 
  6948   003F96                     T6CLKCON        equ	16278	;# 
  6949   003F96                     T6CLK           equ	16278	;# 
  6950   003F97                     T6RST           equ	16279	;# 
  6951   003F98                     TMR5            equ	16280	;# 
  6952   003F98                     TMR5L           equ	16280	;# 
  6953   003F99                     TMR5H           equ	16281	;# 
  6954   003F9A                     T5CON           equ	16282	;# 
  6955   003F9A                     TMR5CON         equ	16282	;# 
  6956   003F9B                     T5GCON          equ	16283	;# 
  6957   003F9B                     TMR5GCON        equ	16283	;# 
  6958   003F9C                     T5GATE          equ	16284	;# 
  6959   003F9C                     TMR5GATE        equ	16284	;# 
  6960   003F9D                     T5CLK           equ	16285	;# 
  6961   003F9D                     TMR5CLK         equ	16285	;# 
  6962   003F9D                     PR5             equ	16285	;# 
  6963   003F9E                     T4TMR           equ	16286	;# 
  6964   003F9E                     TMR4            equ	16286	;# 
  6965   003F9F                     T4PR            equ	16287	;# 
  6966   003F9F                     PR4             equ	16287	;# 
  6967   003FA0                     T4CON           equ	16288	;# 
  6968   003FA1                     T4HLT           equ	16289	;# 
  6969   003FA2                     T4CLKCON        equ	16290	;# 
  6970   003FA2                     T4CLK           equ	16290	;# 
  6971   003FA3                     T4RST           equ	16291	;# 
  6972   003FA4                     TMR3            equ	16292	;# 
  6973   003FA4                     TMR3L           equ	16292	;# 
  6974   003FA5                     TMR3H           equ	16293	;# 
  6975   003FA6                     T3CON           equ	16294	;# 
  6976   003FA6                     TMR3CON         equ	16294	;# 
  6977   003FA7                     T3GCON          equ	16295	;# 
  6978   003FA7                     TMR3GCON        equ	16295	;# 
  6979   003FA8                     T3GATE          equ	16296	;# 
  6980   003FA8                     TMR3GATE        equ	16296	;# 
  6981   003FA9                     T3CLK           equ	16297	;# 
  6982   003FA9                     TMR3CLK         equ	16297	;# 
  6983   003FA9                     PR3             equ	16297	;# 
  6984   003FAA                     T2TMR           equ	16298	;# 
  6985   003FAA                     TMR2            equ	16298	;# 
  6986   003FAB                     T2PR            equ	16299	;# 
  6987   003FAB                     PR2             equ	16299	;# 
  6988   003FAC                     T2CON           equ	16300	;# 
  6989   003FAD                     T2HLT           equ	16301	;# 
  6990   003FAE                     T2CLKCON        equ	16302	;# 
  6991   003FAE                     T2CLK           equ	16302	;# 
  6992   003FAF                     T2RST           equ	16303	;# 
  6993   003FB0                     TMR1            equ	16304	;# 
  6994   003FB0                     TMR1L           equ	16304	;# 
  6995   003FB1                     TMR1H           equ	16305	;# 
  6996   003FB2                     T1CON           equ	16306	;# 
  6997   003FB2                     TMR1CON         equ	16306	;# 
  6998   003FB3                     T1GCON          equ	16307	;# 
  6999   003FB3                     TMR1GCON        equ	16307	;# 
  7000   003FB4                     T1GATE          equ	16308	;# 
  7001   003FB4                     TMR1GATE        equ	16308	;# 
  7002   003FB5                     T1CLK           equ	16309	;# 
  7003   003FB5                     TMR1CLK         equ	16309	;# 
  7004   003FB5                     PR1             equ	16309	;# 
  7005   003FB6                     TMR0L           equ	16310	;# 
  7006   003FB6                     TMR0            equ	16310	;# 
  7007   003FB7                     TMR0H           equ	16311	;# 
  7008   003FB7                     PR0             equ	16311	;# 
  7009   003FB8                     T0CON0          equ	16312	;# 
  7010   003FB9                     T0CON1          equ	16313	;# 
  7011   003FBA                     LATA            equ	16314	;# 
  7012   003FBB                     LATB            equ	16315	;# 
  7013   003FBC                     LATC            equ	16316	;# 
  7014   003FBD                     LATD            equ	16317	;# 
  7015   003FBE                     LATE            equ	16318	;# 
  7016   003FBF                     LATF            equ	16319	;# 
  7017   003FC2                     TRISA           equ	16322	;# 
  7018   003FC3                     TRISB           equ	16323	;# 
  7019   003FC4                     TRISC           equ	16324	;# 
  7020   003FC5                     TRISD           equ	16325	;# 
  7021   003FC6                     TRISE           equ	16326	;# 
  7022   003FC7                     TRISF           equ	16327	;# 
  7023   003FCA                     PORTA           equ	16330	;# 
  7024   003FCB                     PORTB           equ	16331	;# 
  7025   003FCC                     PORTC           equ	16332	;# 
  7026   003FCD                     PORTD           equ	16333	;# 
  7027   003FCE                     PORTE           equ	16334	;# 
  7028   003FCF                     PORTF           equ	16335	;# 
  7029   003FD2                     INTCON0         equ	16338	;# 
  7030   003FD3                     INTCON1         equ	16339	;# 
  7031   003FD4                     IVTLOCK         equ	16340	;# 
  7032   003FD5                     IVTBASE         equ	16341	;# 
  7033   003FD5                     IVTBASEL        equ	16341	;# 
  7034   003FD6                     IVTBASEH        equ	16342	;# 
  7035   003FD7                     IVTBASEU        equ	16343	;# 
  7036   003FD8                     STATUS          equ	16344	;# 
  7037   003FD9                     FSR2            equ	16345	;# 
  7038   003FD9                     FSR2L           equ	16345	;# 
  7039   003FDA                     FSR2H           equ	16346	;# 
  7040   003FDB                     PLUSW2          equ	16347	;# 
  7041   003FDC                     PREINC2         equ	16348	;# 
  7042   003FDD                     POSTDEC2        equ	16349	;# 
  7043   003FDE                     POSTINC2        equ	16350	;# 
  7044   003FDF                     INDF2           equ	16351	;# 
  7045   003FE0                     BSR             equ	16352	;# 
  7046   003FE1                     FSR1            equ	16353	;# 
  7047   003FE1                     FSR1L           equ	16353	;# 
  7048   003FE2                     FSR1H           equ	16354	;# 
  7049   003FE3                     PLUSW1          equ	16355	;# 
  7050   003FE4                     PREINC1         equ	16356	;# 
  7051   003FE5                     POSTDEC1        equ	16357	;# 
  7052   003FE6                     POSTINC1        equ	16358	;# 
  7053   003FE7                     INDF1           equ	16359	;# 
  7054   003FE8                     WREG            equ	16360	;# 
  7055   003FE9                     FSR0            equ	16361	;# 
  7056   003FE9                     FSR0L           equ	16361	;# 
  7057   003FEA                     FSR0H           equ	16362	;# 
  7058   003FEB                     PLUSW0          equ	16363	;# 
  7059   003FEC                     PREINC0         equ	16364	;# 
  7060   003FED                     POSTDEC0        equ	16365	;# 
  7061   003FEE                     POSTINC0        equ	16366	;# 
  7062   003FEF                     INDF0           equ	16367	;# 
  7063   003FF0                     PCON0           equ	16368	;# 
  7064   003FF1                     PCON1           equ	16369	;# 
  7065   003FF3                     PROD            equ	16371	;# 
  7066   003FF3                     PRODL           equ	16371	;# 
  7067   003FF4                     PRODH           equ	16372	;# 
  7068   003FF5                     TABLAT          equ	16373	;# 
  7069   003FF6                     TBLPTR          equ	16374	;# 
  7070   003FF6                     TBLPTRL         equ	16374	;# 
  7071   003FF7                     TBLPTRH         equ	16375	;# 
  7072   003FF8                     TBLPTRU         equ	16376	;# 
  7073   003FF9                     PCLAT           equ	16377	;# 
  7074   003FF9                     PCL             equ	16377	;# 
  7075   003FFA                     PCLATH          equ	16378	;# 
  7076   003FFB                     PCLATU          equ	16379	;# 
  7077   003FFC                     STKPTR          equ	16380	;# 
  7078   003FFD                     TOS             equ	16381	;# 
  7079   003FFD                     TOSL            equ	16381	;# 
  7080   003FFE                     TOSH            equ	16382	;# 
  7081   003FFF                     TOSU            equ	16383	;# 
  7082   003880                     STATUS_CSHAD    equ	14464	;# 
  7083   003881                     WREG_CSHAD      equ	14465	;# 
  7084   003882                     BSR_CSHAD       equ	14466	;# 
  7085   003883                     SHADCON         equ	14467	;# 
  7086   003884                     STATUS_SHAD     equ	14468	;# 
  7087   003885                     WREG_SHAD       equ	14469	;# 
  7088   003886                     BSR_SHAD        equ	14470	;# 
  7089   003887                     PCLATH_SHAD     equ	14471	;# 
  7090   003888                     PCLATU_SHAD     equ	14472	;# 
  7091   003889                     FSR0SH          equ	14473	;# 
  7092   003889                     FSR0L_SHAD      equ	14473	;# 
  7093   00388A                     FSR0H_SHAD      equ	14474	;# 
  7094   00388B                     FSR1SH          equ	14475	;# 
  7095   00388B                     FSR1L_SHAD      equ	14475	;# 
  7096   00388C                     FSR1H_SHAD      equ	14476	;# 
  7097   00388D                     FSR2SH          equ	14477	;# 
  7098   00388D                     FSR2L_SHAD      equ	14477	;# 
  7099   00388E                     FSR2H_SHAD      equ	14478	;# 
  7100   00388F                     PRODSH          equ	14479	;# 
  7101   00388F                     PRODL_SHAD      equ	14479	;# 
  7102   003890                     PRODH_SHAD      equ	14480	;# 
  7103   00389D                     IVTADL          equ	14493	;# 
  7104   00389E                     IVTADH          equ	14494	;# 
  7105   00389F                     IVTADU          equ	14495	;# 
  7106   00395B                     WDTCON0         equ	14683	;# 
  7107   00395C                     WDTCON1         equ	14684	;# 
  7108   00395D                     WDTPSL          equ	14685	;# 
  7109   00395E                     WDTPSH          equ	14686	;# 
  7110   00395F                     WDTTMR          equ	14687	;# 
  7111   003960                     CRCDATA         equ	14688	;# 
  7112   003960                     CRCDATL         equ	14688	;# 
  7113   003961                     CRCDATH         equ	14689	;# 
  7114   003962                     CRCACC          equ	14690	;# 
  7115   003962                     CRCACCL         equ	14690	;# 
  7116   003963                     CRCACCH         equ	14691	;# 
  7117   003964                     CRCSHFT         equ	14692	;# 
  7118   003964                     CRCSHIFTL       equ	14692	;# 
  7119   003965                     CRCSHIFTH       equ	14693	;# 
  7120   003966                     CRCXOR          equ	14694	;# 
  7121   003966                     CRCXORL         equ	14694	;# 
  7122   003967                     CRCXORH         equ	14695	;# 
  7123   003968                     CRCCON0         equ	14696	;# 
  7124   003969                     CRCCON1         equ	14697	;# 
  7125   003976                     SCANLADR        equ	14710	;# 
  7126   003976                     SCANLADRL       equ	14710	;# 
  7127   003977                     SCANLADRH       equ	14711	;# 
  7128   003978                     SCANLADRU       equ	14712	;# 
  7129   003979                     SCANHADR        equ	14713	;# 
  7130   003979                     SCANHADRL       equ	14713	;# 
  7131   00397A                     SCANHADRH       equ	14714	;# 
  7132   00397B                     SCANHADRU       equ	14715	;# 
  7133   00397C                     SCANCON0        equ	14716	;# 
  7134   00397D                     SCANTRIG        equ	14717	;# 
  7135   003980                     IPR0            equ	14720	;# 
  7136   003981                     IPR1            equ	14721	;# 
  7137   003982                     IPR2            equ	14722	;# 
  7138   003983                     IPR3            equ	14723	;# 
  7139   003984                     IPR4            equ	14724	;# 
  7140   003985                     IPR5            equ	14725	;# 
  7141   003986                     IPR6            equ	14726	;# 
  7142   003987                     IPR7            equ	14727	;# 
  7143   003988                     IPR8            equ	14728	;# 
  7144   003989                     IPR9            equ	14729	;# 
  7145   00398A                     IPR10           equ	14730	;# 
  7146   003990                     PIE0            equ	14736	;# 
  7147   003991                     PIE1            equ	14737	;# 
  7148   003992                     PIE2            equ	14738	;# 
  7149   003993                     PIE3            equ	14739	;# 
  7150   003994                     PIE4            equ	14740	;# 
  7151   003995                     PIE5            equ	14741	;# 
  7152   003996                     PIE6            equ	14742	;# 
  7153   003997                     PIE7            equ	14743	;# 
  7154   003998                     PIE8            equ	14744	;# 
  7155   003999                     PIE9            equ	14745	;# 
  7156   00399A                     PIE10           equ	14746	;# 
  7157   0039A0                     PIR0            equ	14752	;# 
  7158   0039A1                     PIR1            equ	14753	;# 
  7159   0039A2                     PIR2            equ	14754	;# 
  7160   0039A3                     PIR3            equ	14755	;# 
  7161   0039A4                     PIR4            equ	14756	;# 
  7162   0039A5                     PIR5            equ	14757	;# 
  7163   0039A6                     PIR6            equ	14758	;# 
  7164   0039A7                     PIR7            equ	14759	;# 
  7165   0039A8                     PIR8            equ	14760	;# 
  7166   0039A9                     PIR9            equ	14761	;# 
  7167   0039AA                     PIR10           equ	14762	;# 
  7168   0039C0                     PMD0            equ	14784	;# 
  7169   0039C1                     PMD1            equ	14785	;# 
  7170   0039C2                     PMD2            equ	14786	;# 
  7171   0039C3                     PMD3            equ	14787	;# 
  7172   0039C4                     PMD4            equ	14788	;# 
  7173   0039C5                     PMD5            equ	14789	;# 
  7174   0039C6                     PMD6            equ	14790	;# 
  7175   0039C7                     PMD7            equ	14791	;# 
  7176   0039D0                     BORCON          equ	14800	;# 
  7177   0039D1                     VREGCON         equ	14801	;# 
  7178   0039D8                     CPUDOZE         equ	14808	;# 
  7179   0039D9                     OSCCON1         equ	14809	;# 
  7180   0039DA                     OSCCON2         equ	14810	;# 
  7181   0039DB                     OSCCON3         equ	14811	;# 
  7182   0039DC                     OSCSTAT         equ	14812	;# 
  7183   0039DC                     OSCSTAT1        equ	14812	;# 
  7184   0039DD                     OSCEN           equ	14813	;# 
  7185   0039DE                     OSCTUNE         equ	14814	;# 
  7186   0039DF                     OSCFRQ          equ	14815	;# 
  7187   0039E0                     NVMADRL         equ	14816	;# 
  7188   0039E1                     NVMADRH         equ	14817	;# 
  7189   0039E3                     NVMDAT          equ	14819	;# 
  7190   0039E5                     NVMCON1         equ	14821	;# 
  7191   0039E6                     NVMCON2         equ	14822	;# 
  7192   0039EF                     PRLOCK          equ	14831	;# 
  7193   0039F1                     ISRPR           equ	14833	;# 
  7194   0039F2                     MAINPR          equ	14834	;# 
  7195   0039F3                     DMA1PR          equ	14835	;# 
  7196   0039F4                     DMA2PR          equ	14836	;# 
  7197   0039F7                     SCANPR          equ	14839	;# 
  7198   003A00                     RA0PPS          equ	14848	;# 
  7199   003A01                     RA1PPS          equ	14849	;# 
  7200   003A02                     RA2PPS          equ	14850	;# 
  7201   003A03                     RA3PPS          equ	14851	;# 
  7202   003A04                     RA4PPS          equ	14852	;# 
  7203   003A05                     RA5PPS          equ	14853	;# 
  7204   003A06                     RA6PPS          equ	14854	;# 
  7205   003A07                     RA7PPS          equ	14855	;# 
  7206   003A08                     RB0PPS          equ	14856	;# 
  7207   003A09                     RB1PPS          equ	14857	;# 
  7208   003A0A                     RB2PPS          equ	14858	;# 
  7209   003A0B                     RB3PPS          equ	14859	;# 
  7210   003A0C                     RB4PPS          equ	14860	;# 
  7211   003A0D                     RB5PPS          equ	14861	;# 
  7212   003A0E                     RB6PPS          equ	14862	;# 
  7213   003A0F                     RB7PPS          equ	14863	;# 
  7214   003A10                     RC0PPS          equ	14864	;# 
  7215   003A11                     RC1PPS          equ	14865	;# 
  7216   003A12                     RC2PPS          equ	14866	;# 
  7217   003A13                     RC3PPS          equ	14867	;# 
  7218   003A14                     RC4PPS          equ	14868	;# 
  7219   003A15                     RC5PPS          equ	14869	;# 
  7220   003A16                     RC6PPS          equ	14870	;# 
  7221   003A17                     RC7PPS          equ	14871	;# 
  7222   003A18                     RD0PPS          equ	14872	;# 
  7223   003A19                     RD1PPS          equ	14873	;# 
  7224   003A1A                     RD2PPS          equ	14874	;# 
  7225   003A1B                     RD3PPS          equ	14875	;# 
  7226   003A1C                     RD4PPS          equ	14876	;# 
  7227   003A1D                     RD5PPS          equ	14877	;# 
  7228   003A1E                     RD6PPS          equ	14878	;# 
  7229   003A1F                     RD7PPS          equ	14879	;# 
  7230   003A20                     RE0PPS          equ	14880	;# 
  7231   003A21                     RE1PPS          equ	14881	;# 
  7232   003A22                     RE2PPS          equ	14882	;# 
  7233   003A28                     RF0PPS          equ	14888	;# 
  7234   003A29                     RF1PPS          equ	14889	;# 
  7235   003A2A                     RF2PPS          equ	14890	;# 
  7236   003A2B                     RF3PPS          equ	14891	;# 
  7237   003A2C                     RF4PPS          equ	14892	;# 
  7238   003A2D                     RF5PPS          equ	14893	;# 
  7239   003A2E                     RF6PPS          equ	14894	;# 
  7240   003A2F                     RF7PPS          equ	14895	;# 
  7241   003A40                     ANSELA          equ	14912	;# 
  7242   003A41                     WPUA            equ	14913	;# 
  7243   003A42                     ODCONA          equ	14914	;# 
  7244   003A43                     SLRCONA         equ	14915	;# 
  7245   003A44                     INLVLA          equ	14916	;# 
  7246   003A45                     IOCAP           equ	14917	;# 
  7247   003A46                     IOCAN           equ	14918	;# 
  7248   003A47                     IOCAF           equ	14919	;# 
  7249   003A50                     ANSELB          equ	14928	;# 
  7250   003A51                     WPUB            equ	14929	;# 
  7251   003A52                     ODCONB          equ	14930	;# 
  7252   003A53                     SLRCONB         equ	14931	;# 
  7253   003A54                     INLVLB          equ	14932	;# 
  7254   003A55                     IOCBP           equ	14933	;# 
  7255   003A56                     IOCBN           equ	14934	;# 
  7256   003A57                     IOCBF           equ	14935	;# 
  7257   003A5A                     RB1I2C          equ	14938	;# 
  7258   003A5B                     RB2I2C          equ	14939	;# 
  7259   003A60                     ANSELC          equ	14944	;# 
  7260   003A61                     WPUC            equ	14945	;# 
  7261   003A62                     ODCONC          equ	14946	;# 
  7262   003A63                     SLRCONC         equ	14947	;# 
  7263   003A64                     INLVLC          equ	14948	;# 
  7264   003A65                     IOCCP           equ	14949	;# 
  7265   003A66                     IOCCN           equ	14950	;# 
  7266   003A67                     IOCCF           equ	14951	;# 
  7267   003A6A                     RC3I2C          equ	14954	;# 
  7268   003A6B                     RC4I2C          equ	14955	;# 
  7269   003A70                     ANSELD          equ	14960	;# 
  7270   003A71                     WPUD            equ	14961	;# 
  7271   003A72                     ODCOND          equ	14962	;# 
  7272   003A73                     SLRCOND         equ	14963	;# 
  7273   003A74                     INLVLD          equ	14964	;# 
  7274   003A7A                     RD0I2C          equ	14970	;# 
  7275   003A7B                     RD1I2C          equ	14971	;# 
  7276   003A80                     ANSELE          equ	14976	;# 
  7277   003A81                     WPUE            equ	14977	;# 
  7278   003A82                     ODCONE          equ	14978	;# 
  7279   003A83                     SLRCONE         equ	14979	;# 
  7280   003A84                     INLVLE          equ	14980	;# 
  7281   003A85                     IOCEP           equ	14981	;# 
  7282   003A86                     IOCEN           equ	14982	;# 
  7283   003A87                     IOCEF           equ	14983	;# 
  7284   003A90                     ANSELF          equ	14992	;# 
  7285   003A91                     WPUF            equ	14993	;# 
  7286   003A92                     ODCONF          equ	14994	;# 
  7287   003A93                     SLRCONF         equ	14995	;# 
  7288   003A94                     INLVLF          equ	14996	;# 
  7289   003ABF                     PPSLOCK         equ	15039	;# 
  7290   003AC0                     INT0PPS         equ	15040	;# 
  7291   003AC1                     INT1PPS         equ	15041	;# 
  7292   003AC2                     INT2PPS         equ	15042	;# 
  7293   003AC3                     T0CKIPPS        equ	15043	;# 
  7294   003AC4                     T1CKIPPS        equ	15044	;# 
  7295   003AC5                     T1GPPS          equ	15045	;# 
  7296   003AC6                     T3CKIPPS        equ	15046	;# 
  7297   003AC7                     T3GPPS          equ	15047	;# 
  7298   003AC8                     T5CKIPPS        equ	15048	;# 
  7299   003AC9                     T5GPPS          equ	15049	;# 
  7300   003ACA                     T2INPPS         equ	15050	;# 
  7301   003ACB                     T4INPPS         equ	15051	;# 
  7302   003ACC                     T6INPPS         equ	15052	;# 
  7303   003ACD                     CCP1PPS         equ	15053	;# 
  7304   003ACE                     CCP2PPS         equ	15054	;# 
  7305   003ACF                     CCP3PPS         equ	15055	;# 
  7306   003AD0                     CCP4PPS         equ	15056	;# 
  7307   003AD1                     SMT1WINPPS      equ	15057	;# 
  7308   003AD2                     SMT1SIGPPS      equ	15058	;# 
  7309   003AD3                     CWG1INPPS       equ	15059	;# 
  7310   003AD4                     CWG2INPPS       equ	15060	;# 
  7311   003AD5                     CWG3INPPS       equ	15061	;# 
  7312   003AD6                     MD1CARLPPS      equ	15062	;# 
  7313   003AD7                     MD1CARHPPS      equ	15063	;# 
  7314   003AD8                     MD1SRCPPS       equ	15064	;# 
  7315   003AD9                     CLCIN0PPS       equ	15065	;# 
  7316   003ADA                     CLCIN1PPS       equ	15066	;# 
  7317   003ADB                     CLCIN2PPS       equ	15067	;# 
  7318   003ADC                     CLCIN3PPS       equ	15068	;# 
  7319   003ADD                     ADACTPPS        equ	15069	;# 
  7320   003ADE                     SPI1SCKPPS      equ	15070	;# 
  7321   003ADF                     SPI1SDIPPS      equ	15071	;# 
  7322   003AE0                     SPI1SSPPS       equ	15072	;# 
  7323   003AE1                     I2C1SCLPPS      equ	15073	;# 
  7324   003AE2                     I2C1SDAPPS      equ	15074	;# 
  7325   003AE3                     I2C2SCLPPS      equ	15075	;# 
  7326   003AE4                     I2C2SDAPPS      equ	15076	;# 
  7327   003AE5                     U1RXPPS         equ	15077	;# 
  7328   003AE6                     U1CTSPPS        equ	15078	;# 
  7329   003AE8                     U2RXPPS         equ	15080	;# 
  7330   003AE9                     U2CTSPPS        equ	15081	;# 
  7331   003BC9                     DMA2BUF         equ	15305	;# 
  7332   003BCA                     DMA2DCNT        equ	15306	;# 
  7333   003BCA                     DMA2DCNTL       equ	15306	;# 
  7334   003BCB                     DMA2DCNTH       equ	15307	;# 
  7335   003BCC                     DMA2DPTR        equ	15308	;# 
  7336   003BCC                     DMA2DPTRL       equ	15308	;# 
  7337   003BCD                     DMA2DPTRH       equ	15309	;# 
  7338   003BCE                     DMA2DSZ         equ	15310	;# 
  7339   003BCE                     DMA2DSZL        equ	15310	;# 
  7340   003BCF                     DMA2DSZH        equ	15311	;# 
  7341   003BD0                     DMA2DSA         equ	15312	;# 
  7342   003BD0                     DMA2DSAL        equ	15312	;# 
  7343   003BD1                     DMA2DSAH        equ	15313	;# 
  7344   003BD2                     DMA2SCNT        equ	15314	;# 
  7345   003BD2                     DMA2SCNTL       equ	15314	;# 
  7346   003BD3                     DMA2SCNTH       equ	15315	;# 
  7347   003BD4                     DMA2SPTR        equ	15316	;# 
  7348   003BD4                     DMA2SPTRL       equ	15316	;# 
  7349   003BD5                     DMA2SPTRH       equ	15317	;# 
  7350   003BD6                     DMA2SPTRU       equ	15318	;# 
  7351   003BD7                     DMA2SSZ         equ	15319	;# 
  7352   003BD7                     DMA2SSZL        equ	15319	;# 
  7353   003BD8                     DMA2SSZH        equ	15320	;# 
  7354   003BD9                     DMA2SSA         equ	15321	;# 
  7355   003BD9                     DMA2SSAL        equ	15321	;# 
  7356   003BDA                     DMA2SSAH        equ	15322	;# 
  7357   003BDB                     DMA2SSAU        equ	15323	;# 
  7358   003BDC                     DMA2CON0        equ	15324	;# 
  7359   003BDD                     DMA2CON1        equ	15325	;# 
  7360   003BDE                     DMA2AIRQ        equ	15326	;# 
  7361   003BDF                     DMA2SIRQ        equ	15327	;# 
  7362   003BE9                     DMA1BUF         equ	15337	;# 
  7363   003BEA                     DMA1DCNT        equ	15338	;# 
  7364   003BEA                     DMA1DCNTL       equ	15338	;# 
  7365   003BEB                     DMA1DCNTH       equ	15339	;# 
  7366   003BEC                     DMA1DPTR        equ	15340	;# 
  7367   003BEC                     DMA1DPTRL       equ	15340	;# 
  7368   003BED                     DMA1DPTRH       equ	15341	;# 
  7369   003BEE                     DMA1DSZ         equ	15342	;# 
  7370   003BEE                     DMA1DSZL        equ	15342	;# 
  7371   003BEF                     DMA1DSZH        equ	15343	;# 
  7372   003BF0                     DMA1DSA         equ	15344	;# 
  7373   003BF0                     DMA1DSAL        equ	15344	;# 
  7374   003BF1                     DMA1DSAH        equ	15345	;# 
  7375   003BF2                     DMA1SCNT        equ	15346	;# 
  7376   003BF2                     DMA1SCNTL       equ	15346	;# 
  7377   003BF3                     DMA1SCNTH       equ	15347	;# 
  7378   003BF4                     DMA1SPTR        equ	15348	;# 
  7379   003BF4                     DMA1SPTRL       equ	15348	;# 
  7380   003BF5                     DMA1SPTRH       equ	15349	;# 
  7381   003BF6                     DMA1SPTRU       equ	15350	;# 
  7382   003BF7                     DMA1SSZ         equ	15351	;# 
  7383   003BF7                     DMA1SSZL        equ	15351	;# 
  7384   003BF8                     DMA1SSZH        equ	15352	;# 
  7385   003BF9                     DMA1SSA         equ	15353	;# 
  7386   003BF9                     DMA1SSAL        equ	15353	;# 
  7387   003BFA                     DMA1SSAH        equ	15354	;# 
  7388   003BFB                     DMA1SSAU        equ	15355	;# 
  7389   003BFC                     DMA1CON0        equ	15356	;# 
  7390   003BFD                     DMA1CON1        equ	15357	;# 
  7391   003BFE                     DMA1AIRQ        equ	15358	;# 
  7392   003BFF                     DMA1SIRQ        equ	15359	;# 
  7393   003C56                     CLC4CON         equ	15446	;# 
  7394   003C57                     CLC4POL         equ	15447	;# 
  7395   003C58                     CLC4SEL0        equ	15448	;# 
  7396   003C59                     CLC4SEL1        equ	15449	;# 
  7397   003C5A                     CLC4SEL2        equ	15450	;# 
  7398   003C5B                     CLC4SEL3        equ	15451	;# 
  7399   003C5C                     CLC4GLS0        equ	15452	;# 
  7400   003C5D                     CLC4GLS1        equ	15453	;# 
  7401   003C5E                     CLC4GLS2        equ	15454	;# 
  7402   003C5F                     CLC4GLS3        equ	15455	;# 
  7403   003C60                     CLC3CON         equ	15456	;# 
  7404   003C61                     CLC3POL         equ	15457	;# 
  7405   003C62                     CLC3SEL0        equ	15458	;# 
  7406   003C63                     CLC3SEL1        equ	15459	;# 
  7407   003C64                     CLC3SEL2        equ	15460	;# 
  7408   003C65                     CLC3SEL3        equ	15461	;# 
  7409   003C66                     CLC3GLS0        equ	15462	;# 
  7410   003C67                     CLC3GLS1        equ	15463	;# 
  7411   003C68                     CLC3GLS2        equ	15464	;# 
  7412   003C69                     CLC3GLS3        equ	15465	;# 
  7413   003C6A                     CLC2CON         equ	15466	;# 
  7414   003C6B                     CLC2POL         equ	15467	;# 
  7415   003C6C                     CLC2SEL0        equ	15468	;# 
  7416   003C6D                     CLC2SEL1        equ	15469	;# 
  7417   003C6E                     CLC2SEL2        equ	15470	;# 
  7418   003C6F                     CLC2SEL3        equ	15471	;# 
  7419   003C70                     CLC2GLS0        equ	15472	;# 
  7420   003C71                     CLC2GLS1        equ	15473	;# 
  7421   003C72                     CLC2GLS2        equ	15474	;# 
  7422   003C73                     CLC2GLS3        equ	15475	;# 
  7423   003C74                     CLC1CON         equ	15476	;# 
  7424   003C75                     CLC1POL         equ	15477	;# 
  7425   003C76                     CLC1SEL0        equ	15478	;# 
  7426   003C77                     CLC1SEL1        equ	15479	;# 
  7427   003C78                     CLC1SEL2        equ	15480	;# 
  7428   003C79                     CLC1SEL3        equ	15481	;# 
  7429   003C7A                     CLC1GLS0        equ	15482	;# 
  7430   003C7B                     CLC1GLS1        equ	15483	;# 
  7431   003C7C                     CLC1GLS2        equ	15484	;# 
  7432   003C7D                     CLC1GLS3        equ	15485	;# 
  7433   003C7E                     CLCDATA0        equ	15486	;# 
  7434   003CE5                     CLKRCON         equ	15589	;# 
  7435   003CE6                     CLKRCLK         equ	15590	;# 
  7436   003CFA                     MD1CON0         equ	15610	;# 
  7437   003CFB                     MD1CON1         equ	15611	;# 
  7438   003CFC                     MD1SRC          equ	15612	;# 
  7439   003CFD                     MD1CARL         equ	15613	;# 
  7440   003CFE                     MD1CARH         equ	15614	;# 
  7441   003D10                     SPI1RXB         equ	15632	;# 
  7442   003D11                     SPI1TXB         equ	15633	;# 
  7443   003D12                     SPI1TCNT        equ	15634	;# 
  7444   003D12                     SPI1TCNTL       equ	15634	;# 
  7445   003D13                     SPI1TCNTH       equ	15635	;# 
  7446   003D14                     SPI1CON0        equ	15636	;# 
  7447   003D15                     SPI1CON1        equ	15637	;# 
  7448   003D16                     SPI1CON2        equ	15638	;# 
  7449   003D17                     SPI1STATUS      equ	15639	;# 
  7450   003D18                     SPI1TWIDTH      equ	15640	;# 
  7451   003D19                     SPI1BAUD        equ	15641	;# 
  7452   003D1A                     SPI1INTF        equ	15642	;# 
  7453   003D1B                     SPI1INTE        equ	15643	;# 
  7454   003D1C                     SPI1CLK         equ	15644	;# 
  7455   003D54                     I2C2RXB         equ	15700	;# 
  7456   003D55                     I2C2TXB         equ	15701	;# 
  7457   003D56                     I2C2CNT         equ	15702	;# 
  7458   003D57                     I2C2ADB0        equ	15703	;# 
  7459   003D58                     I2C2ADB1        equ	15704	;# 
  7460   003D59                     I2C2ADR0        equ	15705	;# 
  7461   003D5A                     I2C2ADR1        equ	15706	;# 
  7462   003D5B                     I2C2ADR2        equ	15707	;# 
  7463   003D5C                     I2C2ADR3        equ	15708	;# 
  7464   003D5D                     I2C2CON0        equ	15709	;# 
  7465   003D5E                     I2C2CON1        equ	15710	;# 
  7466   003D5F                     I2C2CON2        equ	15711	;# 
  7467   003D60                     I2C2ERR         equ	15712	;# 
  7468   003D61                     I2C2STAT0       equ	15713	;# 
  7469   003D62                     I2C2STAT1       equ	15714	;# 
  7470   003D63                     I2C2PIR         equ	15715	;# 
  7471   003D64                     I2C2PIE         equ	15716	;# 
  7472   003D65                     I2C2CLK         equ	15717	;# 
  7473   003D66                     I2C2BTO         equ	15718	;# 
  7474   003D6A                     I2C1RXB         equ	15722	;# 
  7475   003D6B                     I2C1TXB         equ	15723	;# 
  7476   003D6C                     I2C1CNT         equ	15724	;# 
  7477   003D6D                     I2C1ADB0        equ	15725	;# 
  7478   003D6E                     I2C1ADB1        equ	15726	;# 
  7479   003D6F                     I2C1ADR0        equ	15727	;# 
  7480   003D70                     I2C1ADR1        equ	15728	;# 
  7481   003D71                     I2C1ADR2        equ	15729	;# 
  7482   003D72                     I2C1ADR3        equ	15730	;# 
  7483   003D73                     I2C1CON0        equ	15731	;# 
  7484   003D74                     I2C1CON1        equ	15732	;# 
  7485   003D75                     I2C1CON2        equ	15733	;# 
  7486   003D76                     I2C1ERR         equ	15734	;# 
  7487   003D77                     I2C1STAT0       equ	15735	;# 
  7488   003D78                     I2C1STAT1       equ	15736	;# 
  7489   003D79                     I2C1PIR         equ	15737	;# 
  7490   003D7A                     I2C1PIE         equ	15738	;# 
  7491   003D7B                     I2C1CLK         equ	15739	;# 
  7492   003D7C                     I2C1BTO         equ	15740	;# 
  7493   003DD0                     U2RXB           equ	15824	;# 
  7494   003DD0                     U2RXBL          equ	15824	;# 
  7495   003DD2                     U2TXB           equ	15826	;# 
  7496   003DD2                     U2TXBL          equ	15826	;# 
  7497   003DD4                     U2P1            equ	15828	;# 
  7498   003DD4                     U2P1L           equ	15828	;# 
  7499   003DD6                     U2P2            equ	15830	;# 
  7500   003DD6                     U2P2L           equ	15830	;# 
  7501   003DD8                     U2P3            equ	15832	;# 
  7502   003DD8                     U2P3L           equ	15832	;# 
  7503   003DDA                     U2CON0          equ	15834	;# 
  7504   003DDB                     U2CON1          equ	15835	;# 
  7505   003DDC                     U2CON2          equ	15836	;# 
  7506   003DDD                     U2BRG           equ	15837	;# 
  7507   003DDD                     U2BRGL          equ	15837	;# 
  7508   003DDE                     U2BRGH          equ	15838	;# 
  7509   003DDF                     U2FIFO          equ	15839	;# 
  7510   003DE0                     U2UIR           equ	15840	;# 
  7511   003DE1                     U2ERRIR         equ	15841	;# 
  7512   003DE2                     U2ERRIE         equ	15842	;# 
  7513   003DE8                     U1RXB           equ	15848	;# 
  7514   003DE8                     U1RXBL          equ	15848	;# 
  7515   003DE9                     U1RXCHK         equ	15849	;# 
  7516   003DEA                     U1TXB           equ	15850	;# 
  7517   003DEA                     U1TXBL          equ	15850	;# 
  7518   003DEB                     U1TXCHK         equ	15851	;# 
  7519   003DEC                     U1P1            equ	15852	;# 
  7520   003DEC                     U1P1L           equ	15852	;# 
  7521   003DED                     U1P1H           equ	15853	;# 
  7522   003DEE                     U1P2            equ	15854	;# 
  7523   003DEE                     U1P2L           equ	15854	;# 
  7524   003DEF                     U1P2H           equ	15855	;# 
  7525   003DF0                     U1P3            equ	15856	;# 
  7526   003DF0                     U1P3L           equ	15856	;# 
  7527   003DF1                     U1P3H           equ	15857	;# 
  7528   003DF2                     U1CON0          equ	15858	;# 
  7529   003DF3                     U1CON1          equ	15859	;# 
  7530   003DF4                     U1CON2          equ	15860	;# 
  7531   003DF5                     U1BRG           equ	15861	;# 
  7532   003DF5                     U1BRGL          equ	15861	;# 
  7533   003DF6                     U1BRGH          equ	15862	;# 
  7534   003DF7                     U1FIFO          equ	15863	;# 
  7535   003DF8                     U1UIR           equ	15864	;# 
  7536   003DF9                     U1ERRIR         equ	15865	;# 
  7537   003DFA                     U1ERRIE         equ	15866	;# 
  7538   003E9C                     DAC1CON1        equ	16028	;# 
  7539   003E9E                     DAC1CON0        equ	16030	;# 
  7540   003EB8                     CM2CON0         equ	16056	;# 
  7541   003EB9                     CM2CON1         equ	16057	;# 
  7542   003EBA                     CM2NCH          equ	16058	;# 
  7543   003EBB                     CM2PCH          equ	16059	;# 
  7544   003EBC                     CM1CON0         equ	16060	;# 
  7545   003EBD                     CM1CON1         equ	16061	;# 
  7546   003EBE                     CM1NCH          equ	16062	;# 
  7547   003EBF                     CM1PCH          equ	16063	;# 
  7548   003EC0                     CMOUT           equ	16064	;# 
  7549   003EC1                     FVRCON          equ	16065	;# 
  7550   003EC3                     ZCDCON          equ	16067	;# 
  7551   003EC9                     HLVDCON0        equ	16073	;# 
  7552   003ECA                     HLVDCON1        equ	16074	;# 
  7553   003ED7                     ADCP            equ	16087	;# 
  7554   003EDE                     ADLTH           equ	16094	;# 
  7555   003EDE                     ADLTHL          equ	16094	;# 
  7556   003EDF                     ADLTHH          equ	16095	;# 
  7557   003EE0                     ADUTH           equ	16096	;# 
  7558   003EE0                     ADUTHL          equ	16096	;# 
  7559   003EE1                     ADUTHH          equ	16097	;# 
  7560   003EE2                     ADERR           equ	16098	;# 
  7561   003EE2                     ADERRL          equ	16098	;# 
  7562   003EE3                     ADERRH          equ	16099	;# 
  7563   003EE4                     ADSTPT          equ	16100	;# 
  7564   003EE4                     ADSTPTL         equ	16100	;# 
  7565   003EE5                     ADSTPTH         equ	16101	;# 
  7566   003EE6                     ADFLTR          equ	16102	;# 
  7567   003EE6                     ADFLTRL         equ	16102	;# 
  7568   003EE7                     ADFLTRH         equ	16103	;# 
  7569   003EE8                     ADACC           equ	16104	;# 
  7570   003EE8                     ADACCL          equ	16104	;# 
  7571   003EE9                     ADACCH          equ	16105	;# 
  7572   003EEA                     ADACCU          equ	16106	;# 
  7573   003EEB                     ADCNT           equ	16107	;# 
  7574   003EEC                     ADRPT           equ	16108	;# 
  7575   003EED                     ADPREV          equ	16109	;# 
  7576   003EED                     ADPREVL         equ	16109	;# 
  7577   003EEE                     ADPREVH         equ	16110	;# 
  7578   003EEF                     ADRES           equ	16111	;# 
  7579   003EEF                     ADRESL          equ	16111	;# 
  7580   003EF0                     ADRESH          equ	16112	;# 
  7581   003EF1                     ADPCH           equ	16113	;# 
  7582   003EF3                     ADACQ           equ	16115	;# 
  7583   003EF3                     ADACQL          equ	16115	;# 
  7584   003EF4                     ADACQH          equ	16116	;# 
  7585   003EF5                     ADCAP           equ	16117	;# 
  7586   003EF6                     ADPRE           equ	16118	;# 
  7587   003EF6                     ADPREL          equ	16118	;# 
  7588   003EF7                     ADPREH          equ	16119	;# 
  7589   003EF8                     ADCON0          equ	16120	;# 
  7590   003EF9                     ADCON1          equ	16121	;# 
  7591   003EFA                     ADCON2          equ	16122	;# 
  7592   003EFB                     ADCON3          equ	16123	;# 
  7593   003EFC                     ADSTAT          equ	16124	;# 
  7594   003EFD                     ADREF           equ	16125	;# 
  7595   003EFE                     ADACT           equ	16126	;# 
  7596   003EFF                     ADCLK           equ	16127	;# 
  7597   003F12                     SMT1TMR         equ	16146	;# 
  7598   003F12                     SMT1TMRL        equ	16146	;# 
  7599   003F13                     SMT1TMRH        equ	16147	;# 
  7600   003F14                     SMT1TMRU        equ	16148	;# 
  7601   003F15                     SMT1CPR         equ	16149	;# 
  7602   003F15                     SMT1CPRL        equ	16149	;# 
  7603   003F16                     SMT1CPRH        equ	16150	;# 
  7604   003F17                     SMT1CPRU        equ	16151	;# 
  7605   003F18                     SMT1CPW         equ	16152	;# 
  7606   003F18                     SMT1CPWL        equ	16152	;# 
  7607   003F19                     SMT1CPWH        equ	16153	;# 
  7608   003F1A                     SMT1CPWU        equ	16154	;# 
  7609   003F1B                     SMT1PR          equ	16155	;# 
  7610   003F1B                     SMT1PRL         equ	16155	;# 
  7611   003F1C                     SMT1PRH         equ	16156	;# 
  7612   003F1D                     SMT1PRU         equ	16157	;# 
  7613   003F1E                     SMT1CON0        equ	16158	;# 
  7614   003F1F                     SMT1CON1        equ	16159	;# 
  7615   003F20                     SMT1STAT        equ	16160	;# 
  7616   003F21                     SMT1CLK         equ	16161	;# 
  7617   003F22                     SMT1SIG         equ	16162	;# 
  7618   003F23                     SMT1WIN         equ	16163	;# 
  7619   003F38                     NCO1ACC         equ	16184	;# 
  7620   003F38                     NCO1ACCL        equ	16184	;# 
  7621   003F39                     NCO1ACCH        equ	16185	;# 
  7622   003F3A                     NCO1ACCU        equ	16186	;# 
  7623   003F3B                     NCO1INC         equ	16187	;# 
  7624   003F3B                     NCO1INCL        equ	16187	;# 
  7625   003F3C                     NCO1INCH        equ	16188	;# 
  7626   003F3D                     NCO1INCU        equ	16189	;# 
  7627   003F3E                     NCO1CON         equ	16190	;# 
  7628   003F3F                     NCO1CLK         equ	16191	;# 
  7629   003F40                     CWG3CLK         equ	16192	;# 
  7630   003F40                     CWG3CLKCON      equ	16192	;# 
  7631   003F41                     CWG3ISM         equ	16193	;# 
  7632   003F41                     CWG3DAT         equ	16193	;# 
  7633   003F42                     CWG3DBR         equ	16194	;# 
  7634   003F43                     CWG3DBF         equ	16195	;# 
  7635   003F44                     CWG3CON0        equ	16196	;# 
  7636   003F45                     CWG3CON1        equ	16197	;# 
  7637   003F46                     CWG3AS0         equ	16198	;# 
  7638   003F47                     CWG3AS1         equ	16199	;# 
  7639   003F48                     CWG3STR         equ	16200	;# 
  7640   003F49                     CWG2CLK         equ	16201	;# 
  7641   003F49                     CWG2CLKCON      equ	16201	;# 
  7642   003F4A                     CWG2ISM         equ	16202	;# 
  7643   003F4A                     CWG2DAT         equ	16202	;# 
  7644   003F4B                     CWG2DBR         equ	16203	;# 
  7645   003F4C                     CWG2DBF         equ	16204	;# 
  7646   003F4D                     CWG2CON0        equ	16205	;# 
  7647   003F4E                     CWG2CON1        equ	16206	;# 
  7648   003F4F                     CWG2AS0         equ	16207	;# 
  7649   003F50                     CWG2AS1         equ	16208	;# 
  7650   003F51                     CWG2STR         equ	16209	;# 
  7651   003F52                     CWG1CLK         equ	16210	;# 
  7652   003F52                     CWG1CLKCON      equ	16210	;# 
  7653   003F53                     CWG1ISM         equ	16211	;# 
  7654   003F53                     CWG1DAT         equ	16211	;# 
  7655   003F54                     CWG1DBR         equ	16212	;# 
  7656   003F55                     CWG1DBF         equ	16213	;# 
  7657   003F56                     CWG1CON0        equ	16214	;# 
  7658   003F57                     CWG1CON1        equ	16215	;# 
  7659   003F58                     CWG1AS0         equ	16216	;# 
  7660   003F59                     CWG1AS1         equ	16217	;# 
  7661   003F5A                     CWG1STR         equ	16218	;# 
  7662   003F5E                     CCPTMRS0        equ	16222	;# 
  7663   003F5F                     CCPTMRS1        equ	16223	;# 
  7664   003F60                     PWM8DC          equ	16224	;# 
  7665   003F60                     PWM8DCL         equ	16224	;# 
  7666   003F61                     PWM8DCH         equ	16225	;# 
  7667   003F62                     PWM8CON         equ	16226	;# 
  7668   003F64                     PWM7DC          equ	16228	;# 
  7669   003F64                     PWM7DCL         equ	16228	;# 
  7670   003F65                     PWM7DCH         equ	16229	;# 
  7671   003F66                     PWM7CON         equ	16230	;# 
  7672   003F68                     PWM6DC          equ	16232	;# 
  7673   003F68                     PWM6DCL         equ	16232	;# 
  7674   003F69                     PWM6DCH         equ	16233	;# 
  7675   003F6A                     PWM6CON         equ	16234	;# 
  7676   003F6C                     PWM5DC          equ	16236	;# 
  7677   003F6C                     PWM5DCL         equ	16236	;# 
  7678   003F6D                     PWM5DCH         equ	16237	;# 
  7679   003F6E                     PWM5CON         equ	16238	;# 
  7680   003F70                     CCPR4           equ	16240	;# 
  7681   003F70                     CCPR4L          equ	16240	;# 
  7682   003F71                     CCPR4H          equ	16241	;# 
  7683   003F72                     CCP4CON         equ	16242	;# 
  7684   003F73                     CCP4CAP         equ	16243	;# 
  7685   003F74                     CCPR3           equ	16244	;# 
  7686   003F74                     CCPR3L          equ	16244	;# 
  7687   003F75                     CCPR3H          equ	16245	;# 
  7688   003F76                     CCP3CON         equ	16246	;# 
  7689   003F77                     CCP3CAP         equ	16247	;# 
  7690   003F78                     CCPR2           equ	16248	;# 
  7691   003F78                     CCPR2L          equ	16248	;# 
  7692   003F79                     CCPR2H          equ	16249	;# 
  7693   003F7A                     CCP2CON         equ	16250	;# 
  7694   003F7B                     CCP2CAP         equ	16251	;# 
  7695   003F7C                     CCPR1           equ	16252	;# 
  7696   003F7C                     CCPR1L          equ	16252	;# 
  7697   003F7D                     CCPR1H          equ	16253	;# 
  7698   003F7E                     CCP1CON         equ	16254	;# 
  7699   003F7F                     CCP1CAP         equ	16255	;# 
  7700   003F92                     T6TMR           equ	16274	;# 
  7701   003F92                     TMR6            equ	16274	;# 
  7702   003F93                     T6PR            equ	16275	;# 
  7703   003F93                     PR6             equ	16275	;# 
  7704   003F94                     T6CON           equ	16276	;# 
  7705   003F95                     T6HLT           equ	16277	;# 
  7706   003F96                     T6CLKCON        equ	16278	;# 
  7707   003F96                     T6CLK           equ	16278	;# 
  7708   003F97                     T6RST           equ	16279	;# 
  7709   003F98                     TMR5            equ	16280	;# 
  7710   003F98                     TMR5L           equ	16280	;# 
  7711   003F99                     TMR5H           equ	16281	;# 
  7712   003F9A                     T5CON           equ	16282	;# 
  7713   003F9A                     TMR5CON         equ	16282	;# 
  7714   003F9B                     T5GCON          equ	16283	;# 
  7715   003F9B                     TMR5GCON        equ	16283	;# 
  7716   003F9C                     T5GATE          equ	16284	;# 
  7717   003F9C                     TMR5GATE        equ	16284	;# 
  7718   003F9D                     T5CLK           equ	16285	;# 
  7719   003F9D                     TMR5CLK         equ	16285	;# 
  7720   003F9D                     PR5             equ	16285	;# 
  7721   003F9E                     T4TMR           equ	16286	;# 
  7722   003F9E                     TMR4            equ	16286	;# 
  7723   003F9F                     T4PR            equ	16287	;# 
  7724   003F9F                     PR4             equ	16287	;# 
  7725   003FA0                     T4CON           equ	16288	;# 
  7726   003FA1                     T4HLT           equ	16289	;# 
  7727   003FA2                     T4CLKCON        equ	16290	;# 
  7728   003FA2                     T4CLK           equ	16290	;# 
  7729   003FA3                     T4RST           equ	16291	;# 
  7730   003FA4                     TMR3            equ	16292	;# 
  7731   003FA4                     TMR3L           equ	16292	;# 
  7732   003FA5                     TMR3H           equ	16293	;# 
  7733   003FA6                     T3CON           equ	16294	;# 
  7734   003FA6                     TMR3CON         equ	16294	;# 
  7735   003FA7                     T3GCON          equ	16295	;# 
  7736   003FA7                     TMR3GCON        equ	16295	;# 
  7737   003FA8                     T3GATE          equ	16296	;# 
  7738   003FA8                     TMR3GATE        equ	16296	;# 
  7739   003FA9                     T3CLK           equ	16297	;# 
  7740   003FA9                     TMR3CLK         equ	16297	;# 
  7741   003FA9                     PR3             equ	16297	;# 
  7742   003FAA                     T2TMR           equ	16298	;# 
  7743   003FAA                     TMR2            equ	16298	;# 
  7744   003FAB                     T2PR            equ	16299	;# 
  7745   003FAB                     PR2             equ	16299	;# 
  7746   003FAC                     T2CON           equ	16300	;# 
  7747   003FAD                     T2HLT           equ	16301	;# 
  7748   003FAE                     T2CLKCON        equ	16302	;# 
  7749   003FAE                     T2CLK           equ	16302	;# 
  7750   003FAF                     T2RST           equ	16303	;# 
  7751   003FB0                     TMR1            equ	16304	;# 
  7752   003FB0                     TMR1L           equ	16304	;# 
  7753   003FB1                     TMR1H           equ	16305	;# 
  7754   003FB2                     T1CON           equ	16306	;# 
  7755   003FB2                     TMR1CON         equ	16306	;# 
  7756   003FB3                     T1GCON          equ	16307	;# 
  7757   003FB3                     TMR1GCON        equ	16307	;# 
  7758   003FB4                     T1GATE          equ	16308	;# 
  7759   003FB4                     TMR1GATE        equ	16308	;# 
  7760   003FB5                     T1CLK           equ	16309	;# 
  7761   003FB5                     TMR1CLK         equ	16309	;# 
  7762   003FB5                     PR1             equ	16309	;# 
  7763   003FB6                     TMR0L           equ	16310	;# 
  7764   003FB6                     TMR0            equ	16310	;# 
  7765   003FB7                     TMR0H           equ	16311	;# 
  7766   003FB7                     PR0             equ	16311	;# 
  7767   003FB8                     T0CON0          equ	16312	;# 
  7768   003FB9                     T0CON1          equ	16313	;# 
  7769   003FBA                     LATA            equ	16314	;# 
  7770   003FBB                     LATB            equ	16315	;# 
  7771   003FBC                     LATC            equ	16316	;# 
  7772   003FBD                     LATD            equ	16317	;# 
  7773   003FBE                     LATE            equ	16318	;# 
  7774   003FBF                     LATF            equ	16319	;# 
  7775   003FC2                     TRISA           equ	16322	;# 
  7776   003FC3                     TRISB           equ	16323	;# 
  7777   003FC4                     TRISC           equ	16324	;# 
  7778   003FC5                     TRISD           equ	16325	;# 
  7779   003FC6                     TRISE           equ	16326	;# 
  7780   003FC7                     TRISF           equ	16327	;# 
  7781   003FCA                     PORTA           equ	16330	;# 
  7782   003FCB                     PORTB           equ	16331	;# 
  7783   003FCC                     PORTC           equ	16332	;# 
  7784   003FCD                     PORTD           equ	16333	;# 
  7785   003FCE                     PORTE           equ	16334	;# 
  7786   003FCF                     PORTF           equ	16335	;# 
  7787   003FD2                     INTCON0         equ	16338	;# 
  7788   003FD3                     INTCON1         equ	16339	;# 
  7789   003FD4                     IVTLOCK         equ	16340	;# 
  7790   003FD5                     IVTBASE         equ	16341	;# 
  7791   003FD5                     IVTBASEL        equ	16341	;# 
  7792   003FD6                     IVTBASEH        equ	16342	;# 
  7793   003FD7                     IVTBASEU        equ	16343	;# 
  7794   003FD8                     STATUS          equ	16344	;# 
  7795   003FD9                     FSR2            equ	16345	;# 
  7796   003FD9                     FSR2L           equ	16345	;# 
  7797   003FDA                     FSR2H           equ	16346	;# 
  7798   003FDB                     PLUSW2          equ	16347	;# 
  7799   003FDC                     PREINC2         equ	16348	;# 
  7800   003FDD                     POSTDEC2        equ	16349	;# 
  7801   003FDE                     POSTINC2        equ	16350	;# 
  7802   003FDF                     INDF2           equ	16351	;# 
  7803   003FE0                     BSR             equ	16352	;# 
  7804   003FE1                     FSR1            equ	16353	;# 
  7805   003FE1                     FSR1L           equ	16353	;# 
  7806   003FE2                     FSR1H           equ	16354	;# 
  7807   003FE3                     PLUSW1          equ	16355	;# 
  7808   003FE4                     PREINC1         equ	16356	;# 
  7809   003FE5                     POSTDEC1        equ	16357	;# 
  7810   003FE6                     POSTINC1        equ	16358	;# 
  7811   003FE7                     INDF1           equ	16359	;# 
  7812   003FE8                     WREG            equ	16360	;# 
  7813   003FE9                     FSR0            equ	16361	;# 
  7814   003FE9                     FSR0L           equ	16361	;# 
  7815   003FEA                     FSR0H           equ	16362	;# 
  7816   003FEB                     PLUSW0          equ	16363	;# 
  7817   003FEC                     PREINC0         equ	16364	;# 
  7818   003FED                     POSTDEC0        equ	16365	;# 
  7819   003FEE                     POSTINC0        equ	16366	;# 
  7820   003FEF                     INDF0           equ	16367	;# 
  7821   003FF0                     PCON0           equ	16368	;# 
  7822   003FF1                     PCON1           equ	16369	;# 
  7823   003FF3                     PROD            equ	16371	;# 
  7824   003FF3                     PRODL           equ	16371	;# 
  7825   003FF4                     PRODH           equ	16372	;# 
  7826   003FF5                     TABLAT          equ	16373	;# 
  7827   003FF6                     TBLPTR          equ	16374	;# 
  7828   003FF6                     TBLPTRL         equ	16374	;# 
  7829   003FF7                     TBLPTRH         equ	16375	;# 
  7830   003FF8                     TBLPTRU         equ	16376	;# 
  7831   003FF9                     PCLAT           equ	16377	;# 
  7832   003FF9                     PCL             equ	16377	;# 
  7833   003FFA                     PCLATH          equ	16378	;# 
  7834   003FFB                     PCLATU          equ	16379	;# 
  7835   003FFC                     STKPTR          equ	16380	;# 
  7836   003FFD                     TOS             equ	16381	;# 
  7837   003FFD                     TOSL            equ	16381	;# 
  7838   003FFE                     TOSH            equ	16382	;# 
  7839   003FFF                     TOSU            equ	16383	;# 
  7840   003880                     STATUS_CSHAD    equ	14464	;# 
  7841   003881                     WREG_CSHAD      equ	14465	;# 
  7842   003882                     BSR_CSHAD       equ	14466	;# 
  7843   003883                     SHADCON         equ	14467	;# 
  7844   003884                     STATUS_SHAD     equ	14468	;# 
  7845   003885                     WREG_SHAD       equ	14469	;# 
  7846   003886                     BSR_SHAD        equ	14470	;# 
  7847   003887                     PCLATH_SHAD     equ	14471	;# 
  7848   003888                     PCLATU_SHAD     equ	14472	;# 
  7849   003889                     FSR0SH          equ	14473	;# 
  7850   003889                     FSR0L_SHAD      equ	14473	;# 
  7851   00388A                     FSR0H_SHAD      equ	14474	;# 
  7852   00388B                     FSR1SH          equ	14475	;# 
  7853   00388B                     FSR1L_SHAD      equ	14475	;# 
  7854   00388C                     FSR1H_SHAD      equ	14476	;# 
  7855   00388D                     FSR2SH          equ	14477	;# 
  7856   00388D                     FSR2L_SHAD      equ	14477	;# 
  7857   00388E                     FSR2H_SHAD      equ	14478	;# 
  7858   00388F                     PRODSH          equ	14479	;# 
  7859   00388F                     PRODL_SHAD      equ	14479	;# 
  7860   003890                     PRODH_SHAD      equ	14480	;# 
  7861   00389D                     IVTADL          equ	14493	;# 
  7862   00389E                     IVTADH          equ	14494	;# 
  7863   00389F                     IVTADU          equ	14495	;# 
  7864   00395B                     WDTCON0         equ	14683	;# 
  7865   00395C                     WDTCON1         equ	14684	;# 
  7866   00395D                     WDTPSL          equ	14685	;# 
  7867   00395E                     WDTPSH          equ	14686	;# 
  7868   00395F                     WDTTMR          equ	14687	;# 
  7869   003960                     CRCDATA         equ	14688	;# 
  7870   003960                     CRCDATL         equ	14688	;# 
  7871   003961                     CRCDATH         equ	14689	;# 
  7872   003962                     CRCACC          equ	14690	;# 
  7873   003962                     CRCACCL         equ	14690	;# 
  7874   003963                     CRCACCH         equ	14691	;# 
  7875   003964                     CRCSHFT         equ	14692	;# 
  7876   003964                     CRCSHIFTL       equ	14692	;# 
  7877   003965                     CRCSHIFTH       equ	14693	;# 
  7878   003966                     CRCXOR          equ	14694	;# 
  7879   003966                     CRCXORL         equ	14694	;# 
  7880   003967                     CRCXORH         equ	14695	;# 
  7881   003968                     CRCCON0         equ	14696	;# 
  7882   003969                     CRCCON1         equ	14697	;# 
  7883   003976                     SCANLADR        equ	14710	;# 
  7884   003976                     SCANLADRL       equ	14710	;# 
  7885   003977                     SCANLADRH       equ	14711	;# 
  7886   003978                     SCANLADRU       equ	14712	;# 
  7887   003979                     SCANHADR        equ	14713	;# 
  7888   003979                     SCANHADRL       equ	14713	;# 
  7889   00397A                     SCANHADRH       equ	14714	;# 
  7890   00397B                     SCANHADRU       equ	14715	;# 
  7891   00397C                     SCANCON0        equ	14716	;# 
  7892   00397D                     SCANTRIG        equ	14717	;# 
  7893   003980                     IPR0            equ	14720	;# 
  7894   003981                     IPR1            equ	14721	;# 
  7895   003982                     IPR2            equ	14722	;# 
  7896   003983                     IPR3            equ	14723	;# 
  7897   003984                     IPR4            equ	14724	;# 
  7898   003985                     IPR5            equ	14725	;# 
  7899   003986                     IPR6            equ	14726	;# 
  7900   003987                     IPR7            equ	14727	;# 
  7901   003988                     IPR8            equ	14728	;# 
  7902   003989                     IPR9            equ	14729	;# 
  7903   00398A                     IPR10           equ	14730	;# 
  7904   003990                     PIE0            equ	14736	;# 
  7905   003991                     PIE1            equ	14737	;# 
  7906   003992                     PIE2            equ	14738	;# 
  7907   003993                     PIE3            equ	14739	;# 
  7908   003994                     PIE4            equ	14740	;# 
  7909   003995                     PIE5            equ	14741	;# 
  7910   003996                     PIE6            equ	14742	;# 
  7911   003997                     PIE7            equ	14743	;# 
  7912   003998                     PIE8            equ	14744	;# 
  7913   003999                     PIE9            equ	14745	;# 
  7914   00399A                     PIE10           equ	14746	;# 
  7915   0039A0                     PIR0            equ	14752	;# 
  7916   0039A1                     PIR1            equ	14753	;# 
  7917   0039A2                     PIR2            equ	14754	;# 
  7918   0039A3                     PIR3            equ	14755	;# 
  7919   0039A4                     PIR4            equ	14756	;# 
  7920   0039A5                     PIR5            equ	14757	;# 
  7921   0039A6                     PIR6            equ	14758	;# 
  7922   0039A7                     PIR7            equ	14759	;# 
  7923   0039A8                     PIR8            equ	14760	;# 
  7924   0039A9                     PIR9            equ	14761	;# 
  7925   0039AA                     PIR10           equ	14762	;# 
  7926   0039C0                     PMD0            equ	14784	;# 
  7927   0039C1                     PMD1            equ	14785	;# 
  7928   0039C2                     PMD2            equ	14786	;# 
  7929   0039C3                     PMD3            equ	14787	;# 
  7930   0039C4                     PMD4            equ	14788	;# 
  7931   0039C5                     PMD5            equ	14789	;# 
  7932   0039C6                     PMD6            equ	14790	;# 
  7933   0039C7                     PMD7            equ	14791	;# 
  7934   0039D0                     BORCON          equ	14800	;# 
  7935   0039D1                     VREGCON         equ	14801	;# 
  7936   0039D8                     CPUDOZE         equ	14808	;# 
  7937   0039D9                     OSCCON1         equ	14809	;# 
  7938   0039DA                     OSCCON2         equ	14810	;# 
  7939   0039DB                     OSCCON3         equ	14811	;# 
  7940   0039DC                     OSCSTAT         equ	14812	;# 
  7941   0039DC                     OSCSTAT1        equ	14812	;# 
  7942   0039DD                     OSCEN           equ	14813	;# 
  7943   0039DE                     OSCTUNE         equ	14814	;# 
  7944   0039DF                     OSCFRQ          equ	14815	;# 
  7945   0039E0                     NVMADRL         equ	14816	;# 
  7946   0039E1                     NVMADRH         equ	14817	;# 
  7947   0039E3                     NVMDAT          equ	14819	;# 
  7948   0039E5                     NVMCON1         equ	14821	;# 
  7949   0039E6                     NVMCON2         equ	14822	;# 
  7950   0039EF                     PRLOCK          equ	14831	;# 
  7951   0039F1                     ISRPR           equ	14833	;# 
  7952   0039F2                     MAINPR          equ	14834	;# 
  7953   0039F3                     DMA1PR          equ	14835	;# 
  7954   0039F4                     DMA2PR          equ	14836	;# 
  7955   0039F7                     SCANPR          equ	14839	;# 
  7956   003A00                     RA0PPS          equ	14848	;# 
  7957   003A01                     RA1PPS          equ	14849	;# 
  7958   003A02                     RA2PPS          equ	14850	;# 
  7959   003A03                     RA3PPS          equ	14851	;# 
  7960   003A04                     RA4PPS          equ	14852	;# 
  7961   003A05                     RA5PPS          equ	14853	;# 
  7962   003A06                     RA6PPS          equ	14854	;# 
  7963   003A07                     RA7PPS          equ	14855	;# 
  7964   003A08                     RB0PPS          equ	14856	;# 
  7965   003A09                     RB1PPS          equ	14857	;# 
  7966   003A0A                     RB2PPS          equ	14858	;# 
  7967   003A0B                     RB3PPS          equ	14859	;# 
  7968   003A0C                     RB4PPS          equ	14860	;# 
  7969   003A0D                     RB5PPS          equ	14861	;# 
  7970   003A0E                     RB6PPS          equ	14862	;# 
  7971   003A0F                     RB7PPS          equ	14863	;# 
  7972   003A10                     RC0PPS          equ	14864	;# 
  7973   003A11                     RC1PPS          equ	14865	;# 
  7974   003A12                     RC2PPS          equ	14866	;# 
  7975   003A13                     RC3PPS          equ	14867	;# 
  7976   003A14                     RC4PPS          equ	14868	;# 
  7977   003A15                     RC5PPS          equ	14869	;# 
  7978   003A16                     RC6PPS          equ	14870	;# 
  7979   003A17                     RC7PPS          equ	14871	;# 
  7980   003A18                     RD0PPS          equ	14872	;# 
  7981   003A19                     RD1PPS          equ	14873	;# 
  7982   003A1A                     RD2PPS          equ	14874	;# 
  7983   003A1B                     RD3PPS          equ	14875	;# 
  7984   003A1C                     RD4PPS          equ	14876	;# 
  7985   003A1D                     RD5PPS          equ	14877	;# 
  7986   003A1E                     RD6PPS          equ	14878	;# 
  7987   003A1F                     RD7PPS          equ	14879	;# 
  7988   003A20                     RE0PPS          equ	14880	;# 
  7989   003A21                     RE1PPS          equ	14881	;# 
  7990   003A22                     RE2PPS          equ	14882	;# 
  7991   003A28                     RF0PPS          equ	14888	;# 
  7992   003A29                     RF1PPS          equ	14889	;# 
  7993   003A2A                     RF2PPS          equ	14890	;# 
  7994   003A2B                     RF3PPS          equ	14891	;# 
  7995   003A2C                     RF4PPS          equ	14892	;# 
  7996   003A2D                     RF5PPS          equ	14893	;# 
  7997   003A2E                     RF6PPS          equ	14894	;# 
  7998   003A2F                     RF7PPS          equ	14895	;# 
  7999   003A40                     ANSELA          equ	14912	;# 
  8000   003A41                     WPUA            equ	14913	;# 
  8001   003A42                     ODCONA          equ	14914	;# 
  8002   003A43                     SLRCONA         equ	14915	;# 
  8003   003A44                     INLVLA          equ	14916	;# 
  8004   003A45                     IOCAP           equ	14917	;# 
  8005   003A46                     IOCAN           equ	14918	;# 
  8006   003A47                     IOCAF           equ	14919	;# 
  8007   003A50                     ANSELB          equ	14928	;# 
  8008   003A51                     WPUB            equ	14929	;# 
  8009   003A52                     ODCONB          equ	14930	;# 
  8010   003A53                     SLRCONB         equ	14931	;# 
  8011   003A54                     INLVLB          equ	14932	;# 
  8012   003A55                     IOCBP           equ	14933	;# 
  8013   003A56                     IOCBN           equ	14934	;# 
  8014   003A57                     IOCBF           equ	14935	;# 
  8015   003A5A                     RB1I2C          equ	14938	;# 
  8016   003A5B                     RB2I2C          equ	14939	;# 
  8017   003A60                     ANSELC          equ	14944	;# 
  8018   003A61                     WPUC            equ	14945	;# 
  8019   003A62                     ODCONC          equ	14946	;# 
  8020   003A63                     SLRCONC         equ	14947	;# 
  8021   003A64                     INLVLC          equ	14948	;# 
  8022   003A65                     IOCCP           equ	14949	;# 
  8023   003A66                     IOCCN           equ	14950	;# 
  8024   003A67                     IOCCF           equ	14951	;# 
  8025   003A6A                     RC3I2C          equ	14954	;# 
  8026   003A6B                     RC4I2C          equ	14955	;# 
  8027   003A70                     ANSELD          equ	14960	;# 
  8028   003A71                     WPUD            equ	14961	;# 
  8029   003A72                     ODCOND          equ	14962	;# 
  8030   003A73                     SLRCOND         equ	14963	;# 
  8031   003A74                     INLVLD          equ	14964	;# 
  8032   003A7A                     RD0I2C          equ	14970	;# 
  8033   003A7B                     RD1I2C          equ	14971	;# 
  8034   003A80                     ANSELE          equ	14976	;# 
  8035   003A81                     WPUE            equ	14977	;# 
  8036   003A82                     ODCONE          equ	14978	;# 
  8037   003A83                     SLRCONE         equ	14979	;# 
  8038   003A84                     INLVLE          equ	14980	;# 
  8039   003A85                     IOCEP           equ	14981	;# 
  8040   003A86                     IOCEN           equ	14982	;# 
  8041   003A87                     IOCEF           equ	14983	;# 
  8042   003A90                     ANSELF          equ	14992	;# 
  8043   003A91                     WPUF            equ	14993	;# 
  8044   003A92                     ODCONF          equ	14994	;# 
  8045   003A93                     SLRCONF         equ	14995	;# 
  8046   003A94                     INLVLF          equ	14996	;# 
  8047   003ABF                     PPSLOCK         equ	15039	;# 
  8048   003AC0                     INT0PPS         equ	15040	;# 
  8049   003AC1                     INT1PPS         equ	15041	;# 
  8050   003AC2                     INT2PPS         equ	15042	;# 
  8051   003AC3                     T0CKIPPS        equ	15043	;# 
  8052   003AC4                     T1CKIPPS        equ	15044	;# 
  8053   003AC5                     T1GPPS          equ	15045	;# 
  8054   003AC6                     T3CKIPPS        equ	15046	;# 
  8055   003AC7                     T3GPPS          equ	15047	;# 
  8056   003AC8                     T5CKIPPS        equ	15048	;# 
  8057   003AC9                     T5GPPS          equ	15049	;# 
  8058   003ACA                     T2INPPS         equ	15050	;# 
  8059   003ACB                     T4INPPS         equ	15051	;# 
  8060   003ACC                     T6INPPS         equ	15052	;# 
  8061   003ACD                     CCP1PPS         equ	15053	;# 
  8062   003ACE                     CCP2PPS         equ	15054	;# 
  8063   003ACF                     CCP3PPS         equ	15055	;# 
  8064   003AD0                     CCP4PPS         equ	15056	;# 
  8065   003AD1                     SMT1WINPPS      equ	15057	;# 
  8066   003AD2                     SMT1SIGPPS      equ	15058	;# 
  8067   003AD3                     CWG1INPPS       equ	15059	;# 
  8068   003AD4                     CWG2INPPS       equ	15060	;# 
  8069   003AD5                     CWG3INPPS       equ	15061	;# 
  8070   003AD6                     MD1CARLPPS      equ	15062	;# 
  8071   003AD7                     MD1CARHPPS      equ	15063	;# 
  8072   003AD8                     MD1SRCPPS       equ	15064	;# 
  8073   003AD9                     CLCIN0PPS       equ	15065	;# 
  8074   003ADA                     CLCIN1PPS       equ	15066	;# 
  8075   003ADB                     CLCIN2PPS       equ	15067	;# 
  8076   003ADC                     CLCIN3PPS       equ	15068	;# 
  8077   003ADD                     ADACTPPS        equ	15069	;# 
  8078   003ADE                     SPI1SCKPPS      equ	15070	;# 
  8079   003ADF                     SPI1SDIPPS      equ	15071	;# 
  8080   003AE0                     SPI1SSPPS       equ	15072	;# 
  8081   003AE1                     I2C1SCLPPS      equ	15073	;# 
  8082   003AE2                     I2C1SDAPPS      equ	15074	;# 
  8083   003AE3                     I2C2SCLPPS      equ	15075	;# 
  8084   003AE4                     I2C2SDAPPS      equ	15076	;# 
  8085   003AE5                     U1RXPPS         equ	15077	;# 
  8086   003AE6                     U1CTSPPS        equ	15078	;# 
  8087   003AE8                     U2RXPPS         equ	15080	;# 
  8088   003AE9                     U2CTSPPS        equ	15081	;# 
  8089   003BC9                     DMA2BUF         equ	15305	;# 
  8090   003BCA                     DMA2DCNT        equ	15306	;# 
  8091   003BCA                     DMA2DCNTL       equ	15306	;# 
  8092   003BCB                     DMA2DCNTH       equ	15307	;# 
  8093   003BCC                     DMA2DPTR        equ	15308	;# 
  8094   003BCC                     DMA2DPTRL       equ	15308	;# 
  8095   003BCD                     DMA2DPTRH       equ	15309	;# 
  8096   003BCE                     DMA2DSZ         equ	15310	;# 
  8097   003BCE                     DMA2DSZL        equ	15310	;# 
  8098   003BCF                     DMA2DSZH        equ	15311	;# 
  8099   003BD0                     DMA2DSA         equ	15312	;# 
  8100   003BD0                     DMA2DSAL        equ	15312	;# 
  8101   003BD1                     DMA2DSAH        equ	15313	;# 
  8102   003BD2                     DMA2SCNT        equ	15314	;# 
  8103   003BD2                     DMA2SCNTL       equ	15314	;# 
  8104   003BD3                     DMA2SCNTH       equ	15315	;# 
  8105   003BD4                     DMA2SPTR        equ	15316	;# 
  8106   003BD4                     DMA2SPTRL       equ	15316	;# 
  8107   003BD5                     DMA2SPTRH       equ	15317	;# 
  8108   003BD6                     DMA2SPTRU       equ	15318	;# 
  8109   003BD7                     DMA2SSZ         equ	15319	;# 
  8110   003BD7                     DMA2SSZL        equ	15319	;# 
  8111   003BD8                     DMA2SSZH        equ	15320	;# 
  8112   003BD9                     DMA2SSA         equ	15321	;# 
  8113   003BD9                     DMA2SSAL        equ	15321	;# 
  8114   003BDA                     DMA2SSAH        equ	15322	;# 
  8115   003BDB                     DMA2SSAU        equ	15323	;# 
  8116   003BDC                     DMA2CON0        equ	15324	;# 
  8117   003BDD                     DMA2CON1        equ	15325	;# 
  8118   003BDE                     DMA2AIRQ        equ	15326	;# 
  8119   003BDF                     DMA2SIRQ        equ	15327	;# 
  8120   003BE9                     DMA1BUF         equ	15337	;# 
  8121   003BEA                     DMA1DCNT        equ	15338	;# 
  8122   003BEA                     DMA1DCNTL       equ	15338	;# 
  8123   003BEB                     DMA1DCNTH       equ	15339	;# 
  8124   003BEC                     DMA1DPTR        equ	15340	;# 
  8125   003BEC                     DMA1DPTRL       equ	15340	;# 
  8126   003BED                     DMA1DPTRH       equ	15341	;# 
  8127   003BEE                     DMA1DSZ         equ	15342	;# 
  8128   003BEE                     DMA1DSZL        equ	15342	;# 
  8129   003BEF                     DMA1DSZH        equ	15343	;# 
  8130   003BF0                     DMA1DSA         equ	15344	;# 
  8131   003BF0                     DMA1DSAL        equ	15344	;# 
  8132   003BF1                     DMA1DSAH        equ	15345	;# 
  8133   003BF2                     DMA1SCNT        equ	15346	;# 
  8134   003BF2                     DMA1SCNTL       equ	15346	;# 
  8135   003BF3                     DMA1SCNTH       equ	15347	;# 
  8136   003BF4                     DMA1SPTR        equ	15348	;# 
  8137   003BF4                     DMA1SPTRL       equ	15348	;# 
  8138   003BF5                     DMA1SPTRH       equ	15349	;# 
  8139   003BF6                     DMA1SPTRU       equ	15350	;# 
  8140   003BF7                     DMA1SSZ         equ	15351	;# 
  8141   003BF7                     DMA1SSZL        equ	15351	;# 
  8142   003BF8                     DMA1SSZH        equ	15352	;# 
  8143   003BF9                     DMA1SSA         equ	15353	;# 
  8144   003BF9                     DMA1SSAL        equ	15353	;# 
  8145   003BFA                     DMA1SSAH        equ	15354	;# 
  8146   003BFB                     DMA1SSAU        equ	15355	;# 
  8147   003BFC                     DMA1CON0        equ	15356	;# 
  8148   003BFD                     DMA1CON1        equ	15357	;# 
  8149   003BFE                     DMA1AIRQ        equ	15358	;# 
  8150   003BFF                     DMA1SIRQ        equ	15359	;# 
  8151   003C56                     CLC4CON         equ	15446	;# 
  8152   003C57                     CLC4POL         equ	15447	;# 
  8153   003C58                     CLC4SEL0        equ	15448	;# 
  8154   003C59                     CLC4SEL1        equ	15449	;# 
  8155   003C5A                     CLC4SEL2        equ	15450	;# 
  8156   003C5B                     CLC4SEL3        equ	15451	;# 
  8157   003C5C                     CLC4GLS0        equ	15452	;# 
  8158   003C5D                     CLC4GLS1        equ	15453	;# 
  8159   003C5E                     CLC4GLS2        equ	15454	;# 
  8160   003C5F                     CLC4GLS3        equ	15455	;# 
  8161   003C60                     CLC3CON         equ	15456	;# 
  8162   003C61                     CLC3POL         equ	15457	;# 
  8163   003C62                     CLC3SEL0        equ	15458	;# 
  8164   003C63                     CLC3SEL1        equ	15459	;# 
  8165   003C64                     CLC3SEL2        equ	15460	;# 
  8166   003C65                     CLC3SEL3        equ	15461	;# 
  8167   003C66                     CLC3GLS0        equ	15462	;# 
  8168   003C67                     CLC3GLS1        equ	15463	;# 
  8169   003C68                     CLC3GLS2        equ	15464	;# 
  8170   003C69                     CLC3GLS3        equ	15465	;# 
  8171   003C6A                     CLC2CON         equ	15466	;# 
  8172   003C6B                     CLC2POL         equ	15467	;# 
  8173   003C6C                     CLC2SEL0        equ	15468	;# 
  8174   003C6D                     CLC2SEL1        equ	15469	;# 
  8175   003C6E                     CLC2SEL2        equ	15470	;# 
  8176   003C6F                     CLC2SEL3        equ	15471	;# 
  8177   003C70                     CLC2GLS0        equ	15472	;# 
  8178   003C71                     CLC2GLS1        equ	15473	;# 
  8179   003C72                     CLC2GLS2        equ	15474	;# 
  8180   003C73                     CLC2GLS3        equ	15475	;# 
  8181   003C74                     CLC1CON         equ	15476	;# 
  8182   003C75                     CLC1POL         equ	15477	;# 
  8183   003C76                     CLC1SEL0        equ	15478	;# 
  8184   003C77                     CLC1SEL1        equ	15479	;# 
  8185   003C78                     CLC1SEL2        equ	15480	;# 
  8186   003C79                     CLC1SEL3        equ	15481	;# 
  8187   003C7A                     CLC1GLS0        equ	15482	;# 
  8188   003C7B                     CLC1GLS1        equ	15483	;# 
  8189   003C7C                     CLC1GLS2        equ	15484	;# 
  8190   003C7D                     CLC1GLS3        equ	15485	;# 
  8191   003C7E                     CLCDATA0        equ	15486	;# 
  8192   003CE5                     CLKRCON         equ	15589	;# 
  8193   003CE6                     CLKRCLK         equ	15590	;# 
  8194   003CFA                     MD1CON0         equ	15610	;# 
  8195   003CFB                     MD1CON1         equ	15611	;# 
  8196   003CFC                     MD1SRC          equ	15612	;# 
  8197   003CFD                     MD1CARL         equ	15613	;# 
  8198   003CFE                     MD1CARH         equ	15614	;# 
  8199   003D10                     SPI1RXB         equ	15632	;# 
  8200   003D11                     SPI1TXB         equ	15633	;# 
  8201   003D12                     SPI1TCNT        equ	15634	;# 
  8202   003D12                     SPI1TCNTL       equ	15634	;# 
  8203   003D13                     SPI1TCNTH       equ	15635	;# 
  8204   003D14                     SPI1CON0        equ	15636	;# 
  8205   003D15                     SPI1CON1        equ	15637	;# 
  8206   003D16                     SPI1CON2        equ	15638	;# 
  8207   003D17                     SPI1STATUS      equ	15639	;# 
  8208   003D18                     SPI1TWIDTH      equ	15640	;# 
  8209   003D19                     SPI1BAUD        equ	15641	;# 
  8210   003D1A                     SPI1INTF        equ	15642	;# 
  8211   003D1B                     SPI1INTE        equ	15643	;# 
  8212   003D1C                     SPI1CLK         equ	15644	;# 
  8213   003D54                     I2C2RXB         equ	15700	;# 
  8214   003D55                     I2C2TXB         equ	15701	;# 
  8215   003D56                     I2C2CNT         equ	15702	;# 
  8216   003D57                     I2C2ADB0        equ	15703	;# 
  8217   003D58                     I2C2ADB1        equ	15704	;# 
  8218   003D59                     I2C2ADR0        equ	15705	;# 
  8219   003D5A                     I2C2ADR1        equ	15706	;# 
  8220   003D5B                     I2C2ADR2        equ	15707	;# 
  8221   003D5C                     I2C2ADR3        equ	15708	;# 
  8222   003D5D                     I2C2CON0        equ	15709	;# 
  8223   003D5E                     I2C2CON1        equ	15710	;# 
  8224   003D5F                     I2C2CON2        equ	15711	;# 
  8225   003D60                     I2C2ERR         equ	15712	;# 
  8226   003D61                     I2C2STAT0       equ	15713	;# 
  8227   003D62                     I2C2STAT1       equ	15714	;# 
  8228   003D63                     I2C2PIR         equ	15715	;# 
  8229   003D64                     I2C2PIE         equ	15716	;# 
  8230   003D65                     I2C2CLK         equ	15717	;# 
  8231   003D66                     I2C2BTO         equ	15718	;# 
  8232   003D6A                     I2C1RXB         equ	15722	;# 
  8233   003D6B                     I2C1TXB         equ	15723	;# 
  8234   003D6C                     I2C1CNT         equ	15724	;# 
  8235   003D6D                     I2C1ADB0        equ	15725	;# 
  8236   003D6E                     I2C1ADB1        equ	15726	;# 
  8237   003D6F                     I2C1ADR0        equ	15727	;# 
  8238   003D70                     I2C1ADR1        equ	15728	;# 
  8239   003D71                     I2C1ADR2        equ	15729	;# 
  8240   003D72                     I2C1ADR3        equ	15730	;# 
  8241   003D73                     I2C1CON0        equ	15731	;# 
  8242   003D74                     I2C1CON1        equ	15732	;# 
  8243   003D75                     I2C1CON2        equ	15733	;# 
  8244   003D76                     I2C1ERR         equ	15734	;# 
  8245   003D77                     I2C1STAT0       equ	15735	;# 
  8246   003D78                     I2C1STAT1       equ	15736	;# 
  8247   003D79                     I2C1PIR         equ	15737	;# 
  8248   003D7A                     I2C1PIE         equ	15738	;# 
  8249   003D7B                     I2C1CLK         equ	15739	;# 
  8250   003D7C                     I2C1BTO         equ	15740	;# 
  8251   003DD0                     U2RXB           equ	15824	;# 
  8252   003DD0                     U2RXBL          equ	15824	;# 
  8253   003DD2                     U2TXB           equ	15826	;# 
  8254   003DD2                     U2TXBL          equ	15826	;# 
  8255   003DD4                     U2P1            equ	15828	;# 
  8256   003DD4                     U2P1L           equ	15828	;# 
  8257   003DD6                     U2P2            equ	15830	;# 
  8258   003DD6                     U2P2L           equ	15830	;# 
  8259   003DD8                     U2P3            equ	15832	;# 
  8260   003DD8                     U2P3L           equ	15832	;# 
  8261   003DDA                     U2CON0          equ	15834	;# 
  8262   003DDB                     U2CON1          equ	15835	;# 
  8263   003DDC                     U2CON2          equ	15836	;# 
  8264   003DDD                     U2BRG           equ	15837	;# 
  8265   003DDD                     U2BRGL          equ	15837	;# 
  8266   003DDE                     U2BRGH          equ	15838	;# 
  8267   003DDF                     U2FIFO          equ	15839	;# 
  8268   003DE0                     U2UIR           equ	15840	;# 
  8269   003DE1                     U2ERRIR         equ	15841	;# 
  8270   003DE2                     U2ERRIE         equ	15842	;# 
  8271   003DE8                     U1RXB           equ	15848	;# 
  8272   003DE8                     U1RXBL          equ	15848	;# 
  8273   003DE9                     U1RXCHK         equ	15849	;# 
  8274   003DEA                     U1TXB           equ	15850	;# 
  8275   003DEA                     U1TXBL          equ	15850	;# 
  8276   003DEB                     U1TXCHK         equ	15851	;# 
  8277   003DEC                     U1P1            equ	15852	;# 
  8278   003DEC                     U1P1L           equ	15852	;# 
  8279   003DED                     U1P1H           equ	15853	;# 
  8280   003DEE                     U1P2            equ	15854	;# 
  8281   003DEE                     U1P2L           equ	15854	;# 
  8282   003DEF                     U1P2H           equ	15855	;# 
  8283   003DF0                     U1P3            equ	15856	;# 
  8284   003DF0                     U1P3L           equ	15856	;# 
  8285   003DF1                     U1P3H           equ	15857	;# 
  8286   003DF2                     U1CON0          equ	15858	;# 
  8287   003DF3                     U1CON1          equ	15859	;# 
  8288   003DF4                     U1CON2          equ	15860	;# 
  8289   003DF5                     U1BRG           equ	15861	;# 
  8290   003DF5                     U1BRGL          equ	15861	;# 
  8291   003DF6                     U1BRGH          equ	15862	;# 
  8292   003DF7                     U1FIFO          equ	15863	;# 
  8293   003DF8                     U1UIR           equ	15864	;# 
  8294   003DF9                     U1ERRIR         equ	15865	;# 
  8295   003DFA                     U1ERRIE         equ	15866	;# 
  8296   003E9C                     DAC1CON1        equ	16028	;# 
  8297   003E9E                     DAC1CON0        equ	16030	;# 
  8298   003EB8                     CM2CON0         equ	16056	;# 
  8299   003EB9                     CM2CON1         equ	16057	;# 
  8300   003EBA                     CM2NCH          equ	16058	;# 
  8301   003EBB                     CM2PCH          equ	16059	;# 
  8302   003EBC                     CM1CON0         equ	16060	;# 
  8303   003EBD                     CM1CON1         equ	16061	;# 
  8304   003EBE                     CM1NCH          equ	16062	;# 
  8305   003EBF                     CM1PCH          equ	16063	;# 
  8306   003EC0                     CMOUT           equ	16064	;# 
  8307   003EC1                     FVRCON          equ	16065	;# 
  8308   003EC3                     ZCDCON          equ	16067	;# 
  8309   003EC9                     HLVDCON0        equ	16073	;# 
  8310   003ECA                     HLVDCON1        equ	16074	;# 
  8311   003ED7                     ADCP            equ	16087	;# 
  8312   003EDE                     ADLTH           equ	16094	;# 
  8313   003EDE                     ADLTHL          equ	16094	;# 
  8314   003EDF                     ADLTHH          equ	16095	;# 
  8315   003EE0                     ADUTH           equ	16096	;# 
  8316   003EE0                     ADUTHL          equ	16096	;# 
  8317   003EE1                     ADUTHH          equ	16097	;# 
  8318   003EE2                     ADERR           equ	16098	;# 
  8319   003EE2                     ADERRL          equ	16098	;# 
  8320   003EE3                     ADERRH          equ	16099	;# 
  8321   003EE4                     ADSTPT          equ	16100	;# 
  8322   003EE4                     ADSTPTL         equ	16100	;# 
  8323   003EE5                     ADSTPTH         equ	16101	;# 
  8324   003EE6                     ADFLTR          equ	16102	;# 
  8325   003EE6                     ADFLTRL         equ	16102	;# 
  8326   003EE7                     ADFLTRH         equ	16103	;# 
  8327   003EE8                     ADACC           equ	16104	;# 
  8328   003EE8                     ADACCL          equ	16104	;# 
  8329   003EE9                     ADACCH          equ	16105	;# 
  8330   003EEA                     ADACCU          equ	16106	;# 
  8331   003EEB                     ADCNT           equ	16107	;# 
  8332   003EEC                     ADRPT           equ	16108	;# 
  8333   003EED                     ADPREV          equ	16109	;# 
  8334   003EED                     ADPREVL         equ	16109	;# 
  8335   003EEE                     ADPREVH         equ	16110	;# 
  8336   003EEF                     ADRES           equ	16111	;# 
  8337   003EEF                     ADRESL          equ	16111	;# 
  8338   003EF0                     ADRESH          equ	16112	;# 
  8339   003EF1                     ADPCH           equ	16113	;# 
  8340   003EF3                     ADACQ           equ	16115	;# 
  8341   003EF3                     ADACQL          equ	16115	;# 
  8342   003EF4                     ADACQH          equ	16116	;# 
  8343   003EF5                     ADCAP           equ	16117	;# 
  8344   003EF6                     ADPRE           equ	16118	;# 
  8345   003EF6                     ADPREL          equ	16118	;# 
  8346   003EF7                     ADPREH          equ	16119	;# 
  8347   003EF8                     ADCON0          equ	16120	;# 
  8348   003EF9                     ADCON1          equ	16121	;# 
  8349   003EFA                     ADCON2          equ	16122	;# 
  8350   003EFB                     ADCON3          equ	16123	;# 
  8351   003EFC                     ADSTAT          equ	16124	;# 
  8352   003EFD                     ADREF           equ	16125	;# 
  8353   003EFE                     ADACT           equ	16126	;# 
  8354   003EFF                     ADCLK           equ	16127	;# 
  8355   003F12                     SMT1TMR         equ	16146	;# 
  8356   003F12                     SMT1TMRL        equ	16146	;# 
  8357   003F13                     SMT1TMRH        equ	16147	;# 
  8358   003F14                     SMT1TMRU        equ	16148	;# 
  8359   003F15                     SMT1CPR         equ	16149	;# 
  8360   003F15                     SMT1CPRL        equ	16149	;# 
  8361   003F16                     SMT1CPRH        equ	16150	;# 
  8362   003F17                     SMT1CPRU        equ	16151	;# 
  8363   003F18                     SMT1CPW         equ	16152	;# 
  8364   003F18                     SMT1CPWL        equ	16152	;# 
  8365   003F19                     SMT1CPWH        equ	16153	;# 
  8366   003F1A                     SMT1CPWU        equ	16154	;# 
  8367   003F1B                     SMT1PR          equ	16155	;# 
  8368   003F1B                     SMT1PRL         equ	16155	;# 
  8369   003F1C                     SMT1PRH         equ	16156	;# 
  8370   003F1D                     SMT1PRU         equ	16157	;# 
  8371   003F1E                     SMT1CON0        equ	16158	;# 
  8372   003F1F                     SMT1CON1        equ	16159	;# 
  8373   003F20                     SMT1STAT        equ	16160	;# 
  8374   003F21                     SMT1CLK         equ	16161	;# 
  8375   003F22                     SMT1SIG         equ	16162	;# 
  8376   003F23                     SMT1WIN         equ	16163	;# 
  8377   003F38                     NCO1ACC         equ	16184	;# 
  8378   003F38                     NCO1ACCL        equ	16184	;# 
  8379   003F39                     NCO1ACCH        equ	16185	;# 
  8380   003F3A                     NCO1ACCU        equ	16186	;# 
  8381   003F3B                     NCO1INC         equ	16187	;# 
  8382   003F3B                     NCO1INCL        equ	16187	;# 
  8383   003F3C                     NCO1INCH        equ	16188	;# 
  8384   003F3D                     NCO1INCU        equ	16189	;# 
  8385   003F3E                     NCO1CON         equ	16190	;# 
  8386   003F3F                     NCO1CLK         equ	16191	;# 
  8387   003F40                     CWG3CLK         equ	16192	;# 
  8388   003F40                     CWG3CLKCON      equ	16192	;# 
  8389   003F41                     CWG3ISM         equ	16193	;# 
  8390   003F41                     CWG3DAT         equ	16193	;# 
  8391   003F42                     CWG3DBR         equ	16194	;# 
  8392   003F43                     CWG3DBF         equ	16195	;# 
  8393   003F44                     CWG3CON0        equ	16196	;# 
  8394   003F45                     CWG3CON1        equ	16197	;# 
  8395   003F46                     CWG3AS0         equ	16198	;# 
  8396   003F47                     CWG3AS1         equ	16199	;# 
  8397   003F48                     CWG3STR         equ	16200	;# 
  8398   003F49                     CWG2CLK         equ	16201	;# 
  8399   003F49                     CWG2CLKCON      equ	16201	;# 
  8400   003F4A                     CWG2ISM         equ	16202	;# 
  8401   003F4A                     CWG2DAT         equ	16202	;# 
  8402   003F4B                     CWG2DBR         equ	16203	;# 
  8403   003F4C                     CWG2DBF         equ	16204	;# 
  8404   003F4D                     CWG2CON0        equ	16205	;# 
  8405   003F4E                     CWG2CON1        equ	16206	;# 
  8406   003F4F                     CWG2AS0         equ	16207	;# 
  8407   003F50                     CWG2AS1         equ	16208	;# 
  8408   003F51                     CWG2STR         equ	16209	;# 
  8409   003F52                     CWG1CLK         equ	16210	;# 
  8410   003F52                     CWG1CLKCON      equ	16210	;# 
  8411   003F53                     CWG1ISM         equ	16211	;# 
  8412   003F53                     CWG1DAT         equ	16211	;# 
  8413   003F54                     CWG1DBR         equ	16212	;# 
  8414   003F55                     CWG1DBF         equ	16213	;# 
  8415   003F56                     CWG1CON0        equ	16214	;# 
  8416   003F57                     CWG1CON1        equ	16215	;# 
  8417   003F58                     CWG1AS0         equ	16216	;# 
  8418   003F59                     CWG1AS1         equ	16217	;# 
  8419   003F5A                     CWG1STR         equ	16218	;# 
  8420   003F5E                     CCPTMRS0        equ	16222	;# 
  8421   003F5F                     CCPTMRS1        equ	16223	;# 
  8422   003F60                     PWM8DC          equ	16224	;# 
  8423   003F60                     PWM8DCL         equ	16224	;# 
  8424   003F61                     PWM8DCH         equ	16225	;# 
  8425   003F62                     PWM8CON         equ	16226	;# 
  8426   003F64                     PWM7DC          equ	16228	;# 
  8427   003F64                     PWM7DCL         equ	16228	;# 
  8428   003F65                     PWM7DCH         equ	16229	;# 
  8429   003F66                     PWM7CON         equ	16230	;# 
  8430   003F68                     PWM6DC          equ	16232	;# 
  8431   003F68                     PWM6DCL         equ	16232	;# 
  8432   003F69                     PWM6DCH         equ	16233	;# 
  8433   003F6A                     PWM6CON         equ	16234	;# 
  8434   003F6C                     PWM5DC          equ	16236	;# 
  8435   003F6C                     PWM5DCL         equ	16236	;# 
  8436   003F6D                     PWM5DCH         equ	16237	;# 
  8437   003F6E                     PWM5CON         equ	16238	;# 
  8438   003F70                     CCPR4           equ	16240	;# 
  8439   003F70                     CCPR4L          equ	16240	;# 
  8440   003F71                     CCPR4H          equ	16241	;# 
  8441   003F72                     CCP4CON         equ	16242	;# 
  8442   003F73                     CCP4CAP         equ	16243	;# 
  8443   003F74                     CCPR3           equ	16244	;# 
  8444   003F74                     CCPR3L          equ	16244	;# 
  8445   003F75                     CCPR3H          equ	16245	;# 
  8446   003F76                     CCP3CON         equ	16246	;# 
  8447   003F77                     CCP3CAP         equ	16247	;# 
  8448   003F78                     CCPR2           equ	16248	;# 
  8449   003F78                     CCPR2L          equ	16248	;# 
  8450   003F79                     CCPR2H          equ	16249	;# 
  8451   003F7A                     CCP2CON         equ	16250	;# 
  8452   003F7B                     CCP2CAP         equ	16251	;# 
  8453   003F7C                     CCPR1           equ	16252	;# 
  8454   003F7C                     CCPR1L          equ	16252	;# 
  8455   003F7D                     CCPR1H          equ	16253	;# 
  8456   003F7E                     CCP1CON         equ	16254	;# 
  8457   003F7F                     CCP1CAP         equ	16255	;# 
  8458   003F92                     T6TMR           equ	16274	;# 
  8459   003F92                     TMR6            equ	16274	;# 
  8460   003F93                     T6PR            equ	16275	;# 
  8461   003F93                     PR6             equ	16275	;# 
  8462   003F94                     T6CON           equ	16276	;# 
  8463   003F95                     T6HLT           equ	16277	;# 
  8464   003F96                     T6CLKCON        equ	16278	;# 
  8465   003F96                     T6CLK           equ	16278	;# 
  8466   003F97                     T6RST           equ	16279	;# 
  8467   003F98                     TMR5            equ	16280	;# 
  8468   003F98                     TMR5L           equ	16280	;# 
  8469   003F99                     TMR5H           equ	16281	;# 
  8470   003F9A                     T5CON           equ	16282	;# 
  8471   003F9A                     TMR5CON         equ	16282	;# 
  8472   003F9B                     T5GCON          equ	16283	;# 
  8473   003F9B                     TMR5GCON        equ	16283	;# 
  8474   003F9C                     T5GATE          equ	16284	;# 
  8475   003F9C                     TMR5GATE        equ	16284	;# 
  8476   003F9D                     T5CLK           equ	16285	;# 
  8477   003F9D                     TMR5CLK         equ	16285	;# 
  8478   003F9D                     PR5             equ	16285	;# 
  8479   003F9E                     T4TMR           equ	16286	;# 
  8480   003F9E                     TMR4            equ	16286	;# 
  8481   003F9F                     T4PR            equ	16287	;# 
  8482   003F9F                     PR4             equ	16287	;# 
  8483   003FA0                     T4CON           equ	16288	;# 
  8484   003FA1                     T4HLT           equ	16289	;# 
  8485   003FA2                     T4CLKCON        equ	16290	;# 
  8486   003FA2                     T4CLK           equ	16290	;# 
  8487   003FA3                     T4RST           equ	16291	;# 
  8488   003FA4                     TMR3            equ	16292	;# 
  8489   003FA4                     TMR3L           equ	16292	;# 
  8490   003FA5                     TMR3H           equ	16293	;# 
  8491   003FA6                     T3CON           equ	16294	;# 
  8492   003FA6                     TMR3CON         equ	16294	;# 
  8493   003FA7                     T3GCON          equ	16295	;# 
  8494   003FA7                     TMR3GCON        equ	16295	;# 
  8495   003FA8                     T3GATE          equ	16296	;# 
  8496   003FA8                     TMR3GATE        equ	16296	;# 
  8497   003FA9                     T3CLK           equ	16297	;# 
  8498   003FA9                     TMR3CLK         equ	16297	;# 
  8499   003FA9                     PR3             equ	16297	;# 
  8500   003FAA                     T2TMR           equ	16298	;# 
  8501   003FAA                     TMR2            equ	16298	;# 
  8502   003FAB                     T2PR            equ	16299	;# 
  8503   003FAB                     PR2             equ	16299	;# 
  8504   003FAC                     T2CON           equ	16300	;# 
  8505   003FAD                     T2HLT           equ	16301	;# 
  8506   003FAE                     T2CLKCON        equ	16302	;# 
  8507   003FAE                     T2CLK           equ	16302	;# 
  8508   003FAF                     T2RST           equ	16303	;# 
  8509   003FB0                     TMR1            equ	16304	;# 
  8510   003FB0                     TMR1L           equ	16304	;# 
  8511   003FB1                     TMR1H           equ	16305	;# 
  8512   003FB2                     T1CON           equ	16306	;# 
  8513   003FB2                     TMR1CON         equ	16306	;# 
  8514   003FB3                     T1GCON          equ	16307	;# 
  8515   003FB3                     TMR1GCON        equ	16307	;# 
  8516   003FB4                     T1GATE          equ	16308	;# 
  8517   003FB4                     TMR1GATE        equ	16308	;# 
  8518   003FB5                     T1CLK           equ	16309	;# 
  8519   003FB5                     TMR1CLK         equ	16309	;# 
  8520   003FB5                     PR1             equ	16309	;# 
  8521   003FB6                     TMR0L           equ	16310	;# 
  8522   003FB6                     TMR0            equ	16310	;# 
  8523   003FB7                     TMR0H           equ	16311	;# 
  8524   003FB7                     PR0             equ	16311	;# 
  8525   003FB8                     T0CON0          equ	16312	;# 
  8526   003FB9                     T0CON1          equ	16313	;# 
  8527   003FBA                     LATA            equ	16314	;# 
  8528   003FBB                     LATB            equ	16315	;# 
  8529   003FBC                     LATC            equ	16316	;# 
  8530   003FBD                     LATD            equ	16317	;# 
  8531   003FBE                     LATE            equ	16318	;# 
  8532   003FBF                     LATF            equ	16319	;# 
  8533   003FC2                     TRISA           equ	16322	;# 
  8534   003FC3                     TRISB           equ	16323	;# 
  8535   003FC4                     TRISC           equ	16324	;# 
  8536   003FC5                     TRISD           equ	16325	;# 
  8537   003FC6                     TRISE           equ	16326	;# 
  8538   003FC7                     TRISF           equ	16327	;# 
  8539   003FCA                     PORTA           equ	16330	;# 
  8540   003FCB                     PORTB           equ	16331	;# 
  8541   003FCC                     PORTC           equ	16332	;# 
  8542   003FCD                     PORTD           equ	16333	;# 
  8543   003FCE                     PORTE           equ	16334	;# 
  8544   003FCF                     PORTF           equ	16335	;# 
  8545   003FD2                     INTCON0         equ	16338	;# 
  8546   003FD3                     INTCON1         equ	16339	;# 
  8547   003FD4                     IVTLOCK         equ	16340	;# 
  8548   003FD5                     IVTBASE         equ	16341	;# 
  8549   003FD5                     IVTBASEL        equ	16341	;# 
  8550   003FD6                     IVTBASEH        equ	16342	;# 
  8551   003FD7                     IVTBASEU        equ	16343	;# 
  8552   003FD8                     STATUS          equ	16344	;# 
  8553   003FD9                     FSR2            equ	16345	;# 
  8554   003FD9                     FSR2L           equ	16345	;# 
  8555   003FDA                     FSR2H           equ	16346	;# 
  8556   003FDB                     PLUSW2          equ	16347	;# 
  8557   003FDC                     PREINC2         equ	16348	;# 
  8558   003FDD                     POSTDEC2        equ	16349	;# 
  8559   003FDE                     POSTINC2        equ	16350	;# 
  8560   003FDF                     INDF2           equ	16351	;# 
  8561   003FE0                     BSR             equ	16352	;# 
  8562   003FE1                     FSR1            equ	16353	;# 
  8563   003FE1                     FSR1L           equ	16353	;# 
  8564   003FE2                     FSR1H           equ	16354	;# 
  8565   003FE3                     PLUSW1          equ	16355	;# 
  8566   003FE4                     PREINC1         equ	16356	;# 
  8567   003FE5                     POSTDEC1        equ	16357	;# 
  8568   003FE6                     POSTINC1        equ	16358	;# 
  8569   003FE7                     INDF1           equ	16359	;# 
  8570   003FE8                     WREG            equ	16360	;# 
  8571   003FE9                     FSR0            equ	16361	;# 
  8572   003FE9                     FSR0L           equ	16361	;# 
  8573   003FEA                     FSR0H           equ	16362	;# 
  8574   003FEB                     PLUSW0          equ	16363	;# 
  8575   003FEC                     PREINC0         equ	16364	;# 
  8576   003FED                     POSTDEC0        equ	16365	;# 
  8577   003FEE                     POSTINC0        equ	16366	;# 
  8578   003FEF                     INDF0           equ	16367	;# 
  8579   003FF0                     PCON0           equ	16368	;# 
  8580   003FF1                     PCON1           equ	16369	;# 
  8581   003FF3                     PROD            equ	16371	;# 
  8582   003FF3                     PRODL           equ	16371	;# 
  8583   003FF4                     PRODH           equ	16372	;# 
  8584   003FF5                     TABLAT          equ	16373	;# 
  8585   003FF6                     TBLPTR          equ	16374	;# 
  8586   003FF6                     TBLPTRL         equ	16374	;# 
  8587   003FF7                     TBLPTRH         equ	16375	;# 
  8588   003FF8                     TBLPTRU         equ	16376	;# 
  8589   003FF9                     PCLAT           equ	16377	;# 
  8590   003FF9                     PCL             equ	16377	;# 
  8591   003FFA                     PCLATH          equ	16378	;# 
  8592   003FFB                     PCLATU          equ	16379	;# 
  8593   003FFC                     STKPTR          equ	16380	;# 
  8594   003FFD                     TOS             equ	16381	;# 
  8595   003FFD                     TOSL            equ	16381	;# 
  8596   003FFE                     TOSH            equ	16382	;# 
  8597   003FFF                     TOSU            equ	16383	;# 
  8598   003880                     STATUS_CSHAD    equ	14464	;# 
  8599   003881                     WREG_CSHAD      equ	14465	;# 
  8600   003882                     BSR_CSHAD       equ	14466	;# 
  8601   003883                     SHADCON         equ	14467	;# 
  8602   003884                     STATUS_SHAD     equ	14468	;# 
  8603   003885                     WREG_SHAD       equ	14469	;# 
  8604   003886                     BSR_SHAD        equ	14470	;# 
  8605   003887                     PCLATH_SHAD     equ	14471	;# 
  8606   003888                     PCLATU_SHAD     equ	14472	;# 
  8607   003889                     FSR0SH          equ	14473	;# 
  8608   003889                     FSR0L_SHAD      equ	14473	;# 
  8609   00388A                     FSR0H_SHAD      equ	14474	;# 
  8610   00388B                     FSR1SH          equ	14475	;# 
  8611   00388B                     FSR1L_SHAD      equ	14475	;# 
  8612   00388C                     FSR1H_SHAD      equ	14476	;# 
  8613   00388D                     FSR2SH          equ	14477	;# 
  8614   00388D                     FSR2L_SHAD      equ	14477	;# 
  8615   00388E                     FSR2H_SHAD      equ	14478	;# 
  8616   00388F                     PRODSH          equ	14479	;# 
  8617   00388F                     PRODL_SHAD      equ	14479	;# 
  8618   003890                     PRODH_SHAD      equ	14480	;# 
  8619   00389D                     IVTADL          equ	14493	;# 
  8620   00389E                     IVTADH          equ	14494	;# 
  8621   00389F                     IVTADU          equ	14495	;# 
  8622   00395B                     WDTCON0         equ	14683	;# 
  8623   00395C                     WDTCON1         equ	14684	;# 
  8624   00395D                     WDTPSL          equ	14685	;# 
  8625   00395E                     WDTPSH          equ	14686	;# 
  8626   00395F                     WDTTMR          equ	14687	;# 
  8627   003960                     CRCDATA         equ	14688	;# 
  8628   003960                     CRCDATL         equ	14688	;# 
  8629   003961                     CRCDATH         equ	14689	;# 
  8630   003962                     CRCACC          equ	14690	;# 
  8631   003962                     CRCACCL         equ	14690	;# 
  8632   003963                     CRCACCH         equ	14691	;# 
  8633   003964                     CRCSHFT         equ	14692	;# 
  8634   003964                     CRCSHIFTL       equ	14692	;# 
  8635   003965                     CRCSHIFTH       equ	14693	;# 
  8636   003966                     CRCXOR          equ	14694	;# 
  8637   003966                     CRCXORL         equ	14694	;# 
  8638   003967                     CRCXORH         equ	14695	;# 
  8639   003968                     CRCCON0         equ	14696	;# 
  8640   003969                     CRCCON1         equ	14697	;# 
  8641   003976                     SCANLADR        equ	14710	;# 
  8642   003976                     SCANLADRL       equ	14710	;# 
  8643   003977                     SCANLADRH       equ	14711	;# 
  8644   003978                     SCANLADRU       equ	14712	;# 
  8645   003979                     SCANHADR        equ	14713	;# 
  8646   003979                     SCANHADRL       equ	14713	;# 
  8647   00397A                     SCANHADRH       equ	14714	;# 
  8648   00397B                     SCANHADRU       equ	14715	;# 
  8649   00397C                     SCANCON0        equ	14716	;# 
  8650   00397D                     SCANTRIG        equ	14717	;# 
  8651   003980                     IPR0            equ	14720	;# 
  8652   003981                     IPR1            equ	14721	;# 
  8653   003982                     IPR2            equ	14722	;# 
  8654   003983                     IPR3            equ	14723	;# 
  8655   003984                     IPR4            equ	14724	;# 
  8656   003985                     IPR5            equ	14725	;# 
  8657   003986                     IPR6            equ	14726	;# 
  8658   003987                     IPR7            equ	14727	;# 
  8659   003988                     IPR8            equ	14728	;# 
  8660   003989                     IPR9            equ	14729	;# 
  8661   00398A                     IPR10           equ	14730	;# 
  8662   003990                     PIE0            equ	14736	;# 
  8663   003991                     PIE1            equ	14737	;# 
  8664   003992                     PIE2            equ	14738	;# 
  8665   003993                     PIE3            equ	14739	;# 
  8666   003994                     PIE4            equ	14740	;# 
  8667   003995                     PIE5            equ	14741	;# 
  8668   003996                     PIE6            equ	14742	;# 
  8669   003997                     PIE7            equ	14743	;# 
  8670   003998                     PIE8            equ	14744	;# 
  8671   003999                     PIE9            equ	14745	;# 
  8672   00399A                     PIE10           equ	14746	;# 
  8673   0039A0                     PIR0            equ	14752	;# 
  8674   0039A1                     PIR1            equ	14753	;# 
  8675   0039A2                     PIR2            equ	14754	;# 
  8676   0039A3                     PIR3            equ	14755	;# 
  8677   0039A4                     PIR4            equ	14756	;# 
  8678   0039A5                     PIR5            equ	14757	;# 
  8679   0039A6                     PIR6            equ	14758	;# 
  8680   0039A7                     PIR7            equ	14759	;# 
  8681   0039A8                     PIR8            equ	14760	;# 
  8682   0039A9                     PIR9            equ	14761	;# 
  8683   0039AA                     PIR10           equ	14762	;# 
  8684   0039C0                     PMD0            equ	14784	;# 
  8685   0039C1                     PMD1            equ	14785	;# 
  8686   0039C2                     PMD2            equ	14786	;# 
  8687   0039C3                     PMD3            equ	14787	;# 
  8688   0039C4                     PMD4            equ	14788	;# 
  8689   0039C5                     PMD5            equ	14789	;# 
  8690   0039C6                     PMD6            equ	14790	;# 
  8691   0039C7                     PMD7            equ	14791	;# 
  8692   0039D0                     BORCON          equ	14800	;# 
  8693   0039D1                     VREGCON         equ	14801	;# 
  8694   0039D8                     CPUDOZE         equ	14808	;# 
  8695   0039D9                     OSCCON1         equ	14809	;# 
  8696   0039DA                     OSCCON2         equ	14810	;# 
  8697   0039DB                     OSCCON3         equ	14811	;# 
  8698   0039DC                     OSCSTAT         equ	14812	;# 
  8699   0039DC                     OSCSTAT1        equ	14812	;# 
  8700   0039DD                     OSCEN           equ	14813	;# 
  8701   0039DE                     OSCTUNE         equ	14814	;# 
  8702   0039DF                     OSCFRQ          equ	14815	;# 
  8703   0039E0                     NVMADRL         equ	14816	;# 
  8704   0039E1                     NVMADRH         equ	14817	;# 
  8705   0039E3                     NVMDAT          equ	14819	;# 
  8706   0039E5                     NVMCON1         equ	14821	;# 
  8707   0039E6                     NVMCON2         equ	14822	;# 
  8708   0039EF                     PRLOCK          equ	14831	;# 
  8709   0039F1                     ISRPR           equ	14833	;# 
  8710   0039F2                     MAINPR          equ	14834	;# 
  8711   0039F3                     DMA1PR          equ	14835	;# 
  8712   0039F4                     DMA2PR          equ	14836	;# 
  8713   0039F7                     SCANPR          equ	14839	;# 
  8714   003A00                     RA0PPS          equ	14848	;# 
  8715   003A01                     RA1PPS          equ	14849	;# 
  8716   003A02                     RA2PPS          equ	14850	;# 
  8717   003A03                     RA3PPS          equ	14851	;# 
  8718   003A04                     RA4PPS          equ	14852	;# 
  8719   003A05                     RA5PPS          equ	14853	;# 
  8720   003A06                     RA6PPS          equ	14854	;# 
  8721   003A07                     RA7PPS          equ	14855	;# 
  8722   003A08                     RB0PPS          equ	14856	;# 
  8723   003A09                     RB1PPS          equ	14857	;# 
  8724   003A0A                     RB2PPS          equ	14858	;# 
  8725   003A0B                     RB3PPS          equ	14859	;# 
  8726   003A0C                     RB4PPS          equ	14860	;# 
  8727   003A0D                     RB5PPS          equ	14861	;# 
  8728   003A0E                     RB6PPS          equ	14862	;# 
  8729   003A0F                     RB7PPS          equ	14863	;# 
  8730   003A10                     RC0PPS          equ	14864	;# 
  8731   003A11                     RC1PPS          equ	14865	;# 
  8732   003A12                     RC2PPS          equ	14866	;# 
  8733   003A13                     RC3PPS          equ	14867	;# 
  8734   003A14                     RC4PPS          equ	14868	;# 
  8735   003A15                     RC5PPS          equ	14869	;# 
  8736   003A16                     RC6PPS          equ	14870	;# 
  8737   003A17                     RC7PPS          equ	14871	;# 
  8738   003A18                     RD0PPS          equ	14872	;# 
  8739   003A19                     RD1PPS          equ	14873	;# 
  8740   003A1A                     RD2PPS          equ	14874	;# 
  8741   003A1B                     RD3PPS          equ	14875	;# 
  8742   003A1C                     RD4PPS          equ	14876	;# 
  8743   003A1D                     RD5PPS          equ	14877	;# 
  8744   003A1E                     RD6PPS          equ	14878	;# 
  8745   003A1F                     RD7PPS          equ	14879	;# 
  8746   003A20                     RE0PPS          equ	14880	;# 
  8747   003A21                     RE1PPS          equ	14881	;# 
  8748   003A22                     RE2PPS          equ	14882	;# 
  8749   003A28                     RF0PPS          equ	14888	;# 
  8750   003A29                     RF1PPS          equ	14889	;# 
  8751   003A2A                     RF2PPS          equ	14890	;# 
  8752   003A2B                     RF3PPS          equ	14891	;# 
  8753   003A2C                     RF4PPS          equ	14892	;# 
  8754   003A2D                     RF5PPS          equ	14893	;# 
  8755   003A2E                     RF6PPS          equ	14894	;# 
  8756   003A2F                     RF7PPS          equ	14895	;# 
  8757   003A40                     ANSELA          equ	14912	;# 
  8758   003A41                     WPUA            equ	14913	;# 
  8759   003A42                     ODCONA          equ	14914	;# 
  8760   003A43                     SLRCONA         equ	14915	;# 
  8761   003A44                     INLVLA          equ	14916	;# 
  8762   003A45                     IOCAP           equ	14917	;# 
  8763   003A46                     IOCAN           equ	14918	;# 
  8764   003A47                     IOCAF           equ	14919	;# 
  8765   003A50                     ANSELB          equ	14928	;# 
  8766   003A51                     WPUB            equ	14929	;# 
  8767   003A52                     ODCONB          equ	14930	;# 
  8768   003A53                     SLRCONB         equ	14931	;# 
  8769   003A54                     INLVLB          equ	14932	;# 
  8770   003A55                     IOCBP           equ	14933	;# 
  8771   003A56                     IOCBN           equ	14934	;# 
  8772   003A57                     IOCBF           equ	14935	;# 
  8773   003A5A                     RB1I2C          equ	14938	;# 
  8774   003A5B                     RB2I2C          equ	14939	;# 
  8775   003A60                     ANSELC          equ	14944	;# 
  8776   003A61                     WPUC            equ	14945	;# 
  8777   003A62                     ODCONC          equ	14946	;# 
  8778   003A63                     SLRCONC         equ	14947	;# 
  8779   003A64                     INLVLC          equ	14948	;# 
  8780   003A65                     IOCCP           equ	14949	;# 
  8781   003A66                     IOCCN           equ	14950	;# 
  8782   003A67                     IOCCF           equ	14951	;# 
  8783   003A6A                     RC3I2C          equ	14954	;# 
  8784   003A6B                     RC4I2C          equ	14955	;# 
  8785   003A70                     ANSELD          equ	14960	;# 
  8786   003A71                     WPUD            equ	14961	;# 
  8787   003A72                     ODCOND          equ	14962	;# 
  8788   003A73                     SLRCOND         equ	14963	;# 
  8789   003A74                     INLVLD          equ	14964	;# 
  8790   003A7A                     RD0I2C          equ	14970	;# 
  8791   003A7B                     RD1I2C          equ	14971	;# 
  8792   003A80                     ANSELE          equ	14976	;# 
  8793   003A81                     WPUE            equ	14977	;# 
  8794   003A82                     ODCONE          equ	14978	;# 
  8795   003A83                     SLRCONE         equ	14979	;# 
  8796   003A84                     INLVLE          equ	14980	;# 
  8797   003A85                     IOCEP           equ	14981	;# 
  8798   003A86                     IOCEN           equ	14982	;# 
  8799   003A87                     IOCEF           equ	14983	;# 
  8800   003A90                     ANSELF          equ	14992	;# 
  8801   003A91                     WPUF            equ	14993	;# 
  8802   003A92                     ODCONF          equ	14994	;# 
  8803   003A93                     SLRCONF         equ	14995	;# 
  8804   003A94                     INLVLF          equ	14996	;# 
  8805   003ABF                     PPSLOCK         equ	15039	;# 
  8806   003AC0                     INT0PPS         equ	15040	;# 
  8807   003AC1                     INT1PPS         equ	15041	;# 
  8808   003AC2                     INT2PPS         equ	15042	;# 
  8809   003AC3                     T0CKIPPS        equ	15043	;# 
  8810   003AC4                     T1CKIPPS        equ	15044	;# 
  8811   003AC5                     T1GPPS          equ	15045	;# 
  8812   003AC6                     T3CKIPPS        equ	15046	;# 
  8813   003AC7                     T3GPPS          equ	15047	;# 
  8814   003AC8                     T5CKIPPS        equ	15048	;# 
  8815   003AC9                     T5GPPS          equ	15049	;# 
  8816   003ACA                     T2INPPS         equ	15050	;# 
  8817   003ACB                     T4INPPS         equ	15051	;# 
  8818   003ACC                     T6INPPS         equ	15052	;# 
  8819   003ACD                     CCP1PPS         equ	15053	;# 
  8820   003ACE                     CCP2PPS         equ	15054	;# 
  8821   003ACF                     CCP3PPS         equ	15055	;# 
  8822   003AD0                     CCP4PPS         equ	15056	;# 
  8823   003AD1                     SMT1WINPPS      equ	15057	;# 
  8824   003AD2                     SMT1SIGPPS      equ	15058	;# 
  8825   003AD3                     CWG1INPPS       equ	15059	;# 
  8826   003AD4                     CWG2INPPS       equ	15060	;# 
  8827   003AD5                     CWG3INPPS       equ	15061	;# 
  8828   003AD6                     MD1CARLPPS      equ	15062	;# 
  8829   003AD7                     MD1CARHPPS      equ	15063	;# 
  8830   003AD8                     MD1SRCPPS       equ	15064	;# 
  8831   003AD9                     CLCIN0PPS       equ	15065	;# 
  8832   003ADA                     CLCIN1PPS       equ	15066	;# 
  8833   003ADB                     CLCIN2PPS       equ	15067	;# 
  8834   003ADC                     CLCIN3PPS       equ	15068	;# 
  8835   003ADD                     ADACTPPS        equ	15069	;# 
  8836   003ADE                     SPI1SCKPPS      equ	15070	;# 
  8837   003ADF                     SPI1SDIPPS      equ	15071	;# 
  8838   003AE0                     SPI1SSPPS       equ	15072	;# 
  8839   003AE1                     I2C1SCLPPS      equ	15073	;# 
  8840   003AE2                     I2C1SDAPPS      equ	15074	;# 
  8841   003AE3                     I2C2SCLPPS      equ	15075	;# 
  8842   003AE4                     I2C2SDAPPS      equ	15076	;# 
  8843   003AE5                     U1RXPPS         equ	15077	;# 
  8844   003AE6                     U1CTSPPS        equ	15078	;# 
  8845   003AE8                     U2RXPPS         equ	15080	;# 
  8846   003AE9                     U2CTSPPS        equ	15081	;# 
  8847   003BC9                     DMA2BUF         equ	15305	;# 
  8848   003BCA                     DMA2DCNT        equ	15306	;# 
  8849   003BCA                     DMA2DCNTL       equ	15306	;# 
  8850   003BCB                     DMA2DCNTH       equ	15307	;# 
  8851   003BCC                     DMA2DPTR        equ	15308	;# 
  8852   003BCC                     DMA2DPTRL       equ	15308	;# 
  8853   003BCD                     DMA2DPTRH       equ	15309	;# 
  8854   003BCE                     DMA2DSZ         equ	15310	;# 
  8855   003BCE                     DMA2DSZL        equ	15310	;# 
  8856   003BCF                     DMA2DSZH        equ	15311	;# 
  8857   003BD0                     DMA2DSA         equ	15312	;# 
  8858   003BD0                     DMA2DSAL        equ	15312	;# 
  8859   003BD1                     DMA2DSAH        equ	15313	;# 
  8860   003BD2                     DMA2SCNT        equ	15314	;# 
  8861   003BD2                     DMA2SCNTL       equ	15314	;# 
  8862   003BD3                     DMA2SCNTH       equ	15315	;# 
  8863   003BD4                     DMA2SPTR        equ	15316	;# 
  8864   003BD4                     DMA2SPTRL       equ	15316	;# 
  8865   003BD5                     DMA2SPTRH       equ	15317	;# 
  8866   003BD6                     DMA2SPTRU       equ	15318	;# 
  8867   003BD7                     DMA2SSZ         equ	15319	;# 
  8868   003BD7                     DMA2SSZL        equ	15319	;# 
  8869   003BD8                     DMA2SSZH        equ	15320	;# 
  8870   003BD9                     DMA2SSA         equ	15321	;# 
  8871   003BD9                     DMA2SSAL        equ	15321	;# 
  8872   003BDA                     DMA2SSAH        equ	15322	;# 
  8873   003BDB                     DMA2SSAU        equ	15323	;# 
  8874   003BDC                     DMA2CON0        equ	15324	;# 
  8875   003BDD                     DMA2CON1        equ	15325	;# 
  8876   003BDE                     DMA2AIRQ        equ	15326	;# 
  8877   003BDF                     DMA2SIRQ        equ	15327	;# 
  8878   003BE9                     DMA1BUF         equ	15337	;# 
  8879   003BEA                     DMA1DCNT        equ	15338	;# 
  8880   003BEA                     DMA1DCNTL       equ	15338	;# 
  8881   003BEB                     DMA1DCNTH       equ	15339	;# 
  8882   003BEC                     DMA1DPTR        equ	15340	;# 
  8883   003BEC                     DMA1DPTRL       equ	15340	;# 
  8884   003BED                     DMA1DPTRH       equ	15341	;# 
  8885   003BEE                     DMA1DSZ         equ	15342	;# 
  8886   003BEE                     DMA1DSZL        equ	15342	;# 
  8887   003BEF                     DMA1DSZH        equ	15343	;# 
  8888   003BF0                     DMA1DSA         equ	15344	;# 
  8889   003BF0                     DMA1DSAL        equ	15344	;# 
  8890   003BF1                     DMA1DSAH        equ	15345	;# 
  8891   003BF2                     DMA1SCNT        equ	15346	;# 
  8892   003BF2                     DMA1SCNTL       equ	15346	;# 
  8893   003BF3                     DMA1SCNTH       equ	15347	;# 
  8894   003BF4                     DMA1SPTR        equ	15348	;# 
  8895   003BF4                     DMA1SPTRL       equ	15348	;# 
  8896   003BF5                     DMA1SPTRH       equ	15349	;# 
  8897   003BF6                     DMA1SPTRU       equ	15350	;# 
  8898   003BF7                     DMA1SSZ         equ	15351	;# 
  8899   003BF7                     DMA1SSZL        equ	15351	;# 
  8900   003BF8                     DMA1SSZH        equ	15352	;# 
  8901   003BF9                     DMA1SSA         equ	15353	;# 
  8902   003BF9                     DMA1SSAL        equ	15353	;# 
  8903   003BFA                     DMA1SSAH        equ	15354	;# 
  8904   003BFB                     DMA1SSAU        equ	15355	;# 
  8905   003BFC                     DMA1CON0        equ	15356	;# 
  8906   003BFD                     DMA1CON1        equ	15357	;# 
  8907   003BFE                     DMA1AIRQ        equ	15358	;# 
  8908   003BFF                     DMA1SIRQ        equ	15359	;# 
  8909   003C56                     CLC4CON         equ	15446	;# 
  8910   003C57                     CLC4POL         equ	15447	;# 
  8911   003C58                     CLC4SEL0        equ	15448	;# 
  8912   003C59                     CLC4SEL1        equ	15449	;# 
  8913   003C5A                     CLC4SEL2        equ	15450	;# 
  8914   003C5B                     CLC4SEL3        equ	15451	;# 
  8915   003C5C                     CLC4GLS0        equ	15452	;# 
  8916   003C5D                     CLC4GLS1        equ	15453	;# 
  8917   003C5E                     CLC4GLS2        equ	15454	;# 
  8918   003C5F                     CLC4GLS3        equ	15455	;# 
  8919   003C60                     CLC3CON         equ	15456	;# 
  8920   003C61                     CLC3POL         equ	15457	;# 
  8921   003C62                     CLC3SEL0        equ	15458	;# 
  8922   003C63                     CLC3SEL1        equ	15459	;# 
  8923   003C64                     CLC3SEL2        equ	15460	;# 
  8924   003C65                     CLC3SEL3        equ	15461	;# 
  8925   003C66                     CLC3GLS0        equ	15462	;# 
  8926   003C67                     CLC3GLS1        equ	15463	;# 
  8927   003C68                     CLC3GLS2        equ	15464	;# 
  8928   003C69                     CLC3GLS3        equ	15465	;# 
  8929   003C6A                     CLC2CON         equ	15466	;# 
  8930   003C6B                     CLC2POL         equ	15467	;# 
  8931   003C6C                     CLC2SEL0        equ	15468	;# 
  8932   003C6D                     CLC2SEL1        equ	15469	;# 
  8933   003C6E                     CLC2SEL2        equ	15470	;# 
  8934   003C6F                     CLC2SEL3        equ	15471	;# 
  8935   003C70                     CLC2GLS0        equ	15472	;# 
  8936   003C71                     CLC2GLS1        equ	15473	;# 
  8937   003C72                     CLC2GLS2        equ	15474	;# 
  8938   003C73                     CLC2GLS3        equ	15475	;# 
  8939   003C74                     CLC1CON         equ	15476	;# 
  8940   003C75                     CLC1POL         equ	15477	;# 
  8941   003C76                     CLC1SEL0        equ	15478	;# 
  8942   003C77                     CLC1SEL1        equ	15479	;# 
  8943   003C78                     CLC1SEL2        equ	15480	;# 
  8944   003C79                     CLC1SEL3        equ	15481	;# 
  8945   003C7A                     CLC1GLS0        equ	15482	;# 
  8946   003C7B                     CLC1GLS1        equ	15483	;# 
  8947   003C7C                     CLC1GLS2        equ	15484	;# 
  8948   003C7D                     CLC1GLS3        equ	15485	;# 
  8949   003C7E                     CLCDATA0        equ	15486	;# 
  8950   003CE5                     CLKRCON         equ	15589	;# 
  8951   003CE6                     CLKRCLK         equ	15590	;# 
  8952   003CFA                     MD1CON0         equ	15610	;# 
  8953   003CFB                     MD1CON1         equ	15611	;# 
  8954   003CFC                     MD1SRC          equ	15612	;# 
  8955   003CFD                     MD1CARL         equ	15613	;# 
  8956   003CFE                     MD1CARH         equ	15614	;# 
  8957   003D10                     SPI1RXB         equ	15632	;# 
  8958   003D11                     SPI1TXB         equ	15633	;# 
  8959   003D12                     SPI1TCNT        equ	15634	;# 
  8960   003D12                     SPI1TCNTL       equ	15634	;# 
  8961   003D13                     SPI1TCNTH       equ	15635	;# 
  8962   003D14                     SPI1CON0        equ	15636	;# 
  8963   003D15                     SPI1CON1        equ	15637	;# 
  8964   003D16                     SPI1CON2        equ	15638	;# 
  8965   003D17                     SPI1STATUS      equ	15639	;# 
  8966   003D18                     SPI1TWIDTH      equ	15640	;# 
  8967   003D19                     SPI1BAUD        equ	15641	;# 
  8968   003D1A                     SPI1INTF        equ	15642	;# 
  8969   003D1B                     SPI1INTE        equ	15643	;# 
  8970   003D1C                     SPI1CLK         equ	15644	;# 
  8971   003D54                     I2C2RXB         equ	15700	;# 
  8972   003D55                     I2C2TXB         equ	15701	;# 
  8973   003D56                     I2C2CNT         equ	15702	;# 
  8974   003D57                     I2C2ADB0        equ	15703	;# 
  8975   003D58                     I2C2ADB1        equ	15704	;# 
  8976   003D59                     I2C2ADR0        equ	15705	;# 
  8977   003D5A                     I2C2ADR1        equ	15706	;# 
  8978   003D5B                     I2C2ADR2        equ	15707	;# 
  8979   003D5C                     I2C2ADR3        equ	15708	;# 
  8980   003D5D                     I2C2CON0        equ	15709	;# 
  8981   003D5E                     I2C2CON1        equ	15710	;# 
  8982   003D5F                     I2C2CON2        equ	15711	;# 
  8983   003D60                     I2C2ERR         equ	15712	;# 
  8984   003D61                     I2C2STAT0       equ	15713	;# 
  8985   003D62                     I2C2STAT1       equ	15714	;# 
  8986   003D63                     I2C2PIR         equ	15715	;# 
  8987   003D64                     I2C2PIE         equ	15716	;# 
  8988   003D65                     I2C2CLK         equ	15717	;# 
  8989   003D66                     I2C2BTO         equ	15718	;# 
  8990   003D6A                     I2C1RXB         equ	15722	;# 
  8991   003D6B                     I2C1TXB         equ	15723	;# 
  8992   003D6C                     I2C1CNT         equ	15724	;# 
  8993   003D6D                     I2C1ADB0        equ	15725	;# 
  8994   003D6E                     I2C1ADB1        equ	15726	;# 
  8995   003D6F                     I2C1ADR0        equ	15727	;# 
  8996   003D70                     I2C1ADR1        equ	15728	;# 
  8997   003D71                     I2C1ADR2        equ	15729	;# 
  8998   003D72                     I2C1ADR3        equ	15730	;# 
  8999   003D73                     I2C1CON0        equ	15731	;# 
  9000   003D74                     I2C1CON1        equ	15732	;# 
  9001   003D75                     I2C1CON2        equ	15733	;# 
  9002   003D76                     I2C1ERR         equ	15734	;# 
  9003   003D77                     I2C1STAT0       equ	15735	;# 
  9004   003D78                     I2C1STAT1       equ	15736	;# 
  9005   003D79                     I2C1PIR         equ	15737	;# 
  9006   003D7A                     I2C1PIE         equ	15738	;# 
  9007   003D7B                     I2C1CLK         equ	15739	;# 
  9008   003D7C                     I2C1BTO         equ	15740	;# 
  9009   003DD0                     U2RXB           equ	15824	;# 
  9010   003DD0                     U2RXBL          equ	15824	;# 
  9011   003DD2                     U2TXB           equ	15826	;# 
  9012   003DD2                     U2TXBL          equ	15826	;# 
  9013   003DD4                     U2P1            equ	15828	;# 
  9014   003DD4                     U2P1L           equ	15828	;# 
  9015   003DD6                     U2P2            equ	15830	;# 
  9016   003DD6                     U2P2L           equ	15830	;# 
  9017   003DD8                     U2P3            equ	15832	;# 
  9018   003DD8                     U2P3L           equ	15832	;# 
  9019   003DDA                     U2CON0          equ	15834	;# 
  9020   003DDB                     U2CON1          equ	15835	;# 
  9021   003DDC                     U2CON2          equ	15836	;# 
  9022   003DDD                     U2BRG           equ	15837	;# 
  9023   003DDD                     U2BRGL          equ	15837	;# 
  9024   003DDE                     U2BRGH          equ	15838	;# 
  9025   003DDF                     U2FIFO          equ	15839	;# 
  9026   003DE0                     U2UIR           equ	15840	;# 
  9027   003DE1                     U2ERRIR         equ	15841	;# 
  9028   003DE2                     U2ERRIE         equ	15842	;# 
  9029   003DE8                     U1RXB           equ	15848	;# 
  9030   003DE8                     U1RXBL          equ	15848	;# 
  9031   003DE9                     U1RXCHK         equ	15849	;# 
  9032   003DEA                     U1TXB           equ	15850	;# 
  9033   003DEA                     U1TXBL          equ	15850	;# 
  9034   003DEB                     U1TXCHK         equ	15851	;# 
  9035   003DEC                     U1P1            equ	15852	;# 
  9036   003DEC                     U1P1L           equ	15852	;# 
  9037   003DED                     U1P1H           equ	15853	;# 
  9038   003DEE                     U1P2            equ	15854	;# 
  9039   003DEE                     U1P2L           equ	15854	;# 
  9040   003DEF                     U1P2H           equ	15855	;# 
  9041   003DF0                     U1P3            equ	15856	;# 
  9042   003DF0                     U1P3L           equ	15856	;# 
  9043   003DF1                     U1P3H           equ	15857	;# 
  9044   003DF2                     U1CON0          equ	15858	;# 
  9045   003DF3                     U1CON1          equ	15859	;# 
  9046   003DF4                     U1CON2          equ	15860	;# 
  9047   003DF5                     U1BRG           equ	15861	;# 
  9048   003DF5                     U1BRGL          equ	15861	;# 
  9049   003DF6                     U1BRGH          equ	15862	;# 
  9050   003DF7                     U1FIFO          equ	15863	;# 
  9051   003DF8                     U1UIR           equ	15864	;# 
  9052   003DF9                     U1ERRIR         equ	15865	;# 
  9053   003DFA                     U1ERRIE         equ	15866	;# 
  9054   003E9C                     DAC1CON1        equ	16028	;# 
  9055   003E9E                     DAC1CON0        equ	16030	;# 
  9056   003EB8                     CM2CON0         equ	16056	;# 
  9057   003EB9                     CM2CON1         equ	16057	;# 
  9058   003EBA                     CM2NCH          equ	16058	;# 
  9059   003EBB                     CM2PCH          equ	16059	;# 
  9060   003EBC                     CM1CON0         equ	16060	;# 
  9061   003EBD                     CM1CON1         equ	16061	;# 
  9062   003EBE                     CM1NCH          equ	16062	;# 
  9063   003EBF                     CM1PCH          equ	16063	;# 
  9064   003EC0                     CMOUT           equ	16064	;# 
  9065   003EC1                     FVRCON          equ	16065	;# 
  9066   003EC3                     ZCDCON          equ	16067	;# 
  9067   003EC9                     HLVDCON0        equ	16073	;# 
  9068   003ECA                     HLVDCON1        equ	16074	;# 
  9069   003ED7                     ADCP            equ	16087	;# 
  9070   003EDE                     ADLTH           equ	16094	;# 
  9071   003EDE                     ADLTHL          equ	16094	;# 
  9072   003EDF                     ADLTHH          equ	16095	;# 
  9073   003EE0                     ADUTH           equ	16096	;# 
  9074   003EE0                     ADUTHL          equ	16096	;# 
  9075   003EE1                     ADUTHH          equ	16097	;# 
  9076   003EE2                     ADERR           equ	16098	;# 
  9077   003EE2                     ADERRL          equ	16098	;# 
  9078   003EE3                     ADERRH          equ	16099	;# 
  9079   003EE4                     ADSTPT          equ	16100	;# 
  9080   003EE4                     ADSTPTL         equ	16100	;# 
  9081   003EE5                     ADSTPTH         equ	16101	;# 
  9082   003EE6                     ADFLTR          equ	16102	;# 
  9083   003EE6                     ADFLTRL         equ	16102	;# 
  9084   003EE7                     ADFLTRH         equ	16103	;# 
  9085   003EE8                     ADACC           equ	16104	;# 
  9086   003EE8                     ADACCL          equ	16104	;# 
  9087   003EE9                     ADACCH          equ	16105	;# 
  9088   003EEA                     ADACCU          equ	16106	;# 
  9089   003EEB                     ADCNT           equ	16107	;# 
  9090   003EEC                     ADRPT           equ	16108	;# 
  9091   003EED                     ADPREV          equ	16109	;# 
  9092   003EED                     ADPREVL         equ	16109	;# 
  9093   003EEE                     ADPREVH         equ	16110	;# 
  9094   003EEF                     ADRES           equ	16111	;# 
  9095   003EEF                     ADRESL          equ	16111	;# 
  9096   003EF0                     ADRESH          equ	16112	;# 
  9097   003EF1                     ADPCH           equ	16113	;# 
  9098   003EF3                     ADACQ           equ	16115	;# 
  9099   003EF3                     ADACQL          equ	16115	;# 
  9100   003EF4                     ADACQH          equ	16116	;# 
  9101   003EF5                     ADCAP           equ	16117	;# 
  9102   003EF6                     ADPRE           equ	16118	;# 
  9103   003EF6                     ADPREL          equ	16118	;# 
  9104   003EF7                     ADPREH          equ	16119	;# 
  9105   003EF8                     ADCON0          equ	16120	;# 
  9106   003EF9                     ADCON1          equ	16121	;# 
  9107   003EFA                     ADCON2          equ	16122	;# 
  9108   003EFB                     ADCON3          equ	16123	;# 
  9109   003EFC                     ADSTAT          equ	16124	;# 
  9110   003EFD                     ADREF           equ	16125	;# 
  9111   003EFE                     ADACT           equ	16126	;# 
  9112   003EFF                     ADCLK           equ	16127	;# 
  9113   003F12                     SMT1TMR         equ	16146	;# 
  9114   003F12                     SMT1TMRL        equ	16146	;# 
  9115   003F13                     SMT1TMRH        equ	16147	;# 
  9116   003F14                     SMT1TMRU        equ	16148	;# 
  9117   003F15                     SMT1CPR         equ	16149	;# 
  9118   003F15                     SMT1CPRL        equ	16149	;# 
  9119   003F16                     SMT1CPRH        equ	16150	;# 
  9120   003F17                     SMT1CPRU        equ	16151	;# 
  9121   003F18                     SMT1CPW         equ	16152	;# 
  9122   003F18                     SMT1CPWL        equ	16152	;# 
  9123   003F19                     SMT1CPWH        equ	16153	;# 
  9124   003F1A                     SMT1CPWU        equ	16154	;# 
  9125   003F1B                     SMT1PR          equ	16155	;# 
  9126   003F1B                     SMT1PRL         equ	16155	;# 
  9127   003F1C                     SMT1PRH         equ	16156	;# 
  9128   003F1D                     SMT1PRU         equ	16157	;# 
  9129   003F1E                     SMT1CON0        equ	16158	;# 
  9130   003F1F                     SMT1CON1        equ	16159	;# 
  9131   003F20                     SMT1STAT        equ	16160	;# 
  9132   003F21                     SMT1CLK         equ	16161	;# 
  9133   003F22                     SMT1SIG         equ	16162	;# 
  9134   003F23                     SMT1WIN         equ	16163	;# 
  9135   003F38                     NCO1ACC         equ	16184	;# 
  9136   003F38                     NCO1ACCL        equ	16184	;# 
  9137   003F39                     NCO1ACCH        equ	16185	;# 
  9138   003F3A                     NCO1ACCU        equ	16186	;# 
  9139   003F3B                     NCO1INC         equ	16187	;# 
  9140   003F3B                     NCO1INCL        equ	16187	;# 
  9141   003F3C                     NCO1INCH        equ	16188	;# 
  9142   003F3D                     NCO1INCU        equ	16189	;# 
  9143   003F3E                     NCO1CON         equ	16190	;# 
  9144   003F3F                     NCO1CLK         equ	16191	;# 
  9145   003F40                     CWG3CLK         equ	16192	;# 
  9146   003F40                     CWG3CLKCON      equ	16192	;# 
  9147   003F41                     CWG3ISM         equ	16193	;# 
  9148   003F41                     CWG3DAT         equ	16193	;# 
  9149   003F42                     CWG3DBR         equ	16194	;# 
  9150   003F43                     CWG3DBF         equ	16195	;# 
  9151   003F44                     CWG3CON0        equ	16196	;# 
  9152   003F45                     CWG3CON1        equ	16197	;# 
  9153   003F46                     CWG3AS0         equ	16198	;# 
  9154   003F47                     CWG3AS1         equ	16199	;# 
  9155   003F48                     CWG3STR         equ	16200	;# 
  9156   003F49                     CWG2CLK         equ	16201	;# 
  9157   003F49                     CWG2CLKCON      equ	16201	;# 
  9158   003F4A                     CWG2ISM         equ	16202	;# 
  9159   003F4A                     CWG2DAT         equ	16202	;# 
  9160   003F4B                     CWG2DBR         equ	16203	;# 
  9161   003F4C                     CWG2DBF         equ	16204	;# 
  9162   003F4D                     CWG2CON0        equ	16205	;# 
  9163   003F4E                     CWG2CON1        equ	16206	;# 
  9164   003F4F                     CWG2AS0         equ	16207	;# 
  9165   003F50                     CWG2AS1         equ	16208	;# 
  9166   003F51                     CWG2STR         equ	16209	;# 
  9167   003F52                     CWG1CLK         equ	16210	;# 
  9168   003F52                     CWG1CLKCON      equ	16210	;# 
  9169   003F53                     CWG1ISM         equ	16211	;# 
  9170   003F53                     CWG1DAT         equ	16211	;# 
  9171   003F54                     CWG1DBR         equ	16212	;# 
  9172   003F55                     CWG1DBF         equ	16213	;# 
  9173   003F56                     CWG1CON0        equ	16214	;# 
  9174   003F57                     CWG1CON1        equ	16215	;# 
  9175   003F58                     CWG1AS0         equ	16216	;# 
  9176   003F59                     CWG1AS1         equ	16217	;# 
  9177   003F5A                     CWG1STR         equ	16218	;# 
  9178   003F5E                     CCPTMRS0        equ	16222	;# 
  9179   003F5F                     CCPTMRS1        equ	16223	;# 
  9180   003F60                     PWM8DC          equ	16224	;# 
  9181   003F60                     PWM8DCL         equ	16224	;# 
  9182   003F61                     PWM8DCH         equ	16225	;# 
  9183   003F62                     PWM8CON         equ	16226	;# 
  9184   003F64                     PWM7DC          equ	16228	;# 
  9185   003F64                     PWM7DCL         equ	16228	;# 
  9186   003F65                     PWM7DCH         equ	16229	;# 
  9187   003F66                     PWM7CON         equ	16230	;# 
  9188   003F68                     PWM6DC          equ	16232	;# 
  9189   003F68                     PWM6DCL         equ	16232	;# 
  9190   003F69                     PWM6DCH         equ	16233	;# 
  9191   003F6A                     PWM6CON         equ	16234	;# 
  9192   003F6C                     PWM5DC          equ	16236	;# 
  9193   003F6C                     PWM5DCL         equ	16236	;# 
  9194   003F6D                     PWM5DCH         equ	16237	;# 
  9195   003F6E                     PWM5CON         equ	16238	;# 
  9196   003F70                     CCPR4           equ	16240	;# 
  9197   003F70                     CCPR4L          equ	16240	;# 
  9198   003F71                     CCPR4H          equ	16241	;# 
  9199   003F72                     CCP4CON         equ	16242	;# 
  9200   003F73                     CCP4CAP         equ	16243	;# 
  9201   003F74                     CCPR3           equ	16244	;# 
  9202   003F74                     CCPR3L          equ	16244	;# 
  9203   003F75                     CCPR3H          equ	16245	;# 
  9204   003F76                     CCP3CON         equ	16246	;# 
  9205   003F77                     CCP3CAP         equ	16247	;# 
  9206   003F78                     CCPR2           equ	16248	;# 
  9207   003F78                     CCPR2L          equ	16248	;# 
  9208   003F79                     CCPR2H          equ	16249	;# 
  9209   003F7A                     CCP2CON         equ	16250	;# 
  9210   003F7B                     CCP2CAP         equ	16251	;# 
  9211   003F7C                     CCPR1           equ	16252	;# 
  9212   003F7C                     CCPR1L          equ	16252	;# 
  9213   003F7D                     CCPR1H          equ	16253	;# 
  9214   003F7E                     CCP1CON         equ	16254	;# 
  9215   003F7F                     CCP1CAP         equ	16255	;# 
  9216   003F92                     T6TMR           equ	16274	;# 
  9217   003F92                     TMR6            equ	16274	;# 
  9218   003F93                     T6PR            equ	16275	;# 
  9219   003F93                     PR6             equ	16275	;# 
  9220   003F94                     T6CON           equ	16276	;# 
  9221   003F95                     T6HLT           equ	16277	;# 
  9222   003F96                     T6CLKCON        equ	16278	;# 
  9223   003F96                     T6CLK           equ	16278	;# 
  9224   003F97                     T6RST           equ	16279	;# 
  9225   003F98                     TMR5            equ	16280	;# 
  9226   003F98                     TMR5L           equ	16280	;# 
  9227   003F99                     TMR5H           equ	16281	;# 
  9228   003F9A                     T5CON           equ	16282	;# 
  9229   003F9A                     TMR5CON         equ	16282	;# 
  9230   003F9B                     T5GCON          equ	16283	;# 
  9231   003F9B                     TMR5GCON        equ	16283	;# 
  9232   003F9C                     T5GATE          equ	16284	;# 
  9233   003F9C                     TMR5GATE        equ	16284	;# 
  9234   003F9D                     T5CLK           equ	16285	;# 
  9235   003F9D                     TMR5CLK         equ	16285	;# 
  9236   003F9D                     PR5             equ	16285	;# 
  9237   003F9E                     T4TMR           equ	16286	;# 
  9238   003F9E                     TMR4            equ	16286	;# 
  9239   003F9F                     T4PR            equ	16287	;# 
  9240   003F9F                     PR4             equ	16287	;# 
  9241   003FA0                     T4CON           equ	16288	;# 
  9242   003FA1                     T4HLT           equ	16289	;# 
  9243   003FA2                     T4CLKCON        equ	16290	;# 
  9244   003FA2                     T4CLK           equ	16290	;# 
  9245   003FA3                     T4RST           equ	16291	;# 
  9246   003FA4                     TMR3            equ	16292	;# 
  9247   003FA4                     TMR3L           equ	16292	;# 
  9248   003FA5                     TMR3H           equ	16293	;# 
  9249   003FA6                     T3CON           equ	16294	;# 
  9250   003FA6                     TMR3CON         equ	16294	;# 
  9251   003FA7                     T3GCON          equ	16295	;# 
  9252   003FA7                     TMR3GCON        equ	16295	;# 
  9253   003FA8                     T3GATE          equ	16296	;# 
  9254   003FA8                     TMR3GATE        equ	16296	;# 
  9255   003FA9                     T3CLK           equ	16297	;# 
  9256   003FA9                     TMR3CLK         equ	16297	;# 
  9257   003FA9                     PR3             equ	16297	;# 
  9258   003FAA                     T2TMR           equ	16298	;# 
  9259   003FAA                     TMR2            equ	16298	;# 
  9260   003FAB                     T2PR            equ	16299	;# 
  9261   003FAB                     PR2             equ	16299	;# 
  9262   003FAC                     T2CON           equ	16300	;# 
  9263   003FAD                     T2HLT           equ	16301	;# 
  9264   003FAE                     T2CLKCON        equ	16302	;# 
  9265   003FAE                     T2CLK           equ	16302	;# 
  9266   003FAF                     T2RST           equ	16303	;# 
  9267   003FB0                     TMR1            equ	16304	;# 
  9268   003FB0                     TMR1L           equ	16304	;# 
  9269   003FB1                     TMR1H           equ	16305	;# 
  9270   003FB2                     T1CON           equ	16306	;# 
  9271   003FB2                     TMR1CON         equ	16306	;# 
  9272   003FB3                     T1GCON          equ	16307	;# 
  9273   003FB3                     TMR1GCON        equ	16307	;# 
  9274   003FB4                     T1GATE          equ	16308	;# 
  9275   003FB4                     TMR1GATE        equ	16308	;# 
  9276   003FB5                     T1CLK           equ	16309	;# 
  9277   003FB5                     TMR1CLK         equ	16309	;# 
  9278   003FB5                     PR1             equ	16309	;# 
  9279   003FB6                     TMR0L           equ	16310	;# 
  9280   003FB6                     TMR0            equ	16310	;# 
  9281   003FB7                     TMR0H           equ	16311	;# 
  9282   003FB7                     PR0             equ	16311	;# 
  9283   003FB8                     T0CON0          equ	16312	;# 
  9284   003FB9                     T0CON1          equ	16313	;# 
  9285   003FBA                     LATA            equ	16314	;# 
  9286   003FBB                     LATB            equ	16315	;# 
  9287   003FBC                     LATC            equ	16316	;# 
  9288   003FBD                     LATD            equ	16317	;# 
  9289   003FBE                     LATE            equ	16318	;# 
  9290   003FBF                     LATF            equ	16319	;# 
  9291   003FC2                     TRISA           equ	16322	;# 
  9292   003FC3                     TRISB           equ	16323	;# 
  9293   003FC4                     TRISC           equ	16324	;# 
  9294   003FC5                     TRISD           equ	16325	;# 
  9295   003FC6                     TRISE           equ	16326	;# 
  9296   003FC7                     TRISF           equ	16327	;# 
  9297   003FCA                     PORTA           equ	16330	;# 
  9298   003FCB                     PORTB           equ	16331	;# 
  9299   003FCC                     PORTC           equ	16332	;# 
  9300   003FCD                     PORTD           equ	16333	;# 
  9301   003FCE                     PORTE           equ	16334	;# 
  9302   003FCF                     PORTF           equ	16335	;# 
  9303   003FD2                     INTCON0         equ	16338	;# 
  9304   003FD3                     INTCON1         equ	16339	;# 
  9305   003FD4                     IVTLOCK         equ	16340	;# 
  9306   003FD5                     IVTBASE         equ	16341	;# 
  9307   003FD5                     IVTBASEL        equ	16341	;# 
  9308   003FD6                     IVTBASEH        equ	16342	;# 
  9309   003FD7                     IVTBASEU        equ	16343	;# 
  9310   003FD8                     STATUS          equ	16344	;# 
  9311   003FD9                     FSR2            equ	16345	;# 
  9312   003FD9                     FSR2L           equ	16345	;# 
  9313   003FDA                     FSR2H           equ	16346	;# 
  9314   003FDB                     PLUSW2          equ	16347	;# 
  9315   003FDC                     PREINC2         equ	16348	;# 
  9316   003FDD                     POSTDEC2        equ	16349	;# 
  9317   003FDE                     POSTINC2        equ	16350	;# 
  9318   003FDF                     INDF2           equ	16351	;# 
  9319   003FE0                     BSR             equ	16352	;# 
  9320   003FE1                     FSR1            equ	16353	;# 
  9321   003FE1                     FSR1L           equ	16353	;# 
  9322   003FE2                     FSR1H           equ	16354	;# 
  9323   003FE3                     PLUSW1          equ	16355	;# 
  9324   003FE4                     PREINC1         equ	16356	;# 
  9325   003FE5                     POSTDEC1        equ	16357	;# 
  9326   003FE6                     POSTINC1        equ	16358	;# 
  9327   003FE7                     INDF1           equ	16359	;# 
  9328   003FE8                     WREG            equ	16360	;# 
  9329   003FE9                     FSR0            equ	16361	;# 
  9330   003FE9                     FSR0L           equ	16361	;# 
  9331   003FEA                     FSR0H           equ	16362	;# 
  9332   003FEB                     PLUSW0          equ	16363	;# 
  9333   003FEC                     PREINC0         equ	16364	;# 
  9334   003FED                     POSTDEC0        equ	16365	;# 
  9335   003FEE                     POSTINC0        equ	16366	;# 
  9336   003FEF                     INDF0           equ	16367	;# 
  9337   003FF0                     PCON0           equ	16368	;# 
  9338   003FF1                     PCON1           equ	16369	;# 
  9339   003FF3                     PROD            equ	16371	;# 
  9340   003FF3                     PRODL           equ	16371	;# 
  9341   003FF4                     PRODH           equ	16372	;# 
  9342   003FF5                     TABLAT          equ	16373	;# 
  9343   003FF6                     TBLPTR          equ	16374	;# 
  9344   003FF6                     TBLPTRL         equ	16374	;# 
  9345   003FF7                     TBLPTRH         equ	16375	;# 
  9346   003FF8                     TBLPTRU         equ	16376	;# 
  9347   003FF9                     PCLAT           equ	16377	;# 
  9348   003FF9                     PCL             equ	16377	;# 
  9349   003FFA                     PCLATH          equ	16378	;# 
  9350   003FFB                     PCLATU          equ	16379	;# 
  9351   003FFC                     STKPTR          equ	16380	;# 
  9352   003FFD                     TOS             equ	16381	;# 
  9353   003FFD                     TOSL            equ	16381	;# 
  9354   003FFE                     TOSH            equ	16382	;# 
  9355   003FFF                     TOSU            equ	16383	;# 
  9356   003880                     STATUS_CSHAD    equ	14464	;# 
  9357   003881                     WREG_CSHAD      equ	14465	;# 
  9358   003882                     BSR_CSHAD       equ	14466	;# 
  9359   003883                     SHADCON         equ	14467	;# 
  9360   003884                     STATUS_SHAD     equ	14468	;# 
  9361   003885                     WREG_SHAD       equ	14469	;# 
  9362   003886                     BSR_SHAD        equ	14470	;# 
  9363   003887                     PCLATH_SHAD     equ	14471	;# 
  9364   003888                     PCLATU_SHAD     equ	14472	;# 
  9365   003889                     FSR0SH          equ	14473	;# 
  9366   003889                     FSR0L_SHAD      equ	14473	;# 
  9367   00388A                     FSR0H_SHAD      equ	14474	;# 
  9368   00388B                     FSR1SH          equ	14475	;# 
  9369   00388B                     FSR1L_SHAD      equ	14475	;# 
  9370   00388C                     FSR1H_SHAD      equ	14476	;# 
  9371   00388D                     FSR2SH          equ	14477	;# 
  9372   00388D                     FSR2L_SHAD      equ	14477	;# 
  9373   00388E                     FSR2H_SHAD      equ	14478	;# 
  9374   00388F                     PRODSH          equ	14479	;# 
  9375   00388F                     PRODL_SHAD      equ	14479	;# 
  9376   003890                     PRODH_SHAD      equ	14480	;# 
  9377   00389D                     IVTADL          equ	14493	;# 
  9378   00389E                     IVTADH          equ	14494	;# 
  9379   00389F                     IVTADU          equ	14495	;# 
  9380   00395B                     WDTCON0         equ	14683	;# 
  9381   00395C                     WDTCON1         equ	14684	;# 
  9382   00395D                     WDTPSL          equ	14685	;# 
  9383   00395E                     WDTPSH          equ	14686	;# 
  9384   00395F                     WDTTMR          equ	14687	;# 
  9385   003960                     CRCDATA         equ	14688	;# 
  9386   003960                     CRCDATL         equ	14688	;# 
  9387   003961                     CRCDATH         equ	14689	;# 
  9388   003962                     CRCACC          equ	14690	;# 
  9389   003962                     CRCACCL         equ	14690	;# 
  9390   003963                     CRCACCH         equ	14691	;# 
  9391   003964                     CRCSHFT         equ	14692	;# 
  9392   003964                     CRCSHIFTL       equ	14692	;# 
  9393   003965                     CRCSHIFTH       equ	14693	;# 
  9394   003966                     CRCXOR          equ	14694	;# 
  9395   003966                     CRCXORL         equ	14694	;# 
  9396   003967                     CRCXORH         equ	14695	;# 
  9397   003968                     CRCCON0         equ	14696	;# 
  9398   003969                     CRCCON1         equ	14697	;# 
  9399   003976                     SCANLADR        equ	14710	;# 
  9400   003976                     SCANLADRL       equ	14710	;# 
  9401   003977                     SCANLADRH       equ	14711	;# 
  9402   003978                     SCANLADRU       equ	14712	;# 
  9403   003979                     SCANHADR        equ	14713	;# 
  9404   003979                     SCANHADRL       equ	14713	;# 
  9405   00397A                     SCANHADRH       equ	14714	;# 
  9406   00397B                     SCANHADRU       equ	14715	;# 
  9407   00397C                     SCANCON0        equ	14716	;# 
  9408   00397D                     SCANTRIG        equ	14717	;# 
  9409   003980                     IPR0            equ	14720	;# 
  9410   003981                     IPR1            equ	14721	;# 
  9411   003982                     IPR2            equ	14722	;# 
  9412   003983                     IPR3            equ	14723	;# 
  9413   003984                     IPR4            equ	14724	;# 
  9414   003985                     IPR5            equ	14725	;# 
  9415   003986                     IPR6            equ	14726	;# 
  9416   003987                     IPR7            equ	14727	;# 
  9417   003988                     IPR8            equ	14728	;# 
  9418   003989                     IPR9            equ	14729	;# 
  9419   00398A                     IPR10           equ	14730	;# 
  9420   003990                     PIE0            equ	14736	;# 
  9421   003991                     PIE1            equ	14737	;# 
  9422   003992                     PIE2            equ	14738	;# 
  9423   003993                     PIE3            equ	14739	;# 
  9424   003994                     PIE4            equ	14740	;# 
  9425   003995                     PIE5            equ	14741	;# 
  9426   003996                     PIE6            equ	14742	;# 
  9427   003997                     PIE7            equ	14743	;# 
  9428   003998                     PIE8            equ	14744	;# 
  9429   003999                     PIE9            equ	14745	;# 
  9430   00399A                     PIE10           equ	14746	;# 
  9431   0039A0                     PIR0            equ	14752	;# 
  9432   0039A1                     PIR1            equ	14753	;# 
  9433   0039A2                     PIR2            equ	14754	;# 
  9434   0039A3                     PIR3            equ	14755	;# 
  9435   0039A4                     PIR4            equ	14756	;# 
  9436   0039A5                     PIR5            equ	14757	;# 
  9437   0039A6                     PIR6            equ	14758	;# 
  9438   0039A7                     PIR7            equ	14759	;# 
  9439   0039A8                     PIR8            equ	14760	;# 
  9440   0039A9                     PIR9            equ	14761	;# 
  9441   0039AA                     PIR10           equ	14762	;# 
  9442   0039C0                     PMD0            equ	14784	;# 
  9443   0039C1                     PMD1            equ	14785	;# 
  9444   0039C2                     PMD2            equ	14786	;# 
  9445   0039C3                     PMD3            equ	14787	;# 
  9446   0039C4                     PMD4            equ	14788	;# 
  9447   0039C5                     PMD5            equ	14789	;# 
  9448   0039C6                     PMD6            equ	14790	;# 
  9449   0039C7                     PMD7            equ	14791	;# 
  9450   0039D0                     BORCON          equ	14800	;# 
  9451   0039D1                     VREGCON         equ	14801	;# 
  9452   0039D8                     CPUDOZE         equ	14808	;# 
  9453   0039D9                     OSCCON1         equ	14809	;# 
  9454   0039DA                     OSCCON2         equ	14810	;# 
  9455   0039DB                     OSCCON3         equ	14811	;# 
  9456   0039DC                     OSCSTAT         equ	14812	;# 
  9457   0039DC                     OSCSTAT1        equ	14812	;# 
  9458   0039DD                     OSCEN           equ	14813	;# 
  9459   0039DE                     OSCTUNE         equ	14814	;# 
  9460   0039DF                     OSCFRQ          equ	14815	;# 
  9461   0039E0                     NVMADRL         equ	14816	;# 
  9462   0039E1                     NVMADRH         equ	14817	;# 
  9463   0039E3                     NVMDAT          equ	14819	;# 
  9464   0039E5                     NVMCON1         equ	14821	;# 
  9465   0039E6                     NVMCON2         equ	14822	;# 
  9466   0039EF                     PRLOCK          equ	14831	;# 
  9467   0039F1                     ISRPR           equ	14833	;# 
  9468   0039F2                     MAINPR          equ	14834	;# 
  9469   0039F3                     DMA1PR          equ	14835	;# 
  9470   0039F4                     DMA2PR          equ	14836	;# 
  9471   0039F7                     SCANPR          equ	14839	;# 
  9472   003A00                     RA0PPS          equ	14848	;# 
  9473   003A01                     RA1PPS          equ	14849	;# 
  9474   003A02                     RA2PPS          equ	14850	;# 
  9475   003A03                     RA3PPS          equ	14851	;# 
  9476   003A04                     RA4PPS          equ	14852	;# 
  9477   003A05                     RA5PPS          equ	14853	;# 
  9478   003A06                     RA6PPS          equ	14854	;# 
  9479   003A07                     RA7PPS          equ	14855	;# 
  9480   003A08                     RB0PPS          equ	14856	;# 
  9481   003A09                     RB1PPS          equ	14857	;# 
  9482   003A0A                     RB2PPS          equ	14858	;# 
  9483   003A0B                     RB3PPS          equ	14859	;# 
  9484   003A0C                     RB4PPS          equ	14860	;# 
  9485   003A0D                     RB5PPS          equ	14861	;# 
  9486   003A0E                     RB6PPS          equ	14862	;# 
  9487   003A0F                     RB7PPS          equ	14863	;# 
  9488   003A10                     RC0PPS          equ	14864	;# 
  9489   003A11                     RC1PPS          equ	14865	;# 
  9490   003A12                     RC2PPS          equ	14866	;# 
  9491   003A13                     RC3PPS          equ	14867	;# 
  9492   003A14                     RC4PPS          equ	14868	;# 
  9493   003A15                     RC5PPS          equ	14869	;# 
  9494   003A16                     RC6PPS          equ	14870	;# 
  9495   003A17                     RC7PPS          equ	14871	;# 
  9496   003A18                     RD0PPS          equ	14872	;# 
  9497   003A19                     RD1PPS          equ	14873	;# 
  9498   003A1A                     RD2PPS          equ	14874	;# 
  9499   003A1B                     RD3PPS          equ	14875	;# 
  9500   003A1C                     RD4PPS          equ	14876	;# 
  9501   003A1D                     RD5PPS          equ	14877	;# 
  9502   003A1E                     RD6PPS          equ	14878	;# 
  9503   003A1F                     RD7PPS          equ	14879	;# 
  9504   003A20                     RE0PPS          equ	14880	;# 
  9505   003A21                     RE1PPS          equ	14881	;# 
  9506   003A22                     RE2PPS          equ	14882	;# 
  9507   003A28                     RF0PPS          equ	14888	;# 
  9508   003A29                     RF1PPS          equ	14889	;# 
  9509   003A2A                     RF2PPS          equ	14890	;# 
  9510   003A2B                     RF3PPS          equ	14891	;# 
  9511   003A2C                     RF4PPS          equ	14892	;# 
  9512   003A2D                     RF5PPS          equ	14893	;# 
  9513   003A2E                     RF6PPS          equ	14894	;# 
  9514   003A2F                     RF7PPS          equ	14895	;# 
  9515   003A40                     ANSELA          equ	14912	;# 
  9516   003A41                     WPUA            equ	14913	;# 
  9517   003A42                     ODCONA          equ	14914	;# 
  9518   003A43                     SLRCONA         equ	14915	;# 
  9519   003A44                     INLVLA          equ	14916	;# 
  9520   003A45                     IOCAP           equ	14917	;# 
  9521   003A46                     IOCAN           equ	14918	;# 
  9522   003A47                     IOCAF           equ	14919	;# 
  9523   003A50                     ANSELB          equ	14928	;# 
  9524   003A51                     WPUB            equ	14929	;# 
  9525   003A52                     ODCONB          equ	14930	;# 
  9526   003A53                     SLRCONB         equ	14931	;# 
  9527   003A54                     INLVLB          equ	14932	;# 
  9528   003A55                     IOCBP           equ	14933	;# 
  9529   003A56                     IOCBN           equ	14934	;# 
  9530   003A57                     IOCBF           equ	14935	;# 
  9531   003A5A                     RB1I2C          equ	14938	;# 
  9532   003A5B                     RB2I2C          equ	14939	;# 
  9533   003A60                     ANSELC          equ	14944	;# 
  9534   003A61                     WPUC            equ	14945	;# 
  9535   003A62                     ODCONC          equ	14946	;# 
  9536   003A63                     SLRCONC         equ	14947	;# 
  9537   003A64                     INLVLC          equ	14948	;# 
  9538   003A65                     IOCCP           equ	14949	;# 
  9539   003A66                     IOCCN           equ	14950	;# 
  9540   003A67                     IOCCF           equ	14951	;# 
  9541   003A6A                     RC3I2C          equ	14954	;# 
  9542   003A6B                     RC4I2C          equ	14955	;# 
  9543   003A70                     ANSELD          equ	14960	;# 
  9544   003A71                     WPUD            equ	14961	;# 
  9545   003A72                     ODCOND          equ	14962	;# 
  9546   003A73                     SLRCOND         equ	14963	;# 
  9547   003A74                     INLVLD          equ	14964	;# 
  9548   003A7A                     RD0I2C          equ	14970	;# 
  9549   003A7B                     RD1I2C          equ	14971	;# 
  9550   003A80                     ANSELE          equ	14976	;# 
  9551   003A81                     WPUE            equ	14977	;# 
  9552   003A82                     ODCONE          equ	14978	;# 
  9553   003A83                     SLRCONE         equ	14979	;# 
  9554   003A84                     INLVLE          equ	14980	;# 
  9555   003A85                     IOCEP           equ	14981	;# 
  9556   003A86                     IOCEN           equ	14982	;# 
  9557   003A87                     IOCEF           equ	14983	;# 
  9558   003A90                     ANSELF          equ	14992	;# 
  9559   003A91                     WPUF            equ	14993	;# 
  9560   003A92                     ODCONF          equ	14994	;# 
  9561   003A93                     SLRCONF         equ	14995	;# 
  9562   003A94                     INLVLF          equ	14996	;# 
  9563   003ABF                     PPSLOCK         equ	15039	;# 
  9564   003AC0                     INT0PPS         equ	15040	;# 
  9565   003AC1                     INT1PPS         equ	15041	;# 
  9566   003AC2                     INT2PPS         equ	15042	;# 
  9567   003AC3                     T0CKIPPS        equ	15043	;# 
  9568   003AC4                     T1CKIPPS        equ	15044	;# 
  9569   003AC5                     T1GPPS          equ	15045	;# 
  9570   003AC6                     T3CKIPPS        equ	15046	;# 
  9571   003AC7                     T3GPPS          equ	15047	;# 
  9572   003AC8                     T5CKIPPS        equ	15048	;# 
  9573   003AC9                     T5GPPS          equ	15049	;# 
  9574   003ACA                     T2INPPS         equ	15050	;# 
  9575   003ACB                     T4INPPS         equ	15051	;# 
  9576   003ACC                     T6INPPS         equ	15052	;# 
  9577   003ACD                     CCP1PPS         equ	15053	;# 
  9578   003ACE                     CCP2PPS         equ	15054	;# 
  9579   003ACF                     CCP3PPS         equ	15055	;# 
  9580   003AD0                     CCP4PPS         equ	15056	;# 
  9581   003AD1                     SMT1WINPPS      equ	15057	;# 
  9582   003AD2                     SMT1SIGPPS      equ	15058	;# 
  9583   003AD3                     CWG1INPPS       equ	15059	;# 
  9584   003AD4                     CWG2INPPS       equ	15060	;# 
  9585   003AD5                     CWG3INPPS       equ	15061	;# 
  9586   003AD6                     MD1CARLPPS      equ	15062	;# 
  9587   003AD7                     MD1CARHPPS      equ	15063	;# 
  9588   003AD8                     MD1SRCPPS       equ	15064	;# 
  9589   003AD9                     CLCIN0PPS       equ	15065	;# 
  9590   003ADA                     CLCIN1PPS       equ	15066	;# 
  9591   003ADB                     CLCIN2PPS       equ	15067	;# 
  9592   003ADC                     CLCIN3PPS       equ	15068	;# 
  9593   003ADD                     ADACTPPS        equ	15069	;# 
  9594   003ADE                     SPI1SCKPPS      equ	15070	;# 
  9595   003ADF                     SPI1SDIPPS      equ	15071	;# 
  9596   003AE0                     SPI1SSPPS       equ	15072	;# 
  9597   003AE1                     I2C1SCLPPS      equ	15073	;# 
  9598   003AE2                     I2C1SDAPPS      equ	15074	;# 
  9599   003AE3                     I2C2SCLPPS      equ	15075	;# 
  9600   003AE4                     I2C2SDAPPS      equ	15076	;# 
  9601   003AE5                     U1RXPPS         equ	15077	;# 
  9602   003AE6                     U1CTSPPS        equ	15078	;# 
  9603   003AE8                     U2RXPPS         equ	15080	;# 
  9604   003AE9                     U2CTSPPS        equ	15081	;# 
  9605   003BC9                     DMA2BUF         equ	15305	;# 
  9606   003BCA                     DMA2DCNT        equ	15306	;# 
  9607   003BCA                     DMA2DCNTL       equ	15306	;# 
  9608   003BCB                     DMA2DCNTH       equ	15307	;# 
  9609   003BCC                     DMA2DPTR        equ	15308	;# 
  9610   003BCC                     DMA2DPTRL       equ	15308	;# 
  9611   003BCD                     DMA2DPTRH       equ	15309	;# 
  9612   003BCE                     DMA2DSZ         equ	15310	;# 
  9613   003BCE                     DMA2DSZL        equ	15310	;# 
  9614   003BCF                     DMA2DSZH        equ	15311	;# 
  9615   003BD0                     DMA2DSA         equ	15312	;# 
  9616   003BD0                     DMA2DSAL        equ	15312	;# 
  9617   003BD1                     DMA2DSAH        equ	15313	;# 
  9618   003BD2                     DMA2SCNT        equ	15314	;# 
  9619   003BD2                     DMA2SCNTL       equ	15314	;# 
  9620   003BD3                     DMA2SCNTH       equ	15315	;# 
  9621   003BD4                     DMA2SPTR        equ	15316	;# 
  9622   003BD4                     DMA2SPTRL       equ	15316	;# 
  9623   003BD5                     DMA2SPTRH       equ	15317	;# 
  9624   003BD6                     DMA2SPTRU       equ	15318	;# 
  9625   003BD7                     DMA2SSZ         equ	15319	;# 
  9626   003BD7                     DMA2SSZL        equ	15319	;# 
  9627   003BD8                     DMA2SSZH        equ	15320	;# 
  9628   003BD9                     DMA2SSA         equ	15321	;# 
  9629   003BD9                     DMA2SSAL        equ	15321	;# 
  9630   003BDA                     DMA2SSAH        equ	15322	;# 
  9631   003BDB                     DMA2SSAU        equ	15323	;# 
  9632   003BDC                     DMA2CON0        equ	15324	;# 
  9633   003BDD                     DMA2CON1        equ	15325	;# 
  9634   003BDE                     DMA2AIRQ        equ	15326	;# 
  9635   003BDF                     DMA2SIRQ        equ	15327	;# 
  9636   003BE9                     DMA1BUF         equ	15337	;# 
  9637   003BEA                     DMA1DCNT        equ	15338	;# 
  9638   003BEA                     DMA1DCNTL       equ	15338	;# 
  9639   003BEB                     DMA1DCNTH       equ	15339	;# 
  9640   003BEC                     DMA1DPTR        equ	15340	;# 
  9641   003BEC                     DMA1DPTRL       equ	15340	;# 
  9642   003BED                     DMA1DPTRH       equ	15341	;# 
  9643   003BEE                     DMA1DSZ         equ	15342	;# 
  9644   003BEE                     DMA1DSZL        equ	15342	;# 
  9645   003BEF                     DMA1DSZH        equ	15343	;# 
  9646   003BF0                     DMA1DSA         equ	15344	;# 
  9647   003BF0                     DMA1DSAL        equ	15344	;# 
  9648   003BF1                     DMA1DSAH        equ	15345	;# 
  9649   003BF2                     DMA1SCNT        equ	15346	;# 
  9650   003BF2                     DMA1SCNTL       equ	15346	;# 
  9651   003BF3                     DMA1SCNTH       equ	15347	;# 
  9652   003BF4                     DMA1SPTR        equ	15348	;# 
  9653   003BF4                     DMA1SPTRL       equ	15348	;# 
  9654   003BF5                     DMA1SPTRH       equ	15349	;# 
  9655   003BF6                     DMA1SPTRU       equ	15350	;# 
  9656   003BF7                     DMA1SSZ         equ	15351	;# 
  9657   003BF7                     DMA1SSZL        equ	15351	;# 
  9658   003BF8                     DMA1SSZH        equ	15352	;# 
  9659   003BF9                     DMA1SSA         equ	15353	;# 
  9660   003BF9                     DMA1SSAL        equ	15353	;# 
  9661   003BFA                     DMA1SSAH        equ	15354	;# 
  9662   003BFB                     DMA1SSAU        equ	15355	;# 
  9663   003BFC                     DMA1CON0        equ	15356	;# 
  9664   003BFD                     DMA1CON1        equ	15357	;# 
  9665   003BFE                     DMA1AIRQ        equ	15358	;# 
  9666   003BFF                     DMA1SIRQ        equ	15359	;# 
  9667   003C56                     CLC4CON         equ	15446	;# 
  9668   003C57                     CLC4POL         equ	15447	;# 
  9669   003C58                     CLC4SEL0        equ	15448	;# 
  9670   003C59                     CLC4SEL1        equ	15449	;# 
  9671   003C5A                     CLC4SEL2        equ	15450	;# 
  9672   003C5B                     CLC4SEL3        equ	15451	;# 
  9673   003C5C                     CLC4GLS0        equ	15452	;# 
  9674   003C5D                     CLC4GLS1        equ	15453	;# 
  9675   003C5E                     CLC4GLS2        equ	15454	;# 
  9676   003C5F                     CLC4GLS3        equ	15455	;# 
  9677   003C60                     CLC3CON         equ	15456	;# 
  9678   003C61                     CLC3POL         equ	15457	;# 
  9679   003C62                     CLC3SEL0        equ	15458	;# 
  9680   003C63                     CLC3SEL1        equ	15459	;# 
  9681   003C64                     CLC3SEL2        equ	15460	;# 
  9682   003C65                     CLC3SEL3        equ	15461	;# 
  9683   003C66                     CLC3GLS0        equ	15462	;# 
  9684   003C67                     CLC3GLS1        equ	15463	;# 
  9685   003C68                     CLC3GLS2        equ	15464	;# 
  9686   003C69                     CLC3GLS3        equ	15465	;# 
  9687   003C6A                     CLC2CON         equ	15466	;# 
  9688   003C6B                     CLC2POL         equ	15467	;# 
  9689   003C6C                     CLC2SEL0        equ	15468	;# 
  9690   003C6D                     CLC2SEL1        equ	15469	;# 
  9691   003C6E                     CLC2SEL2        equ	15470	;# 
  9692   003C6F                     CLC2SEL3        equ	15471	;# 
  9693   003C70                     CLC2GLS0        equ	15472	;# 
  9694   003C71                     CLC2GLS1        equ	15473	;# 
  9695   003C72                     CLC2GLS2        equ	15474	;# 
  9696   003C73                     CLC2GLS3        equ	15475	;# 
  9697   003C74                     CLC1CON         equ	15476	;# 
  9698   003C75                     CLC1POL         equ	15477	;# 
  9699   003C76                     CLC1SEL0        equ	15478	;# 
  9700   003C77                     CLC1SEL1        equ	15479	;# 
  9701   003C78                     CLC1SEL2        equ	15480	;# 
  9702   003C79                     CLC1SEL3        equ	15481	;# 
  9703   003C7A                     CLC1GLS0        equ	15482	;# 
  9704   003C7B                     CLC1GLS1        equ	15483	;# 
  9705   003C7C                     CLC1GLS2        equ	15484	;# 
  9706   003C7D                     CLC1GLS3        equ	15485	;# 
  9707   003C7E                     CLCDATA0        equ	15486	;# 
  9708   003CE5                     CLKRCON         equ	15589	;# 
  9709   003CE6                     CLKRCLK         equ	15590	;# 
  9710   003CFA                     MD1CON0         equ	15610	;# 
  9711   003CFB                     MD1CON1         equ	15611	;# 
  9712   003CFC                     MD1SRC          equ	15612	;# 
  9713   003CFD                     MD1CARL         equ	15613	;# 
  9714   003CFE                     MD1CARH         equ	15614	;# 
  9715   003D10                     SPI1RXB         equ	15632	;# 
  9716   003D11                     SPI1TXB         equ	15633	;# 
  9717   003D12                     SPI1TCNT        equ	15634	;# 
  9718   003D12                     SPI1TCNTL       equ	15634	;# 
  9719   003D13                     SPI1TCNTH       equ	15635	;# 
  9720   003D14                     SPI1CON0        equ	15636	;# 
  9721   003D15                     SPI1CON1        equ	15637	;# 
  9722   003D16                     SPI1CON2        equ	15638	;# 
  9723   003D17                     SPI1STATUS      equ	15639	;# 
  9724   003D18                     SPI1TWIDTH      equ	15640	;# 
  9725   003D19                     SPI1BAUD        equ	15641	;# 
  9726   003D1A                     SPI1INTF        equ	15642	;# 
  9727   003D1B                     SPI1INTE        equ	15643	;# 
  9728   003D1C                     SPI1CLK         equ	15644	;# 
  9729   003D54                     I2C2RXB         equ	15700	;# 
  9730   003D55                     I2C2TXB         equ	15701	;# 
  9731   003D56                     I2C2CNT         equ	15702	;# 
  9732   003D57                     I2C2ADB0        equ	15703	;# 
  9733   003D58                     I2C2ADB1        equ	15704	;# 
  9734   003D59                     I2C2ADR0        equ	15705	;# 
  9735   003D5A                     I2C2ADR1        equ	15706	;# 
  9736   003D5B                     I2C2ADR2        equ	15707	;# 
  9737   003D5C                     I2C2ADR3        equ	15708	;# 
  9738   003D5D                     I2C2CON0        equ	15709	;# 
  9739   003D5E                     I2C2CON1        equ	15710	;# 
  9740   003D5F                     I2C2CON2        equ	15711	;# 
  9741   003D60                     I2C2ERR         equ	15712	;# 
  9742   003D61                     I2C2STAT0       equ	15713	;# 
  9743   003D62                     I2C2STAT1       equ	15714	;# 
  9744   003D63                     I2C2PIR         equ	15715	;# 
  9745   003D64                     I2C2PIE         equ	15716	;# 
  9746   003D65                     I2C2CLK         equ	15717	;# 
  9747   003D66                     I2C2BTO         equ	15718	;# 
  9748   003D6A                     I2C1RXB         equ	15722	;# 
  9749   003D6B                     I2C1TXB         equ	15723	;# 
  9750   003D6C                     I2C1CNT         equ	15724	;# 
  9751   003D6D                     I2C1ADB0        equ	15725	;# 
  9752   003D6E                     I2C1ADB1        equ	15726	;# 
  9753   003D6F                     I2C1ADR0        equ	15727	;# 
  9754   003D70                     I2C1ADR1        equ	15728	;# 
  9755   003D71                     I2C1ADR2        equ	15729	;# 
  9756   003D72                     I2C1ADR3        equ	15730	;# 
  9757   003D73                     I2C1CON0        equ	15731	;# 
  9758   003D74                     I2C1CON1        equ	15732	;# 
  9759   003D75                     I2C1CON2        equ	15733	;# 
  9760   003D76                     I2C1ERR         equ	15734	;# 
  9761   003D77                     I2C1STAT0       equ	15735	;# 
  9762   003D78                     I2C1STAT1       equ	15736	;# 
  9763   003D79                     I2C1PIR         equ	15737	;# 
  9764   003D7A                     I2C1PIE         equ	15738	;# 
  9765   003D7B                     I2C1CLK         equ	15739	;# 
  9766   003D7C                     I2C1BTO         equ	15740	;# 
  9767   003DD0                     U2RXB           equ	15824	;# 
  9768   003DD0                     U2RXBL          equ	15824	;# 
  9769   003DD2                     U2TXB           equ	15826	;# 
  9770   003DD2                     U2TXBL          equ	15826	;# 
  9771   003DD4                     U2P1            equ	15828	;# 
  9772   003DD4                     U2P1L           equ	15828	;# 
  9773   003DD6                     U2P2            equ	15830	;# 
  9774   003DD6                     U2P2L           equ	15830	;# 
  9775   003DD8                     U2P3            equ	15832	;# 
  9776   003DD8                     U2P3L           equ	15832	;# 
  9777   003DDA                     U2CON0          equ	15834	;# 
  9778   003DDB                     U2CON1          equ	15835	;# 
  9779   003DDC                     U2CON2          equ	15836	;# 
  9780   003DDD                     U2BRG           equ	15837	;# 
  9781   003DDD                     U2BRGL          equ	15837	;# 
  9782   003DDE                     U2BRGH          equ	15838	;# 
  9783   003DDF                     U2FIFO          equ	15839	;# 
  9784   003DE0                     U2UIR           equ	15840	;# 
  9785   003DE1                     U2ERRIR         equ	15841	;# 
  9786   003DE2                     U2ERRIE         equ	15842	;# 
  9787   003DE8                     U1RXB           equ	15848	;# 
  9788   003DE8                     U1RXBL          equ	15848	;# 
  9789   003DE9                     U1RXCHK         equ	15849	;# 
  9790   003DEA                     U1TXB           equ	15850	;# 
  9791   003DEA                     U1TXBL          equ	15850	;# 
  9792   003DEB                     U1TXCHK         equ	15851	;# 
  9793   003DEC                     U1P1            equ	15852	;# 
  9794   003DEC                     U1P1L           equ	15852	;# 
  9795   003DED                     U1P1H           equ	15853	;# 
  9796   003DEE                     U1P2            equ	15854	;# 
  9797   003DEE                     U1P2L           equ	15854	;# 
  9798   003DEF                     U1P2H           equ	15855	;# 
  9799   003DF0                     U1P3            equ	15856	;# 
  9800   003DF0                     U1P3L           equ	15856	;# 
  9801   003DF1                     U1P3H           equ	15857	;# 
  9802   003DF2                     U1CON0          equ	15858	;# 
  9803   003DF3                     U1CON1          equ	15859	;# 
  9804   003DF4                     U1CON2          equ	15860	;# 
  9805   003DF5                     U1BRG           equ	15861	;# 
  9806   003DF5                     U1BRGL          equ	15861	;# 
  9807   003DF6                     U1BRGH          equ	15862	;# 
  9808   003DF7                     U1FIFO          equ	15863	;# 
  9809   003DF8                     U1UIR           equ	15864	;# 
  9810   003DF9                     U1ERRIR         equ	15865	;# 
  9811   003DFA                     U1ERRIE         equ	15866	;# 
  9812   003E9C                     DAC1CON1        equ	16028	;# 
  9813   003E9E                     DAC1CON0        equ	16030	;# 
  9814   003EB8                     CM2CON0         equ	16056	;# 
  9815   003EB9                     CM2CON1         equ	16057	;# 
  9816   003EBA                     CM2NCH          equ	16058	;# 
  9817   003EBB                     CM2PCH          equ	16059	;# 
  9818   003EBC                     CM1CON0         equ	16060	;# 
  9819   003EBD                     CM1CON1         equ	16061	;# 
  9820   003EBE                     CM1NCH          equ	16062	;# 
  9821   003EBF                     CM1PCH          equ	16063	;# 
  9822   003EC0                     CMOUT           equ	16064	;# 
  9823   003EC1                     FVRCON          equ	16065	;# 
  9824   003EC3                     ZCDCON          equ	16067	;# 
  9825   003EC9                     HLVDCON0        equ	16073	;# 
  9826   003ECA                     HLVDCON1        equ	16074	;# 
  9827   003ED7                     ADCP            equ	16087	;# 
  9828   003EDE                     ADLTH           equ	16094	;# 
  9829   003EDE                     ADLTHL          equ	16094	;# 
  9830   003EDF                     ADLTHH          equ	16095	;# 
  9831   003EE0                     ADUTH           equ	16096	;# 
  9832   003EE0                     ADUTHL          equ	16096	;# 
  9833   003EE1                     ADUTHH          equ	16097	;# 
  9834   003EE2                     ADERR           equ	16098	;# 
  9835   003EE2                     ADERRL          equ	16098	;# 
  9836   003EE3                     ADERRH          equ	16099	;# 
  9837   003EE4                     ADSTPT          equ	16100	;# 
  9838   003EE4                     ADSTPTL         equ	16100	;# 
  9839   003EE5                     ADSTPTH         equ	16101	;# 
  9840   003EE6                     ADFLTR          equ	16102	;# 
  9841   003EE6                     ADFLTRL         equ	16102	;# 
  9842   003EE7                     ADFLTRH         equ	16103	;# 
  9843   003EE8                     ADACC           equ	16104	;# 
  9844   003EE8                     ADACCL          equ	16104	;# 
  9845   003EE9                     ADACCH          equ	16105	;# 
  9846   003EEA                     ADACCU          equ	16106	;# 
  9847   003EEB                     ADCNT           equ	16107	;# 
  9848   003EEC                     ADRPT           equ	16108	;# 
  9849   003EED                     ADPREV          equ	16109	;# 
  9850   003EED                     ADPREVL         equ	16109	;# 
  9851   003EEE                     ADPREVH         equ	16110	;# 
  9852   003EEF                     ADRES           equ	16111	;# 
  9853   003EEF                     ADRESL          equ	16111	;# 
  9854   003EF0                     ADRESH          equ	16112	;# 
  9855   003EF1                     ADPCH           equ	16113	;# 
  9856   003EF3                     ADACQ           equ	16115	;# 
  9857   003EF3                     ADACQL          equ	16115	;# 
  9858   003EF4                     ADACQH          equ	16116	;# 
  9859   003EF5                     ADCAP           equ	16117	;# 
  9860   003EF6                     ADPRE           equ	16118	;# 
  9861   003EF6                     ADPREL          equ	16118	;# 
  9862   003EF7                     ADPREH          equ	16119	;# 
  9863   003EF8                     ADCON0          equ	16120	;# 
  9864   003EF9                     ADCON1          equ	16121	;# 
  9865   003EFA                     ADCON2          equ	16122	;# 
  9866   003EFB                     ADCON3          equ	16123	;# 
  9867   003EFC                     ADSTAT          equ	16124	;# 
  9868   003EFD                     ADREF           equ	16125	;# 
  9869   003EFE                     ADACT           equ	16126	;# 
  9870   003EFF                     ADCLK           equ	16127	;# 
  9871   003F12                     SMT1TMR         equ	16146	;# 
  9872   003F12                     SMT1TMRL        equ	16146	;# 
  9873   003F13                     SMT1TMRH        equ	16147	;# 
  9874   003F14                     SMT1TMRU        equ	16148	;# 
  9875   003F15                     SMT1CPR         equ	16149	;# 
  9876   003F15                     SMT1CPRL        equ	16149	;# 
  9877   003F16                     SMT1CPRH        equ	16150	;# 
  9878   003F17                     SMT1CPRU        equ	16151	;# 
  9879   003F18                     SMT1CPW         equ	16152	;# 
  9880   003F18                     SMT1CPWL        equ	16152	;# 
  9881   003F19                     SMT1CPWH        equ	16153	;# 
  9882   003F1A                     SMT1CPWU        equ	16154	;# 
  9883   003F1B                     SMT1PR          equ	16155	;# 
  9884   003F1B                     SMT1PRL         equ	16155	;# 
  9885   003F1C                     SMT1PRH         equ	16156	;# 
  9886   003F1D                     SMT1PRU         equ	16157	;# 
  9887   003F1E                     SMT1CON0        equ	16158	;# 
  9888   003F1F                     SMT1CON1        equ	16159	;# 
  9889   003F20                     SMT1STAT        equ	16160	;# 
  9890   003F21                     SMT1CLK         equ	16161	;# 
  9891   003F22                     SMT1SIG         equ	16162	;# 
  9892   003F23                     SMT1WIN         equ	16163	;# 
  9893   003F38                     NCO1ACC         equ	16184	;# 
  9894   003F38                     NCO1ACCL        equ	16184	;# 
  9895   003F39                     NCO1ACCH        equ	16185	;# 
  9896   003F3A                     NCO1ACCU        equ	16186	;# 
  9897   003F3B                     NCO1INC         equ	16187	;# 
  9898   003F3B                     NCO1INCL        equ	16187	;# 
  9899   003F3C                     NCO1INCH        equ	16188	;# 
  9900   003F3D                     NCO1INCU        equ	16189	;# 
  9901   003F3E                     NCO1CON         equ	16190	;# 
  9902   003F3F                     NCO1CLK         equ	16191	;# 
  9903   003F40                     CWG3CLK         equ	16192	;# 
  9904   003F40                     CWG3CLKCON      equ	16192	;# 
  9905   003F41                     CWG3ISM         equ	16193	;# 
  9906   003F41                     CWG3DAT         equ	16193	;# 
  9907   003F42                     CWG3DBR         equ	16194	;# 
  9908   003F43                     CWG3DBF         equ	16195	;# 
  9909   003F44                     CWG3CON0        equ	16196	;# 
  9910   003F45                     CWG3CON1        equ	16197	;# 
  9911   003F46                     CWG3AS0         equ	16198	;# 
  9912   003F47                     CWG3AS1         equ	16199	;# 
  9913   003F48                     CWG3STR         equ	16200	;# 
  9914   003F49                     CWG2CLK         equ	16201	;# 
  9915   003F49                     CWG2CLKCON      equ	16201	;# 
  9916   003F4A                     CWG2ISM         equ	16202	;# 
  9917   003F4A                     CWG2DAT         equ	16202	;# 
  9918   003F4B                     CWG2DBR         equ	16203	;# 
  9919   003F4C                     CWG2DBF         equ	16204	;# 
  9920   003F4D                     CWG2CON0        equ	16205	;# 
  9921   003F4E                     CWG2CON1        equ	16206	;# 
  9922   003F4F                     CWG2AS0         equ	16207	;# 
  9923   003F50                     CWG2AS1         equ	16208	;# 
  9924   003F51                     CWG2STR         equ	16209	;# 
  9925   003F52                     CWG1CLK         equ	16210	;# 
  9926   003F52                     CWG1CLKCON      equ	16210	;# 
  9927   003F53                     CWG1ISM         equ	16211	;# 
  9928   003F53                     CWG1DAT         equ	16211	;# 
  9929   003F54                     CWG1DBR         equ	16212	;# 
  9930   003F55                     CWG1DBF         equ	16213	;# 
  9931   003F56                     CWG1CON0        equ	16214	;# 
  9932   003F57                     CWG1CON1        equ	16215	;# 
  9933   003F58                     CWG1AS0         equ	16216	;# 
  9934   003F59                     CWG1AS1         equ	16217	;# 
  9935   003F5A                     CWG1STR         equ	16218	;# 
  9936   003F5E                     CCPTMRS0        equ	16222	;# 
  9937   003F5F                     CCPTMRS1        equ	16223	;# 
  9938   003F60                     PWM8DC          equ	16224	;# 
  9939   003F60                     PWM8DCL         equ	16224	;# 
  9940   003F61                     PWM8DCH         equ	16225	;# 
  9941   003F62                     PWM8CON         equ	16226	;# 
  9942   003F64                     PWM7DC          equ	16228	;# 
  9943   003F64                     PWM7DCL         equ	16228	;# 
  9944   003F65                     PWM7DCH         equ	16229	;# 
  9945   003F66                     PWM7CON         equ	16230	;# 
  9946   003F68                     PWM6DC          equ	16232	;# 
  9947   003F68                     PWM6DCL         equ	16232	;# 
  9948   003F69                     PWM6DCH         equ	16233	;# 
  9949   003F6A                     PWM6CON         equ	16234	;# 
  9950   003F6C                     PWM5DC          equ	16236	;# 
  9951   003F6C                     PWM5DCL         equ	16236	;# 
  9952   003F6D                     PWM5DCH         equ	16237	;# 
  9953   003F6E                     PWM5CON         equ	16238	;# 
  9954   003F70                     CCPR4           equ	16240	;# 
  9955   003F70                     CCPR4L          equ	16240	;# 
  9956   003F71                     CCPR4H          equ	16241	;# 
  9957   003F72                     CCP4CON         equ	16242	;# 
  9958   003F73                     CCP4CAP         equ	16243	;# 
  9959   003F74                     CCPR3           equ	16244	;# 
  9960   003F74                     CCPR3L          equ	16244	;# 
  9961   003F75                     CCPR3H          equ	16245	;# 
  9962   003F76                     CCP3CON         equ	16246	;# 
  9963   003F77                     CCP3CAP         equ	16247	;# 
  9964   003F78                     CCPR2           equ	16248	;# 
  9965   003F78                     CCPR2L          equ	16248	;# 
  9966   003F79                     CCPR2H          equ	16249	;# 
  9967   003F7A                     CCP2CON         equ	16250	;# 
  9968   003F7B                     CCP2CAP         equ	16251	;# 
  9969   003F7C                     CCPR1           equ	16252	;# 
  9970   003F7C                     CCPR1L          equ	16252	;# 
  9971   003F7D                     CCPR1H          equ	16253	;# 
  9972   003F7E                     CCP1CON         equ	16254	;# 
  9973   003F7F                     CCP1CAP         equ	16255	;# 
  9974   003F92                     T6TMR           equ	16274	;# 
  9975   003F92                     TMR6            equ	16274	;# 
  9976   003F93                     T6PR            equ	16275	;# 
  9977   003F93                     PR6             equ	16275	;# 
  9978   003F94                     T6CON           equ	16276	;# 
  9979   003F95                     T6HLT           equ	16277	;# 
  9980   003F96                     T6CLKCON        equ	16278	;# 
  9981   003F96                     T6CLK           equ	16278	;# 
  9982   003F97                     T6RST           equ	16279	;# 
  9983   003F98                     TMR5            equ	16280	;# 
  9984   003F98                     TMR5L           equ	16280	;# 
  9985   003F99                     TMR5H           equ	16281	;# 
  9986   003F9A                     T5CON           equ	16282	;# 
  9987   003F9A                     TMR5CON         equ	16282	;# 
  9988   003F9B                     T5GCON          equ	16283	;# 
  9989   003F9B                     TMR5GCON        equ	16283	;# 
  9990   003F9C                     T5GATE          equ	16284	;# 
  9991   003F9C                     TMR5GATE        equ	16284	;# 
  9992   003F9D                     T5CLK           equ	16285	;# 
  9993   003F9D                     TMR5CLK         equ	16285	;# 
  9994   003F9D                     PR5             equ	16285	;# 
  9995   003F9E                     T4TMR           equ	16286	;# 
  9996   003F9E                     TMR4            equ	16286	;# 
  9997   003F9F                     T4PR            equ	16287	;# 
  9998   003F9F                     PR4             equ	16287	;# 
  9999   003FA0                     T4CON           equ	16288	;# 
 10000   003FA1                     T4HLT           equ	16289	;# 
 10001   003FA2                     T4CLKCON        equ	16290	;# 
 10002   003FA2                     T4CLK           equ	16290	;# 
 10003   003FA3                     T4RST           equ	16291	;# 
 10004   003FA4                     TMR3            equ	16292	;# 
 10005   003FA4                     TMR3L           equ	16292	;# 
 10006   003FA5                     TMR3H           equ	16293	;# 
 10007   003FA6                     T3CON           equ	16294	;# 
 10008   003FA6                     TMR3CON         equ	16294	;# 
 10009   003FA7                     T3GCON          equ	16295	;# 
 10010   003FA7                     TMR3GCON        equ	16295	;# 
 10011   003FA8                     T3GATE          equ	16296	;# 
 10012   003FA8                     TMR3GATE        equ	16296	;# 
 10013   003FA9                     T3CLK           equ	16297	;# 
 10014   003FA9                     TMR3CLK         equ	16297	;# 
 10015   003FA9                     PR3             equ	16297	;# 
 10016   003FAA                     T2TMR           equ	16298	;# 
 10017   003FAA                     TMR2            equ	16298	;# 
 10018   003FAB                     T2PR            equ	16299	;# 
 10019   003FAB                     PR2             equ	16299	;# 
 10020   003FAC                     T2CON           equ	16300	;# 
 10021   003FAD                     T2HLT           equ	16301	;# 
 10022   003FAE                     T2CLKCON        equ	16302	;# 
 10023   003FAE                     T2CLK           equ	16302	;# 
 10024   003FAF                     T2RST           equ	16303	;# 
 10025   003FB0                     TMR1            equ	16304	;# 
 10026   003FB0                     TMR1L           equ	16304	;# 
 10027   003FB1                     TMR1H           equ	16305	;# 
 10028   003FB2                     T1CON           equ	16306	;# 
 10029   003FB2                     TMR1CON         equ	16306	;# 
 10030   003FB3                     T1GCON          equ	16307	;# 
 10031   003FB3                     TMR1GCON        equ	16307	;# 
 10032   003FB4                     T1GATE          equ	16308	;# 
 10033   003FB4                     TMR1GATE        equ	16308	;# 
 10034   003FB5                     T1CLK           equ	16309	;# 
 10035   003FB5                     TMR1CLK         equ	16309	;# 
 10036   003FB5                     PR1             equ	16309	;# 
 10037   003FB6                     TMR0L           equ	16310	;# 
 10038   003FB6                     TMR0            equ	16310	;# 
 10039   003FB7                     TMR0H           equ	16311	;# 
 10040   003FB7                     PR0             equ	16311	;# 
 10041   003FB8                     T0CON0          equ	16312	;# 
 10042   003FB9                     T0CON1          equ	16313	;# 
 10043   003FBA                     LATA            equ	16314	;# 
 10044   003FBB                     LATB            equ	16315	;# 
 10045   003FBC                     LATC            equ	16316	;# 
 10046   003FBD                     LATD            equ	16317	;# 
 10047   003FBE                     LATE            equ	16318	;# 
 10048   003FBF                     LATF            equ	16319	;# 
 10049   003FC2                     TRISA           equ	16322	;# 
 10050   003FC3                     TRISB           equ	16323	;# 
 10051   003FC4                     TRISC           equ	16324	;# 
 10052   003FC5                     TRISD           equ	16325	;# 
 10053   003FC6                     TRISE           equ	16326	;# 
 10054   003FC7                     TRISF           equ	16327	;# 
 10055   003FCA                     PORTA           equ	16330	;# 
 10056   003FCB                     PORTB           equ	16331	;# 
 10057   003FCC                     PORTC           equ	16332	;# 
 10058   003FCD                     PORTD           equ	16333	;# 
 10059   003FCE                     PORTE           equ	16334	;# 
 10060   003FCF                     PORTF           equ	16335	;# 
 10061   003FD2                     INTCON0         equ	16338	;# 
 10062   003FD3                     INTCON1         equ	16339	;# 
 10063   003FD4                     IVTLOCK         equ	16340	;# 
 10064   003FD5                     IVTBASE         equ	16341	;# 
 10065   003FD5                     IVTBASEL        equ	16341	;# 
 10066   003FD6                     IVTBASEH        equ	16342	;# 
 10067   003FD7                     IVTBASEU        equ	16343	;# 
 10068   003FD8                     STATUS          equ	16344	;# 
 10069   003FD9                     FSR2            equ	16345	;# 
 10070   003FD9                     FSR2L           equ	16345	;# 
 10071   003FDA                     FSR2H           equ	16346	;# 
 10072   003FDB                     PLUSW2          equ	16347	;# 
 10073   003FDC                     PREINC2         equ	16348	;# 
 10074   003FDD                     POSTDEC2        equ	16349	;# 
 10075   003FDE                     POSTINC2        equ	16350	;# 
 10076   003FDF                     INDF2           equ	16351	;# 
 10077   003FE0                     BSR             equ	16352	;# 
 10078   003FE1                     FSR1            equ	16353	;# 
 10079   003FE1                     FSR1L           equ	16353	;# 
 10080   003FE2                     FSR1H           equ	16354	;# 
 10081   003FE3                     PLUSW1          equ	16355	;# 
 10082   003FE4                     PREINC1         equ	16356	;# 
 10083   003FE5                     POSTDEC1        equ	16357	;# 
 10084   003FE6                     POSTINC1        equ	16358	;# 
 10085   003FE7                     INDF1           equ	16359	;# 
 10086   003FE8                     WREG            equ	16360	;# 
 10087   003FE9                     FSR0            equ	16361	;# 
 10088   003FE9                     FSR0L           equ	16361	;# 
 10089   003FEA                     FSR0H           equ	16362	;# 
 10090   003FEB                     PLUSW0          equ	16363	;# 
 10091   003FEC                     PREINC0         equ	16364	;# 
 10092   003FED                     POSTDEC0        equ	16365	;# 
 10093   003FEE                     POSTINC0        equ	16366	;# 
 10094   003FEF                     INDF0           equ	16367	;# 
 10095   003FF0                     PCON0           equ	16368	;# 
 10096   003FF1                     PCON1           equ	16369	;# 
 10097   003FF3                     PROD            equ	16371	;# 
 10098   003FF3                     PRODL           equ	16371	;# 
 10099   003FF4                     PRODH           equ	16372	;# 
 10100   003FF5                     TABLAT          equ	16373	;# 
 10101   003FF6                     TBLPTR          equ	16374	;# 
 10102   003FF6                     TBLPTRL         equ	16374	;# 
 10103   003FF7                     TBLPTRH         equ	16375	;# 
 10104   003FF8                     TBLPTRU         equ	16376	;# 
 10105   003FF9                     PCLAT           equ	16377	;# 
 10106   003FF9                     PCL             equ	16377	;# 
 10107   003FFA                     PCLATH          equ	16378	;# 
 10108   003FFB                     PCLATU          equ	16379	;# 
 10109   003FFC                     STKPTR          equ	16380	;# 
 10110   003FFD                     TOS             equ	16381	;# 
 10111   003FFD                     TOSL            equ	16381	;# 
 10112   003FFE                     TOSH            equ	16382	;# 
 10113   003FFF                     TOSU            equ	16383	;# 
 10114   003880                     STATUS_CSHAD    equ	14464	;# 
 10115   003881                     WREG_CSHAD      equ	14465	;# 
 10116   003882                     BSR_CSHAD       equ	14466	;# 
 10117   003883                     SHADCON         equ	14467	;# 
 10118   003884                     STATUS_SHAD     equ	14468	;# 
 10119   003885                     WREG_SHAD       equ	14469	;# 
 10120   003886                     BSR_SHAD        equ	14470	;# 
 10121   003887                     PCLATH_SHAD     equ	14471	;# 
 10122   003888                     PCLATU_SHAD     equ	14472	;# 
 10123   003889                     FSR0SH          equ	14473	;# 
 10124   003889                     FSR0L_SHAD      equ	14473	;# 
 10125   00388A                     FSR0H_SHAD      equ	14474	;# 
 10126   00388B                     FSR1SH          equ	14475	;# 
 10127   00388B                     FSR1L_SHAD      equ	14475	;# 
 10128   00388C                     FSR1H_SHAD      equ	14476	;# 
 10129   00388D                     FSR2SH          equ	14477	;# 
 10130   00388D                     FSR2L_SHAD      equ	14477	;# 
 10131   00388E                     FSR2H_SHAD      equ	14478	;# 
 10132   00388F                     PRODSH          equ	14479	;# 
 10133   00388F                     PRODL_SHAD      equ	14479	;# 
 10134   003890                     PRODH_SHAD      equ	14480	;# 
 10135   00389D                     IVTADL          equ	14493	;# 
 10136   00389E                     IVTADH          equ	14494	;# 
 10137   00389F                     IVTADU          equ	14495	;# 
 10138   00395B                     WDTCON0         equ	14683	;# 
 10139   00395C                     WDTCON1         equ	14684	;# 
 10140   00395D                     WDTPSL          equ	14685	;# 
 10141   00395E                     WDTPSH          equ	14686	;# 
 10142   00395F                     WDTTMR          equ	14687	;# 
 10143   003960                     CRCDATA         equ	14688	;# 
 10144   003960                     CRCDATL         equ	14688	;# 
 10145   003961                     CRCDATH         equ	14689	;# 
 10146   003962                     CRCACC          equ	14690	;# 
 10147   003962                     CRCACCL         equ	14690	;# 
 10148   003963                     CRCACCH         equ	14691	;# 
 10149   003964                     CRCSHFT         equ	14692	;# 
 10150   003964                     CRCSHIFTL       equ	14692	;# 
 10151   003965                     CRCSHIFTH       equ	14693	;# 
 10152   003966                     CRCXOR          equ	14694	;# 
 10153   003966                     CRCXORL         equ	14694	;# 
 10154   003967                     CRCXORH         equ	14695	;# 
 10155   003968                     CRCCON0         equ	14696	;# 
 10156   003969                     CRCCON1         equ	14697	;# 
 10157   003976                     SCANLADR        equ	14710	;# 
 10158   003976                     SCANLADRL       equ	14710	;# 
 10159   003977                     SCANLADRH       equ	14711	;# 
 10160   003978                     SCANLADRU       equ	14712	;# 
 10161   003979                     SCANHADR        equ	14713	;# 
 10162   003979                     SCANHADRL       equ	14713	;# 
 10163   00397A                     SCANHADRH       equ	14714	;# 
 10164   00397B                     SCANHADRU       equ	14715	;# 
 10165   00397C                     SCANCON0        equ	14716	;# 
 10166   00397D                     SCANTRIG        equ	14717	;# 
 10167   003980                     IPR0            equ	14720	;# 
 10168   003981                     IPR1            equ	14721	;# 
 10169   003982                     IPR2            equ	14722	;# 
 10170   003983                     IPR3            equ	14723	;# 
 10171   003984                     IPR4            equ	14724	;# 
 10172   003985                     IPR5            equ	14725	;# 
 10173   003986                     IPR6            equ	14726	;# 
 10174   003987                     IPR7            equ	14727	;# 
 10175   003988                     IPR8            equ	14728	;# 
 10176   003989                     IPR9            equ	14729	;# 
 10177   00398A                     IPR10           equ	14730	;# 
 10178   003990                     PIE0            equ	14736	;# 
 10179   003991                     PIE1            equ	14737	;# 
 10180   003992                     PIE2            equ	14738	;# 
 10181   003993                     PIE3            equ	14739	;# 
 10182   003994                     PIE4            equ	14740	;# 
 10183   003995                     PIE5            equ	14741	;# 
 10184   003996                     PIE6            equ	14742	;# 
 10185   003997                     PIE7            equ	14743	;# 
 10186   003998                     PIE8            equ	14744	;# 
 10187   003999                     PIE9            equ	14745	;# 
 10188   00399A                     PIE10           equ	14746	;# 
 10189   0039A0                     PIR0            equ	14752	;# 
 10190   0039A1                     PIR1            equ	14753	;# 
 10191   0039A2                     PIR2            equ	14754	;# 
 10192   0039A3                     PIR3            equ	14755	;# 
 10193   0039A4                     PIR4            equ	14756	;# 
 10194   0039A5                     PIR5            equ	14757	;# 
 10195   0039A6                     PIR6            equ	14758	;# 
 10196   0039A7                     PIR7            equ	14759	;# 
 10197   0039A8                     PIR8            equ	14760	;# 
 10198   0039A9                     PIR9            equ	14761	;# 
 10199   0039AA                     PIR10           equ	14762	;# 
 10200   0039C0                     PMD0            equ	14784	;# 
 10201   0039C1                     PMD1            equ	14785	;# 
 10202   0039C2                     PMD2            equ	14786	;# 
 10203   0039C3                     PMD3            equ	14787	;# 
 10204   0039C4                     PMD4            equ	14788	;# 
 10205   0039C5                     PMD5            equ	14789	;# 
 10206   0039C6                     PMD6            equ	14790	;# 
 10207   0039C7                     PMD7            equ	14791	;# 
 10208   0039D0                     BORCON          equ	14800	;# 
 10209   0039D1                     VREGCON         equ	14801	;# 
 10210   0039D8                     CPUDOZE         equ	14808	;# 
 10211   0039D9                     OSCCON1         equ	14809	;# 
 10212   0039DA                     OSCCON2         equ	14810	;# 
 10213   0039DB                     OSCCON3         equ	14811	;# 
 10214   0039DC                     OSCSTAT         equ	14812	;# 
 10215   0039DC                     OSCSTAT1        equ	14812	;# 
 10216   0039DD                     OSCEN           equ	14813	;# 
 10217   0039DE                     OSCTUNE         equ	14814	;# 
 10218   0039DF                     OSCFRQ          equ	14815	;# 
 10219   0039E0                     NVMADRL         equ	14816	;# 
 10220   0039E1                     NVMADRH         equ	14817	;# 
 10221   0039E3                     NVMDAT          equ	14819	;# 
 10222   0039E5                     NVMCON1         equ	14821	;# 
 10223   0039E6                     NVMCON2         equ	14822	;# 
 10224   0039EF                     PRLOCK          equ	14831	;# 
 10225   0039F1                     ISRPR           equ	14833	;# 
 10226   0039F2                     MAINPR          equ	14834	;# 
 10227   0039F3                     DMA1PR          equ	14835	;# 
 10228   0039F4                     DMA2PR          equ	14836	;# 
 10229   0039F7                     SCANPR          equ	14839	;# 
 10230   003A00                     RA0PPS          equ	14848	;# 
 10231   003A01                     RA1PPS          equ	14849	;# 
 10232   003A02                     RA2PPS          equ	14850	;# 
 10233   003A03                     RA3PPS          equ	14851	;# 
 10234   003A04                     RA4PPS          equ	14852	;# 
 10235   003A05                     RA5PPS          equ	14853	;# 
 10236   003A06                     RA6PPS          equ	14854	;# 
 10237   003A07                     RA7PPS          equ	14855	;# 
 10238   003A08                     RB0PPS          equ	14856	;# 
 10239   003A09                     RB1PPS          equ	14857	;# 
 10240   003A0A                     RB2PPS          equ	14858	;# 
 10241   003A0B                     RB3PPS          equ	14859	;# 
 10242   003A0C                     RB4PPS          equ	14860	;# 
 10243   003A0D                     RB5PPS          equ	14861	;# 
 10244   003A0E                     RB6PPS          equ	14862	;# 
 10245   003A0F                     RB7PPS          equ	14863	;# 
 10246   003A10                     RC0PPS          equ	14864	;# 
 10247   003A11                     RC1PPS          equ	14865	;# 
 10248   003A12                     RC2PPS          equ	14866	;# 
 10249   003A13                     RC3PPS          equ	14867	;# 
 10250   003A14                     RC4PPS          equ	14868	;# 
 10251   003A15                     RC5PPS          equ	14869	;# 
 10252   003A16                     RC6PPS          equ	14870	;# 
 10253   003A17                     RC7PPS          equ	14871	;# 
 10254   003A18                     RD0PPS          equ	14872	;# 
 10255   003A19                     RD1PPS          equ	14873	;# 
 10256   003A1A                     RD2PPS          equ	14874	;# 
 10257   003A1B                     RD3PPS          equ	14875	;# 
 10258   003A1C                     RD4PPS          equ	14876	;# 
 10259   003A1D                     RD5PPS          equ	14877	;# 
 10260   003A1E                     RD6PPS          equ	14878	;# 
 10261   003A1F                     RD7PPS          equ	14879	;# 
 10262   003A20                     RE0PPS          equ	14880	;# 
 10263   003A21                     RE1PPS          equ	14881	;# 
 10264   003A22                     RE2PPS          equ	14882	;# 
 10265   003A28                     RF0PPS          equ	14888	;# 
 10266   003A29                     RF1PPS          equ	14889	;# 
 10267   003A2A                     RF2PPS          equ	14890	;# 
 10268   003A2B                     RF3PPS          equ	14891	;# 
 10269   003A2C                     RF4PPS          equ	14892	;# 
 10270   003A2D                     RF5PPS          equ	14893	;# 
 10271   003A2E                     RF6PPS          equ	14894	;# 
 10272   003A2F                     RF7PPS          equ	14895	;# 
 10273   003A40                     ANSELA          equ	14912	;# 
 10274   003A41                     WPUA            equ	14913	;# 
 10275   003A42                     ODCONA          equ	14914	;# 
 10276   003A43                     SLRCONA         equ	14915	;# 
 10277   003A44                     INLVLA          equ	14916	;# 
 10278   003A45                     IOCAP           equ	14917	;# 
 10279   003A46                     IOCAN           equ	14918	;# 
 10280   003A47                     IOCAF           equ	14919	;# 
 10281   003A50                     ANSELB          equ	14928	;# 
 10282   003A51                     WPUB            equ	14929	;# 
 10283   003A52                     ODCONB          equ	14930	;# 
 10284   003A53                     SLRCONB         equ	14931	;# 
 10285   003A54                     INLVLB          equ	14932	;# 
 10286   003A55                     IOCBP           equ	14933	;# 
 10287   003A56                     IOCBN           equ	14934	;# 
 10288   003A57                     IOCBF           equ	14935	;# 
 10289   003A5A                     RB1I2C          equ	14938	;# 
 10290   003A5B                     RB2I2C          equ	14939	;# 
 10291   003A60                     ANSELC          equ	14944	;# 
 10292   003A61                     WPUC            equ	14945	;# 
 10293   003A62                     ODCONC          equ	14946	;# 
 10294   003A63                     SLRCONC         equ	14947	;# 
 10295   003A64                     INLVLC          equ	14948	;# 
 10296   003A65                     IOCCP           equ	14949	;# 
 10297   003A66                     IOCCN           equ	14950	;# 
 10298   003A67                     IOCCF           equ	14951	;# 
 10299   003A6A                     RC3I2C          equ	14954	;# 
 10300   003A6B                     RC4I2C          equ	14955	;# 
 10301   003A70                     ANSELD          equ	14960	;# 
 10302   003A71                     WPUD            equ	14961	;# 
 10303   003A72                     ODCOND          equ	14962	;# 
 10304   003A73                     SLRCOND         equ	14963	;# 
 10305   003A74                     INLVLD          equ	14964	;# 
 10306   003A7A                     RD0I2C          equ	14970	;# 
 10307   003A7B                     RD1I2C          equ	14971	;# 
 10308   003A80                     ANSELE          equ	14976	;# 
 10309   003A81                     WPUE            equ	14977	;# 
 10310   003A82                     ODCONE          equ	14978	;# 
 10311   003A83                     SLRCONE         equ	14979	;# 
 10312   003A84                     INLVLE          equ	14980	;# 
 10313   003A85                     IOCEP           equ	14981	;# 
 10314   003A86                     IOCEN           equ	14982	;# 
 10315   003A87                     IOCEF           equ	14983	;# 
 10316   003A90                     ANSELF          equ	14992	;# 
 10317   003A91                     WPUF            equ	14993	;# 
 10318   003A92                     ODCONF          equ	14994	;# 
 10319   003A93                     SLRCONF         equ	14995	;# 
 10320   003A94                     INLVLF          equ	14996	;# 
 10321   003ABF                     PPSLOCK         equ	15039	;# 
 10322   003AC0                     INT0PPS         equ	15040	;# 
 10323   003AC1                     INT1PPS         equ	15041	;# 
 10324   003AC2                     INT2PPS         equ	15042	;# 
 10325   003AC3                     T0CKIPPS        equ	15043	;# 
 10326   003AC4                     T1CKIPPS        equ	15044	;# 
 10327   003AC5                     T1GPPS          equ	15045	;# 
 10328   003AC6                     T3CKIPPS        equ	15046	;# 
 10329   003AC7                     T3GPPS          equ	15047	;# 
 10330   003AC8                     T5CKIPPS        equ	15048	;# 
 10331   003AC9                     T5GPPS          equ	15049	;# 
 10332   003ACA                     T2INPPS         equ	15050	;# 
 10333   003ACB                     T4INPPS         equ	15051	;# 
 10334   003ACC                     T6INPPS         equ	15052	;# 
 10335   003ACD                     CCP1PPS         equ	15053	;# 
 10336   003ACE                     CCP2PPS         equ	15054	;# 
 10337   003ACF                     CCP3PPS         equ	15055	;# 
 10338   003AD0                     CCP4PPS         equ	15056	;# 
 10339   003AD1                     SMT1WINPPS      equ	15057	;# 
 10340   003AD2                     SMT1SIGPPS      equ	15058	;# 
 10341   003AD3                     CWG1INPPS       equ	15059	;# 
 10342   003AD4                     CWG2INPPS       equ	15060	;# 
 10343   003AD5                     CWG3INPPS       equ	15061	;# 
 10344   003AD6                     MD1CARLPPS      equ	15062	;# 
 10345   003AD7                     MD1CARHPPS      equ	15063	;# 
 10346   003AD8                     MD1SRCPPS       equ	15064	;# 
 10347   003AD9                     CLCIN0PPS       equ	15065	;# 
 10348   003ADA                     CLCIN1PPS       equ	15066	;# 
 10349   003ADB                     CLCIN2PPS       equ	15067	;# 
 10350   003ADC                     CLCIN3PPS       equ	15068	;# 
 10351   003ADD                     ADACTPPS        equ	15069	;# 
 10352   003ADE                     SPI1SCKPPS      equ	15070	;# 
 10353   003ADF                     SPI1SDIPPS      equ	15071	;# 
 10354   003AE0                     SPI1SSPPS       equ	15072	;# 
 10355   003AE1                     I2C1SCLPPS      equ	15073	;# 
 10356   003AE2                     I2C1SDAPPS      equ	15074	;# 
 10357   003AE3                     I2C2SCLPPS      equ	15075	;# 
 10358   003AE4                     I2C2SDAPPS      equ	15076	;# 
 10359   003AE5                     U1RXPPS         equ	15077	;# 
 10360   003AE6                     U1CTSPPS        equ	15078	;# 
 10361   003AE8                     U2RXPPS         equ	15080	;# 
 10362   003AE9                     U2CTSPPS        equ	15081	;# 
 10363   003BC9                     DMA2BUF         equ	15305	;# 
 10364   003BCA                     DMA2DCNT        equ	15306	;# 
 10365   003BCA                     DMA2DCNTL       equ	15306	;# 
 10366   003BCB                     DMA2DCNTH       equ	15307	;# 
 10367   003BCC                     DMA2DPTR        equ	15308	;# 
 10368   003BCC                     DMA2DPTRL       equ	15308	;# 
 10369   003BCD                     DMA2DPTRH       equ	15309	;# 
 10370   003BCE                     DMA2DSZ         equ	15310	;# 
 10371   003BCE                     DMA2DSZL        equ	15310	;# 
 10372   003BCF                     DMA2DSZH        equ	15311	;# 
 10373   003BD0                     DMA2DSA         equ	15312	;# 
 10374   003BD0                     DMA2DSAL        equ	15312	;# 
 10375   003BD1                     DMA2DSAH        equ	15313	;# 
 10376   003BD2                     DMA2SCNT        equ	15314	;# 
 10377   003BD2                     DMA2SCNTL       equ	15314	;# 
 10378   003BD3                     DMA2SCNTH       equ	15315	;# 
 10379   003BD4                     DMA2SPTR        equ	15316	;# 
 10380   003BD4                     DMA2SPTRL       equ	15316	;# 
 10381   003BD5                     DMA2SPTRH       equ	15317	;# 
 10382   003BD6                     DMA2SPTRU       equ	15318	;# 
 10383   003BD7                     DMA2SSZ         equ	15319	;# 
 10384   003BD7                     DMA2SSZL        equ	15319	;# 
 10385   003BD8                     DMA2SSZH        equ	15320	;# 
 10386   003BD9                     DMA2SSA         equ	15321	;# 
 10387   003BD9                     DMA2SSAL        equ	15321	;# 
 10388   003BDA                     DMA2SSAH        equ	15322	;# 
 10389   003BDB                     DMA2SSAU        equ	15323	;# 
 10390   003BDC                     DMA2CON0        equ	15324	;# 
 10391   003BDD                     DMA2CON1        equ	15325	;# 
 10392   003BDE                     DMA2AIRQ        equ	15326	;# 
 10393   003BDF                     DMA2SIRQ        equ	15327	;# 
 10394   003BE9                     DMA1BUF         equ	15337	;# 
 10395   003BEA                     DMA1DCNT        equ	15338	;# 
 10396   003BEA                     DMA1DCNTL       equ	15338	;# 
 10397   003BEB                     DMA1DCNTH       equ	15339	;# 
 10398   003BEC                     DMA1DPTR        equ	15340	;# 
 10399   003BEC                     DMA1DPTRL       equ	15340	;# 
 10400   003BED                     DMA1DPTRH       equ	15341	;# 
 10401   003BEE                     DMA1DSZ         equ	15342	;# 
 10402   003BEE                     DMA1DSZL        equ	15342	;# 
 10403   003BEF                     DMA1DSZH        equ	15343	;# 
 10404   003BF0                     DMA1DSA         equ	15344	;# 
 10405   003BF0                     DMA1DSAL        equ	15344	;# 
 10406   003BF1                     DMA1DSAH        equ	15345	;# 
 10407   003BF2                     DMA1SCNT        equ	15346	;# 
 10408   003BF2                     DMA1SCNTL       equ	15346	;# 
 10409   003BF3                     DMA1SCNTH       equ	15347	;# 
 10410   003BF4                     DMA1SPTR        equ	15348	;# 
 10411   003BF4                     DMA1SPTRL       equ	15348	;# 
 10412   003BF5                     DMA1SPTRH       equ	15349	;# 
 10413   003BF6                     DMA1SPTRU       equ	15350	;# 
 10414   003BF7                     DMA1SSZ         equ	15351	;# 
 10415   003BF7                     DMA1SSZL        equ	15351	;# 
 10416   003BF8                     DMA1SSZH        equ	15352	;# 
 10417   003BF9                     DMA1SSA         equ	15353	;# 
 10418   003BF9                     DMA1SSAL        equ	15353	;# 
 10419   003BFA                     DMA1SSAH        equ	15354	;# 
 10420   003BFB                     DMA1SSAU        equ	15355	;# 
 10421   003BFC                     DMA1CON0        equ	15356	;# 
 10422   003BFD                     DMA1CON1        equ	15357	;# 
 10423   003BFE                     DMA1AIRQ        equ	15358	;# 
 10424   003BFF                     DMA1SIRQ        equ	15359	;# 
 10425   003C56                     CLC4CON         equ	15446	;# 
 10426   003C57                     CLC4POL         equ	15447	;# 
 10427   003C58                     CLC4SEL0        equ	15448	;# 
 10428   003C59                     CLC4SEL1        equ	15449	;# 
 10429   003C5A                     CLC4SEL2        equ	15450	;# 
 10430   003C5B                     CLC4SEL3        equ	15451	;# 
 10431   003C5C                     CLC4GLS0        equ	15452	;# 
 10432   003C5D                     CLC4GLS1        equ	15453	;# 
 10433   003C5E                     CLC4GLS2        equ	15454	;# 
 10434   003C5F                     CLC4GLS3        equ	15455	;# 
 10435   003C60                     CLC3CON         equ	15456	;# 
 10436   003C61                     CLC3POL         equ	15457	;# 
 10437   003C62                     CLC3SEL0        equ	15458	;# 
 10438   003C63                     CLC3SEL1        equ	15459	;# 
 10439   003C64                     CLC3SEL2        equ	15460	;# 
 10440   003C65                     CLC3SEL3        equ	15461	;# 
 10441   003C66                     CLC3GLS0        equ	15462	;# 
 10442   003C67                     CLC3GLS1        equ	15463	;# 
 10443   003C68                     CLC3GLS2        equ	15464	;# 
 10444   003C69                     CLC3GLS3        equ	15465	;# 
 10445   003C6A                     CLC2CON         equ	15466	;# 
 10446   003C6B                     CLC2POL         equ	15467	;# 
 10447   003C6C                     CLC2SEL0        equ	15468	;# 
 10448   003C6D                     CLC2SEL1        equ	15469	;# 
 10449   003C6E                     CLC2SEL2        equ	15470	;# 
 10450   003C6F                     CLC2SEL3        equ	15471	;# 
 10451   003C70                     CLC2GLS0        equ	15472	;# 
 10452   003C71                     CLC2GLS1        equ	15473	;# 
 10453   003C72                     CLC2GLS2        equ	15474	;# 
 10454   003C73                     CLC2GLS3        equ	15475	;# 
 10455   003C74                     CLC1CON         equ	15476	;# 
 10456   003C75                     CLC1POL         equ	15477	;# 
 10457   003C76                     CLC1SEL0        equ	15478	;# 
 10458   003C77                     CLC1SEL1        equ	15479	;# 
 10459   003C78                     CLC1SEL2        equ	15480	;# 
 10460   003C79                     CLC1SEL3        equ	15481	;# 
 10461   003C7A                     CLC1GLS0        equ	15482	;# 
 10462   003C7B                     CLC1GLS1        equ	15483	;# 
 10463   003C7C                     CLC1GLS2        equ	15484	;# 
 10464   003C7D                     CLC1GLS3        equ	15485	;# 
 10465   003C7E                     CLCDATA0        equ	15486	;# 
 10466   003CE5                     CLKRCON         equ	15589	;# 
 10467   003CE6                     CLKRCLK         equ	15590	;# 
 10468   003CFA                     MD1CON0         equ	15610	;# 
 10469   003CFB                     MD1CON1         equ	15611	;# 
 10470   003CFC                     MD1SRC          equ	15612	;# 
 10471   003CFD                     MD1CARL         equ	15613	;# 
 10472   003CFE                     MD1CARH         equ	15614	;# 
 10473   003D10                     SPI1RXB         equ	15632	;# 
 10474   003D11                     SPI1TXB         equ	15633	;# 
 10475   003D12                     SPI1TCNT        equ	15634	;# 
 10476   003D12                     SPI1TCNTL       equ	15634	;# 
 10477   003D13                     SPI1TCNTH       equ	15635	;# 
 10478   003D14                     SPI1CON0        equ	15636	;# 
 10479   003D15                     SPI1CON1        equ	15637	;# 
 10480   003D16                     SPI1CON2        equ	15638	;# 
 10481   003D17                     SPI1STATUS      equ	15639	;# 
 10482   003D18                     SPI1TWIDTH      equ	15640	;# 
 10483   003D19                     SPI1BAUD        equ	15641	;# 
 10484   003D1A                     SPI1INTF        equ	15642	;# 
 10485   003D1B                     SPI1INTE        equ	15643	;# 
 10486   003D1C                     SPI1CLK         equ	15644	;# 
 10487   003D54                     I2C2RXB         equ	15700	;# 
 10488   003D55                     I2C2TXB         equ	15701	;# 
 10489   003D56                     I2C2CNT         equ	15702	;# 
 10490   003D57                     I2C2ADB0        equ	15703	;# 
 10491   003D58                     I2C2ADB1        equ	15704	;# 
 10492   003D59                     I2C2ADR0        equ	15705	;# 
 10493   003D5A                     I2C2ADR1        equ	15706	;# 
 10494   003D5B                     I2C2ADR2        equ	15707	;# 
 10495   003D5C                     I2C2ADR3        equ	15708	;# 
 10496   003D5D                     I2C2CON0        equ	15709	;# 
 10497   003D5E                     I2C2CON1        equ	15710	;# 
 10498   003D5F                     I2C2CON2        equ	15711	;# 
 10499   003D60                     I2C2ERR         equ	15712	;# 
 10500   003D61                     I2C2STAT0       equ	15713	;# 
 10501   003D62                     I2C2STAT1       equ	15714	;# 
 10502   003D63                     I2C2PIR         equ	15715	;# 
 10503   003D64                     I2C2PIE         equ	15716	;# 
 10504   003D65                     I2C2CLK         equ	15717	;# 
 10505   003D66                     I2C2BTO         equ	15718	;# 
 10506   003D6A                     I2C1RXB         equ	15722	;# 
 10507   003D6B                     I2C1TXB         equ	15723	;# 
 10508   003D6C                     I2C1CNT         equ	15724	;# 
 10509   003D6D                     I2C1ADB0        equ	15725	;# 
 10510   003D6E                     I2C1ADB1        equ	15726	;# 
 10511   003D6F                     I2C1ADR0        equ	15727	;# 
 10512   003D70                     I2C1ADR1        equ	15728	;# 
 10513   003D71                     I2C1ADR2        equ	15729	;# 
 10514   003D72                     I2C1ADR3        equ	15730	;# 
 10515   003D73                     I2C1CON0        equ	15731	;# 
 10516   003D74                     I2C1CON1        equ	15732	;# 
 10517   003D75                     I2C1CON2        equ	15733	;# 
 10518   003D76                     I2C1ERR         equ	15734	;# 
 10519   003D77                     I2C1STAT0       equ	15735	;# 
 10520   003D78                     I2C1STAT1       equ	15736	;# 
 10521   003D79                     I2C1PIR         equ	15737	;# 
 10522   003D7A                     I2C1PIE         equ	15738	;# 
 10523   003D7B                     I2C1CLK         equ	15739	;# 
 10524   003D7C                     I2C1BTO         equ	15740	;# 
 10525   003DD0                     U2RXB           equ	15824	;# 
 10526   003DD0                     U2RXBL          equ	15824	;# 
 10527   003DD2                     U2TXB           equ	15826	;# 
 10528   003DD2                     U2TXBL          equ	15826	;# 
 10529   003DD4                     U2P1            equ	15828	;# 
 10530   003DD4                     U2P1L           equ	15828	;# 
 10531   003DD6                     U2P2            equ	15830	;# 
 10532   003DD6                     U2P2L           equ	15830	;# 
 10533   003DD8                     U2P3            equ	15832	;# 
 10534   003DD8                     U2P3L           equ	15832	;# 
 10535   003DDA                     U2CON0          equ	15834	;# 
 10536   003DDB                     U2CON1          equ	15835	;# 
 10537   003DDC                     U2CON2          equ	15836	;# 
 10538   003DDD                     U2BRG           equ	15837	;# 
 10539   003DDD                     U2BRGL          equ	15837	;# 
 10540   003DDE                     U2BRGH          equ	15838	;# 
 10541   003DDF                     U2FIFO          equ	15839	;# 
 10542   003DE0                     U2UIR           equ	15840	;# 
 10543   003DE1                     U2ERRIR         equ	15841	;# 
 10544   003DE2                     U2ERRIE         equ	15842	;# 
 10545   003DE8                     U1RXB           equ	15848	;# 
 10546   003DE8                     U1RXBL          equ	15848	;# 
 10547   003DE9                     U1RXCHK         equ	15849	;# 
 10548   003DEA                     U1TXB           equ	15850	;# 
 10549   003DEA                     U1TXBL          equ	15850	;# 
 10550   003DEB                     U1TXCHK         equ	15851	;# 
 10551   003DEC                     U1P1            equ	15852	;# 
 10552   003DEC                     U1P1L           equ	15852	;# 
 10553   003DED                     U1P1H           equ	15853	;# 
 10554   003DEE                     U1P2            equ	15854	;# 
 10555   003DEE                     U1P2L           equ	15854	;# 
 10556   003DEF                     U1P2H           equ	15855	;# 
 10557   003DF0                     U1P3            equ	15856	;# 
 10558   003DF0                     U1P3L           equ	15856	;# 
 10559   003DF1                     U1P3H           equ	15857	;# 
 10560   003DF2                     U1CON0          equ	15858	;# 
 10561   003DF3                     U1CON1          equ	15859	;# 
 10562   003DF4                     U1CON2          equ	15860	;# 
 10563   003DF5                     U1BRG           equ	15861	;# 
 10564   003DF5                     U1BRGL          equ	15861	;# 
 10565   003DF6                     U1BRGH          equ	15862	;# 
 10566   003DF7                     U1FIFO          equ	15863	;# 
 10567   003DF8                     U1UIR           equ	15864	;# 
 10568   003DF9                     U1ERRIR         equ	15865	;# 
 10569   003DFA                     U1ERRIE         equ	15866	;# 
 10570   003E9C                     DAC1CON1        equ	16028	;# 
 10571   003E9E                     DAC1CON0        equ	16030	;# 
 10572   003EB8                     CM2CON0         equ	16056	;# 
 10573   003EB9                     CM2CON1         equ	16057	;# 
 10574   003EBA                     CM2NCH          equ	16058	;# 
 10575   003EBB                     CM2PCH          equ	16059	;# 
 10576   003EBC                     CM1CON0         equ	16060	;# 
 10577   003EBD                     CM1CON1         equ	16061	;# 
 10578   003EBE                     CM1NCH          equ	16062	;# 
 10579   003EBF                     CM1PCH          equ	16063	;# 
 10580   003EC0                     CMOUT           equ	16064	;# 
 10581   003EC1                     FVRCON          equ	16065	;# 
 10582   003EC3                     ZCDCON          equ	16067	;# 
 10583   003EC9                     HLVDCON0        equ	16073	;# 
 10584   003ECA                     HLVDCON1        equ	16074	;# 
 10585   003ED7                     ADCP            equ	16087	;# 
 10586   003EDE                     ADLTH           equ	16094	;# 
 10587   003EDE                     ADLTHL          equ	16094	;# 
 10588   003EDF                     ADLTHH          equ	16095	;# 
 10589   003EE0                     ADUTH           equ	16096	;# 
 10590   003EE0                     ADUTHL          equ	16096	;# 
 10591   003EE1                     ADUTHH          equ	16097	;# 
 10592   003EE2                     ADERR           equ	16098	;# 
 10593   003EE2                     ADERRL          equ	16098	;# 
 10594   003EE3                     ADERRH          equ	16099	;# 
 10595   003EE4                     ADSTPT          equ	16100	;# 
 10596   003EE4                     ADSTPTL         equ	16100	;# 
 10597   003EE5                     ADSTPTH         equ	16101	;# 
 10598   003EE6                     ADFLTR          equ	16102	;# 
 10599   003EE6                     ADFLTRL         equ	16102	;# 
 10600   003EE7                     ADFLTRH         equ	16103	;# 
 10601   003EE8                     ADACC           equ	16104	;# 
 10602   003EE8                     ADACCL          equ	16104	;# 
 10603   003EE9                     ADACCH          equ	16105	;# 
 10604   003EEA                     ADACCU          equ	16106	;# 
 10605   003EEB                     ADCNT           equ	16107	;# 
 10606   003EEC                     ADRPT           equ	16108	;# 
 10607   003EED                     ADPREV          equ	16109	;# 
 10608   003EED                     ADPREVL         equ	16109	;# 
 10609   003EEE                     ADPREVH         equ	16110	;# 
 10610   003EEF                     ADRES           equ	16111	;# 
 10611   003EEF                     ADRESL          equ	16111	;# 
 10612   003EF0                     ADRESH          equ	16112	;# 
 10613   003EF1                     ADPCH           equ	16113	;# 
 10614   003EF3                     ADACQ           equ	16115	;# 
 10615   003EF3                     ADACQL          equ	16115	;# 
 10616   003EF4                     ADACQH          equ	16116	;# 
 10617   003EF5                     ADCAP           equ	16117	;# 
 10618   003EF6                     ADPRE           equ	16118	;# 
 10619   003EF6                     ADPREL          equ	16118	;# 
 10620   003EF7                     ADPREH          equ	16119	;# 
 10621   003EF8                     ADCON0          equ	16120	;# 
 10622   003EF9                     ADCON1          equ	16121	;# 
 10623   003EFA                     ADCON2          equ	16122	;# 
 10624   003EFB                     ADCON3          equ	16123	;# 
 10625   003EFC                     ADSTAT          equ	16124	;# 
 10626   003EFD                     ADREF           equ	16125	;# 
 10627   003EFE                     ADACT           equ	16126	;# 
 10628   003EFF                     ADCLK           equ	16127	;# 
 10629   003F12                     SMT1TMR         equ	16146	;# 
 10630   003F12                     SMT1TMRL        equ	16146	;# 
 10631   003F13                     SMT1TMRH        equ	16147	;# 
 10632   003F14                     SMT1TMRU        equ	16148	;# 
 10633   003F15                     SMT1CPR         equ	16149	;# 
 10634   003F15                     SMT1CPRL        equ	16149	;# 
 10635   003F16                     SMT1CPRH        equ	16150	;# 
 10636   003F17                     SMT1CPRU        equ	16151	;# 
 10637   003F18                     SMT1CPW         equ	16152	;# 
 10638   003F18                     SMT1CPWL        equ	16152	;# 
 10639   003F19                     SMT1CPWH        equ	16153	;# 
 10640   003F1A                     SMT1CPWU        equ	16154	;# 
 10641   003F1B                     SMT1PR          equ	16155	;# 
 10642   003F1B                     SMT1PRL         equ	16155	;# 
 10643   003F1C                     SMT1PRH         equ	16156	;# 
 10644   003F1D                     SMT1PRU         equ	16157	;# 
 10645   003F1E                     SMT1CON0        equ	16158	;# 
 10646   003F1F                     SMT1CON1        equ	16159	;# 
 10647   003F20                     SMT1STAT        equ	16160	;# 
 10648   003F21                     SMT1CLK         equ	16161	;# 
 10649   003F22                     SMT1SIG         equ	16162	;# 
 10650   003F23                     SMT1WIN         equ	16163	;# 
 10651   003F38                     NCO1ACC         equ	16184	;# 
 10652   003F38                     NCO1ACCL        equ	16184	;# 
 10653   003F39                     NCO1ACCH        equ	16185	;# 
 10654   003F3A                     NCO1ACCU        equ	16186	;# 
 10655   003F3B                     NCO1INC         equ	16187	;# 
 10656   003F3B                     NCO1INCL        equ	16187	;# 
 10657   003F3C                     NCO1INCH        equ	16188	;# 
 10658   003F3D                     NCO1INCU        equ	16189	;# 
 10659   003F3E                     NCO1CON         equ	16190	;# 
 10660   003F3F                     NCO1CLK         equ	16191	;# 
 10661   003F40                     CWG3CLK         equ	16192	;# 
 10662   003F40                     CWG3CLKCON      equ	16192	;# 
 10663   003F41                     CWG3ISM         equ	16193	;# 
 10664   003F41                     CWG3DAT         equ	16193	;# 
 10665   003F42                     CWG3DBR         equ	16194	;# 
 10666   003F43                     CWG3DBF         equ	16195	;# 
 10667   003F44                     CWG3CON0        equ	16196	;# 
 10668   003F45                     CWG3CON1        equ	16197	;# 
 10669   003F46                     CWG3AS0         equ	16198	;# 
 10670   003F47                     CWG3AS1         equ	16199	;# 
 10671   003F48                     CWG3STR         equ	16200	;# 
 10672   003F49                     CWG2CLK         equ	16201	;# 
 10673   003F49                     CWG2CLKCON      equ	16201	;# 
 10674   003F4A                     CWG2ISM         equ	16202	;# 
 10675   003F4A                     CWG2DAT         equ	16202	;# 
 10676   003F4B                     CWG2DBR         equ	16203	;# 
 10677   003F4C                     CWG2DBF         equ	16204	;# 
 10678   003F4D                     CWG2CON0        equ	16205	;# 
 10679   003F4E                     CWG2CON1        equ	16206	;# 
 10680   003F4F                     CWG2AS0         equ	16207	;# 
 10681   003F50                     CWG2AS1         equ	16208	;# 
 10682   003F51                     CWG2STR         equ	16209	;# 
 10683   003F52                     CWG1CLK         equ	16210	;# 
 10684   003F52                     CWG1CLKCON      equ	16210	;# 
 10685   003F53                     CWG1ISM         equ	16211	;# 
 10686   003F53                     CWG1DAT         equ	16211	;# 
 10687   003F54                     CWG1DBR         equ	16212	;# 
 10688   003F55                     CWG1DBF         equ	16213	;# 
 10689   003F56                     CWG1CON0        equ	16214	;# 
 10690   003F57                     CWG1CON1        equ	16215	;# 
 10691   003F58                     CWG1AS0         equ	16216	;# 
 10692   003F59                     CWG1AS1         equ	16217	;# 
 10693   003F5A                     CWG1STR         equ	16218	;# 
 10694   003F5E                     CCPTMRS0        equ	16222	;# 
 10695   003F5F                     CCPTMRS1        equ	16223	;# 
 10696   003F60                     PWM8DC          equ	16224	;# 
 10697   003F60                     PWM8DCL         equ	16224	;# 
 10698   003F61                     PWM8DCH         equ	16225	;# 
 10699   003F62                     PWM8CON         equ	16226	;# 
 10700   003F64                     PWM7DC          equ	16228	;# 
 10701   003F64                     PWM7DCL         equ	16228	;# 
 10702   003F65                     PWM7DCH         equ	16229	;# 
 10703   003F66                     PWM7CON         equ	16230	;# 
 10704   003F68                     PWM6DC          equ	16232	;# 
 10705   003F68                     PWM6DCL         equ	16232	;# 
 10706   003F69                     PWM6DCH         equ	16233	;# 
 10707   003F6A                     PWM6CON         equ	16234	;# 
 10708   003F6C                     PWM5DC          equ	16236	;# 
 10709   003F6C                     PWM5DCL         equ	16236	;# 
 10710   003F6D                     PWM5DCH         equ	16237	;# 
 10711   003F6E                     PWM5CON         equ	16238	;# 
 10712   003F70                     CCPR4           equ	16240	;# 
 10713   003F70                     CCPR4L          equ	16240	;# 
 10714   003F71                     CCPR4H          equ	16241	;# 
 10715   003F72                     CCP4CON         equ	16242	;# 
 10716   003F73                     CCP4CAP         equ	16243	;# 
 10717   003F74                     CCPR3           equ	16244	;# 
 10718   003F74                     CCPR3L          equ	16244	;# 
 10719   003F75                     CCPR3H          equ	16245	;# 
 10720   003F76                     CCP3CON         equ	16246	;# 
 10721   003F77                     CCP3CAP         equ	16247	;# 
 10722   003F78                     CCPR2           equ	16248	;# 
 10723   003F78                     CCPR2L          equ	16248	;# 
 10724   003F79                     CCPR2H          equ	16249	;# 
 10725   003F7A                     CCP2CON         equ	16250	;# 
 10726   003F7B                     CCP2CAP         equ	16251	;# 
 10727   003F7C                     CCPR1           equ	16252	;# 
 10728   003F7C                     CCPR1L          equ	16252	;# 
 10729   003F7D                     CCPR1H          equ	16253	;# 
 10730   003F7E                     CCP1CON         equ	16254	;# 
 10731   003F7F                     CCP1CAP         equ	16255	;# 
 10732   003F92                     T6TMR           equ	16274	;# 
 10733   003F92                     TMR6            equ	16274	;# 
 10734   003F93                     T6PR            equ	16275	;# 
 10735   003F93                     PR6             equ	16275	;# 
 10736   003F94                     T6CON           equ	16276	;# 
 10737   003F95                     T6HLT           equ	16277	;# 
 10738   003F96                     T6CLKCON        equ	16278	;# 
 10739   003F96                     T6CLK           equ	16278	;# 
 10740   003F97                     T6RST           equ	16279	;# 
 10741   003F98                     TMR5            equ	16280	;# 
 10742   003F98                     TMR5L           equ	16280	;# 
 10743   003F99                     TMR5H           equ	16281	;# 
 10744   003F9A                     T5CON           equ	16282	;# 
 10745   003F9A                     TMR5CON         equ	16282	;# 
 10746   003F9B                     T5GCON          equ	16283	;# 
 10747   003F9B                     TMR5GCON        equ	16283	;# 
 10748   003F9C                     T5GATE          equ	16284	;# 
 10749   003F9C                     TMR5GATE        equ	16284	;# 
 10750   003F9D                     T5CLK           equ	16285	;# 
 10751   003F9D                     TMR5CLK         equ	16285	;# 
 10752   003F9D                     PR5             equ	16285	;# 
 10753   003F9E                     T4TMR           equ	16286	;# 
 10754   003F9E                     TMR4            equ	16286	;# 
 10755   003F9F                     T4PR            equ	16287	;# 
 10756   003F9F                     PR4             equ	16287	;# 
 10757   003FA0                     T4CON           equ	16288	;# 
 10758   003FA1                     T4HLT           equ	16289	;# 
 10759   003FA2                     T4CLKCON        equ	16290	;# 
 10760   003FA2                     T4CLK           equ	16290	;# 
 10761   003FA3                     T4RST           equ	16291	;# 
 10762   003FA4                     TMR3            equ	16292	;# 
 10763   003FA4                     TMR3L           equ	16292	;# 
 10764   003FA5                     TMR3H           equ	16293	;# 
 10765   003FA6                     T3CON           equ	16294	;# 
 10766   003FA6                     TMR3CON         equ	16294	;# 
 10767   003FA7                     T3GCON          equ	16295	;# 
 10768   003FA7                     TMR3GCON        equ	16295	;# 
 10769   003FA8                     T3GATE          equ	16296	;# 
 10770   003FA8                     TMR3GATE        equ	16296	;# 
 10771   003FA9                     T3CLK           equ	16297	;# 
 10772   003FA9                     TMR3CLK         equ	16297	;# 
 10773   003FA9                     PR3             equ	16297	;# 
 10774   003FAA                     T2TMR           equ	16298	;# 
 10775   003FAA                     TMR2            equ	16298	;# 
 10776   003FAB                     T2PR            equ	16299	;# 
 10777   003FAB                     PR2             equ	16299	;# 
 10778   003FAC                     T2CON           equ	16300	;# 
 10779   003FAD                     T2HLT           equ	16301	;# 
 10780   003FAE                     T2CLKCON        equ	16302	;# 
 10781   003FAE                     T2CLK           equ	16302	;# 
 10782   003FAF                     T2RST           equ	16303	;# 
 10783   003FB0                     TMR1            equ	16304	;# 
 10784   003FB0                     TMR1L           equ	16304	;# 
 10785   003FB1                     TMR1H           equ	16305	;# 
 10786   003FB2                     T1CON           equ	16306	;# 
 10787   003FB2                     TMR1CON         equ	16306	;# 
 10788   003FB3                     T1GCON          equ	16307	;# 
 10789   003FB3                     TMR1GCON        equ	16307	;# 
 10790   003FB4                     T1GATE          equ	16308	;# 
 10791   003FB4                     TMR1GATE        equ	16308	;# 
 10792   003FB5                     T1CLK           equ	16309	;# 
 10793   003FB5                     TMR1CLK         equ	16309	;# 
 10794   003FB5                     PR1             equ	16309	;# 
 10795   003FB6                     TMR0L           equ	16310	;# 
 10796   003FB6                     TMR0            equ	16310	;# 
 10797   003FB7                     TMR0H           equ	16311	;# 
 10798   003FB7                     PR0             equ	16311	;# 
 10799   003FB8                     T0CON0          equ	16312	;# 
 10800   003FB9                     T0CON1          equ	16313	;# 
 10801   003FBA                     LATA            equ	16314	;# 
 10802   003FBB                     LATB            equ	16315	;# 
 10803   003FBC                     LATC            equ	16316	;# 
 10804   003FBD                     LATD            equ	16317	;# 
 10805   003FBE                     LATE            equ	16318	;# 
 10806   003FBF                     LATF            equ	16319	;# 
 10807   003FC2                     TRISA           equ	16322	;# 
 10808   003FC3                     TRISB           equ	16323	;# 
 10809   003FC4                     TRISC           equ	16324	;# 
 10810   003FC5                     TRISD           equ	16325	;# 
 10811   003FC6                     TRISE           equ	16326	;# 
 10812   003FC7                     TRISF           equ	16327	;# 
 10813   003FCA                     PORTA           equ	16330	;# 
 10814   003FCB                     PORTB           equ	16331	;# 
 10815   003FCC                     PORTC           equ	16332	;# 
 10816   003FCD                     PORTD           equ	16333	;# 
 10817   003FCE                     PORTE           equ	16334	;# 
 10818   003FCF                     PORTF           equ	16335	;# 
 10819   003FD2                     INTCON0         equ	16338	;# 
 10820   003FD3                     INTCON1         equ	16339	;# 
 10821   003FD4                     IVTLOCK         equ	16340	;# 
 10822   003FD5                     IVTBASE         equ	16341	;# 
 10823   003FD5                     IVTBASEL        equ	16341	;# 
 10824   003FD6                     IVTBASEH        equ	16342	;# 
 10825   003FD7                     IVTBASEU        equ	16343	;# 
 10826   003FD8                     STATUS          equ	16344	;# 
 10827   003FD9                     FSR2            equ	16345	;# 
 10828   003FD9                     FSR2L           equ	16345	;# 
 10829   003FDA                     FSR2H           equ	16346	;# 
 10830   003FDB                     PLUSW2          equ	16347	;# 
 10831   003FDC                     PREINC2         equ	16348	;# 
 10832   003FDD                     POSTDEC2        equ	16349	;# 
 10833   003FDE                     POSTINC2        equ	16350	;# 
 10834   003FDF                     INDF2           equ	16351	;# 
 10835   003FE0                     BSR             equ	16352	;# 
 10836   003FE1                     FSR1            equ	16353	;# 
 10837   003FE1                     FSR1L           equ	16353	;# 
 10838   003FE2                     FSR1H           equ	16354	;# 
 10839   003FE3                     PLUSW1          equ	16355	;# 
 10840   003FE4                     PREINC1         equ	16356	;# 
 10841   003FE5                     POSTDEC1        equ	16357	;# 
 10842   003FE6                     POSTINC1        equ	16358	;# 
 10843   003FE7                     INDF1           equ	16359	;# 
 10844   003FE8                     WREG            equ	16360	;# 
 10845   003FE9                     FSR0            equ	16361	;# 
 10846   003FE9                     FSR0L           equ	16361	;# 
 10847   003FEA                     FSR0H           equ	16362	;# 
 10848   003FEB                     PLUSW0          equ	16363	;# 
 10849   003FEC                     PREINC0         equ	16364	;# 
 10850   003FED                     POSTDEC0        equ	16365	;# 
 10851   003FEE                     POSTINC0        equ	16366	;# 
 10852   003FEF                     INDF0           equ	16367	;# 
 10853   003FF0                     PCON0           equ	16368	;# 
 10854   003FF1                     PCON1           equ	16369	;# 
 10855   003FF3                     PROD            equ	16371	;# 
 10856   003FF3                     PRODL           equ	16371	;# 
 10857   003FF4                     PRODH           equ	16372	;# 
 10858   003FF5                     TABLAT          equ	16373	;# 
 10859   003FF6                     TBLPTR          equ	16374	;# 
 10860   003FF6                     TBLPTRL         equ	16374	;# 
 10861   003FF7                     TBLPTRH         equ	16375	;# 
 10862   003FF8                     TBLPTRU         equ	16376	;# 
 10863   003FF9                     PCLAT           equ	16377	;# 
 10864   003FF9                     PCL             equ	16377	;# 
 10865   003FFA                     PCLATH          equ	16378	;# 
 10866   003FFB                     PCLATU          equ	16379	;# 
 10867   003FFC                     STKPTR          equ	16380	;# 
 10868   003FFD                     TOS             equ	16381	;# 
 10869   003FFD                     TOSL            equ	16381	;# 
 10870   003FFE                     TOSH            equ	16382	;# 
 10871   003FFF                     TOSU            equ	16383	;# 
 10872   003880                     STATUS_CSHAD    equ	14464	;# 
 10873   003881                     WREG_CSHAD      equ	14465	;# 
 10874   003882                     BSR_CSHAD       equ	14466	;# 
 10875   003883                     SHADCON         equ	14467	;# 
 10876   003884                     STATUS_SHAD     equ	14468	;# 
 10877   003885                     WREG_SHAD       equ	14469	;# 
 10878   003886                     BSR_SHAD        equ	14470	;# 
 10879   003887                     PCLATH_SHAD     equ	14471	;# 
 10880   003888                     PCLATU_SHAD     equ	14472	;# 
 10881   003889                     FSR0SH          equ	14473	;# 
 10882   003889                     FSR0L_SHAD      equ	14473	;# 
 10883   00388A                     FSR0H_SHAD      equ	14474	;# 
 10884   00388B                     FSR1SH          equ	14475	;# 
 10885   00388B                     FSR1L_SHAD      equ	14475	;# 
 10886   00388C                     FSR1H_SHAD      equ	14476	;# 
 10887   00388D                     FSR2SH          equ	14477	;# 
 10888   00388D                     FSR2L_SHAD      equ	14477	;# 
 10889   00388E                     FSR2H_SHAD      equ	14478	;# 
 10890   00388F                     PRODSH          equ	14479	;# 
 10891   00388F                     PRODL_SHAD      equ	14479	;# 
 10892   003890                     PRODH_SHAD      equ	14480	;# 
 10893   00389D                     IVTADL          equ	14493	;# 
 10894   00389E                     IVTADH          equ	14494	;# 
 10895   00389F                     IVTADU          equ	14495	;# 
 10896   00395B                     WDTCON0         equ	14683	;# 
 10897   00395C                     WDTCON1         equ	14684	;# 
 10898   00395D                     WDTPSL          equ	14685	;# 
 10899   00395E                     WDTPSH          equ	14686	;# 
 10900   00395F                     WDTTMR          equ	14687	;# 
 10901   003960                     CRCDATA         equ	14688	;# 
 10902   003960                     CRCDATL         equ	14688	;# 
 10903   003961                     CRCDATH         equ	14689	;# 
 10904   003962                     CRCACC          equ	14690	;# 
 10905   003962                     CRCACCL         equ	14690	;# 
 10906   003963                     CRCACCH         equ	14691	;# 
 10907   003964                     CRCSHFT         equ	14692	;# 
 10908   003964                     CRCSHIFTL       equ	14692	;# 
 10909   003965                     CRCSHIFTH       equ	14693	;# 
 10910   003966                     CRCXOR          equ	14694	;# 
 10911   003966                     CRCXORL         equ	14694	;# 
 10912   003967                     CRCXORH         equ	14695	;# 
 10913   003968                     CRCCON0         equ	14696	;# 
 10914   003969                     CRCCON1         equ	14697	;# 
 10915   003976                     SCANLADR        equ	14710	;# 
 10916   003976                     SCANLADRL       equ	14710	;# 
 10917   003977                     SCANLADRH       equ	14711	;# 
 10918   003978                     SCANLADRU       equ	14712	;# 
 10919   003979                     SCANHADR        equ	14713	;# 
 10920   003979                     SCANHADRL       equ	14713	;# 
 10921   00397A                     SCANHADRH       equ	14714	;# 
 10922   00397B                     SCANHADRU       equ	14715	;# 
 10923   00397C                     SCANCON0        equ	14716	;# 
 10924   00397D                     SCANTRIG        equ	14717	;# 
 10925   003980                     IPR0            equ	14720	;# 
 10926   003981                     IPR1            equ	14721	;# 
 10927   003982                     IPR2            equ	14722	;# 
 10928   003983                     IPR3            equ	14723	;# 
 10929   003984                     IPR4            equ	14724	;# 
 10930   003985                     IPR5            equ	14725	;# 
 10931   003986                     IPR6            equ	14726	;# 
 10932   003987                     IPR7            equ	14727	;# 
 10933   003988                     IPR8            equ	14728	;# 
 10934   003989                     IPR9            equ	14729	;# 
 10935   00398A                     IPR10           equ	14730	;# 
 10936   003990                     PIE0            equ	14736	;# 
 10937   003991                     PIE1            equ	14737	;# 
 10938   003992                     PIE2            equ	14738	;# 
 10939   003993                     PIE3            equ	14739	;# 
 10940   003994                     PIE4            equ	14740	;# 
 10941   003995                     PIE5            equ	14741	;# 
 10942   003996                     PIE6            equ	14742	;# 
 10943   003997                     PIE7            equ	14743	;# 
 10944   003998                     PIE8            equ	14744	;# 
 10945   003999                     PIE9            equ	14745	;# 
 10946   00399A                     PIE10           equ	14746	;# 
 10947   0039A0                     PIR0            equ	14752	;# 
 10948   0039A1                     PIR1            equ	14753	;# 
 10949   0039A2                     PIR2            equ	14754	;# 
 10950   0039A3                     PIR3            equ	14755	;# 
 10951   0039A4                     PIR4            equ	14756	;# 
 10952   0039A5                     PIR5            equ	14757	;# 
 10953   0039A6                     PIR6            equ	14758	;# 
 10954   0039A7                     PIR7            equ	14759	;# 
 10955   0039A8                     PIR8            equ	14760	;# 
 10956   0039A9                     PIR9            equ	14761	;# 
 10957   0039AA                     PIR10           equ	14762	;# 
 10958   0039C0                     PMD0            equ	14784	;# 
 10959   0039C1                     PMD1            equ	14785	;# 
 10960   0039C2                     PMD2            equ	14786	;# 
 10961   0039C3                     PMD3            equ	14787	;# 
 10962   0039C4                     PMD4            equ	14788	;# 
 10963   0039C5                     PMD5            equ	14789	;# 
 10964   0039C6                     PMD6            equ	14790	;# 
 10965   0039C7                     PMD7            equ	14791	;# 
 10966   0039D0                     BORCON          equ	14800	;# 
 10967   0039D1                     VREGCON         equ	14801	;# 
 10968   0039D8                     CPUDOZE         equ	14808	;# 
 10969   0039D9                     OSCCON1         equ	14809	;# 
 10970   0039DA                     OSCCON2         equ	14810	;# 
 10971   0039DB                     OSCCON3         equ	14811	;# 
 10972   0039DC                     OSCSTAT         equ	14812	;# 
 10973   0039DC                     OSCSTAT1        equ	14812	;# 
 10974   0039DD                     OSCEN           equ	14813	;# 
 10975   0039DE                     OSCTUNE         equ	14814	;# 
 10976   0039DF                     OSCFRQ          equ	14815	;# 
 10977   0039E0                     NVMADRL         equ	14816	;# 
 10978   0039E1                     NVMADRH         equ	14817	;# 
 10979   0039E3                     NVMDAT          equ	14819	;# 
 10980   0039E5                     NVMCON1         equ	14821	;# 
 10981   0039E6                     NVMCON2         equ	14822	;# 
 10982   0039EF                     PRLOCK          equ	14831	;# 
 10983   0039F1                     ISRPR           equ	14833	;# 
 10984   0039F2                     MAINPR          equ	14834	;# 
 10985   0039F3                     DMA1PR          equ	14835	;# 
 10986   0039F4                     DMA2PR          equ	14836	;# 
 10987   0039F7                     SCANPR          equ	14839	;# 
 10988   003A00                     RA0PPS          equ	14848	;# 
 10989   003A01                     RA1PPS          equ	14849	;# 
 10990   003A02                     RA2PPS          equ	14850	;# 
 10991   003A03                     RA3PPS          equ	14851	;# 
 10992   003A04                     RA4PPS          equ	14852	;# 
 10993   003A05                     RA5PPS          equ	14853	;# 
 10994   003A06                     RA6PPS          equ	14854	;# 
 10995   003A07                     RA7PPS          equ	14855	;# 
 10996   003A08                     RB0PPS          equ	14856	;# 
 10997   003A09                     RB1PPS          equ	14857	;# 
 10998   003A0A                     RB2PPS          equ	14858	;# 
 10999   003A0B                     RB3PPS          equ	14859	;# 
 11000   003A0C                     RB4PPS          equ	14860	;# 
 11001   003A0D                     RB5PPS          equ	14861	;# 
 11002   003A0E                     RB6PPS          equ	14862	;# 
 11003   003A0F                     RB7PPS          equ	14863	;# 
 11004   003A10                     RC0PPS          equ	14864	;# 
 11005   003A11                     RC1PPS          equ	14865	;# 
 11006   003A12                     RC2PPS          equ	14866	;# 
 11007   003A13                     RC3PPS          equ	14867	;# 
 11008   003A14                     RC4PPS          equ	14868	;# 
 11009   003A15                     RC5PPS          equ	14869	;# 
 11010   003A16                     RC6PPS          equ	14870	;# 
 11011   003A17                     RC7PPS          equ	14871	;# 
 11012   003A18                     RD0PPS          equ	14872	;# 
 11013   003A19                     RD1PPS          equ	14873	;# 
 11014   003A1A                     RD2PPS          equ	14874	;# 
 11015   003A1B                     RD3PPS          equ	14875	;# 
 11016   003A1C                     RD4PPS          equ	14876	;# 
 11017   003A1D                     RD5PPS          equ	14877	;# 
 11018   003A1E                     RD6PPS          equ	14878	;# 
 11019   003A1F                     RD7PPS          equ	14879	;# 
 11020   003A20                     RE0PPS          equ	14880	;# 
 11021   003A21                     RE1PPS          equ	14881	;# 
 11022   003A22                     RE2PPS          equ	14882	;# 
 11023   003A28                     RF0PPS          equ	14888	;# 
 11024   003A29                     RF1PPS          equ	14889	;# 
 11025   003A2A                     RF2PPS          equ	14890	;# 
 11026   003A2B                     RF3PPS          equ	14891	;# 
 11027   003A2C                     RF4PPS          equ	14892	;# 
 11028   003A2D                     RF5PPS          equ	14893	;# 
 11029   003A2E                     RF6PPS          equ	14894	;# 
 11030   003A2F                     RF7PPS          equ	14895	;# 
 11031   003A40                     ANSELA          equ	14912	;# 
 11032   003A41                     WPUA            equ	14913	;# 
 11033   003A42                     ODCONA          equ	14914	;# 
 11034   003A43                     SLRCONA         equ	14915	;# 
 11035   003A44                     INLVLA          equ	14916	;# 
 11036   003A45                     IOCAP           equ	14917	;# 
 11037   003A46                     IOCAN           equ	14918	;# 
 11038   003A47                     IOCAF           equ	14919	;# 
 11039   003A50                     ANSELB          equ	14928	;# 
 11040   003A51                     WPUB            equ	14929	;# 
 11041   003A52                     ODCONB          equ	14930	;# 
 11042   003A53                     SLRCONB         equ	14931	;# 
 11043   003A54                     INLVLB          equ	14932	;# 
 11044   003A55                     IOCBP           equ	14933	;# 
 11045   003A56                     IOCBN           equ	14934	;# 
 11046   003A57                     IOCBF           equ	14935	;# 
 11047   003A5A                     RB1I2C          equ	14938	;# 
 11048   003A5B                     RB2I2C          equ	14939	;# 
 11049   003A60                     ANSELC          equ	14944	;# 
 11050   003A61                     WPUC            equ	14945	;# 
 11051   003A62                     ODCONC          equ	14946	;# 
 11052   003A63                     SLRCONC         equ	14947	;# 
 11053   003A64                     INLVLC          equ	14948	;# 
 11054   003A65                     IOCCP           equ	14949	;# 
 11055   003A66                     IOCCN           equ	14950	;# 
 11056   003A67                     IOCCF           equ	14951	;# 
 11057   003A6A                     RC3I2C          equ	14954	;# 
 11058   003A6B                     RC4I2C          equ	14955	;# 
 11059   003A70                     ANSELD          equ	14960	;# 
 11060   003A71                     WPUD            equ	14961	;# 
 11061   003A72                     ODCOND          equ	14962	;# 
 11062   003A73                     SLRCOND         equ	14963	;# 
 11063   003A74                     INLVLD          equ	14964	;# 
 11064   003A7A                     RD0I2C          equ	14970	;# 
 11065   003A7B                     RD1I2C          equ	14971	;# 
 11066   003A80                     ANSELE          equ	14976	;# 
 11067   003A81                     WPUE            equ	14977	;# 
 11068   003A82                     ODCONE          equ	14978	;# 
 11069   003A83                     SLRCONE         equ	14979	;# 
 11070   003A84                     INLVLE          equ	14980	;# 
 11071   003A85                     IOCEP           equ	14981	;# 
 11072   003A86                     IOCEN           equ	14982	;# 
 11073   003A87                     IOCEF           equ	14983	;# 
 11074   003A90                     ANSELF          equ	14992	;# 
 11075   003A91                     WPUF            equ	14993	;# 
 11076   003A92                     ODCONF          equ	14994	;# 
 11077   003A93                     SLRCONF         equ	14995	;# 
 11078   003A94                     INLVLF          equ	14996	;# 
 11079   003ABF                     PPSLOCK         equ	15039	;# 
 11080   003AC0                     INT0PPS         equ	15040	;# 
 11081   003AC1                     INT1PPS         equ	15041	;# 
 11082   003AC2                     INT2PPS         equ	15042	;# 
 11083   003AC3                     T0CKIPPS        equ	15043	;# 
 11084   003AC4                     T1CKIPPS        equ	15044	;# 
 11085   003AC5                     T1GPPS          equ	15045	;# 
 11086   003AC6                     T3CKIPPS        equ	15046	;# 
 11087   003AC7                     T3GPPS          equ	15047	;# 
 11088   003AC8                     T5CKIPPS        equ	15048	;# 
 11089   003AC9                     T5GPPS          equ	15049	;# 
 11090   003ACA                     T2INPPS         equ	15050	;# 
 11091   003ACB                     T4INPPS         equ	15051	;# 
 11092   003ACC                     T6INPPS         equ	15052	;# 
 11093   003ACD                     CCP1PPS         equ	15053	;# 
 11094   003ACE                     CCP2PPS         equ	15054	;# 
 11095   003ACF                     CCP3PPS         equ	15055	;# 
 11096   003AD0                     CCP4PPS         equ	15056	;# 
 11097   003AD1                     SMT1WINPPS      equ	15057	;# 
 11098   003AD2                     SMT1SIGPPS      equ	15058	;# 
 11099   003AD3                     CWG1INPPS       equ	15059	;# 
 11100   003AD4                     CWG2INPPS       equ	15060	;# 
 11101   003AD5                     CWG3INPPS       equ	15061	;# 
 11102   003AD6                     MD1CARLPPS      equ	15062	;# 
 11103   003AD7                     MD1CARHPPS      equ	15063	;# 
 11104   003AD8                     MD1SRCPPS       equ	15064	;# 
 11105   003AD9                     CLCIN0PPS       equ	15065	;# 
 11106   003ADA                     CLCIN1PPS       equ	15066	;# 
 11107   003ADB                     CLCIN2PPS       equ	15067	;# 
 11108   003ADC                     CLCIN3PPS       equ	15068	;# 
 11109   003ADD                     ADACTPPS        equ	15069	;# 
 11110   003ADE                     SPI1SCKPPS      equ	15070	;# 
 11111   003ADF                     SPI1SDIPPS      equ	15071	;# 
 11112   003AE0                     SPI1SSPPS       equ	15072	;# 
 11113   003AE1                     I2C1SCLPPS      equ	15073	;# 
 11114   003AE2                     I2C1SDAPPS      equ	15074	;# 
 11115   003AE3                     I2C2SCLPPS      equ	15075	;# 
 11116   003AE4                     I2C2SDAPPS      equ	15076	;# 
 11117   003AE5                     U1RXPPS         equ	15077	;# 
 11118   003AE6                     U1CTSPPS        equ	15078	;# 
 11119   003AE8                     U2RXPPS         equ	15080	;# 
 11120   003AE9                     U2CTSPPS        equ	15081	;# 
 11121   003BC9                     DMA2BUF         equ	15305	;# 
 11122   003BCA                     DMA2DCNT        equ	15306	;# 
 11123   003BCA                     DMA2DCNTL       equ	15306	;# 
 11124   003BCB                     DMA2DCNTH       equ	15307	;# 
 11125   003BCC                     DMA2DPTR        equ	15308	;# 
 11126   003BCC                     DMA2DPTRL       equ	15308	;# 
 11127   003BCD                     DMA2DPTRH       equ	15309	;# 
 11128   003BCE                     DMA2DSZ         equ	15310	;# 
 11129   003BCE                     DMA2DSZL        equ	15310	;# 
 11130   003BCF                     DMA2DSZH        equ	15311	;# 
 11131   003BD0                     DMA2DSA         equ	15312	;# 
 11132   003BD0                     DMA2DSAL        equ	15312	;# 
 11133   003BD1                     DMA2DSAH        equ	15313	;# 
 11134   003BD2                     DMA2SCNT        equ	15314	;# 
 11135   003BD2                     DMA2SCNTL       equ	15314	;# 
 11136   003BD3                     DMA2SCNTH       equ	15315	;# 
 11137   003BD4                     DMA2SPTR        equ	15316	;# 
 11138   003BD4                     DMA2SPTRL       equ	15316	;# 
 11139   003BD5                     DMA2SPTRH       equ	15317	;# 
 11140   003BD6                     DMA2SPTRU       equ	15318	;# 
 11141   003BD7                     DMA2SSZ         equ	15319	;# 
 11142   003BD7                     DMA2SSZL        equ	15319	;# 
 11143   003BD8                     DMA2SSZH        equ	15320	;# 
 11144   003BD9                     DMA2SSA         equ	15321	;# 
 11145   003BD9                     DMA2SSAL        equ	15321	;# 
 11146   003BDA                     DMA2SSAH        equ	15322	;# 
 11147   003BDB                     DMA2SSAU        equ	15323	;# 
 11148   003BDC                     DMA2CON0        equ	15324	;# 
 11149   003BDD                     DMA2CON1        equ	15325	;# 
 11150   003BDE                     DMA2AIRQ        equ	15326	;# 
 11151   003BDF                     DMA2SIRQ        equ	15327	;# 
 11152   003BE9                     DMA1BUF         equ	15337	;# 
 11153   003BEA                     DMA1DCNT        equ	15338	;# 
 11154   003BEA                     DMA1DCNTL       equ	15338	;# 
 11155   003BEB                     DMA1DCNTH       equ	15339	;# 
 11156   003BEC                     DMA1DPTR        equ	15340	;# 
 11157   003BEC                     DMA1DPTRL       equ	15340	;# 
 11158   003BED                     DMA1DPTRH       equ	15341	;# 
 11159   003BEE                     DMA1DSZ         equ	15342	;# 
 11160   003BEE                     DMA1DSZL        equ	15342	;# 
 11161   003BEF                     DMA1DSZH        equ	15343	;# 
 11162   003BF0                     DMA1DSA         equ	15344	;# 
 11163   003BF0                     DMA1DSAL        equ	15344	;# 
 11164   003BF1                     DMA1DSAH        equ	15345	;# 
 11165   003BF2                     DMA1SCNT        equ	15346	;# 
 11166   003BF2                     DMA1SCNTL       equ	15346	;# 
 11167   003BF3                     DMA1SCNTH       equ	15347	;# 
 11168   003BF4                     DMA1SPTR        equ	15348	;# 
 11169   003BF4                     DMA1SPTRL       equ	15348	;# 
 11170   003BF5                     DMA1SPTRH       equ	15349	;# 
 11171   003BF6                     DMA1SPTRU       equ	15350	;# 
 11172   003BF7                     DMA1SSZ         equ	15351	;# 
 11173   003BF7                     DMA1SSZL        equ	15351	;# 
 11174   003BF8                     DMA1SSZH        equ	15352	;# 
 11175   003BF9                     DMA1SSA         equ	15353	;# 
 11176   003BF9                     DMA1SSAL        equ	15353	;# 
 11177   003BFA                     DMA1SSAH        equ	15354	;# 
 11178   003BFB                     DMA1SSAU        equ	15355	;# 
 11179   003BFC                     DMA1CON0        equ	15356	;# 
 11180   003BFD                     DMA1CON1        equ	15357	;# 
 11181   003BFE                     DMA1AIRQ        equ	15358	;# 
 11182   003BFF                     DMA1SIRQ        equ	15359	;# 
 11183   003C56                     CLC4CON         equ	15446	;# 
 11184   003C57                     CLC4POL         equ	15447	;# 
 11185   003C58                     CLC4SEL0        equ	15448	;# 
 11186   003C59                     CLC4SEL1        equ	15449	;# 
 11187   003C5A                     CLC4SEL2        equ	15450	;# 
 11188   003C5B                     CLC4SEL3        equ	15451	;# 
 11189   003C5C                     CLC4GLS0        equ	15452	;# 
 11190   003C5D                     CLC4GLS1        equ	15453	;# 
 11191   003C5E                     CLC4GLS2        equ	15454	;# 
 11192   003C5F                     CLC4GLS3        equ	15455	;# 
 11193   003C60                     CLC3CON         equ	15456	;# 
 11194   003C61                     CLC3POL         equ	15457	;# 
 11195   003C62                     CLC3SEL0        equ	15458	;# 
 11196   003C63                     CLC3SEL1        equ	15459	;# 
 11197   003C64                     CLC3SEL2        equ	15460	;# 
 11198   003C65                     CLC3SEL3        equ	15461	;# 
 11199   003C66                     CLC3GLS0        equ	15462	;# 
 11200   003C67                     CLC3GLS1        equ	15463	;# 
 11201   003C68                     CLC3GLS2        equ	15464	;# 
 11202   003C69                     CLC3GLS3        equ	15465	;# 
 11203   003C6A                     CLC2CON         equ	15466	;# 
 11204   003C6B                     CLC2POL         equ	15467	;# 
 11205   003C6C                     CLC2SEL0        equ	15468	;# 
 11206   003C6D                     CLC2SEL1        equ	15469	;# 
 11207   003C6E                     CLC2SEL2        equ	15470	;# 
 11208   003C6F                     CLC2SEL3        equ	15471	;# 
 11209   003C70                     CLC2GLS0        equ	15472	;# 
 11210   003C71                     CLC2GLS1        equ	15473	;# 
 11211   003C72                     CLC2GLS2        equ	15474	;# 
 11212   003C73                     CLC2GLS3        equ	15475	;# 
 11213   003C74                     CLC1CON         equ	15476	;# 
 11214   003C75                     CLC1POL         equ	15477	;# 
 11215   003C76                     CLC1SEL0        equ	15478	;# 
 11216   003C77                     CLC1SEL1        equ	15479	;# 
 11217   003C78                     CLC1SEL2        equ	15480	;# 
 11218   003C79                     CLC1SEL3        equ	15481	;# 
 11219   003C7A                     CLC1GLS0        equ	15482	;# 
 11220   003C7B                     CLC1GLS1        equ	15483	;# 
 11221   003C7C                     CLC1GLS2        equ	15484	;# 
 11222   003C7D                     CLC1GLS3        equ	15485	;# 
 11223   003C7E                     CLCDATA0        equ	15486	;# 
 11224   003CE5                     CLKRCON         equ	15589	;# 
 11225   003CE6                     CLKRCLK         equ	15590	;# 
 11226   003CFA                     MD1CON0         equ	15610	;# 
 11227   003CFB                     MD1CON1         equ	15611	;# 
 11228   003CFC                     MD1SRC          equ	15612	;# 
 11229   003CFD                     MD1CARL         equ	15613	;# 
 11230   003CFE                     MD1CARH         equ	15614	;# 
 11231   003D10                     SPI1RXB         equ	15632	;# 
 11232   003D11                     SPI1TXB         equ	15633	;# 
 11233   003D12                     SPI1TCNT        equ	15634	;# 
 11234   003D12                     SPI1TCNTL       equ	15634	;# 
 11235   003D13                     SPI1TCNTH       equ	15635	;# 
 11236   003D14                     SPI1CON0        equ	15636	;# 
 11237   003D15                     SPI1CON1        equ	15637	;# 
 11238   003D16                     SPI1CON2        equ	15638	;# 
 11239   003D17                     SPI1STATUS      equ	15639	;# 
 11240   003D18                     SPI1TWIDTH      equ	15640	;# 
 11241   003D19                     SPI1BAUD        equ	15641	;# 
 11242   003D1A                     SPI1INTF        equ	15642	;# 
 11243   003D1B                     SPI1INTE        equ	15643	;# 
 11244   003D1C                     SPI1CLK         equ	15644	;# 
 11245   003D54                     I2C2RXB         equ	15700	;# 
 11246   003D55                     I2C2TXB         equ	15701	;# 
 11247   003D56                     I2C2CNT         equ	15702	;# 
 11248   003D57                     I2C2ADB0        equ	15703	;# 
 11249   003D58                     I2C2ADB1        equ	15704	;# 
 11250   003D59                     I2C2ADR0        equ	15705	;# 
 11251   003D5A                     I2C2ADR1        equ	15706	;# 
 11252   003D5B                     I2C2ADR2        equ	15707	;# 
 11253   003D5C                     I2C2ADR3        equ	15708	;# 
 11254   003D5D                     I2C2CON0        equ	15709	;# 
 11255   003D5E                     I2C2CON1        equ	15710	;# 
 11256   003D5F                     I2C2CON2        equ	15711	;# 
 11257   003D60                     I2C2ERR         equ	15712	;# 
 11258   003D61                     I2C2STAT0       equ	15713	;# 
 11259   003D62                     I2C2STAT1       equ	15714	;# 
 11260   003D63                     I2C2PIR         equ	15715	;# 
 11261   003D64                     I2C2PIE         equ	15716	;# 
 11262   003D65                     I2C2CLK         equ	15717	;# 
 11263   003D66                     I2C2BTO         equ	15718	;# 
 11264   003D6A                     I2C1RXB         equ	15722	;# 
 11265   003D6B                     I2C1TXB         equ	15723	;# 
 11266   003D6C                     I2C1CNT         equ	15724	;# 
 11267   003D6D                     I2C1ADB0        equ	15725	;# 
 11268   003D6E                     I2C1ADB1        equ	15726	;# 
 11269   003D6F                     I2C1ADR0        equ	15727	;# 
 11270   003D70                     I2C1ADR1        equ	15728	;# 
 11271   003D71                     I2C1ADR2        equ	15729	;# 
 11272   003D72                     I2C1ADR3        equ	15730	;# 
 11273   003D73                     I2C1CON0        equ	15731	;# 
 11274   003D74                     I2C1CON1        equ	15732	;# 
 11275   003D75                     I2C1CON2        equ	15733	;# 
 11276   003D76                     I2C1ERR         equ	15734	;# 
 11277   003D77                     I2C1STAT0       equ	15735	;# 
 11278   003D78                     I2C1STAT1       equ	15736	;# 
 11279   003D79                     I2C1PIR         equ	15737	;# 
 11280   003D7A                     I2C1PIE         equ	15738	;# 
 11281   003D7B                     I2C1CLK         equ	15739	;# 
 11282   003D7C                     I2C1BTO         equ	15740	;# 
 11283   003DD0                     U2RXB           equ	15824	;# 
 11284   003DD0                     U2RXBL          equ	15824	;# 
 11285   003DD2                     U2TXB           equ	15826	;# 
 11286   003DD2                     U2TXBL          equ	15826	;# 
 11287   003DD4                     U2P1            equ	15828	;# 
 11288   003DD4                     U2P1L           equ	15828	;# 
 11289   003DD6                     U2P2            equ	15830	;# 
 11290   003DD6                     U2P2L           equ	15830	;# 
 11291   003DD8                     U2P3            equ	15832	;# 
 11292   003DD8                     U2P3L           equ	15832	;# 
 11293   003DDA                     U2CON0          equ	15834	;# 
 11294   003DDB                     U2CON1          equ	15835	;# 
 11295   003DDC                     U2CON2          equ	15836	;# 
 11296   003DDD                     U2BRG           equ	15837	;# 
 11297   003DDD                     U2BRGL          equ	15837	;# 
 11298   003DDE                     U2BRGH          equ	15838	;# 
 11299   003DDF                     U2FIFO          equ	15839	;# 
 11300   003DE0                     U2UIR           equ	15840	;# 
 11301   003DE1                     U2ERRIR         equ	15841	;# 
 11302   003DE2                     U2ERRIE         equ	15842	;# 
 11303   003DE8                     U1RXB           equ	15848	;# 
 11304   003DE8                     U1RXBL          equ	15848	;# 
 11305   003DE9                     U1RXCHK         equ	15849	;# 
 11306   003DEA                     U1TXB           equ	15850	;# 
 11307   003DEA                     U1TXBL          equ	15850	;# 
 11308   003DEB                     U1TXCHK         equ	15851	;# 
 11309   003DEC                     U1P1            equ	15852	;# 
 11310   003DEC                     U1P1L           equ	15852	;# 
 11311   003DED                     U1P1H           equ	15853	;# 
 11312   003DEE                     U1P2            equ	15854	;# 
 11313   003DEE                     U1P2L           equ	15854	;# 
 11314   003DEF                     U1P2H           equ	15855	;# 
 11315   003DF0                     U1P3            equ	15856	;# 
 11316   003DF0                     U1P3L           equ	15856	;# 
 11317   003DF1                     U1P3H           equ	15857	;# 
 11318   003DF2                     U1CON0          equ	15858	;# 
 11319   003DF3                     U1CON1          equ	15859	;# 
 11320   003DF4                     U1CON2          equ	15860	;# 
 11321   003DF5                     U1BRG           equ	15861	;# 
 11322   003DF5                     U1BRGL          equ	15861	;# 
 11323   003DF6                     U1BRGH          equ	15862	;# 
 11324   003DF7                     U1FIFO          equ	15863	;# 
 11325   003DF8                     U1UIR           equ	15864	;# 
 11326   003DF9                     U1ERRIR         equ	15865	;# 
 11327   003DFA                     U1ERRIE         equ	15866	;# 
 11328   003E9C                     DAC1CON1        equ	16028	;# 
 11329   003E9E                     DAC1CON0        equ	16030	;# 
 11330   003EB8                     CM2CON0         equ	16056	;# 
 11331   003EB9                     CM2CON1         equ	16057	;# 
 11332   003EBA                     CM2NCH          equ	16058	;# 
 11333   003EBB                     CM2PCH          equ	16059	;# 
 11334   003EBC                     CM1CON0         equ	16060	;# 
 11335   003EBD                     CM1CON1         equ	16061	;# 
 11336   003EBE                     CM1NCH          equ	16062	;# 
 11337   003EBF                     CM1PCH          equ	16063	;# 
 11338   003EC0                     CMOUT           equ	16064	;# 
 11339   003EC1                     FVRCON          equ	16065	;# 
 11340   003EC3                     ZCDCON          equ	16067	;# 
 11341   003EC9                     HLVDCON0        equ	16073	;# 
 11342   003ECA                     HLVDCON1        equ	16074	;# 
 11343   003ED7                     ADCP            equ	16087	;# 
 11344   003EDE                     ADLTH           equ	16094	;# 
 11345   003EDE                     ADLTHL          equ	16094	;# 
 11346   003EDF                     ADLTHH          equ	16095	;# 
 11347   003EE0                     ADUTH           equ	16096	;# 
 11348   003EE0                     ADUTHL          equ	16096	;# 
 11349   003EE1                     ADUTHH          equ	16097	;# 
 11350   003EE2                     ADERR           equ	16098	;# 
 11351   003EE2                     ADERRL          equ	16098	;# 
 11352   003EE3                     ADERRH          equ	16099	;# 
 11353   003EE4                     ADSTPT          equ	16100	;# 
 11354   003EE4                     ADSTPTL         equ	16100	;# 
 11355   003EE5                     ADSTPTH         equ	16101	;# 
 11356   003EE6                     ADFLTR          equ	16102	;# 
 11357   003EE6                     ADFLTRL         equ	16102	;# 
 11358   003EE7                     ADFLTRH         equ	16103	;# 
 11359   003EE8                     ADACC           equ	16104	;# 
 11360   003EE8                     ADACCL          equ	16104	;# 
 11361   003EE9                     ADACCH          equ	16105	;# 
 11362   003EEA                     ADACCU          equ	16106	;# 
 11363   003EEB                     ADCNT           equ	16107	;# 
 11364   003EEC                     ADRPT           equ	16108	;# 
 11365   003EED                     ADPREV          equ	16109	;# 
 11366   003EED                     ADPREVL         equ	16109	;# 
 11367   003EEE                     ADPREVH         equ	16110	;# 
 11368   003EEF                     ADRES           equ	16111	;# 
 11369   003EEF                     ADRESL          equ	16111	;# 
 11370   003EF0                     ADRESH          equ	16112	;# 
 11371   003EF1                     ADPCH           equ	16113	;# 
 11372   003EF3                     ADACQ           equ	16115	;# 
 11373   003EF3                     ADACQL          equ	16115	;# 
 11374   003EF4                     ADACQH          equ	16116	;# 
 11375   003EF5                     ADCAP           equ	16117	;# 
 11376   003EF6                     ADPRE           equ	16118	;# 
 11377   003EF6                     ADPREL          equ	16118	;# 
 11378   003EF7                     ADPREH          equ	16119	;# 
 11379   003EF8                     ADCON0          equ	16120	;# 
 11380   003EF9                     ADCON1          equ	16121	;# 
 11381   003EFA                     ADCON2          equ	16122	;# 
 11382   003EFB                     ADCON3          equ	16123	;# 
 11383   003EFC                     ADSTAT          equ	16124	;# 
 11384   003EFD                     ADREF           equ	16125	;# 
 11385   003EFE                     ADACT           equ	16126	;# 
 11386   003EFF                     ADCLK           equ	16127	;# 
 11387   003F12                     SMT1TMR         equ	16146	;# 
 11388   003F12                     SMT1TMRL        equ	16146	;# 
 11389   003F13                     SMT1TMRH        equ	16147	;# 
 11390   003F14                     SMT1TMRU        equ	16148	;# 
 11391   003F15                     SMT1CPR         equ	16149	;# 
 11392   003F15                     SMT1CPRL        equ	16149	;# 
 11393   003F16                     SMT1CPRH        equ	16150	;# 
 11394   003F17                     SMT1CPRU        equ	16151	;# 
 11395   003F18                     SMT1CPW         equ	16152	;# 
 11396   003F18                     SMT1CPWL        equ	16152	;# 
 11397   003F19                     SMT1CPWH        equ	16153	;# 
 11398   003F1A                     SMT1CPWU        equ	16154	;# 
 11399   003F1B                     SMT1PR          equ	16155	;# 
 11400   003F1B                     SMT1PRL         equ	16155	;# 
 11401   003F1C                     SMT1PRH         equ	16156	;# 
 11402   003F1D                     SMT1PRU         equ	16157	;# 
 11403   003F1E                     SMT1CON0        equ	16158	;# 
 11404   003F1F                     SMT1CON1        equ	16159	;# 
 11405   003F20                     SMT1STAT        equ	16160	;# 
 11406   003F21                     SMT1CLK         equ	16161	;# 
 11407   003F22                     SMT1SIG         equ	16162	;# 
 11408   003F23                     SMT1WIN         equ	16163	;# 
 11409   003F38                     NCO1ACC         equ	16184	;# 
 11410   003F38                     NCO1ACCL        equ	16184	;# 
 11411   003F39                     NCO1ACCH        equ	16185	;# 
 11412   003F3A                     NCO1ACCU        equ	16186	;# 
 11413   003F3B                     NCO1INC         equ	16187	;# 
 11414   003F3B                     NCO1INCL        equ	16187	;# 
 11415   003F3C                     NCO1INCH        equ	16188	;# 
 11416   003F3D                     NCO1INCU        equ	16189	;# 
 11417   003F3E                     NCO1CON         equ	16190	;# 
 11418   003F3F                     NCO1CLK         equ	16191	;# 
 11419   003F40                     CWG3CLK         equ	16192	;# 
 11420   003F40                     CWG3CLKCON      equ	16192	;# 
 11421   003F41                     CWG3ISM         equ	16193	;# 
 11422   003F41                     CWG3DAT         equ	16193	;# 
 11423   003F42                     CWG3DBR         equ	16194	;# 
 11424   003F43                     CWG3DBF         equ	16195	;# 
 11425   003F44                     CWG3CON0        equ	16196	;# 
 11426   003F45                     CWG3CON1        equ	16197	;# 
 11427   003F46                     CWG3AS0         equ	16198	;# 
 11428   003F47                     CWG3AS1         equ	16199	;# 
 11429   003F48                     CWG3STR         equ	16200	;# 
 11430   003F49                     CWG2CLK         equ	16201	;# 
 11431   003F49                     CWG2CLKCON      equ	16201	;# 
 11432   003F4A                     CWG2ISM         equ	16202	;# 
 11433   003F4A                     CWG2DAT         equ	16202	;# 
 11434   003F4B                     CWG2DBR         equ	16203	;# 
 11435   003F4C                     CWG2DBF         equ	16204	;# 
 11436   003F4D                     CWG2CON0        equ	16205	;# 
 11437   003F4E                     CWG2CON1        equ	16206	;# 
 11438   003F4F                     CWG2AS0         equ	16207	;# 
 11439   003F50                     CWG2AS1         equ	16208	;# 
 11440   003F51                     CWG2STR         equ	16209	;# 
 11441   003F52                     CWG1CLK         equ	16210	;# 
 11442   003F52                     CWG1CLKCON      equ	16210	;# 
 11443   003F53                     CWG1ISM         equ	16211	;# 
 11444   003F53                     CWG1DAT         equ	16211	;# 
 11445   003F54                     CWG1DBR         equ	16212	;# 
 11446   003F55                     CWG1DBF         equ	16213	;# 
 11447   003F56                     CWG1CON0        equ	16214	;# 
 11448   003F57                     CWG1CON1        equ	16215	;# 
 11449   003F58                     CWG1AS0         equ	16216	;# 
 11450   003F59                     CWG1AS1         equ	16217	;# 
 11451   003F5A                     CWG1STR         equ	16218	;# 
 11452   003F5E                     CCPTMRS0        equ	16222	;# 
 11453   003F5F                     CCPTMRS1        equ	16223	;# 
 11454   003F60                     PWM8DC          equ	16224	;# 
 11455   003F60                     PWM8DCL         equ	16224	;# 
 11456   003F61                     PWM8DCH         equ	16225	;# 
 11457   003F62                     PWM8CON         equ	16226	;# 
 11458   003F64                     PWM7DC          equ	16228	;# 
 11459   003F64                     PWM7DCL         equ	16228	;# 
 11460   003F65                     PWM7DCH         equ	16229	;# 
 11461   003F66                     PWM7CON         equ	16230	;# 
 11462   003F68                     PWM6DC          equ	16232	;# 
 11463   003F68                     PWM6DCL         equ	16232	;# 
 11464   003F69                     PWM6DCH         equ	16233	;# 
 11465   003F6A                     PWM6CON         equ	16234	;# 
 11466   003F6C                     PWM5DC          equ	16236	;# 
 11467   003F6C                     PWM5DCL         equ	16236	;# 
 11468   003F6D                     PWM5DCH         equ	16237	;# 
 11469   003F6E                     PWM5CON         equ	16238	;# 
 11470   003F70                     CCPR4           equ	16240	;# 
 11471   003F70                     CCPR4L          equ	16240	;# 
 11472   003F71                     CCPR4H          equ	16241	;# 
 11473   003F72                     CCP4CON         equ	16242	;# 
 11474   003F73                     CCP4CAP         equ	16243	;# 
 11475   003F74                     CCPR3           equ	16244	;# 
 11476   003F74                     CCPR3L          equ	16244	;# 
 11477   003F75                     CCPR3H          equ	16245	;# 
 11478   003F76                     CCP3CON         equ	16246	;# 
 11479   003F77                     CCP3CAP         equ	16247	;# 
 11480   003F78                     CCPR2           equ	16248	;# 
 11481   003F78                     CCPR2L          equ	16248	;# 
 11482   003F79                     CCPR2H          equ	16249	;# 
 11483   003F7A                     CCP2CON         equ	16250	;# 
 11484   003F7B                     CCP2CAP         equ	16251	;# 
 11485   003F7C                     CCPR1           equ	16252	;# 
 11486   003F7C                     CCPR1L          equ	16252	;# 
 11487   003F7D                     CCPR1H          equ	16253	;# 
 11488   003F7E                     CCP1CON         equ	16254	;# 
 11489   003F7F                     CCP1CAP         equ	16255	;# 
 11490   003F92                     T6TMR           equ	16274	;# 
 11491   003F92                     TMR6            equ	16274	;# 
 11492   003F93                     T6PR            equ	16275	;# 
 11493   003F93                     PR6             equ	16275	;# 
 11494   003F94                     T6CON           equ	16276	;# 
 11495   003F95                     T6HLT           equ	16277	;# 
 11496   003F96                     T6CLKCON        equ	16278	;# 
 11497   003F96                     T6CLK           equ	16278	;# 
 11498   003F97                     T6RST           equ	16279	;# 
 11499   003F98                     TMR5            equ	16280	;# 
 11500   003F98                     TMR5L           equ	16280	;# 
 11501   003F99                     TMR5H           equ	16281	;# 
 11502   003F9A                     T5CON           equ	16282	;# 
 11503   003F9A                     TMR5CON         equ	16282	;# 
 11504   003F9B                     T5GCON          equ	16283	;# 
 11505   003F9B                     TMR5GCON        equ	16283	;# 
 11506   003F9C                     T5GATE          equ	16284	;# 
 11507   003F9C                     TMR5GATE        equ	16284	;# 
 11508   003F9D                     T5CLK           equ	16285	;# 
 11509   003F9D                     TMR5CLK         equ	16285	;# 
 11510   003F9D                     PR5             equ	16285	;# 
 11511   003F9E                     T4TMR           equ	16286	;# 
 11512   003F9E                     TMR4            equ	16286	;# 
 11513   003F9F                     T4PR            equ	16287	;# 
 11514   003F9F                     PR4             equ	16287	;# 
 11515   003FA0                     T4CON           equ	16288	;# 
 11516   003FA1                     T4HLT           equ	16289	;# 
 11517   003FA2                     T4CLKCON        equ	16290	;# 
 11518   003FA2                     T4CLK           equ	16290	;# 
 11519   003FA3                     T4RST           equ	16291	;# 
 11520   003FA4                     TMR3            equ	16292	;# 
 11521   003FA4                     TMR3L           equ	16292	;# 
 11522   003FA5                     TMR3H           equ	16293	;# 
 11523   003FA6                     T3CON           equ	16294	;# 
 11524   003FA6                     TMR3CON         equ	16294	;# 
 11525   003FA7                     T3GCON          equ	16295	;# 
 11526   003FA7                     TMR3GCON        equ	16295	;# 
 11527   003FA8                     T3GATE          equ	16296	;# 
 11528   003FA8                     TMR3GATE        equ	16296	;# 
 11529   003FA9                     T3CLK           equ	16297	;# 
 11530   003FA9                     TMR3CLK         equ	16297	;# 
 11531   003FA9                     PR3             equ	16297	;# 
 11532   003FAA                     T2TMR           equ	16298	;# 
 11533   003FAA                     TMR2            equ	16298	;# 
 11534   003FAB                     T2PR            equ	16299	;# 
 11535   003FAB                     PR2             equ	16299	;# 
 11536   003FAC                     T2CON           equ	16300	;# 
 11537   003FAD                     T2HLT           equ	16301	;# 
 11538   003FAE                     T2CLKCON        equ	16302	;# 
 11539   003FAE                     T2CLK           equ	16302	;# 
 11540   003FAF                     T2RST           equ	16303	;# 
 11541   003FB0                     TMR1            equ	16304	;# 
 11542   003FB0                     TMR1L           equ	16304	;# 
 11543   003FB1                     TMR1H           equ	16305	;# 
 11544   003FB2                     T1CON           equ	16306	;# 
 11545   003FB2                     TMR1CON         equ	16306	;# 
 11546   003FB3                     T1GCON          equ	16307	;# 
 11547   003FB3                     TMR1GCON        equ	16307	;# 
 11548   003FB4                     T1GATE          equ	16308	;# 
 11549   003FB4                     TMR1GATE        equ	16308	;# 
 11550   003FB5                     T1CLK           equ	16309	;# 
 11551   003FB5                     TMR1CLK         equ	16309	;# 
 11552   003FB5                     PR1             equ	16309	;# 
 11553   003FB6                     TMR0L           equ	16310	;# 
 11554   003FB6                     TMR0            equ	16310	;# 
 11555   003FB7                     TMR0H           equ	16311	;# 
 11556   003FB7                     PR0             equ	16311	;# 
 11557   003FB8                     T0CON0          equ	16312	;# 
 11558   003FB9                     T0CON1          equ	16313	;# 
 11559   003FBA                     LATA            equ	16314	;# 
 11560   003FBB                     LATB            equ	16315	;# 
 11561   003FBC                     LATC            equ	16316	;# 
 11562   003FBD                     LATD            equ	16317	;# 
 11563   003FBE                     LATE            equ	16318	;# 
 11564   003FBF                     LATF            equ	16319	;# 
 11565   003FC2                     TRISA           equ	16322	;# 
 11566   003FC3                     TRISB           equ	16323	;# 
 11567   003FC4                     TRISC           equ	16324	;# 
 11568   003FC5                     TRISD           equ	16325	;# 
 11569   003FC6                     TRISE           equ	16326	;# 
 11570   003FC7                     TRISF           equ	16327	;# 
 11571   003FCA                     PORTA           equ	16330	;# 
 11572   003FCB                     PORTB           equ	16331	;# 
 11573   003FCC                     PORTC           equ	16332	;# 
 11574   003FCD                     PORTD           equ	16333	;# 
 11575   003FCE                     PORTE           equ	16334	;# 
 11576   003FCF                     PORTF           equ	16335	;# 
 11577   003FD2                     INTCON0         equ	16338	;# 
 11578   003FD3                     INTCON1         equ	16339	;# 
 11579   003FD4                     IVTLOCK         equ	16340	;# 
 11580   003FD5                     IVTBASE         equ	16341	;# 
 11581   003FD5                     IVTBASEL        equ	16341	;# 
 11582   003FD6                     IVTBASEH        equ	16342	;# 
 11583   003FD7                     IVTBASEU        equ	16343	;# 
 11584   003FD8                     STATUS          equ	16344	;# 
 11585   003FD9                     FSR2            equ	16345	;# 
 11586   003FD9                     FSR2L           equ	16345	;# 
 11587   003FDA                     FSR2H           equ	16346	;# 
 11588   003FDB                     PLUSW2          equ	16347	;# 
 11589   003FDC                     PREINC2         equ	16348	;# 
 11590   003FDD                     POSTDEC2        equ	16349	;# 
 11591   003FDE                     POSTINC2        equ	16350	;# 
 11592   003FDF                     INDF2           equ	16351	;# 
 11593   003FE0                     BSR             equ	16352	;# 
 11594   003FE1                     FSR1            equ	16353	;# 
 11595   003FE1                     FSR1L           equ	16353	;# 
 11596   003FE2                     FSR1H           equ	16354	;# 
 11597   003FE3                     PLUSW1          equ	16355	;# 
 11598   003FE4                     PREINC1         equ	16356	;# 
 11599   003FE5                     POSTDEC1        equ	16357	;# 
 11600   003FE6                     POSTINC1        equ	16358	;# 
 11601   003FE7                     INDF1           equ	16359	;# 
 11602   003FE8                     WREG            equ	16360	;# 
 11603   003FE9                     FSR0            equ	16361	;# 
 11604   003FE9                     FSR0L           equ	16361	;# 
 11605   003FEA                     FSR0H           equ	16362	;# 
 11606   003FEB                     PLUSW0          equ	16363	;# 
 11607   003FEC                     PREINC0         equ	16364	;# 
 11608   003FED                     POSTDEC0        equ	16365	;# 
 11609   003FEE                     POSTINC0        equ	16366	;# 
 11610   003FEF                     INDF0           equ	16367	;# 
 11611   003FF0                     PCON0           equ	16368	;# 
 11612   003FF1                     PCON1           equ	16369	;# 
 11613   003FF3                     PROD            equ	16371	;# 
 11614   003FF3                     PRODL           equ	16371	;# 
 11615   003FF4                     PRODH           equ	16372	;# 
 11616   003FF5                     TABLAT          equ	16373	;# 
 11617   003FF6                     TBLPTR          equ	16374	;# 
 11618   003FF6                     TBLPTRL         equ	16374	;# 
 11619   003FF7                     TBLPTRH         equ	16375	;# 
 11620   003FF8                     TBLPTRU         equ	16376	;# 
 11621   003FF9                     PCLAT           equ	16377	;# 
 11622   003FF9                     PCL             equ	16377	;# 
 11623   003FFA                     PCLATH          equ	16378	;# 
 11624   003FFB                     PCLATU          equ	16379	;# 
 11625   003FFC                     STKPTR          equ	16380	;# 
 11626   003FFD                     TOS             equ	16381	;# 
 11627   003FFD                     TOSL            equ	16381	;# 
 11628   003FFE                     TOSH            equ	16382	;# 
 11629   003FFF                     TOSU            equ	16383	;# 
 11630   003880                     STATUS_CSHAD    equ	14464	;# 
 11631   003881                     WREG_CSHAD      equ	14465	;# 
 11632   003882                     BSR_CSHAD       equ	14466	;# 
 11633   003883                     SHADCON         equ	14467	;# 
 11634   003884                     STATUS_SHAD     equ	14468	;# 
 11635   003885                     WREG_SHAD       equ	14469	;# 
 11636   003886                     BSR_SHAD        equ	14470	;# 
 11637   003887                     PCLATH_SHAD     equ	14471	;# 
 11638   003888                     PCLATU_SHAD     equ	14472	;# 
 11639   003889                     FSR0SH          equ	14473	;# 
 11640   003889                     FSR0L_SHAD      equ	14473	;# 
 11641   00388A                     FSR0H_SHAD      equ	14474	;# 
 11642   00388B                     FSR1SH          equ	14475	;# 
 11643   00388B                     FSR1L_SHAD      equ	14475	;# 
 11644   00388C                     FSR1H_SHAD      equ	14476	;# 
 11645   00388D                     FSR2SH          equ	14477	;# 
 11646   00388D                     FSR2L_SHAD      equ	14477	;# 
 11647   00388E                     FSR2H_SHAD      equ	14478	;# 
 11648   00388F                     PRODSH          equ	14479	;# 
 11649   00388F                     PRODL_SHAD      equ	14479	;# 
 11650   003890                     PRODH_SHAD      equ	14480	;# 
 11651   00389D                     IVTADL          equ	14493	;# 
 11652   00389E                     IVTADH          equ	14494	;# 
 11653   00389F                     IVTADU          equ	14495	;# 
 11654   00395B                     WDTCON0         equ	14683	;# 
 11655   00395C                     WDTCON1         equ	14684	;# 
 11656   00395D                     WDTPSL          equ	14685	;# 
 11657   00395E                     WDTPSH          equ	14686	;# 
 11658   00395F                     WDTTMR          equ	14687	;# 
 11659   003960                     CRCDATA         equ	14688	;# 
 11660   003960                     CRCDATL         equ	14688	;# 
 11661   003961                     CRCDATH         equ	14689	;# 
 11662   003962                     CRCACC          equ	14690	;# 
 11663   003962                     CRCACCL         equ	14690	;# 
 11664   003963                     CRCACCH         equ	14691	;# 
 11665   003964                     CRCSHFT         equ	14692	;# 
 11666   003964                     CRCSHIFTL       equ	14692	;# 
 11667   003965                     CRCSHIFTH       equ	14693	;# 
 11668   003966                     CRCXOR          equ	14694	;# 
 11669   003966                     CRCXORL         equ	14694	;# 
 11670   003967                     CRCXORH         equ	14695	;# 
 11671   003968                     CRCCON0         equ	14696	;# 
 11672   003969                     CRCCON1         equ	14697	;# 
 11673   003976                     SCANLADR        equ	14710	;# 
 11674   003976                     SCANLADRL       equ	14710	;# 
 11675   003977                     SCANLADRH       equ	14711	;# 
 11676   003978                     SCANLADRU       equ	14712	;# 
 11677   003979                     SCANHADR        equ	14713	;# 
 11678   003979                     SCANHADRL       equ	14713	;# 
 11679   00397A                     SCANHADRH       equ	14714	;# 
 11680   00397B                     SCANHADRU       equ	14715	;# 
 11681   00397C                     SCANCON0        equ	14716	;# 
 11682   00397D                     SCANTRIG        equ	14717	;# 
 11683   003980                     IPR0            equ	14720	;# 
 11684   003981                     IPR1            equ	14721	;# 
 11685   003982                     IPR2            equ	14722	;# 
 11686   003983                     IPR3            equ	14723	;# 
 11687   003984                     IPR4            equ	14724	;# 
 11688   003985                     IPR5            equ	14725	;# 
 11689   003986                     IPR6            equ	14726	;# 
 11690   003987                     IPR7            equ	14727	;# 
 11691   003988                     IPR8            equ	14728	;# 
 11692   003989                     IPR9            equ	14729	;# 
 11693   00398A                     IPR10           equ	14730	;# 
 11694   003990                     PIE0            equ	14736	;# 
 11695   003991                     PIE1            equ	14737	;# 
 11696   003992                     PIE2            equ	14738	;# 
 11697   003993                     PIE3            equ	14739	;# 
 11698   003994                     PIE4            equ	14740	;# 
 11699   003995                     PIE5            equ	14741	;# 
 11700   003996                     PIE6            equ	14742	;# 
 11701   003997                     PIE7            equ	14743	;# 
 11702   003998                     PIE8            equ	14744	;# 
 11703   003999                     PIE9            equ	14745	;# 
 11704   00399A                     PIE10           equ	14746	;# 
 11705   0039A0                     PIR0            equ	14752	;# 
 11706   0039A1                     PIR1            equ	14753	;# 
 11707   0039A2                     PIR2            equ	14754	;# 
 11708   0039A3                     PIR3            equ	14755	;# 
 11709   0039A4                     PIR4            equ	14756	;# 
 11710   0039A5                     PIR5            equ	14757	;# 
 11711   0039A6                     PIR6            equ	14758	;# 
 11712   0039A7                     PIR7            equ	14759	;# 
 11713   0039A8                     PIR8            equ	14760	;# 
 11714   0039A9                     PIR9            equ	14761	;# 
 11715   0039AA                     PIR10           equ	14762	;# 
 11716   0039C0                     PMD0            equ	14784	;# 
 11717   0039C1                     PMD1            equ	14785	;# 
 11718   0039C2                     PMD2            equ	14786	;# 
 11719   0039C3                     PMD3            equ	14787	;# 
 11720   0039C4                     PMD4            equ	14788	;# 
 11721   0039C5                     PMD5            equ	14789	;# 
 11722   0039C6                     PMD6            equ	14790	;# 
 11723   0039C7                     PMD7            equ	14791	;# 
 11724   0039D0                     BORCON          equ	14800	;# 
 11725   0039D1                     VREGCON         equ	14801	;# 
 11726   0039D8                     CPUDOZE         equ	14808	;# 
 11727   0039D9                     OSCCON1         equ	14809	;# 
 11728   0039DA                     OSCCON2         equ	14810	;# 
 11729   0039DB                     OSCCON3         equ	14811	;# 
 11730   0039DC                     OSCSTAT         equ	14812	;# 
 11731   0039DC                     OSCSTAT1        equ	14812	;# 
 11732   0039DD                     OSCEN           equ	14813	;# 
 11733   0039DE                     OSCTUNE         equ	14814	;# 
 11734   0039DF                     OSCFRQ          equ	14815	;# 
 11735   0039E0                     NVMADRL         equ	14816	;# 
 11736   0039E1                     NVMADRH         equ	14817	;# 
 11737   0039E3                     NVMDAT          equ	14819	;# 
 11738   0039E5                     NVMCON1         equ	14821	;# 
 11739   0039E6                     NVMCON2         equ	14822	;# 
 11740   0039EF                     PRLOCK          equ	14831	;# 
 11741   0039F1                     ISRPR           equ	14833	;# 
 11742   0039F2                     MAINPR          equ	14834	;# 
 11743   0039F3                     DMA1PR          equ	14835	;# 
 11744   0039F4                     DMA2PR          equ	14836	;# 
 11745   0039F7                     SCANPR          equ	14839	;# 
 11746   003A00                     RA0PPS          equ	14848	;# 
 11747   003A01                     RA1PPS          equ	14849	;# 
 11748   003A02                     RA2PPS          equ	14850	;# 
 11749   003A03                     RA3PPS          equ	14851	;# 
 11750   003A04                     RA4PPS          equ	14852	;# 
 11751   003A05                     RA5PPS          equ	14853	;# 
 11752   003A06                     RA6PPS          equ	14854	;# 
 11753   003A07                     RA7PPS          equ	14855	;# 
 11754   003A08                     RB0PPS          equ	14856	;# 
 11755   003A09                     RB1PPS          equ	14857	;# 
 11756   003A0A                     RB2PPS          equ	14858	;# 
 11757   003A0B                     RB3PPS          equ	14859	;# 
 11758   003A0C                     RB4PPS          equ	14860	;# 
 11759   003A0D                     RB5PPS          equ	14861	;# 
 11760   003A0E                     RB6PPS          equ	14862	;# 
 11761   003A0F                     RB7PPS          equ	14863	;# 
 11762   003A10                     RC0PPS          equ	14864	;# 
 11763   003A11                     RC1PPS          equ	14865	;# 
 11764   003A12                     RC2PPS          equ	14866	;# 
 11765   003A13                     RC3PPS          equ	14867	;# 
 11766   003A14                     RC4PPS          equ	14868	;# 
 11767   003A15                     RC5PPS          equ	14869	;# 
 11768   003A16                     RC6PPS          equ	14870	;# 
 11769   003A17                     RC7PPS          equ	14871	;# 
 11770   003A18                     RD0PPS          equ	14872	;# 
 11771   003A19                     RD1PPS          equ	14873	;# 
 11772   003A1A                     RD2PPS          equ	14874	;# 
 11773   003A1B                     RD3PPS          equ	14875	;# 
 11774   003A1C                     RD4PPS          equ	14876	;# 
 11775   003A1D                     RD5PPS          equ	14877	;# 
 11776   003A1E                     RD6PPS          equ	14878	;# 
 11777   003A1F                     RD7PPS          equ	14879	;# 
 11778   003A20                     RE0PPS          equ	14880	;# 
 11779   003A21                     RE1PPS          equ	14881	;# 
 11780   003A22                     RE2PPS          equ	14882	;# 
 11781   003A28                     RF0PPS          equ	14888	;# 
 11782   003A29                     RF1PPS          equ	14889	;# 
 11783   003A2A                     RF2PPS          equ	14890	;# 
 11784   003A2B                     RF3PPS          equ	14891	;# 
 11785   003A2C                     RF4PPS          equ	14892	;# 
 11786   003A2D                     RF5PPS          equ	14893	;# 
 11787   003A2E                     RF6PPS          equ	14894	;# 
 11788   003A2F                     RF7PPS          equ	14895	;# 
 11789   003A40                     ANSELA          equ	14912	;# 
 11790   003A41                     WPUA            equ	14913	;# 
 11791   003A42                     ODCONA          equ	14914	;# 
 11792   003A43                     SLRCONA         equ	14915	;# 
 11793   003A44                     INLVLA          equ	14916	;# 
 11794   003A45                     IOCAP           equ	14917	;# 
 11795   003A46                     IOCAN           equ	14918	;# 
 11796   003A47                     IOCAF           equ	14919	;# 
 11797   003A50                     ANSELB          equ	14928	;# 
 11798   003A51                     WPUB            equ	14929	;# 
 11799   003A52                     ODCONB          equ	14930	;# 
 11800   003A53                     SLRCONB         equ	14931	;# 
 11801   003A54                     INLVLB          equ	14932	;# 
 11802   003A55                     IOCBP           equ	14933	;# 
 11803   003A56                     IOCBN           equ	14934	;# 
 11804   003A57                     IOCBF           equ	14935	;# 
 11805   003A5A                     RB1I2C          equ	14938	;# 
 11806   003A5B                     RB2I2C          equ	14939	;# 
 11807   003A60                     ANSELC          equ	14944	;# 
 11808   003A61                     WPUC            equ	14945	;# 
 11809   003A62                     ODCONC          equ	14946	;# 
 11810   003A63                     SLRCONC         equ	14947	;# 
 11811   003A64                     INLVLC          equ	14948	;# 
 11812   003A65                     IOCCP           equ	14949	;# 
 11813   003A66                     IOCCN           equ	14950	;# 
 11814   003A67                     IOCCF           equ	14951	;# 
 11815   003A6A                     RC3I2C          equ	14954	;# 
 11816   003A6B                     RC4I2C          equ	14955	;# 
 11817   003A70                     ANSELD          equ	14960	;# 
 11818   003A71                     WPUD            equ	14961	;# 
 11819   003A72                     ODCOND          equ	14962	;# 
 11820   003A73                     SLRCOND         equ	14963	;# 
 11821   003A74                     INLVLD          equ	14964	;# 
 11822   003A7A                     RD0I2C          equ	14970	;# 
 11823   003A7B                     RD1I2C          equ	14971	;# 
 11824   003A80                     ANSELE          equ	14976	;# 
 11825   003A81                     WPUE            equ	14977	;# 
 11826   003A82                     ODCONE          equ	14978	;# 
 11827   003A83                     SLRCONE         equ	14979	;# 
 11828   003A84                     INLVLE          equ	14980	;# 
 11829   003A85                     IOCEP           equ	14981	;# 
 11830   003A86                     IOCEN           equ	14982	;# 
 11831   003A87                     IOCEF           equ	14983	;# 
 11832   003A90                     ANSELF          equ	14992	;# 
 11833   003A91                     WPUF            equ	14993	;# 
 11834   003A92                     ODCONF          equ	14994	;# 
 11835   003A93                     SLRCONF         equ	14995	;# 
 11836   003A94                     INLVLF          equ	14996	;# 
 11837   003ABF                     PPSLOCK         equ	15039	;# 
 11838   003AC0                     INT0PPS         equ	15040	;# 
 11839   003AC1                     INT1PPS         equ	15041	;# 
 11840   003AC2                     INT2PPS         equ	15042	;# 
 11841   003AC3                     T0CKIPPS        equ	15043	;# 
 11842   003AC4                     T1CKIPPS        equ	15044	;# 
 11843   003AC5                     T1GPPS          equ	15045	;# 
 11844   003AC6                     T3CKIPPS        equ	15046	;# 
 11845   003AC7                     T3GPPS          equ	15047	;# 
 11846   003AC8                     T5CKIPPS        equ	15048	;# 
 11847   003AC9                     T5GPPS          equ	15049	;# 
 11848   003ACA                     T2INPPS         equ	15050	;# 
 11849   003ACB                     T4INPPS         equ	15051	;# 
 11850   003ACC                     T6INPPS         equ	15052	;# 
 11851   003ACD                     CCP1PPS         equ	15053	;# 
 11852   003ACE                     CCP2PPS         equ	15054	;# 
 11853   003ACF                     CCP3PPS         equ	15055	;# 
 11854   003AD0                     CCP4PPS         equ	15056	;# 
 11855   003AD1                     SMT1WINPPS      equ	15057	;# 
 11856   003AD2                     SMT1SIGPPS      equ	15058	;# 
 11857   003AD3                     CWG1INPPS       equ	15059	;# 
 11858   003AD4                     CWG2INPPS       equ	15060	;# 
 11859   003AD5                     CWG3INPPS       equ	15061	;# 
 11860   003AD6                     MD1CARLPPS      equ	15062	;# 
 11861   003AD7                     MD1CARHPPS      equ	15063	;# 
 11862   003AD8                     MD1SRCPPS       equ	15064	;# 
 11863   003AD9                     CLCIN0PPS       equ	15065	;# 
 11864   003ADA                     CLCIN1PPS       equ	15066	;# 
 11865   003ADB                     CLCIN2PPS       equ	15067	;# 
 11866   003ADC                     CLCIN3PPS       equ	15068	;# 
 11867   003ADD                     ADACTPPS        equ	15069	;# 
 11868   003ADE                     SPI1SCKPPS      equ	15070	;# 
 11869   003ADF                     SPI1SDIPPS      equ	15071	;# 
 11870   003AE0                     SPI1SSPPS       equ	15072	;# 
 11871   003AE1                     I2C1SCLPPS      equ	15073	;# 
 11872   003AE2                     I2C1SDAPPS      equ	15074	;# 
 11873   003AE3                     I2C2SCLPPS      equ	15075	;# 
 11874   003AE4                     I2C2SDAPPS      equ	15076	;# 
 11875   003AE5                     U1RXPPS         equ	15077	;# 
 11876   003AE6                     U1CTSPPS        equ	15078	;# 
 11877   003AE8                     U2RXPPS         equ	15080	;# 
 11878   003AE9                     U2CTSPPS        equ	15081	;# 
 11879   003BC9                     DMA2BUF         equ	15305	;# 
 11880   003BCA                     DMA2DCNT        equ	15306	;# 
 11881   003BCA                     DMA2DCNTL       equ	15306	;# 
 11882   003BCB                     DMA2DCNTH       equ	15307	;# 
 11883   003BCC                     DMA2DPTR        equ	15308	;# 
 11884   003BCC                     DMA2DPTRL       equ	15308	;# 
 11885   003BCD                     DMA2DPTRH       equ	15309	;# 
 11886   003BCE                     DMA2DSZ         equ	15310	;# 
 11887   003BCE                     DMA2DSZL        equ	15310	;# 
 11888   003BCF                     DMA2DSZH        equ	15311	;# 
 11889   003BD0                     DMA2DSA         equ	15312	;# 
 11890   003BD0                     DMA2DSAL        equ	15312	;# 
 11891   003BD1                     DMA2DSAH        equ	15313	;# 
 11892   003BD2                     DMA2SCNT        equ	15314	;# 
 11893   003BD2                     DMA2SCNTL       equ	15314	;# 
 11894   003BD3                     DMA2SCNTH       equ	15315	;# 
 11895   003BD4                     DMA2SPTR        equ	15316	;# 
 11896   003BD4                     DMA2SPTRL       equ	15316	;# 
 11897   003BD5                     DMA2SPTRH       equ	15317	;# 
 11898   003BD6                     DMA2SPTRU       equ	15318	;# 
 11899   003BD7                     DMA2SSZ         equ	15319	;# 
 11900   003BD7                     DMA2SSZL        equ	15319	;# 
 11901   003BD8                     DMA2SSZH        equ	15320	;# 
 11902   003BD9                     DMA2SSA         equ	15321	;# 
 11903   003BD9                     DMA2SSAL        equ	15321	;# 
 11904   003BDA                     DMA2SSAH        equ	15322	;# 
 11905   003BDB                     DMA2SSAU        equ	15323	;# 
 11906   003BDC                     DMA2CON0        equ	15324	;# 
 11907   003BDD                     DMA2CON1        equ	15325	;# 
 11908   003BDE                     DMA2AIRQ        equ	15326	;# 
 11909   003BDF                     DMA2SIRQ        equ	15327	;# 
 11910   003BE9                     DMA1BUF         equ	15337	;# 
 11911   003BEA                     DMA1DCNT        equ	15338	;# 
 11912   003BEA                     DMA1DCNTL       equ	15338	;# 
 11913   003BEB                     DMA1DCNTH       equ	15339	;# 
 11914   003BEC                     DMA1DPTR        equ	15340	;# 
 11915   003BEC                     DMA1DPTRL       equ	15340	;# 
 11916   003BED                     DMA1DPTRH       equ	15341	;# 
 11917   003BEE                     DMA1DSZ         equ	15342	;# 
 11918   003BEE                     DMA1DSZL        equ	15342	;# 
 11919   003BEF                     DMA1DSZH        equ	15343	;# 
 11920   003BF0                     DMA1DSA         equ	15344	;# 
 11921   003BF0                     DMA1DSAL        equ	15344	;# 
 11922   003BF1                     DMA1DSAH        equ	15345	;# 
 11923   003BF2                     DMA1SCNT        equ	15346	;# 
 11924   003BF2                     DMA1SCNTL       equ	15346	;# 
 11925   003BF3                     DMA1SCNTH       equ	15347	;# 
 11926   003BF4                     DMA1SPTR        equ	15348	;# 
 11927   003BF4                     DMA1SPTRL       equ	15348	;# 
 11928   003BF5                     DMA1SPTRH       equ	15349	;# 
 11929   003BF6                     DMA1SPTRU       equ	15350	;# 
 11930   003BF7                     DMA1SSZ         equ	15351	;# 
 11931   003BF7                     DMA1SSZL        equ	15351	;# 
 11932   003BF8                     DMA1SSZH        equ	15352	;# 
 11933   003BF9                     DMA1SSA         equ	15353	;# 
 11934   003BF9                     DMA1SSAL        equ	15353	;# 
 11935   003BFA                     DMA1SSAH        equ	15354	;# 
 11936   003BFB                     DMA1SSAU        equ	15355	;# 
 11937   003BFC                     DMA1CON0        equ	15356	;# 
 11938   003BFD                     DMA1CON1        equ	15357	;# 
 11939   003BFE                     DMA1AIRQ        equ	15358	;# 
 11940   003BFF                     DMA1SIRQ        equ	15359	;# 
 11941   003C56                     CLC4CON         equ	15446	;# 
 11942   003C57                     CLC4POL         equ	15447	;# 
 11943   003C58                     CLC4SEL0        equ	15448	;# 
 11944   003C59                     CLC4SEL1        equ	15449	;# 
 11945   003C5A                     CLC4SEL2        equ	15450	;# 
 11946   003C5B                     CLC4SEL3        equ	15451	;# 
 11947   003C5C                     CLC4GLS0        equ	15452	;# 
 11948   003C5D                     CLC4GLS1        equ	15453	;# 
 11949   003C5E                     CLC4GLS2        equ	15454	;# 
 11950   003C5F                     CLC4GLS3        equ	15455	;# 
 11951   003C60                     CLC3CON         equ	15456	;# 
 11952   003C61                     CLC3POL         equ	15457	;# 
 11953   003C62                     CLC3SEL0        equ	15458	;# 
 11954   003C63                     CLC3SEL1        equ	15459	;# 
 11955   003C64                     CLC3SEL2        equ	15460	;# 
 11956   003C65                     CLC3SEL3        equ	15461	;# 
 11957   003C66                     CLC3GLS0        equ	15462	;# 
 11958   003C67                     CLC3GLS1        equ	15463	;# 
 11959   003C68                     CLC3GLS2        equ	15464	;# 
 11960   003C69                     CLC3GLS3        equ	15465	;# 
 11961   003C6A                     CLC2CON         equ	15466	;# 
 11962   003C6B                     CLC2POL         equ	15467	;# 
 11963   003C6C                     CLC2SEL0        equ	15468	;# 
 11964   003C6D                     CLC2SEL1        equ	15469	;# 
 11965   003C6E                     CLC2SEL2        equ	15470	;# 
 11966   003C6F                     CLC2SEL3        equ	15471	;# 
 11967   003C70                     CLC2GLS0        equ	15472	;# 
 11968   003C71                     CLC2GLS1        equ	15473	;# 
 11969   003C72                     CLC2GLS2        equ	15474	;# 
 11970   003C73                     CLC2GLS3        equ	15475	;# 
 11971   003C74                     CLC1CON         equ	15476	;# 
 11972   003C75                     CLC1POL         equ	15477	;# 
 11973   003C76                     CLC1SEL0        equ	15478	;# 
 11974   003C77                     CLC1SEL1        equ	15479	;# 
 11975   003C78                     CLC1SEL2        equ	15480	;# 
 11976   003C79                     CLC1SEL3        equ	15481	;# 
 11977   003C7A                     CLC1GLS0        equ	15482	;# 
 11978   003C7B                     CLC1GLS1        equ	15483	;# 
 11979   003C7C                     CLC1GLS2        equ	15484	;# 
 11980   003C7D                     CLC1GLS3        equ	15485	;# 
 11981   003C7E                     CLCDATA0        equ	15486	;# 
 11982   003CE5                     CLKRCON         equ	15589	;# 
 11983   003CE6                     CLKRCLK         equ	15590	;# 
 11984   003CFA                     MD1CON0         equ	15610	;# 
 11985   003CFB                     MD1CON1         equ	15611	;# 
 11986   003CFC                     MD1SRC          equ	15612	;# 
 11987   003CFD                     MD1CARL         equ	15613	;# 
 11988   003CFE                     MD1CARH         equ	15614	;# 
 11989   003D10                     SPI1RXB         equ	15632	;# 
 11990   003D11                     SPI1TXB         equ	15633	;# 
 11991   003D12                     SPI1TCNT        equ	15634	;# 
 11992   003D12                     SPI1TCNTL       equ	15634	;# 
 11993   003D13                     SPI1TCNTH       equ	15635	;# 
 11994   003D14                     SPI1CON0        equ	15636	;# 
 11995   003D15                     SPI1CON1        equ	15637	;# 
 11996   003D16                     SPI1CON2        equ	15638	;# 
 11997   003D17                     SPI1STATUS      equ	15639	;# 
 11998   003D18                     SPI1TWIDTH      equ	15640	;# 
 11999   003D19                     SPI1BAUD        equ	15641	;# 
 12000   003D1A                     SPI1INTF        equ	15642	;# 
 12001   003D1B                     SPI1INTE        equ	15643	;# 
 12002   003D1C                     SPI1CLK         equ	15644	;# 
 12003   003D54                     I2C2RXB         equ	15700	;# 
 12004   003D55                     I2C2TXB         equ	15701	;# 
 12005   003D56                     I2C2CNT         equ	15702	;# 
 12006   003D57                     I2C2ADB0        equ	15703	;# 
 12007   003D58                     I2C2ADB1        equ	15704	;# 
 12008   003D59                     I2C2ADR0        equ	15705	;# 
 12009   003D5A                     I2C2ADR1        equ	15706	;# 
 12010   003D5B                     I2C2ADR2        equ	15707	;# 
 12011   003D5C                     I2C2ADR3        equ	15708	;# 
 12012   003D5D                     I2C2CON0        equ	15709	;# 
 12013   003D5E                     I2C2CON1        equ	15710	;# 
 12014   003D5F                     I2C2CON2        equ	15711	;# 
 12015   003D60                     I2C2ERR         equ	15712	;# 
 12016   003D61                     I2C2STAT0       equ	15713	;# 
 12017   003D62                     I2C2STAT1       equ	15714	;# 
 12018   003D63                     I2C2PIR         equ	15715	;# 
 12019   003D64                     I2C2PIE         equ	15716	;# 
 12020   003D65                     I2C2CLK         equ	15717	;# 
 12021   003D66                     I2C2BTO         equ	15718	;# 
 12022   003D6A                     I2C1RXB         equ	15722	;# 
 12023   003D6B                     I2C1TXB         equ	15723	;# 
 12024   003D6C                     I2C1CNT         equ	15724	;# 
 12025   003D6D                     I2C1ADB0        equ	15725	;# 
 12026   003D6E                     I2C1ADB1        equ	15726	;# 
 12027   003D6F                     I2C1ADR0        equ	15727	;# 
 12028   003D70                     I2C1ADR1        equ	15728	;# 
 12029   003D71                     I2C1ADR2        equ	15729	;# 
 12030   003D72                     I2C1ADR3        equ	15730	;# 
 12031   003D73                     I2C1CON0        equ	15731	;# 
 12032   003D74                     I2C1CON1        equ	15732	;# 
 12033   003D75                     I2C1CON2        equ	15733	;# 
 12034   003D76                     I2C1ERR         equ	15734	;# 
 12035   003D77                     I2C1STAT0       equ	15735	;# 
 12036   003D78                     I2C1STAT1       equ	15736	;# 
 12037   003D79                     I2C1PIR         equ	15737	;# 
 12038   003D7A                     I2C1PIE         equ	15738	;# 
 12039   003D7B                     I2C1CLK         equ	15739	;# 
 12040   003D7C                     I2C1BTO         equ	15740	;# 
 12041   003DD0                     U2RXB           equ	15824	;# 
 12042   003DD0                     U2RXBL          equ	15824	;# 
 12043   003DD2                     U2TXB           equ	15826	;# 
 12044   003DD2                     U2TXBL          equ	15826	;# 
 12045   003DD4                     U2P1            equ	15828	;# 
 12046   003DD4                     U2P1L           equ	15828	;# 
 12047   003DD6                     U2P2            equ	15830	;# 
 12048   003DD6                     U2P2L           equ	15830	;# 
 12049   003DD8                     U2P3            equ	15832	;# 
 12050   003DD8                     U2P3L           equ	15832	;# 
 12051   003DDA                     U2CON0          equ	15834	;# 
 12052   003DDB                     U2CON1          equ	15835	;# 
 12053   003DDC                     U2CON2          equ	15836	;# 
 12054   003DDD                     U2BRG           equ	15837	;# 
 12055   003DDD                     U2BRGL          equ	15837	;# 
 12056   003DDE                     U2BRGH          equ	15838	;# 
 12057   003DDF                     U2FIFO          equ	15839	;# 
 12058   003DE0                     U2UIR           equ	15840	;# 
 12059   003DE1                     U2ERRIR         equ	15841	;# 
 12060   003DE2                     U2ERRIE         equ	15842	;# 
 12061   003DE8                     U1RXB           equ	15848	;# 
 12062   003DE8                     U1RXBL          equ	15848	;# 
 12063   003DE9                     U1RXCHK         equ	15849	;# 
 12064   003DEA                     U1TXB           equ	15850	;# 
 12065   003DEA                     U1TXBL          equ	15850	;# 
 12066   003DEB                     U1TXCHK         equ	15851	;# 
 12067   003DEC                     U1P1            equ	15852	;# 
 12068   003DEC                     U1P1L           equ	15852	;# 
 12069   003DED                     U1P1H           equ	15853	;# 
 12070   003DEE                     U1P2            equ	15854	;# 
 12071   003DEE                     U1P2L           equ	15854	;# 
 12072   003DEF                     U1P2H           equ	15855	;# 
 12073   003DF0                     U1P3            equ	15856	;# 
 12074   003DF0                     U1P3L           equ	15856	;# 
 12075   003DF1                     U1P3H           equ	15857	;# 
 12076   003DF2                     U1CON0          equ	15858	;# 
 12077   003DF3                     U1CON1          equ	15859	;# 
 12078   003DF4                     U1CON2          equ	15860	;# 
 12079   003DF5                     U1BRG           equ	15861	;# 
 12080   003DF5                     U1BRGL          equ	15861	;# 
 12081   003DF6                     U1BRGH          equ	15862	;# 
 12082   003DF7                     U1FIFO          equ	15863	;# 
 12083   003DF8                     U1UIR           equ	15864	;# 
 12084   003DF9                     U1ERRIR         equ	15865	;# 
 12085   003DFA                     U1ERRIE         equ	15866	;# 
 12086   003E9C                     DAC1CON1        equ	16028	;# 
 12087   003E9E                     DAC1CON0        equ	16030	;# 
 12088   003EB8                     CM2CON0         equ	16056	;# 
 12089   003EB9                     CM2CON1         equ	16057	;# 
 12090   003EBA                     CM2NCH          equ	16058	;# 
 12091   003EBB                     CM2PCH          equ	16059	;# 
 12092   003EBC                     CM1CON0         equ	16060	;# 
 12093   003EBD                     CM1CON1         equ	16061	;# 
 12094   003EBE                     CM1NCH          equ	16062	;# 
 12095   003EBF                     CM1PCH          equ	16063	;# 
 12096   003EC0                     CMOUT           equ	16064	;# 
 12097   003EC1                     FVRCON          equ	16065	;# 
 12098   003EC3                     ZCDCON          equ	16067	;# 
 12099   003EC9                     HLVDCON0        equ	16073	;# 
 12100   003ECA                     HLVDCON1        equ	16074	;# 
 12101   003ED7                     ADCP            equ	16087	;# 
 12102   003EDE                     ADLTH           equ	16094	;# 
 12103   003EDE                     ADLTHL          equ	16094	;# 
 12104   003EDF                     ADLTHH          equ	16095	;# 
 12105   003EE0                     ADUTH           equ	16096	;# 
 12106   003EE0                     ADUTHL          equ	16096	;# 
 12107   003EE1                     ADUTHH          equ	16097	;# 
 12108   003EE2                     ADERR           equ	16098	;# 
 12109   003EE2                     ADERRL          equ	16098	;# 
 12110   003EE3                     ADERRH          equ	16099	;# 
 12111   003EE4                     ADSTPT          equ	16100	;# 
 12112   003EE4                     ADSTPTL         equ	16100	;# 
 12113   003EE5                     ADSTPTH         equ	16101	;# 
 12114   003EE6                     ADFLTR          equ	16102	;# 
 12115   003EE6                     ADFLTRL         equ	16102	;# 
 12116   003EE7                     ADFLTRH         equ	16103	;# 
 12117   003EE8                     ADACC           equ	16104	;# 
 12118   003EE8                     ADACCL          equ	16104	;# 
 12119   003EE9                     ADACCH          equ	16105	;# 
 12120   003EEA                     ADACCU          equ	16106	;# 
 12121   003EEB                     ADCNT           equ	16107	;# 
 12122   003EEC                     ADRPT           equ	16108	;# 
 12123   003EED                     ADPREV          equ	16109	;# 
 12124   003EED                     ADPREVL         equ	16109	;# 
 12125   003EEE                     ADPREVH         equ	16110	;# 
 12126   003EEF                     ADRES           equ	16111	;# 
 12127   003EEF                     ADRESL          equ	16111	;# 
 12128   003EF0                     ADRESH          equ	16112	;# 
 12129   003EF1                     ADPCH           equ	16113	;# 
 12130   003EF3                     ADACQ           equ	16115	;# 
 12131   003EF3                     ADACQL          equ	16115	;# 
 12132   003EF4                     ADACQH          equ	16116	;# 
 12133   003EF5                     ADCAP           equ	16117	;# 
 12134   003EF6                     ADPRE           equ	16118	;# 
 12135   003EF6                     ADPREL          equ	16118	;# 
 12136   003EF7                     ADPREH          equ	16119	;# 
 12137   003EF8                     ADCON0          equ	16120	;# 
 12138   003EF9                     ADCON1          equ	16121	;# 
 12139   003EFA                     ADCON2          equ	16122	;# 
 12140   003EFB                     ADCON3          equ	16123	;# 
 12141   003EFC                     ADSTAT          equ	16124	;# 
 12142   003EFD                     ADREF           equ	16125	;# 
 12143   003EFE                     ADACT           equ	16126	;# 
 12144   003EFF                     ADCLK           equ	16127	;# 
 12145   003F12                     SMT1TMR         equ	16146	;# 
 12146   003F12                     SMT1TMRL        equ	16146	;# 
 12147   003F13                     SMT1TMRH        equ	16147	;# 
 12148   003F14                     SMT1TMRU        equ	16148	;# 
 12149   003F15                     SMT1CPR         equ	16149	;# 
 12150   003F15                     SMT1CPRL        equ	16149	;# 
 12151   003F16                     SMT1CPRH        equ	16150	;# 
 12152   003F17                     SMT1CPRU        equ	16151	;# 
 12153   003F18                     SMT1CPW         equ	16152	;# 
 12154   003F18                     SMT1CPWL        equ	16152	;# 
 12155   003F19                     SMT1CPWH        equ	16153	;# 
 12156   003F1A                     SMT1CPWU        equ	16154	;# 
 12157   003F1B                     SMT1PR          equ	16155	;# 
 12158   003F1B                     SMT1PRL         equ	16155	;# 
 12159   003F1C                     SMT1PRH         equ	16156	;# 
 12160   003F1D                     SMT1PRU         equ	16157	;# 
 12161   003F1E                     SMT1CON0        equ	16158	;# 
 12162   003F1F                     SMT1CON1        equ	16159	;# 
 12163   003F20                     SMT1STAT        equ	16160	;# 
 12164   003F21                     SMT1CLK         equ	16161	;# 
 12165   003F22                     SMT1SIG         equ	16162	;# 
 12166   003F23                     SMT1WIN         equ	16163	;# 
 12167   003F38                     NCO1ACC         equ	16184	;# 
 12168   003F38                     NCO1ACCL        equ	16184	;# 
 12169   003F39                     NCO1ACCH        equ	16185	;# 
 12170   003F3A                     NCO1ACCU        equ	16186	;# 
 12171   003F3B                     NCO1INC         equ	16187	;# 
 12172   003F3B                     NCO1INCL        equ	16187	;# 
 12173   003F3C                     NCO1INCH        equ	16188	;# 
 12174   003F3D                     NCO1INCU        equ	16189	;# 
 12175   003F3E                     NCO1CON         equ	16190	;# 
 12176   003F3F                     NCO1CLK         equ	16191	;# 
 12177   003F40                     CWG3CLK         equ	16192	;# 
 12178   003F40                     CWG3CLKCON      equ	16192	;# 
 12179   003F41                     CWG3ISM         equ	16193	;# 
 12180   003F41                     CWG3DAT         equ	16193	;# 
 12181   003F42                     CWG3DBR         equ	16194	;# 
 12182   003F43                     CWG3DBF         equ	16195	;# 
 12183   003F44                     CWG3CON0        equ	16196	;# 
 12184   003F45                     CWG3CON1        equ	16197	;# 
 12185   003F46                     CWG3AS0         equ	16198	;# 
 12186   003F47                     CWG3AS1         equ	16199	;# 
 12187   003F48                     CWG3STR         equ	16200	;# 
 12188   003F49                     CWG2CLK         equ	16201	;# 
 12189   003F49                     CWG2CLKCON      equ	16201	;# 
 12190   003F4A                     CWG2ISM         equ	16202	;# 
 12191   003F4A                     CWG2DAT         equ	16202	;# 
 12192   003F4B                     CWG2DBR         equ	16203	;# 
 12193   003F4C                     CWG2DBF         equ	16204	;# 
 12194   003F4D                     CWG2CON0        equ	16205	;# 
 12195   003F4E                     CWG2CON1        equ	16206	;# 
 12196   003F4F                     CWG2AS0         equ	16207	;# 
 12197   003F50                     CWG2AS1         equ	16208	;# 
 12198   003F51                     CWG2STR         equ	16209	;# 
 12199   003F52                     CWG1CLK         equ	16210	;# 
 12200   003F52                     CWG1CLKCON      equ	16210	;# 
 12201   003F53                     CWG1ISM         equ	16211	;# 
 12202   003F53                     CWG1DAT         equ	16211	;# 
 12203   003F54                     CWG1DBR         equ	16212	;# 
 12204   003F55                     CWG1DBF         equ	16213	;# 
 12205   003F56                     CWG1CON0        equ	16214	;# 
 12206   003F57                     CWG1CON1        equ	16215	;# 
 12207   003F58                     CWG1AS0         equ	16216	;# 
 12208   003F59                     CWG1AS1         equ	16217	;# 
 12209   003F5A                     CWG1STR         equ	16218	;# 
 12210   003F5E                     CCPTMRS0        equ	16222	;# 
 12211   003F5F                     CCPTMRS1        equ	16223	;# 
 12212   003F60                     PWM8DC          equ	16224	;# 
 12213   003F60                     PWM8DCL         equ	16224	;# 
 12214   003F61                     PWM8DCH         equ	16225	;# 
 12215   003F62                     PWM8CON         equ	16226	;# 
 12216   003F64                     PWM7DC          equ	16228	;# 
 12217   003F64                     PWM7DCL         equ	16228	;# 
 12218   003F65                     PWM7DCH         equ	16229	;# 
 12219   003F66                     PWM7CON         equ	16230	;# 
 12220   003F68                     PWM6DC          equ	16232	;# 
 12221   003F68                     PWM6DCL         equ	16232	;# 
 12222   003F69                     PWM6DCH         equ	16233	;# 
 12223   003F6A                     PWM6CON         equ	16234	;# 
 12224   003F6C                     PWM5DC          equ	16236	;# 
 12225   003F6C                     PWM5DCL         equ	16236	;# 
 12226   003F6D                     PWM5DCH         equ	16237	;# 
 12227   003F6E                     PWM5CON         equ	16238	;# 
 12228   003F70                     CCPR4           equ	16240	;# 
 12229   003F70                     CCPR4L          equ	16240	;# 
 12230   003F71                     CCPR4H          equ	16241	;# 
 12231   003F72                     CCP4CON         equ	16242	;# 
 12232   003F73                     CCP4CAP         equ	16243	;# 
 12233   003F74                     CCPR3           equ	16244	;# 
 12234   003F74                     CCPR3L          equ	16244	;# 
 12235   003F75                     CCPR3H          equ	16245	;# 
 12236   003F76                     CCP3CON         equ	16246	;# 
 12237   003F77                     CCP3CAP         equ	16247	;# 
 12238   003F78                     CCPR2           equ	16248	;# 
 12239   003F78                     CCPR2L          equ	16248	;# 
 12240   003F79                     CCPR2H          equ	16249	;# 
 12241   003F7A                     CCP2CON         equ	16250	;# 
 12242   003F7B                     CCP2CAP         equ	16251	;# 
 12243   003F7C                     CCPR1           equ	16252	;# 
 12244   003F7C                     CCPR1L          equ	16252	;# 
 12245   003F7D                     CCPR1H          equ	16253	;# 
 12246   003F7E                     CCP1CON         equ	16254	;# 
 12247   003F7F                     CCP1CAP         equ	16255	;# 
 12248   003F92                     T6TMR           equ	16274	;# 
 12249   003F92                     TMR6            equ	16274	;# 
 12250   003F93                     T6PR            equ	16275	;# 
 12251   003F93                     PR6             equ	16275	;# 
 12252   003F94                     T6CON           equ	16276	;# 
 12253   003F95                     T6HLT           equ	16277	;# 
 12254   003F96                     T6CLKCON        equ	16278	;# 
 12255   003F96                     T6CLK           equ	16278	;# 
 12256   003F97                     T6RST           equ	16279	;# 
 12257   003F98                     TMR5            equ	16280	;# 
 12258   003F98                     TMR5L           equ	16280	;# 
 12259   003F99                     TMR5H           equ	16281	;# 
 12260   003F9A                     T5CON           equ	16282	;# 
 12261   003F9A                     TMR5CON         equ	16282	;# 
 12262   003F9B                     T5GCON          equ	16283	;# 
 12263   003F9B                     TMR5GCON        equ	16283	;# 
 12264   003F9C                     T5GATE          equ	16284	;# 
 12265   003F9C                     TMR5GATE        equ	16284	;# 
 12266   003F9D                     T5CLK           equ	16285	;# 
 12267   003F9D                     TMR5CLK         equ	16285	;# 
 12268   003F9D                     PR5             equ	16285	;# 
 12269   003F9E                     T4TMR           equ	16286	;# 
 12270   003F9E                     TMR4            equ	16286	;# 
 12271   003F9F                     T4PR            equ	16287	;# 
 12272   003F9F                     PR4             equ	16287	;# 
 12273   003FA0                     T4CON           equ	16288	;# 
 12274   003FA1                     T4HLT           equ	16289	;# 
 12275   003FA2                     T4CLKCON        equ	16290	;# 
 12276   003FA2                     T4CLK           equ	16290	;# 
 12277   003FA3                     T4RST           equ	16291	;# 
 12278   003FA4                     TMR3            equ	16292	;# 
 12279   003FA4                     TMR3L           equ	16292	;# 
 12280   003FA5                     TMR3H           equ	16293	;# 
 12281   003FA6                     T3CON           equ	16294	;# 
 12282   003FA6                     TMR3CON         equ	16294	;# 
 12283   003FA7                     T3GCON          equ	16295	;# 
 12284   003FA7                     TMR3GCON        equ	16295	;# 
 12285   003FA8                     T3GATE          equ	16296	;# 
 12286   003FA8                     TMR3GATE        equ	16296	;# 
 12287   003FA9                     T3CLK           equ	16297	;# 
 12288   003FA9                     TMR3CLK         equ	16297	;# 
 12289   003FA9                     PR3             equ	16297	;# 
 12290   003FAA                     T2TMR           equ	16298	;# 
 12291   003FAA                     TMR2            equ	16298	;# 
 12292   003FAB                     T2PR            equ	16299	;# 
 12293   003FAB                     PR2             equ	16299	;# 
 12294   003FAC                     T2CON           equ	16300	;# 
 12295   003FAD                     T2HLT           equ	16301	;# 
 12296   003FAE                     T2CLKCON        equ	16302	;# 
 12297   003FAE                     T2CLK           equ	16302	;# 
 12298   003FAF                     T2RST           equ	16303	;# 
 12299   003FB0                     TMR1            equ	16304	;# 
 12300   003FB0                     TMR1L           equ	16304	;# 
 12301   003FB1                     TMR1H           equ	16305	;# 
 12302   003FB2                     T1CON           equ	16306	;# 
 12303   003FB2                     TMR1CON         equ	16306	;# 
 12304   003FB3                     T1GCON          equ	16307	;# 
 12305   003FB3                     TMR1GCON        equ	16307	;# 
 12306   003FB4                     T1GATE          equ	16308	;# 
 12307   003FB4                     TMR1GATE        equ	16308	;# 
 12308   003FB5                     T1CLK           equ	16309	;# 
 12309   003FB5                     TMR1CLK         equ	16309	;# 
 12310   003FB5                     PR1             equ	16309	;# 
 12311   003FB6                     TMR0L           equ	16310	;# 
 12312   003FB6                     TMR0            equ	16310	;# 
 12313   003FB7                     TMR0H           equ	16311	;# 
 12314   003FB7                     PR0             equ	16311	;# 
 12315   003FB8                     T0CON0          equ	16312	;# 
 12316   003FB9                     T0CON1          equ	16313	;# 
 12317   003FBA                     LATA            equ	16314	;# 
 12318   003FBB                     LATB            equ	16315	;# 
 12319   003FBC                     LATC            equ	16316	;# 
 12320   003FBD                     LATD            equ	16317	;# 
 12321   003FBE                     LATE            equ	16318	;# 
 12322   003FBF                     LATF            equ	16319	;# 
 12323   003FC2                     TRISA           equ	16322	;# 
 12324   003FC3                     TRISB           equ	16323	;# 
 12325   003FC4                     TRISC           equ	16324	;# 
 12326   003FC5                     TRISD           equ	16325	;# 
 12327   003FC6                     TRISE           equ	16326	;# 
 12328   003FC7                     TRISF           equ	16327	;# 
 12329   003FCA                     PORTA           equ	16330	;# 
 12330   003FCB                     PORTB           equ	16331	;# 
 12331   003FCC                     PORTC           equ	16332	;# 
 12332   003FCD                     PORTD           equ	16333	;# 
 12333   003FCE                     PORTE           equ	16334	;# 
 12334   003FCF                     PORTF           equ	16335	;# 
 12335   003FD2                     INTCON0         equ	16338	;# 
 12336   003FD3                     INTCON1         equ	16339	;# 
 12337   003FD4                     IVTLOCK         equ	16340	;# 
 12338   003FD5                     IVTBASE         equ	16341	;# 
 12339   003FD5                     IVTBASEL        equ	16341	;# 
 12340   003FD6                     IVTBASEH        equ	16342	;# 
 12341   003FD7                     IVTBASEU        equ	16343	;# 
 12342   003FD8                     STATUS          equ	16344	;# 
 12343   003FD9                     FSR2            equ	16345	;# 
 12344   003FD9                     FSR2L           equ	16345	;# 
 12345   003FDA                     FSR2H           equ	16346	;# 
 12346   003FDB                     PLUSW2          equ	16347	;# 
 12347   003FDC                     PREINC2         equ	16348	;# 
 12348   003FDD                     POSTDEC2        equ	16349	;# 
 12349   003FDE                     POSTINC2        equ	16350	;# 
 12350   003FDF                     INDF2           equ	16351	;# 
 12351   003FE0                     BSR             equ	16352	;# 
 12352   003FE1                     FSR1            equ	16353	;# 
 12353   003FE1                     FSR1L           equ	16353	;# 
 12354   003FE2                     FSR1H           equ	16354	;# 
 12355   003FE3                     PLUSW1          equ	16355	;# 
 12356   003FE4                     PREINC1         equ	16356	;# 
 12357   003FE5                     POSTDEC1        equ	16357	;# 
 12358   003FE6                     POSTINC1        equ	16358	;# 
 12359   003FE7                     INDF1           equ	16359	;# 
 12360   003FE8                     WREG            equ	16360	;# 
 12361   003FE9                     FSR0            equ	16361	;# 
 12362   003FE9                     FSR0L           equ	16361	;# 
 12363   003FEA                     FSR0H           equ	16362	;# 
 12364   003FEB                     PLUSW0          equ	16363	;# 
 12365   003FEC                     PREINC0         equ	16364	;# 
 12366   003FED                     POSTDEC0        equ	16365	;# 
 12367   003FEE                     POSTINC0        equ	16366	;# 
 12368   003FEF                     INDF0           equ	16367	;# 
 12369   003FF0                     PCON0           equ	16368	;# 
 12370   003FF1                     PCON1           equ	16369	;# 
 12371   003FF3                     PROD            equ	16371	;# 
 12372   003FF3                     PRODL           equ	16371	;# 
 12373   003FF4                     PRODH           equ	16372	;# 
 12374   003FF5                     TABLAT          equ	16373	;# 
 12375   003FF6                     TBLPTR          equ	16374	;# 
 12376   003FF6                     TBLPTRL         equ	16374	;# 
 12377   003FF7                     TBLPTRH         equ	16375	;# 
 12378   003FF8                     TBLPTRU         equ	16376	;# 
 12379   003FF9                     PCLAT           equ	16377	;# 
 12380   003FF9                     PCL             equ	16377	;# 
 12381   003FFA                     PCLATH          equ	16378	;# 
 12382   003FFB                     PCLATU          equ	16379	;# 
 12383   003FFC                     STKPTR          equ	16380	;# 
 12384   003FFD                     TOS             equ	16381	;# 
 12385   003FFD                     TOSL            equ	16381	;# 
 12386   003FFE                     TOSH            equ	16382	;# 
 12387   003FFF                     TOSU            equ	16383	;# 
 12388   003880                     STATUS_CSHAD    equ	14464	;# 
 12389   003881                     WREG_CSHAD      equ	14465	;# 
 12390   003882                     BSR_CSHAD       equ	14466	;# 
 12391   003883                     SHADCON         equ	14467	;# 
 12392   003884                     STATUS_SHAD     equ	14468	;# 
 12393   003885                     WREG_SHAD       equ	14469	;# 
 12394   003886                     BSR_SHAD        equ	14470	;# 
 12395   003887                     PCLATH_SHAD     equ	14471	;# 
 12396   003888                     PCLATU_SHAD     equ	14472	;# 
 12397   003889                     FSR0SH          equ	14473	;# 
 12398   003889                     FSR0L_SHAD      equ	14473	;# 
 12399   00388A                     FSR0H_SHAD      equ	14474	;# 
 12400   00388B                     FSR1SH          equ	14475	;# 
 12401   00388B                     FSR1L_SHAD      equ	14475	;# 
 12402   00388C                     FSR1H_SHAD      equ	14476	;# 
 12403   00388D                     FSR2SH          equ	14477	;# 
 12404   00388D                     FSR2L_SHAD      equ	14477	;# 
 12405   00388E                     FSR2H_SHAD      equ	14478	;# 
 12406   00388F                     PRODSH          equ	14479	;# 
 12407   00388F                     PRODL_SHAD      equ	14479	;# 
 12408   003890                     PRODH_SHAD      equ	14480	;# 
 12409   00389D                     IVTADL          equ	14493	;# 
 12410   00389E                     IVTADH          equ	14494	;# 
 12411   00389F                     IVTADU          equ	14495	;# 
 12412   00395B                     WDTCON0         equ	14683	;# 
 12413   00395C                     WDTCON1         equ	14684	;# 
 12414   00395D                     WDTPSL          equ	14685	;# 
 12415   00395E                     WDTPSH          equ	14686	;# 
 12416   00395F                     WDTTMR          equ	14687	;# 
 12417   003960                     CRCDATA         equ	14688	;# 
 12418   003960                     CRCDATL         equ	14688	;# 
 12419   003961                     CRCDATH         equ	14689	;# 
 12420   003962                     CRCACC          equ	14690	;# 
 12421   003962                     CRCACCL         equ	14690	;# 
 12422   003963                     CRCACCH         equ	14691	;# 
 12423   003964                     CRCSHFT         equ	14692	;# 
 12424   003964                     CRCSHIFTL       equ	14692	;# 
 12425   003965                     CRCSHIFTH       equ	14693	;# 
 12426   003966                     CRCXOR          equ	14694	;# 
 12427   003966                     CRCXORL         equ	14694	;# 
 12428   003967                     CRCXORH         equ	14695	;# 
 12429   003968                     CRCCON0         equ	14696	;# 
 12430   003969                     CRCCON1         equ	14697	;# 
 12431   003976                     SCANLADR        equ	14710	;# 
 12432   003976                     SCANLADRL       equ	14710	;# 
 12433   003977                     SCANLADRH       equ	14711	;# 
 12434   003978                     SCANLADRU       equ	14712	;# 
 12435   003979                     SCANHADR        equ	14713	;# 
 12436   003979                     SCANHADRL       equ	14713	;# 
 12437   00397A                     SCANHADRH       equ	14714	;# 
 12438   00397B                     SCANHADRU       equ	14715	;# 
 12439   00397C                     SCANCON0        equ	14716	;# 
 12440   00397D                     SCANTRIG        equ	14717	;# 
 12441   003980                     IPR0            equ	14720	;# 
 12442   003981                     IPR1            equ	14721	;# 
 12443   003982                     IPR2            equ	14722	;# 
 12444   003983                     IPR3            equ	14723	;# 
 12445   003984                     IPR4            equ	14724	;# 
 12446   003985                     IPR5            equ	14725	;# 
 12447   003986                     IPR6            equ	14726	;# 
 12448   003987                     IPR7            equ	14727	;# 
 12449   003988                     IPR8            equ	14728	;# 
 12450   003989                     IPR9            equ	14729	;# 
 12451   00398A                     IPR10           equ	14730	;# 
 12452   003990                     PIE0            equ	14736	;# 
 12453   003991                     PIE1            equ	14737	;# 
 12454   003992                     PIE2            equ	14738	;# 
 12455   003993                     PIE3            equ	14739	;# 
 12456   003994                     PIE4            equ	14740	;# 
 12457   003995                     PIE5            equ	14741	;# 
 12458   003996                     PIE6            equ	14742	;# 
 12459   003997                     PIE7            equ	14743	;# 
 12460   003998                     PIE8            equ	14744	;# 
 12461   003999                     PIE9            equ	14745	;# 
 12462   00399A                     PIE10           equ	14746	;# 
 12463   0039A0                     PIR0            equ	14752	;# 
 12464   0039A1                     PIR1            equ	14753	;# 
 12465   0039A2                     PIR2            equ	14754	;# 
 12466   0039A3                     PIR3            equ	14755	;# 
 12467   0039A4                     PIR4            equ	14756	;# 
 12468   0039A5                     PIR5            equ	14757	;# 
 12469   0039A6                     PIR6            equ	14758	;# 
 12470   0039A7                     PIR7            equ	14759	;# 
 12471   0039A8                     PIR8            equ	14760	;# 
 12472   0039A9                     PIR9            equ	14761	;# 
 12473   0039AA                     PIR10           equ	14762	;# 
 12474   0039C0                     PMD0            equ	14784	;# 
 12475   0039C1                     PMD1            equ	14785	;# 
 12476   0039C2                     PMD2            equ	14786	;# 
 12477   0039C3                     PMD3            equ	14787	;# 
 12478   0039C4                     PMD4            equ	14788	;# 
 12479   0039C5                     PMD5            equ	14789	;# 
 12480   0039C6                     PMD6            equ	14790	;# 
 12481   0039C7                     PMD7            equ	14791	;# 
 12482   0039D0                     BORCON          equ	14800	;# 
 12483   0039D1                     VREGCON         equ	14801	;# 
 12484   0039D8                     CPUDOZE         equ	14808	;# 
 12485   0039D9                     OSCCON1         equ	14809	;# 
 12486   0039DA                     OSCCON2         equ	14810	;# 
 12487   0039DB                     OSCCON3         equ	14811	;# 
 12488   0039DC                     OSCSTAT         equ	14812	;# 
 12489   0039DC                     OSCSTAT1        equ	14812	;# 
 12490   0039DD                     OSCEN           equ	14813	;# 
 12491   0039DE                     OSCTUNE         equ	14814	;# 
 12492   0039DF                     OSCFRQ          equ	14815	;# 
 12493   0039E0                     NVMADRL         equ	14816	;# 
 12494   0039E1                     NVMADRH         equ	14817	;# 
 12495   0039E3                     NVMDAT          equ	14819	;# 
 12496   0039E5                     NVMCON1         equ	14821	;# 
 12497   0039E6                     NVMCON2         equ	14822	;# 
 12498   0039EF                     PRLOCK          equ	14831	;# 
 12499   0039F1                     ISRPR           equ	14833	;# 
 12500   0039F2                     MAINPR          equ	14834	;# 
 12501   0039F3                     DMA1PR          equ	14835	;# 
 12502   0039F4                     DMA2PR          equ	14836	;# 
 12503   0039F7                     SCANPR          equ	14839	;# 
 12504   003A00                     RA0PPS          equ	14848	;# 
 12505   003A01                     RA1PPS          equ	14849	;# 
 12506   003A02                     RA2PPS          equ	14850	;# 
 12507   003A03                     RA3PPS          equ	14851	;# 
 12508   003A04                     RA4PPS          equ	14852	;# 
 12509   003A05                     RA5PPS          equ	14853	;# 
 12510   003A06                     RA6PPS          equ	14854	;# 
 12511   003A07                     RA7PPS          equ	14855	;# 
 12512   003A08                     RB0PPS          equ	14856	;# 
 12513   003A09                     RB1PPS          equ	14857	;# 
 12514   003A0A                     RB2PPS          equ	14858	;# 
 12515   003A0B                     RB3PPS          equ	14859	;# 
 12516   003A0C                     RB4PPS          equ	14860	;# 
 12517   003A0D                     RB5PPS          equ	14861	;# 
 12518   003A0E                     RB6PPS          equ	14862	;# 
 12519   003A0F                     RB7PPS          equ	14863	;# 
 12520   003A10                     RC0PPS          equ	14864	;# 
 12521   003A11                     RC1PPS          equ	14865	;# 
 12522   003A12                     RC2PPS          equ	14866	;# 
 12523   003A13                     RC3PPS          equ	14867	;# 
 12524   003A14                     RC4PPS          equ	14868	;# 
 12525   003A15                     RC5PPS          equ	14869	;# 
 12526   003A16                     RC6PPS          equ	14870	;# 
 12527   003A17                     RC7PPS          equ	14871	;# 
 12528   003A18                     RD0PPS          equ	14872	;# 
 12529   003A19                     RD1PPS          equ	14873	;# 
 12530   003A1A                     RD2PPS          equ	14874	;# 
 12531   003A1B                     RD3PPS          equ	14875	;# 
 12532   003A1C                     RD4PPS          equ	14876	;# 
 12533   003A1D                     RD5PPS          equ	14877	;# 
 12534   003A1E                     RD6PPS          equ	14878	;# 
 12535   003A1F                     RD7PPS          equ	14879	;# 
 12536   003A20                     RE0PPS          equ	14880	;# 
 12537   003A21                     RE1PPS          equ	14881	;# 
 12538   003A22                     RE2PPS          equ	14882	;# 
 12539   003A28                     RF0PPS          equ	14888	;# 
 12540   003A29                     RF1PPS          equ	14889	;# 
 12541   003A2A                     RF2PPS          equ	14890	;# 
 12542   003A2B                     RF3PPS          equ	14891	;# 
 12543   003A2C                     RF4PPS          equ	14892	;# 
 12544   003A2D                     RF5PPS          equ	14893	;# 
 12545   003A2E                     RF6PPS          equ	14894	;# 
 12546   003A2F                     RF7PPS          equ	14895	;# 
 12547   003A40                     ANSELA          equ	14912	;# 
 12548   003A41                     WPUA            equ	14913	;# 
 12549   003A42                     ODCONA          equ	14914	;# 
 12550   003A43                     SLRCONA         equ	14915	;# 
 12551   003A44                     INLVLA          equ	14916	;# 
 12552   003A45                     IOCAP           equ	14917	;# 
 12553   003A46                     IOCAN           equ	14918	;# 
 12554   003A47                     IOCAF           equ	14919	;# 
 12555   003A50                     ANSELB          equ	14928	;# 
 12556   003A51                     WPUB            equ	14929	;# 
 12557   003A52                     ODCONB          equ	14930	;# 
 12558   003A53                     SLRCONB         equ	14931	;# 
 12559   003A54                     INLVLB          equ	14932	;# 
 12560   003A55                     IOCBP           equ	14933	;# 
 12561   003A56                     IOCBN           equ	14934	;# 
 12562   003A57                     IOCBF           equ	14935	;# 
 12563   003A5A                     RB1I2C          equ	14938	;# 
 12564   003A5B                     RB2I2C          equ	14939	;# 
 12565   003A60                     ANSELC          equ	14944	;# 
 12566   003A61                     WPUC            equ	14945	;# 
 12567   003A62                     ODCONC          equ	14946	;# 
 12568   003A63                     SLRCONC         equ	14947	;# 
 12569   003A64                     INLVLC          equ	14948	;# 
 12570   003A65                     IOCCP           equ	14949	;# 
 12571   003A66                     IOCCN           equ	14950	;# 
 12572   003A67                     IOCCF           equ	14951	;# 
 12573   003A6A                     RC3I2C          equ	14954	;# 
 12574   003A6B                     RC4I2C          equ	14955	;# 
 12575   003A70                     ANSELD          equ	14960	;# 
 12576   003A71                     WPUD            equ	14961	;# 
 12577   003A72                     ODCOND          equ	14962	;# 
 12578   003A73                     SLRCOND         equ	14963	;# 
 12579   003A74                     INLVLD          equ	14964	;# 
 12580   003A7A                     RD0I2C          equ	14970	;# 
 12581   003A7B                     RD1I2C          equ	14971	;# 
 12582   003A80                     ANSELE          equ	14976	;# 
 12583   003A81                     WPUE            equ	14977	;# 
 12584   003A82                     ODCONE          equ	14978	;# 
 12585   003A83                     SLRCONE         equ	14979	;# 
 12586   003A84                     INLVLE          equ	14980	;# 
 12587   003A85                     IOCEP           equ	14981	;# 
 12588   003A86                     IOCEN           equ	14982	;# 
 12589   003A87                     IOCEF           equ	14983	;# 
 12590   003A90                     ANSELF          equ	14992	;# 
 12591   003A91                     WPUF            equ	14993	;# 
 12592   003A92                     ODCONF          equ	14994	;# 
 12593   003A93                     SLRCONF         equ	14995	;# 
 12594   003A94                     INLVLF          equ	14996	;# 
 12595   003ABF                     PPSLOCK         equ	15039	;# 
 12596   003AC0                     INT0PPS         equ	15040	;# 
 12597   003AC1                     INT1PPS         equ	15041	;# 
 12598   003AC2                     INT2PPS         equ	15042	;# 
 12599   003AC3                     T0CKIPPS        equ	15043	;# 
 12600   003AC4                     T1CKIPPS        equ	15044	;# 
 12601   003AC5                     T1GPPS          equ	15045	;# 
 12602   003AC6                     T3CKIPPS        equ	15046	;# 
 12603   003AC7                     T3GPPS          equ	15047	;# 
 12604   003AC8                     T5CKIPPS        equ	15048	;# 
 12605   003AC9                     T5GPPS          equ	15049	;# 
 12606   003ACA                     T2INPPS         equ	15050	;# 
 12607   003ACB                     T4INPPS         equ	15051	;# 
 12608   003ACC                     T6INPPS         equ	15052	;# 
 12609   003ACD                     CCP1PPS         equ	15053	;# 
 12610   003ACE                     CCP2PPS         equ	15054	;# 
 12611   003ACF                     CCP3PPS         equ	15055	;# 
 12612   003AD0                     CCP4PPS         equ	15056	;# 
 12613   003AD1                     SMT1WINPPS      equ	15057	;# 
 12614   003AD2                     SMT1SIGPPS      equ	15058	;# 
 12615   003AD3                     CWG1INPPS       equ	15059	;# 
 12616   003AD4                     CWG2INPPS       equ	15060	;# 
 12617   003AD5                     CWG3INPPS       equ	15061	;# 
 12618   003AD6                     MD1CARLPPS      equ	15062	;# 
 12619   003AD7                     MD1CARHPPS      equ	15063	;# 
 12620   003AD8                     MD1SRCPPS       equ	15064	;# 
 12621   003AD9                     CLCIN0PPS       equ	15065	;# 
 12622   003ADA                     CLCIN1PPS       equ	15066	;# 
 12623   003ADB                     CLCIN2PPS       equ	15067	;# 
 12624   003ADC                     CLCIN3PPS       equ	15068	;# 
 12625   003ADD                     ADACTPPS        equ	15069	;# 
 12626   003ADE                     SPI1SCKPPS      equ	15070	;# 
 12627   003ADF                     SPI1SDIPPS      equ	15071	;# 
 12628   003AE0                     SPI1SSPPS       equ	15072	;# 
 12629   003AE1                     I2C1SCLPPS      equ	15073	;# 
 12630   003AE2                     I2C1SDAPPS      equ	15074	;# 
 12631   003AE3                     I2C2SCLPPS      equ	15075	;# 
 12632   003AE4                     I2C2SDAPPS      equ	15076	;# 
 12633   003AE5                     U1RXPPS         equ	15077	;# 
 12634   003AE6                     U1CTSPPS        equ	15078	;# 
 12635   003AE8                     U2RXPPS         equ	15080	;# 
 12636   003AE9                     U2CTSPPS        equ	15081	;# 
 12637   003BC9                     DMA2BUF         equ	15305	;# 
 12638   003BCA                     DMA2DCNT        equ	15306	;# 
 12639   003BCA                     DMA2DCNTL       equ	15306	;# 
 12640   003BCB                     DMA2DCNTH       equ	15307	;# 
 12641   003BCC                     DMA2DPTR        equ	15308	;# 
 12642   003BCC                     DMA2DPTRL       equ	15308	;# 
 12643   003BCD                     DMA2DPTRH       equ	15309	;# 
 12644   003BCE                     DMA2DSZ         equ	15310	;# 
 12645   003BCE                     DMA2DSZL        equ	15310	;# 
 12646   003BCF                     DMA2DSZH        equ	15311	;# 
 12647   003BD0                     DMA2DSA         equ	15312	;# 
 12648   003BD0                     DMA2DSAL        equ	15312	;# 
 12649   003BD1                     DMA2DSAH        equ	15313	;# 
 12650   003BD2                     DMA2SCNT        equ	15314	;# 
 12651   003BD2                     DMA2SCNTL       equ	15314	;# 
 12652   003BD3                     DMA2SCNTH       equ	15315	;# 
 12653   003BD4                     DMA2SPTR        equ	15316	;# 
 12654   003BD4                     DMA2SPTRL       equ	15316	;# 
 12655   003BD5                     DMA2SPTRH       equ	15317	;# 
 12656   003BD6                     DMA2SPTRU       equ	15318	;# 
 12657   003BD7                     DMA2SSZ         equ	15319	;# 
 12658   003BD7                     DMA2SSZL        equ	15319	;# 
 12659   003BD8                     DMA2SSZH        equ	15320	;# 
 12660   003BD9                     DMA2SSA         equ	15321	;# 
 12661   003BD9                     DMA2SSAL        equ	15321	;# 
 12662   003BDA                     DMA2SSAH        equ	15322	;# 
 12663   003BDB                     DMA2SSAU        equ	15323	;# 
 12664   003BDC                     DMA2CON0        equ	15324	;# 
 12665   003BDD                     DMA2CON1        equ	15325	;# 
 12666   003BDE                     DMA2AIRQ        equ	15326	;# 
 12667   003BDF                     DMA2SIRQ        equ	15327	;# 
 12668   003BE9                     DMA1BUF         equ	15337	;# 
 12669   003BEA                     DMA1DCNT        equ	15338	;# 
 12670   003BEA                     DMA1DCNTL       equ	15338	;# 
 12671   003BEB                     DMA1DCNTH       equ	15339	;# 
 12672   003BEC                     DMA1DPTR        equ	15340	;# 
 12673   003BEC                     DMA1DPTRL       equ	15340	;# 
 12674   003BED                     DMA1DPTRH       equ	15341	;# 
 12675   003BEE                     DMA1DSZ         equ	15342	;# 
 12676   003BEE                     DMA1DSZL        equ	15342	;# 
 12677   003BEF                     DMA1DSZH        equ	15343	;# 
 12678   003BF0                     DMA1DSA         equ	15344	;# 
 12679   003BF0                     DMA1DSAL        equ	15344	;# 
 12680   003BF1                     DMA1DSAH        equ	15345	;# 
 12681   003BF2                     DMA1SCNT        equ	15346	;# 
 12682   003BF2                     DMA1SCNTL       equ	15346	;# 
 12683   003BF3                     DMA1SCNTH       equ	15347	;# 
 12684   003BF4                     DMA1SPTR        equ	15348	;# 
 12685   003BF4                     DMA1SPTRL       equ	15348	;# 
 12686   003BF5                     DMA1SPTRH       equ	15349	;# 
 12687   003BF6                     DMA1SPTRU       equ	15350	;# 
 12688   003BF7                     DMA1SSZ         equ	15351	;# 
 12689   003BF7                     DMA1SSZL        equ	15351	;# 
 12690   003BF8                     DMA1SSZH        equ	15352	;# 
 12691   003BF9                     DMA1SSA         equ	15353	;# 
 12692   003BF9                     DMA1SSAL        equ	15353	;# 
 12693   003BFA                     DMA1SSAH        equ	15354	;# 
 12694   003BFB                     DMA1SSAU        equ	15355	;# 
 12695   003BFC                     DMA1CON0        equ	15356	;# 
 12696   003BFD                     DMA1CON1        equ	15357	;# 
 12697   003BFE                     DMA1AIRQ        equ	15358	;# 
 12698   003BFF                     DMA1SIRQ        equ	15359	;# 
 12699   003C56                     CLC4CON         equ	15446	;# 
 12700   003C57                     CLC4POL         equ	15447	;# 
 12701   003C58                     CLC4SEL0        equ	15448	;# 
 12702   003C59                     CLC4SEL1        equ	15449	;# 
 12703   003C5A                     CLC4SEL2        equ	15450	;# 
 12704   003C5B                     CLC4SEL3        equ	15451	;# 
 12705   003C5C                     CLC4GLS0        equ	15452	;# 
 12706   003C5D                     CLC4GLS1        equ	15453	;# 
 12707   003C5E                     CLC4GLS2        equ	15454	;# 
 12708   003C5F                     CLC4GLS3        equ	15455	;# 
 12709   003C60                     CLC3CON         equ	15456	;# 
 12710   003C61                     CLC3POL         equ	15457	;# 
 12711   003C62                     CLC3SEL0        equ	15458	;# 
 12712   003C63                     CLC3SEL1        equ	15459	;# 
 12713   003C64                     CLC3SEL2        equ	15460	;# 
 12714   003C65                     CLC3SEL3        equ	15461	;# 
 12715   003C66                     CLC3GLS0        equ	15462	;# 
 12716   003C67                     CLC3GLS1        equ	15463	;# 
 12717   003C68                     CLC3GLS2        equ	15464	;# 
 12718   003C69                     CLC3GLS3        equ	15465	;# 
 12719   003C6A                     CLC2CON         equ	15466	;# 
 12720   003C6B                     CLC2POL         equ	15467	;# 
 12721   003C6C                     CLC2SEL0        equ	15468	;# 
 12722   003C6D                     CLC2SEL1        equ	15469	;# 
 12723   003C6E                     CLC2SEL2        equ	15470	;# 
 12724   003C6F                     CLC2SEL3        equ	15471	;# 
 12725   003C70                     CLC2GLS0        equ	15472	;# 
 12726   003C71                     CLC2GLS1        equ	15473	;# 
 12727   003C72                     CLC2GLS2        equ	15474	;# 
 12728   003C73                     CLC2GLS3        equ	15475	;# 
 12729   003C74                     CLC1CON         equ	15476	;# 
 12730   003C75                     CLC1POL         equ	15477	;# 
 12731   003C76                     CLC1SEL0        equ	15478	;# 
 12732   003C77                     CLC1SEL1        equ	15479	;# 
 12733   003C78                     CLC1SEL2        equ	15480	;# 
 12734   003C79                     CLC1SEL3        equ	15481	;# 
 12735   003C7A                     CLC1GLS0        equ	15482	;# 
 12736   003C7B                     CLC1GLS1        equ	15483	;# 
 12737   003C7C                     CLC1GLS2        equ	15484	;# 
 12738   003C7D                     CLC1GLS3        equ	15485	;# 
 12739   003C7E                     CLCDATA0        equ	15486	;# 
 12740   003CE5                     CLKRCON         equ	15589	;# 
 12741   003CE6                     CLKRCLK         equ	15590	;# 
 12742   003CFA                     MD1CON0         equ	15610	;# 
 12743   003CFB                     MD1CON1         equ	15611	;# 
 12744   003CFC                     MD1SRC          equ	15612	;# 
 12745   003CFD                     MD1CARL         equ	15613	;# 
 12746   003CFE                     MD1CARH         equ	15614	;# 
 12747   003D10                     SPI1RXB         equ	15632	;# 
 12748   003D11                     SPI1TXB         equ	15633	;# 
 12749   003D12                     SPI1TCNT        equ	15634	;# 
 12750   003D12                     SPI1TCNTL       equ	15634	;# 
 12751   003D13                     SPI1TCNTH       equ	15635	;# 
 12752   003D14                     SPI1CON0        equ	15636	;# 
 12753   003D15                     SPI1CON1        equ	15637	;# 
 12754   003D16                     SPI1CON2        equ	15638	;# 
 12755   003D17                     SPI1STATUS      equ	15639	;# 
 12756   003D18                     SPI1TWIDTH      equ	15640	;# 
 12757   003D19                     SPI1BAUD        equ	15641	;# 
 12758   003D1A                     SPI1INTF        equ	15642	;# 
 12759   003D1B                     SPI1INTE        equ	15643	;# 
 12760   003D1C                     SPI1CLK         equ	15644	;# 
 12761   003D54                     I2C2RXB         equ	15700	;# 
 12762   003D55                     I2C2TXB         equ	15701	;# 
 12763   003D56                     I2C2CNT         equ	15702	;# 
 12764   003D57                     I2C2ADB0        equ	15703	;# 
 12765   003D58                     I2C2ADB1        equ	15704	;# 
 12766   003D59                     I2C2ADR0        equ	15705	;# 
 12767   003D5A                     I2C2ADR1        equ	15706	;# 
 12768   003D5B                     I2C2ADR2        equ	15707	;# 
 12769   003D5C                     I2C2ADR3        equ	15708	;# 
 12770   003D5D                     I2C2CON0        equ	15709	;# 
 12771   003D5E                     I2C2CON1        equ	15710	;# 
 12772   003D5F                     I2C2CON2        equ	15711	;# 
 12773   003D60                     I2C2ERR         equ	15712	;# 
 12774   003D61                     I2C2STAT0       equ	15713	;# 
 12775   003D62                     I2C2STAT1       equ	15714	;# 
 12776   003D63                     I2C2PIR         equ	15715	;# 
 12777   003D64                     I2C2PIE         equ	15716	;# 
 12778   003D65                     I2C2CLK         equ	15717	;# 
 12779   003D66                     I2C2BTO         equ	15718	;# 
 12780   003D6A                     I2C1RXB         equ	15722	;# 
 12781   003D6B                     I2C1TXB         equ	15723	;# 
 12782   003D6C                     I2C1CNT         equ	15724	;# 
 12783   003D6D                     I2C1ADB0        equ	15725	;# 
 12784   003D6E                     I2C1ADB1        equ	15726	;# 
 12785   003D6F                     I2C1ADR0        equ	15727	;# 
 12786   003D70                     I2C1ADR1        equ	15728	;# 
 12787   003D71                     I2C1ADR2        equ	15729	;# 
 12788   003D72                     I2C1ADR3        equ	15730	;# 
 12789   003D73                     I2C1CON0        equ	15731	;# 
 12790   003D74                     I2C1CON1        equ	15732	;# 
 12791   003D75                     I2C1CON2        equ	15733	;# 
 12792   003D76                     I2C1ERR         equ	15734	;# 
 12793   003D77                     I2C1STAT0       equ	15735	;# 
 12794   003D78                     I2C1STAT1       equ	15736	;# 
 12795   003D79                     I2C1PIR         equ	15737	;# 
 12796   003D7A                     I2C1PIE         equ	15738	;# 
 12797   003D7B                     I2C1CLK         equ	15739	;# 
 12798   003D7C                     I2C1BTO         equ	15740	;# 
 12799   003DD0                     U2RXB           equ	15824	;# 
 12800   003DD0                     U2RXBL          equ	15824	;# 
 12801   003DD2                     U2TXB           equ	15826	;# 
 12802   003DD2                     U2TXBL          equ	15826	;# 
 12803   003DD4                     U2P1            equ	15828	;# 
 12804   003DD4                     U2P1L           equ	15828	;# 
 12805   003DD6                     U2P2            equ	15830	;# 
 12806   003DD6                     U2P2L           equ	15830	;# 
 12807   003DD8                     U2P3            equ	15832	;# 
 12808   003DD8                     U2P3L           equ	15832	;# 
 12809   003DDA                     U2CON0          equ	15834	;# 
 12810   003DDB                     U2CON1          equ	15835	;# 
 12811   003DDC                     U2CON2          equ	15836	;# 
 12812   003DDD                     U2BRG           equ	15837	;# 
 12813   003DDD                     U2BRGL          equ	15837	;# 
 12814   003DDE                     U2BRGH          equ	15838	;# 
 12815   003DDF                     U2FIFO          equ	15839	;# 
 12816   003DE0                     U2UIR           equ	15840	;# 
 12817   003DE1                     U2ERRIR         equ	15841	;# 
 12818   003DE2                     U2ERRIE         equ	15842	;# 
 12819   003DE8                     U1RXB           equ	15848	;# 
 12820   003DE8                     U1RXBL          equ	15848	;# 
 12821   003DE9                     U1RXCHK         equ	15849	;# 
 12822   003DEA                     U1TXB           equ	15850	;# 
 12823   003DEA                     U1TXBL          equ	15850	;# 
 12824   003DEB                     U1TXCHK         equ	15851	;# 
 12825   003DEC                     U1P1            equ	15852	;# 
 12826   003DEC                     U1P1L           equ	15852	;# 
 12827   003DED                     U1P1H           equ	15853	;# 
 12828   003DEE                     U1P2            equ	15854	;# 
 12829   003DEE                     U1P2L           equ	15854	;# 
 12830   003DEF                     U1P2H           equ	15855	;# 
 12831   003DF0                     U1P3            equ	15856	;# 
 12832   003DF0                     U1P3L           equ	15856	;# 
 12833   003DF1                     U1P3H           equ	15857	;# 
 12834   003DF2                     U1CON0          equ	15858	;# 
 12835   003DF3                     U1CON1          equ	15859	;# 
 12836   003DF4                     U1CON2          equ	15860	;# 
 12837   003DF5                     U1BRG           equ	15861	;# 
 12838   003DF5                     U1BRGL          equ	15861	;# 
 12839   003DF6                     U1BRGH          equ	15862	;# 
 12840   003DF7                     U1FIFO          equ	15863	;# 
 12841   003DF8                     U1UIR           equ	15864	;# 
 12842   003DF9                     U1ERRIR         equ	15865	;# 
 12843   003DFA                     U1ERRIE         equ	15866	;# 
 12844   003E9C                     DAC1CON1        equ	16028	;# 
 12845   003E9E                     DAC1CON0        equ	16030	;# 
 12846   003EB8                     CM2CON0         equ	16056	;# 
 12847   003EB9                     CM2CON1         equ	16057	;# 
 12848   003EBA                     CM2NCH          equ	16058	;# 
 12849   003EBB                     CM2PCH          equ	16059	;# 
 12850   003EBC                     CM1CON0         equ	16060	;# 
 12851   003EBD                     CM1CON1         equ	16061	;# 
 12852   003EBE                     CM1NCH          equ	16062	;# 
 12853   003EBF                     CM1PCH          equ	16063	;# 
 12854   003EC0                     CMOUT           equ	16064	;# 
 12855   003EC1                     FVRCON          equ	16065	;# 
 12856   003EC3                     ZCDCON          equ	16067	;# 
 12857   003EC9                     HLVDCON0        equ	16073	;# 
 12858   003ECA                     HLVDCON1        equ	16074	;# 
 12859   003ED7                     ADCP            equ	16087	;# 
 12860   003EDE                     ADLTH           equ	16094	;# 
 12861   003EDE                     ADLTHL          equ	16094	;# 
 12862   003EDF                     ADLTHH          equ	16095	;# 
 12863   003EE0                     ADUTH           equ	16096	;# 
 12864   003EE0                     ADUTHL          equ	16096	;# 
 12865   003EE1                     ADUTHH          equ	16097	;# 
 12866   003EE2                     ADERR           equ	16098	;# 
 12867   003EE2                     ADERRL          equ	16098	;# 
 12868   003EE3                     ADERRH          equ	16099	;# 
 12869   003EE4                     ADSTPT          equ	16100	;# 
 12870   003EE4                     ADSTPTL         equ	16100	;# 
 12871   003EE5                     ADSTPTH         equ	16101	;# 
 12872   003EE6                     ADFLTR          equ	16102	;# 
 12873   003EE6                     ADFLTRL         equ	16102	;# 
 12874   003EE7                     ADFLTRH         equ	16103	;# 
 12875   003EE8                     ADACC           equ	16104	;# 
 12876   003EE8                     ADACCL          equ	16104	;# 
 12877   003EE9                     ADACCH          equ	16105	;# 
 12878   003EEA                     ADACCU          equ	16106	;# 
 12879   003EEB                     ADCNT           equ	16107	;# 
 12880   003EEC                     ADRPT           equ	16108	;# 
 12881   003EED                     ADPREV          equ	16109	;# 
 12882   003EED                     ADPREVL         equ	16109	;# 
 12883   003EEE                     ADPREVH         equ	16110	;# 
 12884   003EEF                     ADRES           equ	16111	;# 
 12885   003EEF                     ADRESL          equ	16111	;# 
 12886   003EF0                     ADRESH          equ	16112	;# 
 12887   003EF1                     ADPCH           equ	16113	;# 
 12888   003EF3                     ADACQ           equ	16115	;# 
 12889   003EF3                     ADACQL          equ	16115	;# 
 12890   003EF4                     ADACQH          equ	16116	;# 
 12891   003EF5                     ADCAP           equ	16117	;# 
 12892   003EF6                     ADPRE           equ	16118	;# 
 12893   003EF6                     ADPREL          equ	16118	;# 
 12894   003EF7                     ADPREH          equ	16119	;# 
 12895   003EF8                     ADCON0          equ	16120	;# 
 12896   003EF9                     ADCON1          equ	16121	;# 
 12897   003EFA                     ADCON2          equ	16122	;# 
 12898   003EFB                     ADCON3          equ	16123	;# 
 12899   003EFC                     ADSTAT          equ	16124	;# 
 12900   003EFD                     ADREF           equ	16125	;# 
 12901   003EFE                     ADACT           equ	16126	;# 
 12902   003EFF                     ADCLK           equ	16127	;# 
 12903   003F12                     SMT1TMR         equ	16146	;# 
 12904   003F12                     SMT1TMRL        equ	16146	;# 
 12905   003F13                     SMT1TMRH        equ	16147	;# 
 12906   003F14                     SMT1TMRU        equ	16148	;# 
 12907   003F15                     SMT1CPR         equ	16149	;# 
 12908   003F15                     SMT1CPRL        equ	16149	;# 
 12909   003F16                     SMT1CPRH        equ	16150	;# 
 12910   003F17                     SMT1CPRU        equ	16151	;# 
 12911   003F18                     SMT1CPW         equ	16152	;# 
 12912   003F18                     SMT1CPWL        equ	16152	;# 
 12913   003F19                     SMT1CPWH        equ	16153	;# 
 12914   003F1A                     SMT1CPWU        equ	16154	;# 
 12915   003F1B                     SMT1PR          equ	16155	;# 
 12916   003F1B                     SMT1PRL         equ	16155	;# 
 12917   003F1C                     SMT1PRH         equ	16156	;# 
 12918   003F1D                     SMT1PRU         equ	16157	;# 
 12919   003F1E                     SMT1CON0        equ	16158	;# 
 12920   003F1F                     SMT1CON1        equ	16159	;# 
 12921   003F20                     SMT1STAT        equ	16160	;# 
 12922   003F21                     SMT1CLK         equ	16161	;# 
 12923   003F22                     SMT1SIG         equ	16162	;# 
 12924   003F23                     SMT1WIN         equ	16163	;# 
 12925   003F38                     NCO1ACC         equ	16184	;# 
 12926   003F38                     NCO1ACCL        equ	16184	;# 
 12927   003F39                     NCO1ACCH        equ	16185	;# 
 12928   003F3A                     NCO1ACCU        equ	16186	;# 
 12929   003F3B                     NCO1INC         equ	16187	;# 
 12930   003F3B                     NCO1INCL        equ	16187	;# 
 12931   003F3C                     NCO1INCH        equ	16188	;# 
 12932   003F3D                     NCO1INCU        equ	16189	;# 
 12933   003F3E                     NCO1CON         equ	16190	;# 
 12934   003F3F                     NCO1CLK         equ	16191	;# 
 12935   003F40                     CWG3CLK         equ	16192	;# 
 12936   003F40                     CWG3CLKCON      equ	16192	;# 
 12937   003F41                     CWG3ISM         equ	16193	;# 
 12938   003F41                     CWG3DAT         equ	16193	;# 
 12939   003F42                     CWG3DBR         equ	16194	;# 
 12940   003F43                     CWG3DBF         equ	16195	;# 
 12941   003F44                     CWG3CON0        equ	16196	;# 
 12942   003F45                     CWG3CON1        equ	16197	;# 
 12943   003F46                     CWG3AS0         equ	16198	;# 
 12944   003F47                     CWG3AS1         equ	16199	;# 
 12945   003F48                     CWG3STR         equ	16200	;# 
 12946   003F49                     CWG2CLK         equ	16201	;# 
 12947   003F49                     CWG2CLKCON      equ	16201	;# 
 12948   003F4A                     CWG2ISM         equ	16202	;# 
 12949   003F4A                     CWG2DAT         equ	16202	;# 
 12950   003F4B                     CWG2DBR         equ	16203	;# 
 12951   003F4C                     CWG2DBF         equ	16204	;# 
 12952   003F4D                     CWG2CON0        equ	16205	;# 
 12953   003F4E                     CWG2CON1        equ	16206	;# 
 12954   003F4F                     CWG2AS0         equ	16207	;# 
 12955   003F50                     CWG2AS1         equ	16208	;# 
 12956   003F51                     CWG2STR         equ	16209	;# 
 12957   003F52                     CWG1CLK         equ	16210	;# 
 12958   003F52                     CWG1CLKCON      equ	16210	;# 
 12959   003F53                     CWG1ISM         equ	16211	;# 
 12960   003F53                     CWG1DAT         equ	16211	;# 
 12961   003F54                     CWG1DBR         equ	16212	;# 
 12962   003F55                     CWG1DBF         equ	16213	;# 
 12963   003F56                     CWG1CON0        equ	16214	;# 
 12964   003F57                     CWG1CON1        equ	16215	;# 
 12965   003F58                     CWG1AS0         equ	16216	;# 
 12966   003F59                     CWG1AS1         equ	16217	;# 
 12967   003F5A                     CWG1STR         equ	16218	;# 
 12968   003F5E                     CCPTMRS0        equ	16222	;# 
 12969   003F5F                     CCPTMRS1        equ	16223	;# 
 12970   003F60                     PWM8DC          equ	16224	;# 
 12971   003F60                     PWM8DCL         equ	16224	;# 
 12972   003F61                     PWM8DCH         equ	16225	;# 
 12973   003F62                     PWM8CON         equ	16226	;# 
 12974   003F64                     PWM7DC          equ	16228	;# 
 12975   003F64                     PWM7DCL         equ	16228	;# 
 12976   003F65                     PWM7DCH         equ	16229	;# 
 12977   003F66                     PWM7CON         equ	16230	;# 
 12978   003F68                     PWM6DC          equ	16232	;# 
 12979   003F68                     PWM6DCL         equ	16232	;# 
 12980   003F69                     PWM6DCH         equ	16233	;# 
 12981   003F6A                     PWM6CON         equ	16234	;# 
 12982   003F6C                     PWM5DC          equ	16236	;# 
 12983   003F6C                     PWM5DCL         equ	16236	;# 
 12984   003F6D                     PWM5DCH         equ	16237	;# 
 12985   003F6E                     PWM5CON         equ	16238	;# 
 12986   003F70                     CCPR4           equ	16240	;# 
 12987   003F70                     CCPR4L          equ	16240	;# 
 12988   003F71                     CCPR4H          equ	16241	;# 
 12989   003F72                     CCP4CON         equ	16242	;# 
 12990   003F73                     CCP4CAP         equ	16243	;# 
 12991   003F74                     CCPR3           equ	16244	;# 
 12992   003F74                     CCPR3L          equ	16244	;# 
 12993   003F75                     CCPR3H          equ	16245	;# 
 12994   003F76                     CCP3CON         equ	16246	;# 
 12995   003F77                     CCP3CAP         equ	16247	;# 
 12996   003F78                     CCPR2           equ	16248	;# 
 12997   003F78                     CCPR2L          equ	16248	;# 
 12998   003F79                     CCPR2H          equ	16249	;# 
 12999   003F7A                     CCP2CON         equ	16250	;# 
 13000   003F7B                     CCP2CAP         equ	16251	;# 
 13001   003F7C                     CCPR1           equ	16252	;# 
 13002   003F7C                     CCPR1L          equ	16252	;# 
 13003   003F7D                     CCPR1H          equ	16253	;# 
 13004   003F7E                     CCP1CON         equ	16254	;# 
 13005   003F7F                     CCP1CAP         equ	16255	;# 
 13006   003F92                     T6TMR           equ	16274	;# 
 13007   003F92                     TMR6            equ	16274	;# 
 13008   003F93                     T6PR            equ	16275	;# 
 13009   003F93                     PR6             equ	16275	;# 
 13010   003F94                     T6CON           equ	16276	;# 
 13011   003F95                     T6HLT           equ	16277	;# 
 13012   003F96                     T6CLKCON        equ	16278	;# 
 13013   003F96                     T6CLK           equ	16278	;# 
 13014   003F97                     T6RST           equ	16279	;# 
 13015   003F98                     TMR5            equ	16280	;# 
 13016   003F98                     TMR5L           equ	16280	;# 
 13017   003F99                     TMR5H           equ	16281	;# 
 13018   003F9A                     T5CON           equ	16282	;# 
 13019   003F9A                     TMR5CON         equ	16282	;# 
 13020   003F9B                     T5GCON          equ	16283	;# 
 13021   003F9B                     TMR5GCON        equ	16283	;# 
 13022   003F9C                     T5GATE          equ	16284	;# 
 13023   003F9C                     TMR5GATE        equ	16284	;# 
 13024   003F9D                     T5CLK           equ	16285	;# 
 13025   003F9D                     TMR5CLK         equ	16285	;# 
 13026   003F9D                     PR5             equ	16285	;# 
 13027   003F9E                     T4TMR           equ	16286	;# 
 13028   003F9E                     TMR4            equ	16286	;# 
 13029   003F9F                     T4PR            equ	16287	;# 
 13030   003F9F                     PR4             equ	16287	;# 
 13031   003FA0                     T4CON           equ	16288	;# 
 13032   003FA1                     T4HLT           equ	16289	;# 
 13033   003FA2                     T4CLKCON        equ	16290	;# 
 13034   003FA2                     T4CLK           equ	16290	;# 
 13035   003FA3                     T4RST           equ	16291	;# 
 13036   003FA4                     TMR3            equ	16292	;# 
 13037   003FA4                     TMR3L           equ	16292	;# 
 13038   003FA5                     TMR3H           equ	16293	;# 
 13039   003FA6                     T3CON           equ	16294	;# 
 13040   003FA6                     TMR3CON         equ	16294	;# 
 13041   003FA7                     T3GCON          equ	16295	;# 
 13042   003FA7                     TMR3GCON        equ	16295	;# 
 13043   003FA8                     T3GATE          equ	16296	;# 
 13044   003FA8                     TMR3GATE        equ	16296	;# 
 13045   003FA9                     T3CLK           equ	16297	;# 
 13046   003FA9                     TMR3CLK         equ	16297	;# 
 13047   003FA9                     PR3             equ	16297	;# 
 13048   003FAA                     T2TMR           equ	16298	;# 
 13049   003FAA                     TMR2            equ	16298	;# 
 13050   003FAB                     T2PR            equ	16299	;# 
 13051   003FAB                     PR2             equ	16299	;# 
 13052   003FAC                     T2CON           equ	16300	;# 
 13053   003FAD                     T2HLT           equ	16301	;# 
 13054   003FAE                     T2CLKCON        equ	16302	;# 
 13055   003FAE                     T2CLK           equ	16302	;# 
 13056   003FAF                     T2RST           equ	16303	;# 
 13057   003FB0                     TMR1            equ	16304	;# 
 13058   003FB0                     TMR1L           equ	16304	;# 
 13059   003FB1                     TMR1H           equ	16305	;# 
 13060   003FB2                     T1CON           equ	16306	;# 
 13061   003FB2                     TMR1CON         equ	16306	;# 
 13062   003FB3                     T1GCON          equ	16307	;# 
 13063   003FB3                     TMR1GCON        equ	16307	;# 
 13064   003FB4                     T1GATE          equ	16308	;# 
 13065   003FB4                     TMR1GATE        equ	16308	;# 
 13066   003FB5                     T1CLK           equ	16309	;# 
 13067   003FB5                     TMR1CLK         equ	16309	;# 
 13068   003FB5                     PR1             equ	16309	;# 
 13069   003FB6                     TMR0L           equ	16310	;# 
 13070   003FB6                     TMR0            equ	16310	;# 
 13071   003FB7                     TMR0H           equ	16311	;# 
 13072   003FB7                     PR0             equ	16311	;# 
 13073   003FB8                     T0CON0          equ	16312	;# 
 13074   003FB9                     T0CON1          equ	16313	;# 
 13075   003FBA                     LATA            equ	16314	;# 
 13076   003FBB                     LATB            equ	16315	;# 
 13077   003FBC                     LATC            equ	16316	;# 
 13078   003FBD                     LATD            equ	16317	;# 
 13079   003FBE                     LATE            equ	16318	;# 
 13080   003FBF                     LATF            equ	16319	;# 
 13081   003FC2                     TRISA           equ	16322	;# 
 13082   003FC3                     TRISB           equ	16323	;# 
 13083   003FC4                     TRISC           equ	16324	;# 
 13084   003FC5                     TRISD           equ	16325	;# 
 13085   003FC6                     TRISE           equ	16326	;# 
 13086   003FC7                     TRISF           equ	16327	;# 
 13087   003FCA                     PORTA           equ	16330	;# 
 13088   003FCB                     PORTB           equ	16331	;# 
 13089   003FCC                     PORTC           equ	16332	;# 
 13090   003FCD                     PORTD           equ	16333	;# 
 13091   003FCE                     PORTE           equ	16334	;# 
 13092   003FCF                     PORTF           equ	16335	;# 
 13093   003FD2                     INTCON0         equ	16338	;# 
 13094   003FD3                     INTCON1         equ	16339	;# 
 13095   003FD4                     IVTLOCK         equ	16340	;# 
 13096   003FD5                     IVTBASE         equ	16341	;# 
 13097   003FD5                     IVTBASEL        equ	16341	;# 
 13098   003FD6                     IVTBASEH        equ	16342	;# 
 13099   003FD7                     IVTBASEU        equ	16343	;# 
 13100   003FD8                     STATUS          equ	16344	;# 
 13101   003FD9                     FSR2            equ	16345	;# 
 13102   003FD9                     FSR2L           equ	16345	;# 
 13103   003FDA                     FSR2H           equ	16346	;# 
 13104   003FDB                     PLUSW2          equ	16347	;# 
 13105   003FDC                     PREINC2         equ	16348	;# 
 13106   003FDD                     POSTDEC2        equ	16349	;# 
 13107   003FDE                     POSTINC2        equ	16350	;# 
 13108   003FDF                     INDF2           equ	16351	;# 
 13109   003FE0                     BSR             equ	16352	;# 
 13110   003FE1                     FSR1            equ	16353	;# 
 13111   003FE1                     FSR1L           equ	16353	;# 
 13112   003FE2                     FSR1H           equ	16354	;# 
 13113   003FE3                     PLUSW1          equ	16355	;# 
 13114   003FE4                     PREINC1         equ	16356	;# 
 13115   003FE5                     POSTDEC1        equ	16357	;# 
 13116   003FE6                     POSTINC1        equ	16358	;# 
 13117   003FE7                     INDF1           equ	16359	;# 
 13118   003FE8                     WREG            equ	16360	;# 
 13119   003FE9                     FSR0            equ	16361	;# 
 13120   003FE9                     FSR0L           equ	16361	;# 
 13121   003FEA                     FSR0H           equ	16362	;# 
 13122   003FEB                     PLUSW0          equ	16363	;# 
 13123   003FEC                     PREINC0         equ	16364	;# 
 13124   003FED                     POSTDEC0        equ	16365	;# 
 13125   003FEE                     POSTINC0        equ	16366	;# 
 13126   003FEF                     INDF0           equ	16367	;# 
 13127   003FF0                     PCON0           equ	16368	;# 
 13128   003FF1                     PCON1           equ	16369	;# 
 13129   003FF3                     PROD            equ	16371	;# 
 13130   003FF3                     PRODL           equ	16371	;# 
 13131   003FF4                     PRODH           equ	16372	;# 
 13132   003FF5                     TABLAT          equ	16373	;# 
 13133   003FF6                     TBLPTR          equ	16374	;# 
 13134   003FF6                     TBLPTRL         equ	16374	;# 
 13135   003FF7                     TBLPTRH         equ	16375	;# 
 13136   003FF8                     TBLPTRU         equ	16376	;# 
 13137   003FF9                     PCLAT           equ	16377	;# 
 13138   003FF9                     PCL             equ	16377	;# 
 13139   003FFA                     PCLATH          equ	16378	;# 
 13140   003FFB                     PCLATU          equ	16379	;# 
 13141   003FFC                     STKPTR          equ	16380	;# 
 13142   003FFD                     TOS             equ	16381	;# 
 13143   003FFD                     TOSL            equ	16381	;# 
 13144   003FFE                     TOSH            equ	16382	;# 
 13145   003FFF                     TOSU            equ	16383	;# 
 13146   003880                     STATUS_CSHAD    equ	14464	;# 
 13147   003881                     WREG_CSHAD      equ	14465	;# 
 13148   003882                     BSR_CSHAD       equ	14466	;# 
 13149   003883                     SHADCON         equ	14467	;# 
 13150   003884                     STATUS_SHAD     equ	14468	;# 
 13151   003885                     WREG_SHAD       equ	14469	;# 
 13152   003886                     BSR_SHAD        equ	14470	;# 
 13153   003887                     PCLATH_SHAD     equ	14471	;# 
 13154   003888                     PCLATU_SHAD     equ	14472	;# 
 13155   003889                     FSR0SH          equ	14473	;# 
 13156   003889                     FSR0L_SHAD      equ	14473	;# 
 13157   00388A                     FSR0H_SHAD      equ	14474	;# 
 13158   00388B                     FSR1SH          equ	14475	;# 
 13159   00388B                     FSR1L_SHAD      equ	14475	;# 
 13160   00388C                     FSR1H_SHAD      equ	14476	;# 
 13161   00388D                     FSR2SH          equ	14477	;# 
 13162   00388D                     FSR2L_SHAD      equ	14477	;# 
 13163   00388E                     FSR2H_SHAD      equ	14478	;# 
 13164   00388F                     PRODSH          equ	14479	;# 
 13165   00388F                     PRODL_SHAD      equ	14479	;# 
 13166   003890                     PRODH_SHAD      equ	14480	;# 
 13167   00389D                     IVTADL          equ	14493	;# 
 13168   00389E                     IVTADH          equ	14494	;# 
 13169   00389F                     IVTADU          equ	14495	;# 
 13170   00395B                     WDTCON0         equ	14683	;# 
 13171   00395C                     WDTCON1         equ	14684	;# 
 13172   00395D                     WDTPSL          equ	14685	;# 
 13173   00395E                     WDTPSH          equ	14686	;# 
 13174   00395F                     WDTTMR          equ	14687	;# 
 13175   003960                     CRCDATA         equ	14688	;# 
 13176   003960                     CRCDATL         equ	14688	;# 
 13177   003961                     CRCDATH         equ	14689	;# 
 13178   003962                     CRCACC          equ	14690	;# 
 13179   003962                     CRCACCL         equ	14690	;# 
 13180   003963                     CRCACCH         equ	14691	;# 
 13181   003964                     CRCSHFT         equ	14692	;# 
 13182   003964                     CRCSHIFTL       equ	14692	;# 
 13183   003965                     CRCSHIFTH       equ	14693	;# 
 13184   003966                     CRCXOR          equ	14694	;# 
 13185   003966                     CRCXORL         equ	14694	;# 
 13186   003967                     CRCXORH         equ	14695	;# 
 13187   003968                     CRCCON0         equ	14696	;# 
 13188   003969                     CRCCON1         equ	14697	;# 
 13189   003976                     SCANLADR        equ	14710	;# 
 13190   003976                     SCANLADRL       equ	14710	;# 
 13191   003977                     SCANLADRH       equ	14711	;# 
 13192   003978                     SCANLADRU       equ	14712	;# 
 13193   003979                     SCANHADR        equ	14713	;# 
 13194   003979                     SCANHADRL       equ	14713	;# 
 13195   00397A                     SCANHADRH       equ	14714	;# 
 13196   00397B                     SCANHADRU       equ	14715	;# 
 13197   00397C                     SCANCON0        equ	14716	;# 
 13198   00397D                     SCANTRIG        equ	14717	;# 
 13199   003980                     IPR0            equ	14720	;# 
 13200   003981                     IPR1            equ	14721	;# 
 13201   003982                     IPR2            equ	14722	;# 
 13202   003983                     IPR3            equ	14723	;# 
 13203   003984                     IPR4            equ	14724	;# 
 13204   003985                     IPR5            equ	14725	;# 
 13205   003986                     IPR6            equ	14726	;# 
 13206   003987                     IPR7            equ	14727	;# 
 13207   003988                     IPR8            equ	14728	;# 
 13208   003989                     IPR9            equ	14729	;# 
 13209   00398A                     IPR10           equ	14730	;# 
 13210   003990                     PIE0            equ	14736	;# 
 13211   003991                     PIE1            equ	14737	;# 
 13212   003992                     PIE2            equ	14738	;# 
 13213   003993                     PIE3            equ	14739	;# 
 13214   003994                     PIE4            equ	14740	;# 
 13215   003995                     PIE5            equ	14741	;# 
 13216   003996                     PIE6            equ	14742	;# 
 13217   003997                     PIE7            equ	14743	;# 
 13218   003998                     PIE8            equ	14744	;# 
 13219   003999                     PIE9            equ	14745	;# 
 13220   00399A                     PIE10           equ	14746	;# 
 13221   0039A0                     PIR0            equ	14752	;# 
 13222   0039A1                     PIR1            equ	14753	;# 
 13223   0039A2                     PIR2            equ	14754	;# 
 13224   0039A3                     PIR3            equ	14755	;# 
 13225   0039A4                     PIR4            equ	14756	;# 
 13226   0039A5                     PIR5            equ	14757	;# 
 13227   0039A6                     PIR6            equ	14758	;# 
 13228   0039A7                     PIR7            equ	14759	;# 
 13229   0039A8                     PIR8            equ	14760	;# 
 13230   0039A9                     PIR9            equ	14761	;# 
 13231   0039AA                     PIR10           equ	14762	;# 
 13232   0039C0                     PMD0            equ	14784	;# 
 13233   0039C1                     PMD1            equ	14785	;# 
 13234   0039C2                     PMD2            equ	14786	;# 
 13235   0039C3                     PMD3            equ	14787	;# 
 13236   0039C4                     PMD4            equ	14788	;# 
 13237   0039C5                     PMD5            equ	14789	;# 
 13238   0039C6                     PMD6            equ	14790	;# 
 13239   0039C7                     PMD7            equ	14791	;# 
 13240   0039D0                     BORCON          equ	14800	;# 
 13241   0039D1                     VREGCON         equ	14801	;# 
 13242   0039D8                     CPUDOZE         equ	14808	;# 
 13243   0039D9                     OSCCON1         equ	14809	;# 
 13244   0039DA                     OSCCON2         equ	14810	;# 
 13245   0039DB                     OSCCON3         equ	14811	;# 
 13246   0039DC                     OSCSTAT         equ	14812	;# 
 13247   0039DC                     OSCSTAT1        equ	14812	;# 
 13248   0039DD                     OSCEN           equ	14813	;# 
 13249   0039DE                     OSCTUNE         equ	14814	;# 
 13250   0039DF                     OSCFRQ          equ	14815	;# 
 13251   0039E0                     NVMADRL         equ	14816	;# 
 13252   0039E1                     NVMADRH         equ	14817	;# 
 13253   0039E3                     NVMDAT          equ	14819	;# 
 13254   0039E5                     NVMCON1         equ	14821	;# 
 13255   0039E6                     NVMCON2         equ	14822	;# 
 13256   0039EF                     PRLOCK          equ	14831	;# 
 13257   0039F1                     ISRPR           equ	14833	;# 
 13258   0039F2                     MAINPR          equ	14834	;# 
 13259   0039F3                     DMA1PR          equ	14835	;# 
 13260   0039F4                     DMA2PR          equ	14836	;# 
 13261   0039F7                     SCANPR          equ	14839	;# 
 13262   003A00                     RA0PPS          equ	14848	;# 
 13263   003A01                     RA1PPS          equ	14849	;# 
 13264   003A02                     RA2PPS          equ	14850	;# 
 13265   003A03                     RA3PPS          equ	14851	;# 
 13266   003A04                     RA4PPS          equ	14852	;# 
 13267   003A05                     RA5PPS          equ	14853	;# 
 13268   003A06                     RA6PPS          equ	14854	;# 
 13269   003A07                     RA7PPS          equ	14855	;# 
 13270   003A08                     RB0PPS          equ	14856	;# 
 13271   003A09                     RB1PPS          equ	14857	;# 
 13272   003A0A                     RB2PPS          equ	14858	;# 
 13273   003A0B                     RB3PPS          equ	14859	;# 
 13274   003A0C                     RB4PPS          equ	14860	;# 
 13275   003A0D                     RB5PPS          equ	14861	;# 
 13276   003A0E                     RB6PPS          equ	14862	;# 
 13277   003A0F                     RB7PPS          equ	14863	;# 
 13278   003A10                     RC0PPS          equ	14864	;# 
 13279   003A11                     RC1PPS          equ	14865	;# 
 13280   003A12                     RC2PPS          equ	14866	;# 
 13281   003A13                     RC3PPS          equ	14867	;# 
 13282   003A14                     RC4PPS          equ	14868	;# 
 13283   003A15                     RC5PPS          equ	14869	;# 
 13284   003A16                     RC6PPS          equ	14870	;# 
 13285   003A17                     RC7PPS          equ	14871	;# 
 13286   003A18                     RD0PPS          equ	14872	;# 
 13287   003A19                     RD1PPS          equ	14873	;# 
 13288   003A1A                     RD2PPS          equ	14874	;# 
 13289   003A1B                     RD3PPS          equ	14875	;# 
 13290   003A1C                     RD4PPS          equ	14876	;# 
 13291   003A1D                     RD5PPS          equ	14877	;# 
 13292   003A1E                     RD6PPS          equ	14878	;# 
 13293   003A1F                     RD7PPS          equ	14879	;# 
 13294   003A20                     RE0PPS          equ	14880	;# 
 13295   003A21                     RE1PPS          equ	14881	;# 
 13296   003A22                     RE2PPS          equ	14882	;# 
 13297   003A28                     RF0PPS          equ	14888	;# 
 13298   003A29                     RF1PPS          equ	14889	;# 
 13299   003A2A                     RF2PPS          equ	14890	;# 
 13300   003A2B                     RF3PPS          equ	14891	;# 
 13301   003A2C                     RF4PPS          equ	14892	;# 
 13302   003A2D                     RF5PPS          equ	14893	;# 
 13303   003A2E                     RF6PPS          equ	14894	;# 
 13304   003A2F                     RF7PPS          equ	14895	;# 
 13305   003A40                     ANSELA          equ	14912	;# 
 13306   003A41                     WPUA            equ	14913	;# 
 13307   003A42                     ODCONA          equ	14914	;# 
 13308   003A43                     SLRCONA         equ	14915	;# 
 13309   003A44                     INLVLA          equ	14916	;# 
 13310   003A45                     IOCAP           equ	14917	;# 
 13311   003A46                     IOCAN           equ	14918	;# 
 13312   003A47                     IOCAF           equ	14919	;# 
 13313   003A50                     ANSELB          equ	14928	;# 
 13314   003A51                     WPUB            equ	14929	;# 
 13315   003A52                     ODCONB          equ	14930	;# 
 13316   003A53                     SLRCONB         equ	14931	;# 
 13317   003A54                     INLVLB          equ	14932	;# 
 13318   003A55                     IOCBP           equ	14933	;# 
 13319   003A56                     IOCBN           equ	14934	;# 
 13320   003A57                     IOCBF           equ	14935	;# 
 13321   003A5A                     RB1I2C          equ	14938	;# 
 13322   003A5B                     RB2I2C          equ	14939	;# 
 13323   003A60                     ANSELC          equ	14944	;# 
 13324   003A61                     WPUC            equ	14945	;# 
 13325   003A62                     ODCONC          equ	14946	;# 
 13326   003A63                     SLRCONC         equ	14947	;# 
 13327   003A64                     INLVLC          equ	14948	;# 
 13328   003A65                     IOCCP           equ	14949	;# 
 13329   003A66                     IOCCN           equ	14950	;# 
 13330   003A67                     IOCCF           equ	14951	;# 
 13331   003A6A                     RC3I2C          equ	14954	;# 
 13332   003A6B                     RC4I2C          equ	14955	;# 
 13333   003A70                     ANSELD          equ	14960	;# 
 13334   003A71                     WPUD            equ	14961	;# 
 13335   003A72                     ODCOND          equ	14962	;# 
 13336   003A73                     SLRCOND         equ	14963	;# 
 13337   003A74                     INLVLD          equ	14964	;# 
 13338   003A7A                     RD0I2C          equ	14970	;# 
 13339   003A7B                     RD1I2C          equ	14971	;# 
 13340   003A80                     ANSELE          equ	14976	;# 
 13341   003A81                     WPUE            equ	14977	;# 
 13342   003A82                     ODCONE          equ	14978	;# 
 13343   003A83                     SLRCONE         equ	14979	;# 
 13344   003A84                     INLVLE          equ	14980	;# 
 13345   003A85                     IOCEP           equ	14981	;# 
 13346   003A86                     IOCEN           equ	14982	;# 
 13347   003A87                     IOCEF           equ	14983	;# 
 13348   003A90                     ANSELF          equ	14992	;# 
 13349   003A91                     WPUF            equ	14993	;# 
 13350   003A92                     ODCONF          equ	14994	;# 
 13351   003A93                     SLRCONF         equ	14995	;# 
 13352   003A94                     INLVLF          equ	14996	;# 
 13353   003ABF                     PPSLOCK         equ	15039	;# 
 13354   003AC0                     INT0PPS         equ	15040	;# 
 13355   003AC1                     INT1PPS         equ	15041	;# 
 13356   003AC2                     INT2PPS         equ	15042	;# 
 13357   003AC3                     T0CKIPPS        equ	15043	;# 
 13358   003AC4                     T1CKIPPS        equ	15044	;# 
 13359   003AC5                     T1GPPS          equ	15045	;# 
 13360   003AC6                     T3CKIPPS        equ	15046	;# 
 13361   003AC7                     T3GPPS          equ	15047	;# 
 13362   003AC8                     T5CKIPPS        equ	15048	;# 
 13363   003AC9                     T5GPPS          equ	15049	;# 
 13364   003ACA                     T2INPPS         equ	15050	;# 
 13365   003ACB                     T4INPPS         equ	15051	;# 
 13366   003ACC                     T6INPPS         equ	15052	;# 
 13367   003ACD                     CCP1PPS         equ	15053	;# 
 13368   003ACE                     CCP2PPS         equ	15054	;# 
 13369   003ACF                     CCP3PPS         equ	15055	;# 
 13370   003AD0                     CCP4PPS         equ	15056	;# 
 13371   003AD1                     SMT1WINPPS      equ	15057	;# 
 13372   003AD2                     SMT1SIGPPS      equ	15058	;# 
 13373   003AD3                     CWG1INPPS       equ	15059	;# 
 13374   003AD4                     CWG2INPPS       equ	15060	;# 
 13375   003AD5                     CWG3INPPS       equ	15061	;# 
 13376   003AD6                     MD1CARLPPS      equ	15062	;# 
 13377   003AD7                     MD1CARHPPS      equ	15063	;# 
 13378   003AD8                     MD1SRCPPS       equ	15064	;# 
 13379   003AD9                     CLCIN0PPS       equ	15065	;# 
 13380   003ADA                     CLCIN1PPS       equ	15066	;# 
 13381   003ADB                     CLCIN2PPS       equ	15067	;# 
 13382   003ADC                     CLCIN3PPS       equ	15068	;# 
 13383   003ADD                     ADACTPPS        equ	15069	;# 
 13384   003ADE                     SPI1SCKPPS      equ	15070	;# 
 13385   003ADF                     SPI1SDIPPS      equ	15071	;# 
 13386   003AE0                     SPI1SSPPS       equ	15072	;# 
 13387   003AE1                     I2C1SCLPPS      equ	15073	;# 
 13388   003AE2                     I2C1SDAPPS      equ	15074	;# 
 13389   003AE3                     I2C2SCLPPS      equ	15075	;# 
 13390   003AE4                     I2C2SDAPPS      equ	15076	;# 
 13391   003AE5                     U1RXPPS         equ	15077	;# 
 13392   003AE6                     U1CTSPPS        equ	15078	;# 
 13393   003AE8                     U2RXPPS         equ	15080	;# 
 13394   003AE9                     U2CTSPPS        equ	15081	;# 
 13395   003BC9                     DMA2BUF         equ	15305	;# 
 13396   003BCA                     DMA2DCNT        equ	15306	;# 
 13397   003BCA                     DMA2DCNTL       equ	15306	;# 
 13398   003BCB                     DMA2DCNTH       equ	15307	;# 
 13399   003BCC                     DMA2DPTR        equ	15308	;# 
 13400   003BCC                     DMA2DPTRL       equ	15308	;# 
 13401   003BCD                     DMA2DPTRH       equ	15309	;# 
 13402   003BCE                     DMA2DSZ         equ	15310	;# 
 13403   003BCE                     DMA2DSZL        equ	15310	;# 
 13404   003BCF                     DMA2DSZH        equ	15311	;# 
 13405   003BD0                     DMA2DSA         equ	15312	;# 
 13406   003BD0                     DMA2DSAL        equ	15312	;# 
 13407   003BD1                     DMA2DSAH        equ	15313	;# 
 13408   003BD2                     DMA2SCNT        equ	15314	;# 
 13409   003BD2                     DMA2SCNTL       equ	15314	;# 
 13410   003BD3                     DMA2SCNTH       equ	15315	;# 
 13411   003BD4                     DMA2SPTR        equ	15316	;# 
 13412   003BD4                     DMA2SPTRL       equ	15316	;# 
 13413   003BD5                     DMA2SPTRH       equ	15317	;# 
 13414   003BD6                     DMA2SPTRU       equ	15318	;# 
 13415   003BD7                     DMA2SSZ         equ	15319	;# 
 13416   003BD7                     DMA2SSZL        equ	15319	;# 
 13417   003BD8                     DMA2SSZH        equ	15320	;# 
 13418   003BD9                     DMA2SSA         equ	15321	;# 
 13419   003BD9                     DMA2SSAL        equ	15321	;# 
 13420   003BDA                     DMA2SSAH        equ	15322	;# 
 13421   003BDB                     DMA2SSAU        equ	15323	;# 
 13422   003BDC                     DMA2CON0        equ	15324	;# 
 13423   003BDD                     DMA2CON1        equ	15325	;# 
 13424   003BDE                     DMA2AIRQ        equ	15326	;# 
 13425   003BDF                     DMA2SIRQ        equ	15327	;# 
 13426   003BE9                     DMA1BUF         equ	15337	;# 
 13427   003BEA                     DMA1DCNT        equ	15338	;# 
 13428   003BEA                     DMA1DCNTL       equ	15338	;# 
 13429   003BEB                     DMA1DCNTH       equ	15339	;# 
 13430   003BEC                     DMA1DPTR        equ	15340	;# 
 13431   003BEC                     DMA1DPTRL       equ	15340	;# 
 13432   003BED                     DMA1DPTRH       equ	15341	;# 
 13433   003BEE                     DMA1DSZ         equ	15342	;# 
 13434   003BEE                     DMA1DSZL        equ	15342	;# 
 13435   003BEF                     DMA1DSZH        equ	15343	;# 
 13436   003BF0                     DMA1DSA         equ	15344	;# 
 13437   003BF0                     DMA1DSAL        equ	15344	;# 
 13438   003BF1                     DMA1DSAH        equ	15345	;# 
 13439   003BF2                     DMA1SCNT        equ	15346	;# 
 13440   003BF2                     DMA1SCNTL       equ	15346	;# 
 13441   003BF3                     DMA1SCNTH       equ	15347	;# 
 13442   003BF4                     DMA1SPTR        equ	15348	;# 
 13443   003BF4                     DMA1SPTRL       equ	15348	;# 
 13444   003BF5                     DMA1SPTRH       equ	15349	;# 
 13445   003BF6                     DMA1SPTRU       equ	15350	;# 
 13446   003BF7                     DMA1SSZ         equ	15351	;# 
 13447   003BF7                     DMA1SSZL        equ	15351	;# 
 13448   003BF8                     DMA1SSZH        equ	15352	;# 
 13449   003BF9                     DMA1SSA         equ	15353	;# 
 13450   003BF9                     DMA1SSAL        equ	15353	;# 
 13451   003BFA                     DMA1SSAH        equ	15354	;# 
 13452   003BFB                     DMA1SSAU        equ	15355	;# 
 13453   003BFC                     DMA1CON0        equ	15356	;# 
 13454   003BFD                     DMA1CON1        equ	15357	;# 
 13455   003BFE                     DMA1AIRQ        equ	15358	;# 
 13456   003BFF                     DMA1SIRQ        equ	15359	;# 
 13457   003C56                     CLC4CON         equ	15446	;# 
 13458   003C57                     CLC4POL         equ	15447	;# 
 13459   003C58                     CLC4SEL0        equ	15448	;# 
 13460   003C59                     CLC4SEL1        equ	15449	;# 
 13461   003C5A                     CLC4SEL2        equ	15450	;# 
 13462   003C5B                     CLC4SEL3        equ	15451	;# 
 13463   003C5C                     CLC4GLS0        equ	15452	;# 
 13464   003C5D                     CLC4GLS1        equ	15453	;# 
 13465   003C5E                     CLC4GLS2        equ	15454	;# 
 13466   003C5F                     CLC4GLS3        equ	15455	;# 
 13467   003C60                     CLC3CON         equ	15456	;# 
 13468   003C61                     CLC3POL         equ	15457	;# 
 13469   003C62                     CLC3SEL0        equ	15458	;# 
 13470   003C63                     CLC3SEL1        equ	15459	;# 
 13471   003C64                     CLC3SEL2        equ	15460	;# 
 13472   003C65                     CLC3SEL3        equ	15461	;# 
 13473   003C66                     CLC3GLS0        equ	15462	;# 
 13474   003C67                     CLC3GLS1        equ	15463	;# 
 13475   003C68                     CLC3GLS2        equ	15464	;# 
 13476   003C69                     CLC3GLS3        equ	15465	;# 
 13477   003C6A                     CLC2CON         equ	15466	;# 
 13478   003C6B                     CLC2POL         equ	15467	;# 
 13479   003C6C                     CLC2SEL0        equ	15468	;# 
 13480   003C6D                     CLC2SEL1        equ	15469	;# 
 13481   003C6E                     CLC2SEL2        equ	15470	;# 
 13482   003C6F                     CLC2SEL3        equ	15471	;# 
 13483   003C70                     CLC2GLS0        equ	15472	;# 
 13484   003C71                     CLC2GLS1        equ	15473	;# 
 13485   003C72                     CLC2GLS2        equ	15474	;# 
 13486   003C73                     CLC2GLS3        equ	15475	;# 
 13487   003C74                     CLC1CON         equ	15476	;# 
 13488   003C75                     CLC1POL         equ	15477	;# 
 13489   003C76                     CLC1SEL0        equ	15478	;# 
 13490   003C77                     CLC1SEL1        equ	15479	;# 
 13491   003C78                     CLC1SEL2        equ	15480	;# 
 13492   003C79                     CLC1SEL3        equ	15481	;# 
 13493   003C7A                     CLC1GLS0        equ	15482	;# 
 13494   003C7B                     CLC1GLS1        equ	15483	;# 
 13495   003C7C                     CLC1GLS2        equ	15484	;# 
 13496   003C7D                     CLC1GLS3        equ	15485	;# 
 13497   003C7E                     CLCDATA0        equ	15486	;# 
 13498   003CE5                     CLKRCON         equ	15589	;# 
 13499   003CE6                     CLKRCLK         equ	15590	;# 
 13500   003CFA                     MD1CON0         equ	15610	;# 
 13501   003CFB                     MD1CON1         equ	15611	;# 
 13502   003CFC                     MD1SRC          equ	15612	;# 
 13503   003CFD                     MD1CARL         equ	15613	;# 
 13504   003CFE                     MD1CARH         equ	15614	;# 
 13505   003D10                     SPI1RXB         equ	15632	;# 
 13506   003D11                     SPI1TXB         equ	15633	;# 
 13507   003D12                     SPI1TCNT        equ	15634	;# 
 13508   003D12                     SPI1TCNTL       equ	15634	;# 
 13509   003D13                     SPI1TCNTH       equ	15635	;# 
 13510   003D14                     SPI1CON0        equ	15636	;# 
 13511   003D15                     SPI1CON1        equ	15637	;# 
 13512   003D16                     SPI1CON2        equ	15638	;# 
 13513   003D17                     SPI1STATUS      equ	15639	;# 
 13514   003D18                     SPI1TWIDTH      equ	15640	;# 
 13515   003D19                     SPI1BAUD        equ	15641	;# 
 13516   003D1A                     SPI1INTF        equ	15642	;# 
 13517   003D1B                     SPI1INTE        equ	15643	;# 
 13518   003D1C                     SPI1CLK         equ	15644	;# 
 13519   003D54                     I2C2RXB         equ	15700	;# 
 13520   003D55                     I2C2TXB         equ	15701	;# 
 13521   003D56                     I2C2CNT         equ	15702	;# 
 13522   003D57                     I2C2ADB0        equ	15703	;# 
 13523   003D58                     I2C2ADB1        equ	15704	;# 
 13524   003D59                     I2C2ADR0        equ	15705	;# 
 13525   003D5A                     I2C2ADR1        equ	15706	;# 
 13526   003D5B                     I2C2ADR2        equ	15707	;# 
 13527   003D5C                     I2C2ADR3        equ	15708	;# 
 13528   003D5D                     I2C2CON0        equ	15709	;# 
 13529   003D5E                     I2C2CON1        equ	15710	;# 
 13530   003D5F                     I2C2CON2        equ	15711	;# 
 13531   003D60                     I2C2ERR         equ	15712	;# 
 13532   003D61                     I2C2STAT0       equ	15713	;# 
 13533   003D62                     I2C2STAT1       equ	15714	;# 
 13534   003D63                     I2C2PIR         equ	15715	;# 
 13535   003D64                     I2C2PIE         equ	15716	;# 
 13536   003D65                     I2C2CLK         equ	15717	;# 
 13537   003D66                     I2C2BTO         equ	15718	;# 
 13538   003D6A                     I2C1RXB         equ	15722	;# 
 13539   003D6B                     I2C1TXB         equ	15723	;# 
 13540   003D6C                     I2C1CNT         equ	15724	;# 
 13541   003D6D                     I2C1ADB0        equ	15725	;# 
 13542   003D6E                     I2C1ADB1        equ	15726	;# 
 13543   003D6F                     I2C1ADR0        equ	15727	;# 
 13544   003D70                     I2C1ADR1        equ	15728	;# 
 13545   003D71                     I2C1ADR2        equ	15729	;# 
 13546   003D72                     I2C1ADR3        equ	15730	;# 
 13547   003D73                     I2C1CON0        equ	15731	;# 
 13548   003D74                     I2C1CON1        equ	15732	;# 
 13549   003D75                     I2C1CON2        equ	15733	;# 
 13550   003D76                     I2C1ERR         equ	15734	;# 
 13551   003D77                     I2C1STAT0       equ	15735	;# 
 13552   003D78                     I2C1STAT1       equ	15736	;# 
 13553   003D79                     I2C1PIR         equ	15737	;# 
 13554   003D7A                     I2C1PIE         equ	15738	;# 
 13555   003D7B                     I2C1CLK         equ	15739	;# 
 13556   003D7C                     I2C1BTO         equ	15740	;# 
 13557   003DD0                     U2RXB           equ	15824	;# 
 13558   003DD0                     U2RXBL          equ	15824	;# 
 13559   003DD2                     U2TXB           equ	15826	;# 
 13560   003DD2                     U2TXBL          equ	15826	;# 
 13561   003DD4                     U2P1            equ	15828	;# 
 13562   003DD4                     U2P1L           equ	15828	;# 
 13563   003DD6                     U2P2            equ	15830	;# 
 13564   003DD6                     U2P2L           equ	15830	;# 
 13565   003DD8                     U2P3            equ	15832	;# 
 13566   003DD8                     U2P3L           equ	15832	;# 
 13567   003DDA                     U2CON0          equ	15834	;# 
 13568   003DDB                     U2CON1          equ	15835	;# 
 13569   003DDC                     U2CON2          equ	15836	;# 
 13570   003DDD                     U2BRG           equ	15837	;# 
 13571   003DDD                     U2BRGL          equ	15837	;# 
 13572   003DDE                     U2BRGH          equ	15838	;# 
 13573   003DDF                     U2FIFO          equ	15839	;# 
 13574   003DE0                     U2UIR           equ	15840	;# 
 13575   003DE1                     U2ERRIR         equ	15841	;# 
 13576   003DE2                     U2ERRIE         equ	15842	;# 
 13577   003DE8                     U1RXB           equ	15848	;# 
 13578   003DE8                     U1RXBL          equ	15848	;# 
 13579   003DE9                     U1RXCHK         equ	15849	;# 
 13580   003DEA                     U1TXB           equ	15850	;# 
 13581   003DEA                     U1TXBL          equ	15850	;# 
 13582   003DEB                     U1TXCHK         equ	15851	;# 
 13583   003DEC                     U1P1            equ	15852	;# 
 13584   003DEC                     U1P1L           equ	15852	;# 
 13585   003DED                     U1P1H           equ	15853	;# 
 13586   003DEE                     U1P2            equ	15854	;# 
 13587   003DEE                     U1P2L           equ	15854	;# 
 13588   003DEF                     U1P2H           equ	15855	;# 
 13589   003DF0                     U1P3            equ	15856	;# 
 13590   003DF0                     U1P3L           equ	15856	;# 
 13591   003DF1                     U1P3H           equ	15857	;# 
 13592   003DF2                     U1CON0          equ	15858	;# 
 13593   003DF3                     U1CON1          equ	15859	;# 
 13594   003DF4                     U1CON2          equ	15860	;# 
 13595   003DF5                     U1BRG           equ	15861	;# 
 13596   003DF5                     U1BRGL          equ	15861	;# 
 13597   003DF6                     U1BRGH          equ	15862	;# 
 13598   003DF7                     U1FIFO          equ	15863	;# 
 13599   003DF8                     U1UIR           equ	15864	;# 
 13600   003DF9                     U1ERRIR         equ	15865	;# 
 13601   003DFA                     U1ERRIE         equ	15866	;# 
 13602   003E9C                     DAC1CON1        equ	16028	;# 
 13603   003E9E                     DAC1CON0        equ	16030	;# 
 13604   003EB8                     CM2CON0         equ	16056	;# 
 13605   003EB9                     CM2CON1         equ	16057	;# 
 13606   003EBA                     CM2NCH          equ	16058	;# 
 13607   003EBB                     CM2PCH          equ	16059	;# 
 13608   003EBC                     CM1CON0         equ	16060	;# 
 13609   003EBD                     CM1CON1         equ	16061	;# 
 13610   003EBE                     CM1NCH          equ	16062	;# 
 13611   003EBF                     CM1PCH          equ	16063	;# 
 13612   003EC0                     CMOUT           equ	16064	;# 
 13613   003EC1                     FVRCON          equ	16065	;# 
 13614   003EC3                     ZCDCON          equ	16067	;# 
 13615   003EC9                     HLVDCON0        equ	16073	;# 
 13616   003ECA                     HLVDCON1        equ	16074	;# 
 13617   003ED7                     ADCP            equ	16087	;# 
 13618   003EDE                     ADLTH           equ	16094	;# 
 13619   003EDE                     ADLTHL          equ	16094	;# 
 13620   003EDF                     ADLTHH          equ	16095	;# 
 13621   003EE0                     ADUTH           equ	16096	;# 
 13622   003EE0                     ADUTHL          equ	16096	;# 
 13623   003EE1                     ADUTHH          equ	16097	;# 
 13624   003EE2                     ADERR           equ	16098	;# 
 13625   003EE2                     ADERRL          equ	16098	;# 
 13626   003EE3                     ADERRH          equ	16099	;# 
 13627   003EE4                     ADSTPT          equ	16100	;# 
 13628   003EE4                     ADSTPTL         equ	16100	;# 
 13629   003EE5                     ADSTPTH         equ	16101	;# 
 13630   003EE6                     ADFLTR          equ	16102	;# 
 13631   003EE6                     ADFLTRL         equ	16102	;# 
 13632   003EE7                     ADFLTRH         equ	16103	;# 
 13633   003EE8                     ADACC           equ	16104	;# 
 13634   003EE8                     ADACCL          equ	16104	;# 
 13635   003EE9                     ADACCH          equ	16105	;# 
 13636   003EEA                     ADACCU          equ	16106	;# 
 13637   003EEB                     ADCNT           equ	16107	;# 
 13638   003EEC                     ADRPT           equ	16108	;# 
 13639   003EED                     ADPREV          equ	16109	;# 
 13640   003EED                     ADPREVL         equ	16109	;# 
 13641   003EEE                     ADPREVH         equ	16110	;# 
 13642   003EEF                     ADRES           equ	16111	;# 
 13643   003EEF                     ADRESL          equ	16111	;# 
 13644   003EF0                     ADRESH          equ	16112	;# 
 13645   003EF1                     ADPCH           equ	16113	;# 
 13646   003EF3                     ADACQ           equ	16115	;# 
 13647   003EF3                     ADACQL          equ	16115	;# 
 13648   003EF4                     ADACQH          equ	16116	;# 
 13649   003EF5                     ADCAP           equ	16117	;# 
 13650   003EF6                     ADPRE           equ	16118	;# 
 13651   003EF6                     ADPREL          equ	16118	;# 
 13652   003EF7                     ADPREH          equ	16119	;# 
 13653   003EF8                     ADCON0          equ	16120	;# 
 13654   003EF9                     ADCON1          equ	16121	;# 
 13655   003EFA                     ADCON2          equ	16122	;# 
 13656   003EFB                     ADCON3          equ	16123	;# 
 13657   003EFC                     ADSTAT          equ	16124	;# 
 13658   003EFD                     ADREF           equ	16125	;# 
 13659   003EFE                     ADACT           equ	16126	;# 
 13660   003EFF                     ADCLK           equ	16127	;# 
 13661   003F12                     SMT1TMR         equ	16146	;# 
 13662   003F12                     SMT1TMRL        equ	16146	;# 
 13663   003F13                     SMT1TMRH        equ	16147	;# 
 13664   003F14                     SMT1TMRU        equ	16148	;# 
 13665   003F15                     SMT1CPR         equ	16149	;# 
 13666   003F15                     SMT1CPRL        equ	16149	;# 
 13667   003F16                     SMT1CPRH        equ	16150	;# 
 13668   003F17                     SMT1CPRU        equ	16151	;# 
 13669   003F18                     SMT1CPW         equ	16152	;# 
 13670   003F18                     SMT1CPWL        equ	16152	;# 
 13671   003F19                     SMT1CPWH        equ	16153	;# 
 13672   003F1A                     SMT1CPWU        equ	16154	;# 
 13673   003F1B                     SMT1PR          equ	16155	;# 
 13674   003F1B                     SMT1PRL         equ	16155	;# 
 13675   003F1C                     SMT1PRH         equ	16156	;# 
 13676   003F1D                     SMT1PRU         equ	16157	;# 
 13677   003F1E                     SMT1CON0        equ	16158	;# 
 13678   003F1F                     SMT1CON1        equ	16159	;# 
 13679   003F20                     SMT1STAT        equ	16160	;# 
 13680   003F21                     SMT1CLK         equ	16161	;# 
 13681   003F22                     SMT1SIG         equ	16162	;# 
 13682   003F23                     SMT1WIN         equ	16163	;# 
 13683   003F38                     NCO1ACC         equ	16184	;# 
 13684   003F38                     NCO1ACCL        equ	16184	;# 
 13685   003F39                     NCO1ACCH        equ	16185	;# 
 13686   003F3A                     NCO1ACCU        equ	16186	;# 
 13687   003F3B                     NCO1INC         equ	16187	;# 
 13688   003F3B                     NCO1INCL        equ	16187	;# 
 13689   003F3C                     NCO1INCH        equ	16188	;# 
 13690   003F3D                     NCO1INCU        equ	16189	;# 
 13691   003F3E                     NCO1CON         equ	16190	;# 
 13692   003F3F                     NCO1CLK         equ	16191	;# 
 13693   003F40                     CWG3CLK         equ	16192	;# 
 13694   003F40                     CWG3CLKCON      equ	16192	;# 
 13695   003F41                     CWG3ISM         equ	16193	;# 
 13696   003F41                     CWG3DAT         equ	16193	;# 
 13697   003F42                     CWG3DBR         equ	16194	;# 
 13698   003F43                     CWG3DBF         equ	16195	;# 
 13699   003F44                     CWG3CON0        equ	16196	;# 
 13700   003F45                     CWG3CON1        equ	16197	;# 
 13701   003F46                     CWG3AS0         equ	16198	;# 
 13702   003F47                     CWG3AS1         equ	16199	;# 
 13703   003F48                     CWG3STR         equ	16200	;# 
 13704   003F49                     CWG2CLK         equ	16201	;# 
 13705   003F49                     CWG2CLKCON      equ	16201	;# 
 13706   003F4A                     CWG2ISM         equ	16202	;# 
 13707   003F4A                     CWG2DAT         equ	16202	;# 
 13708   003F4B                     CWG2DBR         equ	16203	;# 
 13709   003F4C                     CWG2DBF         equ	16204	;# 
 13710   003F4D                     CWG2CON0        equ	16205	;# 
 13711   003F4E                     CWG2CON1        equ	16206	;# 
 13712   003F4F                     CWG2AS0         equ	16207	;# 
 13713   003F50                     CWG2AS1         equ	16208	;# 
 13714   003F51                     CWG2STR         equ	16209	;# 
 13715   003F52                     CWG1CLK         equ	16210	;# 
 13716   003F52                     CWG1CLKCON      equ	16210	;# 
 13717   003F53                     CWG1ISM         equ	16211	;# 
 13718   003F53                     CWG1DAT         equ	16211	;# 
 13719   003F54                     CWG1DBR         equ	16212	;# 
 13720   003F55                     CWG1DBF         equ	16213	;# 
 13721   003F56                     CWG1CON0        equ	16214	;# 
 13722   003F57                     CWG1CON1        equ	16215	;# 
 13723   003F58                     CWG1AS0         equ	16216	;# 
 13724   003F59                     CWG1AS1         equ	16217	;# 
 13725   003F5A                     CWG1STR         equ	16218	;# 
 13726   003F5E                     CCPTMRS0        equ	16222	;# 
 13727   003F5F                     CCPTMRS1        equ	16223	;# 
 13728   003F60                     PWM8DC          equ	16224	;# 
 13729   003F60                     PWM8DCL         equ	16224	;# 
 13730   003F61                     PWM8DCH         equ	16225	;# 
 13731   003F62                     PWM8CON         equ	16226	;# 
 13732   003F64                     PWM7DC          equ	16228	;# 
 13733   003F64                     PWM7DCL         equ	16228	;# 
 13734   003F65                     PWM7DCH         equ	16229	;# 
 13735   003F66                     PWM7CON         equ	16230	;# 
 13736   003F68                     PWM6DC          equ	16232	;# 
 13737   003F68                     PWM6DCL         equ	16232	;# 
 13738   003F69                     PWM6DCH         equ	16233	;# 
 13739   003F6A                     PWM6CON         equ	16234	;# 
 13740   003F6C                     PWM5DC          equ	16236	;# 
 13741   003F6C                     PWM5DCL         equ	16236	;# 
 13742   003F6D                     PWM5DCH         equ	16237	;# 
 13743   003F6E                     PWM5CON         equ	16238	;# 
 13744   003F70                     CCPR4           equ	16240	;# 
 13745   003F70                     CCPR4L          equ	16240	;# 
 13746   003F71                     CCPR4H          equ	16241	;# 
 13747   003F72                     CCP4CON         equ	16242	;# 
 13748   003F73                     CCP4CAP         equ	16243	;# 
 13749   003F74                     CCPR3           equ	16244	;# 
 13750   003F74                     CCPR3L          equ	16244	;# 
 13751   003F75                     CCPR3H          equ	16245	;# 
 13752   003F76                     CCP3CON         equ	16246	;# 
 13753   003F77                     CCP3CAP         equ	16247	;# 
 13754   003F78                     CCPR2           equ	16248	;# 
 13755   003F78                     CCPR2L          equ	16248	;# 
 13756   003F79                     CCPR2H          equ	16249	;# 
 13757   003F7A                     CCP2CON         equ	16250	;# 
 13758   003F7B                     CCP2CAP         equ	16251	;# 
 13759   003F7C                     CCPR1           equ	16252	;# 
 13760   003F7C                     CCPR1L          equ	16252	;# 
 13761   003F7D                     CCPR1H          equ	16253	;# 
 13762   003F7E                     CCP1CON         equ	16254	;# 
 13763   003F7F                     CCP1CAP         equ	16255	;# 
 13764   003F92                     T6TMR           equ	16274	;# 
 13765   003F92                     TMR6            equ	16274	;# 
 13766   003F93                     T6PR            equ	16275	;# 
 13767   003F93                     PR6             equ	16275	;# 
 13768   003F94                     T6CON           equ	16276	;# 
 13769   003F95                     T6HLT           equ	16277	;# 
 13770   003F96                     T6CLKCON        equ	16278	;# 
 13771   003F96                     T6CLK           equ	16278	;# 
 13772   003F97                     T6RST           equ	16279	;# 
 13773   003F98                     TMR5            equ	16280	;# 
 13774   003F98                     TMR5L           equ	16280	;# 
 13775   003F99                     TMR5H           equ	16281	;# 
 13776   003F9A                     T5CON           equ	16282	;# 
 13777   003F9A                     TMR5CON         equ	16282	;# 
 13778   003F9B                     T5GCON          equ	16283	;# 
 13779   003F9B                     TMR5GCON        equ	16283	;# 
 13780   003F9C                     T5GATE          equ	16284	;# 
 13781   003F9C                     TMR5GATE        equ	16284	;# 
 13782   003F9D                     T5CLK           equ	16285	;# 
 13783   003F9D                     TMR5CLK         equ	16285	;# 
 13784   003F9D                     PR5             equ	16285	;# 
 13785   003F9E                     T4TMR           equ	16286	;# 
 13786   003F9E                     TMR4            equ	16286	;# 
 13787   003F9F                     T4PR            equ	16287	;# 
 13788   003F9F                     PR4             equ	16287	;# 
 13789   003FA0                     T4CON           equ	16288	;# 
 13790   003FA1                     T4HLT           equ	16289	;# 
 13791   003FA2                     T4CLKCON        equ	16290	;# 
 13792   003FA2                     T4CLK           equ	16290	;# 
 13793   003FA3                     T4RST           equ	16291	;# 
 13794   003FA4                     TMR3            equ	16292	;# 
 13795   003FA4                     TMR3L           equ	16292	;# 
 13796   003FA5                     TMR3H           equ	16293	;# 
 13797   003FA6                     T3CON           equ	16294	;# 
 13798   003FA6                     TMR3CON         equ	16294	;# 
 13799   003FA7                     T3GCON          equ	16295	;# 
 13800   003FA7                     TMR3GCON        equ	16295	;# 
 13801   003FA8                     T3GATE          equ	16296	;# 
 13802   003FA8                     TMR3GATE        equ	16296	;# 
 13803   003FA9                     T3CLK           equ	16297	;# 
 13804   003FA9                     TMR3CLK         equ	16297	;# 
 13805   003FA9                     PR3             equ	16297	;# 
 13806   003FAA                     T2TMR           equ	16298	;# 
 13807   003FAA                     TMR2            equ	16298	;# 
 13808   003FAB                     T2PR            equ	16299	;# 
 13809   003FAB                     PR2             equ	16299	;# 
 13810   003FAC                     T2CON           equ	16300	;# 
 13811   003FAD                     T2HLT           equ	16301	;# 
 13812   003FAE                     T2CLKCON        equ	16302	;# 
 13813   003FAE                     T2CLK           equ	16302	;# 
 13814   003FAF                     T2RST           equ	16303	;# 
 13815   003FB0                     TMR1            equ	16304	;# 
 13816   003FB0                     TMR1L           equ	16304	;# 
 13817   003FB1                     TMR1H           equ	16305	;# 
 13818   003FB2                     T1CON           equ	16306	;# 
 13819   003FB2                     TMR1CON         equ	16306	;# 
 13820   003FB3                     T1GCON          equ	16307	;# 
 13821   003FB3                     TMR1GCON        equ	16307	;# 
 13822   003FB4                     T1GATE          equ	16308	;# 
 13823   003FB4                     TMR1GATE        equ	16308	;# 
 13824   003FB5                     T1CLK           equ	16309	;# 
 13825   003FB5                     TMR1CLK         equ	16309	;# 
 13826   003FB5                     PR1             equ	16309	;# 
 13827   003FB6                     TMR0L           equ	16310	;# 
 13828   003FB6                     TMR0            equ	16310	;# 
 13829   003FB7                     TMR0H           equ	16311	;# 
 13830   003FB7                     PR0             equ	16311	;# 
 13831   003FB8                     T0CON0          equ	16312	;# 
 13832   003FB9                     T0CON1          equ	16313	;# 
 13833   003FBA                     LATA            equ	16314	;# 
 13834   003FBB                     LATB            equ	16315	;# 
 13835   003FBC                     LATC            equ	16316	;# 
 13836   003FBD                     LATD            equ	16317	;# 
 13837   003FBE                     LATE            equ	16318	;# 
 13838   003FBF                     LATF            equ	16319	;# 
 13839   003FC2                     TRISA           equ	16322	;# 
 13840   003FC3                     TRISB           equ	16323	;# 
 13841   003FC4                     TRISC           equ	16324	;# 
 13842   003FC5                     TRISD           equ	16325	;# 
 13843   003FC6                     TRISE           equ	16326	;# 
 13844   003FC7                     TRISF           equ	16327	;# 
 13845   003FCA                     PORTA           equ	16330	;# 
 13846   003FCB                     PORTB           equ	16331	;# 
 13847   003FCC                     PORTC           equ	16332	;# 
 13848   003FCD                     PORTD           equ	16333	;# 
 13849   003FCE                     PORTE           equ	16334	;# 
 13850   003FCF                     PORTF           equ	16335	;# 
 13851   003FD2                     INTCON0         equ	16338	;# 
 13852   003FD3                     INTCON1         equ	16339	;# 
 13853   003FD4                     IVTLOCK         equ	16340	;# 
 13854   003FD5                     IVTBASE         equ	16341	;# 
 13855   003FD5                     IVTBASEL        equ	16341	;# 
 13856   003FD6                     IVTBASEH        equ	16342	;# 
 13857   003FD7                     IVTBASEU        equ	16343	;# 
 13858   003FD8                     STATUS          equ	16344	;# 
 13859   003FD9                     FSR2            equ	16345	;# 
 13860   003FD9                     FSR2L           equ	16345	;# 
 13861   003FDA                     FSR2H           equ	16346	;# 
 13862   003FDB                     PLUSW2          equ	16347	;# 
 13863   003FDC                     PREINC2         equ	16348	;# 
 13864   003FDD                     POSTDEC2        equ	16349	;# 
 13865   003FDE                     POSTINC2        equ	16350	;# 
 13866   003FDF                     INDF2           equ	16351	;# 
 13867   003FE0                     BSR             equ	16352	;# 
 13868   003FE1                     FSR1            equ	16353	;# 
 13869   003FE1                     FSR1L           equ	16353	;# 
 13870   003FE2                     FSR1H           equ	16354	;# 
 13871   003FE3                     PLUSW1          equ	16355	;# 
 13872   003FE4                     PREINC1         equ	16356	;# 
 13873   003FE5                     POSTDEC1        equ	16357	;# 
 13874   003FE6                     POSTINC1        equ	16358	;# 
 13875   003FE7                     INDF1           equ	16359	;# 
 13876   003FE8                     WREG            equ	16360	;# 
 13877   003FE9                     FSR0            equ	16361	;# 
 13878   003FE9                     FSR0L           equ	16361	;# 
 13879   003FEA                     FSR0H           equ	16362	;# 
 13880   003FEB                     PLUSW0          equ	16363	;# 
 13881   003FEC                     PREINC0         equ	16364	;# 
 13882   003FED                     POSTDEC0        equ	16365	;# 
 13883   003FEE                     POSTINC0        equ	16366	;# 
 13884   003FEF                     INDF0           equ	16367	;# 
 13885   003FF0                     PCON0           equ	16368	;# 
 13886   003FF1                     PCON1           equ	16369	;# 
 13887   003FF3                     PROD            equ	16371	;# 
 13888   003FF3                     PRODL           equ	16371	;# 
 13889   003FF4                     PRODH           equ	16372	;# 
 13890   003FF5                     TABLAT          equ	16373	;# 
 13891   003FF6                     TBLPTR          equ	16374	;# 
 13892   003FF6                     TBLPTRL         equ	16374	;# 
 13893   003FF7                     TBLPTRH         equ	16375	;# 
 13894   003FF8                     TBLPTRU         equ	16376	;# 
 13895   003FF9                     PCLAT           equ	16377	;# 
 13896   003FF9                     PCL             equ	16377	;# 
 13897   003FFA                     PCLATH          equ	16378	;# 
 13898   003FFB                     PCLATU          equ	16379	;# 
 13899   003FFC                     STKPTR          equ	16380	;# 
 13900   003FFD                     TOS             equ	16381	;# 
 13901   003FFD                     TOSL            equ	16381	;# 
 13902   003FFE                     TOSH            equ	16382	;# 
 13903   003FFF                     TOSU            equ	16383	;# 
 13904   003880                     STATUS_CSHAD    equ	14464	;# 
 13905   003881                     WREG_CSHAD      equ	14465	;# 
 13906   003882                     BSR_CSHAD       equ	14466	;# 
 13907   003883                     SHADCON         equ	14467	;# 
 13908   003884                     STATUS_SHAD     equ	14468	;# 
 13909   003885                     WREG_SHAD       equ	14469	;# 
 13910   003886                     BSR_SHAD        equ	14470	;# 
 13911   003887                     PCLATH_SHAD     equ	14471	;# 
 13912   003888                     PCLATU_SHAD     equ	14472	;# 
 13913   003889                     FSR0SH          equ	14473	;# 
 13914   003889                     FSR0L_SHAD      equ	14473	;# 
 13915   00388A                     FSR0H_SHAD      equ	14474	;# 
 13916   00388B                     FSR1SH          equ	14475	;# 
 13917   00388B                     FSR1L_SHAD      equ	14475	;# 
 13918   00388C                     FSR1H_SHAD      equ	14476	;# 
 13919   00388D                     FSR2SH          equ	14477	;# 
 13920   00388D                     FSR2L_SHAD      equ	14477	;# 
 13921   00388E                     FSR2H_SHAD      equ	14478	;# 
 13922   00388F                     PRODSH          equ	14479	;# 
 13923   00388F                     PRODL_SHAD      equ	14479	;# 
 13924   003890                     PRODH_SHAD      equ	14480	;# 
 13925   00389D                     IVTADL          equ	14493	;# 
 13926   00389E                     IVTADH          equ	14494	;# 
 13927   00389F                     IVTADU          equ	14495	;# 
 13928   00395B                     WDTCON0         equ	14683	;# 
 13929   00395C                     WDTCON1         equ	14684	;# 
 13930   00395D                     WDTPSL          equ	14685	;# 
 13931   00395E                     WDTPSH          equ	14686	;# 
 13932   00395F                     WDTTMR          equ	14687	;# 
 13933   003960                     CRCDATA         equ	14688	;# 
 13934   003960                     CRCDATL         equ	14688	;# 
 13935   003961                     CRCDATH         equ	14689	;# 
 13936   003962                     CRCACC          equ	14690	;# 
 13937   003962                     CRCACCL         equ	14690	;# 
 13938   003963                     CRCACCH         equ	14691	;# 
 13939   003964                     CRCSHFT         equ	14692	;# 
 13940   003964                     CRCSHIFTL       equ	14692	;# 
 13941   003965                     CRCSHIFTH       equ	14693	;# 
 13942   003966                     CRCXOR          equ	14694	;# 
 13943   003966                     CRCXORL         equ	14694	;# 
 13944   003967                     CRCXORH         equ	14695	;# 
 13945   003968                     CRCCON0         equ	14696	;# 
 13946   003969                     CRCCON1         equ	14697	;# 
 13947   003976                     SCANLADR        equ	14710	;# 
 13948   003976                     SCANLADRL       equ	14710	;# 
 13949   003977                     SCANLADRH       equ	14711	;# 
 13950   003978                     SCANLADRU       equ	14712	;# 
 13951   003979                     SCANHADR        equ	14713	;# 
 13952   003979                     SCANHADRL       equ	14713	;# 
 13953   00397A                     SCANHADRH       equ	14714	;# 
 13954   00397B                     SCANHADRU       equ	14715	;# 
 13955   00397C                     SCANCON0        equ	14716	;# 
 13956   00397D                     SCANTRIG        equ	14717	;# 
 13957   003980                     IPR0            equ	14720	;# 
 13958   003981                     IPR1            equ	14721	;# 
 13959   003982                     IPR2            equ	14722	;# 
 13960   003983                     IPR3            equ	14723	;# 
 13961   003984                     IPR4            equ	14724	;# 
 13962   003985                     IPR5            equ	14725	;# 
 13963   003986                     IPR6            equ	14726	;# 
 13964   003987                     IPR7            equ	14727	;# 
 13965   003988                     IPR8            equ	14728	;# 
 13966   003989                     IPR9            equ	14729	;# 
 13967   00398A                     IPR10           equ	14730	;# 
 13968   003990                     PIE0            equ	14736	;# 
 13969   003991                     PIE1            equ	14737	;# 
 13970   003992                     PIE2            equ	14738	;# 
 13971   003993                     PIE3            equ	14739	;# 
 13972   003994                     PIE4            equ	14740	;# 
 13973   003995                     PIE5            equ	14741	;# 
 13974   003996                     PIE6            equ	14742	;# 
 13975   003997                     PIE7            equ	14743	;# 
 13976   003998                     PIE8            equ	14744	;# 
 13977   003999                     PIE9            equ	14745	;# 
 13978   00399A                     PIE10           equ	14746	;# 
 13979   0039A0                     PIR0            equ	14752	;# 
 13980   0039A1                     PIR1            equ	14753	;# 
 13981   0039A2                     PIR2            equ	14754	;# 
 13982   0039A3                     PIR3            equ	14755	;# 
 13983   0039A4                     PIR4            equ	14756	;# 
 13984   0039A5                     PIR5            equ	14757	;# 
 13985   0039A6                     PIR6            equ	14758	;# 
 13986   0039A7                     PIR7            equ	14759	;# 
 13987   0039A8                     PIR8            equ	14760	;# 
 13988   0039A9                     PIR9            equ	14761	;# 
 13989   0039AA                     PIR10           equ	14762	;# 
 13990   0039C0                     PMD0            equ	14784	;# 
 13991   0039C1                     PMD1            equ	14785	;# 
 13992   0039C2                     PMD2            equ	14786	;# 
 13993   0039C3                     PMD3            equ	14787	;# 
 13994   0039C4                     PMD4            equ	14788	;# 
 13995   0039C5                     PMD5            equ	14789	;# 
 13996   0039C6                     PMD6            equ	14790	;# 
 13997   0039C7                     PMD7            equ	14791	;# 
 13998   0039D0                     BORCON          equ	14800	;# 
 13999   0039D1                     VREGCON         equ	14801	;# 
 14000   0039D8                     CPUDOZE         equ	14808	;# 
 14001   0039D9                     OSCCON1         equ	14809	;# 
 14002   0039DA                     OSCCON2         equ	14810	;# 
 14003   0039DB                     OSCCON3         equ	14811	;# 
 14004   0039DC                     OSCSTAT         equ	14812	;# 
 14005   0039DC                     OSCSTAT1        equ	14812	;# 
 14006   0039DD                     OSCEN           equ	14813	;# 
 14007   0039DE                     OSCTUNE         equ	14814	;# 
 14008   0039DF                     OSCFRQ          equ	14815	;# 
 14009   0039E0                     NVMADRL         equ	14816	;# 
 14010   0039E1                     NVMADRH         equ	14817	;# 
 14011   0039E3                     NVMDAT          equ	14819	;# 
 14012   0039E5                     NVMCON1         equ	14821	;# 
 14013   0039E6                     NVMCON2         equ	14822	;# 
 14014   0039EF                     PRLOCK          equ	14831	;# 
 14015   0039F1                     ISRPR           equ	14833	;# 
 14016   0039F2                     MAINPR          equ	14834	;# 
 14017   0039F3                     DMA1PR          equ	14835	;# 
 14018   0039F4                     DMA2PR          equ	14836	;# 
 14019   0039F7                     SCANPR          equ	14839	;# 
 14020   003A00                     RA0PPS          equ	14848	;# 
 14021   003A01                     RA1PPS          equ	14849	;# 
 14022   003A02                     RA2PPS          equ	14850	;# 
 14023   003A03                     RA3PPS          equ	14851	;# 
 14024   003A04                     RA4PPS          equ	14852	;# 
 14025   003A05                     RA5PPS          equ	14853	;# 
 14026   003A06                     RA6PPS          equ	14854	;# 
 14027   003A07                     RA7PPS          equ	14855	;# 
 14028   003A08                     RB0PPS          equ	14856	;# 
 14029   003A09                     RB1PPS          equ	14857	;# 
 14030   003A0A                     RB2PPS          equ	14858	;# 
 14031   003A0B                     RB3PPS          equ	14859	;# 
 14032   003A0C                     RB4PPS          equ	14860	;# 
 14033   003A0D                     RB5PPS          equ	14861	;# 
 14034   003A0E                     RB6PPS          equ	14862	;# 
 14035   003A0F                     RB7PPS          equ	14863	;# 
 14036   003A10                     RC0PPS          equ	14864	;# 
 14037   003A11                     RC1PPS          equ	14865	;# 
 14038   003A12                     RC2PPS          equ	14866	;# 
 14039   003A13                     RC3PPS          equ	14867	;# 
 14040   003A14                     RC4PPS          equ	14868	;# 
 14041   003A15                     RC5PPS          equ	14869	;# 
 14042   003A16                     RC6PPS          equ	14870	;# 
 14043   003A17                     RC7PPS          equ	14871	;# 
 14044   003A18                     RD0PPS          equ	14872	;# 
 14045   003A19                     RD1PPS          equ	14873	;# 
 14046   003A1A                     RD2PPS          equ	14874	;# 
 14047   003A1B                     RD3PPS          equ	14875	;# 
 14048   003A1C                     RD4PPS          equ	14876	;# 
 14049   003A1D                     RD5PPS          equ	14877	;# 
 14050   003A1E                     RD6PPS          equ	14878	;# 
 14051   003A1F                     RD7PPS          equ	14879	;# 
 14052   003A20                     RE0PPS          equ	14880	;# 
 14053   003A21                     RE1PPS          equ	14881	;# 
 14054   003A22                     RE2PPS          equ	14882	;# 
 14055   003A28                     RF0PPS          equ	14888	;# 
 14056   003A29                     RF1PPS          equ	14889	;# 
 14057   003A2A                     RF2PPS          equ	14890	;# 
 14058   003A2B                     RF3PPS          equ	14891	;# 
 14059   003A2C                     RF4PPS          equ	14892	;# 
 14060   003A2D                     RF5PPS          equ	14893	;# 
 14061   003A2E                     RF6PPS          equ	14894	;# 
 14062   003A2F                     RF7PPS          equ	14895	;# 
 14063   003A40                     ANSELA          equ	14912	;# 
 14064   003A41                     WPUA            equ	14913	;# 
 14065   003A42                     ODCONA          equ	14914	;# 
 14066   003A43                     SLRCONA         equ	14915	;# 
 14067   003A44                     INLVLA          equ	14916	;# 
 14068   003A45                     IOCAP           equ	14917	;# 
 14069   003A46                     IOCAN           equ	14918	;# 
 14070   003A47                     IOCAF           equ	14919	;# 
 14071   003A50                     ANSELB          equ	14928	;# 
 14072   003A51                     WPUB            equ	14929	;# 
 14073   003A52                     ODCONB          equ	14930	;# 
 14074   003A53                     SLRCONB         equ	14931	;# 
 14075   003A54                     INLVLB          equ	14932	;# 
 14076   003A55                     IOCBP           equ	14933	;# 
 14077   003A56                     IOCBN           equ	14934	;# 
 14078   003A57                     IOCBF           equ	14935	;# 
 14079   003A5A                     RB1I2C          equ	14938	;# 
 14080   003A5B                     RB2I2C          equ	14939	;# 
 14081   003A60                     ANSELC          equ	14944	;# 
 14082   003A61                     WPUC            equ	14945	;# 
 14083   003A62                     ODCONC          equ	14946	;# 
 14084   003A63                     SLRCONC         equ	14947	;# 
 14085   003A64                     INLVLC          equ	14948	;# 
 14086   003A65                     IOCCP           equ	14949	;# 
 14087   003A66                     IOCCN           equ	14950	;# 
 14088   003A67                     IOCCF           equ	14951	;# 
 14089   003A6A                     RC3I2C          equ	14954	;# 
 14090   003A6B                     RC4I2C          equ	14955	;# 
 14091   003A70                     ANSELD          equ	14960	;# 
 14092   003A71                     WPUD            equ	14961	;# 
 14093   003A72                     ODCOND          equ	14962	;# 
 14094   003A73                     SLRCOND         equ	14963	;# 
 14095   003A74                     INLVLD          equ	14964	;# 
 14096   003A7A                     RD0I2C          equ	14970	;# 
 14097   003A7B                     RD1I2C          equ	14971	;# 
 14098   003A80                     ANSELE          equ	14976	;# 
 14099   003A81                     WPUE            equ	14977	;# 
 14100   003A82                     ODCONE          equ	14978	;# 
 14101   003A83                     SLRCONE         equ	14979	;# 
 14102   003A84                     INLVLE          equ	14980	;# 
 14103   003A85                     IOCEP           equ	14981	;# 
 14104   003A86                     IOCEN           equ	14982	;# 
 14105   003A87                     IOCEF           equ	14983	;# 
 14106   003A90                     ANSELF          equ	14992	;# 
 14107   003A91                     WPUF            equ	14993	;# 
 14108   003A92                     ODCONF          equ	14994	;# 
 14109   003A93                     SLRCONF         equ	14995	;# 
 14110   003A94                     INLVLF          equ	14996	;# 
 14111   003ABF                     PPSLOCK         equ	15039	;# 
 14112   003AC0                     INT0PPS         equ	15040	;# 
 14113   003AC1                     INT1PPS         equ	15041	;# 
 14114   003AC2                     INT2PPS         equ	15042	;# 
 14115   003AC3                     T0CKIPPS        equ	15043	;# 
 14116   003AC4                     T1CKIPPS        equ	15044	;# 
 14117   003AC5                     T1GPPS          equ	15045	;# 
 14118   003AC6                     T3CKIPPS        equ	15046	;# 
 14119   003AC7                     T3GPPS          equ	15047	;# 
 14120   003AC8                     T5CKIPPS        equ	15048	;# 
 14121   003AC9                     T5GPPS          equ	15049	;# 
 14122   003ACA                     T2INPPS         equ	15050	;# 
 14123   003ACB                     T4INPPS         equ	15051	;# 
 14124   003ACC                     T6INPPS         equ	15052	;# 
 14125   003ACD                     CCP1PPS         equ	15053	;# 
 14126   003ACE                     CCP2PPS         equ	15054	;# 
 14127   003ACF                     CCP3PPS         equ	15055	;# 
 14128   003AD0                     CCP4PPS         equ	15056	;# 
 14129   003AD1                     SMT1WINPPS      equ	15057	;# 
 14130   003AD2                     SMT1SIGPPS      equ	15058	;# 
 14131   003AD3                     CWG1INPPS       equ	15059	;# 
 14132   003AD4                     CWG2INPPS       equ	15060	;# 
 14133   003AD5                     CWG3INPPS       equ	15061	;# 
 14134   003AD6                     MD1CARLPPS      equ	15062	;# 
 14135   003AD7                     MD1CARHPPS      equ	15063	;# 
 14136   003AD8                     MD1SRCPPS       equ	15064	;# 
 14137   003AD9                     CLCIN0PPS       equ	15065	;# 
 14138   003ADA                     CLCIN1PPS       equ	15066	;# 
 14139   003ADB                     CLCIN2PPS       equ	15067	;# 
 14140   003ADC                     CLCIN3PPS       equ	15068	;# 
 14141   003ADD                     ADACTPPS        equ	15069	;# 
 14142   003ADE                     SPI1SCKPPS      equ	15070	;# 
 14143   003ADF                     SPI1SDIPPS      equ	15071	;# 
 14144   003AE0                     SPI1SSPPS       equ	15072	;# 
 14145   003AE1                     I2C1SCLPPS      equ	15073	;# 
 14146   003AE2                     I2C1SDAPPS      equ	15074	;# 
 14147   003AE3                     I2C2SCLPPS      equ	15075	;# 
 14148   003AE4                     I2C2SDAPPS      equ	15076	;# 
 14149   003AE5                     U1RXPPS         equ	15077	;# 
 14150   003AE6                     U1CTSPPS        equ	15078	;# 
 14151   003AE8                     U2RXPPS         equ	15080	;# 
 14152   003AE9                     U2CTSPPS        equ	15081	;# 
 14153   003BC9                     DMA2BUF         equ	15305	;# 
 14154   003BCA                     DMA2DCNT        equ	15306	;# 
 14155   003BCA                     DMA2DCNTL       equ	15306	;# 
 14156   003BCB                     DMA2DCNTH       equ	15307	;# 
 14157   003BCC                     DMA2DPTR        equ	15308	;# 
 14158   003BCC                     DMA2DPTRL       equ	15308	;# 
 14159   003BCD                     DMA2DPTRH       equ	15309	;# 
 14160   003BCE                     DMA2DSZ         equ	15310	;# 
 14161   003BCE                     DMA2DSZL        equ	15310	;# 
 14162   003BCF                     DMA2DSZH        equ	15311	;# 
 14163   003BD0                     DMA2DSA         equ	15312	;# 
 14164   003BD0                     DMA2DSAL        equ	15312	;# 
 14165   003BD1                     DMA2DSAH        equ	15313	;# 
 14166   003BD2                     DMA2SCNT        equ	15314	;# 
 14167   003BD2                     DMA2SCNTL       equ	15314	;# 
 14168   003BD3                     DMA2SCNTH       equ	15315	;# 
 14169   003BD4                     DMA2SPTR        equ	15316	;# 
 14170   003BD4                     DMA2SPTRL       equ	15316	;# 
 14171   003BD5                     DMA2SPTRH       equ	15317	;# 
 14172   003BD6                     DMA2SPTRU       equ	15318	;# 
 14173   003BD7                     DMA2SSZ         equ	15319	;# 
 14174   003BD7                     DMA2SSZL        equ	15319	;# 
 14175   003BD8                     DMA2SSZH        equ	15320	;# 
 14176   003BD9                     DMA2SSA         equ	15321	;# 
 14177   003BD9                     DMA2SSAL        equ	15321	;# 
 14178   003BDA                     DMA2SSAH        equ	15322	;# 
 14179   003BDB                     DMA2SSAU        equ	15323	;# 
 14180   003BDC                     DMA2CON0        equ	15324	;# 
 14181   003BDD                     DMA2CON1        equ	15325	;# 
 14182   003BDE                     DMA2AIRQ        equ	15326	;# 
 14183   003BDF                     DMA2SIRQ        equ	15327	;# 
 14184   003BE9                     DMA1BUF         equ	15337	;# 
 14185   003BEA                     DMA1DCNT        equ	15338	;# 
 14186   003BEA                     DMA1DCNTL       equ	15338	;# 
 14187   003BEB                     DMA1DCNTH       equ	15339	;# 
 14188   003BEC                     DMA1DPTR        equ	15340	;# 
 14189   003BEC                     DMA1DPTRL       equ	15340	;# 
 14190   003BED                     DMA1DPTRH       equ	15341	;# 
 14191   003BEE                     DMA1DSZ         equ	15342	;# 
 14192   003BEE                     DMA1DSZL        equ	15342	;# 
 14193   003BEF                     DMA1DSZH        equ	15343	;# 
 14194   003BF0                     DMA1DSA         equ	15344	;# 
 14195   003BF0                     DMA1DSAL        equ	15344	;# 
 14196   003BF1                     DMA1DSAH        equ	15345	;# 
 14197   003BF2                     DMA1SCNT        equ	15346	;# 
 14198   003BF2                     DMA1SCNTL       equ	15346	;# 
 14199   003BF3                     DMA1SCNTH       equ	15347	;# 
 14200   003BF4                     DMA1SPTR        equ	15348	;# 
 14201   003BF4                     DMA1SPTRL       equ	15348	;# 
 14202   003BF5                     DMA1SPTRH       equ	15349	;# 
 14203   003BF6                     DMA1SPTRU       equ	15350	;# 
 14204   003BF7                     DMA1SSZ         equ	15351	;# 
 14205   003BF7                     DMA1SSZL        equ	15351	;# 
 14206   003BF8                     DMA1SSZH        equ	15352	;# 
 14207   003BF9                     DMA1SSA         equ	15353	;# 
 14208   003BF9                     DMA1SSAL        equ	15353	;# 
 14209   003BFA                     DMA1SSAH        equ	15354	;# 
 14210   003BFB                     DMA1SSAU        equ	15355	;# 
 14211   003BFC                     DMA1CON0        equ	15356	;# 
 14212   003BFD                     DMA1CON1        equ	15357	;# 
 14213   003BFE                     DMA1AIRQ        equ	15358	;# 
 14214   003BFF                     DMA1SIRQ        equ	15359	;# 
 14215   003C56                     CLC4CON         equ	15446	;# 
 14216   003C57                     CLC4POL         equ	15447	;# 
 14217   003C58                     CLC4SEL0        equ	15448	;# 
 14218   003C59                     CLC4SEL1        equ	15449	;# 
 14219   003C5A                     CLC4SEL2        equ	15450	;# 
 14220   003C5B                     CLC4SEL3        equ	15451	;# 
 14221   003C5C                     CLC4GLS0        equ	15452	;# 
 14222   003C5D                     CLC4GLS1        equ	15453	;# 
 14223   003C5E                     CLC4GLS2        equ	15454	;# 
 14224   003C5F                     CLC4GLS3        equ	15455	;# 
 14225   003C60                     CLC3CON         equ	15456	;# 
 14226   003C61                     CLC3POL         equ	15457	;# 
 14227   003C62                     CLC3SEL0        equ	15458	;# 
 14228   003C63                     CLC3SEL1        equ	15459	;# 
 14229   003C64                     CLC3SEL2        equ	15460	;# 
 14230   003C65                     CLC3SEL3        equ	15461	;# 
 14231   003C66                     CLC3GLS0        equ	15462	;# 
 14232   003C67                     CLC3GLS1        equ	15463	;# 
 14233   003C68                     CLC3GLS2        equ	15464	;# 
 14234   003C69                     CLC3GLS3        equ	15465	;# 
 14235   003C6A                     CLC2CON         equ	15466	;# 
 14236   003C6B                     CLC2POL         equ	15467	;# 
 14237   003C6C                     CLC2SEL0        equ	15468	;# 
 14238   003C6D                     CLC2SEL1        equ	15469	;# 
 14239   003C6E                     CLC2SEL2        equ	15470	;# 
 14240   003C6F                     CLC2SEL3        equ	15471	;# 
 14241   003C70                     CLC2GLS0        equ	15472	;# 
 14242   003C71                     CLC2GLS1        equ	15473	;# 
 14243   003C72                     CLC2GLS2        equ	15474	;# 
 14244   003C73                     CLC2GLS3        equ	15475	;# 
 14245   003C74                     CLC1CON         equ	15476	;# 
 14246   003C75                     CLC1POL         equ	15477	;# 
 14247   003C76                     CLC1SEL0        equ	15478	;# 
 14248   003C77                     CLC1SEL1        equ	15479	;# 
 14249   003C78                     CLC1SEL2        equ	15480	;# 
 14250   003C79                     CLC1SEL3        equ	15481	;# 
 14251   003C7A                     CLC1GLS0        equ	15482	;# 
 14252   003C7B                     CLC1GLS1        equ	15483	;# 
 14253   003C7C                     CLC1GLS2        equ	15484	;# 
 14254   003C7D                     CLC1GLS3        equ	15485	;# 
 14255   003C7E                     CLCDATA0        equ	15486	;# 
 14256   003CE5                     CLKRCON         equ	15589	;# 
 14257   003CE6                     CLKRCLK         equ	15590	;# 
 14258   003CFA                     MD1CON0         equ	15610	;# 
 14259   003CFB                     MD1CON1         equ	15611	;# 
 14260   003CFC                     MD1SRC          equ	15612	;# 
 14261   003CFD                     MD1CARL         equ	15613	;# 
 14262   003CFE                     MD1CARH         equ	15614	;# 
 14263   003D10                     SPI1RXB         equ	15632	;# 
 14264   003D11                     SPI1TXB         equ	15633	;# 
 14265   003D12                     SPI1TCNT        equ	15634	;# 
 14266   003D12                     SPI1TCNTL       equ	15634	;# 
 14267   003D13                     SPI1TCNTH       equ	15635	;# 
 14268   003D14                     SPI1CON0        equ	15636	;# 
 14269   003D15                     SPI1CON1        equ	15637	;# 
 14270   003D16                     SPI1CON2        equ	15638	;# 
 14271   003D17                     SPI1STATUS      equ	15639	;# 
 14272   003D18                     SPI1TWIDTH      equ	15640	;# 
 14273   003D19                     SPI1BAUD        equ	15641	;# 
 14274   003D1A                     SPI1INTF        equ	15642	;# 
 14275   003D1B                     SPI1INTE        equ	15643	;# 
 14276   003D1C                     SPI1CLK         equ	15644	;# 
 14277   003D54                     I2C2RXB         equ	15700	;# 
 14278   003D55                     I2C2TXB         equ	15701	;# 
 14279   003D56                     I2C2CNT         equ	15702	;# 
 14280   003D57                     I2C2ADB0        equ	15703	;# 
 14281   003D58                     I2C2ADB1        equ	15704	;# 
 14282   003D59                     I2C2ADR0        equ	15705	;# 
 14283   003D5A                     I2C2ADR1        equ	15706	;# 
 14284   003D5B                     I2C2ADR2        equ	15707	;# 
 14285   003D5C                     I2C2ADR3        equ	15708	;# 
 14286   003D5D                     I2C2CON0        equ	15709	;# 
 14287   003D5E                     I2C2CON1        equ	15710	;# 
 14288   003D5F                     I2C2CON2        equ	15711	;# 
 14289   003D60                     I2C2ERR         equ	15712	;# 
 14290   003D61                     I2C2STAT0       equ	15713	;# 
 14291   003D62                     I2C2STAT1       equ	15714	;# 
 14292   003D63                     I2C2PIR         equ	15715	;# 
 14293   003D64                     I2C2PIE         equ	15716	;# 
 14294   003D65                     I2C2CLK         equ	15717	;# 
 14295   003D66                     I2C2BTO         equ	15718	;# 
 14296   003D6A                     I2C1RXB         equ	15722	;# 
 14297   003D6B                     I2C1TXB         equ	15723	;# 
 14298   003D6C                     I2C1CNT         equ	15724	;# 
 14299   003D6D                     I2C1ADB0        equ	15725	;# 
 14300   003D6E                     I2C1ADB1        equ	15726	;# 
 14301   003D6F                     I2C1ADR0        equ	15727	;# 
 14302   003D70                     I2C1ADR1        equ	15728	;# 
 14303   003D71                     I2C1ADR2        equ	15729	;# 
 14304   003D72                     I2C1ADR3        equ	15730	;# 
 14305   003D73                     I2C1CON0        equ	15731	;# 
 14306   003D74                     I2C1CON1        equ	15732	;# 
 14307   003D75                     I2C1CON2        equ	15733	;# 
 14308   003D76                     I2C1ERR         equ	15734	;# 
 14309   003D77                     I2C1STAT0       equ	15735	;# 
 14310   003D78                     I2C1STAT1       equ	15736	;# 
 14311   003D79                     I2C1PIR         equ	15737	;# 
 14312   003D7A                     I2C1PIE         equ	15738	;# 
 14313   003D7B                     I2C1CLK         equ	15739	;# 
 14314   003D7C                     I2C1BTO         equ	15740	;# 
 14315   003DD0                     U2RXB           equ	15824	;# 
 14316   003DD0                     U2RXBL          equ	15824	;# 
 14317   003DD2                     U2TXB           equ	15826	;# 
 14318   003DD2                     U2TXBL          equ	15826	;# 
 14319   003DD4                     U2P1            equ	15828	;# 
 14320   003DD4                     U2P1L           equ	15828	;# 
 14321   003DD6                     U2P2            equ	15830	;# 
 14322   003DD6                     U2P2L           equ	15830	;# 
 14323   003DD8                     U2P3            equ	15832	;# 
 14324   003DD8                     U2P3L           equ	15832	;# 
 14325   003DDA                     U2CON0          equ	15834	;# 
 14326   003DDB                     U2CON1          equ	15835	;# 
 14327   003DDC                     U2CON2          equ	15836	;# 
 14328   003DDD                     U2BRG           equ	15837	;# 
 14329   003DDD                     U2BRGL          equ	15837	;# 
 14330   003DDE                     U2BRGH          equ	15838	;# 
 14331   003DDF                     U2FIFO          equ	15839	;# 
 14332   003DE0                     U2UIR           equ	15840	;# 
 14333   003DE1                     U2ERRIR         equ	15841	;# 
 14334   003DE2                     U2ERRIE         equ	15842	;# 
 14335   003DE8                     U1RXB           equ	15848	;# 
 14336   003DE8                     U1RXBL          equ	15848	;# 
 14337   003DE9                     U1RXCHK         equ	15849	;# 
 14338   003DEA                     U1TXB           equ	15850	;# 
 14339   003DEA                     U1TXBL          equ	15850	;# 
 14340   003DEB                     U1TXCHK         equ	15851	;# 
 14341   003DEC                     U1P1            equ	15852	;# 
 14342   003DEC                     U1P1L           equ	15852	;# 
 14343   003DED                     U1P1H           equ	15853	;# 
 14344   003DEE                     U1P2            equ	15854	;# 
 14345   003DEE                     U1P2L           equ	15854	;# 
 14346   003DEF                     U1P2H           equ	15855	;# 
 14347   003DF0                     U1P3            equ	15856	;# 
 14348   003DF0                     U1P3L           equ	15856	;# 
 14349   003DF1                     U1P3H           equ	15857	;# 
 14350   003DF2                     U1CON0          equ	15858	;# 
 14351   003DF3                     U1CON1          equ	15859	;# 
 14352   003DF4                     U1CON2          equ	15860	;# 
 14353   003DF5                     U1BRG           equ	15861	;# 
 14354   003DF5                     U1BRGL          equ	15861	;# 
 14355   003DF6                     U1BRGH          equ	15862	;# 
 14356   003DF7                     U1FIFO          equ	15863	;# 
 14357   003DF8                     U1UIR           equ	15864	;# 
 14358   003DF9                     U1ERRIR         equ	15865	;# 
 14359   003DFA                     U1ERRIE         equ	15866	;# 
 14360   003E9C                     DAC1CON1        equ	16028	;# 
 14361   003E9E                     DAC1CON0        equ	16030	;# 
 14362   003EB8                     CM2CON0         equ	16056	;# 
 14363   003EB9                     CM2CON1         equ	16057	;# 
 14364   003EBA                     CM2NCH          equ	16058	;# 
 14365   003EBB                     CM2PCH          equ	16059	;# 
 14366   003EBC                     CM1CON0         equ	16060	;# 
 14367   003EBD                     CM1CON1         equ	16061	;# 
 14368   003EBE                     CM1NCH          equ	16062	;# 
 14369   003EBF                     CM1PCH          equ	16063	;# 
 14370   003EC0                     CMOUT           equ	16064	;# 
 14371   003EC1                     FVRCON          equ	16065	;# 
 14372   003EC3                     ZCDCON          equ	16067	;# 
 14373   003EC9                     HLVDCON0        equ	16073	;# 
 14374   003ECA                     HLVDCON1        equ	16074	;# 
 14375   003ED7                     ADCP            equ	16087	;# 
 14376   003EDE                     ADLTH           equ	16094	;# 
 14377   003EDE                     ADLTHL          equ	16094	;# 
 14378   003EDF                     ADLTHH          equ	16095	;# 
 14379   003EE0                     ADUTH           equ	16096	;# 
 14380   003EE0                     ADUTHL          equ	16096	;# 
 14381   003EE1                     ADUTHH          equ	16097	;# 
 14382   003EE2                     ADERR           equ	16098	;# 
 14383   003EE2                     ADERRL          equ	16098	;# 
 14384   003EE3                     ADERRH          equ	16099	;# 
 14385   003EE4                     ADSTPT          equ	16100	;# 
 14386   003EE4                     ADSTPTL         equ	16100	;# 
 14387   003EE5                     ADSTPTH         equ	16101	;# 
 14388   003EE6                     ADFLTR          equ	16102	;# 
 14389   003EE6                     ADFLTRL         equ	16102	;# 
 14390   003EE7                     ADFLTRH         equ	16103	;# 
 14391   003EE8                     ADACC           equ	16104	;# 
 14392   003EE8                     ADACCL          equ	16104	;# 
 14393   003EE9                     ADACCH          equ	16105	;# 
 14394   003EEA                     ADACCU          equ	16106	;# 
 14395   003EEB                     ADCNT           equ	16107	;# 
 14396   003EEC                     ADRPT           equ	16108	;# 
 14397   003EED                     ADPREV          equ	16109	;# 
 14398   003EED                     ADPREVL         equ	16109	;# 
 14399   003EEE                     ADPREVH         equ	16110	;# 
 14400   003EEF                     ADRES           equ	16111	;# 
 14401   003EEF                     ADRESL          equ	16111	;# 
 14402   003EF0                     ADRESH          equ	16112	;# 
 14403   003EF1                     ADPCH           equ	16113	;# 
 14404   003EF3                     ADACQ           equ	16115	;# 
 14405   003EF3                     ADACQL          equ	16115	;# 
 14406   003EF4                     ADACQH          equ	16116	;# 
 14407   003EF5                     ADCAP           equ	16117	;# 
 14408   003EF6                     ADPRE           equ	16118	;# 
 14409   003EF6                     ADPREL          equ	16118	;# 
 14410   003EF7                     ADPREH          equ	16119	;# 
 14411   003EF8                     ADCON0          equ	16120	;# 
 14412   003EF9                     ADCON1          equ	16121	;# 
 14413   003EFA                     ADCON2          equ	16122	;# 
 14414   003EFB                     ADCON3          equ	16123	;# 
 14415   003EFC                     ADSTAT          equ	16124	;# 
 14416   003EFD                     ADREF           equ	16125	;# 
 14417   003EFE                     ADACT           equ	16126	;# 
 14418   003EFF                     ADCLK           equ	16127	;# 
 14419   003F12                     SMT1TMR         equ	16146	;# 
 14420   003F12                     SMT1TMRL        equ	16146	;# 
 14421   003F13                     SMT1TMRH        equ	16147	;# 
 14422   003F14                     SMT1TMRU        equ	16148	;# 
 14423   003F15                     SMT1CPR         equ	16149	;# 
 14424   003F15                     SMT1CPRL        equ	16149	;# 
 14425   003F16                     SMT1CPRH        equ	16150	;# 
 14426   003F17                     SMT1CPRU        equ	16151	;# 
 14427   003F18                     SMT1CPW         equ	16152	;# 
 14428   003F18                     SMT1CPWL        equ	16152	;# 
 14429   003F19                     SMT1CPWH        equ	16153	;# 
 14430   003F1A                     SMT1CPWU        equ	16154	;# 
 14431   003F1B                     SMT1PR          equ	16155	;# 
 14432   003F1B                     SMT1PRL         equ	16155	;# 
 14433   003F1C                     SMT1PRH         equ	16156	;# 
 14434   003F1D                     SMT1PRU         equ	16157	;# 
 14435   003F1E                     SMT1CON0        equ	16158	;# 
 14436   003F1F                     SMT1CON1        equ	16159	;# 
 14437   003F20                     SMT1STAT        equ	16160	;# 
 14438   003F21                     SMT1CLK         equ	16161	;# 
 14439   003F22                     SMT1SIG         equ	16162	;# 
 14440   003F23                     SMT1WIN         equ	16163	;# 
 14441   003F38                     NCO1ACC         equ	16184	;# 
 14442   003F38                     NCO1ACCL        equ	16184	;# 
 14443   003F39                     NCO1ACCH        equ	16185	;# 
 14444   003F3A                     NCO1ACCU        equ	16186	;# 
 14445   003F3B                     NCO1INC         equ	16187	;# 
 14446   003F3B                     NCO1INCL        equ	16187	;# 
 14447   003F3C                     NCO1INCH        equ	16188	;# 
 14448   003F3D                     NCO1INCU        equ	16189	;# 
 14449   003F3E                     NCO1CON         equ	16190	;# 
 14450   003F3F                     NCO1CLK         equ	16191	;# 
 14451   003F40                     CWG3CLK         equ	16192	;# 
 14452   003F40                     CWG3CLKCON      equ	16192	;# 
 14453   003F41                     CWG3ISM         equ	16193	;# 
 14454   003F41                     CWG3DAT         equ	16193	;# 
 14455   003F42                     CWG3DBR         equ	16194	;# 
 14456   003F43                     CWG3DBF         equ	16195	;# 
 14457   003F44                     CWG3CON0        equ	16196	;# 
 14458   003F45                     CWG3CON1        equ	16197	;# 
 14459   003F46                     CWG3AS0         equ	16198	;# 
 14460   003F47                     CWG3AS1         equ	16199	;# 
 14461   003F48                     CWG3STR         equ	16200	;# 
 14462   003F49                     CWG2CLK         equ	16201	;# 
 14463   003F49                     CWG2CLKCON      equ	16201	;# 
 14464   003F4A                     CWG2ISM         equ	16202	;# 
 14465   003F4A                     CWG2DAT         equ	16202	;# 
 14466   003F4B                     CWG2DBR         equ	16203	;# 
 14467   003F4C                     CWG2DBF         equ	16204	;# 
 14468   003F4D                     CWG2CON0        equ	16205	;# 
 14469   003F4E                     CWG2CON1        equ	16206	;# 
 14470   003F4F                     CWG2AS0         equ	16207	;# 
 14471   003F50                     CWG2AS1         equ	16208	;# 
 14472   003F51                     CWG2STR         equ	16209	;# 
 14473   003F52                     CWG1CLK         equ	16210	;# 
 14474   003F52                     CWG1CLKCON      equ	16210	;# 
 14475   003F53                     CWG1ISM         equ	16211	;# 
 14476   003F53                     CWG1DAT         equ	16211	;# 
 14477   003F54                     CWG1DBR         equ	16212	;# 
 14478   003F55                     CWG1DBF         equ	16213	;# 
 14479   003F56                     CWG1CON0        equ	16214	;# 
 14480   003F57                     CWG1CON1        equ	16215	;# 
 14481   003F58                     CWG1AS0         equ	16216	;# 
 14482   003F59                     CWG1AS1         equ	16217	;# 
 14483   003F5A                     CWG1STR         equ	16218	;# 
 14484   003F5E                     CCPTMRS0        equ	16222	;# 
 14485   003F5F                     CCPTMRS1        equ	16223	;# 
 14486   003F60                     PWM8DC          equ	16224	;# 
 14487   003F60                     PWM8DCL         equ	16224	;# 
 14488   003F61                     PWM8DCH         equ	16225	;# 
 14489   003F62                     PWM8CON         equ	16226	;# 
 14490   003F64                     PWM7DC          equ	16228	;# 
 14491   003F64                     PWM7DCL         equ	16228	;# 
 14492   003F65                     PWM7DCH         equ	16229	;# 
 14493   003F66                     PWM7CON         equ	16230	;# 
 14494   003F68                     PWM6DC          equ	16232	;# 
 14495   003F68                     PWM6DCL         equ	16232	;# 
 14496   003F69                     PWM6DCH         equ	16233	;# 
 14497   003F6A                     PWM6CON         equ	16234	;# 
 14498   003F6C                     PWM5DC          equ	16236	;# 
 14499   003F6C                     PWM5DCL         equ	16236	;# 
 14500   003F6D                     PWM5DCH         equ	16237	;# 
 14501   003F6E                     PWM5CON         equ	16238	;# 
 14502   003F70                     CCPR4           equ	16240	;# 
 14503   003F70                     CCPR4L          equ	16240	;# 
 14504   003F71                     CCPR4H          equ	16241	;# 
 14505   003F72                     CCP4CON         equ	16242	;# 
 14506   003F73                     CCP4CAP         equ	16243	;# 
 14507   003F74                     CCPR3           equ	16244	;# 
 14508   003F74                     CCPR3L          equ	16244	;# 
 14509   003F75                     CCPR3H          equ	16245	;# 
 14510   003F76                     CCP3CON         equ	16246	;# 
 14511   003F77                     CCP3CAP         equ	16247	;# 
 14512   003F78                     CCPR2           equ	16248	;# 
 14513   003F78                     CCPR2L          equ	16248	;# 
 14514   003F79                     CCPR2H          equ	16249	;# 
 14515   003F7A                     CCP2CON         equ	16250	;# 
 14516   003F7B                     CCP2CAP         equ	16251	;# 
 14517   003F7C                     CCPR1           equ	16252	;# 
 14518   003F7C                     CCPR1L          equ	16252	;# 
 14519   003F7D                     CCPR1H          equ	16253	;# 
 14520   003F7E                     CCP1CON         equ	16254	;# 
 14521   003F7F                     CCP1CAP         equ	16255	;# 
 14522   003F92                     T6TMR           equ	16274	;# 
 14523   003F92                     TMR6            equ	16274	;# 
 14524   003F93                     T6PR            equ	16275	;# 
 14525   003F93                     PR6             equ	16275	;# 
 14526   003F94                     T6CON           equ	16276	;# 
 14527   003F95                     T6HLT           equ	16277	;# 
 14528   003F96                     T6CLKCON        equ	16278	;# 
 14529   003F96                     T6CLK           equ	16278	;# 
 14530   003F97                     T6RST           equ	16279	;# 
 14531   003F98                     TMR5            equ	16280	;# 
 14532   003F98                     TMR5L           equ	16280	;# 
 14533   003F99                     TMR5H           equ	16281	;# 
 14534   003F9A                     T5CON           equ	16282	;# 
 14535   003F9A                     TMR5CON         equ	16282	;# 
 14536   003F9B                     T5GCON          equ	16283	;# 
 14537   003F9B                     TMR5GCON        equ	16283	;# 
 14538   003F9C                     T5GATE          equ	16284	;# 
 14539   003F9C                     TMR5GATE        equ	16284	;# 
 14540   003F9D                     T5CLK           equ	16285	;# 
 14541   003F9D                     TMR5CLK         equ	16285	;# 
 14542   003F9D                     PR5             equ	16285	;# 
 14543   003F9E                     T4TMR           equ	16286	;# 
 14544   003F9E                     TMR4            equ	16286	;# 
 14545   003F9F                     T4PR            equ	16287	;# 
 14546   003F9F                     PR4             equ	16287	;# 
 14547   003FA0                     T4CON           equ	16288	;# 
 14548   003FA1                     T4HLT           equ	16289	;# 
 14549   003FA2                     T4CLKCON        equ	16290	;# 
 14550   003FA2                     T4CLK           equ	16290	;# 
 14551   003FA3                     T4RST           equ	16291	;# 
 14552   003FA4                     TMR3            equ	16292	;# 
 14553   003FA4                     TMR3L           equ	16292	;# 
 14554   003FA5                     TMR3H           equ	16293	;# 
 14555   003FA6                     T3CON           equ	16294	;# 
 14556   003FA6                     TMR3CON         equ	16294	;# 
 14557   003FA7                     T3GCON          equ	16295	;# 
 14558   003FA7                     TMR3GCON        equ	16295	;# 
 14559   003FA8                     T3GATE          equ	16296	;# 
 14560   003FA8                     TMR3GATE        equ	16296	;# 
 14561   003FA9                     T3CLK           equ	16297	;# 
 14562   003FA9                     TMR3CLK         equ	16297	;# 
 14563   003FA9                     PR3             equ	16297	;# 
 14564   003FAA                     T2TMR           equ	16298	;# 
 14565   003FAA                     TMR2            equ	16298	;# 
 14566   003FAB                     T2PR            equ	16299	;# 
 14567   003FAB                     PR2             equ	16299	;# 
 14568   003FAC                     T2CON           equ	16300	;# 
 14569   003FAD                     T2HLT           equ	16301	;# 
 14570   003FAE                     T2CLKCON        equ	16302	;# 
 14571   003FAE                     T2CLK           equ	16302	;# 
 14572   003FAF                     T2RST           equ	16303	;# 
 14573   003FB0                     TMR1            equ	16304	;# 
 14574   003FB0                     TMR1L           equ	16304	;# 
 14575   003FB1                     TMR1H           equ	16305	;# 
 14576   003FB2                     T1CON           equ	16306	;# 
 14577   003FB2                     TMR1CON         equ	16306	;# 
 14578   003FB3                     T1GCON          equ	16307	;# 
 14579   003FB3                     TMR1GCON        equ	16307	;# 
 14580   003FB4                     T1GATE          equ	16308	;# 
 14581   003FB4                     TMR1GATE        equ	16308	;# 
 14582   003FB5                     T1CLK           equ	16309	;# 
 14583   003FB5                     TMR1CLK         equ	16309	;# 
 14584   003FB5                     PR1             equ	16309	;# 
 14585   003FB6                     TMR0L           equ	16310	;# 
 14586   003FB6                     TMR0            equ	16310	;# 
 14587   003FB7                     TMR0H           equ	16311	;# 
 14588   003FB7                     PR0             equ	16311	;# 
 14589   003FB8                     T0CON0          equ	16312	;# 
 14590   003FB9                     T0CON1          equ	16313	;# 
 14591   003FBA                     LATA            equ	16314	;# 
 14592   003FBB                     LATB            equ	16315	;# 
 14593   003FBC                     LATC            equ	16316	;# 
 14594   003FBD                     LATD            equ	16317	;# 
 14595   003FBE                     LATE            equ	16318	;# 
 14596   003FBF                     LATF            equ	16319	;# 
 14597   003FC2                     TRISA           equ	16322	;# 
 14598   003FC3                     TRISB           equ	16323	;# 
 14599   003FC4                     TRISC           equ	16324	;# 
 14600   003FC5                     TRISD           equ	16325	;# 
 14601   003FC6                     TRISE           equ	16326	;# 
 14602   003FC7                     TRISF           equ	16327	;# 
 14603   003FCA                     PORTA           equ	16330	;# 
 14604   003FCB                     PORTB           equ	16331	;# 
 14605   003FCC                     PORTC           equ	16332	;# 
 14606   003FCD                     PORTD           equ	16333	;# 
 14607   003FCE                     PORTE           equ	16334	;# 
 14608   003FCF                     PORTF           equ	16335	;# 
 14609   003FD2                     INTCON0         equ	16338	;# 
 14610   003FD3                     INTCON1         equ	16339	;# 
 14611   003FD4                     IVTLOCK         equ	16340	;# 
 14612   003FD5                     IVTBASE         equ	16341	;# 
 14613   003FD5                     IVTBASEL        equ	16341	;# 
 14614   003FD6                     IVTBASEH        equ	16342	;# 
 14615   003FD7                     IVTBASEU        equ	16343	;# 
 14616   003FD8                     STATUS          equ	16344	;# 
 14617   003FD9                     FSR2            equ	16345	;# 
 14618   003FD9                     FSR2L           equ	16345	;# 
 14619   003FDA                     FSR2H           equ	16346	;# 
 14620   003FDB                     PLUSW2          equ	16347	;# 
 14621   003FDC                     PREINC2         equ	16348	;# 
 14622   003FDD                     POSTDEC2        equ	16349	;# 
 14623   003FDE                     POSTINC2        equ	16350	;# 
 14624   003FDF                     INDF2           equ	16351	;# 
 14625   003FE0                     BSR             equ	16352	;# 
 14626   003FE1                     FSR1            equ	16353	;# 
 14627   003FE1                     FSR1L           equ	16353	;# 
 14628   003FE2                     FSR1H           equ	16354	;# 
 14629   003FE3                     PLUSW1          equ	16355	;# 
 14630   003FE4                     PREINC1         equ	16356	;# 
 14631   003FE5                     POSTDEC1        equ	16357	;# 
 14632   003FE6                     POSTINC1        equ	16358	;# 
 14633   003FE7                     INDF1           equ	16359	;# 
 14634   003FE8                     WREG            equ	16360	;# 
 14635   003FE9                     FSR0            equ	16361	;# 
 14636   003FE9                     FSR0L           equ	16361	;# 
 14637   003FEA                     FSR0H           equ	16362	;# 
 14638   003FEB                     PLUSW0          equ	16363	;# 
 14639   003FEC                     PREINC0         equ	16364	;# 
 14640   003FED                     POSTDEC0        equ	16365	;# 
 14641   003FEE                     POSTINC0        equ	16366	;# 
 14642   003FEF                     INDF0           equ	16367	;# 
 14643   003FF0                     PCON0           equ	16368	;# 
 14644   003FF1                     PCON1           equ	16369	;# 
 14645   003FF3                     PROD            equ	16371	;# 
 14646   003FF3                     PRODL           equ	16371	;# 
 14647   003FF4                     PRODH           equ	16372	;# 
 14648   003FF5                     TABLAT          equ	16373	;# 
 14649   003FF6                     TBLPTR          equ	16374	;# 
 14650   003FF6                     TBLPTRL         equ	16374	;# 
 14651   003FF7                     TBLPTRH         equ	16375	;# 
 14652   003FF8                     TBLPTRU         equ	16376	;# 
 14653   003FF9                     PCLAT           equ	16377	;# 
 14654   003FF9                     PCL             equ	16377	;# 
 14655   003FFA                     PCLATH          equ	16378	;# 
 14656   003FFB                     PCLATU          equ	16379	;# 
 14657   003FFC                     STKPTR          equ	16380	;# 
 14658   003FFD                     TOS             equ	16381	;# 
 14659   003FFD                     TOSL            equ	16381	;# 
 14660   003FFE                     TOSH            equ	16382	;# 
 14661   003FFF                     TOSU            equ	16383	;# 
 14662   003880                     STATUS_CSHAD    equ	14464	;# 
 14663   003881                     WREG_CSHAD      equ	14465	;# 
 14664   003882                     BSR_CSHAD       equ	14466	;# 
 14665   003883                     SHADCON         equ	14467	;# 
 14666   003884                     STATUS_SHAD     equ	14468	;# 
 14667   003885                     WREG_SHAD       equ	14469	;# 
 14668   003886                     BSR_SHAD        equ	14470	;# 
 14669   003887                     PCLATH_SHAD     equ	14471	;# 
 14670   003888                     PCLATU_SHAD     equ	14472	;# 
 14671   003889                     FSR0SH          equ	14473	;# 
 14672   003889                     FSR0L_SHAD      equ	14473	;# 
 14673   00388A                     FSR0H_SHAD      equ	14474	;# 
 14674   00388B                     FSR1SH          equ	14475	;# 
 14675   00388B                     FSR1L_SHAD      equ	14475	;# 
 14676   00388C                     FSR1H_SHAD      equ	14476	;# 
 14677   00388D                     FSR2SH          equ	14477	;# 
 14678   00388D                     FSR2L_SHAD      equ	14477	;# 
 14679   00388E                     FSR2H_SHAD      equ	14478	;# 
 14680   00388F                     PRODSH          equ	14479	;# 
 14681   00388F                     PRODL_SHAD      equ	14479	;# 
 14682   003890                     PRODH_SHAD      equ	14480	;# 
 14683   00389D                     IVTADL          equ	14493	;# 
 14684   00389E                     IVTADH          equ	14494	;# 
 14685   00389F                     IVTADU          equ	14495	;# 
 14686   00395B                     WDTCON0         equ	14683	;# 
 14687   00395C                     WDTCON1         equ	14684	;# 
 14688   00395D                     WDTPSL          equ	14685	;# 
 14689   00395E                     WDTPSH          equ	14686	;# 
 14690   00395F                     WDTTMR          equ	14687	;# 
 14691   003960                     CRCDATA         equ	14688	;# 
 14692   003960                     CRCDATL         equ	14688	;# 
 14693   003961                     CRCDATH         equ	14689	;# 
 14694   003962                     CRCACC          equ	14690	;# 
 14695   003962                     CRCACCL         equ	14690	;# 
 14696   003963                     CRCACCH         equ	14691	;# 
 14697   003964                     CRCSHFT         equ	14692	;# 
 14698   003964                     CRCSHIFTL       equ	14692	;# 
 14699   003965                     CRCSHIFTH       equ	14693	;# 
 14700   003966                     CRCXOR          equ	14694	;# 
 14701   003966                     CRCXORL         equ	14694	;# 
 14702   003967                     CRCXORH         equ	14695	;# 
 14703   003968                     CRCCON0         equ	14696	;# 
 14704   003969                     CRCCON1         equ	14697	;# 
 14705   003976                     SCANLADR        equ	14710	;# 
 14706   003976                     SCANLADRL       equ	14710	;# 
 14707   003977                     SCANLADRH       equ	14711	;# 
 14708   003978                     SCANLADRU       equ	14712	;# 
 14709   003979                     SCANHADR        equ	14713	;# 
 14710   003979                     SCANHADRL       equ	14713	;# 
 14711   00397A                     SCANHADRH       equ	14714	;# 
 14712   00397B                     SCANHADRU       equ	14715	;# 
 14713   00397C                     SCANCON0        equ	14716	;# 
 14714   00397D                     SCANTRIG        equ	14717	;# 
 14715   003980                     IPR0            equ	14720	;# 
 14716   003981                     IPR1            equ	14721	;# 
 14717   003982                     IPR2            equ	14722	;# 
 14718   003983                     IPR3            equ	14723	;# 
 14719   003984                     IPR4            equ	14724	;# 
 14720   003985                     IPR5            equ	14725	;# 
 14721   003986                     IPR6            equ	14726	;# 
 14722   003987                     IPR7            equ	14727	;# 
 14723   003988                     IPR8            equ	14728	;# 
 14724   003989                     IPR9            equ	14729	;# 
 14725   00398A                     IPR10           equ	14730	;# 
 14726   003990                     PIE0            equ	14736	;# 
 14727   003991                     PIE1            equ	14737	;# 
 14728   003992                     PIE2            equ	14738	;# 
 14729   003993                     PIE3            equ	14739	;# 
 14730   003994                     PIE4            equ	14740	;# 
 14731   003995                     PIE5            equ	14741	;# 
 14732   003996                     PIE6            equ	14742	;# 
 14733   003997                     PIE7            equ	14743	;# 
 14734   003998                     PIE8            equ	14744	;# 
 14735   003999                     PIE9            equ	14745	;# 
 14736   00399A                     PIE10           equ	14746	;# 
 14737   0039A0                     PIR0            equ	14752	;# 
 14738   0039A1                     PIR1            equ	14753	;# 
 14739   0039A2                     PIR2            equ	14754	;# 
 14740   0039A3                     PIR3            equ	14755	;# 
 14741   0039A4                     PIR4            equ	14756	;# 
 14742   0039A5                     PIR5            equ	14757	;# 
 14743   0039A6                     PIR6            equ	14758	;# 
 14744   0039A7                     PIR7            equ	14759	;# 
 14745   0039A8                     PIR8            equ	14760	;# 
 14746   0039A9                     PIR9            equ	14761	;# 
 14747   0039AA                     PIR10           equ	14762	;# 
 14748   0039C0                     PMD0            equ	14784	;# 
 14749   0039C1                     PMD1            equ	14785	;# 
 14750   0039C2                     PMD2            equ	14786	;# 
 14751   0039C3                     PMD3            equ	14787	;# 
 14752   0039C4                     PMD4            equ	14788	;# 
 14753   0039C5                     PMD5            equ	14789	;# 
 14754   0039C6                     PMD6            equ	14790	;# 
 14755   0039C7                     PMD7            equ	14791	;# 
 14756   0039D0                     BORCON          equ	14800	;# 
 14757   0039D1                     VREGCON         equ	14801	;# 
 14758   0039D8                     CPUDOZE         equ	14808	;# 
 14759   0039D9                     OSCCON1         equ	14809	;# 
 14760   0039DA                     OSCCON2         equ	14810	;# 
 14761   0039DB                     OSCCON3         equ	14811	;# 
 14762   0039DC                     OSCSTAT         equ	14812	;# 
 14763   0039DC                     OSCSTAT1        equ	14812	;# 
 14764   0039DD                     OSCEN           equ	14813	;# 
 14765   0039DE                     OSCTUNE         equ	14814	;# 
 14766   0039DF                     OSCFRQ          equ	14815	;# 
 14767   0039E0                     NVMADRL         equ	14816	;# 
 14768   0039E1                     NVMADRH         equ	14817	;# 
 14769   0039E3                     NVMDAT          equ	14819	;# 
 14770   0039E5                     NVMCON1         equ	14821	;# 
 14771   0039E6                     NVMCON2         equ	14822	;# 
 14772   0039EF                     PRLOCK          equ	14831	;# 
 14773   0039F1                     ISRPR           equ	14833	;# 
 14774   0039F2                     MAINPR          equ	14834	;# 
 14775   0039F3                     DMA1PR          equ	14835	;# 
 14776   0039F4                     DMA2PR          equ	14836	;# 
 14777   0039F7                     SCANPR          equ	14839	;# 
 14778   003A00                     RA0PPS          equ	14848	;# 
 14779   003A01                     RA1PPS          equ	14849	;# 
 14780   003A02                     RA2PPS          equ	14850	;# 
 14781   003A03                     RA3PPS          equ	14851	;# 
 14782   003A04                     RA4PPS          equ	14852	;# 
 14783   003A05                     RA5PPS          equ	14853	;# 
 14784   003A06                     RA6PPS          equ	14854	;# 
 14785   003A07                     RA7PPS          equ	14855	;# 
 14786   003A08                     RB0PPS          equ	14856	;# 
 14787   003A09                     RB1PPS          equ	14857	;# 
 14788   003A0A                     RB2PPS          equ	14858	;# 
 14789   003A0B                     RB3PPS          equ	14859	;# 
 14790   003A0C                     RB4PPS          equ	14860	;# 
 14791   003A0D                     RB5PPS          equ	14861	;# 
 14792   003A0E                     RB6PPS          equ	14862	;# 
 14793   003A0F                     RB7PPS          equ	14863	;# 
 14794   003A10                     RC0PPS          equ	14864	;# 
 14795   003A11                     RC1PPS          equ	14865	;# 
 14796   003A12                     RC2PPS          equ	14866	;# 
 14797   003A13                     RC3PPS          equ	14867	;# 
 14798   003A14                     RC4PPS          equ	14868	;# 
 14799   003A15                     RC5PPS          equ	14869	;# 
 14800   003A16                     RC6PPS          equ	14870	;# 
 14801   003A17                     RC7PPS          equ	14871	;# 
 14802   003A18                     RD0PPS          equ	14872	;# 
 14803   003A19                     RD1PPS          equ	14873	;# 
 14804   003A1A                     RD2PPS          equ	14874	;# 
 14805   003A1B                     RD3PPS          equ	14875	;# 
 14806   003A1C                     RD4PPS          equ	14876	;# 
 14807   003A1D                     RD5PPS          equ	14877	;# 
 14808   003A1E                     RD6PPS          equ	14878	;# 
 14809   003A1F                     RD7PPS          equ	14879	;# 
 14810   003A20                     RE0PPS          equ	14880	;# 
 14811   003A21                     RE1PPS          equ	14881	;# 
 14812   003A22                     RE2PPS          equ	14882	;# 
 14813   003A28                     RF0PPS          equ	14888	;# 
 14814   003A29                     RF1PPS          equ	14889	;# 
 14815   003A2A                     RF2PPS          equ	14890	;# 
 14816   003A2B                     RF3PPS          equ	14891	;# 
 14817   003A2C                     RF4PPS          equ	14892	;# 
 14818   003A2D                     RF5PPS          equ	14893	;# 
 14819   003A2E                     RF6PPS          equ	14894	;# 
 14820   003A2F                     RF7PPS          equ	14895	;# 
 14821   003A40                     ANSELA          equ	14912	;# 
 14822   003A41                     WPUA            equ	14913	;# 
 14823   003A42                     ODCONA          equ	14914	;# 
 14824   003A43                     SLRCONA         equ	14915	;# 
 14825   003A44                     INLVLA          equ	14916	;# 
 14826   003A45                     IOCAP           equ	14917	;# 
 14827   003A46                     IOCAN           equ	14918	;# 
 14828   003A47                     IOCAF           equ	14919	;# 
 14829   003A50                     ANSELB          equ	14928	;# 
 14830   003A51                     WPUB            equ	14929	;# 
 14831   003A52                     ODCONB          equ	14930	;# 
 14832   003A53                     SLRCONB         equ	14931	;# 
 14833   003A54                     INLVLB          equ	14932	;# 
 14834   003A55                     IOCBP           equ	14933	;# 
 14835   003A56                     IOCBN           equ	14934	;# 
 14836   003A57                     IOCBF           equ	14935	;# 
 14837   003A5A                     RB1I2C          equ	14938	;# 
 14838   003A5B                     RB2I2C          equ	14939	;# 
 14839   003A60                     ANSELC          equ	14944	;# 
 14840   003A61                     WPUC            equ	14945	;# 
 14841   003A62                     ODCONC          equ	14946	;# 
 14842   003A63                     SLRCONC         equ	14947	;# 
 14843   003A64                     INLVLC          equ	14948	;# 
 14844   003A65                     IOCCP           equ	14949	;# 
 14845   003A66                     IOCCN           equ	14950	;# 
 14846   003A67                     IOCCF           equ	14951	;# 
 14847   003A6A                     RC3I2C          equ	14954	;# 
 14848   003A6B                     RC4I2C          equ	14955	;# 
 14849   003A70                     ANSELD          equ	14960	;# 
 14850   003A71                     WPUD            equ	14961	;# 
 14851   003A72                     ODCOND          equ	14962	;# 
 14852   003A73                     SLRCOND         equ	14963	;# 
 14853   003A74                     INLVLD          equ	14964	;# 
 14854   003A7A                     RD0I2C          equ	14970	;# 
 14855   003A7B                     RD1I2C          equ	14971	;# 
 14856   003A80                     ANSELE          equ	14976	;# 
 14857   003A81                     WPUE            equ	14977	;# 
 14858   003A82                     ODCONE          equ	14978	;# 
 14859   003A83                     SLRCONE         equ	14979	;# 
 14860   003A84                     INLVLE          equ	14980	;# 
 14861   003A85                     IOCEP           equ	14981	;# 
 14862   003A86                     IOCEN           equ	14982	;# 
 14863   003A87                     IOCEF           equ	14983	;# 
 14864   003A90                     ANSELF          equ	14992	;# 
 14865   003A91                     WPUF            equ	14993	;# 
 14866   003A92                     ODCONF          equ	14994	;# 
 14867   003A93                     SLRCONF         equ	14995	;# 
 14868   003A94                     INLVLF          equ	14996	;# 
 14869   003ABF                     PPSLOCK         equ	15039	;# 
 14870   003AC0                     INT0PPS         equ	15040	;# 
 14871   003AC1                     INT1PPS         equ	15041	;# 
 14872   003AC2                     INT2PPS         equ	15042	;# 
 14873   003AC3                     T0CKIPPS        equ	15043	;# 
 14874   003AC4                     T1CKIPPS        equ	15044	;# 
 14875   003AC5                     T1GPPS          equ	15045	;# 
 14876   003AC6                     T3CKIPPS        equ	15046	;# 
 14877   003AC7                     T3GPPS          equ	15047	;# 
 14878   003AC8                     T5CKIPPS        equ	15048	;# 
 14879   003AC9                     T5GPPS          equ	15049	;# 
 14880   003ACA                     T2INPPS         equ	15050	;# 
 14881   003ACB                     T4INPPS         equ	15051	;# 
 14882   003ACC                     T6INPPS         equ	15052	;# 
 14883   003ACD                     CCP1PPS         equ	15053	;# 
 14884   003ACE                     CCP2PPS         equ	15054	;# 
 14885   003ACF                     CCP3PPS         equ	15055	;# 
 14886   003AD0                     CCP4PPS         equ	15056	;# 
 14887   003AD1                     SMT1WINPPS      equ	15057	;# 
 14888   003AD2                     SMT1SIGPPS      equ	15058	;# 
 14889   003AD3                     CWG1INPPS       equ	15059	;# 
 14890   003AD4                     CWG2INPPS       equ	15060	;# 
 14891   003AD5                     CWG3INPPS       equ	15061	;# 
 14892   003AD6                     MD1CARLPPS      equ	15062	;# 
 14893   003AD7                     MD1CARHPPS      equ	15063	;# 
 14894   003AD8                     MD1SRCPPS       equ	15064	;# 
 14895   003AD9                     CLCIN0PPS       equ	15065	;# 
 14896   003ADA                     CLCIN1PPS       equ	15066	;# 
 14897   003ADB                     CLCIN2PPS       equ	15067	;# 
 14898   003ADC                     CLCIN3PPS       equ	15068	;# 
 14899   003ADD                     ADACTPPS        equ	15069	;# 
 14900   003ADE                     SPI1SCKPPS      equ	15070	;# 
 14901   003ADF                     SPI1SDIPPS      equ	15071	;# 
 14902   003AE0                     SPI1SSPPS       equ	15072	;# 
 14903   003AE1                     I2C1SCLPPS      equ	15073	;# 
 14904   003AE2                     I2C1SDAPPS      equ	15074	;# 
 14905   003AE3                     I2C2SCLPPS      equ	15075	;# 
 14906   003AE4                     I2C2SDAPPS      equ	15076	;# 
 14907   003AE5                     U1RXPPS         equ	15077	;# 
 14908   003AE6                     U1CTSPPS        equ	15078	;# 
 14909   003AE8                     U2RXPPS         equ	15080	;# 
 14910   003AE9                     U2CTSPPS        equ	15081	;# 
 14911   003BC9                     DMA2BUF         equ	15305	;# 
 14912   003BCA                     DMA2DCNT        equ	15306	;# 
 14913   003BCA                     DMA2DCNTL       equ	15306	;# 
 14914   003BCB                     DMA2DCNTH       equ	15307	;# 
 14915   003BCC                     DMA2DPTR        equ	15308	;# 
 14916   003BCC                     DMA2DPTRL       equ	15308	;# 
 14917   003BCD                     DMA2DPTRH       equ	15309	;# 
 14918   003BCE                     DMA2DSZ         equ	15310	;# 
 14919   003BCE                     DMA2DSZL        equ	15310	;# 
 14920   003BCF                     DMA2DSZH        equ	15311	;# 
 14921   003BD0                     DMA2DSA         equ	15312	;# 
 14922   003BD0                     DMA2DSAL        equ	15312	;# 
 14923   003BD1                     DMA2DSAH        equ	15313	;# 
 14924   003BD2                     DMA2SCNT        equ	15314	;# 
 14925   003BD2                     DMA2SCNTL       equ	15314	;# 
 14926   003BD3                     DMA2SCNTH       equ	15315	;# 
 14927   003BD4                     DMA2SPTR        equ	15316	;# 
 14928   003BD4                     DMA2SPTRL       equ	15316	;# 
 14929   003BD5                     DMA2SPTRH       equ	15317	;# 
 14930   003BD6                     DMA2SPTRU       equ	15318	;# 
 14931   003BD7                     DMA2SSZ         equ	15319	;# 
 14932   003BD7                     DMA2SSZL        equ	15319	;# 
 14933   003BD8                     DMA2SSZH        equ	15320	;# 
 14934   003BD9                     DMA2SSA         equ	15321	;# 
 14935   003BD9                     DMA2SSAL        equ	15321	;# 
 14936   003BDA                     DMA2SSAH        equ	15322	;# 
 14937   003BDB                     DMA2SSAU        equ	15323	;# 
 14938   003BDC                     DMA2CON0        equ	15324	;# 
 14939   003BDD                     DMA2CON1        equ	15325	;# 
 14940   003BDE                     DMA2AIRQ        equ	15326	;# 
 14941   003BDF                     DMA2SIRQ        equ	15327	;# 
 14942   003BE9                     DMA1BUF         equ	15337	;# 
 14943   003BEA                     DMA1DCNT        equ	15338	;# 
 14944   003BEA                     DMA1DCNTL       equ	15338	;# 
 14945   003BEB                     DMA1DCNTH       equ	15339	;# 
 14946   003BEC                     DMA1DPTR        equ	15340	;# 
 14947   003BEC                     DMA1DPTRL       equ	15340	;# 
 14948   003BED                     DMA1DPTRH       equ	15341	;# 
 14949   003BEE                     DMA1DSZ         equ	15342	;# 
 14950   003BEE                     DMA1DSZL        equ	15342	;# 
 14951   003BEF                     DMA1DSZH        equ	15343	;# 
 14952   003BF0                     DMA1DSA         equ	15344	;# 
 14953   003BF0                     DMA1DSAL        equ	15344	;# 
 14954   003BF1                     DMA1DSAH        equ	15345	;# 
 14955   003BF2                     DMA1SCNT        equ	15346	;# 
 14956   003BF2                     DMA1SCNTL       equ	15346	;# 
 14957   003BF3                     DMA1SCNTH       equ	15347	;# 
 14958   003BF4                     DMA1SPTR        equ	15348	;# 
 14959   003BF4                     DMA1SPTRL       equ	15348	;# 
 14960   003BF5                     DMA1SPTRH       equ	15349	;# 
 14961   003BF6                     DMA1SPTRU       equ	15350	;# 
 14962   003BF7                     DMA1SSZ         equ	15351	;# 
 14963   003BF7                     DMA1SSZL        equ	15351	;# 
 14964   003BF8                     DMA1SSZH        equ	15352	;# 
 14965   003BF9                     DMA1SSA         equ	15353	;# 
 14966   003BF9                     DMA1SSAL        equ	15353	;# 
 14967   003BFA                     DMA1SSAH        equ	15354	;# 
 14968   003BFB                     DMA1SSAU        equ	15355	;# 
 14969   003BFC                     DMA1CON0        equ	15356	;# 
 14970   003BFD                     DMA1CON1        equ	15357	;# 
 14971   003BFE                     DMA1AIRQ        equ	15358	;# 
 14972   003BFF                     DMA1SIRQ        equ	15359	;# 
 14973   003C56                     CLC4CON         equ	15446	;# 
 14974   003C57                     CLC4POL         equ	15447	;# 
 14975   003C58                     CLC4SEL0        equ	15448	;# 
 14976   003C59                     CLC4SEL1        equ	15449	;# 
 14977   003C5A                     CLC4SEL2        equ	15450	;# 
 14978   003C5B                     CLC4SEL3        equ	15451	;# 
 14979   003C5C                     CLC4GLS0        equ	15452	;# 
 14980   003C5D                     CLC4GLS1        equ	15453	;# 
 14981   003C5E                     CLC4GLS2        equ	15454	;# 
 14982   003C5F                     CLC4GLS3        equ	15455	;# 
 14983   003C60                     CLC3CON         equ	15456	;# 
 14984   003C61                     CLC3POL         equ	15457	;# 
 14985   003C62                     CLC3SEL0        equ	15458	;# 
 14986   003C63                     CLC3SEL1        equ	15459	;# 
 14987   003C64                     CLC3SEL2        equ	15460	;# 
 14988   003C65                     CLC3SEL3        equ	15461	;# 
 14989   003C66                     CLC3GLS0        equ	15462	;# 
 14990   003C67                     CLC3GLS1        equ	15463	;# 
 14991   003C68                     CLC3GLS2        equ	15464	;# 
 14992   003C69                     CLC3GLS3        equ	15465	;# 
 14993   003C6A                     CLC2CON         equ	15466	;# 
 14994   003C6B                     CLC2POL         equ	15467	;# 
 14995   003C6C                     CLC2SEL0        equ	15468	;# 
 14996   003C6D                     CLC2SEL1        equ	15469	;# 
 14997   003C6E                     CLC2SEL2        equ	15470	;# 
 14998   003C6F                     CLC2SEL3        equ	15471	;# 
 14999   003C70                     CLC2GLS0        equ	15472	;# 
 15000   003C71                     CLC2GLS1        equ	15473	;# 
 15001   003C72                     CLC2GLS2        equ	15474	;# 
 15002   003C73                     CLC2GLS3        equ	15475	;# 
 15003   003C74                     CLC1CON         equ	15476	;# 
 15004   003C75                     CLC1POL         equ	15477	;# 
 15005   003C76                     CLC1SEL0        equ	15478	;# 
 15006   003C77                     CLC1SEL1        equ	15479	;# 
 15007   003C78                     CLC1SEL2        equ	15480	;# 
 15008   003C79                     CLC1SEL3        equ	15481	;# 
 15009   003C7A                     CLC1GLS0        equ	15482	;# 
 15010   003C7B                     CLC1GLS1        equ	15483	;# 
 15011   003C7C                     CLC1GLS2        equ	15484	;# 
 15012   003C7D                     CLC1GLS3        equ	15485	;# 
 15013   003C7E                     CLCDATA0        equ	15486	;# 
 15014   003CE5                     CLKRCON         equ	15589	;# 
 15015   003CE6                     CLKRCLK         equ	15590	;# 
 15016   003CFA                     MD1CON0         equ	15610	;# 
 15017   003CFB                     MD1CON1         equ	15611	;# 
 15018   003CFC                     MD1SRC          equ	15612	;# 
 15019   003CFD                     MD1CARL         equ	15613	;# 
 15020   003CFE                     MD1CARH         equ	15614	;# 
 15021   003D10                     SPI1RXB         equ	15632	;# 
 15022   003D11                     SPI1TXB         equ	15633	;# 
 15023   003D12                     SPI1TCNT        equ	15634	;# 
 15024   003D12                     SPI1TCNTL       equ	15634	;# 
 15025   003D13                     SPI1TCNTH       equ	15635	;# 
 15026   003D14                     SPI1CON0        equ	15636	;# 
 15027   003D15                     SPI1CON1        equ	15637	;# 
 15028   003D16                     SPI1CON2        equ	15638	;# 
 15029   003D17                     SPI1STATUS      equ	15639	;# 
 15030   003D18                     SPI1TWIDTH      equ	15640	;# 
 15031   003D19                     SPI1BAUD        equ	15641	;# 
 15032   003D1A                     SPI1INTF        equ	15642	;# 
 15033   003D1B                     SPI1INTE        equ	15643	;# 
 15034   003D1C                     SPI1CLK         equ	15644	;# 
 15035   003D54                     I2C2RXB         equ	15700	;# 
 15036   003D55                     I2C2TXB         equ	15701	;# 
 15037   003D56                     I2C2CNT         equ	15702	;# 
 15038   003D57                     I2C2ADB0        equ	15703	;# 
 15039   003D58                     I2C2ADB1        equ	15704	;# 
 15040   003D59                     I2C2ADR0        equ	15705	;# 
 15041   003D5A                     I2C2ADR1        equ	15706	;# 
 15042   003D5B                     I2C2ADR2        equ	15707	;# 
 15043   003D5C                     I2C2ADR3        equ	15708	;# 
 15044   003D5D                     I2C2CON0        equ	15709	;# 
 15045   003D5E                     I2C2CON1        equ	15710	;# 
 15046   003D5F                     I2C2CON2        equ	15711	;# 
 15047   003D60                     I2C2ERR         equ	15712	;# 
 15048   003D61                     I2C2STAT0       equ	15713	;# 
 15049   003D62                     I2C2STAT1       equ	15714	;# 
 15050   003D63                     I2C2PIR         equ	15715	;# 
 15051   003D64                     I2C2PIE         equ	15716	;# 
 15052   003D65                     I2C2CLK         equ	15717	;# 
 15053   003D66                     I2C2BTO         equ	15718	;# 
 15054   003D6A                     I2C1RXB         equ	15722	;# 
 15055   003D6B                     I2C1TXB         equ	15723	;# 
 15056   003D6C                     I2C1CNT         equ	15724	;# 
 15057   003D6D                     I2C1ADB0        equ	15725	;# 
 15058   003D6E                     I2C1ADB1        equ	15726	;# 
 15059   003D6F                     I2C1ADR0        equ	15727	;# 
 15060   003D70                     I2C1ADR1        equ	15728	;# 
 15061   003D71                     I2C1ADR2        equ	15729	;# 
 15062   003D72                     I2C1ADR3        equ	15730	;# 
 15063   003D73                     I2C1CON0        equ	15731	;# 
 15064   003D74                     I2C1CON1        equ	15732	;# 
 15065   003D75                     I2C1CON2        equ	15733	;# 
 15066   003D76                     I2C1ERR         equ	15734	;# 
 15067   003D77                     I2C1STAT0       equ	15735	;# 
 15068   003D78                     I2C1STAT1       equ	15736	;# 
 15069   003D79                     I2C1PIR         equ	15737	;# 
 15070   003D7A                     I2C1PIE         equ	15738	;# 
 15071   003D7B                     I2C1CLK         equ	15739	;# 
 15072   003D7C                     I2C1BTO         equ	15740	;# 
 15073   003DD0                     U2RXB           equ	15824	;# 
 15074   003DD0                     U2RXBL          equ	15824	;# 
 15075   003DD2                     U2TXB           equ	15826	;# 
 15076   003DD2                     U2TXBL          equ	15826	;# 
 15077   003DD4                     U2P1            equ	15828	;# 
 15078   003DD4                     U2P1L           equ	15828	;# 
 15079   003DD6                     U2P2            equ	15830	;# 
 15080   003DD6                     U2P2L           equ	15830	;# 
 15081   003DD8                     U2P3            equ	15832	;# 
 15082   003DD8                     U2P3L           equ	15832	;# 
 15083   003DDA                     U2CON0          equ	15834	;# 
 15084   003DDB                     U2CON1          equ	15835	;# 
 15085   003DDC                     U2CON2          equ	15836	;# 
 15086   003DDD                     U2BRG           equ	15837	;# 
 15087   003DDD                     U2BRGL          equ	15837	;# 
 15088   003DDE                     U2BRGH          equ	15838	;# 
 15089   003DDF                     U2FIFO          equ	15839	;# 
 15090   003DE0                     U2UIR           equ	15840	;# 
 15091   003DE1                     U2ERRIR         equ	15841	;# 
 15092   003DE2                     U2ERRIE         equ	15842	;# 
 15093   003DE8                     U1RXB           equ	15848	;# 
 15094   003DE8                     U1RXBL          equ	15848	;# 
 15095   003DE9                     U1RXCHK         equ	15849	;# 
 15096   003DEA                     U1TXB           equ	15850	;# 
 15097   003DEA                     U1TXBL          equ	15850	;# 
 15098   003DEB                     U1TXCHK         equ	15851	;# 
 15099   003DEC                     U1P1            equ	15852	;# 
 15100   003DEC                     U1P1L           equ	15852	;# 
 15101   003DED                     U1P1H           equ	15853	;# 
 15102   003DEE                     U1P2            equ	15854	;# 
 15103   003DEE                     U1P2L           equ	15854	;# 
 15104   003DEF                     U1P2H           equ	15855	;# 
 15105   003DF0                     U1P3            equ	15856	;# 
 15106   003DF0                     U1P3L           equ	15856	;# 
 15107   003DF1                     U1P3H           equ	15857	;# 
 15108   003DF2                     U1CON0          equ	15858	;# 
 15109   003DF3                     U1CON1          equ	15859	;# 
 15110   003DF4                     U1CON2          equ	15860	;# 
 15111   003DF5                     U1BRG           equ	15861	;# 
 15112   003DF5                     U1BRGL          equ	15861	;# 
 15113   003DF6                     U1BRGH          equ	15862	;# 
 15114   003DF7                     U1FIFO          equ	15863	;# 
 15115   003DF8                     U1UIR           equ	15864	;# 
 15116   003DF9                     U1ERRIR         equ	15865	;# 
 15117   003DFA                     U1ERRIE         equ	15866	;# 
 15118   003E9C                     DAC1CON1        equ	16028	;# 
 15119   003E9E                     DAC1CON0        equ	16030	;# 
 15120   003EB8                     CM2CON0         equ	16056	;# 
 15121   003EB9                     CM2CON1         equ	16057	;# 
 15122   003EBA                     CM2NCH          equ	16058	;# 
 15123   003EBB                     CM2PCH          equ	16059	;# 
 15124   003EBC                     CM1CON0         equ	16060	;# 
 15125   003EBD                     CM1CON1         equ	16061	;# 
 15126   003EBE                     CM1NCH          equ	16062	;# 
 15127   003EBF                     CM1PCH          equ	16063	;# 
 15128   003EC0                     CMOUT           equ	16064	;# 
 15129   003EC1                     FVRCON          equ	16065	;# 
 15130   003EC3                     ZCDCON          equ	16067	;# 
 15131   003EC9                     HLVDCON0        equ	16073	;# 
 15132   003ECA                     HLVDCON1        equ	16074	;# 
 15133   003ED7                     ADCP            equ	16087	;# 
 15134   003EDE                     ADLTH           equ	16094	;# 
 15135   003EDE                     ADLTHL          equ	16094	;# 
 15136   003EDF                     ADLTHH          equ	16095	;# 
 15137   003EE0                     ADUTH           equ	16096	;# 
 15138   003EE0                     ADUTHL          equ	16096	;# 
 15139   003EE1                     ADUTHH          equ	16097	;# 
 15140   003EE2                     ADERR           equ	16098	;# 
 15141   003EE2                     ADERRL          equ	16098	;# 
 15142   003EE3                     ADERRH          equ	16099	;# 
 15143   003EE4                     ADSTPT          equ	16100	;# 
 15144   003EE4                     ADSTPTL         equ	16100	;# 
 15145   003EE5                     ADSTPTH         equ	16101	;# 
 15146   003EE6                     ADFLTR          equ	16102	;# 
 15147   003EE6                     ADFLTRL         equ	16102	;# 
 15148   003EE7                     ADFLTRH         equ	16103	;# 
 15149   003EE8                     ADACC           equ	16104	;# 
 15150   003EE8                     ADACCL          equ	16104	;# 
 15151   003EE9                     ADACCH          equ	16105	;# 
 15152   003EEA                     ADACCU          equ	16106	;# 
 15153   003EEB                     ADCNT           equ	16107	;# 
 15154   003EEC                     ADRPT           equ	16108	;# 
 15155   003EED                     ADPREV          equ	16109	;# 
 15156   003EED                     ADPREVL         equ	16109	;# 
 15157   003EEE                     ADPREVH         equ	16110	;# 
 15158   003EEF                     ADRES           equ	16111	;# 
 15159   003EEF                     ADRESL          equ	16111	;# 
 15160   003EF0                     ADRESH          equ	16112	;# 
 15161   003EF1                     ADPCH           equ	16113	;# 
 15162   003EF3                     ADACQ           equ	16115	;# 
 15163   003EF3                     ADACQL          equ	16115	;# 
 15164   003EF4                     ADACQH          equ	16116	;# 
 15165   003EF5                     ADCAP           equ	16117	;# 
 15166   003EF6                     ADPRE           equ	16118	;# 
 15167   003EF6                     ADPREL          equ	16118	;# 
 15168   003EF7                     ADPREH          equ	16119	;# 
 15169   003EF8                     ADCON0          equ	16120	;# 
 15170   003EF9                     ADCON1          equ	16121	;# 
 15171   003EFA                     ADCON2          equ	16122	;# 
 15172   003EFB                     ADCON3          equ	16123	;# 
 15173   003EFC                     ADSTAT          equ	16124	;# 
 15174   003EFD                     ADREF           equ	16125	;# 
 15175   003EFE                     ADACT           equ	16126	;# 
 15176   003EFF                     ADCLK           equ	16127	;# 
 15177   003F12                     SMT1TMR         equ	16146	;# 
 15178   003F12                     SMT1TMRL        equ	16146	;# 
 15179   003F13                     SMT1TMRH        equ	16147	;# 
 15180   003F14                     SMT1TMRU        equ	16148	;# 
 15181   003F15                     SMT1CPR         equ	16149	;# 
 15182   003F15                     SMT1CPRL        equ	16149	;# 
 15183   003F16                     SMT1CPRH        equ	16150	;# 
 15184   003F17                     SMT1CPRU        equ	16151	;# 
 15185   003F18                     SMT1CPW         equ	16152	;# 
 15186   003F18                     SMT1CPWL        equ	16152	;# 
 15187   003F19                     SMT1CPWH        equ	16153	;# 
 15188   003F1A                     SMT1CPWU        equ	16154	;# 
 15189   003F1B                     SMT1PR          equ	16155	;# 
 15190   003F1B                     SMT1PRL         equ	16155	;# 
 15191   003F1C                     SMT1PRH         equ	16156	;# 
 15192   003F1D                     SMT1PRU         equ	16157	;# 
 15193   003F1E                     SMT1CON0        equ	16158	;# 
 15194   003F1F                     SMT1CON1        equ	16159	;# 
 15195   003F20                     SMT1STAT        equ	16160	;# 
 15196   003F21                     SMT1CLK         equ	16161	;# 
 15197   003F22                     SMT1SIG         equ	16162	;# 
 15198   003F23                     SMT1WIN         equ	16163	;# 
 15199   003F38                     NCO1ACC         equ	16184	;# 
 15200   003F38                     NCO1ACCL        equ	16184	;# 
 15201   003F39                     NCO1ACCH        equ	16185	;# 
 15202   003F3A                     NCO1ACCU        equ	16186	;# 
 15203   003F3B                     NCO1INC         equ	16187	;# 
 15204   003F3B                     NCO1INCL        equ	16187	;# 
 15205   003F3C                     NCO1INCH        equ	16188	;# 
 15206   003F3D                     NCO1INCU        equ	16189	;# 
 15207   003F3E                     NCO1CON         equ	16190	;# 
 15208   003F3F                     NCO1CLK         equ	16191	;# 
 15209   003F40                     CWG3CLK         equ	16192	;# 
 15210   003F40                     CWG3CLKCON      equ	16192	;# 
 15211   003F41                     CWG3ISM         equ	16193	;# 
 15212   003F41                     CWG3DAT         equ	16193	;# 
 15213   003F42                     CWG3DBR         equ	16194	;# 
 15214   003F43                     CWG3DBF         equ	16195	;# 
 15215   003F44                     CWG3CON0        equ	16196	;# 
 15216   003F45                     CWG3CON1        equ	16197	;# 
 15217   003F46                     CWG3AS0         equ	16198	;# 
 15218   003F47                     CWG3AS1         equ	16199	;# 
 15219   003F48                     CWG3STR         equ	16200	;# 
 15220   003F49                     CWG2CLK         equ	16201	;# 
 15221   003F49                     CWG2CLKCON      equ	16201	;# 
 15222   003F4A                     CWG2ISM         equ	16202	;# 
 15223   003F4A                     CWG2DAT         equ	16202	;# 
 15224   003F4B                     CWG2DBR         equ	16203	;# 
 15225   003F4C                     CWG2DBF         equ	16204	;# 
 15226   003F4D                     CWG2CON0        equ	16205	;# 
 15227   003F4E                     CWG2CON1        equ	16206	;# 
 15228   003F4F                     CWG2AS0         equ	16207	;# 
 15229   003F50                     CWG2AS1         equ	16208	;# 
 15230   003F51                     CWG2STR         equ	16209	;# 
 15231   003F52                     CWG1CLK         equ	16210	;# 
 15232   003F52                     CWG1CLKCON      equ	16210	;# 
 15233   003F53                     CWG1ISM         equ	16211	;# 
 15234   003F53                     CWG1DAT         equ	16211	;# 
 15235   003F54                     CWG1DBR         equ	16212	;# 
 15236   003F55                     CWG1DBF         equ	16213	;# 
 15237   003F56                     CWG1CON0        equ	16214	;# 
 15238   003F57                     CWG1CON1        equ	16215	;# 
 15239   003F58                     CWG1AS0         equ	16216	;# 
 15240   003F59                     CWG1AS1         equ	16217	;# 
 15241   003F5A                     CWG1STR         equ	16218	;# 
 15242   003F5E                     CCPTMRS0        equ	16222	;# 
 15243   003F5F                     CCPTMRS1        equ	16223	;# 
 15244   003F60                     PWM8DC          equ	16224	;# 
 15245   003F60                     PWM8DCL         equ	16224	;# 
 15246   003F61                     PWM8DCH         equ	16225	;# 
 15247   003F62                     PWM8CON         equ	16226	;# 
 15248   003F64                     PWM7DC          equ	16228	;# 
 15249   003F64                     PWM7DCL         equ	16228	;# 
 15250   003F65                     PWM7DCH         equ	16229	;# 
 15251   003F66                     PWM7CON         equ	16230	;# 
 15252   003F68                     PWM6DC          equ	16232	;# 
 15253   003F68                     PWM6DCL         equ	16232	;# 
 15254   003F69                     PWM6DCH         equ	16233	;# 
 15255   003F6A                     PWM6CON         equ	16234	;# 
 15256   003F6C                     PWM5DC          equ	16236	;# 
 15257   003F6C                     PWM5DCL         equ	16236	;# 
 15258   003F6D                     PWM5DCH         equ	16237	;# 
 15259   003F6E                     PWM5CON         equ	16238	;# 
 15260   003F70                     CCPR4           equ	16240	;# 
 15261   003F70                     CCPR4L          equ	16240	;# 
 15262   003F71                     CCPR4H          equ	16241	;# 
 15263   003F72                     CCP4CON         equ	16242	;# 
 15264   003F73                     CCP4CAP         equ	16243	;# 
 15265   003F74                     CCPR3           equ	16244	;# 
 15266   003F74                     CCPR3L          equ	16244	;# 
 15267   003F75                     CCPR3H          equ	16245	;# 
 15268   003F76                     CCP3CON         equ	16246	;# 
 15269   003F77                     CCP3CAP         equ	16247	;# 
 15270   003F78                     CCPR2           equ	16248	;# 
 15271   003F78                     CCPR2L          equ	16248	;# 
 15272   003F79                     CCPR2H          equ	16249	;# 
 15273   003F7A                     CCP2CON         equ	16250	;# 
 15274   003F7B                     CCP2CAP         equ	16251	;# 
 15275   003F7C                     CCPR1           equ	16252	;# 
 15276   003F7C                     CCPR1L          equ	16252	;# 
 15277   003F7D                     CCPR1H          equ	16253	;# 
 15278   003F7E                     CCP1CON         equ	16254	;# 
 15279   003F7F                     CCP1CAP         equ	16255	;# 
 15280   003F92                     T6TMR           equ	16274	;# 
 15281   003F92                     TMR6            equ	16274	;# 
 15282   003F93                     T6PR            equ	16275	;# 
 15283   003F93                     PR6             equ	16275	;# 
 15284   003F94                     T6CON           equ	16276	;# 
 15285   003F95                     T6HLT           equ	16277	;# 
 15286   003F96                     T6CLKCON        equ	16278	;# 
 15287   003F96                     T6CLK           equ	16278	;# 
 15288   003F97                     T6RST           equ	16279	;# 
 15289   003F98                     TMR5            equ	16280	;# 
 15290   003F98                     TMR5L           equ	16280	;# 
 15291   003F99                     TMR5H           equ	16281	;# 
 15292   003F9A                     T5CON           equ	16282	;# 
 15293   003F9A                     TMR5CON         equ	16282	;# 
 15294   003F9B                     T5GCON          equ	16283	;# 
 15295   003F9B                     TMR5GCON        equ	16283	;# 
 15296   003F9C                     T5GATE          equ	16284	;# 
 15297   003F9C                     TMR5GATE        equ	16284	;# 
 15298   003F9D                     T5CLK           equ	16285	;# 
 15299   003F9D                     TMR5CLK         equ	16285	;# 
 15300   003F9D                     PR5             equ	16285	;# 
 15301   003F9E                     T4TMR           equ	16286	;# 
 15302   003F9E                     TMR4            equ	16286	;# 
 15303   003F9F                     T4PR            equ	16287	;# 
 15304   003F9F                     PR4             equ	16287	;# 
 15305   003FA0                     T4CON           equ	16288	;# 
 15306   003FA1                     T4HLT           equ	16289	;# 
 15307   003FA2                     T4CLKCON        equ	16290	;# 
 15308   003FA2                     T4CLK           equ	16290	;# 
 15309   003FA3                     T4RST           equ	16291	;# 
 15310   003FA4                     TMR3            equ	16292	;# 
 15311   003FA4                     TMR3L           equ	16292	;# 
 15312   003FA5                     TMR3H           equ	16293	;# 
 15313   003FA6                     T3CON           equ	16294	;# 
 15314   003FA6                     TMR3CON         equ	16294	;# 
 15315   003FA7                     T3GCON          equ	16295	;# 
 15316   003FA7                     TMR3GCON        equ	16295	;# 
 15317   003FA8                     T3GATE          equ	16296	;# 
 15318   003FA8                     TMR3GATE        equ	16296	;# 
 15319   003FA9                     T3CLK           equ	16297	;# 
 15320   003FA9                     TMR3CLK         equ	16297	;# 
 15321   003FA9                     PR3             equ	16297	;# 
 15322   003FAA                     T2TMR           equ	16298	;# 
 15323   003FAA                     TMR2            equ	16298	;# 
 15324   003FAB                     T2PR            equ	16299	;# 
 15325   003FAB                     PR2             equ	16299	;# 
 15326   003FAC                     T2CON           equ	16300	;# 
 15327   003FAD                     T2HLT           equ	16301	;# 
 15328   003FAE                     T2CLKCON        equ	16302	;# 
 15329   003FAE                     T2CLK           equ	16302	;# 
 15330   003FAF                     T2RST           equ	16303	;# 
 15331   003FB0                     TMR1            equ	16304	;# 
 15332   003FB0                     TMR1L           equ	16304	;# 
 15333   003FB1                     TMR1H           equ	16305	;# 
 15334   003FB2                     T1CON           equ	16306	;# 
 15335   003FB2                     TMR1CON         equ	16306	;# 
 15336   003FB3                     T1GCON          equ	16307	;# 
 15337   003FB3                     TMR1GCON        equ	16307	;# 
 15338   003FB4                     T1GATE          equ	16308	;# 
 15339   003FB4                     TMR1GATE        equ	16308	;# 
 15340   003FB5                     T1CLK           equ	16309	;# 
 15341   003FB5                     TMR1CLK         equ	16309	;# 
 15342   003FB5                     PR1             equ	16309	;# 
 15343   003FB6                     TMR0L           equ	16310	;# 
 15344   003FB6                     TMR0            equ	16310	;# 
 15345   003FB7                     TMR0H           equ	16311	;# 
 15346   003FB7                     PR0             equ	16311	;# 
 15347   003FB8                     T0CON0          equ	16312	;# 
 15348   003FB9                     T0CON1          equ	16313	;# 
 15349   003FBA                     LATA            equ	16314	;# 
 15350   003FBB                     LATB            equ	16315	;# 
 15351   003FBC                     LATC            equ	16316	;# 
 15352   003FBD                     LATD            equ	16317	;# 
 15353   003FBE                     LATE            equ	16318	;# 
 15354   003FBF                     LATF            equ	16319	;# 
 15355   003FC2                     TRISA           equ	16322	;# 
 15356   003FC3                     TRISB           equ	16323	;# 
 15357   003FC4                     TRISC           equ	16324	;# 
 15358   003FC5                     TRISD           equ	16325	;# 
 15359   003FC6                     TRISE           equ	16326	;# 
 15360   003FC7                     TRISF           equ	16327	;# 
 15361   003FCA                     PORTA           equ	16330	;# 
 15362   003FCB                     PORTB           equ	16331	;# 
 15363   003FCC                     PORTC           equ	16332	;# 
 15364   003FCD                     PORTD           equ	16333	;# 
 15365   003FCE                     PORTE           equ	16334	;# 
 15366   003FCF                     PORTF           equ	16335	;# 
 15367   003FD2                     INTCON0         equ	16338	;# 
 15368   003FD3                     INTCON1         equ	16339	;# 
 15369   003FD4                     IVTLOCK         equ	16340	;# 
 15370   003FD5                     IVTBASE         equ	16341	;# 
 15371   003FD5                     IVTBASEL        equ	16341	;# 
 15372   003FD6                     IVTBASEH        equ	16342	;# 
 15373   003FD7                     IVTBASEU        equ	16343	;# 
 15374   003FD8                     STATUS          equ	16344	;# 
 15375   003FD9                     FSR2            equ	16345	;# 
 15376   003FD9                     FSR2L           equ	16345	;# 
 15377   003FDA                     FSR2H           equ	16346	;# 
 15378   003FDB                     PLUSW2          equ	16347	;# 
 15379   003FDC                     PREINC2         equ	16348	;# 
 15380   003FDD                     POSTDEC2        equ	16349	;# 
 15381   003FDE                     POSTINC2        equ	16350	;# 
 15382   003FDF                     INDF2           equ	16351	;# 
 15383   003FE0                     BSR             equ	16352	;# 
 15384   003FE1                     FSR1            equ	16353	;# 
 15385   003FE1                     FSR1L           equ	16353	;# 
 15386   003FE2                     FSR1H           equ	16354	;# 
 15387   003FE3                     PLUSW1          equ	16355	;# 
 15388   003FE4                     PREINC1         equ	16356	;# 
 15389   003FE5                     POSTDEC1        equ	16357	;# 
 15390   003FE6                     POSTINC1        equ	16358	;# 
 15391   003FE7                     INDF1           equ	16359	;# 
 15392   003FE8                     WREG            equ	16360	;# 
 15393   003FE9                     FSR0            equ	16361	;# 
 15394   003FE9                     FSR0L           equ	16361	;# 
 15395   003FEA                     FSR0H           equ	16362	;# 
 15396   003FEB                     PLUSW0          equ	16363	;# 
 15397   003FEC                     PREINC0         equ	16364	;# 
 15398   003FED                     POSTDEC0        equ	16365	;# 
 15399   003FEE                     POSTINC0        equ	16366	;# 
 15400   003FEF                     INDF0           equ	16367	;# 
 15401   003FF0                     PCON0           equ	16368	;# 
 15402   003FF1                     PCON1           equ	16369	;# 
 15403   003FF3                     PROD            equ	16371	;# 
 15404   003FF3                     PRODL           equ	16371	;# 
 15405   003FF4                     PRODH           equ	16372	;# 
 15406   003FF5                     TABLAT          equ	16373	;# 
 15407   003FF6                     TBLPTR          equ	16374	;# 
 15408   003FF6                     TBLPTRL         equ	16374	;# 
 15409   003FF7                     TBLPTRH         equ	16375	;# 
 15410   003FF8                     TBLPTRU         equ	16376	;# 
 15411   003FF9                     PCLAT           equ	16377	;# 
 15412   003FF9                     PCL             equ	16377	;# 
 15413   003FFA                     PCLATH          equ	16378	;# 
 15414   003FFB                     PCLATU          equ	16379	;# 
 15415   003FFC                     STKPTR          equ	16380	;# 
 15416   003FFD                     TOS             equ	16381	;# 
 15417   003FFD                     TOSL            equ	16381	;# 
 15418   003FFE                     TOSH            equ	16382	;# 
 15419   003FFF                     TOSU            equ	16383	;# 
 15420   003880                     STATUS_CSHAD    equ	14464	;# 
 15421   003881                     WREG_CSHAD      equ	14465	;# 
 15422   003882                     BSR_CSHAD       equ	14466	;# 
 15423   003883                     SHADCON         equ	14467	;# 
 15424   003884                     STATUS_SHAD     equ	14468	;# 
 15425   003885                     WREG_SHAD       equ	14469	;# 
 15426   003886                     BSR_SHAD        equ	14470	;# 
 15427   003887                     PCLATH_SHAD     equ	14471	;# 
 15428   003888                     PCLATU_SHAD     equ	14472	;# 
 15429   003889                     FSR0SH          equ	14473	;# 
 15430   003889                     FSR0L_SHAD      equ	14473	;# 
 15431   00388A                     FSR0H_SHAD      equ	14474	;# 
 15432   00388B                     FSR1SH          equ	14475	;# 
 15433   00388B                     FSR1L_SHAD      equ	14475	;# 
 15434   00388C                     FSR1H_SHAD      equ	14476	;# 
 15435   00388D                     FSR2SH          equ	14477	;# 
 15436   00388D                     FSR2L_SHAD      equ	14477	;# 
 15437   00388E                     FSR2H_SHAD      equ	14478	;# 
 15438   00388F                     PRODSH          equ	14479	;# 
 15439   00388F                     PRODL_SHAD      equ	14479	;# 
 15440   003890                     PRODH_SHAD      equ	14480	;# 
 15441   00389D                     IVTADL          equ	14493	;# 
 15442   00389E                     IVTADH          equ	14494	;# 
 15443   00389F                     IVTADU          equ	14495	;# 
 15444   00395B                     WDTCON0         equ	14683	;# 
 15445   00395C                     WDTCON1         equ	14684	;# 
 15446   00395D                     WDTPSL          equ	14685	;# 
 15447   00395E                     WDTPSH          equ	14686	;# 
 15448   00395F                     WDTTMR          equ	14687	;# 
 15449   003960                     CRCDATA         equ	14688	;# 
 15450   003960                     CRCDATL         equ	14688	;# 
 15451   003961                     CRCDATH         equ	14689	;# 
 15452   003962                     CRCACC          equ	14690	;# 
 15453   003962                     CRCACCL         equ	14690	;# 
 15454   003963                     CRCACCH         equ	14691	;# 
 15455   003964                     CRCSHFT         equ	14692	;# 
 15456   003964                     CRCSHIFTL       equ	14692	;# 
 15457   003965                     CRCSHIFTH       equ	14693	;# 
 15458   003966                     CRCXOR          equ	14694	;# 
 15459   003966                     CRCXORL         equ	14694	;# 
 15460   003967                     CRCXORH         equ	14695	;# 
 15461   003968                     CRCCON0         equ	14696	;# 
 15462   003969                     CRCCON1         equ	14697	;# 
 15463   003976                     SCANLADR        equ	14710	;# 
 15464   003976                     SCANLADRL       equ	14710	;# 
 15465   003977                     SCANLADRH       equ	14711	;# 
 15466   003978                     SCANLADRU       equ	14712	;# 
 15467   003979                     SCANHADR        equ	14713	;# 
 15468   003979                     SCANHADRL       equ	14713	;# 
 15469   00397A                     SCANHADRH       equ	14714	;# 
 15470   00397B                     SCANHADRU       equ	14715	;# 
 15471   00397C                     SCANCON0        equ	14716	;# 
 15472   00397D                     SCANTRIG        equ	14717	;# 
 15473   003980                     IPR0            equ	14720	;# 
 15474   003981                     IPR1            equ	14721	;# 
 15475   003982                     IPR2            equ	14722	;# 
 15476   003983                     IPR3            equ	14723	;# 
 15477   003984                     IPR4            equ	14724	;# 
 15478   003985                     IPR5            equ	14725	;# 
 15479   003986                     IPR6            equ	14726	;# 
 15480   003987                     IPR7            equ	14727	;# 
 15481   003988                     IPR8            equ	14728	;# 
 15482   003989                     IPR9            equ	14729	;# 
 15483   00398A                     IPR10           equ	14730	;# 
 15484   003990                     PIE0            equ	14736	;# 
 15485   003991                     PIE1            equ	14737	;# 
 15486   003992                     PIE2            equ	14738	;# 
 15487   003993                     PIE3            equ	14739	;# 
 15488   003994                     PIE4            equ	14740	;# 
 15489   003995                     PIE5            equ	14741	;# 
 15490   003996                     PIE6            equ	14742	;# 
 15491   003997                     PIE7            equ	14743	;# 
 15492   003998                     PIE8            equ	14744	;# 
 15493   003999                     PIE9            equ	14745	;# 
 15494   00399A                     PIE10           equ	14746	;# 
 15495   0039A0                     PIR0            equ	14752	;# 
 15496   0039A1                     PIR1            equ	14753	;# 
 15497   0039A2                     PIR2            equ	14754	;# 
 15498   0039A3                     PIR3            equ	14755	;# 
 15499   0039A4                     PIR4            equ	14756	;# 
 15500   0039A5                     PIR5            equ	14757	;# 
 15501   0039A6                     PIR6            equ	14758	;# 
 15502   0039A7                     PIR7            equ	14759	;# 
 15503   0039A8                     PIR8            equ	14760	;# 
 15504   0039A9                     PIR9            equ	14761	;# 
 15505   0039AA                     PIR10           equ	14762	;# 
 15506   0039C0                     PMD0            equ	14784	;# 
 15507   0039C1                     PMD1            equ	14785	;# 
 15508   0039C2                     PMD2            equ	14786	;# 
 15509   0039C3                     PMD3            equ	14787	;# 
 15510   0039C4                     PMD4            equ	14788	;# 
 15511   0039C5                     PMD5            equ	14789	;# 
 15512   0039C6                     PMD6            equ	14790	;# 
 15513   0039C7                     PMD7            equ	14791	;# 
 15514   0039D0                     BORCON          equ	14800	;# 
 15515   0039D1                     VREGCON         equ	14801	;# 
 15516   0039D8                     CPUDOZE         equ	14808	;# 
 15517   0039D9                     OSCCON1         equ	14809	;# 
 15518   0039DA                     OSCCON2         equ	14810	;# 
 15519   0039DB                     OSCCON3         equ	14811	;# 
 15520   0039DC                     OSCSTAT         equ	14812	;# 
 15521   0039DC                     OSCSTAT1        equ	14812	;# 
 15522   0039DD                     OSCEN           equ	14813	;# 
 15523   0039DE                     OSCTUNE         equ	14814	;# 
 15524   0039DF                     OSCFRQ          equ	14815	;# 
 15525   0039E0                     NVMADRL         equ	14816	;# 
 15526   0039E1                     NVMADRH         equ	14817	;# 
 15527   0039E3                     NVMDAT          equ	14819	;# 
 15528   0039E5                     NVMCON1         equ	14821	;# 
 15529   0039E6                     NVMCON2         equ	14822	;# 
 15530   0039EF                     PRLOCK          equ	14831	;# 
 15531   0039F1                     ISRPR           equ	14833	;# 
 15532   0039F2                     MAINPR          equ	14834	;# 
 15533   0039F3                     DMA1PR          equ	14835	;# 
 15534   0039F4                     DMA2PR          equ	14836	;# 
 15535   0039F7                     SCANPR          equ	14839	;# 
 15536   003A00                     RA0PPS          equ	14848	;# 
 15537   003A01                     RA1PPS          equ	14849	;# 
 15538   003A02                     RA2PPS          equ	14850	;# 
 15539   003A03                     RA3PPS          equ	14851	;# 
 15540   003A04                     RA4PPS          equ	14852	;# 
 15541   003A05                     RA5PPS          equ	14853	;# 
 15542   003A06                     RA6PPS          equ	14854	;# 
 15543   003A07                     RA7PPS          equ	14855	;# 
 15544   003A08                     RB0PPS          equ	14856	;# 
 15545   003A09                     RB1PPS          equ	14857	;# 
 15546   003A0A                     RB2PPS          equ	14858	;# 
 15547   003A0B                     RB3PPS          equ	14859	;# 
 15548   003A0C                     RB4PPS          equ	14860	;# 
 15549   003A0D                     RB5PPS          equ	14861	;# 
 15550   003A0E                     RB6PPS          equ	14862	;# 
 15551   003A0F                     RB7PPS          equ	14863	;# 
 15552   003A10                     RC0PPS          equ	14864	;# 
 15553   003A11                     RC1PPS          equ	14865	;# 
 15554   003A12                     RC2PPS          equ	14866	;# 
 15555   003A13                     RC3PPS          equ	14867	;# 
 15556   003A14                     RC4PPS          equ	14868	;# 
 15557   003A15                     RC5PPS          equ	14869	;# 
 15558   003A16                     RC6PPS          equ	14870	;# 
 15559   003A17                     RC7PPS          equ	14871	;# 
 15560   003A18                     RD0PPS          equ	14872	;# 
 15561   003A19                     RD1PPS          equ	14873	;# 
 15562   003A1A                     RD2PPS          equ	14874	;# 
 15563   003A1B                     RD3PPS          equ	14875	;# 
 15564   003A1C                     RD4PPS          equ	14876	;# 
 15565   003A1D                     RD5PPS          equ	14877	;# 
 15566   003A1E                     RD6PPS          equ	14878	;# 
 15567   003A1F                     RD7PPS          equ	14879	;# 
 15568   003A20                     RE0PPS          equ	14880	;# 
 15569   003A21                     RE1PPS          equ	14881	;# 
 15570   003A22                     RE2PPS          equ	14882	;# 
 15571   003A28                     RF0PPS          equ	14888	;# 
 15572   003A29                     RF1PPS          equ	14889	;# 
 15573   003A2A                     RF2PPS          equ	14890	;# 
 15574   003A2B                     RF3PPS          equ	14891	;# 
 15575   003A2C                     RF4PPS          equ	14892	;# 
 15576   003A2D                     RF5PPS          equ	14893	;# 
 15577   003A2E                     RF6PPS          equ	14894	;# 
 15578   003A2F                     RF7PPS          equ	14895	;# 
 15579   003A40                     ANSELA          equ	14912	;# 
 15580   003A41                     WPUA            equ	14913	;# 
 15581   003A42                     ODCONA          equ	14914	;# 
 15582   003A43                     SLRCONA         equ	14915	;# 
 15583   003A44                     INLVLA          equ	14916	;# 
 15584   003A45                     IOCAP           equ	14917	;# 
 15585   003A46                     IOCAN           equ	14918	;# 
 15586   003A47                     IOCAF           equ	14919	;# 
 15587   003A50                     ANSELB          equ	14928	;# 
 15588   003A51                     WPUB            equ	14929	;# 
 15589   003A52                     ODCONB          equ	14930	;# 
 15590   003A53                     SLRCONB         equ	14931	;# 
 15591   003A54                     INLVLB          equ	14932	;# 
 15592   003A55                     IOCBP           equ	14933	;# 
 15593   003A56                     IOCBN           equ	14934	;# 
 15594   003A57                     IOCBF           equ	14935	;# 
 15595   003A5A                     RB1I2C          equ	14938	;# 
 15596   003A5B                     RB2I2C          equ	14939	;# 
 15597   003A60                     ANSELC          equ	14944	;# 
 15598   003A61                     WPUC            equ	14945	;# 
 15599   003A62                     ODCONC          equ	14946	;# 
 15600   003A63                     SLRCONC         equ	14947	;# 
 15601   003A64                     INLVLC          equ	14948	;# 
 15602   003A65                     IOCCP           equ	14949	;# 
 15603   003A66                     IOCCN           equ	14950	;# 
 15604   003A67                     IOCCF           equ	14951	;# 
 15605   003A6A                     RC3I2C          equ	14954	;# 
 15606   003A6B                     RC4I2C          equ	14955	;# 
 15607   003A70                     ANSELD          equ	14960	;# 
 15608   003A71                     WPUD            equ	14961	;# 
 15609   003A72                     ODCOND          equ	14962	;# 
 15610   003A73                     SLRCOND         equ	14963	;# 
 15611   003A74                     INLVLD          equ	14964	;# 
 15612   003A7A                     RD0I2C          equ	14970	;# 
 15613   003A7B                     RD1I2C          equ	14971	;# 
 15614   003A80                     ANSELE          equ	14976	;# 
 15615   003A81                     WPUE            equ	14977	;# 
 15616   003A82                     ODCONE          equ	14978	;# 
 15617   003A83                     SLRCONE         equ	14979	;# 
 15618   003A84                     INLVLE          equ	14980	;# 
 15619   003A85                     IOCEP           equ	14981	;# 
 15620   003A86                     IOCEN           equ	14982	;# 
 15621   003A87                     IOCEF           equ	14983	;# 
 15622   003A90                     ANSELF          equ	14992	;# 
 15623   003A91                     WPUF            equ	14993	;# 
 15624   003A92                     ODCONF          equ	14994	;# 
 15625   003A93                     SLRCONF         equ	14995	;# 
 15626   003A94                     INLVLF          equ	14996	;# 
 15627   003ABF                     PPSLOCK         equ	15039	;# 
 15628   003AC0                     INT0PPS         equ	15040	;# 
 15629   003AC1                     INT1PPS         equ	15041	;# 
 15630   003AC2                     INT2PPS         equ	15042	;# 
 15631   003AC3                     T0CKIPPS        equ	15043	;# 
 15632   003AC4                     T1CKIPPS        equ	15044	;# 
 15633   003AC5                     T1GPPS          equ	15045	;# 
 15634   003AC6                     T3CKIPPS        equ	15046	;# 
 15635   003AC7                     T3GPPS          equ	15047	;# 
 15636   003AC8                     T5CKIPPS        equ	15048	;# 
 15637   003AC9                     T5GPPS          equ	15049	;# 
 15638   003ACA                     T2INPPS         equ	15050	;# 
 15639   003ACB                     T4INPPS         equ	15051	;# 
 15640   003ACC                     T6INPPS         equ	15052	;# 
 15641   003ACD                     CCP1PPS         equ	15053	;# 
 15642   003ACE                     CCP2PPS         equ	15054	;# 
 15643   003ACF                     CCP3PPS         equ	15055	;# 
 15644   003AD0                     CCP4PPS         equ	15056	;# 
 15645   003AD1                     SMT1WINPPS      equ	15057	;# 
 15646   003AD2                     SMT1SIGPPS      equ	15058	;# 
 15647   003AD3                     CWG1INPPS       equ	15059	;# 
 15648   003AD4                     CWG2INPPS       equ	15060	;# 
 15649   003AD5                     CWG3INPPS       equ	15061	;# 
 15650   003AD6                     MD1CARLPPS      equ	15062	;# 
 15651   003AD7                     MD1CARHPPS      equ	15063	;# 
 15652   003AD8                     MD1SRCPPS       equ	15064	;# 
 15653   003AD9                     CLCIN0PPS       equ	15065	;# 
 15654   003ADA                     CLCIN1PPS       equ	15066	;# 
 15655   003ADB                     CLCIN2PPS       equ	15067	;# 
 15656   003ADC                     CLCIN3PPS       equ	15068	;# 
 15657   003ADD                     ADACTPPS        equ	15069	;# 
 15658   003ADE                     SPI1SCKPPS      equ	15070	;# 
 15659   003ADF                     SPI1SDIPPS      equ	15071	;# 
 15660   003AE0                     SPI1SSPPS       equ	15072	;# 
 15661   003AE1                     I2C1SCLPPS      equ	15073	;# 
 15662   003AE2                     I2C1SDAPPS      equ	15074	;# 
 15663   003AE3                     I2C2SCLPPS      equ	15075	;# 
 15664   003AE4                     I2C2SDAPPS      equ	15076	;# 
 15665   003AE5                     U1RXPPS         equ	15077	;# 
 15666   003AE6                     U1CTSPPS        equ	15078	;# 
 15667   003AE8                     U2RXPPS         equ	15080	;# 
 15668   003AE9                     U2CTSPPS        equ	15081	;# 
 15669   003BC9                     DMA2BUF         equ	15305	;# 
 15670   003BCA                     DMA2DCNT        equ	15306	;# 
 15671   003BCA                     DMA2DCNTL       equ	15306	;# 
 15672   003BCB                     DMA2DCNTH       equ	15307	;# 
 15673   003BCC                     DMA2DPTR        equ	15308	;# 
 15674   003BCC                     DMA2DPTRL       equ	15308	;# 
 15675   003BCD                     DMA2DPTRH       equ	15309	;# 
 15676   003BCE                     DMA2DSZ         equ	15310	;# 
 15677   003BCE                     DMA2DSZL        equ	15310	;# 
 15678   003BCF                     DMA2DSZH        equ	15311	;# 
 15679   003BD0                     DMA2DSA         equ	15312	;# 
 15680   003BD0                     DMA2DSAL        equ	15312	;# 
 15681   003BD1                     DMA2DSAH        equ	15313	;# 
 15682   003BD2                     DMA2SCNT        equ	15314	;# 
 15683   003BD2                     DMA2SCNTL       equ	15314	;# 
 15684   003BD3                     DMA2SCNTH       equ	15315	;# 
 15685   003BD4                     DMA2SPTR        equ	15316	;# 
 15686   003BD4                     DMA2SPTRL       equ	15316	;# 
 15687   003BD5                     DMA2SPTRH       equ	15317	;# 
 15688   003BD6                     DMA2SPTRU       equ	15318	;# 
 15689   003BD7                     DMA2SSZ         equ	15319	;# 
 15690   003BD7                     DMA2SSZL        equ	15319	;# 
 15691   003BD8                     DMA2SSZH        equ	15320	;# 
 15692   003BD9                     DMA2SSA         equ	15321	;# 
 15693   003BD9                     DMA2SSAL        equ	15321	;# 
 15694   003BDA                     DMA2SSAH        equ	15322	;# 
 15695   003BDB                     DMA2SSAU        equ	15323	;# 
 15696   003BDC                     DMA2CON0        equ	15324	;# 
 15697   003BDD                     DMA2CON1        equ	15325	;# 
 15698   003BDE                     DMA2AIRQ        equ	15326	;# 
 15699   003BDF                     DMA2SIRQ        equ	15327	;# 
 15700   003BE9                     DMA1BUF         equ	15337	;# 
 15701   003BEA                     DMA1DCNT        equ	15338	;# 
 15702   003BEA                     DMA1DCNTL       equ	15338	;# 
 15703   003BEB                     DMA1DCNTH       equ	15339	;# 
 15704   003BEC                     DMA1DPTR        equ	15340	;# 
 15705   003BEC                     DMA1DPTRL       equ	15340	;# 
 15706   003BED                     DMA1DPTRH       equ	15341	;# 
 15707   003BEE                     DMA1DSZ         equ	15342	;# 
 15708   003BEE                     DMA1DSZL        equ	15342	;# 
 15709   003BEF                     DMA1DSZH        equ	15343	;# 
 15710   003BF0                     DMA1DSA         equ	15344	;# 
 15711   003BF0                     DMA1DSAL        equ	15344	;# 
 15712   003BF1                     DMA1DSAH        equ	15345	;# 
 15713   003BF2                     DMA1SCNT        equ	15346	;# 
 15714   003BF2                     DMA1SCNTL       equ	15346	;# 
 15715   003BF3                     DMA1SCNTH       equ	15347	;# 
 15716   003BF4                     DMA1SPTR        equ	15348	;# 
 15717   003BF4                     DMA1SPTRL       equ	15348	;# 
 15718   003BF5                     DMA1SPTRH       equ	15349	;# 
 15719   003BF6                     DMA1SPTRU       equ	15350	;# 
 15720   003BF7                     DMA1SSZ         equ	15351	;# 
 15721   003BF7                     DMA1SSZL        equ	15351	;# 
 15722   003BF8                     DMA1SSZH        equ	15352	;# 
 15723   003BF9                     DMA1SSA         equ	15353	;# 
 15724   003BF9                     DMA1SSAL        equ	15353	;# 
 15725   003BFA                     DMA1SSAH        equ	15354	;# 
 15726   003BFB                     DMA1SSAU        equ	15355	;# 
 15727   003BFC                     DMA1CON0        equ	15356	;# 
 15728   003BFD                     DMA1CON1        equ	15357	;# 
 15729   003BFE                     DMA1AIRQ        equ	15358	;# 
 15730   003BFF                     DMA1SIRQ        equ	15359	;# 
 15731   003C56                     CLC4CON         equ	15446	;# 
 15732   003C57                     CLC4POL         equ	15447	;# 
 15733   003C58                     CLC4SEL0        equ	15448	;# 
 15734   003C59                     CLC4SEL1        equ	15449	;# 
 15735   003C5A                     CLC4SEL2        equ	15450	;# 
 15736   003C5B                     CLC4SEL3        equ	15451	;# 
 15737   003C5C                     CLC4GLS0        equ	15452	;# 
 15738   003C5D                     CLC4GLS1        equ	15453	;# 
 15739   003C5E                     CLC4GLS2        equ	15454	;# 
 15740   003C5F                     CLC4GLS3        equ	15455	;# 
 15741   003C60                     CLC3CON         equ	15456	;# 
 15742   003C61                     CLC3POL         equ	15457	;# 
 15743   003C62                     CLC3SEL0        equ	15458	;# 
 15744   003C63                     CLC3SEL1        equ	15459	;# 
 15745   003C64                     CLC3SEL2        equ	15460	;# 
 15746   003C65                     CLC3SEL3        equ	15461	;# 
 15747   003C66                     CLC3GLS0        equ	15462	;# 
 15748   003C67                     CLC3GLS1        equ	15463	;# 
 15749   003C68                     CLC3GLS2        equ	15464	;# 
 15750   003C69                     CLC3GLS3        equ	15465	;# 
 15751   003C6A                     CLC2CON         equ	15466	;# 
 15752   003C6B                     CLC2POL         equ	15467	;# 
 15753   003C6C                     CLC2SEL0        equ	15468	;# 
 15754   003C6D                     CLC2SEL1        equ	15469	;# 
 15755   003C6E                     CLC2SEL2        equ	15470	;# 
 15756   003C6F                     CLC2SEL3        equ	15471	;# 
 15757   003C70                     CLC2GLS0        equ	15472	;# 
 15758   003C71                     CLC2GLS1        equ	15473	;# 
 15759   003C72                     CLC2GLS2        equ	15474	;# 
 15760   003C73                     CLC2GLS3        equ	15475	;# 
 15761   003C74                     CLC1CON         equ	15476	;# 
 15762   003C75                     CLC1POL         equ	15477	;# 
 15763   003C76                     CLC1SEL0        equ	15478	;# 
 15764   003C77                     CLC1SEL1        equ	15479	;# 
 15765   003C78                     CLC1SEL2        equ	15480	;# 
 15766   003C79                     CLC1SEL3        equ	15481	;# 
 15767   003C7A                     CLC1GLS0        equ	15482	;# 
 15768   003C7B                     CLC1GLS1        equ	15483	;# 
 15769   003C7C                     CLC1GLS2        equ	15484	;# 
 15770   003C7D                     CLC1GLS3        equ	15485	;# 
 15771   003C7E                     CLCDATA0        equ	15486	;# 
 15772   003CE5                     CLKRCON         equ	15589	;# 
 15773   003CE6                     CLKRCLK         equ	15590	;# 
 15774   003CFA                     MD1CON0         equ	15610	;# 
 15775   003CFB                     MD1CON1         equ	15611	;# 
 15776   003CFC                     MD1SRC          equ	15612	;# 
 15777   003CFD                     MD1CARL         equ	15613	;# 
 15778   003CFE                     MD1CARH         equ	15614	;# 
 15779   003D10                     SPI1RXB         equ	15632	;# 
 15780   003D11                     SPI1TXB         equ	15633	;# 
 15781   003D12                     SPI1TCNT        equ	15634	;# 
 15782   003D12                     SPI1TCNTL       equ	15634	;# 
 15783   003D13                     SPI1TCNTH       equ	15635	;# 
 15784   003D14                     SPI1CON0        equ	15636	;# 
 15785   003D15                     SPI1CON1        equ	15637	;# 
 15786   003D16                     SPI1CON2        equ	15638	;# 
 15787   003D17                     SPI1STATUS      equ	15639	;# 
 15788   003D18                     SPI1TWIDTH      equ	15640	;# 
 15789   003D19                     SPI1BAUD        equ	15641	;# 
 15790   003D1A                     SPI1INTF        equ	15642	;# 
 15791   003D1B                     SPI1INTE        equ	15643	;# 
 15792   003D1C                     SPI1CLK         equ	15644	;# 
 15793   003D54                     I2C2RXB         equ	15700	;# 
 15794   003D55                     I2C2TXB         equ	15701	;# 
 15795   003D56                     I2C2CNT         equ	15702	;# 
 15796   003D57                     I2C2ADB0        equ	15703	;# 
 15797   003D58                     I2C2ADB1        equ	15704	;# 
 15798   003D59                     I2C2ADR0        equ	15705	;# 
 15799   003D5A                     I2C2ADR1        equ	15706	;# 
 15800   003D5B                     I2C2ADR2        equ	15707	;# 
 15801   003D5C                     I2C2ADR3        equ	15708	;# 
 15802   003D5D                     I2C2CON0        equ	15709	;# 
 15803   003D5E                     I2C2CON1        equ	15710	;# 
 15804   003D5F                     I2C2CON2        equ	15711	;# 
 15805   003D60                     I2C2ERR         equ	15712	;# 
 15806   003D61                     I2C2STAT0       equ	15713	;# 
 15807   003D62                     I2C2STAT1       equ	15714	;# 
 15808   003D63                     I2C2PIR         equ	15715	;# 
 15809   003D64                     I2C2PIE         equ	15716	;# 
 15810   003D65                     I2C2CLK         equ	15717	;# 
 15811   003D66                     I2C2BTO         equ	15718	;# 
 15812   003D6A                     I2C1RXB         equ	15722	;# 
 15813   003D6B                     I2C1TXB         equ	15723	;# 
 15814   003D6C                     I2C1CNT         equ	15724	;# 
 15815   003D6D                     I2C1ADB0        equ	15725	;# 
 15816   003D6E                     I2C1ADB1        equ	15726	;# 
 15817   003D6F                     I2C1ADR0        equ	15727	;# 
 15818   003D70                     I2C1ADR1        equ	15728	;# 
 15819   003D71                     I2C1ADR2        equ	15729	;# 
 15820   003D72                     I2C1ADR3        equ	15730	;# 
 15821   003D73                     I2C1CON0        equ	15731	;# 
 15822   003D74                     I2C1CON1        equ	15732	;# 
 15823   003D75                     I2C1CON2        equ	15733	;# 
 15824   003D76                     I2C1ERR         equ	15734	;# 
 15825   003D77                     I2C1STAT0       equ	15735	;# 
 15826   003D78                     I2C1STAT1       equ	15736	;# 
 15827   003D79                     I2C1PIR         equ	15737	;# 
 15828   003D7A                     I2C1PIE         equ	15738	;# 
 15829   003D7B                     I2C1CLK         equ	15739	;# 
 15830   003D7C                     I2C1BTO         equ	15740	;# 
 15831   003DD0                     U2RXB           equ	15824	;# 
 15832   003DD0                     U2RXBL          equ	15824	;# 
 15833   003DD2                     U2TXB           equ	15826	;# 
 15834   003DD2                     U2TXBL          equ	15826	;# 
 15835   003DD4                     U2P1            equ	15828	;# 
 15836   003DD4                     U2P1L           equ	15828	;# 
 15837   003DD6                     U2P2            equ	15830	;# 
 15838   003DD6                     U2P2L           equ	15830	;# 
 15839   003DD8                     U2P3            equ	15832	;# 
 15840   003DD8                     U2P3L           equ	15832	;# 
 15841   003DDA                     U2CON0          equ	15834	;# 
 15842   003DDB                     U2CON1          equ	15835	;# 
 15843   003DDC                     U2CON2          equ	15836	;# 
 15844   003DDD                     U2BRG           equ	15837	;# 
 15845   003DDD                     U2BRGL          equ	15837	;# 
 15846   003DDE                     U2BRGH          equ	15838	;# 
 15847   003DDF                     U2FIFO          equ	15839	;# 
 15848   003DE0                     U2UIR           equ	15840	;# 
 15849   003DE1                     U2ERRIR         equ	15841	;# 
 15850   003DE2                     U2ERRIE         equ	15842	;# 
 15851   003DE8                     U1RXB           equ	15848	;# 
 15852   003DE8                     U1RXBL          equ	15848	;# 
 15853   003DE9                     U1RXCHK         equ	15849	;# 
 15854   003DEA                     U1TXB           equ	15850	;# 
 15855   003DEA                     U1TXBL          equ	15850	;# 
 15856   003DEB                     U1TXCHK         equ	15851	;# 
 15857   003DEC                     U1P1            equ	15852	;# 
 15858   003DEC                     U1P1L           equ	15852	;# 
 15859   003DED                     U1P1H           equ	15853	;# 
 15860   003DEE                     U1P2            equ	15854	;# 
 15861   003DEE                     U1P2L           equ	15854	;# 
 15862   003DEF                     U1P2H           equ	15855	;# 
 15863   003DF0                     U1P3            equ	15856	;# 
 15864   003DF0                     U1P3L           equ	15856	;# 
 15865   003DF1                     U1P3H           equ	15857	;# 
 15866   003DF2                     U1CON0          equ	15858	;# 
 15867   003DF3                     U1CON1          equ	15859	;# 
 15868   003DF4                     U1CON2          equ	15860	;# 
 15869   003DF5                     U1BRG           equ	15861	;# 
 15870   003DF5                     U1BRGL          equ	15861	;# 
 15871   003DF6                     U1BRGH          equ	15862	;# 
 15872   003DF7                     U1FIFO          equ	15863	;# 
 15873   003DF8                     U1UIR           equ	15864	;# 
 15874   003DF9                     U1ERRIR         equ	15865	;# 
 15875   003DFA                     U1ERRIE         equ	15866	;# 
 15876   003E9C                     DAC1CON1        equ	16028	;# 
 15877   003E9E                     DAC1CON0        equ	16030	;# 
 15878   003EB8                     CM2CON0         equ	16056	;# 
 15879   003EB9                     CM2CON1         equ	16057	;# 
 15880   003EBA                     CM2NCH          equ	16058	;# 
 15881   003EBB                     CM2PCH          equ	16059	;# 
 15882   003EBC                     CM1CON0         equ	16060	;# 
 15883   003EBD                     CM1CON1         equ	16061	;# 
 15884   003EBE                     CM1NCH          equ	16062	;# 
 15885   003EBF                     CM1PCH          equ	16063	;# 
 15886   003EC0                     CMOUT           equ	16064	;# 
 15887   003EC1                     FVRCON          equ	16065	;# 
 15888   003EC3                     ZCDCON          equ	16067	;# 
 15889   003EC9                     HLVDCON0        equ	16073	;# 
 15890   003ECA                     HLVDCON1        equ	16074	;# 
 15891   003ED7                     ADCP            equ	16087	;# 
 15892   003EDE                     ADLTH           equ	16094	;# 
 15893   003EDE                     ADLTHL          equ	16094	;# 
 15894   003EDF                     ADLTHH          equ	16095	;# 
 15895   003EE0                     ADUTH           equ	16096	;# 
 15896   003EE0                     ADUTHL          equ	16096	;# 
 15897   003EE1                     ADUTHH          equ	16097	;# 
 15898   003EE2                     ADERR           equ	16098	;# 
 15899   003EE2                     ADERRL          equ	16098	;# 
 15900   003EE3                     ADERRH          equ	16099	;# 
 15901   003EE4                     ADSTPT          equ	16100	;# 
 15902   003EE4                     ADSTPTL         equ	16100	;# 
 15903   003EE5                     ADSTPTH         equ	16101	;# 
 15904   003EE6                     ADFLTR          equ	16102	;# 
 15905   003EE6                     ADFLTRL         equ	16102	;# 
 15906   003EE7                     ADFLTRH         equ	16103	;# 
 15907   003EE8                     ADACC           equ	16104	;# 
 15908   003EE8                     ADACCL          equ	16104	;# 
 15909   003EE9                     ADACCH          equ	16105	;# 
 15910   003EEA                     ADACCU          equ	16106	;# 
 15911   003EEB                     ADCNT           equ	16107	;# 
 15912   003EEC                     ADRPT           equ	16108	;# 
 15913   003EED                     ADPREV          equ	16109	;# 
 15914   003EED                     ADPREVL         equ	16109	;# 
 15915   003EEE                     ADPREVH         equ	16110	;# 
 15916   003EEF                     ADRES           equ	16111	;# 
 15917   003EEF                     ADRESL          equ	16111	;# 
 15918   003EF0                     ADRESH          equ	16112	;# 
 15919   003EF1                     ADPCH           equ	16113	;# 
 15920   003EF3                     ADACQ           equ	16115	;# 
 15921   003EF3                     ADACQL          equ	16115	;# 
 15922   003EF4                     ADACQH          equ	16116	;# 
 15923   003EF5                     ADCAP           equ	16117	;# 
 15924   003EF6                     ADPRE           equ	16118	;# 
 15925   003EF6                     ADPREL          equ	16118	;# 
 15926   003EF7                     ADPREH          equ	16119	;# 
 15927   003EF8                     ADCON0          equ	16120	;# 
 15928   003EF9                     ADCON1          equ	16121	;# 
 15929   003EFA                     ADCON2          equ	16122	;# 
 15930   003EFB                     ADCON3          equ	16123	;# 
 15931   003EFC                     ADSTAT          equ	16124	;# 
 15932   003EFD                     ADREF           equ	16125	;# 
 15933   003EFE                     ADACT           equ	16126	;# 
 15934   003EFF                     ADCLK           equ	16127	;# 
 15935   003F12                     SMT1TMR         equ	16146	;# 
 15936   003F12                     SMT1TMRL        equ	16146	;# 
 15937   003F13                     SMT1TMRH        equ	16147	;# 
 15938   003F14                     SMT1TMRU        equ	16148	;# 
 15939   003F15                     SMT1CPR         equ	16149	;# 
 15940   003F15                     SMT1CPRL        equ	16149	;# 
 15941   003F16                     SMT1CPRH        equ	16150	;# 
 15942   003F17                     SMT1CPRU        equ	16151	;# 
 15943   003F18                     SMT1CPW         equ	16152	;# 
 15944   003F18                     SMT1CPWL        equ	16152	;# 
 15945   003F19                     SMT1CPWH        equ	16153	;# 
 15946   003F1A                     SMT1CPWU        equ	16154	;# 
 15947   003F1B                     SMT1PR          equ	16155	;# 
 15948   003F1B                     SMT1PRL         equ	16155	;# 
 15949   003F1C                     SMT1PRH         equ	16156	;# 
 15950   003F1D                     SMT1PRU         equ	16157	;# 
 15951   003F1E                     SMT1CON0        equ	16158	;# 
 15952   003F1F                     SMT1CON1        equ	16159	;# 
 15953   003F20                     SMT1STAT        equ	16160	;# 
 15954   003F21                     SMT1CLK         equ	16161	;# 
 15955   003F22                     SMT1SIG         equ	16162	;# 
 15956   003F23                     SMT1WIN         equ	16163	;# 
 15957   003F38                     NCO1ACC         equ	16184	;# 
 15958   003F38                     NCO1ACCL        equ	16184	;# 
 15959   003F39                     NCO1ACCH        equ	16185	;# 
 15960   003F3A                     NCO1ACCU        equ	16186	;# 
 15961   003F3B                     NCO1INC         equ	16187	;# 
 15962   003F3B                     NCO1INCL        equ	16187	;# 
 15963   003F3C                     NCO1INCH        equ	16188	;# 
 15964   003F3D                     NCO1INCU        equ	16189	;# 
 15965   003F3E                     NCO1CON         equ	16190	;# 
 15966   003F3F                     NCO1CLK         equ	16191	;# 
 15967   003F40                     CWG3CLK         equ	16192	;# 
 15968   003F40                     CWG3CLKCON      equ	16192	;# 
 15969   003F41                     CWG3ISM         equ	16193	;# 
 15970   003F41                     CWG3DAT         equ	16193	;# 
 15971   003F42                     CWG3DBR         equ	16194	;# 
 15972   003F43                     CWG3DBF         equ	16195	;# 
 15973   003F44                     CWG3CON0        equ	16196	;# 
 15974   003F45                     CWG3CON1        equ	16197	;# 
 15975   003F46                     CWG3AS0         equ	16198	;# 
 15976   003F47                     CWG3AS1         equ	16199	;# 
 15977   003F48                     CWG3STR         equ	16200	;# 
 15978   003F49                     CWG2CLK         equ	16201	;# 
 15979   003F49                     CWG2CLKCON      equ	16201	;# 
 15980   003F4A                     CWG2ISM         equ	16202	;# 
 15981   003F4A                     CWG2DAT         equ	16202	;# 
 15982   003F4B                     CWG2DBR         equ	16203	;# 
 15983   003F4C                     CWG2DBF         equ	16204	;# 
 15984   003F4D                     CWG2CON0        equ	16205	;# 
 15985   003F4E                     CWG2CON1        equ	16206	;# 
 15986   003F4F                     CWG2AS0         equ	16207	;# 
 15987   003F50                     CWG2AS1         equ	16208	;# 
 15988   003F51                     CWG2STR         equ	16209	;# 
 15989   003F52                     CWG1CLK         equ	16210	;# 
 15990   003F52                     CWG1CLKCON      equ	16210	;# 
 15991   003F53                     CWG1ISM         equ	16211	;# 
 15992   003F53                     CWG1DAT         equ	16211	;# 
 15993   003F54                     CWG1DBR         equ	16212	;# 
 15994   003F55                     CWG1DBF         equ	16213	;# 
 15995   003F56                     CWG1CON0        equ	16214	;# 
 15996   003F57                     CWG1CON1        equ	16215	;# 
 15997   003F58                     CWG1AS0         equ	16216	;# 
 15998   003F59                     CWG1AS1         equ	16217	;# 
 15999   003F5A                     CWG1STR         equ	16218	;# 
 16000   003F5E                     CCPTMRS0        equ	16222	;# 
 16001   003F5F                     CCPTMRS1        equ	16223	;# 
 16002   003F60                     PWM8DC          equ	16224	;# 
 16003   003F60                     PWM8DCL         equ	16224	;# 
 16004   003F61                     PWM8DCH         equ	16225	;# 
 16005   003F62                     PWM8CON         equ	16226	;# 
 16006   003F64                     PWM7DC          equ	16228	;# 
 16007   003F64                     PWM7DCL         equ	16228	;# 
 16008   003F65                     PWM7DCH         equ	16229	;# 
 16009   003F66                     PWM7CON         equ	16230	;# 
 16010   003F68                     PWM6DC          equ	16232	;# 
 16011   003F68                     PWM6DCL         equ	16232	;# 
 16012   003F69                     PWM6DCH         equ	16233	;# 
 16013   003F6A                     PWM6CON         equ	16234	;# 
 16014   003F6C                     PWM5DC          equ	16236	;# 
 16015   003F6C                     PWM5DCL         equ	16236	;# 
 16016   003F6D                     PWM5DCH         equ	16237	;# 
 16017   003F6E                     PWM5CON         equ	16238	;# 
 16018   003F70                     CCPR4           equ	16240	;# 
 16019   003F70                     CCPR4L          equ	16240	;# 
 16020   003F71                     CCPR4H          equ	16241	;# 
 16021   003F72                     CCP4CON         equ	16242	;# 
 16022   003F73                     CCP4CAP         equ	16243	;# 
 16023   003F74                     CCPR3           equ	16244	;# 
 16024   003F74                     CCPR3L          equ	16244	;# 
 16025   003F75                     CCPR3H          equ	16245	;# 
 16026   003F76                     CCP3CON         equ	16246	;# 
 16027   003F77                     CCP3CAP         equ	16247	;# 
 16028   003F78                     CCPR2           equ	16248	;# 
 16029   003F78                     CCPR2L          equ	16248	;# 
 16030   003F79                     CCPR2H          equ	16249	;# 
 16031   003F7A                     CCP2CON         equ	16250	;# 
 16032   003F7B                     CCP2CAP         equ	16251	;# 
 16033   003F7C                     CCPR1           equ	16252	;# 
 16034   003F7C                     CCPR1L          equ	16252	;# 
 16035   003F7D                     CCPR1H          equ	16253	;# 
 16036   003F7E                     CCP1CON         equ	16254	;# 
 16037   003F7F                     CCP1CAP         equ	16255	;# 
 16038   003F92                     T6TMR           equ	16274	;# 
 16039   003F92                     TMR6            equ	16274	;# 
 16040   003F93                     T6PR            equ	16275	;# 
 16041   003F93                     PR6             equ	16275	;# 
 16042   003F94                     T6CON           equ	16276	;# 
 16043   003F95                     T6HLT           equ	16277	;# 
 16044   003F96                     T6CLKCON        equ	16278	;# 
 16045   003F96                     T6CLK           equ	16278	;# 
 16046   003F97                     T6RST           equ	16279	;# 
 16047   003F98                     TMR5            equ	16280	;# 
 16048   003F98                     TMR5L           equ	16280	;# 
 16049   003F99                     TMR5H           equ	16281	;# 
 16050   003F9A                     T5CON           equ	16282	;# 
 16051   003F9A                     TMR5CON         equ	16282	;# 
 16052   003F9B                     T5GCON          equ	16283	;# 
 16053   003F9B                     TMR5GCON        equ	16283	;# 
 16054   003F9C                     T5GATE          equ	16284	;# 
 16055   003F9C                     TMR5GATE        equ	16284	;# 
 16056   003F9D                     T5CLK           equ	16285	;# 
 16057   003F9D                     TMR5CLK         equ	16285	;# 
 16058   003F9D                     PR5             equ	16285	;# 
 16059   003F9E                     T4TMR           equ	16286	;# 
 16060   003F9E                     TMR4            equ	16286	;# 
 16061   003F9F                     T4PR            equ	16287	;# 
 16062   003F9F                     PR4             equ	16287	;# 
 16063   003FA0                     T4CON           equ	16288	;# 
 16064   003FA1                     T4HLT           equ	16289	;# 
 16065   003FA2                     T4CLKCON        equ	16290	;# 
 16066   003FA2                     T4CLK           equ	16290	;# 
 16067   003FA3                     T4RST           equ	16291	;# 
 16068   003FA4                     TMR3            equ	16292	;# 
 16069   003FA4                     TMR3L           equ	16292	;# 
 16070   003FA5                     TMR3H           equ	16293	;# 
 16071   003FA6                     T3CON           equ	16294	;# 
 16072   003FA6                     TMR3CON         equ	16294	;# 
 16073   003FA7                     T3GCON          equ	16295	;# 
 16074   003FA7                     TMR3GCON        equ	16295	;# 
 16075   003FA8                     T3GATE          equ	16296	;# 
 16076   003FA8                     TMR3GATE        equ	16296	;# 
 16077   003FA9                     T3CLK           equ	16297	;# 
 16078   003FA9                     TMR3CLK         equ	16297	;# 
 16079   003FA9                     PR3             equ	16297	;# 
 16080   003FAA                     T2TMR           equ	16298	;# 
 16081   003FAA                     TMR2            equ	16298	;# 
 16082   003FAB                     T2PR            equ	16299	;# 
 16083   003FAB                     PR2             equ	16299	;# 
 16084   003FAC                     T2CON           equ	16300	;# 
 16085   003FAD                     T2HLT           equ	16301	;# 
 16086   003FAE                     T2CLKCON        equ	16302	;# 
 16087   003FAE                     T2CLK           equ	16302	;# 
 16088   003FAF                     T2RST           equ	16303	;# 
 16089   003FB0                     TMR1            equ	16304	;# 
 16090   003FB0                     TMR1L           equ	16304	;# 
 16091   003FB1                     TMR1H           equ	16305	;# 
 16092   003FB2                     T1CON           equ	16306	;# 
 16093   003FB2                     TMR1CON         equ	16306	;# 
 16094   003FB3                     T1GCON          equ	16307	;# 
 16095   003FB3                     TMR1GCON        equ	16307	;# 
 16096   003FB4                     T1GATE          equ	16308	;# 
 16097   003FB4                     TMR1GATE        equ	16308	;# 
 16098   003FB5                     T1CLK           equ	16309	;# 
 16099   003FB5                     TMR1CLK         equ	16309	;# 
 16100   003FB5                     PR1             equ	16309	;# 
 16101   003FB6                     TMR0L           equ	16310	;# 
 16102   003FB6                     TMR0            equ	16310	;# 
 16103   003FB7                     TMR0H           equ	16311	;# 
 16104   003FB7                     PR0             equ	16311	;# 
 16105   003FB8                     T0CON0          equ	16312	;# 
 16106   003FB9                     T0CON1          equ	16313	;# 
 16107   003FBA                     LATA            equ	16314	;# 
 16108   003FBB                     LATB            equ	16315	;# 
 16109   003FBC                     LATC            equ	16316	;# 
 16110   003FBD                     LATD            equ	16317	;# 
 16111   003FBE                     LATE            equ	16318	;# 
 16112   003FBF                     LATF            equ	16319	;# 
 16113   003FC2                     TRISA           equ	16322	;# 
 16114   003FC3                     TRISB           equ	16323	;# 
 16115   003FC4                     TRISC           equ	16324	;# 
 16116   003FC5                     TRISD           equ	16325	;# 
 16117   003FC6                     TRISE           equ	16326	;# 
 16118   003FC7                     TRISF           equ	16327	;# 
 16119   003FCA                     PORTA           equ	16330	;# 
 16120   003FCB                     PORTB           equ	16331	;# 
 16121   003FCC                     PORTC           equ	16332	;# 
 16122   003FCD                     PORTD           equ	16333	;# 
 16123   003FCE                     PORTE           equ	16334	;# 
 16124   003FCF                     PORTF           equ	16335	;# 
 16125   003FD2                     INTCON0         equ	16338	;# 
 16126   003FD3                     INTCON1         equ	16339	;# 
 16127   003FD4                     IVTLOCK         equ	16340	;# 
 16128   003FD5                     IVTBASE         equ	16341	;# 
 16129   003FD5                     IVTBASEL        equ	16341	;# 
 16130   003FD6                     IVTBASEH        equ	16342	;# 
 16131   003FD7                     IVTBASEU        equ	16343	;# 
 16132   003FD8                     STATUS          equ	16344	;# 
 16133   003FD9                     FSR2            equ	16345	;# 
 16134   003FD9                     FSR2L           equ	16345	;# 
 16135   003FDA                     FSR2H           equ	16346	;# 
 16136   003FDB                     PLUSW2          equ	16347	;# 
 16137   003FDC                     PREINC2         equ	16348	;# 
 16138   003FDD                     POSTDEC2        equ	16349	;# 
 16139   003FDE                     POSTINC2        equ	16350	;# 
 16140   003FDF                     INDF2           equ	16351	;# 
 16141   003FE0                     BSR             equ	16352	;# 
 16142   003FE1                     FSR1            equ	16353	;# 
 16143   003FE1                     FSR1L           equ	16353	;# 
 16144   003FE2                     FSR1H           equ	16354	;# 
 16145   003FE3                     PLUSW1          equ	16355	;# 
 16146   003FE4                     PREINC1         equ	16356	;# 
 16147   003FE5                     POSTDEC1        equ	16357	;# 
 16148   003FE6                     POSTINC1        equ	16358	;# 
 16149   003FE7                     INDF1           equ	16359	;# 
 16150   003FE8                     WREG            equ	16360	;# 
 16151   003FE9                     FSR0            equ	16361	;# 
 16152   003FE9                     FSR0L           equ	16361	;# 
 16153   003FEA                     FSR0H           equ	16362	;# 
 16154   003FEB                     PLUSW0          equ	16363	;# 
 16155   003FEC                     PREINC0         equ	16364	;# 
 16156   003FED                     POSTDEC0        equ	16365	;# 
 16157   003FEE                     POSTINC0        equ	16366	;# 
 16158   003FEF                     INDF0           equ	16367	;# 
 16159   003FF0                     PCON0           equ	16368	;# 
 16160   003FF1                     PCON1           equ	16369	;# 
 16161   003FF3                     PROD            equ	16371	;# 
 16162   003FF3                     PRODL           equ	16371	;# 
 16163   003FF4                     PRODH           equ	16372	;# 
 16164   003FF5                     TABLAT          equ	16373	;# 
 16165   003FF6                     TBLPTR          equ	16374	;# 
 16166   003FF6                     TBLPTRL         equ	16374	;# 
 16167   003FF7                     TBLPTRH         equ	16375	;# 
 16168   003FF8                     TBLPTRU         equ	16376	;# 
 16169   003FF9                     PCLAT           equ	16377	;# 
 16170   003FF9                     PCL             equ	16377	;# 
 16171   003FFA                     PCLATH          equ	16378	;# 
 16172   003FFB                     PCLATU          equ	16379	;# 
 16173   003FFC                     STKPTR          equ	16380	;# 
 16174   003FFD                     TOS             equ	16381	;# 
 16175   003FFD                     TOSL            equ	16381	;# 
 16176   003FFE                     TOSH            equ	16382	;# 
 16177   003FFF                     TOSU            equ	16383	;# 
 16178   003880                     STATUS_CSHAD    equ	14464	;# 
 16179   003881                     WREG_CSHAD      equ	14465	;# 
 16180   003882                     BSR_CSHAD       equ	14466	;# 
 16181   003883                     SHADCON         equ	14467	;# 
 16182   003884                     STATUS_SHAD     equ	14468	;# 
 16183   003885                     WREG_SHAD       equ	14469	;# 
 16184   003886                     BSR_SHAD        equ	14470	;# 
 16185   003887                     PCLATH_SHAD     equ	14471	;# 
 16186   003888                     PCLATU_SHAD     equ	14472	;# 
 16187   003889                     FSR0SH          equ	14473	;# 
 16188   003889                     FSR0L_SHAD      equ	14473	;# 
 16189   00388A                     FSR0H_SHAD      equ	14474	;# 
 16190   00388B                     FSR1SH          equ	14475	;# 
 16191   00388B                     FSR1L_SHAD      equ	14475	;# 
 16192   00388C                     FSR1H_SHAD      equ	14476	;# 
 16193   00388D                     FSR2SH          equ	14477	;# 
 16194   00388D                     FSR2L_SHAD      equ	14477	;# 
 16195   00388E                     FSR2H_SHAD      equ	14478	;# 
 16196   00388F                     PRODSH          equ	14479	;# 
 16197   00388F                     PRODL_SHAD      equ	14479	;# 
 16198   003890                     PRODH_SHAD      equ	14480	;# 
 16199   00389D                     IVTADL          equ	14493	;# 
 16200   00389E                     IVTADH          equ	14494	;# 
 16201   00389F                     IVTADU          equ	14495	;# 
 16202   00395B                     WDTCON0         equ	14683	;# 
 16203   00395C                     WDTCON1         equ	14684	;# 
 16204   00395D                     WDTPSL          equ	14685	;# 
 16205   00395E                     WDTPSH          equ	14686	;# 
 16206   00395F                     WDTTMR          equ	14687	;# 
 16207   003960                     CRCDATA         equ	14688	;# 
 16208   003960                     CRCDATL         equ	14688	;# 
 16209   003961                     CRCDATH         equ	14689	;# 
 16210   003962                     CRCACC          equ	14690	;# 
 16211   003962                     CRCACCL         equ	14690	;# 
 16212   003963                     CRCACCH         equ	14691	;# 
 16213   003964                     CRCSHFT         equ	14692	;# 
 16214   003964                     CRCSHIFTL       equ	14692	;# 
 16215   003965                     CRCSHIFTH       equ	14693	;# 
 16216   003966                     CRCXOR          equ	14694	;# 
 16217   003966                     CRCXORL         equ	14694	;# 
 16218   003967                     CRCXORH         equ	14695	;# 
 16219   003968                     CRCCON0         equ	14696	;# 
 16220   003969                     CRCCON1         equ	14697	;# 
 16221   003976                     SCANLADR        equ	14710	;# 
 16222   003976                     SCANLADRL       equ	14710	;# 
 16223   003977                     SCANLADRH       equ	14711	;# 
 16224   003978                     SCANLADRU       equ	14712	;# 
 16225   003979                     SCANHADR        equ	14713	;# 
 16226   003979                     SCANHADRL       equ	14713	;# 
 16227   00397A                     SCANHADRH       equ	14714	;# 
 16228   00397B                     SCANHADRU       equ	14715	;# 
 16229   00397C                     SCANCON0        equ	14716	;# 
 16230   00397D                     SCANTRIG        equ	14717	;# 
 16231   003980                     IPR0            equ	14720	;# 
 16232   003981                     IPR1            equ	14721	;# 
 16233   003982                     IPR2            equ	14722	;# 
 16234   003983                     IPR3            equ	14723	;# 
 16235   003984                     IPR4            equ	14724	;# 
 16236   003985                     IPR5            equ	14725	;# 
 16237   003986                     IPR6            equ	14726	;# 
 16238   003987                     IPR7            equ	14727	;# 
 16239   003988                     IPR8            equ	14728	;# 
 16240   003989                     IPR9            equ	14729	;# 
 16241   00398A                     IPR10           equ	14730	;# 
 16242   003990                     PIE0            equ	14736	;# 
 16243   003991                     PIE1            equ	14737	;# 
 16244   003992                     PIE2            equ	14738	;# 
 16245   003993                     PIE3            equ	14739	;# 
 16246   003994                     PIE4            equ	14740	;# 
 16247   003995                     PIE5            equ	14741	;# 
 16248   003996                     PIE6            equ	14742	;# 
 16249   003997                     PIE7            equ	14743	;# 
 16250   003998                     PIE8            equ	14744	;# 
 16251   003999                     PIE9            equ	14745	;# 
 16252   00399A                     PIE10           equ	14746	;# 
 16253   0039A0                     PIR0            equ	14752	;# 
 16254   0039A1                     PIR1            equ	14753	;# 
 16255   0039A2                     PIR2            equ	14754	;# 
 16256   0039A3                     PIR3            equ	14755	;# 
 16257   0039A4                     PIR4            equ	14756	;# 
 16258   0039A5                     PIR5            equ	14757	;# 
 16259   0039A6                     PIR6            equ	14758	;# 
 16260   0039A7                     PIR7            equ	14759	;# 
 16261   0039A8                     PIR8            equ	14760	;# 
 16262   0039A9                     PIR9            equ	14761	;# 
 16263   0039AA                     PIR10           equ	14762	;# 
 16264   0039C0                     PMD0            equ	14784	;# 
 16265   0039C1                     PMD1            equ	14785	;# 
 16266   0039C2                     PMD2            equ	14786	;# 
 16267   0039C3                     PMD3            equ	14787	;# 
 16268   0039C4                     PMD4            equ	14788	;# 
 16269   0039C5                     PMD5            equ	14789	;# 
 16270   0039C6                     PMD6            equ	14790	;# 
 16271   0039C7                     PMD7            equ	14791	;# 
 16272   0039D0                     BORCON          equ	14800	;# 
 16273   0039D1                     VREGCON         equ	14801	;# 
 16274   0039D8                     CPUDOZE         equ	14808	;# 
 16275   0039D9                     OSCCON1         equ	14809	;# 
 16276   0039DA                     OSCCON2         equ	14810	;# 
 16277   0039DB                     OSCCON3         equ	14811	;# 
 16278   0039DC                     OSCSTAT         equ	14812	;# 
 16279   0039DC                     OSCSTAT1        equ	14812	;# 
 16280   0039DD                     OSCEN           equ	14813	;# 
 16281   0039DE                     OSCTUNE         equ	14814	;# 
 16282   0039DF                     OSCFRQ          equ	14815	;# 
 16283   0039E0                     NVMADRL         equ	14816	;# 
 16284   0039E1                     NVMADRH         equ	14817	;# 
 16285   0039E3                     NVMDAT          equ	14819	;# 
 16286   0039E5                     NVMCON1         equ	14821	;# 
 16287   0039E6                     NVMCON2         equ	14822	;# 
 16288   0039EF                     PRLOCK          equ	14831	;# 
 16289   0039F1                     ISRPR           equ	14833	;# 
 16290   0039F2                     MAINPR          equ	14834	;# 
 16291   0039F3                     DMA1PR          equ	14835	;# 
 16292   0039F4                     DMA2PR          equ	14836	;# 
 16293   0039F7                     SCANPR          equ	14839	;# 
 16294   003A00                     RA0PPS          equ	14848	;# 
 16295   003A01                     RA1PPS          equ	14849	;# 
 16296   003A02                     RA2PPS          equ	14850	;# 
 16297   003A03                     RA3PPS          equ	14851	;# 
 16298   003A04                     RA4PPS          equ	14852	;# 
 16299   003A05                     RA5PPS          equ	14853	;# 
 16300   003A06                     RA6PPS          equ	14854	;# 
 16301   003A07                     RA7PPS          equ	14855	;# 
 16302   003A08                     RB0PPS          equ	14856	;# 
 16303   003A09                     RB1PPS          equ	14857	;# 
 16304   003A0A                     RB2PPS          equ	14858	;# 
 16305   003A0B                     RB3PPS          equ	14859	;# 
 16306   003A0C                     RB4PPS          equ	14860	;# 
 16307   003A0D                     RB5PPS          equ	14861	;# 
 16308   003A0E                     RB6PPS          equ	14862	;# 
 16309   003A0F                     RB7PPS          equ	14863	;# 
 16310   003A10                     RC0PPS          equ	14864	;# 
 16311   003A11                     RC1PPS          equ	14865	;# 
 16312   003A12                     RC2PPS          equ	14866	;# 
 16313   003A13                     RC3PPS          equ	14867	;# 
 16314   003A14                     RC4PPS          equ	14868	;# 
 16315   003A15                     RC5PPS          equ	14869	;# 
 16316   003A16                     RC6PPS          equ	14870	;# 
 16317   003A17                     RC7PPS          equ	14871	;# 
 16318   003A18                     RD0PPS          equ	14872	;# 
 16319   003A19                     RD1PPS          equ	14873	;# 
 16320   003A1A                     RD2PPS          equ	14874	;# 
 16321   003A1B                     RD3PPS          equ	14875	;# 
 16322   003A1C                     RD4PPS          equ	14876	;# 
 16323   003A1D                     RD5PPS          equ	14877	;# 
 16324   003A1E                     RD6PPS          equ	14878	;# 
 16325   003A1F                     RD7PPS          equ	14879	;# 
 16326   003A20                     RE0PPS          equ	14880	;# 
 16327   003A21                     RE1PPS          equ	14881	;# 
 16328   003A22                     RE2PPS          equ	14882	;# 
 16329   003A28                     RF0PPS          equ	14888	;# 
 16330   003A29                     RF1PPS          equ	14889	;# 
 16331   003A2A                     RF2PPS          equ	14890	;# 
 16332   003A2B                     RF3PPS          equ	14891	;# 
 16333   003A2C                     RF4PPS          equ	14892	;# 
 16334   003A2D                     RF5PPS          equ	14893	;# 
 16335   003A2E                     RF6PPS          equ	14894	;# 
 16336   003A2F                     RF7PPS          equ	14895	;# 
 16337   003A40                     ANSELA          equ	14912	;# 
 16338   003A41                     WPUA            equ	14913	;# 
 16339   003A42                     ODCONA          equ	14914	;# 
 16340   003A43                     SLRCONA         equ	14915	;# 
 16341   003A44                     INLVLA          equ	14916	;# 
 16342   003A45                     IOCAP           equ	14917	;# 
 16343   003A46                     IOCAN           equ	14918	;# 
 16344   003A47                     IOCAF           equ	14919	;# 
 16345   003A50                     ANSELB          equ	14928	;# 
 16346   003A51                     WPUB            equ	14929	;# 
 16347   003A52                     ODCONB          equ	14930	;# 
 16348   003A53                     SLRCONB         equ	14931	;# 
 16349   003A54                     INLVLB          equ	14932	;# 
 16350   003A55                     IOCBP           equ	14933	;# 
 16351   003A56                     IOCBN           equ	14934	;# 
 16352   003A57                     IOCBF           equ	14935	;# 
 16353   003A5A                     RB1I2C          equ	14938	;# 
 16354   003A5B                     RB2I2C          equ	14939	;# 
 16355   003A60                     ANSELC          equ	14944	;# 
 16356   003A61                     WPUC            equ	14945	;# 
 16357   003A62                     ODCONC          equ	14946	;# 
 16358   003A63                     SLRCONC         equ	14947	;# 
 16359   003A64                     INLVLC          equ	14948	;# 
 16360   003A65                     IOCCP           equ	14949	;# 
 16361   003A66                     IOCCN           equ	14950	;# 
 16362   003A67                     IOCCF           equ	14951	;# 
 16363   003A6A                     RC3I2C          equ	14954	;# 
 16364   003A6B                     RC4I2C          equ	14955	;# 
 16365   003A70                     ANSELD          equ	14960	;# 
 16366   003A71                     WPUD            equ	14961	;# 
 16367   003A72                     ODCOND          equ	14962	;# 
 16368   003A73                     SLRCOND         equ	14963	;# 
 16369   003A74                     INLVLD          equ	14964	;# 
 16370   003A7A                     RD0I2C          equ	14970	;# 
 16371   003A7B                     RD1I2C          equ	14971	;# 
 16372   003A80                     ANSELE          equ	14976	;# 
 16373   003A81                     WPUE            equ	14977	;# 
 16374   003A82                     ODCONE          equ	14978	;# 
 16375   003A83                     SLRCONE         equ	14979	;# 
 16376   003A84                     INLVLE          equ	14980	;# 
 16377   003A85                     IOCEP           equ	14981	;# 
 16378   003A86                     IOCEN           equ	14982	;# 
 16379   003A87                     IOCEF           equ	14983	;# 
 16380   003A90                     ANSELF          equ	14992	;# 
 16381   003A91                     WPUF            equ	14993	;# 
 16382   003A92                     ODCONF          equ	14994	;# 
 16383   003A93                     SLRCONF         equ	14995	;# 
 16384   003A94                     INLVLF          equ	14996	;# 
 16385   003ABF                     PPSLOCK         equ	15039	;# 
 16386   003AC0                     INT0PPS         equ	15040	;# 
 16387   003AC1                     INT1PPS         equ	15041	;# 
 16388   003AC2                     INT2PPS         equ	15042	;# 
 16389   003AC3                     T0CKIPPS        equ	15043	;# 
 16390   003AC4                     T1CKIPPS        equ	15044	;# 
 16391   003AC5                     T1GPPS          equ	15045	;# 
 16392   003AC6                     T3CKIPPS        equ	15046	;# 
 16393   003AC7                     T3GPPS          equ	15047	;# 
 16394   003AC8                     T5CKIPPS        equ	15048	;# 
 16395   003AC9                     T5GPPS          equ	15049	;# 
 16396   003ACA                     T2INPPS         equ	15050	;# 
 16397   003ACB                     T4INPPS         equ	15051	;# 
 16398   003ACC                     T6INPPS         equ	15052	;# 
 16399   003ACD                     CCP1PPS         equ	15053	;# 
 16400   003ACE                     CCP2PPS         equ	15054	;# 
 16401   003ACF                     CCP3PPS         equ	15055	;# 
 16402   003AD0                     CCP4PPS         equ	15056	;# 
 16403   003AD1                     SMT1WINPPS      equ	15057	;# 
 16404   003AD2                     SMT1SIGPPS      equ	15058	;# 
 16405   003AD3                     CWG1INPPS       equ	15059	;# 
 16406   003AD4                     CWG2INPPS       equ	15060	;# 
 16407   003AD5                     CWG3INPPS       equ	15061	;# 
 16408   003AD6                     MD1CARLPPS      equ	15062	;# 
 16409   003AD7                     MD1CARHPPS      equ	15063	;# 
 16410   003AD8                     MD1SRCPPS       equ	15064	;# 
 16411   003AD9                     CLCIN0PPS       equ	15065	;# 
 16412   003ADA                     CLCIN1PPS       equ	15066	;# 
 16413   003ADB                     CLCIN2PPS       equ	15067	;# 
 16414   003ADC                     CLCIN3PPS       equ	15068	;# 
 16415   003ADD                     ADACTPPS        equ	15069	;# 
 16416   003ADE                     SPI1SCKPPS      equ	15070	;# 
 16417   003ADF                     SPI1SDIPPS      equ	15071	;# 
 16418   003AE0                     SPI1SSPPS       equ	15072	;# 
 16419   003AE1                     I2C1SCLPPS      equ	15073	;# 
 16420   003AE2                     I2C1SDAPPS      equ	15074	;# 
 16421   003AE3                     I2C2SCLPPS      equ	15075	;# 
 16422   003AE4                     I2C2SDAPPS      equ	15076	;# 
 16423   003AE5                     U1RXPPS         equ	15077	;# 
 16424   003AE6                     U1CTSPPS        equ	15078	;# 
 16425   003AE8                     U2RXPPS         equ	15080	;# 
 16426   003AE9                     U2CTSPPS        equ	15081	;# 
 16427   003BC9                     DMA2BUF         equ	15305	;# 
 16428   003BCA                     DMA2DCNT        equ	15306	;# 
 16429   003BCA                     DMA2DCNTL       equ	15306	;# 
 16430   003BCB                     DMA2DCNTH       equ	15307	;# 
 16431   003BCC                     DMA2DPTR        equ	15308	;# 
 16432   003BCC                     DMA2DPTRL       equ	15308	;# 
 16433   003BCD                     DMA2DPTRH       equ	15309	;# 
 16434   003BCE                     DMA2DSZ         equ	15310	;# 
 16435   003BCE                     DMA2DSZL        equ	15310	;# 
 16436   003BCF                     DMA2DSZH        equ	15311	;# 
 16437   003BD0                     DMA2DSA         equ	15312	;# 
 16438   003BD0                     DMA2DSAL        equ	15312	;# 
 16439   003BD1                     DMA2DSAH        equ	15313	;# 
 16440   003BD2                     DMA2SCNT        equ	15314	;# 
 16441   003BD2                     DMA2SCNTL       equ	15314	;# 
 16442   003BD3                     DMA2SCNTH       equ	15315	;# 
 16443   003BD4                     DMA2SPTR        equ	15316	;# 
 16444   003BD4                     DMA2SPTRL       equ	15316	;# 
 16445   003BD5                     DMA2SPTRH       equ	15317	;# 
 16446   003BD6                     DMA2SPTRU       equ	15318	;# 
 16447   003BD7                     DMA2SSZ         equ	15319	;# 
 16448   003BD7                     DMA2SSZL        equ	15319	;# 
 16449   003BD8                     DMA2SSZH        equ	15320	;# 
 16450   003BD9                     DMA2SSA         equ	15321	;# 
 16451   003BD9                     DMA2SSAL        equ	15321	;# 
 16452   003BDA                     DMA2SSAH        equ	15322	;# 
 16453   003BDB                     DMA2SSAU        equ	15323	;# 
 16454   003BDC                     DMA2CON0        equ	15324	;# 
 16455   003BDD                     DMA2CON1        equ	15325	;# 
 16456   003BDE                     DMA2AIRQ        equ	15326	;# 
 16457   003BDF                     DMA2SIRQ        equ	15327	;# 
 16458   003BE9                     DMA1BUF         equ	15337	;# 
 16459   003BEA                     DMA1DCNT        equ	15338	;# 
 16460   003BEA                     DMA1DCNTL       equ	15338	;# 
 16461   003BEB                     DMA1DCNTH       equ	15339	;# 
 16462   003BEC                     DMA1DPTR        equ	15340	;# 
 16463   003BEC                     DMA1DPTRL       equ	15340	;# 
 16464   003BED                     DMA1DPTRH       equ	15341	;# 
 16465   003BEE                     DMA1DSZ         equ	15342	;# 
 16466   003BEE                     DMA1DSZL        equ	15342	;# 
 16467   003BEF                     DMA1DSZH        equ	15343	;# 
 16468   003BF0                     DMA1DSA         equ	15344	;# 
 16469   003BF0                     DMA1DSAL        equ	15344	;# 
 16470   003BF1                     DMA1DSAH        equ	15345	;# 
 16471   003BF2                     DMA1SCNT        equ	15346	;# 
 16472   003BF2                     DMA1SCNTL       equ	15346	;# 
 16473   003BF3                     DMA1SCNTH       equ	15347	;# 
 16474   003BF4                     DMA1SPTR        equ	15348	;# 
 16475   003BF4                     DMA1SPTRL       equ	15348	;# 
 16476   003BF5                     DMA1SPTRH       equ	15349	;# 
 16477   003BF6                     DMA1SPTRU       equ	15350	;# 
 16478   003BF7                     DMA1SSZ         equ	15351	;# 
 16479   003BF7                     DMA1SSZL        equ	15351	;# 
 16480   003BF8                     DMA1SSZH        equ	15352	;# 
 16481   003BF9                     DMA1SSA         equ	15353	;# 
 16482   003BF9                     DMA1SSAL        equ	15353	;# 
 16483   003BFA                     DMA1SSAH        equ	15354	;# 
 16484   003BFB                     DMA1SSAU        equ	15355	;# 
 16485   003BFC                     DMA1CON0        equ	15356	;# 
 16486   003BFD                     DMA1CON1        equ	15357	;# 
 16487   003BFE                     DMA1AIRQ        equ	15358	;# 
 16488   003BFF                     DMA1SIRQ        equ	15359	;# 
 16489   003C56                     CLC4CON         equ	15446	;# 
 16490   003C57                     CLC4POL         equ	15447	;# 
 16491   003C58                     CLC4SEL0        equ	15448	;# 
 16492   003C59                     CLC4SEL1        equ	15449	;# 
 16493   003C5A                     CLC4SEL2        equ	15450	;# 
 16494   003C5B                     CLC4SEL3        equ	15451	;# 
 16495   003C5C                     CLC4GLS0        equ	15452	;# 
 16496   003C5D                     CLC4GLS1        equ	15453	;# 
 16497   003C5E                     CLC4GLS2        equ	15454	;# 
 16498   003C5F                     CLC4GLS3        equ	15455	;# 
 16499   003C60                     CLC3CON         equ	15456	;# 
 16500   003C61                     CLC3POL         equ	15457	;# 
 16501   003C62                     CLC3SEL0        equ	15458	;# 
 16502   003C63                     CLC3SEL1        equ	15459	;# 
 16503   003C64                     CLC3SEL2        equ	15460	;# 
 16504   003C65                     CLC3SEL3        equ	15461	;# 
 16505   003C66                     CLC3GLS0        equ	15462	;# 
 16506   003C67                     CLC3GLS1        equ	15463	;# 
 16507   003C68                     CLC3GLS2        equ	15464	;# 
 16508   003C69                     CLC3GLS3        equ	15465	;# 
 16509   003C6A                     CLC2CON         equ	15466	;# 
 16510   003C6B                     CLC2POL         equ	15467	;# 
 16511   003C6C                     CLC2SEL0        equ	15468	;# 
 16512   003C6D                     CLC2SEL1        equ	15469	;# 
 16513   003C6E                     CLC2SEL2        equ	15470	;# 
 16514   003C6F                     CLC2SEL3        equ	15471	;# 
 16515   003C70                     CLC2GLS0        equ	15472	;# 
 16516   003C71                     CLC2GLS1        equ	15473	;# 
 16517   003C72                     CLC2GLS2        equ	15474	;# 
 16518   003C73                     CLC2GLS3        equ	15475	;# 
 16519   003C74                     CLC1CON         equ	15476	;# 
 16520   003C75                     CLC1POL         equ	15477	;# 
 16521   003C76                     CLC1SEL0        equ	15478	;# 
 16522   003C77                     CLC1SEL1        equ	15479	;# 
 16523   003C78                     CLC1SEL2        equ	15480	;# 
 16524   003C79                     CLC1SEL3        equ	15481	;# 
 16525   003C7A                     CLC1GLS0        equ	15482	;# 
 16526   003C7B                     CLC1GLS1        equ	15483	;# 
 16527   003C7C                     CLC1GLS2        equ	15484	;# 
 16528   003C7D                     CLC1GLS3        equ	15485	;# 
 16529   003C7E                     CLCDATA0        equ	15486	;# 
 16530   003CE5                     CLKRCON         equ	15589	;# 
 16531   003CE6                     CLKRCLK         equ	15590	;# 
 16532   003CFA                     MD1CON0         equ	15610	;# 
 16533   003CFB                     MD1CON1         equ	15611	;# 
 16534   003CFC                     MD1SRC          equ	15612	;# 
 16535   003CFD                     MD1CARL         equ	15613	;# 
 16536   003CFE                     MD1CARH         equ	15614	;# 
 16537   003D10                     SPI1RXB         equ	15632	;# 
 16538   003D11                     SPI1TXB         equ	15633	;# 
 16539   003D12                     SPI1TCNT        equ	15634	;# 
 16540   003D12                     SPI1TCNTL       equ	15634	;# 
 16541   003D13                     SPI1TCNTH       equ	15635	;# 
 16542   003D14                     SPI1CON0        equ	15636	;# 
 16543   003D15                     SPI1CON1        equ	15637	;# 
 16544   003D16                     SPI1CON2        equ	15638	;# 
 16545   003D17                     SPI1STATUS      equ	15639	;# 
 16546   003D18                     SPI1TWIDTH      equ	15640	;# 
 16547   003D19                     SPI1BAUD        equ	15641	;# 
 16548   003D1A                     SPI1INTF        equ	15642	;# 
 16549   003D1B                     SPI1INTE        equ	15643	;# 
 16550   003D1C                     SPI1CLK         equ	15644	;# 
 16551   003D54                     I2C2RXB         equ	15700	;# 
 16552   003D55                     I2C2TXB         equ	15701	;# 
 16553   003D56                     I2C2CNT         equ	15702	;# 
 16554   003D57                     I2C2ADB0        equ	15703	;# 
 16555   003D58                     I2C2ADB1        equ	15704	;# 
 16556   003D59                     I2C2ADR0        equ	15705	;# 
 16557   003D5A                     I2C2ADR1        equ	15706	;# 
 16558   003D5B                     I2C2ADR2        equ	15707	;# 
 16559   003D5C                     I2C2ADR3        equ	15708	;# 
 16560   003D5D                     I2C2CON0        equ	15709	;# 
 16561   003D5E                     I2C2CON1        equ	15710	;# 
 16562   003D5F                     I2C2CON2        equ	15711	;# 
 16563   003D60                     I2C2ERR         equ	15712	;# 
 16564   003D61                     I2C2STAT0       equ	15713	;# 
 16565   003D62                     I2C2STAT1       equ	15714	;# 
 16566   003D63                     I2C2PIR         equ	15715	;# 
 16567   003D64                     I2C2PIE         equ	15716	;# 
 16568   003D65                     I2C2CLK         equ	15717	;# 
 16569   003D66                     I2C2BTO         equ	15718	;# 
 16570   003D6A                     I2C1RXB         equ	15722	;# 
 16571   003D6B                     I2C1TXB         equ	15723	;# 
 16572   003D6C                     I2C1CNT         equ	15724	;# 
 16573   003D6D                     I2C1ADB0        equ	15725	;# 
 16574   003D6E                     I2C1ADB1        equ	15726	;# 
 16575   003D6F                     I2C1ADR0        equ	15727	;# 
 16576   003D70                     I2C1ADR1        equ	15728	;# 
 16577   003D71                     I2C1ADR2        equ	15729	;# 
 16578   003D72                     I2C1ADR3        equ	15730	;# 
 16579   003D73                     I2C1CON0        equ	15731	;# 
 16580   003D74                     I2C1CON1        equ	15732	;# 
 16581   003D75                     I2C1CON2        equ	15733	;# 
 16582   003D76                     I2C1ERR         equ	15734	;# 
 16583   003D77                     I2C1STAT0       equ	15735	;# 
 16584   003D78                     I2C1STAT1       equ	15736	;# 
 16585   003D79                     I2C1PIR         equ	15737	;# 
 16586   003D7A                     I2C1PIE         equ	15738	;# 
 16587   003D7B                     I2C1CLK         equ	15739	;# 
 16588   003D7C                     I2C1BTO         equ	15740	;# 
 16589   003DD0                     U2RXB           equ	15824	;# 
 16590   003DD0                     U2RXBL          equ	15824	;# 
 16591   003DD2                     U2TXB           equ	15826	;# 
 16592   003DD2                     U2TXBL          equ	15826	;# 
 16593   003DD4                     U2P1            equ	15828	;# 
 16594   003DD4                     U2P1L           equ	15828	;# 
 16595   003DD6                     U2P2            equ	15830	;# 
 16596   003DD6                     U2P2L           equ	15830	;# 
 16597   003DD8                     U2P3            equ	15832	;# 
 16598   003DD8                     U2P3L           equ	15832	;# 
 16599   003DDA                     U2CON0          equ	15834	;# 
 16600   003DDB                     U2CON1          equ	15835	;# 
 16601   003DDC                     U2CON2          equ	15836	;# 
 16602   003DDD                     U2BRG           equ	15837	;# 
 16603   003DDD                     U2BRGL          equ	15837	;# 
 16604   003DDE                     U2BRGH          equ	15838	;# 
 16605   003DDF                     U2FIFO          equ	15839	;# 
 16606   003DE0                     U2UIR           equ	15840	;# 
 16607   003DE1                     U2ERRIR         equ	15841	;# 
 16608   003DE2                     U2ERRIE         equ	15842	;# 
 16609   003DE8                     U1RXB           equ	15848	;# 
 16610   003DE8                     U1RXBL          equ	15848	;# 
 16611   003DE9                     U1RXCHK         equ	15849	;# 
 16612   003DEA                     U1TXB           equ	15850	;# 
 16613   003DEA                     U1TXBL          equ	15850	;# 
 16614   003DEB                     U1TXCHK         equ	15851	;# 
 16615   003DEC                     U1P1            equ	15852	;# 
 16616   003DEC                     U1P1L           equ	15852	;# 
 16617   003DED                     U1P1H           equ	15853	;# 
 16618   003DEE                     U1P2            equ	15854	;# 
 16619   003DEE                     U1P2L           equ	15854	;# 
 16620   003DEF                     U1P2H           equ	15855	;# 
 16621   003DF0                     U1P3            equ	15856	;# 
 16622   003DF0                     U1P3L           equ	15856	;# 
 16623   003DF1                     U1P3H           equ	15857	;# 
 16624   003DF2                     U1CON0          equ	15858	;# 
 16625   003DF3                     U1CON1          equ	15859	;# 
 16626   003DF4                     U1CON2          equ	15860	;# 
 16627   003DF5                     U1BRG           equ	15861	;# 
 16628   003DF5                     U1BRGL          equ	15861	;# 
 16629   003DF6                     U1BRGH          equ	15862	;# 
 16630   003DF7                     U1FIFO          equ	15863	;# 
 16631   003DF8                     U1UIR           equ	15864	;# 
 16632   003DF9                     U1ERRIR         equ	15865	;# 
 16633   003DFA                     U1ERRIE         equ	15866	;# 
 16634   003E9C                     DAC1CON1        equ	16028	;# 
 16635   003E9E                     DAC1CON0        equ	16030	;# 
 16636   003EB8                     CM2CON0         equ	16056	;# 
 16637   003EB9                     CM2CON1         equ	16057	;# 
 16638   003EBA                     CM2NCH          equ	16058	;# 
 16639   003EBB                     CM2PCH          equ	16059	;# 
 16640   003EBC                     CM1CON0         equ	16060	;# 
 16641   003EBD                     CM1CON1         equ	16061	;# 
 16642   003EBE                     CM1NCH          equ	16062	;# 
 16643   003EBF                     CM1PCH          equ	16063	;# 
 16644   003EC0                     CMOUT           equ	16064	;# 
 16645   003EC1                     FVRCON          equ	16065	;# 
 16646   003EC3                     ZCDCON          equ	16067	;# 
 16647   003EC9                     HLVDCON0        equ	16073	;# 
 16648   003ECA                     HLVDCON1        equ	16074	;# 
 16649   003ED7                     ADCP            equ	16087	;# 
 16650   003EDE                     ADLTH           equ	16094	;# 
 16651   003EDE                     ADLTHL          equ	16094	;# 
 16652   003EDF                     ADLTHH          equ	16095	;# 
 16653   003EE0                     ADUTH           equ	16096	;# 
 16654   003EE0                     ADUTHL          equ	16096	;# 
 16655   003EE1                     ADUTHH          equ	16097	;# 
 16656   003EE2                     ADERR           equ	16098	;# 
 16657   003EE2                     ADERRL          equ	16098	;# 
 16658   003EE3                     ADERRH          equ	16099	;# 
 16659   003EE4                     ADSTPT          equ	16100	;# 
 16660   003EE4                     ADSTPTL         equ	16100	;# 
 16661   003EE5                     ADSTPTH         equ	16101	;# 
 16662   003EE6                     ADFLTR          equ	16102	;# 
 16663   003EE6                     ADFLTRL         equ	16102	;# 
 16664   003EE7                     ADFLTRH         equ	16103	;# 
 16665   003EE8                     ADACC           equ	16104	;# 
 16666   003EE8                     ADACCL          equ	16104	;# 
 16667   003EE9                     ADACCH          equ	16105	;# 
 16668   003EEA                     ADACCU          equ	16106	;# 
 16669   003EEB                     ADCNT           equ	16107	;# 
 16670   003EEC                     ADRPT           equ	16108	;# 
 16671   003EED                     ADPREV          equ	16109	;# 
 16672   003EED                     ADPREVL         equ	16109	;# 
 16673   003EEE                     ADPREVH         equ	16110	;# 
 16674   003EEF                     ADRES           equ	16111	;# 
 16675   003EEF                     ADRESL          equ	16111	;# 
 16676   003EF0                     ADRESH          equ	16112	;# 
 16677   003EF1                     ADPCH           equ	16113	;# 
 16678   003EF3                     ADACQ           equ	16115	;# 
 16679   003EF3                     ADACQL          equ	16115	;# 
 16680   003EF4                     ADACQH          equ	16116	;# 
 16681   003EF5                     ADCAP           equ	16117	;# 
 16682   003EF6                     ADPRE           equ	16118	;# 
 16683   003EF6                     ADPREL          equ	16118	;# 
 16684   003EF7                     ADPREH          equ	16119	;# 
 16685   003EF8                     ADCON0          equ	16120	;# 
 16686   003EF9                     ADCON1          equ	16121	;# 
 16687   003EFA                     ADCON2          equ	16122	;# 
 16688   003EFB                     ADCON3          equ	16123	;# 
 16689   003EFC                     ADSTAT          equ	16124	;# 
 16690   003EFD                     ADREF           equ	16125	;# 
 16691   003EFE                     ADACT           equ	16126	;# 
 16692   003EFF                     ADCLK           equ	16127	;# 
 16693   003F12                     SMT1TMR         equ	16146	;# 
 16694   003F12                     SMT1TMRL        equ	16146	;# 
 16695   003F13                     SMT1TMRH        equ	16147	;# 
 16696   003F14                     SMT1TMRU        equ	16148	;# 
 16697   003F15                     SMT1CPR         equ	16149	;# 
 16698   003F15                     SMT1CPRL        equ	16149	;# 
 16699   003F16                     SMT1CPRH        equ	16150	;# 
 16700   003F17                     SMT1CPRU        equ	16151	;# 
 16701   003F18                     SMT1CPW         equ	16152	;# 
 16702   003F18                     SMT1CPWL        equ	16152	;# 
 16703   003F19                     SMT1CPWH        equ	16153	;# 
 16704   003F1A                     SMT1CPWU        equ	16154	;# 
 16705   003F1B                     SMT1PR          equ	16155	;# 
 16706   003F1B                     SMT1PRL         equ	16155	;# 
 16707   003F1C                     SMT1PRH         equ	16156	;# 
 16708   003F1D                     SMT1PRU         equ	16157	;# 
 16709   003F1E                     SMT1CON0        equ	16158	;# 
 16710   003F1F                     SMT1CON1        equ	16159	;# 
 16711   003F20                     SMT1STAT        equ	16160	;# 
 16712   003F21                     SMT1CLK         equ	16161	;# 
 16713   003F22                     SMT1SIG         equ	16162	;# 
 16714   003F23                     SMT1WIN         equ	16163	;# 
 16715   003F38                     NCO1ACC         equ	16184	;# 
 16716   003F38                     NCO1ACCL        equ	16184	;# 
 16717   003F39                     NCO1ACCH        equ	16185	;# 
 16718   003F3A                     NCO1ACCU        equ	16186	;# 
 16719   003F3B                     NCO1INC         equ	16187	;# 
 16720   003F3B                     NCO1INCL        equ	16187	;# 
 16721   003F3C                     NCO1INCH        equ	16188	;# 
 16722   003F3D                     NCO1INCU        equ	16189	;# 
 16723   003F3E                     NCO1CON         equ	16190	;# 
 16724   003F3F                     NCO1CLK         equ	16191	;# 
 16725   003F40                     CWG3CLK         equ	16192	;# 
 16726   003F40                     CWG3CLKCON      equ	16192	;# 
 16727   003F41                     CWG3ISM         equ	16193	;# 
 16728   003F41                     CWG3DAT         equ	16193	;# 
 16729   003F42                     CWG3DBR         equ	16194	;# 
 16730   003F43                     CWG3DBF         equ	16195	;# 
 16731   003F44                     CWG3CON0        equ	16196	;# 
 16732   003F45                     CWG3CON1        equ	16197	;# 
 16733   003F46                     CWG3AS0         equ	16198	;# 
 16734   003F47                     CWG3AS1         equ	16199	;# 
 16735   003F48                     CWG3STR         equ	16200	;# 
 16736   003F49                     CWG2CLK         equ	16201	;# 
 16737   003F49                     CWG2CLKCON      equ	16201	;# 
 16738   003F4A                     CWG2ISM         equ	16202	;# 
 16739   003F4A                     CWG2DAT         equ	16202	;# 
 16740   003F4B                     CWG2DBR         equ	16203	;# 
 16741   003F4C                     CWG2DBF         equ	16204	;# 
 16742   003F4D                     CWG2CON0        equ	16205	;# 
 16743   003F4E                     CWG2CON1        equ	16206	;# 
 16744   003F4F                     CWG2AS0         equ	16207	;# 
 16745   003F50                     CWG2AS1         equ	16208	;# 
 16746   003F51                     CWG2STR         equ	16209	;# 
 16747   003F52                     CWG1CLK         equ	16210	;# 
 16748   003F52                     CWG1CLKCON      equ	16210	;# 
 16749   003F53                     CWG1ISM         equ	16211	;# 
 16750   003F53                     CWG1DAT         equ	16211	;# 
 16751   003F54                     CWG1DBR         equ	16212	;# 
 16752   003F55                     CWG1DBF         equ	16213	;# 
 16753   003F56                     CWG1CON0        equ	16214	;# 
 16754   003F57                     CWG1CON1        equ	16215	;# 
 16755   003F58                     CWG1AS0         equ	16216	;# 
 16756   003F59                     CWG1AS1         equ	16217	;# 
 16757   003F5A                     CWG1STR         equ	16218	;# 
 16758   003F5E                     CCPTMRS0        equ	16222	;# 
 16759   003F5F                     CCPTMRS1        equ	16223	;# 
 16760   003F60                     PWM8DC          equ	16224	;# 
 16761   003F60                     PWM8DCL         equ	16224	;# 
 16762   003F61                     PWM8DCH         equ	16225	;# 
 16763   003F62                     PWM8CON         equ	16226	;# 
 16764   003F64                     PWM7DC          equ	16228	;# 
 16765   003F64                     PWM7DCL         equ	16228	;# 
 16766   003F65                     PWM7DCH         equ	16229	;# 
 16767   003F66                     PWM7CON         equ	16230	;# 
 16768   003F68                     PWM6DC          equ	16232	;# 
 16769   003F68                     PWM6DCL         equ	16232	;# 
 16770   003F69                     PWM6DCH         equ	16233	;# 
 16771   003F6A                     PWM6CON         equ	16234	;# 
 16772   003F6C                     PWM5DC          equ	16236	;# 
 16773   003F6C                     PWM5DCL         equ	16236	;# 
 16774   003F6D                     PWM5DCH         equ	16237	;# 
 16775   003F6E                     PWM5CON         equ	16238	;# 
 16776   003F70                     CCPR4           equ	16240	;# 
 16777   003F70                     CCPR4L          equ	16240	;# 
 16778   003F71                     CCPR4H          equ	16241	;# 
 16779   003F72                     CCP4CON         equ	16242	;# 
 16780   003F73                     CCP4CAP         equ	16243	;# 
 16781   003F74                     CCPR3           equ	16244	;# 
 16782   003F74                     CCPR3L          equ	16244	;# 
 16783   003F75                     CCPR3H          equ	16245	;# 
 16784   003F76                     CCP3CON         equ	16246	;# 
 16785   003F77                     CCP3CAP         equ	16247	;# 
 16786   003F78                     CCPR2           equ	16248	;# 
 16787   003F78                     CCPR2L          equ	16248	;# 
 16788   003F79                     CCPR2H          equ	16249	;# 
 16789   003F7A                     CCP2CON         equ	16250	;# 
 16790   003F7B                     CCP2CAP         equ	16251	;# 
 16791   003F7C                     CCPR1           equ	16252	;# 
 16792   003F7C                     CCPR1L          equ	16252	;# 
 16793   003F7D                     CCPR1H          equ	16253	;# 
 16794   003F7E                     CCP1CON         equ	16254	;# 
 16795   003F7F                     CCP1CAP         equ	16255	;# 
 16796   003F92                     T6TMR           equ	16274	;# 
 16797   003F92                     TMR6            equ	16274	;# 
 16798   003F93                     T6PR            equ	16275	;# 
 16799   003F93                     PR6             equ	16275	;# 
 16800   003F94                     T6CON           equ	16276	;# 
 16801   003F95                     T6HLT           equ	16277	;# 
 16802   003F96                     T6CLKCON        equ	16278	;# 
 16803   003F96                     T6CLK           equ	16278	;# 
 16804   003F97                     T6RST           equ	16279	;# 
 16805   003F98                     TMR5            equ	16280	;# 
 16806   003F98                     TMR5L           equ	16280	;# 
 16807   003F99                     TMR5H           equ	16281	;# 
 16808   003F9A                     T5CON           equ	16282	;# 
 16809   003F9A                     TMR5CON         equ	16282	;# 
 16810   003F9B                     T5GCON          equ	16283	;# 
 16811   003F9B                     TMR5GCON        equ	16283	;# 
 16812   003F9C                     T5GATE          equ	16284	;# 
 16813   003F9C                     TMR5GATE        equ	16284	;# 
 16814   003F9D                     T5CLK           equ	16285	;# 
 16815   003F9D                     TMR5CLK         equ	16285	;# 
 16816   003F9D                     PR5             equ	16285	;# 
 16817   003F9E                     T4TMR           equ	16286	;# 
 16818   003F9E                     TMR4            equ	16286	;# 
 16819   003F9F                     T4PR            equ	16287	;# 
 16820   003F9F                     PR4             equ	16287	;# 
 16821   003FA0                     T4CON           equ	16288	;# 
 16822   003FA1                     T4HLT           equ	16289	;# 
 16823   003FA2                     T4CLKCON        equ	16290	;# 
 16824   003FA2                     T4CLK           equ	16290	;# 
 16825   003FA3                     T4RST           equ	16291	;# 
 16826   003FA4                     TMR3            equ	16292	;# 
 16827   003FA4                     TMR3L           equ	16292	;# 
 16828   003FA5                     TMR3H           equ	16293	;# 
 16829   003FA6                     T3CON           equ	16294	;# 
 16830   003FA6                     TMR3CON         equ	16294	;# 
 16831   003FA7                     T3GCON          equ	16295	;# 
 16832   003FA7                     TMR3GCON        equ	16295	;# 
 16833   003FA8                     T3GATE          equ	16296	;# 
 16834   003FA8                     TMR3GATE        equ	16296	;# 
 16835   003FA9                     T3CLK           equ	16297	;# 
 16836   003FA9                     TMR3CLK         equ	16297	;# 
 16837   003FA9                     PR3             equ	16297	;# 
 16838   003FAA                     T2TMR           equ	16298	;# 
 16839   003FAA                     TMR2            equ	16298	;# 
 16840   003FAB                     T2PR            equ	16299	;# 
 16841   003FAB                     PR2             equ	16299	;# 
 16842   003FAC                     T2CON           equ	16300	;# 
 16843   003FAD                     T2HLT           equ	16301	;# 
 16844   003FAE                     T2CLKCON        equ	16302	;# 
 16845   003FAE                     T2CLK           equ	16302	;# 
 16846   003FAF                     T2RST           equ	16303	;# 
 16847   003FB0                     TMR1            equ	16304	;# 
 16848   003FB0                     TMR1L           equ	16304	;# 
 16849   003FB1                     TMR1H           equ	16305	;# 
 16850   003FB2                     T1CON           equ	16306	;# 
 16851   003FB2                     TMR1CON         equ	16306	;# 
 16852   003FB3                     T1GCON          equ	16307	;# 
 16853   003FB3                     TMR1GCON        equ	16307	;# 
 16854   003FB4                     T1GATE          equ	16308	;# 
 16855   003FB4                     TMR1GATE        equ	16308	;# 
 16856   003FB5                     T1CLK           equ	16309	;# 
 16857   003FB5                     TMR1CLK         equ	16309	;# 
 16858   003FB5                     PR1             equ	16309	;# 
 16859   003FB6                     TMR0L           equ	16310	;# 
 16860   003FB6                     TMR0            equ	16310	;# 
 16861   003FB7                     TMR0H           equ	16311	;# 
 16862   003FB7                     PR0             equ	16311	;# 
 16863   003FB8                     T0CON0          equ	16312	;# 
 16864   003FB9                     T0CON1          equ	16313	;# 
 16865   003FBA                     LATA            equ	16314	;# 
 16866   003FBB                     LATB            equ	16315	;# 
 16867   003FBC                     LATC            equ	16316	;# 
 16868   003FBD                     LATD            equ	16317	;# 
 16869   003FBE                     LATE            equ	16318	;# 
 16870   003FBF                     LATF            equ	16319	;# 
 16871   003FC2                     TRISA           equ	16322	;# 
 16872   003FC3                     TRISB           equ	16323	;# 
 16873   003FC4                     TRISC           equ	16324	;# 
 16874   003FC5                     TRISD           equ	16325	;# 
 16875   003FC6                     TRISE           equ	16326	;# 
 16876   003FC7                     TRISF           equ	16327	;# 
 16877   003FCA                     PORTA           equ	16330	;# 
 16878   003FCB                     PORTB           equ	16331	;# 
 16879   003FCC                     PORTC           equ	16332	;# 
 16880   003FCD                     PORTD           equ	16333	;# 
 16881   003FCE                     PORTE           equ	16334	;# 
 16882   003FCF                     PORTF           equ	16335	;# 
 16883   003FD2                     INTCON0         equ	16338	;# 
 16884   003FD3                     INTCON1         equ	16339	;# 
 16885   003FD4                     IVTLOCK         equ	16340	;# 
 16886   003FD5                     IVTBASE         equ	16341	;# 
 16887   003FD5                     IVTBASEL        equ	16341	;# 
 16888   003FD6                     IVTBASEH        equ	16342	;# 
 16889   003FD7                     IVTBASEU        equ	16343	;# 
 16890   003FD8                     STATUS          equ	16344	;# 
 16891   003FD9                     FSR2            equ	16345	;# 
 16892   003FD9                     FSR2L           equ	16345	;# 
 16893   003FDA                     FSR2H           equ	16346	;# 
 16894   003FDB                     PLUSW2          equ	16347	;# 
 16895   003FDC                     PREINC2         equ	16348	;# 
 16896   003FDD                     POSTDEC2        equ	16349	;# 
 16897   003FDE                     POSTINC2        equ	16350	;# 
 16898   003FDF                     INDF2           equ	16351	;# 
 16899   003FE0                     BSR             equ	16352	;# 
 16900   003FE1                     FSR1            equ	16353	;# 
 16901   003FE1                     FSR1L           equ	16353	;# 
 16902   003FE2                     FSR1H           equ	16354	;# 
 16903   003FE3                     PLUSW1          equ	16355	;# 
 16904   003FE4                     PREINC1         equ	16356	;# 
 16905   003FE5                     POSTDEC1        equ	16357	;# 
 16906   003FE6                     POSTINC1        equ	16358	;# 
 16907   003FE7                     INDF1           equ	16359	;# 
 16908   003FE8                     WREG            equ	16360	;# 
 16909   003FE9                     FSR0            equ	16361	;# 
 16910   003FE9                     FSR0L           equ	16361	;# 
 16911   003FEA                     FSR0H           equ	16362	;# 
 16912   003FEB                     PLUSW0          equ	16363	;# 
 16913   003FEC                     PREINC0         equ	16364	;# 
 16914   003FED                     POSTDEC0        equ	16365	;# 
 16915   003FEE                     POSTINC0        equ	16366	;# 
 16916   003FEF                     INDF0           equ	16367	;# 
 16917   003FF0                     PCON0           equ	16368	;# 
 16918   003FF1                     PCON1           equ	16369	;# 
 16919   003FF3                     PROD            equ	16371	;# 
 16920   003FF3                     PRODL           equ	16371	;# 
 16921   003FF4                     PRODH           equ	16372	;# 
 16922   003FF5                     TABLAT          equ	16373	;# 
 16923   003FF6                     TBLPTR          equ	16374	;# 
 16924   003FF6                     TBLPTRL         equ	16374	;# 
 16925   003FF7                     TBLPTRH         equ	16375	;# 
 16926   003FF8                     TBLPTRU         equ	16376	;# 
 16927   003FF9                     PCLAT           equ	16377	;# 
 16928   003FF9                     PCL             equ	16377	;# 
 16929   003FFA                     PCLATH          equ	16378	;# 
 16930   003FFB                     PCLATU          equ	16379	;# 
 16931   003FFC                     STKPTR          equ	16380	;# 
 16932   003FFD                     TOS             equ	16381	;# 
 16933   003FFD                     TOSL            equ	16381	;# 
 16934   003FFE                     TOSH            equ	16382	;# 
 16935   003FFF                     TOSU            equ	16383	;# 
 16936   003880                     STATUS_CSHAD    equ	14464	;# 
 16937   003881                     WREG_CSHAD      equ	14465	;# 
 16938   003882                     BSR_CSHAD       equ	14466	;# 
 16939   003883                     SHADCON         equ	14467	;# 
 16940   003884                     STATUS_SHAD     equ	14468	;# 
 16941   003885                     WREG_SHAD       equ	14469	;# 
 16942   003886                     BSR_SHAD        equ	14470	;# 
 16943   003887                     PCLATH_SHAD     equ	14471	;# 
 16944   003888                     PCLATU_SHAD     equ	14472	;# 
 16945   003889                     FSR0SH          equ	14473	;# 
 16946   003889                     FSR0L_SHAD      equ	14473	;# 
 16947   00388A                     FSR0H_SHAD      equ	14474	;# 
 16948   00388B                     FSR1SH          equ	14475	;# 
 16949   00388B                     FSR1L_SHAD      equ	14475	;# 
 16950   00388C                     FSR1H_SHAD      equ	14476	;# 
 16951   00388D                     FSR2SH          equ	14477	;# 
 16952   00388D                     FSR2L_SHAD      equ	14477	;# 
 16953   00388E                     FSR2H_SHAD      equ	14478	;# 
 16954   00388F                     PRODSH          equ	14479	;# 
 16955   00388F                     PRODL_SHAD      equ	14479	;# 
 16956   003890                     PRODH_SHAD      equ	14480	;# 
 16957   00389D                     IVTADL          equ	14493	;# 
 16958   00389E                     IVTADH          equ	14494	;# 
 16959   00389F                     IVTADU          equ	14495	;# 
 16960   00395B                     WDTCON0         equ	14683	;# 
 16961   00395C                     WDTCON1         equ	14684	;# 
 16962   00395D                     WDTPSL          equ	14685	;# 
 16963   00395E                     WDTPSH          equ	14686	;# 
 16964   00395F                     WDTTMR          equ	14687	;# 
 16965   003960                     CRCDATA         equ	14688	;# 
 16966   003960                     CRCDATL         equ	14688	;# 
 16967   003961                     CRCDATH         equ	14689	;# 
 16968   003962                     CRCACC          equ	14690	;# 
 16969   003962                     CRCACCL         equ	14690	;# 
 16970   003963                     CRCACCH         equ	14691	;# 
 16971   003964                     CRCSHFT         equ	14692	;# 
 16972   003964                     CRCSHIFTL       equ	14692	;# 
 16973   003965                     CRCSHIFTH       equ	14693	;# 
 16974   003966                     CRCXOR          equ	14694	;# 
 16975   003966                     CRCXORL         equ	14694	;# 
 16976   003967                     CRCXORH         equ	14695	;# 
 16977   003968                     CRCCON0         equ	14696	;# 
 16978   003969                     CRCCON1         equ	14697	;# 
 16979   003976                     SCANLADR        equ	14710	;# 
 16980   003976                     SCANLADRL       equ	14710	;# 
 16981   003977                     SCANLADRH       equ	14711	;# 
 16982   003978                     SCANLADRU       equ	14712	;# 
 16983   003979                     SCANHADR        equ	14713	;# 
 16984   003979                     SCANHADRL       equ	14713	;# 
 16985   00397A                     SCANHADRH       equ	14714	;# 
 16986   00397B                     SCANHADRU       equ	14715	;# 
 16987   00397C                     SCANCON0        equ	14716	;# 
 16988   00397D                     SCANTRIG        equ	14717	;# 
 16989   003980                     IPR0            equ	14720	;# 
 16990   003981                     IPR1            equ	14721	;# 
 16991   003982                     IPR2            equ	14722	;# 
 16992   003983                     IPR3            equ	14723	;# 
 16993   003984                     IPR4            equ	14724	;# 
 16994   003985                     IPR5            equ	14725	;# 
 16995   003986                     IPR6            equ	14726	;# 
 16996   003987                     IPR7            equ	14727	;# 
 16997   003988                     IPR8            equ	14728	;# 
 16998   003989                     IPR9            equ	14729	;# 
 16999   00398A                     IPR10           equ	14730	;# 
 17000   003990                     PIE0            equ	14736	;# 
 17001   003991                     PIE1            equ	14737	;# 
 17002   003992                     PIE2            equ	14738	;# 
 17003   003993                     PIE3            equ	14739	;# 
 17004   003994                     PIE4            equ	14740	;# 
 17005   003995                     PIE5            equ	14741	;# 
 17006   003996                     PIE6            equ	14742	;# 
 17007   003997                     PIE7            equ	14743	;# 
 17008   003998                     PIE8            equ	14744	;# 
 17009   003999                     PIE9            equ	14745	;# 
 17010   00399A                     PIE10           equ	14746	;# 
 17011   0039A0                     PIR0            equ	14752	;# 
 17012   0039A1                     PIR1            equ	14753	;# 
 17013   0039A2                     PIR2            equ	14754	;# 
 17014   0039A3                     PIR3            equ	14755	;# 
 17015   0039A4                     PIR4            equ	14756	;# 
 17016   0039A5                     PIR5            equ	14757	;# 
 17017   0039A6                     PIR6            equ	14758	;# 
 17018   0039A7                     PIR7            equ	14759	;# 
 17019   0039A8                     PIR8            equ	14760	;# 
 17020   0039A9                     PIR9            equ	14761	;# 
 17021   0039AA                     PIR10           equ	14762	;# 
 17022   0039C0                     PMD0            equ	14784	;# 
 17023   0039C1                     PMD1            equ	14785	;# 
 17024   0039C2                     PMD2            equ	14786	;# 
 17025   0039C3                     PMD3            equ	14787	;# 
 17026   0039C4                     PMD4            equ	14788	;# 
 17027   0039C5                     PMD5            equ	14789	;# 
 17028   0039C6                     PMD6            equ	14790	;# 
 17029   0039C7                     PMD7            equ	14791	;# 
 17030   0039D0                     BORCON          equ	14800	;# 
 17031   0039D1                     VREGCON         equ	14801	;# 
 17032   0039D8                     CPUDOZE         equ	14808	;# 
 17033   0039D9                     OSCCON1         equ	14809	;# 
 17034   0039DA                     OSCCON2         equ	14810	;# 
 17035   0039DB                     OSCCON3         equ	14811	;# 
 17036   0039DC                     OSCSTAT         equ	14812	;# 
 17037   0039DC                     OSCSTAT1        equ	14812	;# 
 17038   0039DD                     OSCEN           equ	14813	;# 
 17039   0039DE                     OSCTUNE         equ	14814	;# 
 17040   0039DF                     OSCFRQ          equ	14815	;# 
 17041   0039E0                     NVMADRL         equ	14816	;# 
 17042   0039E1                     NVMADRH         equ	14817	;# 
 17043   0039E3                     NVMDAT          equ	14819	;# 
 17044   0039E5                     NVMCON1         equ	14821	;# 
 17045   0039E6                     NVMCON2         equ	14822	;# 
 17046   0039EF                     PRLOCK          equ	14831	;# 
 17047   0039F1                     ISRPR           equ	14833	;# 
 17048   0039F2                     MAINPR          equ	14834	;# 
 17049   0039F3                     DMA1PR          equ	14835	;# 
 17050   0039F4                     DMA2PR          equ	14836	;# 
 17051   0039F7                     SCANPR          equ	14839	;# 
 17052   003A00                     RA0PPS          equ	14848	;# 
 17053   003A01                     RA1PPS          equ	14849	;# 
 17054   003A02                     RA2PPS          equ	14850	;# 
 17055   003A03                     RA3PPS          equ	14851	;# 
 17056   003A04                     RA4PPS          equ	14852	;# 
 17057   003A05                     RA5PPS          equ	14853	;# 
 17058   003A06                     RA6PPS          equ	14854	;# 
 17059   003A07                     RA7PPS          equ	14855	;# 
 17060   003A08                     RB0PPS          equ	14856	;# 
 17061   003A09                     RB1PPS          equ	14857	;# 
 17062   003A0A                     RB2PPS          equ	14858	;# 
 17063   003A0B                     RB3PPS          equ	14859	;# 
 17064   003A0C                     RB4PPS          equ	14860	;# 
 17065   003A0D                     RB5PPS          equ	14861	;# 
 17066   003A0E                     RB6PPS          equ	14862	;# 
 17067   003A0F                     RB7PPS          equ	14863	;# 
 17068   003A10                     RC0PPS          equ	14864	;# 
 17069   003A11                     RC1PPS          equ	14865	;# 
 17070   003A12                     RC2PPS          equ	14866	;# 
 17071   003A13                     RC3PPS          equ	14867	;# 
 17072   003A14                     RC4PPS          equ	14868	;# 
 17073   003A15                     RC5PPS          equ	14869	;# 
 17074   003A16                     RC6PPS          equ	14870	;# 
 17075   003A17                     RC7PPS          equ	14871	;# 
 17076   003A18                     RD0PPS          equ	14872	;# 
 17077   003A19                     RD1PPS          equ	14873	;# 
 17078   003A1A                     RD2PPS          equ	14874	;# 
 17079   003A1B                     RD3PPS          equ	14875	;# 
 17080   003A1C                     RD4PPS          equ	14876	;# 
 17081   003A1D                     RD5PPS          equ	14877	;# 
 17082   003A1E                     RD6PPS          equ	14878	;# 
 17083   003A1F                     RD7PPS          equ	14879	;# 
 17084   003A20                     RE0PPS          equ	14880	;# 
 17085   003A21                     RE1PPS          equ	14881	;# 
 17086   003A22                     RE2PPS          equ	14882	;# 
 17087   003A28                     RF0PPS          equ	14888	;# 
 17088   003A29                     RF1PPS          equ	14889	;# 
 17089   003A2A                     RF2PPS          equ	14890	;# 
 17090   003A2B                     RF3PPS          equ	14891	;# 
 17091   003A2C                     RF4PPS          equ	14892	;# 
 17092   003A2D                     RF5PPS          equ	14893	;# 
 17093   003A2E                     RF6PPS          equ	14894	;# 
 17094   003A2F                     RF7PPS          equ	14895	;# 
 17095   003A40                     ANSELA          equ	14912	;# 
 17096   003A41                     WPUA            equ	14913	;# 
 17097   003A42                     ODCONA          equ	14914	;# 
 17098   003A43                     SLRCONA         equ	14915	;# 
 17099   003A44                     INLVLA          equ	14916	;# 
 17100   003A45                     IOCAP           equ	14917	;# 
 17101   003A46                     IOCAN           equ	14918	;# 
 17102   003A47                     IOCAF           equ	14919	;# 
 17103   003A50                     ANSELB          equ	14928	;# 
 17104   003A51                     WPUB            equ	14929	;# 
 17105   003A52                     ODCONB          equ	14930	;# 
 17106   003A53                     SLRCONB         equ	14931	;# 
 17107   003A54                     INLVLB          equ	14932	;# 
 17108   003A55                     IOCBP           equ	14933	;# 
 17109   003A56                     IOCBN           equ	14934	;# 
 17110   003A57                     IOCBF           equ	14935	;# 
 17111   003A5A                     RB1I2C          equ	14938	;# 
 17112   003A5B                     RB2I2C          equ	14939	;# 
 17113   003A60                     ANSELC          equ	14944	;# 
 17114   003A61                     WPUC            equ	14945	;# 
 17115   003A62                     ODCONC          equ	14946	;# 
 17116   003A63                     SLRCONC         equ	14947	;# 
 17117   003A64                     INLVLC          equ	14948	;# 
 17118   003A65                     IOCCP           equ	14949	;# 
 17119   003A66                     IOCCN           equ	14950	;# 
 17120   003A67                     IOCCF           equ	14951	;# 
 17121   003A6A                     RC3I2C          equ	14954	;# 
 17122   003A6B                     RC4I2C          equ	14955	;# 
 17123   003A70                     ANSELD          equ	14960	;# 
 17124   003A71                     WPUD            equ	14961	;# 
 17125   003A72                     ODCOND          equ	14962	;# 
 17126   003A73                     SLRCOND         equ	14963	;# 
 17127   003A74                     INLVLD          equ	14964	;# 
 17128   003A7A                     RD0I2C          equ	14970	;# 
 17129   003A7B                     RD1I2C          equ	14971	;# 
 17130   003A80                     ANSELE          equ	14976	;# 
 17131   003A81                     WPUE            equ	14977	;# 
 17132   003A82                     ODCONE          equ	14978	;# 
 17133   003A83                     SLRCONE         equ	14979	;# 
 17134   003A84                     INLVLE          equ	14980	;# 
 17135   003A85                     IOCEP           equ	14981	;# 
 17136   003A86                     IOCEN           equ	14982	;# 
 17137   003A87                     IOCEF           equ	14983	;# 
 17138   003A90                     ANSELF          equ	14992	;# 
 17139   003A91                     WPUF            equ	14993	;# 
 17140   003A92                     ODCONF          equ	14994	;# 
 17141   003A93                     SLRCONF         equ	14995	;# 
 17142   003A94                     INLVLF          equ	14996	;# 
 17143   003ABF                     PPSLOCK         equ	15039	;# 
 17144   003AC0                     INT0PPS         equ	15040	;# 
 17145   003AC1                     INT1PPS         equ	15041	;# 
 17146   003AC2                     INT2PPS         equ	15042	;# 
 17147   003AC3                     T0CKIPPS        equ	15043	;# 
 17148   003AC4                     T1CKIPPS        equ	15044	;# 
 17149   003AC5                     T1GPPS          equ	15045	;# 
 17150   003AC6                     T3CKIPPS        equ	15046	;# 
 17151   003AC7                     T3GPPS          equ	15047	;# 
 17152   003AC8                     T5CKIPPS        equ	15048	;# 
 17153   003AC9                     T5GPPS          equ	15049	;# 
 17154   003ACA                     T2INPPS         equ	15050	;# 
 17155   003ACB                     T4INPPS         equ	15051	;# 
 17156   003ACC                     T6INPPS         equ	15052	;# 
 17157   003ACD                     CCP1PPS         equ	15053	;# 
 17158   003ACE                     CCP2PPS         equ	15054	;# 
 17159   003ACF                     CCP3PPS         equ	15055	;# 
 17160   003AD0                     CCP4PPS         equ	15056	;# 
 17161   003AD1                     SMT1WINPPS      equ	15057	;# 
 17162   003AD2                     SMT1SIGPPS      equ	15058	;# 
 17163   003AD3                     CWG1INPPS       equ	15059	;# 
 17164   003AD4                     CWG2INPPS       equ	15060	;# 
 17165   003AD5                     CWG3INPPS       equ	15061	;# 
 17166   003AD6                     MD1CARLPPS      equ	15062	;# 
 17167   003AD7                     MD1CARHPPS      equ	15063	;# 
 17168   003AD8                     MD1SRCPPS       equ	15064	;# 
 17169   003AD9                     CLCIN0PPS       equ	15065	;# 
 17170   003ADA                     CLCIN1PPS       equ	15066	;# 
 17171   003ADB                     CLCIN2PPS       equ	15067	;# 
 17172   003ADC                     CLCIN3PPS       equ	15068	;# 
 17173   003ADD                     ADACTPPS        equ	15069	;# 
 17174   003ADE                     SPI1SCKPPS      equ	15070	;# 
 17175   003ADF                     SPI1SDIPPS      equ	15071	;# 
 17176   003AE0                     SPI1SSPPS       equ	15072	;# 
 17177   003AE1                     I2C1SCLPPS      equ	15073	;# 
 17178   003AE2                     I2C1SDAPPS      equ	15074	;# 
 17179   003AE3                     I2C2SCLPPS      equ	15075	;# 
 17180   003AE4                     I2C2SDAPPS      equ	15076	;# 
 17181   003AE5                     U1RXPPS         equ	15077	;# 
 17182   003AE6                     U1CTSPPS        equ	15078	;# 
 17183   003AE8                     U2RXPPS         equ	15080	;# 
 17184   003AE9                     U2CTSPPS        equ	15081	;# 
 17185   003BC9                     DMA2BUF         equ	15305	;# 
 17186   003BCA                     DMA2DCNT        equ	15306	;# 
 17187   003BCA                     DMA2DCNTL       equ	15306	;# 
 17188   003BCB                     DMA2DCNTH       equ	15307	;# 
 17189   003BCC                     DMA2DPTR        equ	15308	;# 
 17190   003BCC                     DMA2DPTRL       equ	15308	;# 
 17191   003BCD                     DMA2DPTRH       equ	15309	;# 
 17192   003BCE                     DMA2DSZ         equ	15310	;# 
 17193   003BCE                     DMA2DSZL        equ	15310	;# 
 17194   003BCF                     DMA2DSZH        equ	15311	;# 
 17195   003BD0                     DMA2DSA         equ	15312	;# 
 17196   003BD0                     DMA2DSAL        equ	15312	;# 
 17197   003BD1                     DMA2DSAH        equ	15313	;# 
 17198   003BD2                     DMA2SCNT        equ	15314	;# 
 17199   003BD2                     DMA2SCNTL       equ	15314	;# 
 17200   003BD3                     DMA2SCNTH       equ	15315	;# 
 17201   003BD4                     DMA2SPTR        equ	15316	;# 
 17202   003BD4                     DMA2SPTRL       equ	15316	;# 
 17203   003BD5                     DMA2SPTRH       equ	15317	;# 
 17204   003BD6                     DMA2SPTRU       equ	15318	;# 
 17205   003BD7                     DMA2SSZ         equ	15319	;# 
 17206   003BD7                     DMA2SSZL        equ	15319	;# 
 17207   003BD8                     DMA2SSZH        equ	15320	;# 
 17208   003BD9                     DMA2SSA         equ	15321	;# 
 17209   003BD9                     DMA2SSAL        equ	15321	;# 
 17210   003BDA                     DMA2SSAH        equ	15322	;# 
 17211   003BDB                     DMA2SSAU        equ	15323	;# 
 17212   003BDC                     DMA2CON0        equ	15324	;# 
 17213   003BDD                     DMA2CON1        equ	15325	;# 
 17214   003BDE                     DMA2AIRQ        equ	15326	;# 
 17215   003BDF                     DMA2SIRQ        equ	15327	;# 
 17216   003BE9                     DMA1BUF         equ	15337	;# 
 17217   003BEA                     DMA1DCNT        equ	15338	;# 
 17218   003BEA                     DMA1DCNTL       equ	15338	;# 
 17219   003BEB                     DMA1DCNTH       equ	15339	;# 
 17220   003BEC                     DMA1DPTR        equ	15340	;# 
 17221   003BEC                     DMA1DPTRL       equ	15340	;# 
 17222   003BED                     DMA1DPTRH       equ	15341	;# 
 17223   003BEE                     DMA1DSZ         equ	15342	;# 
 17224   003BEE                     DMA1DSZL        equ	15342	;# 
 17225   003BEF                     DMA1DSZH        equ	15343	;# 
 17226   003BF0                     DMA1DSA         equ	15344	;# 
 17227   003BF0                     DMA1DSAL        equ	15344	;# 
 17228   003BF1                     DMA1DSAH        equ	15345	;# 
 17229   003BF2                     DMA1SCNT        equ	15346	;# 
 17230   003BF2                     DMA1SCNTL       equ	15346	;# 
 17231   003BF3                     DMA1SCNTH       equ	15347	;# 
 17232   003BF4                     DMA1SPTR        equ	15348	;# 
 17233   003BF4                     DMA1SPTRL       equ	15348	;# 
 17234   003BF5                     DMA1SPTRH       equ	15349	;# 
 17235   003BF6                     DMA1SPTRU       equ	15350	;# 
 17236   003BF7                     DMA1SSZ         equ	15351	;# 
 17237   003BF7                     DMA1SSZL        equ	15351	;# 
 17238   003BF8                     DMA1SSZH        equ	15352	;# 
 17239   003BF9                     DMA1SSA         equ	15353	;# 
 17240   003BF9                     DMA1SSAL        equ	15353	;# 
 17241   003BFA                     DMA1SSAH        equ	15354	;# 
 17242   003BFB                     DMA1SSAU        equ	15355	;# 
 17243   003BFC                     DMA1CON0        equ	15356	;# 
 17244   003BFD                     DMA1CON1        equ	15357	;# 
 17245   003BFE                     DMA1AIRQ        equ	15358	;# 
 17246   003BFF                     DMA1SIRQ        equ	15359	;# 
 17247   003C56                     CLC4CON         equ	15446	;# 
 17248   003C57                     CLC4POL         equ	15447	;# 
 17249   003C58                     CLC4SEL0        equ	15448	;# 
 17250   003C59                     CLC4SEL1        equ	15449	;# 
 17251   003C5A                     CLC4SEL2        equ	15450	;# 
 17252   003C5B                     CLC4SEL3        equ	15451	;# 
 17253   003C5C                     CLC4GLS0        equ	15452	;# 
 17254   003C5D                     CLC4GLS1        equ	15453	;# 
 17255   003C5E                     CLC4GLS2        equ	15454	;# 
 17256   003C5F                     CLC4GLS3        equ	15455	;# 
 17257   003C60                     CLC3CON         equ	15456	;# 
 17258   003C61                     CLC3POL         equ	15457	;# 
 17259   003C62                     CLC3SEL0        equ	15458	;# 
 17260   003C63                     CLC3SEL1        equ	15459	;# 
 17261   003C64                     CLC3SEL2        equ	15460	;# 
 17262   003C65                     CLC3SEL3        equ	15461	;# 
 17263   003C66                     CLC3GLS0        equ	15462	;# 
 17264   003C67                     CLC3GLS1        equ	15463	;# 
 17265   003C68                     CLC3GLS2        equ	15464	;# 
 17266   003C69                     CLC3GLS3        equ	15465	;# 
 17267   003C6A                     CLC2CON         equ	15466	;# 
 17268   003C6B                     CLC2POL         equ	15467	;# 
 17269   003C6C                     CLC2SEL0        equ	15468	;# 
 17270   003C6D                     CLC2SEL1        equ	15469	;# 
 17271   003C6E                     CLC2SEL2        equ	15470	;# 
 17272   003C6F                     CLC2SEL3        equ	15471	;# 
 17273   003C70                     CLC2GLS0        equ	15472	;# 
 17274   003C71                     CLC2GLS1        equ	15473	;# 
 17275   003C72                     CLC2GLS2        equ	15474	;# 
 17276   003C73                     CLC2GLS3        equ	15475	;# 
 17277   003C74                     CLC1CON         equ	15476	;# 
 17278   003C75                     CLC1POL         equ	15477	;# 
 17279   003C76                     CLC1SEL0        equ	15478	;# 
 17280   003C77                     CLC1SEL1        equ	15479	;# 
 17281   003C78                     CLC1SEL2        equ	15480	;# 
 17282   003C79                     CLC1SEL3        equ	15481	;# 
 17283   003C7A                     CLC1GLS0        equ	15482	;# 
 17284   003C7B                     CLC1GLS1        equ	15483	;# 
 17285   003C7C                     CLC1GLS2        equ	15484	;# 
 17286   003C7D                     CLC1GLS3        equ	15485	;# 
 17287   003C7E                     CLCDATA0        equ	15486	;# 
 17288   003CE5                     CLKRCON         equ	15589	;# 
 17289   003CE6                     CLKRCLK         equ	15590	;# 
 17290   003CFA                     MD1CON0         equ	15610	;# 
 17291   003CFB                     MD1CON1         equ	15611	;# 
 17292   003CFC                     MD1SRC          equ	15612	;# 
 17293   003CFD                     MD1CARL         equ	15613	;# 
 17294   003CFE                     MD1CARH         equ	15614	;# 
 17295   003D10                     SPI1RXB         equ	15632	;# 
 17296   003D11                     SPI1TXB         equ	15633	;# 
 17297   003D12                     SPI1TCNT        equ	15634	;# 
 17298   003D12                     SPI1TCNTL       equ	15634	;# 
 17299   003D13                     SPI1TCNTH       equ	15635	;# 
 17300   003D14                     SPI1CON0        equ	15636	;# 
 17301   003D15                     SPI1CON1        equ	15637	;# 
 17302   003D16                     SPI1CON2        equ	15638	;# 
 17303   003D17                     SPI1STATUS      equ	15639	;# 
 17304   003D18                     SPI1TWIDTH      equ	15640	;# 
 17305   003D19                     SPI1BAUD        equ	15641	;# 
 17306   003D1A                     SPI1INTF        equ	15642	;# 
 17307   003D1B                     SPI1INTE        equ	15643	;# 
 17308   003D1C                     SPI1CLK         equ	15644	;# 
 17309   003D54                     I2C2RXB         equ	15700	;# 
 17310   003D55                     I2C2TXB         equ	15701	;# 
 17311   003D56                     I2C2CNT         equ	15702	;# 
 17312   003D57                     I2C2ADB0        equ	15703	;# 
 17313   003D58                     I2C2ADB1        equ	15704	;# 
 17314   003D59                     I2C2ADR0        equ	15705	;# 
 17315   003D5A                     I2C2ADR1        equ	15706	;# 
 17316   003D5B                     I2C2ADR2        equ	15707	;# 
 17317   003D5C                     I2C2ADR3        equ	15708	;# 
 17318   003D5D                     I2C2CON0        equ	15709	;# 
 17319   003D5E                     I2C2CON1        equ	15710	;# 
 17320   003D5F                     I2C2CON2        equ	15711	;# 
 17321   003D60                     I2C2ERR         equ	15712	;# 
 17322   003D61                     I2C2STAT0       equ	15713	;# 
 17323   003D62                     I2C2STAT1       equ	15714	;# 
 17324   003D63                     I2C2PIR         equ	15715	;# 
 17325   003D64                     I2C2PIE         equ	15716	;# 
 17326   003D65                     I2C2CLK         equ	15717	;# 
 17327   003D66                     I2C2BTO         equ	15718	;# 
 17328   003D6A                     I2C1RXB         equ	15722	;# 
 17329   003D6B                     I2C1TXB         equ	15723	;# 
 17330   003D6C                     I2C1CNT         equ	15724	;# 
 17331   003D6D                     I2C1ADB0        equ	15725	;# 
 17332   003D6E                     I2C1ADB1        equ	15726	;# 
 17333   003D6F                     I2C1ADR0        equ	15727	;# 
 17334   003D70                     I2C1ADR1        equ	15728	;# 
 17335   003D71                     I2C1ADR2        equ	15729	;# 
 17336   003D72                     I2C1ADR3        equ	15730	;# 
 17337   003D73                     I2C1CON0        equ	15731	;# 
 17338   003D74                     I2C1CON1        equ	15732	;# 
 17339   003D75                     I2C1CON2        equ	15733	;# 
 17340   003D76                     I2C1ERR         equ	15734	;# 
 17341   003D77                     I2C1STAT0       equ	15735	;# 
 17342   003D78                     I2C1STAT1       equ	15736	;# 
 17343   003D79                     I2C1PIR         equ	15737	;# 
 17344   003D7A                     I2C1PIE         equ	15738	;# 
 17345   003D7B                     I2C1CLK         equ	15739	;# 
 17346   003D7C                     I2C1BTO         equ	15740	;# 
 17347   003DD0                     U2RXB           equ	15824	;# 
 17348   003DD0                     U2RXBL          equ	15824	;# 
 17349   003DD2                     U2TXB           equ	15826	;# 
 17350   003DD2                     U2TXBL          equ	15826	;# 
 17351   003DD4                     U2P1            equ	15828	;# 
 17352   003DD4                     U2P1L           equ	15828	;# 
 17353   003DD6                     U2P2            equ	15830	;# 
 17354   003DD6                     U2P2L           equ	15830	;# 
 17355   003DD8                     U2P3            equ	15832	;# 
 17356   003DD8                     U2P3L           equ	15832	;# 
 17357   003DDA                     U2CON0          equ	15834	;# 
 17358   003DDB                     U2CON1          equ	15835	;# 
 17359   003DDC                     U2CON2          equ	15836	;# 
 17360   003DDD                     U2BRG           equ	15837	;# 
 17361   003DDD                     U2BRGL          equ	15837	;# 
 17362   003DDE                     U2BRGH          equ	15838	;# 
 17363   003DDF                     U2FIFO          equ	15839	;# 
 17364   003DE0                     U2UIR           equ	15840	;# 
 17365   003DE1                     U2ERRIR         equ	15841	;# 
 17366   003DE2                     U2ERRIE         equ	15842	;# 
 17367   003DE8                     U1RXB           equ	15848	;# 
 17368   003DE8                     U1RXBL          equ	15848	;# 
 17369   003DE9                     U1RXCHK         equ	15849	;# 
 17370   003DEA                     U1TXB           equ	15850	;# 
 17371   003DEA                     U1TXBL          equ	15850	;# 
 17372   003DEB                     U1TXCHK         equ	15851	;# 
 17373   003DEC                     U1P1            equ	15852	;# 
 17374   003DEC                     U1P1L           equ	15852	;# 
 17375   003DED                     U1P1H           equ	15853	;# 
 17376   003DEE                     U1P2            equ	15854	;# 
 17377   003DEE                     U1P2L           equ	15854	;# 
 17378   003DEF                     U1P2H           equ	15855	;# 
 17379   003DF0                     U1P3            equ	15856	;# 
 17380   003DF0                     U1P3L           equ	15856	;# 
 17381   003DF1                     U1P3H           equ	15857	;# 
 17382   003DF2                     U1CON0          equ	15858	;# 
 17383   003DF3                     U1CON1          equ	15859	;# 
 17384   003DF4                     U1CON2          equ	15860	;# 
 17385   003DF5                     U1BRG           equ	15861	;# 
 17386   003DF5                     U1BRGL          equ	15861	;# 
 17387   003DF6                     U1BRGH          equ	15862	;# 
 17388   003DF7                     U1FIFO          equ	15863	;# 
 17389   003DF8                     U1UIR           equ	15864	;# 
 17390   003DF9                     U1ERRIR         equ	15865	;# 
 17391   003DFA                     U1ERRIE         equ	15866	;# 
 17392   003E9C                     DAC1CON1        equ	16028	;# 
 17393   003E9E                     DAC1CON0        equ	16030	;# 
 17394   003EB8                     CM2CON0         equ	16056	;# 
 17395   003EB9                     CM2CON1         equ	16057	;# 
 17396   003EBA                     CM2NCH          equ	16058	;# 
 17397   003EBB                     CM2PCH          equ	16059	;# 
 17398   003EBC                     CM1CON0         equ	16060	;# 
 17399   003EBD                     CM1CON1         equ	16061	;# 
 17400   003EBE                     CM1NCH          equ	16062	;# 
 17401   003EBF                     CM1PCH          equ	16063	;# 
 17402   003EC0                     CMOUT           equ	16064	;# 
 17403   003EC1                     FVRCON          equ	16065	;# 
 17404   003EC3                     ZCDCON          equ	16067	;# 
 17405   003EC9                     HLVDCON0        equ	16073	;# 
 17406   003ECA                     HLVDCON1        equ	16074	;# 
 17407   003ED7                     ADCP            equ	16087	;# 
 17408   003EDE                     ADLTH           equ	16094	;# 
 17409   003EDE                     ADLTHL          equ	16094	;# 
 17410   003EDF                     ADLTHH          equ	16095	;# 
 17411   003EE0                     ADUTH           equ	16096	;# 
 17412   003EE0                     ADUTHL          equ	16096	;# 
 17413   003EE1                     ADUTHH          equ	16097	;# 
 17414   003EE2                     ADERR           equ	16098	;# 
 17415   003EE2                     ADERRL          equ	16098	;# 
 17416   003EE3                     ADERRH          equ	16099	;# 
 17417   003EE4                     ADSTPT          equ	16100	;# 
 17418   003EE4                     ADSTPTL         equ	16100	;# 
 17419   003EE5                     ADSTPTH         equ	16101	;# 
 17420   003EE6                     ADFLTR          equ	16102	;# 
 17421   003EE6                     ADFLTRL         equ	16102	;# 
 17422   003EE7                     ADFLTRH         equ	16103	;# 
 17423   003EE8                     ADACC           equ	16104	;# 
 17424   003EE8                     ADACCL          equ	16104	;# 
 17425   003EE9                     ADACCH          equ	16105	;# 
 17426   003EEA                     ADACCU          equ	16106	;# 
 17427   003EEB                     ADCNT           equ	16107	;# 
 17428   003EEC                     ADRPT           equ	16108	;# 
 17429   003EED                     ADPREV          equ	16109	;# 
 17430   003EED                     ADPREVL         equ	16109	;# 
 17431   003EEE                     ADPREVH         equ	16110	;# 
 17432   003EEF                     ADRES           equ	16111	;# 
 17433   003EEF                     ADRESL          equ	16111	;# 
 17434   003EF0                     ADRESH          equ	16112	;# 
 17435   003EF1                     ADPCH           equ	16113	;# 
 17436   003EF3                     ADACQ           equ	16115	;# 
 17437   003EF3                     ADACQL          equ	16115	;# 
 17438   003EF4                     ADACQH          equ	16116	;# 
 17439   003EF5                     ADCAP           equ	16117	;# 
 17440   003EF6                     ADPRE           equ	16118	;# 
 17441   003EF6                     ADPREL          equ	16118	;# 
 17442   003EF7                     ADPREH          equ	16119	;# 
 17443   003EF8                     ADCON0          equ	16120	;# 
 17444   003EF9                     ADCON1          equ	16121	;# 
 17445   003EFA                     ADCON2          equ	16122	;# 
 17446   003EFB                     ADCON3          equ	16123	;# 
 17447   003EFC                     ADSTAT          equ	16124	;# 
 17448   003EFD                     ADREF           equ	16125	;# 
 17449   003EFE                     ADACT           equ	16126	;# 
 17450   003EFF                     ADCLK           equ	16127	;# 
 17451   003F12                     SMT1TMR         equ	16146	;# 
 17452   003F12                     SMT1TMRL        equ	16146	;# 
 17453   003F13                     SMT1TMRH        equ	16147	;# 
 17454   003F14                     SMT1TMRU        equ	16148	;# 
 17455   003F15                     SMT1CPR         equ	16149	;# 
 17456   003F15                     SMT1CPRL        equ	16149	;# 
 17457   003F16                     SMT1CPRH        equ	16150	;# 
 17458   003F17                     SMT1CPRU        equ	16151	;# 
 17459   003F18                     SMT1CPW         equ	16152	;# 
 17460   003F18                     SMT1CPWL        equ	16152	;# 
 17461   003F19                     SMT1CPWH        equ	16153	;# 
 17462   003F1A                     SMT1CPWU        equ	16154	;# 
 17463   003F1B                     SMT1PR          equ	16155	;# 
 17464   003F1B                     SMT1PRL         equ	16155	;# 
 17465   003F1C                     SMT1PRH         equ	16156	;# 
 17466   003F1D                     SMT1PRU         equ	16157	;# 
 17467   003F1E                     SMT1CON0        equ	16158	;# 
 17468   003F1F                     SMT1CON1        equ	16159	;# 
 17469   003F20                     SMT1STAT        equ	16160	;# 
 17470   003F21                     SMT1CLK         equ	16161	;# 
 17471   003F22                     SMT1SIG         equ	16162	;# 
 17472   003F23                     SMT1WIN         equ	16163	;# 
 17473   003F38                     NCO1ACC         equ	16184	;# 
 17474   003F38                     NCO1ACCL        equ	16184	;# 
 17475   003F39                     NCO1ACCH        equ	16185	;# 
 17476   003F3A                     NCO1ACCU        equ	16186	;# 
 17477   003F3B                     NCO1INC         equ	16187	;# 
 17478   003F3B                     NCO1INCL        equ	16187	;# 
 17479   003F3C                     NCO1INCH        equ	16188	;# 
 17480   003F3D                     NCO1INCU        equ	16189	;# 
 17481   003F3E                     NCO1CON         equ	16190	;# 
 17482   003F3F                     NCO1CLK         equ	16191	;# 
 17483   003F40                     CWG3CLK         equ	16192	;# 
 17484   003F40                     CWG3CLKCON      equ	16192	;# 
 17485   003F41                     CWG3ISM         equ	16193	;# 
 17486   003F41                     CWG3DAT         equ	16193	;# 
 17487   003F42                     CWG3DBR         equ	16194	;# 
 17488   003F43                     CWG3DBF         equ	16195	;# 
 17489   003F44                     CWG3CON0        equ	16196	;# 
 17490   003F45                     CWG3CON1        equ	16197	;# 
 17491   003F46                     CWG3AS0         equ	16198	;# 
 17492   003F47                     CWG3AS1         equ	16199	;# 
 17493   003F48                     CWG3STR         equ	16200	;# 
 17494   003F49                     CWG2CLK         equ	16201	;# 
 17495   003F49                     CWG2CLKCON      equ	16201	;# 
 17496   003F4A                     CWG2ISM         equ	16202	;# 
 17497   003F4A                     CWG2DAT         equ	16202	;# 
 17498   003F4B                     CWG2DBR         equ	16203	;# 
 17499   003F4C                     CWG2DBF         equ	16204	;# 
 17500   003F4D                     CWG2CON0        equ	16205	;# 
 17501   003F4E                     CWG2CON1        equ	16206	;# 
 17502   003F4F                     CWG2AS0         equ	16207	;# 
 17503   003F50                     CWG2AS1         equ	16208	;# 
 17504   003F51                     CWG2STR         equ	16209	;# 
 17505   003F52                     CWG1CLK         equ	16210	;# 
 17506   003F52                     CWG1CLKCON      equ	16210	;# 
 17507   003F53                     CWG1ISM         equ	16211	;# 
 17508   003F53                     CWG1DAT         equ	16211	;# 
 17509   003F54                     CWG1DBR         equ	16212	;# 
 17510   003F55                     CWG1DBF         equ	16213	;# 
 17511   003F56                     CWG1CON0        equ	16214	;# 
 17512   003F57                     CWG1CON1        equ	16215	;# 
 17513   003F58                     CWG1AS0         equ	16216	;# 
 17514   003F59                     CWG1AS1         equ	16217	;# 
 17515   003F5A                     CWG1STR         equ	16218	;# 
 17516   003F5E                     CCPTMRS0        equ	16222	;# 
 17517   003F5F                     CCPTMRS1        equ	16223	;# 
 17518   003F60                     PWM8DC          equ	16224	;# 
 17519   003F60                     PWM8DCL         equ	16224	;# 
 17520   003F61                     PWM8DCH         equ	16225	;# 
 17521   003F62                     PWM8CON         equ	16226	;# 
 17522   003F64                     PWM7DC          equ	16228	;# 
 17523   003F64                     PWM7DCL         equ	16228	;# 
 17524   003F65                     PWM7DCH         equ	16229	;# 
 17525   003F66                     PWM7CON         equ	16230	;# 
 17526   003F68                     PWM6DC          equ	16232	;# 
 17527   003F68                     PWM6DCL         equ	16232	;# 
 17528   003F69                     PWM6DCH         equ	16233	;# 
 17529   003F6A                     PWM6CON         equ	16234	;# 
 17530   003F6C                     PWM5DC          equ	16236	;# 
 17531   003F6C                     PWM5DCL         equ	16236	;# 
 17532   003F6D                     PWM5DCH         equ	16237	;# 
 17533   003F6E                     PWM5CON         equ	16238	;# 
 17534   003F70                     CCPR4           equ	16240	;# 
 17535   003F70                     CCPR4L          equ	16240	;# 
 17536   003F71                     CCPR4H          equ	16241	;# 
 17537   003F72                     CCP4CON         equ	16242	;# 
 17538   003F73                     CCP4CAP         equ	16243	;# 
 17539   003F74                     CCPR3           equ	16244	;# 
 17540   003F74                     CCPR3L          equ	16244	;# 
 17541   003F75                     CCPR3H          equ	16245	;# 
 17542   003F76                     CCP3CON         equ	16246	;# 
 17543   003F77                     CCP3CAP         equ	16247	;# 
 17544   003F78                     CCPR2           equ	16248	;# 
 17545   003F78                     CCPR2L          equ	16248	;# 
 17546   003F79                     CCPR2H          equ	16249	;# 
 17547   003F7A                     CCP2CON         equ	16250	;# 
 17548   003F7B                     CCP2CAP         equ	16251	;# 
 17549   003F7C                     CCPR1           equ	16252	;# 
 17550   003F7C                     CCPR1L          equ	16252	;# 
 17551   003F7D                     CCPR1H          equ	16253	;# 
 17552   003F7E                     CCP1CON         equ	16254	;# 
 17553   003F7F                     CCP1CAP         equ	16255	;# 
 17554   003F92                     T6TMR           equ	16274	;# 
 17555   003F92                     TMR6            equ	16274	;# 
 17556   003F93                     T6PR            equ	16275	;# 
 17557   003F93                     PR6             equ	16275	;# 
 17558   003F94                     T6CON           equ	16276	;# 
 17559   003F95                     T6HLT           equ	16277	;# 
 17560   003F96                     T6CLKCON        equ	16278	;# 
 17561   003F96                     T6CLK           equ	16278	;# 
 17562   003F97                     T6RST           equ	16279	;# 
 17563   003F98                     TMR5            equ	16280	;# 
 17564   003F98                     TMR5L           equ	16280	;# 
 17565   003F99                     TMR5H           equ	16281	;# 
 17566   003F9A                     T5CON           equ	16282	;# 
 17567   003F9A                     TMR5CON         equ	16282	;# 
 17568   003F9B                     T5GCON          equ	16283	;# 
 17569   003F9B                     TMR5GCON        equ	16283	;# 
 17570   003F9C                     T5GATE          equ	16284	;# 
 17571   003F9C                     TMR5GATE        equ	16284	;# 
 17572   003F9D                     T5CLK           equ	16285	;# 
 17573   003F9D                     TMR5CLK         equ	16285	;# 
 17574   003F9D                     PR5             equ	16285	;# 
 17575   003F9E                     T4TMR           equ	16286	;# 
 17576   003F9E                     TMR4            equ	16286	;# 
 17577   003F9F                     T4PR            equ	16287	;# 
 17578   003F9F                     PR4             equ	16287	;# 
 17579   003FA0                     T4CON           equ	16288	;# 
 17580   003FA1                     T4HLT           equ	16289	;# 
 17581   003FA2                     T4CLKCON        equ	16290	;# 
 17582   003FA2                     T4CLK           equ	16290	;# 
 17583   003FA3                     T4RST           equ	16291	;# 
 17584   003FA4                     TMR3            equ	16292	;# 
 17585   003FA4                     TMR3L           equ	16292	;# 
 17586   003FA5                     TMR3H           equ	16293	;# 
 17587   003FA6                     T3CON           equ	16294	;# 
 17588   003FA6                     TMR3CON         equ	16294	;# 
 17589   003FA7                     T3GCON          equ	16295	;# 
 17590   003FA7                     TMR3GCON        equ	16295	;# 
 17591   003FA8                     T3GATE          equ	16296	;# 
 17592   003FA8                     TMR3GATE        equ	16296	;# 
 17593   003FA9                     T3CLK           equ	16297	;# 
 17594   003FA9                     TMR3CLK         equ	16297	;# 
 17595   003FA9                     PR3             equ	16297	;# 
 17596   003FAA                     T2TMR           equ	16298	;# 
 17597   003FAA                     TMR2            equ	16298	;# 
 17598   003FAB                     T2PR            equ	16299	;# 
 17599   003FAB                     PR2             equ	16299	;# 
 17600   003FAC                     T2CON           equ	16300	;# 
 17601   003FAD                     T2HLT           equ	16301	;# 
 17602   003FAE                     T2CLKCON        equ	16302	;# 
 17603   003FAE                     T2CLK           equ	16302	;# 
 17604   003FAF                     T2RST           equ	16303	;# 
 17605   003FB0                     TMR1            equ	16304	;# 
 17606   003FB0                     TMR1L           equ	16304	;# 
 17607   003FB1                     TMR1H           equ	16305	;# 
 17608   003FB2                     T1CON           equ	16306	;# 
 17609   003FB2                     TMR1CON         equ	16306	;# 
 17610   003FB3                     T1GCON          equ	16307	;# 
 17611   003FB3                     TMR1GCON        equ	16307	;# 
 17612   003FB4                     T1GATE          equ	16308	;# 
 17613   003FB4                     TMR1GATE        equ	16308	;# 
 17614   003FB5                     T1CLK           equ	16309	;# 
 17615   003FB5                     TMR1CLK         equ	16309	;# 
 17616   003FB5                     PR1             equ	16309	;# 
 17617   003FB6                     TMR0L           equ	16310	;# 
 17618   003FB6                     TMR0            equ	16310	;# 
 17619   003FB7                     TMR0H           equ	16311	;# 
 17620   003FB7                     PR0             equ	16311	;# 
 17621   003FB8                     T0CON0          equ	16312	;# 
 17622   003FB9                     T0CON1          equ	16313	;# 
 17623   003FBA                     LATA            equ	16314	;# 
 17624   003FBB                     LATB            equ	16315	;# 
 17625   003FBC                     LATC            equ	16316	;# 
 17626   003FBD                     LATD            equ	16317	;# 
 17627   003FBE                     LATE            equ	16318	;# 
 17628   003FBF                     LATF            equ	16319	;# 
 17629   003FC2                     TRISA           equ	16322	;# 
 17630   003FC3                     TRISB           equ	16323	;# 
 17631   003FC4                     TRISC           equ	16324	;# 
 17632   003FC5                     TRISD           equ	16325	;# 
 17633   003FC6                     TRISE           equ	16326	;# 
 17634   003FC7                     TRISF           equ	16327	;# 
 17635   003FCA                     PORTA           equ	16330	;# 
 17636   003FCB                     PORTB           equ	16331	;# 
 17637   003FCC                     PORTC           equ	16332	;# 
 17638   003FCD                     PORTD           equ	16333	;# 
 17639   003FCE                     PORTE           equ	16334	;# 
 17640   003FCF                     PORTF           equ	16335	;# 
 17641   003FD2                     INTCON0         equ	16338	;# 
 17642   003FD3                     INTCON1         equ	16339	;# 
 17643   003FD4                     IVTLOCK         equ	16340	;# 
 17644   003FD5                     IVTBASE         equ	16341	;# 
 17645   003FD5                     IVTBASEL        equ	16341	;# 
 17646   003FD6                     IVTBASEH        equ	16342	;# 
 17647   003FD7                     IVTBASEU        equ	16343	;# 
 17648   003FD8                     STATUS          equ	16344	;# 
 17649   003FD9                     FSR2            equ	16345	;# 
 17650   003FD9                     FSR2L           equ	16345	;# 
 17651   003FDA                     FSR2H           equ	16346	;# 
 17652   003FDB                     PLUSW2          equ	16347	;# 
 17653   003FDC                     PREINC2         equ	16348	;# 
 17654   003FDD                     POSTDEC2        equ	16349	;# 
 17655   003FDE                     POSTINC2        equ	16350	;# 
 17656   003FDF                     INDF2           equ	16351	;# 
 17657   003FE0                     BSR             equ	16352	;# 
 17658   003FE1                     FSR1            equ	16353	;# 
 17659   003FE1                     FSR1L           equ	16353	;# 
 17660   003FE2                     FSR1H           equ	16354	;# 
 17661   003FE3                     PLUSW1          equ	16355	;# 
 17662   003FE4                     PREINC1         equ	16356	;# 
 17663   003FE5                     POSTDEC1        equ	16357	;# 
 17664   003FE6                     POSTINC1        equ	16358	;# 
 17665   003FE7                     INDF1           equ	16359	;# 
 17666   003FE8                     WREG            equ	16360	;# 
 17667   003FE9                     FSR0            equ	16361	;# 
 17668   003FE9                     FSR0L           equ	16361	;# 
 17669   003FEA                     FSR0H           equ	16362	;# 
 17670   003FEB                     PLUSW0          equ	16363	;# 
 17671   003FEC                     PREINC0         equ	16364	;# 
 17672   003FED                     POSTDEC0        equ	16365	;# 
 17673   003FEE                     POSTINC0        equ	16366	;# 
 17674   003FEF                     INDF0           equ	16367	;# 
 17675   003FF0                     PCON0           equ	16368	;# 
 17676   003FF1                     PCON1           equ	16369	;# 
 17677   003FF3                     PROD            equ	16371	;# 
 17678   003FF3                     PRODL           equ	16371	;# 
 17679   003FF4                     PRODH           equ	16372	;# 
 17680   003FF5                     TABLAT          equ	16373	;# 
 17681   003FF6                     TBLPTR          equ	16374	;# 
 17682   003FF6                     TBLPTRL         equ	16374	;# 
 17683   003FF7                     TBLPTRH         equ	16375	;# 
 17684   003FF8                     TBLPTRU         equ	16376	;# 
 17685   003FF9                     PCLAT           equ	16377	;# 
 17686   003FF9                     PCL             equ	16377	;# 
 17687   003FFA                     PCLATH          equ	16378	;# 
 17688   003FFB                     PCLATU          equ	16379	;# 
 17689   003FFC                     STKPTR          equ	16380	;# 
 17690   003FFD                     TOS             equ	16381	;# 
 17691   003FFD                     TOSL            equ	16381	;# 
 17692   003FFE                     TOSH            equ	16382	;# 
 17693   003FFF                     TOSU            equ	16383	;# 
 17694   003880                     STATUS_CSHAD    equ	14464	;# 
 17695   003881                     WREG_CSHAD      equ	14465	;# 
 17696   003882                     BSR_CSHAD       equ	14466	;# 
 17697   003883                     SHADCON         equ	14467	;# 
 17698   003884                     STATUS_SHAD     equ	14468	;# 
 17699   003885                     WREG_SHAD       equ	14469	;# 
 17700   003886                     BSR_SHAD        equ	14470	;# 
 17701   003887                     PCLATH_SHAD     equ	14471	;# 
 17702   003888                     PCLATU_SHAD     equ	14472	;# 
 17703   003889                     FSR0SH          equ	14473	;# 
 17704   003889                     FSR0L_SHAD      equ	14473	;# 
 17705   00388A                     FSR0H_SHAD      equ	14474	;# 
 17706   00388B                     FSR1SH          equ	14475	;# 
 17707   00388B                     FSR1L_SHAD      equ	14475	;# 
 17708   00388C                     FSR1H_SHAD      equ	14476	;# 
 17709   00388D                     FSR2SH          equ	14477	;# 
 17710   00388D                     FSR2L_SHAD      equ	14477	;# 
 17711   00388E                     FSR2H_SHAD      equ	14478	;# 
 17712   00388F                     PRODSH          equ	14479	;# 
 17713   00388F                     PRODL_SHAD      equ	14479	;# 
 17714   003890                     PRODH_SHAD      equ	14480	;# 
 17715   00389D                     IVTADL          equ	14493	;# 
 17716   00389E                     IVTADH          equ	14494	;# 
 17717   00389F                     IVTADU          equ	14495	;# 
 17718   00395B                     WDTCON0         equ	14683	;# 
 17719   00395C                     WDTCON1         equ	14684	;# 
 17720   00395D                     WDTPSL          equ	14685	;# 
 17721   00395E                     WDTPSH          equ	14686	;# 
 17722   00395F                     WDTTMR          equ	14687	;# 
 17723   003960                     CRCDATA         equ	14688	;# 
 17724   003960                     CRCDATL         equ	14688	;# 
 17725   003961                     CRCDATH         equ	14689	;# 
 17726   003962                     CRCACC          equ	14690	;# 
 17727   003962                     CRCACCL         equ	14690	;# 
 17728   003963                     CRCACCH         equ	14691	;# 
 17729   003964                     CRCSHFT         equ	14692	;# 
 17730   003964                     CRCSHIFTL       equ	14692	;# 
 17731   003965                     CRCSHIFTH       equ	14693	;# 
 17732   003966                     CRCXOR          equ	14694	;# 
 17733   003966                     CRCXORL         equ	14694	;# 
 17734   003967                     CRCXORH         equ	14695	;# 
 17735   003968                     CRCCON0         equ	14696	;# 
 17736   003969                     CRCCON1         equ	14697	;# 
 17737   003976                     SCANLADR        equ	14710	;# 
 17738   003976                     SCANLADRL       equ	14710	;# 
 17739   003977                     SCANLADRH       equ	14711	;# 
 17740   003978                     SCANLADRU       equ	14712	;# 
 17741   003979                     SCANHADR        equ	14713	;# 
 17742   003979                     SCANHADRL       equ	14713	;# 
 17743   00397A                     SCANHADRH       equ	14714	;# 
 17744   00397B                     SCANHADRU       equ	14715	;# 
 17745   00397C                     SCANCON0        equ	14716	;# 
 17746   00397D                     SCANTRIG        equ	14717	;# 
 17747   003980                     IPR0            equ	14720	;# 
 17748   003981                     IPR1            equ	14721	;# 
 17749   003982                     IPR2            equ	14722	;# 
 17750   003983                     IPR3            equ	14723	;# 
 17751   003984                     IPR4            equ	14724	;# 
 17752   003985                     IPR5            equ	14725	;# 
 17753   003986                     IPR6            equ	14726	;# 
 17754   003987                     IPR7            equ	14727	;# 
 17755   003988                     IPR8            equ	14728	;# 
 17756   003989                     IPR9            equ	14729	;# 
 17757   00398A                     IPR10           equ	14730	;# 
 17758   003990                     PIE0            equ	14736	;# 
 17759   003991                     PIE1            equ	14737	;# 
 17760   003992                     PIE2            equ	14738	;# 
 17761   003993                     PIE3            equ	14739	;# 
 17762   003994                     PIE4            equ	14740	;# 
 17763   003995                     PIE5            equ	14741	;# 
 17764   003996                     PIE6            equ	14742	;# 
 17765   003997                     PIE7            equ	14743	;# 
 17766   003998                     PIE8            equ	14744	;# 
 17767   003999                     PIE9            equ	14745	;# 
 17768   00399A                     PIE10           equ	14746	;# 
 17769   0039A0                     PIR0            equ	14752	;# 
 17770   0039A1                     PIR1            equ	14753	;# 
 17771   0039A2                     PIR2            equ	14754	;# 
 17772   0039A3                     PIR3            equ	14755	;# 
 17773   0039A4                     PIR4            equ	14756	;# 
 17774   0039A5                     PIR5            equ	14757	;# 
 17775   0039A6                     PIR6            equ	14758	;# 
 17776   0039A7                     PIR7            equ	14759	;# 
 17777   0039A8                     PIR8            equ	14760	;# 
 17778   0039A9                     PIR9            equ	14761	;# 
 17779   0039AA                     PIR10           equ	14762	;# 
 17780   0039C0                     PMD0            equ	14784	;# 
 17781   0039C1                     PMD1            equ	14785	;# 
 17782   0039C2                     PMD2            equ	14786	;# 
 17783   0039C3                     PMD3            equ	14787	;# 
 17784   0039C4                     PMD4            equ	14788	;# 
 17785   0039C5                     PMD5            equ	14789	;# 
 17786   0039C6                     PMD6            equ	14790	;# 
 17787   0039C7                     PMD7            equ	14791	;# 
 17788   0039D0                     BORCON          equ	14800	;# 
 17789   0039D1                     VREGCON         equ	14801	;# 
 17790   0039D8                     CPUDOZE         equ	14808	;# 
 17791   0039D9                     OSCCON1         equ	14809	;# 
 17792   0039DA                     OSCCON2         equ	14810	;# 
 17793   0039DB                     OSCCON3         equ	14811	;# 
 17794   0039DC                     OSCSTAT         equ	14812	;# 
 17795   0039DC                     OSCSTAT1        equ	14812	;# 
 17796   0039DD                     OSCEN           equ	14813	;# 
 17797   0039DE                     OSCTUNE         equ	14814	;# 
 17798   0039DF                     OSCFRQ          equ	14815	;# 
 17799   0039E0                     NVMADRL         equ	14816	;# 
 17800   0039E1                     NVMADRH         equ	14817	;# 
 17801   0039E3                     NVMDAT          equ	14819	;# 
 17802   0039E5                     NVMCON1         equ	14821	;# 
 17803   0039E6                     NVMCON2         equ	14822	;# 
 17804   0039EF                     PRLOCK          equ	14831	;# 
 17805   0039F1                     ISRPR           equ	14833	;# 
 17806   0039F2                     MAINPR          equ	14834	;# 
 17807   0039F3                     DMA1PR          equ	14835	;# 
 17808   0039F4                     DMA2PR          equ	14836	;# 
 17809   0039F7                     SCANPR          equ	14839	;# 
 17810   003A00                     RA0PPS          equ	14848	;# 
 17811   003A01                     RA1PPS          equ	14849	;# 
 17812   003A02                     RA2PPS          equ	14850	;# 
 17813   003A03                     RA3PPS          equ	14851	;# 
 17814   003A04                     RA4PPS          equ	14852	;# 
 17815   003A05                     RA5PPS          equ	14853	;# 
 17816   003A06                     RA6PPS          equ	14854	;# 
 17817   003A07                     RA7PPS          equ	14855	;# 
 17818   003A08                     RB0PPS          equ	14856	;# 
 17819   003A09                     RB1PPS          equ	14857	;# 
 17820   003A0A                     RB2PPS          equ	14858	;# 
 17821   003A0B                     RB3PPS          equ	14859	;# 
 17822   003A0C                     RB4PPS          equ	14860	;# 
 17823   003A0D                     RB5PPS          equ	14861	;# 
 17824   003A0E                     RB6PPS          equ	14862	;# 
 17825   003A0F                     RB7PPS          equ	14863	;# 
 17826   003A10                     RC0PPS          equ	14864	;# 
 17827   003A11                     RC1PPS          equ	14865	;# 
 17828   003A12                     RC2PPS          equ	14866	;# 
 17829   003A13                     RC3PPS          equ	14867	;# 
 17830   003A14                     RC4PPS          equ	14868	;# 
 17831   003A15                     RC5PPS          equ	14869	;# 
 17832   003A16                     RC6PPS          equ	14870	;# 
 17833   003A17                     RC7PPS          equ	14871	;# 
 17834   003A18                     RD0PPS          equ	14872	;# 
 17835   003A19                     RD1PPS          equ	14873	;# 
 17836   003A1A                     RD2PPS          equ	14874	;# 
 17837   003A1B                     RD3PPS          equ	14875	;# 
 17838   003A1C                     RD4PPS          equ	14876	;# 
 17839   003A1D                     RD5PPS          equ	14877	;# 
 17840   003A1E                     RD6PPS          equ	14878	;# 
 17841   003A1F                     RD7PPS          equ	14879	;# 
 17842   003A20                     RE0PPS          equ	14880	;# 
 17843   003A21                     RE1PPS          equ	14881	;# 
 17844   003A22                     RE2PPS          equ	14882	;# 
 17845   003A28                     RF0PPS          equ	14888	;# 
 17846   003A29                     RF1PPS          equ	14889	;# 
 17847   003A2A                     RF2PPS          equ	14890	;# 
 17848   003A2B                     RF3PPS          equ	14891	;# 
 17849   003A2C                     RF4PPS          equ	14892	;# 
 17850   003A2D                     RF5PPS          equ	14893	;# 
 17851   003A2E                     RF6PPS          equ	14894	;# 
 17852   003A2F                     RF7PPS          equ	14895	;# 
 17853   003A40                     ANSELA          equ	14912	;# 
 17854   003A41                     WPUA            equ	14913	;# 
 17855   003A42                     ODCONA          equ	14914	;# 
 17856   003A43                     SLRCONA         equ	14915	;# 
 17857   003A44                     INLVLA          equ	14916	;# 
 17858   003A45                     IOCAP           equ	14917	;# 
 17859   003A46                     IOCAN           equ	14918	;# 
 17860   003A47                     IOCAF           equ	14919	;# 
 17861   003A50                     ANSELB          equ	14928	;# 
 17862   003A51                     WPUB            equ	14929	;# 
 17863   003A52                     ODCONB          equ	14930	;# 
 17864   003A53                     SLRCONB         equ	14931	;# 
 17865   003A54                     INLVLB          equ	14932	;# 
 17866   003A55                     IOCBP           equ	14933	;# 
 17867   003A56                     IOCBN           equ	14934	;# 
 17868   003A57                     IOCBF           equ	14935	;# 
 17869   003A5A                     RB1I2C          equ	14938	;# 
 17870   003A5B                     RB2I2C          equ	14939	;# 
 17871   003A60                     ANSELC          equ	14944	;# 
 17872   003A61                     WPUC            equ	14945	;# 
 17873   003A62                     ODCONC          equ	14946	;# 
 17874   003A63                     SLRCONC         equ	14947	;# 
 17875   003A64                     INLVLC          equ	14948	;# 
 17876   003A65                     IOCCP           equ	14949	;# 
 17877   003A66                     IOCCN           equ	14950	;# 
 17878   003A67                     IOCCF           equ	14951	;# 
 17879   003A6A                     RC3I2C          equ	14954	;# 
 17880   003A6B                     RC4I2C          equ	14955	;# 
 17881   003A70                     ANSELD          equ	14960	;# 
 17882   003A71                     WPUD            equ	14961	;# 
 17883   003A72                     ODCOND          equ	14962	;# 
 17884   003A73                     SLRCOND         equ	14963	;# 
 17885   003A74                     INLVLD          equ	14964	;# 
 17886   003A7A                     RD0I2C          equ	14970	;# 
 17887   003A7B                     RD1I2C          equ	14971	;# 
 17888   003A80                     ANSELE          equ	14976	;# 
 17889   003A81                     WPUE            equ	14977	;# 
 17890   003A82                     ODCONE          equ	14978	;# 
 17891   003A83                     SLRCONE         equ	14979	;# 
 17892   003A84                     INLVLE          equ	14980	;# 
 17893   003A85                     IOCEP           equ	14981	;# 
 17894   003A86                     IOCEN           equ	14982	;# 
 17895   003A87                     IOCEF           equ	14983	;# 
 17896   003A90                     ANSELF          equ	14992	;# 
 17897   003A91                     WPUF            equ	14993	;# 
 17898   003A92                     ODCONF          equ	14994	;# 
 17899   003A93                     SLRCONF         equ	14995	;# 
 17900   003A94                     INLVLF          equ	14996	;# 
 17901   003ABF                     PPSLOCK         equ	15039	;# 
 17902   003AC0                     INT0PPS         equ	15040	;# 
 17903   003AC1                     INT1PPS         equ	15041	;# 
 17904   003AC2                     INT2PPS         equ	15042	;# 
 17905   003AC3                     T0CKIPPS        equ	15043	;# 
 17906   003AC4                     T1CKIPPS        equ	15044	;# 
 17907   003AC5                     T1GPPS          equ	15045	;# 
 17908   003AC6                     T3CKIPPS        equ	15046	;# 
 17909   003AC7                     T3GPPS          equ	15047	;# 
 17910   003AC8                     T5CKIPPS        equ	15048	;# 
 17911   003AC9                     T5GPPS          equ	15049	;# 
 17912   003ACA                     T2INPPS         equ	15050	;# 
 17913   003ACB                     T4INPPS         equ	15051	;# 
 17914   003ACC                     T6INPPS         equ	15052	;# 
 17915   003ACD                     CCP1PPS         equ	15053	;# 
 17916   003ACE                     CCP2PPS         equ	15054	;# 
 17917   003ACF                     CCP3PPS         equ	15055	;# 
 17918   003AD0                     CCP4PPS         equ	15056	;# 
 17919   003AD1                     SMT1WINPPS      equ	15057	;# 
 17920   003AD2                     SMT1SIGPPS      equ	15058	;# 
 17921   003AD3                     CWG1INPPS       equ	15059	;# 
 17922   003AD4                     CWG2INPPS       equ	15060	;# 
 17923   003AD5                     CWG3INPPS       equ	15061	;# 
 17924   003AD6                     MD1CARLPPS      equ	15062	;# 
 17925   003AD7                     MD1CARHPPS      equ	15063	;# 
 17926   003AD8                     MD1SRCPPS       equ	15064	;# 
 17927   003AD9                     CLCIN0PPS       equ	15065	;# 
 17928   003ADA                     CLCIN1PPS       equ	15066	;# 
 17929   003ADB                     CLCIN2PPS       equ	15067	;# 
 17930   003ADC                     CLCIN3PPS       equ	15068	;# 
 17931   003ADD                     ADACTPPS        equ	15069	;# 
 17932   003ADE                     SPI1SCKPPS      equ	15070	;# 
 17933   003ADF                     SPI1SDIPPS      equ	15071	;# 
 17934   003AE0                     SPI1SSPPS       equ	15072	;# 
 17935   003AE1                     I2C1SCLPPS      equ	15073	;# 
 17936   003AE2                     I2C1SDAPPS      equ	15074	;# 
 17937   003AE3                     I2C2SCLPPS      equ	15075	;# 
 17938   003AE4                     I2C2SDAPPS      equ	15076	;# 
 17939   003AE5                     U1RXPPS         equ	15077	;# 
 17940   003AE6                     U1CTSPPS        equ	15078	;# 
 17941   003AE8                     U2RXPPS         equ	15080	;# 
 17942   003AE9                     U2CTSPPS        equ	15081	;# 
 17943   003BC9                     DMA2BUF         equ	15305	;# 
 17944   003BCA                     DMA2DCNT        equ	15306	;# 
 17945   003BCA                     DMA2DCNTL       equ	15306	;# 
 17946   003BCB                     DMA2DCNTH       equ	15307	;# 
 17947   003BCC                     DMA2DPTR        equ	15308	;# 
 17948   003BCC                     DMA2DPTRL       equ	15308	;# 
 17949   003BCD                     DMA2DPTRH       equ	15309	;# 
 17950   003BCE                     DMA2DSZ         equ	15310	;# 
 17951   003BCE                     DMA2DSZL        equ	15310	;# 
 17952   003BCF                     DMA2DSZH        equ	15311	;# 
 17953   003BD0                     DMA2DSA         equ	15312	;# 
 17954   003BD0                     DMA2DSAL        equ	15312	;# 
 17955   003BD1                     DMA2DSAH        equ	15313	;# 
 17956   003BD2                     DMA2SCNT        equ	15314	;# 
 17957   003BD2                     DMA2SCNTL       equ	15314	;# 
 17958   003BD3                     DMA2SCNTH       equ	15315	;# 
 17959   003BD4                     DMA2SPTR        equ	15316	;# 
 17960   003BD4                     DMA2SPTRL       equ	15316	;# 
 17961   003BD5                     DMA2SPTRH       equ	15317	;# 
 17962   003BD6                     DMA2SPTRU       equ	15318	;# 
 17963   003BD7                     DMA2SSZ         equ	15319	;# 
 17964   003BD7                     DMA2SSZL        equ	15319	;# 
 17965   003BD8                     DMA2SSZH        equ	15320	;# 
 17966   003BD9                     DMA2SSA         equ	15321	;# 
 17967   003BD9                     DMA2SSAL        equ	15321	;# 
 17968   003BDA                     DMA2SSAH        equ	15322	;# 
 17969   003BDB                     DMA2SSAU        equ	15323	;# 
 17970   003BDC                     DMA2CON0        equ	15324	;# 
 17971   003BDD                     DMA2CON1        equ	15325	;# 
 17972   003BDE                     DMA2AIRQ        equ	15326	;# 
 17973   003BDF                     DMA2SIRQ        equ	15327	;# 
 17974   003BE9                     DMA1BUF         equ	15337	;# 
 17975   003BEA                     DMA1DCNT        equ	15338	;# 
 17976   003BEA                     DMA1DCNTL       equ	15338	;# 
 17977   003BEB                     DMA1DCNTH       equ	15339	;# 
 17978   003BEC                     DMA1DPTR        equ	15340	;# 
 17979   003BEC                     DMA1DPTRL       equ	15340	;# 
 17980   003BED                     DMA1DPTRH       equ	15341	;# 
 17981   003BEE                     DMA1DSZ         equ	15342	;# 
 17982   003BEE                     DMA1DSZL        equ	15342	;# 
 17983   003BEF                     DMA1DSZH        equ	15343	;# 
 17984   003BF0                     DMA1DSA         equ	15344	;# 
 17985   003BF0                     DMA1DSAL        equ	15344	;# 
 17986   003BF1                     DMA1DSAH        equ	15345	;# 
 17987   003BF2                     DMA1SCNT        equ	15346	;# 
 17988   003BF2                     DMA1SCNTL       equ	15346	;# 
 17989   003BF3                     DMA1SCNTH       equ	15347	;# 
 17990   003BF4                     DMA1SPTR        equ	15348	;# 
 17991   003BF4                     DMA1SPTRL       equ	15348	;# 
 17992   003BF5                     DMA1SPTRH       equ	15349	;# 
 17993   003BF6                     DMA1SPTRU       equ	15350	;# 
 17994   003BF7                     DMA1SSZ         equ	15351	;# 
 17995   003BF7                     DMA1SSZL        equ	15351	;# 
 17996   003BF8                     DMA1SSZH        equ	15352	;# 
 17997   003BF9                     DMA1SSA         equ	15353	;# 
 17998   003BF9                     DMA1SSAL        equ	15353	;# 
 17999   003BFA                     DMA1SSAH        equ	15354	;# 
 18000   003BFB                     DMA1SSAU        equ	15355	;# 
 18001   003BFC                     DMA1CON0        equ	15356	;# 
 18002   003BFD                     DMA1CON1        equ	15357	;# 
 18003   003BFE                     DMA1AIRQ        equ	15358	;# 
 18004   003BFF                     DMA1SIRQ        equ	15359	;# 
 18005   003C56                     CLC4CON         equ	15446	;# 
 18006   003C57                     CLC4POL         equ	15447	;# 
 18007   003C58                     CLC4SEL0        equ	15448	;# 
 18008   003C59                     CLC4SEL1        equ	15449	;# 
 18009   003C5A                     CLC4SEL2        equ	15450	;# 
 18010   003C5B                     CLC4SEL3        equ	15451	;# 
 18011   003C5C                     CLC4GLS0        equ	15452	;# 
 18012   003C5D                     CLC4GLS1        equ	15453	;# 
 18013   003C5E                     CLC4GLS2        equ	15454	;# 
 18014   003C5F                     CLC4GLS3        equ	15455	;# 
 18015   003C60                     CLC3CON         equ	15456	;# 
 18016   003C61                     CLC3POL         equ	15457	;# 
 18017   003C62                     CLC3SEL0        equ	15458	;# 
 18018   003C63                     CLC3SEL1        equ	15459	;# 
 18019   003C64                     CLC3SEL2        equ	15460	;# 
 18020   003C65                     CLC3SEL3        equ	15461	;# 
 18021   003C66                     CLC3GLS0        equ	15462	;# 
 18022   003C67                     CLC3GLS1        equ	15463	;# 
 18023   003C68                     CLC3GLS2        equ	15464	;# 
 18024   003C69                     CLC3GLS3        equ	15465	;# 
 18025   003C6A                     CLC2CON         equ	15466	;# 
 18026   003C6B                     CLC2POL         equ	15467	;# 
 18027   003C6C                     CLC2SEL0        equ	15468	;# 
 18028   003C6D                     CLC2SEL1        equ	15469	;# 
 18029   003C6E                     CLC2SEL2        equ	15470	;# 
 18030   003C6F                     CLC2SEL3        equ	15471	;# 
 18031   003C70                     CLC2GLS0        equ	15472	;# 
 18032   003C71                     CLC2GLS1        equ	15473	;# 
 18033   003C72                     CLC2GLS2        equ	15474	;# 
 18034   003C73                     CLC2GLS3        equ	15475	;# 
 18035   003C74                     CLC1CON         equ	15476	;# 
 18036   003C75                     CLC1POL         equ	15477	;# 
 18037   003C76                     CLC1SEL0        equ	15478	;# 
 18038   003C77                     CLC1SEL1        equ	15479	;# 
 18039   003C78                     CLC1SEL2        equ	15480	;# 
 18040   003C79                     CLC1SEL3        equ	15481	;# 
 18041   003C7A                     CLC1GLS0        equ	15482	;# 
 18042   003C7B                     CLC1GLS1        equ	15483	;# 
 18043   003C7C                     CLC1GLS2        equ	15484	;# 
 18044   003C7D                     CLC1GLS3        equ	15485	;# 
 18045   003C7E                     CLCDATA0        equ	15486	;# 
 18046   003CE5                     CLKRCON         equ	15589	;# 
 18047   003CE6                     CLKRCLK         equ	15590	;# 
 18048   003CFA                     MD1CON0         equ	15610	;# 
 18049   003CFB                     MD1CON1         equ	15611	;# 
 18050   003CFC                     MD1SRC          equ	15612	;# 
 18051   003CFD                     MD1CARL         equ	15613	;# 
 18052   003CFE                     MD1CARH         equ	15614	;# 
 18053   003D10                     SPI1RXB         equ	15632	;# 
 18054   003D11                     SPI1TXB         equ	15633	;# 
 18055   003D12                     SPI1TCNT        equ	15634	;# 
 18056   003D12                     SPI1TCNTL       equ	15634	;# 
 18057   003D13                     SPI1TCNTH       equ	15635	;# 
 18058   003D14                     SPI1CON0        equ	15636	;# 
 18059   003D15                     SPI1CON1        equ	15637	;# 
 18060   003D16                     SPI1CON2        equ	15638	;# 
 18061   003D17                     SPI1STATUS      equ	15639	;# 
 18062   003D18                     SPI1TWIDTH      equ	15640	;# 
 18063   003D19                     SPI1BAUD        equ	15641	;# 
 18064   003D1A                     SPI1INTF        equ	15642	;# 
 18065   003D1B                     SPI1INTE        equ	15643	;# 
 18066   003D1C                     SPI1CLK         equ	15644	;# 
 18067   003D54                     I2C2RXB         equ	15700	;# 
 18068   003D55                     I2C2TXB         equ	15701	;# 
 18069   003D56                     I2C2CNT         equ	15702	;# 
 18070   003D57                     I2C2ADB0        equ	15703	;# 
 18071   003D58                     I2C2ADB1        equ	15704	;# 
 18072   003D59                     I2C2ADR0        equ	15705	;# 
 18073   003D5A                     I2C2ADR1        equ	15706	;# 
 18074   003D5B                     I2C2ADR2        equ	15707	;# 
 18075   003D5C                     I2C2ADR3        equ	15708	;# 
 18076   003D5D                     I2C2CON0        equ	15709	;# 
 18077   003D5E                     I2C2CON1        equ	15710	;# 
 18078   003D5F                     I2C2CON2        equ	15711	;# 
 18079   003D60                     I2C2ERR         equ	15712	;# 
 18080   003D61                     I2C2STAT0       equ	15713	;# 
 18081   003D62                     I2C2STAT1       equ	15714	;# 
 18082   003D63                     I2C2PIR         equ	15715	;# 
 18083   003D64                     I2C2PIE         equ	15716	;# 
 18084   003D65                     I2C2CLK         equ	15717	;# 
 18085   003D66                     I2C2BTO         equ	15718	;# 
 18086   003D6A                     I2C1RXB         equ	15722	;# 
 18087   003D6B                     I2C1TXB         equ	15723	;# 
 18088   003D6C                     I2C1CNT         equ	15724	;# 
 18089   003D6D                     I2C1ADB0        equ	15725	;# 
 18090   003D6E                     I2C1ADB1        equ	15726	;# 
 18091   003D6F                     I2C1ADR0        equ	15727	;# 
 18092   003D70                     I2C1ADR1        equ	15728	;# 
 18093   003D71                     I2C1ADR2        equ	15729	;# 
 18094   003D72                     I2C1ADR3        equ	15730	;# 
 18095   003D73                     I2C1CON0        equ	15731	;# 
 18096   003D74                     I2C1CON1        equ	15732	;# 
 18097   003D75                     I2C1CON2        equ	15733	;# 
 18098   003D76                     I2C1ERR         equ	15734	;# 
 18099   003D77                     I2C1STAT0       equ	15735	;# 
 18100   003D78                     I2C1STAT1       equ	15736	;# 
 18101   003D79                     I2C1PIR         equ	15737	;# 
 18102   003D7A                     I2C1PIE         equ	15738	;# 
 18103   003D7B                     I2C1CLK         equ	15739	;# 
 18104   003D7C                     I2C1BTO         equ	15740	;# 
 18105   003DD0                     U2RXB           equ	15824	;# 
 18106   003DD0                     U2RXBL          equ	15824	;# 
 18107   003DD2                     U2TXB           equ	15826	;# 
 18108   003DD2                     U2TXBL          equ	15826	;# 
 18109   003DD4                     U2P1            equ	15828	;# 
 18110   003DD4                     U2P1L           equ	15828	;# 
 18111   003DD6                     U2P2            equ	15830	;# 
 18112   003DD6                     U2P2L           equ	15830	;# 
 18113   003DD8                     U2P3            equ	15832	;# 
 18114   003DD8                     U2P3L           equ	15832	;# 
 18115   003DDA                     U2CON0          equ	15834	;# 
 18116   003DDB                     U2CON1          equ	15835	;# 
 18117   003DDC                     U2CON2          equ	15836	;# 
 18118   003DDD                     U2BRG           equ	15837	;# 
 18119   003DDD                     U2BRGL          equ	15837	;# 
 18120   003DDE                     U2BRGH          equ	15838	;# 
 18121   003DDF                     U2FIFO          equ	15839	;# 
 18122   003DE0                     U2UIR           equ	15840	;# 
 18123   003DE1                     U2ERRIR         equ	15841	;# 
 18124   003DE2                     U2ERRIE         equ	15842	;# 
 18125   003DE8                     U1RXB           equ	15848	;# 
 18126   003DE8                     U1RXBL          equ	15848	;# 
 18127   003DE9                     U1RXCHK         equ	15849	;# 
 18128   003DEA                     U1TXB           equ	15850	;# 
 18129   003DEA                     U1TXBL          equ	15850	;# 
 18130   003DEB                     U1TXCHK         equ	15851	;# 
 18131   003DEC                     U1P1            equ	15852	;# 
 18132   003DEC                     U1P1L           equ	15852	;# 
 18133   003DED                     U1P1H           equ	15853	;# 
 18134   003DEE                     U1P2            equ	15854	;# 
 18135   003DEE                     U1P2L           equ	15854	;# 
 18136   003DEF                     U1P2H           equ	15855	;# 
 18137   003DF0                     U1P3            equ	15856	;# 
 18138   003DF0                     U1P3L           equ	15856	;# 
 18139   003DF1                     U1P3H           equ	15857	;# 
 18140   003DF2                     U1CON0          equ	15858	;# 
 18141   003DF3                     U1CON1          equ	15859	;# 
 18142   003DF4                     U1CON2          equ	15860	;# 
 18143   003DF5                     U1BRG           equ	15861	;# 
 18144   003DF5                     U1BRGL          equ	15861	;# 
 18145   003DF6                     U1BRGH          equ	15862	;# 
 18146   003DF7                     U1FIFO          equ	15863	;# 
 18147   003DF8                     U1UIR           equ	15864	;# 
 18148   003DF9                     U1ERRIR         equ	15865	;# 
 18149   003DFA                     U1ERRIE         equ	15866	;# 
 18150   003E9C                     DAC1CON1        equ	16028	;# 
 18151   003E9E                     DAC1CON0        equ	16030	;# 
 18152   003EB8                     CM2CON0         equ	16056	;# 
 18153   003EB9                     CM2CON1         equ	16057	;# 
 18154   003EBA                     CM2NCH          equ	16058	;# 
 18155   003EBB                     CM2PCH          equ	16059	;# 
 18156   003EBC                     CM1CON0         equ	16060	;# 
 18157   003EBD                     CM1CON1         equ	16061	;# 
 18158   003EBE                     CM1NCH          equ	16062	;# 
 18159   003EBF                     CM1PCH          equ	16063	;# 
 18160   003EC0                     CMOUT           equ	16064	;# 
 18161   003EC1                     FVRCON          equ	16065	;# 
 18162   003EC3                     ZCDCON          equ	16067	;# 
 18163   003EC9                     HLVDCON0        equ	16073	;# 
 18164   003ECA                     HLVDCON1        equ	16074	;# 
 18165   003ED7                     ADCP            equ	16087	;# 
 18166   003EDE                     ADLTH           equ	16094	;# 
 18167   003EDE                     ADLTHL          equ	16094	;# 
 18168   003EDF                     ADLTHH          equ	16095	;# 
 18169   003EE0                     ADUTH           equ	16096	;# 
 18170   003EE0                     ADUTHL          equ	16096	;# 
 18171   003EE1                     ADUTHH          equ	16097	;# 
 18172   003EE2                     ADERR           equ	16098	;# 
 18173   003EE2                     ADERRL          equ	16098	;# 
 18174   003EE3                     ADERRH          equ	16099	;# 
 18175   003EE4                     ADSTPT          equ	16100	;# 
 18176   003EE4                     ADSTPTL         equ	16100	;# 
 18177   003EE5                     ADSTPTH         equ	16101	;# 
 18178   003EE6                     ADFLTR          equ	16102	;# 
 18179   003EE6                     ADFLTRL         equ	16102	;# 
 18180   003EE7                     ADFLTRH         equ	16103	;# 
 18181   003EE8                     ADACC           equ	16104	;# 
 18182   003EE8                     ADACCL          equ	16104	;# 
 18183   003EE9                     ADACCH          equ	16105	;# 
 18184   003EEA                     ADACCU          equ	16106	;# 
 18185   003EEB                     ADCNT           equ	16107	;# 
 18186   003EEC                     ADRPT           equ	16108	;# 
 18187   003EED                     ADPREV          equ	16109	;# 
 18188   003EED                     ADPREVL         equ	16109	;# 
 18189   003EEE                     ADPREVH         equ	16110	;# 
 18190   003EEF                     ADRES           equ	16111	;# 
 18191   003EEF                     ADRESL          equ	16111	;# 
 18192   003EF0                     ADRESH          equ	16112	;# 
 18193   003EF1                     ADPCH           equ	16113	;# 
 18194   003EF3                     ADACQ           equ	16115	;# 
 18195   003EF3                     ADACQL          equ	16115	;# 
 18196   003EF4                     ADACQH          equ	16116	;# 
 18197   003EF5                     ADCAP           equ	16117	;# 
 18198   003EF6                     ADPRE           equ	16118	;# 
 18199   003EF6                     ADPREL          equ	16118	;# 
 18200   003EF7                     ADPREH          equ	16119	;# 
 18201   003EF8                     ADCON0          equ	16120	;# 
 18202   003EF9                     ADCON1          equ	16121	;# 
 18203   003EFA                     ADCON2          equ	16122	;# 
 18204   003EFB                     ADCON3          equ	16123	;# 
 18205   003EFC                     ADSTAT          equ	16124	;# 
 18206   003EFD                     ADREF           equ	16125	;# 
 18207   003EFE                     ADACT           equ	16126	;# 
 18208   003EFF                     ADCLK           equ	16127	;# 
 18209   003F12                     SMT1TMR         equ	16146	;# 
 18210   003F12                     SMT1TMRL        equ	16146	;# 
 18211   003F13                     SMT1TMRH        equ	16147	;# 
 18212   003F14                     SMT1TMRU        equ	16148	;# 
 18213   003F15                     SMT1CPR         equ	16149	;# 
 18214   003F15                     SMT1CPRL        equ	16149	;# 
 18215   003F16                     SMT1CPRH        equ	16150	;# 
 18216   003F17                     SMT1CPRU        equ	16151	;# 
 18217   003F18                     SMT1CPW         equ	16152	;# 
 18218   003F18                     SMT1CPWL        equ	16152	;# 
 18219   003F19                     SMT1CPWH        equ	16153	;# 
 18220   003F1A                     SMT1CPWU        equ	16154	;# 
 18221   003F1B                     SMT1PR          equ	16155	;# 
 18222   003F1B                     SMT1PRL         equ	16155	;# 
 18223   003F1C                     SMT1PRH         equ	16156	;# 
 18224   003F1D                     SMT1PRU         equ	16157	;# 
 18225   003F1E                     SMT1CON0        equ	16158	;# 
 18226   003F1F                     SMT1CON1        equ	16159	;# 
 18227   003F20                     SMT1STAT        equ	16160	;# 
 18228   003F21                     SMT1CLK         equ	16161	;# 
 18229   003F22                     SMT1SIG         equ	16162	;# 
 18230   003F23                     SMT1WIN         equ	16163	;# 
 18231   003F38                     NCO1ACC         equ	16184	;# 
 18232   003F38                     NCO1ACCL        equ	16184	;# 
 18233   003F39                     NCO1ACCH        equ	16185	;# 
 18234   003F3A                     NCO1ACCU        equ	16186	;# 
 18235   003F3B                     NCO1INC         equ	16187	;# 
 18236   003F3B                     NCO1INCL        equ	16187	;# 
 18237   003F3C                     NCO1INCH        equ	16188	;# 
 18238   003F3D                     NCO1INCU        equ	16189	;# 
 18239   003F3E                     NCO1CON         equ	16190	;# 
 18240   003F3F                     NCO1CLK         equ	16191	;# 
 18241   003F40                     CWG3CLK         equ	16192	;# 
 18242   003F40                     CWG3CLKCON      equ	16192	;# 
 18243   003F41                     CWG3ISM         equ	16193	;# 
 18244   003F41                     CWG3DAT         equ	16193	;# 
 18245   003F42                     CWG3DBR         equ	16194	;# 
 18246   003F43                     CWG3DBF         equ	16195	;# 
 18247   003F44                     CWG3CON0        equ	16196	;# 
 18248   003F45                     CWG3CON1        equ	16197	;# 
 18249   003F46                     CWG3AS0         equ	16198	;# 
 18250   003F47                     CWG3AS1         equ	16199	;# 
 18251   003F48                     CWG3STR         equ	16200	;# 
 18252   003F49                     CWG2CLK         equ	16201	;# 
 18253   003F49                     CWG2CLKCON      equ	16201	;# 
 18254   003F4A                     CWG2ISM         equ	16202	;# 
 18255   003F4A                     CWG2DAT         equ	16202	;# 
 18256   003F4B                     CWG2DBR         equ	16203	;# 
 18257   003F4C                     CWG2DBF         equ	16204	;# 
 18258   003F4D                     CWG2CON0        equ	16205	;# 
 18259   003F4E                     CWG2CON1        equ	16206	;# 
 18260   003F4F                     CWG2AS0         equ	16207	;# 
 18261   003F50                     CWG2AS1         equ	16208	;# 
 18262   003F51                     CWG2STR         equ	16209	;# 
 18263   003F52                     CWG1CLK         equ	16210	;# 
 18264   003F52                     CWG1CLKCON      equ	16210	;# 
 18265   003F53                     CWG1ISM         equ	16211	;# 
 18266   003F53                     CWG1DAT         equ	16211	;# 
 18267   003F54                     CWG1DBR         equ	16212	;# 
 18268   003F55                     CWG1DBF         equ	16213	;# 
 18269   003F56                     CWG1CON0        equ	16214	;# 
 18270   003F57                     CWG1CON1        equ	16215	;# 
 18271   003F58                     CWG1AS0         equ	16216	;# 
 18272   003F59                     CWG1AS1         equ	16217	;# 
 18273   003F5A                     CWG1STR         equ	16218	;# 
 18274   003F5E                     CCPTMRS0        equ	16222	;# 
 18275   003F5F                     CCPTMRS1        equ	16223	;# 
 18276   003F60                     PWM8DC          equ	16224	;# 
 18277   003F60                     PWM8DCL         equ	16224	;# 
 18278   003F61                     PWM8DCH         equ	16225	;# 
 18279   003F62                     PWM8CON         equ	16226	;# 
 18280   003F64                     PWM7DC          equ	16228	;# 
 18281   003F64                     PWM7DCL         equ	16228	;# 
 18282   003F65                     PWM7DCH         equ	16229	;# 
 18283   003F66                     PWM7CON         equ	16230	;# 
 18284   003F68                     PWM6DC          equ	16232	;# 
 18285   003F68                     PWM6DCL         equ	16232	;# 
 18286   003F69                     PWM6DCH         equ	16233	;# 
 18287   003F6A                     PWM6CON         equ	16234	;# 
 18288   003F6C                     PWM5DC          equ	16236	;# 
 18289   003F6C                     PWM5DCL         equ	16236	;# 
 18290   003F6D                     PWM5DCH         equ	16237	;# 
 18291   003F6E                     PWM5CON         equ	16238	;# 
 18292   003F70                     CCPR4           equ	16240	;# 
 18293   003F70                     CCPR4L          equ	16240	;# 
 18294   003F71                     CCPR4H          equ	16241	;# 
 18295   003F72                     CCP4CON         equ	16242	;# 
 18296   003F73                     CCP4CAP         equ	16243	;# 
 18297   003F74                     CCPR3           equ	16244	;# 
 18298   003F74                     CCPR3L          equ	16244	;# 
 18299   003F75                     CCPR3H          equ	16245	;# 
 18300   003F76                     CCP3CON         equ	16246	;# 
 18301   003F77                     CCP3CAP         equ	16247	;# 
 18302   003F78                     CCPR2           equ	16248	;# 
 18303   003F78                     CCPR2L          equ	16248	;# 
 18304   003F79                     CCPR2H          equ	16249	;# 
 18305   003F7A                     CCP2CON         equ	16250	;# 
 18306   003F7B                     CCP2CAP         equ	16251	;# 
 18307   003F7C                     CCPR1           equ	16252	;# 
 18308   003F7C                     CCPR1L          equ	16252	;# 
 18309   003F7D                     CCPR1H          equ	16253	;# 
 18310   003F7E                     CCP1CON         equ	16254	;# 
 18311   003F7F                     CCP1CAP         equ	16255	;# 
 18312   003F92                     T6TMR           equ	16274	;# 
 18313   003F92                     TMR6            equ	16274	;# 
 18314   003F93                     T6PR            equ	16275	;# 
 18315   003F93                     PR6             equ	16275	;# 
 18316   003F94                     T6CON           equ	16276	;# 
 18317   003F95                     T6HLT           equ	16277	;# 
 18318   003F96                     T6CLKCON        equ	16278	;# 
 18319   003F96                     T6CLK           equ	16278	;# 
 18320   003F97                     T6RST           equ	16279	;# 
 18321   003F98                     TMR5            equ	16280	;# 
 18322   003F98                     TMR5L           equ	16280	;# 
 18323   003F99                     TMR5H           equ	16281	;# 
 18324   003F9A                     T5CON           equ	16282	;# 
 18325   003F9A                     TMR5CON         equ	16282	;# 
 18326   003F9B                     T5GCON          equ	16283	;# 
 18327   003F9B                     TMR5GCON        equ	16283	;# 
 18328   003F9C                     T5GATE          equ	16284	;# 
 18329   003F9C                     TMR5GATE        equ	16284	;# 
 18330   003F9D                     T5CLK           equ	16285	;# 
 18331   003F9D                     TMR5CLK         equ	16285	;# 
 18332   003F9D                     PR5             equ	16285	;# 
 18333   003F9E                     T4TMR           equ	16286	;# 
 18334   003F9E                     TMR4            equ	16286	;# 
 18335   003F9F                     T4PR            equ	16287	;# 
 18336   003F9F                     PR4             equ	16287	;# 
 18337   003FA0                     T4CON           equ	16288	;# 
 18338   003FA1                     T4HLT           equ	16289	;# 
 18339   003FA2                     T4CLKCON        equ	16290	;# 
 18340   003FA2                     T4CLK           equ	16290	;# 
 18341   003FA3                     T4RST           equ	16291	;# 
 18342   003FA4                     TMR3            equ	16292	;# 
 18343   003FA4                     TMR3L           equ	16292	;# 
 18344   003FA5                     TMR3H           equ	16293	;# 
 18345   003FA6                     T3CON           equ	16294	;# 
 18346   003FA6                     TMR3CON         equ	16294	;# 
 18347   003FA7                     T3GCON          equ	16295	;# 
 18348   003FA7                     TMR3GCON        equ	16295	;# 
 18349   003FA8                     T3GATE          equ	16296	;# 
 18350   003FA8                     TMR3GATE        equ	16296	;# 
 18351   003FA9                     T3CLK           equ	16297	;# 
 18352   003FA9                     TMR3CLK         equ	16297	;# 
 18353   003FA9                     PR3             equ	16297	;# 
 18354   003FAA                     T2TMR           equ	16298	;# 
 18355   003FAA                     TMR2            equ	16298	;# 
 18356   003FAB                     T2PR            equ	16299	;# 
 18357   003FAB                     PR2             equ	16299	;# 
 18358   003FAC                     T2CON           equ	16300	;# 
 18359   003FAD                     T2HLT           equ	16301	;# 
 18360   003FAE                     T2CLKCON        equ	16302	;# 
 18361   003FAE                     T2CLK           equ	16302	;# 
 18362   003FAF                     T2RST           equ	16303	;# 
 18363   003FB0                     TMR1            equ	16304	;# 
 18364   003FB0                     TMR1L           equ	16304	;# 
 18365   003FB1                     TMR1H           equ	16305	;# 
 18366   003FB2                     T1CON           equ	16306	;# 
 18367   003FB2                     TMR1CON         equ	16306	;# 
 18368   003FB3                     T1GCON          equ	16307	;# 
 18369   003FB3                     TMR1GCON        equ	16307	;# 
 18370   003FB4                     T1GATE          equ	16308	;# 
 18371   003FB4                     TMR1GATE        equ	16308	;# 
 18372   003FB5                     T1CLK           equ	16309	;# 
 18373   003FB5                     TMR1CLK         equ	16309	;# 
 18374   003FB5                     PR1             equ	16309	;# 
 18375   003FB6                     TMR0L           equ	16310	;# 
 18376   003FB6                     TMR0            equ	16310	;# 
 18377   003FB7                     TMR0H           equ	16311	;# 
 18378   003FB7                     PR0             equ	16311	;# 
 18379   003FB8                     T0CON0          equ	16312	;# 
 18380   003FB9                     T0CON1          equ	16313	;# 
 18381   003FBA                     LATA            equ	16314	;# 
 18382   003FBB                     LATB            equ	16315	;# 
 18383   003FBC                     LATC            equ	16316	;# 
 18384   003FBD                     LATD            equ	16317	;# 
 18385   003FBE                     LATE            equ	16318	;# 
 18386   003FBF                     LATF            equ	16319	;# 
 18387   003FC2                     TRISA           equ	16322	;# 
 18388   003FC3                     TRISB           equ	16323	;# 
 18389   003FC4                     TRISC           equ	16324	;# 
 18390   003FC5                     TRISD           equ	16325	;# 
 18391   003FC6                     TRISE           equ	16326	;# 
 18392   003FC7                     TRISF           equ	16327	;# 
 18393   003FCA                     PORTA           equ	16330	;# 
 18394   003FCB                     PORTB           equ	16331	;# 
 18395   003FCC                     PORTC           equ	16332	;# 
 18396   003FCD                     PORTD           equ	16333	;# 
 18397   003FCE                     PORTE           equ	16334	;# 
 18398   003FCF                     PORTF           equ	16335	;# 
 18399   003FD2                     INTCON0         equ	16338	;# 
 18400   003FD3                     INTCON1         equ	16339	;# 
 18401   003FD4                     IVTLOCK         equ	16340	;# 
 18402   003FD5                     IVTBASE         equ	16341	;# 
 18403   003FD5                     IVTBASEL        equ	16341	;# 
 18404   003FD6                     IVTBASEH        equ	16342	;# 
 18405   003FD7                     IVTBASEU        equ	16343	;# 
 18406   003FD8                     STATUS          equ	16344	;# 
 18407   003FD9                     FSR2            equ	16345	;# 
 18408   003FD9                     FSR2L           equ	16345	;# 
 18409   003FDA                     FSR2H           equ	16346	;# 
 18410   003FDB                     PLUSW2          equ	16347	;# 
 18411   003FDC                     PREINC2         equ	16348	;# 
 18412   003FDD                     POSTDEC2        equ	16349	;# 
 18413   003FDE                     POSTINC2        equ	16350	;# 
 18414   003FDF                     INDF2           equ	16351	;# 
 18415   003FE0                     BSR             equ	16352	;# 
 18416   003FE1                     FSR1            equ	16353	;# 
 18417   003FE1                     FSR1L           equ	16353	;# 
 18418   003FE2                     FSR1H           equ	16354	;# 
 18419   003FE3                     PLUSW1          equ	16355	;# 
 18420   003FE4                     PREINC1         equ	16356	;# 
 18421   003FE5                     POSTDEC1        equ	16357	;# 
 18422   003FE6                     POSTINC1        equ	16358	;# 
 18423   003FE7                     INDF1           equ	16359	;# 
 18424   003FE8                     WREG            equ	16360	;# 
 18425   003FE9                     FSR0            equ	16361	;# 
 18426   003FE9                     FSR0L           equ	16361	;# 
 18427   003FEA                     FSR0H           equ	16362	;# 
 18428   003FEB                     PLUSW0          equ	16363	;# 
 18429   003FEC                     PREINC0         equ	16364	;# 
 18430   003FED                     POSTDEC0        equ	16365	;# 
 18431   003FEE                     POSTINC0        equ	16366	;# 
 18432   003FEF                     INDF0           equ	16367	;# 
 18433   003FF0                     PCON0           equ	16368	;# 
 18434   003FF1                     PCON1           equ	16369	;# 
 18435   003FF3                     PROD            equ	16371	;# 
 18436   003FF3                     PRODL           equ	16371	;# 
 18437   003FF4                     PRODH           equ	16372	;# 
 18438   003FF5                     TABLAT          equ	16373	;# 
 18439   003FF6                     TBLPTR          equ	16374	;# 
 18440   003FF6                     TBLPTRL         equ	16374	;# 
 18441   003FF7                     TBLPTRH         equ	16375	;# 
 18442   003FF8                     TBLPTRU         equ	16376	;# 
 18443   003FF9                     PCLAT           equ	16377	;# 
 18444   003FF9                     PCL             equ	16377	;# 
 18445   003FFA                     PCLATH          equ	16378	;# 
 18446   003FFB                     PCLATU          equ	16379	;# 
 18447   003FFC                     STKPTR          equ	16380	;# 
 18448   003FFD                     TOS             equ	16381	;# 
 18449   003FFD                     TOSL            equ	16381	;# 
 18450   003FFE                     TOSH            equ	16382	;# 
 18451   003FFF                     TOSU            equ	16383	;# 
 18452   003880                     STATUS_CSHAD    equ	14464	;# 
 18453   003881                     WREG_CSHAD      equ	14465	;# 
 18454   003882                     BSR_CSHAD       equ	14466	;# 
 18455   003883                     SHADCON         equ	14467	;# 
 18456   003884                     STATUS_SHAD     equ	14468	;# 
 18457   003885                     WREG_SHAD       equ	14469	;# 
 18458   003886                     BSR_SHAD        equ	14470	;# 
 18459   003887                     PCLATH_SHAD     equ	14471	;# 
 18460   003888                     PCLATU_SHAD     equ	14472	;# 
 18461   003889                     FSR0SH          equ	14473	;# 
 18462   003889                     FSR0L_SHAD      equ	14473	;# 
 18463   00388A                     FSR0H_SHAD      equ	14474	;# 
 18464   00388B                     FSR1SH          equ	14475	;# 
 18465   00388B                     FSR1L_SHAD      equ	14475	;# 
 18466   00388C                     FSR1H_SHAD      equ	14476	;# 
 18467   00388D                     FSR2SH          equ	14477	;# 
 18468   00388D                     FSR2L_SHAD      equ	14477	;# 
 18469   00388E                     FSR2H_SHAD      equ	14478	;# 
 18470   00388F                     PRODSH          equ	14479	;# 
 18471   00388F                     PRODL_SHAD      equ	14479	;# 
 18472   003890                     PRODH_SHAD      equ	14480	;# 
 18473   00389D                     IVTADL          equ	14493	;# 
 18474   00389E                     IVTADH          equ	14494	;# 
 18475   00389F                     IVTADU          equ	14495	;# 
 18476   00395B                     WDTCON0         equ	14683	;# 
 18477   00395C                     WDTCON1         equ	14684	;# 
 18478   00395D                     WDTPSL          equ	14685	;# 
 18479   00395E                     WDTPSH          equ	14686	;# 
 18480   00395F                     WDTTMR          equ	14687	;# 
 18481   003960                     CRCDATA         equ	14688	;# 
 18482   003960                     CRCDATL         equ	14688	;# 
 18483   003961                     CRCDATH         equ	14689	;# 
 18484   003962                     CRCACC          equ	14690	;# 
 18485   003962                     CRCACCL         equ	14690	;# 
 18486   003963                     CRCACCH         equ	14691	;# 
 18487   003964                     CRCSHFT         equ	14692	;# 
 18488   003964                     CRCSHIFTL       equ	14692	;# 
 18489   003965                     CRCSHIFTH       equ	14693	;# 
 18490   003966                     CRCXOR          equ	14694	;# 
 18491   003966                     CRCXORL         equ	14694	;# 
 18492   003967                     CRCXORH         equ	14695	;# 
 18493   003968                     CRCCON0         equ	14696	;# 
 18494   003969                     CRCCON1         equ	14697	;# 
 18495   003976                     SCANLADR        equ	14710	;# 
 18496   003976                     SCANLADRL       equ	14710	;# 
 18497   003977                     SCANLADRH       equ	14711	;# 
 18498   003978                     SCANLADRU       equ	14712	;# 
 18499   003979                     SCANHADR        equ	14713	;# 
 18500   003979                     SCANHADRL       equ	14713	;# 
 18501   00397A                     SCANHADRH       equ	14714	;# 
 18502   00397B                     SCANHADRU       equ	14715	;# 
 18503   00397C                     SCANCON0        equ	14716	;# 
 18504   00397D                     SCANTRIG        equ	14717	;# 
 18505   003980                     IPR0            equ	14720	;# 
 18506   003981                     IPR1            equ	14721	;# 
 18507   003982                     IPR2            equ	14722	;# 
 18508   003983                     IPR3            equ	14723	;# 
 18509   003984                     IPR4            equ	14724	;# 
 18510   003985                     IPR5            equ	14725	;# 
 18511   003986                     IPR6            equ	14726	;# 
 18512   003987                     IPR7            equ	14727	;# 
 18513   003988                     IPR8            equ	14728	;# 
 18514   003989                     IPR9            equ	14729	;# 
 18515   00398A                     IPR10           equ	14730	;# 
 18516   003990                     PIE0            equ	14736	;# 
 18517   003991                     PIE1            equ	14737	;# 
 18518   003992                     PIE2            equ	14738	;# 
 18519   003993                     PIE3            equ	14739	;# 
 18520   003994                     PIE4            equ	14740	;# 
 18521   003995                     PIE5            equ	14741	;# 
 18522   003996                     PIE6            equ	14742	;# 
 18523   003997                     PIE7            equ	14743	;# 
 18524   003998                     PIE8            equ	14744	;# 
 18525   003999                     PIE9            equ	14745	;# 
 18526   00399A                     PIE10           equ	14746	;# 
 18527   0039A0                     PIR0            equ	14752	;# 
 18528   0039A1                     PIR1            equ	14753	;# 
 18529   0039A2                     PIR2            equ	14754	;# 
 18530   0039A3                     PIR3            equ	14755	;# 
 18531   0039A4                     PIR4            equ	14756	;# 
 18532   0039A5                     PIR5            equ	14757	;# 
 18533   0039A6                     PIR6            equ	14758	;# 
 18534   0039A7                     PIR7            equ	14759	;# 
 18535   0039A8                     PIR8            equ	14760	;# 
 18536   0039A9                     PIR9            equ	14761	;# 
 18537   0039AA                     PIR10           equ	14762	;# 
 18538   0039C0                     PMD0            equ	14784	;# 
 18539   0039C1                     PMD1            equ	14785	;# 
 18540   0039C2                     PMD2            equ	14786	;# 
 18541   0039C3                     PMD3            equ	14787	;# 
 18542   0039C4                     PMD4            equ	14788	;# 
 18543   0039C5                     PMD5            equ	14789	;# 
 18544   0039C6                     PMD6            equ	14790	;# 
 18545   0039C7                     PMD7            equ	14791	;# 
 18546   0039D0                     BORCON          equ	14800	;# 
 18547   0039D1                     VREGCON         equ	14801	;# 
 18548   0039D8                     CPUDOZE         equ	14808	;# 
 18549   0039D9                     OSCCON1         equ	14809	;# 
 18550   0039DA                     OSCCON2         equ	14810	;# 
 18551   0039DB                     OSCCON3         equ	14811	;# 
 18552   0039DC                     OSCSTAT         equ	14812	;# 
 18553   0039DC                     OSCSTAT1        equ	14812	;# 
 18554   0039DD                     OSCEN           equ	14813	;# 
 18555   0039DE                     OSCTUNE         equ	14814	;# 
 18556   0039DF                     OSCFRQ          equ	14815	;# 
 18557   0039E0                     NVMADRL         equ	14816	;# 
 18558   0039E1                     NVMADRH         equ	14817	;# 
 18559   0039E3                     NVMDAT          equ	14819	;# 
 18560   0039E5                     NVMCON1         equ	14821	;# 
 18561   0039E6                     NVMCON2         equ	14822	;# 
 18562   0039EF                     PRLOCK          equ	14831	;# 
 18563   0039F1                     ISRPR           equ	14833	;# 
 18564   0039F2                     MAINPR          equ	14834	;# 
 18565   0039F3                     DMA1PR          equ	14835	;# 
 18566   0039F4                     DMA2PR          equ	14836	;# 
 18567   0039F7                     SCANPR          equ	14839	;# 
 18568   003A00                     RA0PPS          equ	14848	;# 
 18569   003A01                     RA1PPS          equ	14849	;# 
 18570   003A02                     RA2PPS          equ	14850	;# 
 18571   003A03                     RA3PPS          equ	14851	;# 
 18572   003A04                     RA4PPS          equ	14852	;# 
 18573   003A05                     RA5PPS          equ	14853	;# 
 18574   003A06                     RA6PPS          equ	14854	;# 
 18575   003A07                     RA7PPS          equ	14855	;# 
 18576   003A08                     RB0PPS          equ	14856	;# 
 18577   003A09                     RB1PPS          equ	14857	;# 
 18578   003A0A                     RB2PPS          equ	14858	;# 
 18579   003A0B                     RB3PPS          equ	14859	;# 
 18580   003A0C                     RB4PPS          equ	14860	;# 
 18581   003A0D                     RB5PPS          equ	14861	;# 
 18582   003A0E                     RB6PPS          equ	14862	;# 
 18583   003A0F                     RB7PPS          equ	14863	;# 
 18584   003A10                     RC0PPS          equ	14864	;# 
 18585   003A11                     RC1PPS          equ	14865	;# 
 18586   003A12                     RC2PPS          equ	14866	;# 
 18587   003A13                     RC3PPS          equ	14867	;# 
 18588   003A14                     RC4PPS          equ	14868	;# 
 18589   003A15                     RC5PPS          equ	14869	;# 
 18590   003A16                     RC6PPS          equ	14870	;# 
 18591   003A17                     RC7PPS          equ	14871	;# 
 18592   003A18                     RD0PPS          equ	14872	;# 
 18593   003A19                     RD1PPS          equ	14873	;# 
 18594   003A1A                     RD2PPS          equ	14874	;# 
 18595   003A1B                     RD3PPS          equ	14875	;# 
 18596   003A1C                     RD4PPS          equ	14876	;# 
 18597   003A1D                     RD5PPS          equ	14877	;# 
 18598   003A1E                     RD6PPS          equ	14878	;# 
 18599   003A1F                     RD7PPS          equ	14879	;# 
 18600   003A20                     RE0PPS          equ	14880	;# 
 18601   003A21                     RE1PPS          equ	14881	;# 
 18602   003A22                     RE2PPS          equ	14882	;# 
 18603   003A28                     RF0PPS          equ	14888	;# 
 18604   003A29                     RF1PPS          equ	14889	;# 
 18605   003A2A                     RF2PPS          equ	14890	;# 
 18606   003A2B                     RF3PPS          equ	14891	;# 
 18607   003A2C                     RF4PPS          equ	14892	;# 
 18608   003A2D                     RF5PPS          equ	14893	;# 
 18609   003A2E                     RF6PPS          equ	14894	;# 
 18610   003A2F                     RF7PPS          equ	14895	;# 
 18611   003A40                     ANSELA          equ	14912	;# 
 18612   003A41                     WPUA            equ	14913	;# 
 18613   003A42                     ODCONA          equ	14914	;# 
 18614   003A43                     SLRCONA         equ	14915	;# 
 18615   003A44                     INLVLA          equ	14916	;# 
 18616   003A45                     IOCAP           equ	14917	;# 
 18617   003A46                     IOCAN           equ	14918	;# 
 18618   003A47                     IOCAF           equ	14919	;# 
 18619   003A50                     ANSELB          equ	14928	;# 
 18620   003A51                     WPUB            equ	14929	;# 
 18621   003A52                     ODCONB          equ	14930	;# 
 18622   003A53                     SLRCONB         equ	14931	;# 
 18623   003A54                     INLVLB          equ	14932	;# 
 18624   003A55                     IOCBP           equ	14933	;# 
 18625   003A56                     IOCBN           equ	14934	;# 
 18626   003A57                     IOCBF           equ	14935	;# 
 18627   003A5A                     RB1I2C          equ	14938	;# 
 18628   003A5B                     RB2I2C          equ	14939	;# 
 18629   003A60                     ANSELC          equ	14944	;# 
 18630   003A61                     WPUC            equ	14945	;# 
 18631   003A62                     ODCONC          equ	14946	;# 
 18632   003A63                     SLRCONC         equ	14947	;# 
 18633   003A64                     INLVLC          equ	14948	;# 
 18634   003A65                     IOCCP           equ	14949	;# 
 18635   003A66                     IOCCN           equ	14950	;# 
 18636   003A67                     IOCCF           equ	14951	;# 
 18637   003A6A                     RC3I2C          equ	14954	;# 
 18638   003A6B                     RC4I2C          equ	14955	;# 
 18639   003A70                     ANSELD          equ	14960	;# 
 18640   003A71                     WPUD            equ	14961	;# 
 18641   003A72                     ODCOND          equ	14962	;# 
 18642   003A73                     SLRCOND         equ	14963	;# 
 18643   003A74                     INLVLD          equ	14964	;# 
 18644   003A7A                     RD0I2C          equ	14970	;# 
 18645   003A7B                     RD1I2C          equ	14971	;# 
 18646   003A80                     ANSELE          equ	14976	;# 
 18647   003A81                     WPUE            equ	14977	;# 
 18648   003A82                     ODCONE          equ	14978	;# 
 18649   003A83                     SLRCONE         equ	14979	;# 
 18650   003A84                     INLVLE          equ	14980	;# 
 18651   003A85                     IOCEP           equ	14981	;# 
 18652   003A86                     IOCEN           equ	14982	;# 
 18653   003A87                     IOCEF           equ	14983	;# 
 18654   003A90                     ANSELF          equ	14992	;# 
 18655   003A91                     WPUF            equ	14993	;# 
 18656   003A92                     ODCONF          equ	14994	;# 
 18657   003A93                     SLRCONF         equ	14995	;# 
 18658   003A94                     INLVLF          equ	14996	;# 
 18659   003ABF                     PPSLOCK         equ	15039	;# 
 18660   003AC0                     INT0PPS         equ	15040	;# 
 18661   003AC1                     INT1PPS         equ	15041	;# 
 18662   003AC2                     INT2PPS         equ	15042	;# 
 18663   003AC3                     T0CKIPPS        equ	15043	;# 
 18664   003AC4                     T1CKIPPS        equ	15044	;# 
 18665   003AC5                     T1GPPS          equ	15045	;# 
 18666   003AC6                     T3CKIPPS        equ	15046	;# 
 18667   003AC7                     T3GPPS          equ	15047	;# 
 18668   003AC8                     T5CKIPPS        equ	15048	;# 
 18669   003AC9                     T5GPPS          equ	15049	;# 
 18670   003ACA                     T2INPPS         equ	15050	;# 
 18671   003ACB                     T4INPPS         equ	15051	;# 
 18672   003ACC                     T6INPPS         equ	15052	;# 
 18673   003ACD                     CCP1PPS         equ	15053	;# 
 18674   003ACE                     CCP2PPS         equ	15054	;# 
 18675   003ACF                     CCP3PPS         equ	15055	;# 
 18676   003AD0                     CCP4PPS         equ	15056	;# 
 18677   003AD1                     SMT1WINPPS      equ	15057	;# 
 18678   003AD2                     SMT1SIGPPS      equ	15058	;# 
 18679   003AD3                     CWG1INPPS       equ	15059	;# 
 18680   003AD4                     CWG2INPPS       equ	15060	;# 
 18681   003AD5                     CWG3INPPS       equ	15061	;# 
 18682   003AD6                     MD1CARLPPS      equ	15062	;# 
 18683   003AD7                     MD1CARHPPS      equ	15063	;# 
 18684   003AD8                     MD1SRCPPS       equ	15064	;# 
 18685   003AD9                     CLCIN0PPS       equ	15065	;# 
 18686   003ADA                     CLCIN1PPS       equ	15066	;# 
 18687   003ADB                     CLCIN2PPS       equ	15067	;# 
 18688   003ADC                     CLCIN3PPS       equ	15068	;# 
 18689   003ADD                     ADACTPPS        equ	15069	;# 
 18690   003ADE                     SPI1SCKPPS      equ	15070	;# 
 18691   003ADF                     SPI1SDIPPS      equ	15071	;# 
 18692   003AE0                     SPI1SSPPS       equ	15072	;# 
 18693   003AE1                     I2C1SCLPPS      equ	15073	;# 
 18694   003AE2                     I2C1SDAPPS      equ	15074	;# 
 18695   003AE3                     I2C2SCLPPS      equ	15075	;# 
 18696   003AE4                     I2C2SDAPPS      equ	15076	;# 
 18697   003AE5                     U1RXPPS         equ	15077	;# 
 18698   003AE6                     U1CTSPPS        equ	15078	;# 
 18699   003AE8                     U2RXPPS         equ	15080	;# 
 18700   003AE9                     U2CTSPPS        equ	15081	;# 
 18701   003BC9                     DMA2BUF         equ	15305	;# 
 18702   003BCA                     DMA2DCNT        equ	15306	;# 
 18703   003BCA                     DMA2DCNTL       equ	15306	;# 
 18704   003BCB                     DMA2DCNTH       equ	15307	;# 
 18705   003BCC                     DMA2DPTR        equ	15308	;# 
 18706   003BCC                     DMA2DPTRL       equ	15308	;# 
 18707   003BCD                     DMA2DPTRH       equ	15309	;# 
 18708   003BCE                     DMA2DSZ         equ	15310	;# 
 18709   003BCE                     DMA2DSZL        equ	15310	;# 
 18710   003BCF                     DMA2DSZH        equ	15311	;# 
 18711   003BD0                     DMA2DSA         equ	15312	;# 
 18712   003BD0                     DMA2DSAL        equ	15312	;# 
 18713   003BD1                     DMA2DSAH        equ	15313	;# 
 18714   003BD2                     DMA2SCNT        equ	15314	;# 
 18715   003BD2                     DMA2SCNTL       equ	15314	;# 
 18716   003BD3                     DMA2SCNTH       equ	15315	;# 
 18717   003BD4                     DMA2SPTR        equ	15316	;# 
 18718   003BD4                     DMA2SPTRL       equ	15316	;# 
 18719   003BD5                     DMA2SPTRH       equ	15317	;# 
 18720   003BD6                     DMA2SPTRU       equ	15318	;# 
 18721   003BD7                     DMA2SSZ         equ	15319	;# 
 18722   003BD7                     DMA2SSZL        equ	15319	;# 
 18723   003BD8                     DMA2SSZH        equ	15320	;# 
 18724   003BD9                     DMA2SSA         equ	15321	;# 
 18725   003BD9                     DMA2SSAL        equ	15321	;# 
 18726   003BDA                     DMA2SSAH        equ	15322	;# 
 18727   003BDB                     DMA2SSAU        equ	15323	;# 
 18728   003BDC                     DMA2CON0        equ	15324	;# 
 18729   003BDD                     DMA2CON1        equ	15325	;# 
 18730   003BDE                     DMA2AIRQ        equ	15326	;# 
 18731   003BDF                     DMA2SIRQ        equ	15327	;# 
 18732   003BE9                     DMA1BUF         equ	15337	;# 
 18733   003BEA                     DMA1DCNT        equ	15338	;# 
 18734   003BEA                     DMA1DCNTL       equ	15338	;# 
 18735   003BEB                     DMA1DCNTH       equ	15339	;# 
 18736   003BEC                     DMA1DPTR        equ	15340	;# 
 18737   003BEC                     DMA1DPTRL       equ	15340	;# 
 18738   003BED                     DMA1DPTRH       equ	15341	;# 
 18739   003BEE                     DMA1DSZ         equ	15342	;# 
 18740   003BEE                     DMA1DSZL        equ	15342	;# 
 18741   003BEF                     DMA1DSZH        equ	15343	;# 
 18742   003BF0                     DMA1DSA         equ	15344	;# 
 18743   003BF0                     DMA1DSAL        equ	15344	;# 
 18744   003BF1                     DMA1DSAH        equ	15345	;# 
 18745   003BF2                     DMA1SCNT        equ	15346	;# 
 18746   003BF2                     DMA1SCNTL       equ	15346	;# 
 18747   003BF3                     DMA1SCNTH       equ	15347	;# 
 18748   003BF4                     DMA1SPTR        equ	15348	;# 
 18749   003BF4                     DMA1SPTRL       equ	15348	;# 
 18750   003BF5                     DMA1SPTRH       equ	15349	;# 
 18751   003BF6                     DMA1SPTRU       equ	15350	;# 
 18752   003BF7                     DMA1SSZ         equ	15351	;# 
 18753   003BF7                     DMA1SSZL        equ	15351	;# 
 18754   003BF8                     DMA1SSZH        equ	15352	;# 
 18755   003BF9                     DMA1SSA         equ	15353	;# 
 18756   003BF9                     DMA1SSAL        equ	15353	;# 
 18757   003BFA                     DMA1SSAH        equ	15354	;# 
 18758   003BFB                     DMA1SSAU        equ	15355	;# 
 18759   003BFC                     DMA1CON0        equ	15356	;# 
 18760   003BFD                     DMA1CON1        equ	15357	;# 
 18761   003BFE                     DMA1AIRQ        equ	15358	;# 
 18762   003BFF                     DMA1SIRQ        equ	15359	;# 
 18763   003C56                     CLC4CON         equ	15446	;# 
 18764   003C57                     CLC4POL         equ	15447	;# 
 18765   003C58                     CLC4SEL0        equ	15448	;# 
 18766   003C59                     CLC4SEL1        equ	15449	;# 
 18767   003C5A                     CLC4SEL2        equ	15450	;# 
 18768   003C5B                     CLC4SEL3        equ	15451	;# 
 18769   003C5C                     CLC4GLS0        equ	15452	;# 
 18770   003C5D                     CLC4GLS1        equ	15453	;# 
 18771   003C5E                     CLC4GLS2        equ	15454	;# 
 18772   003C5F                     CLC4GLS3        equ	15455	;# 
 18773   003C60                     CLC3CON         equ	15456	;# 
 18774   003C61                     CLC3POL         equ	15457	;# 
 18775   003C62                     CLC3SEL0        equ	15458	;# 
 18776   003C63                     CLC3SEL1        equ	15459	;# 
 18777   003C64                     CLC3SEL2        equ	15460	;# 
 18778   003C65                     CLC3SEL3        equ	15461	;# 
 18779   003C66                     CLC3GLS0        equ	15462	;# 
 18780   003C67                     CLC3GLS1        equ	15463	;# 
 18781   003C68                     CLC3GLS2        equ	15464	;# 
 18782   003C69                     CLC3GLS3        equ	15465	;# 
 18783   003C6A                     CLC2CON         equ	15466	;# 
 18784   003C6B                     CLC2POL         equ	15467	;# 
 18785   003C6C                     CLC2SEL0        equ	15468	;# 
 18786   003C6D                     CLC2SEL1        equ	15469	;# 
 18787   003C6E                     CLC2SEL2        equ	15470	;# 
 18788   003C6F                     CLC2SEL3        equ	15471	;# 
 18789   003C70                     CLC2GLS0        equ	15472	;# 
 18790   003C71                     CLC2GLS1        equ	15473	;# 
 18791   003C72                     CLC2GLS2        equ	15474	;# 
 18792   003C73                     CLC2GLS3        equ	15475	;# 
 18793   003C74                     CLC1CON         equ	15476	;# 
 18794   003C75                     CLC1POL         equ	15477	;# 
 18795   003C76                     CLC1SEL0        equ	15478	;# 
 18796   003C77                     CLC1SEL1        equ	15479	;# 
 18797   003C78                     CLC1SEL2        equ	15480	;# 
 18798   003C79                     CLC1SEL3        equ	15481	;# 
 18799   003C7A                     CLC1GLS0        equ	15482	;# 
 18800   003C7B                     CLC1GLS1        equ	15483	;# 
 18801   003C7C                     CLC1GLS2        equ	15484	;# 
 18802   003C7D                     CLC1GLS3        equ	15485	;# 
 18803   003C7E                     CLCDATA0        equ	15486	;# 
 18804   003CE5                     CLKRCON         equ	15589	;# 
 18805   003CE6                     CLKRCLK         equ	15590	;# 
 18806   003CFA                     MD1CON0         equ	15610	;# 
 18807   003CFB                     MD1CON1         equ	15611	;# 
 18808   003CFC                     MD1SRC          equ	15612	;# 
 18809   003CFD                     MD1CARL         equ	15613	;# 
 18810   003CFE                     MD1CARH         equ	15614	;# 
 18811   003D10                     SPI1RXB         equ	15632	;# 
 18812   003D11                     SPI1TXB         equ	15633	;# 
 18813   003D12                     SPI1TCNT        equ	15634	;# 
 18814   003D12                     SPI1TCNTL       equ	15634	;# 
 18815   003D13                     SPI1TCNTH       equ	15635	;# 
 18816   003D14                     SPI1CON0        equ	15636	;# 
 18817   003D15                     SPI1CON1        equ	15637	;# 
 18818   003D16                     SPI1CON2        equ	15638	;# 
 18819   003D17                     SPI1STATUS      equ	15639	;# 
 18820   003D18                     SPI1TWIDTH      equ	15640	;# 
 18821   003D19                     SPI1BAUD        equ	15641	;# 
 18822   003D1A                     SPI1INTF        equ	15642	;# 
 18823   003D1B                     SPI1INTE        equ	15643	;# 
 18824   003D1C                     SPI1CLK         equ	15644	;# 
 18825   003D54                     I2C2RXB         equ	15700	;# 
 18826   003D55                     I2C2TXB         equ	15701	;# 
 18827   003D56                     I2C2CNT         equ	15702	;# 
 18828   003D57                     I2C2ADB0        equ	15703	;# 
 18829   003D58                     I2C2ADB1        equ	15704	;# 
 18830   003D59                     I2C2ADR0        equ	15705	;# 
 18831   003D5A                     I2C2ADR1        equ	15706	;# 
 18832   003D5B                     I2C2ADR2        equ	15707	;# 
 18833   003D5C                     I2C2ADR3        equ	15708	;# 
 18834   003D5D                     I2C2CON0        equ	15709	;# 
 18835   003D5E                     I2C2CON1        equ	15710	;# 
 18836   003D5F                     I2C2CON2        equ	15711	;# 
 18837   003D60                     I2C2ERR         equ	15712	;# 
 18838   003D61                     I2C2STAT0       equ	15713	;# 
 18839   003D62                     I2C2STAT1       equ	15714	;# 
 18840   003D63                     I2C2PIR         equ	15715	;# 
 18841   003D64                     I2C2PIE         equ	15716	;# 
 18842   003D65                     I2C2CLK         equ	15717	;# 
 18843   003D66                     I2C2BTO         equ	15718	;# 
 18844   003D6A                     I2C1RXB         equ	15722	;# 
 18845   003D6B                     I2C1TXB         equ	15723	;# 
 18846   003D6C                     I2C1CNT         equ	15724	;# 
 18847   003D6D                     I2C1ADB0        equ	15725	;# 
 18848   003D6E                     I2C1ADB1        equ	15726	;# 
 18849   003D6F                     I2C1ADR0        equ	15727	;# 
 18850   003D70                     I2C1ADR1        equ	15728	;# 
 18851   003D71                     I2C1ADR2        equ	15729	;# 
 18852   003D72                     I2C1ADR3        equ	15730	;# 
 18853   003D73                     I2C1CON0        equ	15731	;# 
 18854   003D74                     I2C1CON1        equ	15732	;# 
 18855   003D75                     I2C1CON2        equ	15733	;# 
 18856   003D76                     I2C1ERR         equ	15734	;# 
 18857   003D77                     I2C1STAT0       equ	15735	;# 
 18858   003D78                     I2C1STAT1       equ	15736	;# 
 18859   003D79                     I2C1PIR         equ	15737	;# 
 18860   003D7A                     I2C1PIE         equ	15738	;# 
 18861   003D7B                     I2C1CLK         equ	15739	;# 
 18862   003D7C                     I2C1BTO         equ	15740	;# 
 18863   003DD0                     U2RXB           equ	15824	;# 
 18864   003DD0                     U2RXBL          equ	15824	;# 
 18865   003DD2                     U2TXB           equ	15826	;# 
 18866   003DD2                     U2TXBL          equ	15826	;# 
 18867   003DD4                     U2P1            equ	15828	;# 
 18868   003DD4                     U2P1L           equ	15828	;# 
 18869   003DD6                     U2P2            equ	15830	;# 
 18870   003DD6                     U2P2L           equ	15830	;# 
 18871   003DD8                     U2P3            equ	15832	;# 
 18872   003DD8                     U2P3L           equ	15832	;# 
 18873   003DDA                     U2CON0          equ	15834	;# 
 18874   003DDB                     U2CON1          equ	15835	;# 
 18875   003DDC                     U2CON2          equ	15836	;# 
 18876   003DDD                     U2BRG           equ	15837	;# 
 18877   003DDD                     U2BRGL          equ	15837	;# 
 18878   003DDE                     U2BRGH          equ	15838	;# 
 18879   003DDF                     U2FIFO          equ	15839	;# 
 18880   003DE0                     U2UIR           equ	15840	;# 
 18881   003DE1                     U2ERRIR         equ	15841	;# 
 18882   003DE2                     U2ERRIE         equ	15842	;# 
 18883   003DE8                     U1RXB           equ	15848	;# 
 18884   003DE8                     U1RXBL          equ	15848	;# 
 18885   003DE9                     U1RXCHK         equ	15849	;# 
 18886   003DEA                     U1TXB           equ	15850	;# 
 18887   003DEA                     U1TXBL          equ	15850	;# 
 18888   003DEB                     U1TXCHK         equ	15851	;# 
 18889   003DEC                     U1P1            equ	15852	;# 
 18890   003DEC                     U1P1L           equ	15852	;# 
 18891   003DED                     U1P1H           equ	15853	;# 
 18892   003DEE                     U1P2            equ	15854	;# 
 18893   003DEE                     U1P2L           equ	15854	;# 
 18894   003DEF                     U1P2H           equ	15855	;# 
 18895   003DF0                     U1P3            equ	15856	;# 
 18896   003DF0                     U1P3L           equ	15856	;# 
 18897   003DF1                     U1P3H           equ	15857	;# 
 18898   003DF2                     U1CON0          equ	15858	;# 
 18899   003DF3                     U1CON1          equ	15859	;# 
 18900   003DF4                     U1CON2          equ	15860	;# 
 18901   003DF5                     U1BRG           equ	15861	;# 
 18902   003DF5                     U1BRGL          equ	15861	;# 
 18903   003DF6                     U1BRGH          equ	15862	;# 
 18904   003DF7                     U1FIFO          equ	15863	;# 
 18905   003DF8                     U1UIR           equ	15864	;# 
 18906   003DF9                     U1ERRIR         equ	15865	;# 
 18907   003DFA                     U1ERRIE         equ	15866	;# 
 18908   003E9C                     DAC1CON1        equ	16028	;# 
 18909   003E9E                     DAC1CON0        equ	16030	;# 
 18910   003EB8                     CM2CON0         equ	16056	;# 
 18911   003EB9                     CM2CON1         equ	16057	;# 
 18912   003EBA                     CM2NCH          equ	16058	;# 
 18913   003EBB                     CM2PCH          equ	16059	;# 
 18914   003EBC                     CM1CON0         equ	16060	;# 
 18915   003EBD                     CM1CON1         equ	16061	;# 
 18916   003EBE                     CM1NCH          equ	16062	;# 
 18917   003EBF                     CM1PCH          equ	16063	;# 
 18918   003EC0                     CMOUT           equ	16064	;# 
 18919   003EC1                     FVRCON          equ	16065	;# 
 18920   003EC3                     ZCDCON          equ	16067	;# 
 18921   003EC9                     HLVDCON0        equ	16073	;# 
 18922   003ECA                     HLVDCON1        equ	16074	;# 
 18923   003ED7                     ADCP            equ	16087	;# 
 18924   003EDE                     ADLTH           equ	16094	;# 
 18925   003EDE                     ADLTHL          equ	16094	;# 
 18926   003EDF                     ADLTHH          equ	16095	;# 
 18927   003EE0                     ADUTH           equ	16096	;# 
 18928   003EE0                     ADUTHL          equ	16096	;# 
 18929   003EE1                     ADUTHH          equ	16097	;# 
 18930   003EE2                     ADERR           equ	16098	;# 
 18931   003EE2                     ADERRL          equ	16098	;# 
 18932   003EE3                     ADERRH          equ	16099	;# 
 18933   003EE4                     ADSTPT          equ	16100	;# 
 18934   003EE4                     ADSTPTL         equ	16100	;# 
 18935   003EE5                     ADSTPTH         equ	16101	;# 
 18936   003EE6                     ADFLTR          equ	16102	;# 
 18937   003EE6                     ADFLTRL         equ	16102	;# 
 18938   003EE7                     ADFLTRH         equ	16103	;# 
 18939   003EE8                     ADACC           equ	16104	;# 
 18940   003EE8                     ADACCL          equ	16104	;# 
 18941   003EE9                     ADACCH          equ	16105	;# 
 18942   003EEA                     ADACCU          equ	16106	;# 
 18943   003EEB                     ADCNT           equ	16107	;# 
 18944   003EEC                     ADRPT           equ	16108	;# 
 18945   003EED                     ADPREV          equ	16109	;# 
 18946   003EED                     ADPREVL         equ	16109	;# 
 18947   003EEE                     ADPREVH         equ	16110	;# 
 18948   003EEF                     ADRES           equ	16111	;# 
 18949   003EEF                     ADRESL          equ	16111	;# 
 18950   003EF0                     ADRESH          equ	16112	;# 
 18951   003EF1                     ADPCH           equ	16113	;# 
 18952   003EF3                     ADACQ           equ	16115	;# 
 18953   003EF3                     ADACQL          equ	16115	;# 
 18954   003EF4                     ADACQH          equ	16116	;# 
 18955   003EF5                     ADCAP           equ	16117	;# 
 18956   003EF6                     ADPRE           equ	16118	;# 
 18957   003EF6                     ADPREL          equ	16118	;# 
 18958   003EF7                     ADPREH          equ	16119	;# 
 18959   003EF8                     ADCON0          equ	16120	;# 
 18960   003EF9                     ADCON1          equ	16121	;# 
 18961   003EFA                     ADCON2          equ	16122	;# 
 18962   003EFB                     ADCON3          equ	16123	;# 
 18963   003EFC                     ADSTAT          equ	16124	;# 
 18964   003EFD                     ADREF           equ	16125	;# 
 18965   003EFE                     ADACT           equ	16126	;# 
 18966   003EFF                     ADCLK           equ	16127	;# 
 18967   003F12                     SMT1TMR         equ	16146	;# 
 18968   003F12                     SMT1TMRL        equ	16146	;# 
 18969   003F13                     SMT1TMRH        equ	16147	;# 
 18970   003F14                     SMT1TMRU        equ	16148	;# 
 18971   003F15                     SMT1CPR         equ	16149	;# 
 18972   003F15                     SMT1CPRL        equ	16149	;# 
 18973   003F16                     SMT1CPRH        equ	16150	;# 
 18974   003F17                     SMT1CPRU        equ	16151	;# 
 18975   003F18                     SMT1CPW         equ	16152	;# 
 18976   003F18                     SMT1CPWL        equ	16152	;# 
 18977   003F19                     SMT1CPWH        equ	16153	;# 
 18978   003F1A                     SMT1CPWU        equ	16154	;# 
 18979   003F1B                     SMT1PR          equ	16155	;# 
 18980   003F1B                     SMT1PRL         equ	16155	;# 
 18981   003F1C                     SMT1PRH         equ	16156	;# 
 18982   003F1D                     SMT1PRU         equ	16157	;# 
 18983   003F1E                     SMT1CON0        equ	16158	;# 
 18984   003F1F                     SMT1CON1        equ	16159	;# 
 18985   003F20                     SMT1STAT        equ	16160	;# 
 18986   003F21                     SMT1CLK         equ	16161	;# 
 18987   003F22                     SMT1SIG         equ	16162	;# 
 18988   003F23                     SMT1WIN         equ	16163	;# 
 18989   003F38                     NCO1ACC         equ	16184	;# 
 18990   003F38                     NCO1ACCL        equ	16184	;# 
 18991   003F39                     NCO1ACCH        equ	16185	;# 
 18992   003F3A                     NCO1ACCU        equ	16186	;# 
 18993   003F3B                     NCO1INC         equ	16187	;# 
 18994   003F3B                     NCO1INCL        equ	16187	;# 
 18995   003F3C                     NCO1INCH        equ	16188	;# 
 18996   003F3D                     NCO1INCU        equ	16189	;# 
 18997   003F3E                     NCO1CON         equ	16190	;# 
 18998   003F3F                     NCO1CLK         equ	16191	;# 
 18999   003F40                     CWG3CLK         equ	16192	;# 
 19000   003F40                     CWG3CLKCON      equ	16192	;# 
 19001   003F41                     CWG3ISM         equ	16193	;# 
 19002   003F41                     CWG3DAT         equ	16193	;# 
 19003   003F42                     CWG3DBR         equ	16194	;# 
 19004   003F43                     CWG3DBF         equ	16195	;# 
 19005   003F44                     CWG3CON0        equ	16196	;# 
 19006   003F45                     CWG3CON1        equ	16197	;# 
 19007   003F46                     CWG3AS0         equ	16198	;# 
 19008   003F47                     CWG3AS1         equ	16199	;# 
 19009   003F48                     CWG3STR         equ	16200	;# 
 19010   003F49                     CWG2CLK         equ	16201	;# 
 19011   003F49                     CWG2CLKCON      equ	16201	;# 
 19012   003F4A                     CWG2ISM         equ	16202	;# 
 19013   003F4A                     CWG2DAT         equ	16202	;# 
 19014   003F4B                     CWG2DBR         equ	16203	;# 
 19015   003F4C                     CWG2DBF         equ	16204	;# 
 19016   003F4D                     CWG2CON0        equ	16205	;# 
 19017   003F4E                     CWG2CON1        equ	16206	;# 
 19018   003F4F                     CWG2AS0         equ	16207	;# 
 19019   003F50                     CWG2AS1         equ	16208	;# 
 19020   003F51                     CWG2STR         equ	16209	;# 
 19021   003F52                     CWG1CLK         equ	16210	;# 
 19022   003F52                     CWG1CLKCON      equ	16210	;# 
 19023   003F53                     CWG1ISM         equ	16211	;# 
 19024   003F53                     CWG1DAT         equ	16211	;# 
 19025   003F54                     CWG1DBR         equ	16212	;# 
 19026   003F55                     CWG1DBF         equ	16213	;# 
 19027   003F56                     CWG1CON0        equ	16214	;# 
 19028   003F57                     CWG1CON1        equ	16215	;# 
 19029   003F58                     CWG1AS0         equ	16216	;# 
 19030   003F59                     CWG1AS1         equ	16217	;# 
 19031   003F5A                     CWG1STR         equ	16218	;# 
 19032   003F5E                     CCPTMRS0        equ	16222	;# 
 19033   003F5F                     CCPTMRS1        equ	16223	;# 
 19034   003F60                     PWM8DC          equ	16224	;# 
 19035   003F60                     PWM8DCL         equ	16224	;# 
 19036   003F61                     PWM8DCH         equ	16225	;# 
 19037   003F62                     PWM8CON         equ	16226	;# 
 19038   003F64                     PWM7DC          equ	16228	;# 
 19039   003F64                     PWM7DCL         equ	16228	;# 
 19040   003F65                     PWM7DCH         equ	16229	;# 
 19041   003F66                     PWM7CON         equ	16230	;# 
 19042   003F68                     PWM6DC          equ	16232	;# 
 19043   003F68                     PWM6DCL         equ	16232	;# 
 19044   003F69                     PWM6DCH         equ	16233	;# 
 19045   003F6A                     PWM6CON         equ	16234	;# 
 19046   003F6C                     PWM5DC          equ	16236	;# 
 19047   003F6C                     PWM5DCL         equ	16236	;# 
 19048   003F6D                     PWM5DCH         equ	16237	;# 
 19049   003F6E                     PWM5CON         equ	16238	;# 
 19050   003F70                     CCPR4           equ	16240	;# 
 19051   003F70                     CCPR4L          equ	16240	;# 
 19052   003F71                     CCPR4H          equ	16241	;# 
 19053   003F72                     CCP4CON         equ	16242	;# 
 19054   003F73                     CCP4CAP         equ	16243	;# 
 19055   003F74                     CCPR3           equ	16244	;# 
 19056   003F74                     CCPR3L          equ	16244	;# 
 19057   003F75                     CCPR3H          equ	16245	;# 
 19058   003F76                     CCP3CON         equ	16246	;# 
 19059   003F77                     CCP3CAP         equ	16247	;# 
 19060   003F78                     CCPR2           equ	16248	;# 
 19061   003F78                     CCPR2L          equ	16248	;# 
 19062   003F79                     CCPR2H          equ	16249	;# 
 19063   003F7A                     CCP2CON         equ	16250	;# 
 19064   003F7B                     CCP2CAP         equ	16251	;# 
 19065   003F7C                     CCPR1           equ	16252	;# 
 19066   003F7C                     CCPR1L          equ	16252	;# 
 19067   003F7D                     CCPR1H          equ	16253	;# 
 19068   003F7E                     CCP1CON         equ	16254	;# 
 19069   003F7F                     CCP1CAP         equ	16255	;# 
 19070   003F92                     T6TMR           equ	16274	;# 
 19071   003F92                     TMR6            equ	16274	;# 
 19072   003F93                     T6PR            equ	16275	;# 
 19073   003F93                     PR6             equ	16275	;# 
 19074   003F94                     T6CON           equ	16276	;# 
 19075   003F95                     T6HLT           equ	16277	;# 
 19076   003F96                     T6CLKCON        equ	16278	;# 
 19077   003F96                     T6CLK           equ	16278	;# 
 19078   003F97                     T6RST           equ	16279	;# 
 19079   003F98                     TMR5            equ	16280	;# 
 19080   003F98                     TMR5L           equ	16280	;# 
 19081   003F99                     TMR5H           equ	16281	;# 
 19082   003F9A                     T5CON           equ	16282	;# 
 19083   003F9A                     TMR5CON         equ	16282	;# 
 19084   003F9B                     T5GCON          equ	16283	;# 
 19085   003F9B                     TMR5GCON        equ	16283	;# 
 19086   003F9C                     T5GATE          equ	16284	;# 
 19087   003F9C                     TMR5GATE        equ	16284	;# 
 19088   003F9D                     T5CLK           equ	16285	;# 
 19089   003F9D                     TMR5CLK         equ	16285	;# 
 19090   003F9D                     PR5             equ	16285	;# 
 19091   003F9E                     T4TMR           equ	16286	;# 
 19092   003F9E                     TMR4            equ	16286	;# 
 19093   003F9F                     T4PR            equ	16287	;# 
 19094   003F9F                     PR4             equ	16287	;# 
 19095   003FA0                     T4CON           equ	16288	;# 
 19096   003FA1                     T4HLT           equ	16289	;# 
 19097   003FA2                     T4CLKCON        equ	16290	;# 
 19098   003FA2                     T4CLK           equ	16290	;# 
 19099   003FA3                     T4RST           equ	16291	;# 
 19100   003FA4                     TMR3            equ	16292	;# 
 19101   003FA4                     TMR3L           equ	16292	;# 
 19102   003FA5                     TMR3H           equ	16293	;# 
 19103   003FA6                     T3CON           equ	16294	;# 
 19104   003FA6                     TMR3CON         equ	16294	;# 
 19105   003FA7                     T3GCON          equ	16295	;# 
 19106   003FA7                     TMR3GCON        equ	16295	;# 
 19107   003FA8                     T3GATE          equ	16296	;# 
 19108   003FA8                     TMR3GATE        equ	16296	;# 
 19109   003FA9                     T3CLK           equ	16297	;# 
 19110   003FA9                     TMR3CLK         equ	16297	;# 
 19111   003FA9                     PR3             equ	16297	;# 
 19112   003FAA                     T2TMR           equ	16298	;# 
 19113   003FAA                     TMR2            equ	16298	;# 
 19114   003FAB                     T2PR            equ	16299	;# 
 19115   003FAB                     PR2             equ	16299	;# 
 19116   003FAC                     T2CON           equ	16300	;# 
 19117   003FAD                     T2HLT           equ	16301	;# 
 19118   003FAE                     T2CLKCON        equ	16302	;# 
 19119   003FAE                     T2CLK           equ	16302	;# 
 19120   003FAF                     T2RST           equ	16303	;# 
 19121   003FB0                     TMR1            equ	16304	;# 
 19122   003FB0                     TMR1L           equ	16304	;# 
 19123   003FB1                     TMR1H           equ	16305	;# 
 19124   003FB2                     T1CON           equ	16306	;# 
 19125   003FB2                     TMR1CON         equ	16306	;# 
 19126   003FB3                     T1GCON          equ	16307	;# 
 19127   003FB3                     TMR1GCON        equ	16307	;# 
 19128   003FB4                     T1GATE          equ	16308	;# 
 19129   003FB4                     TMR1GATE        equ	16308	;# 
 19130   003FB5                     T1CLK           equ	16309	;# 
 19131   003FB5                     TMR1CLK         equ	16309	;# 
 19132   003FB5                     PR1             equ	16309	;# 
 19133   003FB6                     TMR0L           equ	16310	;# 
 19134   003FB6                     TMR0            equ	16310	;# 
 19135   003FB7                     TMR0H           equ	16311	;# 
 19136   003FB7                     PR0             equ	16311	;# 
 19137   003FB8                     T0CON0          equ	16312	;# 
 19138   003FB9                     T0CON1          equ	16313	;# 
 19139   003FBA                     LATA            equ	16314	;# 
 19140   003FBB                     LATB            equ	16315	;# 
 19141   003FBC                     LATC            equ	16316	;# 
 19142   003FBD                     LATD            equ	16317	;# 
 19143   003FBE                     LATE            equ	16318	;# 
 19144   003FBF                     LATF            equ	16319	;# 
 19145   003FC2                     TRISA           equ	16322	;# 
 19146   003FC3                     TRISB           equ	16323	;# 
 19147   003FC4                     TRISC           equ	16324	;# 
 19148   003FC5                     TRISD           equ	16325	;# 
 19149   003FC6                     TRISE           equ	16326	;# 
 19150   003FC7                     TRISF           equ	16327	;# 
 19151   003FCA                     PORTA           equ	16330	;# 
 19152   003FCB                     PORTB           equ	16331	;# 
 19153   003FCC                     PORTC           equ	16332	;# 
 19154   003FCD                     PORTD           equ	16333	;# 
 19155   003FCE                     PORTE           equ	16334	;# 
 19156   003FCF                     PORTF           equ	16335	;# 
 19157   003FD2                     INTCON0         equ	16338	;# 
 19158   003FD3                     INTCON1         equ	16339	;# 
 19159   003FD4                     IVTLOCK         equ	16340	;# 
 19160   003FD5                     IVTBASE         equ	16341	;# 
 19161   003FD5                     IVTBASEL        equ	16341	;# 
 19162   003FD6                     IVTBASEH        equ	16342	;# 
 19163   003FD7                     IVTBASEU        equ	16343	;# 
 19164   003FD8                     STATUS          equ	16344	;# 
 19165   003FD9                     FSR2            equ	16345	;# 
 19166   003FD9                     FSR2L           equ	16345	;# 
 19167   003FDA                     FSR2H           equ	16346	;# 
 19168   003FDB                     PLUSW2          equ	16347	;# 
 19169   003FDC                     PREINC2         equ	16348	;# 
 19170   003FDD                     POSTDEC2        equ	16349	;# 
 19171   003FDE                     POSTINC2        equ	16350	;# 
 19172   003FDF                     INDF2           equ	16351	;# 
 19173   003FE0                     BSR             equ	16352	;# 
 19174   003FE1                     FSR1            equ	16353	;# 
 19175   003FE1                     FSR1L           equ	16353	;# 
 19176   003FE2                     FSR1H           equ	16354	;# 
 19177   003FE3                     PLUSW1          equ	16355	;# 
 19178   003FE4                     PREINC1         equ	16356	;# 
 19179   003FE5                     POSTDEC1        equ	16357	;# 
 19180   003FE6                     POSTINC1        equ	16358	;# 
 19181   003FE7                     INDF1           equ	16359	;# 
 19182   003FE8                     WREG            equ	16360	;# 
 19183   003FE9                     FSR0            equ	16361	;# 
 19184   003FE9                     FSR0L           equ	16361	;# 
 19185   003FEA                     FSR0H           equ	16362	;# 
 19186   003FEB                     PLUSW0          equ	16363	;# 
 19187   003FEC                     PREINC0         equ	16364	;# 
 19188   003FED                     POSTDEC0        equ	16365	;# 
 19189   003FEE                     POSTINC0        equ	16366	;# 
 19190   003FEF                     INDF0           equ	16367	;# 
 19191   003FF0                     PCON0           equ	16368	;# 
 19192   003FF1                     PCON1           equ	16369	;# 
 19193   003FF3                     PROD            equ	16371	;# 
 19194   003FF3                     PRODL           equ	16371	;# 
 19195   003FF4                     PRODH           equ	16372	;# 
 19196   003FF5                     TABLAT          equ	16373	;# 
 19197   003FF6                     TBLPTR          equ	16374	;# 
 19198   003FF6                     TBLPTRL         equ	16374	;# 
 19199   003FF7                     TBLPTRH         equ	16375	;# 
 19200   003FF8                     TBLPTRU         equ	16376	;# 
 19201   003FF9                     PCLAT           equ	16377	;# 
 19202   003FF9                     PCL             equ	16377	;# 
 19203   003FFA                     PCLATH          equ	16378	;# 
 19204   003FFB                     PCLATU          equ	16379	;# 
 19205   003FFC                     STKPTR          equ	16380	;# 
 19206   003FFD                     TOS             equ	16381	;# 
 19207   003FFD                     TOSL            equ	16381	;# 
 19208   003FFE                     TOSH            equ	16382	;# 
 19209   003FFF                     TOSU            equ	16383	;# 
 19210                           
 19211 ;;_s	offset	0
 19212 ;;_mode	offset	2
 19213 ;;_rxData	offset	0
 19214 ;;_t_link	offset=-2 (param)
 19215 ;;_k	offset	0
 19216 ;;_checksum	offset	2
 19217 ;;_i	offset	4
 19218 ;;_byte_block	offset=-2 (param)
 19219 ;;_length	offset=-3 (param)
 19220 ;;_fake	offset=-4 (param)
 19221 ;;_s_uart	offset=-5 (param)
 19222 ;;_i	offset	0
 19223 ;;_sum	offset	2
 19224 ;;_byte_block	offset=-2 (param)
 19225 ;;_byte_count	offset=-4 (param)
 19226 ;;_bufData	offset=-1 (param)
 19227 ;;_txData	offset=-1 (param)
 19228 ;;_bufData	offset=-1 (param)
 19229 ;;_ceid	offset	0
 19230 ;;_i	offset	4
 19231 ;;_stream	offset=-6 (param)
 19232 ;;_function	offset=-7 (param)
 19233 ;;_block	offset=-1 (param)
 19234 ;;_sid	offset=-2 (param)
 19235 ;;_s	offset=-2 (param)
 19236 ;;_rxData	offset	0
 19237 ;;_r_link	offset=-2 (param)
 19238 ;;_txData	offset=-1 (param)
 19239 ;;_rxData	offset	0
 19240 ;;_m_link	offset=-2 (param)
 19241 ;;_stream	offset=-1 (param)
 19242 ;;_function	offset=-2 (param)
 19243 ;;_t_format	offset=-1 (param)
 19244 ;;_sid	offset=-1 (param)
 19245 ;;_j	offset	0
 19246 ;;_k	offset	2
 19247 ;;_i	offset	4
 19248 ;;_z	offset	6
 19249 ;;_data	offset=-2 (param)
 19250 ;;_msg_data	offset	0
 19251 ;;_stream	offset=-1 (param)
 19252 ;;_function	offset=-2 (param)
 19253 ;;_dtime	offset=-4 (param)
 19254 ;;_i	offset	0
 19255 ;;_stream	offset=-1 (param)
 19256 ;;_function	offset=-2 (param)
 19257 ;;_dtime	offset=-4 (param)
 19258 ;;_msg_data	offset=-6 (param)
 19259 ;;_GIEBitValue	offset	0
 19260 ;;_bAdd	offset=-2 (param)
 19261 ;;_bData	offset=-3 (param)
 19262 ;;_byte_block	offset=-1 (param)
 19263 ;;_clear	offset=-2 (param)
 19264 ;;_readValue	offset	0
 19265 ;;_readValue	offset	0
 19266 ;;_cmd	offset=-1 (param)
 19267 ;;_cmd	offset=-1 (param)
 19268 ;;_data	offset=-1 (param)
 19269 ;;__this	offset=-2 (param)
 19270 ;;_cmd	offset=-1 (param)
 19271 ;;_flipper	offset=-1 (param)
 19272 ;;_numMilliseconds	offset=-2 (param)
 19273 ;;_vterm	offset=-1 (param)
 19274 ;;_new_response_info	offset=-1 (param)
 19275 ;;_new_response_info	offset=-1 (param)
 19276 ;;_level	offset=-2 (param)
 19277 ;;_dutyValue	offset=-2 (param)
 19278 ;;_timer	offset=-1 (param)
 19279 ;;_count	offset=-3 (param)
 19280 ;;_InterruptHandler	offset=-3 (param)
 19281 ;;_InterruptHandler	offset=-3 (param)
 19282 ;;_InterruptHandler	offset=-3 (param)
 19283 ;;_InterruptHandler	offset=-3 (param)
 19284 ;;_InterruptHandler	offset=-3 (param)
 19285 ;;_InterruptHandler	offset=-3 (param)
 19286 ;;_state	offset	0
 19287 ;;_InterruptHandler	offset=-3 (param)
 19288 ;;_InterruptHandler	offset=-3 (param)
 19289 ;;_InterruptHandler	offset=-3 (param)
 19290 ;;_InterruptHandler	offset=-3 (param)
 19291 ;;_r	offset=-1 (param)
 19292 ;;_c	offset=-2 (param)
 19293 ;;_strPtr	offset=-4 (param)
 19294 ;;_vterm	offset=-1 (param)
 19295 ;;_r	offset=-1 (param)
 19296 ;;_c	offset=-2 (param)
 19297 ;;_strPtr	offset=-4 (param)
 19298 ;;_strPtr	offset=-1 (param)
 19299 ;;_delay	offset=-4 (param)
 19300 ;;_strPtr	offset=-2 (param)
 19301 ;;__this	offset=-2 (param)
 19302 ;;_clearBuffer	offset=-3 (param)
 19303 ;;_p	offset	0
 19304 ;;_dest	offset=-2 (param)
 19305 ;;_c	offset=-4 (param)
 19306 ;;_n	offset=-6 (param)
 19307 ;;_ap	offset	0
 19308 ;;_fmt	offset=-3 (param)
 19309 ;;_f	offset	0
 19310 ;;_ap	offset	11
 19311 ;;_s	offset=-3 (param)
 19312 ;;_fmt	offset=-5 (param)
 19313 ;;_cfmt	offset	0
 19314 ;;_fp	offset=-2 (param)
 19315 ;;_fmt	offset=-4 (param)
 19316 ;;_ap	offset=-6 (param)
 19317 ;;_convarg	offset	0
 19318 ;;_cp	offset	4
 19319 ;;_c	offset	6
 19320 ;;_done	offset	7
 19321 ;;_fp	offset=-2 (param)
 19322 ;;_fmt	offset=-4 (param)
 19323 ;;_ap	offset=-6 (param)
 19324 ;;_xtoa$5786	offset	0
 19325 ;;_i	offset	2
 19326 ;;_w	offset	4
 19327 ;;_p	offset	6
 19328 ;;_c	offset	8
 19329 ;;_d_nonzero	offset	9
 19330 ;;_a	offset	10
 19331 ;;_fp	offset=-2 (param)
 19332 ;;_d	offset=-6 (param)
 19333 ;;_x	offset=-7 (param)
 19334 ;;_i	offset	0
 19335 ;;_w	offset	2
 19336 ;;_p	offset	4
 19337 ;;_fp	offset=-2 (param)
 19338 ;;_d	offset=-6 (param)
 19339 ;;_counter	offset	0
 19340 ;;_dividend	offset=-4 (param)
 19341 ;;_divisor	offset=-8 (param)
 19342 ;;_quotient	offset	0
 19343 ;;_counter	offset	4
 19344 ;;_dividend	offset=-4 (param)
 19345 ;;_divisor	offset=-8 (param)
 19346 ;;_l	offset	0
 19347 ;;_cp	offset	2
 19348 ;;_w	offset	4
 19349 ;;_p	offset	6
 19350 ;;_fp	offset=-2 (param)
 19351 ;;_s	offset=-4 (param)
 19352 ;;_c	offset	0
 19353 ;;_n	offset	1
 19354 ;;_fmt	offset=-2 (param)
 19355 ;;_ap	offset=-4 (param)
 19356 ;;_i	offset	0
 19357 ;;_w	offset	2
 19358 ;;_p	offset	4
 19359 ;;_t	offset	6
 19360 ;;_fp	offset=-2 (param)
 19361 ;;_d	offset=-6 (param)
 19362 ;;_dtoa$5753	offset	0
 19363 ;;_i	offset	2
 19364 ;;_w	offset	4
 19365 ;;_p	offset	6
 19366 ;;_s	offset	8
 19367 ;;_fp	offset=-2 (param)
 19368 ;;_d	offset=-6 (param)
 19369 ;;_i	offset	0
 19370 ;;_fp	offset=-2 (param)
 19371 ;;_buf	offset=-4 (param)
 19372 ;;_p	offset=-6 (param)
 19373 ;;_a	offset	0
 19374 ;;_s	offset=-2 (param)
 19375 ;;_i	offset	0
 19376 ;;_c	offset	2
 19377 ;;_s	offset=-2 (param)
 19378 ;;_fp	offset=-4 (param)
 19379 ;;_a	offset=-2 (param)
 19380 ;;_sign	offset	0
 19381 ;;_counter	offset	1
 19382 ;;_dividend	offset=-4 (param)
 19383 ;;_divisor	offset=-8 (param)
 19384 ;;_quotient	offset	0
 19385 ;;_sign	offset	4
 19386 ;;_counter	offset	5
 19387 ;;_dividend	offset=-4 (param)
 19388 ;;_divisor	offset=-8 (param)
 19389 ;;_w	offset	0
 19390 ;;_l	offset	2
 19391 ;;_fp	offset=-2 (param)
 19392 ;;_c	offset=-3 (param)
 19393 ;;_c	offset=-2 (param)
 19394 ;;_fp	offset=-4 (param)
 19395 ;;_c	offset=-1 (param)
 19396 ;;__this	offset=-2 (param)
 19397 ;;_c	offset=-3 (param)
 19398 ;;_line	offset=-1 (param)
 19399 ;;_vterm	offset=-2 (param)
 19400 ;;_timer	offset=-1 (param)
 19401 ;;_i	offset	0
 19402 ;;_timerVal	offset=-2 (param)
 19403                           
 19404                           	psect	idataCOMRAM
 19405   0182A6                     __pidataCOMRAM:
 19406                           	callstack 0
 19407                           
 19408                           ;initializer for secs_II_monitor_message@store6_11
 19409   0182A6  01                 	db	1
 19410                           
 19411                           ;initializer for secs_II_monitor_message@store1_13
 19412   0182A7  01                 	db	1
 19413                           
 19414                           ;initializer for secs_II_monitor_message@store1_1
 19415   0182A8  01                 	db	1
 19416                           
 19417                           ;initializer for r_protocol@d
 19418   0182A9  01                 	db	1
 19419                           
 19420                           ;initializer for r_protocol@retry
 19421   0182AA  03                 	db	3
 19422                           
 19423                           	psect	idataBIGRAM
 19424   01327A                     __pidataBIGRAM:
 19425                           	callstack 0
 19426                           
 19427                           ;initializer for _V
 19428   01327A  00                 	db	0
 19429   01327B  00                 	db	0
 19430   01327C  00                 	db	0
 19431   01327D  00                 	db	0
 19432   01327E  00                 	db	0
 19433   01327F  00                 	db	0
 19434   013280  00                 	db	0
 19435   013281  00                 	db	0
 19436   013282  00                 	db	0
 19437   013283  00                 	db	0
 19438   013284  00                 	db	0
 19439   013285  00                 	db	0
 19440   013286  00                 	db	0
 19441   013287  00                 	db	0
 19442   013288  00                 	db	0
 19443   013289  00                 	db	0
 19444   01328A  00                 	db	0
 19445   01328B  00                 	db	0
 19446   01328C  00                 	db	0
 19447   01328D  00                 	db	0
 19448   01328E  00                 	db	0
 19449   01328F  00                 	db	0
 19450   013290  00                 	db	0
 19451   013291  00                 	db	0
 19452   013292  00                 	db	0
 19453   013293  00                 	db	0
 19454   013294  00                 	db	0
 19455   013295  00                 	db	0
 19456   013296  00                 	db	0
 19457   013297  00                 	db	0
 19458   013298  00                 	db	0
 19459   013299  00                 	db	0
 19460   01329A  00                 	db	0
 19461   01329B  00                 	db	0
 19462   01329C  00                 	db	0
 19463   01329D  00                 	db	0
 19464   01329E  00                 	db	0
 19465   01329F  00                 	db	0
 19466   0132A0  00                 	db	0
 19467   0132A1  00                 	db	0
 19468   0132A2  00                 	db	0
 19469   0132A3  00                 	db	0
 19470   0132A4  00                 	db	0
 19471   0132A5  00                 	db	0
 19472   0132A6  00                 	db	0
 19473   0132A7  00                 	db	0
 19474   0132A8  00                 	db	0
 19475   0132A9  00                 	db	0
 19476   0132AA  00                 	db	0
 19477   0132AB  00                 	db	0
 19478   0132AC  00                 	db	0
 19479   0132AD  00                 	db	0
 19480   0132AE  00                 	db	0
 19481   0132AF  00                 	db	0
 19482   0132B0  00                 	db	0
 19483   0132B1  00                 	db	0
 19484   0132B2  00                 	db	0
 19485   0132B3  00                 	db	0
 19486   0132B4  00                 	db	0
 19487   0132B5  00                 	db	0
 19488   0132B6  00                 	db	0
 19489   0132B7  00                 	db	0
 19490   0132B8  00                 	db	0
 19491   0132B9  00                 	db	0
 19492   0132BA  00                 	db	0
 19493   0132BB  00                 	db	0
 19494   0132BC  00                 	db	0
 19495   0132BD  00                 	db	0
 19496   0132BE  00                 	db	0
 19497   0132BF  00                 	db	0
 19498   0132C0  00                 	db	0
 19499   0132C1  00                 	db	0
 19500   0132C2  00                 	db	0
 19501   0132C3  00                 	db	0
 19502   0132C4  00                 	db	0
 19503   0132C5  00                 	db	0
 19504   0132C6  00                 	db	0
 19505   0132C7  00                 	db	0
 19506   0132C8  00                 	db	0
 19507   0132C9  00                 	db	0
 19508   0132CA  00                 	db	0
 19509   0132CB  00                 	db	0
 19510   0132CC  00                 	db	0
 19511   0132CD  00                 	db	0
 19512   0132CE  00                 	db	0
 19513   0132CF  00                 	db	0
 19514   0132D0  00                 	db	0
 19515   0132D1  00                 	db	0
 19516   0132D2  00                 	db	0
 19517   0132D3  00                 	db	0
 19518   0132D4  00                 	db	0
 19519   0132D5  00                 	db	0
 19520   0132D6  00                 	db	0
 19521   0132D7  00                 	db	0
 19522   0132D8  00                 	db	0
 19523   0132D9  00                 	db	0
 19524   0132DA  00                 	db	0
 19525   0132DB  00                 	db	0
 19526   0132DC  00                 	db	0
 19527   0132DD  00                 	db	0
 19528   0132DE  00                 	db	0
 19529   0132DF  00                 	db	0
 19530   0132E0  00                 	db	0
 19531   0132E1  00                 	db	0
 19532   0132E2  00                 	db	0
 19533   0132E3  00                 	db	0
 19534   0132E4  00                 	db	0
 19535   0132E5  00                 	db	0
 19536   0132E6  00                 	db	0
 19537   0132E7  00                 	db	0
 19538   0132E8  00                 	db	0
 19539   0132E9  00                 	db	0
 19540   0132EA  00                 	db	0
 19541   0132EB  00                 	db	0
 19542   0132EC  00                 	db	0
 19543   0132ED  00                 	db	0
 19544   0132EE  00                 	db	0
 19545   0132EF  00                 	db	0
 19546   0132F0  00                 	db	0
 19547   0132F1  00                 	db	0
 19548   0132F2  00                 	db	0
 19549   0132F3  00                 	db	0
 19550   0132F4  00                 	db	0
 19551   0132F5  00                 	db	0
 19552   0132F6  00                 	db	0
 19553   0132F7  00                 	db	0
 19554   0132F8  00                 	db	0
 19555   0132F9  00                 	db	0
 19556   0132FA  00                 	db	0
 19557   0132FB  00                 	db	0
 19558   0132FC  00                 	db	0
 19559   0132FD  00                 	db	0
 19560   0132FE  00                 	db	0
 19561   0132FF  00                 	db	0
 19562   013300  00                 	db	0
 19563   013301  00                 	db	0
 19564   013302  00                 	db	0
 19565   013303  00                 	db	0
 19566   013304  00                 	db	0
 19567   013305  00                 	db	0
 19568   013306  00                 	db	0
 19569   013307  00                 	db	0
 19570   013308  00                 	db	0
 19571   013309  00                 	db	0
 19572   01330A  00                 	db	0
 19573   01330B  00                 	db	0
 19574   01330C  00                 	db	0
 19575   01330D  00                 	db	0
 19576   01330E  00                 	db	0
 19577   01330F  00                 	db	0
 19578   013310  00                 	db	0
 19579   013311  00                 	db	0
 19580   013312  00                 	db	0
 19581   013313  00                 	db	0
 19582   013314  00                 	db	0
 19583   013315  00                 	db	0
 19584   013316  00                 	db	0
 19585   013317  00                 	db	0
 19586   013318  00                 	db	0
 19587   013319  00                 	db	0
 19588   01331A  00                 	db	0
 19589   01331B  00                 	db	0
 19590   01331C  00                 	db	0
 19591   01331D  00                 	db	0
 19592   01331E  00                 	db	0
 19593   01331F  00                 	db	0
 19594   013320  00                 	db	0
 19595   013321  00                 	db	0
 19596   013322  00                 	db	0
 19597   013323  00                 	db	0
 19598   013324  00                 	db	0
 19599   013325  00                 	db	0
 19600   013326  00                 	db	0
 19601   013327  00                 	db	0
 19602   013328  00                 	db	0
 19603   013329  00                 	db	0
 19604   01332A  00                 	db	0
 19605   01332B  00                 	db	0
 19606   01332C  00                 	db	0
 19607   01332D  00                 	db	0
 19608   01332E  00                 	db	0
 19609   01332F  00                 	db	0
 19610   013330  00                 	db	0
 19611   013331  00                 	db	0
 19612   013332  00                 	db	0
 19613   013333  00                 	db	0
 19614   013334  00                 	db	0
 19615   013335  00                 	db	0
 19616   013336  00                 	db	0
 19617   013337  00                 	db	0
 19618   013338  00                 	db	0
 19619   013339  00                 	db	0
 19620   01333A  00                 	db	0
 19621   01333B  00                 	db	0
 19622   01333C  00                 	db	0
 19623   01333D  00                 	db	0
 19624   01333E  00                 	db	0
 19625   01333F  00                 	db	0
 19626   013340  00                 	db	0
 19627   013341  00                 	db	0
 19628   013342  00                 	db	0
 19629   013343  00                 	db	0
 19630   013344  00                 	db	0
 19631   013345  00                 	db	0
 19632   013346  00                 	db	0
 19633   013347  00                 	db	0
 19634   013348  00                 	db	0
 19635   013349  00                 	db	0
 19636   01334A  00                 	db	0
 19637   01334B  00                 	db	0
 19638   01334C  00                 	db	0
 19639   01334D  00                 	db	0
 19640   01334E  00                 	db	0
 19641   01334F  00                 	db	0
 19642   013350  00                 	db	0
 19643   013351  00                 	db	0
 19644   013352  00                 	db	0
 19645   013353  00                 	db	0
 19646   013354  00                 	db	0
 19647   013355  00                 	db	0
 19648   013356  00                 	db	0
 19649   013357  00                 	db	0
 19650   013358  00                 	db	0
 19651   013359  00                 	db	0
 19652   01335A  00                 	db	0
 19653   01335B  00                 	db	0
 19654   01335C  00                 	db	0
 19655   01335D  00                 	db	0
 19656   01335E  00                 	db	0
 19657   01335F  00                 	db	0
 19658   013360  00                 	db	0
 19659   013361  00                 	db	0
 19660   013362  00                 	db	0
 19661   013363  00                 	db	0
 19662   013364  00                 	db	0
 19663   013365  00                 	db	0
 19664   013366  00                 	db	0
 19665   013367  00                 	db	0
 19666   013368  00                 	db	0
 19667   013369  00                 	db	0
 19668   01336A  00                 	db	0
 19669   01336B  00                 	db	0
 19670   01336C  00                 	db	0
 19671   01336D  00                 	db	0
 19672   01336E  00                 	db	0
 19673   01336F  00                 	db	0
 19674   013370  00                 	db	0
 19675   013371  00                 	db	0
 19676   013372  00                 	db	0
 19677   013373  00                 	db	0
 19678   013374  00                 	db	0
 19679   013375  00                 	db	0
 19680   013376  00                 	db	0
 19681   013377  00                 	db	0
 19682   013378  00                 	db	0
 19683   013379  00                 	db	0
 19684   01337A  00                 	db	0
 19685   01337B  00                 	db	0
 19686   01337C  00                 	db	0
 19687   01337D  00                 	db	0
 19688   01337E  00                 	db	0
 19689   01337F  00                 	db	0
 19690   013380  00                 	db	0
 19691   013381  00                 	db	0
 19692   013382  00                 	db	0
 19693   013383  00                 	db	0
 19694   013384  00                 	db	0
 19695   013385  00                 	db	0
 19696   013386  00                 	db	0
 19697   013387  00                 	db	0
 19698   013388  00                 	db	0
 19699   013389  00                 	db	0
 19700   01338A  00                 	db	0
 19701   01338B  00                 	db	0
 19702   01338C  00                 	db	0
 19703   01338D  00                 	db	0
 19704   01338E  00                 	db	0
 19705   01338F  00                 	db	0
 19706   013390  00                 	db	0
 19707   013391  00                 	db	0
 19708   013392  00                 	db	0
 19709   013393  00                 	db	0
 19710   013394  00                 	db	0
 19711   013395  00                 	db	0
 19712   013396  00                 	db	0
 19713   013397  00                 	db	0
 19714   013398  00                 	db	0
 19715   013399  00                 	db	0
 19716   01339A  00                 	db	0
 19717   01339B  00                 	db	0
 19718   01339C  00                 	db	0
 19719   01339D  00                 	db	0
 19720   01339E  00                 	db	0
 19721   01339F  00                 	db	0
 19722   0133A0  00                 	db	0
 19723   0133A1  0000               	dw	0
 19724   0133A3  0000               	dw	0
 19725   0133A5  0000               	dw	0
 19726   0133A7  0000               	dw	0
 19727   0133A9  0000               	dw	0
 19728   0133AB  0000               	dw	0
 19729   0133AD  00                 	db	0
 19730   0133AE  00                 	db	0
 19731   0133AF  0A                 	db	10
 19732   0133B0  0A                 	db	10
 19733   0133B1  14                 	db	20
 19734   0133B2  00                 	db	0
 19735   0133B3  00                 	db	0
 19736   0133B4  00                 	db	0
 19737   0133B5  0000               	dw	0
 19738   0133B7  0000               	dw	0
 19739   0133B9  0000               	dw	0
 19740   0133BB  0000               	dw	0
 19741   0133BD  0000               	dw	0
 19742   0133BF  0000               	dw	0
 19743   0133C1  0000               	dw	0
 19744   0133C3  0000               	dw	0
 19745   0133C5  0000               	dw	0
 19746   0133C7  00                 	db	0
 19747   0133C8  00                 	db	0
 19748   0133C9  00                 	db	0
 19749   0133CA  00                 	db	0
 19750   0133CB  00                 	db	0
 19751   0133CC  00                 	db	0
 19752   0133CD  00                 	db	0
 19753   0133CE  00                 	db	0
 19754   0133CF  00                 	db	0
 19755   0133D0  00                 	db	0
 19756   0133D1  00                 	db	0
 19757   0133D2  00                 	db	0
 19758   0133D3  00                 	db	0
 19759   0133D4  00                 	db	0
 19760   0133D5  00                 	db	0
 19761   0133D6  00                 	db	0
 19762   0133D7  00                 	db	0
 19763   0133D8  00                 	db	0
 19764   0133D9  00                 	db	0
 19765   0133DA  00                 	db	0
 19766   0133DB  00                 	db	0
 19767   0133DC  00                 	db	0
 19768   0133DD  00                 	db	0
 19769   0133DE  00                 	db	0
 19770   0133DF  00                 	db	0
 19771   0133E0  00                 	db	0
 19772   0133E1  00                 	db	0
 19773   0133E2  00                 	db	0
 19774   0133E3  00                 	db	0
 19775   0133E4  00                 	db	0
 19776   0133E5  00                 	db	0
 19777   0133E6  00                 	db	0
 19778   0133E7  00                 	db	0
 19779   0133E8  00                 	db	0
 19780   0133E9  00                 	db	0
 19781   0133EA  00                 	db	0
 19782   0133EB  00                 	db	0
 19783   0133EC  00                 	db	0
 19784   0133ED  00                 	db	0
 19785   0133EE  00                 	db	0
 19786   0133EF  00                 	db	0
 19787   0133F0  00                 	db	0
 19788   0133F1  00                 	db	0
 19789   0133F2  00                 	db	0
 19790   0133F3  0000               	dw	0
 19791   0133F5  0000               	dw	0
 19792   0133F7  01                 	db	1
 19793   0133F8  00                 	db	0
 19794   0133F9  01                 	db	1
 19795   0133FA  00                 	db	0
 19796   0133FB  2D                 	db	45
 19797   0133FC  00                 	db	0
 19798                           
 19799                           ;initializer for _H153
 19800   0133FD  0000               	dw	0
 19801   0133FF  4B                 	db	75
 19802   013400  4F                 	db	79
 19803   013401  4F                 	db	79
 19804   013402  52                 	db	82
 19805   013403  42                 	db	66
 19806   013404  42                 	db	66
 19807   013405  42                 	db	66
 19808   013406  42                 	db	66
 19809   013407  34                 	db	52
 19810   013408  33                 	db	51
 19811   013409  32                 	db	50
 19812   01340A  31                 	db	49
 19813   01340B  44                 	db	68
 19814   01340C  45                 	db	69
 19815   01340D  32                 	db	50
 19816   01340E  31                 	db	49
 19817   01340F  53                 	db	83
 19818   013410  4B                 	db	75
 19819   013411  4F                 	db	79
 19820   013412  4F                 	db	79
 19821   013413  52                 	db	82
 19822   013414  42                 	db	66
 19823   013415  42                 	db	66
 19824   013416  42                 	db	66
 19825   013417  42                 	db	66
 19826   013418  34                 	db	52
 19827   013419  30                 	db	48
 19828   01341A  30                 	db	48
 19829   01341B  33                 	db	51
 19830   01341C  32                 	db	50
 19831   01341D  31                 	db	49
 19832   01341E  44                 	db	68
 19833   01341F  45                 	db	69
 19834   013420  52                 	db	82
 19835   013421  46                 	db	70
 19836   013422  20                 	db	32
 19837   013423  00                 	db	0
 19838   013424  00                 	db	0
 19839   013425  00                 	db	0
 19840   013426  00                 	db	0
 19841   013427  00                 	db	0
 19842   013428  00                 	db	0
 19843   013429  00                 	db	0
 19844   01342A  00                 	db	0
 19845   01342B  00                 	db	0
 19846   01342C  00                 	db	0
 19847   01342D  00                 	db	0
 19848   01342E  00                 	db	0
 19849   01342F  00                 	db	0
 19850   013430  00                 	db	0
 19851   013431  00                 	db	0
 19852   013432  00                 	db	0
 19853   013433  00                 	db	0
 19854   013434  00                 	db	0
 19855   013435  00                 	db	0
 19856   013436  00                 	db	0
 19857   013437  00                 	db	0
 19858   013438  00                 	db	0
 19859   013439  00                 	db	0
 19860   01343A  00                 	db	0
 19861   01343B  00                 	db	0
 19862   01343C  00                 	db	0
 19863   01343D  00                 	db	0
 19864   01343E  00                 	db	0
 19865   01343F  00                 	db	0
 19866   013440  00                 	db	0
 19867   013441  00                 	db	0
 19868   013442  00                 	db	0
 19869   013443  00                 	db	0
 19870   013444  00                 	db	0
 19871   013445  00                 	db	0
 19872   013446  00                 	db	0
 19873   013447  00                 	db	0
 19874   013448  00                 	db	0
 19875   013449  00                 	db	0
 19876   01344A  00                 	db	0
 19877   01344B  00                 	db	0
 19878   01344C  00                 	db	0
 19879   01344D  00                 	db	0
 19880   01344E  00                 	db	0
 19881   01344F  00                 	db	0
 19882   013450  00                 	db	0
 19883   013451  00                 	db	0
 19884   013452  00                 	db	0
 19885   013453  00                 	db	0
 19886   013454  00                 	db	0
 19887   013455  00                 	db	0
 19888   013456  00                 	db	0
 19889   013457  00                 	db	0
 19890   013458  00                 	db	0
 19891   013459  00                 	db	0
 19892   01345A  00                 	db	0
 19893   01345B  00                 	db	0
 19894   01345C  00                 	db	0
 19895   01345D  00                 	db	0
 19896   01345E  00                 	db	0
 19897   01345F  00                 	db	0
 19898   013460  00                 	db	0
 19899   013461  00                 	db	0
 19900   013462  00                 	db	0
 19901   013463  00                 	db	0
 19902   013464  00                 	db	0
 19903   013465  00                 	db	0
 19904   013466  00                 	db	0
 19905   013467  00                 	db	0
 19906   013468  00                 	db	0
 19907   013469  00                 	db	0
 19908   01346A  00                 	db	0
 19909   01346B  00                 	db	0
 19910   01346C  00                 	db	0
 19911   01346D  00                 	db	0
 19912   01346E  00                 	db	0
 19913   01346F  00                 	db	0
 19914   013470  00                 	db	0
 19915   013471  00                 	db	0
 19916   013472  00                 	db	0
 19917   013473  00                 	db	0
 19918   013474  00                 	db	0
 19919   013475  00                 	db	0
 19920   013476  00                 	db	0
 19921   013477  00                 	db	0
 19922   013478  00                 	db	0
 19923   013479  00                 	db	0
 19924   01347A  00                 	db	0
 19925   01347B  00                 	db	0
 19926   01347C  00                 	db	0
 19927   01347D  00                 	db	0
 19928   01347E  00                 	db	0
 19929   01347F  00                 	db	0
 19930   013480  00                 	db	0
 19931   013481  00                 	db	0
 19932   013482  00                 	db	0
 19933   013483  00                 	db	0
 19934   013484  00                 	db	0
 19935   013485  00                 	db	0
 19936   013486  00                 	db	0
 19937   013487  2C                 	db	44
 19938   013488  41                 	db	65
 19939   013489  01                 	db	1
 19940   01348A  01                 	db	1
 19941   01348B  21                 	db	33
 19942   01348C  02                 	db	2
 19943   01348D  01                 	db	1
 19944   01348E  0001               	dw	1
 19945   013490  0000               	dw	0
 19946   013492  01                 	db	1
 19947   013493  80                 	db	128
 19948   013494  03                 	db	3
 19949   013495  8A                 	db	138
 19950   013496  00                 	db	0
 19951   013497  00                 	db	0
 19952   013498  99                 	db	153
 19953   013499  0000               	dw	0
 19954   01349B  6F                 	db	111
 19955   01349C  53                 	db	83
 19956   01349D  4B                 	db	75
 19957   01349E  4F                 	db	79
 19958   01349F  4F                 	db	79
 19959   0134A0  52                 	db	82
 19960   0134A1  42                 	db	66
 19961   0134A2  42                 	db	66
 19962   0134A3  42                 	db	66
 19963   0134A4  42                 	db	66
 19964   0134A5  34                 	db	52
 19965   0134A6  33                 	db	51
 19966   0134A7  32                 	db	50
 19967   0134A8  31                 	db	49
 19968   0134A9  44                 	db	68
 19969   0134AA  45                 	db	69
 19970   0134AB  32                 	db	50
 19971   0134AC  31                 	db	49
 19972   0134AD  53                 	db	83
 19973   0134AE  4B                 	db	75
 19974   0134AF  52                 	db	82
 19975   0134B0  42                 	db	66
 19976   0134B1  2A                 	db	42
 19977   0134B2  17                 	db	23
 19978   0134B3  41                 	db	65
 19979   0134B4  34                 	db	52
 19980   0134B5  33                 	db	51
 19981   0134B6  32                 	db	50
 19982   0134B7  31                 	db	49
 19983   0134B8  44                 	db	68
 19984   0134B9  45                 	db	69
 19985   0134BA  52                 	db	82
 19986   0134BB  46                 	db	70
 19987   0134BC  2A                 	db	42
 19988   0134BD  00                 	db	0
 19989   0134BE  00                 	db	0
 19990   0134BF  00                 	db	0
 19991   0134C0  00                 	db	0
 19992   0134C1  00                 	db	0
 19993   0134C2  00                 	db	0
 19994   0134C3  00                 	db	0
 19995   0134C4  00                 	db	0
 19996   0134C5  00                 	db	0
 19997   0134C6  00                 	db	0
 19998   0134C7  00                 	db	0
 19999   0134C8  00                 	db	0
 20000   0134C9  00                 	db	0
 20001   0134CA  00                 	db	0
 20002   0134CB  00                 	db	0
 20003   0134CC  00                 	db	0
 20004   0134CD  00                 	db	0
 20005   0134CE  00                 	db	0
 20006   0134CF  00                 	db	0
 20007   0134D0  00                 	db	0
 20008   0134D1  00                 	db	0
 20009   0134D2  00                 	db	0
 20010   0134D3  00                 	db	0
 20011   0134D4  00                 	db	0
 20012   0134D5  00                 	db	0
 20013   0134D6  00                 	db	0
 20014   0134D7  00                 	db	0
 20015   0134D8  00                 	db	0
 20016   0134D9  00                 	db	0
 20017   0134DA  00                 	db	0
 20018   0134DB  00                 	db	0
 20019   0134DC  00                 	db	0
 20020   0134DD  00                 	db	0
 20021   0134DE  00                 	db	0
 20022   0134DF  00                 	db	0
 20023   0134E0  00                 	db	0
 20024   0134E1  00                 	db	0
 20025   0134E2  00                 	db	0
 20026   0134E3  00                 	db	0
 20027   0134E4  00                 	db	0
 20028   0134E5  00                 	db	0
 20029   0134E6  00                 	db	0
 20030   0134E7  00                 	db	0
 20031   0134E8  00                 	db	0
 20032   0134E9  00                 	db	0
 20033   0134EA  00                 	db	0
 20034   0134EB  00                 	db	0
 20035   0134EC  00                 	db	0
 20036   0134ED  00                 	db	0
 20037   0134EE  00                 	db	0
 20038   0134EF  00                 	db	0
 20039   0134F0  00                 	db	0
 20040   0134F1  00                 	db	0
 20041   0134F2  00                 	db	0
 20042   0134F3  00                 	db	0
 20043   0134F4  00                 	db	0
 20044   0134F5  00                 	db	0
 20045   0134F6  00                 	db	0
 20046   0134F7  00                 	db	0
 20047   0134F8  00                 	db	0
 20048   0134F9  00                 	db	0
 20049   0134FA  00                 	db	0
 20050   0134FB  00                 	db	0
 20051   0134FC  00                 	db	0
 20052   0134FD  00                 	db	0
 20053   0134FE  00                 	db	0
 20054   0134FF  00                 	db	0
 20055   013500  00                 	db	0
 20056   013501  00                 	db	0
 20057   013502  00                 	db	0
 20058   013503  00                 	db	0
 20059   013504  00                 	db	0
 20060   013505  00                 	db	0
 20061   013506  00                 	db	0
 20062   013507  00                 	db	0
 20063   013508  00                 	db	0
 20064   013509  00                 	db	0
 20065   01350A  00                 	db	0
 20066   01350B  00                 	db	0
 20067   01350C  00                 	db	0
 20068   01350D  00                 	db	0
 20069   01350E  00                 	db	0
 20070   01350F  00                 	db	0
 20071   013510  00                 	db	0
 20072   013511  00                 	db	0
 20073   013512  00                 	db	0
 20074   013513  00                 	db	0
 20075   013514  00                 	db	0
 20076   013515  00                 	db	0
 20077   013516  00                 	db	0
 20078   013517  00                 	db	0
 20079   013518  00                 	db	0
 20080   013519  00                 	db	0
 20081   01351A  00                 	db	0
 20082   01351B  00                 	db	0
 20083   01351C  00                 	db	0
 20084   01351D  00                 	db	0
 20085   01351E  00                 	db	0
 20086   01351F  00                 	db	0
 20087   013520  00                 	db	0
 20088   013521  09                 	db	9
 20089   013522  41                 	db	65
 20090   013523  02                 	db	2
 20091   013524  01                 	db	1
 20092   013525  01                 	db	1
 20093   013526  01                 	db	1
 20094   013527  21                 	db	33
 20095   013528  02                 	db	2
 20096   013529  01                 	db	1
 20097   01352A  0001               	dw	1
 20098   01352C  0000               	dw	0
 20099   01352E  01                 	db	1
 20100   01352F  80                 	db	128
 20101   013530  05                 	db	5
 20102   013531  8A                 	db	138
 20103   013532  00                 	db	0
 20104   013533  00                 	db	0
 20105   013534  99                 	db	153
 20106                           
 20107                           ;initializer for _H254
 20108   013535  2019               	dw	8217
 20109   013537  57                 	db	87
 20110   013538  19                 	db	25
 20111   013539  00                 	db	0
 20112   01353A  00                 	db	0
 20113   01353B  00                 	db	0
 20114   01353C  00                 	db	0
 20115   01353D  00                 	db	0
 20116   01353E  00                 	db	0
 20117   01353F  00                 	db	0
 20118   013540  00                 	db	0
 20119   013541  00                 	db	0
 20120   013542  00                 	db	0
 20121   013543  00                 	db	0
 20122   013544  00                 	db	0
 20123   013545  00                 	db	0
 20124   013546  00                 	db	0
 20125   013547  00                 	db	0
 20126   013548  00                 	db	0
 20127   013549  00                 	db	0
 20128   01354A  00                 	db	0
 20129   01354B  00                 	db	0
 20130   01354C  00                 	db	0
 20131   01354D  00                 	db	0
 20132   01354E  00                 	db	0
 20133   01354F  00                 	db	0
 20134   013550  00                 	db	0
 20135   013551  00                 	db	0
 20136   013552  00                 	db	0
 20137   013553  00                 	db	0
 20138   013554  00                 	db	0
 20139   013555  00                 	db	0
 20140   013556  00                 	db	0
 20141   013557  00                 	db	0
 20142   013558  00                 	db	0
 20143   013559  00                 	db	0
 20144   01355A  00                 	db	0
 20145   01355B  00                 	db	0
 20146   01355C  00                 	db	0
 20147   01355D  00                 	db	0
 20148   01355E  00                 	db	0
 20149   01355F  00                 	db	0
 20150   013560  00                 	db	0
 20151   013561  00                 	db	0
 20152   013562  00                 	db	0
 20153   013563  00                 	db	0
 20154   013564  00                 	db	0
 20155   013565  00                 	db	0
 20156   013566  00                 	db	0
 20157   013567  00                 	db	0
 20158   013568  00                 	db	0
 20159   013569  00                 	db	0
 20160   01356A  00                 	db	0
 20161   01356B  00                 	db	0
 20162   01356C  00                 	db	0
 20163   01356D  00                 	db	0
 20164   01356E  00                 	db	0
 20165   01356F  00                 	db	0
 20166   013570  00                 	db	0
 20167   013571  00                 	db	0
 20168   013572  00                 	db	0
 20169   013573  00                 	db	0
 20170   013574  00                 	db	0
 20171   013575  00                 	db	0
 20172   013576  00                 	db	0
 20173   013577  00                 	db	0
 20174   013578  00                 	db	0
 20175   013579  00                 	db	0
 20176   01357A  00                 	db	0
 20177   01357B  00                 	db	0
 20178   01357C  00                 	db	0
 20179   01357D  00                 	db	0
 20180   01357E  00                 	db	0
 20181   01357F  00                 	db	0
 20182   013580  00                 	db	0
 20183   013581  00                 	db	0
 20184   013582  00                 	db	0
 20185   013583  00                 	db	0
 20186   013584  00                 	db	0
 20187   013585  00                 	db	0
 20188   013586  00                 	db	0
 20189   013587  00                 	db	0
 20190   013588  00                 	db	0
 20191   013589  00                 	db	0
 20192   01358A  00                 	db	0
 20193   01358B  00                 	db	0
 20194   01358C  00                 	db	0
 20195   01358D  00                 	db	0
 20196   01358E  00                 	db	0
 20197   01358F  00                 	db	0
 20198   013590  00                 	db	0
 20199   013591  00                 	db	0
 20200   013592  00                 	db	0
 20201   013593  00                 	db	0
 20202   013594  00                 	db	0
 20203   013595  00                 	db	0
 20204   013596  00                 	db	0
 20205   013597  00                 	db	0
 20206   013598  00                 	db	0
 20207   013599  00                 	db	0
 20208   01359A  00                 	db	0
 20209   01359B  00                 	db	0
 20210   01359C  00                 	db	0
 20211   01359D  00                 	db	0
 20212   01359E  00                 	db	0
 20213   01359F  00                 	db	0
 20214   0135A0  00                 	db	0
 20215   0135A1  00                 	db	0
 20216   0135A2  00                 	db	0
 20217   0135A3  00                 	db	0
 20218   0135A4  00                 	db	0
 20219   0135A5  00                 	db	0
 20220   0135A6  00                 	db	0
 20221   0135A7  00                 	db	0
 20222   0135A8  00                 	db	0
 20223   0135A9  00                 	db	0
 20224   0135AA  00                 	db	0
 20225   0135AB  00                 	db	0
 20226   0135AC  00                 	db	0
 20227   0135AD  00                 	db	0
 20228   0135AE  00                 	db	0
 20229   0135AF  00                 	db	0
 20230   0135B0  00                 	db	0
 20231   0135B1  00                 	db	0
 20232   0135B2  00                 	db	0
 20233   0135B3  00                 	db	0
 20234   0135B4  00                 	db	0
 20235   0135B5  00                 	db	0
 20236   0135B6  00                 	db	0
 20237   0135B7  00                 	db	0
 20238   0135B8  00                 	db	0
 20239   0135B9  00                 	db	0
 20240   0135BA  00                 	db	0
 20241   0135BB  00                 	db	0
 20242   0135BC  00                 	db	0
 20243   0135BD  00                 	db	0
 20244   0135BE  00                 	db	0
 20245   0135BF  00                 	db	0
 20246   0135C0  00                 	db	0
 20247   0135C1  00                 	db	0
 20248   0135C2  00                 	db	0
 20249   0135C3  00                 	db	0
 20250   0135C4  00                 	db	0
 20251   0135C5  00                 	db	0
 20252   0135C6  00                 	db	0
 20253   0135C7  00                 	db	0
 20254   0135C8  00                 	db	0
 20255   0135C9  00                 	db	0
 20256   0135CA  00                 	db	0
 20257   0135CB  00                 	db	0
 20258   0135CC  00                 	db	0
 20259   0135CD  00                 	db	0
 20260   0135CE  00                 	db	0
 20261   0135CF  00                 	db	0
 20262   0135D0  00                 	db	0
 20263   0135D1  00                 	db	0
 20264   0135D2  00                 	db	0
 20265   0135D3  00                 	db	0
 20266   0135D4  00                 	db	0
 20267   0135D5  00                 	db	0
 20268   0135D6  00                 	db	0
 20269   0135D7  00                 	db	0
 20270   0135D8  00                 	db	0
 20271   0135D9  00                 	db	0
 20272   0135DA  00                 	db	0
 20273   0135DB  00                 	db	0
 20274   0135DC  00                 	db	0
 20275   0135DD  00                 	db	0
 20276   0135DE  00                 	db	0
 20277   0135DF  00                 	db	0
 20278   0135E0  00                 	db	0
 20279   0135E1  00                 	db	0
 20280   0135E2  00                 	db	0
 20281   0135E3  00                 	db	0
 20282   0135E4  00                 	db	0
 20283   0135E5  00                 	db	0
 20284   0135E6  00                 	db	0
 20285   0135E7  00                 	db	0
 20286   0135E8  00                 	db	0
 20287   0135E9  00                 	db	0
 20288   0135EA  00                 	db	0
 20289   0135EB  00                 	db	0
 20290   0135EC  00                 	db	0
 20291   0135ED  00                 	db	0
 20292   0135EE  00                 	db	0
 20293   0135EF  00                 	db	0
 20294   0135F0  00                 	db	0
 20295   0135F1  00                 	db	0
 20296   0135F2  00                 	db	0
 20297   0135F3  00                 	db	0
 20298   0135F4  00                 	db	0
 20299   0135F5  00                 	db	0
 20300   0135F6  00                 	db	0
 20301   0135F7  00                 	db	0
 20302   0135F8  00                 	db	0
 20303   0135F9  00                 	db	0
 20304   0135FA  00                 	db	0
 20305   0135FB  00                 	db	0
 20306   0135FC  00                 	db	0
 20307   0135FD  00                 	db	0
 20308   0135FE  00                 	db	0
 20309   0135FF  00                 	db	0
 20310   013600  00                 	db	0
 20311   013601  00                 	db	0
 20312   013602  00                 	db	0
 20313   013603  00                 	db	0
 20314   013604  00                 	db	0
 20315   013605  00                 	db	0
 20316   013606  00                 	db	0
 20317   013607  00                 	db	0
 20318   013608  00                 	db	0
 20319   013609  00                 	db	0
 20320   01360A  00                 	db	0
 20321   01360B  00                 	db	0
 20322   01360C  00                 	db	0
 20323   01360D  00                 	db	0
 20324   01360E  00                 	db	0
 20325   01360F  00                 	db	0
 20326   013610  00                 	db	0
 20327   013611  00                 	db	0
 20328   013612  00                 	db	0
 20329   013613  00                 	db	0
 20330   013614  00                 	db	0
 20331   013615  00                 	db	0
 20332   013616  00                 	db	0
 20333   013617  00                 	db	0
 20334   013618  00                 	db	0
 20335   013619  00                 	db	0
 20336   01361A  00                 	db	0
 20337   01361B  00                 	db	0
 20338   01361C  00                 	db	0
 20339   01361D  00                 	db	0
 20340   01361E  00                 	db	0
 20341   01361F  00                 	db	0
 20342   013620  00                 	db	0
 20343   013621  00                 	db	0
 20344   013622  00                 	db	0
 20345   013623  00                 	db	0
 20346   013624  00                 	db	0
 20347   013625  00                 	db	0
 20348   013626  00                 	db	0
 20349   013627  00                 	db	0
 20350   013628  00                 	db	0
 20351   013629  00                 	db	0
 20352   01362A  00                 	db	0
 20353   01362B  0001               	dw	1
 20354   01362D  0000               	dw	0
 20355   01362F  01                 	db	1
 20356   013630  80                 	db	128
 20357   013631  03                 	db	3
 20358   013632  8A                 	db	138
 20359   013633  EF                 	db	239
 20360   013634  80                 	db	128
 20361   013635  FE                 	db	254
 20362                           
 20363                           	psect	idataBANK0
 20364   017B5A                     __pidataBANK0:
 20365                           	callstack 0
 20366                           
 20367                           ;initializer for _H33
 20368   017B5A  0000               	dw	0
 20369   017B5C  01                 	db	1
 20370   017B5D  01                 	db	1
 20371   017B5E  A5                 	db	165
 20372   017B5F  4B                 	db	75
 20373   017B60  43                 	db	67
 20374   017B61  4F                 	db	79
 20375   017B62  4C                 	db	76
 20376   017B63  44                 	db	68
 20377   017B64  41                 	db	65
 20378   017B65  4F                 	db	79
 20379   017B66  4C                 	db	76
 20380   017B67  08                 	db	8
 20381   017B68  41                 	db	65
 20382   017B69  02                 	db	2
 20383   017B6A  01                 	db	1
 20384   017B6B  01                 	db	1
 20385   017B6C  01                 	db	1
 20386   017B6D  37                 	db	55
 20387   017B6E  31                 	db	49
 20388   017B6F  02                 	db	2
 20389   017B70  41                 	db	65
 20390   017B71  02                 	db	2
 20391   017B72  01                 	db	1
 20392   017B73  0001               	dw	1
 20393   017B75  0000               	dw	0
 20394   017B77  01                 	db	1
 20395   017B78  80                 	db	128
 20396   017B79  29                 	db	41
 20397   017B7A  82                 	db	130
 20398   017B7B  00                 	db	0
 20399   017B7C  00                 	db	0
 20400   017B7D  21                 	db	33
 20401                           
 20402                           ;initializer for _H14
 20403   017B7E  0000               	dw	0
 20404   017B80  00                 	db	0
 20405   017B81  41                 	db	65
 20406   017B82  11                 	db	17
 20407   017B83  01                 	db	1
 20408   017B84  0001               	dw	1
 20409   017B86  0000               	dw	0
 20410   017B88  01                 	db	1
 20411   017B89  80                 	db	128
 20412   017B8A  04                 	db	4
 20413   017B8B  01                 	db	1
 20414   017B8C  00                 	db	0
 20415   017B8D  00                 	db	0
 20416   017B8E  0E                 	db	14
 20417                           
 20418                           	psect	idataBANK1
 20419   016A9E                     __pidataBANK1:
 20420                           	callstack 0
 20421                           
 20422                           ;initializer for _H10
 20423   016A9E  0000               	dw	0
 20424   016AA0  0001               	dw	1
 20425   016AA2  0000               	dw	0
 20426   016AA4  01                 	db	1
 20427   016AA5  80                 	db	128
 20428   016AA6  01                 	db	1
 20429   016AA7  81                 	db	129
 20430   016AA8  00                 	db	0
 20431   016AA9  00                 	db	0
 20432   016AAA  0A                 	db	10
 20433   016AAB  0000               	dw	0
 20434   016AAD  00                 	db	0
 20435   016AAE  00                 	db	0
 20436   016AAF  00                 	db	0
 20437   016AB0  00                 	db	0
 20438   016AB1  00                 	db	0
 20439   016AB2  00                 	db	0
 20440   016AB3  00                 	db	0
 20441   016AB4  00                 	db	0
 20442   016AB5  00                 	db	0
 20443   016AB6  00                 	db	0
 20444   016AB7  0A                 	db	10
 20445   016AB8  0000               	dw	0
 20446   016ABA  0001               	dw	1
 20447   016ABC  0000               	dw	0
 20448   016ABE  01                 	db	1
 20449   016ABF  80                 	db	128
 20450   016AC0  00                 	db	0
 20451   016AC1  01                 	db	1
 20452   016AC2  00                 	db	0
 20453   016AC3  00                 	db	0
 20454   016AC4  0A                 	db	10
 20455   016AC5  0000               	dw	0
 20456   016AC7  0001               	dw	1
 20457   016AC9  0000               	dw	0
 20458   016ACB  01                 	db	1
 20459   016ACC  80                 	db	128
 20460   016ACD  01                 	db	1
 20461   016ACE  81                 	db	129
 20462   016ACF  00                 	db	0
 20463   016AD0  80                 	db	128
 20464   016AD1  0A                 	db	10
 20465   016AD2  0000               	dw	0
 20466   016AD4  0001               	dw	1
 20467   016AD6  0000               	dw	0
 20468   016AD8  01                 	db	1
 20469   016AD9  80                 	db	128
 20470   016ADA  11                 	db	17
 20471   016ADB  82                 	db	130
 20472   016ADC  00                 	db	0
 20473   016ADD  00                 	db	0
 20474   016ADE  0A                 	db	10
 20475   016ADF  0000               	dw	0
 20476   016AE1  0001               	dw	1
 20477   016AE3  0000               	dw	0
 20478   016AE5  01                 	db	1
 20479   016AE6  80                 	db	128
 20480   016AE7  0F                 	db	15
 20481   016AE8  81                 	db	129
 20482   016AE9  00                 	db	0
 20483   016AEA  00                 	db	0
 20484   016AEB  0A                 	db	10
 20485   016AEC  0000               	dw	0
 20486   016AEE  0001               	dw	1
 20487   016AF0  0000               	dw	0
 20488   016AF2  01                 	db	1
 20489   016AF3  80                 	db	128
 20490   016AF4  11                 	db	17
 20491   016AF5  81                 	db	129
 20492   016AF6  00                 	db	0
 20493   016AF7  00                 	db	0
 20494   016AF8  0A                 	db	10
 20495                           
 20496                           ;initializer for _H13
 20497   016AF9  0000               	dw	0
 20498   016AFB  00                 	db	0
 20499   016AFC  01                 	db	1
 20500   016AFD  21                 	db	33
 20501   016AFE  0001               	dw	1
 20502   016B00  0000               	dw	0
 20503   016B02  01                 	db	1
 20504   016B03  80                 	db	128
 20505   016B04  0C                 	db	12
 20506   016B05  06                 	db	6
 20507   016B06  00                 	db	0
 20508   016B07  00                 	db	0
 20509   016B08  0D                 	db	13
 20510   016B09  0000               	dw	0
 20511   016B0B  00                 	db	0
 20512   016B0C  01                 	db	1
 20513   016B0D  21                 	db	33
 20514   016B0E  0001               	dw	1
 20515   016B10  0000               	dw	0
 20516   016B12  01                 	db	1
 20517   016B13  80                 	db	128
 20518   016B14  02                 	db	2
 20519   016B15  0A                 	db	10
 20520   016B16  00                 	db	0
 20521   016B17  00                 	db	0
 20522   016B18  0D                 	db	13
 20523   016B19  0000               	dw	0
 20524   016B1B  00                 	db	0
 20525   016B1C  01                 	db	1
 20526   016B1D  21                 	db	33
 20527   016B1E  0001               	dw	1
 20528   016B20  0000               	dw	0
 20529   016B22  01                 	db	1
 20530   016B23  80                 	db	128
 20531   016B24  02                 	db	2
 20532   016B25  05                 	db	5
 20533   016B26  00                 	db	0
 20534   016B27  00                 	db	0
 20535   016B28  0D                 	db	13
 20536   016B29  0000               	dw	0
 20537   016B2B  FF                 	db	255
 20538   016B2C  01                 	db	1
 20539   016B2D  21                 	db	33
 20540   016B2E  0001               	dw	1
 20541   016B30  0000               	dw	0
 20542   016B32  01                 	db	1
 20543   016B33  80                 	db	128
 20544   016B34  1A                 	db	26
 20545   016B35  02                 	db	2
 20546   016B36  00                 	db	0
 20547   016B37  00                 	db	0
 20548   016B38  0D                 	db	13
 20549                           
 20550                           ;initializer for _H17
 20551   016B39  0000               	dw	0
 20552   016B3B  00                 	db	0
 20553   016B3C  01                 	db	1
 20554   016B3D  00                 	db	0
 20555   016B3E  01                 	db	1
 20556   016B3F  21                 	db	33
 20557   016B40  02                 	db	2
 20558   016B41  01                 	db	1
 20559   016B42  0001               	dw	1
 20560   016B44  0000               	dw	0
 20561   016B46  01                 	db	1
 20562   016B47  80                 	db	128
 20563   016B48  0E                 	db	14
 20564   016B49  01                 	db	1
 20565   016B4A  00                 	db	0
 20566   016B4B  00                 	db	0
 20567   016B4C  11                 	db	17
 20568                           
 20569                           ;initializer for _port_data
 20570   016B4D  FF                 	db	255
 20571   016B4E  00                 	db	0
 20572   016B4F  FF                 	db	255
 20573   016B50  00                 	db	0
 20574   016B51  FF                 	db	255
 20575   016B52  00                 	db	0
 20576   016B53  FF                 	db	255
 20577   016B54  00                 	db	0
 20578   016B55  FF                 	db	255
 20579   016B56  00                 	db	0
 20580   016B57  FF                 	db	255
 20581   016B58  00                 	db	0
 20582   016B59  FF                 	db	255
 20583   016B5A  00                 	db	0
 20584   016B5B  FF                 	db	255
 20585   016B5C  00                 	db	0
 20586                           
 20587                           	psect	idataBANK2
 20588   017A40                     __pidataBANK2:
 20589                           	callstack 0
 20590                           
 20591                           ;initializer for _H12
 20592   017A40  0000               	dw	0
 20593   017A42  00                 	db	0
 20594   017A43  01                 	db	1
 20595   017A44  0001               	dw	1
 20596   017A46  0000               	dw	0
 20597   017A48  01                 	db	1
 20598   017A49  80                 	db	128
 20599   017A4A  02                 	db	2
 20600   017A4B  01                 	db	1
 20601   017A4C  00                 	db	0
 20602   017A4D  00                 	db	0
 20603   017A4E  0C                 	db	12
 20604   017A4F  0000               	dw	0
 20605   017A51  00                 	db	0
 20606   017A52  01                 	db	1
 20607   017A53  0001               	dw	1
 20608   017A55  0000               	dw	0
 20609   017A57  01                 	db	1
 20610   017A58  80                 	db	128
 20611   017A59  0D                 	db	13
 20612   017A5A  81                 	db	129
 20613   017A5B  00                 	db	0
 20614   017A5C  00                 	db	0
 20615   017A5D  0C                 	db	12
 20616                           
 20617                           ;initializer for _H26
 20618   017A5E  0000               	dw	0
 20619   017A60  30                 	db	48
 20620   017A61  31                 	db	49
 20621   017A62  30                 	db	48
 20622   017A63  39                 	db	57
 20623   017A64  31                 	db	49
 20624   017A65  31                 	db	49
 20625   017A66  30                 	db	48
 20626   017A67  38                 	db	56
 20627   017A68  34                 	db	52
 20628   017A69  36                 	db	54
 20629   017A6A  30                 	db	48
 20630   017A6B  30                 	db	48
 20631   017A6C  30                 	db	48
 20632   017A6D  30                 	db	48
 20633   017A6E  0E                 	db	14
 20634   017A6F  41                 	db	65
 20635   017A70  0001               	dw	1
 20636   017A72  0000               	dw	0
 20637   017A74  01                 	db	1
 20638   017A75  80                 	db	128
 20639   017A76  12                 	db	18
 20640   017A77  02                 	db	2
 20641   017A78  00                 	db	0
 20642   017A79  00                 	db	0
 20643   017A7A  1A                 	db	26
 20644                           
 20645                           	psect	idataBANK6
 20646   016422                     __pidataBANK6:
 20647                           	callstack 0
 20648                           
 20649                           ;initializer for _T
 20650   016422  63                 	db	99
 20651   016423  6F                 	db	111
 20652   016424  6D                 	db	109
 20653   016425  6D                 	db	109
 20654   016426  61                 	db	97
 20655   016427  6E                 	db	110
 20656   016428  64                 	db	100
 20657   016429  73                 	db	115
 20658   01642A  20                 	db	32
 20659   01642B  31                 	db	49
 20660   01642C  00                 	db	0
 20661   01642D  00                 	db	0
 20662   01642E  00                 	db	0
 20663   01642F  00                 	db	0
 20664   016430  00                 	db	0
 20665   016431  00                 	db	0
 20666   016432  00                 	db	0
 20667   016433  00                 	db	0
 20668   016434  00                 	db	0
 20669   016435  00                 	db	0
 20670   016436  00                 	db	0
 20671   016437  00                 	db	0
 20672   016438  00                 	db	0
 20673   016439  00                 	db	0
 20674   01643A  00                 	db	0
 20675   01643B  00                 	db	0
 20676   01643C  00                 	db	0
 20677   01643D  00                 	db	0
 20678   01643E  00                 	db	0
 20679   01643F  00                 	db	0
 20680   016440  00                 	db	0
 20681   016441  00                 	db	0
 20682   016442  64                 	db	100
 20683   016443  69                 	db	105
 20684   016444  73                 	db	115
 20685   016445  70                 	db	112
 20686   016446  6C                 	db	108
 20687   016447  61                 	db	97
 20688   016448  79                 	db	121
 20689   016449  73                 	db	115
 20690   01644A  20                 	db	32
 20691   01644B  31                 	db	49
 20692   01644C  00                 	db	0
 20693   01644D  00                 	db	0
 20694   01644E  00                 	db	0
 20695   01644F  00                 	db	0
 20696   016450  00                 	db	0
 20697   016451  00                 	db	0
 20698   016452  00                 	db	0
 20699   016453  00                 	db	0
 20700   016454  00                 	db	0
 20701   016455  00                 	db	0
 20702   016456  00                 	db	0
 20703   016457  00                 	db	0
 20704   016458  00                 	db	0
 20705   016459  00                 	db	0
 20706   01645A  00                 	db	0
 20707   01645B  00                 	db	0
 20708   01645C  00                 	db	0
 20709   01645D  00                 	db	0
 20710   01645E  00                 	db	0
 20711   01645F  00                 	db	0
 20712   016460  00                 	db	0
 20713   016461  00                 	db	0
 20714   016462  63                 	db	99
 20715   016463  6F                 	db	111
 20716   016464  6D                 	db	109
 20717   016465  6D                 	db	109
 20718   016466  61                 	db	97
 20719   016467  6E                 	db	110
 20720   016468  64                 	db	100
 20721   016469  73                 	db	115
 20722   01646A  20                 	db	32
 20723   01646B  32                 	db	50
 20724   01646C  00                 	db	0
 20725   01646D  00                 	db	0
 20726   01646E  00                 	db	0
 20727   01646F  00                 	db	0
 20728   016470  00                 	db	0
 20729   016471  00                 	db	0
 20730   016472  00                 	db	0
 20731   016473  00                 	db	0
 20732   016474  00                 	db	0
 20733   016475  00                 	db	0
 20734   016476  00                 	db	0
 20735   016477  00                 	db	0
 20736   016478  00                 	db	0
 20737   016479  00                 	db	0
 20738   01647A  00                 	db	0
 20739   01647B  00                 	db	0
 20740   01647C  00                 	db	0
 20741   01647D  00                 	db	0
 20742   01647E  00                 	db	0
 20743   01647F  00                 	db	0
 20744   016480  00                 	db	0
 20745   016481  00                 	db	0
 20746   016482  64                 	db	100
 20747   016483  69                 	db	105
 20748   016484  73                 	db	115
 20749   016485  70                 	db	112
 20750   016486  6C                 	db	108
 20751   016487  61                 	db	97
 20752   016488  79                 	db	121
 20753   016489  73                 	db	115
 20754   01648A  20                 	db	32
 20755   01648B  32                 	db	50
 20756   01648C  00                 	db	0
 20757   01648D  00                 	db	0
 20758   01648E  00                 	db	0
 20759   01648F  00                 	db	0
 20760   016490  00                 	db	0
 20761   016491  00                 	db	0
 20762   016492  00                 	db	0
 20763   016493  00                 	db	0
 20764   016494  00                 	db	0
 20765   016495  00                 	db	0
 20766   016496  00                 	db	0
 20767   016497  00                 	db	0
 20768   016498  00                 	db	0
 20769   016499  00                 	db	0
 20770   01649A  00                 	db	0
 20771   01649B  00                 	db	0
 20772   01649C  00                 	db	0
 20773   01649D  00                 	db	0
 20774   01649E  00                 	db	0
 20775   01649F  00                 	db	0
 20776   0164A0  00                 	db	0
 20777   0164A1  00                 	db	0
 20778   0164A2  63                 	db	99
 20779   0164A3  6F                 	db	111
 20780   0164A4  6D                 	db	109
 20781   0164A5  6D                 	db	109
 20782   0164A6  61                 	db	97
 20783   0164A7  6E                 	db	110
 20784   0164A8  64                 	db	100
 20785   0164A9  73                 	db	115
 20786   0164AA  20                 	db	32
 20787   0164AB  33                 	db	51
 20788   0164AC  00                 	db	0
 20789   0164AD  00                 	db	0
 20790   0164AE  00                 	db	0
 20791   0164AF  00                 	db	0
 20792   0164B0  00                 	db	0
 20793   0164B1  00                 	db	0
 20794   0164B2  00                 	db	0
 20795   0164B3  00                 	db	0
 20796   0164B4  00                 	db	0
 20797   0164B5  00                 	db	0
 20798   0164B6  00                 	db	0
 20799   0164B7  00                 	db	0
 20800   0164B8  00                 	db	0
 20801   0164B9  00                 	db	0
 20802   0164BA  00                 	db	0
 20803   0164BB  00                 	db	0
 20804   0164BC  00                 	db	0
 20805   0164BD  00                 	db	0
 20806   0164BE  00                 	db	0
 20807   0164BF  00                 	db	0
 20808   0164C0  00                 	db	0
 20809   0164C1  00                 	db	0
 20810   0164C2  64                 	db	100
 20811   0164C3  69                 	db	105
 20812   0164C4  73                 	db	115
 20813   0164C5  70                 	db	112
 20814   0164C6  6C                 	db	108
 20815   0164C7  61                 	db	97
 20816   0164C8  79                 	db	121
 20817   0164C9  73                 	db	115
 20818   0164CA  20                 	db	32
 20819   0164CB  33                 	db	51
 20820   0164CC  00                 	db	0
 20821   0164CD  00                 	db	0
 20822   0164CE  00                 	db	0
 20823   0164CF  00                 	db	0
 20824   0164D0  00                 	db	0
 20825   0164D1  00                 	db	0
 20826   0164D2  00                 	db	0
 20827   0164D3  00                 	db	0
 20828   0164D4  00                 	db	0
 20829   0164D5  00                 	db	0
 20830   0164D6  00                 	db	0
 20831   0164D7  00                 	db	0
 20832   0164D8  00                 	db	0
 20833   0164D9  00                 	db	0
 20834   0164DA  00                 	db	0
 20835   0164DB  00                 	db	0
 20836   0164DC  00                 	db	0
 20837   0164DD  00                 	db	0
 20838   0164DE  00                 	db	0
 20839   0164DF  00                 	db	0
 20840   0164E0  00                 	db	0
 20841   0164E1  00                 	db	0
 20842   0164E2  63                 	db	99
 20843   0164E3  6F                 	db	111
 20844   0164E4  6D                 	db	109
 20845   0164E5  6D                 	db	109
 20846   0164E6  61                 	db	97
 20847   0164E7  6E                 	db	110
 20848   0164E8  64                 	db	100
 20849   0164E9  73                 	db	115
 20850   0164EA  20                 	db	32
 20851   0164EB  34                 	db	52
 20852   0164EC  00                 	db	0
 20853   0164ED  00                 	db	0
 20854   0164EE  00                 	db	0
 20855   0164EF  00                 	db	0
 20856   0164F0  00                 	db	0
 20857   0164F1  00                 	db	0
 20858   0164F2  00                 	db	0
 20859   0164F3  00                 	db	0
 20860   0164F4  00                 	db	0
 20861   0164F5  00                 	db	0
 20862   0164F6  00                 	db	0
 20863   0164F7  00                 	db	0
 20864   0164F8  00                 	db	0
 20865   0164F9  00                 	db	0
 20866   0164FA  00                 	db	0
 20867   0164FB  00                 	db	0
 20868   0164FC  00                 	db	0
 20869   0164FD  00                 	db	0
 20870   0164FE  00                 	db	0
 20871   0164FF  00                 	db	0
 20872   016500  00                 	db	0
 20873   016501  00                 	db	0
 20874   016502  64                 	db	100
 20875   016503  69                 	db	105
 20876   016504  73                 	db	115
 20877   016505  70                 	db	112
 20878   016506  6C                 	db	108
 20879   016507  61                 	db	97
 20880   016508  79                 	db	121
 20881   016509  73                 	db	115
 20882   01650A  20                 	db	32
 20883   01650B  34                 	db	52
 20884   01650C  00                 	db	0
 20885   01650D  00                 	db	0
 20886   01650E  00                 	db	0
 20887   01650F  00                 	db	0
 20888   016510  00                 	db	0
 20889   016511  00                 	db	0
 20890   016512  00                 	db	0
 20891   016513  00                 	db	0
 20892   016514  00                 	db	0
 20893   016515  00                 	db	0
 20894   016516  00                 	db	0
 20895   016517  00                 	db	0
 20896   016518  00                 	db	0
 20897   016519  00                 	db	0
 20898   01651A  00                 	db	0
 20899   01651B  00                 	db	0
 20900   01651C  00                 	db	0
 20901   01651D  00                 	db	0
 20902   01651E  00                 	db	0
 20903   01651F  00                 	db	0
 20904   016520  00                 	db	0
 20905   016521  00                 	db	0
 20906                           
 20907                           	psect	mediumconst
 20908   00FB30                     __pmediumconst:
 20909                           	callstack 0
 20910   00FB30  00                 	db	0
 20911   00FB31                     _HC33:
 20912                           	callstack 0
 20913   00FB31  0000               	dw	0
 20914   00FB33  01                 	db	1
 20915   00FB34  01                 	db	1
 20916   00FB35  A5                 	db	165
 20917   00FB36  4B                 	db	75
 20918   00FB37  43                 	db	67
 20919   00FB38  4F                 	db	79
 20920   00FB39  4C                 	db	76
 20921   00FB3A  44                 	db	68
 20922   00FB3B  41                 	db	65
 20923   00FB3C  4F                 	db	79
 20924   00FB3D  4C                 	db	76
 20925   00FB3E  08                 	db	8
 20926   00FB3F  41                 	db	65
 20927   00FB40  02                 	db	2
 20928   00FB41  01                 	db	1
 20929   00FB42  01                 	db	1
 20930   00FB43  01                 	db	1
 20931   00FB44  37                 	db	55
 20932   00FB45  31                 	db	49
 20933   00FB46  02                 	db	2
 20934   00FB47  41                 	db	65
 20935   00FB48  02                 	db	2
 20936   00FB49  01                 	db	1
 20937   00FB4A  0001               	dw	1
 20938   00FB4C  0000               	dw	0
 20939   00FB4E  01                 	db	1
 20940   00FB4F  80                 	db	128
 20941   00FB50  29                 	db	41
 20942   00FB51  82                 	db	130
 20943   00FB52  00                 	db	0
 20944   00FB53  00                 	db	0
 20945   00FB54  21                 	db	33
 20946   00FB55  0000               	dw	0
 20947   00FB57  01                 	db	1
 20948   00FB58  01                 	db	1
 20949   00FB59  A5                 	db	165
 20950   00FB5A  4B                 	db	75
 20951   00FB5B  43                 	db	67
 20952   00FB5C  4F                 	db	79
 20953   00FB5D  4C                 	db	76
 20954   00FB5E  44                 	db	68
 20955   00FB5F  41                 	db	65
 20956   00FB60  4F                 	db	79
 20957   00FB61  4C                 	db	76
 20958   00FB62  08                 	db	8
 20959   00FB63  41                 	db	65
 20960   00FB64  02                 	db	2
 20961   00FB65  01                 	db	1
 20962   00FB66  01                 	db	1
 20963   00FB67  01                 	db	1
 20964   00FB68  32                 	db	50
 20965   00FB69  31                 	db	49
 20966   00FB6A  02                 	db	2
 20967   00FB6B  41                 	db	65
 20968   00FB6C  02                 	db	2
 20969   00FB6D  01                 	db	1
 20970   00FB6E  0001               	dw	1
 20971   00FB70  0000               	dw	0
 20972   00FB72  01                 	db	1
 20973   00FB73  80                 	db	128
 20974   00FB74  29                 	db	41
 20975   00FB75  82                 	db	130
 20976   00FB76  00                 	db	0
 20977   00FB77  00                 	db	0
 20978   00FB78  21                 	db	33
 20979   00FB79                     __end_of_HC33:
 20980                           	callstack 0
 20981   00FB79                     _msg0:
 20982                           	callstack 0
 20983   00FB79  4D                 	db	77
 20984   00FB7A  45                 	db	69
 20985   00FB7B  53                 	db	83
 20986   00FB7C  53                 	db	83
 20987   00FB7D  41                 	db	65
 20988   00FB7E  47                 	db	71
 20989   00FB7F  45                 	db	69
 20990   00FB80  20                 	db	32
 20991   00FB81  41                 	db	65
 20992   00FB82  6C                 	db	108
 20993   00FB83  6C                 	db	108
 20994   00FB84  20                 	db	32
 20995   00FB85  25                 	db	37
 20996   00FB86  64                 	db	100
 20997   00FB87  2C                 	db	44
 20998   00FB88  20                 	db	32
 20999   00FB89  52                 	db	82
 21000   00FB8A  65                 	db	101
 21001   00FB8B  61                 	db	97
 21002   00FB8C  64                 	db	100
 21003   00FB8D  20                 	db	32
 21004   00FB8E  25                 	db	37
 21005   00FB8F  64                 	db	100
 21006   00FB90  20                 	db	32
 21007   00FB91  46                 	db	70
 21008   00FB92  61                 	db	97
 21009   00FB93  69                 	db	105
 21010   00FB94  6C                 	db	108
 21011   00FB95  65                 	db	101
 21012   00FB96  64                 	db	100
 21013   00FB97  20                 	db	32
 21014   00FB98  25                 	db	37
 21015   00FB99  64                 	db	100
 21016   00FB9A  2C                 	db	44
 21017   00FB9B  20                 	db	32
 21018   00FB9C  54                 	db	84
 21019   00FB9D  72                 	db	114
 21020   00FB9E  61                 	db	97
 21021   00FB9F  6E                 	db	110
 21022   00FBA0  73                 	db	115
 21023   00FBA1  6D                 	db	109
 21024   00FBA2  69                 	db	105
 21025   00FBA3  74                 	db	116
 21026   00FBA4  20                 	db	32
 21027   00FBA5  25                 	db	37
 21028   00FBA6  64                 	db	100
 21029   00FBA7  20                 	db	32
 21030   00FBA8  46                 	db	70
 21031   00FBA9  61                 	db	97
 21032   00FBAA  69                 	db	105
 21033   00FBAB  6C                 	db	108
 21034   00FBAC  65                 	db	101
 21035   00FBAD  64                 	db	100
 21036   00FBAE  20                 	db	32
 21037   00FBAF  25                 	db	37
 21038   00FBB0  64                 	db	100
 21039   00FBB1  2C                 	db	44
 21040   00FBB2  20                 	db	32
 21041   00FBB3  43                 	db	67
 21042   00FBB4  68                 	db	104
 21043   00FBB5  65                 	db	101
 21044   00FBB6  63                 	db	99
 21045   00FBB7  6B                 	db	107
 21046   00FBB8  73                 	db	115
 21047   00FBB9  75                 	db	117
 21048   00FBBA  6D                 	db	109
 21049   00FBBB  20                 	db	32
 21050   00FBBC  65                 	db	101
 21051   00FBBD  72                 	db	114
 21052   00FBBE  72                 	db	114
 21053   00FBBF  6F                 	db	111
 21054   00FBC0  72                 	db	114
 21055   00FBC1  20                 	db	32
 21056   00FBC2  25                 	db	37
 21057   00FBC3  64                 	db	100
 21058   00FBC4  20                 	db	32
 21059   00FBC5  20                 	db	32
 21060   00FBC6  46                 	db	70
 21061   00FBC7  47                 	db	71
 21062   00FBC8  42                 	db	66
 21063   00FBC9  20                 	db	32
 21064   00FBCA  20                 	db	32
 21065   00FBCB  20                 	db	32
 21066   00FBCC  20                 	db	32
 21067   00FBCD  20                 	db	32
 21068   00FBCE  20                 	db	32
 21069   00FBCF  25                 	db	37
 21070   00FBD0  73                 	db	115
 21071   00FBD1  00                 	db	0
 21072   00FBD2                     __end_of_msg0:
 21073                           	callstack 0
 21074   00FBD2                     _msg1:
 21075                           	callstack 0
 21076   00FBD2  4F                 	db	79
 21077   00FBD3  4E                 	db	78
 21078   00FBD4  4C                 	db	76
 21079   00FBD5  49                 	db	73
 21080   00FBD6  4E                 	db	78
 21081   00FBD7  45                 	db	69
 21082   00FBD8  20                 	db	32
 21083   00FBD9  41                 	db	65
 21084   00FBDA  6C                 	db	108
 21085   00FBDB  6C                 	db	108
 21086   00FBDC  20                 	db	32
 21087   00FBDD  25                 	db	37
 21088   00FBDE  64                 	db	100
 21089   00FBDF  2C                 	db	44
 21090   00FBE0  20                 	db	32
 21091   00FBE1  52                 	db	82
 21092   00FBE2  65                 	db	101
 21093   00FBE3  61                 	db	97
 21094   00FBE4  64                 	db	100
 21095   00FBE5  20                 	db	32
 21096   00FBE6  25                 	db	37
 21097   00FBE7  64                 	db	100
 21098   00FBE8  20                 	db	32
 21099   00FBE9  46                 	db	70
 21100   00FBEA  61                 	db	97
 21101   00FBEB  69                 	db	105
 21102   00FBEC  6C                 	db	108
 21103   00FBED  65                 	db	101
 21104   00FBEE  64                 	db	100
 21105   00FBEF  20                 	db	32
 21106   00FBF0  25                 	db	37
 21107   00FBF1  64                 	db	100
 21108   00FBF2  2C                 	db	44
 21109   00FBF3  20                 	db	32
 21110   00FBF4  54                 	db	84
 21111   00FBF5  72                 	db	114
 21112   00FBF6  61                 	db	97
 21113   00FBF7  6E                 	db	110
 21114   00FBF8  73                 	db	115
 21115   00FBF9  6D                 	db	109
 21116   00FBFA  69                 	db	105
 21117   00FBFB  74                 	db	116
 21118   00FBFC  20                 	db	32
 21119   00FBFD  25                 	db	37
 21120   00FBFE  64                 	db	100
 21121   00FBFF  20                 	db	32
 21122   00FC00  46                 	db	70
 21123   00FC01  61                 	db	97
 21124   00FC02  69                 	db	105
 21125   00FC03  6C                 	db	108
 21126   00FC04  65                 	db	101
 21127   00FC05  64                 	db	100
 21128   00FC06  20                 	db	32
 21129   00FC07  25                 	db	37
 21130   00FC08  64                 	db	100
 21131   00FC09  2C                 	db	44
 21132   00FC0A  20                 	db	32
 21133   00FC0B  43                 	db	67
 21134   00FC0C  68                 	db	104
 21135   00FC0D  65                 	db	101
 21136   00FC0E  63                 	db	99
 21137   00FC0F  6B                 	db	107
 21138   00FC10  73                 	db	115
 21139   00FC11  75                 	db	117
 21140   00FC12  6D                 	db	109
 21141   00FC13  20                 	db	32
 21142   00FC14  65                 	db	101
 21143   00FC15  72                 	db	114
 21144   00FC16  72                 	db	114
 21145   00FC17  6F                 	db	111
 21146   00FC18  72                 	db	114
 21147   00FC19  20                 	db	32
 21148   00FC1A  25                 	db	37
 21149   00FC1B  64                 	db	100
 21150   00FC1C  20                 	db	32
 21151   00FC1D  20                 	db	32
 21152   00FC1E  46                 	db	70
 21153   00FC1F  47                 	db	71
 21154   00FC20  42                 	db	66
 21155   00FC21  20                 	db	32
 21156   00FC22  20                 	db	32
 21157   00FC23  20                 	db	32
 21158   00FC24  20                 	db	32
 21159   00FC25  20                 	db	32
 21160   00FC26  20                 	db	32
 21161   00FC27  25                 	db	37
 21162   00FC28  73                 	db	115
 21163   00FC29  00                 	db	0
 21164   00FC2A                     __end_of_msg1:
 21165                           	callstack 0
 21166   00FC2A                     _msg2:
 21167                           	callstack 0
 21168   00FC2A  43                 	db	67
 21169   00FC2B  4F                 	db	79
 21170   00FC2C  4D                 	db	77
 21171   00FC2D  4D                 	db	77
 21172   00FC2E  20                 	db	32
 21173   00FC2F  41                 	db	65
 21174   00FC30  6C                 	db	108
 21175   00FC31  6C                 	db	108
 21176   00FC32  20                 	db	32
 21177   00FC33  25                 	db	37
 21178   00FC34  64                 	db	100
 21179   00FC35  2C                 	db	44
 21180   00FC36  20                 	db	32
 21181   00FC37  52                 	db	82
 21182   00FC38  65                 	db	101
 21183   00FC39  61                 	db	97
 21184   00FC3A  64                 	db	100
 21185   00FC3B  20                 	db	32
 21186   00FC3C  25                 	db	37
 21187   00FC3D  64                 	db	100
 21188   00FC3E  20                 	db	32
 21189   00FC3F  46                 	db	70
 21190   00FC40  61                 	db	97
 21191   00FC41  69                 	db	105
 21192   00FC42  6C                 	db	108
 21193   00FC43  65                 	db	101
 21194   00FC44  64                 	db	100
 21195   00FC45  20                 	db	32
 21196   00FC46  25                 	db	37
 21197   00FC47  64                 	db	100
 21198   00FC48  2C                 	db	44
 21199   00FC49  20                 	db	32
 21200   00FC4A  54                 	db	84
 21201   00FC4B  72                 	db	114
 21202   00FC4C  61                 	db	97
 21203   00FC4D  6E                 	db	110
 21204   00FC4E  73                 	db	115
 21205   00FC4F  6D                 	db	109
 21206   00FC50  69                 	db	105
 21207   00FC51  74                 	db	116
 21208   00FC52  20                 	db	32
 21209   00FC53  25                 	db	37
 21210   00FC54  64                 	db	100
 21211   00FC55  20                 	db	32
 21212   00FC56  46                 	db	70
 21213   00FC57  61                 	db	97
 21214   00FC58  69                 	db	105
 21215   00FC59  6C                 	db	108
 21216   00FC5A  65                 	db	101
 21217   00FC5B  64                 	db	100
 21218   00FC5C  20                 	db	32
 21219   00FC5D  25                 	db	37
 21220   00FC5E  64                 	db	100
 21221   00FC5F  2C                 	db	44
 21222   00FC60  20                 	db	32
 21223   00FC61  43                 	db	67
 21224   00FC62  68                 	db	104
 21225   00FC63  65                 	db	101
 21226   00FC64  63                 	db	99
 21227   00FC65  6B                 	db	107
 21228   00FC66  73                 	db	115
 21229   00FC67  75                 	db	117
 21230   00FC68  6D                 	db	109
 21231   00FC69  20                 	db	32
 21232   00FC6A  65                 	db	101
 21233   00FC6B  72                 	db	114
 21234   00FC6C  72                 	db	114
 21235   00FC6D  6F                 	db	111
 21236   00FC6E  72                 	db	114
 21237   00FC6F  20                 	db	32
 21238   00FC70  25                 	db	37
 21239   00FC71  64                 	db	100
 21240   00FC72  20                 	db	32
 21241   00FC73  20                 	db	32
 21242   00FC74  46                 	db	70
 21243   00FC75  47                 	db	71
 21244   00FC76  42                 	db	66
 21245   00FC77  20                 	db	32
 21246   00FC78  20                 	db	32
 21247   00FC79  20                 	db	32
 21248   00FC7A  20                 	db	32
 21249   00FC7B  20                 	db	32
 21250   00FC7C  20                 	db	32
 21251   00FC7D  25                 	db	37
 21252   00FC7E  73                 	db	115
 21253   00FC7F  00                 	db	0
 21254   00FC80                     __end_of_msg2:
 21255                           	callstack 0
 21256   00FC80                     _msg99:
 21257                           	callstack 0
 21258   00FC80  55                 	db	85
 21259   00FC81  4E                 	db	78
 21260   00FC82  4B                 	db	75
 21261   00FC83  20                 	db	32
 21262   00FC84  46                 	db	70
 21263   00FC85  4F                 	db	79
 21264   00FC86  52                 	db	82
 21265   00FC87  4D                 	db	77
 21266   00FC88  41                 	db	65
 21267   00FC89  54                 	db	84
 21268   00FC8A  20                 	db	32
 21269   00FC8B  41                 	db	65
 21270   00FC8C  6C                 	db	108
 21271   00FC8D  6C                 	db	108
 21272   00FC8E  20                 	db	32
 21273   00FC8F  25                 	db	37
 21274   00FC90  64                 	db	100
 21275   00FC91  2C                 	db	44
 21276   00FC92  20                 	db	32
 21277   00FC93  52                 	db	82
 21278   00FC94  25                 	db	37
 21279   00FC95  64                 	db	100
 21280   00FC96  20                 	db	32
 21281   00FC97  46                 	db	70
 21282   00FC98  25                 	db	37
 21283   00FC99  64                 	db	100
 21284   00FC9A  2C                 	db	44
 21285   00FC9B  20                 	db	32
 21286   00FC9C  54                 	db	84
 21287   00FC9D  25                 	db	37
 21288   00FC9E  64                 	db	100
 21289   00FC9F  20                 	db	32
 21290   00FCA0  46                 	db	70
 21291   00FCA1  25                 	db	37
 21292   00FCA2  64                 	db	100
 21293   00FCA3  2C                 	db	44
 21294   00FCA4  20                 	db	32
 21295   00FCA5  43                 	db	67
 21296   00FCA6  25                 	db	37
 21297   00FCA7  64                 	db	100
 21298   00FCA8  20                 	db	32
 21299   00FCA9  46                 	db	70
 21300   00FCAA  47                 	db	71
 21301   00FCAB  42                 	db	66
 21302   00FCAC  20                 	db	32
 21303   00FCAD  20                 	db	32
 21304   00FCAE  20                 	db	32
 21305   00FCAF  20                 	db	32
 21306   00FCB0  20                 	db	32
 21307   00FCB1  20                 	db	32
 21308   00FCB2  25                 	db	37
 21309   00FCB3  73                 	db	115
 21310   00FCB4  20                 	db	32
 21311   00FCB5  20                 	db	32
 21312   00FCB6  20                 	db	32
 21313   00FCB7  00                 	db	0
 21314   00FCB8                     __end_of_msg99:
 21315                           	callstack 0
 21316   00389D                     _IVTADL         set	14493
 21317   00389E                     _IVTADH         set	14494
 21318   00389F                     _IVTADU         set	14495
 21319   0039A4                     _PIR4bits       set	14756
 21320   003998                     _PIE8bits       set	14744
 21321   0039A8                     _PIR8bits       set	14760
 21322   0039E6                     _NVMCON2        set	14822
 21323   0039E3                     _NVMDAT         set	14819
 21324   0039E0                     _NVMADRL        set	14816
 21325   0039E1                     _NVMADRH        set	14817
 21326   0039E5                     _NVMCON1bits    set	14821
 21327   0039F7                     _SCANPR         set	14839
 21328   0039F4                     _DMA2PR         set	14836
 21329   0039F3                     _DMA1PR         set	14835
 21330   0039F2                     _MAINPR         set	14834
 21331   0039F1                     _ISRPR          set	14833
 21332   003992                     _PIE2bits       set	14738
 21333   0039A2                     _PIR2bits       set	14754
 21334   003999                     _PIE9bits       set	14745
 21335   0039A9                     _PIR9bits       set	14761
 21336   003996                     _PIE6bits       set	14742
 21337   003993                     _PIE3bits       set	14739
 21338   0039C7                     _PMD7           set	14791
 21339   0039C6                     _PMD6           set	14790
 21340   0039C5                     _PMD5           set	14789
 21341   0039C4                     _PMD4           set	14788
 21342   0039C3                     _PMD3           set	14787
 21343   0039C2                     _PMD2           set	14786
 21344   0039C1                     _PMD1           set	14785
 21345   0039C0                     _PMD0           set	14784
 21346   0039DE                     _OSCTUNE        set	14814
 21347   0039DF                     _OSCFRQ         set	14815
 21348   0039DD                     _OSCEN          set	14813
 21349   0039DB                     _OSCCON3        set	14811
 21350   0039D9                     _OSCCON1        set	14809
 21351   003988                     _IPR8bits       set	14728
 21352   003989                     _IPR9bits       set	14729
 21353   003987                     _IPR7bits       set	14727
 21354   003985                     _IPR5bits       set	14725
 21355   003981                     _IPR1bits       set	14721
 21356   003983                     _IPR3bits       set	14723
 21357   003986                     _IPR6bits       set	14726
 21358   003982                     _IPR2bits       set	14722
 21359   003997                     _PIE7bits       set	14743
 21360   003995                     _PIE5bits       set	14741
 21361   003991                     _PIE1bits       set	14737
 21362   0039A7                     _PIR7bits       set	14759
 21363   0039A5                     _PIR5bits       set	14757
 21364   0039A1                     _PIR1bits       set	14753
 21365   01CEE0                     _PLLR           set	118496
 21366   003ADF                     _SPI1SDIPPS     set	15071
 21367   003A16                     _RC6PPS         set	14870
 21368   003A15                     _RC5PPS         set	14869
 21369   003A19                     _RD1PPS         set	14873
 21370   003A06                     _RA6PPS         set	14854
 21371   003A05                     _RA5PPS         set	14853
 21372   003A04                     _RA4PPS         set	14852
 21373   003ADE                     _SPI1SCKPPS     set	15070
 21374   003AE5                     _U1RXPPS        set	15077
 21375   003AC1                     _INT1PPS        set	15041
 21376   003AC2                     _INT2PPS        set	15042
 21377   003AC0                     _INT0PPS        set	15040
 21378   003A13                     _RC3PPS         set	14867
 21379   003A0E                     _RB6PPS         set	14862
 21380   003AE8                     _U2RXPPS        set	15080
 21381   003A93                     _SLRCONF        set	14995
 21382   003A83                     _SLRCONE        set	14979
 21383   003A73                     _SLRCOND        set	14963
 21384   003A63                     _SLRCONC        set	14947
 21385   003A53                     _SLRCONB        set	14931
 21386   003A43                     _SLRCONA        set	14915
 21387   003A72                     _ODCOND         set	14962
 21388   003A62                     _ODCONC         set	14946
 21389   003A52                     _ODCONB         set	14930
 21390   003A42                     _ODCONA         set	14914
 21391   003A92                     _ODCONF         set	14994
 21392   003A82                     _ODCONE         set	14978
 21393   003A61                     _WPUC           set	14945
 21394   003A41                     _WPUA           set	14913
 21395   003A51                     _WPUB           set	14929
 21396   003A81                     _WPUE           set	14977
 21397   003A91                     _WPUF           set	14993
 21398   003A71                     _WPUD           set	14961
 21399   003A40                     _ANSELA         set	14912
 21400   003A90                     _ANSELF         set	14992
 21401   003A80                     _ANSELE         set	14976
 21402   003A50                     _ANSELB         set	14928
 21403   003A60                     _ANSELC         set	14944
 21404   003A70                     _ANSELD         set	14960
 21405   003BD9                     _DMA2SSA        set	15321
 21406   003BF9                     _DMA1SSA        set	15353
 21407   003BCE                     _DMA2DSZ        set	15310
 21408   003BD7                     _DMA2SSZ        set	15319
 21409   003BD0                     _DMA2DSA        set	15312
 21410   003BEE                     _DMA1DSZ        set	15342
 21411   003BF7                     _DMA1SSZ        set	15351
 21412   003BF0                     _DMA1DSA        set	15344
 21413   003BFC                     _DMA1CON0bits   set	15356
 21414   003BFD                     _DMA1CON1bits   set	15357
 21415   003BDC                     _DMA2CON0       set	15324
 21416   003BDE                     _DMA2AIRQ       set	15326
 21417   003BDF                     _DMA2SIRQ       set	15327
 21418   003BDD                     _DMA2CON1       set	15325
 21419   003BFC                     _DMA1CON0       set	15356
 21420   003BFE                     _DMA1AIRQ       set	15358
 21421   003BFF                     _DMA1SIRQ       set	15359
 21422   003BFD                     _DMA1CON1       set	15357
 21423   003C74                     _CLC1CON        set	15476
 21424   003C7D                     _CLC1GLS3       set	15485
 21425   003C7C                     _CLC1GLS2       set	15484
 21426   003C7B                     _CLC1GLS1       set	15483
 21427   003C7A                     _CLC1GLS0       set	15482
 21428   003C79                     _CLC1SEL3       set	15481
 21429   003C78                     _CLC1SEL2       set	15480
 21430   003C77                     _CLC1SEL1       set	15479
 21431   003C76                     _CLC1SEL0       set	15478
 21432   003C75                     _CLC1POL        set	15477
 21433   003CE5                     _CLKRCON        set	15589
 21434   003CE6                     _CLKRCLK        set	15590
 21435   003CFD                     _MD1CARL        set	15613
 21436   003CFE                     _MD1CARH        set	15614
 21437   003CFC                     _MD1SRC         set	15612
 21438   003CFB                     _MD1CON1bits    set	15611
 21439   003CFA                     _MD1CON0bits    set	15610
 21440   003D1A                     _SPI1INTFbits   set	15642
 21441   003D10                     _SPI1RXB        set	15632
 21442   003D11                     _SPI1TXB        set	15633
 21443   003D12                     _SPI1TCNTL      set	15634
 21444   003D14                     _SPI1CON0       set	15636
 21445   003D1C                     _SPI1CLK        set	15644
 21446   003D19                     _SPI1BAUD       set	15641
 21447   003D16                     _SPI1CON2       set	15638
 21448   003D15                     _SPI1CON1       set	15637
 21449   003DD0                     _U2RXB          set	15824
 21450   003DD2                     _U2TXB          set	15826
 21451   003DE2                     _U2ERRIE        set	15842
 21452   003DE1                     _U2ERRIR        set	15841
 21453   003DE0                     _U2UIR          set	15840
 21454   003DDF                     _U2FIFO         set	15839
 21455   003DDE                     _U2BRGH         set	15838
 21456   003DDD                     _U2BRGL         set	15837
 21457   003DDC                     _U2CON2         set	15836
 21458   003DDB                     _U2CON1         set	15835
 21459   003DDA                     _U2CON0         set	15834
 21460   003DD8                     _U2P3L          set	15832
 21461   003DD6                     _U2P2L          set	15830
 21462   003DD4                     _U2P1L          set	15828
 21463   003DE8                     _U1RXB          set	15848
 21464   003DEA                     _U1TXB          set	15850
 21465   003DFA                     _U1ERRIE        set	15866
 21466   003DF9                     _U1ERRIR        set	15865
 21467   003DF8                     _U1UIR          set	15864
 21468   003DF7                     _U1FIFO         set	15863
 21469   003DF6                     _U1BRGH         set	15862
 21470   003DF5                     _U1BRGL         set	15861
 21471   003DF4                     _U1CON2         set	15860
 21472   003DF3                     _U1CON1         set	15859
 21473   003DF2                     _U1CON0         set	15858
 21474   003DF1                     _U1P3H          set	15857
 21475   003DF0                     _U1P3L          set	15856
 21476   003DEF                     _U1P2H          set	15855
 21477   003DEE                     _U1P2L          set	15854
 21478   003DED                     _U1P1H          set	15853
 21479   003DEC                     _U1P1L          set	15852
 21480   003EF8                     _ADCON0         set	16120
 21481   003EFF                     _ADCLK          set	16127
 21482   003EFE                     _ADACT          set	16126
 21483   003EFD                     _ADREF          set	16125
 21484   003EFC                     _ADSTAT         set	16124
 21485   003EFB                     _ADCON3         set	16123
 21486   003EFA                     _ADCON2         set	16122
 21487   003EF9                     _ADCON1         set	16121
 21488   003EF7                     _ADPREH         set	16119
 21489   003EF6                     _ADPREL         set	16118
 21490   003EF5                     _ADCAP          set	16117
 21491   003EF4                     _ADACQH         set	16116
 21492   003EF3                     _ADACQL         set	16115
 21493   003EF1                     _ADPCH          set	16113
 21494   003EEC                     _ADRPT          set	16108
 21495   003EEA                     _ADACCU         set	16106
 21496   003EE5                     _ADSTPTH        set	16101
 21497   003EE4                     _ADSTPTL        set	16100
 21498   003EE1                     _ADUTHH         set	16097
 21499   003EE0                     _ADUTHL         set	16096
 21500   003EDF                     _ADLTHH         set	16095
 21501   003EDE                     _ADLTHL         set	16094
 21502   003F5F                     _CCPTMRS1bits   set	16223
 21503   003F3E                     _NCO1CONbits    set	16190
 21504   003F3B                     _NCO1INCL       set	16187
 21505   003F3C                     _NCO1INCH       set	16188
 21506   003F3D                     _NCO1INCU       set	16189
 21507   003F38                     _NCO1ACCL       set	16184
 21508   003F39                     _NCO1ACCH       set	16185
 21509   003F3A                     _NCO1ACCU       set	16186
 21510   003F3F                     _NCO1CLK        set	16191
 21511   003F3E                     _NCO1CON        set	16190
 21512   003FBB                     _LATBbits       set	16315
 21513   003FBC                     _LATCbits       set	16316
 21514   003FBF                     _LATFbits       set	16319
 21515   003FBD                     _LATDbits       set	16317
 21516   003FCB                     _PORTBbits      set	16331
 21517   003FAC                     _T2CON          set	16300
 21518   003FAA                     _T2TMR          set	16298
 21519   003FAB                     _T2PR           set	16299
 21520   003FAF                     _T2RST          set	16303
 21521   003FAD                     _T2HLT          set	16301
 21522   003FAE                     _T2CLKCON       set	16302
 21523   003F60                     _PWM8DCL        set	16224
 21524   003F61                     _PWM8DCH        set	16225
 21525   003F62                     _PWM8CON        set	16226
 21526   003F9A                     _T5CONbits      set	16282
 21527   003F9A                     _T5CON          set	16282
 21528   003F98                     _TMR5L          set	16280
 21529   003F99                     _TMR5H          set	16281
 21530   003F9D                     _T5CLK          set	16285
 21531   003F9C                     _T5GATE         set	16284
 21532   003F9B                     _T5GCON         set	16283
 21533   003F94                     _T6CON          set	16276
 21534   003F92                     _T6TMR          set	16274
 21535   003F93                     _T6PR           set	16275
 21536   003F97                     _T6RST          set	16279
 21537   003F95                     _T6HLT          set	16277
 21538   003F96                     _T6CLKCON       set	16278
 21539   003FBE                     _LATEbits       set	16318
 21540   003FC5                     _TRISD          set	16325
 21541   003FC4                     _TRISC          set	16324
 21542   003FC3                     _TRISB          set	16323
 21543   003FC2                     _TRISA          set	16322
 21544   003FC7                     _TRISF          set	16327
 21545   003FC6                     _TRISE          set	16326
 21546   003FBC                     _LATC           set	16316
 21547   003FBB                     _LATB           set	16315
 21548   003FBF                     _LATF           set	16319
 21549   003FBA                     _LATA           set	16314
 21550   003FBD                     _LATD           set	16317
 21551   003FBE                     _LATE           set	16318
 21552   003FD4                     _IVTLOCKbits    set	16340
 21553   003FD4                     _IVTLOCK        set	16340
 21554   003FD2                     _INTCON0bits    set	16338
 21555   01FE97                     _GIE            set	130711
 21556   00FCB8                     STR_25:
 21557   00FCB8  52                 	db	82	;'R'
 21558   00FCB9  25                 	db	37
 21559   00FCBA  64                 	db	100	;'d'
 21560   00FCBB  20                 	db	32
 21561   00FCBC  25                 	db	37
 21562   00FCBD  64                 	db	100	;'d'
 21563   00FCBE  2C                 	db	44
 21564   00FCBF  20                 	db	32
 21565   00FCC0  54                 	db	84	;'T'
 21566   00FCC1  25                 	db	37
 21567   00FCC2  64                 	db	100	;'d'
 21568   00FCC3  20                 	db	32
 21569   00FCC4  25                 	db	37
 21570   00FCC5  64                 	db	100	;'d'
 21571   00FCC6  20                 	db	32
 21572   00FCC7  43                 	db	67	;'C'
 21573   00FCC8  25                 	db	37
 21574   00FCC9  64                 	db	100	;'d'
 21575   00FCCA  20                 	db	32
 21576   00FCCB  25                 	db	37
 21577   00FCCC  64                 	db	100	;'d'
 21578   00FCCD  20                 	db	32
 21579   00FCCE  20                 	db	32
 21580   00FCCF  20                 	db	32
 21581   00FCD0  20                 	db	32
 21582   00FCD1  20                 	db	32
 21583   00FCD2  20                 	db	32
 21584   00FCD3  23                 	db	35
 21585   00FCD4  00                 	db	0
 21586   00FCD5                     STR_61:
 21587   00FCD5  20                 	db	32
 21588   00FCD6  54                 	db	84	;'T'
 21589   00FCD7  65                 	db	101	;'e'
 21590   00FCD8  72                 	db	114	;'r'
 21591   00FCD9  6D                 	db	109	;'m'
 21592   00FCDA  69                 	db	105	;'i'
 21593   00FCDB  6E                 	db	110	;'n'
 21594   00FCDC  61                 	db	97	;'a'
 21595   00FCDD  6C                 	db	108	;'l'
 21596   00FCDE  20                 	db	32
 21597   00FCDF  25                 	db	37
 21598   00FCE0  64                 	db	100	;'d'
 21599   00FCE1  20                 	db	32
 21600   00FCE2  20                 	db	32
 21601   00FCE3  20                 	db	32
 21602   00FCE4  20                 	db	32
 21603   00FCE5  20                 	db	32
 21604   00FCE6  20                 	db	32
 21605   00FCE7  20                 	db	32
 21606   00FCE8  20                 	db	32
 21607   00FCE9  20                 	db	32
 21608   00FCEA  20                 	db	32
 21609   00FCEB  20                 	db	32
 21610   00FCEC  20                 	db	32
 21611   00FCED  20                 	db	32
 21612   00FCEE  00                 	db	0
 21613   00FCEF                     STR_35:
 21614   00FCEF  20                 	db	32
 21615   00FCF0  44                 	db	68	;'D'
 21616   00FCF1  65                 	db	101	;'e'
 21617   00FCF2  62                 	db	98	;'b'
 21618   00FCF3  75                 	db	117	;'u'
 21619   00FCF4  67                 	db	103	;'g'
 21620   00FCF5  20                 	db	32
 21621   00FCF6  54                 	db	84	;'T'
 21622   00FCF7  6F                 	db	111	;'o'
 21623   00FCF8  67                 	db	103	;'g'
 21624   00FCF9  67                 	db	103	;'g'
 21625   00FCFA  6C                 	db	108	;'l'
 21626   00FCFB  65                 	db	101	;'e'
 21627   00FCFC  20                 	db	32
 21628   00FCFD  20                 	db	32
 21629   00FCFE  20                 	db	32
 21630   00FCFF  20                 	db	32
 21631   00FD00  20                 	db	32
 21632   00FD01  20                 	db	32
 21633   00FD02  20                 	db	32
 21634   00FD03  20                 	db	32
 21635   00FD04  20                 	db	32
 21636   00FD05  20                 	db	32
 21637   00FD06  20                 	db	32
 21638   00FD07  20                 	db	32
 21639   00FD08  00                 	db	0
 21640   00FD09                     STR_34:
 21641   00FD09  20                 	db	32
 21642   00FD0A  4C                 	db	76	;'L'
 21643   00FD0B  6F                 	db	111	;'o'
 21644   00FD0C  67                 	db	103	;'g'
 21645   00FD0D  20                 	db	32
 21646   00FD0E  66                 	db	102	;'f'
 21647   00FD0F  69                 	db	105	;'i'
 21648   00FD10  6C                 	db	108	;'l'
 21649   00FD11  65                 	db	101	;'e'
 21650   00FD12  20                 	db	32
 21651   00FD13  72                 	db	114	;'r'
 21652   00FD14  65                 	db	101	;'e'
 21653   00FD15  73                 	db	115	;'s'
 21654   00FD16  65                 	db	101	;'e'
 21655   00FD17  74                 	db	116	;'t'
 21656   00FD18  20                 	db	32
 21657   00FD19  20                 	db	32
 21658   00FD1A  20                 	db	32
 21659   00FD1B  20                 	db	32
 21660   00FD1C  20                 	db	32
 21661   00FD1D  20                 	db	32
 21662   00FD1E  20                 	db	32
 21663   00FD1F  20                 	db	32
 21664   00FD20  20                 	db	32
 21665   00FD21  20                 	db	32
 21666   00FD22  00                 	db	0
 21667   00FD23                     STR_20:
 21668   00FD23  4C                 	db	76	;'L'
 21669   00FD24  4F                 	db	79	;'O'
 21670   00FD25  47                 	db	71	;'G'
 21671   00FD26  3A                 	db	58	;':'
 21672   00FD27  20                 	db	32
 21673   00FD28  55                 	db	85	;'U'
 21674   00FD29  25                 	db	37
 21675   00FD2A  64                 	db	100	;'d'
 21676   00FD2B  20                 	db	32
 21677   00FD2C  47                 	db	71	;'G'
 21678   00FD2D  25                 	db	37
 21679   00FD2E  64                 	db	100	;'d'
 21680   00FD2F  20                 	db	32
 21681   00FD30  25                 	db	37
 21682   00FD31  64                 	db	100	;'d'
 21683   00FD32  20                 	db	32
 21684   00FD33  25                 	db	37
 21685   00FD34  64                 	db	100	;'d'
 21686   00FD35  20                 	db	32
 21687   00FD36  20                 	db	32
 21688   00FD37  20                 	db	32
 21689   00FD38  20                 	db	32
 21690   00FD39  20                 	db	32
 21691   00FD3A  20                 	db	32
 21692   00FD3B  23                 	db	35
 21693   00FD3C  00                 	db	0
 21694   00FD3D                     STR_62:
 21695   00FD3D  20                 	db	32
 21696   00FD3E  43                 	db	67	;'C'
 21697   00FD3F  4D                 	db	77	;'M'
 21698   00FD40  44                 	db	68	;'D'
 21699   00FD41  20                 	db	32
 21700   00FD42  25                 	db	37
 21701   00FD43  63                 	db	99	;'c'
 21702   00FD44  20                 	db	32
 21703   00FD45  25                 	db	37
 21704   00FD46  63                 	db	99	;'c'
 21705   00FD47  20                 	db	32
 21706   00FD48  4C                 	db	76	;'L'
 21707   00FD49  65                 	db	101	;'e'
 21708   00FD4A  6E                 	db	110	;'n'
 21709   00FD4B  20                 	db	32
 21710   00FD4C  25                 	db	37
 21711   00FD4D  64                 	db	100	;'d'
 21712   00FD4E  20                 	db	32
 21713   00FD4F  20                 	db	32
 21714   00FD50  20                 	db	32
 21715   00FD51  20                 	db	32
 21716   00FD52  20                 	db	32
 21717   00FD53  20                 	db	32
 21718   00FD54  20                 	db	32
 21719   00FD55  00                 	db	0
 21720   00FD56                     STR_46:
 21721   00FD56  20                 	db	32
 21722   00FD57  4D                 	db	77	;'M'
 21723   00FD58  65                 	db	101	;'e'
 21724   00FD59  73                 	db	115	;'s'
 21725   00FD5A  67                 	db	103	;'g'
 21726   00FD5B  20                 	db	32
 21727   00FD5C  25                 	db	37
 21728   00FD5D  64                 	db	100	;'d'
 21729   00FD5E  20                 	db	32
 21730   00FD5F  53                 	db	83	;'S'
 21731   00FD60  74                 	db	116	;'t'
 21732   00FD61  61                 	db	97	;'a'
 21733   00FD62  63                 	db	99	;'c'
 21734   00FD63  6B                 	db	107	;'k'
 21735   00FD64  20                 	db	32
 21736   00FD65  25                 	db	37
 21737   00FD66  64                 	db	100	;'d'
 21738   00FD67  20                 	db	32
 21739   00FD68  20                 	db	32
 21740   00FD69  20                 	db	32
 21741   00FD6A  20                 	db	32
 21742   00FD6B  20                 	db	32
 21743   00FD6C  20                 	db	32
 21744   00FD6D  00                 	db	0
 21745   00FD6E                     STR_57:
 21746   00FD6E  20                 	db	32
 21747   00FD6F  4C                 	db	76	;'L'
 21748   00FD70  6F                 	db	111	;'o'
 21749   00FD71  61                 	db	97	;'a'
 21750   00FD72  64                 	db	100	;'d'
 21751   00FD73  2D                 	db	45
 21752   00FD74  6C                 	db	108	;'l'
 21753   00FD75  6F                 	db	111	;'o'
 21754   00FD76  63                 	db	99	;'c'
 21755   00FD77  6B                 	db	107	;'k'
 21756   00FD78  20                 	db	32
 21757   00FD79  6E                 	db	110	;'n'
 21758   00FD7A  75                 	db	117	;'u'
 21759   00FD7B  6D                 	db	109	;'m'
 21760   00FD7C  20                 	db	32
 21761   00FD7D  25                 	db	37
 21762   00FD7E  64                 	db	100	;'d'
 21763   00FD7F  20                 	db	32
 21764   00FD80  20                 	db	32
 21765   00FD81  20                 	db	32
 21766   00FD82  20                 	db	32
 21767   00FD83  20                 	db	32
 21768   00FD84  20                 	db	32
 21769   00FD85  00                 	db	0
 21770   00FD86                     STR_14:
 21771   00FD86  20                 	db	32
 21772   00FD87  53                 	db	83	;'S'
 21773   00FD88  25                 	db	37
 21774   00FD89  64                 	db	100	;'d'
 21775   00FD8A  46                 	db	70	;'F'
 21776   00FD8B  25                 	db	37
 21777   00FD8C  64                 	db	100	;'d'
 21778   00FD8D  20                 	db	32
 21779   00FD8E  23                 	db	35
 21780   00FD8F  20                 	db	32
 21781   00FD90  4F                 	db	79	;'O'
 21782   00FD91  4B                 	db	75	;'K'
 21783   00FD92  20                 	db	32
 21784   00FD93  25                 	db	37
 21785   00FD94  64                 	db	100	;'d'
 21786   00FD95  20                 	db	32
 21787   00FD96  20                 	db	32
 21788   00FD97  20                 	db	32
 21789   00FD98  20                 	db	32
 21790   00FD99  20                 	db	32
 21791   00FD9A  20                 	db	32
 21792   00FD9B  20                 	db	32
 21793   00FD9C  20                 	db	32
 21794   00FD9D  00                 	db	0
 21795   00FD9E                     STR_13:
 21796   00FD9E  20                 	db	32
 21797   00FD9F  53                 	db	83	;'S'
 21798   00FDA0  25                 	db	37
 21799   00FDA1  64                 	db	100	;'d'
 21800   00FDA2  46                 	db	70	;'F'
 21801   00FDA3  25                 	db	37
 21802   00FDA4  64                 	db	100	;'d'
 21803   00FDA5  20                 	db	32
 21804   00FDA6  23                 	db	35
 21805   00FDA7  20                 	db	32
 21806   00FDA8  4F                 	db	79	;'O'
 21807   00FDA9  4B                 	db	75	;'K'
 21808   00FDAA  51                 	db	81	;'Q'
 21809   00FDAB  25                 	db	37
 21810   00FDAC  64                 	db	100	;'d'
 21811   00FDAD  20                 	db	32
 21812   00FDAE  20                 	db	32
 21813   00FDAF  20                 	db	32
 21814   00FDB0  20                 	db	32
 21815   00FDB1  20                 	db	32
 21816   00FDB2  20                 	db	32
 21817   00FDB3  20                 	db	32
 21818   00FDB4  20                 	db	32
 21819   00FDB5  00                 	db	0
 21820   00FDB6                     STR_59:
 21821   00FDB6  20                 	db	32
 21822   00FDB7  44                 	db	68	;'D'
 21823   00FDB8  69                 	db	105	;'i'
 21824   00FDB9  73                 	db	115	;'s'
 21825   00FDBA  70                 	db	112	;'p'
 21826   00FDBB  6C                 	db	108	;'l'
 21827   00FDBC  61                 	db	97	;'a'
 21828   00FDBD  79                 	db	121	;'y'
 21829   00FDBE  20                 	db	32
 21830   00FDBF  6E                 	db	110	;'n'
 21831   00FDC0  75                 	db	117	;'u'
 21832   00FDC1  6D                 	db	109	;'m'
 21833   00FDC2  20                 	db	32
 21834   00FDC3  25                 	db	37
 21835   00FDC4  64                 	db	100	;'d'
 21836   00FDC5  20                 	db	32
 21837   00FDC6  20                 	db	32
 21838   00FDC7  20                 	db	32
 21839   00FDC8  20                 	db	32
 21840   00FDC9  20                 	db	32
 21841   00FDCA  20                 	db	32
 21842   00FDCB  00                 	db	0
 21843   00FDCC                     STR_47:
 21844   00FDCC  20                 	db	32
 21845   00FDCD  53                 	db	83	;'S'
 21846   00FDCE  25                 	db	37
 21847   00FDCF  64                 	db	100	;'d'
 21848   00FDD0  46                 	db	70	;'F'
 21849   00FDD1  25                 	db	37
 21850   00FDD2  64                 	db	100	;'d'
 21851   00FDD3  20                 	db	32
 21852   00FDD4  6C                 	db	108	;'l'
 21853   00FDD5  6F                 	db	111	;'o'
 21854   00FDD6  67                 	db	103	;'g'
 21855   00FDD7  20                 	db	32
 21856   00FDD8  20                 	db	32
 21857   00FDD9  20                 	db	32
 21858   00FDDA  20                 	db	32
 21859   00FDDB  25                 	db	37
 21860   00FDDC  64                 	db	100	;'d'
 21861   00FDDD  20                 	db	32
 21862   00FDDE  20                 	db	32
 21863   00FDDF  20                 	db	32
 21864   00FDE0  20                 	db	32
 21865   00FDE1  00                 	db	0
 21866   00FDE2                     STR_58:
 21867   00FDE2  20                 	db	32
 21868   00FDE3  53                 	db	83	;'S'
 21869   00FDE4  45                 	db	69	;'E'
 21870   00FDE5  51                 	db	81	;'Q'
 21871   00FDE6  55                 	db	85	;'U'
 21872   00FDE7  45                 	db	69	;'E'
 21873   00FDE8  4E                 	db	78	;'N'
 21874   00FDE9  43                 	db	67	;'C'
 21875   00FDEA  45                 	db	69	;'E'
 21876   00FDEB  20                 	db	32
 21877   00FDEC  25                 	db	37
 21878   00FDED  64                 	db	100	;'d'
 21879   00FDEE  20                 	db	32
 21880   00FDEF  20                 	db	32
 21881   00FDF0  20                 	db	32
 21882   00FDF1  20                 	db	32
 21883   00FDF2  20                 	db	32
 21884   00FDF3  20                 	db	32
 21885   00FDF4  20                 	db	32
 21886   00FDF5  20                 	db	32
 21887   00FDF6  00                 	db	0
 21888   00FDF7                     STR_36:
 21889   00FDF7  53                 	db	83	;'S'
 21890   00FDF8  61                 	db	97	;'a'
 21891   00FDF9  76                 	db	118	;'v'
 21892   00FDFA  65                 	db	101	;'e'
 21893   00FDFB  64                 	db	100	;'d'
 21894   00FDFC  20                 	db	32
 21895   00FDFD  53                 	db	83	;'S'
 21896   00FDFE  25                 	db	37
 21897   00FDFF  64                 	db	100	;'d'
 21898   00FE00  46                 	db	70	;'F'
 21899   00FE01  25                 	db	37
 21900   00FE02  64                 	db	100	;'d'
 21901   00FE03  20                 	db	32
 21902   00FE04  25                 	db	37
 21903   00FE05  64                 	db	100	;'d'
 21904   00FE06  20                 	db	32
 21905   00FE07  20                 	db	32
 21906   00FE08  20                 	db	32
 21907   00FE09  20                 	db	32
 21908   00FE0A  20                 	db	32
 21909   00FE0B  00                 	db	0
 21910   00FE0C                     STR_12:
 21911   00FE0C  20                 	db	32
 21912   00FE0D  53                 	db	83	;'S'
 21913   00FE0E  25                 	db	37
 21914   00FE0F  64                 	db	100	;'d'
 21915   00FE10  46                 	db	70	;'F'
 21916   00FE11  25                 	db	37
 21917   00FE12  64                 	db	100	;'d'
 21918   00FE13  20                 	db	32
 21919   00FE14  23                 	db	35
 21920   00FE15  20                 	db	32
 21921   00FE16  20                 	db	32
 21922   00FE17  20                 	db	32
 21923   00FE18  20                 	db	32
 21924   00FE19  20                 	db	32
 21925   00FE1A  20                 	db	32
 21926   00FE1B  20                 	db	32
 21927   00FE1C  20                 	db	32
 21928   00FE1D  20                 	db	32
 21929   00FE1E  20                 	db	32
 21930   00FE1F  20                 	db	32
 21931   00FE20  00                 	db	0
 21932   00FE21                     STR_11:
 21933   00FE21  20                 	db	32
 21934   00FE22  53                 	db	83	;'S'
 21935   00FE23  25                 	db	37
 21936   00FE24  64                 	db	100	;'d'
 21937   00FE25  46                 	db	70	;'F'
 21938   00FE26  25                 	db	37
 21939   00FE27  64                 	db	100	;'d'
 21940   00FE28  20                 	db	32
 21941   00FE29  45                 	db	69	;'E'
 21942   00FE2A  72                 	db	114	;'r'
 21943   00FE2B  72                 	db	114	;'r'
 21944   00FE2C  20                 	db	32
 21945   00FE2D  20                 	db	32
 21946   00FE2E  20                 	db	32
 21947   00FE2F  20                 	db	32
 21948   00FE30  20                 	db	32
 21949   00FE31  20                 	db	32
 21950   00FE32  20                 	db	32
 21951   00FE33  20                 	db	32
 21952   00FE34  20                 	db	32
 21953   00FE35  00                 	db	0
 21954   00FE36                     STR_23:
 21955   00FE36  45                 	db	69	;'E'
 21956   00FE37  71                 	db	113	;'q'
 21957   00FE38  75                 	db	117	;'u'
 21958   00FE39  69                 	db	105	;'i'
 21959   00FE3A  70                 	db	112	;'p'
 21960   00FE3B  20                 	db	32
 21961   00FE3C  74                 	db	116	;'t'
 21962   00FE3D  79                 	db	121	;'y'
 21963   00FE3E  70                 	db	112	;'p'
 21964   00FE3F  65                 	db	101	;'e'
 21965   00FE40  20                 	db	32
 21966   00FE41  25                 	db	37
 21967   00FE42  64                 	db	100	;'d'
 21968   00FE43  20                 	db	32
 21969   00FE44  20                 	db	32
 21970   00FE45  20                 	db	32
 21971   00FE46  20                 	db	32
 21972   00FE47  20                 	db	32
 21973   00FE48  20                 	db	32
 21974   00FE49  20                 	db	32
 21975   00FE4A  00                 	db	0
 21976   00FE4B                     STR_16:
 21977   00FE4B  48                 	db	72	;'H'
 21978   00FE4C  32                 	db	50	;'2'
 21979   00FE4D  35                 	db	53	;'5'
 21980   00FE4E  34                 	db	52	;'4'
 21981   00FE4F  20                 	db	32
 21982   00FE50  25                 	db	37
 21983   00FE51  64                 	db	100	;'d'
 21984   00FE52  2C                 	db	44
 21985   00FE53  20                 	db	32
 21986   00FE54  54                 	db	84	;'T'
 21987   00FE55  25                 	db	37
 21988   00FE56  6C                 	db	108	;'l'
 21989   00FE57  64                 	db	100	;'d'
 21990   00FE58  20                 	db	32
 21991   00FE59  20                 	db	32
 21992   00FE5A  20                 	db	32
 21993   00FE5B  20                 	db	32
 21994   00FE5C  20                 	db	32
 21995   00FE5D  20                 	db	32
 21996   00FE5E  20                 	db	32
 21997   00FE5F  00                 	db	0
 21998   00FE60                     STR_10:
 21999   00FE60  48                 	db	72	;'H'
 22000   00FE61  4F                 	db	79	;'O'
 22001   00FE62  53                 	db	83	;'S'
 22002   00FE63  54                 	db	84	;'T'
 22003   00FE64  3A                 	db	58	;':'
 22004   00FE65  20                 	db	32
 22005   00FE66  25                 	db	37
 22006   00FE67  6C                 	db	108	;'l'
 22007   00FE68  64                 	db	100	;'d'
 22008   00FE69  20                 	db	32
 22009   00FE6A  47                 	db	71	;'G'
 22010   00FE6B  25                 	db	37
 22011   00FE6C  64                 	db	100	;'d'
 22012   00FE6D  20                 	db	32
 22013   00FE6E  20                 	db	32
 22014   00FE6F  20                 	db	32
 22015   00FE70  20                 	db	32
 22016   00FE71  20                 	db	32
 22017   00FE72  20                 	db	32
 22018   00FE73  23                 	db	35
 22019   00FE74  00                 	db	0
 22020   00FE75                     STR_50:
 22021   00FE75  20                 	db	32
 22022   00FE76  53                 	db	83	;'S'
 22023   00FE77  32                 	db	50	;'2'
 22024   00FE78  46                 	db	70	;'F'
 22025   00FE79  34                 	db	52	;'4'
 22026   00FE7A  31                 	db	49	;'1'
 22027   00FE7B  20                 	db	32
 22028   00FE7C  23                 	db	35
 22029   00FE7D  25                 	db	37
 22030   00FE7E  63                 	db	99	;'c'
 22031   00FE7F  20                 	db	32
 22032   00FE80  20                 	db	32
 22033   00FE81  20                 	db	32
 22034   00FE82  20                 	db	32
 22035   00FE83  20                 	db	32
 22036   00FE84  20                 	db	32
 22037   00FE85  20                 	db	32
 22038   00FE86  20                 	db	32
 22039   00FE87  20                 	db	32
 22040   00FE88  00                 	db	0
 22041   00FE89                     STR_48:
 22042   00FE89  20                 	db	32
 22043   00FE8A  53                 	db	83	;'S'
 22044   00FE8B  74                 	db	116	;'t'
 22045   00FE8C  6F                 	db	111	;'o'
 22046   00FE8D  72                 	db	114	;'r'
 22047   00FE8E  65                 	db	101	;'e'
 22048   00FE8F  64                 	db	100	;'d'
 22049   00FE90  20                 	db	32
 22050   00FE91  23                 	db	35
 22051   00FE92  25                 	db	37
 22052   00FE93  64                 	db	100	;'d'
 22053   00FE94  20                 	db	32
 22054   00FE95  20                 	db	32
 22055   00FE96  20                 	db	32
 22056   00FE97  20                 	db	32
 22057   00FE98  20                 	db	32
 22058   00FE99  20                 	db	32
 22059   00FE9A  20                 	db	32
 22060   00FE9B  20                 	db	32
 22061   00FE9C  00                 	db	0
 22062   00FE9D                     STR_33:
 22063   00FE9D  20                 	db	32
 22064   00FE9E  54                 	db	84	;'T'
 22065   00FE9F  65                 	db	101	;'e'
 22066   00FEA0  72                 	db	114	;'r'
 22067   00FEA1  6D                 	db	109	;'m'
 22068   00FEA2  69                 	db	105	;'i'
 22069   00FEA3  6E                 	db	110	;'n'
 22070   00FEA4  61                 	db	97	;'a'
 22071   00FEA5  6C                 	db	108	;'l'
 22072   00FEA6  20                 	db	32
 22073   00FEA7  20                 	db	32
 22074   00FEA8  20                 	db	32
 22075   00FEA9  20                 	db	32
 22076   00FEAA  20                 	db	32
 22077   00FEAB  20                 	db	32
 22078   00FEAC  20                 	db	32
 22079   00FEAD  20                 	db	32
 22080   00FEAE  20                 	db	32
 22081   00FEAF  20                 	db	32
 22082   00FEB0  00                 	db	0
 22083   00FEB1                     STR_18:
 22084   00FEB1  50                 	db	80	;'P'
 22085   00FEB2  69                 	db	105	;'i'
 22086   00FEB3  6E                 	db	110	;'n'
 22087   00FEB4  67                 	db	103	;'g'
 22088   00FEB5  20                 	db	32
 22089   00FEB6  50                 	db	80	;'P'
 22090   00FEB7  25                 	db	37
 22091   00FEB8  64                 	db	100	;'d'
 22092   00FEB9  20                 	db	32
 22093   00FEBA  52                 	db	82	;'R'
 22094   00FEBB  54                 	db	84	;'T'
 22095   00FEBC  4F                 	db	79	;'O'
 22096   00FEBD  20                 	db	32
 22097   00FEBE  25                 	db	37
 22098   00FEBF  64                 	db	100	;'d'
 22099   00FEC0  20                 	db	32
 22100   00FEC1  20                 	db	32
 22101   00FEC2  20                 	db	32
 22102   00FEC3  20                 	db	32
 22103   00FEC4  00                 	db	0
 22104   00FEC5                     STR_63:
 22105   00FEC5  20                 	db	32
 22106   00FEC6  20                 	db	32
 22107   00FEC7  20                 	db	32
 22108   00FEC8  20                 	db	32
 22109   00FEC9  20                 	db	32
 22110   00FECA  20                 	db	32
 22111   00FECB  20                 	db	32
 22112   00FECC  20                 	db	32
 22113   00FECD  20                 	db	32
 22114   00FECE  20                 	db	32
 22115   00FECF  20                 	db	32
 22116   00FED0  20                 	db	32
 22117   00FED1  20                 	db	32
 22118   00FED2  20                 	db	32
 22119   00FED3  20                 	db	32
 22120   00FED4  20                 	db	32
 22121   00FED5  20                 	db	32
 22122   00FED6  20                 	db	32
 22123   00FED7  00                 	db	0
 22124   00FED8                     STR_39:
 22125   00FED8  48                 	db	72	;'H'
 22126   00FED9  45                 	db	69	;'E'
 22127   00FEDA  4C                 	db	76	;'L'
 22128   00FEDB  50                 	db	80	;'P'
 22129   00FEDC  20                 	db	32
 22130   00FEDD  25                 	db	37
 22131   00FEDE  73                 	db	115	;'s'
 22132   00FEDF  20                 	db	32
 22133   00FEE0  20                 	db	32
 22134   00FEE1  20                 	db	32
 22135   00FEE2  20                 	db	32
 22136   00FEE3  20                 	db	32
 22137   00FEE4  20                 	db	32
 22138   00FEE5  20                 	db	32
 22139   00FEE6  20                 	db	32
 22140   00FEE7  20                 	db	32
 22141   00FEE8  20                 	db	32
 22142   00FEE9  20                 	db	32
 22143   00FEEA  00                 	db	0
 22144   00FEEB                     STR_56:
 22145   00FEEB  44                 	db	68	;'D'
 22146   00FEEC  49                 	db	73	;'I'
 22147   00FEED  53                 	db	83	;'S'
 22148   00FEEE  50                 	db	80	;'P'
 22149   00FEEF  4C                 	db	76	;'L'
 22150   00FEF0  41                 	db	65	;'A'
 22151   00FEF1  59                 	db	89	;'Y'
 22152   00FEF2  20                 	db	32
 22153   00FEF3  25                 	db	37
 22154   00FEF4  73                 	db	115	;'s'
 22155   00FEF5  20                 	db	32
 22156   00FEF6  20                 	db	32
 22157   00FEF7  20                 	db	32
 22158   00FEF8  20                 	db	32
 22159   00FEF9  20                 	db	32
 22160   00FEFA  20                 	db	32
 22161   00FEFB  20                 	db	32
 22162   00FEFC  20                 	db	32
 22163   00FEFD  00                 	db	0
 22164   00FEFE                     STR_21:
 22165   00FEFE  53                 	db	83	;'S'
 22166   00FEFF  25                 	db	37
 22167   00FF00  64                 	db	100	;'d'
 22168   00FF01  46                 	db	70	;'F'
 22169   00FF02  25                 	db	37
 22170   00FF03  64                 	db	100	;'d'
 22171   00FF04  20                 	db	32
 22172   00FF05  23                 	db	35
 22173   00FF06  25                 	db	37
 22174   00FF07  6C                 	db	108	;'l'
 22175   00FF08  64                 	db	100	;'d'
 22176   00FF09  20                 	db	32
 22177   00FF0A  20                 	db	32
 22178   00FF0B  20                 	db	32
 22179   00FF0C  20                 	db	32
 22180   00FF0D  20                 	db	32
 22181   00FF0E  20                 	db	32
 22182   00FF0F  20                 	db	32
 22183   00FF10  00                 	db	0
 22184   00FF11                     STR_53:
 22185   00FF11  20                 	db	32
 22186   00FF12  4F                 	db	79	;'O'
 22187   00FF13  70                 	db	112	;'p'
 22188   00FF14  65                 	db	101	;'e'
 22189   00FF15  6E                 	db	110	;'n'
 22190   00FF16  20                 	db	32
 22191   00FF17  4C                 	db	76	;'L'
 22192   00FF18  4C                 	db	76	;'L'
 22193   00FF19  20                 	db	32
 22194   00FF1A  20                 	db	32
 22195   00FF1B  20                 	db	32
 22196   00FF1C  20                 	db	32
 22197   00FF1D  20                 	db	32
 22198   00FF1E  20                 	db	32
 22199   00FF1F  20                 	db	32
 22200   00FF20  20                 	db	32
 22201   00FF21  20                 	db	32
 22202   00FF22  00                 	db	0
 22203   00FF23                     STR_51:
 22204   00FF23  20                 	db	32
 22205   00FF24  50                 	db	80	;'P'
 22206   00FF25  75                 	db	117	;'u'
 22207   00FF26  6D                 	db	109	;'m'
 22208   00FF27  70                 	db	112	;'p'
 22209   00FF28  20                 	db	32
 22210   00FF29  4C                 	db	76	;'L'
 22211   00FF2A  4C                 	db	76	;'L'
 22212   00FF2B  20                 	db	32
 22213   00FF2C  20                 	db	32
 22214   00FF2D  20                 	db	32
 22215   00FF2E  20                 	db	32
 22216   00FF2F  20                 	db	32
 22217   00FF30  20                 	db	32
 22218   00FF31  20                 	db	32
 22219   00FF32  20                 	db	32
 22220   00FF33  20                 	db	32
 22221   00FF34  00                 	db	0
 22222   00FF35                     STR_49:
 22223   00FF35  20                 	db	32
 22224   00FF36  52                 	db	82	;'R'
 22225   00FF37  65                 	db	101	;'e'
 22226   00FF38  61                 	db	97	;'a'
 22227   00FF39  64                 	db	100	;'d'
 22228   00FF3A  79                 	db	121	;'y'
 22229   00FF3B  20                 	db	32
 22230   00FF3C  4C                 	db	76	;'L'
 22231   00FF3D  4C                 	db	76	;'L'
 22232   00FF3E  20                 	db	32
 22233   00FF3F  20                 	db	32
 22234   00FF40  20                 	db	32
 22235   00FF41  20                 	db	32
 22236   00FF42  20                 	db	32
 22237   00FF43  20                 	db	32
 22238   00FF44  20                 	db	32
 22239   00FF45  20                 	db	32
 22240   00FF46  00                 	db	0
 22241   00FF47                     STR_15:
 22242   00FF47  45                 	db	69	;'E'
 22243   00FF48  25                 	db	37
 22244   00FF49  64                 	db	100	;'d'
 22245   00FF4A  20                 	db	32
 22246   00FF4B  41                 	db	65	;'A'
 22247   00FF4C  25                 	db	37
 22248   00FF4D  64                 	db	100	;'d'
 22249   00FF4E  20                 	db	32
 22250   00FF4F  54                 	db	84	;'T'
 22251   00FF50  25                 	db	37
 22252   00FF51  64                 	db	100	;'d'
 22253   00FF52  20                 	db	32
 22254   00FF53  47                 	db	71	;'G'
 22255   00FF54  25                 	db	37
 22256   00FF55  64                 	db	100	;'d'
 22257   00FF56  20                 	db	32
 22258   00FF57  23                 	db	35
 22259   00FF58  00                 	db	0
 22260   00FF59                     STR_8:
 22261   00FF59  20                 	db	32
 22262   00FF5A  56                 	db	86	;'V'
 22263   00FF5B  54                 	db	84	;'T'
 22264   00FF5C  45                 	db	69	;'E'
 22265   00FF5D  52                 	db	82	;'R'
 22266   00FF5E  4D                 	db	77	;'M'
 22267   00FF5F  20                 	db	32
 22268   00FF60  23                 	db	35
 22269   00FF61  32                 	db	50	;'2'
 22270   00FF62  20                 	db	32
 22271   00FF63  20                 	db	32
 22272   00FF64  20                 	db	32
 22273   00FF65  20                 	db	32
 22274   00FF66  20                 	db	32
 22275   00FF67  20                 	db	32
 22276   00FF68  20                 	db	32
 22277   00FF69  00                 	db	0
 22278   00FF6A                     STR_5:
 22279   00FF6A  20                 	db	32
 22280   00FF6B  53                 	db	83	;'S'
 22281   00FF6C  45                 	db	69	;'E'
 22282   00FF6D  51                 	db	81	;'Q'
 22283   00FF6E  55                 	db	85	;'U'
 22284   00FF6F  45                 	db	69	;'E'
 22285   00FF70  4E                 	db	78	;'N'
 22286   00FF71  43                 	db	67	;'C'
 22287   00FF72  45                 	db	69	;'E'
 22288   00FF73  20                 	db	32
 22289   00FF74  54                 	db	84	;'T'
 22290   00FF75  45                 	db	69	;'E'
 22291   00FF76  53                 	db	83	;'S'
 22292   00FF77  54                 	db	84	;'T'
 22293   00FF78  20                 	db	32
 22294   00FF79  20                 	db	32
 22295   00FF7A  00                 	db	0
 22296   00FF7B                     STR_1:
 22297   00FF7B  20                 	db	32
 22298   00FF7C  52                 	db	82	;'R'
 22299   00FF7D  56                 	db	86	;'V'
 22300   00FF7E  49                 	db	73	;'I'
 22301   00FF7F  20                 	db	32
 22302   00FF80  48                 	db	72	;'H'
 22303   00FF81  4F                 	db	79	;'O'
 22304   00FF82  53                 	db	83	;'S'
 22305   00FF83  54                 	db	84	;'T'
 22306   00FF84  20                 	db	32
 22307   00FF85  54                 	db	84	;'T'
 22308   00FF86  45                 	db	69	;'E'
 22309   00FF87  53                 	db	83	;'S'
 22310   00FF88  54                 	db	84	;'T'
 22311   00FF89  45                 	db	69	;'E'
 22312   00FF8A  52                 	db	82	;'R'
 22313   00FF8B  00                 	db	0
 22314   00FF8C                     STR_9:
 22315   00FF8C  48                 	db	72	;'H'
 22316   00FF8D  32                 	db	50	;'2'
 22317   00FF8E  35                 	db	53	;'5'
 22318   00FF8F  34                 	db	52	;'4'
 22319   00FF90  20                 	db	32
 22320   00FF91  25                 	db	37
 22321   00FF92  64                 	db	100	;'d'
 22322   00FF93  2C                 	db	44
 22323   00FF94  20                 	db	32
 22324   00FF95  54                 	db	84	;'T'
 22325   00FF96  25                 	db	37
 22326   00FF97  6C                 	db	108	;'l'
 22327   00FF98  64                 	db	100	;'d'
 22328   00FF99  20                 	db	32
 22329   00FF9A  20                 	db	32
 22330   00FF9B  00                 	db	0
 22331   00FF9C                     STR_43:
 22332   00FF9C  76                 	db	118	;'v'
 22333   00FF9D  74                 	db	116	;'t'
 22334   00FF9E  65                 	db	101	;'e'
 22335   00FF9F  72                 	db	114	;'r'
 22336   00FFA0  6D                 	db	109	;'m'
 22337   00FFA1  20                 	db	32
 22338   00FFA2  25                 	db	37
 22339   00FFA3  78                 	db	120	;'x'
 22340   00FFA4  3A                 	db	58	;':'
 22341   00FFA5  25                 	db	37
 22342   00FFA6  78                 	db	120	;'x'
 22343   00FFA7  20                 	db	32
 22344   00FFA8  20                 	db	32
 22345   00FFA9  20                 	db	32
 22346   00FFAA  00                 	db	0
 22347   00FFAB                     STR_4:
 22348   00FFAB  20                 	db	32
 22349   00FFAC  4E                 	db	78	;'N'
 22350   00FFAD  53                 	db	83	;'S'
 22351   00FFAE  41                 	db	65	;'A'
 22352   00FFAF  53                 	db	83	;'S'
 22353   00FFB0  50                 	db	80	;'P'
 22354   00FFB1  4F                 	db	79	;'O'
 22355   00FFB2  4F                 	db	79	;'O'
 22356   00FFB3  4B                 	db	75	;'K'
 22357   00FFB4  20                 	db	32
 22358   00FFB5  20                 	db	32
 22359   00FFB6  20                 	db	32
 22360   00FFB7  20                 	db	32
 22361   00FFB8  20                 	db	32
 22362   00FFB9  00                 	db	0
 22363   00FFBA                     STR_2:
 22364   00FFBA  20                 	db	32
 22365   00FFBB  56                 	db	86	;'V'
 22366   00FFBC  65                 	db	101	;'e'
 22367   00FFBD  72                 	db	114	;'r'
 22368   00FFBE  73                 	db	115	;'s'
 22369   00FFBF  69                 	db	105	;'i'
 22370   00FFC0  6F                 	db	111	;'o'
 22371   00FFC1  6E                 	db	110	;'n'
 22372   00FFC2  20                 	db	32
 22373   00FFC3  25                 	db	37
 22374   00FFC4  73                 	db	115	;'s'
 22375   00FFC5  20                 	db	32
 22376   00FFC6  20                 	db	32
 22377   00FFC7  20                 	db	32
 22378   00FFC8  00                 	db	0
 22379   00FFC9                     STR_37:
 22380   00FFC9  44                 	db	68	;'D'
 22381   00FFCA  65                 	db	101	;'e'
 22382   00FFCB  63                 	db	99	;'c'
 22383   00FFCC  20                 	db	32
 22384   00FFCD  31                 	db	49	;'1'
 22385   00FFCE  37                 	db	55	;'7'
 22386   00FFCF  20                 	db	32
 22387   00FFD0  32                 	db	50	;'2'
 22388   00FFD1  30                 	db	48	;'0'
 22389   00FFD2  32                 	db	50	;'2'
 22390   00FFD3  34                 	db	52	;'4'
 22391   00FFD4  00                 	db	0
 22392   00FFD5                     STR_41:
 22393   00FFD5  25                 	db	37
 22394   00FFD6  73                 	db	115	;'s'
 22395   00FFD7  20                 	db	32
 22396   00FFD8  20                 	db	32
 22397   00FFD9  20                 	db	32
 22398   00FFDA  20                 	db	32
 22399   00FFDB  20                 	db	32
 22400   00FFDC  20                 	db	32
 22401   00FFDD  20                 	db	32
 22402   00FFDE  00                 	db	0
 22403   00FFDF                     STR_38:
 22404   00FFDF  30                 	db	48	;'0'
 22405   00FFE0  39                 	db	57	;'9'
 22406   00FFE1  3A                 	db	58	;':'
 22407   00FFE2  31                 	db	49	;'1'
 22408   00FFE3  38                 	db	56	;'8'
 22409   00FFE4  3A                 	db	58	;':'
 22410   00FFE5  31                 	db	49	;'1'
 22411   00FFE6  30                 	db	48	;'0'
 22412   00FFE7  00                 	db	0
 22413   00FFE8                     STR_69:
 22414   00FFE8  28                 	db	40
 22415   00FFE9  6E                 	db	110	;'n'
 22416   00FFEA  75                 	db	117	;'u'
 22417   00FFEB  6C                 	db	108	;'l'
 22418   00FFEC  6C                 	db	108	;'l'
 22419   00FFED  29                 	db	41
 22420   00FFEE  00                 	db	0
 22421   00FFEF                     STR_3:
 22422   00FFEF  31                 	db	49	;'1'
 22423   00FFF0  2E                 	db	46
 22424   00FFF1  37                 	db	55	;'7'
 22425   00FFF2  30                 	db	48	;'0'
 22426   00FFF3  41                 	db	65	;'A'
 22427   00FFF4  00                 	db	0
 22428   00FFF5                     STR_22:
 22429   00FFF5  4F                 	db	79	;'O'
 22430   00FFF6  4B                 	db	75	;'K'
 22431   00FFF7  20                 	db	32
 22432   00FFF8  00                 	db	0
 22433   00FFF9                     STR_27:
 22434   00FFF9  25                 	db	37
 22435   00FFFA  63                 	db	99	;'c'
 22436   00FFFB  00                 	db	0
 22437   00FFFC                     STR_26:
 22438   00FFFC  25                 	db	37
 22439   00FFFD  73                 	db	115	;'s'
 22440   00FFFE  00                 	db	0
 22441   00FFFC                     STR_67          equ	STR_26
 22442   00FFFC                     STR_68          equ	STR_26
 22443   00FFF9                     STR_28          equ	STR_27
 22444   00FFEF                     STR_7           equ	STR_3
 22445   00FFEF                     STR_29          equ	STR_3
 22446   00FFEF                     STR_30          equ	STR_3
 22447   00FFEF                     STR_31          equ	STR_3
 22448   00FFEF                     STR_32          equ	STR_3
 22449   00FE60                     STR_17          equ	STR_10
 22450   00FD23                     STR_24          equ	STR_20
 22451   00FF9C                     STR_44          equ	STR_43
 22452   00FF9C                     STR_45          equ	STR_43
 22453   00FFBA                     STR_6           equ	STR_2
 22454   00FFD5                     STR_42          equ	STR_41
 22455   00FE4B                     STR_19          equ	STR_16
 22456   00FDE2                     STR_60          equ	STR_58
 22457   00FE75                     STR_52          equ	STR_50
 22458   00FE75                     STR_54          equ	STR_50
 22459   00FED8                     STR_40          equ	STR_39
 22460   00FED8                     STR_55          equ	STR_39
 22461   00FEC5                     STR_64          equ	STR_63
 22462   00FEC5                     STR_65          equ	STR_63
 22463   00FEC5                     STR_66          equ	STR_63
 22464   00FFFF  00                 	db	0	; dummy byte at the end
 22465   000003                     __activetblptr  equ	3
 22466                           
 22467                           ; #config settings
 22468                           
 22469                           	psect	cinit
 22470   0159A4                     __pcinit:
 22471                           	callstack 0
 22472   0159A4                     start_initialization:
 22473                           	callstack 0
 22474   0159A4                     __initialization:
 22475                           	callstack 0
 22476                           
 22477                           ; Initialize objects allocated to BIGRAM (956 bytes)
 22478                           ; load TBLPTR registers with __pidataBIGRAM
 22479   0159A4  0E7A               	movlw	low __pidataBIGRAM
 22480   0159A6  6EF6               	movwf	tblptrl,c
 22481   0159A8  0E32               	movlw	high __pidataBIGRAM
 22482   0159AA  6EF7               	movwf	tblptrh,c
 22483   0159AC  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
 22484   0159AE  6EF8               	movwf	tblptru,c
 22485   0159B0  EE03  F01A         	lfsr	0,__pdataBIGRAM
 22486   0159B4  EE20 F3BC          	lfsr	2,956
 22487   0159B8                     copy_data0:
 22488   0159B8  0009               	tblrd		*+
 22489   0159BA  006F FFD7 FFEE     	movff	tablat,postinc0
 22490   0159C0  50DD               	movf	postdec2,w,c
 22491   0159C2  50D9               	movf	fsr2l,w,c
 22492   0159C4  E1F9               	bnz	copy_data0
 22493   0159C6  50DA               	movf	fsr2h,w,c
 22494   0159C8  E1F7               	bnz	copy_data0
 22495                           
 22496                           ; Initialize objects allocated to BANK6 (256 bytes)
 22497                           ; load TBLPTR registers with __pidataBANK6
 22498   0159CA  0E22               	movlw	low __pidataBANK6
 22499   0159CC  6EF6               	movwf	tblptrl,c
 22500   0159CE  0E64               	movlw	high __pidataBANK6
 22501   0159D0  6EF7               	movwf	tblptrh,c
 22502   0159D2  0E01               	movlw	low (__pidataBANK6 shr (0+16))
 22503   0159D4  6EF8               	movwf	tblptru,c
 22504   0159D6  EE01  F200         	lfsr	0,__pdataBANK6
 22505   0159DA  EE20 F100          	lfsr	2,256
 22506   0159DE                     copy_data1:
 22507   0159DE  0009               	tblrd		*+
 22508   0159E0  006F FFD7 FFEE     	movff	tablat,postinc0
 22509   0159E6  50DD               	movf	postdec2,w,c
 22510   0159E8  50D9               	movf	fsr2l,w,c
 22511   0159EA  E1F9               	bnz	copy_data1
 22512   0159EC  50DA               	movf	fsr2h,w,c
 22513   0159EE  E1F7               	bnz	copy_data1
 22514                           
 22515                           ; Initialize objects allocated to BANK2 (59 bytes)
 22516                           ; load TBLPTR registers with __pidataBANK2
 22517   0159F0  0E40               	movlw	low __pidataBANK2
 22518   0159F2  6EF6               	movwf	tblptrl,c
 22519   0159F4  0E7A               	movlw	high __pidataBANK2
 22520   0159F6  6EF7               	movwf	tblptrh,c
 22521   0159F8  0E01               	movlw	low (__pidataBANK2 shr (0+16))
 22522   0159FA  6EF8               	movwf	tblptru,c
 22523   0159FC  EE00  F2C3         	lfsr	0,__pdataBANK2
 22524   015A00  EE20 F03B          	lfsr	2,59
 22525   015A04                     copy_data2:
 22526   015A04  0009               	tblrd		*+
 22527   015A06  006F FFD7 FFEE     	movff	tablat,postinc0
 22528   015A0C  50DD               	movf	postdec2,w,c
 22529   015A0E  50D9               	movf	fsr2l,w,c
 22530   015A10  E1F9               	bnz	copy_data2
 22531                           
 22532                           ; Initialize objects allocated to BANK1 (191 bytes)
 22533                           ; load TBLPTR registers with __pidataBANK1
 22534   015A12  0E9E               	movlw	low __pidataBANK1
 22535   015A14  6EF6               	movwf	tblptrl,c
 22536   015A16  0E6A               	movlw	high __pidataBANK1
 22537   015A18  6EF7               	movwf	tblptrh,c
 22538   015A1A  0E01               	movlw	low (__pidataBANK1 shr (0+16))
 22539   015A1C  6EF8               	movwf	tblptru,c
 22540   015A1E  EE00  F100         	lfsr	0,__pdataBANK1
 22541   015A22  EE20 F0BF          	lfsr	2,191
 22542   015A26                     copy_data3:
 22543   015A26  0009               	tblrd		*+
 22544   015A28  006F FFD7 FFEE     	movff	tablat,postinc0
 22545   015A2E  50DD               	movf	postdec2,w,c
 22546   015A30  50D9               	movf	fsr2l,w,c
 22547   015A32  E1F9               	bnz	copy_data3
 22548                           
 22549                           ; Initialize objects allocated to BANK0 (53 bytes)
 22550                           ; load TBLPTR registers with __pidataBANK0
 22551   015A34  0E5A               	movlw	low __pidataBANK0
 22552   015A36  6EF6               	movwf	tblptrl,c
 22553   015A38  0E7B               	movlw	high __pidataBANK0
 22554   015A3A  6EF7               	movwf	tblptrh,c
 22555   015A3C  0E01               	movlw	low (__pidataBANK0 shr (0+16))
 22556   015A3E  6EF8               	movwf	tblptru,c
 22557   015A40  EE00  F0C0         	lfsr	0,__pdataBANK0
 22558   015A44  EE20 F035          	lfsr	2,53
 22559   015A48                     copy_data4:
 22560   015A48  0009               	tblrd		*+
 22561   015A4A  006F FFD7 FFEE     	movff	tablat,postinc0
 22562   015A50  50DD               	movf	postdec2,w,c
 22563   015A52  50D9               	movf	fsr2l,w,c
 22564   015A54  E1F9               	bnz	copy_data4
 22565                           
 22566                           ; Initialize objects allocated to COMRAM (5 bytes)
 22567                           ; load TBLPTR registers with __pidataCOMRAM
 22568   015A56  0EA6               	movlw	low __pidataCOMRAM
 22569   015A58  6EF6               	movwf	tblptrl,c
 22570   015A5A  0E82               	movlw	high __pidataCOMRAM
 22571   015A5C  6EF7               	movwf	tblptrh,c
 22572   015A5E  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
 22573   015A60  6EF8               	movwf	tblptru,c
 22574   015A62  EE00  F04F         	lfsr	0,__pdataCOMRAM
 22575   015A66  EE20 F005          	lfsr	2,5
 22576   015A6A                     copy_data5:
 22577   015A6A  0009               	tblrd		*+
 22578   015A6C  006F FFD7 FFEE     	movff	tablat,postinc0
 22579   015A72  50DD               	movf	postdec2,w,c
 22580   015A74  50D9               	movf	fsr2l,w,c
 22581   015A76  E1F9               	bnz	copy_data5
 22582                           
 22583                           ; Clear objects allocated to BIGRAM (1306 bytes)
 22584   015A78  EE01  F300         	lfsr	0,__pbssBIGRAM
 22585   015A7C  EE21 F11A          	lfsr	2,1306
 22586   015A80                     clear_0:
 22587   015A80  6AEE               	clrf	postinc0,c
 22588   015A82  50DD               	movf	postdec2,w,c
 22589   015A84  50D9               	movf	fsr2l,w,c
 22590   015A86  E1FC               	bnz	clear_0
 22591   015A88  50DA               	movf	fsr2h,w,c
 22592   015A8A  E1FA               	bnz	clear_0
 22593                           
 22594                           ; Clear objects allocated to BANK5 (255 bytes)
 22595   015A8C  EE01  F100         	lfsr	0,__pbssBANK5
 22596   015A90  EE20 F0FF          	lfsr	2,255
 22597   015A94                     clear_1:
 22598   015A94  6AEE               	clrf	postinc0,c
 22599   015A96  50DD               	movf	postdec2,w,c
 22600   015A98  50D9               	movf	fsr2l,w,c
 22601   015A9A  E1FC               	bnz	clear_1
 22602   015A9C  50DA               	movf	fsr2h,w,c
 22603   015A9E  E1FA               	bnz	clear_1
 22604                           
 22605                           ; Clear objects allocated to BANK4 (255 bytes)
 22606   015AA0  EE01  F000         	lfsr	0,__pbssBANK4
 22607   015AA4  EE20 F0FF          	lfsr	2,255
 22608   015AA8                     clear_2:
 22609   015AA8  6AEE               	clrf	postinc0,c
 22610   015AAA  50DD               	movf	postdec2,w,c
 22611   015AAC  50D9               	movf	fsr2l,w,c
 22612   015AAE  E1FC               	bnz	clear_2
 22613   015AB0  50DA               	movf	fsr2h,w,c
 22614   015AB2  E1FA               	bnz	clear_2
 22615                           
 22616                           ; Clear objects allocated to BANK3 (67 bytes)
 22617   015AB4  EE00  F300         	lfsr	0,__pbssBANK3
 22618   015AB8  0E43               	movlw	67
 22619   015ABA                     clear_3:
 22620   015ABA  6AEE               	clrf	postinc0,c
 22621   015ABC  06E8               	decf	wreg,f,c
 22622   015ABE  E1FD               	bnz	clear_3
 22623                           
 22624                           ; Clear objects allocated to BANK2 (195 bytes)
 22625   015AC0  EE00  F200         	lfsr	0,__pbssBANK2
 22626   015AC4  0EC3               	movlw	195
 22627   015AC6                     clear_4:
 22628   015AC6  6AEE               	clrf	postinc0,c
 22629   015AC8  06E8               	decf	wreg,f,c
 22630   015ACA  E1FD               	bnz	clear_4
 22631                           
 22632                           ; Clear objects allocated to BANK1 (39 bytes)
 22633   015ACC  EE00  F1BF         	lfsr	0,__pbssBANK1
 22634   015AD0  0E27               	movlw	39
 22635   015AD2                     clear_5:
 22636   015AD2  6AEE               	clrf	postinc0,c
 22637   015AD4  06E8               	decf	wreg,f,c
 22638   015AD6  E1FD               	bnz	clear_5
 22639                           
 22640                           ; Clear objects allocated to BANK0 (96 bytes)
 22641   015AD8  EE00  F060         	lfsr	0,__pbssBANK0
 22642   015ADC  0E60               	movlw	96
 22643   015ADE                     clear_6:
 22644   015ADE  6AEE               	clrf	postinc0,c
 22645   015AE0  06E8               	decf	wreg,f,c
 22646   015AE2  E1FD               	bnz	clear_6
 22647                           
 22648                           ; Clear objects allocated to COMRAM (34 bytes)
 22649   015AE4  EE00  F001         	lfsr	0,__pbssCOMRAM
 22650   015AE8  0E22               	movlw	34
 22651   015AEA                     clear_7:
 22652   015AEA  6AEE               	clrf	postinc0,c
 22653   015AEC  06E8               	decf	wreg,f,c
 22654   015AEE  E1FD               	bnz	clear_7
 22655                           
 22656                           ;
 22657                           ; Setup IVTBASE
 22658                           ;
 22659   003FD5                     IVTBASEL        equ	16341
 22660   003FD6                     IVTBASEH        equ	16342
 22661   003FD7                     IVTBASEU        equ	16343
 22662   015AF0  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
 22663   015AF2  6ED5               	movwf	213,c
 22664   015AF4  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
 22665   015AF6  6ED6               	movwf	214,c
 22666   015AF8  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
 22667   015AFA  6ED7               	movwf	215,c
 22668   015AFC                     end_of_initialization:
 22669                           	callstack 0
 22670   015AFC                     __end_of__initialization:
 22671                           	callstack 0
 22672   015AFC  0100               	movlb	0
 22673   015AFE  EFA9  F087         	goto	_main	;jump to C main() function
 22674                           
 22675                           	psect	bssCOMRAM
 22676   000001                     __pbssCOMRAM:
 22677                           	callstack 0
 22678   000001                     r_protocol@b_block:
 22679                           	callstack 0
 22680   000001                     	ds	2
 22681   000003                     run_checksum@sum:
 22682                           	callstack 0
 22683   000003                     	ds	2
 22684   000005                     TMR5_ISR@CountCallBack:
 22685                           	callstack 0
 22686   000005                     	ds	2
 22687   000007                     _timer5ReloadVal:
 22688                           	callstack 0
 22689   000007                     	ds	2
 22690   000009                     secs_gem_state@equipment:
 22691                           	callstack 0
 22692   000009                     	ds	1
 22693   00000A                     secs_gem_state@block:
 22694                           	callstack 0
 22695   00000A                     	ds	1
 22696   00000B                     t_protocol@requeue:
 22697                           	callstack 0
 22698   00000B                     	ds	1
 22699   00000C                     t_protocol@retry:
 22700                           	callstack 0
 22701   00000C                     	ds	1
 22702   00000D                     r_protocol@rxData_l:
 22703                           	callstack 0
 22704   00000D                     	ds	1
 22705   00000E                     m_protocol@rxData_l:
 22706                           	callstack 0
 22707   00000E                     	ds	1
 22708   00000F                     _mode_sw:
 22709                           	callstack 0
 22710   00000F                     	ds	1
 22711   000010                     _uart2RxCount:
 22712                           	callstack 0
 22713   000010                     	ds	1
 22714   000011                     _uart2RxTail:
 22715                           	callstack 0
 22716   000011                     	ds	1
 22717   000012                     _uart2RxHead:
 22718                           	callstack 0
 22719   000012                     	ds	1
 22720   000013                     _uart2TxBufferRemaining:
 22721                           	callstack 0
 22722   000013                     	ds	1
 22723   000014                     _uart2TxTail:
 22724                           	callstack 0
 22725   000014                     	ds	1
 22726   000015                     _uart2TxHead:
 22727                           	callstack 0
 22728   000015                     	ds	1
 22729   000016                     _uart1RxCount:
 22730                           	callstack 0
 22731   000016                     	ds	1
 22732   000017                     _uart1RxTail:
 22733                           	callstack 0
 22734   000017                     	ds	1
 22735   000018                     _uart1RxHead:
 22736                           	callstack 0
 22737   000018                     	ds	1
 22738   000019                     _uart1TxBufferRemaining:
 22739                           	callstack 0
 22740   000019                     	ds	1
 22741   00001A                     _uart1TxTail:
 22742                           	callstack 0
 22743   00001A                     	ds	1
 22744   00001B                     _uart1TxHead:
 22745                           	callstack 0
 22746   00001B                     	ds	1
 22747   00001C                     secs_II_message@block:
 22748                           	callstack 0
 22749   00001C                     	ds	7
 22750                           
 22751                           	psect	dataCOMRAM
 22752   00004F                     __pdataCOMRAM:
 22753                           	callstack 0
 22754   00004F                     secs_II_monitor_message@store6_11:
 22755                           	callstack 0
 22756   00004F                     	ds	1
 22757   000050                     secs_II_monitor_message@store1_13:
 22758                           	callstack 0
 22759   000050                     	ds	1
 22760   000051                     secs_II_monitor_message@store1_1:
 22761                           	callstack 0
 22762   000051                     	ds	1
 22763   000052                     r_protocol@d:
 22764                           	callstack 0
 22765   000052                     	ds	1
 22766   000053                     r_protocol@retry:
 22767                           	callstack 0
 22768   000053                     	ds	1
 22769                           
 22770                           	psect	bssBANK0
 22771   000060                     __pbssBANK0:
 22772                           	callstack 0
 22773   000060                     _tickCount:
 22774                           	callstack 0
 22775   000060                     	ds	26
 22776   00007A                     _r_block:
 22777                           	callstack 0
 22778   00007A                     	ds	13
 22779   000087                     _spi_link:
 22780                           	callstack 0
 22781   000087                     	ds	12
 22782   000093                     t_protocol@block:
 22783                           	callstack 0
 22784   000093                     	ds	7
 22785   00009A                     wdtdelay@dcount:
 22786                           	callstack 0
 22787   00009A                     	ds	4
 22788   00009E                     _TMR5_InterruptHandler:
 22789                           	callstack 0
 22790   00009E                     	ds	3
 22791   0000A1                     _TMR6_InterruptHandler:
 22792                           	callstack 0
 22793   0000A1                     	ds	3
 22794   0000A4                     _ADCC_ADI_InterruptHandler:
 22795                           	callstack 0
 22796   0000A4                     	ds	3
 22797   0000A7                     _UART1_TxInterruptHandler:
 22798                           	callstack 0
 22799   0000A7                     	ds	3
 22800   0000AA                     _UART1_RxInterruptHandler:
 22801                           	callstack 0
 22802   0000AA                     	ds	3
 22803   0000AD                     _UART2_TxInterruptHandler:
 22804                           	callstack 0
 22805   0000AD                     	ds	3
 22806   0000B0                     _UART2_RxInterruptHandler:
 22807                           	callstack 0
 22808   0000B0                     	ds	3
 22809   0000B3                     _INT2_InterruptHandler:
 22810                           	callstack 0
 22811   0000B3                     	ds	3
 22812   0000B6                     _INT1_InterruptHandler:
 22813                           	callstack 0
 22814   0000B6                     	ds	3
 22815   0000B9                     _INT0_InterruptHandler:
 22816                           	callstack 0
 22817   0000B9                     	ds	3
 22818   0000BC                     _seed:
 22819                           	callstack 0
 22820   0000BC                     	ds	4
 22821                           
 22822                           	psect	dataBANK0
 22823   0000C0                     __pdataBANK0:
 22824                           	callstack 0
 22825   0000C0                     _H33:
 22826                           	callstack 0
 22827   0000C0                     	ds	36
 22828   0000E4                     _H14:
 22829                           	callstack 0
 22830   0000E4                     	ds	17
 22831                           
 22832                           	psect	bssBANK1
 22833   0001BF                     __pbssBANK1:
 22834                           	callstack 0
 22835   0001BF                     _nout:
 22836                           	callstack 0
 22837   0001BF                     	ds	2
 22838   0001C1                     _width:
 22839                           	callstack 0
 22840   0001C1                     	ds	2
 22841   0001C3                     _prec:
 22842                           	callstack 0
 22843   0001C3                     	ds	2
 22844   0001C5                     _flags:
 22845                           	callstack 0
 22846   0001C5                     	ds	1
 22847   0001C6                     _dbuf:
 22848                           	callstack 0
 22849   0001C6                     	ds	32
 22850                           
 22851                           	psect	dataBANK1
 22852   000100                     __pdataBANK1:
 22853                           	callstack 0
 22854   000100                     _H10:
 22855                           	callstack 0
 22856   000100                     	ds	91
 22857   00015B                     _H13:
 22858                           	callstack 0
 22859   00015B                     	ds	64
 22860   00019B                     _H17:
 22861                           	callstack 0
 22862   00019B                     	ds	20
 22863   0001AF                     _port_data:
 22864                           	callstack 0
 22865   0001AF                     	ds	16
 22866                           
 22867                           	psect	bssBANK2
 22868   000200                     __pbssBANK2:
 22869                           	callstack 0
 22870   000200                     _uart2TxBuffer:
 22871                           	callstack 0
 22872   000200                     	ds	64
 22873   000240                     _uart1TxBuffer:
 22874                           	callstack 0
 22875   000240                     	ds	64
 22876   000280                     _ring_buf1:
 22877                           	callstack 0
 22878   000280                     	ds	67
 22879                           
 22880                           	psect	dataBANK2
 22881   0002C3                     __pdataBANK2:
 22882                           	callstack 0
 22883   0002C3                     _H12:
 22884                           	callstack 0
 22885   0002C3                     	ds	30
 22886   0002E1                     _H26:
 22887                           	callstack 0
 22888   0002E1                     	ds	29
 22889                           
 22890                           	psect	bssBANK3
 22891   000300                     __pbssBANK3:
 22892                           	callstack 0
 22893   000300                     _ring_buf2:
 22894                           	callstack 0
 22895   000300                     	ds	67
 22896                           
 22897                           	psect	bssBANK4
 22898   000400                     __pbssBANK4:
 22899                           	callstack 0
 22900   000400                     _uart1RxBuffer:
 22901                           	callstack 0
 22902   000400                     	ds	255
 22903                           
 22904                           	psect	bssBANK5
 22905   000500                     __pbssBANK5:
 22906                           	callstack 0
 22907   000500                     _uart2RxBuffer:
 22908                           	callstack 0
 22909   000500                     	ds	255
 22910                           
 22911                           	psect	dataBANK6
 22912   000600                     __pdataBANK6:
 22913                           	callstack 0
 22914   000600                     _T:
 22915                           	callstack 0
 22916   000600                     	ds	256
 22917                           
 22918                           	psect	bssBIGRAM
 22919   000700                     __pbssBIGRAM:
 22920                           	callstack 0
 22921   000700                     _D@mconfig$F5154:
 22922                           	callstack 0
 22923   000700                     	ds	514
 22924   000902                     _S:
 22925                           	callstack 0
 22926   000902                     	ds	460
 22927   000ACE                     _D:
 22928                           	callstack 0
 22929   000ACE                     	ds	332
 22930                           
 22931                           	psect	dataBIGRAM
 22932   000C1A                     __pdataBIGRAM:
 22933                           	callstack 0
 22934   000C1A                     _V:
 22935                           	callstack 0
 22936   000C1A                     	ds	387
 22937   000D9D                     _H153:
 22938                           	callstack 0
 22939   000D9D                     	ds	312
 22940   000ED5                     _H254:
 22941                           	callstack 0
 22942   000ED5                     	ds	257
 22943                           
 22944                           	psect	cstackBANK1
 22945   0001E6                     __pcstackBANK1:
 22946                           	callstack 0
 22947   0001E6                     ??_TMR5_ISR:
 22948                           
 22949                           ; 1 bytes @ 0x0
 22950   0001E6                     	ds	5
 22951                           
 22952                           	psect	cstackBANK0
 22953   0000F5                     __pcstackBANK0:
 22954                           	callstack 0
 22955   0000F5                     ??_UART2_tx_vect_isr:
 22956                           
 22957                           ; 1 bytes @ 0x0
 22958   0000F5                     	ds	2
 22959   0000F7                     ??_UART2_rx_vect_isr:
 22960                           
 22961                           ; 1 bytes @ 0x2
 22962   0000F7                     	ds	2
 22963   0000F9                     ??_TMR6_ISR:
 22964                           
 22965                           ; 1 bytes @ 0x4
 22966   0000F9                     	ds	3
 22967                           
 22968                           	psect	cstackCOMRAM
 22969   000043                     __pcstackCOMRAM:
 22970                           	callstack 0
 22971   000043                     ??_INT0_ISR:
 22972                           
 22973                           ; 1 bytes @ 0x0
 22974   000043                     	ds	2
 22975   000045                     ??_INT1_ISR:
 22976                           
 22977                           ; 1 bytes @ 0x2
 22978   000045                     	ds	2
 22979   000047                     ??_INT2_ISR:
 22980                           
 22981                           ; 1 bytes @ 0x4
 22982   000047                     	ds	2
 22983   000049                     ??_ADCC_ISR:
 22984                           
 22985                           ; 1 bytes @ 0x6
 22986   000049                     	ds	2
 22987   00004B                     ??_UART1_tx_vect_isr:
 22988                           
 22989                           ; 1 bytes @ 0x8
 22990   00004B                     	ds	2
 22991   00004D                     ??_UART1_rx_vect_isr:
 22992                           
 22993                           ; 1 bytes @ 0xA
 22994   00004D                     	ds	2
 22995   00004F                     
 22996                           ; 1 bytes @ 0xC
 22997 ;;
 22998 ;;Main: autosize = 3, tempsize = 0, incstack = 0, save=0
 22999 ;;
 23000 ;; *************** function _main *****************
 23001 ;; Defined at:
 23002 ;;		line 615 in file "main.c"
 23003 ;; Parameters:    Size  Location     Type
 23004 ;;		None
 23005 ;; Auto vars:     Size  Location     Type
 23006 ;;  s               2  [STACK] PTR unsigned char 
 23007 ;;		 -> D$lcd(512), D@mconfig$F5154(514), 
 23008 ;;  mode            1  [STACK] enum E17274
 23009 ;; Return value:  Size  Location     Type
 23010 ;;                  1  [STACK] void 
 23011 ;; Registers used:
 23012 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 23013 ;; Tracked objects:
 23014 ;;		On entry : 0/0
 23015 ;;		On exit  : 0/0
 23016 ;;		Unchanged: 0/0
 23017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23022 ;;Total ram usage:        0 bytes
 23023 ;; Hardware stack levels required when called: 16
 23024 ;; This function calls:
 23025 ;;		_MyeaDogM_WriteStringAtPos
 23026 ;;		_SYSTEM_Initialize
 23027 ;;		_StartTimer
 23028 ;;		_TimerDone
 23029 ;;		_WaitMs
 23030 ;;		_check_help
 23031 ;;		_eaDogM_WriteCommand
 23032 ;;		_get_vterm_ptr
 23033 ;;		_hb_message
 23034 ;;		_init_display
 23035 ;;		_m_protocol
 23036 ;;		_mode_lamp_dim
 23037 ;;		_r_protocol
 23038 ;;		_set_display_info
 23039 ;;		_set_vterm
 23040 ;;		_sprintf
 23041 ;;		_srand
 23042 ;;		_t_protocol
 23043 ;;		_update_lcd
 23044 ;; This function is called by:
 23045 ;;		Startup code after reset
 23046 ;; This function uses a reentrant model
 23047 ;;
 23048                           
 23049                           	psect	text0
 23050   010F52                     __ptext0:
 23051                           	callstack 0
 23052   010F52                     _main:
 23053                           	callstack 0
 23054                           
 23055                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23056   010F52  52E6               	movf	postinc1,f,c
 23057   010F54  52E6               	movf	postinc1,f,c
 23058   010F56  52E6               	movf	postinc1,f,c
 23059                           
 23060                           ;main.c: 617:  UI_STATES mode;;main.c: 618:  char * s;;main.c: 621:  SYSTEM_Initialize()
      +                          ;
 23061                           
 23062                           ;incstack = 0
 23063   010F58  ECC6  F0BA         	call	_SYSTEM_Initialize	;wreg free
 23064                           
 23065                           ; BSR set to: 60
 23066                           ;main.c: 624:  (INTCON0bits.GIEH = 1);
 23067   010F5C  8ED2               	bsf	210,7,c	;volatile
 23068                           
 23069                           ; BSR set to: 60
 23070                           ;main.c: 627:  (INTCON0bits.GIEL = 1);
 23071   010F5E  8CD2               	bsf	210,6,c	;volatile
 23072                           
 23073                           ; BSR set to: 60
 23074                           ;main.c: 629:  V.ui_state = UI_STATE_INIT;
 23075   010F60  0E00               	movlw	0
 23076   010F62  006F FFA0  FC1B    	movff	wreg,_V+1	;volatile
 23077                           
 23078                           ; BSR set to: 60
 23079                           ;main.c: 634:  WaitMs(300);
 23080   010F68  0E2C               	movlw	44
 23081   010F6A  6EE6               	movwf	postinc1,c
 23082   010F6C  0E01               	movlw	1
 23083   010F6E  6EE6               	movwf	postinc1,c
 23084   010F70  EC77  F0BD         	call	_WaitMs	;wreg free
 23085                           
 23086                           ;main.c: 635:  if (PORTBbits.RB0) {
 23087   010F74  A0CB               	btfss	203,0,c	;volatile
 23088   010F76  D004               	goto	l13670
 23089                           
 23090                           ;main.c: 636:   mode = UI_STATE_HOST;
 23091                           ;stkvar	_mode @ sp[(-3)+2]
 23092   010F78  0EFF               	movlw	-1
 23093   010F7A  6AE3               	clrf	plusw1,c
 23094   010F7C  2AE3               	incf	plusw1,f,c
 23095                           
 23096                           ;main.c: 637:  } else {
 23097   010F7E  D004               	goto	l13672
 23098   010F80                     l13670:
 23099                           
 23100                           ;main.c: 638:   mode = UI_STATE_LOG;
 23101                           ;stkvar	_mode @ sp[(-3)+2]
 23102   010F80  0EFF               	movlw	-1
 23103   010F82  6AE3               	clrf	plusw1,c
 23104   010F84  80E3               	bsf	plusw1,0,c
 23105   010F86  82E3               	bsf	plusw1,1,c	;indir
 23106   010F88                     l13672:
 23107                           
 23108                           ;main.c: 641:  if (mode == UI_STATE_HOST) {
 23109                           ;stkvar	_mode @ sp[(-3)+2]
 23110   010F88  0EFF               	movlw	-1
 23111   010F8A  04E3               	decf	plusw1,w,c
 23112   010F8C  A4D8               	btfss	status,2,c
 23113   010F8E  D003               	goto	l1378
 23114                           
 23115                           ;main.c: 642:   do { LATDbits.LATD0 = 1; } while(0);
 23116   010F90  80BD               	bsf	189,0,c	;volatile
 23117                           
 23118                           ;main.c: 643:   V.mode_pwm = 70;
 23119   010F92  0E46               	movlw	70
 23120   010F94  D002               	goto	L1
 23121   010F96                     l1378:
 23122   010F96  90BD               	bcf	189,0,c	;volatile
 23123                           
 23124                           ;main.c: 646:   V.mode_pwm = 0;
 23125   010F98  0E00               	movlw	0
 23126   010F9A                     L1:
 23127   010F9A  006F FFA0  FD5F    	movff	wreg,_V+325	;volatile
 23128   010FA0  0E00               	movlw	0
 23129   010FA2  006F FFA0  FD60    	movff	wreg,_V+326	;volatile
 23130                           
 23131                           ;main.c: 648:  mode_lamp_dim(V.mode_pwm);
 23132   010FA8  EE23  F15F         	lfsr	2,_V+325	;volatile
 23133   010FAC  006F FF78  F02D    	movff	postinc2,btemp+10
 23134   010FB2  006F FF74  F02E    	movff	postdec2,btemp+11
 23135   010FB8  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 23136   010FBE  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 23137   010FC4  ECC7  F0C0         	call	_mode_lamp_dim	;wreg free
 23138   010FC8  EF06  F08D         	goto	l13874
 23139   010FCC                     l13676:
 23140                           
 23141                           ;main.c: 656:    init_display();
 23142   010FCC  ECF9  F0B3         	call	_init_display	;wreg free
 23143                           
 23144                           ; BSR set to: 61
 23145                           ;main.c: 657:    eaDogM_WriteCommand(0b00001100);
 23146   010FD0  0E0C               	movlw	12
 23147   010FD2  6EE6               	movwf	postinc1,c
 23148   010FD4  EC10  F0C1         	call	_eaDogM_WriteCommand	;wreg free
 23149                           
 23150                           ; BSR set to: 0
 23151                           ;main.c: 659:    V.ui_state = mode;
 23152                           ;stkvar	_mode @ sp[(-3)+2]
 23153   010FD8  0EFF               	movlw	-1
 23154   010FDA  006F FF8C  F02E    	movff	plusw1,btemp+11
 23155   010FE0  0060  F0B8  FC1B   	movff	btemp+11,_V+1	;volatile
 23156                           
 23157                           ; BSR set to: 0
 23158                           ;main.c: 660:    V.s_state = SEQ_STATE_INIT;
 23159   010FE6  0E00               	movlw	0
 23160   010FE8  006F FFA0  FC1A    	movff	wreg,_V
 23161                           
 23162                           ; BSR set to: 0
 23163                           ;main.c: 661:    srand(1957);
 23164   010FEE  0EA5               	movlw	165
 23165   010FF0  6EE6               	movwf	postinc1,c
 23166   010FF2  0E07               	movlw	7
 23167   010FF4  6EE6               	movwf	postinc1,c
 23168   010FF6  EC33  F0BE         	call	_srand	;wreg free
 23169                           
 23170                           ; BSR set to: 0
 23171                           ;main.c: 662:    set_vterm(0);
 23172   010FFA  0E00               	movlw	0
 23173   010FFC  6EE6               	movwf	postinc1,c
 23174   010FFE  EC49  F0C0         	call	_set_vterm	;wreg free
 23175                           
 23176                           ;main.c: 663:    sprintf(get_vterm_ptr(0, 0), " RVI HOST TESTER");
 23177   011002  0E7B               	movlw	low STR_1
 23178   011004  6EE6               	movwf	postinc1,c
 23179   011006  0EFF               	movlw	high STR_1
 23180   011008  6EE6               	movwf	postinc1,c
 23181   01100A  0E00               	movlw	0
 23182   01100C  6EE6               	movwf	postinc1,c
 23183   01100E  0E00               	movlw	0
 23184   011010  6EE6               	movwf	postinc1,c
 23185   011012  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 23186   011016  0060  F08F  FFE6   	movff	btemp,postinc1
 23187   01101C  0060  F093  FFE6   	movff	btemp+1,postinc1
 23188   011022  0E04               	movlw	4
 23189   011024  6EE6               	movwf	postinc1,c
 23190   011026  EC0A  F0B3         	call	_sprintf	;wreg free
 23191                           
 23192                           ; BSR set to: 1
 23193                           ;main.c: 664:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "1.70A");
 23194   01102A  0EEF               	movlw	low STR_3
 23195   01102C  6EE6               	movwf	postinc1,c
 23196   01102E  0EFF               	movlw	high STR_3
 23197   011030  6EE6               	movwf	postinc1,c
 23198   011032  0EBA               	movlw	low STR_2
 23199   011034  6EE6               	movwf	postinc1,c
 23200   011036  0EFF               	movlw	high STR_2
 23201   011038  6EE6               	movwf	postinc1,c
 23202   01103A  0E00               	movlw	0
 23203   01103C  6EE6               	movwf	postinc1,c
 23204   01103E  0E01               	movlw	1
 23205   011040  6EE6               	movwf	postinc1,c
 23206   011042  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 23207   011046  0060  F08F  FFE6   	movff	btemp,postinc1
 23208   01104C  0060  F093  FFE6   	movff	btemp+1,postinc1
 23209   011052  0E06               	movlw	6
 23210   011054  6EE6               	movwf	postinc1,c
 23211   011056  EC0A  F0B3         	call	_sprintf	;wreg free
 23212                           
 23213                           ; BSR set to: 1
 23214                           ;main.c: 665:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK     ");
 23215   01105A  0EAB               	movlw	low STR_4
 23216   01105C  6EE6               	movwf	postinc1,c
 23217   01105E  0EFF               	movlw	high STR_4
 23218   011060  6EE6               	movwf	postinc1,c
 23219   011062  0E00               	movlw	0
 23220   011064  6EE6               	movwf	postinc1,c
 23221   011066  0E02               	movlw	2
 23222   011068  6EE6               	movwf	postinc1,c
 23223   01106A  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 23224   01106E  0060  F08F  FFE6   	movff	btemp,postinc1
 23225   011074  0060  F093  FFE6   	movff	btemp+1,postinc1
 23226   01107A  0E04               	movlw	4
 23227   01107C  6EE6               	movwf	postinc1,c
 23228   01107E  EC0A  F0B3         	call	_sprintf	;wreg free
 23229                           
 23230                           ; BSR set to: 1
 23231                           ;main.c: 666:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
 23232   011082  0E6A               	movlw	low STR_5
 23233   011084  6EE6               	movwf	postinc1,c
 23234   011086  0EFF               	movlw	high STR_5
 23235   011088  6EE6               	movwf	postinc1,c
 23236   01108A  0E02               	movlw	2
 23237   01108C  6EE6               	movwf	postinc1,c
 23238   01108E  0E00               	movlw	0
 23239   011090  6EE6               	movwf	postinc1,c
 23240   011092  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 23241   011096  0060  F08F  FFE6   	movff	btemp,postinc1
 23242   01109C  0060  F093  FFE6   	movff	btemp+1,postinc1
 23243   0110A2  0E04               	movlw	4
 23244   0110A4  6EE6               	movwf	postinc1,c
 23245   0110A6  EC0A  F0B3         	call	_sprintf	;wreg free
 23246                           
 23247                           ; BSR set to: 1
 23248                           ;main.c: 667:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "1.70A");
 23249   0110AA  0EEF               	movlw	low STR_3
 23250   0110AC  6EE6               	movwf	postinc1,c
 23251   0110AE  0EFF               	movlw	high STR_3
 23252   0110B0  6EE6               	movwf	postinc1,c
 23253   0110B2  0EBA               	movlw	low STR_2
 23254   0110B4  6EE6               	movwf	postinc1,c
 23255   0110B6  0EFF               	movlw	high STR_2
 23256   0110B8  6EE6               	movwf	postinc1,c
 23257   0110BA  0E02               	movlw	2
 23258   0110BC  6EE6               	movwf	postinc1,c
 23259   0110BE  0E01               	movlw	1
 23260   0110C0  6EE6               	movwf	postinc1,c
 23261   0110C2  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 23262   0110C6  0060  F08F  FFE6   	movff	btemp,postinc1
 23263   0110CC  0060  F093  FFE6   	movff	btemp+1,postinc1
 23264   0110D2  0E06               	movlw	6
 23265   0110D4  6EE6               	movwf	postinc1,c
 23266   0110D6  EC0A  F0B3         	call	_sprintf	;wreg free
 23267                           
 23268                           ; BSR set to: 1
 23269                           ;main.c: 668:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
 23270   0110DA  0E59               	movlw	low STR_8
 23271   0110DC  6EE6               	movwf	postinc1,c
 23272   0110DE  0EFF               	movlw	high STR_8
 23273   0110E0  6EE6               	movwf	postinc1,c
 23274   0110E2  0E02               	movlw	2
 23275   0110E4  6EE6               	movwf	postinc1,c
 23276   0110E6  0E02               	movlw	2
 23277   0110E8  6EE6               	movwf	postinc1,c
 23278   0110EA  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 23279   0110EE  0060  F08F  FFE6   	movff	btemp,postinc1
 23280   0110F4  0060  F093  FFE6   	movff	btemp+1,postinc1
 23281   0110FA  0E04               	movlw	4
 23282   0110FC  6EE6               	movwf	postinc1,c
 23283   0110FE  EC0A  F0B3         	call	_sprintf	;wreg free
 23284                           
 23285                           ; BSR set to: 1
 23286                           ;main.c: 669:    update_lcd(0);
 23287   011102  0E00               	movlw	0
 23288   011104  6EE6               	movwf	postinc1,c
 23289   011106  EC82  F0B3         	call	_update_lcd	;wreg free
 23290                           
 23291                           ;main.c: 670:    WaitMs(3000);
 23292   01110A  0EB8               	movlw	184
 23293   01110C  6EE6               	movwf	postinc1,c
 23294   01110E  0E0B               	movlw	11
 23295   011110  6EE6               	movwf	postinc1,c
 23296   011112  EC77  F0BD         	call	_WaitMs	;wreg free
 23297                           
 23298                           ;main.c: 671:    StartTimer(TMR_DISPLAY, 100);
 23299   011116  0E64               	movlw	100
 23300   011118  6EE6               	movwf	postinc1,c
 23301   01111A  0E00               	movlw	0
 23302   01111C  6EE6               	movwf	postinc1,c
 23303   01111E  0E0A               	movlw	10
 23304   011120  6EE6               	movwf	postinc1,c
 23305   011122  EC02  F0BD         	call	_StartTimer	;wreg free
 23306                           
 23307                           ;main.c: 672:    StartTimer(TMR_SEQ, 10000);
 23308   011126  0E10               	movlw	16
 23309   011128  6EE6               	movwf	postinc1,c
 23310   01112A  0E27               	movlw	39
 23311   01112C  6EE6               	movwf	postinc1,c
 23312   01112E  0E0B               	movlw	11
 23313   011130  6EE6               	movwf	postinc1,c
 23314   011132  EC02  F0BD         	call	_StartTimer	;wreg free
 23315                           
 23316                           ;main.c: 673:    StartTimer(TMR_INFO, 3000);
 23317   011136  0EB8               	movlw	184
 23318   011138  6EE6               	movwf	postinc1,c
 23319   01113A  0E0B               	movlw	11
 23320   01113C  6EE6               	movwf	postinc1,c
 23321   01113E  0E07               	movlw	7
 23322   011140  6EE6               	movwf	postinc1,c
 23323   011142  EC02  F0BD         	call	_StartTimer	;wreg free
 23324                           
 23325                           ;main.c: 674:    StartTimer(TMR_FLIPPER, 1500);
 23326   011146  0EDC               	movlw	220
 23327   011148  6EE6               	movwf	postinc1,c
 23328   01114A  0E05               	movlw	5
 23329   01114C  6EE6               	movwf	postinc1,c
 23330   01114E  0E0C               	movlw	12
 23331   011150  6EE6               	movwf	postinc1,c
 23332   011152  EC02  F0BD         	call	_StartTimer	;wreg free
 23333                           
 23334                           ;main.c: 675:    StartTimer(TMR_HELPDIS, 3000);
 23335   011156  0EB8               	movlw	184
 23336   011158  6EE6               	movwf	postinc1,c
 23337   01115A  0E0B               	movlw	11
 23338   01115C  6EE6               	movwf	postinc1,c
 23339   01115E  0E09               	movlw	9
 23340   011160  6EE6               	movwf	postinc1,c
 23341   011162  EC02  F0BD         	call	_StartTimer	;wreg free
 23342                           
 23343                           ;main.c: 676:    break;
 23344   011166  EF1C  F08D         	goto	l13876
 23345   01116A                     l1386:
 23346                           
 23347                           ;main.c: 680:     V.r_l_state = LINK_STATE_IDLE;
 23348   01116A  0E00               	movlw	0
 23349   01116C  006F FFA0  FC1F    	movff	wreg,_V+5	;volatile
 23350                           
 23351                           ;main.c: 681:     V.t_l_state = LINK_STATE_IDLE;
 23352   011172  0E00               	movlw	0
 23353   011174  006F FFA0  FC20    	movff	wreg,_V+6	;volatile
 23354                           
 23355                           ;main.c: 682:     V.s_state = SEQ_STATE_RX;
 23356   01117A  0E01               	movlw	1
 23357   01117C  006F FFA0  FC1A    	movff	wreg,_V
 23358                           
 23359                           ;main.c: 683:     if ((V.error == LINK_ERROR_NONE) && (V.abort == LINK_ERROR_NONE)) {
 23360   011182  0063  F53F  FFE8   	movff	_V+309,wreg	;volatile
 23361   011188  0A0A               	xorlw	10
 23362   01118A  A4D8               	btfss	status,2,c
 23363   01118C  D1EE               	goto	l13786
 23364   01118E  0063  F543  FFE8   	movff	_V+310,wreg	;volatile
 23365   011194  0A0A               	xorlw	10
 23366   011196  A4D8               	btfss	status,2,c
 23367   011198  D1E8               	goto	l13786
 23368                           
 23369                           ;main.c: 684:      if (V.debug)
 23370   01119A  EE23  F168         	lfsr	2,_V+334	;volatile
 23371   01119E  AADF               	btfss	indf2,5,c
 23372   0111A0  D027               	goto	l13722
 23373                           
 23374                           ;main.c: 685:       sprintf(get_vterm_ptr(2, 0), "H254 %d, T%ld  ", sizeof(header254), V
      +                          .testing);
 23375   0111A2  EE23  F149         	lfsr	2,_V+303	;volatile
 23376   0111A6  006F FF7B FFE6     	movff	postinc2,postinc1
 23377   0111AC  006F FF7B FFE6     	movff	postinc2,postinc1
 23378   0111B2  006F FF7B FFE6     	movff	postinc2,postinc1
 23379   0111B8  006F FF7B FFE6     	movff	postinc2,postinc1
 23380   0111BE  0E01               	movlw	1
 23381   0111C0  6EE6               	movwf	postinc1,c
 23382   0111C2  0E01               	movlw	1
 23383   0111C4  6EE6               	movwf	postinc1,c
 23384   0111C6  0E8C               	movlw	low STR_9
 23385   0111C8  6EE6               	movwf	postinc1,c
 23386   0111CA  0EFF               	movlw	high STR_9
 23387   0111CC  6EE6               	movwf	postinc1,c
 23388   0111CE  0E00               	movlw	0
 23389   0111D0  6EE6               	movwf	postinc1,c
 23390   0111D2  0E02               	movlw	2
 23391   0111D4  6EE6               	movwf	postinc1,c
 23392   0111D6  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 23393   0111DA  0060  F08F  FFE6   	movff	btemp,postinc1
 23394   0111E0  0060  F093  FFE6   	movff	btemp+1,postinc1
 23395   0111E6  0E0A               	movlw	10
 23396   0111E8  6EE6               	movwf	postinc1,c
 23397   0111EA  EC0A  F0B3         	call	_sprintf	;wreg free
 23398   0111EE  D1BD               	goto	l13786
 23399   0111F0                     l13722:
 23400                           
 23401                           ;main.c: 687:       sprintf(get_vterm_ptr(2, 0), "HOST: %ld G%d      #", V.ticks, V.g_st
      +                          ate);
 23402   0111F0  EE23  F01C         	lfsr	2,_V+2	;volatile
 23403   0111F4  50DF               	movf	indf2,w,c
 23404   0111F6  6EE6               	movwf	postinc1,c
 23405   0111F8  0E00               	movlw	0
 23406   0111FA  6EE6               	movwf	postinc1,c
 23407   0111FC  EE23  F141         	lfsr	2,_V+295	;volatile
 23408   011200  006F FF7B FFE6     	movff	postinc2,postinc1
 23409   011206  006F FF7B FFE6     	movff	postinc2,postinc1
 23410   01120C  006F FF7B FFE6     	movff	postinc2,postinc1
 23411   011212  006F FF7B FFE6     	movff	postinc2,postinc1
 23412   011218  0E60               	movlw	low STR_10
 23413   01121A  6EE6               	movwf	postinc1,c
 23414   01121C  0EFE               	movlw	high STR_10
 23415   01121E  6EE6               	movwf	postinc1,c
 23416   011220  0E00               	movlw	0
 23417   011222  6EE6               	movwf	postinc1,c
 23418   011224  0E02               	movlw	2
 23419   011226  6EE6               	movwf	postinc1,c
 23420   011228  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 23421   01122C  0060  F08F  FFE6   	movff	btemp,postinc1
 23422   011232  0060  F093  FFE6   	movff	btemp+1,postinc1
 23423   011238  0E0A               	movlw	10
 23424   01123A  6EE6               	movwf	postinc1,c
 23425   01123C  EC0A  F0B3         	call	_sprintf	;wreg free
 23426   011240  D194               	goto	l13786
 23427   011242                     l13724:
 23428                           
 23429                           ;main.c: 694:     if (r_protocol(&V.r_l_state) == LINK_STATE_DONE) {
 23430   011242  0E1F               	movlw	low (_V+5)
 23431   011244  6EE6               	movwf	postinc1,c
 23432   011246  0E0C               	movlw	high (_V+5)
 23433   011248  6EE6               	movwf	postinc1,c
 23434   01124A  EC01  F097         	call	_r_protocol	;wreg free
 23435   01124E  0E04               	movlw	4
 23436   011250  1823               	xorwf	btemp^0,w,c
 23437   011252  A4D8               	btfss	status,2,c
 23438   011254  D087               	goto	l13750
 23439                           
 23440                           ;main.c: 695:      set_display_info(DIS_STR);
 23441   011256  0E00               	movlw	0
 23442   011258  6EE6               	movwf	postinc1,c
 23443   01125A  EC2A  F0C0         	call	_set_display_info	;wreg free
 23444                           
 23445                           ;main.c: 696:      s = get_vterm_ptr(0, 0);
 23446   01125E  0E00               	movlw	0
 23447   011260  6EE6               	movwf	postinc1,c
 23448   011262  0E00               	movlw	0
 23449   011264  6EE6               	movwf	postinc1,c
 23450   011266  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 23451                           
 23452                           ;stkvar	_s @ sp[(-3)+0]
 23453   01126A  0EFE               	movlw	-2
 23454   01126C  0060  F093  FFE3   	movff	btemp+1,plusw1
 23455   011272  0EFD               	movlw	-3
 23456   011274  0060  F08F  FFE3   	movff	btemp,plusw1
 23457                           
 23458                           ;main.c: 697:      if (V.stream == 9) {
 23459   01127A  0063  F537  FFE8   	movff	_V+307,wreg	;volatile
 23460   011280  0A09               	xorlw	9
 23461   011282  A4D8               	btfss	status,2,c
 23462   011284  D01F               	goto	l1393
 23463                           
 23464                           ;main.c: 698:       V.msg_error = V.function;
 23465   011286  0063  F538  FD51   	movff	_V+308,_V+311	;volatile
 23466                           
 23467                           ;main.c: 699:       sprintf(s, " S%dF%d Err         ", V.stream, V.function);
 23468   01128C  EE23  F14E         	lfsr	2,_V+308	;volatile
 23469   011290  50DF               	movf	indf2,w,c
 23470   011292  6EE6               	movwf	postinc1,c
 23471   011294  0E00               	movlw	0
 23472   011296  6EE6               	movwf	postinc1,c
 23473   011298  EE23  F14D         	lfsr	2,_V+307	;volatile
 23474   01129C  50DF               	movf	indf2,w,c
 23475   01129E  6EE6               	movwf	postinc1,c
 23476   0112A0  0E00               	movlw	0
 23477   0112A2  6EE6               	movwf	postinc1,c
 23478   0112A4  0E21               	movlw	low STR_11
 23479   0112A6  6EE6               	movwf	postinc1,c
 23480   0112A8  0EFE               	movlw	high STR_11
 23481   0112AA  6EE6               	movwf	postinc1,c
 23482                           
 23483                           ;stkvar	_s @ sp[(-9)+0]
 23484   0112AC  0EF7               	movlw	-9
 23485   0112AE  006F FF8F FFE6     	movff	plusw1,postinc1
 23486   0112B4  006F FF8F FFE6     	movff	plusw1,postinc1
 23487   0112BA  0E08               	movlw	8
 23488   0112BC  6EE6               	movwf	postinc1,c
 23489   0112BE  EC0A  F0B3         	call	_sprintf	;wreg free
 23490                           
 23491                           ;main.c: 700:      } else {
 23492   0112C2  D01F               	goto	l13738
 23493   0112C4                     l1393:
 23494                           
 23495                           ;main.c: 701:       V.msg_error = MSG_ERROR_NONE;
 23496   0112C4  0E00               	movlw	0
 23497   0112C6  006F FFA0  FD51    	movff	wreg,_V+311	;volatile
 23498                           
 23499                           ;main.c: 702:       sprintf(s, " S%dF%d #           ", V.stream, V.function);
 23500   0112CC  EE23  F14E         	lfsr	2,_V+308	;volatile
 23501   0112D0  50DF               	movf	indf2,w,c
 23502   0112D2  6EE6               	movwf	postinc1,c
 23503   0112D4  0E00               	movlw	0
 23504   0112D6  6EE6               	movwf	postinc1,c
 23505   0112D8  EE23  F14D         	lfsr	2,_V+307	;volatile
 23506   0112DC  50DF               	movf	indf2,w,c
 23507   0112DE  6EE6               	movwf	postinc1,c
 23508   0112E0  0E00               	movlw	0
 23509   0112E2  6EE6               	movwf	postinc1,c
 23510   0112E4  0E0C               	movlw	low STR_12
 23511   0112E6  6EE6               	movwf	postinc1,c
 23512   0112E8  0EFE               	movlw	high STR_12
 23513   0112EA  6EE6               	movwf	postinc1,c
 23514                           
 23515                           ;stkvar	_s @ sp[(-9)+0]
 23516   0112EC  0EF7               	movlw	-9
 23517   0112EE  006F FF8F FFE6     	movff	plusw1,postinc1
 23518   0112F4  006F FF8F FFE6     	movff	plusw1,postinc1
 23519   0112FA  0E08               	movlw	8
 23520   0112FC  6EE6               	movwf	postinc1,c
 23521   0112FE  EC0A  F0B3         	call	_sprintf	;wreg free
 23522   011302                     l13738:
 23523                           
 23524                           ; BSR set to: 1
 23525                           ;main.c: 704:      s[16] = 0;
 23526                           ;stkvar	_s @ sp[(-3)+0]
 23527   011302  0EFD               	movlw	-3
 23528   011304  006F FF8C  F02D    	movff	plusw1,btemp+10
 23529   01130A  0EFE               	movlw	-2
 23530   01130C  006F FF8C  F02E    	movff	plusw1,btemp+11
 23531   011312  0E10               	movlw	16
 23532   011314  242D               	addwf	(btemp+10)^0,w,c
 23533   011316  6ED9               	movwf	fsr2l,c
 23534   011318  0E00               	movlw	0
 23535   01131A  202E               	addwfc	(btemp+11)^0,w,c
 23536   01131C  6EDA               	movwf	fsr2h,c
 23537   01131E  6ADF               	clrf	indf2,c
 23538                           
 23539                           ; BSR set to: 1
 23540                           ;main.c: 705:      MyeaDogM_WriteStringAtPos(0, 0, s);
 23541                           ;stkvar	_s @ sp[(-3)+0]
 23542   011320  0EFD               	movlw	-3
 23543   011322  006F FF8F FFE6     	movff	plusw1,postinc1
 23544   011328  006F FF8F FFE6     	movff	plusw1,postinc1
 23545   01132E  0E00               	movlw	0
 23546   011330  6EE6               	movwf	postinc1,c
 23547   011332  0E00               	movlw	0
 23548   011334  6EE6               	movwf	postinc1,c
 23549   011336  EC01  F0B1         	call	_MyeaDogM_WriteStringAtPos	;wreg free
 23550                           
 23551                           ;main.c: 706:      if (V.wbit) {
 23552   01133A  EE23  F167         	lfsr	2,_V+333	;volatile
 23553   01133E  A2DF               	btfss	indf2,1,c
 23554   011340  D00D               	goto	l1395
 23555                           
 23556                           ;main.c: 707:       V.s_state = SEQ_STATE_TX;
 23557   011342  0E02               	movlw	2
 23558   011344  006F FFA0  FC1A    	movff	wreg,_V
 23559                           
 23560                           ;main.c: 708:       V.failed_send = 0;
 23561   01134A  EE23  F167         	lfsr	2,_V+333	;volatile
 23562   01134E  0E0F               	movlw	-241
 23563   011350  16DF               	andwf	223,f,c
 23564                           
 23565                           ;main.c: 709:       V.t_l_state = LINK_STATE_IDLE;
 23566   011352  0E00               	movlw	0
 23567   011354  006F FFA0  FC20    	movff	wreg,_V+6	;volatile
 23568                           
 23569                           ;main.c: 710:      } else {
 23570   01135A  D004               	goto	l13750
 23571   01135C                     l1395:
 23572                           
 23573                           ;main.c: 711:       V.s_state = SEQ_STATE_TRIGGER;
 23574   01135C  0E03               	movlw	3
 23575   01135E  006F FFA0  FC1A    	movff	wreg,_V
 23576   011364                     l13750:
 23577                           
 23578                           ;main.c: 714:     if (V.r_l_state == LINK_STATE_ERROR)
 23579   011364  0063  F07F  FFE8   	movff	_V+5,wreg	;volatile
 23580   01136A  D011               	goto	L42
 23581   01136C                     l13754:
 23582                           
 23583                           ;main.c: 721:     if (t_protocol(&V.t_l_state) == LINK_STATE_DONE) {
 23584   01136C  0E20               	movlw	low (_V+6)
 23585   01136E  6EE6               	movwf	postinc1,c
 23586   011370  0E0C               	movlw	high (_V+6)
 23587   011372  6EE6               	movwf	postinc1,c
 23588   011374  EC1B  F09B         	call	_t_protocol	;wreg free
 23589   011378  0E04               	movlw	4
 23590   01137A  1823               	xorwf	btemp^0,w,c
 23591   01137C  A4D8               	btfss	status,2,c
 23592   01137E  D004               	goto	l13758
 23593                           
 23594                           ;main.c: 722:      V.s_state = SEQ_STATE_TRIGGER;
 23595   011380  0E03               	movlw	3
 23596   011382  006F FFA0  FC1A    	movff	wreg,_V
 23597   011388                     l13758:
 23598                           
 23599                           ;main.c: 724:     if (V.t_l_state == LINK_STATE_ERROR)
 23600   011388  0063  F083  FFE8   	movff	_V+6,wreg	;volatile
 23601   01138E                     L42:
 23602   01138E  0A06               	xorlw	6
 23603   011390  A4D8               	btfss	status,2,c
 23604   011392  D0EB               	goto	l13786
 23605                           
 23606                           ;main.c: 725:      V.s_state = SEQ_STATE_ERROR;
 23607   011394  0E06               	movlw	6
 23608   011396  D087               	goto	L2
 23609   011398                     l13762:
 23610                           
 23611                           ;main.c: 728:     set_display_info(DIS_STR);
 23612   011398  0E00               	movlw	0
 23613   01139A  6EE6               	movwf	postinc1,c
 23614   01139C  EC2A  F0C0         	call	_set_display_info	;wreg free
 23615                           
 23616                           ;main.c: 729:     s = get_vterm_ptr(0, 0);
 23617   0113A0  0E00               	movlw	0
 23618   0113A2  6EE6               	movwf	postinc1,c
 23619   0113A4  0E00               	movlw	0
 23620   0113A6  6EE6               	movwf	postinc1,c
 23621   0113A8  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 23622                           
 23623                           ;stkvar	_s @ sp[(-3)+0]
 23624   0113AC  0EFE               	movlw	-2
 23625   0113AE  0060  F093  FFE3   	movff	btemp+1,plusw1
 23626   0113B4  0EFD               	movlw	-3
 23627   0113B6  0060  F08F  FFE3   	movff	btemp,plusw1
 23628                           
 23629                           ;main.c: 730:     if (V.queue) {
 23630   0113BC  EE23  F168         	lfsr	2,_V+334	;volatile
 23631   0113C0  A8DF               	btfss	indf2,4,c
 23632   0113C2  D02E               	goto	l1402
 23633                           
 23634                           ;main.c: 731:      V.r_l_state = LINK_STATE_IDLE;
 23635   0113C4  0E00               	movlw	0
 23636   0113C6  006F FFA0  FC1F    	movff	wreg,_V+5	;volatile
 23637                           
 23638                           ;main.c: 732:      V.t_l_state = LINK_STATE_IDLE;
 23639   0113CC  0E00               	movlw	0
 23640   0113CE  006F FFA0  FC20    	movff	wreg,_V+6	;volatile
 23641                           
 23642                           ;main.c: 733:      V.s_state = SEQ_STATE_TX;
 23643   0113D4  0E02               	movlw	2
 23644   0113D6  006F FFA0  FC1A    	movff	wreg,_V
 23645                           
 23646                           ;main.c: 734:      sprintf(s, " S%dF%d # OKQ%d        ", V.stream, V.function, V.e_types
      +                          );
 23647   0113DC  EE23  F01D         	lfsr	2,_V+3	;volatile
 23648   0113E0  50DF               	movf	indf2,w,c
 23649   0113E2  6EE6               	movwf	postinc1,c
 23650   0113E4  0E00               	movlw	0
 23651   0113E6  6EE6               	movwf	postinc1,c
 23652   0113E8  EE23  F14E         	lfsr	2,_V+308	;volatile
 23653   0113EC  50DF               	movf	indf2,w,c
 23654   0113EE  6EE6               	movwf	postinc1,c
 23655   0113F0  0E00               	movlw	0
 23656   0113F2  6EE6               	movwf	postinc1,c
 23657   0113F4  EE23  F14D         	lfsr	2,_V+307	;volatile
 23658   0113F8  50DF               	movf	indf2,w,c
 23659   0113FA  6EE6               	movwf	postinc1,c
 23660   0113FC  0E00               	movlw	0
 23661   0113FE  6EE6               	movwf	postinc1,c
 23662   011400  0E9E               	movlw	low STR_13
 23663   011402  6EE6               	movwf	postinc1,c
 23664   011404  0EFD               	movlw	high STR_13
 23665   011406  6EE6               	movwf	postinc1,c
 23666                           
 23667                           ;stkvar	_s @ sp[(-11)+0]
 23668   011408  0EF5               	movlw	-11
 23669   01140A  006F FF8F FFE6     	movff	plusw1,postinc1
 23670   011410  006F FF8F FFE6     	movff	plusw1,postinc1
 23671   011416  0E0A               	movlw	10
 23672   011418  6EE6               	movwf	postinc1,c
 23673   01141A  EC0A  F0B3         	call	_sprintf	;wreg free
 23674                           
 23675                           ;main.c: 735:     } else {
 23676   01141E  D025               	goto	l13774
 23677   011420                     l1402:
 23678                           
 23679                           ;main.c: 736:      V.s_state = SEQ_STATE_DONE;
 23680   011420  0E05               	movlw	5
 23681   011422  006F FFA0  FC1A    	movff	wreg,_V
 23682                           
 23683                           ;main.c: 737:      sprintf(s, " S%dF%d # OK %d        ", V.stream, V.function, V.e_types
      +                          );
 23684   011428  EE23  F01D         	lfsr	2,_V+3	;volatile
 23685   01142C  50DF               	movf	indf2,w,c
 23686   01142E  6EE6               	movwf	postinc1,c
 23687   011430  0E00               	movlw	0
 23688   011432  6EE6               	movwf	postinc1,c
 23689   011434  EE23  F14E         	lfsr	2,_V+308	;volatile
 23690   011438  50DF               	movf	indf2,w,c
 23691   01143A  6EE6               	movwf	postinc1,c
 23692   01143C  0E00               	movlw	0
 23693   01143E  6EE6               	movwf	postinc1,c
 23694   011440  EE23  F14D         	lfsr	2,_V+307	;volatile
 23695   011444  50DF               	movf	indf2,w,c
 23696   011446  6EE6               	movwf	postinc1,c
 23697   011448  0E00               	movlw	0
 23698   01144A  6EE6               	movwf	postinc1,c
 23699   01144C  0E86               	movlw	low STR_14
 23700   01144E  6EE6               	movwf	postinc1,c
 23701   011450  0EFD               	movlw	high STR_14
 23702   011452  6EE6               	movwf	postinc1,c
 23703                           
 23704                           ;stkvar	_s @ sp[(-11)+0]
 23705   011454  0EF5               	movlw	-11
 23706   011456  006F FF8F FFE6     	movff	plusw1,postinc1
 23707   01145C  006F FF8F FFE6     	movff	plusw1,postinc1
 23708   011462  0E0A               	movlw	10
 23709   011464  6EE6               	movwf	postinc1,c
 23710   011466  EC0A  F0B3         	call	_sprintf	;wreg free
 23711   01146A                     l13774:
 23712                           
 23713                           ; BSR set to: 1
 23714                           ;main.c: 740:     s[16] = 0;
 23715                           ;stkvar	_s @ sp[(-3)+0]
 23716   01146A  0EFD               	movlw	-3
 23717   01146C  006F FF8C  F02D    	movff	plusw1,btemp+10
 23718   011472  0EFE               	movlw	-2
 23719   011474  006F FF8C  F02E    	movff	plusw1,btemp+11
 23720   01147A  0E10               	movlw	16
 23721   01147C  242D               	addwf	(btemp+10)^0,w,c
 23722   01147E  6ED9               	movwf	fsr2l,c
 23723   011480  0E00               	movlw	0
 23724   011482  202E               	addwfc	(btemp+11)^0,w,c
 23725   011484  6EDA               	movwf	fsr2h,c
 23726   011486  6ADF               	clrf	indf2,c
 23727                           
 23728                           ; BSR set to: 1
 23729                           ;main.c: 741:     MyeaDogM_WriteStringAtPos(0, 0, s);
 23730                           ;stkvar	_s @ sp[(-3)+0]
 23731   011488  0EFD               	movlw	-3
 23732   01148A  006F FF8F FFE6     	movff	plusw1,postinc1
 23733   011490  006F FF8F FFE6     	movff	plusw1,postinc1
 23734   011496  0E00               	movlw	0
 23735   011498  6EE6               	movwf	postinc1,c
 23736   01149A  0E00               	movlw	0
 23737   01149C  6EE6               	movwf	postinc1,c
 23738   01149E  EC01  F0B1         	call	_MyeaDogM_WriteStringAtPos	;wreg free
 23739                           
 23740                           ;main.c: 742:     break;
 23741   0114A2  D063               	goto	l13786
 23742   0114A4                     l1404:
 23743                           
 23744                           ;main.c: 744:     V.s_state = SEQ_STATE_INIT;
 23745   0114A4  0E00               	movlw	0
 23746   0114A6                     L2:
 23747   0114A6  006F FFA0  FC1A    	movff	wreg,_V
 23748                           
 23749                           ;main.c: 745:     break;
 23750   0114AC  D05E               	goto	l13786
 23751   0114AE                     l1406:
 23752                           
 23753                           ;main.c: 748:     V.s_state = SEQ_STATE_INIT;
 23754   0114AE  0E00               	movlw	0
 23755   0114B0  006F FFA0  FC1A    	movff	wreg,_V
 23756                           
 23757                           ;main.c: 749:     sprintf(get_vterm_ptr(2, 0), "E%d A%d T%d G%d #", V.error, V.abort, V.
      +                          timer_error, V.g_state);
 23758   0114B6  EE23  F01C         	lfsr	2,_V+2	;volatile
 23759   0114BA  50DF               	movf	indf2,w,c
 23760   0114BC  6EE6               	movwf	postinc1,c
 23761   0114BE  0E00               	movlw	0
 23762   0114C0  6EE6               	movwf	postinc1,c
 23763   0114C2  EE23  F15B         	lfsr	2,_V+321	;volatile
 23764   0114C6  006F FF78  F02D    	movff	postinc2,btemp+10
 23765   0114CC  006F FF74  F02E    	movff	postdec2,btemp+11
 23766   0114D2  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 23767   0114D8  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 23768   0114DE  EE23  F150         	lfsr	2,_V+310	;volatile
 23769   0114E2  50DF               	movf	indf2,w,c
 23770   0114E4  6EE6               	movwf	postinc1,c
 23771   0114E6  0E00               	movlw	0
 23772   0114E8  6EE6               	movwf	postinc1,c
 23773   0114EA  EE23  F14F         	lfsr	2,_V+309	;volatile
 23774   0114EE  50DF               	movf	indf2,w,c
 23775   0114F0  6EE6               	movwf	postinc1,c
 23776   0114F2  0E00               	movlw	0
 23777   0114F4  6EE6               	movwf	postinc1,c
 23778   0114F6  0E47               	movlw	low STR_15
 23779   0114F8  6EE6               	movwf	postinc1,c
 23780   0114FA  0EFF               	movlw	high STR_15
 23781   0114FC  6EE6               	movwf	postinc1,c
 23782   0114FE  0E00               	movlw	0
 23783   011500  6EE6               	movwf	postinc1,c
 23784   011502  0E02               	movlw	2
 23785   011504  6EE6               	movwf	postinc1,c
 23786   011506  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 23787   01150A  0060  F08F  FFE6   	movff	btemp,postinc1
 23788   011510  0060  F093  FFE6   	movff	btemp+1,postinc1
 23789   011516  0E0C               	movlw	12
 23790   011518  6EE6               	movwf	postinc1,c
 23791   01151A  EC0A  F0B3         	call	_sprintf	;wreg free
 23792                           
 23793                           ;main.c: 750:     update_lcd(0);
 23794   01151E  0E00               	movlw	0
 23795   011520  6EE6               	movwf	postinc1,c
 23796   011522  EC82  F0B3         	call	_update_lcd	;wreg free
 23797                           
 23798                           ;main.c: 751:     WaitMs(2000);
 23799   011526  0ED0               	movlw	208
 23800   011528  6EE6               	movwf	postinc1,c
 23801   01152A  0E07               	movlw	7
 23802   01152C  6EE6               	movwf	postinc1,c
 23803   01152E  EC77  F0BD         	call	_WaitMs	;wreg free
 23804                           
 23805                           ;main.c: 752:     break;
 23806   011532  D01B               	goto	l13786
 23807   011534                     l13784:
 23808   011534  EE23  F01A         	lfsr	2,_V
 23809   011538  50DF               	movf	indf2,w,c
 23810   01153A  6E2D               	movwf	(btemp+10)^0,c
 23811   01153C  6A2E               	clrf	(btemp+11)^0,c
 23812                           
 23813                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23814                           ; Switch size 1, requested type "simple"
 23815                           ; Number of cases is 1, Range of values is 0 to 0
 23816                           ; switch strategies available:
 23817                           ; Name         Instructions Cycles
 23818                           ; simple_byte            4     3 (average)
 23819                           ;	Chosen strategy is simple_byte
 23820   01153E  502E               	movf	(btemp+11)^0,w,c
 23821   011540  0A00               	xorlw	0	; case 0
 23822   011542  A4D8               	btfss	status,2,c
 23823   011544  D7B4               	goto	l1406
 23824                           
 23825                           ; Switch size 1, requested type "simple"
 23826                           ; Number of cases is 6, Range of values is 0 to 6
 23827                           ; switch strategies available:
 23828                           ; Name         Instructions Cycles
 23829                           ; simple_byte           19    10 (average)
 23830                           ;	Chosen strategy is simple_byte
 23831   011546  502D               	movf	(btemp+10)^0,w,c
 23832   011548  0A00               	xorlw	0	; case 0
 23833   01154A  B4D8               	btfsc	status,2,c
 23834   01154C  D60E               	goto	l1386
 23835   01154E  0A01               	xorlw	1	; case 1
 23836   011550  B4D8               	btfsc	status,2,c
 23837   011552  D677               	goto	l13724
 23838   011554  0A03               	xorlw	3	; case 2
 23839   011556  B4D8               	btfsc	status,2,c
 23840   011558  D709               	goto	l13754
 23841   01155A  0A01               	xorlw	1	; case 3
 23842   01155C  B4D8               	btfsc	status,2,c
 23843   01155E  D71C               	goto	l13762
 23844   011560  0A06               	xorlw	6	; case 5
 23845   011562  B4D8               	btfsc	status,2,c
 23846   011564  D79F               	goto	l1404
 23847   011566  0A03               	xorlw	3	; case 6
 23848   011568  D7A2               	goto	l1406
 23849   01156A                     l13786:
 23850                           
 23851                           ;main.c: 754:    if ((V.error == LINK_ERROR_NONE) && (V.abort == LINK_ERROR_NONE)) {
 23852   01156A  0063  F53F  FFE8   	movff	_V+309,wreg	;volatile
 23853   011570  0A0A               	xorlw	10
 23854   011572  A4D8               	btfss	status,2,c
 23855   011574  D261               	goto	l13876
 23856   011576  0063  F543  FFE8   	movff	_V+310,wreg	;volatile
 23857   01157C  0A0A               	xorlw	10
 23858   01157E  A4D8               	btfss	status,2,c
 23859   011580  D25B               	goto	l13876
 23860                           
 23861                           ;main.c: 755:     if (TimerDone(TMR_DISPLAY)) {
 23862   011582  0E0A               	movlw	10
 23863   011584  6EE6               	movwf	postinc1,c
 23864   011586  ECAD  F0BF         	call	_TimerDone	;wreg free
 23865   01158A  5023               	movf	btemp^0,w,c
 23866   01158C  B4D8               	btfsc	status,2,c
 23867   01158E  D053               	goto	l13798
 23868                           
 23869                           ;main.c: 756:      if (V.debug)
 23870   011590  EE23  F168         	lfsr	2,_V+334	;volatile
 23871   011594  AADF               	btfss	indf2,5,c
 23872   011596  D027               	goto	l13796
 23873                           
 23874                           ;main.c: 757:       sprintf(get_vterm_ptr(2, 0), "H254 %d, T%ld       ", sizeof(header25
      +                          4), V.testing);
 23875   011598  EE23  F149         	lfsr	2,_V+303	;volatile
 23876   01159C  006F FF7B FFE6     	movff	postinc2,postinc1
 23877   0115A2  006F FF7B FFE6     	movff	postinc2,postinc1
 23878   0115A8  006F FF7B FFE6     	movff	postinc2,postinc1
 23879   0115AE  006F FF7B FFE6     	movff	postinc2,postinc1
 23880   0115B4  0E01               	movlw	1
 23881   0115B6  6EE6               	movwf	postinc1,c
 23882   0115B8  0E01               	movlw	1
 23883   0115BA  6EE6               	movwf	postinc1,c
 23884   0115BC  0E4B               	movlw	low STR_16
 23885   0115BE  6EE6               	movwf	postinc1,c
 23886   0115C0  0EFE               	movlw	high STR_16
 23887   0115C2  6EE6               	movwf	postinc1,c
 23888   0115C4  0E00               	movlw	0
 23889   0115C6  6EE6               	movwf	postinc1,c
 23890   0115C8  0E02               	movlw	2
 23891   0115CA  6EE6               	movwf	postinc1,c
 23892   0115CC  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 23893   0115D0  0060  F08F  FFE6   	movff	btemp,postinc1
 23894   0115D6  0060  F093  FFE6   	movff	btemp+1,postinc1
 23895   0115DC  0E0A               	movlw	10
 23896   0115DE  6EE6               	movwf	postinc1,c
 23897   0115E0  EC0A  F0B3         	call	_sprintf	;wreg free
 23898   0115E4  D028               	goto	l13798
 23899   0115E6                     l13796:
 23900                           
 23901                           ;main.c: 759:       sprintf(get_vterm_ptr(2, 0), "HOST: %ld G%d      #", V.ticks, V.g_st
      +                          ate);
 23902   0115E6  EE23  F01C         	lfsr	2,_V+2	;volatile
 23903   0115EA  50DF               	movf	indf2,w,c
 23904   0115EC  6EE6               	movwf	postinc1,c
 23905   0115EE  0E00               	movlw	0
 23906   0115F0  6EE6               	movwf	postinc1,c
 23907   0115F2  EE23  F141         	lfsr	2,_V+295	;volatile
 23908   0115F6  006F FF7B FFE6     	movff	postinc2,postinc1
 23909   0115FC  006F FF7B FFE6     	movff	postinc2,postinc1
 23910   011602  006F FF7B FFE6     	movff	postinc2,postinc1
 23911   011608  006F FF7B FFE6     	movff	postinc2,postinc1
 23912   01160E  0E60               	movlw	low STR_10
 23913   011610  6EE6               	movwf	postinc1,c
 23914   011612  0EFE               	movlw	high STR_10
 23915   011614  6EE6               	movwf	postinc1,c
 23916   011616  0E00               	movlw	0
 23917   011618  6EE6               	movwf	postinc1,c
 23918   01161A  0E02               	movlw	2
 23919   01161C  6EE6               	movwf	postinc1,c
 23920   01161E  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 23921   011622  0060  F08F  FFE6   	movff	btemp,postinc1
 23922   011628  0060  F093  FFE6   	movff	btemp+1,postinc1
 23923   01162E  0E0A               	movlw	10
 23924   011630  6EE6               	movwf	postinc1,c
 23925   011632  EC0A  F0B3         	call	_sprintf	;wreg free
 23926   011636                     l13798:
 23927                           
 23928                           ;main.c: 765:     if (((V.g_state == GEM_STATE_REMOTE) && (V.s_state == SEQ_STATE_RX) &&
      +                           !V.queue)) {
 23929   011636  0063  F073  FFE8   	movff	_V+2,wreg	;volatile
 23930   01163C  0A04               	xorlw	4
 23931   01163E  A4D8               	btfss	status,2,c
 23932   011640  D1FB               	goto	l13876
 23933   011642  0063  F06B  FFE8   	movff	_V,wreg
 23934   011648  0A01               	xorlw	1
 23935   01164A  A4D8               	btfss	status,2,c
 23936   01164C  D1F5               	goto	l13876
 23937   01164E  EE23  F168         	lfsr	2,_V+334	;volatile
 23938   011652  B8DF               	btfsc	indf2,4,c
 23939   011654  D1F1               	goto	l13876
 23940                           
 23941                           ;main.c: 766:      if ((V.r_l_state == LINK_STATE_IDLE) && (V.t_l_state == LINK_STATE_ID
      +                          LE)) {
 23942   011656  EE23  F01F         	lfsr	2,_V+5	;volatile
 23943   01165A  50DF               	movf	indf2,w,c
 23944   01165C  A4D8               	btfss	status,2,c
 23945   01165E  D1EC               	goto	l13876
 23946   011660  EE23  F020         	lfsr	2,_V+6	;volatile
 23947   011664  50DF               	movf	indf2,w,c
 23948   011666  A4D8               	btfss	status,2,c
 23949   011668  D1E7               	goto	l13876
 23950                           
 23951                           ;main.c: 767:       if (TimerDone(TMR_HBIO)) {
 23952   01166A  0E06               	movlw	6
 23953   01166C  6EE6               	movwf	postinc1,c
 23954   01166E  ECAD  F0BF         	call	_TimerDone	;wreg free
 23955   011672  5023               	movf	btemp^0,w,c
 23956   011674  B4D8               	btfsc	status,2,c
 23957   011676  D1E0               	goto	l13876
 23958                           
 23959                           ;main.c: 768:        set_display_info(DIS_STR);
 23960   011678  0E00               	movlw	0
 23961   01167A  6EE6               	movwf	postinc1,c
 23962   01167C  EC2A  F0C0         	call	_set_display_info	;wreg free
 23963                           
 23964                           ;main.c: 770:        if (V.stack) {
 23965   011680  EE23  F169         	lfsr	2,_V+335	;volatile
 23966   011684  50DF               	movf	223,w,c
 23967   011686  0B07               	andlw	7
 23968   011688  0900               	iorlw	0
 23969   01168A  B4D8               	btfsc	status,2,c
 23970   01168C  D013               	goto	l13824
 23971                           
 23972                           ;main.c: 771:         hb_message();
 23973   01168E  EC9E  F0BA         	call	_hb_message	;wreg free
 23974                           
 23975                           ;main.c: 772:         V.msg_error = MSG_ERROR_NONE;
 23976   011692  0E00               	movlw	0
 23977   011694  006F FFA0  FD51    	movff	wreg,_V+311	;volatile
 23978                           
 23979                           ;main.c: 773:         V.ping_count = 0;
 23980   01169A  0E00               	movlw	0
 23981   01169C  006F FFA0  FD9A    	movff	wreg,_V+384	;volatile
 23982                           
 23983                           ;main.c: 774:         V.error = LINK_ERROR_NONE;
 23984   0116A2  0E0A               	movlw	10
 23985   0116A4  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 23986                           
 23987                           ;main.c: 775:         V.abort = LINK_ERROR_NONE;
 23988   0116AA  0E0A               	movlw	10
 23989   0116AC  006F FFA0  FD50    	movff	wreg,_V+310	;volatile
 23990                           
 23991                           ;main.c: 776:        } else {
 23992   0116B2  D1C2               	goto	l13876
 23993   0116B4                     l13824:
 23994                           
 23995                           ;main.c: 777:         StartTimer(TMR_HBIO, 30000);
 23996   0116B4  0E30               	movlw	48
 23997   0116B6  6EE6               	movwf	postinc1,c
 23998   0116B8  0E75               	movlw	117
 23999   0116BA  6EE6               	movwf	postinc1,c
 24000   0116BC  0E06               	movlw	6
 24001   0116BE  6EE6               	movwf	postinc1,c
 24002   0116C0  EC02  F0BD         	call	_StartTimer	;wreg free
 24003                           
 24004                           ;main.c: 778:         if (V.ping_count++ > 4) {
 24005   0116C4  EE23  F19A         	lfsr	2,_V+384	;volatile
 24006   0116C8  006F FF7C  F02E    	movff	indf2,btemp+11
 24007   0116CE  0E01               	movlw	1
 24008   0116D0  26DF               	addwf	indf2,f,c
 24009   0116D2  0E04               	movlw	4
 24010   0116D4  642E               	cpfsgt	(btemp+11)^0,c
 24011   0116D6  D03C               	goto	l13840
 24012                           
 24013                           ;main.c: 779:          set_display_info(DIS_STR);
 24014   0116D8  0E00               	movlw	0
 24015   0116DA  6EE6               	movwf	postinc1,c
 24016   0116DC  EC2A  F0C0         	call	_set_display_info	;wreg free
 24017                           
 24018                           ;main.c: 780:          hb_message();
 24019   0116E0  EC9E  F0BA         	call	_hb_message	;wreg free
 24020                           
 24021                           ;main.c: 781:          sprintf(get_vterm_ptr(0, 0), "Ping P%d RTO %d    ", V.g_state, V.
      +                          equip_timeout);
 24022   0116E4  EE23  F161         	lfsr	2,_V+327	;volatile
 24023   0116E8  006F FF78  F02D    	movff	postinc2,btemp+10
 24024   0116EE  006F FF74  F02E    	movff	postdec2,btemp+11
 24025   0116F4  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 24026   0116FA  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 24027   011700  EE23  F01C         	lfsr	2,_V+2	;volatile
 24028   011704  50DF               	movf	indf2,w,c
 24029   011706  6EE6               	movwf	postinc1,c
 24030   011708  0E00               	movlw	0
 24031   01170A  6EE6               	movwf	postinc1,c
 24032   01170C  0EB1               	movlw	low STR_18
 24033   01170E  6EE6               	movwf	postinc1,c
 24034   011710  0EFE               	movlw	high STR_18
 24035   011712  6EE6               	movwf	postinc1,c
 24036   011714  0E00               	movlw	0
 24037   011716  6EE6               	movwf	postinc1,c
 24038   011718  0E00               	movlw	0
 24039   01171A  6EE6               	movwf	postinc1,c
 24040   01171C  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 24041   011720  0060  F08F  FFE6   	movff	btemp,postinc1
 24042   011726  0060  F093  FFE6   	movff	btemp+1,postinc1
 24043   01172C  0E08               	movlw	8
 24044   01172E  6EE6               	movwf	postinc1,c
 24045   011730  EC0A  F0B3         	call	_sprintf	;wreg free
 24046                           
 24047                           ; BSR set to: 1
 24048                           ;main.c: 782:          update_lcd(0);
 24049   011734  0E00               	movlw	0
 24050   011736  6EE6               	movwf	postinc1,c
 24051   011738  EC82  F0B3         	call	_update_lcd	;wreg free
 24052                           
 24053                           ;main.c: 783:          WaitMs(250);
 24054   01173C  0EFA               	movlw	250
 24055   01173E  6EE6               	movwf	postinc1,c
 24056   011740  0E00               	movlw	0
 24057   011742  6EE6               	movwf	postinc1,c
 24058   011744  EC77  F0BD         	call	_WaitMs	;wreg free
 24059                           
 24060                           ;main.c: 784:          V.ping_count = 0;
 24061   011748  0E00               	movlw	0
 24062   01174A  006F FFA0  FD9A    	movff	wreg,_V+384	;volatile
 24063   011750                     l13840:
 24064                           
 24065                           ;main.c: 786:         set_display_info(DIS_STR);
 24066   011750  0E00               	movlw	0
 24067   011752  6EE6               	movwf	postinc1,c
 24068   011754  EC2A  F0C0         	call	_set_display_info	;wreg free
 24069   011758  D16F               	goto	l13876
 24070   01175A                     l1419:
 24071                           
 24072                           ;main.c: 796:     V.m_l_state = LINK_STATE_IDLE;
 24073   01175A  0E00               	movlw	0
 24074   01175C  006F FFA0  FC1E    	movff	wreg,_V+4	;volatile
 24075                           
 24076                           ;main.c: 797:     V.s_state = SEQ_STATE_RX;
 24077   011762  0E01               	movlw	1
 24078   011764  006F FFA0  FC1A    	movff	wreg,_V
 24079                           
 24080                           ;main.c: 798:     if (V.debug) {
 24081   01176A  EE23  F168         	lfsr	2,_V+334	;volatile
 24082   01176E  AADF               	btfss	indf2,5,c
 24083   011770  D027               	goto	l13846
 24084                           
 24085                           ;main.c: 799:      sprintf(get_vterm_ptr(2, 0), "H254 %d, T%ld       ", sizeof(header254
      +                          ), V.testing);
 24086   011772  EE23  F149         	lfsr	2,_V+303	;volatile
 24087   011776  006F FF7B FFE6     	movff	postinc2,postinc1
 24088   01177C  006F FF7B FFE6     	movff	postinc2,postinc1
 24089   011782  006F FF7B FFE6     	movff	postinc2,postinc1
 24090   011788  006F FF7B FFE6     	movff	postinc2,postinc1
 24091   01178E  0E01               	movlw	1
 24092   011790  6EE6               	movwf	postinc1,c
 24093   011792  0E01               	movlw	1
 24094   011794  6EE6               	movwf	postinc1,c
 24095   011796  0E4B               	movlw	low STR_16
 24096   011798  6EE6               	movwf	postinc1,c
 24097   01179A  0EFE               	movlw	high STR_16
 24098   01179C  6EE6               	movwf	postinc1,c
 24099   01179E  0E00               	movlw	0
 24100   0117A0  6EE6               	movwf	postinc1,c
 24101   0117A2  0E02               	movlw	2
 24102   0117A4  6EE6               	movwf	postinc1,c
 24103   0117A6  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 24104   0117AA  0060  F08F  FFE6   	movff	btemp,postinc1
 24105   0117B0  0060  F093  FFE6   	movff	btemp+1,postinc1
 24106   0117B6  0E0A               	movlw	10
 24107   0117B8  6EE6               	movwf	postinc1,c
 24108   0117BA  EC0A  F0B3         	call	_sprintf	;wreg free
 24109                           
 24110                           ;main.c: 800:     } else {
 24111   0117BE  D0C5               	goto	l13866
 24112   0117C0                     l13846:
 24113                           
 24114                           ;main.c: 801:      sprintf(get_vterm_ptr(2, 0), "LOG: U%d G%d %d %d      #", V.uart, V.g
      +                          _state, V.timer_error, V.checksum_error);
 24115   0117C0  EE23  F159         	lfsr	2,_V+319	;volatile
 24116   0117C4  006F FF78  F02D    	movff	postinc2,btemp+10
 24117   0117CA  006F FF74  F02E    	movff	postdec2,btemp+11
 24118   0117D0  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 24119   0117D6  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 24120   0117DC  EE23  F15B         	lfsr	2,_V+321	;volatile
 24121   0117E0  006F FF78  F02D    	movff	postinc2,btemp+10
 24122   0117E6  006F FF74  F02E    	movff	postdec2,btemp+11
 24123   0117EC  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 24124   0117F2  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 24125   0117F8  EE23  F01C         	lfsr	2,_V+2	;volatile
 24126   0117FC  50DF               	movf	indf2,w,c
 24127   0117FE  6EE6               	movwf	postinc1,c
 24128   011800  0E00               	movlw	0
 24129   011802  6EE6               	movwf	postinc1,c
 24130   011804  EE23  F197         	lfsr	2,_V+381	;volatile
 24131   011808  50DF               	movf	indf2,w,c
 24132   01180A  6EE6               	movwf	postinc1,c
 24133   01180C  0E00               	movlw	0
 24134   01180E  6EE6               	movwf	postinc1,c
 24135   011810  0E23               	movlw	low STR_20
 24136   011812  6EE6               	movwf	postinc1,c
 24137   011814  0EFD               	movlw	high STR_20
 24138   011816  6EE6               	movwf	postinc1,c
 24139   011818  0E00               	movlw	0
 24140   01181A  6EE6               	movwf	postinc1,c
 24141   01181C  0E02               	movlw	2
 24142   01181E  6EE6               	movwf	postinc1,c
 24143   011820  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 24144   011824  0060  F08F  FFE6   	movff	btemp,postinc1
 24145   01182A  0060  F093  FFE6   	movff	btemp+1,postinc1
 24146   011830  0E0C               	movlw	12
 24147   011832  6EE6               	movwf	postinc1,c
 24148   011834  EC0A  F0B3         	call	_sprintf	;wreg free
 24149   011838  D088               	goto	l13866
 24150   01183A                     l13848:
 24151                           
 24152                           ;main.c: 808:     if (m_protocol(&V.m_l_state) == LINK_STATE_DONE) {
 24153   01183A  0E1E               	movlw	low (_V+4)
 24154   01183C  6EE6               	movwf	postinc1,c
 24155   01183E  0E0C               	movlw	high (_V+4)
 24156   011840  6EE6               	movwf	postinc1,c
 24157   011842  EC4D  F091         	call	_m_protocol	;wreg free
 24158   011846  0E04               	movlw	4
 24159   011848  1823               	xorwf	btemp^0,w,c
 24160   01184A  A4D8               	btfss	status,2,c
 24161   01184C  D03B               	goto	l13856
 24162                           
 24163                           ;main.c: 809:      sprintf(V.buf, "S%dF%d #%ld       ", V.stream, V.function, V.ticks);
 24164   01184E  EE23  F141         	lfsr	2,_V+295	;volatile
 24165   011852  006F FF7B FFE6     	movff	postinc2,postinc1
 24166   011858  006F FF7B FFE6     	movff	postinc2,postinc1
 24167   01185E  006F FF7B FFE6     	movff	postinc2,postinc1
 24168   011864  006F FF7B FFE6     	movff	postinc2,postinc1
 24169   01186A  EE23  F14E         	lfsr	2,_V+308	;volatile
 24170   01186E  50DF               	movf	indf2,w,c
 24171   011870  6EE6               	movwf	postinc1,c
 24172   011872  0E00               	movlw	0
 24173   011874  6EE6               	movwf	postinc1,c
 24174   011876  EE23  F14D         	lfsr	2,_V+307	;volatile
 24175   01187A  50DF               	movf	indf2,w,c
 24176   01187C  6EE6               	movwf	postinc1,c
 24177   01187E  0E00               	movlw	0
 24178   011880  6EE6               	movwf	postinc1,c
 24179   011882  0EFE               	movlw	low STR_21
 24180   011884  6EE6               	movwf	postinc1,c
 24181   011886  0EFE               	movlw	high STR_21
 24182   011888  6EE6               	movwf	postinc1,c
 24183   01188A  0E21               	movlw	low (_V+7)
 24184   01188C  6EE6               	movwf	postinc1,c
 24185   01188E  0E0C               	movlw	high (_V+7)
 24186   011890  6EE6               	movwf	postinc1,c
 24187   011892  0E0C               	movlw	12
 24188   011894  6EE6               	movwf	postinc1,c
 24189   011896  EC0A  F0B3         	call	_sprintf	;wreg free
 24190                           
 24191                           ; BSR set to: 1
 24192                           ;main.c: 810:      V.buf[13] = 0;
 24193   01189A  0E00               	movlw	0
 24194   01189C  006F FFA0  FC2E    	movff	wreg,_V+20	;volatile
 24195                           
 24196                           ;main.c: 811:      MyeaDogM_WriteStringAtPos(V.uart - 1, 0, V.buf);
 24197   0118A2  0E21               	movlw	low (_V+7)
 24198   0118A4  6EE6               	movwf	postinc1,c
 24199   0118A6  0E0C               	movlw	high (_V+7)
 24200   0118A8  6EE6               	movwf	postinc1,c
 24201   0118AA  0E00               	movlw	0
 24202   0118AC  6EE6               	movwf	postinc1,c
 24203   0118AE  0063  F65C  F02E   	movff	_V+381,btemp+11	;volatile
 24204   0118B4  042E               	decf	(btemp+11)^0,w,c
 24205   0118B6  6EE6               	movwf	postinc1,c
 24206   0118B8  EC01  F0B1         	call	_MyeaDogM_WriteStringAtPos	;wreg free
 24207                           
 24208                           ;main.c: 812:      V.s_state = SEQ_STATE_TRIGGER;
 24209   0118BC  0E03               	movlw	3
 24210   0118BE  006F FFA0  FC1A    	movff	wreg,_V
 24211   0118C4                     l13856:
 24212                           
 24213                           ;main.c: 814:     if (V.m_l_state == LINK_STATE_ERROR)
 24214   0118C4  0063  F07B  FFE8   	movff	_V+4,wreg	;volatile
 24215   0118CA  0A06               	xorlw	6
 24216   0118CC  A4D8               	btfss	status,2,c
 24217   0118CE  D03D               	goto	l13866
 24218                           
 24219                           ;main.c: 815:      V.s_state = SEQ_STATE_ERROR;
 24220   0118D0  0E06               	movlw	6
 24221   0118D2  D01F               	goto	L3
 24222   0118D4                     l1426:
 24223                           
 24224                           ;main.c: 818:     V.s_state = SEQ_STATE_DONE;
 24225   0118D4  0E05               	movlw	5
 24226   0118D6  006F FFA0  FC1A    	movff	wreg,_V
 24227                           
 24228                           ;main.c: 819:     sprintf(V.buf, "OK ");
 24229   0118DC  0EF5               	movlw	low STR_22
 24230   0118DE  6EE6               	movwf	postinc1,c
 24231   0118E0  0EFF               	movlw	high STR_22
 24232   0118E2  6EE6               	movwf	postinc1,c
 24233   0118E4  0E21               	movlw	low (_V+7)
 24234   0118E6  6EE6               	movwf	postinc1,c
 24235   0118E8  0E0C               	movlw	high (_V+7)
 24236   0118EA  6EE6               	movwf	postinc1,c
 24237   0118EC  0E04               	movlw	4
 24238   0118EE  6EE6               	movwf	postinc1,c
 24239   0118F0  EC0A  F0B3         	call	_sprintf	;wreg free
 24240                           
 24241                           ;main.c: 820:     MyeaDogM_WriteStringAtPos(V.uart - 1, 13, V.buf);
 24242   0118F4  0E21               	movlw	low (_V+7)
 24243   0118F6  6EE6               	movwf	postinc1,c
 24244   0118F8  0E0C               	movlw	high (_V+7)
 24245   0118FA  6EE6               	movwf	postinc1,c
 24246   0118FC  0E0D               	movlw	13
 24247   0118FE  6EE6               	movwf	postinc1,c
 24248   011900  0063  F65C  F02E   	movff	_V+381,btemp+11	;volatile
 24249   011906  042E               	decf	(btemp+11)^0,w,c
 24250   011908  6EE6               	movwf	postinc1,c
 24251   01190A  EC01  F0B1         	call	_MyeaDogM_WriteStringAtPos	;wreg free
 24252                           
 24253                           ;main.c: 821:     break;
 24254   01190E  D01D               	goto	l13866
 24255   011910                     l1429:
 24256                           
 24257                           ;main.c: 825:     V.s_state = SEQ_STATE_INIT;
 24258   011910  0E00               	movlw	0
 24259   011912                     L3:
 24260   011912  006F FFA0  FC1A    	movff	wreg,_V
 24261                           
 24262                           ;main.c: 826:     break;
 24263   011918  D018               	goto	l13866
 24264   01191A                     l13864:
 24265   01191A  EE23  F01A         	lfsr	2,_V
 24266   01191E  50DF               	movf	indf2,w,c
 24267   011920  6E2D               	movwf	(btemp+10)^0,c
 24268   011922  6A2E               	clrf	(btemp+11)^0,c
 24269                           
 24270                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24271                           ; Switch size 1, requested type "simple"
 24272                           ; Number of cases is 1, Range of values is 0 to 0
 24273                           ; switch strategies available:
 24274                           ; Name         Instructions Cycles
 24275                           ; simple_byte            4     3 (average)
 24276                           ;	Chosen strategy is simple_byte
 24277   011924  502E               	movf	(btemp+11)^0,w,c
 24278   011926  0A00               	xorlw	0	; case 0
 24279   011928  A4D8               	btfss	status,2,c
 24280   01192A  D7F2               	goto	l1429
 24281                           
 24282                           ; Switch size 1, requested type "simple"
 24283                           ; Number of cases is 5, Range of values is 0 to 6
 24284                           ; switch strategies available:
 24285                           ; Name         Instructions Cycles
 24286                           ; simple_byte           16     9 (average)
 24287                           ;	Chosen strategy is simple_byte
 24288   01192C  502D               	movf	(btemp+10)^0,w,c
 24289   01192E  0A00               	xorlw	0	; case 0
 24290   011930  B4D8               	btfsc	status,2,c
 24291   011932  D713               	goto	l1419
 24292   011934  0A01               	xorlw	1	; case 1
 24293   011936  B4D8               	btfsc	status,2,c
 24294   011938  D780               	goto	l13848
 24295   01193A  0A02               	xorlw	2	; case 3
 24296   01193C  B4D8               	btfsc	status,2,c
 24297   01193E  D7CA               	goto	l1426
 24298   011940  0A06               	xorlw	6	; case 5
 24299   011942  B4D8               	btfsc	status,2,c
 24300   011944  D7E5               	goto	l1429
 24301   011946  0A03               	xorlw	3	; case 6
 24302   011948  D7E3               	goto	l1429
 24303   01194A                     l13866:
 24304                           
 24305                           ;main.c: 828:    if (V.debug)
 24306   01194A  EE23  F168         	lfsr	2,_V+334	;volatile
 24307   01194E  AADF               	btfss	indf2,5,c
 24308   011950  D01B               	goto	l13870
 24309                           
 24310                           ;main.c: 829:     sprintf(get_vterm_ptr(2, 0), "Equip type %d       ", V.e_types);
 24311   011952  EE23  F01D         	lfsr	2,_V+3	;volatile
 24312   011956  50DF               	movf	indf2,w,c
 24313   011958  6EE6               	movwf	postinc1,c
 24314   01195A  0E00               	movlw	0
 24315   01195C  6EE6               	movwf	postinc1,c
 24316   01195E  0E36               	movlw	low STR_23
 24317   011960  6EE6               	movwf	postinc1,c
 24318   011962  0EFE               	movlw	high STR_23
 24319   011964  6EE6               	movwf	postinc1,c
 24320   011966  0E00               	movlw	0
 24321   011968  6EE6               	movwf	postinc1,c
 24322   01196A  0E02               	movlw	2
 24323   01196C  6EE6               	movwf	postinc1,c
 24324   01196E  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 24325   011972  0060  F08F  FFE6   	movff	btemp,postinc1
 24326   011978  0060  F093  FFE6   	movff	btemp+1,postinc1
 24327   01197E  0E06               	movlw	6
 24328   011980  6EE6               	movwf	postinc1,c
 24329   011982  EC0A  F0B3         	call	_sprintf	;wreg free
 24330   011986  D058               	goto	l13876
 24331   011988                     l13870:
 24332                           
 24333                           ;main.c: 831:     sprintf(get_vterm_ptr(2, 0), "LOG: U%d G%d %d %d      #", V.uart, V.g_
      +                          state, V.timer_error, V.checksum_error);
 24334   011988  EE23  F159         	lfsr	2,_V+319	;volatile
 24335   01198C  006F FF78  F02D    	movff	postinc2,btemp+10
 24336   011992  006F FF74  F02E    	movff	postdec2,btemp+11
 24337   011998  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 24338   01199E  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 24339   0119A4  EE23  F15B         	lfsr	2,_V+321	;volatile
 24340   0119A8  006F FF78  F02D    	movff	postinc2,btemp+10
 24341   0119AE  006F FF74  F02E    	movff	postdec2,btemp+11
 24342   0119B4  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 24343   0119BA  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 24344   0119C0  EE23  F01C         	lfsr	2,_V+2	;volatile
 24345   0119C4  50DF               	movf	indf2,w,c
 24346   0119C6  6EE6               	movwf	postinc1,c
 24347   0119C8  0E00               	movlw	0
 24348   0119CA  6EE6               	movwf	postinc1,c
 24349   0119CC  EE23  F197         	lfsr	2,_V+381	;volatile
 24350   0119D0  50DF               	movf	indf2,w,c
 24351   0119D2  6EE6               	movwf	postinc1,c
 24352   0119D4  0E00               	movlw	0
 24353   0119D6  6EE6               	movwf	postinc1,c
 24354   0119D8  0E23               	movlw	low STR_20
 24355   0119DA  6EE6               	movwf	postinc1,c
 24356   0119DC  0EFD               	movlw	high STR_20
 24357   0119DE  6EE6               	movwf	postinc1,c
 24358   0119E0  0E00               	movlw	0
 24359   0119E2  6EE6               	movwf	postinc1,c
 24360   0119E4  0E02               	movlw	2
 24361   0119E6  6EE6               	movwf	postinc1,c
 24362   0119E8  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 24363   0119EC  0060  F08F  FFE6   	movff	btemp,postinc1
 24364   0119F2  0060  F093  FFE6   	movff	btemp+1,postinc1
 24365   0119F8  0E0C               	movlw	12
 24366   0119FA  6EE6               	movwf	postinc1,c
 24367   0119FC  EC0A  F0B3         	call	_sprintf	;wreg free
 24368   011A00  D01B               	goto	l13876
 24369   011A02                     l1433:
 24370                           
 24371                           ;main.c: 835:    V.ui_state = UI_STATE_INIT;
 24372   011A02  0E00               	movlw	0
 24373   011A04  006F FFA0  FC1B    	movff	wreg,_V+1	;volatile
 24374                           
 24375                           ;main.c: 836:    break;
 24376   011A0A  D016               	goto	l13876
 24377   011A0C                     l13874:
 24378   011A0C  EE23  F01B         	lfsr	2,_V+1	;volatile
 24379   011A10  50DF               	movf	indf2,w,c
 24380   011A12  6E2D               	movwf	(btemp+10)^0,c
 24381   011A14  6A2E               	clrf	(btemp+11)^0,c
 24382                           
 24383                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24384                           ; Switch size 1, requested type "simple"
 24385                           ; Number of cases is 1, Range of values is 0 to 0
 24386                           ; switch strategies available:
 24387                           ; Name         Instructions Cycles
 24388                           ; simple_byte            4     3 (average)
 24389                           ;	Chosen strategy is simple_byte
 24390   011A16  502E               	movf	(btemp+11)^0,w,c
 24391   011A18  0A00               	xorlw	0	; case 0
 24392   011A1A  A4D8               	btfss	status,2,c
 24393   011A1C  D7F2               	goto	l1433
 24394                           
 24395                           ; Switch size 1, requested type "simple"
 24396                           ; Number of cases is 4, Range of values is 0 to 4
 24397                           ; switch strategies available:
 24398                           ; Name         Instructions Cycles
 24399                           ; simple_byte           13     7 (average)
 24400                           ;	Chosen strategy is simple_byte
 24401   011A1E  502D               	movf	(btemp+10)^0,w,c
 24402   011A20  0A00               	xorlw	0	; case 0
 24403   011A22  B4D8               	btfsc	status,2,c
 24404   011A24  EFE6  F087         	goto	l13676
 24405   011A28  0A01               	xorlw	1	; case 1
 24406   011A2A  B4D8               	btfsc	status,2,c
 24407   011A2C  D583               	goto	l13784
 24408   011A2E  0A02               	xorlw	2	; case 3
 24409   011A30  B4D8               	btfsc	status,2,c
 24410   011A32  D773               	goto	l13864
 24411   011A34  0A07               	xorlw	7	; case 4
 24412   011A36  D7E5               	goto	l1433
 24413   011A38                     l13876:
 24414                           
 24415                           ;main.c: 838:   if (V.ticks) {
 24416   011A38  EE23  F141         	lfsr	2,_V+295	;volatile
 24417   011A3C  50DE               	movf	postinc2,w,c
 24418   011A3E  10DE               	iorwf	postinc2,w,c
 24419   011A40  10DE               	iorwf	postinc2,w,c
 24420   011A42  10DE               	iorwf	postinc2,w,c
 24421   011A44  B4D8               	btfsc	status,2,c
 24422   011A46  D02C               	goto	l13886
 24423                           
 24424                           ;main.c: 839:    if (V.failed_receive) {
 24425   011A48  EE23  F168         	lfsr	2,_V+334	;volatile
 24426   011A4C  50DF               	movf	223,w,c
 24427   011A4E  0B0F               	andlw	15
 24428   011A50  0900               	iorlw	0
 24429   011A52  B4D8               	btfsc	status,2,c
 24430   011A54  D00B               	goto	l1446
 24431                           
 24432                           ;main.c: 840:     do { LATDbits.LATD4 = 0; } while(0);
 24433   011A56  98BD               	bcf	189,4,c	;volatile
 24434                           
 24435                           ;main.c: 841:     do { LATDbits.LATD5 = 1; } while(0);
 24436   011A58  8ABD               	bsf	189,5,c	;volatile
 24437                           
 24438                           ;main.c: 842:     if (V.error == LINK_ERROR_CHECKSUM) {
 24439   011A5A  0063  F53F  FFE8   	movff	_V+309,wreg	;volatile
 24440   011A60  0A0F               	xorlw	15
 24441   011A62  A4D8               	btfss	status,2,c
 24442   011A64  D007               	goto	l13882
 24443                           
 24444                           ;main.c: 843:      do { LATFbits.LATF4 = 0; } while(0);
 24445   011A66  98BF               	bcf	191,4,c	;volatile
 24446                           
 24447                           ;main.c: 844:      do { LATFbits.LATF5 = 1; } while(0);
 24448   011A68  8ABF               	bsf	191,5,c	;volatile
 24449   011A6A  D004               	goto	l13882
 24450   011A6C                     l1446:
 24451   011A6C  88BD               	bsf	189,4,c	;volatile
 24452                           
 24453                           ;main.c: 848:     do { LATDbits.LATD5 = 0; } while(0);
 24454   011A6E  9ABD               	bcf	189,5,c	;volatile
 24455                           
 24456                           ;main.c: 849:     do { LATFbits.LATF4 = 1; } while(0);
 24457   011A70  88BF               	bsf	191,4,c	;volatile
 24458                           
 24459                           ;main.c: 850:     do { LATFbits.LATF5 = 0; } while(0);
 24460   011A72  9ABF               	bcf	191,5,c	;volatile
 24461   011A74                     l13882:
 24462                           
 24463                           ;main.c: 852:    if (V.failed_send) {
 24464   011A74  EE23  F167         	lfsr	2,_V+333	;volatile
 24465   011A78  38DF               	swapf	223,w,c
 24466   011A7A  0B0F               	andlw	15
 24467   011A7C  0900               	iorlw	0
 24468   011A7E  B4D8               	btfsc	status,2,c
 24469   011A80  D00B               	goto	l1465
 24470                           
 24471                           ;main.c: 853:     do { LATDbits.LATD6 = 0; } while(0);
 24472   011A82  9CBD               	bcf	189,6,c	;volatile
 24473                           
 24474                           ;main.c: 854:     do { LATDbits.LATD7 = 1; } while(0);
 24475   011A84  8EBD               	bsf	189,7,c	;volatile
 24476                           
 24477                           ;main.c: 855:     if (V.error == LINK_ERROR_CHECKSUM) {
 24478   011A86  0063  F53F  FFE8   	movff	_V+309,wreg	;volatile
 24479   011A8C  0A0F               	xorlw	15
 24480   011A8E  A4D8               	btfss	status,2,c
 24481   011A90  D007               	goto	l13886
 24482                           
 24483                           ;main.c: 856:      do { LATFbits.LATF6 = 0; } while(0);
 24484   011A92  9CBF               	bcf	191,6,c	;volatile
 24485                           
 24486                           ;main.c: 857:      do { LATFbits.LATF7 = 1; } while(0);
 24487   011A94  8EBF               	bsf	191,7,c	;volatile
 24488   011A96  D004               	goto	l13886
 24489   011A98                     l1465:
 24490   011A98  8CBD               	bsf	189,6,c	;volatile
 24491                           
 24492                           ;main.c: 861:     do { LATDbits.LATD7 = 0; } while(0);
 24493   011A9A  9EBD               	bcf	189,7,c	;volatile
 24494                           
 24495                           ;main.c: 862:     do { LATFbits.LATF6 = 1; } while(0);
 24496   011A9C  8CBF               	bsf	191,6,c	;volatile
 24497                           
 24498                           ;main.c: 863:     do { LATFbits.LATF7 = 0; } while(0);
 24499   011A9E  9EBF               	bcf	191,7,c	;volatile
 24500   011AA0                     l13886:
 24501                           
 24502                           ;main.c: 867:   if (mode != UI_STATE_LOG)
 24503                           ;stkvar	_mode @ sp[(-3)+2]
 24504   011AA0  0EFF               	movlw	-1
 24505   011AA2  006F FF8C  F023    	movff	plusw1,btemp
 24506   011AA8  0E03               	movlw	3
 24507   011AAA  1823               	xorwf	btemp^0,w,c
 24508   011AAC  B4D8               	btfsc	status,2,c
 24509   011AAE  D061               	goto	l13900
 24510                           
 24511                           ;main.c: 868:    if (TimerDone(TMR_DISPLAY)) {
 24512   011AB0  0E0A               	movlw	10
 24513   011AB2  6EE6               	movwf	postinc1,c
 24514   011AB4  ECAD  F0BF         	call	_TimerDone	;wreg free
 24515   011AB8  5023               	movf	btemp^0,w,c
 24516   011ABA  B4D8               	btfsc	status,2,c
 24517   011ABC  D05A               	goto	l13900
 24518                           
 24519                           ;main.c: 869:     if (TimerDone(TMR_HELPDIS)) {
 24520   011ABE  0E09               	movlw	9
 24521   011AC0  6EE6               	movwf	postinc1,c
 24522   011AC2  ECAD  F0BF         	call	_TimerDone	;wreg free
 24523   011AC6  5023               	movf	btemp^0,w,c
 24524   011AC8  B4D8               	btfsc	status,2,c
 24525   011ACA  D004               	goto	l13894
 24526                           
 24527                           ;main.c: 870:      set_display_info(DIS_STR);
 24528   011ACC  0E00               	movlw	0
 24529   011ACE  6EE6               	movwf	postinc1,c
 24530   011AD0  EC2A  F0C0         	call	_set_display_info	;wreg free
 24531   011AD4                     l13894:
 24532                           
 24533                           ;main.c: 872:     sprintf(get_vterm_ptr(1, 0), "R%d %d, T%d %d C%d %d      #", V.r_l_sta
      +                          te, V.failed_receive, V.t_l_state, V.failed_send, V.checksum_error, V.stack);
 24534   011AD4  EE23  F169         	lfsr	2,_V+335	;volatile
 24535   011AD8  50DF               	movf	223,w,c
 24536   011ADA  0B07               	andlw	7
 24537   011ADC  6EE6               	movwf	postinc1,c
 24538   011ADE  0E00               	movlw	0
 24539   011AE0  6EE6               	movwf	postinc1,c
 24540   011AE2  EE23  F159         	lfsr	2,_V+319	;volatile
 24541   011AE6  006F FF78  F02D    	movff	postinc2,btemp+10
 24542   011AEC  006F FF74  F02E    	movff	postdec2,btemp+11
 24543   011AF2  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 24544   011AF8  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 24545   011AFE  EE23  F167         	lfsr	2,_V+333	;volatile
 24546   011B02  38DF               	swapf	223,w,c
 24547   011B04  0B0F               	andlw	15
 24548   011B06  6EE6               	movwf	postinc1,c
 24549   011B08  0E00               	movlw	0
 24550   011B0A  6EE6               	movwf	postinc1,c
 24551   011B0C  EE23  F020         	lfsr	2,_V+6	;volatile
 24552   011B10  50DF               	movf	indf2,w,c
 24553   011B12  6EE6               	movwf	postinc1,c
 24554   011B14  0E00               	movlw	0
 24555   011B16  6EE6               	movwf	postinc1,c
 24556   011B18  EE23  F168         	lfsr	2,_V+334	;volatile
 24557   011B1C  50DF               	movf	223,w,c
 24558   011B1E  0B0F               	andlw	15
 24559   011B20  6EE6               	movwf	postinc1,c
 24560   011B22  0E00               	movlw	0
 24561   011B24  6EE6               	movwf	postinc1,c
 24562   011B26  EE23  F01F         	lfsr	2,_V+5	;volatile
 24563   011B2A  50DF               	movf	indf2,w,c
 24564   011B2C  6EE6               	movwf	postinc1,c
 24565   011B2E  0E00               	movlw	0
 24566   011B30  6EE6               	movwf	postinc1,c
 24567   011B32  0EB8               	movlw	low STR_25
 24568   011B34  6EE6               	movwf	postinc1,c
 24569   011B36  0EFC               	movlw	high STR_25
 24570   011B38  6EE6               	movwf	postinc1,c
 24571   011B3A  0E00               	movlw	0
 24572   011B3C  6EE6               	movwf	postinc1,c
 24573   011B3E  0E01               	movlw	1
 24574   011B40  6EE6               	movwf	postinc1,c
 24575   011B42  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 24576   011B46  0060  F08F  FFE6   	movff	btemp,postinc1
 24577   011B4C  0060  F093  FFE6   	movff	btemp+1,postinc1
 24578   011B52  0E10               	movlw	16
 24579   011B54  6EE6               	movwf	postinc1,c
 24580   011B56  EC0A  F0B3         	call	_sprintf	;wreg free
 24581                           
 24582                           ; BSR set to: 1
 24583                           ;main.c: 873:     StartTimer(TMR_DISPLAY, 100);
 24584   011B5A  0E64               	movlw	100
 24585   011B5C  6EE6               	movwf	postinc1,c
 24586   011B5E  0E00               	movlw	0
 24587   011B60  6EE6               	movwf	postinc1,c
 24588   011B62  0E0A               	movlw	10
 24589   011B64  6EE6               	movwf	postinc1,c
 24590   011B66  EC02  F0BD         	call	_StartTimer	;wreg free
 24591                           
 24592                           ;main.c: 874:     update_lcd(0);
 24593   011B6A  0E00               	movlw	0
 24594   011B6C  6EE6               	movwf	postinc1,c
 24595   011B6E  EC82  F0B3         	call	_update_lcd	;wreg free
 24596   011B72                     l13900:
 24597                           
 24598                           ;main.c: 880:   check_help(V.flipper);
 24599   011B72  EE23  F19C         	lfsr	2,_V+386	;volatile
 24600   011B76  50DF               	movf	indf2,w,c
 24601   011B78  6EE6               	movwf	postinc1,c
 24602   011B7A  ECF6  F0A5         	call	_check_help	;wreg free
 24603                           
 24604                           ;main.c: 885:   if (V.set_sequ) {
 24605   011B7E  EE23  F167         	lfsr	2,_V+333	;volatile
 24606   011B82  A6DF               	btfss	indf2,3,c
 24607   011B84  D743               	goto	l13874
 24608                           
 24609                           ;main.c: 886:    if (TimerDone(TMR_INFO)) {
 24610   011B86  0E07               	movlw	7
 24611   011B88  6EE6               	movwf	postinc1,c
 24612   011B8A  ECAD  F0BF         	call	_TimerDone	;wreg free
 24613   011B8E  5023               	movf	btemp^0,w,c
 24614   011B90  B4D8               	btfsc	status,2,c
 24615   011B92  D00C               	goto	l13912
 24616                           
 24617                           ;main.c: 887:     V.set_sequ = 0;
 24618   011B94  EE23  F167         	lfsr	2,_V+333	;volatile
 24619   011B98  96DF               	bcf	indf2,3,c
 24620                           
 24621                           ;main.c: 888:     set_vterm(0);
 24622   011B9A  0E00               	movlw	0
 24623   011B9C  6EE6               	movwf	postinc1,c
 24624   011B9E  EC49  F0C0         	call	_set_vterm	;wreg free
 24625                           
 24626                           ;main.c: 889:     update_lcd(0);
 24627   011BA2  0E00               	movlw	0
 24628   011BA4  6EE6               	movwf	postinc1,c
 24629   011BA6  EC82  F0B3         	call	_update_lcd	;wreg free
 24630                           
 24631                           ;main.c: 890:    } else {
 24632   011BAA  D730               	goto	l13874
 24633   011BAC                     l13912:
 24634                           
 24635                           ;main.c: 891:     set_vterm(2);
 24636   011BAC  0E02               	movlw	2
 24637   011BAE  6EE6               	movwf	postinc1,c
 24638   011BB0  EC49  F0C0         	call	_set_vterm	;wreg free
 24639                           
 24640                           ;main.c: 892:     update_lcd(2);
 24641   011BB4  0E02               	movlw	2
 24642   011BB6  6EE6               	movwf	postinc1,c
 24643   011BB8  EC82  F0B3         	call	_update_lcd	;wreg free
 24644   011BBC  D727               	goto	l13874
 24645   011BBE                     __end_of_main:
 24646                           	callstack 0
 24647                           
 24648 ;; *************** function _t_protocol *****************
 24649 ;; Defined at:
 24650 ;;		line 365 in file "gemsecs.c"
 24651 ;; Parameters:    Size  Location     Type
 24652 ;;  t_link          2  [STACK] PTR enum E17017
 24653 ;;		 -> V(387), 
 24654 ;; Auto vars:     Size  Location     Type
 24655 ;;  rxData          1  [STACK] unsigned char 
 24656 ;; Return value:  Size  Location     Type
 24657 ;;                  1  [STACK] enum E17295
 24658 ;; Registers used:
 24659 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 24660 ;; Tracked objects:
 24661 ;;		On entry : 0/3C
 24662 ;;		On exit  : 0/0
 24663 ;;		Unchanged: 0/0
 24664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24669 ;;Total ram usage:        0 bytes
 24670 ;; Hardware stack levels used: 1
 24671 ;; Hardware stack levels required when called: 14
 24672 ;; This function calls:
 24673 ;;		_StartTimer
 24674 ;;		_TimerDone
 24675 ;;		_UART1_Read
 24676 ;;		_UART1_Write
 24677 ;;		_UART1_is_rx_ready
 24678 ;;		_UART1_put_buffer
 24679 ;;		_secs_II_message
 24680 ;;		_secs_send
 24681 ;; This function is called by:
 24682 ;;		_main
 24683 ;; This function uses a reentrant model
 24684 ;;
 24685                           
 24686                           	psect	text1
 24687   013636                     __ptext1:
 24688                           	callstack 0
 24689   013636                     _t_protocol:
 24690                           	callstack 0
 24691                           
 24692                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24693   013636  52E6               	movf	postinc1,f,c
 24694                           
 24695                           ;gemsecs.c: 365: LINK_STATES t_protocol(LINK_STATES * t_link);gemsecs.c: 366: {;gemsecs.
      +                          c: 367:  uint8_t rxData;;gemsecs.c: 368:  static uint8_t retry, requeue = 0;;gemsecs.c: 
      +                          369:  static response_type block;;gemsecs.c: 371:  switch (*t_link) {
 24696                           
 24697                           ;incstack = 0
 24698   013638  D166               	goto	l13334
 24699   01363A                     l1928:
 24700                           
 24701                           ;gemsecs.c: 373:   V.error = LINK_ERROR_NONE;
 24702   01363A  0E0A               	movlw	10
 24703   01363C  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 24704                           
 24705                           ;gemsecs.c: 374:   retry = 3;
 24706   013642  0E03               	movlw	3
 24707   013644  6E0C               	movwf	t_protocol@retry^0,c
 24708                           
 24709                           ;gemsecs.c: 375:   UART1_Write(0x05);
 24710   013646  0E05               	movlw	5
 24711   013648  6EE6               	movwf	postinc1,c
 24712   01364A  EC49  F0BC         	call	_UART1_Write	;wreg free
 24713   01364E                     l13226:
 24714                           
 24715                           ;gemsecs.c: 376:   StartTimer(TMR_T2, 3000);
 24716   01364E  0EB8               	movlw	184
 24717   013650  6EE6               	movwf	postinc1,c
 24718   013652  0E0B               	movlw	11
 24719   013654  6EE6               	movwf	postinc1,c
 24720   013656  0E02               	movlw	2
 24721   013658  6EE6               	movwf	postinc1,c
 24722   01365A  EC02  F0BD         	call	_StartTimer	;wreg free
 24723                           
 24724                           ;gemsecs.c: 377:   break;
 24725   01365E  D178               	goto	l13336
 24726   013660                     l13228:
 24727                           
 24728                           ;gemsecs.c: 379:   if (TimerDone(TMR_T2)) {
 24729   013660  0E02               	movlw	2
 24730   013662  6EE6               	movwf	postinc1,c
 24731   013664  ECAD  F0BF         	call	_TimerDone	;wreg free
 24732   013668  5023               	movf	btemp^0,w,c
 24733   01366A  B4D8               	btfsc	status,2,c
 24734   01366C  D027               	goto	l13244
 24735                           
 24736                           ;gemsecs.c: 380:    V.timer_error++;
 24737   01366E  EE23  F15B         	lfsr	2,_V+321	;volatile
 24738   013672  2ADE               	incf	postinc2,f,c
 24739   013674  0E00               	movlw	0
 24740   013676  22DD               	addwfc	postdec2,f,c
 24741                           
 24742                           ;gemsecs.c: 381:    V.all_errors++;
 24743   013678  EE23  F165         	lfsr	2,_V+331	;volatile
 24744   01367C  2ADE               	incf	postinc2,f,c
 24745   01367E  0E00               	movlw	0
 24746   013680  22DD               	addwfc	postdec2,f,c
 24747                           
 24748                           ;gemsecs.c: 382:    if (!retry--) {
 24749   013682  060C               	decf	t_protocol@retry^0,f,c
 24750   013684  280C               	incf	t_protocol@retry^0,w,c
 24751   013686  A4D8               	btfss	status,2,c
 24752   013688  D7E2               	goto	l13226
 24753                           
 24754                           ;gemsecs.c: 383:     V.error = LINK_ERROR_T2;
 24755   01368A  0E0C               	movlw	12
 24756   01368C  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 24757                           
 24758                           ;gemsecs.c: 384:     V.all_errors++;
 24759   013692  EE23  F165         	lfsr	2,_V+331	;volatile
 24760   013696  2ADE               	incf	postinc2,f,c
 24761   013698  0E00               	movlw	0
 24762   01369A  22DD               	addwfc	postdec2,f,c
 24763                           
 24764                           ;gemsecs.c: 385:     V.failed_send = 1;
 24765   01369C  EE23  F167         	lfsr	2,_V+333	;volatile
 24766   0136A0  50DF               	movf	223,w,c
 24767   0136A2  0B0F               	andlw	-241
 24768   0136A4  0910               	iorlw	16
 24769   0136A6  6EDF               	movwf	223,c
 24770                           
 24771                           ;gemsecs.c: 386:     *t_link = LINK_STATE_NAK;
 24772                           ;stkvar	_t_link @ sp[(-1)+-2]
 24773   0136A8  0EFD               	movlw	-3
 24774   0136AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 24775   0136B0  0EFE               	movlw	-2
 24776   0136B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 24777   0136B8  0E05               	movlw	5
 24778   0136BA  D0B7               	goto	L5
 24779   0136BC                     l13244:
 24780                           
 24781                           ;gemsecs.c: 391:    if (UART1_is_rx_ready()) {
 24782   0136BC  EC46  F0C1         	call	_UART1_is_rx_ready	;wreg free
 24783   0136C0  5023               	movf	btemp^0,w,c
 24784   0136C2  B4D8               	btfsc	status,2,c
 24785   0136C4  D145               	goto	l13336
 24786                           
 24787                           ;gemsecs.c: 392:     rxData = UART1_Read();
 24788   0136C6  ECC6  F0BC         	call	_UART1_Read	;wreg free
 24789                           
 24790                           ;stkvar	_rxData @ sp[(-1)+0]
 24791   0136CA  0EFF               	movlw	-1
 24792   0136CC  0060  F08F  FFE3   	movff	btemp,plusw1
 24793                           
 24794                           ; BSR set to: 57
 24795                           ;gemsecs.c: 393:     if (rxData == 0x04) {
 24796                           ;stkvar	_rxData @ sp[(-1)+0]
 24797   0136D2  0EFF               	movlw	-1
 24798   0136D4  006F FF8C  F023    	movff	plusw1,btemp
 24799   0136DA  0E04               	movlw	4
 24800   0136DC  1823               	xorwf	btemp^0,w,c
 24801   0136DE  A4D8               	btfss	status,2,c
 24802   0136E0  D012               	goto	l13254
 24803                           
 24804                           ; BSR set to: 57
 24805                           ;gemsecs.c: 394:      StartTimer(TMR_T3, 5000);
 24806   0136E2  0E88               	movlw	136
 24807   0136E4  6EE6               	movwf	postinc1,c
 24808   0136E6  0E13               	movlw	19
 24809   0136E8  6EE6               	movwf	postinc1,c
 24810   0136EA  0E03               	movlw	3
 24811   0136EC  6EE6               	movwf	postinc1,c
 24812   0136EE  EC02  F0BD         	call	_StartTimer	;wreg free
 24813                           
 24814                           ;gemsecs.c: 395:      *t_link = LINK_STATE_EOT;
 24815                           ;stkvar	_t_link @ sp[(-1)+-2]
 24816   0136F2  0EFD               	movlw	-3
 24817   0136F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 24818   0136FA  0EFE               	movlw	-2
 24819   0136FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 24820   013702  0E02               	movlw	2
 24821   013704  6EDF               	movwf	indf2,c
 24822   013706                     l13254:
 24823                           
 24824                           ;gemsecs.c: 397:     if (rxData == 0x05) {
 24825                           ;stkvar	_rxData @ sp[(-1)+0]
 24826   013706  0EFF               	movlw	-1
 24827   013708  006F FF8C  F023    	movff	plusw1,btemp
 24828   01370E  0E05               	movlw	5
 24829   013710  1823               	xorwf	btemp^0,w,c
 24830   013712  A4D8               	btfss	status,2,c
 24831   013714  D11D               	goto	l13336
 24832                           
 24833                           ;gemsecs.c: 398:      UART1_put_buffer(0x04);
 24834   013716  0E04               	movlw	4
 24835   013718  6EE6               	movwf	postinc1,c
 24836   01371A  EC1F  F0BE         	call	_UART1_put_buffer	;wreg free
 24837                           
 24838                           ; BSR set to: 57
 24839                           ;gemsecs.c: 399:      *t_link = LINK_STATE_DONE;
 24840                           ;stkvar	_t_link @ sp[(-1)+-2]
 24841   01371E  0EFD               	movlw	-3
 24842   013720  006F FF8F FFD9     	movff	plusw1,fsr2l
 24843   013726  0EFE               	movlw	-2
 24844   013728  006F FF8F FFDA     	movff	plusw1,fsr2h
 24845   01372E  0E04               	movlw	4
 24846   013730  D07C               	goto	L5
 24847   013732                     l13260:
 24848                           
 24849                           ;gemsecs.c: 405:   if (!requeue)
 24850   013732  500B               	movf	t_protocol@requeue^0,w,c
 24851   013734  A4D8               	btfss	status,2,c
 24852   013736  D013               	goto	l13264
 24853                           
 24854                           ;gemsecs.c: 406:    block = secs_II_message(V.stream, V.function);
 24855   013738  EE23  F14E         	lfsr	2,_V+308	;volatile
 24856   01373C  50DF               	movf	indf2,w,c
 24857   01373E  6EE6               	movwf	postinc1,c
 24858   013740  EE23  F14D         	lfsr	2,_V+307	;volatile
 24859   013744  50DF               	movf	indf2,w,c
 24860   013746  6EE6               	movwf	postinc1,c
 24861   013748  ECDF  F08D         	call	_secs_II_message	;wreg free
 24862   01374C  EE20  F093         	lfsr	2,t_protocol@block
 24863   013750  0E06               	movlw	6
 24864   013752                     u9731:
 24865   013752  52E5               	movf	postdec1,f,c
 24866   013754  006F FF9F FFDB     	movff	indf1,plusw2
 24867   01375A  06E8               	decf	wreg,f,c
 24868   01375C  E2FA               	bc	u9731
 24869   01375E                     l13264:
 24870                           
 24871                           ;gemsecs.c: 408:   if (V.abort == LINK_ERROR_ABORT) {
 24872   01375E  0063  F543  FFE8   	movff	_V+310,wreg	;volatile
 24873   013764  0A11               	xorlw	17
 24874   013766  A4D8               	btfss	status,2,c
 24875   013768  D025               	goto	l13274
 24876                           
 24877                           ;gemsecs.c: 409:    secs_send((uint8_t*) block.header, block.length, 0, 1);
 24878   01376A  0E01               	movlw	1
 24879   01376C  6EE6               	movwf	postinc1,c
 24880   01376E  0E00               	movlw	0
 24881   013770  6EE6               	movwf	postinc1,c
 24882   013772  0100               	movlb	0	; () banked
 24883   013774  5195               	movf	(t_protocol@block+2)& (0+255),w,b
 24884   013776  6EE6               	movwf	postinc1,c
 24885   013778  0060  F24F  FFE6   	movff	t_protocol@block,postinc1
 24886   01377E  0060  F253  FFE6   	movff	t_protocol@block+1,postinc1
 24887   013784  EC63  F0A2         	call	_secs_send	;wreg free
 24888                           
 24889                           ;gemsecs.c: 410:    V.failed_send = 2;
 24890   013788  EE23  F167         	lfsr	2,_V+333	;volatile
 24891   01378C  50DF               	movf	223,w,c
 24892   01378E  0B0F               	andlw	-241
 24893   013790  0920               	iorlw	32
 24894   013792  6EDF               	movwf	223,c
 24895                           
 24896                           ;gemsecs.c: 411:    *t_link = LINK_STATE_ERROR;
 24897                           ;stkvar	_t_link @ sp[(-1)+-2]
 24898   013794  0EFD               	movlw	-3
 24899   013796  006F FF8F FFD9     	movff	plusw1,fsr2l
 24900   01379C  0EFE               	movlw	-2
 24901   01379E  006F FF8F FFDA     	movff	plusw1,fsr2h
 24902   0137A4  0E06               	movlw	6
 24903   0137A6  6EDF               	movwf	indf2,c
 24904                           
 24905                           ;gemsecs.c: 412:    V.all_errors++;
 24906   0137A8  EE23  F165         	lfsr	2,_V+331	;volatile
 24907   0137AC  2ADE               	incf	postinc2,f,c
 24908   0137AE  0E00               	movlw	0
 24909   0137B0  22DD               	addwfc	postdec2,f,c
 24910                           
 24911                           ;gemsecs.c: 413:   } else {
 24912   0137B2  D0CE               	goto	l13336
 24913   0137B4                     l13274:
 24914                           
 24915                           ;gemsecs.c: 414:    if (!requeue) {
 24916   0137B4  500B               	movf	t_protocol@requeue^0,w,c
 24917   0137B6  A4D8               	btfss	status,2,c
 24918   0137B8  D016               	goto	l1942
 24919                           
 24920                           ;gemsecs.c: 415:     secs_send((uint8_t*) block.header, block.length, 0, 1);
 24921   0137BA  0E01               	movlw	1
 24922   0137BC  6EE6               	movwf	postinc1,c
 24923   0137BE  0E00               	movlw	0
 24924   0137C0  6EE6               	movwf	postinc1,c
 24925   0137C2  0100               	movlb	0	; () banked
 24926   0137C4  5195               	movf	(t_protocol@block+2)& (0+255),w,b
 24927   0137C6  6EE6               	movwf	postinc1,c
 24928   0137C8  0060  F24F  FFE6   	movff	t_protocol@block,postinc1
 24929   0137CE  0060  F253  FFE6   	movff	t_protocol@block+1,postinc1
 24930   0137D4  EC63  F0A2         	call	_secs_send	;wreg free
 24931                           
 24932                           ;gemsecs.c: 416:     if (V.queue)
 24933   0137D8  EE23  F168         	lfsr	2,_V+334	;volatile
 24934   0137DC  A8DF               	btfss	indf2,4,c
 24935   0137DE  D016               	goto	l13286
 24936                           
 24937                           ;gemsecs.c: 417:      requeue = 1;
 24938   0137E0  0E01               	movlw	1
 24939   0137E2  6E0B               	movwf	t_protocol@requeue^0,c
 24940   0137E4  D013               	goto	l13286
 24941   0137E6                     l1942:
 24942                           
 24943                           ;gemsecs.c: 419:     requeue = 0;
 24944   0137E6  6A0B               	clrf	t_protocol@requeue^0,c
 24945                           
 24946                           ;gemsecs.c: 420:     V.queue = 0;
 24947   0137E8  EE23  F168         	lfsr	2,_V+334	;volatile
 24948   0137EC  98DF               	bcf	indf2,4,c
 24949                           
 24950                           ;gemsecs.c: 421:     secs_send((uint8_t*) block.reply, block.reply_length, 0, 1);
 24951   0137EE  0E01               	movlw	1
 24952   0137F0  6EE6               	movwf	postinc1,c
 24953   0137F2  0E00               	movlw	0
 24954   0137F4  6EE6               	movwf	postinc1,c
 24955   0137F6  0100               	movlb	0	; () banked
 24956   0137F8  5198               	movf	(t_protocol@block+5)& (0+255),w,b
 24957   0137FA  6EE6               	movwf	postinc1,c
 24958   0137FC  0060  F25B  FFE6   	movff	t_protocol@block+3,postinc1
 24959   013802  0060  F25F  FFE6   	movff	t_protocol@block+4,postinc1
 24960   013808  EC63  F0A2         	call	_secs_send	;wreg free
 24961   01380C                     l13286:
 24962                           
 24963                           ;gemsecs.c: 423:    if (V.error == LINK_ERROR_NONE) {
 24964   01380C  0063  F53F  FFE8   	movff	_V+309,wreg	;volatile
 24965   013812  0A0A               	xorlw	10
 24966   013814  A4D8               	btfss	status,2,c
 24967   013816  D00B               	goto	l13290
 24968                           
 24969                           ;gemsecs.c: 424:     *t_link = LINK_STATE_ACK;
 24970                           ;stkvar	_t_link @ sp[(-1)+-2]
 24971   013818  0EFD               	movlw	-3
 24972   01381A  006F FF8F FFD9     	movff	plusw1,fsr2l
 24973   013820  0EFE               	movlw	-2
 24974   013822  006F FF8F FFDA     	movff	plusw1,fsr2h
 24975   013828  0E03               	movlw	3
 24976   01382A                     L5:
 24977   01382A  6EDF               	movwf	indf2,c
 24978                           
 24979                           ;gemsecs.c: 425:    } else {
 24980   01382C  D091               	goto	l13336
 24981   01382E                     l13290:
 24982                           
 24983                           ;gemsecs.c: 426:     V.failed_send = 3;
 24984   01382E  EE23  F167         	lfsr	2,_V+333	;volatile
 24985   013832  50DF               	movf	223,w,c
 24986   013834  0B0F               	andlw	-241
 24987   013836  0930               	iorlw	48
 24988   013838  D7AC               	goto	L6
 24989   01383A                     l13296:
 24990                           
 24991                           ;gemsecs.c: 433:   if (TimerDone(TMR_T3)) {
 24992   01383A  0E03               	movlw	3
 24993   01383C  6EE6               	movwf	postinc1,c
 24994   01383E  ECAD  F0BF         	call	_TimerDone	;wreg free
 24995   013842  5023               	movf	btemp^0,w,c
 24996   013844  B4D8               	btfsc	status,2,c
 24997   013846  D014               	goto	l13306
 24998                           
 24999                           ;gemsecs.c: 434:    V.timer_error++;
 25000   013848  EE23  F15B         	lfsr	2,_V+321	;volatile
 25001   01384C  2ADE               	incf	postinc2,f,c
 25002   01384E  0E00               	movlw	0
 25003   013850  22DD               	addwfc	postdec2,f,c
 25004                           
 25005                           ;gemsecs.c: 435:    V.error = LINK_ERROR_T3;
 25006   013852  0E0D               	movlw	13
 25007   013854  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 25008                           
 25009                           ;gemsecs.c: 436:    V.all_errors++;
 25010   01385A  EE23  F165         	lfsr	2,_V+331	;volatile
 25011   01385E  2ADE               	incf	postinc2,f,c
 25012   013860  0E00               	movlw	0
 25013   013862  22DD               	addwfc	postdec2,f,c
 25014                           
 25015                           ;gemsecs.c: 437:    V.failed_send = 4;
 25016   013864  EE23  F167         	lfsr	2,_V+333	;volatile
 25017   013868  50DF               	movf	223,w,c
 25018   01386A  0B0F               	andlw	-241
 25019   01386C  0940               	iorlw	64
 25020   01386E  D71B               	goto	L7
 25021   013870                     l13306:
 25022                           
 25023                           ;gemsecs.c: 440:    if (UART1_is_rx_ready()) {
 25024   013870  EC46  F0C1         	call	_UART1_is_rx_ready	;wreg free
 25025   013874  5023               	movf	btemp^0,w,c
 25026   013876  B4D8               	btfsc	status,2,c
 25027   013878  D06B               	goto	l13336
 25028                           
 25029                           ;gemsecs.c: 441:     rxData = UART1_Read();
 25030   01387A  ECC6  F0BC         	call	_UART1_Read	;wreg free
 25031                           
 25032                           ;stkvar	_rxData @ sp[(-1)+0]
 25033   01387E  0EFF               	movlw	-1
 25034   013880  0060  F08F  FFE3   	movff	btemp,plusw1
 25035                           
 25036                           ; BSR set to: 57
 25037                           ;gemsecs.c: 442:     if (rxData == 0x06) {
 25038                           ;stkvar	_rxData @ sp[(-1)+0]
 25039   013886  0EFF               	movlw	-1
 25040   013888  006F FF8C  F023    	movff	plusw1,btemp
 25041   01388E  0E06               	movlw	6
 25042   013890  1823               	xorwf	btemp^0,w,c
 25043   013892  A4D8               	btfss	status,2,c
 25044   013894  D05D               	goto	l13336
 25045                           
 25046                           ; BSR set to: 57
 25047                           ;gemsecs.c: 443:      V.failed_send = 0;
 25048   013896  EE23  F167         	lfsr	2,_V+333	;volatile
 25049   01389A  0E0F               	movlw	-241
 25050   01389C  16DF               	andwf	223,f,c
 25051                           
 25052                           ; BSR set to: 57
 25053                           ;gemsecs.c: 444:      *t_link = LINK_STATE_DONE;
 25054                           ;stkvar	_t_link @ sp[(-1)+-2]
 25055   01389E  0EFD               	movlw	-3
 25056   0138A0  006F FF8F FFD9     	movff	plusw1,fsr2l
 25057   0138A6  0EFE               	movlw	-2
 25058   0138A8  006F FF8F FFDA     	movff	plusw1,fsr2h
 25059   0138AE  0E04               	movlw	4
 25060   0138B0  6EDF               	movwf	indf2,c
 25061   0138B2                     l13316:
 25062                           
 25063                           ;gemsecs.c: 445:      V.abort = LINK_ERROR_NONE;
 25064   0138B2  0E0A               	movlw	10
 25065   0138B4  006F FFA0  FD50    	movff	wreg,_V+310	;volatile
 25066   0138BA  D04A               	goto	l13336
 25067   0138BC                     l13318:
 25068                           
 25069                           ;gemsecs.c: 451:   *t_link = LINK_STATE_ERROR;
 25070                           ;stkvar	_t_link @ sp[(-1)+-2]
 25071   0138BC  0EFD               	movlw	-3
 25072   0138BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 25073   0138C4  0EFE               	movlw	-2
 25074   0138C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 25075   0138CC  0E06               	movlw	6
 25076   0138CE  6EDF               	movwf	indf2,c
 25077                           
 25078                           ;gemsecs.c: 452:   V.all_errors++;
 25079   0138D0  EE23  F165         	lfsr	2,_V+331	;volatile
 25080   0138D4  2ADE               	incf	postinc2,f,c
 25081   0138D6  0E00               	movlw	0
 25082   0138D8  22DD               	addwfc	postdec2,f,c
 25083                           
 25084                           ;gemsecs.c: 453:   while ((uart1RxCount)) {
 25085   0138DA  D002               	goto	l13324
 25086   0138DC                     l13322:
 25087                           
 25088                           ;gemsecs.c: 454:    UART1_Read();
 25089   0138DC  ECC6  F0BC         	call	_UART1_Read	;wreg free
 25090   0138E0                     l13324:
 25091                           
 25092                           ;gemsecs.c: 453:   while ((uart1RxCount)) {
 25093   0138E0  5016               	movf	_uart1RxCount^0,w,c	;volatile
 25094   0138E2  B4D8               	btfsc	status,2,c
 25095   0138E4  D035               	goto	l13336
 25096   0138E6  D7FA               	goto	l13322
 25097   0138E8                     l13326:
 25098                           
 25099                           ;gemsecs.c: 460:   V.failed_send = 0;
 25100   0138E8  EE23  F167         	lfsr	2,_V+333	;volatile
 25101   0138EC  0E0F               	movlw	-241
 25102   0138EE  16DF               	andwf	223,f,c
 25103   0138F0  D7E0               	goto	l13316
 25104   0138F2                     l13330:
 25105                           
 25106                           ;gemsecs.c: 464:   *t_link = LINK_STATE_IDLE;
 25107                           ;stkvar	_t_link @ sp[(-1)+-2]
 25108   0138F2  0EFD               	movlw	-3
 25109   0138F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 25110   0138FA  0EFE               	movlw	-2
 25111   0138FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 25112   013902  6ADF               	clrf	indf2,c
 25113                           
 25114                           ;gemsecs.c: 465:   break;
 25115   013904  D025               	goto	l13336
 25116   013906                     l13334:
 25117                           
 25118                           ;stkvar	_t_link @ sp[(-1)+-2]
 25119   013906  0EFD               	movlw	-3
 25120   013908  006F FF8F FFD9     	movff	plusw1,fsr2l
 25121   01390E  0EFE               	movlw	-2
 25122   013910  006F FF8F FFDA     	movff	plusw1,fsr2h
 25123   013916  50DF               	movf	indf2,w,c
 25124   013918  6E2D               	movwf	(btemp+10)^0,c
 25125   01391A  6A2E               	clrf	(btemp+11)^0,c
 25126                           
 25127                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25128                           ; Switch size 1, requested type "simple"
 25129                           ; Number of cases is 1, Range of values is 0 to 0
 25130                           ; switch strategies available:
 25131                           ; Name         Instructions Cycles
 25132                           ; simple_byte            4     3 (average)
 25133                           ;	Chosen strategy is simple_byte
 25134   01391C  502E               	movf	(btemp+11)^0,w,c
 25135   01391E  0A00               	xorlw	0	; case 0
 25136   013920  A4D8               	btfss	status,2,c
 25137   013922  D7E7               	goto	l13330
 25138                           
 25139                           ; Switch size 1, requested type "simple"
 25140                           ; Number of cases is 7, Range of values is 0 to 6
 25141                           ; switch strategies available:
 25142                           ; Name         Instructions Cycles
 25143                           ; simple_byte           22    12 (average)
 25144                           ;	Chosen strategy is simple_byte
 25145   013924  502D               	movf	(btemp+10)^0,w,c
 25146   013926  0A00               	xorlw	0	; case 0
 25147   013928  B4D8               	btfsc	status,2,c
 25148   01392A  D687               	goto	l1928
 25149   01392C  0A01               	xorlw	1	; case 1
 25150   01392E  B4D8               	btfsc	status,2,c
 25151   013930  D697               	goto	l13228
 25152   013932  0A03               	xorlw	3	; case 2
 25153   013934  B4D8               	btfsc	status,2,c
 25154   013936  D6FD               	goto	l13260
 25155   013938  0A01               	xorlw	1	; case 3
 25156   01393A  B4D8               	btfsc	status,2,c
 25157   01393C  D77E               	goto	l13296
 25158   01393E  0A07               	xorlw	7	; case 4
 25159   013940  B4D8               	btfsc	status,2,c
 25160   013942  D7D2               	goto	l13326
 25161   013944  0A01               	xorlw	1	; case 5
 25162   013946  B4D8               	btfsc	status,2,c
 25163   013948  D7B9               	goto	l13318
 25164   01394A  0A03               	xorlw	3	; case 6
 25165   01394C  A4D8               	btfss	status,2,c
 25166   01394E  D7D1               	goto	l13330
 25167   013950                     l13336:
 25168                           
 25169                           ;gemsecs.c: 468:  return *t_link;
 25170                           ;stkvar	_t_link @ sp[(-1)+-2]
 25171   013950  0EFD               	movlw	-3
 25172   013952  006F FF8F FFD9     	movff	plusw1,fsr2l
 25173   013958  0EFE               	movlw	-2
 25174   01395A  006F FF8F FFDA     	movff	plusw1,fsr2h
 25175   013960  50DF               	movf	indf2,w,c
 25176   013962  6E23               	movwf	btemp^0,c
 25177                           
 25178                           ; _t_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
 25179   013964  52E5               	movf	postdec1,f,c
 25180   013966  52E5               	movf	postdec1,f,c
 25181   013968  52E5               	movf	postdec1,f,c
 25182   01396A  0012               	return		;funcret
 25183   01396C                     __end_of_t_protocol:
 25184                           	callstack 0
 25185                           
 25186 ;; *************** function _secs_send *****************
 25187 ;; Defined at:
 25188 ;;		line 472 in file "gemsecs.c"
 25189 ;; Parameters:    Size  Location     Type
 25190 ;;  byte_block      2  [STACK] PTR unsigned char 
 25191 ;;		 -> D$message(156), S$message(36), H153(312), H33(36), 
 25192 ;;		 -> H26(29), H17(20), H14(17), H13(64), 
 25193 ;;		 -> H12(30), H10(91), 
 25194 ;;  length          1  [STACK] const unsigned char 
 25195 ;;  fake            1  [STACK] const _Bool 
 25196 ;;  s_uart          1  [STACK] const unsigned char 
 25197 ;; Auto vars:     Size  Location     Type
 25198 ;;  k               2  [STACK] PTR unsigned char 
 25199 ;;		 -> D$message(156), S$message(36), H153(312), H33(36), 
 25200 ;;		 -> H26(29), H17(20), H14(17), H13(64), 
 25201 ;;		 -> H12(30), H10(91), 
 25202 ;;  checksum        2  [STACK] unsigned short 
 25203 ;;  i               1  [STACK] unsigned char 
 25204 ;; Return value:  Size  Location     Type
 25205 ;;                  1  [STACK] _Bool 
 25206 ;; Registers used:
 25207 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl
 25208 ;; Tracked objects:
 25209 ;;		On entry : 3F/0
 25210 ;;		On exit  : 0/0
 25211 ;;		Unchanged: 0/0
 25212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25217 ;;Total ram usage:        0 bytes
 25218 ;; Hardware stack levels used: 1
 25219 ;; Hardware stack levels required when called: 4
 25220 ;; This function calls:
 25221 ;;		_UART1_Write
 25222 ;;		_UART1_is_tx_ready
 25223 ;;		_UART1_put_buffer
 25224 ;;		_UART2_Write
 25225 ;;		_UART2_is_tx_ready
 25226 ;;		_UART2_put_buffer
 25227 ;;		_block_checksum
 25228 ;; This function is called by:
 25229 ;;		_t_protocol
 25230 ;; This function uses a reentrant model
 25231 ;;
 25232                           
 25233                           	psect	text2
 25234   0144C6                     __ptext2:
 25235                           	callstack 0
 25236   0144C6                     _secs_send:
 25237                           	callstack 0
 25238                           
 25239                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25240   0144C6  0E05               	movlw	5
 25241   0144C8  26E1               	addwf	fsr1l,f,c
 25242   0144CA  0E00               	movlw	0
 25243   0144CC  22E2               	addwfc	fsr1h,f,c
 25244                           
 25245                           ;gemsecs.c: 472: static _Bool secs_send(uint8_t *byte_block, const uint8_t length, const
      +                           _Bool fake, const uint8_t s_uart);gemsecs.c: 473: {;gemsecs.c: 474:  uint8_t i, *k;;gem
      +                          secs.c: 475:  uint16_t checksum;;gemsecs.c: 477:  k = (uint8_t *) byte_block;
 25246                           ;stkvar	_byte_block @ sp[(-5)+-2]
 25247                           
 25248                           ;incstack = 0
 25249   0144CE  0EF9               	movlw	-7
 25250   0144D0  006F FF8C  F02D    	movff	plusw1,btemp+10
 25251   0144D6  0EFA               	movlw	-6
 25252   0144D8  006F FF8C  F02E    	movff	plusw1,btemp+11
 25253                           
 25254                           ;stkvar	_k @ sp[(-5)+0]
 25255   0144DE  0EFC               	movlw	-4
 25256   0144E0  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 25257   0144E6  0EFB               	movlw	-5
 25258   0144E8  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 25259                           
 25260                           ;gemsecs.c: 479:  ++V.ticks;
 25261   0144EE  EE23  F141         	lfsr	2,_V+295	;volatile
 25262   0144F2  2ADE               	incf	postinc2,f,c
 25263   0144F4  0E00               	movlw	0
 25264   0144F6  22DE               	addwfc	postinc2,f,c
 25265   0144F8  22DE               	addwfc	postinc2,f,c
 25266   0144FA  22DE               	addwfc	postinc2,f,c
 25267                           
 25268                           ;gemsecs.c: 480:  V.error = LINK_ERROR_NONE;
 25269   0144FC  0E0A               	movlw	10
 25270   0144FE  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 25271                           
 25272                           ;gemsecs.c: 481:  if ((length - 3) != k[length - 1]) {
 25273                           ;stkvar	_length @ sp[(-5)+-3]
 25274   014504  0EF8               	movlw	-8
 25275   014506  50E3               	movf	plusw1,w,c
 25276   014508  6E2D               	movwf	(btemp+10)^0,c
 25277   01450A  6A2E               	clrf	(btemp+11)^0,c
 25278                           
 25279                           ;stkvar	_k @ sp[(-5)+0]
 25280   01450C  0EFB               	movlw	-5
 25281   01450E  50E3               	movf	plusw1,w,c
 25282   014510  262D               	addwf	(btemp+10)^0,f,c
 25283   014512  0EFC               	movlw	-4
 25284   014514  50E3               	movf	plusw1,w,c
 25285   014516  222E               	addwfc	(btemp+11)^0,f,c
 25286   014518  0EFF               	movlw	255
 25287   01451A  242D               	addwf	(btemp+10)^0,w,c
 25288   01451C  6ED9               	movwf	fsr2l,c
 25289   01451E  0EFF               	movlw	255
 25290   014520  202E               	addwfc	(btemp+11)^0,w,c
 25291   014522  6EDA               	movwf	fsr2h,c
 25292   014524  50DF               	movf	indf2,w,c
 25293   014526  6E2D               	movwf	(btemp+10)^0,c
 25294   014528  6A2E               	clrf	(btemp+11)^0,c
 25295                           
 25296                           ;stkvar	_length @ sp[(-5)+-3]
 25297   01452A  0EF8               	movlw	-8
 25298   01452C  006F FF8C  F02C    	movff	plusw1,btemp+9
 25299   014532  0EFD               	movlw	253
 25300   014534  242C               	addwf	(btemp+9)^0,w,c
 25301   014536  6E29               	movwf	(btemp+6)^0,c
 25302   014538  6A2A               	clrf	(btemp+7)^0,c
 25303   01453A  0EFF               	movlw	255
 25304   01453C  222A               	addwfc	(btemp+7)^0,f,c
 25305   01453E  502D               	movf	(btemp+10)^0,w,c
 25306   014540  1829               	xorwf	(btemp+6)^0,w,c
 25307   014542  E104               	bnz	u6250
 25308   014544  502E               	movf	(btemp+11)^0,w,c
 25309   014546  182A               	xorwf	(btemp+7)^0,w,c
 25310   014548  B4D8               	btfsc	status,2,c
 25311   01454A  D010               	goto	l9862
 25312   01454C                     u6250:
 25313                           
 25314                           ;gemsecs.c: 482:   V.error = LINK_ERROR_SEND;
 25315   01454C  0E12               	movlw	18
 25316   01454E  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 25317                           
 25318                           ;gemsecs.c: 483:   V.all_errors++;
 25319   014554  EE23  F165         	lfsr	2,_V+331	;volatile
 25320   014558  2ADE               	incf	postinc2,f,c
 25321   01455A  0E00               	movlw	0
 25322   01455C  22DD               	addwfc	postdec2,f,c
 25323                           
 25324                           ;gemsecs.c: 484:   V.failed_send = 1;
 25325   01455E  EE23  F167         	lfsr	2,_V+333	;volatile
 25326   014562  50DF               	movf	223,w,c
 25327   014564  0B0F               	andlw	-241
 25328   014566  0910               	iorlw	16
 25329   014568  6EDF               	movwf	223,c
 25330   01456A  D0E6               	goto	l1963
 25331   01456C                     l9862:
 25332                           
 25333                           ;gemsecs.c: 493:  checksum = block_checksum(&k[2], length - 3);
 25334                           ;stkvar	_length @ sp[(-5)+-3]
 25335   01456C  0EF8               	movlw	-8
 25336   01456E  006F FF8C  F02E    	movff	plusw1,btemp+11
 25337   014574  0EFD               	movlw	253
 25338   014576  242E               	addwf	(btemp+11)^0,w,c
 25339   014578  6E2B               	movwf	(btemp+8)^0,c
 25340   01457A  6A2C               	clrf	(btemp+9)^0,c
 25341   01457C  0EFF               	movlw	255
 25342   01457E  222C               	addwfc	(btemp+9)^0,f,c
 25343   014580  0060  F0AF  FFE6   	movff	btemp+8,postinc1
 25344   014586  0060  F0B3  FFE6   	movff	btemp+9,postinc1
 25345                           
 25346                           ;stkvar	_k @ sp[(-7)+0]
 25347   01458C  0EF9               	movlw	-7
 25348   01458E  50E3               	movf	plusw1,w,c
 25349   014590  0F02               	addlw	2
 25350   014592  6E2D               	movwf	(btemp+10)^0,c
 25351   014594  0EFA               	movlw	-6
 25352   014596  006F FF8C  F02E    	movff	plusw1,btemp+11
 25353   01459C  0E00               	movlw	0
 25354   01459E  222E               	addwfc	(btemp+11)^0,f,c
 25355   0145A0  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 25356   0145A6  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 25357   0145AC  EC6E  F0B4         	call	_block_checksum	;wreg free
 25358                           
 25359                           ;stkvar	_checksum @ sp[(-5)+2]
 25360   0145B0  0EFD               	movlw	-3
 25361   0145B2  0060  F08F  FFE3   	movff	btemp,plusw1
 25362   0145B8  0EFE               	movlw	-2
 25363   0145BA  0060  F093  FFE3   	movff	btemp+1,plusw1
 25364                           
 25365                           ;gemsecs.c: 494:  k[0] = checksum & 0xff;
 25366                           ;stkvar	_checksum @ sp[(-5)+2]
 25367                           ;stkvar	_k @ sp[(-5)+0]
 25368   0145C0  0EFB               	movlw	-5
 25369   0145C2  006F FF8F FFD9     	movff	plusw1,fsr2l
 25370   0145C8  0EFC               	movlw	-4
 25371   0145CA  006F FF8F FFDA     	movff	plusw1,fsr2h
 25372   0145D0  0EFD               	movlw	-3
 25373   0145D2  006F FF8F FFDF     	movff	plusw1,indf2
 25374                           
 25375                           ;gemsecs.c: 495:  k[1] = (checksum >> 8)&0xff;
 25376                           ;stkvar	_checksum @ sp[(-5)+2]
 25377   0145D8  0EFE               	movlw	254
 25378   0145DA  24E1               	addwf	fsr1l,w,c
 25379   0145DC  6ED9               	movwf	fsr2l,c
 25380   0145DE  0EFF               	movlw	255
 25381   0145E0  20E2               	addwfc	fsr1h,w,c
 25382   0145E2  6EDA               	movwf	fsr2h,c
 25383                           
 25384                           ;stkvar	_k @ sp[(-5)+0]
 25385   0145E4  0EFB               	movlw	-5
 25386   0145E6  006F FF8C  F02D    	movff	plusw1,btemp+10
 25387   0145EC  0EFC               	movlw	-4
 25388   0145EE  006F FF8C  F02E    	movff	plusw1,btemp+11
 25389   0145F4  0E01               	movlw	1
 25390   0145F6  242D               	addwf	(btemp+10)^0,w,c
 25391   0145F8  6EE9               	movwf	fsr0l,c
 25392   0145FA  0E00               	movlw	0
 25393   0145FC  202E               	addwfc	(btemp+11)^0,w,c
 25394   0145FE  6EEA               	movwf	fsr0h,c
 25395   014600  006F FF7F FFEF     	movff	indf2,indf0
 25396                           
 25397                           ;gemsecs.c: 496:  V.t_checksum = checksum;
 25398                           ;stkvar	_checksum @ sp[(-5)+2]
 25399   014606  50E1               	movf	fsr1l,w,c
 25400   014608  0FFD               	addlw	-3
 25401   01460A  6ED9               	movwf	fsr2l,c
 25402   01460C  50E2               	movf	fsr1h,w,c
 25403   01460E  6EDA               	movwf	fsr2h,c
 25404   014610  0EFF               	movlw	255
 25405   014612  22DA               	addwfc	fsr2h,f,c
 25406   014614  006F FF78  FD57    	movff	postinc2,_V+317	;volatile
 25407   01461A  006F FF74  FD58    	movff	postdec2,_V+318	;volatile
 25408                           
 25409                           ;gemsecs.c: 498:  switch (s_uart) {
 25410   014620  D082               	goto	l9908
 25411   014622                     l9870:
 25412   014622  EC3D  F0C1         	call	_UART2_is_tx_ready	;wreg free
 25413   014626  0E3F               	movlw	63
 25414   014628  6423               	cpfsgt	btemp^0,c
 25415   01462A  D7FB               	goto	l9870
 25416                           
 25417                           ;gemsecs.c: 501:   for (i = length; i > 0; i--) {
 25418                           ;stkvar	_length @ sp[(-5)+-3]
 25419                           ;stkvar	_i @ sp[(-5)+4]
 25420   01462C  0EF8               	movlw	-8
 25421   01462E  006F FF8C  F023    	movff	plusw1,btemp
 25422   014634  0EFF               	movlw	-1
 25423   014636  0060  F08F  FFE3   	movff	btemp,plusw1
 25424   01463C                     l9874:
 25425                           
 25426                           ;stkvar	_i @ sp[(-5)+4]
 25427   01463C  0EFF               	movlw	-1
 25428   01463E  50E3               	movf	plusw1,w,c
 25429   014640  B4D8               	btfsc	status,2,c
 25430   014642  D07A               	goto	l1963
 25431                           
 25432                           ;gemsecs.c: 502:    if (fake) {
 25433                           ;stkvar	_fake @ sp[(-5)+-4]
 25434   014644  0EF7               	movlw	-9
 25435   014646  50E3               	movf	plusw1,w,c
 25436   014648  B4D8               	btfsc	status,2,c
 25437   01464A  D015               	goto	l9882
 25438                           
 25439                           ;gemsecs.c: 503:     UART2_put_buffer(k[i - 1]);
 25440                           ;stkvar	_i @ sp[(-5)+4]
 25441   01464C  0EFF               	movlw	-1
 25442   01464E  50E3               	movf	plusw1,w,c
 25443   014650  6E2D               	movwf	(btemp+10)^0,c
 25444   014652  6A2E               	clrf	(btemp+11)^0,c
 25445                           
 25446                           ;stkvar	_k @ sp[(-5)+0]
 25447   014654  0EFB               	movlw	-5
 25448   014656  50E3               	movf	plusw1,w,c
 25449   014658  262D               	addwf	(btemp+10)^0,f,c
 25450   01465A  0EFC               	movlw	-4
 25451   01465C  50E3               	movf	plusw1,w,c
 25452   01465E  222E               	addwfc	(btemp+11)^0,f,c
 25453   014660  0EFF               	movlw	255
 25454   014662  242D               	addwf	(btemp+10)^0,w,c
 25455   014664  6ED9               	movwf	fsr2l,c
 25456   014666  0EFF               	movlw	255
 25457   014668  202E               	addwfc	(btemp+11)^0,w,c
 25458   01466A  6EDA               	movwf	fsr2h,c
 25459   01466C  50DF               	movf	indf2,w,c
 25460   01466E  6EE6               	movwf	postinc1,c
 25461   014670  EC0B  F0BE         	call	_UART2_put_buffer	;wreg free
 25462                           
 25463                           ;gemsecs.c: 504:    } else {
 25464   014674  D014               	goto	l9884
 25465   014676                     l9882:
 25466                           
 25467                           ;gemsecs.c: 506:     UART2_Write(k[i - 1]);
 25468                           ;stkvar	_i @ sp[(-5)+4]
 25469   014676  0EFF               	movlw	-1
 25470   014678  50E3               	movf	plusw1,w,c
 25471   01467A  6E2D               	movwf	(btemp+10)^0,c
 25472   01467C  6A2E               	clrf	(btemp+11)^0,c
 25473                           
 25474                           ;stkvar	_k @ sp[(-5)+0]
 25475   01467E  0EFB               	movlw	-5
 25476   014680  50E3               	movf	plusw1,w,c
 25477   014682  262D               	addwf	(btemp+10)^0,f,c
 25478   014684  0EFC               	movlw	-4
 25479   014686  50E3               	movf	plusw1,w,c
 25480   014688  222E               	addwfc	(btemp+11)^0,f,c
 25481   01468A  0EFF               	movlw	255
 25482   01468C  242D               	addwf	(btemp+10)^0,w,c
 25483   01468E  6ED9               	movwf	fsr2l,c
 25484   014690  0EFF               	movlw	255
 25485   014692  202E               	addwfc	(btemp+11)^0,w,c
 25486   014694  6EDA               	movwf	fsr2h,c
 25487   014696  50DF               	movf	indf2,w,c
 25488   014698  6EE6               	movwf	postinc1,c
 25489   01469A  EC89  F0BC         	call	_UART2_Write	;wreg free
 25490   01469E                     l9884:
 25491                           
 25492                           ; BSR set to: 57
 25493                           ;gemsecs.c: 508:   }
 25494                           ;stkvar	_i @ sp[(-5)+4]
 25495   01469E  0EFF               	movlw	-1
 25496   0146A0  06E3               	decf	plusw1,f,c
 25497   0146A2  D7CC               	goto	l9874
 25498   0146A4                     l9888:
 25499   0146A4  EC40  F0C1         	call	_UART1_is_tx_ready	;wreg free
 25500   0146A8  0E3F               	movlw	63
 25501   0146AA  6423               	cpfsgt	btemp^0,c
 25502   0146AC  D7FB               	goto	l9888
 25503                           
 25504                           ;gemsecs.c: 513:   for (i = length; i > 0; i--) {
 25505                           ;stkvar	_length @ sp[(-5)+-3]
 25506                           ;stkvar	_i @ sp[(-5)+4]
 25507   0146AE  0EF8               	movlw	-8
 25508   0146B0  006F FF8C  F023    	movff	plusw1,btemp
 25509   0146B6  0EFF               	movlw	-1
 25510   0146B8  0060  F08F  FFE3   	movff	btemp,plusw1
 25511   0146BE                     l9892:
 25512                           
 25513                           ;stkvar	_i @ sp[(-5)+4]
 25514   0146BE  0EFF               	movlw	-1
 25515   0146C0  50E3               	movf	plusw1,w,c
 25516   0146C2  B4D8               	btfsc	status,2,c
 25517   0146C4  D039               	goto	l1963
 25518                           
 25519                           ;gemsecs.c: 514:    if (fake) {
 25520                           ;stkvar	_fake @ sp[(-5)+-4]
 25521   0146C6  0EF7               	movlw	-9
 25522   0146C8  50E3               	movf	plusw1,w,c
 25523   0146CA  B4D8               	btfsc	status,2,c
 25524   0146CC  D015               	goto	l9900
 25525                           
 25526                           ;gemsecs.c: 515:     UART1_put_buffer(k[i - 1]);
 25527                           ;stkvar	_i @ sp[(-5)+4]
 25528   0146CE  0EFF               	movlw	-1
 25529   0146D0  50E3               	movf	plusw1,w,c
 25530   0146D2  6E2D               	movwf	(btemp+10)^0,c
 25531   0146D4  6A2E               	clrf	(btemp+11)^0,c
 25532                           
 25533                           ;stkvar	_k @ sp[(-5)+0]
 25534   0146D6  0EFB               	movlw	-5
 25535   0146D8  50E3               	movf	plusw1,w,c
 25536   0146DA  262D               	addwf	(btemp+10)^0,f,c
 25537   0146DC  0EFC               	movlw	-4
 25538   0146DE  50E3               	movf	plusw1,w,c
 25539   0146E0  222E               	addwfc	(btemp+11)^0,f,c
 25540   0146E2  0EFF               	movlw	255
 25541   0146E4  242D               	addwf	(btemp+10)^0,w,c
 25542   0146E6  6ED9               	movwf	fsr2l,c
 25543   0146E8  0EFF               	movlw	255
 25544   0146EA  202E               	addwfc	(btemp+11)^0,w,c
 25545   0146EC  6EDA               	movwf	fsr2h,c
 25546   0146EE  50DF               	movf	indf2,w,c
 25547   0146F0  6EE6               	movwf	postinc1,c
 25548   0146F2  EC1F  F0BE         	call	_UART1_put_buffer	;wreg free
 25549                           
 25550                           ;gemsecs.c: 516:    } else {
 25551   0146F6  D014               	goto	l9902
 25552   0146F8                     l9900:
 25553                           
 25554                           ;gemsecs.c: 518:     UART1_Write(k[i - 1]);
 25555                           ;stkvar	_i @ sp[(-5)+4]
 25556   0146F8  0EFF               	movlw	-1
 25557   0146FA  50E3               	movf	plusw1,w,c
 25558   0146FC  6E2D               	movwf	(btemp+10)^0,c
 25559   0146FE  6A2E               	clrf	(btemp+11)^0,c
 25560                           
 25561                           ;stkvar	_k @ sp[(-5)+0]
 25562   014700  0EFB               	movlw	-5
 25563   014702  50E3               	movf	plusw1,w,c
 25564   014704  262D               	addwf	(btemp+10)^0,f,c
 25565   014706  0EFC               	movlw	-4
 25566   014708  50E3               	movf	plusw1,w,c
 25567   01470A  222E               	addwfc	(btemp+11)^0,f,c
 25568   01470C  0EFF               	movlw	255
 25569   01470E  242D               	addwf	(btemp+10)^0,w,c
 25570   014710  6ED9               	movwf	fsr2l,c
 25571   014712  0EFF               	movlw	255
 25572   014714  202E               	addwfc	(btemp+11)^0,w,c
 25573   014716  6EDA               	movwf	fsr2h,c
 25574   014718  50DF               	movf	indf2,w,c
 25575   01471A  6EE6               	movwf	postinc1,c
 25576   01471C  EC49  F0BC         	call	_UART1_Write	;wreg free
 25577   014720                     l9902:
 25578                           
 25579                           ; BSR set to: 57
 25580                           ;gemsecs.c: 520:   }
 25581                           ;stkvar	_i @ sp[(-5)+4]
 25582   014720  0EFF               	movlw	-1
 25583   014722  06E3               	decf	plusw1,f,c
 25584   014724  D7CC               	goto	l9892
 25585   014726                     l9908:
 25586                           
 25587                           ;stkvar	_s_uart @ sp[(-5)+-5]
 25588   014726  0EF6               	movlw	-10
 25589   014728  50E3               	movf	plusw1,w,c
 25590                           
 25591                           ; Switch size 1, requested type "simple"
 25592                           ; Number of cases is 2, Range of values is 1 to 2
 25593                           ; switch strategies available:
 25594                           ; Name         Instructions Cycles
 25595                           ; simple_byte            7     4 (average)
 25596                           ;	Chosen strategy is simple_byte
 25597   01472A  0A01               	xorlw	1	; case 1
 25598   01472C  B4D8               	btfsc	status,2,c
 25599   01472E  D7BA               	goto	l9888
 25600   014730  0A03               	xorlw	3	; case 2
 25601   014732  B4D8               	btfsc	status,2,c
 25602   014734  D776               	goto	l9870
 25603   014736  D7B6               	goto	l9888
 25604   014738                     l1963:
 25605                           
 25606                           ; _secs_send: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, arg
      +                          size = 5, vargsize = 0
 25607   014738  0EF6               	movlw	246
 25608   01473A  26E1               	addwf	fsr1l,f,c
 25609   01473C  0EFF               	movlw	255
 25610   01473E  22E2               	addwfc	fsr1h,f,c
 25611   014740  0012               	return		;funcret
 25612   014742                     __end_of_secs_send:
 25613                           	callstack 0
 25614                           
 25615 ;; *************** function _block_checksum *****************
 25616 ;; Defined at:
 25617 ;;		line 26 in file "gemsecs.c"
 25618 ;; Parameters:    Size  Location     Type
 25619 ;;  byte_block      2  [STACK] PTR unsigned char 
 25620 ;;		 -> D$message(156), S$message(36), H153(312), H33(36), 
 25621 ;;		 -> H26(29), H17(20), H14(17), H13(64), 
 25622 ;;		 -> H12(30), H10(91), 
 25623 ;;  byte_count      2  [STACK] const unsigned short 
 25624 ;; Auto vars:     Size  Location     Type
 25625 ;;  i               2  [STACK] unsigned short 
 25626 ;;  sum             2  [STACK] unsigned short 
 25627 ;; Return value:  Size  Location     Type
 25628 ;;                  2  [STACK] unsigned short 
 25629 ;; Registers used:
 25630 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 25631 ;; Tracked objects:
 25632 ;;		On entry : 0/0
 25633 ;;		On exit  : 0/0
 25634 ;;		Unchanged: 0/0
 25635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25640 ;;Total ram usage:        0 bytes
 25641 ;; Hardware stack levels used: 1
 25642 ;; Hardware stack levels required when called: 3
 25643 ;; This function calls:
 25644 ;;		Nothing
 25645 ;; This function is called by:
 25646 ;;		_secs_send
 25647 ;; This function uses a reentrant model
 25648 ;;
 25649                           
 25650                           	psect	text3
 25651   0168DC                     __ptext3:
 25652                           	callstack 0
 25653   0168DC                     _block_checksum:
 25654                           	callstack 0
 25655                           
 25656                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25657   0168DC  52E6               	movf	postinc1,f,c
 25658   0168DE  52E6               	movf	postinc1,f,c
 25659   0168E0  52E6               	movf	postinc1,f,c
 25660   0168E2  52E6               	movf	postinc1,f,c
 25661                           
 25662                           ;gemsecs.c: 26: uint16_t block_checksum(uint8_t *byte_block, const uint16_t byte_count);
      +                          gemsecs.c: 27: {;gemsecs.c: 28:  uint16_t sum = 0, i;
 25663                           ;stkvar	_sum @ sp[(-4)+2]
 25664                           
 25665                           ;incstack = 0
 25666   0168E4  0EFE               	movlw	-2
 25667   0168E6  6AE3               	clrf	plusw1,c
 25668   0168E8  0EFF               	movlw	-1
 25669   0168EA  6AE3               	clrf	plusw1,c
 25670                           
 25671                           ;gemsecs.c: 30:  for (i = 0; i < byte_count; i++) {
 25672                           ;stkvar	_i @ sp[(-4)+0]
 25673   0168EC  0EFC               	movlw	-4
 25674   0168EE  6AE3               	clrf	plusw1,c
 25675   0168F0  0EFD               	movlw	-3
 25676   0168F2  6AE3               	clrf	plusw1,c
 25677                           
 25678                           ;stkvar	_byte_count @ sp[(-4)+-4]
 25679   0168F4  0EF8               	movlw	-8
 25680   0168F6  006F FF8C  F023    	movff	plusw1,btemp
 25681   0168FC  0EF9               	movlw	-7
 25682   0168FE  50E3               	movf	plusw1,w,c
 25683   016900  1023               	iorwf	btemp^0,w,c
 25684   016902  B4D8               	btfsc	status,2,c
 25685   016904  D04F               	goto	u5530
 25686   016906                     l8464:
 25687                           
 25688                           ;gemsecs.c: 31:   sum += byte_block[i];
 25689                           ;stkvar	_i @ sp[(-4)+0]
 25690   016906  0EFC               	movlw	-4
 25691   016908  006F FF8C  F02D    	movff	plusw1,btemp+10
 25692   01690E  0EFD               	movlw	-3
 25693   016910  006F FF8C  F02E    	movff	plusw1,btemp+11
 25694                           
 25695                           ;stkvar	_byte_block @ sp[(-4)+-2]
 25696   016916  0EFA               	movlw	-6
 25697   016918  006F FF8C  F02B    	movff	plusw1,btemp+8
 25698   01691E  0EFB               	movlw	-5
 25699   016920  006F FF8C  F02C    	movff	plusw1,btemp+9
 25700   016926  502D               	movf	(btemp+10)^0,w,c
 25701   016928  242B               	addwf	(btemp+8)^0,w,c
 25702   01692A  6ED9               	movwf	fsr2l,c
 25703   01692C  502E               	movf	(btemp+11)^0,w,c
 25704   01692E  202C               	addwfc	(btemp+9)^0,w,c
 25705   016930  6EDA               	movwf	fsr2h,c
 25706   016932  50DF               	movf	indf2,w,c
 25707   016934  6E2E               	movwf	(btemp+11)^0,c
 25708                           
 25709                           ;stkvar	_sum @ sp[(-4)+2]
 25710   016936  0EFE               	movlw	-2
 25711   016938  50E3               	movf	plusw1,w,c
 25712   01693A  242E               	addwf	(btemp+11)^0,w,c
 25713   01693C  6E23               	movwf	btemp^0,c
 25714   01693E  0EFE               	movlw	-2
 25715   016940  0060  F08F  FFE3   	movff	btemp,plusw1
 25716   016946  6A23               	clrf	btemp^0,c
 25717   016948  0EFF               	movlw	-1
 25718   01694A  50E3               	movf	plusw1,w,c
 25719   01694C  2223               	addwfc	btemp^0,f,c
 25720   01694E  0EFF               	movlw	-1
 25721   016950  0060  F08F  FFE3   	movff	btemp,plusw1
 25722                           
 25723                           ;gemsecs.c: 32:  }
 25724                           ;stkvar	_i @ sp[(-4)+0]
 25725   016956  0EFC               	movlw	-4
 25726   016958  50E3               	movf	plusw1,w,c
 25727   01695A  0F01               	addlw	1
 25728   01695C  6E23               	movwf	btemp^0,c
 25729   01695E  0EFC               	movlw	-4
 25730   016960  0060  F08F  FFE3   	movff	btemp,plusw1
 25731   016966  6A23               	clrf	btemp^0,c
 25732   016968  0EFD               	movlw	-3
 25733   01696A  50E3               	movf	plusw1,w,c
 25734   01696C  2023               	addwfc	btemp^0,w,c
 25735   01696E  6E23               	movwf	btemp^0,c
 25736   016970  0EFD               	movlw	-3
 25737   016972  0060  F08F  FFE3   	movff	btemp,plusw1
 25738                           
 25739                           ;stkvar	_byte_count @ sp[(-4)+-4]
 25740   016978  0EF8               	movlw	-8
 25741   01697A  006F FF8C  F02D    	movff	plusw1,btemp+10
 25742   016980  0EF9               	movlw	-7
 25743   016982  006F FF8C  F02E    	movff	plusw1,btemp+11
 25744                           
 25745                           ;stkvar	_i @ sp[(-4)+0]
 25746   016988  0EFC               	movlw	-4
 25747   01698A  006F FF8C  F02B    	movff	plusw1,btemp+8
 25748   016990  0EFD               	movlw	-3
 25749   016992  006F FF8C  F02C    	movff	plusw1,btemp+9
 25750   016998  502D               	movf	(btemp+10)^0,w,c
 25751   01699A  5C2B               	subwf	(btemp+8)^0,w,c
 25752   01699C  502E               	movf	(btemp+11)^0,w,c
 25753   01699E  582C               	subwfb	(btemp+9)^0,w,c
 25754   0169A0  A0D8               	btfss	status,0,c
 25755   0169A2  D7B1               	goto	l8464
 25756   0169A4                     u5530:
 25757                           
 25758                           ;gemsecs.c: 33:  return sum;
 25759                           ;stkvar	_sum @ sp[(-4)+2]
 25760   0169A4  0EFE               	movlw	-2
 25761   0169A6  006F FF8C  F023    	movff	plusw1,btemp
 25762   0169AC  0EFF               	movlw	-1
 25763   0169AE  006F FF8C  F024    	movff	plusw1,btemp+1
 25764                           
 25765                           ; _block_checksum: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
 25766   0169B4  0EF8               	movlw	248
 25767   0169B6  26E1               	addwf	fsr1l,f,c
 25768   0169B8  0EFF               	movlw	255
 25769   0169BA  22E2               	addwfc	fsr1h,f,c
 25770   0169BC  0012               	return		;funcret
 25771   0169BE                     __end_of_block_checksum:
 25772                           	callstack 0
 25773                           
 25774 ;; *************** function _UART2_put_buffer *****************
 25775 ;; Defined at:
 25776 ;;		line 257 in file "mcc_generated_files/uart2.c"
 25777 ;; Parameters:    Size  Location     Type
 25778 ;;  bufData         1  [STACK] unsigned char 
 25779 ;; Auto vars:     Size  Location     Type
 25780 ;;		None
 25781 ;; Return value:  Size  Location     Type
 25782 ;;                  1  [STACK] void 
 25783 ;; Registers used:
 25784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 25785 ;; Tracked objects:
 25786 ;;		On entry : 0/0
 25787 ;;		On exit  : 3F/39
 25788 ;;		Unchanged: 0/0
 25789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25794 ;;Total ram usage:        0 bytes
 25795 ;; Hardware stack levels used: 1
 25796 ;; Hardware stack levels required when called: 3
 25797 ;; This function calls:
 25798 ;;		Nothing
 25799 ;; This function is called by:
 25800 ;;		_secs_send
 25801 ;; This function uses a reentrant model
 25802 ;;
 25803                           
 25804                           	psect	text4
 25805   017C16                     __ptext4:
 25806                           	callstack 0
 25807   017C16                     _UART2_put_buffer:
 25808                           	callstack 25
 25809                           
 25810                           ;mcc_generated_files/uart2.c: 257: void UART2_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart2.c: 258: {;mcc_generated_files/uart2.c: 259:  PIE6bits.U2RXIE = 0;
 25811                           
 25812                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25813                           ;incstack = 0
 25814   017C16  0139               	movlb	57	; () banked
 25815   017C18  9596               	bcf	150,2,b	;volatile
 25816                           
 25817                           ; BSR set to: 57
 25818                           ;mcc_generated_files/uart2.c: 260:  uart2RxBuffer[uart2RxHead++] = bufData;
 25819                           ;stkvar	_bufData @ sp[(0)+-1]
 25820   017C1A  0E00               	movlw	low _uart2RxBuffer
 25821   017C1C  2412               	addwf	_uart2RxHead^0,w,c	;volatile
 25822   017C1E  6ED9               	movwf	fsr2l,c
 25823   017C20  6ADA               	clrf	fsr2h,c
 25824   017C22  0E05               	movlw	high _uart2RxBuffer
 25825   017C24  22DA               	addwfc	fsr2h,f,c
 25826   017C26  0EFF               	movlw	-1
 25827   017C28  006F FF8F FFDF     	movff	plusw1,indf2
 25828                           
 25829                           ; BSR set to: 57
 25830   017C2E  2A12               	incf	_uart2RxHead^0,f,c	;volatile
 25831                           
 25832                           ; BSR set to: 57
 25833                           ;mcc_generated_files/uart2.c: 261:  if (sizeof(uart2RxBuffer) <= uart2RxHead) {
 25834   017C30  2812               	incf	_uart2RxHead^0,w,c
 25835   017C32  B4D8               	btfsc	status,2,c
 25836                           
 25837                           ; BSR set to: 57
 25838                           ;mcc_generated_files/uart2.c: 262:   uart2RxHead = 0;
 25839   017C34  6A12               	clrf	_uart2RxHead^0,c	;volatile
 25840                           
 25841                           ; BSR set to: 57
 25842                           ;mcc_generated_files/uart2.c: 265:  uart2RxCount++;
 25843   017C36  2A10               	incf	_uart2RxCount^0,f,c	;volatile
 25844                           
 25845                           ; BSR set to: 57
 25846                           ;mcc_generated_files/uart2.c: 266:  PIE6bits.U2RXIE = 1;
 25847   017C38  8596               	bsf	150,2,b	;volatile
 25848                           
 25849                           ; BSR set to: 57
 25850                           ; _UART2_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 25851   017C3A  52E5               	movf	postdec1,f,c
 25852   017C3C  0012               	return		;funcret
 25853   017C3E                     __end_of_UART2_put_buffer:
 25854                           	callstack 0
 25855                           
 25856 ;; *************** function _UART2_is_tx_ready *****************
 25857 ;; Defined at:
 25858 ;;		line 142 in file "mcc_generated_files/uart2.c"
 25859 ;; Parameters:    Size  Location     Type
 25860 ;;		None
 25861 ;; Auto vars:     Size  Location     Type
 25862 ;;		None
 25863 ;; Return value:  Size  Location     Type
 25864 ;;                  1  [STACK] unsigned char 
 25865 ;; Registers used:
 25866 ;;		btemp
 25867 ;; Tracked objects:
 25868 ;;		On entry : 0/0
 25869 ;;		On exit  : 0/0
 25870 ;;		Unchanged: 0/0
 25871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25876 ;;Total ram usage:        0 bytes
 25877 ;; Hardware stack levels used: 1
 25878 ;; Hardware stack levels required when called: 3
 25879 ;; This function calls:
 25880 ;;		Nothing
 25881 ;; This function is called by:
 25882 ;;		_secs_send
 25883 ;; This function uses a reentrant model
 25884 ;;
 25885                           
 25886                           	psect	text5
 25887   01827A                     __ptext5:
 25888                           	callstack 0
 25889   01827A                     _UART2_is_tx_ready:
 25890                           	callstack 25
 25891                           
 25892                           ;mcc_generated_files/uart2.c: 144:     return uart2TxBufferRemaining;
 25893                           
 25894                           ; BSR set to: 57
 25895                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25896                           ;incstack = 0
 25897   01827A  C013  F023         	movff	_uart2TxBufferRemaining,btemp	;volatile
 25898                           
 25899                           ; _UART2_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25900   01827E  0012               	return		;funcret
 25901   018280                     __end_of_UART2_is_tx_ready:
 25902                           	callstack 0
 25903                           
 25904 ;; *************** function _UART2_Write *****************
 25905 ;; Defined at:
 25906 ;;		line 172 in file "mcc_generated_files/uart2.c"
 25907 ;; Parameters:    Size  Location     Type
 25908 ;;  txData          1  [STACK] unsigned char 
 25909 ;; Auto vars:     Size  Location     Type
 25910 ;;		None
 25911 ;; Return value:  Size  Location     Type
 25912 ;;                  1  [STACK] void 
 25913 ;; Registers used:
 25914 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 25915 ;; Tracked objects:
 25916 ;;		On entry : 0/0
 25917 ;;		On exit  : 3F/39
 25918 ;;		Unchanged: 0/0
 25919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25924 ;;Total ram usage:        0 bytes
 25925 ;; Hardware stack levels used: 1
 25926 ;; Hardware stack levels required when called: 3
 25927 ;; This function calls:
 25928 ;;		Nothing
 25929 ;; This function is called by:
 25930 ;;		_secs_send
 25931 ;; This function uses a reentrant model
 25932 ;;
 25933                           
 25934                           	psect	text6
 25935   017912                     __ptext6:
 25936                           	callstack 0
 25937   017912                     _UART2_Write:
 25938                           	callstack 25
 25939                           
 25940                           ;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
 25941                           
 25942                           ;mcc_generated_files/uart2.c: 172: void UART2_Write(uint8_t txData);mcc_generated_files/
      +                          uart2.c: 173: {;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
 25943                           
 25944                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25945                           ;incstack = 0
 25946   017912  5013               	movf	_uart2TxBufferRemaining^0,w,c	;volatile
 25947   017914  B4D8               	btfsc	status,2,c
 25948   017916  D7FD               	goto	__ptext6
 25949                           
 25950                           ;mcc_generated_files/uart2.c: 178:     if(0 == PIE6bits.U2TXIE)
 25951   017918  0139               	movlb	57	; () banked
 25952   01791A  B796               	btfsc	150,3,b	;volatile
 25953   01791C  D005               	goto	l711
 25954                           
 25955                           ; BSR set to: 57
 25956                           ;mcc_generated_files/uart2.c: 179:     {;mcc_generated_files/uart2.c: 180:         U2TXB
      +                           = txData;
 25957                           ;stkvar	_txData @ sp[(0)+-1]
 25958   01791E  0EFF               	movlw	-1
 25959   017920  006F FF8F FDD2     	movff	plusw1,15826	;volatile
 25960                           
 25961                           ;mcc_generated_files/uart2.c: 181:     }
 25962   017926  D011               	goto	l8412
 25963   017928                     l711:
 25964                           
 25965                           ; BSR set to: 57
 25966                           ;mcc_generated_files/uart2.c: 183:     {;mcc_generated_files/uart2.c: 184:         PIE6b
      +                          its.U2TXIE = 0;
 25967   017928  9796               	bcf	150,3,b	;volatile
 25968                           
 25969                           ; BSR set to: 57
 25970                           ;mcc_generated_files/uart2.c: 185:         uart2TxBuffer[uart2TxHead++] = txData;
 25971                           ;stkvar	_txData @ sp[(0)+-1]
 25972   01792A  0E00               	movlw	low _uart2TxBuffer
 25973   01792C  2415               	addwf	_uart2TxHead^0,w,c	;volatile
 25974   01792E  6ED9               	movwf	fsr2l,c
 25975   017930  6ADA               	clrf	fsr2h,c
 25976   017932  0E02               	movlw	high _uart2TxBuffer
 25977   017934  22DA               	addwfc	fsr2h,f,c
 25978   017936  0EFF               	movlw	-1
 25979   017938  006F FF8F FFDF     	movff	plusw1,indf2
 25980                           
 25981                           ; BSR set to: 57
 25982   01793E  2A15               	incf	_uart2TxHead^0,f,c	;volatile
 25983                           
 25984                           ; BSR set to: 57
 25985                           ;mcc_generated_files/uart2.c: 186:         if(sizeof(uart2TxBuffer) <= uart2TxHead)
 25986   017940  0E3F               	movlw	63
 25987   017942  6415               	cpfsgt	_uart2TxHead^0,c
 25988   017944  D001               	goto	l8410
 25989                           
 25990                           ; BSR set to: 57
 25991                           ;mcc_generated_files/uart2.c: 187:         {;mcc_generated_files/uart2.c: 188:          
      +                             uart2TxHead = 0;
 25992   017946  6A15               	clrf	_uart2TxHead^0,c	;volatile
 25993   017948                     l8410:
 25994                           
 25995                           ; BSR set to: 57
 25996                           ;mcc_generated_files/uart2.c: 190:         uart2TxBufferRemaining--;
 25997   017948  0613               	decf	_uart2TxBufferRemaining^0,f,c	;volatile
 25998   01794A                     l8412:
 25999                           
 26000                           ; BSR set to: 57
 26001                           ;mcc_generated_files/uart2.c: 192:     PIE6bits.U2TXIE = 1;
 26002   01794A  8796               	bsf	150,3,b	;volatile
 26003                           
 26004                           ; BSR set to: 57
 26005                           ; _UART2_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
 26006   01794C  52E5               	movf	postdec1,f,c
 26007   01794E  0012               	return		;funcret
 26008   017950                     __end_of_UART2_Write:
 26009                           	callstack 0
 26010                           
 26011 ;; *************** function _UART1_put_buffer *****************
 26012 ;; Defined at:
 26013 ;;		line 253 in file "mcc_generated_files/uart1.c"
 26014 ;; Parameters:    Size  Location     Type
 26015 ;;  bufData         1  [STACK] unsigned char 
 26016 ;; Auto vars:     Size  Location     Type
 26017 ;;		None
 26018 ;; Return value:  Size  Location     Type
 26019 ;;                  1  [STACK] void 
 26020 ;; Registers used:
 26021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 26022 ;; Tracked objects:
 26023 ;;		On entry : 0/39
 26024 ;;		On exit  : 3F/39
 26025 ;;		Unchanged: 0/0
 26026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26031 ;;Total ram usage:        0 bytes
 26032 ;; Hardware stack levels used: 1
 26033 ;; Hardware stack levels required when called: 3
 26034 ;; This function calls:
 26035 ;;		Nothing
 26036 ;; This function is called by:
 26037 ;;		_t_protocol
 26038 ;;		_secs_send
 26039 ;; This function uses a reentrant model
 26040 ;;
 26041                           
 26042                           	psect	text7
 26043   017C3E                     __ptext7:
 26044                           	callstack 0
 26045   017C3E                     _UART1_put_buffer:
 26046                           	callstack 25
 26047                           
 26048                           ;mcc_generated_files/uart1.c: 253: void UART1_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart1.c: 254: {;mcc_generated_files/uart1.c: 255:  PIE3bits.U1RXIE = 0;
 26049                           
 26050                           ; BSR set to: 57
 26051                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26052                           ;incstack = 0
 26053   017C3E  0139               	movlb	57	; () banked
 26054   017C40  9793               	bcf	147,3,b	;volatile
 26055                           
 26056                           ; BSR set to: 57
 26057                           ;mcc_generated_files/uart1.c: 256:  uart1RxBuffer[uart1RxHead++] = bufData;
 26058                           ;stkvar	_bufData @ sp[(0)+-1]
 26059   017C42  0E00               	movlw	low _uart1RxBuffer
 26060   017C44  2418               	addwf	_uart1RxHead^0,w,c	;volatile
 26061   017C46  6ED9               	movwf	fsr2l,c
 26062   017C48  6ADA               	clrf	fsr2h,c
 26063   017C4A  0E04               	movlw	high _uart1RxBuffer
 26064   017C4C  22DA               	addwfc	fsr2h,f,c
 26065   017C4E  0EFF               	movlw	-1
 26066   017C50  006F FF8F FFDF     	movff	plusw1,indf2
 26067                           
 26068                           ; BSR set to: 57
 26069   017C56  2A18               	incf	_uart1RxHead^0,f,c	;volatile
 26070                           
 26071                           ; BSR set to: 57
 26072                           ;mcc_generated_files/uart1.c: 257:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 26073   017C58  2818               	incf	_uart1RxHead^0,w,c
 26074   017C5A  B4D8               	btfsc	status,2,c
 26075                           
 26076                           ; BSR set to: 57
 26077                           ;mcc_generated_files/uart1.c: 258:   uart1RxHead = 0;
 26078   017C5C  6A18               	clrf	_uart1RxHead^0,c	;volatile
 26079                           
 26080                           ; BSR set to: 57
 26081                           ;mcc_generated_files/uart1.c: 261:  uart1RxCount++;
 26082   017C5E  2A16               	incf	_uart1RxCount^0,f,c	;volatile
 26083                           
 26084                           ; BSR set to: 57
 26085                           ;mcc_generated_files/uart1.c: 262:  PIE3bits.U1RXIE = 1;
 26086   017C60  8793               	bsf	147,3,b	;volatile
 26087                           
 26088                           ; BSR set to: 57
 26089                           ; _UART1_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 26090   017C62  52E5               	movf	postdec1,f,c
 26091   017C64  0012               	return		;funcret
 26092   017C66                     __end_of_UART1_put_buffer:
 26093                           	callstack 0
 26094                           
 26095 ;; *************** function _UART1_is_tx_ready *****************
 26096 ;; Defined at:
 26097 ;;		line 152 in file "mcc_generated_files/uart1.c"
 26098 ;; Parameters:    Size  Location     Type
 26099 ;;		None
 26100 ;; Auto vars:     Size  Location     Type
 26101 ;;		None
 26102 ;; Return value:  Size  Location     Type
 26103 ;;                  1  [STACK] unsigned char 
 26104 ;; Registers used:
 26105 ;;		btemp
 26106 ;; Tracked objects:
 26107 ;;		On entry : 0/0
 26108 ;;		On exit  : 0/0
 26109 ;;		Unchanged: 0/0
 26110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26115 ;;Total ram usage:        0 bytes
 26116 ;; Hardware stack levels used: 1
 26117 ;; Hardware stack levels required when called: 3
 26118 ;; This function calls:
 26119 ;;		Nothing
 26120 ;; This function is called by:
 26121 ;;		_secs_send
 26122 ;; This function uses a reentrant model
 26123 ;;
 26124                           
 26125                           	psect	text8
 26126   018280                     __ptext8:
 26127                           	callstack 0
 26128   018280                     _UART1_is_tx_ready:
 26129                           	callstack 25
 26130                           
 26131                           ;mcc_generated_files/uart1.c: 154:  return uart1TxBufferRemaining;
 26132                           
 26133                           ; BSR set to: 57
 26134                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26135                           ;incstack = 0
 26136   018280  C019  F023         	movff	_uart1TxBufferRemaining,btemp	;volatile
 26137                           
 26138                           ; _UART1_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26139   018284  0012               	return		;funcret
 26140   018286                     __end_of_UART1_is_tx_ready:
 26141                           	callstack 0
 26142                           
 26143 ;; *************** function _secs_II_message *****************
 26144 ;; Defined at:
 26145 ;;		line 881 in file "gemsecs.c"
 26146 ;; Parameters:    Size  Location     Type
 26147 ;;  stream          1  [STACK] const unsigned char 
 26148 ;;  function        1  [STACK] const unsigned char 
 26149 ;; Auto vars:     Size  Location     Type
 26150 ;;  ceid            4  [STACK] unsigned long 
 26151 ;;  i               2  [STACK] unsigned short 
 26152 ;; Return value:  Size  Location     Type
 26153 ;;                  7  [STACK] struct response_type
 26154 ;; Registers used:
 26155 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 26156 ;; Tracked objects:
 26157 ;;		On entry : 0/3C
 26158 ;;		On exit  : 0/0
 26159 ;;		Unchanged: 0/0
 26160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26165 ;;Total ram usage:        0 bytes
 26166 ;; Hardware stack levels used: 1
 26167 ;; Hardware stack levels required when called: 13
 26168 ;; This function calls:
 26169 ;;		_DATAEE_WriteByte
 26170 ;;		_StartTimer
 26171 ;;		_TimerDone
 26172 ;;		_display_info
 26173 ;;		_format_display_text
 26174 ;;		_gem_messages
 26175 ;;		_parse_sid
 26176 ;;		_s10f1_opcmd
 26177 ;;		_s6f11_opcmd
 26178 ;;		_sequence_messages
 26179 ;;		_set_display_info
 26180 ;;		_set_temp_display_help
 26181 ;;		_terminal_format
 26182 ;;		_vterm_sequence
 26183 ;; This function is called by:
 26184 ;;		_t_protocol
 26185 ;; This function uses a reentrant model
 26186 ;;
 26187                           
 26188                           	psect	text9
 26189   011BBE                     __ptext9:
 26190                           	callstack 0
 26191   011BBE                     _secs_II_message:
 26192                           	callstack 0
 26193                           
 26194                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 var
      +                          gsize = 0, retsize = 7 argfudge = 5
 26195   011BBE  0E0B               	movlw	11
 26196   011BC0  26E1               	addwf	fsr1l,f,c
 26197   011BC2  0E00               	movlw	0
 26198   011BC4  22E2               	addwfc	fsr1h,f,c
 26199                           
 26200                           ;gemsecs.c: 881: response_type secs_II_message(const uint8_t stream, const uint8_t funct
      +                          ion);gemsecs.c: 882: {;gemsecs.c: 883:  static response_type block;;gemsecs.c: 884:  uin
      +                          t16_t i = 0;
 26201                           ;stkvar	_i @ sp[(-6)+4]
 26202                           
 26203                           ;incstack = 0
 26204   011BC6  0EFE               	movlw	-2
 26205   011BC8  6AE3               	clrf	plusw1,c
 26206   011BCA  0EFF               	movlw	-1
 26207   011BCC  6AE3               	clrf	plusw1,c
 26208   011BCE  A8BB               	btfss	187,4,c	;volatile
 26209   011BD0  D002               	goto	u9270
 26210   011BD2  0E01               	movlw	1
 26211   011BD4  D001               	goto	u9276
 26212   011BD6                     u9270:
 26213   011BD6  0E00               	movlw	0
 26214   011BD8                     u9276:
 26215   011BD8  0AFF               	xorlw	255
 26216   011BDA  6E2E               	movwf	(btemp+11)^0,c
 26217   011BDC  3A2E               	swapf	(btemp+11)^0,f,c
 26218   011BDE  50BB               	movf	187,w,c	;volatile
 26219   011BE0  182E               	xorwf	(btemp+11)^0,w,c
 26220   011BE2  0BEF               	andlw	-17
 26221   011BE4  182E               	xorwf	(btemp+11)^0,w,c
 26222   011BE6  6EBB               	movwf	187,c	;volatile
 26223                           
 26224                           ;gemsecs.c: 887:  V.abort = LINK_ERROR_NONE;
 26225   011BE8  0E0A               	movlw	10
 26226   011BEA  006F FFA0  FD50    	movff	wreg,_V+310	;volatile
 26227                           
 26228                           ;gemsecs.c: 888:  V.queue = 0;
 26229   011BF0  EE23  F168         	lfsr	2,_V+334	;volatile
 26230   011BF4  98DF               	bcf	indf2,4,c
 26231                           
 26232                           ;gemsecs.c: 889:  block.respond = 0;
 26233   011BF6  9022               	bcf	(secs_II_message@block+6)^0,0,c
 26234                           
 26235                           ;gemsecs.c: 891:  if (TimerDone(TMR_HBIO)) {
 26236   011BF8  0E06               	movlw	6
 26237   011BFA  6EE6               	movwf	postinc1,c
 26238   011BFC  ECAD  F0BF         	call	_TimerDone	;wreg free
 26239   011C00  5023               	movf	btemp^0,w,c
 26240   011C02  B4D8               	btfsc	status,2,c
 26241   011C04  D330               	goto	l12936
 26242                           
 26243                           ;gemsecs.c: 892:   if (V.stack) {
 26244   011C06  EE23  F169         	lfsr	2,_V+335	;volatile
 26245   011C0A  50DF               	movf	223,w,c
 26246   011C0C  0B07               	andlw	7
 26247   011C0E  0900               	iorlw	0
 26248   011C10  B4D8               	btfsc	status,2,c
 26249   011C12  D02F               	goto	l12630
 26250                           
 26251                           ;gemsecs.c: 893:    gem_messages(&block, V.sid);
 26252   011C14  EE23  F199         	lfsr	2,_V+383	;volatile
 26253   011C18  50DF               	movf	indf2,w,c
 26254   011C1A  6EE6               	movwf	postinc1,c
 26255   011C1C  0E1C               	movlw	secs_II_message@block& (0+255)
 26256   011C1E  6EE6               	movwf	postinc1,c
 26257   011C20  ECAB  F0AA         	call	_gem_messages	;wreg free
 26258                           
 26259                           ;gemsecs.c: 894:    if (V.sid >= 10) {
 26260   011C24  EE23  F199         	lfsr	2,_V+383	;volatile
 26261   011C28  0E09               	movlw	9
 26262   011C2A  64DF               	cpfsgt	indf2,c
 26263   011C2C  D005               	goto	l12618
 26264                           
 26265                           ;gemsecs.c: 895:     set_display_info(DIS_SEQUENCE_M);
 26266   011C2E  0E08               	movlw	8
 26267   011C30  6EE6               	movwf	postinc1,c
 26268   011C32  EC2A  F0C0         	call	_set_display_info	;wreg free
 26269                           
 26270                           ;gemsecs.c: 896:    } else {
 26271   011C36  D004               	goto	l12620
 26272   011C38                     l12618:
 26273                           
 26274                           ;gemsecs.c: 897:     set_display_info(DIS_SEQUENCE);
 26275   011C38  0E07               	movlw	7
 26276   011C3A  6EE6               	movwf	postinc1,c
 26277   011C3C  EC2A  F0C0         	call	_set_display_info	;wreg free
 26278   011C40                     l12620:
 26279                           
 26280                           ;gemsecs.c: 899:    vterm_sequence();
 26281   011C40  ECA8  F094         	call	_vterm_sequence	;wreg free
 26282                           
 26283                           ; BSR set to: 1
 26284                           ;gemsecs.c: 900:    StartTimer(TMR_INFO, 3000);
 26285   011C44  0EB8               	movlw	184
 26286   011C46  6EE6               	movwf	postinc1,c
 26287   011C48  0E0B               	movlw	11
 26288   011C4A  6EE6               	movwf	postinc1,c
 26289   011C4C  0E07               	movlw	7
 26290   011C4E  6EE6               	movwf	postinc1,c
 26291   011C50  EC02  F0BD         	call	_StartTimer	;wreg free
 26292                           
 26293                           ;gemsecs.c: 901:    V.set_sequ = 1;
 26294   011C54  EE23  F167         	lfsr	2,_V+333	;volatile
 26295   011C58  86DF               	bsf	indf2,3,c
 26296   011C5A                     l12626:
 26297                           
 26298                           ;gemsecs.c: 902:    return(block);
 26299   011C5A  EE20  F01C         	lfsr	2,secs_II_message@block
 26300                           
 26301                           ;stkvar	?_secs_II_message @ sp[(-6)+-7]
 26302   011C5E  0E07               	movlw	7
 26303   011C60  6E23               	movwf	btemp^0,c
 26304   011C62  0EF3               	movlw	-13
 26305   011C64                     us931999:
 26306   011C64  006F FF7B FFE3     	movff	postinc2,plusw1
 26307   011C6A  28E8               	incf	wreg,w,c
 26308   011C6C  2E23               	decfsz	btemp^0,f,c
 26309   011C6E  D7FA               	bra	us931999
 26310   011C70  D30F               	goto	l2124
 26311   011C72                     l12630:
 26312                           
 26313                           ;gemsecs.c: 904:   StartTimer(TMR_HBIO, 5000);
 26314   011C72  0E88               	movlw	136
 26315   011C74  6EE6               	movwf	postinc1,c
 26316   011C76  0E13               	movlw	19
 26317   011C78  6EE6               	movwf	postinc1,c
 26318   011C7A  0E06               	movlw	6
 26319   011C7C  6EE6               	movwf	postinc1,c
 26320   011C7E  EC02  F0BD         	call	_StartTimer	;wreg free
 26321   011C82  D2F1               	goto	l12936
 26322   011C84                     l12632:
 26323                           
 26324                           ;gemsecs.c: 911:    block.header = (uint8_t*) & H12[0];
 26325   011C84  0EC3               	movlw	low _H12
 26326   011C86  6E1C               	movwf	secs_II_message@block^0,c
 26327   011C88  0E02               	movlw	high _H12
 26328   011C8A  6E1D               	movwf	(secs_II_message@block+1)^0,c
 26329                           
 26330                           ;gemsecs.c: 912:    block.length = sizeof(header12);
 26331   011C8C  0E0F               	movlw	15
 26332   011C8E  6E1E               	movwf	(secs_II_message@block+2)^0,c
 26333                           
 26334                           ;gemsecs.c: 913:    H12[0].block.block.systemb = V.systemb;
 26335   011C90  0063  F514  F2C7   	movff	_V+299,_H12+4	;volatile
 26336   011C96  0063  F518  F2C8   	movff	_V+300,_H12+5	;volatile
 26337   011C9C  0063  F51C  F2C9   	movff	_V+301,_H12+6	;volatile
 26338   011CA2  0063  F520  F2CA   	movff	_V+302,_H12+7	;volatile
 26339                           
 26340                           ;gemsecs.c: 914:    H10[0].block.block.systemb = V.ticks;
 26341   011CA8  0063  F504  F102   	movff	_V+295,_H10+2	;volatile
 26342   011CAE  0063  F508  F103   	movff	_V+296,_H10+3	;volatile
 26343   011CB4  0063  F50C  F104   	movff	_V+297,_H10+4	;volatile
 26344   011CBA  0063  F510  F105   	movff	_V+298,_H10+5	;volatile
 26345                           
 26346                           ;gemsecs.c: 915:    block.respond = 1;
 26347   011CC0  8022               	bsf	(secs_II_message@block+6)^0,0,c
 26348                           
 26349                           ;gemsecs.c: 916:    block.reply = (uint8_t*) & H10[0];
 26350   011CC2  0E00               	movlw	low _H10
 26351   011CC4  6E1F               	movwf	(secs_II_message@block+3)^0,c
 26352   011CC6  0E01               	movlw	high _H10
 26353   011CC8  6E20               	movwf	(secs_II_message@block+4)^0,c
 26354                           
 26355                           ;gemsecs.c: 917:    block.reply_length = sizeof(header10);
 26356   011CCA  0E0D               	movlw	13
 26357   011CCC  6E21               	movwf	(secs_II_message@block+5)^0,c
 26358                           
 26359                           ;gemsecs.c: 918:    V.queue = 1;
 26360   011CCE  EE23  F168         	lfsr	2,_V+334	;volatile
 26361   011CD2  88DF               	bsf	indf2,4,c
 26362                           
 26363                           ;gemsecs.c: 919:    break;
 26364   011CD4  D7C2               	goto	l12626
 26365   011CD6                     l12646:
 26366                           
 26367                           ;gemsecs.c: 921:    block.header = (uint8_t*) & H10[0];
 26368   011CD6  0E00               	movlw	low _H10
 26369   011CD8  6E1C               	movwf	secs_II_message@block^0,c
 26370   011CDA  0E01               	movlw	high _H10
 26371   011CDC  6E1D               	movwf	(secs_II_message@block+1)^0,c
 26372                           
 26373                           ;gemsecs.c: 922:    block.length = sizeof(header10);
 26374   011CDE  0E0D               	movlw	13
 26375   011CE0  6E1E               	movwf	(secs_II_message@block+2)^0,c
 26376                           
 26377                           ;gemsecs.c: 923:    H10[0].block.block.systemb = V.systemb;
 26378   011CE2  0063  F514  F102   	movff	_V+299,_H10+2	;volatile
 26379   011CE8  0063  F518  F103   	movff	_V+300,_H10+3	;volatile
 26380   011CEE  0063  F51C  F104   	movff	_V+301,_H10+4	;volatile
 26381   011CF4  0063  F520  F105   	movff	_V+302,_H10+5	;volatile
 26382                           
 26383                           ;gemsecs.c: 924:    break;
 26384   011CFA  D7AF               	goto	l12626
 26385   011CFC                     l12652:
 26386                           
 26387                           ;gemsecs.c: 926:    block.header = (uint8_t*) & H14[0];
 26388   011CFC  0EE4               	movlw	low _H14
 26389   011CFE  6E1C               	movwf	secs_II_message@block^0,c
 26390   011D00  6A1D               	clrf	(secs_II_message@block+1)^0,c
 26391                           
 26392                           ;gemsecs.c: 927:    block.length = sizeof(header14);
 26393   011D02  0E11               	movlw	17
 26394   011D04  6E1E               	movwf	(secs_II_message@block+2)^0,c
 26395                           
 26396                           ;gemsecs.c: 928:    H14[0].block.block.systemb = V.systemb;
 26397   011D06  0063  F514  F0EA   	movff	_V+299,_H14+6	;volatile
 26398   011D0C  0063  F518  F0EB   	movff	_V+300,_H14+7	;volatile
 26399   011D12  0063  F51C  F0EC   	movff	_V+301,_H14+8	;volatile
 26400   011D18  0063  F520  F0ED   	movff	_V+302,_H14+9	;volatile
 26401                           
 26402                           ;gemsecs.c: 929:    break;
 26403   011D1E  D79D               	goto	l12626
 26404   011D20                     l12658:
 26405                           
 26406                           ;gemsecs.c: 931:    block.header = (uint8_t*) & H17[0];
 26407   011D20  0E9B               	movlw	low _H17
 26408   011D22  6E1C               	movwf	secs_II_message@block^0,c
 26409   011D24  0E01               	movlw	high _H17
 26410   011D26  6E1D               	movwf	(secs_II_message@block+1)^0,c
 26411                           
 26412                           ;gemsecs.c: 932:    block.length = sizeof(header17);
 26413   011D28  0E14               	movlw	20
 26414   011D2A  6E1E               	movwf	(secs_II_message@block+2)^0,c
 26415                           
 26416                           ;gemsecs.c: 933:    H17[0].block.block.systemb = V.systemb;
 26417   011D2C  0063  F514  F1A4   	movff	_V+299,_H17+9	;volatile
 26418   011D32  0063  F518  F1A5   	movff	_V+300,_H17+10	;volatile
 26419   011D38  0063  F51C  F1A6   	movff	_V+301,_H17+11	;volatile
 26420   011D3E  0063  F520  F1A7   	movff	_V+302,_H17+12	;volatile
 26421                           
 26422                           ;gemsecs.c: 934:    H12[1].block.block.systemb = V.ticks;
 26423   011D44  0063  F504  F2D6   	movff	_V+295,_H12+19	;volatile
 26424   011D4A  0063  F508  F2D7   	movff	_V+296,_H12+20	;volatile
 26425   011D50  0063  F50C  F2D8   	movff	_V+297,_H12+21	;volatile
 26426   011D56  0063  F510  F2D9   	movff	_V+298,_H12+22	;volatile
 26427                           
 26428                           ;gemsecs.c: 935:    block.respond = 1;
 26429   011D5C  8022               	bsf	(secs_II_message@block+6)^0,0,c
 26430                           
 26431                           ;gemsecs.c: 936:    block.reply = (uint8_t*) & H12[1];
 26432   011D5E  0ED2               	movlw	low (_H12+15)
 26433   011D60  6E1F               	movwf	(secs_II_message@block+3)^0,c
 26434   011D62  0E02               	movlw	high (_H12+15)
 26435   011D64  6E20               	movwf	(secs_II_message@block+4)^0,c
 26436                           
 26437                           ;gemsecs.c: 937:    block.reply_length = sizeof(header12);
 26438   011D66  0E0F               	movlw	15
 26439   011D68  D7B1               	goto	L8
 26440   011D6A                     l12672:
 26441                           
 26442                           ;gemsecs.c: 941:    H10[2].block.block.stream = stream;
 26443                           ;stkvar	_stream @ sp[(-6)+-6]
 26444   011D6A  0EF4               	movlw	-12
 26445   011D6C  006F FF8C  F02E    	movff	plusw1,btemp+11
 26446   011D72  0101               	movlb	1	; () banked
 26447   011D74  5123               	movf	(_H10+35)& (0+255),w,b
 26448   011D76  182E               	xorwf	(btemp+11)^0,w,c
 26449   011D78  0B80               	andlw	-128
 26450   011D7A  182E               	xorwf	(btemp+11)^0,w,c
 26451   011D7C  6F23               	movwf	(_H10+35)& (0+255),b
 26452                           
 26453                           ; BSR set to: 1
 26454                           ;gemsecs.c: 942:    block.header = (uint8_t*) & H10[2];
 26455   011D7E  0E1A               	movlw	low (_H10+26)
 26456   011D80  6E1C               	movwf	secs_II_message@block^0,c
 26457   011D82  0E01               	movlw	high (_H10+26)
 26458   011D84  6E1D               	movwf	(secs_II_message@block+1)^0,c
 26459                           
 26460                           ; BSR set to: 1
 26461                           ;gemsecs.c: 943:    block.length = sizeof(header10);
 26462   011D86  0E0D               	movlw	13
 26463   011D88  6E1E               	movwf	(secs_II_message@block+2)^0,c
 26464                           
 26465                           ; BSR set to: 1
 26466                           ;gemsecs.c: 944:    H10[2].block.block.systemb = V.systemb;
 26467   011D8A  0063  F514  F11C   	movff	_V+299,_H10+28	;volatile
 26468   011D90  0063  F518  F11D   	movff	_V+300,_H10+29	;volatile
 26469   011D96  0063  F51C  F11E   	movff	_V+301,_H10+30	;volatile
 26470   011D9C  0063  F520  F11F   	movff	_V+302,_H10+31	;volatile
 26471                           
 26472                           ; BSR set to: 1
 26473                           ;gemsecs.c: 945:    V.abort = LINK_ERROR_ABORT;
 26474   011DA2  0E11               	movlw	17
 26475   011DA4  006F FFA0  FD50    	movff	wreg,_V+310	;volatile
 26476                           
 26477                           ; BSR set to: 1
 26478                           ;gemsecs.c: 946:    V.all_errors++;
 26479   011DAA  EE23  F165         	lfsr	2,_V+331	;volatile
 26480   011DAE  D131               	goto	L9
 26481   011DB0                     l12686:
 26482                           
 26483                           ;stkvar	_function @ sp[(-6)+-7]
 26484   011DB0  0EF3               	movlw	-13
 26485   011DB2  50E3               	movf	plusw1,w,c
 26486                           
 26487                           ; Switch size 1, requested type "simple"
 26488                           ; Number of cases is 4, Range of values is 1 to 13
 26489                           ; switch strategies available:
 26490                           ; Name         Instructions Cycles
 26491                           ; simple_byte           13     7 (average)
 26492                           ;	Chosen strategy is simple_byte
 26493   011DB4  0A01               	xorlw	1	; case 1
 26494   011DB6  B4D8               	btfsc	status,2,c
 26495   011DB8  D765               	goto	l12632
 26496   011DBA  0A03               	xorlw	3	; case 2
 26497   011DBC  B4D8               	btfsc	status,2,c
 26498   011DBE  D78B               	goto	l12646
 26499   011DC0  0A01               	xorlw	1	; case 3
 26500   011DC2  B4D8               	btfsc	status,2,c
 26501   011DC4  D79B               	goto	l12652
 26502   011DC6  0A0E               	xorlw	14	; case 13
 26503   011DC8  B4D8               	btfsc	status,2,c
 26504   011DCA  D7AA               	goto	l12658
 26505   011DCC  D7CE               	goto	l12672
 26506   011DCE                     l12688:
 26507                           
 26508                           ;gemsecs.c: 954:    block.header = (uint8_t*) & H26[0];
 26509   011DCE  0EE1               	movlw	low _H26
 26510   011DD0  6E1C               	movwf	secs_II_message@block^0,c
 26511   011DD2  0E02               	movlw	high _H26
 26512   011DD4  6E1D               	movwf	(secs_II_message@block+1)^0,c
 26513                           
 26514                           ;gemsecs.c: 955:    block.length = sizeof(header26);
 26515   011DD6  0E1D               	movlw	29
 26516   011DD8  6E1E               	movwf	(secs_II_message@block+2)^0,c
 26517                           
 26518                           ;gemsecs.c: 956:    H26[0].block.block.systemb = V.systemb;
 26519   011DDA  0063  F514  F2F3   	movff	_V+299,_H26+18	;volatile
 26520   011DE0  0063  F518  F2F4   	movff	_V+300,_H26+19	;volatile
 26521   011DE6  0063  F51C  F2F5   	movff	_V+301,_H26+20	;volatile
 26522   011DEC  0063  F520  F2F6   	movff	_V+302,_H26+21	;volatile
 26523                           
 26524                           ;gemsecs.c: 962:    break;
 26525   011DF2  D733               	goto	l12626
 26526   011DF4                     l12694:
 26527                           
 26528                           ;gemsecs.c: 964:    block.header = (uint8_t*) & H13[3];
 26529   011DF4  0E8B               	movlw	low (_H13+48)
 26530   011DF6  6E1C               	movwf	secs_II_message@block^0,c
 26531   011DF8  0E01               	movlw	high (_H13+48)
 26532   011DFA  6E1D               	movwf	(secs_II_message@block+1)^0,c
 26533                           
 26534                           ;gemsecs.c: 965:    block.length = sizeof(header13);
 26535   011DFC  0E10               	movlw	16
 26536   011DFE  6E1E               	movwf	(secs_II_message@block+2)^0,c
 26537                           
 26538                           ;gemsecs.c: 966:    H13[3].block.block.systemb = V.systemb;
 26539   011E00  0063  F514  F190   	movff	_V+299,_H13+53	;volatile
 26540   011E06  0063  F518  F191   	movff	_V+300,_H13+54	;volatile
 26541   011E0C  0063  F51C  F192   	movff	_V+301,_H13+55	;volatile
 26542   011E12  0063  F520  F193   	movff	_V+302,_H13+56	;volatile
 26543                           
 26544                           ;gemsecs.c: 967:    break;
 26545   011E18  D720               	goto	l12626
 26546   011E1A                     l12714:
 26547                           
 26548                           ;stkvar	_function @ sp[(-6)+-7]
 26549   011E1A  0EF3               	movlw	-13
 26550   011E1C  50E3               	movf	plusw1,w,c
 26551                           
 26552                           ; Switch size 1, requested type "simple"
 26553                           ; Number of cases is 2, Range of values is 17 to 25
 26554                           ; switch strategies available:
 26555                           ; Name         Instructions Cycles
 26556                           ; simple_byte            7     4 (average)
 26557                           ;	Chosen strategy is simple_byte
 26558   011E1E  0A11               	xorlw	17	; case 17
 26559   011E20  B4D8               	btfsc	status,2,c
 26560   011E22  D7D5               	goto	l12688
 26561   011E24  0A08               	xorlw	8	; case 25
 26562   011E26  B4D8               	btfsc	status,2,c
 26563   011E28  D7E5               	goto	l12694
 26564   011E2A  D79F               	goto	l12672
 26565   011E2C                     l12716:
 26566                           
 26567                           ;gemsecs.c: 981:    block.header = (uint8_t*) & H13[2];
 26568   011E2C  0E7B               	movlw	low (_H13+32)
 26569   011E2E  6E1C               	movwf	secs_II_message@block^0,c
 26570   011E30  0E01               	movlw	high (_H13+32)
 26571   011E32  6E1D               	movwf	(secs_II_message@block+1)^0,c
 26572                           
 26573                           ;gemsecs.c: 982:    block.length = sizeof(header13);
 26574   011E34  0E10               	movlw	16
 26575   011E36  6E1E               	movwf	(secs_II_message@block+2)^0,c
 26576                           
 26577                           ;gemsecs.c: 983:    H13[2].block.block.systemb = V.systemb;
 26578   011E38  0063  F514  F180   	movff	_V+299,_H13+37	;volatile
 26579   011E3E  0063  F518  F181   	movff	_V+300,_H13+38	;volatile
 26580   011E44  0063  F51C  F182   	movff	_V+301,_H13+39	;volatile
 26581   011E4A  0063  F520  F183   	movff	_V+302,_H13+40	;volatile
 26582                           
 26583                           ;gemsecs.c: 984:    break;
 26584   011E50  D704               	goto	l12626
 26585   011E52                     l12736:
 26586                           
 26587                           ;stkvar	_function @ sp[(-6)+-7]
 26588   011E52  0EF3               	movlw	-13
 26589   011E54  50E3               	movf	plusw1,w,c
 26590                           
 26591                           ; Switch size 1, requested type "simple"
 26592                           ; Number of cases is 1, Range of values is 1 to 1
 26593                           ; switch strategies available:
 26594                           ; Name         Instructions Cycles
 26595                           ; simple_byte            4     3 (average)
 26596                           ;	Chosen strategy is simple_byte
 26597   011E56  0A01               	xorlw	1	; case 1
 26598   011E58  B4D8               	btfsc	status,2,c
 26599   011E5A  D7E8               	goto	l12716
 26600   011E5C  D786               	goto	l12672
 26601   011E5E                     l12740:
 26602                           
 26603                           ;gemsecs.c: 999:    ceid = s6f11_opcmd();
 26604   011E5E  ECBC  F0B9         	call	_s6f11_opcmd	;wreg free
 26605   011E62  C023  F02D         	movff	btemp,btemp+10
 26606   011E66  C024  F02E         	movff	btemp+1,btemp+11
 26607   011E6A  502D               	movf	(btemp+10)^0,w,c
 26608   011E6C  6E27               	movwf	(btemp+4)^0,c
 26609   011E6E  502E               	movf	(btemp+11)^0,w,c
 26610   011E70  6E28               	movwf	(btemp+5)^0,c
 26611   011E72  6A29               	clrf	(btemp+6)^0,c
 26612   011E74  6A2A               	clrf	(btemp+7)^0,c
 26613                           
 26614                           ;stkvar	_ceid @ sp[(-6)+0]
 26615   011E76  0EFA               	movlw	-6
 26616   011E78  0060  F09F  FFE3   	movff	btemp+4,plusw1
 26617   011E7E  0EFB               	movlw	-5
 26618   011E80  0060  F0A3  FFE3   	movff	btemp+5,plusw1
 26619   011E86  0EFC               	movlw	-4
 26620   011E88  0060  F0A7  FFE3   	movff	btemp+6,plusw1
 26621   011E8E  0EFD               	movlw	-3
 26622   011E90  0060  F0AB  FFE3   	movff	btemp+7,plusw1
 26623                           
 26624                           ;gemsecs.c: 1000:    switch (V.e_types) {
 26625   011E96  D03C               	goto	l12758
 26626   011E98                     l12742:
 26627                           
 26628                           ;gemsecs.c: 1002:     if (ceid == 93 || ceid == 94) {
 26629                           ;stkvar	_ceid @ sp[(-6)+0]
 26630   011E98  0EFA               	movlw	-6
 26631   011E9A  006F FF8C  F023    	movff	plusw1,btemp
 26632   011EA0  0E5D               	movlw	93
 26633   011EA2  1823               	xorwf	btemp^0,w,c
 26634   011EA4  E10A               	bnz	u9320
 26635   011EA6  0EFB               	movlw	-5
 26636   011EA8  50E3               	movf	plusw1,w,c
 26637   011EAA  E107               	bnz	u9320
 26638   011EAC  0EFC               	movlw	-4
 26639   011EAE  50E3               	movf	plusw1,w,c
 26640   011EB0  E104               	bnz	u9320
 26641   011EB2  0EFD               	movlw	-3
 26642   011EB4  50E3               	movf	plusw1,w,c
 26643   011EB6  B4D8               	btfsc	status,2,c
 26644   011EB8  D011               	goto	u9330
 26645   011EBA                     u9320:
 26646                           
 26647                           ;stkvar	_ceid @ sp[(-6)+0]
 26648   011EBA  0EFA               	movlw	-6
 26649   011EBC  006F FF8C  F023    	movff	plusw1,btemp
 26650   011EC2  0E5E               	movlw	94
 26651   011EC4  1823               	xorwf	btemp^0,w,c
 26652   011EC6  E134               	bnz	l12760
 26653   011EC8  0EFB               	movlw	-5
 26654   011ECA  50E3               	movf	plusw1,w,c
 26655   011ECC  E131               	bnz	l12760
 26656   011ECE  0EFC               	movlw	-4
 26657   011ED0  50E3               	movf	plusw1,w,c
 26658   011ED2  E12E               	bnz	l12760
 26659   011ED4  0EFD               	movlw	-3
 26660   011ED6  50E3               	movf	plusw1,w,c
 26661   011ED8  A4D8               	btfss	status,2,c
 26662   011EDA  D02A               	goto	l12760
 26663   011EDC                     u9330:
 26664                           
 26665                           ;gemsecs.c: 1003:      V.response.host_display_ack = 1;
 26666   011EDC  EE23  F190         	lfsr	2,_V+374	;volatile
 26667   011EE0  80DF               	bsf	indf2,0,c
 26668                           
 26669                           ;gemsecs.c: 1004:      V.sid = 10;
 26670   011EE2  0E0A               	movlw	10
 26671   011EE4  006F FFA0  FD99    	movff	wreg,_V+383	;volatile
 26672   011EEA  D022               	goto	l12760
 26673   011EEC                     l12750:
 26674                           
 26675                           ;gemsecs.c: 1008:     if (ceid == 81) {
 26676                           ;stkvar	_ceid @ sp[(-6)+0]
 26677   011EEC  0EFA               	movlw	-6
 26678   011EEE  006F FF8C  F023    	movff	plusw1,btemp
 26679   011EF4  0E51               	movlw	81
 26680   011EF6  1823               	xorwf	btemp^0,w,c
 26681   011EF8  E11B               	bnz	l12760
 26682   011EFA  0EFB               	movlw	-5
 26683   011EFC  50E3               	movf	plusw1,w,c
 26684   011EFE  E118               	bnz	l12760
 26685   011F00  0EFC               	movlw	-4
 26686   011F02  50E3               	movf	plusw1,w,c
 26687   011F04  E115               	bnz	l12760
 26688   011F06  0EFD               	movlw	-3
 26689   011F08  50E3               	movf	plusw1,w,c
 26690   011F0A  B4D8               	btfsc	status,2,c
 26691   011F0C  D7E7               	goto	u9330
 26692   011F0E  D010               	goto	l12760
 26693   011F10                     l12758:
 26694   011F10  EE23  F01D         	lfsr	2,_V+3	;volatile
 26695   011F14  50DF               	movf	indf2,w,c
 26696   011F16  6E2D               	movwf	(btemp+10)^0,c
 26697   011F18  6A2E               	clrf	(btemp+11)^0,c
 26698                           
 26699                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26700                           ; Switch size 1, requested type "simple"
 26701                           ; Number of cases is 1, Range of values is 0 to 0
 26702                           ; switch strategies available:
 26703                           ; Name         Instructions Cycles
 26704                           ; simple_byte            4     3 (average)
 26705                           ;	Chosen strategy is simple_byte
 26706   011F1A  502E               	movf	(btemp+11)^0,w,c
 26707   011F1C  0A00               	xorlw	0	; case 0
 26708   011F1E  A4D8               	btfss	status,2,c
 26709   011F20  D007               	goto	l12760
 26710                           
 26711                           ; Switch size 1, requested type "simple"
 26712                           ; Number of cases is 2, Range of values is 1 to 2
 26713                           ; switch strategies available:
 26714                           ; Name         Instructions Cycles
 26715                           ; simple_byte            7     4 (average)
 26716                           ;	Chosen strategy is simple_byte
 26717   011F22  502D               	movf	(btemp+10)^0,w,c
 26718   011F24  0A01               	xorlw	1	; case 1
 26719   011F26  B4D8               	btfsc	status,2,c
 26720   011F28  D7B7               	goto	l12742
 26721   011F2A  0A03               	xorlw	3	; case 2
 26722   011F2C  B4D8               	btfsc	status,2,c
 26723   011F2E  D7DE               	goto	l12750
 26724   011F30                     l12760:
 26725                           
 26726                           ;gemsecs.c: 1016:    if (ceid == 93 || ceid == 94) {
 26727                           ;stkvar	_ceid @ sp[(-6)+0]
 26728   011F30  0EFA               	movlw	-6
 26729   011F32  006F FF8C  F023    	movff	plusw1,btemp
 26730   011F38  0E5D               	movlw	93
 26731   011F3A  1823               	xorwf	btemp^0,w,c
 26732   011F3C  E10A               	bnz	u9350
 26733   011F3E  0EFB               	movlw	-5
 26734   011F40  50E3               	movf	plusw1,w,c
 26735   011F42  E107               	bnz	u9350
 26736   011F44  0EFC               	movlw	-4
 26737   011F46  50E3               	movf	plusw1,w,c
 26738   011F48  E104               	bnz	u9350
 26739   011F4A  0EFD               	movlw	-3
 26740   011F4C  50E3               	movf	plusw1,w,c
 26741   011F4E  B4D8               	btfsc	status,2,c
 26742   011F50  D011               	goto	u9360
 26743   011F52                     u9350:
 26744                           
 26745                           ;stkvar	_ceid @ sp[(-6)+0]
 26746   011F52  0EFA               	movlw	-6
 26747   011F54  006F FF8C  F023    	movff	plusw1,btemp
 26748   011F5A  0E5E               	movlw	94
 26749   011F5C  1823               	xorwf	btemp^0,w,c
 26750   011F5E  E10D               	bnz	l12766
 26751   011F60  0EFB               	movlw	-5
 26752   011F62  50E3               	movf	plusw1,w,c
 26753   011F64  E10A               	bnz	l12766
 26754   011F66  0EFC               	movlw	-4
 26755   011F68  50E3               	movf	plusw1,w,c
 26756   011F6A  E107               	bnz	l12766
 26757   011F6C  0EFD               	movlw	-3
 26758   011F6E  50E3               	movf	plusw1,w,c
 26759   011F70  A4D8               	btfss	status,2,c
 26760   011F72  D003               	goto	l12766
 26761   011F74                     u9360:
 26762                           
 26763                           ;gemsecs.c: 1017:     V.response.host_display_ack = 1;
 26764   011F74  EE23  F190         	lfsr	2,_V+374	;volatile
 26765   011F78  80DF               	bsf	indf2,0,c
 26766   011F7A                     l12766:
 26767                           
 26768                           ;gemsecs.c: 1019:    block.header = (uint8_t*) & H13[0];
 26769   011F7A  0E5B               	movlw	low _H13
 26770   011F7C  6E1C               	movwf	secs_II_message@block^0,c
 26771   011F7E  0E01               	movlw	high _H13
 26772   011F80  6E1D               	movwf	(secs_II_message@block+1)^0,c
 26773                           
 26774                           ;gemsecs.c: 1020:    block.length = sizeof(header13);
 26775   011F82  0E10               	movlw	16
 26776   011F84  6E1E               	movwf	(secs_II_message@block+2)^0,c
 26777                           
 26778                           ;gemsecs.c: 1021:    H13[0].block.block.systemb = V.systemb;
 26779   011F86  0063  F514  F160   	movff	_V+299,_H13+5	;volatile
 26780   011F8C  0063  F518  F161   	movff	_V+300,_H13+6	;volatile
 26781   011F92  0063  F51C  F162   	movff	_V+301,_H13+7	;volatile
 26782   011F98  0063  F520  F163   	movff	_V+302,_H13+8	;volatile
 26783                           
 26784                           ;gemsecs.c: 1022:    H13[0].block.block.function = 12;
 26785   011F9E  0E0C               	movlw	12
 26786   011FA0  D027               	goto	L11
 26787   011FA2                     l12774:
 26788                           
 26789                           ;gemsecs.c: 1025:    block.header = (uint8_t*) & H13[0];
 26790   011FA2  0E5B               	movlw	low _H13
 26791   011FA4  6E1C               	movwf	secs_II_message@block^0,c
 26792   011FA6  0E01               	movlw	high _H13
 26793   011FA8  6E1D               	movwf	(secs_II_message@block+1)^0,c
 26794                           
 26795                           ;gemsecs.c: 1026:    block.length = sizeof(header13);
 26796   011FAA  0E10               	movlw	16
 26797   011FAC  6E1E               	movwf	(secs_II_message@block+2)^0,c
 26798                           
 26799                           ;gemsecs.c: 1027:    H13[0].block.block.systemb = V.systemb;
 26800   011FAE  0063  F514  F160   	movff	_V+299,_H13+5	;volatile
 26801   011FB4  0063  F518  F161   	movff	_V+300,_H13+6	;volatile
 26802   011FBA  0063  F51C  F162   	movff	_V+301,_H13+7	;volatile
 26803   011FC0  0063  F520  F163   	movff	_V+302,_H13+8	;volatile
 26804                           
 26805                           ;gemsecs.c: 1028:    H13[0].block.block.function = 14;
 26806   011FC6  0E0E               	movlw	14
 26807   011FC8  D013               	goto	L11
 26808   011FCA                     l12782:
 26809                           
 26810                           ;gemsecs.c: 1031:    block.header = (uint8_t*) & H13[0];
 26811   011FCA  0E5B               	movlw	low _H13
 26812   011FCC  6E1C               	movwf	secs_II_message@block^0,c
 26813   011FCE  0E01               	movlw	high _H13
 26814   011FD0  6E1D               	movwf	(secs_II_message@block+1)^0,c
 26815                           
 26816                           ;gemsecs.c: 1032:    block.length = sizeof(header13);
 26817   011FD2  0E10               	movlw	16
 26818   011FD4  6E1E               	movwf	(secs_II_message@block+2)^0,c
 26819                           
 26820                           ;gemsecs.c: 1033:    H13[0].block.block.systemb = V.systemb;
 26821   011FD6  0063  F514  F160   	movff	_V+299,_H13+5	;volatile
 26822   011FDC  0063  F518  F161   	movff	_V+300,_H13+6	;volatile
 26823   011FE2  0063  F51C  F162   	movff	_V+301,_H13+7	;volatile
 26824   011FE8  0063  F520  F163   	movff	_V+302,_H13+8	;volatile
 26825                           
 26826                           ;gemsecs.c: 1034:    H13[0].block.block.function = 26;
 26827   011FEE  0E1A               	movlw	26
 26828   011FF0                     L11:
 26829   011FF0  0101               	movlb	1	; () banked
 26830   011FF2  6F66               	movwf	(_H13+11)& (0+255),b
 26831                           
 26832                           ;gemsecs.c: 1035:    break;
 26833   011FF4  D632               	goto	l12626
 26834   011FF6                     l12804:
 26835                           
 26836                           ;stkvar	_function @ sp[(-6)+-7]
 26837   011FF6  0EF3               	movlw	-13
 26838   011FF8  50E3               	movf	plusw1,w,c
 26839                           
 26840                           ; Switch size 1, requested type "simple"
 26841                           ; Number of cases is 3, Range of values is 11 to 25
 26842                           ; switch strategies available:
 26843                           ; Name         Instructions Cycles
 26844                           ; simple_byte           10     6 (average)
 26845                           ;	Chosen strategy is simple_byte
 26846   011FFA  0A0B               	xorlw	11	; case 11
 26847   011FFC  B4D8               	btfsc	status,2,c
 26848   011FFE  D72F               	goto	l12740
 26849   012000  0A06               	xorlw	6	; case 13
 26850   012002  B4D8               	btfsc	status,2,c
 26851   012004  D7CE               	goto	l12774
 26852   012006  0A14               	xorlw	20	; case 25
 26853   012008  B4D8               	btfsc	status,2,c
 26854   01200A  D7DF               	goto	l12782
 26855   01200C  D6AE               	goto	l12672
 26856   01200E                     l12806:
 26857                           
 26858                           ;gemsecs.c: 1057:    V.equip_timeout++;
 26859   01200E  EE23  F161         	lfsr	2,_V+327	;volatile
 26860   012012                     L9:
 26861   012012  2ADE               	incf	postinc2,f,c
 26862   012014  0E00               	movlw	0
 26863   012016  22DD               	addwfc	postdec2,f,c
 26864                           
 26865                           ;gemsecs.c: 1058:    break;
 26866   012018  D620               	goto	l12626
 26867   01201A                     l12822:
 26868                           
 26869                           ;stkvar	_function @ sp[(-6)+-7]
 26870   01201A  0EF3               	movlw	-13
 26871   01201C  50E3               	movf	plusw1,w,c
 26872                           
 26873                           ; Switch size 1, requested type "simple"
 26874                           ; Number of cases is 7, Range of values is 1 to 13
 26875                           ; switch strategies available:
 26876                           ; Name         Instructions Cycles
 26877                           ; simple_byte           22    12 (average)
 26878                           ;	Chosen strategy is simple_byte
 26879   01201E  0A01               	xorlw	1	; case 1
 26880   012020  B4D8               	btfsc	status,2,c
 26881   012022  D61B               	goto	l12626
 26882   012024  0A02               	xorlw	2	; case 3
 26883   012026  B4D8               	btfsc	status,2,c
 26884   012028  D618               	goto	l12626
 26885   01202A  0A06               	xorlw	6	; case 5
 26886   01202C  B4D8               	btfsc	status,2,c
 26887   01202E  D615               	goto	l12626
 26888   012030  0A02               	xorlw	2	; case 7
 26889   012032  B4D8               	btfsc	status,2,c
 26890   012034  D612               	goto	l12626
 26891   012036  0A0E               	xorlw	14	; case 9
 26892   012038  B4D8               	btfsc	status,2,c
 26893   01203A  D7E9               	goto	l12806
 26894   01203C  0A02               	xorlw	2	; case 11
 26895   01203E  B4D8               	btfsc	status,2,c
 26896   012040  D60C               	goto	l12626
 26897   012042  0A06               	xorlw	6	; case 13
 26898   012044  B4D8               	btfsc	status,2,c
 26899   012046  D609               	goto	l12626
 26900   012048  D690               	goto	l12672
 26901   01204A                     l12824:
 26902                           
 26903                           ;gemsecs.c: 1074:   V.set_sequ = 1;
 26904   01204A  EE23  F167         	lfsr	2,_V+333	;volatile
 26905   01204E  86DF               	bsf	indf2,3,c
 26906                           
 26907                           ;gemsecs.c: 1075:   switch (function) {
 26908   012050  D104               	goto	l12920
 26909   012052                     l12826:
 26910                           
 26911                           ;gemsecs.c: 1077:    block.header = (uint8_t*) & H13[1];
 26912   012052  0E6B               	movlw	low (_H13+16)
 26913   012054  6E1C               	movwf	secs_II_message@block^0,c
 26914   012056  0E01               	movlw	high (_H13+16)
 26915   012058  6E1D               	movwf	(secs_II_message@block+1)^0,c
 26916                           
 26917                           ;gemsecs.c: 1078:    block.length = sizeof(header13);
 26918   01205A  0E10               	movlw	16
 26919   01205C  6E1E               	movwf	(secs_II_message@block+2)^0,c
 26920                           
 26921                           ;gemsecs.c: 1079:    H13[1].block.block.systemb = V.systemb;
 26922   01205E  0063  F514  F170   	movff	_V+299,_H13+21	;volatile
 26923   012064  0063  F518  F171   	movff	_V+300,_H13+22	;volatile
 26924   01206A  0063  F51C  F172   	movff	_V+301,_H13+23	;volatile
 26925   012070  0063  F520  F173   	movff	_V+302,_H13+24	;volatile
 26926                           
 26927                           ;gemsecs.c: 1080:    H153[0].block.block.systemb = V.ticks;
 26928   012076  EE23  F141         	lfsr	2,_V+295	;volatile
 26929   01207A  006F FF78  FE2E    	movff	postinc2,_H153+145
 26930   012080  006F FF78  FE2F    	movff	postinc2,_H153+146
 26931   012086  006F FF78  FE30    	movff	postinc2,_H153+147
 26932   01208C  006F FF74  FE31    	movff	postdec2,_H153+148
 26933                           
 26934                           ;gemsecs.c: 1081:    set_display_info(DIS_TERM);
 26935   012092  0E01               	movlw	1
 26936   012094  6EE6               	movwf	postinc1,c
 26937   012096  EC2A  F0C0         	call	_set_display_info	;wreg free
 26938                           
 26939                           ;gemsecs.c: 1083:    switch (s10f1_opcmd()) {
 26940   01209A  D0AC               	goto	l12898
 26941   01209C                     l2180:
 26942                           
 26943                           ;gemsecs.c: 1085:     block.respond = 1;
 26944   01209C  8022               	bsf	(secs_II_message@block+6)^0,0,c
 26945                           
 26946                           ;gemsecs.c: 1086:     block.reply = (uint8_t*) & H153[1];
 26947   01209E  0E39               	movlw	low (_H153+156)
 26948   0120A0  6E1F               	movwf	(secs_II_message@block+3)^0,c
 26949   0120A2  0E0E               	movlw	high (_H153+156)
 26950   0120A4  6E20               	movwf	(secs_II_message@block+4)^0,c
 26951                           
 26952                           ;gemsecs.c: 1087:     block.reply_length = sizeof(header153);
 26953   0120A6  0E9C               	movlw	156
 26954   0120A8  6E21               	movwf	(secs_II_message@block+5)^0,c
 26955                           
 26956                           ;gemsecs.c: 1088:     H153[1].data[138] = V.response.TID;
 26957   0120AA  0063  F62C  FEC5   	movff	_V+369,_H153+296	;volatile
 26958   0120B0                     l12842:
 26959                           
 26960                           ;gemsecs.c: 1089:     V.queue = 1;
 26961   0120B0  EE23  F168         	lfsr	2,_V+334	;volatile
 26962   0120B4  88DF               	bsf	indf2,4,c
 26963                           
 26964                           ;gemsecs.c: 1090:     break;
 26965   0120B6  D0C0               	goto	l12900
 26966   0120B8                     l2182:
 26967                           
 26968                           ;gemsecs.c: 1092:     block.respond = 1;
 26969   0120B8  8022               	bsf	(secs_II_message@block+6)^0,0,c
 26970                           
 26971                           ;gemsecs.c: 1093:     block.reply = (uint8_t*) & H33[0];
 26972   0120BA  0EC0               	movlw	low _H33
 26973   0120BC  6E1F               	movwf	(secs_II_message@block+3)^0,c
 26974   0120BE  6A20               	clrf	(secs_II_message@block+4)^0,c
 26975                           
 26976                           ;gemsecs.c: 1094:     block.reply_length = sizeof(header33);
 26977   0120C0  0E24               	movlw	36
 26978   0120C2  6E21               	movwf	(secs_II_message@block+5)^0,c
 26979                           
 26980                           ;gemsecs.c: 1095:     V.queue = 1;
 26981   0120C4  EE23  F168         	lfsr	2,_V+334	;volatile
 26982   0120C8  88DF               	bsf	indf2,4,c
 26983                           
 26984                           ;gemsecs.c: 1096:     set_display_info(DIS_LOAD);
 26985   0120CA  0E03               	movlw	3
 26986   0120CC  6EE6               	movwf	postinc1,c
 26987   0120CE  EC2A  F0C0         	call	_set_display_info	;wreg free
 26988                           
 26989                           ;gemsecs.c: 1097:     break;
 26990   0120D2  D0B2               	goto	l12900
 26991   0120D4                     l2183:
 26992                           
 26993                           ;gemsecs.c: 1099:     block.respond = 1;
 26994   0120D4  8022               	bsf	(secs_II_message@block+6)^0,0,c
 26995                           
 26996                           ;gemsecs.c: 1100:     block.reply = (uint8_t*) & H33[0];
 26997   0120D6  0EC0               	movlw	low _H33
 26998   0120D8  6E1F               	movwf	(secs_II_message@block+3)^0,c
 26999   0120DA  6A20               	clrf	(secs_II_message@block+4)^0,c
 27000                           
 27001                           ;gemsecs.c: 1101:     block.reply_length = sizeof(header33);
 27002   0120DC  0E24               	movlw	36
 27003   0120DE  6E21               	movwf	(secs_II_message@block+5)^0,c
 27004                           
 27005                           ;gemsecs.c: 1102:     V.queue = 1;
 27006   0120E0  EE23  F168         	lfsr	2,_V+334	;volatile
 27007   0120E4  88DF               	bsf	indf2,4,c
 27008                           
 27009                           ;gemsecs.c: 1103:     set_display_info(DIS_UNLOAD);
 27010   0120E6  0E04               	movlw	4
 27011   0120E8  6EE6               	movwf	postinc1,c
 27012   0120EA  EC2A  F0C0         	call	_set_display_info	;wreg free
 27013                           
 27014                           ;gemsecs.c: 1104:     break;
 27015   0120EE  D0A4               	goto	l12900
 27016   0120F0                     l2184:
 27017                           
 27018                           ;gemsecs.c: 1106:     block.respond = 1;
 27019   0120F0  8022               	bsf	(secs_II_message@block+6)^0,0,c
 27020                           
 27021                           ;gemsecs.c: 1107:     block.reply = (uint8_t*) & H33[0];
 27022   0120F2  0EC0               	movlw	low _H33
 27023   0120F4  6E1F               	movwf	(secs_II_message@block+3)^0,c
 27024   0120F6  6A20               	clrf	(secs_II_message@block+4)^0,c
 27025                           
 27026                           ;gemsecs.c: 1108:     block.reply_length = sizeof(header33);
 27027   0120F8  0E24               	movlw	36
 27028   0120FA  6E21               	movwf	(secs_II_message@block+5)^0,c
 27029                           
 27030                           ;gemsecs.c: 1109:     V.queue = 1;
 27031   0120FC  EE23  F168         	lfsr	2,_V+334	;volatile
 27032   012100  88DF               	bsf	indf2,4,c
 27033                           
 27034                           ;gemsecs.c: 1110:     set_display_info(DIS_PUMP);
 27035   012102  0E05               	movlw	5
 27036   012104  6EE6               	movwf	postinc1,c
 27037   012106  EC2A  F0C0         	call	_set_display_info	;wreg free
 27038                           
 27039                           ;gemsecs.c: 1111:     break;
 27040   01210A  D096               	goto	l12900
 27041   01210C                     l12868:
 27042                           
 27043                           ;gemsecs.c: 1113:     parse_sid();
 27044   01210C  ECBF  F0B8         	call	_parse_sid	;wreg free
 27045                           
 27046                           ;gemsecs.c: 1114:     sequence_messages(V.sid);
 27047   012110  EE23  F199         	lfsr	2,_V+383	;volatile
 27048   012114  50DF               	movf	indf2,w,c
 27049   012116  6EE6               	movwf	postinc1,c
 27050   012118  EC37  F09E         	call	_sequence_messages	;wreg free
 27051                           
 27052                           ;gemsecs.c: 1115:     set_display_info(DIS_SEQUENCE);
 27053   01211C  0E07               	movlw	7
 27054   01211E  6EE6               	movwf	postinc1,c
 27055   012120  EC2A  F0C0         	call	_set_display_info	;wreg free
 27056                           
 27057                           ;gemsecs.c: 1116:     V.sequences++;
 27058   012124  EE23  F163         	lfsr	2,_V+329	;volatile
 27059   012128  2ADE               	incf	postinc2,f,c
 27060   01212A  0E00               	movlw	0
 27061   01212C  22DD               	addwfc	postdec2,f,c
 27062                           
 27063                           ;gemsecs.c: 1117:     break;
 27064   01212E  D084               	goto	l12900
 27065   012130                     l2186:
 27066                           
 27067                           ;gemsecs.c: 1119:     block.respond = 1;
 27068   012130  8022               	bsf	(secs_II_message@block+6)^0,0,c
 27069                           
 27070                           ;gemsecs.c: 1120:     block.reply = (uint8_t*) & H153[0];
 27071   012132  0E9D               	movlw	low _H153
 27072   012134  6E1F               	movwf	(secs_II_message@block+3)^0,c
 27073   012136  0E0D               	movlw	high _H153
 27074   012138  6E20               	movwf	(secs_II_message@block+4)^0,c
 27075                           
 27076                           ;gemsecs.c: 1121:     block.reply_length = sizeof(header153);
 27077   01213A  0E9C               	movlw	156
 27078   01213C  6E21               	movwf	(secs_II_message@block+5)^0,c
 27079                           
 27080                           ;gemsecs.c: 1122:     H153[0].data[138] = V.response.TID;
 27081   01213E  0063  F62C  FE29   	movff	_V+369,_H153+140	;volatile
 27082                           
 27083                           ;gemsecs.c: 1123:     terminal_format(display_message);
 27084   012144  0E00               	movlw	0
 27085   012146  6EE6               	movwf	postinc1,c
 27086   012148  ECA1  F0A3         	call	_terminal_format	;wreg free
 27087                           
 27088                           ; BSR set to: 1
 27089                           ;gemsecs.c: 1124:     format_display_text(V.terminal);
 27090   01214C  0E61               	movlw	low (_V+71)
 27091   01214E  6EE6               	movwf	postinc1,c
 27092   012150  0E0C               	movlw	high (_V+71)
 27093   012152  6EE6               	movwf	postinc1,c
 27094   012154  EC21  F0AC         	call	_format_display_text	;wreg free
 27095   012158  D7AB               	goto	l12842
 27096   01215A                     l12888:
 27097                           
 27098                           ;gemsecs.c: 1129:      DATAEE_WriteByte(i, 0xff);
 27099   01215A  0EFF               	movlw	255
 27100   01215C  6EE6               	movwf	postinc1,c
 27101                           
 27102                           ;stkvar	_i @ sp[(-7)+4]
 27103   01215E  0EFD               	movlw	-3
 27104   012160  006F FF8F FFE6     	movff	plusw1,postinc1
 27105   012166  006F FF8F FFE6     	movff	plusw1,postinc1
 27106   01216C  EC58  F0B8         	call	_DATAEE_WriteByte	;wreg free
 27107                           
 27108                           ;gemsecs.c: 1130:     } while (++i <= 764);
 27109                           ;stkvar	_i @ sp[(-6)+4]
 27110   012170  0EFE               	movlw	-2
 27111   012172  50E3               	movf	plusw1,w,c
 27112   012174  0F01               	addlw	1
 27113   012176  6E23               	movwf	btemp^0,c
 27114   012178  0EFE               	movlw	-2
 27115   01217A  0060  F08F  FFE3   	movff	btemp,plusw1
 27116   012180  6A23               	clrf	btemp^0,c
 27117   012182  0EFF               	movlw	-1
 27118   012184  50E3               	movf	plusw1,w,c
 27119   012186  2023               	addwfc	btemp^0,w,c
 27120   012188  6E23               	movwf	btemp^0,c
 27121   01218A  0EFF               	movlw	-1
 27122   01218C  0060  F08F  FFE3   	movff	btemp,plusw1
 27123   012192  0EFE               	movlw	-2
 27124   012194  006F FF8C  F023    	movff	plusw1,btemp
 27125   01219A  0EFD               	movlw	253
 27126   01219C  5E23               	subwf	btemp^0,f,c
 27127   01219E  0EFF               	movlw	-1
 27128   0121A0  006F FF8C  F023    	movff	plusw1,btemp
 27129   0121A6  0E02               	movlw	2
 27130   0121A8  5A23               	subwfb	btemp^0,f,c
 27131   0121AA  A0D8               	btfss	status,0,c
 27132   0121AC  D7D6               	goto	l12888
 27133                           
 27134                           ;gemsecs.c: 1131:     V.response.log_num = 0;
 27135   0121AE  0E00               	movlw	0
 27136   0121B0  006F FFA0  FD95    	movff	wreg,_V+379	;volatile
 27137   0121B6  0E00               	movlw	0
 27138   0121B8  006F FFA0  FD96    	movff	wreg,_V+380	;volatile
 27139                           
 27140                           ;gemsecs.c: 1132:     V.response.log_seq = 0;
 27141   0121BE  0E00               	movlw	0
 27142   0121C0  006F FFA0  FD8F    	movff	wreg,_V+373	;volatile
 27143                           
 27144                           ;gemsecs.c: 1133:     set_display_info(DIS_LOG);
 27145   0121C6  0E02               	movlw	2
 27146   0121C8  6EE6               	movwf	postinc1,c
 27147   0121CA  EC2A  F0C0         	call	_set_display_info	;wreg free
 27148                           
 27149                           ;gemsecs.c: 1134:     break;
 27150   0121CE  D034               	goto	l12900
 27151   0121D0                     l12894:
 27152                           
 27153                           ;gemsecs.c: 1136:     V.debug = !V.debug;
 27154   0121D0  EE23  F168         	lfsr	2,_V+334	;volatile
 27155   0121D4  BADF               	btfsc	indf2,5,c
 27156   0121D6  D003               	goto	u9380
 27157   0121D8  6A2E               	clrf	(btemp+11)^0,c
 27158   0121DA  2A2E               	incf	(btemp+11)^0,f,c
 27159   0121DC  D001               	goto	u9398
 27160   0121DE                     u9380:
 27161   0121DE  6A2E               	clrf	(btemp+11)^0,c
 27162   0121E0                     u9398:
 27163   0121E0  EE23  F168         	lfsr	2,_V+334	;volatile
 27164   0121E4  3A2E               	swapf	(btemp+11)^0,f,c
 27165   0121E6  462E               	rlncf	(btemp+11)^0,f,c
 27166   0121E8  50DF               	movf	223,w,c
 27167   0121EA  182E               	xorwf	(btemp+11)^0,w,c
 27168   0121EC  0BDF               	andlw	-33
 27169   0121EE  182E               	xorwf	(btemp+11)^0,w,c
 27170   0121F0  6EDF               	movwf	223,c
 27171   0121F2  D022               	goto	l12900
 27172   0121F4                     l12898:
 27173   0121F4  ECD3  F0A4         	call	_s10f1_opcmd	;wreg free
 27174   0121F8  5023               	movf	btemp^0,w,c
 27175   0121FA  6E2D               	movwf	(btemp+10)^0,c
 27176   0121FC  6A2E               	clrf	(btemp+11)^0,c
 27177                           
 27178                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27179                           ; Switch size 1, requested type "simple"
 27180                           ; Number of cases is 1, Range of values is 0 to 0
 27181                           ; switch strategies available:
 27182                           ; Name         Instructions Cycles
 27183                           ; simple_byte            4     3 (average)
 27184                           ;	Chosen strategy is simple_byte
 27185   0121FE  502E               	movf	(btemp+11)^0,w,c
 27186   012200  0A00               	xorlw	0	; case 0
 27187   012202  A4D8               	btfss	status,2,c
 27188   012204  D019               	goto	l12900
 27189                           
 27190                           ; Switch size 1, requested type "simple"
 27191                           ; Number of cases is 8, Range of values is 0 to 11
 27192                           ; switch strategies available:
 27193                           ; Name         Instructions Cycles
 27194                           ; simple_byte           25    13 (average)
 27195                           ;	Chosen strategy is simple_byte
 27196   012206  502D               	movf	(btemp+10)^0,w,c
 27197   012208  0A00               	xorlw	0	; case 0
 27198   01220A  B4D8               	btfsc	status,2,c
 27199   01220C  D791               	goto	l2186
 27200   01220E  0A01               	xorlw	1	; case 1
 27201   012210  B4D8               	btfsc	status,2,c
 27202   012212  D744               	goto	l2180
 27203   012214  0A04               	xorlw	4	; case 5
 27204   012216  B4D8               	btfsc	status,2,c
 27205   012218  D7DB               	goto	l12894
 27206   01221A  0A03               	xorlw	3	; case 6
 27207   01221C  B4D8               	btfsc	status,2,c
 27208   01221E  D79D               	goto	l12888
 27209   012220  0A01               	xorlw	1	; case 7
 27210   012222  B4D8               	btfsc	status,2,c
 27211   012224  D749               	goto	l2182
 27212   012226  0A0F               	xorlw	15	; case 8
 27213   012228  B4D8               	btfsc	status,2,c
 27214   01222A  D754               	goto	l2183
 27215   01222C  0A01               	xorlw	1	; case 9
 27216   01222E  B4D8               	btfsc	status,2,c
 27217   012230  D75F               	goto	l2184
 27218   012232  0A02               	xorlw	2	; case 11
 27219   012234  B4D8               	btfsc	status,2,c
 27220   012236  D76A               	goto	l12868
 27221   012238                     l12900:
 27222                           
 27223                           ;gemsecs.c: 1140:    set_temp_display_help(display_info());
 27224   012238  EC35  F0C1         	call	_display_info	;wreg free
 27225   01223C  5023               	movf	btemp^0,w,c
 27226   01223E  6EE6               	movwf	postinc1,c
 27227   012240  ECFE  F0C0         	call	_set_temp_display_help	;wreg free
 27228                           
 27229                           ;gemsecs.c: 1141:    vterm_sequence();
 27230   012244  ECA8  F094         	call	_vterm_sequence	;wreg free
 27231                           
 27232                           ; BSR set to: 1
 27233                           ;gemsecs.c: 1142:    StartTimer(TMR_INFO, 3000);
 27234   012248  0EB8               	movlw	184
 27235   01224A  6EE6               	movwf	postinc1,c
 27236   01224C  0E0B               	movlw	11
 27237   01224E  6EE6               	movwf	postinc1,c
 27238   012250  0E07               	movlw	7
 27239   012252  6EE6               	movwf	postinc1,c
 27240   012254  EC02  F0BD         	call	_StartTimer	;wreg free
 27241                           
 27242                           ;gemsecs.c: 1143:    break;
 27243   012258  D500               	goto	l12626
 27244   01225A                     l12920:
 27245                           
 27246                           ;stkvar	_function @ sp[(-6)+-7]
 27247   01225A  0EF3               	movlw	-13
 27248   01225C  50E3               	movf	plusw1,w,c
 27249                           
 27250                           ; Switch size 1, requested type "simple"
 27251                           ; Number of cases is 1, Range of values is 1 to 1
 27252                           ; switch strategies available:
 27253                           ; Name         Instructions Cycles
 27254                           ; simple_byte            4     3 (average)
 27255                           ;	Chosen strategy is simple_byte
 27256   01225E  0A01               	xorlw	1	; case 1
 27257   012260  B4D8               	btfsc	status,2,c
 27258   012262  D6F7               	goto	l12826
 27259   012264  D582               	goto	l12672
 27260   012266                     l12936:
 27261                           
 27262                           ;stkvar	_stream @ sp[(-6)+-6]
 27263   012266  0EF4               	movlw	-12
 27264   012268  50E3               	movf	plusw1,w,c
 27265                           
 27266                           ; Switch size 1, requested type "simple"
 27267                           ; Number of cases is 6, Range of values is 1 to 10
 27268                           ; switch strategies available:
 27269                           ; Name         Instructions Cycles
 27270                           ; simple_byte           19    10 (average)
 27271                           ;	Chosen strategy is simple_byte
 27272   01226A  0A01               	xorlw	1	; case 1
 27273   01226C  B4D8               	btfsc	status,2,c
 27274   01226E  D5A0               	goto	l12686
 27275   012270  0A03               	xorlw	3	; case 2
 27276   012272  B4D8               	btfsc	status,2,c
 27277   012274  D5D2               	goto	l12714
 27278   012276  0A07               	xorlw	7	; case 5
 27279   012278  B4D8               	btfsc	status,2,c
 27280   01227A  D5EB               	goto	l12736
 27281   01227C  0A03               	xorlw	3	; case 6
 27282   01227E  B4D8               	btfsc	status,2,c
 27283   012280  D6BA               	goto	l12804
 27284   012282  0A0F               	xorlw	15	; case 9
 27285   012284  B4D8               	btfsc	status,2,c
 27286   012286  D6C9               	goto	l12822
 27287   012288  0A03               	xorlw	3	; case 10
 27288   01228A  B4D8               	btfsc	status,2,c
 27289   01228C  D6DE               	goto	l12824
 27290   01228E  D56D               	goto	l12672
 27291   012290                     l2124:
 27292                           
 27293                           ; _secs_II_message: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          7, argsize = 7, vargsize = 0
 27294   012290  0EFA               	movlw	250
 27295   012292  26E1               	addwf	fsr1l,f,c
 27296   012294  0EFF               	movlw	255
 27297   012296  22E2               	addwfc	fsr1h,f,c
 27298   012298  0012               	return		;funcret
 27299   01229A                     __end_of_secs_II_message:
 27300                           	callstack 0
 27301                           
 27302 ;; *************** function _vterm_sequence *****************
 27303 ;; Defined at:
 27304 ;;		line 132 in file "mconfig.c"
 27305 ;; Parameters:    Size  Location     Type
 27306 ;;		None
 27307 ;; Auto vars:     Size  Location     Type
 27308 ;;		None
 27309 ;; Return value:  Size  Location     Type
 27310 ;;                  1  [STACK] void 
 27311 ;; Registers used:
 27312 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 27313 ;; Tracked objects:
 27314 ;;		On entry : 0/3C
 27315 ;;		On exit  : 3F/1
 27316 ;;		Unchanged: 0/0
 27317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27322 ;;Total ram usage:        0 bytes
 27323 ;; Hardware stack levels used: 1
 27324 ;; Hardware stack levels required when called: 12
 27325 ;; This function calls:
 27326 ;;		_get_vterm_ptr
 27327 ;;		_sprintf
 27328 ;; This function is called by:
 27329 ;;		_secs_II_message
 27330 ;; This function uses a reentrant model
 27331 ;;
 27332                           
 27333                           	psect	text10
 27334   012950                     __ptext10:
 27335                           	callstack 0
 27336   012950                     _vterm_sequence:
 27337                           	callstack 16
 27338                           
 27339                           ;mconfig.c: 134:  sprintf(get_vterm_ptr(2, 2), " Mesg %d Stack %d      ", V.msg_error, V
      +                          .stack);
 27340                           
 27341                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27342                           ;incstack = 0
 27343   012950  EE23  F169         	lfsr	2,_V+335	;volatile
 27344   012954  50DF               	movf	223,w,c
 27345   012956  0B07               	andlw	7
 27346   012958  6EE6               	movwf	postinc1,c
 27347   01295A  0E00               	movlw	0
 27348   01295C  6EE6               	movwf	postinc1,c
 27349   01295E  EE23  F151         	lfsr	2,_V+311	;volatile
 27350   012962  50DF               	movf	indf2,w,c
 27351   012964  6EE6               	movwf	postinc1,c
 27352   012966  0E00               	movlw	0
 27353   012968  6EE6               	movwf	postinc1,c
 27354   01296A  0E56               	movlw	low STR_46
 27355   01296C  6EE6               	movwf	postinc1,c
 27356   01296E  0EFD               	movlw	high STR_46
 27357   012970  6EE6               	movwf	postinc1,c
 27358   012972  0E02               	movlw	2
 27359   012974  6EE6               	movwf	postinc1,c
 27360   012976  0E02               	movlw	2
 27361   012978  6EE6               	movwf	postinc1,c
 27362   01297A  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 27363   01297E  0060  F08F  FFE6   	movff	btemp,postinc1
 27364   012984  0060  F093  FFE6   	movff	btemp+1,postinc1
 27365   01298A  0E08               	movlw	8
 27366   01298C  6EE6               	movwf	postinc1,c
 27367   01298E  EC0A  F0B3         	call	_sprintf	;wreg free
 27368                           
 27369                           ;mconfig.c: 135:  switch (V.response.info) {
 27370   012992  D213               	goto	l12388
 27371   012994                     l12368:
 27372                           
 27373                           ; BSR set to: 1
 27374                           ;mconfig.c: 137:   sprintf(get_vterm_ptr(0, 2), " S%dF%d log    %d    ", V.stream, V.fun
      +                          ction, V.response.log_seq & 0x03);
 27375                           ; multi bank
 27376   012994  010D               	movlb	(_V+373) shr (0+8)	;volatile
 27377   012996  518F               	movf	(_V+373)& (0+255),w,b	;volatile
 27378   012998  0B03               	andlw	3
 27379   01299A  6EE6               	movwf	postinc1,c
 27380   01299C  0E00               	movlw	0
 27381   01299E  6EE6               	movwf	postinc1,c
 27382   0129A0  EE23  F14E         	lfsr	2,_V+308	;volatile
 27383   0129A4  50DF               	movf	indf2,w,c
 27384   0129A6  6EE6               	movwf	postinc1,c
 27385   0129A8  0E00               	movlw	0
 27386   0129AA  6EE6               	movwf	postinc1,c
 27387   0129AC  EE23  F14D         	lfsr	2,_V+307	;volatile
 27388   0129B0  50DF               	movf	indf2,w,c
 27389   0129B2  6EE6               	movwf	postinc1,c
 27390   0129B4  0E00               	movlw	0
 27391   0129B6  6EE6               	movwf	postinc1,c
 27392   0129B8  0ECC               	movlw	low STR_47
 27393   0129BA  6EE6               	movwf	postinc1,c
 27394   0129BC  0EFD               	movlw	high STR_47
 27395   0129BE  6EE6               	movwf	postinc1,c
 27396   0129C0  0E02               	movlw	2
 27397   0129C2  6EE6               	movwf	postinc1,c
 27398   0129C4  0E00               	movlw	0
 27399   0129C6  6EE6               	movwf	postinc1,c
 27400   0129C8  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 27401   0129CC  0060  F08F  FFE6   	movff	btemp,postinc1
 27402   0129D2  0060  F093  FFE6   	movff	btemp+1,postinc1
 27403   0129D8  0E0A               	movlw	10
 27404   0129DA  6EE6               	movwf	postinc1,c
 27405   0129DC  EC0A  F0B3         	call	_sprintf	;wreg free
 27406                           
 27407                           ;mconfig.c: 138:   sprintf(get_vterm_ptr(1, 2), " Stored #%d        ", V.response.log_nu
      +                          m);
 27408   0129E0  EE23  F195         	lfsr	2,_V+379	;volatile
 27409   0129E4  006F FF78  F02D    	movff	postinc2,btemp+10
 27410   0129EA  006F FF74  F02E    	movff	postdec2,btemp+11
 27411   0129F0  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 27412   0129F6  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 27413   0129FC  0E89               	movlw	low STR_48
 27414   0129FE  6EE6               	movwf	postinc1,c
 27415   012A00  0EFE               	movlw	high STR_48
 27416   012A02  6EE6               	movwf	postinc1,c
 27417   012A04  0E02               	movlw	2
 27418   012A06  6EE6               	movwf	postinc1,c
 27419   012A08  0E01               	movlw	1
 27420   012A0A  6EE6               	movwf	postinc1,c
 27421   012A0C  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 27422   012A10  0060  F08F  FFE6   	movff	btemp,postinc1
 27423   012A16  0060  F093  FFE6   	movff	btemp+1,postinc1
 27424   012A1C  0E06               	movlw	6
 27425   012A1E  6EE6               	movwf	postinc1,c
 27426   012A20  EC0A  F0B3         	call	_sprintf	;wreg free
 27427                           
 27428                           ;mconfig.c: 139:   break;
 27429   012A24  0012               	return	
 27430   012A26                     l12370:
 27431                           
 27432                           ; BSR set to: 1
 27433                           ;mconfig.c: 141:   sprintf(get_vterm_ptr(0, 2), " Ready LL        ");
 27434   012A26  0E35               	movlw	low STR_49
 27435   012A28  6EE6               	movwf	postinc1,c
 27436   012A2A  0EFF               	movlw	high STR_49
 27437   012A2C  6EE6               	movwf	postinc1,c
 27438   012A2E  0E02               	movlw	2
 27439   012A30  6EE6               	movwf	postinc1,c
 27440   012A32  0E00               	movlw	0
 27441   012A34  6EE6               	movwf	postinc1,c
 27442   012A36  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 27443   012A3A  0060  F08F  FFE6   	movff	btemp,postinc1
 27444   012A40  0060  F093  FFE6   	movff	btemp+1,postinc1
 27445   012A46  0E04               	movlw	4
 27446   012A48  6EE6               	movwf	postinc1,c
 27447   012A4A  EC0A  F0B3         	call	_sprintf	;wreg free
 27448                           
 27449                           ;mconfig.c: 142:   sprintf(get_vterm_ptr(1, 2), " S2F41 #%c         ", V.response.mcode)
      +                          ;
 27450   012A4E  EE23  F18C         	lfsr	2,_V+370	;volatile
 27451   012A52  50DF               	movf	indf2,w,c
 27452   012A54  6EE6               	movwf	postinc1,c
 27453   012A56  0E00               	movlw	0
 27454   012A58  6EE6               	movwf	postinc1,c
 27455   012A5A  0E75               	movlw	low STR_50
 27456   012A5C  6EE6               	movwf	postinc1,c
 27457   012A5E  0EFE               	movlw	high STR_50
 27458   012A60  6EE6               	movwf	postinc1,c
 27459   012A62  0E02               	movlw	2
 27460   012A64  6EE6               	movwf	postinc1,c
 27461   012A66  0E01               	movlw	1
 27462   012A68  6EE6               	movwf	postinc1,c
 27463   012A6A  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 27464   012A6E  0060  F08F  FFE6   	movff	btemp,postinc1
 27465   012A74  0060  F093  FFE6   	movff	btemp+1,postinc1
 27466   012A7A  0E06               	movlw	6
 27467   012A7C  6EE6               	movwf	postinc1,c
 27468   012A7E  EC0A  F0B3         	call	_sprintf	;wreg free
 27469                           
 27470                           ;mconfig.c: 143:   break;
 27471   012A82  0012               	return	
 27472   012A84                     l12372:
 27473                           
 27474                           ; BSR set to: 1
 27475                           ;mconfig.c: 145:   sprintf(get_vterm_ptr(0, 2), " Pump LL         ");
 27476   012A84  0E23               	movlw	low STR_51
 27477   012A86  6EE6               	movwf	postinc1,c
 27478   012A88  0EFF               	movlw	high STR_51
 27479   012A8A  6EE6               	movwf	postinc1,c
 27480   012A8C  0E02               	movlw	2
 27481   012A8E  6EE6               	movwf	postinc1,c
 27482   012A90  0E00               	movlw	0
 27483   012A92  6EE6               	movwf	postinc1,c
 27484   012A94  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 27485   012A98  0060  F08F  FFE6   	movff	btemp,postinc1
 27486   012A9E  0060  F093  FFE6   	movff	btemp+1,postinc1
 27487   012AA4  0E04               	movlw	4
 27488   012AA6  6EE6               	movwf	postinc1,c
 27489   012AA8  EC0A  F0B3         	call	_sprintf	;wreg free
 27490                           
 27491                           ;mconfig.c: 146:   sprintf(get_vterm_ptr(1, 2), " S2F41 #%c         ", V.response.mcode)
      +                          ;
 27492   012AAC  EE23  F18C         	lfsr	2,_V+370	;volatile
 27493   012AB0  50DF               	movf	indf2,w,c
 27494   012AB2  6EE6               	movwf	postinc1,c
 27495   012AB4  0E00               	movlw	0
 27496   012AB6  6EE6               	movwf	postinc1,c
 27497   012AB8  0E75               	movlw	low STR_50
 27498   012ABA  6EE6               	movwf	postinc1,c
 27499   012ABC  0EFE               	movlw	high STR_50
 27500   012ABE  6EE6               	movwf	postinc1,c
 27501   012AC0  0E02               	movlw	2
 27502   012AC2  6EE6               	movwf	postinc1,c
 27503   012AC4  0E01               	movlw	1
 27504   012AC6  6EE6               	movwf	postinc1,c
 27505   012AC8  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 27506   012ACC  0060  F08F  FFE6   	movff	btemp,postinc1
 27507   012AD2  0060  F093  FFE6   	movff	btemp+1,postinc1
 27508   012AD8  0E06               	movlw	6
 27509   012ADA  6EE6               	movwf	postinc1,c
 27510   012ADC  EC0A  F0B3         	call	_sprintf	;wreg free
 27511                           
 27512                           ;mconfig.c: 147:   break;
 27513   012AE0  0012               	return	
 27514   012AE2                     l12374:
 27515                           
 27516                           ; BSR set to: 1
 27517                           ;mconfig.c: 149:   sprintf(get_vterm_ptr(0, 2), " Open LL         ");
 27518   012AE2  0E11               	movlw	low STR_53
 27519   012AE4  6EE6               	movwf	postinc1,c
 27520   012AE6  0EFF               	movlw	high STR_53
 27521   012AE8  6EE6               	movwf	postinc1,c
 27522   012AEA  0E02               	movlw	2
 27523   012AEC  6EE6               	movwf	postinc1,c
 27524   012AEE  0E00               	movlw	0
 27525   012AF0  6EE6               	movwf	postinc1,c
 27526   012AF2  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 27527   012AF6  0060  F08F  FFE6   	movff	btemp,postinc1
 27528   012AFC  0060  F093  FFE6   	movff	btemp+1,postinc1
 27529   012B02  0E04               	movlw	4
 27530   012B04  6EE6               	movwf	postinc1,c
 27531   012B06  EC0A  F0B3         	call	_sprintf	;wreg free
 27532                           
 27533                           ;mconfig.c: 150:   sprintf(get_vterm_ptr(1, 2), " S2F41 #%c         ", V.response.mcode)
      +                          ;
 27534   012B0A  EE23  F18C         	lfsr	2,_V+370	;volatile
 27535   012B0E  50DF               	movf	indf2,w,c
 27536   012B10  6EE6               	movwf	postinc1,c
 27537   012B12  0E00               	movlw	0
 27538   012B14  6EE6               	movwf	postinc1,c
 27539   012B16  0E75               	movlw	low STR_50
 27540   012B18  6EE6               	movwf	postinc1,c
 27541   012B1A  0EFE               	movlw	high STR_50
 27542   012B1C  6EE6               	movwf	postinc1,c
 27543   012B1E  0E02               	movlw	2
 27544   012B20  6EE6               	movwf	postinc1,c
 27545   012B22  0E01               	movlw	1
 27546   012B24  6EE6               	movwf	postinc1,c
 27547   012B26  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 27548   012B2A  0060  F08F  FFE6   	movff	btemp,postinc1
 27549   012B30  0060  F093  FFE6   	movff	btemp+1,postinc1
 27550   012B36  0E06               	movlw	6
 27551   012B38  6EE6               	movwf	postinc1,c
 27552   012B3A  EC0A  F0B3         	call	_sprintf	;wreg free
 27553                           
 27554                           ;mconfig.c: 151:   break;
 27555   012B3E  0012               	return	
 27556   012B40                     l12376:
 27557                           
 27558                           ; BSR set to: 1
 27559                           ;mconfig.c: 153:   sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 27560   012B40  0EC9               	movlw	low STR_37
 27561   012B42  6EE6               	movwf	postinc1,c
 27562   012B44  0EFF               	movlw	high STR_37
 27563   012B46  6EE6               	movwf	postinc1,c
 27564   012B48  0ED8               	movlw	low STR_39
 27565   012B4A  6EE6               	movwf	postinc1,c
 27566   012B4C  0EFE               	movlw	high STR_39
 27567   012B4E  6EE6               	movwf	postinc1,c
 27568   012B50  0E01               	movlw	1
 27569   012B52  6EE6               	movwf	postinc1,c
 27570   012B54  0E00               	movlw	0
 27571   012B56  6EE6               	movwf	postinc1,c
 27572   012B58  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 27573   012B5C  0060  F08F  FFE6   	movff	btemp,postinc1
 27574   012B62  0060  F093  FFE6   	movff	btemp+1,postinc1
 27575   012B68  0E06               	movlw	6
 27576   012B6A  6EE6               	movwf	postinc1,c
 27577   012B6C  EC0A  F0B3         	call	_sprintf	;wreg free
 27578                           
 27579                           ;mconfig.c: 154:   sprintf(get_vterm_ptr(1, 1), "DISPLAY %s        ", build_time);
 27580   012B70  0EDF               	movlw	low STR_38
 27581   012B72  6EE6               	movwf	postinc1,c
 27582   012B74  0EFF               	movlw	high STR_38
 27583   012B76  6EE6               	movwf	postinc1,c
 27584   012B78  0EEB               	movlw	low STR_56
 27585   012B7A  6EE6               	movwf	postinc1,c
 27586   012B7C  0EFE               	movlw	high STR_56
 27587   012B7E  6EE6               	movwf	postinc1,c
 27588   012B80  0E01               	movlw	1
 27589   012B82  6EE6               	movwf	postinc1,c
 27590   012B84  0E01               	movlw	1
 27591   012B86  6EE6               	movwf	postinc1,c
 27592   012B88  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 27593   012B8C  0060  F08F  FFE6   	movff	btemp,postinc1
 27594   012B92  0060  F093  FFE6   	movff	btemp+1,postinc1
 27595   012B98  0E06               	movlw	6
 27596   012B9A  6EE6               	movwf	postinc1,c
 27597   012B9C  EC0A  F0B3         	call	_sprintf	;wreg free
 27598                           
 27599                           ;mconfig.c: 155:   break;
 27600   012BA0  0012               	return	
 27601   012BA2                     l12378:
 27602                           
 27603                           ; BSR set to: 1
 27604                           ;mconfig.c: 157:   sprintf(get_vterm_ptr(0, 2), " Load-lock num %d      ", V.llid);
 27605   012BA2  EE23  F198         	lfsr	2,_V+382	;volatile
 27606   012BA6  50DF               	movf	indf2,w,c
 27607   012BA8  6EE6               	movwf	postinc1,c
 27608   012BAA  0E00               	movlw	0
 27609   012BAC  6EE6               	movwf	postinc1,c
 27610   012BAE  0E6E               	movlw	low STR_57
 27611   012BB0  6EE6               	movwf	postinc1,c
 27612   012BB2  0EFD               	movlw	high STR_57
 27613   012BB4  6EE6               	movwf	postinc1,c
 27614   012BB6  0E02               	movlw	2
 27615   012BB8  6EE6               	movwf	postinc1,c
 27616   012BBA  0E00               	movlw	0
 27617   012BBC  6EE6               	movwf	postinc1,c
 27618   012BBE  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 27619   012BC2  0060  F08F  FFE6   	movff	btemp,postinc1
 27620   012BC8  0060  F093  FFE6   	movff	btemp+1,postinc1
 27621   012BCE  0E06               	movlw	6
 27622   012BD0  6EE6               	movwf	postinc1,c
 27623   012BD2  EC0A  F0B3         	call	_sprintf	;wreg free
 27624                           
 27625                           ;mconfig.c: 158:   sprintf(get_vterm_ptr(1, 2), " SEQUENCE %d        ", V.sequences);
 27626   012BD6  EE23  F163         	lfsr	2,_V+329	;volatile
 27627   012BDA  006F FF78  F02D    	movff	postinc2,btemp+10
 27628   012BE0  006F FF74  F02E    	movff	postdec2,btemp+11
 27629   012BE6  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 27630   012BEC  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 27631   012BF2  0EE2               	movlw	low STR_58
 27632   012BF4  6EE6               	movwf	postinc1,c
 27633   012BF6  0EFD               	movlw	high STR_58
 27634   012BF8  6EE6               	movwf	postinc1,c
 27635   012BFA  0E02               	movlw	2
 27636   012BFC  6EE6               	movwf	postinc1,c
 27637   012BFE  0E01               	movlw	1
 27638   012C00  6EE6               	movwf	postinc1,c
 27639   012C02  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 27640   012C06  0060  F08F  FFE6   	movff	btemp,postinc1
 27641   012C0C  0060  F093  FFE6   	movff	btemp+1,postinc1
 27642   012C12  0E06               	movlw	6
 27643   012C14  6EE6               	movwf	postinc1,c
 27644   012C16  EC0A  F0B3         	call	_sprintf	;wreg free
 27645                           
 27646                           ;mconfig.c: 159:   break;
 27647   012C1A  0012               	return	
 27648   012C1C                     l12380:
 27649                           
 27650                           ; BSR set to: 1
 27651                           ;mconfig.c: 161:   sprintf(get_vterm_ptr(0, 2), " Display num %d      ", V.response.mesg
      +                          id);
 27652   012C1C  EE23  F18A         	lfsr	2,_V+368	;volatile
 27653   012C20  50DF               	movf	indf2,w,c
 27654   012C22  6EE6               	movwf	postinc1,c
 27655   012C24  0E00               	movlw	0
 27656   012C26  6EE6               	movwf	postinc1,c
 27657   012C28  0EB6               	movlw	low STR_59
 27658   012C2A  6EE6               	movwf	postinc1,c
 27659   012C2C  0EFD               	movlw	high STR_59
 27660   012C2E  6EE6               	movwf	postinc1,c
 27661   012C30  0E02               	movlw	2
 27662   012C32  6EE6               	movwf	postinc1,c
 27663   012C34  0E00               	movlw	0
 27664   012C36  6EE6               	movwf	postinc1,c
 27665   012C38  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 27666   012C3C  0060  F08F  FFE6   	movff	btemp,postinc1
 27667   012C42  0060  F093  FFE6   	movff	btemp+1,postinc1
 27668   012C48  0E06               	movlw	6
 27669   012C4A  6EE6               	movwf	postinc1,c
 27670   012C4C  EC0A  F0B3         	call	_sprintf	;wreg free
 27671                           
 27672                           ;mconfig.c: 162:   sprintf(get_vterm_ptr(1, 2), " SEQUENCE %d        ", V.sequences);
 27673   012C50  EE23  F163         	lfsr	2,_V+329	;volatile
 27674   012C54  006F FF78  F02D    	movff	postinc2,btemp+10
 27675   012C5A  006F FF74  F02E    	movff	postdec2,btemp+11
 27676   012C60  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 27677   012C66  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 27678   012C6C  0EE2               	movlw	low STR_58
 27679   012C6E  6EE6               	movwf	postinc1,c
 27680   012C70  0EFD               	movlw	high STR_58
 27681   012C72  6EE6               	movwf	postinc1,c
 27682   012C74  0E02               	movlw	2
 27683   012C76  6EE6               	movwf	postinc1,c
 27684   012C78  0E01               	movlw	1
 27685   012C7A  6EE6               	movwf	postinc1,c
 27686   012C7C  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 27687   012C80  0060  F08F  FFE6   	movff	btemp,postinc1
 27688   012C86  0060  F093  FFE6   	movff	btemp+1,postinc1
 27689   012C8C  0E06               	movlw	6
 27690   012C8E  6EE6               	movwf	postinc1,c
 27691   012C90  EC0A  F0B3         	call	_sprintf	;wreg free
 27692                           
 27693                           ;mconfig.c: 163:   break;
 27694   012C94  0012               	return	
 27695   012C96                     l12382:
 27696                           
 27697                           ; BSR set to: 1
 27698                           ;mconfig.c: 165:   sprintf(get_vterm_ptr(0, 2), " Terminal %d             ", V.response.
      +                          TID);
 27699   012C96  EE23  F18B         	lfsr	2,_V+369	;volatile
 27700   012C9A  50DF               	movf	indf2,w,c
 27701   012C9C  6EE6               	movwf	postinc1,c
 27702   012C9E  0E00               	movlw	0
 27703   012CA0  6EE6               	movwf	postinc1,c
 27704   012CA2  0ED5               	movlw	low STR_61
 27705   012CA4  6EE6               	movwf	postinc1,c
 27706   012CA6  0EFC               	movlw	high STR_61
 27707   012CA8  6EE6               	movwf	postinc1,c
 27708   012CAA  0E02               	movlw	2
 27709   012CAC  6EE6               	movwf	postinc1,c
 27710   012CAE  0E00               	movlw	0
 27711   012CB0  6EE6               	movwf	postinc1,c
 27712   012CB2  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 27713   012CB6  0060  F08F  FFE6   	movff	btemp,postinc1
 27714   012CBC  0060  F093  FFE6   	movff	btemp+1,postinc1
 27715   012CC2  0E06               	movlw	6
 27716   012CC4  6EE6               	movwf	postinc1,c
 27717   012CC6  EC0A  F0B3         	call	_sprintf	;wreg free
 27718                           
 27719                           ;mconfig.c: 166:   sprintf(get_vterm_ptr(1, 2), " CMD %c %c Len %d       ", V.response.m
      +                          code, V.response.mparm, V.response.cmdlen);
 27720   012CCA  EE23  F18E         	lfsr	2,_V+372	;volatile
 27721   012CCE  50DF               	movf	indf2,w,c
 27722   012CD0  6EE6               	movwf	postinc1,c
 27723   012CD2  0E00               	movlw	0
 27724   012CD4  6EE6               	movwf	postinc1,c
 27725   012CD6  EE23  F18D         	lfsr	2,_V+371	;volatile
 27726   012CDA  50DF               	movf	indf2,w,c
 27727   012CDC  6EE6               	movwf	postinc1,c
 27728   012CDE  0E00               	movlw	0
 27729   012CE0  6EE6               	movwf	postinc1,c
 27730   012CE2  EE23  F18C         	lfsr	2,_V+370	;volatile
 27731   012CE6  50DF               	movf	indf2,w,c
 27732   012CE8  6EE6               	movwf	postinc1,c
 27733   012CEA  0E00               	movlw	0
 27734   012CEC  6EE6               	movwf	postinc1,c
 27735   012CEE  0E3D               	movlw	low STR_62
 27736   012CF0  6EE6               	movwf	postinc1,c
 27737   012CF2  0EFD               	movlw	high STR_62
 27738   012CF4  6EE6               	movwf	postinc1,c
 27739   012CF6  0E02               	movlw	2
 27740   012CF8  6EE6               	movwf	postinc1,c
 27741   012CFA  0E01               	movlw	1
 27742   012CFC  6EE6               	movwf	postinc1,c
 27743   012CFE  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 27744   012D02  0060  F08F  FFE6   	movff	btemp,postinc1
 27745   012D08  0060  F093  FFE6   	movff	btemp+1,postinc1
 27746   012D0E  0E0A               	movlw	10
 27747   012D10  6EE6               	movwf	postinc1,c
 27748   012D12  EC0A  F0B3         	call	_sprintf	;wreg free
 27749                           
 27750                           ;mconfig.c: 167:   break;
 27751   012D16  0012               	return	
 27752   012D18                     l12384:
 27753                           
 27754                           ; BSR set to: 1
 27755                           ;mconfig.c: 170:   sprintf(get_vterm_ptr(0, 0), "                  ");
 27756   012D18  0EC5               	movlw	low STR_63
 27757   012D1A  6EE6               	movwf	postinc1,c
 27758   012D1C  0EFE               	movlw	high STR_63
 27759   012D1E  6EE6               	movwf	postinc1,c
 27760   012D20  0E00               	movlw	0
 27761   012D22  6EE6               	movwf	postinc1,c
 27762   012D24  0E00               	movlw	0
 27763   012D26  6EE6               	movwf	postinc1,c
 27764   012D28  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 27765   012D2C  0060  F08F  FFE6   	movff	btemp,postinc1
 27766   012D32  0060  F093  FFE6   	movff	btemp+1,postinc1
 27767   012D38  0E04               	movlw	4
 27768   012D3A  6EE6               	movwf	postinc1,c
 27769   012D3C  EC0A  F0B3         	call	_sprintf	;wreg free
 27770                           
 27771                           ;mconfig.c: 171:   sprintf(get_vterm_ptr(1, 0), "                  ");
 27772   012D40  0EC5               	movlw	low STR_63
 27773   012D42  6EE6               	movwf	postinc1,c
 27774   012D44  0EFE               	movlw	high STR_63
 27775   012D46  6EE6               	movwf	postinc1,c
 27776   012D48  0E00               	movlw	0
 27777   012D4A  6EE6               	movwf	postinc1,c
 27778   012D4C  0E01               	movlw	1
 27779   012D4E  6EE6               	movwf	postinc1,c
 27780   012D50  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 27781   012D54  0060  F08F  FFE6   	movff	btemp,postinc1
 27782   012D5A  0060  F093  FFE6   	movff	btemp+1,postinc1
 27783   012D60  0E04               	movlw	4
 27784   012D62  6EE6               	movwf	postinc1,c
 27785   012D64  EC0A  F0B3         	call	_sprintf	;wreg free
 27786                           
 27787                           ;mconfig.c: 172:   sprintf(get_vterm_ptr(0, 2), "                  ");
 27788   012D68  0EC5               	movlw	low STR_63
 27789   012D6A  6EE6               	movwf	postinc1,c
 27790   012D6C  0EFE               	movlw	high STR_63
 27791   012D6E  6EE6               	movwf	postinc1,c
 27792   012D70  0E02               	movlw	2
 27793   012D72  6EE6               	movwf	postinc1,c
 27794   012D74  0E00               	movlw	0
 27795   012D76  6EE6               	movwf	postinc1,c
 27796   012D78  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 27797   012D7C  0060  F08F  FFE6   	movff	btemp,postinc1
 27798   012D82  0060  F093  FFE6   	movff	btemp+1,postinc1
 27799   012D88  0E04               	movlw	4
 27800   012D8A  6EE6               	movwf	postinc1,c
 27801   012D8C  EC0A  F0B3         	call	_sprintf	;wreg free
 27802                           
 27803                           ;mconfig.c: 173:   sprintf(get_vterm_ptr(1, 2), "                  ");
 27804   012D90  0EC5               	movlw	low STR_63
 27805   012D92  6EE6               	movwf	postinc1,c
 27806   012D94  0EFE               	movlw	high STR_63
 27807   012D96  6EE6               	movwf	postinc1,c
 27808   012D98  0E02               	movlw	2
 27809   012D9A  6EE6               	movwf	postinc1,c
 27810   012D9C  0E01               	movlw	1
 27811   012D9E  6EE6               	movwf	postinc1,c
 27812   012DA0  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 27813   012DA4  0060  F08F  FFE6   	movff	btemp,postinc1
 27814   012DAA  0060  F093  FFE6   	movff	btemp+1,postinc1
 27815   012DB0  0E04               	movlw	4
 27816   012DB2  6EE6               	movwf	postinc1,c
 27817   012DB4  EC0A  F0B3         	call	_sprintf	;wreg free
 27818                           
 27819                           ;mconfig.c: 174:   break;
 27820   012DB8  0012               	return	
 27821   012DBA                     l12388:
 27822                           
 27823                           ; BSR set to: 1
 27824   012DBA  EE23  F191         	lfsr	2,_V+375	;volatile
 27825   012DBE  50DF               	movf	indf2,w,c
 27826   012DC0  6E2D               	movwf	(btemp+10)^0,c
 27827   012DC2  6A2E               	clrf	(btemp+11)^0,c
 27828                           
 27829                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27830                           ; Switch size 1, requested type "simple"
 27831                           ; Number of cases is 1, Range of values is 0 to 0
 27832                           ; switch strategies available:
 27833                           ; Name         Instructions Cycles
 27834                           ; simple_byte            4     3 (average)
 27835                           ;	Chosen strategy is simple_byte
 27836   012DC4  502E               	movf	(btemp+11)^0,w,c
 27837   012DC6  0A00               	xorlw	0	; case 0
 27838   012DC8  A4D8               	btfss	status,2,c
 27839   012DCA  D7A6               	goto	l12384
 27840                           
 27841                           ; BSR set to: 1
 27842                           ; Switch size 1, requested type "simple"
 27843                           ; Number of cases is 9, Range of values is 1 to 10
 27844                           ; switch strategies available:
 27845                           ; Name         Instructions Cycles
 27846                           ; simple_byte           28    15 (average)
 27847                           ;	Chosen strategy is simple_byte
 27848   012DCC  502D               	movf	(btemp+10)^0,w,c
 27849   012DCE  0A01               	xorlw	1	; case 1
 27850   012DD0  B4D8               	btfsc	status,2,c
 27851   012DD2  D761               	goto	l12382
 27852   012DD4  0A03               	xorlw	3	; case 2
 27853   012DD6  B4D8               	btfsc	status,2,c
 27854   012DD8  D5DD               	goto	l12368
 27855   012DDA  0A01               	xorlw	1	; case 3
 27856   012DDC  B4D8               	btfsc	status,2,c
 27857   012DDE  D623               	goto	l12370
 27858   012DE0  0A07               	xorlw	7	; case 4
 27859   012DE2  B4D8               	btfsc	status,2,c
 27860   012DE4  D67E               	goto	l12374
 27861   012DE6  0A01               	xorlw	1	; case 5
 27862   012DE8  B4D8               	btfsc	status,2,c
 27863   012DEA  D64C               	goto	l12372
 27864   012DEC  0A03               	xorlw	3	; case 6
 27865   012DEE  B4D8               	btfsc	status,2,c
 27866   012DF0  D6A7               	goto	l12376
 27867   012DF2  0A01               	xorlw	1	; case 7
 27868   012DF4  B4D8               	btfsc	status,2,c
 27869   012DF6  D6D5               	goto	l12378
 27870   012DF8  0A0F               	xorlw	15	; case 8
 27871   012DFA  B4D8               	btfsc	status,2,c
 27872   012DFC  D70F               	goto	l12380
 27873   012DFE  0A02               	xorlw	2	; case 10
 27874   012E00  D78B               	goto	l12384
 27875   012E02                     __end_of_vterm_sequence:
 27876                           	callstack 0
 27877                           
 27878 ;; *************** function _s6f11_opcmd *****************
 27879 ;; Defined at:
 27880 ;;		line 836 in file "gemsecs.c"
 27881 ;; Parameters:    Size  Location     Type
 27882 ;;		None
 27883 ;; Auto vars:     Size  Location     Type
 27884 ;;		None
 27885 ;; Return value:  Size  Location     Type
 27886 ;;                  2  [STACK] unsigned short 
 27887 ;; Registers used:
 27888 ;;		wreg, fsr2l, fsr2h, status,2, btemp, btemp+1, btemp+10, btemp+11
 27889 ;; Tracked objects:
 27890 ;;		On entry : 0/3C
 27891 ;;		On exit  : 0/0
 27892 ;;		Unchanged: 0/0
 27893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27898 ;;Total ram usage:        0 bytes
 27899 ;; Hardware stack levels used: 1
 27900 ;; Hardware stack levels required when called: 3
 27901 ;; This function calls:
 27902 ;;		Nothing
 27903 ;; This function is called by:
 27904 ;;		_secs_II_message
 27905 ;; This function uses a reentrant model
 27906 ;;
 27907                           
 27908                           	psect	text11
 27909   017378                     __ptext11:
 27910                           	callstack 0
 27911   017378                     _s6f11_opcmd:
 27912                           	callstack 25
 27913                           
 27914                           ;gemsecs.c: 838:  V.response.ceid = V.response.ack[9];
 27915                           
 27916                           ; BSR set to: 1
 27917                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27918                           ;incstack = 0
 27919   017378  EE23  F173         	lfsr	2,_V+345	;volatile
 27920   01737C  50DF               	movf	indf2,w,c
 27921   01737E  6E2D               	movwf	(btemp+10)^0,c
 27922   017380  6A2E               	clrf	(btemp+11)^0,c
 27923   017382  0060  F0B4  FD93   	movff	btemp+10,_V+377	;volatile
 27924   017388  0060  F0B8  FD94   	movff	btemp+11,_V+378	;volatile
 27925                           
 27926                           ;gemsecs.c: 839:  V.response.ceid = H254[0].data[(sizeof(H254[0].data) - 1) - 9];
 27927   01738E  EE23  F3C1         	lfsr	2,_H254+236
 27928   017392  50DF               	movf	indf2,w,c
 27929   017394  6E2D               	movwf	(btemp+10)^0,c
 27930   017396  6A2E               	clrf	(btemp+11)^0,c
 27931   017398  0060  F0B4  FD93   	movff	btemp+10,_V+377	;volatile
 27932   01739E  0060  F0B8  FD94   	movff	btemp+11,_V+378	;volatile
 27933                           
 27934                           ;gemsecs.c: 841:  V.testing = (sizeof(H254[0].data) - 1) - 9;
 27935   0173A4  0EEA               	movlw	234
 27936   0173A6  006F FFA0  FD49    	movff	wreg,_V+303	;volatile
 27937   0173AC  0E00               	movlw	0
 27938   0173AE  006F FFA0  FD4A    	movff	wreg,_V+304	;volatile
 27939   0173B4  0E00               	movlw	0
 27940   0173B6  006F FFA0  FD4B    	movff	wreg,_V+305	;volatile
 27941   0173BC  0E00               	movlw	0
 27942   0173BE  006F FFA0  FD4C    	movff	wreg,_V+306	;volatile
 27943                           
 27944                           ;gemsecs.c: 843:  return V.response.ceid;
 27945   0173C4  EE23  F193         	lfsr	2,_V+377	;volatile
 27946   0173C8  006F FF78  F023    	movff	postinc2,btemp
 27947   0173CE  006F FF74  F024    	movff	postdec2,btemp+1
 27948                           
 27949                           ; _s6f11_opcmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 27950   0173D4  0012               	return		;funcret
 27951   0173D6                     __end_of_s6f11_opcmd:
 27952                           	callstack 0
 27953                           
 27954 ;; *************** function _s10f1_opcmd *****************
 27955 ;; Defined at:
 27956 ;;		line 718 in file "gemsecs.c"
 27957 ;; Parameters:    Size  Location     Type
 27958 ;;		None
 27959 ;; Auto vars:     Size  Location     Type
 27960 ;;		None
 27961 ;; Return value:  Size  Location     Type
 27962 ;;                  1  [STACK] enum E16945
 27963 ;; Registers used:
 27964 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 27965 ;; Tracked objects:
 27966 ;;		On entry : 0/3C
 27967 ;;		On exit  : 3E/0
 27968 ;;		Unchanged: 0/0
 27969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27974 ;;Total ram usage:        0 bytes
 27975 ;; Hardware stack levels used: 1
 27976 ;; Hardware stack levels required when called: 12
 27977 ;; This function calls:
 27978 ;;		_parse_ll
 27979 ;;		_sprintf
 27980 ;; This function is called by:
 27981 ;;		_secs_II_message
 27982 ;; This function uses a reentrant model
 27983 ;;
 27984                           
 27985                           	psect	text12
 27986   0149A6                     __ptext12:
 27987                           	callstack 0
 27988   0149A6                     _s10f1_opcmd:
 27989                           	callstack 16
 27990                           
 27991                           ;gemsecs.c: 720:  sprintf(V.info, " Terminal          ");
 27992                           
 27993                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27994                           ;incstack = 0
 27995   0149A6  0E9D               	movlw	low STR_33
 27996   0149A8  6EE6               	movwf	postinc1,c
 27997   0149AA  0EFE               	movlw	high STR_33
 27998   0149AC  6EE6               	movwf	postinc1,c
 27999   0149AE  0E01               	movlw	low (_V+231)
 28000   0149B0  6EE6               	movwf	postinc1,c
 28001   0149B2  0E0D               	movlw	high (_V+231)
 28002   0149B4  6EE6               	movwf	postinc1,c
 28003   0149B6  0E04               	movlw	4
 28004   0149B8  6EE6               	movwf	postinc1,c
 28005   0149BA  EC0A  F0B3         	call	_sprintf	;wreg free
 28006                           
 28007                           ; BSR set to: 1
 28008                           ;gemsecs.c: 721:  V.response.cmdlen = V.response.ack[6];
 28009   0149BE  0063  F5C0  FD8E   	movff	_V+342,_V+372	;volatile
 28010                           
 28011                           ; BSR set to: 1
 28012                           ;gemsecs.c: 722:  V.response.TID = V.response.ack[4];
 28013   0149C4  0063  F5B8  FD8B   	movff	_V+340,_V+369	;volatile
 28014                           
 28015                           ; BSR set to: 1
 28016                           ;gemsecs.c: 723:  V.response.mcode = V.response.ack[7];
 28017   0149CA  0063  F5C4  FD8C   	movff	_V+343,_V+370	;volatile
 28018                           
 28019                           ; BSR set to: 1
 28020                           ;gemsecs.c: 724:  V.response.mparm = V.response.ack[8];
 28021   0149D0  0063  F5C8  FD8D   	movff	_V+344,_V+371	;volatile
 28022                           
 28023                           ; BSR set to: 1
 28024                           ;gemsecs.c: 726:  if (V.response.cmdlen == 0)
 28025   0149D6  EE23  F18E         	lfsr	2,_V+372	;volatile
 28026   0149DA  50DF               	movf	indf2,w,c
 28027   0149DC  A4D8               	btfss	status,2,c
 28028   0149DE  D003               	goto	l12220
 28029                           
 28030                           ; BSR set to: 1
 28031                           ;gemsecs.c: 727:   return CODE_ERR;
 28032   0149E0  0E0C               	movlw	12
 28033   0149E2  6E23               	movwf	btemp^0,c
 28034   0149E4  0012               	return	
 28035   0149E6                     l12220:
 28036                           
 28037                           ; BSR set to: 1
 28038                           ;gemsecs.c: 729:  if (V.response.mcode == 'M' || V.response.mcode == 'm')
 28039   0149E6  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28040   0149EC  0A4D               	xorlw	77
 28041   0149EE  B4D8               	btfsc	status,2,c
 28042   0149F0  D006               	goto	u8970
 28043                           
 28044                           ; BSR set to: 1
 28045   0149F2  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28046   0149F8  0A6D               	xorlw	109
 28047   0149FA  A4D8               	btfss	status,2,c
 28048   0149FC  D003               	goto	l12228
 28049   0149FE                     u8970:
 28050                           
 28051                           ; BSR set to: 1
 28052                           ;gemsecs.c: 730:   return CODE_TS;
 28053   0149FE  0E00               	movlw	0
 28054   014A00  6E23               	movwf	btemp^0,c
 28055   014A02  0012               	return	
 28056   014A04                     l12228:
 28057                           
 28058                           ; BSR set to: 1
 28059                           ;gemsecs.c: 732:  if (V.response.mcode == 'C' || V.response.mcode == 'c') {
 28060   014A04  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28061   014A0A  0A43               	xorlw	67
 28062   014A0C  B4D8               	btfsc	status,2,c
 28063   014A0E  D006               	goto	u8990
 28064                           
 28065                           ; BSR set to: 1
 28066   014A10  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28067   014A16  0A63               	xorlw	99
 28068   014A18  A4D8               	btfss	status,2,c
 28069   014A1A  D01E               	goto	l12246
 28070   014A1C                     u8990:
 28071                           
 28072                           ; BSR set to: 1
 28073                           ;gemsecs.c: 733:   parse_ll();
 28074   014A1C  EC8C  F0B8         	call	_parse_ll	;wreg free
 28075                           
 28076                           ;gemsecs.c: 735:   switch (V.e_types) {
 28077   014A20  D008               	goto	l12240
 28078   014A22                     l12234:
 28079                           
 28080                           ; BSR set to: 0
 28081                           ;gemsecs.c: 737:    H33[0].data[18] = '1';
 28082   014A22  0E31               	movlw	49
 28083   014A24  6FD4               	movwf	(_H33+20)& (0+255),b
 28084                           
 28085                           ;gemsecs.c: 738:    H33[0].data[17] = '6';
 28086   014A26  0E36               	movlw	54
 28087   014A28  D029               	goto	L13
 28088   014A2A                     l12236:
 28089                           
 28090                           ; BSR set to: 0
 28091                           ;gemsecs.c: 741:    H33[0].data[18] = '1';
 28092   014A2A  0E31               	movlw	49
 28093   014A2C  6FD4               	movwf	(_H33+20)& (0+255),b
 28094                           
 28095                           ;gemsecs.c: 742:    H33[0].data[17] = '0';
 28096   014A2E  0E30               	movlw	48
 28097   014A30  D025               	goto	L13
 28098   014A32                     l12240:
 28099                           
 28100                           ; BSR set to: 0
 28101   014A32  EE23  F01D         	lfsr	2,_V+3	;volatile
 28102   014A36  50DF               	movf	indf2,w,c
 28103   014A38  6E2D               	movwf	(btemp+10)^0,c
 28104   014A3A  6A2E               	clrf	(btemp+11)^0,c
 28105                           
 28106                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28107                           ; Switch size 1, requested type "simple"
 28108                           ; Number of cases is 1, Range of values is 0 to 0
 28109                           ; switch strategies available:
 28110                           ; Name         Instructions Cycles
 28111                           ; simple_byte            4     3 (average)
 28112                           ;	Chosen strategy is simple_byte
 28113   014A3C  502E               	movf	(btemp+11)^0,w,c
 28114   014A3E  0A00               	xorlw	0	; case 0
 28115   014A40  A4D8               	btfss	status,2,c
 28116   014A42  D007               	goto	l12242
 28117                           
 28118                           ; BSR set to: 0
 28119                           ; Switch size 1, requested type "simple"
 28120                           ; Number of cases is 2, Range of values is 1 to 2
 28121                           ; switch strategies available:
 28122                           ; Name         Instructions Cycles
 28123                           ; simple_byte            7     4 (average)
 28124                           ;	Chosen strategy is simple_byte
 28125   014A44  502D               	movf	(btemp+10)^0,w,c
 28126   014A46  0A01               	xorlw	1	; case 1
 28127   014A48  B4D8               	btfsc	status,2,c
 28128   014A4A  D7EB               	goto	l12234
 28129   014A4C  0A03               	xorlw	3	; case 2
 28130   014A4E  B4D8               	btfsc	status,2,c
 28131   014A50  D7EC               	goto	l12236
 28132   014A52                     l12242:
 28133                           
 28134                           ; BSR set to: 0
 28135                           ;gemsecs.c: 748:   return CODE_LOAD;
 28136   014A52  0E07               	movlw	7
 28137   014A54  6E23               	movwf	btemp^0,c
 28138   014A56  0012               	return	
 28139   014A58                     l12246:
 28140                           
 28141                           ; BSR set to: 1
 28142                           ;gemsecs.c: 751:  if (V.response.mcode == 'R' || V.response.mcode == 'r') {
 28143   014A58  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28144   014A5E  0A52               	xorlw	82
 28145   014A60  B4D8               	btfsc	status,2,c
 28146   014A62  D006               	goto	u9010
 28147                           
 28148                           ; BSR set to: 1
 28149   014A64  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28150   014A6A  0A72               	xorlw	114
 28151   014A6C  A4D8               	btfss	status,2,c
 28152   014A6E  D016               	goto	l12264
 28153   014A70                     u9010:
 28154                           
 28155                           ; BSR set to: 1
 28156                           ;gemsecs.c: 752:   parse_ll();
 28157   014A70  EC8C  F0B8         	call	_parse_ll	;wreg free
 28158                           
 28159                           ;gemsecs.c: 754:   switch (V.e_types) {
 28160   014A74  D005               	goto	l12258
 28161   014A76                     l12252:
 28162                           
 28163                           ; BSR set to: 0
 28164                           ;gemsecs.c: 756:    H33[0].data[18] = '1';
 28165   014A76  0E31               	movlw	49
 28166   014A78  6FD4               	movwf	(_H33+20)& (0+255),b
 28167                           
 28168                           ;gemsecs.c: 757:    H33[0].data[17] = '7';
 28169   014A7A  0E37               	movlw	55
 28170   014A7C                     L13:
 28171   014A7C  6FD3               	movwf	(_H33+19)& (0+255),b
 28172                           
 28173                           ;gemsecs.c: 758:    break;
 28174   014A7E  D7E9               	goto	l12242
 28175   014A80                     l12258:
 28176                           
 28177                           ; BSR set to: 0
 28178   014A80  EE23  F01D         	lfsr	2,_V+3	;volatile
 28179   014A84  50DF               	movf	indf2,w,c
 28180   014A86  6E2D               	movwf	(btemp+10)^0,c
 28181   014A88  6A2E               	clrf	(btemp+11)^0,c
 28182                           
 28183                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28184                           ; Switch size 1, requested type "simple"
 28185                           ; Number of cases is 1, Range of values is 0 to 0
 28186                           ; switch strategies available:
 28187                           ; Name         Instructions Cycles
 28188                           ; simple_byte            4     3 (average)
 28189                           ;	Chosen strategy is simple_byte
 28190   014A8A  502E               	movf	(btemp+11)^0,w,c
 28191   014A8C  0A00               	xorlw	0	; case 0
 28192   014A8E  A4D8               	btfss	status,2,c
 28193   014A90  D7E0               	goto	l12242
 28194                           
 28195                           ; BSR set to: 0
 28196                           ; Switch size 1, requested type "simple"
 28197                           ; Number of cases is 2, Range of values is 1 to 2
 28198                           ; switch strategies available:
 28199                           ; Name         Instructions Cycles
 28200                           ; simple_byte            7     4 (average)
 28201                           ;	Chosen strategy is simple_byte
 28202   014A92  502D               	movf	(btemp+10)^0,w,c
 28203   014A94  0A01               	xorlw	1	; case 1
 28204   014A96  B4D8               	btfsc	status,2,c
 28205   014A98  D7EE               	goto	l12252
 28206   014A9A  D7D8               	goto	L14
 28207   014A9C                     l12264:
 28208                           
 28209                           ; BSR set to: 1
 28210                           ;gemsecs.c: 770:  if (V.response.mcode == 'P' || V.response.mcode == 'p') {
 28211   014A9C  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28212   014AA2  0A50               	xorlw	80
 28213   014AA4  B4D8               	btfsc	status,2,c
 28214   014AA6  D006               	goto	u9030
 28215                           
 28216                           ; BSR set to: 1
 28217   014AA8  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28218   014AAE  0A70               	xorlw	112
 28219   014AB0  A4D8               	btfss	status,2,c
 28220   014AB2  D01F               	goto	l12282
 28221   014AB4                     u9030:
 28222                           
 28223                           ; BSR set to: 1
 28224                           ;gemsecs.c: 771:   parse_ll();
 28225   014AB4  EC8C  F0B8         	call	_parse_ll	;wreg free
 28226                           
 28227                           ;gemsecs.c: 773:   switch (V.e_types) {
 28228   014AB8  D009               	goto	l12276
 28229   014ABA                     l12270:
 28230                           
 28231                           ; BSR set to: 0
 28232                           ;gemsecs.c: 775:    H33[0].data[18] = '1';
 28233   014ABA  0E31               	movlw	49
 28234   014ABC  6FD4               	movwf	(_H33+20)& (0+255),b
 28235                           
 28236                           ;gemsecs.c: 776:    H33[0].data[17] = '8';
 28237   014ABE  0E38               	movlw	56
 28238   014AC0  D003               	goto	L15
 28239   014AC2                     l12272:
 28240                           
 28241                           ; BSR set to: 0
 28242                           ;gemsecs.c: 779:    H33[0].data[18] = '1';
 28243   014AC2  0E31               	movlw	49
 28244   014AC4  6FD4               	movwf	(_H33+20)& (0+255),b
 28245                           
 28246                           ;gemsecs.c: 780:    H33[0].data[17] = '0';
 28247   014AC6  0E30               	movlw	48
 28248   014AC8                     L15:
 28249   014AC8  6FD3               	movwf	(_H33+19)& (0+255),b
 28250                           
 28251                           ;gemsecs.c: 781:    break;
 28252   014ACA  D010               	goto	l12278
 28253   014ACC                     l12276:
 28254                           
 28255                           ; BSR set to: 0
 28256   014ACC  EE23  F01D         	lfsr	2,_V+3	;volatile
 28257   014AD0  50DF               	movf	indf2,w,c
 28258   014AD2  6E2D               	movwf	(btemp+10)^0,c
 28259   014AD4  6A2E               	clrf	(btemp+11)^0,c
 28260                           
 28261                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28262                           ; Switch size 1, requested type "simple"
 28263                           ; Number of cases is 1, Range of values is 0 to 0
 28264                           ; switch strategies available:
 28265                           ; Name         Instructions Cycles
 28266                           ; simple_byte            4     3 (average)
 28267                           ;	Chosen strategy is simple_byte
 28268   014AD6  502E               	movf	(btemp+11)^0,w,c
 28269   014AD8  0A00               	xorlw	0	; case 0
 28270   014ADA  A4D8               	btfss	status,2,c
 28271   014ADC  D007               	goto	l12278
 28272                           
 28273                           ; BSR set to: 0
 28274                           ; Switch size 1, requested type "simple"
 28275                           ; Number of cases is 2, Range of values is 1 to 2
 28276                           ; switch strategies available:
 28277                           ; Name         Instructions Cycles
 28278                           ; simple_byte            7     4 (average)
 28279                           ;	Chosen strategy is simple_byte
 28280   014ADE  502D               	movf	(btemp+10)^0,w,c
 28281   014AE0  0A01               	xorlw	1	; case 1
 28282   014AE2  B4D8               	btfsc	status,2,c
 28283   014AE4  D7EA               	goto	l12270
 28284   014AE6  0A03               	xorlw	3	; case 2
 28285   014AE8  B4D8               	btfsc	status,2,c
 28286   014AEA  D7EB               	goto	l12272
 28287   014AEC                     l12278:
 28288                           
 28289                           ; BSR set to: 0
 28290                           ;gemsecs.c: 786:   return CODE_PUMP;
 28291   014AEC  0E09               	movlw	9
 28292   014AEE  6E23               	movwf	btemp^0,c
 28293   014AF0  0012               	return	
 28294   014AF2                     l12282:
 28295                           
 28296                           ; BSR set to: 1
 28297                           ;gemsecs.c: 789:  if (V.response.mcode == 'O' || V.response.mcode == 'o') {
 28298   014AF2  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28299   014AF8  0A4F               	xorlw	79
 28300   014AFA  B4D8               	btfsc	status,2,c
 28301   014AFC  D006               	goto	u9050
 28302                           
 28303                           ; BSR set to: 1
 28304   014AFE  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28305   014B04  0A6F               	xorlw	111
 28306   014B06  A4D8               	btfss	status,2,c
 28307   014B08  D01F               	goto	l12300
 28308   014B0A                     u9050:
 28309                           
 28310                           ; BSR set to: 1
 28311                           ;gemsecs.c: 790:   parse_ll();
 28312   014B0A  EC8C  F0B8         	call	_parse_ll	;wreg free
 28313                           
 28314                           ;gemsecs.c: 792:   switch (V.e_types) {
 28315   014B0E  D009               	goto	l12294
 28316   014B10                     l12288:
 28317                           
 28318                           ; BSR set to: 0
 28319                           ;gemsecs.c: 794:    H33[0].data[18] = '1';
 28320   014B10  0E31               	movlw	49
 28321   014B12  6FD4               	movwf	(_H33+20)& (0+255),b
 28322                           
 28323                           ;gemsecs.c: 795:    H33[0].data[17] = '2';
 28324   014B14  0E32               	movlw	50
 28325   014B16  D003               	goto	L16
 28326   014B18                     l12290:
 28327                           
 28328                           ; BSR set to: 0
 28329                           ;gemsecs.c: 798:    H33[0].data[18] = '1';
 28330   014B18  0E31               	movlw	49
 28331   014B1A  6FD4               	movwf	(_H33+20)& (0+255),b
 28332                           
 28333                           ;gemsecs.c: 799:    H33[0].data[17] = '0';
 28334   014B1C  0E30               	movlw	48
 28335   014B1E                     L16:
 28336   014B1E  6FD3               	movwf	(_H33+19)& (0+255),b
 28337                           
 28338                           ;gemsecs.c: 800:    break;
 28339   014B20  D010               	goto	l12296
 28340   014B22                     l12294:
 28341                           
 28342                           ; BSR set to: 0
 28343   014B22  EE23  F01D         	lfsr	2,_V+3	;volatile
 28344   014B26  50DF               	movf	indf2,w,c
 28345   014B28  6E2D               	movwf	(btemp+10)^0,c
 28346   014B2A  6A2E               	clrf	(btemp+11)^0,c
 28347                           
 28348                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28349                           ; Switch size 1, requested type "simple"
 28350                           ; Number of cases is 1, Range of values is 0 to 0
 28351                           ; switch strategies available:
 28352                           ; Name         Instructions Cycles
 28353                           ; simple_byte            4     3 (average)
 28354                           ;	Chosen strategy is simple_byte
 28355   014B2C  502E               	movf	(btemp+11)^0,w,c
 28356   014B2E  0A00               	xorlw	0	; case 0
 28357   014B30  A4D8               	btfss	status,2,c
 28358   014B32  D007               	goto	l12296
 28359                           
 28360                           ; BSR set to: 0
 28361                           ; Switch size 1, requested type "simple"
 28362                           ; Number of cases is 2, Range of values is 1 to 2
 28363                           ; switch strategies available:
 28364                           ; Name         Instructions Cycles
 28365                           ; simple_byte            7     4 (average)
 28366                           ;	Chosen strategy is simple_byte
 28367   014B34  502D               	movf	(btemp+10)^0,w,c
 28368   014B36  0A01               	xorlw	1	; case 1
 28369   014B38  B4D8               	btfsc	status,2,c
 28370   014B3A  D7EA               	goto	l12288
 28371   014B3C  0A03               	xorlw	3	; case 2
 28372   014B3E  B4D8               	btfsc	status,2,c
 28373   014B40  D7EB               	goto	l12290
 28374   014B42                     l12296:
 28375                           
 28376                           ; BSR set to: 0
 28377                           ;gemsecs.c: 805:   return CODE_UNLOAD;
 28378   014B42  0E08               	movlw	8
 28379   014B44  6E23               	movwf	btemp^0,c
 28380   014B46  0012               	return	
 28381   014B48                     l12300:
 28382                           
 28383                           ; BSR set to: 1
 28384                           ;gemsecs.c: 808:  if (V.response.mcode == 'L' || V.response.mcode == 'l') {
 28385   014B48  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28386   014B4E  0A4C               	xorlw	76
 28387   014B50  B4D8               	btfsc	status,2,c
 28388   014B52  D006               	goto	u9070
 28389                           
 28390                           ; BSR set to: 1
 28391   014B54  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28392   014B5A  0A6C               	xorlw	108
 28393   014B5C  A4D8               	btfss	status,2,c
 28394   014B5E  D00F               	goto	l12310
 28395   014B60                     u9070:
 28396                           
 28397                           ; BSR set to: 1
 28398                           ;gemsecs.c: 809:   sprintf(V.info, " Log file reset          ");
 28399   014B60  0E09               	movlw	low STR_34
 28400   014B62  6EE6               	movwf	postinc1,c
 28401   014B64  0EFD               	movlw	high STR_34
 28402   014B66  6EE6               	movwf	postinc1,c
 28403   014B68  0E01               	movlw	low (_V+231)
 28404   014B6A  6EE6               	movwf	postinc1,c
 28405   014B6C  0E0D               	movlw	high (_V+231)
 28406   014B6E  6EE6               	movwf	postinc1,c
 28407   014B70  0E04               	movlw	4
 28408   014B72  6EE6               	movwf	postinc1,c
 28409   014B74  EC0A  F0B3         	call	_sprintf	;wreg free
 28410                           
 28411                           ; BSR set to: 1
 28412                           ;gemsecs.c: 810:   return CODE_LOG;
 28413   014B78  0E06               	movlw	6
 28414   014B7A  6E23               	movwf	btemp^0,c
 28415   014B7C  0012               	return	
 28416   014B7E                     l12310:
 28417                           
 28418                           ; BSR set to: 1
 28419                           ;gemsecs.c: 813:  if (V.response.mcode == 'S' || V.response.mcode == 's') {
 28420   014B7E  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28421   014B84  0A53               	xorlw	83
 28422   014B86  B4D8               	btfsc	status,2,c
 28423   014B88  D006               	goto	u9090
 28424                           
 28425                           ; BSR set to: 1
 28426   014B8A  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28427   014B90  0A73               	xorlw	115
 28428   014B92  A4D8               	btfss	status,2,c
 28429   014B94  D010               	goto	l12322
 28430   014B96                     u9090:
 28431                           
 28432                           ; BSR set to: 1
 28433   014B96  EE23  F01D         	lfsr	2,_V+3	;volatile
 28434   014B9A  50DF               	movf	indf2,w,c
 28435   014B9C  6E2D               	movwf	(btemp+10)^0,c
 28436   014B9E  6A2E               	clrf	(btemp+11)^0,c
 28437                           
 28438                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28439                           ; Switch size 1, requested type "simple"
 28440                           ; Number of cases is 1, Range of values is 0 to 0
 28441                           ; switch strategies available:
 28442                           ; Name         Instructions Cycles
 28443                           ; simple_byte            4     3 (average)
 28444                           ;	Chosen strategy is simple_byte
 28445   014BA0  502E               	movf	(btemp+11)^0,w,c
 28446   014BA2  0A00               	xorlw	0	; case 0
 28447   014BA4  A4D8               	btfss	status,2,c
 28448   014BA6  D004               	goto	l12318
 28449                           
 28450                           ; BSR set to: 1
 28451                           ; Switch size 1, requested type "simple"
 28452                           ; Number of cases is 2, Range of values is 1 to 2
 28453                           ; switch strategies available:
 28454                           ; Name         Instructions Cycles
 28455                           ; simple_byte            7     4 (average)
 28456                           ;	Chosen strategy is simple_byte
 28457   014BA8  502D               	movf	(btemp+10)^0,w,c
 28458   014BAA  0A01               	xorlw	1	; case 1
 28459   014BAC  A4D8               	btfss	status,2,c
 28460   014BAE  0A03               	xorlw	3	; case 2
 28461   014BB0                     l12318:
 28462                           
 28463                           ; BSR set to: 1
 28464                           ;gemsecs.c: 822:   return CODE_SEQUENCE;
 28465   014BB0  0E0B               	movlw	11
 28466   014BB2  6E23               	movwf	btemp^0,c
 28467   014BB4  0012               	return	
 28468   014BB6                     l12322:
 28469                           
 28470                           ; BSR set to: 1
 28471                           ;gemsecs.c: 825:  if (V.response.mcode == 'D' || V.response.mcode == 'd') {
 28472   014BB6  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28473   014BBC  0A44               	xorlw	68
 28474   014BBE  B4D8               	btfsc	status,2,c
 28475   014BC0  D006               	goto	u9110
 28476                           
 28477                           ; BSR set to: 1
 28478   014BC2  0063  F633  FFE8   	movff	_V+370,wreg	;volatile
 28479   014BC8  0A64               	xorlw	100
 28480   014BCA  A4D8               	btfss	status,2,c
 28481   014BCC  D718               	goto	u8970
 28482   014BCE                     u9110:
 28483                           
 28484                           ; BSR set to: 1
 28485                           ;gemsecs.c: 826:   sprintf(V.info, " Debug Toggle            ");
 28486   014BCE  0EEF               	movlw	low STR_35
 28487   014BD0  6EE6               	movwf	postinc1,c
 28488   014BD2  0EFC               	movlw	high STR_35
 28489   014BD4  6EE6               	movwf	postinc1,c
 28490   014BD6  0E01               	movlw	low (_V+231)
 28491   014BD8  6EE6               	movwf	postinc1,c
 28492   014BDA  0E0D               	movlw	high (_V+231)
 28493   014BDC  6EE6               	movwf	postinc1,c
 28494   014BDE  0E04               	movlw	4
 28495   014BE0  6EE6               	movwf	postinc1,c
 28496   014BE2  EC0A  F0B3         	call	_sprintf	;wreg free
 28497                           
 28498                           ; BSR set to: 1
 28499                           ;gemsecs.c: 827:   return CODE_DEBUG;
 28500   014BE6  0E05               	movlw	5
 28501   014BE8  6E23               	movwf	btemp^0,c
 28502                           
 28503                           ; _s10f1_opcmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 28504   014BEA  0012               	return		;funcret
 28505   014BEC                     __end_of_s10f1_opcmd:
 28506                           	callstack 0
 28507                           
 28508 ;; *************** function _parse_ll *****************
 28509 ;; Defined at:
 28510 ;;		line 663 in file "gemsecs.c"
 28511 ;; Parameters:    Size  Location     Type
 28512 ;;		None
 28513 ;; Auto vars:     Size  Location     Type
 28514 ;;		None
 28515 ;; Return value:  Size  Location     Type
 28516 ;;                  1  [STACK] void 
 28517 ;; Registers used:
 28518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, btemp
 28519 ;; Tracked objects:
 28520 ;;		On entry : 3F/1
 28521 ;;		On exit  : 3F/0
 28522 ;;		Unchanged: 0/0
 28523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28528 ;;Total ram usage:        0 bytes
 28529 ;; Hardware stack levels used: 1
 28530 ;; Hardware stack levels required when called: 3
 28531 ;; This function calls:
 28532 ;;		Nothing
 28533 ;; This function is called by:
 28534 ;;		_s10f1_opcmd
 28535 ;; This function uses a reentrant model
 28536 ;;
 28537                           
 28538                           	psect	text13
 28539   017118                     __ptext13:
 28540                           	callstack 0
 28541   017118                     _parse_ll:
 28542                           	callstack 24
 28543                           
 28544                           ;gemsecs.c: 665:  if (V.response.cmdlen > 1) {
 28545                           
 28546                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28547                           ;incstack = 0
 28548   017118  EE23  F18E         	lfsr	2,_V+372	;volatile
 28549   01711C  0E01               	movlw	1
 28550   01711E  64DF               	cpfsgt	indf2,c
 28551   017120  D005               	goto	l8328
 28552   017122  D008               	goto	l8332
 28553   017124                     l2022:
 28554                           
 28555                           ;gemsecs.c: 676:    H33[0].data[0] = V.response.mparm & 0x03;
 28556                           ; multi bank
 28557   017124  010D               	movlb	(_V+371) shr (0+8)	;volatile
 28558   017126  518D               	movf	(_V+371)& (0+255),w,b	;volatile
 28559   017128  0B03               	andlw	3
 28560   01712A  D001               	goto	L17
 28561   01712C                     l8328:
 28562                           
 28563                           ;gemsecs.c: 679:    H33[0].data[0] = 0x01;
 28564   01712C  0E01               	movlw	1
 28565   01712E                     L17:
 28566   01712E  0100               	movlb	0	; () banked
 28567   017130  6FC2               	movwf	(_H33+2)& (0+255),b
 28568                           
 28569                           ;gemsecs.c: 680:    break;
 28570   017132  D01F               	goto	l8336
 28571   017134                     l8332:
 28572   017134  EE23  F18D         	lfsr	2,_V+371	;volatile
 28573   017138  50DF               	movf	indf2,w,c
 28574                           
 28575                           ; Switch size 1, requested type "simple"
 28576                           ; Number of cases is 9, Range of values is 49 to 99
 28577                           ; switch strategies available:
 28578                           ; Name         Instructions Cycles
 28579                           ; simple_byte           28    15 (average)
 28580                           ;	Chosen strategy is simple_byte
 28581   01713A  0A31               	xorlw	49	; case 49
 28582   01713C  B4D8               	btfsc	status,2,c
 28583   01713E  D7F2               	goto	l2022
 28584   017140  0A03               	xorlw	3	; case 50
 28585   017142  B4D8               	btfsc	status,2,c
 28586   017144  D7EF               	goto	l2022
 28587   017146  0A01               	xorlw	1	; case 51
 28588   017148  B4D8               	btfsc	status,2,c
 28589   01714A  D7EC               	goto	l2022
 28590   01714C  0A72               	xorlw	114	; case 65
 28591   01714E  B4D8               	btfsc	status,2,c
 28592   017150  D7E9               	goto	l2022
 28593   017152  0A03               	xorlw	3	; case 66
 28594   017154  B4D8               	btfsc	status,2,c
 28595   017156  D7E6               	goto	l2022
 28596   017158  0A01               	xorlw	1	; case 67
 28597   01715A  B4D8               	btfsc	status,2,c
 28598   01715C  D7E3               	goto	l2022
 28599   01715E  0A22               	xorlw	34	; case 97
 28600   017160  B4D8               	btfsc	status,2,c
 28601   017162  D7E0               	goto	l2022
 28602   017164  0A03               	xorlw	3	; case 98
 28603   017166  B4D8               	btfsc	status,2,c
 28604   017168  D7DD               	goto	l2022
 28605   01716A  0A01               	xorlw	1	; case 99
 28606   01716C  B4D8               	btfsc	status,2,c
 28607   01716E  D7DA               	goto	l2022
 28608   017170  D7DD               	goto	l8328
 28609   017172                     l8336:
 28610                           
 28611                           ; BSR set to: 0
 28612                           ;gemsecs.c: 685:  V.llid = H33[0].data[0];
 28613   017172  EE23  F198         	lfsr	2,_V+382	;volatile
 28614   017176  0060  F30B  FFDF   	movff	_H33+2,indf2
 28615                           
 28616                           ; BSR set to: 0
 28617                           ; _parse_ll: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
 28618   01717C  0012               	return		;funcret
 28619   01717E                     __end_of_parse_ll:
 28620                           	callstack 0
 28621                           
 28622 ;; *************** function _parse_sid *****************
 28623 ;; Defined at:
 28624 ;;		line 691 in file "gemsecs.c"
 28625 ;; Parameters:    Size  Location     Type
 28626 ;;		None
 28627 ;; Auto vars:     Size  Location     Type
 28628 ;;		None
 28629 ;; Return value:  Size  Location     Type
 28630 ;;                  1  [STACK] void 
 28631 ;; Registers used:
 28632 ;;		wreg, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
 28633 ;; Tracked objects:
 28634 ;;		On entry : 0/0
 28635 ;;		On exit  : 0/0
 28636 ;;		Unchanged: 0/0
 28637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28642 ;;Total ram usage:        0 bytes
 28643 ;; Hardware stack levels used: 1
 28644 ;; Hardware stack levels required when called: 3
 28645 ;; This function calls:
 28646 ;;		Nothing
 28647 ;; This function is called by:
 28648 ;;		_secs_II_message
 28649 ;; This function uses a reentrant model
 28650 ;;
 28651                           
 28652                           	psect	text14
 28653   01717E                     __ptext14:
 28654                           	callstack 0
 28655   01717E                     _parse_sid:
 28656                           	callstack 25
 28657                           
 28658                           ;gemsecs.c: 693:  if (V.response.cmdlen > 1) {
 28659                           
 28660                           ; BSR set to: 0
 28661                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28662                           ;incstack = 0
 28663   01717E  EE23  F18E         	lfsr	2,_V+372	;volatile
 28664   017182  0E01               	movlw	1
 28665   017184  64DF               	cpfsgt	indf2,c
 28666   017186  D00A               	goto	l2046
 28667   017188  D00E               	goto	l8600
 28668   01718A                     l2039:
 28669                           
 28670                           ;gemsecs.c: 704:    V.sid = V.response.mparm & 0x03;
 28671   01718A  0063  F634  F02E   	movff	_V+371,btemp+11	;volatile
 28672   017190  0E03               	movlw	3
 28673   017192  162E               	andwf	(btemp+11)^0,f,c
 28674   017194  0060  F0B8  FD99   	movff	btemp+11,_V+383	;volatile
 28675                           
 28676                           ;gemsecs.c: 705:    break;
 28677   01719A  0012               	return	
 28678   01719C                     l2046:
 28679                           
 28680                           ;gemsecs.c: 707:    V.sid = 0x01;
 28681   01719C  0E01               	movlw	1
 28682   01719E  006F FFA0  FD99    	movff	wreg,_V+383	;volatile
 28683                           
 28684                           ;gemsecs.c: 708:    break;
 28685   0171A4  0012               	return	
 28686   0171A6                     l8600:
 28687   0171A6  EE23  F18D         	lfsr	2,_V+371	;volatile
 28688   0171AA  50DF               	movf	indf2,w,c
 28689                           
 28690                           ; Switch size 1, requested type "simple"
 28691                           ; Number of cases is 9, Range of values is 49 to 99
 28692                           ; switch strategies available:
 28693                           ; Name         Instructions Cycles
 28694                           ; simple_byte           28    15 (average)
 28695                           ;	Chosen strategy is simple_byte
 28696   0171AC  0A31               	xorlw	49	; case 49
 28697   0171AE  B4D8               	btfsc	status,2,c
 28698   0171B0  D7EC               	goto	l2039
 28699   0171B2  0A03               	xorlw	3	; case 50
 28700   0171B4  B4D8               	btfsc	status,2,c
 28701   0171B6  D7E9               	goto	l2039
 28702   0171B8  0A01               	xorlw	1	; case 51
 28703   0171BA  B4D8               	btfsc	status,2,c
 28704   0171BC  D7E6               	goto	l2039
 28705   0171BE  0A72               	xorlw	114	; case 65
 28706   0171C0  B4D8               	btfsc	status,2,c
 28707   0171C2  D7E3               	goto	l2039
 28708   0171C4  0A03               	xorlw	3	; case 66
 28709   0171C6  B4D8               	btfsc	status,2,c
 28710   0171C8  D7E0               	goto	l2039
 28711   0171CA  0A01               	xorlw	1	; case 67
 28712   0171CC  B4D8               	btfsc	status,2,c
 28713   0171CE  D7DD               	goto	l2039
 28714   0171D0  0A22               	xorlw	34	; case 97
 28715   0171D2  B4D8               	btfsc	status,2,c
 28716   0171D4  D7DA               	goto	l2039
 28717   0171D6  0A03               	xorlw	3	; case 98
 28718   0171D8  B4D8               	btfsc	status,2,c
 28719   0171DA  D7D7               	goto	l2039
 28720   0171DC  0A01               	xorlw	1	; case 99
 28721   0171DE  B4D8               	btfsc	status,2,c
 28722   0171E0  D7D4               	goto	l2039
 28723   0171E2  D7DC               	goto	l2046
 28724   0171E4                     __end_of_parse_sid:
 28725                           	callstack 0
 28726                           
 28727 ;; *************** function _gem_messages *****************
 28728 ;; Defined at:
 28729 ;;		line 849 in file "gemsecs.c"
 28730 ;; Parameters:    Size  Location     Type
 28731 ;;  block           1  [STACK] PTR struct response_type
 28732 ;;		 -> secs_II_message@block(7), 
 28733 ;;  sid             1  [STACK] const unsigned char 
 28734 ;; Auto vars:     Size  Location     Type
 28735 ;;		None
 28736 ;; Return value:  Size  Location     Type
 28737 ;;                  1  [STACK] _Bool 
 28738 ;; Registers used:
 28739 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, pro
      +dh
 28740 ;; Tracked objects:
 28741 ;;		On entry : 0/3C
 28742 ;;		On exit  : 0/0
 28743 ;;		Unchanged: 0/0
 28744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28749 ;;Total ram usage:        0 bytes
 28750 ;; Hardware stack levels used: 1
 28751 ;; Hardware stack levels required when called: 4
 28752 ;; This function calls:
 28753 ;;		_StartTimer
 28754 ;; This function is called by:
 28755 ;;		_secs_II_message
 28756 ;; This function uses a reentrant model
 28757 ;;
 28758                           
 28759                           	psect	text15
 28760   015556                     __ptext15:
 28761                           	callstack 0
 28762   015556                     _gem_messages:
 28763                           	callstack 24
 28764                           
 28765                           ;gemsecs.c: 849: _Bool gem_messages(response_type *block, const uint8_t sid);gemsecs.c: 
      +                          850: {;gemsecs.c: 851:  if (!V.stack)
 28766                           
 28767                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28768                           ;incstack = 0
 28769   015556  EE23  F169         	lfsr	2,_V+335	;volatile
 28770   01555A  50DF               	movf	223,w,c
 28771   01555C  0B07               	andlw	7
 28772   01555E  0900               	iorlw	0
 28773   015560  B4D8               	btfsc	status,2,c
 28774   015562  D0B9               	goto	l2108
 28775   015564  D0A4               	goto	l8800
 28776   015566                     l8776:
 28777                           
 28778                           ;gemsecs.c: 856:   StartTimer(TMR_HBIO, S[V.stack - 1].delay);
 28779   015566  EE23  F169         	lfsr	2,_V+335	;volatile
 28780   01556A  50DF               	movf	223,w,c
 28781   01556C  0B07               	andlw	7
 28782   01556E  0D2E               	mullw	46
 28783   015570  0EFF               	movlw	low (_S+65533)
 28784   015572  24F3               	addwf	243,w,c
 28785   015574  6ED9               	movwf	fsr2l,c
 28786   015576  0E08               	movlw	high (_S+65533)
 28787   015578  20F4               	addwfc	prodh,w,c
 28788   01557A  6EDA               	movwf	fsr2h,c
 28789   01557C  006F FF78  F02D    	movff	postinc2,btemp+10
 28790   015582  006F FF74  F02E    	movff	postdec2,btemp+11
 28791   015588  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 28792   01558E  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 28793   015594  0E06               	movlw	6
 28794   015596  6EE6               	movwf	postinc1,c
 28795   015598  EC02  F0BD         	call	_StartTimer	;wreg free
 28796                           
 28797                           ;gemsecs.c: 857:   *block = S[V.stack - 1].block;
 28798   01559C  EE23  F169         	lfsr	2,_V+335	;volatile
 28799   0155A0  50DF               	movf	223,w,c
 28800   0155A2  0B07               	andlw	7
 28801   0155A4  0D2E               	mullw	46
 28802   0155A6  0EF8               	movlw	low (_S+65526)
 28803   0155A8  24F3               	addwf	243,w,c
 28804   0155AA  6ED9               	movwf	fsr2l,c
 28805   0155AC  0E08               	movlw	high (_S+65526)
 28806   0155AE  20F4               	addwfc	prodh,w,c
 28807   0155B0  6EDA               	movwf	fsr2h,c
 28808                           
 28809                           ;stkvar	_block @ sp[(0)+-1]
 28810   0155B2  0EFF               	movlw	-1
 28811   0155B4  50E3               	movf	plusw1,w,c
 28812   0155B6  6EE9               	movwf	fsr0l,c
 28813   0155B8  6AEA               	clrf	fsr0h,c
 28814   0155BA  0E06               	movlw	6
 28815   0155BC                     u5831:
 28816   0155BC  006F FF6F FFEB     	movff	plusw2,plusw0
 28817   0155C2  06E8               	decf	wreg,f,c
 28818   0155C4  E2FB               	bc	u5831
 28819                           
 28820                           ;gemsecs.c: 858:   S[V.stack - 1].message.block.block.systemb = V.ticks;
 28821   0155C6  EE23  F141         	lfsr	2,_V+295	;volatile
 28822   0155CA  EE03  F169         	lfsr	0,_V+335	;volatile
 28823   0155CE  50EF               	movf	239,w,c
 28824   0155D0  0B07               	andlw	7
 28825   0155D2  0D2E               	mullw	46
 28826   0155D4  0EED               	movlw	low (_S+65515)
 28827   0155D6  24F3               	addwf	243,w,c
 28828   0155D8  6EE9               	movwf	fsr0l,c
 28829   0155DA  0E08               	movlw	high (_S+65515)
 28830   0155DC  20F4               	addwfc	prodh,w,c
 28831   0155DE  6EEA               	movwf	fsr0h,c
 28832   0155E0  006F FF7B FFEE     	movff	postinc2,postinc0
 28833   0155E6  006F FF7B FFEE     	movff	postinc2,postinc0
 28834   0155EC  006F FF7B FFEE     	movff	postinc2,postinc0
 28835   0155F2  006F FF7B FFEE     	movff	postinc2,postinc0
 28836                           
 28837                           ;gemsecs.c: 859:   V.llid = S[V.stack - 1].message.data[0];
 28838   0155F8  EE23  F169         	lfsr	2,_V+335	;volatile
 28839   0155FC  50DF               	movf	223,w,c
 28840   0155FE  0B07               	andlw	7
 28841   015600  0D2E               	mullw	46
 28842   015602  0ED6               	movlw	low (_S+65492)
 28843   015604  24F3               	addwf	243,w,c
 28844   015606  6ED9               	movwf	fsr2l,c
 28845   015608  0E08               	movlw	high (_S+65492)
 28846   01560A  20F4               	addwfc	prodh,w,c
 28847   01560C  6EDA               	movwf	fsr2h,c
 28848   01560E  50DF               	movf	indf2,w,c
 28849   015610  6E2E               	movwf	(btemp+11)^0,c
 28850   015612  0060  F0B8  FD98   	movff	btemp+11,_V+382	;volatile
 28851                           
 28852                           ;gemsecs.c: 860:   break;
 28853   015618  D053               	goto	l8802
 28854   01561A                     l8784:
 28855                           
 28856                           ;gemsecs.c: 862:   StartTimer(TMR_HBIO, D[V.stack - 1].delay);
 28857   01561A  EE23  F169         	lfsr	2,_V+335	;volatile
 28858   01561E  50DF               	movf	223,w,c
 28859   015620  0B07               	andlw	7
 28860   015622  0DA6               	mullw	166
 28861   015624  0ECB               	movlw	low (_D+65533)
 28862   015626  24F3               	addwf	243,w,c
 28863   015628  6ED9               	movwf	fsr2l,c
 28864   01562A  0E0A               	movlw	high (_D+65533)
 28865   01562C  20F4               	addwfc	prodh,w,c
 28866   01562E  6EDA               	movwf	fsr2h,c
 28867   015630  006F FF78  F02D    	movff	postinc2,btemp+10
 28868   015636  006F FF74  F02E    	movff	postdec2,btemp+11
 28869   01563C  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 28870   015642  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 28871   015648  0E06               	movlw	6
 28872   01564A  6EE6               	movwf	postinc1,c
 28873   01564C  EC02  F0BD         	call	_StartTimer	;wreg free
 28874                           
 28875                           ;gemsecs.c: 863:   *block = D[V.stack - 1].block;
 28876   015650  EE23  F169         	lfsr	2,_V+335	;volatile
 28877   015654  50DF               	movf	223,w,c
 28878   015656  0B07               	andlw	7
 28879   015658  0DA6               	mullw	166
 28880   01565A  0EC4               	movlw	low (_D+65526)
 28881   01565C  24F3               	addwf	243,w,c
 28882   01565E  6ED9               	movwf	fsr2l,c
 28883   015660  0E0A               	movlw	high (_D+65526)
 28884   015662  20F4               	addwfc	prodh,w,c
 28885   015664  6EDA               	movwf	fsr2h,c
 28886                           
 28887                           ;stkvar	_block @ sp[(0)+-1]
 28888   015666  0EFF               	movlw	-1
 28889   015668  50E3               	movf	plusw1,w,c
 28890   01566A  6EE9               	movwf	fsr0l,c
 28891   01566C  6AEA               	clrf	fsr0h,c
 28892   01566E  0E06               	movlw	6
 28893   015670                     u5841:
 28894   015670  006F FF6F FFEB     	movff	plusw2,plusw0
 28895   015676  06E8               	decf	wreg,f,c
 28896   015678  E2FB               	bc	u5841
 28897                           
 28898                           ;gemsecs.c: 864:   D[V.stack - 1].message.block.block.systemb = V.ticks;
 28899   01567A  EE23  F141         	lfsr	2,_V+295	;volatile
 28900   01567E  EE03  F169         	lfsr	0,_V+335	;volatile
 28901   015682  50EF               	movf	239,w,c
 28902   015684  0B07               	andlw	7
 28903   015686  0DA6               	mullw	166
 28904   015688  0EB9               	movlw	low (_D+65515)
 28905   01568A  24F3               	addwf	243,w,c
 28906   01568C  6EE9               	movwf	fsr0l,c
 28907   01568E  0E0A               	movlw	high (_D+65515)
 28908   015690  20F4               	addwfc	prodh,w,c
 28909   015692  6EEA               	movwf	fsr0h,c
 28910   015694  006F FF7B FFEE     	movff	postinc2,postinc0
 28911   01569A  006F FF7B FFEE     	movff	postinc2,postinc0
 28912   0156A0  006F FF7B FFEE     	movff	postinc2,postinc0
 28913   0156A6  006F FF7B FFEE     	movff	postinc2,postinc0
 28914                           
 28915                           ;gemsecs.c: 865:   break;
 28916   0156AC  D009               	goto	l8802
 28917   0156AE                     l8800:
 28918                           
 28919                           ;stkvar	_sid @ sp[(0)+-2]
 28920   0156AE  0EFE               	movlw	-2
 28921   0156B0  50E3               	movf	plusw1,w,c
 28922                           
 28923                           ; Switch size 1, requested type "simple"
 28924                           ; Number of cases is 2, Range of values is 1 to 10
 28925                           ; switch strategies available:
 28926                           ; Name         Instructions Cycles
 28927                           ; simple_byte            7     4 (average)
 28928                           ;	Chosen strategy is simple_byte
 28929   0156B2  0A01               	xorlw	1	; case 1
 28930   0156B4  B4D8               	btfsc	status,2,c
 28931   0156B6  D757               	goto	l8776
 28932   0156B8  0A0B               	xorlw	11	; case 10
 28933   0156BA  B4D8               	btfsc	status,2,c
 28934   0156BC  D7AE               	goto	l8784
 28935   0156BE  D753               	goto	l8776
 28936   0156C0                     l8802:
 28937                           
 28938                           ;gemsecs.c: 874:  V.stack--;
 28939   0156C0  EE23  F169         	lfsr	2,_V+335	;volatile
 28940   0156C4  50DF               	movf	223,w,c
 28941   0156C6  0B07               	andlw	7
 28942   0156C8  6E2E               	movwf	(btemp+11)^0,c
 28943   0156CA  062E               	decf	(btemp+11)^0,f,c
 28944   0156CC  50DF               	movf	223,w,c
 28945   0156CE  182E               	xorwf	(btemp+11)^0,w,c
 28946   0156D0  0BF8               	andlw	-8
 28947   0156D2  182E               	xorwf	(btemp+11)^0,w,c
 28948   0156D4  6EDF               	movwf	223,c
 28949   0156D6                     l2108:
 28950                           
 28951                           ; _gem_messages: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
 28952   0156D6  52E5               	movf	postdec1,f,c
 28953   0156D8  52E5               	movf	postdec1,f,c
 28954   0156DA  0012               	return		;funcret
 28955   0156DC                     __end_of_gem_messages:
 28956                           	callstack 0
 28957                           
 28958 ;; *************** function _srand *****************
 28959 ;; Defined at:
 28960 ;;		line 6 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/rand.c"
 28961 ;; Parameters:    Size  Location     Type
 28962 ;;  s               2  [STACK] unsigned int 
 28963 ;; Auto vars:     Size  Location     Type
 28964 ;;		None
 28965 ;; Return value:  Size  Location     Type
 28966 ;;                  1  [STACK] void 
 28967 ;; Registers used:
 28968 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
 28969 ;; Tracked objects:
 28970 ;;		On entry : 3F/0
 28971 ;;		On exit  : 3F/0
 28972 ;;		Unchanged: 0/0
 28973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28978 ;;Total ram usage:        0 bytes
 28979 ;; Hardware stack levels used: 1
 28980 ;; Hardware stack levels required when called: 3
 28981 ;; This function calls:
 28982 ;;		Nothing
 28983 ;; This function is called by:
 28984 ;;		_main
 28985 ;; This function uses a reentrant model
 28986 ;;
 28987                           
 28988                           	psect	text16
 28989   017C66                     __ptext16:
 28990                           	callstack 0
 28991   017C66                     _srand:
 28992                           	callstack 27
 28993                           
 28994                           ;stkvar	_s @ sp[(0)+-2]
 28995                           
 28996                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28997                           ;incstack = 0
 28998   017C66  0EFE               	movlw	-2
 28999   017C68  50E3               	movf	plusw1,w,c
 29000   017C6A  0FFF               	addlw	255
 29001   017C6C  6E2D               	movwf	(btemp+10)^0,c
 29002   017C6E  0EFF               	movlw	-1
 29003   017C70  006F FF8C  F02E    	movff	plusw1,btemp+11
 29004   017C76  0EFF               	movlw	255
 29005   017C78  222E               	addwfc	(btemp+11)^0,f,c
 29006   017C7A  C02D  F0BC         	movff	btemp+10,_seed
 29007   017C7E  C02E  F0BD         	movff	btemp+11,_seed+1
 29008   017C82  0100               	movlb	0	; () banked
 29009   017C84  6BBE               	clrf	(_seed+2)& (0+255),b
 29010   017C86  6BBF               	clrf	(_seed+3)& (0+255),b
 29011                           
 29012                           ; BSR set to: 0
 29013                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
 29014   017C88  52E5               	movf	postdec1,f,c
 29015   017C8A  52E5               	movf	postdec1,f,c
 29016   017C8C  0012               	return		;funcret
 29017   017C8E                     __end_of_srand:
 29018                           	callstack 0
 29019                           
 29020 ;; *************** function _r_protocol *****************
 29021 ;; Defined at:
 29022 ;;		line 233 in file "gemsecs.c"
 29023 ;; Parameters:    Size  Location     Type
 29024 ;;  r_link          2  [STACK] PTR enum E17017
 29025 ;;		 -> V(387), 
 29026 ;; Auto vars:     Size  Location     Type
 29027 ;;  rxData          1  [STACK] unsigned char 
 29028 ;; Return value:  Size  Location     Type
 29029 ;;                  1  [STACK] enum E17295
 29030 ;; Registers used:
 29031 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 29032 ;; Tracked objects:
 29033 ;;		On entry : 0/3C
 29034 ;;		On exit  : 0/0
 29035 ;;		Unchanged: 0/0
 29036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29041 ;;Total ram usage:        0 bytes
 29042 ;; Hardware stack levels used: 1
 29043 ;; Hardware stack levels required when called: 14
 29044 ;; This function calls:
 29045 ;;		_StartTimer
 29046 ;;		_TimerDone
 29047 ;;		_UART1_Read
 29048 ;;		_UART1_Write
 29049 ;;		_UART1_is_rx_ready
 29050 ;;		_WaitMs
 29051 ;;		_run_checksum
 29052 ;;		_secs_II_monitor_message
 29053 ;;		_secs_gem_state
 29054 ;; This function is called by:
 29055 ;;		_main
 29056 ;; This function uses a reentrant model
 29057 ;;
 29058                           
 29059                           	psect	text17
 29060   012E02                     __ptext17:
 29061                           	callstack 0
 29062   012E02                     _r_protocol:
 29063                           	callstack 0
 29064                           
 29065                           ; BSR set to: 0
 29066                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29067   012E02  52E6               	movf	postinc1,f,c
 29068                           
 29069                           ;gemsecs.c: 233: LINK_STATES r_protocol(LINK_STATES * r_link);gemsecs.c: 234: {;gemsecs.
      +                          c: 235:  uint8_t rxData;;gemsecs.c: 236:  static uint8_t rxData_l = 0, retry = 3, *b_blo
      +                          ck, d = 1;;gemsecs.c: 238:  switch (*r_link) {
 29070                           
 29071                           ;incstack = 0
 29072   012E04  D207               	goto	l13182
 29073   012E06                     l13034:
 29074                           
 29075                           ;gemsecs.c: 240:   if (UART1_is_rx_ready()) {
 29076   012E06  EC46  F0C1         	call	_UART1_is_rx_ready	;wreg free
 29077   012E0A  5023               	movf	btemp^0,w,c
 29078   012E0C  B4D8               	btfsc	status,2,c
 29079   012E0E  D227               	goto	l13184
 29080                           
 29081                           ;gemsecs.c: 241:    rxData = UART1_Read();
 29082   012E10  ECC6  F0BC         	call	_UART1_Read	;wreg free
 29083                           
 29084                           ;stkvar	_rxData @ sp[(-1)+0]
 29085   012E14  0EFF               	movlw	-1
 29086   012E16  0060  F08F  FFE3   	movff	btemp,plusw1
 29087                           
 29088                           ; BSR set to: 57
 29089                           ;gemsecs.c: 242:    if (rxData == 0x05) {
 29090                           ;stkvar	_rxData @ sp[(-1)+0]
 29091   012E1C  0EFF               	movlw	-1
 29092   012E1E  006F FF8C  F023    	movff	plusw1,btemp
 29093   012E24  0E05               	movlw	5
 29094   012E26  1823               	xorwf	btemp^0,w,c
 29095   012E28  A4D8               	btfss	status,2,c
 29096   012E2A  D219               	goto	l13184
 29097                           
 29098                           ; BSR set to: 57
 29099                           
 29100                           ;gemsecs.c: 243:     do { LATEbits.LATE1 = 1; } while(0);
 29101   012E2C  82BE               	bsf	190,1,c	;volatile
 29102                           
 29103                           ; BSR set to: 57
 29104                           ;gemsecs.c: 244:     V.error = LINK_ERROR_NONE;
 29105   012E2E  0E0A               	movlw	10
 29106   012E30  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 29107                           
 29108                           ; BSR set to: 57
 29109                           ;gemsecs.c: 245:     *r_link = LINK_STATE_ENQ;
 29110                           ;stkvar	_r_link @ sp[(-1)+-2]
 29111   012E36  0EFD               	movlw	-3
 29112   012E38  006F FF8F FFD9     	movff	plusw1,fsr2l
 29113   012E3E  0EFE               	movlw	-2
 29114   012E40  006F FF8F FFDA     	movff	plusw1,fsr2h
 29115   012E46  0E01               	movlw	1
 29116   012E48  6EDF               	movwf	indf2,c
 29117                           
 29118                           ; BSR set to: 57
 29119                           ;gemsecs.c: 246:     if (TimerDone(TMR_HBIO)) {
 29120   012E4A  0E06               	movlw	6
 29121   012E4C  6EE6               	movwf	postinc1,c
 29122   012E4E  ECAD  F0BF         	call	_TimerDone	;wreg free
 29123   012E52  5023               	movf	btemp^0,w,c
 29124   012E54  B4D8               	btfsc	status,2,c
 29125   012E56  D203               	goto	l13184
 29126                           
 29127                           ;gemsecs.c: 247:      StartTimer(TMR_HBIO, 5000);
 29128   012E58  0E88               	movlw	136
 29129   012E5A  6EE6               	movwf	postinc1,c
 29130   012E5C  0E13               	movlw	19
 29131   012E5E  6EE6               	movwf	postinc1,c
 29132   012E60  0E06               	movlw	6
 29133   012E62  6EE6               	movwf	postinc1,c
 29134   012E64  EC02  F0BD         	call	_StartTimer	;wreg free
 29135                           
 29136                           ;gemsecs.c: 249:    }
 29137   012E68  D1FA               	goto	l13184
 29138   012E6A                     l1887:
 29139                           
 29140                           ;gemsecs.c: 253:   rxData_l = 0;
 29141   012E6A  6A0D               	clrf	r_protocol@rxData_l^0,c
 29142                           
 29143                           ;gemsecs.c: 254:   d = 1;
 29144   012E6C  0E01               	movlw	1
 29145   012E6E  6E52               	movwf	r_protocol@d^0,c
 29146                           
 29147                           ;gemsecs.c: 255:   b_block = (uint8_t*) & H254[0];
 29148   012E70  0ED5               	movlw	low _H254
 29149   012E72  6E01               	movwf	r_protocol@b_block^0,c
 29150   012E74  0E0E               	movlw	high _H254
 29151   012E76  6E02               	movwf	(r_protocol@b_block+1)^0,c
 29152                           
 29153                           ;gemsecs.c: 256:   UART1_Write(0x04);
 29154   012E78  0E04               	movlw	4
 29155   012E7A  6EE6               	movwf	postinc1,c
 29156   012E7C  EC49  F0BC         	call	_UART1_Write	;wreg free
 29157                           
 29158                           ; BSR set to: 57
 29159                           ;gemsecs.c: 257:   StartTimer(TMR_T2, 3000);
 29160   012E80  0EB8               	movlw	184
 29161   012E82  6EE6               	movwf	postinc1,c
 29162   012E84  0E0B               	movlw	11
 29163   012E86  6EE6               	movwf	postinc1,c
 29164   012E88  0E02               	movlw	2
 29165   012E8A  6EE6               	movwf	postinc1,c
 29166   012E8C  EC02  F0BD         	call	_StartTimer	;wreg free
 29167                           
 29168                           ;gemsecs.c: 258:   *r_link = LINK_STATE_EOT;
 29169                           ;stkvar	_r_link @ sp[(-1)+-2]
 29170   012E90  0EFD               	movlw	-3
 29171   012E92  006F FF8F FFD9     	movff	plusw1,fsr2l
 29172   012E98  0EFE               	movlw	-2
 29173   012E9A  006F FF8F FFDA     	movff	plusw1,fsr2h
 29174   012EA0  0E02               	movlw	2
 29175   012EA2  D02D               	goto	L18
 29176   012EA4                     l13056:
 29177                           
 29178                           ;gemsecs.c: 261:   if (TimerDone(TMR_T2)) {
 29179   012EA4  0E02               	movlw	2
 29180   012EA6  6EE6               	movwf	postinc1,c
 29181   012EA8  ECAD  F0BF         	call	_TimerDone	;wreg free
 29182   012EAC  5023               	movf	btemp^0,w,c
 29183   012EAE  B4D8               	btfsc	status,2,c
 29184   012EB0  D032               	goto	l13072
 29185                           
 29186                           ;gemsecs.c: 262:    V.timer_error++;
 29187   012EB2  EE23  F15B         	lfsr	2,_V+321	;volatile
 29188   012EB6  2ADE               	incf	postinc2,f,c
 29189   012EB8  0E00               	movlw	0
 29190   012EBA  22DD               	addwfc	postdec2,f,c
 29191                           
 29192                           ;gemsecs.c: 263:    V.all_errors++;
 29193   012EBC  EE23  F165         	lfsr	2,_V+331	;volatile
 29194   012EC0  2ADE               	incf	postinc2,f,c
 29195   012EC2  0E00               	movlw	0
 29196   012EC4  22DD               	addwfc	postdec2,f,c
 29197                           
 29198                           ;gemsecs.c: 264:    if (!retry--) {
 29199   012EC6  0653               	decf	r_protocol@retry^0,f,c
 29200   012EC8  2853               	incf	r_protocol@retry^0,w,c
 29201   012ECA  A4D8               	btfss	status,2,c
 29202   012ECC  D01A               	goto	l13070
 29203                           
 29204                           ;gemsecs.c: 265:     V.error = LINK_ERROR_T2;
 29205   012ECE  0E0C               	movlw	12
 29206   012ED0  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 29207                           
 29208                           ;gemsecs.c: 266:     V.failed_receive = 1;
 29209   012ED6  EE23  F168         	lfsr	2,_V+334	;volatile
 29210   012EDA  50DF               	movf	223,w,c
 29211   012EDC  0BF0               	andlw	-16
 29212   012EDE  0901               	iorlw	1
 29213   012EE0  6EDF               	movwf	223,c
 29214                           
 29215                           ;gemsecs.c: 267:     V.all_errors++;
 29216   012EE2  EE23  F165         	lfsr	2,_V+331	;volatile
 29217   012EE6  2ADE               	incf	postinc2,f,c
 29218   012EE8  0E00               	movlw	0
 29219   012EEA  22DD               	addwfc	postdec2,f,c
 29220   012EEC                     l13068:
 29221                           
 29222                           ;gemsecs.c: 268:     *r_link = LINK_STATE_NAK;
 29223                           ;stkvar	_r_link @ sp[(-1)+-2]
 29224   012EEC  0EFD               	movlw	-3
 29225   012EEE  006F FF8F FFD9     	movff	plusw1,fsr2l
 29226   012EF4  0EFE               	movlw	-2
 29227   012EF6  006F FF8F FFDA     	movff	plusw1,fsr2h
 29228   012EFC  0E05               	movlw	5
 29229   012EFE                     L18:
 29230   012EFE  6EDF               	movwf	indf2,c
 29231                           
 29232                           ;gemsecs.c: 269:    } else {
 29233   012F00  D1AE               	goto	l13184
 29234   012F02                     l13070:
 29235                           
 29236                           ;gemsecs.c: 270:     *r_link = LINK_STATE_IDLE;
 29237                           ;stkvar	_r_link @ sp[(-1)+-2]
 29238   012F02  0EFD               	movlw	-3
 29239   012F04  006F FF8F FFD9     	movff	plusw1,fsr2l
 29240   012F0A  0EFE               	movlw	-2
 29241   012F0C  006F FF8F FFDA     	movff	plusw1,fsr2h
 29242   012F12  6ADF               	clrf	indf2,c
 29243   012F14  D1A4               	goto	l13184
 29244   012F16                     l13072:
 29245                           
 29246                           ;gemsecs.c: 273:    if (UART1_is_rx_ready()) {
 29247   012F16  EC46  F0C1         	call	_UART1_is_rx_ready	;wreg free
 29248   012F1A  5023               	movf	btemp^0,w,c
 29249   012F1C  B4D8               	btfsc	status,2,c
 29250   012F1E  D19F               	goto	l13184
 29251                           
 29252                           ;gemsecs.c: 274:     rxData = UART1_Read();
 29253   012F20  ECC6  F0BC         	call	_UART1_Read	;wreg free
 29254                           
 29255                           ;stkvar	_rxData @ sp[(-1)+0]
 29256   012F24  0EFF               	movlw	-1
 29257   012F26  0060  F08F  FFE3   	movff	btemp,plusw1
 29258                           
 29259                           ; BSR set to: 57
 29260                           ;gemsecs.c: 275:     if (rxData_l == 0) {
 29261   012F2C  500D               	movf	r_protocol@rxData_l^0,w,c
 29262   012F2E  A4D8               	btfss	status,2,c
 29263   012F30  D01C               	goto	l13086
 29264                           
 29265                           ; BSR set to: 57
 29266                           ;gemsecs.c: 276:      r_block.length = rxData;
 29267                           ;stkvar	_rxData @ sp[(-1)+0]
 29268   012F32  0EFF               	movlw	-1
 29269   012F34  006F FF8C  F086    	movff	plusw1,_r_block+12
 29270                           
 29271                           ; BSR set to: 57
 29272                           ;gemsecs.c: 277:      run_checksum(0, 1);
 29273   012F3A  0E01               	movlw	1
 29274   012F3C  6EE6               	movwf	postinc1,c
 29275   012F3E  0E00               	movlw	0
 29276   012F40  6EE6               	movwf	postinc1,c
 29277   012F42  EC9B  F0BF         	call	_run_checksum	;wreg free
 29278                           
 29279                           ;gemsecs.c: 278:      rxData_l++;
 29280   012F46  2A0D               	incf	r_protocol@rxData_l^0,f,c
 29281                           
 29282                           ;gemsecs.c: 279:      b_block[sizeof(header254) - rxData_l] = rxData;
 29283                           ;stkvar	_rxData @ sp[(-1)+0]
 29284   012F48  500D               	movf	r_protocol@rxData_l^0,w,c
 29285   012F4A  5C01               	subwf	r_protocol@b_block^0,w,c
 29286   012F4C  6E2D               	movwf	(btemp+10)^0,c
 29287   012F4E  0E00               	movlw	0
 29288   012F50  5802               	subwfb	(r_protocol@b_block+1)^0,w,c
 29289   012F52  6E2E               	movwf	(btemp+11)^0,c
 29290   012F54  0E01               	movlw	1
 29291   012F56  242D               	addwf	(btemp+10)^0,w,c
 29292   012F58  6ED9               	movwf	fsr2l,c
 29293   012F5A  0E01               	movlw	1
 29294   012F5C  202E               	addwfc	(btemp+11)^0,w,c
 29295   012F5E  6EDA               	movwf	fsr2h,c
 29296   012F60  0EFF               	movlw	-1
 29297   012F62  006F FF8F FFDF     	movff	plusw1,indf2
 29298                           
 29299                           ;gemsecs.c: 280:     } else {
 29300   012F68  D17A               	goto	l13184
 29301   012F6A                     l13086:
 29302                           
 29303                           ; BSR set to: 57
 29304                           ;gemsecs.c: 284:      if (rxData_l <= sizeof(block10)) {
 29305   012F6A  0E0B               	movlw	11
 29306   012F6C  600D               	cpfslt	r_protocol@rxData_l^0,c
 29307   012F6E  D00C               	goto	l13090
 29308                           
 29309                           ; BSR set to: 57
 29310                           ;gemsecs.c: 285:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
 29311                           ;stkvar	_rxData @ sp[(-1)+0]
 29312   012F70  500D               	movf	r_protocol@rxData_l^0,w,c
 29313   012F72  0819               	sublw	low (_H10+25)
 29314   012F74  6ED9               	movwf	fsr2l,c
 29315   012F76  0E00               	movlw	0
 29316   012F78  A0D8               	btfss	status,0,c
 29317   012F7A  2AE8               	incf	wreg,f,c
 29318   012F7C  0801               	sublw	high (_H10+25)
 29319   012F7E  6EDA               	movwf	fsr2h,c
 29320   012F80  0EFF               	movlw	-1
 29321   012F82  006F FF8F FFDF     	movff	plusw1,indf2
 29322   012F88                     l13090:
 29323                           
 29324                           ; BSR set to: 57
 29325                           ;gemsecs.c: 288:      if (d <= 16) {
 29326   012F88  0E11               	movlw	17
 29327   012F8A  6052               	cpfslt	r_protocol@d^0,c
 29328   012F8C  D01C               	goto	l13098
 29329                           
 29330                           ; BSR set to: 57
 29331                           ;gemsecs.c: 289:       if (rxData_l == sizeof(block10) + d) {
 29332   012F8E  500D               	movf	r_protocol@rxData_l^0,w,c
 29333   012F90  6E2D               	movwf	(btemp+10)^0,c
 29334   012F92  6A2E               	clrf	(btemp+11)^0,c
 29335   012F94  5052               	movf	r_protocol@d^0,w,c
 29336   012F96  6E2B               	movwf	(btemp+8)^0,c
 29337   012F98  6A2C               	clrf	(btemp+9)^0,c
 29338   012F9A  0E0A               	movlw	10
 29339   012F9C  262B               	addwf	(btemp+8)^0,f,c
 29340   012F9E  0E00               	movlw	0
 29341   012FA0  222C               	addwfc	(btemp+9)^0,f,c
 29342   012FA2  502D               	movf	(btemp+10)^0,w,c
 29343   012FA4  182B               	xorwf	(btemp+8)^0,w,c
 29344   012FA6  E10F               	bnz	l13098
 29345   012FA8  502E               	movf	(btemp+11)^0,w,c
 29346   012FAA  182C               	xorwf	(btemp+9)^0,w,c
 29347   012FAC  A4D8               	btfss	status,2,c
 29348   012FAE  D00B               	goto	l13098
 29349                           
 29350                           ; BSR set to: 57
 29351                           ;gemsecs.c: 290:        V.response.ack[d - 1] = rxData;
 29352                           ;stkvar	_rxData @ sp[(-1)+0]
 29353   012FB0  0E69               	movlw	low (_V+335)
 29354   012FB2  2452               	addwf	r_protocol@d^0,w,c
 29355   012FB4  6ED9               	movwf	fsr2l,c
 29356   012FB6  6ADA               	clrf	fsr2h,c
 29357   012FB8  0E0D               	movlw	high (_V+335)
 29358   012FBA  22DA               	addwfc	fsr2h,f,c
 29359   012FBC  0EFF               	movlw	-1
 29360   012FBE  006F FF8F FFDF     	movff	plusw1,indf2
 29361                           
 29362                           ; BSR set to: 57
 29363                           ;gemsecs.c: 291:        d++;
 29364   012FC4  2A52               	incf	r_protocol@d^0,f,c
 29365   012FC6                     l13098:
 29366                           
 29367                           ; BSR set to: 57
 29368                           ;gemsecs.c: 295:      if (rxData_l <= r_block.length)
 29369   012FC6  500D               	movf	r_protocol@rxData_l^0,w,c
 29370   012FC8  0100               	movlb	0	; () banked
 29371   012FCA  5D86               	subwf	(_r_block+12)& (0+255),w,b
 29372   012FCC  A0D8               	btfss	status,0,c
 29373   012FCE  D00D               	goto	l13102
 29374                           
 29375                           ; BSR set to: 0
 29376                           ;gemsecs.c: 296:       V.r_checksum = run_checksum(rxData, 0);
 29377   012FD0  0E00               	movlw	0
 29378   012FD2  6EE6               	movwf	postinc1,c
 29379                           
 29380                           ;stkvar	_rxData @ sp[(-2)+0]
 29381   012FD4  0EFE               	movlw	-2
 29382   012FD6  50E3               	movf	plusw1,w,c
 29383   012FD8  6EE6               	movwf	postinc1,c
 29384   012FDA  EC9B  F0BF         	call	_run_checksum	;wreg free
 29385   012FDE  0060  F08C  FD55   	movff	btemp,_V+315	;volatile
 29386   012FE4  0060  F090  FD56   	movff	btemp+1,_V+316	;volatile
 29387   012FEA                     l13102:
 29388                           
 29389                           ;gemsecs.c: 298:      if (rxData_l == r_block.length + 1)
 29390   012FEA  500D               	movf	r_protocol@rxData_l^0,w,c
 29391   012FEC  6E2D               	movwf	(btemp+10)^0,c
 29392   012FEE  6A2E               	clrf	(btemp+11)^0,c
 29393   012FF0  0100               	movlb	0	; () banked
 29394   012FF2  5186               	movf	(_r_block+12)& (0+255),w,b
 29395   012FF4  6E2B               	movwf	(btemp+8)^0,c
 29396   012FF6  6A2C               	clrf	(btemp+9)^0,c
 29397   012FF8  0E01               	movlw	1
 29398   012FFA  262B               	addwf	(btemp+8)^0,f,c
 29399   012FFC  0E00               	movlw	0
 29400   012FFE  222C               	addwfc	(btemp+9)^0,f,c
 29401   013000  502D               	movf	(btemp+10)^0,w,c
 29402   013002  182B               	xorwf	(btemp+8)^0,w,c
 29403   013004  E109               	bnz	l13106
 29404   013006  502E               	movf	(btemp+11)^0,w,c
 29405   013008  182C               	xorwf	(btemp+9)^0,w,c
 29406   01300A  A4D8               	btfss	status,2,c
 29407   01300C  D005               	goto	l13106
 29408                           
 29409                           ; BSR set to: 0
 29410                           ;gemsecs.c: 299:       H10[1].checksum = (uint16_t) rxData << 8;
 29411                           ;stkvar	_rxData @ sp[(-1)+0]
 29412   01300E  0EFF               	movlw	-1
 29413   013010  50E3               	movf	plusw1,w,c
 29414   013012  0101               	movlb	1	; () banked
 29415   013014  6F0E               	movwf	(_H10+14)& (0+255),b
 29416   013016  6B0D               	clrf	(_H10+13)& (0+255),b
 29417   013018                     l13106:
 29418                           
 29419                           ;gemsecs.c: 300:      if (rxData_l == r_block.length + 2)
 29420   013018  500D               	movf	r_protocol@rxData_l^0,w,c
 29421   01301A  6E2D               	movwf	(btemp+10)^0,c
 29422   01301C  6A2E               	clrf	(btemp+11)^0,c
 29423   01301E  0100               	movlb	0	; () banked
 29424   013020  5186               	movf	(_r_block+12)& (0+255),w,b
 29425   013022  6E2B               	movwf	(btemp+8)^0,c
 29426   013024  6A2C               	clrf	(btemp+9)^0,c
 29427   013026  0E02               	movlw	2
 29428   013028  262B               	addwf	(btemp+8)^0,f,c
 29429   01302A  0E00               	movlw	0
 29430   01302C  222C               	addwfc	(btemp+9)^0,f,c
 29431   01302E  502D               	movf	(btemp+10)^0,w,c
 29432   013030  182B               	xorwf	(btemp+8)^0,w,c
 29433   013032  E10A               	bnz	l13110
 29434   013034  502E               	movf	(btemp+11)^0,w,c
 29435   013036  182C               	xorwf	(btemp+9)^0,w,c
 29436   013038  A4D8               	btfss	status,2,c
 29437   01303A  D006               	goto	l13110
 29438                           
 29439                           ; BSR set to: 0
 29440                           ;gemsecs.c: 301:       H10[1].checksum += rxData;
 29441                           ;stkvar	_rxData @ sp[(-1)+0]
 29442   01303C  0EFF               	movlw	-1
 29443   01303E  50E3               	movf	plusw1,w,c
 29444   013040  0101               	movlb	1	; () banked
 29445   013042  270D               	addwf	(_H10+13)& (0+255),f,b
 29446   013044  0E00               	movlw	0
 29447   013046  230E               	addwfc	(_H10+14)& (0+255),f,b
 29448   013048                     l13110:
 29449                           
 29450                           ;gemsecs.c: 303:      rxData_l++;
 29451   013048  2A0D               	incf	r_protocol@rxData_l^0,f,c
 29452                           
 29453                           ;gemsecs.c: 304:      b_block[sizeof(header254) - rxData_l] = rxData;
 29454                           ;stkvar	_rxData @ sp[(-1)+0]
 29455   01304A  500D               	movf	r_protocol@rxData_l^0,w,c
 29456   01304C  5C01               	subwf	r_protocol@b_block^0,w,c
 29457   01304E  6E2D               	movwf	(btemp+10)^0,c
 29458   013050  0E00               	movlw	0
 29459   013052  5802               	subwfb	(r_protocol@b_block+1)^0,w,c
 29460   013054  6E2E               	movwf	(btemp+11)^0,c
 29461   013056  0E01               	movlw	1
 29462   013058  242D               	addwf	(btemp+10)^0,w,c
 29463   01305A  6ED9               	movwf	fsr2l,c
 29464   01305C  0E01               	movlw	1
 29465   01305E  202E               	addwfc	(btemp+11)^0,w,c
 29466   013060  6EDA               	movwf	fsr2h,c
 29467   013062  0EFF               	movlw	-1
 29468   013064  006F FF8F FFDF     	movff	plusw1,indf2
 29469                           
 29470                           ;gemsecs.c: 305:      if (rxData_l > (r_block.length + 2)) {
 29471   01306A  500D               	movf	r_protocol@rxData_l^0,w,c
 29472   01306C  6E2D               	movwf	(btemp+10)^0,c
 29473   01306E  6A2E               	clrf	(btemp+11)^0,c
 29474   013070  0100               	movlb	0	; () banked
 29475   013072  5186               	movf	(_r_block+12)& (0+255),w,b
 29476   013074  6E2B               	movwf	(btemp+8)^0,c
 29477   013076  6A2C               	clrf	(btemp+9)^0,c
 29478   013078  0E02               	movlw	2
 29479   01307A  262B               	addwf	(btemp+8)^0,f,c
 29480   01307C  0E00               	movlw	0
 29481   01307E  222C               	addwfc	(btemp+9)^0,f,c
 29482   013080  502D               	movf	(btemp+10)^0,w,c
 29483   013082  5C2B               	subwf	(btemp+8)^0,w,c
 29484   013084  502C               	movf	(btemp+9)^0,w,c
 29485   013086  0A80               	xorlw	128
 29486   013088  6E23               	movwf	btemp^0,c
 29487   01308A  502E               	movf	(btemp+11)^0,w,c
 29488   01308C  0A80               	xorlw	128
 29489   01308E  5823               	subwfb	btemp^0,w,c
 29490   013090  B0D8               	btfsc	status,0,c
 29491   013092  D0E5               	goto	l13184
 29492                           
 29493                           ; BSR set to: 0
 29494                           ;gemsecs.c: 306:       if (V.r_checksum == H10[1].checksum) {
 29495   013094  EE23  F155         	lfsr	2,_V+315	;volatile
 29496   013098  0101               	movlb	1	; () banked
 29497   01309A  510D               	movf	(_H10+13)& (0+255),w,b
 29498   01309C  18DE               	xorwf	postinc2,w,c
 29499   01309E  E112               	bnz	l13124
 29500   0130A0  510E               	movf	(_H10+14)& (0+255),w,b
 29501   0130A2  18DE               	xorwf	postinc2,w,c
 29502   0130A4  A4D8               	btfss	status,2,c
 29503   0130A6  D00E               	goto	l13124
 29504                           
 29505                           ; BSR set to: 1
 29506                           ;gemsecs.c: 307:        *r_link = LINK_STATE_ACK;
 29507                           ;stkvar	_r_link @ sp[(-1)+-2]
 29508   0130A8  0EFD               	movlw	-3
 29509   0130AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 29510   0130B0  0EFE               	movlw	-2
 29511   0130B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 29512   0130B8  0E03               	movlw	3
 29513   0130BA  6EDF               	movwf	indf2,c
 29514                           
 29515                           ; BSR set to: 1
 29516   0130BC  82BE               	bsf	190,1,c	;volatile
 29517   0130BE  D0CF               	goto	l13184
 29518   0130C0                     l13122:
 29519   0130C0  ECC6  F0BC         	call	_UART1_Read	;wreg free
 29520   0130C4                     l13124:
 29521                           
 29522                           ;gemsecs.c: 310:        while (UART1_is_rx_ready())
 29523   0130C4  EC46  F0C1         	call	_UART1_is_rx_ready	;wreg free
 29524   0130C8  5023               	movf	btemp^0,w,c
 29525   0130CA  A4D8               	btfss	status,2,c
 29526   0130CC  D7F9               	goto	l13122
 29527                           
 29528                           ;gemsecs.c: 312:        WaitMs(500);
 29529   0130CE  0EF4               	movlw	244
 29530   0130D0  6EE6               	movwf	postinc1,c
 29531   0130D2  0E01               	movlw	1
 29532   0130D4  6EE6               	movwf	postinc1,c
 29533   0130D6  EC77  F0BD         	call	_WaitMs	;wreg free
 29534                           
 29535                           ;gemsecs.c: 313:        V.error = LINK_ERROR_CHECKSUM;
 29536   0130DA  0E0F               	movlw	15
 29537   0130DC  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 29538                           
 29539                           ;gemsecs.c: 314:        V.checksum_error++;
 29540   0130E2  EE23  F159         	lfsr	2,_V+319	;volatile
 29541   0130E6  2ADE               	incf	postinc2,f,c
 29542   0130E8  0E00               	movlw	0
 29543   0130EA  22DD               	addwfc	postdec2,f,c
 29544                           
 29545                           ;gemsecs.c: 315:        V.all_errors++;
 29546   0130EC  EE23  F165         	lfsr	2,_V+331	;volatile
 29547   0130F0  2ADE               	incf	postinc2,f,c
 29548   0130F2  0E00               	movlw	0
 29549   0130F4  22DD               	addwfc	postdec2,f,c
 29550                           
 29551                           ;gemsecs.c: 316:        V.failed_receive = 2;
 29552   0130F6  EE23  F168         	lfsr	2,_V+334	;volatile
 29553   0130FA  50DF               	movf	223,w,c
 29554   0130FC  0BF0               	andlw	-16
 29555   0130FE  0902               	iorlw	2
 29556   013100  6EDF               	movwf	223,c
 29557   013102  D6F4               	goto	l13068
 29558   013104                     l13138:
 29559                           
 29560                           ;gemsecs.c: 325:   UART1_Write(0x06);
 29561   013104  0E06               	movlw	6
 29562   013106  6EE6               	movwf	postinc1,c
 29563   013108  EC49  F0BC         	call	_UART1_Write	;wreg free
 29564                           
 29565                           ; BSR set to: 57
 29566                           ;gemsecs.c: 326:   V.stream = H10[1].block.block.stream;
 29567   01310C  0101               	movlb	1	; () banked
 29568   01310E  5116               	movf	(_H10+22)& (0+255),w,b
 29569   013110  0B7F               	andlw	127
 29570   013112  6E2E               	movwf	(btemp+11)^0,c
 29571   013114  0060  F0B8  FD4D   	movff	btemp+11,_V+307	;volatile
 29572                           
 29573                           ; BSR set to: 1
 29574                           ;gemsecs.c: 327:   V.function = H10[1].block.block.function;
 29575   01311A  EE23  F14E         	lfsr	2,_V+308	;volatile
 29576   01311E  0060  F457  FFDF   	movff	_H10+21,indf2
 29577                           
 29578                           ; BSR set to: 1
 29579                           ;gemsecs.c: 328:   V.systemb = H10[1].block.block.systemb;
 29580   013124  EE20  F10F         	lfsr	2,_H10+15
 29581   013128  006F FF78  FD45    	movff	postinc2,_V+299	;volatile
 29582   01312E  006F FF78  FD46    	movff	postinc2,_V+300	;volatile
 29583   013134  006F FF78  FD47    	movff	postinc2,_V+301	;volatile
 29584   01313A  006F FF74  FD48    	movff	postdec2,_V+302	;volatile
 29585                           
 29586                           ; BSR set to: 1
 29587                           ;gemsecs.c: 329:   V.rbit = H10[1].block.block.rbit;
 29588   013140  EE23  F167         	lfsr	2,_V+333	;volatile
 29589   013144  BF18               	btfsc	(_H10+24)& (0+255),7,b
 29590   013146  D002               	bra	u9565
 29591   013148  90DF               	bcf	indf2,0,c
 29592   01314A  D001               	bra	u9566
 29593   01314C                     u9565:
 29594   01314C  80DF               	bsf	indf2,0,c
 29595   01314E                     u9566:
 29596                           
 29597                           ;gemsecs.c: 330:   V.wbit = H10[1].block.block.wbit;
 29598   01314E  EE23  F167         	lfsr	2,_V+333	;volatile
 29599   013152  0101               	movlb	1	; () banked
 29600   013154  BF16               	btfsc	(_H10+22)& (0+255),7,b
 29601   013156  D002               	bra	u9575
 29602   013158  92DF               	bcf	indf2,1,c
 29603   01315A  D001               	bra	u9576
 29604   01315C                     u9575:
 29605   01315C  82DF               	bsf	indf2,1,c
 29606   01315E                     u9576:
 29607                           
 29608                           ;gemsecs.c: 331:   V.ebit = H10[1].block.block.ebit;
 29609   01315E  EE23  F167         	lfsr	2,_V+333	;volatile
 29610   013162  0101               	movlb	1	; () banked
 29611   013164  BF14               	btfsc	(_H10+20)& (0+255),7,b
 29612   013166  D002               	bra	u9585
 29613   013168  94DF               	bcf	indf2,2,c
 29614   01316A  D001               	bra	u9586
 29615   01316C                     u9585:
 29616   01316C  84DF               	bsf	indf2,2,c
 29617   01316E                     u9586:
 29618                           
 29619                           ;gemsecs.c: 332:   secs_II_monitor_message(V.stream, V.function, 500);
 29620   01316E  0EF4               	movlw	244
 29621   013170  6EE6               	movwf	postinc1,c
 29622   013172  0E01               	movlw	1
 29623   013174  6EE6               	movwf	postinc1,c
 29624   013176  EE23  F14E         	lfsr	2,_V+308	;volatile
 29625   01317A  50DF               	movf	indf2,w,c
 29626   01317C  6EE6               	movwf	postinc1,c
 29627   01317E  EE23  F14D         	lfsr	2,_V+307	;volatile
 29628   013182  50DF               	movf	indf2,w,c
 29629   013184  6EE6               	movwf	postinc1,c
 29630   013186  EC73  F0B0         	call	_secs_II_monitor_message	;wreg free
 29631                           
 29632                           ;gemsecs.c: 333:   V.g_state = secs_gem_state(V.stream, V.function);
 29633   01318A  EE23  F14E         	lfsr	2,_V+308	;volatile
 29634   01318E  50DF               	movf	indf2,w,c
 29635   013190  6EE6               	movwf	postinc1,c
 29636   013192  EE23  F14D         	lfsr	2,_V+307	;volatile
 29637   013196  50DF               	movf	indf2,w,c
 29638   013198  6EE6               	movwf	postinc1,c
 29639   01319A  EC07  F0A9         	call	_secs_gem_state	;wreg free
 29640   01319E  0060  F08C  FC1C   	movff	btemp,_V+2	;volatile
 29641                           
 29642                           ;gemsecs.c: 334:   V.failed_receive = 0;
 29643   0131A4  EE23  F168         	lfsr	2,_V+334	;volatile
 29644   0131A8  0EF0               	movlw	-16
 29645   0131AA  16DF               	andwf	223,f,c
 29646                           
 29647                           ;gemsecs.c: 335:   *r_link = LINK_STATE_DONE;
 29648                           ;stkvar	_r_link @ sp[(-1)+-2]
 29649   0131AC  0EFD               	movlw	-3
 29650   0131AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 29651   0131B4  0EFE               	movlw	-2
 29652   0131B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 29653   0131BC  0E04               	movlw	4
 29654   0131BE  6EDF               	movwf	indf2,c
 29655                           
 29656                           ;gemsecs.c: 336:   V.abort = LINK_ERROR_NONE;
 29657   0131C0  0E0A               	movlw	10
 29658   0131C2  006F FFA0  FD50    	movff	wreg,_V+310	;volatile
 29659                           
 29660                           ;gemsecs.c: 338:   break;
 29661   0131C8  D04A               	goto	l13184
 29662   0131CA                     l13162:
 29663                           
 29664                           ;gemsecs.c: 340:   UART1_Write(0x15);
 29665   0131CA  0E15               	movlw	21
 29666   0131CC  6EE6               	movwf	postinc1,c
 29667   0131CE  EC49  F0BC         	call	_UART1_Write	;wreg free
 29668                           
 29669                           ; BSR set to: 57
 29670                           ;gemsecs.c: 341:   *r_link = LINK_STATE_ERROR;
 29671                           ;stkvar	_r_link @ sp[(-1)+-2]
 29672   0131D2  0EFD               	movlw	-3
 29673   0131D4  006F FF8F FFD9     	movff	plusw1,fsr2l
 29674   0131DA  0EFE               	movlw	-2
 29675   0131DC  006F FF8F FFDA     	movff	plusw1,fsr2h
 29676   0131E2  0E06               	movlw	6
 29677   0131E4  6EDF               	movwf	indf2,c
 29678                           
 29679                           ; BSR set to: 57
 29680                           ;gemsecs.c: 342:   V.all_errors++;
 29681   0131E6  EE23  F165         	lfsr	2,_V+331	;volatile
 29682   0131EA  2ADE               	incf	postinc2,f,c
 29683   0131EC  0E00               	movlw	0
 29684   0131EE  22DD               	addwfc	postdec2,f,c
 29685                           
 29686                           ;gemsecs.c: 343:   while ((uart1RxCount)) {
 29687   0131F0  D002               	goto	l13170
 29688   0131F2                     l13168:
 29689                           
 29690                           ; BSR set to: 57
 29691                           ;gemsecs.c: 344:    UART1_Read();
 29692   0131F2  ECC6  F0BC         	call	_UART1_Read	;wreg free
 29693   0131F6                     l13170:
 29694                           
 29695                           ; BSR set to: 57
 29696                           ;gemsecs.c: 343:   while ((uart1RxCount)) {
 29697   0131F6  5016               	movf	_uart1RxCount^0,w,c	;volatile
 29698   0131F8  A4D8               	btfss	status,2,c
 29699   0131FA  D7FB               	goto	l13168
 29700                           
 29701                           ; BSR set to: 57
 29702                           ;gemsecs.c: 346:   retry = 3;
 29703   0131FC  0E03               	movlw	3
 29704   0131FE  6E53               	movwf	r_protocol@retry^0,c
 29705                           
 29706                           ;gemsecs.c: 347:   break;
 29707   013200  D02E               	goto	l13184
 29708   013202                     l13174:
 29709                           
 29710                           ;gemsecs.c: 351:   V.failed_receive = 0;
 29711   013202  EE23  F168         	lfsr	2,_V+334	;volatile
 29712   013206  0EF0               	movlw	-16
 29713   013208  16DF               	andwf	223,f,c
 29714                           
 29715                           ;gemsecs.c: 352:   V.abort = LINK_ERROR_NONE;
 29716   01320A  0E0A               	movlw	10
 29717   01320C  006F FFA0  FD50    	movff	wreg,_V+310	;volatile
 29718   013212  D677               	goto	l13070
 29719   013214                     l13182:
 29720                           
 29721                           ;stkvar	_r_link @ sp[(-1)+-2]
 29722   013214  0EFD               	movlw	-3
 29723   013216  006F FF8F FFD9     	movff	plusw1,fsr2l
 29724   01321C  0EFE               	movlw	-2
 29725   01321E  006F FF8F FFDA     	movff	plusw1,fsr2h
 29726   013224  50DF               	movf	indf2,w,c
 29727   013226  6E2D               	movwf	(btemp+10)^0,c
 29728   013228  6A2E               	clrf	(btemp+11)^0,c
 29729                           
 29730                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 29731                           ; Switch size 1, requested type "simple"
 29732                           ; Number of cases is 1, Range of values is 0 to 0
 29733                           ; switch strategies available:
 29734                           ; Name         Instructions Cycles
 29735                           ; simple_byte            4     3 (average)
 29736                           ;	Chosen strategy is simple_byte
 29737   01322A  502E               	movf	(btemp+11)^0,w,c
 29738   01322C  0A00               	xorlw	0	; case 0
 29739   01322E  A4D8               	btfss	status,2,c
 29740   013230  D668               	goto	l13070
 29741                           
 29742                           ; Switch size 1, requested type "simple"
 29743                           ; Number of cases is 7, Range of values is 0 to 6
 29744                           ; switch strategies available:
 29745                           ; Name         Instructions Cycles
 29746                           ; simple_byte           22    12 (average)
 29747                           ;	Chosen strategy is simple_byte
 29748   013232  502D               	movf	(btemp+10)^0,w,c
 29749   013234  0A00               	xorlw	0	; case 0
 29750   013236  B4D8               	btfsc	status,2,c
 29751   013238  D5E6               	goto	l13034
 29752   01323A  0A01               	xorlw	1	; case 1
 29753   01323C  B4D8               	btfsc	status,2,c
 29754   01323E  D615               	goto	l1887
 29755   013240  0A03               	xorlw	3	; case 2
 29756   013242  B4D8               	btfsc	status,2,c
 29757   013244  D62F               	goto	l13056
 29758   013246  0A01               	xorlw	1	; case 3
 29759   013248  B4D8               	btfsc	status,2,c
 29760   01324A  D75C               	goto	l13138
 29761   01324C  0A07               	xorlw	7	; case 4
 29762   01324E  B4D8               	btfsc	status,2,c
 29763   013250  D7D8               	goto	l13174
 29764   013252  0A01               	xorlw	1	; case 5
 29765   013254  B4D8               	btfsc	status,2,c
 29766   013256  D7B9               	goto	l13162
 29767   013258  0A03               	xorlw	3	; case 6
 29768   01325A  A4D8               	btfss	status,2,c
 29769   01325C  D652               	goto	l13070
 29770   01325E                     l13184:
 29771                           
 29772                           ;gemsecs.c: 359:  return *r_link;
 29773                           ;stkvar	_r_link @ sp[(-1)+-2]
 29774   01325E  0EFD               	movlw	-3
 29775   013260  006F FF8F FFD9     	movff	plusw1,fsr2l
 29776   013266  0EFE               	movlw	-2
 29777   013268  006F FF8F FFDA     	movff	plusw1,fsr2h
 29778   01326E  50DF               	movf	indf2,w,c
 29779   013270  6E23               	movwf	btemp^0,c
 29780                           
 29781                           ; _r_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
 29782   013272  52E5               	movf	postdec1,f,c
 29783   013274  52E5               	movf	postdec1,f,c
 29784   013276  52E5               	movf	postdec1,f,c
 29785   013278  0012               	return		;funcret
 29786   01327A                     __end_of_r_protocol:
 29787                           	callstack 0
 29788                           
 29789 ;; *************** function _UART1_Write *****************
 29790 ;; Defined at:
 29791 ;;		line 180 in file "mcc_generated_files/uart1.c"
 29792 ;; Parameters:    Size  Location     Type
 29793 ;;  txData          1  [STACK] unsigned char 
 29794 ;; Auto vars:     Size  Location     Type
 29795 ;;		None
 29796 ;; Return value:  Size  Location     Type
 29797 ;;                  1  [STACK] void 
 29798 ;; Registers used:
 29799 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 29800 ;; Tracked objects:
 29801 ;;		On entry : 0/3C
 29802 ;;		On exit  : 3F/39
 29803 ;;		Unchanged: 0/0
 29804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29809 ;;Total ram usage:        0 bytes
 29810 ;; Hardware stack levels used: 1
 29811 ;; Hardware stack levels required when called: 3
 29812 ;; This function calls:
 29813 ;;		Nothing
 29814 ;; This function is called by:
 29815 ;;		_r_protocol
 29816 ;;		_t_protocol
 29817 ;;		_secs_send
 29818 ;; This function uses a reentrant model
 29819 ;;
 29820                           
 29821                           	psect	text18
 29822   017892                     __ptext18:
 29823                           	callstack 0
 29824   017892                     _UART1_Write:
 29825                           	callstack 25
 29826                           
 29827                           ;mcc_generated_files/uart1.c: 182:  while (0 == uart1TxBufferRemaining) {
 29828                           
 29829                           ;mcc_generated_files/uart1.c: 180: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 181: {;mcc_generated_files/uart1.c: 182:  while (0 == uart1TxBufferRemaining) {
 29830                           
 29831                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29832                           ;incstack = 0
 29833   017892  5019               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
 29834   017894  B4D8               	btfsc	status,2,c
 29835   017896  D7FD               	goto	__ptext18
 29836                           
 29837                           ;mcc_generated_files/uart1.c: 185:  if (0 == PIE3bits.U1TXIE) {
 29838   017898  0139               	movlb	57	; () banked
 29839   01789A  B993               	btfsc	147,4,b	;volatile
 29840   01789C  D005               	goto	l589
 29841                           
 29842                           ; BSR set to: 57
 29843                           ;mcc_generated_files/uart1.c: 186:   U1TXB = txData;
 29844                           ;stkvar	_txData @ sp[(0)+-1]
 29845   01789E  0EFF               	movlw	-1
 29846   0178A0  006F FF8F FDEA     	movff	plusw1,15850	;volatile
 29847                           
 29848                           ;mcc_generated_files/uart1.c: 187:  } else {
 29849   0178A6  D011               	goto	l8370
 29850   0178A8                     l589:
 29851                           
 29852                           ; BSR set to: 57
 29853                           ;mcc_generated_files/uart1.c: 188:   PIE3bits.U1TXIE = 0;
 29854   0178A8  9993               	bcf	147,4,b	;volatile
 29855                           
 29856                           ; BSR set to: 57
 29857                           ;mcc_generated_files/uart1.c: 189:   uart1TxBuffer[uart1TxHead++] = txData;
 29858                           ;stkvar	_txData @ sp[(0)+-1]
 29859   0178AA  0E40               	movlw	low _uart1TxBuffer
 29860   0178AC  241B               	addwf	_uart1TxHead^0,w,c	;volatile
 29861   0178AE  6ED9               	movwf	fsr2l,c
 29862   0178B0  6ADA               	clrf	fsr2h,c
 29863   0178B2  0E02               	movlw	high _uart1TxBuffer
 29864   0178B4  22DA               	addwfc	fsr2h,f,c
 29865   0178B6  0EFF               	movlw	-1
 29866   0178B8  006F FF8F FFDF     	movff	plusw1,indf2
 29867                           
 29868                           ; BSR set to: 57
 29869   0178BE  2A1B               	incf	_uart1TxHead^0,f,c	;volatile
 29870                           
 29871                           ; BSR set to: 57
 29872                           ;mcc_generated_files/uart1.c: 190:   if (sizeof(uart1TxBuffer) <= uart1TxHead) {
 29873   0178C0  0E3F               	movlw	63
 29874   0178C2  641B               	cpfsgt	_uart1TxHead^0,c
 29875   0178C4  D001               	goto	l8368
 29876                           
 29877                           ; BSR set to: 57
 29878                           ;mcc_generated_files/uart1.c: 191:    uart1TxHead = 0;
 29879   0178C6  6A1B               	clrf	_uart1TxHead^0,c	;volatile
 29880   0178C8                     l8368:
 29881                           
 29882                           ; BSR set to: 57
 29883                           ;mcc_generated_files/uart1.c: 193:   uart1TxBufferRemaining--;
 29884   0178C8  0619               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
 29885   0178CA                     l8370:
 29886                           
 29887                           ; BSR set to: 57
 29888                           ;mcc_generated_files/uart1.c: 195:  PIE3bits.U1TXIE = 1;
 29889   0178CA  8993               	bsf	147,4,b	;volatile
 29890                           
 29891                           ; BSR set to: 57
 29892   0178CC  92BE               	bcf	190,1,c	;volatile
 29893                           
 29894                           ; BSR set to: 57
 29895                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
 29896   0178CE  52E5               	movf	postdec1,f,c
 29897   0178D0  0012               	return		;funcret
 29898   0178D2                     __end_of_UART1_Write:
 29899                           	callstack 0
 29900                           
 29901 ;; *************** function _m_protocol *****************
 29902 ;; Defined at:
 29903 ;;		line 54 in file "gemsecs.c"
 29904 ;; Parameters:    Size  Location     Type
 29905 ;;  m_link          2  [STACK] PTR enum E17017
 29906 ;;		 -> V(387), 
 29907 ;; Auto vars:     Size  Location     Type
 29908 ;;  rxData          1  [STACK] unsigned char 
 29909 ;; Return value:  Size  Location     Type
 29910 ;;                  1  [STACK] enum E17295
 29911 ;; Registers used:
 29912 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 29913 ;; Tracked objects:
 29914 ;;		On entry : 0/3C
 29915 ;;		On exit  : 0/0
 29916 ;;		Unchanged: 0/0
 29917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29922 ;;Total ram usage:        0 bytes
 29923 ;; Hardware stack levels used: 1
 29924 ;; Hardware stack levels required when called: 14
 29925 ;; This function calls:
 29926 ;;		_StartTimer
 29927 ;;		_TimerDone
 29928 ;;		_UART1_Read
 29929 ;;		_UART1_is_rx_ready
 29930 ;;		_UART2_Read
 29931 ;;		_UART2_is_rx_ready
 29932 ;;		_WaitMs
 29933 ;;		_run_checksum
 29934 ;;		_secs_II_monitor_message
 29935 ;;		_secs_gem_state
 29936 ;; This function is called by:
 29937 ;;		_main
 29938 ;; This function uses a reentrant model
 29939 ;;
 29940                           
 29941                           	psect	text19
 29942   01229A                     __ptext19:
 29943                           	callstack 0
 29944   01229A                     _m_protocol:
 29945                           	callstack 0
 29946                           
 29947                           ; BSR set to: 57
 29948                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29949   01229A  52E6               	movf	postinc1,f,c
 29950                           
 29951                           ;gemsecs.c: 54: LINK_STATES m_protocol(LINK_STATES *m_link);gemsecs.c: 55: {;gemsecs.c: 
      +                          56:  uint8_t rxData;;gemsecs.c: 57:  static uint8_t rxData_l = 0, *b_block = (uint8_t*) 
      +                          & H254[0];;gemsecs.c: 59:  switch (*m_link) {
 29952                           
 29953                           ;incstack = 0
 29954   01229C  D326               	goto	l13576
 29955   01229E                     l13346:
 29956                           
 29957                           ;gemsecs.c: 61:   if (UART1_is_rx_ready()) {
 29958   01229E  EC46  F0C1         	call	_UART1_is_rx_ready	;wreg free
 29959   0122A2  5023               	movf	btemp^0,w,c
 29960   0122A4  B4D8               	btfsc	status,2,c
 29961   0122A6  D028               	goto	l13360
 29962                           
 29963                           ;gemsecs.c: 62:    rxData = UART1_Read();
 29964   0122A8  ECC6  F0BC         	call	_UART1_Read	;wreg free
 29965                           
 29966                           ;stkvar	_rxData @ sp[(-1)+0]
 29967   0122AC  0EFF               	movlw	-1
 29968   0122AE  0060  F08F  FFE3   	movff	btemp,plusw1
 29969                           
 29970                           ; BSR set to: 57
 29971                           ;gemsecs.c: 63:    if (rxData == 0x05) {
 29972                           ;stkvar	_rxData @ sp[(-1)+0]
 29973   0122B4  0EFF               	movlw	-1
 29974   0122B6  006F FF8C  F023    	movff	plusw1,btemp
 29975   0122BC  0E05               	movlw	5
 29976   0122BE  1823               	xorwf	btemp^0,w,c
 29977   0122C0  A4D8               	btfss	status,2,c
 29978   0122C2  D01A               	goto	l13360
 29979                           
 29980                           ; BSR set to: 57
 29981                           ;gemsecs.c: 64:     V.uart = 1;
 29982   0122C4  0E01               	movlw	1
 29983   0122C6  006F FFA0  FD97    	movff	wreg,_V+381	;volatile
 29984                           
 29985                           ; BSR set to: 57
 29986                           ;gemsecs.c: 65:     StartTimer(TMR_T2, 3000);
 29987   0122CC  0EB8               	movlw	184
 29988   0122CE  6EE6               	movwf	postinc1,c
 29989   0122D0  0E0B               	movlw	11
 29990   0122D2  6EE6               	movwf	postinc1,c
 29991   0122D4  0E02               	movlw	2
 29992   0122D6  6EE6               	movwf	postinc1,c
 29993   0122D8  EC02  F0BD         	call	_StartTimer	;wreg free
 29994                           
 29995                           ;gemsecs.c: 66:     V.error = LINK_ERROR_NONE;
 29996   0122DC  0E0A               	movlw	10
 29997   0122DE  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 29998                           
 29999                           ;gemsecs.c: 67:     *m_link = LINK_STATE_ENQ;
 30000                           ;stkvar	_m_link @ sp[(-1)+-2]
 30001   0122E4  0EFD               	movlw	-3
 30002   0122E6  006F FF8F FFD9     	movff	plusw1,fsr2l
 30003   0122EC  0EFE               	movlw	-2
 30004   0122EE  006F FF8F FFDA     	movff	plusw1,fsr2h
 30005   0122F4  0E01               	movlw	1
 30006   0122F6  6EDF               	movwf	indf2,c
 30007   0122F8                     l13360:
 30008                           
 30009                           ;gemsecs.c: 70:   if (UART2_is_rx_ready()) {
 30010   0122F8  EC43  F0C1         	call	_UART2_is_rx_ready	;wreg free
 30011   0122FC  5023               	movf	btemp^0,w,c
 30012   0122FE  B4D8               	btfsc	status,2,c
 30013   012300  D319               	goto	l13578
 30014                           
 30015                           ;gemsecs.c: 71:    rxData = UART2_Read();
 30016   012302  ECA8  F0BC         	call	_UART2_Read	;wreg free
 30017                           
 30018                           ;stkvar	_rxData @ sp[(-1)+0]
 30019   012306  0EFF               	movlw	-1
 30020   012308  0060  F08F  FFE3   	movff	btemp,plusw1
 30021                           
 30022                           ; BSR set to: 57
 30023                           ;gemsecs.c: 72:    if (rxData == 0x05) {
 30024                           ;stkvar	_rxData @ sp[(-1)+0]
 30025   01230E  0EFF               	movlw	-1
 30026   012310  006F FF8C  F023    	movff	plusw1,btemp
 30027   012316  0E05               	movlw	5
 30028   012318  1823               	xorwf	btemp^0,w,c
 30029   01231A  A4D8               	btfss	status,2,c
 30030   01231C  D30B               	goto	l13578
 30031                           
 30032                           ; BSR set to: 57
 30033                           ;gemsecs.c: 73:     V.uart = 2;
 30034   01231E  0E02               	movlw	2
 30035   012320  006F FFA0  FD97    	movff	wreg,_V+381	;volatile
 30036                           
 30037                           ; BSR set to: 57
 30038                           ;gemsecs.c: 74:     StartTimer(TMR_T2, 3000);
 30039   012326  0EB8               	movlw	184
 30040   012328  6EE6               	movwf	postinc1,c
 30041   01232A  0E0B               	movlw	11
 30042   01232C  6EE6               	movwf	postinc1,c
 30043   01232E  0E02               	movlw	2
 30044   012330  6EE6               	movwf	postinc1,c
 30045   012332  EC02  F0BD         	call	_StartTimer	;wreg free
 30046                           
 30047                           ;gemsecs.c: 75:     V.error = LINK_ERROR_NONE;
 30048   012336  0E0A               	movlw	10
 30049   012338  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 30050                           
 30051                           ;gemsecs.c: 76:     *m_link = LINK_STATE_ENQ;
 30052                           ;stkvar	_m_link @ sp[(-1)+-2]
 30053   01233E  0EFD               	movlw	-3
 30054   012340  006F FF8F FFD9     	movff	plusw1,fsr2l
 30055   012346  0EFE               	movlw	-2
 30056   012348  006F FF8F FFDA     	movff	plusw1,fsr2h
 30057   01234E  0E01               	movlw	1
 30058   012350  D2A0               	goto	L24
 30059   012352                     l1821:
 30060                           
 30061                           ;gemsecs.c: 81:   rxData_l = 0;
 30062   012352  6A0E               	clrf	m_protocol@rxData_l^0,c
 30063                           
 30064                           ;gemsecs.c: 82:   if (TimerDone(TMR_T2)) {
 30065   012354  0E02               	movlw	2
 30066   012356  6EE6               	movwf	postinc1,c
 30067   012358  ECAD  F0BF         	call	_TimerDone	;wreg free
 30068   01235C  5023               	movf	btemp^0,w,c
 30069   01235E  B4D8               	btfsc	status,2,c
 30070   012360  D01E               	goto	l13384
 30071                           
 30072                           ;gemsecs.c: 83:    V.error = LINK_ERROR_T2;
 30073   012362  0E0C               	movlw	12
 30074   012364  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 30075                           
 30076                           ;gemsecs.c: 84:    V.all_errors++;
 30077   01236A  EE23  F165         	lfsr	2,_V+331	;volatile
 30078   01236E  2ADE               	incf	postinc2,f,c
 30079   012370  0E00               	movlw	0
 30080   012372  22DD               	addwfc	postdec2,f,c
 30081                           
 30082                           ;gemsecs.c: 85:    V.timer_error++;
 30083   012374  EE23  F15B         	lfsr	2,_V+321	;volatile
 30084   012378  2ADE               	incf	postinc2,f,c
 30085   01237A  0E00               	movlw	0
 30086   01237C  22DD               	addwfc	postdec2,f,c
 30087                           
 30088                           ;gemsecs.c: 86:    V.failed_receive = 2;
 30089   01237E  EE23  F168         	lfsr	2,_V+334	;volatile
 30090   012382  50DF               	movf	223,w,c
 30091   012384  0BF0               	andlw	-16
 30092   012386  0902               	iorlw	2
 30093   012388  6EDF               	movwf	223,c
 30094                           
 30095                           ;gemsecs.c: 87:    *m_link = LINK_STATE_NAK;
 30096                           ;stkvar	_m_link @ sp[(-1)+-2]
 30097   01238A  0EFD               	movlw	-3
 30098   01238C  006F FF8F FFD9     	movff	plusw1,fsr2l
 30099   012392  0EFE               	movlw	-2
 30100   012394  006F FF8F FFDA     	movff	plusw1,fsr2h
 30101   01239A  0E05               	movlw	5
 30102   01239C  D27A               	goto	L24
 30103   01239E                     l13384:
 30104                           
 30105                           ;gemsecs.c: 89:    if (V.uart == 2 && UART1_is_rx_ready()) {
 30106   01239E  0063  F65F  FFE8   	movff	_V+381,wreg	;volatile
 30107   0123A4  0A02               	xorlw	2
 30108   0123A6  A4D8               	btfss	status,2,c
 30109   0123A8  D029               	goto	l13398
 30110   0123AA  EC46  F0C1         	call	_UART1_is_rx_ready	;wreg free
 30111   0123AE  5023               	movf	btemp^0,w,c
 30112   0123B0  B4D8               	btfsc	status,2,c
 30113   0123B2  D024               	goto	l13398
 30114                           
 30115                           ;gemsecs.c: 90:     rxData = UART1_Read();
 30116   0123B4  ECC6  F0BC         	call	_UART1_Read	;wreg free
 30117                           
 30118                           ;stkvar	_rxData @ sp[(-1)+0]
 30119   0123B8  0EFF               	movlw	-1
 30120   0123BA  0060  F08F  FFE3   	movff	btemp,plusw1
 30121                           
 30122                           ; BSR set to: 57
 30123                           ;gemsecs.c: 91:     if (rxData == 0x04) {
 30124                           ;stkvar	_rxData @ sp[(-1)+0]
 30125   0123C0  0EFF               	movlw	-1
 30126   0123C2  006F FF8C  F023    	movff	plusw1,btemp
 30127   0123C8  0E04               	movlw	4
 30128   0123CA  1823               	xorwf	btemp^0,w,c
 30129   0123CC  A4D8               	btfss	status,2,c
 30130   0123CE  D016               	goto	l13398
 30131                           
 30132                           ; BSR set to: 57
 30133                           ;gemsecs.c: 92:      StartTimer(TMR_T2, 3000);
 30134   0123D0  0EB8               	movlw	184
 30135   0123D2  6EE6               	movwf	postinc1,c
 30136   0123D4  0E0B               	movlw	11
 30137   0123D6  6EE6               	movwf	postinc1,c
 30138   0123D8  0E02               	movlw	2
 30139   0123DA  6EE6               	movwf	postinc1,c
 30140   0123DC  EC02  F0BD         	call	_StartTimer	;wreg free
 30141                           
 30142                           ;gemsecs.c: 93:      V.error = LINK_ERROR_NONE;
 30143   0123E0  0E0A               	movlw	10
 30144   0123E2  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 30145                           
 30146                           ;gemsecs.c: 94:      *m_link = LINK_STATE_EOT;
 30147                           ;stkvar	_m_link @ sp[(-1)+-2]
 30148   0123E8  0EFD               	movlw	-3
 30149   0123EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 30150   0123F0  0EFE               	movlw	-2
 30151   0123F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 30152   0123F8  0E02               	movlw	2
 30153   0123FA  6EDF               	movwf	indf2,c
 30154   0123FC                     l13398:
 30155                           
 30156                           ;gemsecs.c: 97:    if (V.uart == 1 && UART2_is_rx_ready()) {
 30157   0123FC  0063  F65F  FFE8   	movff	_V+381,wreg	;volatile
 30158   012402  0A01               	xorlw	1
 30159   012404  A4D8               	btfss	status,2,c
 30160   012406  D296               	goto	l13578
 30161   012408  EC43  F0C1         	call	_UART2_is_rx_ready	;wreg free
 30162   01240C  5023               	movf	btemp^0,w,c
 30163   01240E  B4D8               	btfsc	status,2,c
 30164   012410  D291               	goto	l13578
 30165                           
 30166                           ;gemsecs.c: 98:     rxData = UART2_Read();
 30167   012412  ECA8  F0BC         	call	_UART2_Read	;wreg free
 30168                           
 30169                           ;stkvar	_rxData @ sp[(-1)+0]
 30170   012416  0EFF               	movlw	-1
 30171   012418  0060  F08F  FFE3   	movff	btemp,plusw1
 30172                           
 30173                           ; BSR set to: 57
 30174                           ;gemsecs.c: 99:     if (rxData == 0x04) {
 30175                           ;stkvar	_rxData @ sp[(-1)+0]
 30176   01241E  0EFF               	movlw	-1
 30177   012420  006F FF8C  F023    	movff	plusw1,btemp
 30178   012426  0E04               	movlw	4
 30179   012428  1823               	xorwf	btemp^0,w,c
 30180   01242A  A4D8               	btfss	status,2,c
 30181   01242C  D283               	goto	l13578
 30182                           
 30183                           ; BSR set to: 57
 30184                           ;gemsecs.c: 100:      StartTimer(TMR_T2, 3000);
 30185   01242E  0EB8               	movlw	184
 30186   012430  6EE6               	movwf	postinc1,c
 30187   012432  0E0B               	movlw	11
 30188   012434  6EE6               	movwf	postinc1,c
 30189   012436  0E02               	movlw	2
 30190   012438  6EE6               	movwf	postinc1,c
 30191   01243A  EC02  F0BD         	call	_StartTimer	;wreg free
 30192                           
 30193                           ;gemsecs.c: 101:      V.error = LINK_ERROR_NONE;
 30194   01243E  0E0A               	movlw	10
 30195   012440  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 30196                           
 30197                           ;gemsecs.c: 102:      *m_link = LINK_STATE_EOT;
 30198                           ;stkvar	_m_link @ sp[(-1)+-2]
 30199   012446  0EFD               	movlw	-3
 30200   012448  006F FF8F FFD9     	movff	plusw1,fsr2l
 30201   01244E  0EFE               	movlw	-2
 30202   012450  006F FF8F FFDA     	movff	plusw1,fsr2h
 30203   012456  0E02               	movlw	2
 30204   012458  D21C               	goto	L24
 30205   01245A                     l13412:
 30206                           
 30207                           ;gemsecs.c: 108:   if (TimerDone(TMR_T2)) {
 30208   01245A  0E02               	movlw	2
 30209   01245C  6EE6               	movwf	postinc1,c
 30210   01245E  ECAD  F0BF         	call	_TimerDone	;wreg free
 30211   012462  5023               	movf	btemp^0,w,c
 30212   012464  B4D8               	btfsc	status,2,c
 30213   012466  D00C               	goto	l13422
 30214                           
 30215                           ;gemsecs.c: 109:    V.error = LINK_ERROR_T2;
 30216   012468  0E0C               	movlw	12
 30217   01246A  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 30218                           
 30219                           ;gemsecs.c: 110:    V.timer_error++;
 30220   012470  EE23  F15B         	lfsr	2,_V+321	;volatile
 30221   012474  2ADE               	incf	postinc2,f,c
 30222   012476  0E00               	movlw	0
 30223   012478  22DD               	addwfc	postdec2,f,c
 30224                           
 30225                           ;gemsecs.c: 111:    V.all_errors++;
 30226   01247A  EE23  F165         	lfsr	2,_V+331	;volatile
 30227   01247E  D77C               	goto	L22
 30228   012480                     l13422:
 30229                           
 30230                           ;gemsecs.c: 115:    if (V.uart == 1 && UART1_is_rx_ready()) {
 30231   012480  0063  F65F  FFE8   	movff	_V+381,wreg	;volatile
 30232   012486  0A01               	xorlw	1
 30233   012488  A4D8               	btfss	status,2,c
 30234   01248A  D0D7               	goto	l13480
 30235   01248C  EC46  F0C1         	call	_UART1_is_rx_ready	;wreg free
 30236   012490  5023               	movf	btemp^0,w,c
 30237   012492  B4D8               	btfsc	status,2,c
 30238   012494  D0D2               	goto	l13480
 30239                           
 30240                           ;gemsecs.c: 116:     rxData = UART1_Read();
 30241   012496  ECC6  F0BC         	call	_UART1_Read	;wreg free
 30242                           
 30243                           ;stkvar	_rxData @ sp[(-1)+0]
 30244   01249A  0EFF               	movlw	-1
 30245   01249C  0060  F08F  FFE3   	movff	btemp,plusw1
 30246                           
 30247                           ; BSR set to: 57
 30248                           ;gemsecs.c: 117:     if (rxData_l == 0) {
 30249   0124A2  500E               	movf	m_protocol@rxData_l^0,w,c
 30250   0124A4  A4D8               	btfss	status,2,c
 30251   0124A6  D018               	goto	l13438
 30252                           
 30253                           ; BSR set to: 57
 30254                           ;gemsecs.c: 118:      r_block.length = rxData;
 30255                           ;stkvar	_rxData @ sp[(-1)+0]
 30256   0124A8  0EFF               	movlw	-1
 30257   0124AA  006F FF8C  F086    	movff	plusw1,_r_block+12
 30258                           
 30259                           ; BSR set to: 57
 30260                           ;gemsecs.c: 119:      run_checksum(0, 1);
 30261   0124B0  0E01               	movlw	1
 30262   0124B2  6EE6               	movwf	postinc1,c
 30263   0124B4  0E00               	movlw	0
 30264   0124B6  6EE6               	movwf	postinc1,c
 30265   0124B8  EC9B  F0BF         	call	_run_checksum	;wreg free
 30266                           
 30267                           ;gemsecs.c: 120:      rxData_l++;
 30268   0124BC  2A0E               	incf	m_protocol@rxData_l^0,f,c
 30269                           
 30270                           ;gemsecs.c: 121:      b_block[sizeof(header254) - rxData_l] = rxData;
 30271                           ;stkvar	_rxData @ sp[(-1)+0]
 30272   0124BE  500E               	movf	m_protocol@rxData_l^0,w,c
 30273   0124C0  08D6               	sublw	low (_H254+257)
 30274   0124C2  6ED9               	movwf	fsr2l,c
 30275   0124C4  0E00               	movlw	0
 30276   0124C6  A0D8               	btfss	status,0,c
 30277   0124C8  2AE8               	incf	wreg,f,c
 30278   0124CA  080F               	sublw	high (_H254+257)
 30279   0124CC  6EDA               	movwf	fsr2h,c
 30280   0124CE  0EFF               	movlw	-1
 30281   0124D0  006F FF8F FFDF     	movff	plusw1,indf2
 30282                           
 30283                           ;gemsecs.c: 122:     } else {
 30284   0124D6  D0B1               	goto	l13480
 30285   0124D8                     l13438:
 30286                           
 30287                           ; BSR set to: 57
 30288                           ;gemsecs.c: 126:      if (rxData_l <= sizeof(block10))
 30289   0124D8  0E0B               	movlw	11
 30290   0124DA  600E               	cpfslt	m_protocol@rxData_l^0,c
 30291   0124DC  D00C               	goto	l13442
 30292                           
 30293                           ; BSR set to: 57
 30294                           ;gemsecs.c: 127:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
 30295                           ;stkvar	_rxData @ sp[(-1)+0]
 30296   0124DE  500E               	movf	m_protocol@rxData_l^0,w,c
 30297   0124E0  0819               	sublw	low (_H10+25)
 30298   0124E2  6ED9               	movwf	fsr2l,c
 30299   0124E4  0E00               	movlw	0
 30300   0124E6  A0D8               	btfss	status,0,c
 30301   0124E8  2AE8               	incf	wreg,f,c
 30302   0124EA  0801               	sublw	high (_H10+25)
 30303   0124EC  6EDA               	movwf	fsr2h,c
 30304   0124EE  0EFF               	movlw	-1
 30305   0124F0  006F FF8F FFDF     	movff	plusw1,indf2
 30306   0124F6                     l13442:
 30307                           
 30308                           ; BSR set to: 57
 30309                           ;gemsecs.c: 128:      if (rxData_l <= r_block.length)
 30310   0124F6  500E               	movf	m_protocol@rxData_l^0,w,c
 30311   0124F8  0100               	movlb	0	; () banked
 30312   0124FA  5D86               	subwf	(_r_block+12)& (0+255),w,b
 30313   0124FC  A0D8               	btfss	status,0,c
 30314   0124FE  D00D               	goto	l13446
 30315                           
 30316                           ; BSR set to: 0
 30317                           ;gemsecs.c: 129:       V.r_checksum = run_checksum(rxData, 0);
 30318   012500  0E00               	movlw	0
 30319   012502  6EE6               	movwf	postinc1,c
 30320                           
 30321                           ;stkvar	_rxData @ sp[(-2)+0]
 30322   012504  0EFE               	movlw	-2
 30323   012506  50E3               	movf	plusw1,w,c
 30324   012508  6EE6               	movwf	postinc1,c
 30325   01250A  EC9B  F0BF         	call	_run_checksum	;wreg free
 30326   01250E  0060  F08C  FD55   	movff	btemp,_V+315	;volatile
 30327   012514  0060  F090  FD56   	movff	btemp+1,_V+316	;volatile
 30328   01251A                     l13446:
 30329                           
 30330                           ;gemsecs.c: 131:      if (rxData_l == r_block.length + 1)
 30331   01251A  500E               	movf	m_protocol@rxData_l^0,w,c
 30332   01251C  6E2D               	movwf	(btemp+10)^0,c
 30333   01251E  6A2E               	clrf	(btemp+11)^0,c
 30334   012520  0100               	movlb	0	; () banked
 30335   012522  5186               	movf	(_r_block+12)& (0+255),w,b
 30336   012524  6E2B               	movwf	(btemp+8)^0,c
 30337   012526  6A2C               	clrf	(btemp+9)^0,c
 30338   012528  0E01               	movlw	1
 30339   01252A  262B               	addwf	(btemp+8)^0,f,c
 30340   01252C  0E00               	movlw	0
 30341   01252E  222C               	addwfc	(btemp+9)^0,f,c
 30342   012530  502D               	movf	(btemp+10)^0,w,c
 30343   012532  182B               	xorwf	(btemp+8)^0,w,c
 30344   012534  E109               	bnz	l13450
 30345   012536  502E               	movf	(btemp+11)^0,w,c
 30346   012538  182C               	xorwf	(btemp+9)^0,w,c
 30347   01253A  A4D8               	btfss	status,2,c
 30348   01253C  D005               	goto	l13450
 30349                           
 30350                           ; BSR set to: 0
 30351                           ;gemsecs.c: 132:       H10[1].checksum = (uint16_t) rxData << 8;
 30352                           ;stkvar	_rxData @ sp[(-1)+0]
 30353   01253E  0EFF               	movlw	-1
 30354   012540  50E3               	movf	plusw1,w,c
 30355   012542  0101               	movlb	1	; () banked
 30356   012544  6F0E               	movwf	(_H10+14)& (0+255),b
 30357   012546  6B0D               	clrf	(_H10+13)& (0+255),b
 30358   012548                     l13450:
 30359                           
 30360                           ;gemsecs.c: 133:      if (rxData_l == r_block.length + 2)
 30361   012548  500E               	movf	m_protocol@rxData_l^0,w,c
 30362   01254A  6E2D               	movwf	(btemp+10)^0,c
 30363   01254C  6A2E               	clrf	(btemp+11)^0,c
 30364   01254E  0100               	movlb	0	; () banked
 30365   012550  5186               	movf	(_r_block+12)& (0+255),w,b
 30366   012552  6E2B               	movwf	(btemp+8)^0,c
 30367   012554  6A2C               	clrf	(btemp+9)^0,c
 30368   012556  0E02               	movlw	2
 30369   012558  262B               	addwf	(btemp+8)^0,f,c
 30370   01255A  0E00               	movlw	0
 30371   01255C  222C               	addwfc	(btemp+9)^0,f,c
 30372   01255E  502D               	movf	(btemp+10)^0,w,c
 30373   012560  182B               	xorwf	(btemp+8)^0,w,c
 30374   012562  E10A               	bnz	l13454
 30375   012564  502E               	movf	(btemp+11)^0,w,c
 30376   012566  182C               	xorwf	(btemp+9)^0,w,c
 30377   012568  A4D8               	btfss	status,2,c
 30378   01256A  D006               	goto	l13454
 30379                           
 30380                           ; BSR set to: 0
 30381                           ;gemsecs.c: 134:       H10[1].checksum += rxData;
 30382                           ;stkvar	_rxData @ sp[(-1)+0]
 30383   01256C  0EFF               	movlw	-1
 30384   01256E  50E3               	movf	plusw1,w,c
 30385   012570  0101               	movlb	1	; () banked
 30386   012572  270D               	addwf	(_H10+13)& (0+255),f,b
 30387   012574  0E00               	movlw	0
 30388   012576  230E               	addwfc	(_H10+14)& (0+255),f,b
 30389   012578                     l13454:
 30390                           
 30391                           ;gemsecs.c: 136:      rxData_l++;
 30392   012578  2A0E               	incf	m_protocol@rxData_l^0,f,c
 30393                           
 30394                           ;gemsecs.c: 137:      b_block[sizeof(header254) - rxData_l] = rxData;
 30395                           ;stkvar	_rxData @ sp[(-1)+0]
 30396   01257A  500E               	movf	m_protocol@rxData_l^0,w,c
 30397   01257C  08D6               	sublw	low (_H254+257)
 30398   01257E  6ED9               	movwf	fsr2l,c
 30399   012580  0E00               	movlw	0
 30400   012582  A0D8               	btfss	status,0,c
 30401   012584  2AE8               	incf	wreg,f,c
 30402   012586  080F               	sublw	high (_H254+257)
 30403   012588  6EDA               	movwf	fsr2h,c
 30404   01258A  0EFF               	movlw	-1
 30405   01258C  006F FF8F FFDF     	movff	plusw1,indf2
 30406                           
 30407                           ;gemsecs.c: 138:      if (rxData_l > (r_block.length + 2)) {
 30408   012592  500E               	movf	m_protocol@rxData_l^0,w,c
 30409   012594  6E2D               	movwf	(btemp+10)^0,c
 30410   012596  6A2E               	clrf	(btemp+11)^0,c
 30411   012598  0100               	movlb	0	; () banked
 30412   01259A  5186               	movf	(_r_block+12)& (0+255),w,b
 30413   01259C  6E2B               	movwf	(btemp+8)^0,c
 30414   01259E  6A2C               	clrf	(btemp+9)^0,c
 30415   0125A0  0E02               	movlw	2
 30416   0125A2  262B               	addwf	(btemp+8)^0,f,c
 30417   0125A4  0E00               	movlw	0
 30418   0125A6  222C               	addwfc	(btemp+9)^0,f,c
 30419   0125A8  502D               	movf	(btemp+10)^0,w,c
 30420   0125AA  5C2B               	subwf	(btemp+8)^0,w,c
 30421   0125AC  502C               	movf	(btemp+9)^0,w,c
 30422   0125AE  0A80               	xorlw	128
 30423   0125B0  6E23               	movwf	btemp^0,c
 30424   0125B2  502E               	movf	(btemp+11)^0,w,c
 30425   0125B4  0A80               	xorlw	128
 30426   0125B6  5823               	subwfb	btemp^0,w,c
 30427   0125B8  B0D8               	btfsc	status,0,c
 30428   0125BA  D03F               	goto	l13480
 30429                           
 30430                           ; BSR set to: 0
 30431                           ;gemsecs.c: 139:       if (V.r_checksum == H10[1].checksum) {
 30432   0125BC  EE23  F155         	lfsr	2,_V+315	;volatile
 30433   0125C0  0101               	movlb	1	; () banked
 30434   0125C2  510D               	movf	(_H10+13)& (0+255),w,b
 30435   0125C4  18DE               	xorwf	postinc2,w,c
 30436   0125C6  E110               	bnz	l13466
 30437   0125C8  510E               	movf	(_H10+14)& (0+255),w,b
 30438   0125CA  18DE               	xorwf	postinc2,w,c
 30439   0125CC  A4D8               	btfss	status,2,c
 30440   0125CE  D00C               	goto	l13466
 30441                           
 30442                           ; BSR set to: 1
 30443                           ;gemsecs.c: 140:        *m_link = LINK_STATE_ACK;
 30444                           ;stkvar	_m_link @ sp[(-1)+-2]
 30445   0125D0  0EFD               	movlw	-3
 30446   0125D2  006F FF8F FFD9     	movff	plusw1,fsr2l
 30447   0125D8  0EFE               	movlw	-2
 30448   0125DA  006F FF8F FFDA     	movff	plusw1,fsr2h
 30449   0125E0  0E03               	movlw	3
 30450   0125E2  D02A               	goto	L23
 30451   0125E4                     l13464:
 30452   0125E4  ECC6  F0BC         	call	_UART1_Read	;wreg free
 30453   0125E8                     l13466:
 30454                           
 30455                           ;gemsecs.c: 142:        while (UART1_is_rx_ready())
 30456   0125E8  EC46  F0C1         	call	_UART1_is_rx_ready	;wreg free
 30457   0125EC  5023               	movf	btemp^0,w,c
 30458   0125EE  A4D8               	btfss	status,2,c
 30459   0125F0  D7F9               	goto	l13464
 30460                           
 30461                           ;gemsecs.c: 144:        WaitMs(500);
 30462   0125F2  0EF4               	movlw	244
 30463   0125F4  6EE6               	movwf	postinc1,c
 30464   0125F6  0E01               	movlw	1
 30465   0125F8  6EE6               	movwf	postinc1,c
 30466   0125FA  EC77  F0BD         	call	_WaitMs	;wreg free
 30467                           
 30468                           ;gemsecs.c: 145:        V.error = LINK_ERROR_CHECKSUM;
 30469   0125FE  0E0F               	movlw	15
 30470   012600  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 30471                           
 30472                           ;gemsecs.c: 146:        V.checksum_error++;
 30473   012606  EE23  F159         	lfsr	2,_V+319	;volatile
 30474   01260A  2ADE               	incf	postinc2,f,c
 30475   01260C  0E00               	movlw	0
 30476   01260E  22DD               	addwfc	postdec2,f,c
 30477                           
 30478                           ;gemsecs.c: 147:        V.all_errors++;
 30479   012610  EE23  F165         	lfsr	2,_V+331	;volatile
 30480   012614  2ADE               	incf	postinc2,f,c
 30481   012616  0E00               	movlw	0
 30482   012618  22DD               	addwfc	postdec2,f,c
 30483                           
 30484                           ;gemsecs.c: 148:        V.failed_receive = 3;
 30485   01261A  EE23  F168         	lfsr	2,_V+334	;volatile
 30486   01261E  50DF               	movf	223,w,c
 30487   012620  0BF0               	andlw	-16
 30488   012622  0903               	iorlw	3
 30489   012624  6EDF               	movwf	223,c
 30490                           
 30491                           ;gemsecs.c: 149:        *m_link = LINK_STATE_NAK;
 30492                           ;stkvar	_m_link @ sp[(-1)+-2]
 30493   012626  0EFD               	movlw	-3
 30494   012628  006F FF8F FFD9     	movff	plusw1,fsr2l
 30495   01262E  0EFE               	movlw	-2
 30496   012630  006F FF8F FFDA     	movff	plusw1,fsr2h
 30497   012636  0E05               	movlw	5
 30498   012638                     L23:
 30499   012638  6EDF               	movwf	indf2,c
 30500   01263A                     l13480:
 30501                           
 30502                           ;gemsecs.c: 155:    if (V.uart == 2 && UART2_is_rx_ready()) {
 30503   01263A  0063  F65F  FFE8   	movff	_V+381,wreg	;volatile
 30504   012640  0A02               	xorlw	2
 30505   012642  A4D8               	btfss	status,2,c
 30506   012644  D177               	goto	l13578
 30507   012646  EC43  F0C1         	call	_UART2_is_rx_ready	;wreg free
 30508   01264A  5023               	movf	btemp^0,w,c
 30509   01264C  B4D8               	btfsc	status,2,c
 30510   01264E  D172               	goto	l13578
 30511                           
 30512                           ;gemsecs.c: 156:     rxData = UART2_Read();
 30513   012650  ECA8  F0BC         	call	_UART2_Read	;wreg free
 30514                           
 30515                           ;stkvar	_rxData @ sp[(-1)+0]
 30516   012654  0EFF               	movlw	-1
 30517   012656  0060  F08F  FFE3   	movff	btemp,plusw1
 30518                           
 30519                           ; BSR set to: 57
 30520                           ;gemsecs.c: 157:     if (rxData_l == 0) {
 30521   01265C  500E               	movf	m_protocol@rxData_l^0,w,c
 30522   01265E  A4D8               	btfss	status,2,c
 30523   012660  D018               	goto	l13496
 30524                           
 30525                           ; BSR set to: 57
 30526                           ;gemsecs.c: 158:      r_block.length = rxData;
 30527                           ;stkvar	_rxData @ sp[(-1)+0]
 30528   012662  0EFF               	movlw	-1
 30529   012664  006F FF8C  F086    	movff	plusw1,_r_block+12
 30530                           
 30531                           ; BSR set to: 57
 30532                           ;gemsecs.c: 159:      run_checksum(0, 1);
 30533   01266A  0E01               	movlw	1
 30534   01266C  6EE6               	movwf	postinc1,c
 30535   01266E  0E00               	movlw	0
 30536   012670  6EE6               	movwf	postinc1,c
 30537   012672  EC9B  F0BF         	call	_run_checksum	;wreg free
 30538                           
 30539                           ;gemsecs.c: 160:      rxData_l++;
 30540   012676  2A0E               	incf	m_protocol@rxData_l^0,f,c
 30541                           
 30542                           ;gemsecs.c: 161:      b_block[sizeof(header254) - rxData_l] = rxData;
 30543                           ;stkvar	_rxData @ sp[(-1)+0]
 30544   012678  500E               	movf	m_protocol@rxData_l^0,w,c
 30545   01267A  08D6               	sublw	low (_H254+257)
 30546   01267C  6ED9               	movwf	fsr2l,c
 30547   01267E  0E00               	movlw	0
 30548   012680  A0D8               	btfss	status,0,c
 30549   012682  2AE8               	incf	wreg,f,c
 30550   012684  080F               	sublw	high (_H254+257)
 30551   012686  6EDA               	movwf	fsr2h,c
 30552   012688  0EFF               	movlw	-1
 30553   01268A  006F FF8F FFDF     	movff	plusw1,indf2
 30554                           
 30555                           ;gemsecs.c: 162:     } else {
 30556   012690  D151               	goto	l13578
 30557   012692                     l13496:
 30558                           
 30559                           ; BSR set to: 57
 30560                           ;gemsecs.c: 166:      if (rxData_l <= sizeof(block10))
 30561   012692  0E0B               	movlw	11
 30562   012694  600E               	cpfslt	m_protocol@rxData_l^0,c
 30563   012696  D00C               	goto	l13500
 30564                           
 30565                           ; BSR set to: 57
 30566                           ;gemsecs.c: 167:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
 30567                           ;stkvar	_rxData @ sp[(-1)+0]
 30568   012698  500E               	movf	m_protocol@rxData_l^0,w,c
 30569   01269A  0819               	sublw	low (_H10+25)
 30570   01269C  6ED9               	movwf	fsr2l,c
 30571   01269E  0E00               	movlw	0
 30572   0126A0  A0D8               	btfss	status,0,c
 30573   0126A2  2AE8               	incf	wreg,f,c
 30574   0126A4  0801               	sublw	high (_H10+25)
 30575   0126A6  6EDA               	movwf	fsr2h,c
 30576   0126A8  0EFF               	movlw	-1
 30577   0126AA  006F FF8F FFDF     	movff	plusw1,indf2
 30578   0126B0                     l13500:
 30579                           
 30580                           ; BSR set to: 57
 30581                           ;gemsecs.c: 168:      if (rxData_l <= r_block.length)
 30582   0126B0  500E               	movf	m_protocol@rxData_l^0,w,c
 30583   0126B2  0100               	movlb	0	; () banked
 30584   0126B4  5D86               	subwf	(_r_block+12)& (0+255),w,b
 30585   0126B6  A0D8               	btfss	status,0,c
 30586   0126B8  D00D               	goto	l13504
 30587                           
 30588                           ; BSR set to: 0
 30589                           ;gemsecs.c: 169:       V.r_checksum = run_checksum(rxData, 0);
 30590   0126BA  0E00               	movlw	0
 30591   0126BC  6EE6               	movwf	postinc1,c
 30592                           
 30593                           ;stkvar	_rxData @ sp[(-2)+0]
 30594   0126BE  0EFE               	movlw	-2
 30595   0126C0  50E3               	movf	plusw1,w,c
 30596   0126C2  6EE6               	movwf	postinc1,c
 30597   0126C4  EC9B  F0BF         	call	_run_checksum	;wreg free
 30598   0126C8  0060  F08C  FD55   	movff	btemp,_V+315	;volatile
 30599   0126CE  0060  F090  FD56   	movff	btemp+1,_V+316	;volatile
 30600   0126D4                     l13504:
 30601                           
 30602                           ;gemsecs.c: 171:      if (rxData_l == r_block.length + 1)
 30603   0126D4  500E               	movf	m_protocol@rxData_l^0,w,c
 30604   0126D6  6E2D               	movwf	(btemp+10)^0,c
 30605   0126D8  6A2E               	clrf	(btemp+11)^0,c
 30606   0126DA  0100               	movlb	0	; () banked
 30607   0126DC  5186               	movf	(_r_block+12)& (0+255),w,b
 30608   0126DE  6E2B               	movwf	(btemp+8)^0,c
 30609   0126E0  6A2C               	clrf	(btemp+9)^0,c
 30610   0126E2  0E01               	movlw	1
 30611   0126E4  262B               	addwf	(btemp+8)^0,f,c
 30612   0126E6  0E00               	movlw	0
 30613   0126E8  222C               	addwfc	(btemp+9)^0,f,c
 30614   0126EA  502D               	movf	(btemp+10)^0,w,c
 30615   0126EC  182B               	xorwf	(btemp+8)^0,w,c
 30616   0126EE  E109               	bnz	l13508
 30617   0126F0  502E               	movf	(btemp+11)^0,w,c
 30618   0126F2  182C               	xorwf	(btemp+9)^0,w,c
 30619   0126F4  A4D8               	btfss	status,2,c
 30620   0126F6  D005               	goto	l13508
 30621                           
 30622                           ; BSR set to: 0
 30623                           ;gemsecs.c: 172:       H10[1].checksum = (uint16_t) rxData << 8;
 30624                           ;stkvar	_rxData @ sp[(-1)+0]
 30625   0126F8  0EFF               	movlw	-1
 30626   0126FA  50E3               	movf	plusw1,w,c
 30627   0126FC  0101               	movlb	1	; () banked
 30628   0126FE  6F0E               	movwf	(_H10+14)& (0+255),b
 30629   012700  6B0D               	clrf	(_H10+13)& (0+255),b
 30630   012702                     l13508:
 30631                           
 30632                           ;gemsecs.c: 173:      if (rxData_l == r_block.length + 2)
 30633   012702  500E               	movf	m_protocol@rxData_l^0,w,c
 30634   012704  6E2D               	movwf	(btemp+10)^0,c
 30635   012706  6A2E               	clrf	(btemp+11)^0,c
 30636   012708  0100               	movlb	0	; () banked
 30637   01270A  5186               	movf	(_r_block+12)& (0+255),w,b
 30638   01270C  6E2B               	movwf	(btemp+8)^0,c
 30639   01270E  6A2C               	clrf	(btemp+9)^0,c
 30640   012710  0E02               	movlw	2
 30641   012712  262B               	addwf	(btemp+8)^0,f,c
 30642   012714  0E00               	movlw	0
 30643   012716  222C               	addwfc	(btemp+9)^0,f,c
 30644   012718  502D               	movf	(btemp+10)^0,w,c
 30645   01271A  182B               	xorwf	(btemp+8)^0,w,c
 30646   01271C  E10A               	bnz	l13512
 30647   01271E  502E               	movf	(btemp+11)^0,w,c
 30648   012720  182C               	xorwf	(btemp+9)^0,w,c
 30649   012722  A4D8               	btfss	status,2,c
 30650   012724  D006               	goto	l13512
 30651                           
 30652                           ; BSR set to: 0
 30653                           ;gemsecs.c: 174:       H10[1].checksum += rxData;
 30654                           ;stkvar	_rxData @ sp[(-1)+0]
 30655   012726  0EFF               	movlw	-1
 30656   012728  50E3               	movf	plusw1,w,c
 30657   01272A  0101               	movlb	1	; () banked
 30658   01272C  270D               	addwf	(_H10+13)& (0+255),f,b
 30659   01272E  0E00               	movlw	0
 30660   012730  230E               	addwfc	(_H10+14)& (0+255),f,b
 30661   012732                     l13512:
 30662                           
 30663                           ;gemsecs.c: 176:      rxData_l++;
 30664   012732  2A0E               	incf	m_protocol@rxData_l^0,f,c
 30665                           
 30666                           ;gemsecs.c: 177:      b_block[sizeof(header254) - rxData_l] = rxData;
 30667                           ;stkvar	_rxData @ sp[(-1)+0]
 30668   012734  500E               	movf	m_protocol@rxData_l^0,w,c
 30669   012736  08D6               	sublw	low (_H254+257)
 30670   012738  6ED9               	movwf	fsr2l,c
 30671   01273A  0E00               	movlw	0
 30672   01273C  A0D8               	btfss	status,0,c
 30673   01273E  2AE8               	incf	wreg,f,c
 30674   012740  080F               	sublw	high (_H254+257)
 30675   012742  6EDA               	movwf	fsr2h,c
 30676   012744  0EFF               	movlw	-1
 30677   012746  006F FF8F FFDF     	movff	plusw1,indf2
 30678                           
 30679                           ;gemsecs.c: 178:      if (rxData_l > (r_block.length + 2)) {
 30680   01274C  500E               	movf	m_protocol@rxData_l^0,w,c
 30681   01274E  6E2D               	movwf	(btemp+10)^0,c
 30682   012750  6A2E               	clrf	(btemp+11)^0,c
 30683   012752  0100               	movlb	0	; () banked
 30684   012754  5186               	movf	(_r_block+12)& (0+255),w,b
 30685   012756  6E2B               	movwf	(btemp+8)^0,c
 30686   012758  6A2C               	clrf	(btemp+9)^0,c
 30687   01275A  0E02               	movlw	2
 30688   01275C  262B               	addwf	(btemp+8)^0,f,c
 30689   01275E  0E00               	movlw	0
 30690   012760  222C               	addwfc	(btemp+9)^0,f,c
 30691   012762  502D               	movf	(btemp+10)^0,w,c
 30692   012764  5C2B               	subwf	(btemp+8)^0,w,c
 30693   012766  502C               	movf	(btemp+9)^0,w,c
 30694   012768  0A80               	xorlw	128
 30695   01276A  6E23               	movwf	btemp^0,c
 30696   01276C  502E               	movf	(btemp+11)^0,w,c
 30697   01276E  0A80               	xorlw	128
 30698   012770  5823               	subwfb	btemp^0,w,c
 30699   012772  B0D8               	btfsc	status,0,c
 30700   012774  D0DF               	goto	l13578
 30701                           
 30702                           ; BSR set to: 0
 30703                           ;gemsecs.c: 179:       if (V.r_checksum == H10[1].checksum) {
 30704   012776  EE23  F155         	lfsr	2,_V+315	;volatile
 30705   01277A  0101               	movlb	1	; () banked
 30706   01277C  510D               	movf	(_H10+13)& (0+255),w,b
 30707   01277E  18DE               	xorwf	postinc2,w,c
 30708   012780  E110               	bnz	l13524
 30709   012782  510E               	movf	(_H10+14)& (0+255),w,b
 30710   012784  18DE               	xorwf	postinc2,w,c
 30711   012786  A4D8               	btfss	status,2,c
 30712   012788  D00C               	goto	l13524
 30713                           
 30714                           ; BSR set to: 1
 30715                           ;gemsecs.c: 180:        *m_link = LINK_STATE_ACK;
 30716                           ;stkvar	_m_link @ sp[(-1)+-2]
 30717   01278A  0EFD               	movlw	-3
 30718   01278C  006F FF8F FFD9     	movff	plusw1,fsr2l
 30719   012792  0EFE               	movlw	-2
 30720   012794  006F FF8F FFDA     	movff	plusw1,fsr2h
 30721   01279A  0E03               	movlw	3
 30722   01279C  D07A               	goto	L24
 30723   01279E                     l13522:
 30724   01279E  ECA8  F0BC         	call	_UART2_Read	;wreg free
 30725   0127A2                     l13524:
 30726                           
 30727                           ;gemsecs.c: 182:        while (UART2_is_rx_ready())
 30728   0127A2  EC43  F0C1         	call	_UART2_is_rx_ready	;wreg free
 30729   0127A6  5023               	movf	btemp^0,w,c
 30730   0127A8  A4D8               	btfss	status,2,c
 30731   0127AA  D7F9               	goto	l13522
 30732                           
 30733                           ;gemsecs.c: 184:        WaitMs(500);
 30734   0127AC  0EF4               	movlw	244
 30735   0127AE  6EE6               	movwf	postinc1,c
 30736   0127B0  0E01               	movlw	1
 30737   0127B2  6EE6               	movwf	postinc1,c
 30738   0127B4  EC77  F0BD         	call	_WaitMs	;wreg free
 30739                           
 30740                           ;gemsecs.c: 185:        V.error = LINK_ERROR_CHECKSUM;
 30741   0127B8  0E0F               	movlw	15
 30742   0127BA  006F FFA0  FD4F    	movff	wreg,_V+309	;volatile
 30743                           
 30744                           ;gemsecs.c: 186:        V.checksum_error++;
 30745   0127C0  EE23  F159         	lfsr	2,_V+319	;volatile
 30746   0127C4  2ADE               	incf	postinc2,f,c
 30747   0127C6  0E00               	movlw	0
 30748   0127C8  22DD               	addwfc	postdec2,f,c
 30749                           
 30750                           ;gemsecs.c: 187:        V.all_errors++;
 30751   0127CA  EE23  F165         	lfsr	2,_V+331	;volatile
 30752   0127CE  2ADE               	incf	postinc2,f,c
 30753   0127D0  0E00               	movlw	0
 30754   0127D2  22DD               	addwfc	postdec2,f,c
 30755                           
 30756                           ;gemsecs.c: 188:        V.failed_receive = 4;
 30757   0127D4  EE23  F168         	lfsr	2,_V+334	;volatile
 30758   0127D8  50DF               	movf	223,w,c
 30759   0127DA  0BF0               	andlw	-16
 30760   0127DC  0904               	iorlw	4
 30761   0127DE  D5D4               	goto	L25
 30762   0127E0                     l13538:
 30763                           
 30764                           ;gemsecs.c: 197:   V.stream = H10[1].block.block.stream;
 30765   0127E0  0101               	movlb	1	; () banked
 30766   0127E2  5116               	movf	(_H10+22)& (0+255),w,b
 30767   0127E4  0B7F               	andlw	127
 30768   0127E6  6E2E               	movwf	(btemp+11)^0,c
 30769   0127E8  0060  F0B8  FD4D   	movff	btemp+11,_V+307	;volatile
 30770                           
 30771                           ; BSR set to: 1
 30772                           ;gemsecs.c: 198:   V.function = H10[1].block.block.function;
 30773   0127EE  EE23  F14E         	lfsr	2,_V+308	;volatile
 30774   0127F2  0060  F457  FFDF   	movff	_H10+21,indf2
 30775                           
 30776                           ; BSR set to: 1
 30777                           ;gemsecs.c: 199:   V.systemb = H10[1].block.block.systemb;
 30778   0127F8  EE20  F10F         	lfsr	2,_H10+15
 30779   0127FC  006F FF78  FD45    	movff	postinc2,_V+299	;volatile
 30780   012802  006F FF78  FD46    	movff	postinc2,_V+300	;volatile
 30781   012808  006F FF78  FD47    	movff	postinc2,_V+301	;volatile
 30782   01280E  006F FF74  FD48    	movff	postdec2,_V+302	;volatile
 30783                           
 30784                           ; BSR set to: 1
 30785                           ;gemsecs.c: 200:   V.rbit = H10[1].block.block.rbit;
 30786   012814  EE23  F167         	lfsr	2,_V+333	;volatile
 30787   012818  BF18               	btfsc	(_H10+24)& (0+255),7,b
 30788   01281A  D002               	bra	u10145
 30789   01281C  90DF               	bcf	indf2,0,c
 30790   01281E  D001               	bra	u10146
 30791   012820                     u10145:
 30792   012820  80DF               	bsf	indf2,0,c
 30793   012822                     u10146:
 30794                           
 30795                           ;gemsecs.c: 201:   V.wbit = H10[1].block.block.wbit;
 30796   012822  EE23  F167         	lfsr	2,_V+333	;volatile
 30797   012826  0101               	movlb	1	; () banked
 30798   012828  BF16               	btfsc	(_H10+22)& (0+255),7,b
 30799   01282A  D002               	bra	u10155
 30800   01282C  92DF               	bcf	indf2,1,c
 30801   01282E  D001               	bra	u10156
 30802   012830                     u10155:
 30803   012830  82DF               	bsf	indf2,1,c
 30804   012832                     u10156:
 30805                           
 30806                           ;gemsecs.c: 202:   V.ebit = H10[1].block.block.ebit;
 30807   012832  EE23  F167         	lfsr	2,_V+333	;volatile
 30808   012836  0101               	movlb	1	; () banked
 30809   012838  BF14               	btfsc	(_H10+20)& (0+255),7,b
 30810   01283A  D002               	bra	u10165
 30811   01283C  94DF               	bcf	indf2,2,c
 30812   01283E  D001               	bra	u10166
 30813   012840                     u10165:
 30814   012840  84DF               	bsf	indf2,2,c
 30815   012842                     u10166:
 30816                           
 30817                           ;gemsecs.c: 203:   V.failed_receive = 0;
 30818   012842  EE23  F168         	lfsr	2,_V+334	;volatile
 30819   012846  0EF0               	movlw	-16
 30820   012848  16DF               	andwf	223,f,c
 30821                           
 30822                           ;gemsecs.c: 204:   secs_II_monitor_message(V.stream, V.function, 1000);
 30823   01284A  0EE8               	movlw	232
 30824   01284C  6EE6               	movwf	postinc1,c
 30825   01284E  0E03               	movlw	3
 30826   012850  6EE6               	movwf	postinc1,c
 30827   012852  EE23  F14E         	lfsr	2,_V+308	;volatile
 30828   012856  50DF               	movf	indf2,w,c
 30829   012858  6EE6               	movwf	postinc1,c
 30830   01285A  EE23  F14D         	lfsr	2,_V+307	;volatile
 30831   01285E  50DF               	movf	indf2,w,c
 30832   012860  6EE6               	movwf	postinc1,c
 30833   012862  EC73  F0B0         	call	_secs_II_monitor_message	;wreg free
 30834                           
 30835                           ;gemsecs.c: 205:   V.g_state = secs_gem_state(V.stream, V.function);
 30836   012866  EE23  F14E         	lfsr	2,_V+308	;volatile
 30837   01286A  50DF               	movf	indf2,w,c
 30838   01286C  6EE6               	movwf	postinc1,c
 30839   01286E  EE23  F14D         	lfsr	2,_V+307	;volatile
 30840   012872  50DF               	movf	indf2,w,c
 30841   012874  6EE6               	movwf	postinc1,c
 30842   012876  EC07  F0A9         	call	_secs_gem_state	;wreg free
 30843   01287A  0060  F08C  FC1C   	movff	btemp,_V+2	;volatile
 30844                           
 30845                           ;gemsecs.c: 206:   *m_link = LINK_STATE_DONE;
 30846                           ;stkvar	_m_link @ sp[(-1)+-2]
 30847   012880  0EFD               	movlw	-3
 30848   012882  006F FF8F FFD9     	movff	plusw1,fsr2l
 30849   012888  0EFE               	movlw	-2
 30850   01288A  006F FF8F FFDA     	movff	plusw1,fsr2h
 30851   012890  0E04               	movlw	4
 30852   012892                     L24:
 30853   012892  6EDF               	movwf	indf2,c
 30854                           
 30855                           ;gemsecs.c: 207:   break;
 30856   012894  D04F               	goto	l13578
 30857   012896                     l13558:
 30858                           
 30859                           ;gemsecs.c: 209:   *m_link = LINK_STATE_ERROR;
 30860                           ;stkvar	_m_link @ sp[(-1)+-2]
 30861   012896  0EFD               	movlw	-3
 30862   012898  006F FF8F FFD9     	movff	plusw1,fsr2l
 30863   01289E  0EFE               	movlw	-2
 30864   0128A0  006F FF8F FFDA     	movff	plusw1,fsr2h
 30865   0128A6  0E06               	movlw	6
 30866   0128A8  6EDF               	movwf	indf2,c
 30867                           
 30868                           ;gemsecs.c: 210:   V.all_errors++;
 30869   0128AA  EE23  F165         	lfsr	2,_V+331	;volatile
 30870   0128AE  2ADE               	incf	postinc2,f,c
 30871   0128B0  0E00               	movlw	0
 30872   0128B2  22DD               	addwfc	postdec2,f,c
 30873                           
 30874                           ;gemsecs.c: 211:   while ((uart1RxCount)) {
 30875   0128B4  D002               	goto	l13564
 30876   0128B6                     l13562:
 30877                           
 30878                           ;gemsecs.c: 212:    UART1_Read();
 30879   0128B6  ECC6  F0BC         	call	_UART1_Read	;wreg free
 30880   0128BA                     l13564:
 30881                           
 30882                           ;gemsecs.c: 211:   while ((uart1RxCount)) {
 30883   0128BA  5016               	movf	_uart1RxCount^0,w,c	;volatile
 30884   0128BC  B4D8               	btfsc	status,2,c
 30885   0128BE  D003               	goto	l13568
 30886   0128C0  D7FA               	goto	l13562
 30887   0128C2                     l13566:
 30888                           
 30889                           ;gemsecs.c: 215:    UART2_Read();
 30890   0128C2  ECA8  F0BC         	call	_UART2_Read	;wreg free
 30891   0128C6                     l13568:
 30892                           
 30893                           ;gemsecs.c: 214:   while ((uart2RxCount)) {
 30894   0128C6  5010               	movf	_uart2RxCount^0,w,c	;volatile
 30895   0128C8  B4D8               	btfsc	status,2,c
 30896   0128CA  D034               	goto	l13578
 30897   0128CC  D7FA               	goto	l13566
 30898   0128CE                     l13570:
 30899                           
 30900                           ;gemsecs.c: 221:   V.failed_receive = 0;
 30901   0128CE  EE23  F168         	lfsr	2,_V+334	;volatile
 30902   0128D2  0EF0               	movlw	-16
 30903   0128D4  16DF               	andwf	223,f,c
 30904   0128D6                     l13572:
 30905                           
 30906                           ;gemsecs.c: 223:   *m_link = LINK_STATE_IDLE;
 30907                           ;stkvar	_m_link @ sp[(-1)+-2]
 30908   0128D6  0EFD               	movlw	-3
 30909   0128D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 30910   0128DE  0EFE               	movlw	-2
 30911   0128E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 30912   0128E6  6ADF               	clrf	indf2,c
 30913                           
 30914                           ;gemsecs.c: 224:   break;
 30915   0128E8  D025               	goto	l13578
 30916   0128EA                     l13576:
 30917                           
 30918                           ;stkvar	_m_link @ sp[(-1)+-2]
 30919   0128EA  0EFD               	movlw	-3
 30920   0128EC  006F FF8F FFD9     	movff	plusw1,fsr2l
 30921   0128F2  0EFE               	movlw	-2
 30922   0128F4  006F FF8F FFDA     	movff	plusw1,fsr2h
 30923   0128FA  50DF               	movf	indf2,w,c
 30924   0128FC  6E2D               	movwf	(btemp+10)^0,c
 30925   0128FE  6A2E               	clrf	(btemp+11)^0,c
 30926                           
 30927                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30928                           ; Switch size 1, requested type "simple"
 30929                           ; Number of cases is 1, Range of values is 0 to 0
 30930                           ; switch strategies available:
 30931                           ; Name         Instructions Cycles
 30932                           ; simple_byte            4     3 (average)
 30933                           ;	Chosen strategy is simple_byte
 30934   012900  502E               	movf	(btemp+11)^0,w,c
 30935   012902  0A00               	xorlw	0	; case 0
 30936   012904  A4D8               	btfss	status,2,c
 30937   012906  D7E7               	goto	l13572
 30938                           
 30939                           ; Switch size 1, requested type "simple"
 30940                           ; Number of cases is 7, Range of values is 0 to 6
 30941                           ; switch strategies available:
 30942                           ; Name         Instructions Cycles
 30943                           ; simple_byte           22    12 (average)
 30944                           ;	Chosen strategy is simple_byte
 30945   012908  502D               	movf	(btemp+10)^0,w,c
 30946   01290A  0A00               	xorlw	0	; case 0
 30947   01290C  B4D8               	btfsc	status,2,c
 30948   01290E  D4C7               	goto	l13346
 30949   012910  0A01               	xorlw	1	; case 1
 30950   012912  B4D8               	btfsc	status,2,c
 30951   012914  D51E               	goto	l1821
 30952   012916  0A03               	xorlw	3	; case 2
 30953   012918  B4D8               	btfsc	status,2,c
 30954   01291A  D59F               	goto	l13412
 30955   01291C  0A01               	xorlw	1	; case 3
 30956   01291E  B4D8               	btfsc	status,2,c
 30957   012920  D75F               	goto	l13538
 30958   012922  0A07               	xorlw	7	; case 4
 30959   012924  B4D8               	btfsc	status,2,c
 30960   012926  D7D3               	goto	l13570
 30961   012928  0A01               	xorlw	1	; case 5
 30962   01292A  B4D8               	btfsc	status,2,c
 30963   01292C  D7B4               	goto	l13558
 30964   01292E  0A03               	xorlw	3	; case 6
 30965   012930  A4D8               	btfss	status,2,c
 30966   012932  D7D1               	goto	l13572
 30967   012934                     l13578:
 30968                           
 30969                           ;gemsecs.c: 227:  return *m_link;
 30970                           ;stkvar	_m_link @ sp[(-1)+-2]
 30971   012934  0EFD               	movlw	-3
 30972   012936  006F FF8F FFD9     	movff	plusw1,fsr2l
 30973   01293C  0EFE               	movlw	-2
 30974   01293E  006F FF8F FFDA     	movff	plusw1,fsr2h
 30975   012944  50DF               	movf	indf2,w,c
 30976   012946  6E23               	movwf	btemp^0,c
 30977                           
 30978                           ; _m_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
 30979   012948  52E5               	movf	postdec1,f,c
 30980   01294A  52E5               	movf	postdec1,f,c
 30981   01294C  52E5               	movf	postdec1,f,c
 30982   01294E  0012               	return		;funcret
 30983   012950                     __end_of_m_protocol:
 30984                           	callstack 0
 30985                           
 30986 ;; *************** function _secs_gem_state *****************
 30987 ;; Defined at:
 30988 ;;		line 1257 in file "gemsecs.c"
 30989 ;; Parameters:    Size  Location     Type
 30990 ;;  stream          1  [STACK] const unsigned char 
 30991 ;;  function        1  [STACK] const unsigned char 
 30992 ;; Auto vars:     Size  Location     Type
 30993 ;;		None
 30994 ;; Return value:  Size  Location     Type
 30995 ;;                  1  [STACK] enum E17003
 30996 ;; Registers used:
 30997 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 30998 ;; Tracked objects:
 30999 ;;		On entry : 0/1
 31000 ;;		On exit  : 0/0
 31001 ;;		Unchanged: 0/0
 31002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31007 ;;Total ram usage:        0 bytes
 31008 ;; Hardware stack levels used: 1
 31009 ;; Hardware stack levels required when called: 13
 31010 ;; This function calls:
 31011 ;;		_StartTimer
 31012 ;;		_TimerDone
 31013 ;;		_format_display_text
 31014 ;;		_sequence_messages
 31015 ;;		_set_display_info
 31016 ;;		_terminal_format
 31017 ;; This function is called by:
 31018 ;;		_m_protocol
 31019 ;;		_r_protocol
 31020 ;; This function uses a reentrant model
 31021 ;;
 31022                           
 31023                           	psect	text20
 31024   01520E                     __ptext20:
 31025                           	callstack 0
 31026   01520E                     _secs_gem_state:
 31027                           	callstack 16
 31028                           
 31029                           ;gemsecs.c: 1257: GEM_STATES secs_gem_state(const uint8_t stream, const uint8_t function
      +                          );gemsecs.c: 1258: {;gemsecs.c: 1259:  static GEM_STATES block = GEM_STATE_DISABLE;;gems
      +                          ecs.c: 1260:  static GEM_EQUIP equipment = GEM_GENERIC;;gemsecs.c: 1262:  switch (stream
      +                          ) {
 31030                           
 31031                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31032                           ;incstack = 0
 31033   01520E  D0C3               	goto	l12590
 31034   015210                     l12486:
 31035                           
 31036                           ;gemsecs.c: 1269:    if (block != GEM_STATE_REMOTE) {
 31037   015210  0E04               	movlw	4
 31038   015212  180A               	xorwf	secs_gem_state@block^0,w,c
 31039   015214  B4D8               	btfsc	status,2,c
 31040   015216  D030               	goto	l12506
 31041                           
 31042                           ;gemsecs.c: 1270:     if (TimerDone(TMR_HBIO)) {
 31043   015218  0E06               	movlw	6
 31044   01521A  6EE6               	movwf	postinc1,c
 31045   01521C  ECAD  F0BF         	call	_TimerDone	;wreg free
 31046   015220  5023               	movf	btemp^0,w,c
 31047   015222  B4D8               	btfsc	status,2,c
 31048   015224  D008               	goto	l12492
 31049                           
 31050                           ;gemsecs.c: 1271:      StartTimer(TMR_HBIO, 30000);
 31051   015226  0E30               	movlw	48
 31052   015228  6EE6               	movwf	postinc1,c
 31053   01522A  0E75               	movlw	117
 31054   01522C  6EE6               	movwf	postinc1,c
 31055   01522E  0E06               	movlw	6
 31056   015230  6EE6               	movwf	postinc1,c
 31057   015232  EC02  F0BD         	call	_StartTimer	;wreg free
 31058   015236                     l12492:
 31059                           
 31060                           ;gemsecs.c: 1273:     terminal_format(display_online);
 31061   015236  0E01               	movlw	1
 31062   015238  6EE6               	movwf	postinc1,c
 31063   01523A  ECA1  F0A3         	call	_terminal_format	;wreg free
 31064                           
 31065                           ; BSR set to: 1
 31066                           ;gemsecs.c: 1274:     format_display_text(V.terminal);
 31067   01523E  0E61               	movlw	low (_V+71)
 31068   015240  6EE6               	movwf	postinc1,c
 31069   015242  0E0C               	movlw	high (_V+71)
 31070   015244  6EE6               	movwf	postinc1,c
 31071   015246  EC21  F0AC         	call	_format_display_text	;wreg free
 31072                           
 31073                           ;gemsecs.c: 1275:     V.response.mesgid = 1;
 31074   01524A  0E01               	movlw	1
 31075   01524C  006F FFA0  FD8A    	movff	wreg,_V+368	;volatile
 31076                           
 31077                           ;gemsecs.c: 1276:     V.sequences++;
 31078   015252  EE23  F163         	lfsr	2,_V+329	;volatile
 31079   015256  2ADE               	incf	postinc2,f,c
 31080   015258  0E00               	movlw	0
 31081   01525A  22DD               	addwfc	postdec2,f,c
 31082                           
 31083                           ;gemsecs.c: 1277:     V.sid = 10;
 31084   01525C  0E0A               	movlw	10
 31085   01525E  006F FFA0  FD99    	movff	wreg,_V+383	;volatile
 31086                           
 31087                           ;gemsecs.c: 1278:     sequence_messages(V.sid);
 31088   015264  EE23  F199         	lfsr	2,_V+383	;volatile
 31089   015268  50DF               	movf	indf2,w,c
 31090   01526A  6EE6               	movwf	postinc1,c
 31091   01526C  EC37  F09E         	call	_sequence_messages	;wreg free
 31092                           
 31093                           ;gemsecs.c: 1279:     set_display_info(DIS_SEQUENCE_M);
 31094   015270  0E08               	movlw	8
 31095   015272  6EE6               	movwf	postinc1,c
 31096   015274  EC2A  F0C0         	call	_set_display_info	;wreg free
 31097   015278                     l12506:
 31098                           
 31099                           ;gemsecs.c: 1282:    block = GEM_STATE_REMOTE;
 31100   015278  0E04               	movlw	4
 31101   01527A                     L28:
 31102   01527A  6E0A               	movwf	secs_gem_state@block^0,c
 31103   01527C                     l12508:
 31104                           
 31105                           ;gemsecs.c: 1283:    V.ticker = 0;
 31106   01527C  0E00               	movlw	0
 31107   01527E  D087               	goto	L29
 31108   015280                     l12510:
 31109                           
 31110                           ;gemsecs.c: 1291:      equipment = GEM_VII80;
 31111   015280  0E01               	movlw	1
 31112   015282  D00A               	goto	L27
 31113   015284                     l2253:
 31114                           
 31115                           ;gemsecs.c: 1294:      equipment = GEM_GENERIC;
 31116   015284  6A09               	clrf	secs_gem_state@equipment^0,c
 31117                           
 31118                           ;gemsecs.c: 1295:      break;
 31119   015286  D01E               	goto	l12526
 31120   015288                     l12514:
 31121   015288  EE23  F16F         	lfsr	2,_V+341	;volatile
 31122   01528C  50DF               	movf	indf2,w,c
 31123                           
 31124                           ; Switch size 1, requested type "simple"
 31125                           ; Number of cases is 1, Range of values is 73 to 73
 31126                           ; switch strategies available:
 31127                           ; Name         Instructions Cycles
 31128                           ; simple_byte            4     3 (average)
 31129                           ;	Chosen strategy is simple_byte
 31130   01528E  0A49               	xorlw	73	; case 73
 31131   015290  B4D8               	btfsc	status,2,c
 31132   015292  D7F6               	goto	l12510
 31133   015294  D7F7               	goto	l2253
 31134   015296                     l12516:
 31135                           
 31136                           ;gemsecs.c: 1302:      equipment = GEM_E220;
 31137   015296  0E02               	movlw	2
 31138   015298                     L27:
 31139   015298  6E09               	movwf	secs_gem_state@equipment^0,c
 31140                           
 31141                           ;gemsecs.c: 1303:      break;
 31142   01529A  D014               	goto	l12526
 31143   01529C                     l12520:
 31144   01529C  EE23  F16F         	lfsr	2,_V+341	;volatile
 31145   0152A0  50DF               	movf	indf2,w,c
 31146                           
 31147                           ; Switch size 1, requested type "simple"
 31148                           ; Number of cases is 2, Range of values is 50 to 53
 31149                           ; switch strategies available:
 31150                           ; Name         Instructions Cycles
 31151                           ; simple_byte            7     4 (average)
 31152                           ;	Chosen strategy is simple_byte
 31153   0152A2  0A32               	xorlw	50	; case 50
 31154   0152A4  B4D8               	btfsc	status,2,c
 31155   0152A6  D7F7               	goto	l12516
 31156   0152A8  0A07               	xorlw	7	; case 53
 31157   0152AA  B4D8               	btfsc	status,2,c
 31158   0152AC  D7F4               	goto	l12516
 31159   0152AE  D7EA               	goto	l2253
 31160   0152B0                     l12524:
 31161   0152B0  EE23  F16E         	lfsr	2,_V+340	;volatile
 31162   0152B4  50DF               	movf	indf2,w,c
 31163                           
 31164                           ; Switch size 1, requested type "simple"
 31165                           ; Number of cases is 2, Range of values is 69 to 86
 31166                           ; switch strategies available:
 31167                           ; Name         Instructions Cycles
 31168                           ; simple_byte            7     4 (average)
 31169                           ;	Chosen strategy is simple_byte
 31170   0152B6  0A45               	xorlw	69	; case 69
 31171   0152B8  B4D8               	btfsc	status,2,c
 31172   0152BA  D7F0               	goto	l12520
 31173   0152BC  0A13               	xorlw	19	; case 86
 31174   0152BE  B4D8               	btfsc	status,2,c
 31175   0152C0  D7E3               	goto	l12514
 31176   0152C2  D7E0               	goto	l2253
 31177   0152C4                     l12526:
 31178                           
 31179                           ;gemsecs.c: 1314:    if (block != GEM_STATE_REMOTE) {
 31180   0152C4  0E04               	movlw	4
 31181   0152C6  180A               	xorwf	secs_gem_state@block^0,w,c
 31182   0152C8  B4D8               	btfsc	status,2,c
 31183   0152CA  D7D8               	goto	l12508
 31184                           
 31185                           ;gemsecs.c: 1315:     terminal_format(display_online);
 31186   0152CC  0E01               	movlw	1
 31187   0152CE  6EE6               	movwf	postinc1,c
 31188   0152D0  ECA1  F0A3         	call	_terminal_format	;wreg free
 31189                           
 31190                           ; BSR set to: 1
 31191                           ;gemsecs.c: 1316:     format_display_text(V.terminal);
 31192   0152D4  0E61               	movlw	low (_V+71)
 31193   0152D6  6EE6               	movwf	postinc1,c
 31194   0152D8  0E0C               	movlw	high (_V+71)
 31195   0152DA  6EE6               	movwf	postinc1,c
 31196   0152DC  EC21  F0AC         	call	_format_display_text	;wreg free
 31197                           
 31198                           ;gemsecs.c: 1317:     V.response.mesgid = 1;
 31199   0152E0  0E01               	movlw	1
 31200   0152E2  006F FFA0  FD8A    	movff	wreg,_V+368	;volatile
 31201                           
 31202                           ;gemsecs.c: 1318:     V.sequences++;
 31203   0152E8  EE23  F163         	lfsr	2,_V+329	;volatile
 31204   0152EC  2ADE               	incf	postinc2,f,c
 31205   0152EE  0E00               	movlw	0
 31206   0152F0  22DD               	addwfc	postdec2,f,c
 31207                           
 31208                           ;gemsecs.c: 1319:     V.sid = 11;
 31209   0152F2  0E0B               	movlw	11
 31210   0152F4  006F FFA0  FD99    	movff	wreg,_V+383	;volatile
 31211                           
 31212                           ;gemsecs.c: 1320:     sequence_messages(V.sid);
 31213   0152FA  EE23  F199         	lfsr	2,_V+383	;volatile
 31214   0152FE  50DF               	movf	indf2,w,c
 31215   015300  6EE6               	movwf	postinc1,c
 31216   015302  EC37  F09E         	call	_sequence_messages	;wreg free
 31217                           
 31218                           ;gemsecs.c: 1321:     set_display_info(DIS_SEQUENCE_M);
 31219   015306  0E08               	movlw	8
 31220   015308  6EE6               	movwf	postinc1,c
 31221   01530A  EC2A  F0C0         	call	_set_display_info	;wreg free
 31222                           
 31223                           ;gemsecs.c: 1322:     block = GEM_STATE_COMM;
 31224   01530E  0E01               	movlw	1
 31225   015310  D7B4               	goto	L28
 31226   015312                     l12546:
 31227                           
 31228                           ;gemsecs.c: 1327:    if (block != GEM_STATE_REMOTE)
 31229   015312  0E04               	movlw	4
 31230   015314  180A               	xorwf	secs_gem_state@block^0,w,c
 31231   015316  B4D8               	btfsc	status,2,c
 31232   015318  D002               	goto	l12550
 31233   01531A                     u9230:
 31234                           
 31235                           ;gemsecs.c: 1328:     block = GEM_STATE_COMM;
 31236   01531A  0E01               	movlw	1
 31237   01531C  6E0A               	movwf	secs_gem_state@block^0,c
 31238   01531E                     l12550:
 31239                           
 31240                           ;gemsecs.c: 1329:    V.ticker = 15;
 31241   01531E  0E0F               	movlw	15
 31242   015320  D036               	goto	L29
 31243   015322                     l12552:
 31244                           
 31245                           ;gemsecs.c: 1335:    block = GEM_STATE_OFFLINE;
 31246   015322  0E02               	movlw	2
 31247   015324  D7AA               	goto	L28
 31248   015326                     l12556:
 31249                           
 31250                           ;gemsecs.c: 1342:    block = GEM_STATE_ONLINE;
 31251   015326  0E03               	movlw	3
 31252   015328  D7A8               	goto	L28
 31253   01532A                     l12560:
 31254                           
 31255                           ;gemsecs.c: 1346:    if (block == GEM_STATE_DISABLE) {
 31256   01532A  500A               	movf	secs_gem_state@block^0,w,c
 31257   01532C  B4D8               	btfsc	status,2,c
 31258   01532E  D7F5               	goto	u9230
 31259   015330  D03E               	goto	l12592
 31260   015332                     l12568:
 31261                           
 31262                           ;stkvar	_function @ sp[(0)+-2]
 31263   015332  0EFE               	movlw	-2
 31264   015334  50E3               	movf	plusw1,w,c
 31265                           
 31266                           ; Switch size 1, requested type "simple"
 31267                           ; Number of cases is 5, Range of values is 2 to 18
 31268                           ; switch strategies available:
 31269                           ; Name         Instructions Cycles
 31270                           ; simple_byte           16     9 (average)
 31271                           ;	Chosen strategy is simple_byte
 31272   015336  0A02               	xorlw	2	; case 2
 31273   015338  B4D8               	btfsc	status,2,c
 31274   01533A  D76A               	goto	l12486
 31275   01533C  0A0F               	xorlw	15	; case 13
 31276   01533E  B4D8               	btfsc	status,2,c
 31277   015340  D7B7               	goto	l12524
 31278   015342  0A03               	xorlw	3	; case 14
 31279   015344  B4D8               	btfsc	status,2,c
 31280   015346  D7E5               	goto	l12546
 31281   015348  0A1E               	xorlw	30	; case 16
 31282   01534A  B4D8               	btfsc	status,2,c
 31283   01534C  D7EA               	goto	l12552
 31284   01534E  0A02               	xorlw	2	; case 18
 31285   015350  B4D8               	btfsc	status,2,c
 31286   015352  D7E9               	goto	l12556
 31287   015354  D7EA               	goto	l12560
 31288   015356                     l12570:
 31289                           
 31290                           ;gemsecs.c: 1356:    V.alarm = function;
 31291                           ;stkvar	_function @ sp[(0)+-2]
 31292   015356  0EFE               	movlw	-2
 31293   015358  006F FF8C  F02E    	movff	plusw1,btemp+11
 31294   01535E  0060  F0B8  FD53   	movff	btemp+11,_V+313	;volatile
 31295                           
 31296                           ;gemsecs.c: 1357:    break;
 31297   015364  D024               	goto	l12592
 31298   015366                     l12574:
 31299                           
 31300                           ;gemsecs.c: 1363:    V.alarm = function;
 31301                           ;stkvar	_function @ sp[(0)+-2]
 31302   015366  0EFE               	movlw	-2
 31303   015368  006F FF8C  F02E    	movff	plusw1,btemp+11
 31304   01536E  0060  F0B8  FD53   	movff	btemp+11,_V+313	;volatile
 31305                           
 31306                           ;gemsecs.c: 1364:    if (V.ticker != 45)
 31307   015374  0063  F66F  FFE8   	movff	_V+385,wreg	;volatile
 31308   01537A  0A2D               	xorlw	45
 31309   01537C  A4D8               	btfss	status,2,c
 31310   01537E  D7CF               	goto	l12550
 31311   015380  D016               	goto	l12592
 31312   015382                     l12582:
 31313                           
 31314                           ;gemsecs.c: 1370:   if (block == GEM_STATE_DISABLE) {
 31315   015382  500A               	movf	secs_gem_state@block^0,w,c
 31316   015384  A4D8               	btfss	status,2,c
 31317   015386  D013               	goto	l12592
 31318                           
 31319                           ;gemsecs.c: 1371:    block = GEM_STATE_COMM;
 31320   015388  0E01               	movlw	1
 31321   01538A  6E0A               	movwf	secs_gem_state@block^0,c
 31322                           
 31323                           ;gemsecs.c: 1372:    V.ticker = 45;
 31324   01538C  0E2D               	movlw	45
 31325   01538E                     L29:
 31326   01538E  006F FFA0  FD9B    	movff	wreg,_V+385	;volatile
 31327   015394  D00C               	goto	l12592
 31328   015396                     l12590:
 31329                           
 31330                           ;stkvar	_stream @ sp[(0)+-1]
 31331   015396  0EFF               	movlw	-1
 31332   015398  50E3               	movf	plusw1,w,c
 31333                           
 31334                           ; Switch size 1, requested type "simple"
 31335                           ; Number of cases is 3, Range of values is 1 to 9
 31336                           ; switch strategies available:
 31337                           ; Name         Instructions Cycles
 31338                           ; simple_byte           10     6 (average)
 31339                           ;	Chosen strategy is simple_byte
 31340   01539A  0A01               	xorlw	1	; case 1
 31341   01539C  B4D8               	btfsc	status,2,c
 31342   01539E  D7C9               	goto	l12568
 31343   0153A0  0A04               	xorlw	4	; case 5
 31344   0153A2  B4D8               	btfsc	status,2,c
 31345   0153A4  D7D8               	goto	l12570
 31346   0153A6  0A0C               	xorlw	12	; case 9
 31347   0153A8  B4D8               	btfsc	status,2,c
 31348   0153AA  D7DD               	goto	l12574
 31349   0153AC  D7EA               	goto	l12582
 31350   0153AE                     l12592:
 31351                           
 31352                           ;gemsecs.c: 1377:  V.e_types = equipment;
 31353   0153AE  EE23  F01D         	lfsr	2,_V+3	;volatile
 31354   0153B2  0060  F027  FFDF   	movff	secs_gem_state@equipment,indf2
 31355                           
 31356                           ;gemsecs.c: 1378:  return(block);
 31357   0153B8  C00A  F023         	movff	secs_gem_state@block,btemp
 31358                           
 31359                           ; _secs_gem_state: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2
      +                          , argsize = 2, vargsize = 0
 31360   0153BC  52E5               	movf	postdec1,f,c
 31361   0153BE  52E5               	movf	postdec1,f,c
 31362   0153C0  0012               	return		;funcret
 31363   0153C2                     __end_of_secs_gem_state:
 31364                           	callstack 0
 31365                           
 31366 ;; *************** function _terminal_format *****************
 31367 ;; Defined at:
 31368 ;;		line 612 in file "gemsecs.c"
 31369 ;; Parameters:    Size  Location     Type
 31370 ;;  t_format        1  [STACK] enum E17472
 31371 ;; Auto vars:     Size  Location     Type
 31372 ;;		None
 31373 ;; Return value:  Size  Location     Type
 31374 ;;                  1  [STACK] void 
 31375 ;; Registers used:
 31376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 31377 ;; Tracked objects:
 31378 ;;		On entry : 0/0
 31379 ;;		On exit  : 3F/1
 31380 ;;		Unchanged: 0/0
 31381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31386 ;;Total ram usage:        0 bytes
 31387 ;; Hardware stack levels used: 1
 31388 ;; Hardware stack levels required when called: 12
 31389 ;; This function calls:
 31390 ;;		_sprintf
 31391 ;; This function is called by:
 31392 ;;		_secs_II_message
 31393 ;;		_secs_gem_state
 31394 ;; This function uses a reentrant model
 31395 ;;
 31396                           
 31397                           	psect	text21
 31398   014742                     __ptext21:
 31399                           	callstack 0
 31400   014742                     _terminal_format:
 31401                           	callstack 16
 31402                           
 31403                           ;gemsecs.c: 612: void terminal_format(DISPLAY_TYPES t_format);gemsecs.c: 613: {;gemsecs.
      +                          c: 614:  switch (t_format) {
 31404                           
 31405                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31406                           ;incstack = 0
 31407   014742  D11C               	goto	l12198
 31408   014744                     l12188:
 31409                           
 31410                           ;gemsecs.c: 616:   sprintf(V.terminal, msg0,
 31411   014744  0EEF               	movlw	low STR_3
 31412   014746  6EE6               	movwf	postinc1,c
 31413   014748  0EFF               	movlw	high STR_3
 31414   01474A  6EE6               	movwf	postinc1,c
 31415   01474C  EE23  F159         	lfsr	2,_V+319	;volatile
 31416   014750  006F FF78  F02D    	movff	postinc2,btemp+10
 31417   014756  006F FF74  F02E    	movff	postdec2,btemp+11
 31418   01475C  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 31419   014762  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 31420   014768  EE23  F167         	lfsr	2,_V+333	;volatile
 31421   01476C  38DF               	swapf	223,w,c
 31422   01476E  0B0F               	andlw	15
 31423   014770  6EE6               	movwf	postinc1,c
 31424   014772  0E00               	movlw	0
 31425   014774  6EE6               	movwf	postinc1,c
 31426   014776  EE23  F020         	lfsr	2,_V+6	;volatile
 31427   01477A  50DF               	movf	indf2,w,c
 31428   01477C  6EE6               	movwf	postinc1,c
 31429   01477E  0E00               	movlw	0
 31430   014780  6EE6               	movwf	postinc1,c
 31431   014782  EE23  F168         	lfsr	2,_V+334	;volatile
 31432   014786  50DF               	movf	223,w,c
 31433   014788  0B0F               	andlw	15
 31434   01478A  6EE6               	movwf	postinc1,c
 31435   01478C  0E00               	movlw	0
 31436   01478E  6EE6               	movwf	postinc1,c
 31437   014790  EE23  F01F         	lfsr	2,_V+5	;volatile
 31438   014794  50DF               	movf	indf2,w,c
 31439   014796  6EE6               	movwf	postinc1,c
 31440   014798  0E00               	movlw	0
 31441   01479A  6EE6               	movwf	postinc1,c
 31442   01479C  EE23  F165         	lfsr	2,_V+331	;volatile
 31443   0147A0  006F FF78  F02D    	movff	postinc2,btemp+10
 31444   0147A6  006F FF74  F02E    	movff	postdec2,btemp+11
 31445   0147AC  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 31446   0147B2  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 31447   0147B8  0E79               	movlw	low _msg0
 31448   0147BA  6EE6               	movwf	postinc1,c
 31449   0147BC  0EFB               	movlw	high _msg0
 31450   0147BE  6EE6               	movwf	postinc1,c
 31451   0147C0  0E61               	movlw	low (_V+71)
 31452   0147C2  6EE6               	movwf	postinc1,c
 31453   0147C4  0E0C               	movlw	high (_V+71)
 31454   0147C6  6EE6               	movwf	postinc1,c
 31455   0147C8  0E12               	movlw	18
 31456   0147CA  6EE6               	movwf	postinc1,c
 31457   0147CC  EC0A  F0B3         	call	_sprintf	;wreg free
 31458                           
 31459                           ;gemsecs.c: 618:   break;
 31460   0147D0  D0E8               	goto	l2005
 31461   0147D2                     l12190:
 31462                           
 31463                           ;gemsecs.c: 620:   sprintf(V.terminal, msg1,
 31464   0147D2  0EEF               	movlw	low STR_3
 31465   0147D4  6EE6               	movwf	postinc1,c
 31466   0147D6  0EFF               	movlw	high STR_3
 31467   0147D8  6EE6               	movwf	postinc1,c
 31468   0147DA  EE23  F159         	lfsr	2,_V+319	;volatile
 31469   0147DE  006F FF78  F02D    	movff	postinc2,btemp+10
 31470   0147E4  006F FF74  F02E    	movff	postdec2,btemp+11
 31471   0147EA  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 31472   0147F0  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 31473   0147F6  EE23  F167         	lfsr	2,_V+333	;volatile
 31474   0147FA  38DF               	swapf	223,w,c
 31475   0147FC  0B0F               	andlw	15
 31476   0147FE  6EE6               	movwf	postinc1,c
 31477   014800  0E00               	movlw	0
 31478   014802  6EE6               	movwf	postinc1,c
 31479   014804  EE23  F020         	lfsr	2,_V+6	;volatile
 31480   014808  50DF               	movf	indf2,w,c
 31481   01480A  6EE6               	movwf	postinc1,c
 31482   01480C  0E00               	movlw	0
 31483   01480E  6EE6               	movwf	postinc1,c
 31484   014810  EE23  F168         	lfsr	2,_V+334	;volatile
 31485   014814  50DF               	movf	223,w,c
 31486   014816  0B0F               	andlw	15
 31487   014818  6EE6               	movwf	postinc1,c
 31488   01481A  0E00               	movlw	0
 31489   01481C  6EE6               	movwf	postinc1,c
 31490   01481E  EE23  F01F         	lfsr	2,_V+5	;volatile
 31491   014822  50DF               	movf	indf2,w,c
 31492   014824  6EE6               	movwf	postinc1,c
 31493   014826  0E00               	movlw	0
 31494   014828  6EE6               	movwf	postinc1,c
 31495   01482A  EE23  F165         	lfsr	2,_V+331	;volatile
 31496   01482E  006F FF78  F02D    	movff	postinc2,btemp+10
 31497   014834  006F FF74  F02E    	movff	postdec2,btemp+11
 31498   01483A  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 31499   014840  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 31500   014846  0ED2               	movlw	low _msg1
 31501   014848  6EE6               	movwf	postinc1,c
 31502   01484A  0EFB               	movlw	high _msg1
 31503   01484C  6EE6               	movwf	postinc1,c
 31504   01484E  0E61               	movlw	low (_V+71)
 31505   014850  6EE6               	movwf	postinc1,c
 31506   014852  0E0C               	movlw	high (_V+71)
 31507   014854  6EE6               	movwf	postinc1,c
 31508   014856  0E12               	movlw	18
 31509   014858  6EE6               	movwf	postinc1,c
 31510   01485A  EC0A  F0B3         	call	_sprintf	;wreg free
 31511                           
 31512                           ;gemsecs.c: 622:   break;
 31513   01485E  D0A1               	goto	l2005
 31514   014860                     l12192:
 31515                           
 31516                           ;gemsecs.c: 624:   sprintf(V.terminal, msg2,
 31517   014860  0EEF               	movlw	low STR_3
 31518   014862  6EE6               	movwf	postinc1,c
 31519   014864  0EFF               	movlw	high STR_3
 31520   014866  6EE6               	movwf	postinc1,c
 31521   014868  EE23  F159         	lfsr	2,_V+319	;volatile
 31522   01486C  006F FF78  F02D    	movff	postinc2,btemp+10
 31523   014872  006F FF74  F02E    	movff	postdec2,btemp+11
 31524   014878  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 31525   01487E  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 31526   014884  EE23  F167         	lfsr	2,_V+333	;volatile
 31527   014888  38DF               	swapf	223,w,c
 31528   01488A  0B0F               	andlw	15
 31529   01488C  6EE6               	movwf	postinc1,c
 31530   01488E  0E00               	movlw	0
 31531   014890  6EE6               	movwf	postinc1,c
 31532   014892  EE23  F020         	lfsr	2,_V+6	;volatile
 31533   014896  50DF               	movf	indf2,w,c
 31534   014898  6EE6               	movwf	postinc1,c
 31535   01489A  0E00               	movlw	0
 31536   01489C  6EE6               	movwf	postinc1,c
 31537   01489E  EE23  F168         	lfsr	2,_V+334	;volatile
 31538   0148A2  50DF               	movf	223,w,c
 31539   0148A4  0B0F               	andlw	15
 31540   0148A6  6EE6               	movwf	postinc1,c
 31541   0148A8  0E00               	movlw	0
 31542   0148AA  6EE6               	movwf	postinc1,c
 31543   0148AC  EE23  F01F         	lfsr	2,_V+5	;volatile
 31544   0148B0  50DF               	movf	indf2,w,c
 31545   0148B2  6EE6               	movwf	postinc1,c
 31546   0148B4  0E00               	movlw	0
 31547   0148B6  6EE6               	movwf	postinc1,c
 31548   0148B8  EE23  F165         	lfsr	2,_V+331	;volatile
 31549   0148BC  006F FF78  F02D    	movff	postinc2,btemp+10
 31550   0148C2  006F FF74  F02E    	movff	postdec2,btemp+11
 31551   0148C8  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 31552   0148CE  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 31553   0148D4  0E2A               	movlw	low _msg2
 31554   0148D6  6EE6               	movwf	postinc1,c
 31555   0148D8  0EFC               	movlw	high _msg2
 31556   0148DA  6EE6               	movwf	postinc1,c
 31557   0148DC  0E61               	movlw	low (_V+71)
 31558   0148DE  6EE6               	movwf	postinc1,c
 31559   0148E0  0E0C               	movlw	high (_V+71)
 31560   0148E2  6EE6               	movwf	postinc1,c
 31561   0148E4  0E12               	movlw	18
 31562   0148E6  6EE6               	movwf	postinc1,c
 31563   0148E8  EC0A  F0B3         	call	_sprintf	;wreg free
 31564                           
 31565                           ;gemsecs.c: 626:   break;
 31566   0148EC  D05A               	goto	l2005
 31567   0148EE                     l12194:
 31568                           
 31569                           ;gemsecs.c: 628:   sprintf(V.terminal, msg99,
 31570   0148EE  0EEF               	movlw	low STR_3
 31571   0148F0  6EE6               	movwf	postinc1,c
 31572   0148F2  0EFF               	movlw	high STR_3
 31573   0148F4  6EE6               	movwf	postinc1,c
 31574   0148F6  EE23  F159         	lfsr	2,_V+319	;volatile
 31575   0148FA  006F FF78  F02D    	movff	postinc2,btemp+10
 31576   014900  006F FF74  F02E    	movff	postdec2,btemp+11
 31577   014906  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 31578   01490C  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 31579   014912  EE23  F167         	lfsr	2,_V+333	;volatile
 31580   014916  38DF               	swapf	223,w,c
 31581   014918  0B0F               	andlw	15
 31582   01491A  6EE6               	movwf	postinc1,c
 31583   01491C  0E00               	movlw	0
 31584   01491E  6EE6               	movwf	postinc1,c
 31585   014920  EE23  F020         	lfsr	2,_V+6	;volatile
 31586   014924  50DF               	movf	indf2,w,c
 31587   014926  6EE6               	movwf	postinc1,c
 31588   014928  0E00               	movlw	0
 31589   01492A  6EE6               	movwf	postinc1,c
 31590   01492C  EE23  F168         	lfsr	2,_V+334	;volatile
 31591   014930  50DF               	movf	223,w,c
 31592   014932  0B0F               	andlw	15
 31593   014934  6EE6               	movwf	postinc1,c
 31594   014936  0E00               	movlw	0
 31595   014938  6EE6               	movwf	postinc1,c
 31596   01493A  EE23  F01F         	lfsr	2,_V+5	;volatile
 31597   01493E  50DF               	movf	indf2,w,c
 31598   014940  6EE6               	movwf	postinc1,c
 31599   014942  0E00               	movlw	0
 31600   014944  6EE6               	movwf	postinc1,c
 31601   014946  EE23  F165         	lfsr	2,_V+331	;volatile
 31602   01494A  006F FF78  F02D    	movff	postinc2,btemp+10
 31603   014950  006F FF74  F02E    	movff	postdec2,btemp+11
 31604   014956  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 31605   01495C  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 31606   014962  0E80               	movlw	low _msg99
 31607   014964  6EE6               	movwf	postinc1,c
 31608   014966  0EFC               	movlw	high _msg99
 31609   014968  6EE6               	movwf	postinc1,c
 31610   01496A  0E61               	movlw	low (_V+71)
 31611   01496C  6EE6               	movwf	postinc1,c
 31612   01496E  0E0C               	movlw	high (_V+71)
 31613   014970  6EE6               	movwf	postinc1,c
 31614   014972  0E12               	movlw	18
 31615   014974  6EE6               	movwf	postinc1,c
 31616   014976  EC0A  F0B3         	call	_sprintf	;wreg free
 31617                           
 31618                           ;gemsecs.c: 630:   break;
 31619   01497A  D013               	goto	l2005
 31620   01497C                     l12198:
 31621                           
 31622                           ;stkvar	_t_format @ sp[(0)+-1]
 31623   01497C  0EFF               	movlw	-1
 31624   01497E  50E3               	movf	plusw1,w,c
 31625   014980  6E2D               	movwf	(btemp+10)^0,c
 31626   014982  6A2E               	clrf	(btemp+11)^0,c
 31627                           
 31628                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31629                           ; Switch size 1, requested type "simple"
 31630                           ; Number of cases is 1, Range of values is 0 to 0
 31631                           ; switch strategies available:
 31632                           ; Name         Instructions Cycles
 31633                           ; simple_byte            4     3 (average)
 31634                           ;	Chosen strategy is simple_byte
 31635   014984  502E               	movf	(btemp+11)^0,w,c
 31636   014986  0A00               	xorlw	0	; case 0
 31637   014988  A4D8               	btfss	status,2,c
 31638   01498A  D7B1               	goto	l12194
 31639                           
 31640                           ; Switch size 1, requested type "simple"
 31641                           ; Number of cases is 3, Range of values is 0 to 2
 31642                           ; switch strategies available:
 31643                           ; Name         Instructions Cycles
 31644                           ; simple_byte           10     6 (average)
 31645                           ;	Chosen strategy is simple_byte
 31646   01498C  502D               	movf	(btemp+10)^0,w,c
 31647   01498E  0A00               	xorlw	0	; case 0
 31648   014990  B4D8               	btfsc	status,2,c
 31649   014992  D6D8               	goto	l12188
 31650   014994  0A01               	xorlw	1	; case 1
 31651   014996  B4D8               	btfsc	status,2,c
 31652   014998  D71C               	goto	l12190
 31653   01499A  0A03               	xorlw	3	; case 2
 31654   01499C  B4D8               	btfsc	status,2,c
 31655   01499E  D760               	goto	l12192
 31656   0149A0  D7A6               	goto	l12194
 31657   0149A2                     l2005:
 31658                           
 31659                           ; BSR set to: 1
 31660                           ; _terminal_format: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
 31661   0149A2  52E5               	movf	postdec1,f,c
 31662   0149A4  0012               	return		;funcret
 31663   0149A6                     __end_of_terminal_format:
 31664                           	callstack 0
 31665                           
 31666 ;; *************** function _sequence_messages *****************
 31667 ;; Defined at:
 31668 ;;		line 548 in file "gemsecs.c"
 31669 ;; Parameters:    Size  Location     Type
 31670 ;;  sid             1  [STACK] const unsigned char 
 31671 ;; Auto vars:     Size  Location     Type
 31672 ;;		None
 31673 ;; Return value:  Size  Location     Type
 31674 ;;                  1  [STACK] _Bool 
 31675 ;; Registers used:
 31676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, t
      +blptrh, tblptru, prodl, prodh
 31677 ;; Tracked objects:
 31678 ;;		On entry : 0/0
 31679 ;;		On exit  : 0/0
 31680 ;;		Unchanged: 0/0
 31681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31686 ;;Total ram usage:        0 bytes
 31687 ;; Hardware stack levels used: 1
 31688 ;; Hardware stack levels required when called: 4
 31689 ;; This function calls:
 31690 ;;		_StartTimer
 31691 ;; This function is called by:
 31692 ;;		_secs_II_message
 31693 ;;		_secs_gem_state
 31694 ;; This function uses a reentrant model
 31695 ;;
 31696                           
 31697                           	psect	text22
 31698   013C6E                     __ptext22:
 31699                           	callstack 0
 31700   013C6E                     _sequence_messages:
 31701                           	callstack 24
 31702                           
 31703                           ;gemsecs.c: 548: _Bool sequence_messages(const uint8_t sid);gemsecs.c: 549: {;gemsecs.c:
      +                           550:  V.msg_error = MSG_ERROR_NONE;
 31704                           
 31705                           ; BSR set to: 1
 31706                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31707                           ;incstack = 0
 31708   013C6E  0E00               	movlw	0
 31709   013C70  006F FFA0  FD51    	movff	wreg,_V+311	;volatile
 31710                           
 31711                           ;gemsecs.c: 551:  switch (sid) {
 31712   013C76  D164               	goto	l8550
 31713   013C78                     l1991:
 31714                           
 31715                           ;gemsecs.c: 553:   S[0].stack = 6;
 31716   013C78  0E06               	movlw	6
 31717   013C7A  006F FFA0  F92F    	movff	wreg,_S+45
 31718                           
 31719                           ;gemsecs.c: 554:   S[0].message = HC33[1];
 31720   013C80  0E55               	movlw	low (_HC33+36)
 31721   013C82  6EF6               	movwf	tblptrl,c
 31722   013C84  0EFB               	movlw	high (_HC33+36)
 31723   013C86  6EF7               	movwf	tblptrh,c
 31724   013C88                     	if	0	;tblptru may be non-zero
 31725   013C88                     	endif
 31726   013C88                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 31727   013C88  0E00               	movlw	low (__mediumconst shr (0+16))
 31728   013C8A  6EF8               	movwf	tblptru,c
 31729   013C8C                     	endif
 31730   013C8C  EE22  F102         	lfsr	2,_S
 31731   013C90  0E23               	movlw	35
 31732   013C92                     u5540:
 31733   013C92  0009               	tblrd		*+
 31734   013C94  006F FFD7 FFDE     	movff	tablat,postinc2
 31735   013C9A  06E8               	decf	wreg,f,c
 31736   013C9C  E2FA               	bc	u5540
 31737                           
 31738                           ;gemsecs.c: 555:   S[1].message = HC33[1];
 31739   013C9E  0E55               	movlw	low (_HC33+36)
 31740   013CA0  6EF6               	movwf	tblptrl,c
 31741   013CA2  0EFB               	movlw	high (_HC33+36)
 31742   013CA4  6EF7               	movwf	tblptrh,c
 31743   013CA6                     	if	0	;tblptru may be non-zero
 31744   013CA6                     	endif
 31745   013CA6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 31746   013CA6  0E00               	movlw	low (__mediumconst shr (0+16))
 31747   013CA8  6EF8               	movwf	tblptru,c
 31748   013CAA                     	endif
 31749   013CAA  EE22  F130         	lfsr	2,_S+46
 31750   013CAE  0E23               	movlw	35
 31751   013CB0                     u5550:
 31752   013CB0  0009               	tblrd		*+
 31753   013CB2  006F FFD7 FFDE     	movff	tablat,postinc2
 31754   013CB8  06E8               	decf	wreg,f,c
 31755   013CBA  E2FA               	bc	u5550
 31756                           
 31757                           ;gemsecs.c: 556:   S[2].message = HC33[1];
 31758   013CBC  0E55               	movlw	low (_HC33+36)
 31759   013CBE  6EF6               	movwf	tblptrl,c
 31760   013CC0  0EFB               	movlw	high (_HC33+36)
 31761   013CC2  6EF7               	movwf	tblptrh,c
 31762   013CC4                     	if	0	;tblptru may be non-zero
 31763   013CC4                     	endif
 31764   013CC4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 31765   013CC4  0E00               	movlw	low (__mediumconst shr (0+16))
 31766   013CC6  6EF8               	movwf	tblptru,c
 31767   013CC8                     	endif
 31768   013CC8  EE22  F15E         	lfsr	2,_S+92
 31769   013CCC  0E23               	movlw	35
 31770   013CCE                     u5560:
 31771   013CCE  0009               	tblrd		*+
 31772   013CD0  006F FFD7 FFDE     	movff	tablat,postinc2
 31773   013CD6  06E8               	decf	wreg,f,c
 31774   013CD8  E2FA               	bc	u5560
 31775                           
 31776                           ;gemsecs.c: 557:   S[3].message = HC33[0];
 31777   013CDA  0E31               	movlw	low _HC33
 31778   013CDC  6EF6               	movwf	tblptrl,c
 31779   013CDE                     	if	1	;There is more than 1 active tblptr byte
 31780   013CDE  0EFB               	movlw	high _HC33
 31781   013CE0  6EF7               	movwf	tblptrh,c
 31782   013CE2                     	endif
 31783   013CE2                     	if	1	;There are 3 active tblptr bytes
 31784   013CE2  0E00               	movlw	low (_HC33 shr (0+16))
 31785   013CE4  6EF8               	movwf	tblptru,c
 31786   013CE6                     	endif
 31787   013CE6  EE22  F18C         	lfsr	2,_S+138
 31788   013CEA  0E23               	movlw	35
 31789   013CEC                     u5570:
 31790   013CEC  0009               	tblrd		*+
 31791   013CEE  006F FFD7 FFDE     	movff	tablat,postinc2
 31792   013CF4  06E8               	decf	wreg,f,c
 31793   013CF6  E2FA               	bc	u5570
 31794                           
 31795                           ;gemsecs.c: 558:   S[4].message = HC33[0];
 31796   013CF8  0E31               	movlw	low _HC33
 31797   013CFA  6EF6               	movwf	tblptrl,c
 31798   013CFC                     	if	1	;There is more than 1 active tblptr byte
 31799   013CFC  0EFB               	movlw	high _HC33
 31800   013CFE  6EF7               	movwf	tblptrh,c
 31801   013D00                     	endif
 31802   013D00                     	if	1	;There are 3 active tblptr bytes
 31803   013D00  0E00               	movlw	low (_HC33 shr (0+16))
 31804   013D02  6EF8               	movwf	tblptru,c
 31805   013D04                     	endif
 31806   013D04  EE22  F1BA         	lfsr	2,_S+184
 31807   013D08  0E23               	movlw	35
 31808   013D0A                     u5580:
 31809   013D0A  0009               	tblrd		*+
 31810   013D0C  006F FFD7 FFDE     	movff	tablat,postinc2
 31811   013D12  06E8               	decf	wreg,f,c
 31812   013D14  E2FA               	bc	u5580
 31813                           
 31814                           ;gemsecs.c: 559:   S[5].message = HC33[0];
 31815   013D16  0E31               	movlw	low _HC33
 31816   013D18  6EF6               	movwf	tblptrl,c
 31817   013D1A                     	if	1	;There is more than 1 active tblptr byte
 31818   013D1A  0EFB               	movlw	high _HC33
 31819   013D1C  6EF7               	movwf	tblptrh,c
 31820   013D1E                     	endif
 31821   013D1E                     	if	1	;There are 3 active tblptr bytes
 31822   013D1E  0E00               	movlw	low (_HC33 shr (0+16))
 31823   013D20  6EF8               	movwf	tblptru,c
 31824   013D22                     	endif
 31825   013D22  EE22  F1E8         	lfsr	2,_S+230
 31826   013D26  0E23               	movlw	35
 31827   013D28                     u5590:
 31828   013D28  0009               	tblrd		*+
 31829   013D2A  006F FFD7 FFDE     	movff	tablat,postinc2
 31830   013D30  06E8               	decf	wreg,f,c
 31831   013D32  E2FA               	bc	u5590
 31832                           
 31833                           ;gemsecs.c: 561:   S[0].message.data[0] = 0x01;
 31834   013D34  0E01               	movlw	1
 31835   013D36  006F FFA0  F904    	movff	wreg,_S+2
 31836                           
 31837                           ;gemsecs.c: 562:   S[1].message.data[0] = 0x02;
 31838   013D3C  0E02               	movlw	2
 31839   013D3E  006F FFA0  F932    	movff	wreg,_S+48
 31840                           
 31841                           ;gemsecs.c: 563:   S[2].message.data[0] = 0x03;
 31842   013D44  0E03               	movlw	3
 31843   013D46  006F FFA0  F960    	movff	wreg,_S+94
 31844                           
 31845                           ;gemsecs.c: 564:   S[3].message.data[0] = 0x01;
 31846   013D4C  0E01               	movlw	1
 31847   013D4E  006F FFA0  F98E    	movff	wreg,_S+140
 31848                           
 31849                           ;gemsecs.c: 565:   S[4].message.data[0] = 0x02;
 31850   013D54  0E02               	movlw	2
 31851   013D56  006F FFA0  F9BC    	movff	wreg,_S+186
 31852                           
 31853                           ;gemsecs.c: 566:   S[5].message.data[0] = 0x03;
 31854   013D5C  0E03               	movlw	3
 31855   013D5E  006F FFA0  F9EA    	movff	wreg,_S+232
 31856                           
 31857                           ;gemsecs.c: 568:   S[0].delay = 10000;
 31858   013D64  0E10               	movlw	16
 31859   013D66  006F FFA0  F92D    	movff	wreg,_S+43
 31860   013D6C  0E27               	movlw	39
 31861   013D6E  006F FFA0  F92E    	movff	wreg,_S+44
 31862                           
 31863                           ;gemsecs.c: 569:   S[1].delay = 10000;
 31864   013D74  0E10               	movlw	16
 31865   013D76  006F FFA0  F95B    	movff	wreg,_S+89
 31866   013D7C  0E27               	movlw	39
 31867   013D7E  006F FFA0  F95C    	movff	wreg,_S+90
 31868                           
 31869                           ;gemsecs.c: 570:   S[2].delay = 10000;
 31870   013D84  0E10               	movlw	16
 31871   013D86  006F FFA0  F989    	movff	wreg,_S+135
 31872   013D8C  0E27               	movlw	39
 31873   013D8E  006F FFA0  F98A    	movff	wreg,_S+136
 31874                           
 31875                           ;gemsecs.c: 571:   S[3].delay = 10000;
 31876   013D94  0E10               	movlw	16
 31877   013D96  006F FFA0  F9B7    	movff	wreg,_S+181
 31878   013D9C  0E27               	movlw	39
 31879   013D9E  006F FFA0  F9B8    	movff	wreg,_S+182
 31880                           
 31881                           ;gemsecs.c: 572:   S[4].delay = 10000;
 31882   013DA4  0E10               	movlw	16
 31883   013DA6  006F FFA0  F9E5    	movff	wreg,_S+227
 31884   013DAC  0E27               	movlw	39
 31885   013DAE  006F FFA0  F9E6    	movff	wreg,_S+228
 31886                           
 31887                           ;gemsecs.c: 573:   S[5].delay = 10000;
 31888   013DB4  0E10               	movlw	16
 31889   013DB6  006F FFA0  FA13    	movff	wreg,_S+273
 31890   013DBC  0E27               	movlw	39
 31891   013DBE  006F FFA0  FA14    	movff	wreg,_S+274
 31892                           
 31893                           ;gemsecs.c: 575:   S[0].block.header = (uint8_t*) & S[0].message;
 31894   013DC4  0E02               	movlw	low _S
 31895   013DC6  006F FFA0  F926    	movff	wreg,_S+36
 31896   013DCC  0E09               	movlw	high _S
 31897   013DCE  006F FFA0  F927    	movff	wreg,_S+37
 31898                           
 31899                           ;gemsecs.c: 576:   S[0].block.length = sizeof(header33);
 31900   013DD4  0E24               	movlw	36
 31901   013DD6  006F FFA0  F928    	movff	wreg,_S+38
 31902                           
 31903                           ;gemsecs.c: 577:   S[1].block.header = (uint8_t*) & S[1].message;
 31904   013DDC  0E30               	movlw	low (_S+46)
 31905   013DDE  006F FFA0  F954    	movff	wreg,_S+82
 31906   013DE4  0E09               	movlw	high (_S+46)
 31907   013DE6  006F FFA0  F955    	movff	wreg,_S+83
 31908                           
 31909                           ;gemsecs.c: 578:   S[1].block.length = sizeof(header33);
 31910   013DEC  0E24               	movlw	36
 31911   013DEE  006F FFA0  F956    	movff	wreg,_S+84
 31912                           
 31913                           ;gemsecs.c: 579:   S[2].block.header = (uint8_t*) & S[2].message;
 31914   013DF4  0E5E               	movlw	low (_S+92)
 31915   013DF6  006F FFA0  F982    	movff	wreg,_S+128
 31916   013DFC  0E09               	movlw	high (_S+92)
 31917   013DFE  006F FFA0  F983    	movff	wreg,_S+129
 31918                           
 31919                           ;gemsecs.c: 580:   S[2].block.length = sizeof(header33);
 31920   013E04  0E24               	movlw	36
 31921   013E06  006F FFA0  F984    	movff	wreg,_S+130
 31922                           
 31923                           ;gemsecs.c: 581:   S[3].block.header = (uint8_t*) & S[3].message;
 31924   013E0C  0E8C               	movlw	low (_S+138)
 31925   013E0E  006F FFA0  F9B0    	movff	wreg,_S+174
 31926   013E14  0E09               	movlw	high (_S+138)
 31927   013E16  006F FFA0  F9B1    	movff	wreg,_S+175
 31928                           
 31929                           ;gemsecs.c: 582:   S[3].block.length = sizeof(header33);
 31930   013E1C  0E24               	movlw	36
 31931   013E1E  006F FFA0  F9B2    	movff	wreg,_S+176
 31932                           
 31933                           ;gemsecs.c: 583:   S[4].block.header = (uint8_t*) & S[4].message;
 31934   013E24  0EBA               	movlw	low (_S+184)
 31935   013E26  006F FFA0  F9DE    	movff	wreg,_S+220
 31936   013E2C  0E09               	movlw	high (_S+184)
 31937   013E2E  006F FFA0  F9DF    	movff	wreg,_S+221
 31938                           
 31939                           ;gemsecs.c: 584:   S[4].block.length = sizeof(header33);
 31940   013E34  0E24               	movlw	36
 31941   013E36  006F FFA0  F9E0    	movff	wreg,_S+222
 31942                           
 31943                           ;gemsecs.c: 585:   S[5].block.header = (uint8_t*) & S[5].message;
 31944   013E3C  0EE8               	movlw	low (_S+230)
 31945   013E3E  006F FFA0  FA0C    	movff	wreg,_S+266
 31946   013E44  0E09               	movlw	high (_S+230)
 31947   013E46  006F FFA0  FA0D    	movff	wreg,_S+267
 31948                           
 31949                           ;gemsecs.c: 586:   S[5].block.length = sizeof(header33);
 31950   013E4C  0E24               	movlw	36
 31951   013E4E  006F FFA0  FA0E    	movff	wreg,_S+268
 31952                           
 31953                           ;gemsecs.c: 587:   V.stack = S[0].stack;
 31954   013E54  0062  F4BC  F02E   	movff	_S+45,btemp+11
 31955   013E5A  EE23  F169         	lfsr	2,_V+335	;volatile
 31956   013E5E  50DF               	movf	223,w,c
 31957   013E60  182E               	xorwf	(btemp+11)^0,w,c
 31958   013E62  0BF8               	andlw	-8
 31959   013E64  182E               	xorwf	(btemp+11)^0,w,c
 31960   013E66  6EDF               	movwf	223,c
 31961                           
 31962                           ;gemsecs.c: 588:   StartTimer(TMR_HBIO, S[V.stack - 1].delay);
 31963   013E68  EE23  F169         	lfsr	2,_V+335	;volatile
 31964   013E6C  50DF               	movf	223,w,c
 31965   013E6E  0B07               	andlw	7
 31966   013E70  0D2E               	mullw	46
 31967   013E72  0EFF               	movlw	low (_S+65533)
 31968   013E74  24F3               	addwf	243,w,c
 31969   013E76  6ED9               	movwf	fsr2l,c
 31970   013E78  0E08               	movlw	high (_S+65533)
 31971   013E7A  20F4               	addwfc	prodh,w,c
 31972   013E7C  6EDA               	movwf	fsr2h,c
 31973   013E7E  006F FF78  F02D    	movff	postinc2,btemp+10
 31974   013E84  006F FF74  F02E    	movff	postdec2,btemp+11
 31975   013E8A  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 31976   013E90  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 31977   013E96  0E06               	movlw	6
 31978   013E98  6EE6               	movwf	postinc1,c
 31979   013E9A  EC02  F0BD         	call	_StartTimer	;wreg free
 31980                           
 31981                           ;gemsecs.c: 589:   break;
 31982   013E9E  D05C               	goto	l1996
 31983   013EA0                     l1994:
 31984                           
 31985                           ;gemsecs.c: 592:   D[0].stack = 1;
 31986   013EA0  0E01               	movlw	1
 31987   013EA2  006F FFA0  FB73    	movff	wreg,_D+165
 31988                           
 31989                           ;gemsecs.c: 593:   D[0].message = H153[0];
 31990   013EA8  EE23  F19D         	lfsr	2,_H153
 31991   013EAC  EE02  F2CE         	lfsr	0,_D
 31992   013EB0  0E9B               	movlw	155
 31993   013EB2                     u5601:
 31994   013EB2  006F FF7B FFEE     	movff	postinc2,postinc0
 31995   013EB8  06E8               	decf	wreg,f,c
 31996   013EBA  E2FB               	bc	u5601
 31997   013EBC  0E9C               	movlw	156
 31998   013EBE  5ED9               	subwf	fsr2l,f,c
 31999   013EC0  5EE9               	subwf	fsr0l,f,c
 32000                           
 32001                           ;gemsecs.c: 594:   D[0].delay = 5000;
 32002   013EC2  0E88               	movlw	136
 32003   013EC4  006F FFA0  FB71    	movff	wreg,_D+163
 32004   013ECA  0E13               	movlw	19
 32005   013ECC  006F FFA0  FB72    	movff	wreg,_D+164
 32006                           
 32007                           ;gemsecs.c: 595:   D[0].block.header = (uint8_t*) & D[0].message;
 32008   013ED2  0ECE               	movlw	low _D
 32009   013ED4  006F FFA0  FB6A    	movff	wreg,_D+156
 32010   013EDA  0E0A               	movlw	high _D
 32011   013EDC  006F FFA0  FB6B    	movff	wreg,_D+157
 32012                           
 32013                           ;gemsecs.c: 596:   D[0].block.length = sizeof(header153);
 32014   013EE2  0E9C               	movlw	156
 32015   013EE4  006F FFA0  FB6C    	movff	wreg,_D+158
 32016                           
 32017                           ;gemsecs.c: 597:   V.stack = D[0].stack;
 32018   013EEA  0062  FDCC  F02E   	movff	_D+165,btemp+11
 32019   013EF0  EE23  F169         	lfsr	2,_V+335	;volatile
 32020   013EF4  50DF               	movf	223,w,c
 32021   013EF6  182E               	xorwf	(btemp+11)^0,w,c
 32022   013EF8  0BF8               	andlw	-8
 32023   013EFA  182E               	xorwf	(btemp+11)^0,w,c
 32024   013EFC  6EDF               	movwf	223,c
 32025                           
 32026                           ;gemsecs.c: 598:   StartTimer(TMR_HBIO, D[V.stack - 1].delay);
 32027   013EFE  EE23  F169         	lfsr	2,_V+335	;volatile
 32028   013F02  50DF               	movf	223,w,c
 32029   013F04  0B07               	andlw	7
 32030   013F06  0DA6               	mullw	166
 32031   013F08  0ECB               	movlw	low (_D+65533)
 32032   013F0A  24F3               	addwf	243,w,c
 32033   013F0C  6ED9               	movwf	fsr2l,c
 32034   013F0E  0E0A               	movlw	high (_D+65533)
 32035   013F10  20F4               	addwfc	prodh,w,c
 32036   013F12  6EDA               	movwf	fsr2h,c
 32037   013F14  006F FF78  F02D    	movff	postinc2,btemp+10
 32038   013F1A  006F FF74  F02E    	movff	postdec2,btemp+11
 32039   013F20  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 32040   013F26  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 32041   013F2C  0E06               	movlw	6
 32042   013F2E  6EE6               	movwf	postinc1,c
 32043   013F30  EC02  F0BD         	call	_StartTimer	;wreg free
 32044                           
 32045                           ;gemsecs.c: 599:   break;
 32046   013F34  D011               	goto	l1996
 32047   013F36                     l8542:
 32048                           
 32049                           ;gemsecs.c: 601:   V.stack = 0;
 32050   013F36  EE23  F169         	lfsr	2,_V+335	;volatile
 32051   013F3A  0EF8               	movlw	-8
 32052   013F3C  16DF               	andwf	223,f,c
 32053   013F3E  D00C               	goto	l1996
 32054   013F40                     l8550:
 32055                           
 32056                           ;stkvar	_sid @ sp[(0)+-1]
 32057   013F40  0EFF               	movlw	-1
 32058   013F42  50E3               	movf	plusw1,w,c
 32059                           
 32060                           ; Switch size 1, requested type "simple"
 32061                           ; Number of cases is 3, Range of values is 1 to 11
 32062                           ; switch strategies available:
 32063                           ; Name         Instructions Cycles
 32064                           ; simple_byte           10     6 (average)
 32065                           ;	Chosen strategy is simple_byte
 32066   013F44  0A01               	xorlw	1	; case 1
 32067   013F46  B4D8               	btfsc	status,2,c
 32068   013F48  D697               	goto	l1991
 32069   013F4A  0A0B               	xorlw	11	; case 10
 32070   013F4C  B4D8               	btfsc	status,2,c
 32071   013F4E  D7A8               	goto	l1994
 32072   013F50  0A01               	xorlw	1	; case 11
 32073   013F52  B4D8               	btfsc	status,2,c
 32074   013F54  D7A5               	goto	l1994
 32075   013F56  D7EF               	goto	l8542
 32076   013F58                     l1996:
 32077                           
 32078                           ; _sequence_messages: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 32079   013F58  52E5               	movf	postdec1,f,c
 32080   013F5A  0012               	return		;funcret
 32081   013F5C                     __end_of_sequence_messages:
 32082                           	callstack 0
 32083                           
 32084 ;; *************** function _format_display_text *****************
 32085 ;; Defined at:
 32086 ;;		line 638 in file "gemsecs.c"
 32087 ;; Parameters:    Size  Location     Type
 32088 ;;  data            2  [STACK] PTR const unsigned char 
 32089 ;;		 -> V$terminal(160), V(387), 
 32090 ;; Auto vars:     Size  Location     Type
 32091 ;;  j               2  [STACK] short 
 32092 ;;  k               2  [STACK] short 
 32093 ;;  i               2  [STACK] short 
 32094 ;;  z               2  [STACK] short 
 32095 ;; Return value:  Size  Location     Type
 32096 ;;                  2  [STACK] unsigned short 
 32097 ;; Registers used:
 32098 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
 32099 ;; Tracked objects:
 32100 ;;		On entry : 3F/1
 32101 ;;		On exit  : 0/0
 32102 ;;		Unchanged: 0/0
 32103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32108 ;;Total ram usage:        0 bytes
 32109 ;; Hardware stack levels used: 1
 32110 ;; Hardware stack levels required when called: 4
 32111 ;; This function calls:
 32112 ;;		_strlen
 32113 ;; This function is called by:
 32114 ;;		_secs_II_message
 32115 ;;		_secs_gem_state
 32116 ;; This function uses a reentrant model
 32117 ;;
 32118                           
 32119                           	psect	text23
 32120   015842                     __ptext23:
 32121                           	callstack 0
 32122   015842                     _format_display_text:
 32123                           	callstack 0
 32124                           
 32125                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32126   015842  0E08               	movlw	8
 32127   015844  26E1               	addwf	fsr1l,f,c
 32128   015846  0E00               	movlw	0
 32129   015848  22E2               	addwfc	fsr1h,f,c
 32130                           
 32131                           ;gemsecs.c: 638: uint16_t format_display_text(const char *data);gemsecs.c: 639: {;gemsec
      +                          s.c: 640:  int16_t j, i = 0, k, z = 0;
 32132                           ;stkvar	_i @ sp[(-8)+4]
 32133                           
 32134                           ;incstack = 0
 32135   01584A  0EFC               	movlw	-4
 32136   01584C  6AE3               	clrf	plusw1,c
 32137   01584E  0EFD               	movlw	-3
 32138   015850  6AE3               	clrf	plusw1,c
 32139                           
 32140                           ;stkvar	_z @ sp[(-8)+6]
 32141   015852  0EFE               	movlw	-2
 32142   015854  6AE3               	clrf	plusw1,c
 32143   015856  0EFF               	movlw	-1
 32144   015858  6AE3               	clrf	plusw1,c
 32145                           
 32146                           ;gemsecs.c: 642:  k = (int16_t) strlen(data);
 32147                           ;stkvar	_data @ sp[(-8)+-2]
 32148   01585A  0EF6               	movlw	-10
 32149   01585C  006F FF8F FFE6     	movff	plusw1,postinc1
 32150   015862  006F FF8F FFE6     	movff	plusw1,postinc1
 32151   015868  ECE1  F0B7         	call	_strlen	;wreg free
 32152                           
 32153                           ;stkvar	_k @ sp[(-8)+2]
 32154   01586C  0EFA               	movlw	-6
 32155   01586E  0060  F08F  FFE3   	movff	btemp,plusw1
 32156   015874  0EFB               	movlw	-5
 32157   015876  0060  F093  FFE3   	movff	btemp+1,plusw1
 32158                           
 32159                           ;gemsecs.c: 644:  if (!k)
 32160                           ;stkvar	_k @ sp[(-8)+2]
 32161   01587C  0EFA               	movlw	-6
 32162   01587E  006F FF8C  F023    	movff	plusw1,btemp
 32163   015884  0EFB               	movlw	-5
 32164   015886  50E3               	movf	plusw1,w,c
 32165   015888  1023               	iorwf	btemp^0,w,c
 32166   01588A  B4D8               	btfsc	status,2,c
 32167   01588C  D086               	goto	u5630
 32168                           
 32169                           ;gemsecs.c: 650:  for (j = 135; j >= z; j--) {
 32170   01588E  0E87               	movlw	135
 32171   015890  6E2D               	movwf	(btemp+10)^0,c
 32172   015892  0E00               	movlw	0
 32173   015894  6E2E               	movwf	(btemp+11)^0,c
 32174                           
 32175                           ;stkvar	_j @ sp[(-8)+0]
 32176   015896  0EF8               	movlw	-8
 32177   015898  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 32178   01589E  0EF9               	movlw	-7
 32179   0158A0  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 32180   0158A6  D066               	goto	l8590
 32181   0158A8                     l8580:
 32182                           
 32183                           ;gemsecs.c: 651:   if (i < k) {
 32184                           ;stkvar	_k @ sp[(-8)+2]
 32185                           ;stkvar	_i @ sp[(-8)+4]
 32186   0158A8  50E1               	movf	fsr1l,w,c
 32187   0158AA  0FFC               	addlw	-4
 32188   0158AC  6ED9               	movwf	fsr2l,c
 32189   0158AE  50E2               	movf	fsr1h,w,c
 32190   0158B0  6EDA               	movwf	fsr2h,c
 32191   0158B2  0EFF               	movlw	255
 32192   0158B4  22DA               	addwfc	fsr2h,f,c
 32193   0158B6  0EFA               	movlw	-6
 32194   0158B8  50E3               	movf	plusw1,w,c
 32195   0158BA  5CDE               	subwf	postinc2,w,c
 32196   0158BC  50DE               	movf	postinc2,w,c
 32197   0158BE  0A80               	xorlw	128
 32198   0158C0  6E23               	movwf	btemp^0,c
 32199   0158C2  0EFB               	movlw	-5
 32200   0158C4  50E3               	movf	plusw1,w,c
 32201   0158C6  0A80               	xorlw	128
 32202   0158C8  5823               	subwfb	btemp^0,w,c
 32203   0158CA  B0D8               	btfsc	status,0,c
 32204   0158CC  D039               	goto	l8586
 32205                           
 32206                           ;gemsecs.c: 652:    H153[0].data[j] = data[i++];
 32207                           ;stkvar	_i @ sp[(-8)+4]
 32208   0158CE  0EFC               	movlw	-4
 32209   0158D0  006F FF8C  F02D    	movff	plusw1,btemp+10
 32210   0158D6  0EFD               	movlw	-3
 32211   0158D8  006F FF8C  F02E    	movff	plusw1,btemp+11
 32212                           
 32213                           ;stkvar	_data @ sp[(-8)+-2]
 32214   0158DE  0EF6               	movlw	-10
 32215   0158E0  006F FF8C  F02B    	movff	plusw1,btemp+8
 32216   0158E6  0EF7               	movlw	-9
 32217   0158E8  006F FF8C  F02C    	movff	plusw1,btemp+9
 32218   0158EE  502D               	movf	(btemp+10)^0,w,c
 32219   0158F0  242B               	addwf	(btemp+8)^0,w,c
 32220   0158F2  6ED9               	movwf	fsr2l,c
 32221   0158F4  502E               	movf	(btemp+11)^0,w,c
 32222   0158F6  202C               	addwfc	(btemp+9)^0,w,c
 32223   0158F8  6EDA               	movwf	fsr2h,c
 32224                           
 32225                           ;stkvar	_j @ sp[(-8)+0]
 32226   0158FA  0EF8               	movlw	-8
 32227   0158FC  006F FF8C  F02D    	movff	plusw1,btemp+10
 32228   015902  0EF9               	movlw	-7
 32229   015904  006F FF8C  F02E    	movff	plusw1,btemp+11
 32230   01590A  0E9F               	movlw	low (_H153+2)
 32231   01590C  242D               	addwf	(btemp+10)^0,w,c
 32232   01590E  6EE9               	movwf	fsr0l,c
 32233   015910  0E0D               	movlw	high (_H153+2)
 32234   015912  202E               	addwfc	(btemp+11)^0,w,c
 32235   015914  6EEA               	movwf	fsr0h,c
 32236   015916  006F FF7F FFEF     	movff	indf2,indf0
 32237                           
 32238                           ;stkvar	_i @ sp[(-8)+4]
 32239   01591C  0EFC               	movlw	-4
 32240   01591E  50E3               	movf	plusw1,w,c
 32241   015920  0F01               	addlw	1
 32242   015922  6E23               	movwf	btemp^0,c
 32243   015924  0EFC               	movlw	-4
 32244   015926  0060  F08F  FFE3   	movff	btemp,plusw1
 32245   01592C  6A23               	clrf	btemp^0,c
 32246   01592E  0EFD               	movlw	-3
 32247   015930  50E3               	movf	plusw1,w,c
 32248   015932  2023               	addwfc	btemp^0,w,c
 32249   015934  6E23               	movwf	btemp^0,c
 32250   015936  0EFD               	movlw	-3
 32251   015938  0060  F08F  FFE3   	movff	btemp,plusw1
 32252                           
 32253                           ;gemsecs.c: 653:   } else {
 32254   01593E  D010               	goto	l8588
 32255   015940                     l8586:
 32256                           
 32257                           ;gemsecs.c: 654:    H153[0].data[j] = ' ';
 32258                           ;stkvar	_j @ sp[(-8)+0]
 32259   015940  0EF8               	movlw	-8
 32260   015942  006F FF8C  F02D    	movff	plusw1,btemp+10
 32261   015948  0EF9               	movlw	-7
 32262   01594A  006F FF8C  F02E    	movff	plusw1,btemp+11
 32263   015950  0E9F               	movlw	low (_H153+2)
 32264   015952  242D               	addwf	(btemp+10)^0,w,c
 32265   015954  6ED9               	movwf	fsr2l,c
 32266   015956  0E0D               	movlw	high (_H153+2)
 32267   015958  202E               	addwfc	(btemp+11)^0,w,c
 32268   01595A  6EDA               	movwf	fsr2h,c
 32269   01595C  0E20               	movlw	32
 32270   01595E  6EDF               	movwf	indf2,c
 32271   015960                     l8588:
 32272                           
 32273                           ;gemsecs.c: 656:  }
 32274                           ;stkvar	_j @ sp[(-8)+0]
 32275   015960  50E1               	movf	fsr1l,w,c
 32276   015962  0FF8               	addlw	-8
 32277   015964  6ED9               	movwf	fsr2l,c
 32278   015966  50E2               	movf	fsr1h,w,c
 32279   015968  6EDA               	movwf	fsr2h,c
 32280   01596A  0EFF               	movlw	255
 32281   01596C  22DA               	addwfc	fsr2h,f,c
 32282   01596E  06DE               	decf	postinc2,f,c
 32283   015970  0E00               	movlw	0
 32284   015972  5ADD               	subwfb	postdec2,f,c
 32285   015974                     l8590:
 32286                           
 32287                           ;stkvar	_z @ sp[(-8)+6]
 32288                           ;stkvar	_j @ sp[(-8)+0]
 32289   015974  50E1               	movf	fsr1l,w,c
 32290   015976  0FF8               	addlw	-8
 32291   015978  6ED9               	movwf	fsr2l,c
 32292   01597A  50E2               	movf	fsr1h,w,c
 32293   01597C  6EDA               	movwf	fsr2h,c
 32294   01597E  0EFF               	movlw	255
 32295   015980  22DA               	addwfc	fsr2h,f,c
 32296   015982  0EFE               	movlw	-2
 32297   015984  50E3               	movf	plusw1,w,c
 32298   015986  5CDE               	subwf	postinc2,w,c
 32299   015988  50DE               	movf	postinc2,w,c
 32300   01598A  0A80               	xorlw	128
 32301   01598C  6E23               	movwf	btemp^0,c
 32302   01598E  0EFF               	movlw	-1
 32303   015990  50E3               	movf	plusw1,w,c
 32304   015992  0A80               	xorlw	128
 32305   015994  5823               	subwfb	btemp^0,w,c
 32306   015996  B0D8               	btfsc	status,0,c
 32307   015998  D787               	goto	l8580
 32308   01599A                     u5630:
 32309                           
 32310                           ; _format_display_text: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 2, argsize = 2, vargsize = 0
 32311   01599A  0EF6               	movlw	246
 32312   01599C  26E1               	addwf	fsr1l,f,c
 32313   01599E  0EFF               	movlw	255
 32314   0159A0  22E2               	addwfc	fsr1h,f,c
 32315   0159A2  0012               	return		;funcret
 32316   0159A4                     __end_of_format_display_text:
 32317                           	callstack 0
 32318                           
 32319 ;; *************** function _secs_II_monitor_message *****************
 32320 ;; Defined at:
 32321 ;;		line 1190 in file "gemsecs.c"
 32322 ;; Parameters:    Size  Location     Type
 32323 ;;  stream          1  [STACK] const unsigned char 
 32324 ;;  function        1  [STACK] const unsigned char 
 32325 ;;  dtime           2  [STACK] const unsigned short 
 32326 ;; Auto vars:     Size  Location     Type
 32327 ;;  msg_data        2  [STACK] PTR unsigned char 
 32328 ;;		 -> H254(257), 
 32329 ;; Return value:  Size  Location     Type
 32330 ;;                  1  [STACK] void 
 32331 ;; Registers used:
 32332 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 32333 ;; Tracked objects:
 32334 ;;		On entry : 0/1
 32335 ;;		On exit  : 0/0
 32336 ;;		Unchanged: 0/0
 32337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32342 ;;Total ram usage:        0 bytes
 32343 ;; Hardware stack levels used: 1
 32344 ;; Hardware stack levels required when called: 13
 32345 ;; This function calls:
 32346 ;;		_ee_logger
 32347 ;; This function is called by:
 32348 ;;		_m_protocol
 32349 ;;		_r_protocol
 32350 ;; This function uses a reentrant model
 32351 ;;
 32352                           
 32353                           	psect	text24
 32354   0160E6                     __ptext24:
 32355                           	callstack 0
 32356   0160E6                     _secs_II_monitor_message:
 32357                           	callstack 0
 32358                           
 32359                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32360   0160E6  52E6               	movf	postinc1,f,c
 32361   0160E8  52E6               	movf	postinc1,f,c
 32362                           
 32363                           ;gemsecs.c: 1190: void secs_II_monitor_message(const uint8_t stream, const uint8_t funct
      +                          ion, const uint16_t dtime);gemsecs.c: 1191: {;gemsecs.c: 1192:  uint8_t * msg_data = (ui
      +                          nt8_t*) & H254[0];
 32364                           ;stkvar	_msg_data @ sp[(-2)+0]
 32365                           
 32366                           ;incstack = 0
 32367   0160EA  0E0E               	movlw	high _H254
 32368   0160EC  6E23               	movwf	btemp^0,c
 32369   0160EE  0EFF               	movlw	-1
 32370   0160F0  0060  F08F  FFE3   	movff	btemp,plusw1
 32371   0160F6  0ED5               	movlw	low _H254
 32372   0160F8  6E23               	movwf	btemp^0,c
 32373   0160FA  0EFE               	movlw	-2
 32374   0160FC  0060  F08F  FFE3   	movff	btemp,plusw1
 32375                           
 32376                           ;gemsecs.c: 1193:  static uint8_t store1_1 = 1, store1_13 = 1, store6_11 = 1;;gemsecs.c:
      +                           1196:  ++V.ticks;
 32377   016102  EE23  F141         	lfsr	2,_V+295	;volatile
 32378   016106  2ADE               	incf	postinc2,f,c
 32379   016108  0E00               	movlw	0
 32380   01610A  22DE               	addwfc	postinc2,f,c
 32381   01610C  22DE               	addwfc	postinc2,f,c
 32382   01610E  22DE               	addwfc	postinc2,f,c
 32383                           
 32384                           ;gemsecs.c: 1197:  switch (stream) {
 32385   016110  D068               	goto	l12482
 32386   016112                     l12444:
 32387                           
 32388                           ;gemsecs.c: 1201:    if (!store1_1)
 32389   016112  5051               	movf	secs_II_monitor_message@store1_1^0,w,c
 32390   016114  B4D8               	btfsc	status,2,c
 32391   016116  D070               	goto	l2233
 32392                           
 32393                           ;gemsecs.c: 1203:    store1_1 = 0;
 32394   016118  6A51               	clrf	secs_II_monitor_message@store1_1^0,c
 32395   01611A                     l12448:
 32396                           
 32397                           ;gemsecs.c: 1205:    ee_logger(stream, function, dtime, msg_data);
 32398                           ;stkvar	_msg_data @ sp[(-2)+0]
 32399   01611A  0EFE               	movlw	-2
 32400   01611C  006F FF8F FFE6     	movff	plusw1,postinc1
 32401   016122  006F FF8F FFE6     	movff	plusw1,postinc1
 32402                           
 32403                           ;stkvar	_dtime @ sp[(-4)+-4]
 32404   016128  0EF8               	movlw	-8
 32405   01612A  006F FF8F FFE6     	movff	plusw1,postinc1
 32406   016130  006F FF8F FFE6     	movff	plusw1,postinc1
 32407                           
 32408                           ;stkvar	_function @ sp[(-6)+-2]
 32409   016136  0EF8               	movlw	-8
 32410   016138  50E3               	movf	plusw1,w,c
 32411   01613A  6EE6               	movwf	postinc1,c
 32412                           
 32413                           ;stkvar	_stream @ sp[(-7)+-1]
 32414   01613C  0EF8               	movlw	-8
 32415   01613E  50E3               	movf	plusw1,w,c
 32416   016140  6EE6               	movwf	postinc1,c
 32417   016142  EC51  F0AF         	call	_ee_logger	;wreg free
 32418                           
 32419                           ;gemsecs.c: 1206:    break;
 32420   016146  D058               	goto	l2233
 32421   016148                     l12450:
 32422                           
 32423                           ;gemsecs.c: 1208:    if (!store1_13)
 32424   016148  5050               	movf	secs_II_monitor_message@store1_13^0,w,c
 32425   01614A  B4D8               	btfsc	status,2,c
 32426   01614C  D055               	goto	l2233
 32427                           
 32428                           ;gemsecs.c: 1210:    store1_13 = 0;
 32429   01614E  6A50               	clrf	secs_II_monitor_message@store1_13^0,c
 32430   016150  D7E4               	goto	l12448
 32431   016152                     l12458:
 32432                           
 32433                           ;stkvar	_function @ sp[(-2)+-2]
 32434   016152  0EFC               	movlw	-4
 32435   016154  50E3               	movf	plusw1,w,c
 32436                           
 32437                           ; Switch size 1, requested type "simple"
 32438                           ; Number of cases is 2, Range of values is 1 to 13
 32439                           ; switch strategies available:
 32440                           ; Name         Instructions Cycles
 32441                           ; simple_byte            7     4 (average)
 32442                           ;	Chosen strategy is simple_byte
 32443   016156  0A01               	xorlw	1	; case 1
 32444   016158  B4D8               	btfsc	status,2,c
 32445   01615A  D7DB               	goto	l12444
 32446   01615C  0A0C               	xorlw	12	; case 13
 32447   01615E  B4D8               	btfsc	status,2,c
 32448   016160  D7F3               	goto	l12450
 32449   016162  D04A               	goto	l2233
 32450   016164                     l12460:
 32451                           
 32452                           ;gemsecs.c: 1223:    ee_logger(stream, function, dtime, msg_data);
 32453                           ;stkvar	_msg_data @ sp[(-2)+0]
 32454   016164  0EFE               	movlw	-2
 32455   016166  006F FF8F FFE6     	movff	plusw1,postinc1
 32456   01616C  006F FF8F FFE6     	movff	plusw1,postinc1
 32457                           
 32458                           ;stkvar	_dtime @ sp[(-4)+-4]
 32459   016172  0EF8               	movlw	-8
 32460   016174  006F FF8F FFE6     	movff	plusw1,postinc1
 32461   01617A  006F FF8F FFE6     	movff	plusw1,postinc1
 32462                           
 32463                           ;stkvar	_function @ sp[(-6)+-2]
 32464   016180  0EF8               	movlw	-8
 32465   016182  50E3               	movf	plusw1,w,c
 32466   016184  6EE6               	movwf	postinc1,c
 32467                           
 32468                           ;stkvar	_stream @ sp[(-7)+-1]
 32469   016186  0EF8               	movlw	-8
 32470   016188  50E3               	movf	plusw1,w,c
 32471   01618A  6EE6               	movwf	postinc1,c
 32472   01618C  EC51  F0AF         	call	_ee_logger	;wreg free
 32473                           
 32474                           ;gemsecs.c: 1224:    if (function == 42) {
 32475                           ;stkvar	_function @ sp[(-2)+-2]
 32476   016190  0EFC               	movlw	-4
 32477   016192  006F FF8C  F023    	movff	plusw1,btemp
 32478   016198  0E2A               	movlw	42
 32479   01619A  1823               	xorwf	btemp^0,w,c
 32480   01619C  A4D8               	btfss	status,2,c
 32481   01619E  D01B               	goto	l12478
 32482                           
 32483                           ;gemsecs.c: 1225:     V.msg_ret = 0;
 32484   0161A0  0E00               	movlw	0
 32485   0161A2  006F FFA0  FD52    	movff	wreg,_V+312	;volatile
 32486                           
 32487                           ;gemsecs.c: 1226:     V.msg_error = MSG_ERROR_NONE;
 32488   0161A8  0E00               	movlw	0
 32489   0161AA  006F FFA0  FD51    	movff	wreg,_V+311	;volatile
 32490                           
 32491                           ;gemsecs.c: 1227:     V.response.info = DIS_STR;
 32492   0161B0  0E00               	movlw	0
 32493   0161B2  006F FFA0  FD91    	movff	wreg,_V+375	;volatile
 32494   0161B8  D00E               	goto	l12478
 32495   0161BA                     l12468:
 32496                           
 32497                           ;stkvar	_function @ sp[(-2)+-2]
 32498   0161BA  0EFC               	movlw	-4
 32499   0161BC  50E3               	movf	plusw1,w,c
 32500                           
 32501                           ; Switch size 1, requested type "simple"
 32502                           ; Number of cases is 2, Range of values is 41 to 42
 32503                           ; switch strategies available:
 32504                           ; Name         Instructions Cycles
 32505                           ; simple_byte            7     4 (average)
 32506                           ;	Chosen strategy is simple_byte
 32507   0161BE  0A29               	xorlw	41	; case 41
 32508   0161C0  B4D8               	btfsc	status,2,c
 32509   0161C2  D7D0               	goto	l12460
 32510   0161C4  0A03               	xorlw	3	; case 42
 32511   0161C6  B4D8               	btfsc	status,2,c
 32512   0161C8  D7CD               	goto	l12460
 32513                           
 32514                           ;gemsecs.c: 1234:   switch (function) {
 32515                           
 32516                           ;gemsecs.c: 1233:  case 6:
 32517   0161CA  D005               	goto	l12478
 32518   0161CC                     l12470:
 32519                           
 32520                           ;gemsecs.c: 1236:    if (!store6_11)
 32521   0161CC  504F               	movf	secs_II_monitor_message@store6_11^0,w,c
 32522   0161CE  B4D8               	btfsc	status,2,c
 32523   0161D0  D013               	goto	l2233
 32524                           
 32525                           ;gemsecs.c: 1238:    store6_11 = 0;
 32526   0161D2  6A4F               	clrf	secs_II_monitor_message@store6_11^0,c
 32527   0161D4  D7A2               	goto	l12448
 32528   0161D6                     l12478:
 32529                           
 32530                           ;stkvar	_function @ sp[(-2)+-2]
 32531   0161D6  0EFC               	movlw	-4
 32532   0161D8  50E3               	movf	plusw1,w,c
 32533                           
 32534                           ; Switch size 1, requested type "simple"
 32535                           ; Number of cases is 1, Range of values is 11 to 11
 32536                           ; switch strategies available:
 32537                           ; Name         Instructions Cycles
 32538                           ; simple_byte            4     3 (average)
 32539                           ;	Chosen strategy is simple_byte
 32540   0161DA  0A0B               	xorlw	11	; case 11
 32541   0161DC  B4D8               	btfsc	status,2,c
 32542   0161DE  D7F6               	goto	l12470
 32543   0161E0  D00B               	goto	l2233
 32544   0161E2                     l12482:
 32545                           
 32546                           ;stkvar	_stream @ sp[(-2)+-1]
 32547   0161E2  0EFD               	movlw	-3
 32548   0161E4  50E3               	movf	plusw1,w,c
 32549                           
 32550                           ; Switch size 1, requested type "simple"
 32551                           ; Number of cases is 3, Range of values is 1 to 6
 32552                           ; switch strategies available:
 32553                           ; Name         Instructions Cycles
 32554                           ; simple_byte           10     6 (average)
 32555                           ;	Chosen strategy is simple_byte
 32556   0161E6  0A01               	xorlw	1	; case 1
 32557   0161E8  B4D8               	btfsc	status,2,c
 32558   0161EA  D7B3               	goto	l12458
 32559   0161EC  0A03               	xorlw	3	; case 2
 32560   0161EE  B4D8               	btfsc	status,2,c
 32561   0161F0  D7E4               	goto	l12468
 32562   0161F2  0A04               	xorlw	4	; case 6
 32563   0161F4  B4D8               	btfsc	status,2,c
 32564   0161F6  D7EF               	goto	l12478
 32565   0161F8                     l2233:
 32566                           
 32567                           ; _secs_II_monitor_message: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 32568   0161F8  0EFA               	movlw	250
 32569   0161FA  26E1               	addwf	fsr1l,f,c
 32570   0161FC  0EFF               	movlw	255
 32571   0161FE  22E2               	addwfc	fsr1h,f,c
 32572   016200  0012               	return		;funcret
 32573   016202                     __end_of_secs_II_monitor_message:
 32574                           	callstack 0
 32575                           
 32576 ;; *************** function _ee_logger *****************
 32577 ;; Defined at:
 32578 ;;		line 1170 in file "gemsecs.c"
 32579 ;; Parameters:    Size  Location     Type
 32580 ;;  stream          1  [STACK] const unsigned char 
 32581 ;;  function        1  [STACK] const unsigned char 
 32582 ;;  dtime           2  [STACK] const unsigned short 
 32583 ;;  msg_data        2  [STACK] PTR unsigned char 
 32584 ;;		 -> H254(257), 
 32585 ;; Auto vars:     Size  Location     Type
 32586 ;;  i               2  [STACK] unsigned short 
 32587 ;; Return value:  Size  Location     Type
 32588 ;;                  1  [STACK] void 
 32589 ;; Registers used:
 32590 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 32591 ;; Tracked objects:
 32592 ;;		On entry : 0/1
 32593 ;;		On exit  : 0/0
 32594 ;;		Unchanged: 0/0
 32595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32600 ;;Total ram usage:        0 bytes
 32601 ;; Hardware stack levels used: 1
 32602 ;; Hardware stack levels required when called: 12
 32603 ;; This function calls:
 32604 ;;		_DATAEE_WriteByte
 32605 ;;		_StartTimer
 32606 ;;		_sprintf
 32607 ;; This function is called by:
 32608 ;;		_secs_II_monitor_message
 32609 ;; This function uses a reentrant model
 32610 ;;
 32611                           
 32612                           	psect	text25
 32613   015EA2                     __ptext25:
 32614                           	callstack 0
 32615   015EA2                     _ee_logger:
 32616                           	callstack 0
 32617                           
 32618                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32619   015EA2  52E6               	movf	postinc1,f,c
 32620   015EA4  52E6               	movf	postinc1,f,c
 32621                           
 32622                           ;gemsecs.c: 1170: static void ee_logger(const uint8_t stream, const uint8_t function, co
      +                          nst uint16_t dtime, uint8_t *msg_data);gemsecs.c: 1171: {;gemsecs.c: 1172:  uint16_t i =
      +                           0;
 32623                           ;stkvar	_i @ sp[(-2)+0]
 32624                           
 32625                           ;incstack = 0
 32626   015EA6  0EFE               	movlw	-2
 32627   015EA8  6AE3               	clrf	plusw1,c
 32628   015EAA  0EFF               	movlw	-1
 32629   015EAC  6AE3               	clrf	plusw1,c
 32630   015EAE                     l12396:
 32631                           
 32632                           ;gemsecs.c: 1175:   DATAEE_WriteByte(i + ((uint16_t) (V.response.log_seq & 0x03) << 8), 
      +                          msg_data[254 + 2 - i]);
 32633                           ;stkvar	_i @ sp[(-2)+0]
 32634                           ;stkvar	_msg_data @ sp[(-2)+-6]
 32635   015EAE  0EF8               	movlw	-8
 32636   015EB0  006F FF8C  F02D    	movff	plusw1,btemp+10
 32637   015EB6  0EF9               	movlw	-7
 32638   015EB8  006F FF8C  F02E    	movff	plusw1,btemp+11
 32639   015EBE  0EFE               	movlw	-2
 32640   015EC0  50E3               	movf	plusw1,w,c
 32641   015EC2  5E2D               	subwf	(btemp+10)^0,f,c
 32642   015EC4  0EFF               	movlw	-1
 32643   015EC6  50E3               	movf	plusw1,w,c
 32644   015EC8  5A2E               	subwfb	(btemp+11)^0,f,c
 32645   015ECA  0E00               	movlw	0
 32646   015ECC  242D               	addwf	(btemp+10)^0,w,c
 32647   015ECE  6ED9               	movwf	fsr2l,c
 32648   015ED0  0E01               	movlw	1
 32649   015ED2  202E               	addwfc	(btemp+11)^0,w,c
 32650   015ED4  6EDA               	movwf	fsr2h,c
 32651   015ED6  50DF               	movf	indf2,w,c
 32652   015ED8  6EE6               	movwf	postinc1,c
 32653                           
 32654                           ;stkvar	_i @ sp[(-3)+0]
 32655                           ; multi bank
 32656   015EDA  010D               	movlb	(_V+373) shr (0+8)	;volatile
 32657   015EDC  518F               	movf	(_V+373)& (0+255),w,b	;volatile
 32658   015EDE  0B03               	andlw	3
 32659   015EE0  6E2E               	movwf	(btemp+11)^0,c
 32660   015EE2  6A2D               	clrf	(btemp+10)^0,c
 32661   015EE4  0EFD               	movlw	-3
 32662   015EE6  50E3               	movf	plusw1,w,c
 32663   015EE8  262D               	addwf	(btemp+10)^0,f,c
 32664   015EEA  0EFE               	movlw	-2
 32665   015EEC  50E3               	movf	plusw1,w,c
 32666   015EEE  222E               	addwfc	(btemp+11)^0,f,c
 32667   015EF0  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 32668   015EF6  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 32669   015EFC  EC58  F0B8         	call	_DATAEE_WriteByte	;wreg free
 32670                           
 32671                           ;gemsecs.c: 1176:  } while (++i <= 255);
 32672                           ;stkvar	_i @ sp[(-2)+0]
 32673   015F00  0EFE               	movlw	-2
 32674   015F02  50E3               	movf	plusw1,w,c
 32675   015F04  0F01               	addlw	1
 32676   015F06  6E23               	movwf	btemp^0,c
 32677   015F08  0EFE               	movlw	-2
 32678   015F0A  0060  F08F  FFE3   	movff	btemp,plusw1
 32679   015F10  6A23               	clrf	btemp^0,c
 32680   015F12  0EFF               	movlw	-1
 32681   015F14  50E3               	movf	plusw1,w,c
 32682   015F16  2023               	addwfc	btemp^0,w,c
 32683   015F18  6E23               	movwf	btemp^0,c
 32684   015F1A  0EFF               	movlw	-1
 32685   015F1C  0060  F08F  FFE3   	movff	btemp,plusw1
 32686   015F22  0EFF               	movlw	-1
 32687   015F24  04E3               	decf	plusw1,w,c
 32688   015F26  A0D8               	btfss	status,0,c
 32689   015F28  D7C2               	goto	l12396
 32690                           
 32691                           ;gemsecs.c: 1178:  sprintf(V.info, "Saved S%dF%d %d     ", stream, function, V.response.
      +                          log_num);
 32692   015F2A  EE23  F195         	lfsr	2,_V+379	;volatile
 32693   015F2E  006F FF78  F02D    	movff	postinc2,btemp+10
 32694   015F34  006F FF74  F02E    	movff	postdec2,btemp+11
 32695   015F3A  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 32696   015F40  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 32697                           
 32698                           ;stkvar	_function @ sp[(-4)+-2]
 32699   015F46  0EFA               	movlw	-6
 32700   015F48  50E3               	movf	plusw1,w,c
 32701   015F4A  6EE6               	movwf	postinc1,c
 32702   015F4C  0E00               	movlw	0
 32703   015F4E  6EE6               	movwf	postinc1,c
 32704                           
 32705                           ;stkvar	_stream @ sp[(-6)+-1]
 32706   015F50  0EF9               	movlw	-7
 32707   015F52  50E3               	movf	plusw1,w,c
 32708   015F54  6EE6               	movwf	postinc1,c
 32709   015F56  0E00               	movlw	0
 32710   015F58  6EE6               	movwf	postinc1,c
 32711   015F5A  0EF7               	movlw	low STR_36
 32712   015F5C  6EE6               	movwf	postinc1,c
 32713   015F5E  0EFD               	movlw	high STR_36
 32714   015F60  6EE6               	movwf	postinc1,c
 32715   015F62  0E01               	movlw	low (_V+231)
 32716   015F64  6EE6               	movwf	postinc1,c
 32717   015F66  0E0D               	movlw	high (_V+231)
 32718   015F68  6EE6               	movwf	postinc1,c
 32719   015F6A  0E0A               	movlw	10
 32720   015F6C  6EE6               	movwf	postinc1,c
 32721   015F6E  EC0A  F0B3         	call	_sprintf	;wreg free
 32722                           
 32723                           ; BSR set to: 1
 32724                           ;gemsecs.c: 1179:  StartTimer(TMR_INFO, dtime);
 32725                           ;stkvar	_dtime @ sp[(-2)+-4]
 32726   015F72  0EFA               	movlw	-6
 32727   015F74  006F FF8F FFE6     	movff	plusw1,postinc1
 32728   015F7A  006F FF8F FFE6     	movff	plusw1,postinc1
 32729   015F80  0E07               	movlw	7
 32730   015F82  6EE6               	movwf	postinc1,c
 32731   015F84  EC02  F0BD         	call	_StartTimer	;wreg free
 32732                           
 32733                           ;gemsecs.c: 1180:  V.response.info = DIS_LOG;
 32734   015F88  0E02               	movlw	2
 32735   015F8A  006F FFA0  FD91    	movff	wreg,_V+375	;volatile
 32736                           
 32737                           ;gemsecs.c: 1181:  V.response.log_num++;
 32738   015F90  EE23  F195         	lfsr	2,_V+379	;volatile
 32739   015F94  2ADE               	incf	postinc2,f,c
 32740   015F96  0E00               	movlw	0
 32741   015F98  22DD               	addwfc	postdec2,f,c
 32742                           
 32743                           ;gemsecs.c: 1182:  V.response.log_seq++;
 32744   015F9A  0063  F63F  FFE8   	movff	_V+373,wreg	;volatile
 32745   015FA0  0F01               	addlw	1
 32746   015FA2  006F FFA0  FD8F    	movff	wreg,_V+373	;volatile
 32747                           
 32748                           ;gemsecs.c: 1183:  if (V.response.log_seq >= 3)
 32749   015FA8  EE23  F18F         	lfsr	2,_V+373	;volatile
 32750   015FAC  0E02               	movlw	2
 32751   015FAE  64DF               	cpfsgt	indf2,c
 32752   015FB0  D004               	goto	l2200
 32753                           
 32754                           ;gemsecs.c: 1184:   V.response.log_seq = 0;
 32755   015FB2  0E00               	movlw	0
 32756   015FB4  006F FFA0  FD8F    	movff	wreg,_V+373	;volatile
 32757   015FBA                     l2200:
 32758                           
 32759                           ; _ee_logger: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 32760   015FBA  0EF8               	movlw	248
 32761   015FBC  26E1               	addwf	fsr1l,f,c
 32762   015FBE  0EFF               	movlw	255
 32763   015FC0  22E2               	addwfc	fsr1h,f,c
 32764   015FC2  0012               	return		;funcret
 32765   015FC4                     __end_of_ee_logger:
 32766                           	callstack 0
 32767                           
 32768 ;; *************** function _DATAEE_WriteByte *****************
 32769 ;; Defined at:
 32770 ;;		line 172 in file "mcc_generated_files/memory.c"
 32771 ;; Parameters:    Size  Location     Type
 32772 ;;  bAdd            2  [STACK] unsigned short 
 32773 ;;  bData           1  [STACK] unsigned char 
 32774 ;; Auto vars:     Size  Location     Type
 32775 ;;  GIEBitValue     1  [STACK] unsigned char 
 32776 ;; Return value:  Size  Location     Type
 32777 ;;                  1  [STACK] void 
 32778 ;; Registers used:
 32779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 32780 ;; Tracked objects:
 32781 ;;		On entry : 0/3C
 32782 ;;		On exit  : 0/0
 32783 ;;		Unchanged: 0/0
 32784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32789 ;;Total ram usage:        0 bytes
 32790 ;; Hardware stack levels used: 1
 32791 ;; Hardware stack levels required when called: 3
 32792 ;; This function calls:
 32793 ;;		Nothing
 32794 ;; This function is called by:
 32795 ;;		_secs_II_message
 32796 ;;		_ee_logger
 32797 ;; This function uses a reentrant model
 32798 ;;
 32799                           
 32800                           	psect	text26
 32801   0170B0                     __ptext26:
 32802                           	callstack 0
 32803   0170B0                     _DATAEE_WriteByte:
 32804                           	callstack 0
 32805                           
 32806                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32807   0170B0  52E6               	movf	postinc1,f,c
 32808                           
 32809                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 32810                           
 32811                           ;incstack = 0
 32812   0170B2  AED2               	btfss	210,7,c	;volatile
 32813   0170B4  D003               	goto	u5340
 32814   0170B6  6A2E               	clrf	(btemp+11)^0,c
 32815   0170B8  2A2E               	incf	(btemp+11)^0,f,c
 32816   0170BA  D001               	goto	u5348
 32817   0170BC                     u5340:
 32818   0170BC  6A2E               	clrf	(btemp+11)^0,c
 32819   0170BE                     u5348:
 32820                           
 32821                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 32822   0170BE  0EFF               	movlw	-1
 32823   0170C0  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 32824                           
 32825                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 32826                           ;stkvar	_bAdd @ sp[(-1)+-2]
 32827   0170C6  0EFE               	movlw	254
 32828   0170C8  24E1               	addwf	fsr1l,w,c
 32829   0170CA  6ED9               	movwf	fsr2l,c
 32830   0170CC  0EFF               	movlw	255
 32831   0170CE  20E2               	addwfc	fsr1h,w,c
 32832   0170D0  6EDA               	movwf	fsr2h,c
 32833   0170D2  50DF               	movf	indf2,w,c
 32834   0170D4  0B03               	andlw	3
 32835   0170D6  0139               	movlb	57	; () banked
 32836   0170D8  6FE1               	movwf	225,b	;volatile
 32837                           
 32838                           ; BSR set to: 57
 32839                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 32840                           ;stkvar	_bAdd @ sp[(-1)+-2]
 32841   0170DA  0EFD               	movlw	-3
 32842   0170DC  006F FF8F F9E0     	movff	plusw1,14816	;volatile
 32843                           
 32844                           ; BSR set to: 57
 32845                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 32846                           ;stkvar	_bData @ sp[(-1)+-3]
 32847   0170E2  0EFC               	movlw	-4
 32848   0170E4  006F FF8F F9E3     	movff	plusw1,14819	;volatile
 32849                           
 32850                           ; BSR set to: 57
 32851                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 32852   0170EA  0E3F               	movlw	-193
 32853   0170EC  17E5               	andwf	229,f,b	;volsfr
 32854                           
 32855                           ; BSR set to: 57
 32856                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 32857   0170EE  85E5               	bsf	229,2,b	;volsfr
 32858                           
 32859                           ; BSR set to: 57
 32860                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 32861   0170F0  9ED2               	bcf	210,7,c	;volatile
 32862                           
 32863                           ; BSR set to: 57
 32864                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 32865   0170F2  0E55               	movlw	85
 32866   0170F4  6FE6               	movwf	230,b	;volsfr
 32867                           
 32868                           ; BSR set to: 57
 32869                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 32870   0170F6  0EAA               	movlw	170
 32871   0170F8  6FE6               	movwf	230,b	;volsfr
 32872                           
 32873                           ; BSR set to: 57
 32874                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 32875   0170FA  83E5               	bsf	229,1,b	;volsfr
 32876   0170FC                     l1080:
 32877                           
 32878                           ; BSR set to: 57
 32879                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 32880   0170FC  B3E5               	btfsc	229,1,b	;volsfr
 32881   0170FE  D7FE               	goto	l1080
 32882                           
 32883                           ; BSR set to: 57
 32884                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 32885   017100  95E5               	bcf	229,2,b	;volsfr
 32886                           
 32887                           ; BSR set to: 57
 32888                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 32889                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 32890   017102  0EFF               	movlw	-1
 32891   017104  B0E3               	btfsc	plusw1,0,c
 32892   017106  D002               	bra	u5365
 32893   017108  9ED2               	bcf	210,7,c	;volatile
 32894   01710A  D001               	bra	u5366
 32895   01710C                     u5365:
 32896   01710C  8ED2               	bsf	210,7,c	;volatile
 32897   01710E                     u5366:
 32898                           
 32899                           ; _DATAEE_WriteByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 32900   01710E  52E5               	movf	postdec1,f,c
 32901   017110  52E5               	movf	postdec1,f,c
 32902   017112  52E5               	movf	postdec1,f,c
 32903   017114  52E5               	movf	postdec1,f,c
 32904   017116  0012               	return		;funcret
 32905   017118                     __end_of_DATAEE_WriteByte:
 32906                           	callstack 0
 32907                           
 32908 ;; *************** function _run_checksum *****************
 32909 ;; Defined at:
 32910 ;;		line 39 in file "gemsecs.c"
 32911 ;; Parameters:    Size  Location     Type
 32912 ;;  byte_block      1  [STACK] const unsigned char 
 32913 ;;  clear           1  [STACK] const _Bool 
 32914 ;; Auto vars:     Size  Location     Type
 32915 ;;		None
 32916 ;; Return value:  Size  Location     Type
 32917 ;;                  2  [STACK] unsigned short 
 32918 ;; Registers used:
 32919 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 32920 ;; Tracked objects:
 32921 ;;		On entry : 6/39
 32922 ;;		On exit  : 0/0
 32923 ;;		Unchanged: 0/0
 32924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32929 ;;Total ram usage:        0 bytes
 32930 ;; Hardware stack levels used: 1
 32931 ;; Hardware stack levels required when called: 3
 32932 ;; This function calls:
 32933 ;;		Nothing
 32934 ;; This function is called by:
 32935 ;;		_m_protocol
 32936 ;;		_r_protocol
 32937 ;; This function uses a reentrant model
 32938 ;;
 32939                           
 32940                           	psect	text27
 32941   017F36                     __ptext27:
 32942                           	callstack 0
 32943   017F36                     _run_checksum:
 32944                           	callstack 26
 32945                           
 32946                           ;gemsecs.c: 39: uint16_t run_checksum(const uint8_t byte_block, const _Bool clear);gemse
      +                          cs.c: 40: {;gemsecs.c: 41:  static uint16_t sum = 0;;gemsecs.c: 43:  if (clear) {
 32947                           ;stkvar	_clear @ sp[(0)+-2]
 32948                           
 32949                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32950                           ;incstack = 0
 32951   017F36  0EFE               	movlw	-2
 32952   017F38  50E3               	movf	plusw1,w,c
 32953   017F3A  B4D8               	btfsc	status,2,c
 32954   017F3C  D002               	goto	l9326
 32955                           
 32956                           ;gemsecs.c: 44:   sum = 0;
 32957   017F3E  6A03               	clrf	run_checksum@sum^0,c
 32958   017F40  6A04               	clrf	(run_checksum@sum+1)^0,c
 32959   017F42                     l9326:
 32960                           
 32961                           ;gemsecs.c: 47:  sum += byte_block;
 32962                           ;stkvar	_byte_block @ sp[(0)+-1]
 32963   017F42  0EFF               	movlw	-1
 32964   017F44  50E3               	movf	plusw1,w,c
 32965   017F46  2603               	addwf	run_checksum@sum^0,f,c
 32966   017F48  0E00               	movlw	0
 32967   017F4A  2204               	addwfc	(run_checksum@sum+1)^0,f,c
 32968                           
 32969                           ;gemsecs.c: 48:  return sum;
 32970   017F4C  C003  F023         	movff	run_checksum@sum,btemp
 32971   017F50  C004  F024         	movff	run_checksum@sum+1,btemp+1
 32972                           
 32973                           ; _run_checksum: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
 32974   017F54  52E5               	movf	postdec1,f,c
 32975   017F56  52E5               	movf	postdec1,f,c
 32976   017F58  0012               	return		;funcret
 32977   017F5A                     __end_of_run_checksum:
 32978                           	callstack 0
 32979                           
 32980 ;; *************** function _UART2_is_rx_ready *****************
 32981 ;; Defined at:
 32982 ;;		line 137 in file "mcc_generated_files/uart2.c"
 32983 ;; Parameters:    Size  Location     Type
 32984 ;;		None
 32985 ;; Auto vars:     Size  Location     Type
 32986 ;;		None
 32987 ;; Return value:  Size  Location     Type
 32988 ;;                  1  [STACK] unsigned char 
 32989 ;; Registers used:
 32990 ;;		btemp
 32991 ;; Tracked objects:
 32992 ;;		On entry : 0/3C
 32993 ;;		On exit  : 0/0
 32994 ;;		Unchanged: 0/0
 32995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33000 ;;Total ram usage:        0 bytes
 33001 ;; Hardware stack levels used: 1
 33002 ;; Hardware stack levels required when called: 3
 33003 ;; This function calls:
 33004 ;;		Nothing
 33005 ;; This function is called by:
 33006 ;;		_m_protocol
 33007 ;; This function uses a reentrant model
 33008 ;;
 33009                           
 33010                           	psect	text28
 33011   018286                     __ptext28:
 33012                           	callstack 0
 33013   018286                     _UART2_is_rx_ready:
 33014                           	callstack 26
 33015                           
 33016                           ;mcc_generated_files/uart2.c: 139:     return uart2RxCount;
 33017                           
 33018                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33019                           ;incstack = 0
 33020   018286  C010  F023         	movff	_uart2RxCount,btemp	;volatile
 33021                           
 33022                           ; _UART2_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33023   01828A  0012               	return		;funcret
 33024   01828C                     __end_of_UART2_is_rx_ready:
 33025                           	callstack 0
 33026                           
 33027 ;; *************** function _UART2_Read *****************
 33028 ;; Defined at:
 33029 ;;		line 152 in file "mcc_generated_files/uart2.c"
 33030 ;; Parameters:    Size  Location     Type
 33031 ;;		None
 33032 ;; Auto vars:     Size  Location     Type
 33033 ;;  readValue       1  [STACK] unsigned char 
 33034 ;; Return value:  Size  Location     Type
 33035 ;;                  1  [STACK] unsigned char 
 33036 ;; Registers used:
 33037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
 33038 ;; Tracked objects:
 33039 ;;		On entry : 0/3C
 33040 ;;		On exit  : 3F/39
 33041 ;;		Unchanged: 0/0
 33042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33047 ;;Total ram usage:        0 bytes
 33048 ;; Hardware stack levels used: 1
 33049 ;; Hardware stack levels required when called: 3
 33050 ;; This function calls:
 33051 ;;		Nothing
 33052 ;; This function is called by:
 33053 ;;		_m_protocol
 33054 ;; This function uses a reentrant model
 33055 ;;
 33056                           
 33057                           	psect	text29
 33058   017950                     __ptext29:
 33059                           	callstack 0
 33060   017950                     _UART2_Read:
 33061                           	callstack 0
 33062                           
 33063                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33064   017950  52E6               	movf	postinc1,f,c
 33065   017952                     
 33066                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
 33067                           
 33068                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
 33069   017952  5010               	movf	_uart2RxCount^0,w,c	;volatile
 33070   017954  B4D8               	btfsc	status,2,c
 33071   017956  D7FD               	goto	l9242
 33072                           
 33073                           ;mcc_generated_files/uart2.c: 160:     readValue = uart2RxBuffer[uart2RxTail++];
 33074   017958  0E00               	movlw	low _uart2RxBuffer
 33075   01795A  2411               	addwf	_uart2RxTail^0,w,c	;volatile
 33076   01795C  6ED9               	movwf	fsr2l,c
 33077   01795E  6ADA               	clrf	fsr2h,c
 33078   017960  0E05               	movlw	high _uart2RxBuffer
 33079   017962  22DA               	addwfc	fsr2h,f,c
 33080   017964  50DF               	movf	indf2,w,c
 33081   017966  6E2E               	movwf	(btemp+11)^0,c
 33082                           
 33083                           ;stkvar	_readValue @ sp[(-1)+0]
 33084   017968  0EFF               	movlw	-1
 33085   01796A  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 33086   017970  2A11               	incf	_uart2RxTail^0,f,c	;volatile
 33087                           
 33088                           ;mcc_generated_files/uart2.c: 161:     if(sizeof(uart2RxBuffer) <= uart2RxTail)
 33089   017972  2811               	incf	_uart2RxTail^0,w,c
 33090   017974  B4D8               	btfsc	status,2,c
 33091                           
 33092                           ;mcc_generated_files/uart2.c: 162:     {;mcc_generated_files/uart2.c: 163:         uart2
      +                          RxTail = 0;
 33093   017976  6A11               	clrf	_uart2RxTail^0,c	;volatile
 33094                           
 33095                           ;mcc_generated_files/uart2.c: 165:     PIE6bits.U2RXIE = 0;
 33096                           
 33097                           ;mcc_generated_files/uart2.c: 164:     }
 33098   017978  0139               	movlb	57	; () banked
 33099   01797A  9596               	bcf	150,2,b	;volatile
 33100                           
 33101                           ; BSR set to: 57
 33102                           ;mcc_generated_files/uart2.c: 166:     uart2RxCount--;
 33103   01797C  0610               	decf	_uart2RxCount^0,f,c	;volatile
 33104                           
 33105                           ; BSR set to: 57
 33106                           ;mcc_generated_files/uart2.c: 167:     PIE6bits.U2RXIE = 1;
 33107   01797E  8596               	bsf	150,2,b	;volatile
 33108                           
 33109                           ; BSR set to: 57
 33110                           ;mcc_generated_files/uart2.c: 169:     return readValue;
 33111                           ;stkvar	_readValue @ sp[(-1)+0]
 33112   017980  0EFF               	movlw	-1
 33113   017982  006F FF8C  F023    	movff	plusw1,btemp
 33114                           
 33115                           ; BSR set to: 57
 33116                           ; _UART2_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 33117   017988  52E5               	movf	postdec1,f,c
 33118   01798A  0012               	return		;funcret
 33119   01798C                     __end_of_UART2_Read:
 33120                           	callstack 0
 33121                           
 33122 ;; *************** function _UART1_is_rx_ready *****************
 33123 ;; Defined at:
 33124 ;;		line 147 in file "mcc_generated_files/uart1.c"
 33125 ;; Parameters:    Size  Location     Type
 33126 ;;		None
 33127 ;; Auto vars:     Size  Location     Type
 33128 ;;		None
 33129 ;; Return value:  Size  Location     Type
 33130 ;;                  1  [STACK] unsigned char 
 33131 ;; Registers used:
 33132 ;;		btemp
 33133 ;; Tracked objects:
 33134 ;;		On entry : 0/3C
 33135 ;;		On exit  : 0/0
 33136 ;;		Unchanged: 0/0
 33137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33142 ;;Total ram usage:        0 bytes
 33143 ;; Hardware stack levels used: 1
 33144 ;; Hardware stack levels required when called: 3
 33145 ;; This function calls:
 33146 ;;		Nothing
 33147 ;; This function is called by:
 33148 ;;		_m_protocol
 33149 ;;		_r_protocol
 33150 ;;		_t_protocol
 33151 ;; This function uses a reentrant model
 33152 ;;
 33153                           
 33154                           	psect	text30
 33155   01828C                     __ptext30:
 33156                           	callstack 0
 33157   01828C                     _UART1_is_rx_ready:
 33158                           	callstack 26
 33159                           
 33160                           ;mcc_generated_files/uart1.c: 149:  return uart1RxCount;
 33161                           
 33162                           ; BSR set to: 57
 33163                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33164                           ;incstack = 0
 33165   01828C  C016  F023         	movff	_uart1RxCount,btemp	;volatile
 33166                           
 33167                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33168   018290  0012               	return		;funcret
 33169   018292                     __end_of_UART1_is_rx_ready:
 33170                           	callstack 0
 33171                           
 33172 ;; *************** function _UART1_Read *****************
 33173 ;; Defined at:
 33174 ;;		line 162 in file "mcc_generated_files/uart1.c"
 33175 ;; Parameters:    Size  Location     Type
 33176 ;;		None
 33177 ;; Auto vars:     Size  Location     Type
 33178 ;;  readValue       1  [STACK] unsigned char 
 33179 ;; Return value:  Size  Location     Type
 33180 ;;                  1  [STACK] unsigned char 
 33181 ;; Registers used:
 33182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
 33183 ;; Tracked objects:
 33184 ;;		On entry : 0/3C
 33185 ;;		On exit  : 3F/39
 33186 ;;		Unchanged: 0/0
 33187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33192 ;;Total ram usage:        0 bytes
 33193 ;; Hardware stack levels used: 1
 33194 ;; Hardware stack levels required when called: 3
 33195 ;; This function calls:
 33196 ;;		Nothing
 33197 ;; This function is called by:
 33198 ;;		_m_protocol
 33199 ;;		_r_protocol
 33200 ;;		_t_protocol
 33201 ;; This function uses a reentrant model
 33202 ;;
 33203                           
 33204                           	psect	text31
 33205   01798C                     __ptext31:
 33206                           	callstack 0
 33207   01798C                     _UART1_Read:
 33208                           	callstack 0
 33209                           
 33210                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33211   01798C  52E6               	movf	postinc1,f,c
 33212   01798E                     
 33213                           ;mcc_generated_files/uart1.c: 166:  while (0 == uart1RxCount) {
 33214                           
 33215                           ;mcc_generated_files/uart1.c: 166:  while (0 == uart1RxCount) {
 33216   01798E  5016               	movf	_uart1RxCount^0,w,c	;volatile
 33217   017990  B4D8               	btfsc	status,2,c
 33218   017992  D7FD               	goto	l9218
 33219                           
 33220                           ;mcc_generated_files/uart1.c: 169:  readValue = uart1RxBuffer[uart1RxTail++];
 33221   017994  0E00               	movlw	low _uart1RxBuffer
 33222   017996  2417               	addwf	_uart1RxTail^0,w,c	;volatile
 33223   017998  6ED9               	movwf	fsr2l,c
 33224   01799A  6ADA               	clrf	fsr2h,c
 33225   01799C  0E04               	movlw	high _uart1RxBuffer
 33226   01799E  22DA               	addwfc	fsr2h,f,c
 33227   0179A0  50DF               	movf	indf2,w,c
 33228   0179A2  6E2E               	movwf	(btemp+11)^0,c
 33229                           
 33230                           ;stkvar	_readValue @ sp[(-1)+0]
 33231   0179A4  0EFF               	movlw	-1
 33232   0179A6  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 33233   0179AC  2A17               	incf	_uart1RxTail^0,f,c	;volatile
 33234                           
 33235                           ;mcc_generated_files/uart1.c: 170:  if (sizeof(uart1RxBuffer) <= uart1RxTail) {
 33236   0179AE  2817               	incf	_uart1RxTail^0,w,c
 33237   0179B0  B4D8               	btfsc	status,2,c
 33238                           
 33239                           ;mcc_generated_files/uart1.c: 171:   uart1RxTail = 0;
 33240   0179B2  6A17               	clrf	_uart1RxTail^0,c	;volatile
 33241                           
 33242                           ;mcc_generated_files/uart1.c: 173:  PIE3bits.U1RXIE = 0;
 33243                           
 33244                           ;mcc_generated_files/uart1.c: 172:  }
 33245   0179B4  0139               	movlb	57	; () banked
 33246   0179B6  9793               	bcf	147,3,b	;volatile
 33247                           
 33248                           ; BSR set to: 57
 33249                           ;mcc_generated_files/uart1.c: 174:  uart1RxCount--;
 33250   0179B8  0616               	decf	_uart1RxCount^0,f,c	;volatile
 33251                           
 33252                           ; BSR set to: 57
 33253                           ;mcc_generated_files/uart1.c: 175:  PIE3bits.U1RXIE = 1;
 33254   0179BA  8793               	bsf	147,3,b	;volatile
 33255                           
 33256                           ; BSR set to: 57
 33257                           ;mcc_generated_files/uart1.c: 177:  return readValue;
 33258                           ;stkvar	_readValue @ sp[(-1)+0]
 33259   0179BC  0EFF               	movlw	-1
 33260   0179BE  006F FF8C  F023    	movff	plusw1,btemp
 33261                           
 33262                           ; BSR set to: 57
 33263                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 33264   0179C4  52E5               	movf	postdec1,f,c
 33265   0179C6  0012               	return		;funcret
 33266   0179C8                     __end_of_UART1_Read:
 33267                           	callstack 0
 33268                           
 33269 ;; *************** function _init_display *****************
 33270 ;; Defined at:
 33271 ;;		line 37 in file "eadog.c"
 33272 ;; Parameters:    Size  Location     Type
 33273 ;;		None
 33274 ;; Auto vars:     Size  Location     Type
 33275 ;;		None
 33276 ;; Return value:  Size  Location     Type
 33277 ;;                  1  [STACK] void 
 33278 ;; Registers used:
 33279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 33280 ;; Tracked objects:
 33281 ;;		On entry : 0/3C
 33282 ;;		On exit  : 3F/3D
 33283 ;;		Unchanged: 0/0
 33284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33289 ;;Total ram usage:        0 bytes
 33290 ;; Hardware stack levels used: 1
 33291 ;; Hardware stack levels required when called: 5
 33292 ;; This function calls:
 33293 ;;		_ringBufS_init
 33294 ;;		_send_lcd_cmd
 33295 ;;		_send_lcd_cmd_long
 33296 ;;		_wdtdelay
 33297 ;; This function is called by:
 33298 ;;		_main
 33299 ;; This function uses a reentrant model
 33300 ;;
 33301                           
 33302                           	psect	text32
 33303   0167F2                     __ptext32:
 33304                           	callstack 0
 33305   0167F2                     _init_display:
 33306                           	callstack 25
 33307                           
 33308                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
 33309                           
 33310                           ; BSR set to: 57
 33311                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33312                           ;incstack = 0
 33313   0167F2  0E80               	movlw	low _ring_buf1
 33314   0167F4  0100               	movlb	0	; () banked
 33315   0167F6  6F8D               	movwf	(_spi_link+6)& (0+255),b	;volatile
 33316   0167F8  0E02               	movlw	high _ring_buf1
 33317   0167FA  6F8E               	movwf	(_spi_link+7)& (0+255),b	;volatile
 33318                           
 33319                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
 33320   0167FC  0E00               	movlw	low _ring_buf2
 33321   0167FE  6F8B               	movwf	(_spi_link+4)& (0+255),b	;volatile
 33322   016800  0E03               	movlw	high _ring_buf2
 33323   016802  6F8C               	movwf	(_spi_link+5)& (0+255),b	;volatile
 33324                           
 33325                           ; BSR set to: 0
 33326                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
 33327   016804  0060  F237  FFE6   	movff	_spi_link+6,postinc1
 33328   01680A  0060  F23B  FFE6   	movff	_spi_link+7,postinc1
 33329   016810  EC6F  F0BE         	call	_ringBufS_init	;wreg free
 33330                           
 33331                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
 33332   016814  0060  F22F  FFE6   	movff	_spi_link+4,postinc1
 33333   01681A  0060  F233  FFE6   	movff	_spi_link+5,postinc1
 33334   016820  EC6F  F0BE         	call	_ringBufS_init	;wreg free
 33335                           
 33336                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
 33337   016824  84BE               	bsf	190,2,c	;volatile
 33338   016826  84BC               	bsf	188,2,c	;volatile
 33339                           
 33340                           ;eadog.c: 46:  wdtdelay(350000);
 33341   016828  0E30               	movlw	48
 33342   01682A  6EE6               	movwf	postinc1,c
 33343   01682C  0E57               	movlw	87
 33344   01682E  6EE6               	movwf	postinc1,c
 33345   016830  0E05               	movlw	5
 33346   016832  6EE6               	movwf	postinc1,c
 33347   016834  0E00               	movlw	0
 33348   016836  6EE6               	movwf	postinc1,c
 33349   016838  EC47  F0BA         	call	_wdtdelay	;wreg free
 33350                           
 33351                           ; BSR set to: 0
 33352                           ;eadog.c: 47:  send_lcd_cmd(0x39);
 33353   01683C  0E39               	movlw	57
 33354   01683E  6EE6               	movwf	postinc1,c
 33355   016840  EC5B  F0BE         	call	_send_lcd_cmd	;wreg free
 33356                           
 33357                           ; BSR set to: 0
 33358                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
 33359   016844  0E1D               	movlw	29
 33360   016846  6EE6               	movwf	postinc1,c
 33361   016848  EC5B  F0BE         	call	_send_lcd_cmd	;wreg free
 33362                           
 33363                           ; BSR set to: 0
 33364                           ;eadog.c: 49:  send_lcd_cmd(0x50);
 33365   01684C  0E50               	movlw	80
 33366   01684E  6EE6               	movwf	postinc1,c
 33367   016850  EC5B  F0BE         	call	_send_lcd_cmd	;wreg free
 33368                           
 33369                           ; BSR set to: 0
 33370                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
 33371   016854  0E6C               	movlw	108
 33372   016856  6EE6               	movwf	postinc1,c
 33373   016858  EC5B  F0BE         	call	_send_lcd_cmd	;wreg free
 33374                           
 33375                           ; BSR set to: 0
 33376                           ;eadog.c: 51:  send_lcd_cmd(0x76);
 33377   01685C  0E76               	movlw	118
 33378   01685E  6EE6               	movwf	postinc1,c
 33379   016860  EC5B  F0BE         	call	_send_lcd_cmd	;wreg free
 33380                           
 33381                           ; BSR set to: 0
 33382                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
 33383   016864  0E38               	movlw	56
 33384   016866  6EE6               	movwf	postinc1,c
 33385   016868  EC47  F0BE         	call	_send_lcd_cmd_long	;wreg free
 33386                           
 33387                           ; BSR set to: 0
 33388                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
 33389   01686C  0E0F               	movlw	15
 33390   01686E  6EE6               	movwf	postinc1,c
 33391   016870  EC5B  F0BE         	call	_send_lcd_cmd	;wreg free
 33392                           
 33393                           ; BSR set to: 0
 33394                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
 33395   016874  0E01               	movlw	1
 33396   016876  6EE6               	movwf	postinc1,c
 33397   016878  EC47  F0BE         	call	_send_lcd_cmd_long	;wreg free
 33398                           
 33399                           ; BSR set to: 0
 33400                           ;eadog.c: 55:  send_lcd_cmd(0x02);
 33401   01687C  0E02               	movlw	2
 33402   01687E  6EE6               	movwf	postinc1,c
 33403   016880  EC5B  F0BE         	call	_send_lcd_cmd	;wreg free
 33404                           
 33405                           ; BSR set to: 0
 33406                           ;eadog.c: 56:  send_lcd_cmd(0x06);
 33407   016884  0E06               	movlw	6
 33408   016886  6EE6               	movwf	postinc1,c
 33409   016888  EC5B  F0BE         	call	_send_lcd_cmd	;wreg free
 33410                           
 33411                           ; BSR set to: 0
 33412                           ;eadog.c: 57:  wdtdelay(30);
 33413   01688C  0E1E               	movlw	30
 33414   01688E  6EE6               	movwf	postinc1,c
 33415   016890  0E00               	movlw	0
 33416   016892  6EE6               	movwf	postinc1,c
 33417   016894  0E00               	movlw	0
 33418   016896  6EE6               	movwf	postinc1,c
 33419   016898  0E00               	movlw	0
 33420   01689A  6EE6               	movwf	postinc1,c
 33421   01689C  EC47  F0BA         	call	_wdtdelay	;wreg free
 33422                           
 33423                           ; BSR set to: 0
 33424                           ;eadog.c: 58:  SPI1CON2 = 0x02;
 33425   0168A0  0E02               	movlw	2
 33426   0168A2  013D               	movlb	61	; () banked
 33427   0168A4  6F16               	movwf	22,b	;volatile
 33428                           
 33429                           ; BSR set to: 61
 33430                           ;eadog.c: 59:  SPI1CON1 = 0x40;
 33431   0168A6  0E40               	movlw	64
 33432   0168A8  6F15               	movwf	21,b	;volatile
 33433                           
 33434                           ; BSR set to: 61
 33435                           ;eadog.c: 60:  SPI1CON0 = 0x83;
 33436   0168AA  0E83               	movlw	131
 33437   0168AC  6F14               	movwf	20,b	;volatile
 33438                           
 33439                           ; BSR set to: 61
 33440                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
 33441   0168AE  931A               	bcf	26,1,b	;volatile
 33442                           
 33443                           ; BSR set to: 61
 33444                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
 33445   0168B0  0E3F               	movlw	-193
 33446   0168B2  013B               	movlb	59	; () banked
 33447   0168B4  17FD               	andwf	253,f,b	;volatile
 33448                           
 33449                           ; BSR set to: 59
 33450                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
 33451   0168B6  9BFD               	bcf	253,5,b	;volatile
 33452                           
 33453                           ; BSR set to: 59
 33454                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
 33455   0168B8  51FD               	movf	253,w,b	;volatile
 33456   0168BA  0BF9               	andlw	-7
 33457   0168BC  0902               	iorlw	2
 33458   0168BE  6FFD               	movwf	253,b	;volatile
 33459                           
 33460                           ; BSR set to: 59
 33461                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
 33462   0168C0  0EE7               	movlw	-25
 33463   0168C2  17FD               	andwf	253,f,b	;volatile
 33464                           
 33465                           ; BSR set to: 59
 33466                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
 33467   0168C4  81FD               	bsf	253,0,b	;volatile
 33468                           
 33469                           ; BSR set to: 59
 33470                           ;eadog.c: 67:  DMA1SSA = (uint24_t) & ring_buf1;
 33471   0168C6  0E80               	movlw	low _ring_buf1
 33472   0168C8  6FF9               	movwf	249,b	;volatile
 33473   0168CA  0E02               	movlw	high _ring_buf1
 33474   0168CC  6FFA               	movwf	250,b	;volatile
 33475   0168CE  0E00               	movlw	low (_ring_buf1 shr (0+16))
 33476   0168D0  6FFB               	movwf	251,b	;volatile
 33477                           
 33478                           ; BSR set to: 59
 33479                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
 33480   0168D2  9BFC               	bcf	252,5,b	;volatile
 33481                           
 33482                           ; BSR set to: 59
 33483                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
 33484   0168D4  013D               	movlb	61	; () banked
 33485   0168D6  831A               	bsf	26,1,b	;volatile
 33486                           
 33487                           ; BSR set to: 61
 33488                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
 33489   0168D8  94BE               	bcf	190,2,c	;volatile
 33490                           
 33491                           ; BSR set to: 61
 33492                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 33493   0168DA  0012               	return		;funcret
 33494   0168DC                     __end_of_init_display:
 33495                           	callstack 0
 33496                           
 33497 ;; *************** function _send_lcd_cmd_long *****************
 33498 ;; Defined at:
 33499 ;;		line 114 in file "eadog.c"
 33500 ;; Parameters:    Size  Location     Type
 33501 ;;  cmd             1  [STACK] const unsigned char 
 33502 ;; Auto vars:     Size  Location     Type
 33503 ;;		None
 33504 ;; Return value:  Size  Location     Type
 33505 ;;                  1  [STACK] void 
 33506 ;; Registers used:
 33507 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 33508 ;; Tracked objects:
 33509 ;;		On entry : 3F/0
 33510 ;;		On exit  : 3F/0
 33511 ;;		Unchanged: 0/0
 33512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33517 ;;Total ram usage:        0 bytes
 33518 ;; Hardware stack levels used: 1
 33519 ;; Hardware stack levels required when called: 4
 33520 ;; This function calls:
 33521 ;;		_SPI1_Exchange8bit
 33522 ;;		_wdtdelay
 33523 ;; This function is called by:
 33524 ;;		_init_display
 33525 ;; This function uses a reentrant model
 33526 ;;
 33527                           
 33528                           	psect	text33
 33529   017C8E                     __ptext33:
 33530                           	callstack 0
 33531   017C8E                     _send_lcd_cmd_long:
 33532                           	callstack 25
 33533                           
 33534                           ; BSR set to: 61
 33535                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33536                           ;incstack = 0
 33537                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
 33538   017C8E  92BC               	bcf	188,1,c	;volatile
 33539                           
 33540                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
 33541   017C90  94BC               	bcf	188,2,c	;volatile
 33542                           
 33543                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
 33544                           ;stkvar	_cmd @ sp[(0)+-1]
 33545   017C92  0EFF               	movlw	-1
 33546   017C94  50E3               	movf	plusw1,w,c
 33547   017C96  6EE6               	movwf	postinc1,c
 33548   017C98  EC3A  F0C0         	call	_SPI1_Exchange8bit	;wreg free
 33549                           
 33550                           ; BSR set to: 57
 33551                           ;eadog.c: 119:  wdtdelay(800);
 33552   017C9C  0E20               	movlw	32
 33553   017C9E  6EE6               	movwf	postinc1,c
 33554   017CA0  0E03               	movlw	3
 33555   017CA2  6EE6               	movwf	postinc1,c
 33556   017CA4  0E00               	movlw	0
 33557   017CA6  6EE6               	movwf	postinc1,c
 33558   017CA8  0E00               	movlw	0
 33559   017CAA  6EE6               	movwf	postinc1,c
 33560   017CAC  EC47  F0BA         	call	_wdtdelay	;wreg free
 33561                           
 33562                           ; BSR set to: 0
 33563   017CB0  82BC               	bsf	188,1,c	;volatile
 33564                           
 33565                           ; BSR set to: 0
 33566                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 33567   017CB2  52E5               	movf	postdec1,f,c
 33568   017CB4  0012               	return		;funcret
 33569   017CB6                     __end_of_send_lcd_cmd_long:
 33570                           	callstack 0
 33571                           
 33572 ;; *************** function _send_lcd_cmd *****************
 33573 ;; Defined at:
 33574 ;;		line 102 in file "eadog.c"
 33575 ;; Parameters:    Size  Location     Type
 33576 ;;  cmd             1  [STACK] const unsigned char 
 33577 ;; Auto vars:     Size  Location     Type
 33578 ;;		None
 33579 ;; Return value:  Size  Location     Type
 33580 ;;                  1  [STACK] void 
 33581 ;; Registers used:
 33582 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 33583 ;; Tracked objects:
 33584 ;;		On entry : 3F/0
 33585 ;;		On exit  : 3F/0
 33586 ;;		Unchanged: 0/0
 33587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33592 ;;Total ram usage:        0 bytes
 33593 ;; Hardware stack levels used: 1
 33594 ;; Hardware stack levels required when called: 4
 33595 ;; This function calls:
 33596 ;;		_SPI1_Exchange8bit
 33597 ;;		_wdtdelay
 33598 ;; This function is called by:
 33599 ;;		_init_display
 33600 ;; This function uses a reentrant model
 33601 ;;
 33602                           
 33603                           	psect	text34
 33604   017CB6                     __ptext34:
 33605                           	callstack 0
 33606   017CB6                     _send_lcd_cmd:
 33607                           	callstack 25
 33608                           
 33609                           ; BSR set to: 0
 33610                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33611                           ;incstack = 0
 33612                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
 33613   017CB6  92BC               	bcf	188,1,c	;volatile
 33614                           
 33615                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
 33616   017CB8  94BC               	bcf	188,2,c	;volatile
 33617                           
 33618                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
 33619                           ;stkvar	_cmd @ sp[(0)+-1]
 33620   017CBA  0EFF               	movlw	-1
 33621   017CBC  50E3               	movf	plusw1,w,c
 33622   017CBE  6EE6               	movwf	postinc1,c
 33623   017CC0  EC3A  F0C0         	call	_SPI1_Exchange8bit	;wreg free
 33624                           
 33625                           ; BSR set to: 57
 33626                           ;eadog.c: 107:  wdtdelay(30);
 33627   017CC4  0E1E               	movlw	30
 33628   017CC6  6EE6               	movwf	postinc1,c
 33629   017CC8  0E00               	movlw	0
 33630   017CCA  6EE6               	movwf	postinc1,c
 33631   017CCC  0E00               	movlw	0
 33632   017CCE  6EE6               	movwf	postinc1,c
 33633   017CD0  0E00               	movlw	0
 33634   017CD2  6EE6               	movwf	postinc1,c
 33635   017CD4  EC47  F0BA         	call	_wdtdelay	;wreg free
 33636                           
 33637                           ; BSR set to: 0
 33638   017CD8  82BC               	bsf	188,1,c	;volatile
 33639                           
 33640                           ; BSR set to: 0
 33641                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
 33642   017CDA  52E5               	movf	postdec1,f,c
 33643   017CDC  0012               	return		;funcret
 33644   017CDE                     __end_of_send_lcd_cmd:
 33645                           	callstack 0
 33646                           
 33647 ;; *************** function _SPI1_Exchange8bit *****************
 33648 ;; Defined at:
 33649 ;;		line 79 in file "mcc_generated_files/spi1.c"
 33650 ;; Parameters:    Size  Location     Type
 33651 ;;  data            1  [STACK] unsigned char 
 33652 ;; Auto vars:     Size  Location     Type
 33653 ;;		None
 33654 ;; Return value:  Size  Location     Type
 33655 ;;                  1  [STACK] unsigned char 
 33656 ;; Registers used:
 33657 ;;		wreg, fsr1l, fsr1h, status,2, btemp
 33658 ;; Tracked objects:
 33659 ;;		On entry : 0/0
 33660 ;;		On exit  : 3F/39
 33661 ;;		Unchanged: 0/0
 33662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33667 ;;Total ram usage:        0 bytes
 33668 ;; Hardware stack levels used: 1
 33669 ;; Hardware stack levels required when called: 3
 33670 ;; This function calls:
 33671 ;;		Nothing
 33672 ;; This function is called by:
 33673 ;;		_send_lcd_cmd
 33674 ;;		_send_lcd_cmd_long
 33675 ;; This function uses a reentrant model
 33676 ;;
 33677                           
 33678                           	psect	text35
 33679   018074                     __ptext35:
 33680                           	callstack 0
 33681   018074                     _SPI1_Exchange8bit:
 33682                           	callstack 25
 33683                           
 33684                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
 33685                           
 33686                           ; BSR set to: 0
 33687                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33688                           ;incstack = 0
 33689   018074  0E01               	movlw	1
 33690   018076  013D               	movlb	61	; () banked
 33691   018078  6F12               	movwf	18,b	;volatile
 33692                           
 33693                           ; BSR set to: 61
 33694                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
 33695                           ;stkvar	_data @ sp[(0)+-1]
 33696   01807A  0EFF               	movlw	-1
 33697   01807C  006F FF8F FD11     	movff	plusw1,15633	;volatile
 33698   018082                     l863:
 33699                           
 33700                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
 33701   018082  0139               	movlb	57	; () banked
 33702   018084  A9A2               	btfss	162,4,b	;volatile
 33703   018086  D7FD               	goto	l863
 33704                           
 33705                           ; BSR set to: 57
 33706                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
 33707   018088  006F F440  F023    	movff	15632,btemp	;volatile
 33708                           
 33709                           ; BSR set to: 57
 33710                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 33711   01808E  52E5               	movf	postdec1,f,c
 33712   018090  0012               	return		;funcret
 33713   018092                     __end_of_SPI1_Exchange8bit:
 33714                           	callstack 0
 33715                           
 33716 ;; *************** function _ringBufS_init *****************
 33717 ;; Defined at:
 33718 ;;		line 22 in file "ringbufs.c"
 33719 ;; Parameters:    Size  Location     Type
 33720 ;;  _this           2  [STACK] PTR volatile struct ring
 33721 ;;		 -> ring_buf2(67), ring_buf1(67), 
 33722 ;; Auto vars:     Size  Location     Type
 33723 ;;		None
 33724 ;; Return value:  Size  Location     Type
 33725 ;;                  1  [STACK] void 
 33726 ;; Registers used:
 33727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 33728 ;; Tracked objects:
 33729 ;;		On entry : 0/0
 33730 ;;		On exit  : 0/0
 33731 ;;		Unchanged: 0/0
 33732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33737 ;;Total ram usage:        0 bytes
 33738 ;; Hardware stack levels used: 1
 33739 ;; Hardware stack levels required when called: 4
 33740 ;; This function calls:
 33741 ;;		_memset
 33742 ;; This function is called by:
 33743 ;;		_init_display
 33744 ;; This function uses a reentrant model
 33745 ;;
 33746                           
 33747                           	psect	text36
 33748   017CDE                     __ptext36:
 33749                           	callstack 0
 33750   017CDE                     _ringBufS_init:
 33751                           	callstack 25
 33752                           
 33753                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
 33754                           
 33755                           ; BSR set to: 57
 33756                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33757                           ;incstack = 0
 33758   017CDE  0E43               	movlw	67
 33759   017CE0  6EE6               	movwf	postinc1,c
 33760   017CE2  0E00               	movlw	0
 33761   017CE4  6EE6               	movwf	postinc1,c
 33762   017CE6  0E00               	movlw	0
 33763   017CE8  6EE6               	movwf	postinc1,c
 33764   017CEA  0E00               	movlw	0
 33765   017CEC  6EE6               	movwf	postinc1,c
 33766                           
 33767                           ;stkvar	__this @ sp[(-4)+-2]
 33768   017CEE  0EFA               	movlw	-6
 33769   017CF0  006F FF8F FFE6     	movff	plusw1,postinc1
 33770   017CF6  006F FF8F FFE6     	movff	plusw1,postinc1
 33771   017CFC  ECFF  F0B6         	call	_memset	;wreg free
 33772                           
 33773                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 33774   017D00  52E5               	movf	postdec1,f,c
 33775   017D02  52E5               	movf	postdec1,f,c
 33776   017D04  0012               	return		;funcret
 33777   017D06                     __end_of_ringBufS_init:
 33778                           	callstack 0
 33779                           
 33780 ;; *************** function _hb_message *****************
 33781 ;; Defined at:
 33782 ;;		line 530 in file "gemsecs.c"
 33783 ;; Parameters:    Size  Location     Type
 33784 ;;		None
 33785 ;; Auto vars:     Size  Location     Type
 33786 ;;		None
 33787 ;; Return value:  Size  Location     Type
 33788 ;;                  1  [STACK] void 
 33789 ;; Registers used:
 33790 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33791 ;; Tracked objects:
 33792 ;;		On entry : 0/3C
 33793 ;;		On exit  : 0/0
 33794 ;;		Unchanged: 0/0
 33795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33800 ;;Total ram usage:        0 bytes
 33801 ;; Hardware stack levels used: 1
 33802 ;; Hardware stack levels required when called: 3
 33803 ;; This function calls:
 33804 ;;		Nothing
 33805 ;; This function is called by:
 33806 ;;		_main
 33807 ;; This function uses a reentrant model
 33808 ;;
 33809                           
 33810                           	psect	text37
 33811   01753C                     __ptext37:
 33812                           	callstack 0
 33813   01753C                     _hb_message:
 33814                           	callstack 27
 33815                           
 33816                           ;gemsecs.c: 532:  V.ping++;
 33817                           
 33818                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33819                           ;incstack = 0
 33820   01753C  EE23  F15D         	lfsr	2,_V+323	;volatile
 33821   017540  2ADE               	incf	postinc2,f,c
 33822   017542  0E00               	movlw	0
 33823   017544  22DD               	addwfc	postdec2,f,c
 33824                           
 33825                           ;gemsecs.c: 533:  V.s_state = SEQ_STATE_TX;
 33826   017546  0E02               	movlw	2
 33827   017548  006F FFA0  FC1A    	movff	wreg,_V
 33828                           
 33829                           ;gemsecs.c: 534:  V.failed_send = 0;
 33830   01754E  EE23  F167         	lfsr	2,_V+333	;volatile
 33831   017552  0E0F               	movlw	-241
 33832   017554  16DF               	andwf	223,f,c
 33833                           
 33834                           ;gemsecs.c: 535:  V.t_l_state = LINK_STATE_IDLE;
 33835   017556  0E00               	movlw	0
 33836   017558  006F FFA0  FC20    	movff	wreg,_V+6	;volatile
 33837                           
 33838                           ;gemsecs.c: 536:  if (V.msg_error == MSG_ERROR_NONE) {
 33839   01755E  EE23  F151         	lfsr	2,_V+311	;volatile
 33840   017562  50DF               	movf	indf2,w,c
 33841   017564  A4D8               	btfss	status,2,c
 33842   017566  D009               	goto	l1985
 33843                           
 33844                           ;gemsecs.c: 537:   V.stream = 1;
 33845   017568  0E01               	movlw	1
 33846   01756A  006F FFA0  FD4D    	movff	wreg,_V+307	;volatile
 33847                           
 33848                           ;gemsecs.c: 538:   V.function = 2;
 33849   017570  0E02               	movlw	2
 33850   017572  006F FFA0  FD4E    	movff	wreg,_V+308	;volatile
 33851                           
 33852                           ;gemsecs.c: 539:  } else {
 33853   017578  0012               	return	
 33854   01757A                     l1985:
 33855                           
 33856                           ;gemsecs.c: 540:   V.stream = 1;
 33857   01757A  0E01               	movlw	1
 33858   01757C  006F FFA0  FD4D    	movff	wreg,_V+307	;volatile
 33859                           
 33860                           ;gemsecs.c: 541:   V.function = 14;
 33861   017582  0E0E               	movlw	14
 33862   017584  006F FFA0  FD4E    	movff	wreg,_V+308	;volatile
 33863                           
 33864                           ; _hb_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 33865   01758A  0012               	return		;funcret
 33866   01758C                     __end_of_hb_message:
 33867                           	callstack 0
 33868                           
 33869 ;; *************** function _eaDogM_WriteCommand *****************
 33870 ;; Defined at:
 33871 ;;		line 160 in file "eadog.c"
 33872 ;; Parameters:    Size  Location     Type
 33873 ;;  cmd             1  [STACK] const unsigned char 
 33874 ;; Auto vars:     Size  Location     Type
 33875 ;;		None
 33876 ;; Return value:  Size  Location     Type
 33877 ;;                  1  [STACK] void 
 33878 ;; Registers used:
 33879 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 33880 ;; Tracked objects:
 33881 ;;		On entry : 3F/3D
 33882 ;;		On exit  : 3F/0
 33883 ;;		Unchanged: 0/0
 33884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33889 ;;Total ram usage:        0 bytes
 33890 ;; Hardware stack levels used: 1
 33891 ;; Hardware stack levels required when called: 13
 33892 ;; This function calls:
 33893 ;;		_send_lcd_cmd_dma
 33894 ;; This function is called by:
 33895 ;;		_main
 33896 ;; This function uses a reentrant model
 33897 ;;
 33898                           
 33899                           	psect	text38
 33900   018220                     __ptext38:
 33901                           	callstack 0
 33902   018220                     _eaDogM_WriteCommand:
 33903                           	callstack 17
 33904                           
 33905                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
 33906                           ;stkvar	_cmd @ sp[(0)+-1]
 33907                           
 33908                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33909                           ;incstack = 0
 33910   018220  0EFF               	movlw	-1
 33911   018222  50E3               	movf	plusw1,w,c
 33912   018224  6EE6               	movwf	postinc1,c
 33913   018226  EC74  F0BA         	call	_send_lcd_cmd_dma	;wreg free
 33914                           
 33915                           ; BSR set to: 0
 33916                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
 33917   01822A  52E5               	movf	postdec1,f,c
 33918   01822C  0012               	return		;funcret
 33919   01822E                     __end_of_eaDogM_WriteCommand:
 33920                           	callstack 0
 33921                           
 33922 ;; *************** function _check_help *****************
 33923 ;; Defined at:
 33924 ;;		line 40 in file "mconfig.c"
 33925 ;; Parameters:    Size  Location     Type
 33926 ;;  flipper         1  [STACK] _Bool 
 33927 ;; Auto vars:     Size  Location     Type
 33928 ;;		None
 33929 ;; Return value:  Size  Location     Type
 33930 ;;                  1  [STACK] void 
 33931 ;; Registers used:
 33932 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 33933 ;; Tracked objects:
 33934 ;;		On entry : 0/1
 33935 ;;		On exit  : 0/0
 33936 ;;		Unchanged: 0/0
 33937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33942 ;;Total ram usage:        0 bytes
 33943 ;; Hardware stack levels used: 1
 33944 ;; Hardware stack levels required when called: 15
 33945 ;; This function calls:
 33946 ;;		_StartTimer
 33947 ;;		_TimerDone
 33948 ;;		_display_help
 33949 ;;		_display_info
 33950 ;;		_get_vterm_ptr
 33951 ;;		_help_button
 33952 ;;		_mode_lamp_bright
 33953 ;;		_mode_lamp_dim
 33954 ;;		_set_display_info
 33955 ;;		_set_temp_display_help
 33956 ;;		_set_vterm
 33957 ;;		_sprintf
 33958 ;;		_update_lcd
 33959 ;;		_vterm_dump
 33960 ;; This function is called by:
 33961 ;;		_main
 33962 ;; This function uses a reentrant model
 33963 ;;
 33964                           
 33965                           	psect	text39
 33966   014BEC                     __ptext39:
 33967                           	callstack 0
 33968   014BEC                     _check_help:
 33969                           	callstack 15
 33970                           
 33971                           ;mconfig.c: 40: void check_help(_Bool flipper);mconfig.c: 41: {;mconfig.c: 45:  if (help
      +                          _button() && display_info() != DIS_HELP) {
 33972                           
 33973                           ; BSR set to: 0
 33974                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33975                           ;incstack = 0
 33976   014BEC  ECE4  F0BC         	call	_help_button	;wreg free
 33977   014BF0  5023               	movf	btemp^0,w,c
 33978   014BF2  B4D8               	btfsc	status,2,c
 33979   014BF4  D0CC               	goto	l13618
 33980   014BF6  EC35  F0C1         	call	_display_info	;wreg free
 33981   014BFA  0E06               	movlw	6
 33982   014BFC  1823               	xorwf	btemp^0,w,c
 33983   014BFE  B4D8               	btfsc	status,2,c
 33984   014C00  D0C6               	goto	l13618
 33985                           
 33986                           ;mconfig.c: 46:   StartTimer(TMR_FLIPPER, 1500);
 33987   014C02  0EDC               	movlw	220
 33988   014C04  6EE6               	movwf	postinc1,c
 33989   014C06  0E05               	movlw	5
 33990   014C08  6EE6               	movwf	postinc1,c
 33991   014C0A  0E0C               	movlw	12
 33992   014C0C  6EE6               	movwf	postinc1,c
 33993   014C0E  EC02  F0BD         	call	_StartTimer	;wreg free
 33994                           
 33995                           ;mconfig.c: 47:   if (V.debug)
 33996   014C12  EE23  F168         	lfsr	2,_V+334	;volatile
 33997   014C16  BADF               	btfsc	indf2,5,c
 33998                           
 33999                           ;mconfig.c: 48:    vterm_dump();
 34000   014C18  EC28  F0AE         	call	_vterm_dump	;wreg free
 34001                           
 34002                           ;mconfig.c: 50:   set_vterm(1);
 34003   014C1C  0E01               	movlw	1
 34004   014C1E  6EE6               	movwf	postinc1,c
 34005   014C20  EC49  F0C0         	call	_set_vterm	;wreg free
 34006                           
 34007                           ;mconfig.c: 51:   set_temp_display_help(display_info());
 34008   014C24  EC35  F0C1         	call	_display_info	;wreg free
 34009   014C28  5023               	movf	btemp^0,w,c
 34010   014C2A  6EE6               	movwf	postinc1,c
 34011   014C2C  ECFE  F0C0         	call	_set_temp_display_help	;wreg free
 34012                           
 34013                           ;mconfig.c: 52:   set_display_info(DIS_HELP);
 34014   014C30  0E06               	movlw	6
 34015   014C32  6EE6               	movwf	postinc1,c
 34016   014C34  EC2A  F0C0         	call	_set_display_info	;wreg free
 34017                           
 34018                           ;mconfig.c: 53:   if (flipper) {
 34019                           ;stkvar	_flipper @ sp[(0)+-1]
 34020   014C38  0EFF               	movlw	-1
 34021   014C3A  50E3               	movf	plusw1,w,c
 34022   014C3C  B4D8               	btfsc	status,2,c
 34023   014C3E  D019               	goto	l13606
 34024                           
 34025                           ;mconfig.c: 54:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 34026   014C40  0EC9               	movlw	low STR_37
 34027   014C42  6EE6               	movwf	postinc1,c
 34028   014C44  0EFF               	movlw	high STR_37
 34029   014C46  6EE6               	movwf	postinc1,c
 34030   014C48  0ED8               	movlw	low STR_39
 34031   014C4A  6EE6               	movwf	postinc1,c
 34032   014C4C  0EFE               	movlw	high STR_39
 34033   014C4E  6EE6               	movwf	postinc1,c
 34034   014C50  0E01               	movlw	1
 34035   014C52  6EE6               	movwf	postinc1,c
 34036   014C54  0E00               	movlw	0
 34037   014C56  6EE6               	movwf	postinc1,c
 34038   014C58  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 34039   014C5C  0060  F08F  FFE6   	movff	btemp,postinc1
 34040   014C62  0060  F093  FFE6   	movff	btemp+1,postinc1
 34041   014C68  0E06               	movlw	6
 34042   014C6A  6EE6               	movwf	postinc1,c
 34043   014C6C  EC0A  F0B3         	call	_sprintf	;wreg free
 34044                           
 34045                           ;mconfig.c: 55:   } else {
 34046   014C70  D018               	goto	l2376
 34047   014C72                     l13606:
 34048                           
 34049                           ;mconfig.c: 56:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
 34050   014C72  0EDF               	movlw	low STR_38
 34051   014C74  6EE6               	movwf	postinc1,c
 34052   014C76  0EFF               	movlw	high STR_38
 34053   014C78  6EE6               	movwf	postinc1,c
 34054   014C7A  0ED8               	movlw	low STR_39
 34055   014C7C  6EE6               	movwf	postinc1,c
 34056   014C7E  0EFE               	movlw	high STR_39
 34057   014C80  6EE6               	movwf	postinc1,c
 34058   014C82  0E01               	movlw	1
 34059   014C84  6EE6               	movwf	postinc1,c
 34060   014C86  0E00               	movlw	0
 34061   014C88  6EE6               	movwf	postinc1,c
 34062   014C8A  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 34063   014C8E  0060  F08F  FFE6   	movff	btemp,postinc1
 34064   014C94  0060  F093  FFE6   	movff	btemp+1,postinc1
 34065   014C9A  0E06               	movlw	6
 34066   014C9C  6EE6               	movwf	postinc1,c
 34067   014C9E  EC0A  F0B3         	call	_sprintf	;wreg free
 34068   014CA2                     l2376:
 34069                           
 34070                           ; BSR set to: 1
 34071                           ;mconfig.c: 58:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 34072   014CA2  EE23  F169         	lfsr	2,_V+335	;volatile
 34073   014CA6  30DF               	rrcf	223,w,c
 34074   014CA8  32E8               	rrcf	wreg,f,c
 34075   014CAA  32E8               	rrcf	wreg,f,c
 34076   014CAC  0B03               	andlw	3
 34077   014CAE  0D40               	mullw	64
 34078   014CB0  0E20               	movlw	low (_T+32)
 34079   014CB2  24F3               	addwf	243,w,c
 34080   014CB4  6E2D               	movwf	(btemp+10)^0,c
 34081   014CB6  0E06               	movlw	high (_T+32)
 34082   014CB8  20F4               	addwfc	prodh,w,c
 34083   014CBA  6E2E               	movwf	(btemp+11)^0,c
 34084   014CBC  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 34085   014CC2  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 34086   014CC8  0ED5               	movlw	low STR_41
 34087   014CCA  6EE6               	movwf	postinc1,c
 34088   014CCC  0EFF               	movlw	high STR_41
 34089   014CCE  6EE6               	movwf	postinc1,c
 34090   014CD0  0E01               	movlw	1
 34091   014CD2  6EE6               	movwf	postinc1,c
 34092   014CD4  0E01               	movlw	1
 34093   014CD6  6EE6               	movwf	postinc1,c
 34094   014CD8  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 34095   014CDC  0060  F08F  FFE6   	movff	btemp,postinc1
 34096   014CE2  0060  F093  FFE6   	movff	btemp+1,postinc1
 34097   014CE8  0E06               	movlw	6
 34098   014CEA  6EE6               	movwf	postinc1,c
 34099   014CEC  EC0A  F0B3         	call	_sprintf	;wreg free
 34100                           
 34101                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 34102   014CF0  EE23  F169         	lfsr	2,_V+335	;volatile
 34103   014CF4  30DF               	rrcf	223,w,c
 34104   014CF6  32E8               	rrcf	wreg,f,c
 34105   014CF8  32E8               	rrcf	wreg,f,c
 34106   014CFA  0B03               	andlw	3
 34107   014CFC  0D40               	mullw	64
 34108   014CFE  0E00               	movlw	low _T
 34109   014D00  24F3               	addwf	243,w,c
 34110   014D02  6E2D               	movwf	(btemp+10)^0,c
 34111   014D04  0E06               	movlw	high _T
 34112   014D06  20F4               	addwfc	prodh,w,c
 34113   014D08  6E2E               	movwf	(btemp+11)^0,c
 34114   014D0A  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 34115   014D10  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 34116   014D16  0ED5               	movlw	low STR_41
 34117   014D18  6EE6               	movwf	postinc1,c
 34118   014D1A  0EFF               	movlw	high STR_41
 34119   014D1C  6EE6               	movwf	postinc1,c
 34120   014D1E  0E01               	movlw	1
 34121   014D20  6EE6               	movwf	postinc1,c
 34122   014D22  0E02               	movlw	2
 34123   014D24  6EE6               	movwf	postinc1,c
 34124   014D26  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 34125   014D2A  0060  F08F  FFE6   	movff	btemp,postinc1
 34126   014D30  0060  F093  FFE6   	movff	btemp+1,postinc1
 34127   014D36  0E06               	movlw	6
 34128   014D38  6EE6               	movwf	postinc1,c
 34129   014D3A  EC0A  F0B3         	call	_sprintf	;wreg free
 34130                           
 34131                           ; BSR set to: 1
 34132                           ;mconfig.c: 60:   V.help_id++;
 34133   014D3E  EE23  F169         	lfsr	2,_V+335	;volatile
 34134   014D42  30DF               	rrcf	223,w,c
 34135   014D44  6E2E               	movwf	(btemp+11)^0,c
 34136   014D46  322E               	rrcf	(btemp+11)^0,f,c
 34137   014D48  302E               	rrcf	(btemp+11)^0,w,c
 34138   014D4A  0B03               	andlw	3
 34139   014D4C  6E2E               	movwf	(btemp+11)^0,c
 34140   014D4E  2A2E               	incf	(btemp+11)^0,f,c
 34141   014D50  362E               	rlcf	(btemp+11)^0,f,c
 34142   014D52  362E               	rlcf	(btemp+11)^0,f,c
 34143   014D54  362E               	rlcf	(btemp+11)^0,f,c
 34144   014D56  50DF               	movf	223,w,c
 34145   014D58  182E               	xorwf	(btemp+11)^0,w,c
 34146   014D5A  0BE7               	andlw	-25
 34147   014D5C  182E               	xorwf	(btemp+11)^0,w,c
 34148   014D5E  6EDF               	movwf	223,c
 34149                           
 34150                           ; BSR set to: 1
 34151                           ;mconfig.c: 61:   StartTimer(TMR_HELPDIS, 3000);
 34152   014D60  0EB8               	movlw	184
 34153   014D62  6EE6               	movwf	postinc1,c
 34154   014D64  0E0B               	movlw	11
 34155   014D66  6EE6               	movwf	postinc1,c
 34156   014D68  0E09               	movlw	9
 34157   014D6A  6EE6               	movwf	postinc1,c
 34158   014D6C  EC02  F0BD         	call	_StartTimer	;wreg free
 34159                           
 34160                           ;mconfig.c: 62:   StartTimer(TMR_INFO, 3000);
 34161   014D70  0EB8               	movlw	184
 34162   014D72  6EE6               	movwf	postinc1,c
 34163   014D74  0E0B               	movlw	11
 34164   014D76  6EE6               	movwf	postinc1,c
 34165   014D78  0E07               	movlw	7
 34166   014D7A  6EE6               	movwf	postinc1,c
 34167   014D7C  EC02  F0BD         	call	_StartTimer	;wreg free
 34168                           
 34169                           ;mconfig.c: 63:   mode_lamp_bright();
 34170   014D80  EC17  F0C1         	call	_mode_lamp_bright	;wreg free
 34171                           
 34172                           ;mconfig.c: 64:   update_lcd(1);
 34173   014D84  0E01               	movlw	1
 34174   014D86  6EE6               	movwf	postinc1,c
 34175   014D88  EC82  F0B3         	call	_update_lcd	;wreg free
 34176                           
 34177                           ;mconfig.c: 65:  } else {
 34178   014D8C  D03F               	goto	l2380
 34179   014D8E                     l13618:
 34180                           
 34181                           ;mconfig.c: 66:   if (TimerDone(TMR_HELPDIS)) {
 34182   014D8E  0E09               	movlw	9
 34183   014D90  6EE6               	movwf	postinc1,c
 34184   014D92  ECAD  F0BF         	call	_TimerDone	;wreg free
 34185   014D96  5023               	movf	btemp^0,w,c
 34186   014D98  B4D8               	btfsc	status,2,c
 34187   014D9A  D038               	goto	l2380
 34188                           
 34189                           ;mconfig.c: 67:    set_vterm(0);
 34190   014D9C  0E00               	movlw	0
 34191   014D9E  6EE6               	movwf	postinc1,c
 34192   014DA0  EC49  F0C0         	call	_set_vterm	;wreg free
 34193                           
 34194                           ;mconfig.c: 68:    V.help = 0;
 34195   014DA4  EE23  F168         	lfsr	2,_V+334	;volatile
 34196   014DA8  9CDF               	bcf	indf2,6,c
 34197                           
 34198                           ;mconfig.c: 69:    set_display_info(display_help());
 34199   014DAA  EC39  F0C1         	call	_display_help	;wreg free
 34200   014DAE  5023               	movf	btemp^0,w,c
 34201   014DB0  6EE6               	movwf	postinc1,c
 34202   014DB2  EC2A  F0C0         	call	_set_display_info	;wreg free
 34203                           
 34204                           ;mconfig.c: 70:    mode_lamp_dim(V.mode_pwm);
 34205   014DB6  EE23  F15F         	lfsr	2,_V+325	;volatile
 34206   014DBA  006F FF78  F02D    	movff	postinc2,btemp+10
 34207   014DC0  006F FF74  F02E    	movff	postdec2,btemp+11
 34208   014DC6  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 34209   014DCC  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 34210   014DD2  ECC7  F0C0         	call	_mode_lamp_dim	;wreg free
 34211                           
 34212                           ;mconfig.c: 71:    if (TimerDone(TMR_FLIPPER)) {
 34213   014DD6  0E0C               	movlw	12
 34214   014DD8  6EE6               	movwf	postinc1,c
 34215   014DDA  ECAD  F0BF         	call	_TimerDone	;wreg free
 34216   014DDE  5023               	movf	btemp^0,w,c
 34217   014DE0  B4D8               	btfsc	status,2,c
 34218   014DE2  D014               	goto	l2380
 34219                           
 34220                           ;mconfig.c: 72:     V.flipper = !V.flipper;
 34221   014DE4  EE23  F19C         	lfsr	2,_V+386	;volatile
 34222   014DE8  50DF               	movf	indf2,w,c
 34223   014DEA  A4D8               	btfss	status,2,c
 34224   014DEC  D003               	goto	u10250
 34225   014DEE  6A2E               	clrf	(btemp+11)^0,c
 34226   014DF0  2A2E               	incf	(btemp+11)^0,f,c
 34227   014DF2  D001               	goto	u10268
 34228   014DF4                     u10250:
 34229   014DF4  6A2E               	clrf	(btemp+11)^0,c
 34230   014DF6                     u10268:
 34231   014DF6  0060  F0B8  FD9C   	movff	btemp+11,_V+386	;volatile
 34232                           
 34233                           ;mconfig.c: 73:     StartTimer(TMR_FLIPPER, 1500);
 34234   014DFC  0EDC               	movlw	220
 34235   014DFE  6EE6               	movwf	postinc1,c
 34236   014E00  0E05               	movlw	5
 34237   014E02  6EE6               	movwf	postinc1,c
 34238   014E04  0E0C               	movlw	12
 34239   014E06  6EE6               	movwf	postinc1,c
 34240   014E08  EC02  F0BD         	call	_StartTimer	;wreg free
 34241   014E0C                     l2380:
 34242                           
 34243                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 34244   014E0C  52E5               	movf	postdec1,f,c
 34245   014E0E  0012               	return		;funcret
 34246   014E10                     __end_of_check_help:
 34247                           	callstack 0
 34248                           
 34249 ;; *************** function _vterm_dump *****************
 34250 ;; Defined at:
 34251 ;;		line 118 in file "mconfig.c"
 34252 ;; Parameters:    Size  Location     Type
 34253 ;;		None
 34254 ;; Auto vars:     Size  Location     Type
 34255 ;;		None
 34256 ;; Return value:  Size  Location     Type
 34257 ;;                  1  [STACK] void 
 34258 ;; Registers used:
 34259 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 34260 ;; Tracked objects:
 34261 ;;		On entry : 0/1
 34262 ;;		On exit  : 0/0
 34263 ;;		Unchanged: 0/0
 34264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34269 ;;Total ram usage:        0 bytes
 34270 ;; Hardware stack levels used: 1
 34271 ;; Hardware stack levels required when called: 14
 34272 ;; This function calls:
 34273 ;;		_WaitMs
 34274 ;;		_eaDogM_WriteStringAtPos
 34275 ;;		_get_vterm_ptr
 34276 ;;		_sprintf
 34277 ;;		_wait_lcd_done
 34278 ;; This function is called by:
 34279 ;;		_check_help
 34280 ;; This function uses a reentrant model
 34281 ;;
 34282                           
 34283                           	psect	text40
 34284   015C50                     __ptext40:
 34285                           	callstack 0
 34286   015C50                     _vterm_dump:
 34287                           	callstack 15
 34288                           
 34289                           ;mconfig.c: 120:  sprintf(V.buf, "vterm %x:%x   ", (uint16_t) get_vterm_ptr(0, 0), (uint
      +                          16_t) get_vterm_ptr(0, 1));
 34290                           
 34291                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34292                           ;incstack = 0
 34293   015C50  0E01               	movlw	1
 34294   015C52  6EE6               	movwf	postinc1,c
 34295   015C54  0E00               	movlw	0
 34296   015C56  6EE6               	movwf	postinc1,c
 34297   015C58  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 34298   015C5C  0060  F08F  FFE6   	movff	btemp,postinc1
 34299   015C62  0060  F093  FFE6   	movff	btemp+1,postinc1
 34300   015C68  0E00               	movlw	0
 34301   015C6A  6EE6               	movwf	postinc1,c
 34302   015C6C  0E00               	movlw	0
 34303   015C6E  6EE6               	movwf	postinc1,c
 34304   015C70  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 34305   015C74  0060  F08F  FFE6   	movff	btemp,postinc1
 34306   015C7A  0060  F093  FFE6   	movff	btemp+1,postinc1
 34307   015C80  0E9C               	movlw	low STR_43
 34308   015C82  6EE6               	movwf	postinc1,c
 34309   015C84  0EFF               	movlw	high STR_43
 34310   015C86  6EE6               	movwf	postinc1,c
 34311   015C88  0E21               	movlw	low (_V+7)
 34312   015C8A  6EE6               	movwf	postinc1,c
 34313   015C8C  0E0C               	movlw	high (_V+7)
 34314   015C8E  6EE6               	movwf	postinc1,c
 34315   015C90  0E08               	movlw	8
 34316   015C92  6EE6               	movwf	postinc1,c
 34317   015C94  EC0A  F0B3         	call	_sprintf	;wreg free
 34318                           
 34319                           ; BSR set to: 1
 34320                           ;mconfig.c: 121:  wait_lcd_done();
 34321   015C98  EC92  F0C0         	call	_wait_lcd_done	;wreg free
 34322                           
 34323                           ; BSR set to: 0
 34324                           ;mconfig.c: 122:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 34325   015C9C  0E21               	movlw	low (_V+7)
 34326   015C9E  6EE6               	movwf	postinc1,c
 34327   015CA0  0E0C               	movlw	high (_V+7)
 34328   015CA2  6EE6               	movwf	postinc1,c
 34329   015CA4  0E00               	movlw	0
 34330   015CA6  6EE6               	movwf	postinc1,c
 34331   015CA8  0E00               	movlw	0
 34332   015CAA  6EE6               	movwf	postinc1,c
 34333   015CAC  EC92  F0BD         	call	_eaDogM_WriteStringAtPos	;wreg free
 34334                           
 34335                           ; BSR set to: 59
 34336                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", (uint16_t) get_vterm_ptr(1, 0), (uint
      +                          16_t) get_vterm_ptr(1, 1));
 34337   015CB0  0E01               	movlw	1
 34338   015CB2  6EE6               	movwf	postinc1,c
 34339   015CB4  0E01               	movlw	1
 34340   015CB6  6EE6               	movwf	postinc1,c
 34341   015CB8  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 34342   015CBC  0060  F08F  FFE6   	movff	btemp,postinc1
 34343   015CC2  0060  F093  FFE6   	movff	btemp+1,postinc1
 34344   015CC8  0E00               	movlw	0
 34345   015CCA  6EE6               	movwf	postinc1,c
 34346   015CCC  0E01               	movlw	1
 34347   015CCE  6EE6               	movwf	postinc1,c
 34348   015CD0  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 34349   015CD4  0060  F08F  FFE6   	movff	btemp,postinc1
 34350   015CDA  0060  F093  FFE6   	movff	btemp+1,postinc1
 34351   015CE0  0E9C               	movlw	low STR_43
 34352   015CE2  6EE6               	movwf	postinc1,c
 34353   015CE4  0EFF               	movlw	high STR_43
 34354   015CE6  6EE6               	movwf	postinc1,c
 34355   015CE8  0E21               	movlw	low (_V+7)
 34356   015CEA  6EE6               	movwf	postinc1,c
 34357   015CEC  0E0C               	movlw	high (_V+7)
 34358   015CEE  6EE6               	movwf	postinc1,c
 34359   015CF0  0E08               	movlw	8
 34360   015CF2  6EE6               	movwf	postinc1,c
 34361   015CF4  EC0A  F0B3         	call	_sprintf	;wreg free
 34362                           
 34363                           ; BSR set to: 1
 34364                           ;mconfig.c: 124:  wait_lcd_done();
 34365   015CF8  EC92  F0C0         	call	_wait_lcd_done	;wreg free
 34366                           
 34367                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 34368   015CFC  0E21               	movlw	low (_V+7)
 34369   015CFE  6EE6               	movwf	postinc1,c
 34370   015D00  0E0C               	movlw	high (_V+7)
 34371   015D02  6EE6               	movwf	postinc1,c
 34372   015D04  0E00               	movlw	0
 34373   015D06  6EE6               	movwf	postinc1,c
 34374   015D08  0E01               	movlw	1
 34375   015D0A  6EE6               	movwf	postinc1,c
 34376   015D0C  EC92  F0BD         	call	_eaDogM_WriteStringAtPos	;wreg free
 34377                           
 34378                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", (uint16_t) get_vterm_ptr(2, 0), (uint
      +                          16_t) get_vterm_ptr(2, 1));
 34379   015D10  0E01               	movlw	1
 34380   015D12  6EE6               	movwf	postinc1,c
 34381   015D14  0E02               	movlw	2
 34382   015D16  6EE6               	movwf	postinc1,c
 34383   015D18  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 34384   015D1C  0060  F08F  FFE6   	movff	btemp,postinc1
 34385   015D22  0060  F093  FFE6   	movff	btemp+1,postinc1
 34386   015D28  0E00               	movlw	0
 34387   015D2A  6EE6               	movwf	postinc1,c
 34388   015D2C  0E02               	movlw	2
 34389   015D2E  6EE6               	movwf	postinc1,c
 34390   015D30  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 34391   015D34  0060  F08F  FFE6   	movff	btemp,postinc1
 34392   015D3A  0060  F093  FFE6   	movff	btemp+1,postinc1
 34393   015D40  0E9C               	movlw	low STR_43
 34394   015D42  6EE6               	movwf	postinc1,c
 34395   015D44  0EFF               	movlw	high STR_43
 34396   015D46  6EE6               	movwf	postinc1,c
 34397   015D48  0E21               	movlw	low (_V+7)
 34398   015D4A  6EE6               	movwf	postinc1,c
 34399   015D4C  0E0C               	movlw	high (_V+7)
 34400   015D4E  6EE6               	movwf	postinc1,c
 34401   015D50  0E08               	movlw	8
 34402   015D52  6EE6               	movwf	postinc1,c
 34403   015D54  EC0A  F0B3         	call	_sprintf	;wreg free
 34404                           
 34405                           ; BSR set to: 1
 34406                           ;mconfig.c: 127:  wait_lcd_done();
 34407   015D58  EC92  F0C0         	call	_wait_lcd_done	;wreg free
 34408                           
 34409                           ; BSR set to: 0
 34410                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 34411   015D5C  0E21               	movlw	low (_V+7)
 34412   015D5E  6EE6               	movwf	postinc1,c
 34413   015D60  0E0C               	movlw	high (_V+7)
 34414   015D62  6EE6               	movwf	postinc1,c
 34415   015D64  0E00               	movlw	0
 34416   015D66  6EE6               	movwf	postinc1,c
 34417   015D68  0E02               	movlw	2
 34418   015D6A  6EE6               	movwf	postinc1,c
 34419   015D6C  EC92  F0BD         	call	_eaDogM_WriteStringAtPos	;wreg free
 34420                           
 34421                           ; BSR set to: 59
 34422                           ;mconfig.c: 129:  WaitMs(3000);
 34423   015D70  0EB8               	movlw	184
 34424   015D72  6EE6               	movwf	postinc1,c
 34425   015D74  0E0B               	movlw	11
 34426   015D76  6EE6               	movwf	postinc1,c
 34427   015D78  EC77  F0BD         	call	_WaitMs	;wreg free
 34428                           
 34429                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 34430   015D7C  0012               	return		;funcret
 34431   015D7E                     __end_of_vterm_dump:
 34432                           	callstack 0
 34433                           
 34434 ;; *************** function _WaitMs *****************
 34435 ;; Defined at:
 34436 ;;		line 32 in file "timers.c"
 34437 ;; Parameters:    Size  Location     Type
 34438 ;;  numMilliseco    2  [STACK] const unsigned short 
 34439 ;; Auto vars:     Size  Location     Type
 34440 ;;		None
 34441 ;; Return value:  Size  Location     Type
 34442 ;;                  1  [STACK] void 
 34443 ;; Registers used:
 34444 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 34445 ;; Tracked objects:
 34446 ;;		On entry : 0/3C
 34447 ;;		On exit  : 0/0
 34448 ;;		Unchanged: 0/0
 34449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34454 ;;Total ram usage:        0 bytes
 34455 ;; Hardware stack levels used: 1
 34456 ;; Hardware stack levels required when called: 4
 34457 ;; This function calls:
 34458 ;;		_StartTimer
 34459 ;;		_TimerDone
 34460 ;; This function is called by:
 34461 ;;		_main
 34462 ;;		_m_protocol
 34463 ;;		_r_protocol
 34464 ;;		_vterm_dump
 34465 ;; This function uses a reentrant model
 34466 ;;
 34467                           
 34468                           	psect	text41
 34469   017AEE                     __ptext41:
 34470                           	callstack 0
 34471   017AEE                     _WaitMs:
 34472                           	callstack 25
 34473                           
 34474                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 34475                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 34476                           
 34477                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34478                           ;incstack = 0
 34479   017AEE  0EFE               	movlw	-2
 34480   017AF0  006F FF8F FFE6     	movff	plusw1,postinc1
 34481   017AF6  006F FF8F FFE6     	movff	plusw1,postinc1
 34482   017AFC  0E00               	movlw	0
 34483   017AFE  6EE6               	movwf	postinc1,c
 34484   017B00  EC02  F0BD         	call	_StartTimer	;wreg free
 34485                           
 34486                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 34487   017B04  D005               	goto	l8446
 34488   017B06                     l2296:
 34489                           
 34490                           ;timers.c: 36:   __nop();
 34491   017B06  0000               	nop	
 34492                           
 34493                           ;timers.c: 37:   __nop();
 34494   017B08  0000               	nop	
 34495                           
 34496                           ;timers.c: 38:   __nop();
 34497   017B0A  0000               	nop	
 34498                           
 34499                           ;timers.c: 39:   __nop();
 34500   017B0C  0000               	nop	
 34501   017B0E  0004               	clrwdt		;# 
 34502   017B10                     l8446:
 34503                           
 34504                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 34505   017B10  0E00               	movlw	0
 34506   017B12  6EE6               	movwf	postinc1,c
 34507   017B14  ECAD  F0BF         	call	_TimerDone	;wreg free
 34508   017B18  5023               	movf	btemp^0,w,c
 34509   017B1A  B4D8               	btfsc	status,2,c
 34510   017B1C  D7F4               	goto	l2296
 34511                           
 34512                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 34513   017B1E  52E5               	movf	postdec1,f,c
 34514   017B20  52E5               	movf	postdec1,f,c
 34515   017B22  0012               	return		;funcret
 34516   017B24                     __end_of_WaitMs:
 34517                           	callstack 0
 34518                           
 34519 ;; *************** function _set_vterm *****************
 34520 ;; Defined at:
 34521 ;;		line 104 in file "mconfig.c"
 34522 ;; Parameters:    Size  Location     Type
 34523 ;;  vterm           1  [STACK] unsigned char 
 34524 ;; Auto vars:     Size  Location     Type
 34525 ;;		None
 34526 ;; Return value:  Size  Location     Type
 34527 ;;                  1  [STACK] unsigned char 
 34528 ;; Registers used:
 34529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 34530 ;; Tracked objects:
 34531 ;;		On entry : 0/0
 34532 ;;		On exit  : 0/0
 34533 ;;		Unchanged: 0/0
 34534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34539 ;;Total ram usage:        0 bytes
 34540 ;; Hardware stack levels used: 1
 34541 ;; Hardware stack levels required when called: 3
 34542 ;; This function calls:
 34543 ;;		Nothing
 34544 ;; This function is called by:
 34545 ;;		_main
 34546 ;;		_check_help
 34547 ;; This function uses a reentrant model
 34548 ;;
 34549                           
 34550                           	psect	text42
 34551   018092                     __ptext42:
 34552                           	callstack 0
 34553   018092                     _set_vterm:
 34554                           	callstack 27
 34555                           
 34556                           ;mconfig.c: 104: uint8_t set_vterm(uint8_t vterm);mconfig.c: 105: {;mconfig.c: 106:  D.v
      +                          term = vterm & 0x03;
 34557                           ;stkvar	_vterm @ sp[(0)+-1]
 34558                           
 34559                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34560                           ;incstack = 0
 34561   018092  0EFF               	movlw	-1
 34562   018094  006F FF8C  F02E    	movff	plusw1,btemp+11
 34563   01809A  0E03               	movlw	3
 34564   01809C  162E               	andwf	(btemp+11)^0,f,c
 34565   01809E  EE22  F100         	lfsr	2,_D@mconfig$F5154+512
 34566   0180A2  50DF               	movf	223,w,c
 34567   0180A4  182E               	xorwf	(btemp+11)^0,w,c
 34568   0180A6  0BFE               	andlw	-2
 34569   0180A8  182E               	xorwf	(btemp+11)^0,w,c
 34570   0180AA  6EDF               	movwf	223,c
 34571                           
 34572                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 34573   0180AC  52E5               	movf	postdec1,f,c
 34574   0180AE  0012               	return		;funcret
 34575   0180B0                     __end_of_set_vterm:
 34576                           	callstack 0
 34577                           
 34578 ;; *************** function _set_temp_display_help *****************
 34579 ;; Defined at:
 34580 ;;		line 237 in file "mconfig.c"
 34581 ;; Parameters:    Size  Location     Type
 34582 ;;  new_response    1  [STACK] const enum E16750
 34583 ;; Auto vars:     Size  Location     Type
 34584 ;;		None
 34585 ;; Return value:  Size  Location     Type
 34586 ;;                  1  [STACK] enum E16960
 34587 ;; Registers used:
 34588 ;;		wreg, fsr1l, fsr1h, btemp+11
 34589 ;; Tracked objects:
 34590 ;;		On entry : 0/0
 34591 ;;		On exit  : 0/0
 34592 ;;		Unchanged: 0/0
 34593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34598 ;;Total ram usage:        0 bytes
 34599 ;; Hardware stack levels used: 1
 34600 ;; Hardware stack levels required when called: 3
 34601 ;; This function calls:
 34602 ;;		Nothing
 34603 ;; This function is called by:
 34604 ;;		_secs_II_message
 34605 ;;		_check_help
 34606 ;; This function uses a reentrant model
 34607 ;;
 34608                           
 34609                           	psect	text43
 34610   0181FC                     __ptext43:
 34611                           	callstack 0
 34612   0181FC                     _set_temp_display_help:
 34613                           	callstack 25
 34614                           
 34615                           ;mconfig.c: 242:  V.response.help_temp = new_response_info;
 34616                           ;stkvar	_new_response_info @ sp[(0)+-1]
 34617                           
 34618                           ;mconfig.c: 237: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 238: {;mconfig.c: 239:  static D_CODES old_info;;mconfig.c: 241:  old_info = V.respon
      +                          se.help_temp;
 34619                           
 34620                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34621                           ;incstack = 0
 34622   0181FC  0EFF               	movlw	-1
 34623   0181FE  006F FF8C  F02E    	movff	plusw1,btemp+11
 34624   018204  0060  F0B8  FD92   	movff	btemp+11,_V+376	;volatile
 34625                           
 34626                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 34627   01820A  52E5               	movf	postdec1,f,c
 34628   01820C  0012               	return		;funcret
 34629   01820E                     __end_of_set_temp_display_help:
 34630                           	callstack 0
 34631                           
 34632 ;; *************** function _set_display_info *****************
 34633 ;; Defined at:
 34634 ;;		line 226 in file "mconfig.c"
 34635 ;; Parameters:    Size  Location     Type
 34636 ;;  new_response    1  [STACK] const enum E16750
 34637 ;; Auto vars:     Size  Location     Type
 34638 ;;		None
 34639 ;; Return value:  Size  Location     Type
 34640 ;;                  1  [STACK] enum E17238
 34641 ;; Registers used:
 34642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
 34643 ;; Tracked objects:
 34644 ;;		On entry : 0/3C
 34645 ;;		On exit  : 0/0
 34646 ;;		Unchanged: 0/0
 34647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34652 ;;Total ram usage:        0 bytes
 34653 ;; Hardware stack levels used: 1
 34654 ;; Hardware stack levels required when called: 4
 34655 ;; This function calls:
 34656 ;;		_TimerDone
 34657 ;; This function is called by:
 34658 ;;		_main
 34659 ;;		_secs_II_message
 34660 ;;		_secs_gem_state
 34661 ;;		_check_help
 34662 ;; This function uses a reentrant model
 34663 ;;
 34664                           
 34665                           	psect	text44
 34666   018054                     __ptext44:
 34667                           	callstack 0
 34668   018054                     _set_display_info:
 34669                           	callstack 24
 34670                           
 34671                           ;mconfig.c: 226: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 22
      +                          7: {;mconfig.c: 228:  static D_CODES old_info = DIS_STR;;mconfig.c: 230:  if (TimerDone(
      +                          TMR_INFO)) {
 34672                           
 34673                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34674                           ;incstack = 0
 34675   018054  0E07               	movlw	7
 34676   018056  6EE6               	movwf	postinc1,c
 34677   018058  ECAD  F0BF         	call	_TimerDone	;wreg free
 34678   01805C  5023               	movf	btemp^0,w,c
 34679   01805E  B4D8               	btfsc	status,2,c
 34680   018060  D007               	goto	l2433
 34681                           
 34682                           ;mconfig.c: 232:   V.response.info = new_response_info;
 34683                           ;stkvar	_new_response_info @ sp[(0)+-1]
 34684                           
 34685                           ;mconfig.c: 231:   old_info = V.response.info;
 34686   018062  0EFF               	movlw	-1
 34687   018064  006F FF8C  F02E    	movff	plusw1,btemp+11
 34688   01806A  0060  F0B8  FD91   	movff	btemp+11,_V+375	;volatile
 34689   018070                     l2433:
 34690                           
 34691                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 34692   018070  52E5               	movf	postdec1,f,c
 34693   018072  0012               	return		;funcret
 34694   018074                     __end_of_set_display_info:
 34695                           	callstack 0
 34696                           
 34697 ;; *************** function _mode_lamp_dim *****************
 34698 ;; Defined at:
 34699 ;;		line 13 in file "mconfig.c"
 34700 ;; Parameters:    Size  Location     Type
 34701 ;;  level           2  [STACK] const unsigned short 
 34702 ;; Auto vars:     Size  Location     Type
 34703 ;;		None
 34704 ;; Return value:  Size  Location     Type
 34705 ;;                  1  [STACK] void 
 34706 ;; Registers used:
 34707 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 34708 ;; Tracked objects:
 34709 ;;		On entry : 0/3C
 34710 ;;		On exit  : 0/0
 34711 ;;		Unchanged: 0/0
 34712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34717 ;;Total ram usage:        0 bytes
 34718 ;; Hardware stack levels used: 1
 34719 ;; Hardware stack levels required when called: 4
 34720 ;; This function calls:
 34721 ;;		_PWM8_LoadDutyValue
 34722 ;; This function is called by:
 34723 ;;		_main
 34724 ;;		_check_help
 34725 ;; This function uses a reentrant model
 34726 ;;
 34727                           
 34728                           	psect	text45
 34729   01818E                     __ptext45:
 34730                           	callstack 0
 34731   01818E                     _mode_lamp_dim:
 34732                           	callstack 26
 34733                           
 34734                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 34735                           ;stkvar	_level @ sp[(0)+-2]
 34736                           
 34737                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34738                           ;incstack = 0
 34739   01818E  0EFE               	movlw	-2
 34740   018190  006F FF8F FFE6     	movff	plusw1,postinc1
 34741   018196  006F FF8F FFE6     	movff	plusw1,postinc1
 34742   01819C  ECA0  F0BB         	call	_PWM8_LoadDutyValue	;wreg free
 34743                           
 34744                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 34745   0181A0  52E5               	movf	postdec1,f,c
 34746   0181A2  52E5               	movf	postdec1,f,c
 34747   0181A4  0012               	return		;funcret
 34748   0181A6                     __end_of_mode_lamp_dim:
 34749                           	callstack 0
 34750                           
 34751 ;; *************** function _mode_lamp_bright *****************
 34752 ;; Defined at:
 34753 ;;		line 18 in file "mconfig.c"
 34754 ;; Parameters:    Size  Location     Type
 34755 ;;		None
 34756 ;; Auto vars:     Size  Location     Type
 34757 ;;		None
 34758 ;; Return value:  Size  Location     Type
 34759 ;;                  1  [STACK] void 
 34760 ;; Registers used:
 34761 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 34762 ;; Tracked objects:
 34763 ;;		On entry : 0/1
 34764 ;;		On exit  : 0/0
 34765 ;;		Unchanged: 0/0
 34766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34771 ;;Total ram usage:        0 bytes
 34772 ;; Hardware stack levels used: 1
 34773 ;; Hardware stack levels required when called: 4
 34774 ;; This function calls:
 34775 ;;		_PWM8_LoadDutyValue
 34776 ;; This function is called by:
 34777 ;;		_check_help
 34778 ;; This function uses a reentrant model
 34779 ;;
 34780                           
 34781                           	psect	text46
 34782   01822E                     __ptext46:
 34783                           	callstack 0
 34784   01822E                     _mode_lamp_bright:
 34785                           	callstack 25
 34786                           
 34787                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 34788                           
 34789                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34790                           ;incstack = 0
 34791   01822E  0E2C               	movlw	44
 34792   018230  6EE6               	movwf	postinc1,c
 34793   018232  0E01               	movlw	1
 34794   018234  6EE6               	movwf	postinc1,c
 34795   018236  ECA0  F0BB         	call	_PWM8_LoadDutyValue	;wreg free
 34796                           
 34797                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 34798   01823A  0012               	return		;funcret
 34799   01823C                     __end_of_mode_lamp_bright:
 34800                           	callstack 0
 34801                           
 34802 ;; *************** function _PWM8_LoadDutyValue *****************
 34803 ;; Defined at:
 34804 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 34805 ;; Parameters:    Size  Location     Type
 34806 ;;  dutyValue       2  [STACK] unsigned short 
 34807 ;; Auto vars:     Size  Location     Type
 34808 ;;		None
 34809 ;; Return value:  Size  Location     Type
 34810 ;;                  1  [STACK] void 
 34811 ;; Registers used:
 34812 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 34813 ;; Tracked objects:
 34814 ;;		On entry : 0/3C
 34815 ;;		On exit  : 0/0
 34816 ;;		Unchanged: 0/0
 34817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34822 ;;Total ram usage:        0 bytes
 34823 ;; Hardware stack levels used: 1
 34824 ;; Hardware stack levels required when called: 3
 34825 ;; This function calls:
 34826 ;;		Nothing
 34827 ;; This function is called by:
 34828 ;;		_mode_lamp_dim
 34829 ;;		_mode_lamp_bright
 34830 ;; This function uses a reentrant model
 34831 ;;
 34832                           
 34833                           	psect	text47
 34834   017740                     __ptext47:
 34835                           	callstack 0
 34836   017740                     _PWM8_LoadDutyValue:
 34837                           	callstack 26
 34838                           
 34839                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 34840                           ;stkvar	_dutyValue @ sp[(0)+-2]
 34841                           
 34842                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34843                           ;incstack = 0
 34844   017740  0EFE               	movlw	-2
 34845   017742  006F FF8C  F02D    	movff	plusw1,btemp+10
 34846   017748  0EFF               	movlw	-1
 34847   01774A  006F FF8C  F02E    	movff	plusw1,btemp+11
 34848   017750  90D8               	bcf	status,0,c
 34849   017752  322E               	rrcf	(btemp+11)^0,f,c
 34850   017754  322D               	rrcf	(btemp+10)^0,f,c
 34851   017756  90D8               	bcf	status,0,c
 34852   017758  322E               	rrcf	(btemp+11)^0,f,c
 34853   01775A  322D               	rrcf	(btemp+10)^0,f,c
 34854   01775C  502D               	movf	(btemp+10)^0,w,c
 34855   01775E  6E61               	movwf	97,c	;volatile
 34856                           
 34857                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 34858                           ;stkvar	_dutyValue @ sp[(0)+-2]
 34859   017760  0EFE               	movlw	-2
 34860   017762  006F FF8C  F02E    	movff	plusw1,btemp+11
 34861   017768  0E03               	movlw	3
 34862   01776A  162E               	andwf	(btemp+11)^0,f,c
 34863   01776C  0E06               	movlw	6
 34864   01776E  6E23               	movwf	btemp^0,c
 34865   017770                     u5495:
 34866   017770  90D8               	bcf	status,0,c
 34867   017772  362E               	rlcf	(btemp+11)^0,f,c
 34868   017774  2E23               	decfsz	btemp^0,f,c
 34869   017776  D7FC               	goto	u5495
 34870   017778  502E               	movf	(btemp+11)^0,w,c
 34871   01777A  6E60               	movwf	96,c	;volatile
 34872                           
 34873                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 34874   01777C  52E5               	movf	postdec1,f,c
 34875   01777E  52E5               	movf	postdec1,f,c
 34876   017780  0012               	return		;funcret
 34877   017782                     __end_of_PWM8_LoadDutyValue:
 34878                           	callstack 0
 34879                           
 34880 ;; *************** function _help_button *****************
 34881 ;; Defined at:
 34882 ;;		line 26 in file "mconfig.c"
 34883 ;; Parameters:    Size  Location     Type
 34884 ;;		None
 34885 ;; Auto vars:     Size  Location     Type
 34886 ;;		None
 34887 ;; Return value:  Size  Location     Type
 34888 ;;                  1  [STACK] _Bool 
 34889 ;; Registers used:
 34890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 34891 ;; Tracked objects:
 34892 ;;		On entry : 0/1
 34893 ;;		On exit  : 0/0
 34894 ;;		Unchanged: 0/0
 34895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34900 ;;Total ram usage:        0 bytes
 34901 ;; Hardware stack levels used: 1
 34902 ;; Hardware stack levels required when called: 4
 34903 ;; This function calls:
 34904 ;;		_StartTimer
 34905 ;;		_TimerDone
 34906 ;; This function is called by:
 34907 ;;		_check_help
 34908 ;; This function uses a reentrant model
 34909 ;;
 34910                           
 34911                           	psect	text48
 34912   0179C8                     __ptext48:
 34913                           	callstack 0
 34914   0179C8                     _help_button:
 34915                           	callstack 25
 34916                           
 34917                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 34918                           
 34919                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34920                           ;incstack = 0
 34921   0179C8  B0CB               	btfsc	203,0,c	;volatile
 34922   0179CA  D00D               	goto	l9922
 34923                           
 34924                           ;mconfig.c: 29:   V.help = 1;
 34925   0179CC  EE23  F168         	lfsr	2,_V+334	;volatile
 34926   0179D0  8CDF               	bsf	indf2,6,c
 34927                           
 34928                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 34929   0179D2  0E08               	movlw	8
 34930   0179D4  6EE6               	movwf	postinc1,c
 34931   0179D6  ECAD  F0BF         	call	_TimerDone	;wreg free
 34932   0179DA  5023               	movf	btemp^0,w,c
 34933   0179DC  B4D8               	btfsc	status,2,c
 34934   0179DE  D003               	goto	l9922
 34935                           
 34936                           ;mconfig.c: 31:    return 1;
 34937   0179E0  0E01               	movlw	1
 34938   0179E2  6E23               	movwf	btemp^0,c
 34939   0179E4  0012               	return	
 34940   0179E6                     l9922:
 34941                           
 34942                           ;mconfig.c: 34:  if (!V.help)
 34943   0179E6  EE23  F168         	lfsr	2,_V+334	;volatile
 34944   0179EA  BCDF               	btfsc	indf2,6,c
 34945   0179EC  D008               	goto	l9926
 34946                           
 34947                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 34948   0179EE  0E2C               	movlw	44
 34949   0179F0  6EE6               	movwf	postinc1,c
 34950   0179F2  0E01               	movlw	1
 34951   0179F4  6EE6               	movwf	postinc1,c
 34952   0179F6  0E08               	movlw	8
 34953   0179F8  6EE6               	movwf	postinc1,c
 34954   0179FA  EC02  F0BD         	call	_StartTimer	;wreg free
 34955   0179FE                     l9926:
 34956                           
 34957                           ;mconfig.c: 37:  return 0;
 34958   0179FE  0E00               	movlw	0
 34959   017A00  6E23               	movwf	btemp^0,c
 34960                           
 34961                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 34962   017A02  0012               	return		;funcret
 34963   017A04                     __end_of_help_button:
 34964                           	callstack 0
 34965                           
 34966 ;; *************** function _StartTimer *****************
 34967 ;; Defined at:
 34968 ;;		line 12 in file "timers.c"
 34969 ;; Parameters:    Size  Location     Type
 34970 ;;  timer           1  [STACK] const unsigned char 
 34971 ;;  count           2  [STACK] const unsigned short 
 34972 ;; Auto vars:     Size  Location     Type
 34973 ;;		None
 34974 ;; Return value:  Size  Location     Type
 34975 ;;                  1  [STACK] void 
 34976 ;; Registers used:
 34977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 34978 ;; Tracked objects:
 34979 ;;		On entry : 0/1
 34980 ;;		On exit  : 0/0
 34981 ;;		Unchanged: 0/0
 34982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34987 ;;Total ram usage:        0 bytes
 34988 ;; Hardware stack levels used: 1
 34989 ;; Hardware stack levels required when called: 3
 34990 ;; This function calls:
 34991 ;;		Nothing
 34992 ;; This function is called by:
 34993 ;;		_main
 34994 ;;		_m_protocol
 34995 ;;		_r_protocol
 34996 ;;		_t_protocol
 34997 ;;		_sequence_messages
 34998 ;;		_gem_messages
 34999 ;;		_secs_II_message
 35000 ;;		_ee_logger
 35001 ;;		_secs_gem_state
 35002 ;;		_WaitMs
 35003 ;;		_help_button
 35004 ;;		_check_help
 35005 ;; This function uses a reentrant model
 35006 ;;
 35007                           
 35008                           	psect	text49
 35009   017A04                     __ptext49:
 35010                           	callstack 0
 35011   017A04                     _StartTimer:
 35012                           	callstack 24
 35013                           
 35014                           ;timers.c: 12: __attribute__((inline)) void StartTimer(const uint8_t timer, const uint16
      +                          _t count);timers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
 35015                           ;stkvar	_count @ sp[(0)+-3]
 35016                           
 35017                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35018                           ;incstack = 0
 35019   017A04  0EFD               	movlw	-3
 35020   017A06  006F FF8C  F02D    	movff	plusw1,btemp+10
 35021   017A0C  0EFE               	movlw	-2
 35022   017A0E  006F FF8C  F02E    	movff	plusw1,btemp+11
 35023   017A14  90D8               	bcf	status,0,c
 35024   017A16  342D               	rlcf	(btemp+10)^0,w,c
 35025   017A18  6E2B               	movwf	(btemp+8)^0,c
 35026   017A1A  342E               	rlcf	(btemp+11)^0,w,c
 35027   017A1C  6E2C               	movwf	(btemp+9)^0,c
 35028                           
 35029                           ;stkvar	_timer @ sp[(0)+-1]
 35030   017A1E  0EFF               	movlw	-1
 35031   017A20  50E3               	movf	plusw1,w,c
 35032   017A22  0D02               	mullw	2
 35033   017A24  50F3               	movf	243,w,c
 35034   017A26  0F60               	addlw	low _tickCount
 35035   017A28  6ED9               	movwf	fsr2l,c
 35036   017A2A  6ADA               	clrf	fsr2h,c
 35037   017A2C  0060  F0AF  FFDE   	movff	btemp+8,postinc2
 35038   017A32  0060  F0B3  FFDD   	movff	btemp+9,postdec2
 35039                           
 35040                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 35041   017A38  52E5               	movf	postdec1,f,c
 35042   017A3A  52E5               	movf	postdec1,f,c
 35043   017A3C  52E5               	movf	postdec1,f,c
 35044   017A3E  0012               	return		;funcret
 35045   017A40                     __end_of_StartTimer:
 35046                           	callstack 0
 35047                           
 35048 ;; *************** function _display_info *****************
 35049 ;; Defined at:
 35050 ;;		line 216 in file "mconfig.c"
 35051 ;; Parameters:    Size  Location     Type
 35052 ;;		None
 35053 ;; Auto vars:     Size  Location     Type
 35054 ;;		None
 35055 ;; Return value:  Size  Location     Type
 35056 ;;                  1  [STACK] enum E16960
 35057 ;; Registers used:
 35058 ;;		btemp
 35059 ;; Tracked objects:
 35060 ;;		On entry : 0/0
 35061 ;;		On exit  : 0/0
 35062 ;;		Unchanged: 0/0
 35063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35068 ;;Total ram usage:        0 bytes
 35069 ;; Hardware stack levels used: 1
 35070 ;; Hardware stack levels required when called: 3
 35071 ;; This function calls:
 35072 ;;		Nothing
 35073 ;; This function is called by:
 35074 ;;		_secs_II_message
 35075 ;;		_check_help
 35076 ;; This function uses a reentrant model
 35077 ;;
 35078                           
 35079                           	psect	text50
 35080   01826A                     __ptext50:
 35081                           	callstack 0
 35082   01826A                     _display_info:
 35083                           	callstack 25
 35084                           
 35085                           ;mconfig.c: 218:  return V.response.info;
 35086                           
 35087                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35088                           ;incstack = 0
 35089   01826A  0063  F644  F023   	movff	_V+375,btemp	;volatile
 35090                           
 35091                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 35092   018270  0012               	return		;funcret
 35093   018272                     __end_of_display_info:
 35094                           	callstack 0
 35095                           
 35096 ;; *************** function _display_help *****************
 35097 ;; Defined at:
 35098 ;;		line 221 in file "mconfig.c"
 35099 ;; Parameters:    Size  Location     Type
 35100 ;;		None
 35101 ;; Auto vars:     Size  Location     Type
 35102 ;;		None
 35103 ;; Return value:  Size  Location     Type
 35104 ;;                  1  [STACK] enum E16750
 35105 ;; Registers used:
 35106 ;;		btemp
 35107 ;; Tracked objects:
 35108 ;;		On entry : 0/1
 35109 ;;		On exit  : 0/0
 35110 ;;		Unchanged: 0/0
 35111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35116 ;;Total ram usage:        0 bytes
 35117 ;; Hardware stack levels used: 1
 35118 ;; Hardware stack levels required when called: 3
 35119 ;; This function calls:
 35120 ;;		Nothing
 35121 ;; This function is called by:
 35122 ;;		_check_help
 35123 ;; This function uses a reentrant model
 35124 ;;
 35125                           
 35126                           	psect	text51
 35127   018272                     __ptext51:
 35128                           	callstack 0
 35129   018272                     _display_help:
 35130                           	callstack 26
 35131                           
 35132                           ;mconfig.c: 223:  return V.response.help_temp;
 35133                           
 35134                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35135                           ;incstack = 0
 35136   018272  0063  F648  F023   	movff	_V+376,btemp	;volatile
 35137                           
 35138                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 35139   018278  0012               	return		;funcret
 35140   01827A                     __end_of_display_help:
 35141                           	callstack 0
 35142                           
 35143 ;; *************** function _SYSTEM_Initialize *****************
 35144 ;; Defined at:
 35145 ;;		line 50 in file "mcc_generated_files/mcc.c"
 35146 ;; Parameters:    Size  Location     Type
 35147 ;;		None
 35148 ;; Auto vars:     Size  Location     Type
 35149 ;;		None
 35150 ;; Return value:  Size  Location     Type
 35151 ;;                  1  [STACK] void 
 35152 ;; Registers used:
 35153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 35154 ;; Tracked objects:
 35155 ;;		On entry : 0/0
 35156 ;;		On exit  : 3F/3C
 35157 ;;		Unchanged: 0/0
 35158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35163 ;;Total ram usage:        0 bytes
 35164 ;; Hardware stack levels used: 1
 35165 ;; Hardware stack levels required when called: 5
 35166 ;; This function calls:
 35167 ;;		_ADCC_Initialize
 35168 ;;		_CLC1_Initialize
 35169 ;;		_CLKREF_Initialize
 35170 ;;		_DMA1_Initialize
 35171 ;;		_DMA2_Initialize
 35172 ;;		_DSM_Initialize
 35173 ;;		_EXT_INT_Initialize
 35174 ;;		_INTERRUPT_Initialize
 35175 ;;		_NCO1_Initialize
 35176 ;;		_OSCILLATOR_Initialize
 35177 ;;		_PIN_MANAGER_Initialize
 35178 ;;		_PMD_Initialize
 35179 ;;		_PWM8_Initialize
 35180 ;;		_SPI1_Initialize
 35181 ;;		_TMR2_Initialize
 35182 ;;		_TMR5_Initialize
 35183 ;;		_TMR6_Initialize
 35184 ;;		_UART1_Initialize
 35185 ;;		_UART2_Initialize
 35186 ;; This function is called by:
 35187 ;;		_main
 35188 ;; This function uses a reentrant model
 35189 ;;
 35190                           
 35191                           	psect	text52
 35192   01758C                     __ptext52:
 35193                           	callstack 0
 35194   01758C                     _SYSTEM_Initialize:
 35195                           	callstack 25
 35196                           
 35197                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 35198                           
 35199                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35200                           ;incstack = 0
 35201   01758C  ECF2  F0B8         	call	_INTERRUPT_Initialize	;wreg free
 35202                           
 35203                           ; BSR set to: 57
 35204                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 35205   017590  ECF4  F0C0         	call	_PMD_Initialize	;wreg free
 35206                           
 35207                           ; BSR set to: 57
 35208                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 35209   017594  EC04  F0B6         	call	_PIN_MANAGER_Initialize	;wreg free
 35210                           
 35211                           ; BSR set to: 58
 35212                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 35213   017598  ECE9  F0C0         	call	_OSCILLATOR_Initialize	;wreg free
 35214                           
 35215                           ; BSR set to: 57
 35216                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 35217   01759C  EC13  F0BB         	call	_ADCC_Initialize	;wreg free
 35218                           
 35219                           ;mcc_generated_files/mcc.c: 57:     NCO1_Initialize();
 35220   0175A0  EC76  F0C0         	call	_NCO1_Initialize	;wreg free
 35221                           
 35222                           ; BSR set to: 63
 35223                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 35224   0175A4  ECDE  F0C0         	call	_PWM8_Initialize	;wreg free
 35225                           
 35226                           ; BSR set to: 63
 35227                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 35228   0175A8  ECA0  F0C0         	call	_TMR2_Initialize	;wreg free
 35229                           
 35230                           ; BSR set to: 57
 35231                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 35232   0175AC  ECED  F0BA         	call	_EXT_INT_Initialize	;wreg free
 35233                           
 35234                           ; BSR set to: 57
 35235                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 35236   0175B0  ECD3  F0BE         	call	_TMR6_Initialize	;wreg free
 35237                           
 35238                           ;mcc_generated_files/mcc.c: 62:     CLC1_Initialize();
 35239   0175B4  EC19  F0C0         	call	_CLC1_Initialize	;wreg free
 35240                           
 35241                           ; BSR set to: 60
 35242                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 35243   0175B8  EC7E  F0BB         	call	_TMR5_Initialize	;wreg free
 35244                           
 35245                           ;mcc_generated_files/mcc.c: 64:     DSM_Initialize();
 35246   0175BC  EC84  F0C0         	call	_DSM_Initialize	;wreg free
 35247                           
 35248                           ; BSR set to: 60
 35249                           ;mcc_generated_files/mcc.c: 65:     UART1_Initialize();
 35250   0175C0  EC59  F0B9         	call	_UART1_Initialize	;wreg free
 35251                           
 35252                           ; BSR set to: 57
 35253                           ;mcc_generated_files/mcc.c: 66:     UART2_Initialize();
 35254   0175C4  ECEB  F0B9         	call	_UART2_Initialize	;wreg free
 35255                           
 35256                           ; BSR set to: 57
 35257                           ;mcc_generated_files/mcc.c: 67:     SPI1_Initialize();
 35258   0175C8  ECD3  F0C0         	call	_SPI1_Initialize	;wreg free
 35259                           
 35260                           ; BSR set to: 61
 35261                           ;mcc_generated_files/mcc.c: 68:     DMA2_Initialize();
 35262   0175CC  EC1A  F0BA         	call	_DMA2_Initialize	;wreg free
 35263                           
 35264                           ; BSR set to: 59
 35265                           ;mcc_generated_files/mcc.c: 69:     DMA1_Initialize();
 35266   0175D0  EC23  F0B8         	call	_DMA1_Initialize	;wreg free
 35267                           
 35268                           ; BSR set to: 59
 35269                           ;mcc_generated_files/mcc.c: 70:     CLKREF_Initialize();
 35270   0175D4  EC1E  F0C1         	call	_CLKREF_Initialize	;wreg free
 35271                           
 35272                           ; BSR set to: 60
 35273                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35274   0175D8  0012               	return		;funcret
 35275   0175DA                     __end_of_SYSTEM_Initialize:
 35276                           	callstack 0
 35277                           
 35278 ;; *************** function _UART2_Initialize *****************
 35279 ;; Defined at:
 35280 ;;		line 78 in file "mcc_generated_files/uart2.c"
 35281 ;; Parameters:    Size  Location     Type
 35282 ;;		None
 35283 ;; Auto vars:     Size  Location     Type
 35284 ;;		None
 35285 ;; Return value:  Size  Location     Type
 35286 ;;                  1  [STACK] void 
 35287 ;; Registers used:
 35288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 35289 ;; Tracked objects:
 35290 ;;		On entry : 3F/39
 35291 ;;		On exit  : 3F/39
 35292 ;;		Unchanged: 0/0
 35293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35298 ;;Total ram usage:        0 bytes
 35299 ;; Hardware stack levels used: 1
 35300 ;; Hardware stack levels required when called: 4
 35301 ;; This function calls:
 35302 ;;		_UART2_SetRxInterruptHandler
 35303 ;;		_UART2_SetTxInterruptHandler
 35304 ;; This function is called by:
 35305 ;;		_SYSTEM_Initialize
 35306 ;; This function uses a reentrant model
 35307 ;;
 35308                           
 35309                           	psect	text53
 35310   0173D6                     __ptext53:
 35311                           	callstack 0
 35312   0173D6                     _UART2_Initialize:
 35313                           	callstack 25
 35314                           
 35315                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 35316                           
 35317                           ; BSR set to: 60
 35318                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35319                           ;incstack = 0
 35320   0173D6  0139               	movlb	57	; () banked
 35321   0173D8  9596               	bcf	150,2,b	;volatile
 35322                           
 35323                           ; BSR set to: 57
 35324                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 35325   0173DA  0ECE               	movlw	low _UART2_Receive_ISR
 35326   0173DC  6EE6               	movwf	postinc1,c
 35327   0173DE  0E80               	movlw	high _UART2_Receive_ISR
 35328   0173E0  6EE6               	movwf	postinc1,c
 35329   0173E2  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 35330   0173E4  6EE6               	movwf	postinc1,c
 35331   0173E6  EC97  F0BE         	call	_UART2_SetRxInterruptHandler	;wreg free
 35332                           
 35333                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 35334   0173EA  0139               	movlb	57	; () banked
 35335   0173EC  9796               	bcf	150,3,b	;volatile
 35336                           
 35337                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 35338   0173EE  0EEA               	movlw	low _UART2_Transmit_ISR
 35339   0173F0  6EE6               	movwf	postinc1,c
 35340   0173F2  0E7B               	movlw	high _UART2_Transmit_ISR
 35341   0173F4  6EE6               	movwf	postinc1,c
 35342   0173F6  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 35343   0173F8  6EE6               	movwf	postinc1,c
 35344   0173FA  EC83  F0BE         	call	_UART2_SetTxInterruptHandler	;wreg free
 35345                           
 35346                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 35347   0173FE  013D               	movlb	61	; () banked
 35348   017400  6BD4               	clrf	212,b	;volatile
 35349                           
 35350                           ; BSR set to: 61
 35351                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 35352   017402  6BD6               	clrf	214,b	;volatile
 35353                           
 35354                           ; BSR set to: 61
 35355                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 35356   017404  6BD8               	clrf	216,b	;volatile
 35357                           
 35358                           ; BSR set to: 61
 35359                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 35360   017406  0EB0               	movlw	176
 35361   017408  6FDA               	movwf	218,b	;volatile
 35362                           
 35363                           ; BSR set to: 61
 35364                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 35365   01740A  0E80               	movlw	128
 35366   01740C  6FDB               	movwf	219,b	;volatile
 35367                           
 35368                           ; BSR set to: 61
 35369                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 35370   01740E  6BDC               	clrf	220,b	;volatile
 35371                           
 35372                           ; BSR set to: 61
 35373                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 35374   017410  0E82               	movlw	130
 35375   017412  6FDD               	movwf	221,b	;volatile
 35376                           
 35377                           ; BSR set to: 61
 35378                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 35379   017414  0E06               	movlw	6
 35380   017416  6FDE               	movwf	222,b	;volatile
 35381                           
 35382                           ; BSR set to: 61
 35383                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 35384   017418  6BDF               	clrf	223,b	;volatile
 35385                           
 35386                           ; BSR set to: 61
 35387                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 35388   01741A  6BE0               	clrf	224,b	;volatile
 35389                           
 35390                           ; BSR set to: 61
 35391                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 35392   01741C  6BE1               	clrf	225,b	;volatile
 35393                           
 35394                           ; BSR set to: 61
 35395                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 35396   01741E  6BE2               	clrf	226,b	;volatile
 35397                           
 35398                           ; BSR set to: 61
 35399                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 35400   017420  6A15               	clrf	_uart2TxHead^0,c	;volatile
 35401                           
 35402                           ; BSR set to: 61
 35403                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 35404   017422  6A14               	clrf	_uart2TxTail^0,c	;volatile
 35405                           
 35406                           ; BSR set to: 61
 35407                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 35408   017424  0E40               	movlw	64
 35409   017426  6E13               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 35410                           
 35411                           ; BSR set to: 61
 35412                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 35413   017428  6A12               	clrf	_uart2RxHead^0,c	;volatile
 35414                           
 35415                           ; BSR set to: 61
 35416                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 35417   01742A  6A11               	clrf	_uart2RxTail^0,c	;volatile
 35418                           
 35419                           ; BSR set to: 61
 35420                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 35421   01742C  6A10               	clrf	_uart2RxCount^0,c	;volatile
 35422                           
 35423                           ; BSR set to: 61
 35424                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 35425   01742E  0139               	movlb	57	; () banked
 35426   017430  8596               	bsf	150,2,b	;volatile
 35427                           
 35428                           ; BSR set to: 57
 35429                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 35430   017432  0012               	return		;funcret
 35431   017434                     __end_of_UART2_Initialize:
 35432                           	callstack 0
 35433                           
 35434 ;; *************** function _UART2_SetTxInterruptHandler *****************
 35435 ;; Defined at:
 35436 ;;		line 252 in file "mcc_generated_files/uart2.c"
 35437 ;; Parameters:    Size  Location     Type
 35438 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 35439 ;;		 -> UART2_Transmit_ISR(1), 
 35440 ;; Auto vars:     Size  Location     Type
 35441 ;;		None
 35442 ;; Return value:  Size  Location     Type
 35443 ;;                  1  [STACK] void 
 35444 ;; Registers used:
 35445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 35446 ;; Tracked objects:
 35447 ;;		On entry : 3F/39
 35448 ;;		On exit  : 0/0
 35449 ;;		Unchanged: 0/0
 35450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35455 ;;Total ram usage:        0 bytes
 35456 ;; Hardware stack levels used: 1
 35457 ;; Hardware stack levels required when called: 3
 35458 ;; This function calls:
 35459 ;;		Nothing
 35460 ;; This function is called by:
 35461 ;;		_UART2_Initialize
 35462 ;; This function uses a reentrant model
 35463 ;;
 35464                           
 35465                           	psect	text54
 35466   017D06                     __ptext54:
 35467                           	callstack 0
 35468   017D06                     _UART2_SetTxInterruptHandler:
 35469                           	callstack 25
 35470                           
 35471                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 35472                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 35473                           
 35474                           ; BSR set to: 57
 35475                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35476                           ;incstack = 0
 35477   017D06  50E1               	movf	fsr1l,w,c
 35478   017D08  0FFD               	addlw	-3
 35479   017D0A  6ED9               	movwf	fsr2l,c
 35480   017D0C  50E2               	movf	fsr1h,w,c
 35481   017D0E  6EDA               	movwf	fsr2h,c
 35482   017D10  0EFF               	movlw	255
 35483   017D12  22DA               	addwfc	fsr2h,f,c
 35484   017D14  006F FF78  F0AD    	movff	postinc2,_UART2_TxInterruptHandler
 35485   017D1A  006F FF78  F0AE    	movff	postinc2,_UART2_TxInterruptHandler+1
 35486   017D20  006F FF74  F0AF    	movff	postdec2,_UART2_TxInterruptHandler+2
 35487                           
 35488                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 35489   017D26  52E5               	movf	postdec1,f,c
 35490   017D28  52E5               	movf	postdec1,f,c
 35491   017D2A  52E5               	movf	postdec1,f,c
 35492   017D2C  0012               	return		;funcret
 35493   017D2E                     __end_of_UART2_SetTxInterruptHandler:
 35494                           	callstack 0
 35495                           
 35496 ;; *************** function _UART2_SetRxInterruptHandler *****************
 35497 ;; Defined at:
 35498 ;;		line 248 in file "mcc_generated_files/uart2.c"
 35499 ;; Parameters:    Size  Location     Type
 35500 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 35501 ;;		 -> UART2_Receive_ISR(1), 
 35502 ;; Auto vars:     Size  Location     Type
 35503 ;;		None
 35504 ;; Return value:  Size  Location     Type
 35505 ;;                  1  [STACK] void 
 35506 ;; Registers used:
 35507 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 35508 ;; Tracked objects:
 35509 ;;		On entry : 3F/39
 35510 ;;		On exit  : 0/0
 35511 ;;		Unchanged: 0/0
 35512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35517 ;;Total ram usage:        0 bytes
 35518 ;; Hardware stack levels used: 1
 35519 ;; Hardware stack levels required when called: 3
 35520 ;; This function calls:
 35521 ;;		Nothing
 35522 ;; This function is called by:
 35523 ;;		_UART2_Initialize
 35524 ;; This function uses a reentrant model
 35525 ;;
 35526                           
 35527                           	psect	text55
 35528   017D2E                     __ptext55:
 35529                           	callstack 0
 35530   017D2E                     _UART2_SetRxInterruptHandler:
 35531                           	callstack 25
 35532                           
 35533                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 35534                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 35535                           
 35536                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35537                           ;incstack = 0
 35538   017D2E  50E1               	movf	fsr1l,w,c
 35539   017D30  0FFD               	addlw	-3
 35540   017D32  6ED9               	movwf	fsr2l,c
 35541   017D34  50E2               	movf	fsr1h,w,c
 35542   017D36  6EDA               	movwf	fsr2h,c
 35543   017D38  0EFF               	movlw	255
 35544   017D3A  22DA               	addwfc	fsr2h,f,c
 35545   017D3C  006F FF78  F0B0    	movff	postinc2,_UART2_RxInterruptHandler
 35546   017D42  006F FF78  F0B1    	movff	postinc2,_UART2_RxInterruptHandler+1
 35547   017D48  006F FF74  F0B2    	movff	postdec2,_UART2_RxInterruptHandler+2
 35548                           
 35549                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 35550   017D4E  52E5               	movf	postdec1,f,c
 35551   017D50  52E5               	movf	postdec1,f,c
 35552   017D52  52E5               	movf	postdec1,f,c
 35553   017D54  0012               	return		;funcret
 35554   017D56                     __end_of_UART2_SetRxInterruptHandler:
 35555                           	callstack 0
 35556                           
 35557 ;; *************** function _UART1_Initialize *****************
 35558 ;; Defined at:
 35559 ;;		line 79 in file "mcc_generated_files/uart1.c"
 35560 ;; Parameters:    Size  Location     Type
 35561 ;;		None
 35562 ;; Auto vars:     Size  Location     Type
 35563 ;;		None
 35564 ;; Return value:  Size  Location     Type
 35565 ;;                  1  [STACK] void 
 35566 ;; Registers used:
 35567 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 35568 ;; Tracked objects:
 35569 ;;		On entry : 3F/3C
 35570 ;;		On exit  : 3F/39
 35571 ;;		Unchanged: 0/0
 35572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35577 ;;Total ram usage:        0 bytes
 35578 ;; Hardware stack levels used: 1
 35579 ;; Hardware stack levels required when called: 4
 35580 ;; This function calls:
 35581 ;;		_UART1_SetRxInterruptHandler
 35582 ;;		_UART1_SetTxInterruptHandler
 35583 ;; This function is called by:
 35584 ;;		_SYSTEM_Initialize
 35585 ;; This function uses a reentrant model
 35586 ;;
 35587                           
 35588                           	psect	text56
 35589   0172B2                     __ptext56:
 35590                           	callstack 0
 35591   0172B2                     _UART1_Initialize:
 35592                           	callstack 25
 35593                           
 35594                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 35595                           
 35596                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35597                           ;incstack = 0
 35598   0172B2  0139               	movlb	57	; () banked
 35599   0172B4  9793               	bcf	147,3,b	;volatile
 35600                           
 35601                           ; BSR set to: 57
 35602                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 35603   0172B6  0EB0               	movlw	low _UART1_Receive_ISR
 35604   0172B8  6EE6               	movwf	postinc1,c
 35605   0172BA  0E80               	movlw	high _UART1_Receive_ISR
 35606   0172BC  6EE6               	movwf	postinc1,c
 35607   0172BE  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 35608   0172C0  6EE6               	movwf	postinc1,c
 35609   0172C2  ECBF  F0BE         	call	_UART1_SetRxInterruptHandler	;wreg free
 35610                           
 35611                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 35612   0172C6  0139               	movlb	57	; () banked
 35613   0172C8  9993               	bcf	147,4,b	;volatile
 35614                           
 35615                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 35616   0172CA  0EBE               	movlw	low _UART1_Transmit_ISR
 35617   0172CC  6EE6               	movwf	postinc1,c
 35618   0172CE  0E7B               	movlw	high _UART1_Transmit_ISR
 35619   0172D0  6EE6               	movwf	postinc1,c
 35620   0172D2  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 35621   0172D4  6EE6               	movwf	postinc1,c
 35622   0172D6  ECAB  F0BE         	call	_UART1_SetTxInterruptHandler	;wreg free
 35623                           
 35624                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 35625   0172DA  013D               	movlb	61	; () banked
 35626   0172DC  6BEC               	clrf	236,b	;volatile
 35627                           
 35628                           ; BSR set to: 61
 35629                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 35630   0172DE  6BED               	clrf	237,b	;volatile
 35631                           
 35632                           ; BSR set to: 61
 35633                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 35634   0172E0  6BEE               	clrf	238,b	;volatile
 35635                           
 35636                           ; BSR set to: 61
 35637                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 35638   0172E2  6BEF               	clrf	239,b	;volatile
 35639                           
 35640                           ; BSR set to: 61
 35641                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 35642   0172E4  6BF0               	clrf	240,b	;volatile
 35643                           
 35644                           ; BSR set to: 61
 35645                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 35646   0172E6  6BF1               	clrf	241,b	;volatile
 35647                           
 35648                           ; BSR set to: 61
 35649                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 35650   0172E8  0EB0               	movlw	176
 35651   0172EA  6FF2               	movwf	242,b	;volatile
 35652                           
 35653                           ; BSR set to: 61
 35654                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 35655   0172EC  0E80               	movlw	128
 35656   0172EE  6FF3               	movwf	243,b	;volatile
 35657                           
 35658                           ; BSR set to: 61
 35659                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 35660   0172F0  6BF4               	clrf	244,b	;volatile
 35661                           
 35662                           ; BSR set to: 61
 35663                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 35664   0172F2  0E82               	movlw	130
 35665   0172F4  6FF5               	movwf	245,b	;volatile
 35666                           
 35667                           ; BSR set to: 61
 35668                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 35669   0172F6  0E06               	movlw	6
 35670   0172F8  6FF6               	movwf	246,b	;volatile
 35671                           
 35672                           ; BSR set to: 61
 35673                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 35674   0172FA  6BF7               	clrf	247,b	;volatile
 35675                           
 35676                           ; BSR set to: 61
 35677                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 35678   0172FC  6BF8               	clrf	248,b	;volatile
 35679                           
 35680                           ; BSR set to: 61
 35681                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 35682   0172FE  6BF9               	clrf	249,b	;volatile
 35683                           
 35684                           ; BSR set to: 61
 35685                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 35686   017300  6BFA               	clrf	250,b	;volatile
 35687                           
 35688                           ; BSR set to: 61
 35689                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 35690   017302  6A1B               	clrf	_uart1TxHead^0,c	;volatile
 35691                           
 35692                           ; BSR set to: 61
 35693                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 35694   017304  6A1A               	clrf	_uart1TxTail^0,c	;volatile
 35695                           
 35696                           ; BSR set to: 61
 35697                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 35698   017306  0E40               	movlw	64
 35699   017308  6E19               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 35700                           
 35701                           ; BSR set to: 61
 35702                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 35703   01730A  6A18               	clrf	_uart1RxHead^0,c	;volatile
 35704                           
 35705                           ; BSR set to: 61
 35706                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 35707   01730C  6A17               	clrf	_uart1RxTail^0,c	;volatile
 35708                           
 35709                           ; BSR set to: 61
 35710                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 35711   01730E  6A16               	clrf	_uart1RxCount^0,c	;volatile
 35712                           
 35713                           ; BSR set to: 61
 35714                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 35715   017310  0139               	movlb	57	; () banked
 35716   017312  8793               	bsf	147,3,b	;volatile
 35717                           
 35718                           ; BSR set to: 57
 35719                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 35720   017314  0012               	return		;funcret
 35721   017316                     __end_of_UART1_Initialize:
 35722                           	callstack 0
 35723                           
 35724 ;; *************** function _UART1_SetTxInterruptHandler *****************
 35725 ;; Defined at:
 35726 ;;		line 247 in file "mcc_generated_files/uart1.c"
 35727 ;; Parameters:    Size  Location     Type
 35728 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 35729 ;;		 -> UART1_Transmit_ISR(1), 
 35730 ;; Auto vars:     Size  Location     Type
 35731 ;;		None
 35732 ;; Return value:  Size  Location     Type
 35733 ;;                  1  [STACK] void 
 35734 ;; Registers used:
 35735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 35736 ;; Tracked objects:
 35737 ;;		On entry : 3F/39
 35738 ;;		On exit  : 0/0
 35739 ;;		Unchanged: 0/0
 35740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35745 ;;Total ram usage:        0 bytes
 35746 ;; Hardware stack levels used: 1
 35747 ;; Hardware stack levels required when called: 3
 35748 ;; This function calls:
 35749 ;;		Nothing
 35750 ;; This function is called by:
 35751 ;;		_UART1_Initialize
 35752 ;; This function uses a reentrant model
 35753 ;;
 35754                           
 35755                           	psect	text57
 35756   017D56                     __ptext57:
 35757                           	callstack 0
 35758   017D56                     _UART1_SetTxInterruptHandler:
 35759                           	callstack 25
 35760                           
 35761                           ;mcc_generated_files/uart1.c: 247: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 248: {;mcc_generated_files/uart1.c: 249:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 35762                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 35763                           
 35764                           ; BSR set to: 57
 35765                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35766                           ;incstack = 0
 35767   017D56  50E1               	movf	fsr1l,w,c
 35768   017D58  0FFD               	addlw	-3
 35769   017D5A  6ED9               	movwf	fsr2l,c
 35770   017D5C  50E2               	movf	fsr1h,w,c
 35771   017D5E  6EDA               	movwf	fsr2h,c
 35772   017D60  0EFF               	movlw	255
 35773   017D62  22DA               	addwfc	fsr2h,f,c
 35774   017D64  006F FF78  F0A7    	movff	postinc2,_UART1_TxInterruptHandler
 35775   017D6A  006F FF78  F0A8    	movff	postinc2,_UART1_TxInterruptHandler+1
 35776   017D70  006F FF74  F0A9    	movff	postdec2,_UART1_TxInterruptHandler+2
 35777                           
 35778                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 35779   017D76  52E5               	movf	postdec1,f,c
 35780   017D78  52E5               	movf	postdec1,f,c
 35781   017D7A  52E5               	movf	postdec1,f,c
 35782   017D7C  0012               	return		;funcret
 35783   017D7E                     __end_of_UART1_SetTxInterruptHandler:
 35784                           	callstack 0
 35785                           
 35786 ;; *************** function _UART1_SetRxInterruptHandler *****************
 35787 ;; Defined at:
 35788 ;;		line 242 in file "mcc_generated_files/uart1.c"
 35789 ;; Parameters:    Size  Location     Type
 35790 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 35791 ;;		 -> UART1_Receive_ISR(1), 
 35792 ;; Auto vars:     Size  Location     Type
 35793 ;;		None
 35794 ;; Return value:  Size  Location     Type
 35795 ;;                  1  [STACK] void 
 35796 ;; Registers used:
 35797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 35798 ;; Tracked objects:
 35799 ;;		On entry : 3F/39
 35800 ;;		On exit  : 0/0
 35801 ;;		Unchanged: 0/0
 35802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35807 ;;Total ram usage:        0 bytes
 35808 ;; Hardware stack levels used: 1
 35809 ;; Hardware stack levels required when called: 3
 35810 ;; This function calls:
 35811 ;;		Nothing
 35812 ;; This function is called by:
 35813 ;;		_UART1_Initialize
 35814 ;; This function uses a reentrant model
 35815 ;;
 35816                           
 35817                           	psect	text58
 35818   017D7E                     __ptext58:
 35819                           	callstack 0
 35820   017D7E                     _UART1_SetRxInterruptHandler:
 35821                           	callstack 25
 35822                           
 35823                           ;mcc_generated_files/uart1.c: 242: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 243: {;mcc_generated_files/uart1.c: 244:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 35824                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 35825                           
 35826                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35827                           ;incstack = 0
 35828   017D7E  50E1               	movf	fsr1l,w,c
 35829   017D80  0FFD               	addlw	-3
 35830   017D82  6ED9               	movwf	fsr2l,c
 35831   017D84  50E2               	movf	fsr1h,w,c
 35832   017D86  6EDA               	movwf	fsr2h,c
 35833   017D88  0EFF               	movlw	255
 35834   017D8A  22DA               	addwfc	fsr2h,f,c
 35835   017D8C  006F FF78  F0AA    	movff	postinc2,_UART1_RxInterruptHandler
 35836   017D92  006F FF78  F0AB    	movff	postinc2,_UART1_RxInterruptHandler+1
 35837   017D98  006F FF74  F0AC    	movff	postdec2,_UART1_RxInterruptHandler+2
 35838                           
 35839                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 35840   017D9E  52E5               	movf	postdec1,f,c
 35841   017DA0  52E5               	movf	postdec1,f,c
 35842   017DA2  52E5               	movf	postdec1,f,c
 35843   017DA4  0012               	return		;funcret
 35844   017DA6                     __end_of_UART1_SetRxInterruptHandler:
 35845                           	callstack 0
 35846                           
 35847 ;; *************** function _TMR6_Initialize *****************
 35848 ;; Defined at:
 35849 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 35850 ;; Parameters:    Size  Location     Type
 35851 ;;		None
 35852 ;; Auto vars:     Size  Location     Type
 35853 ;;		None
 35854 ;; Return value:  Size  Location     Type
 35855 ;;                  1  [STACK] void 
 35856 ;; Registers used:
 35857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 35858 ;; Tracked objects:
 35859 ;;		On entry : 3F/39
 35860 ;;		On exit  : 0/0
 35861 ;;		Unchanged: 0/0
 35862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35867 ;;Total ram usage:        0 bytes
 35868 ;; Hardware stack levels used: 1
 35869 ;; Hardware stack levels required when called: 4
 35870 ;; This function calls:
 35871 ;;		_TMR6_SetInterruptHandler
 35872 ;; This function is called by:
 35873 ;;		_SYSTEM_Initialize
 35874 ;; This function uses a reentrant model
 35875 ;;
 35876                           
 35877                           	psect	text59
 35878   017DA6                     __ptext59:
 35879                           	callstack 0
 35880   017DA6                     _TMR6_Initialize:
 35881                           	callstack 25
 35882                           
 35883                           ;mcc_generated_files/tmr6.c: 75:  T6CLKCON = 0x01;
 35884                           
 35885                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35886                           ;incstack = 0
 35887   017DA6  0E01               	movlw	1
 35888   017DA8  6E96               	movwf	150,c	;volatile
 35889                           
 35890                           ;mcc_generated_files/tmr6.c: 78:  T6HLT = 0x00;
 35891   017DAA  6A95               	clrf	149,c	;volatile
 35892                           
 35893                           ;mcc_generated_files/tmr6.c: 81:  T6RST = 0x00;
 35894   017DAC  6A97               	clrf	151,c	;volatile
 35895                           
 35896                           ;mcc_generated_files/tmr6.c: 84:  T6PR = 0x03;
 35897   017DAE  0E03               	movlw	3
 35898   017DB0  6E93               	movwf	147,c	;volatile
 35899                           
 35900                           ;mcc_generated_files/tmr6.c: 87:  T6TMR = 0x00;
 35901   017DB2  6A92               	clrf	146,c	;volatile
 35902                           
 35903                           ;mcc_generated_files/tmr6.c: 90:  PIR9bits.TMR6IF = 0;
 35904   017DB4  0139               	movlb	57	; () banked
 35905   017DB6  91A9               	bcf	169,0,b	;volatile
 35906                           
 35907                           ; BSR set to: 57
 35908                           ;mcc_generated_files/tmr6.c: 93:  PIE9bits.TMR6IE = 1;
 35909   017DB8  8199               	bsf	153,0,b	;volatile
 35910                           
 35911                           ; BSR set to: 57
 35912                           ;mcc_generated_files/tmr6.c: 96:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
 35913   017DBA  0EB6               	movlw	low _TMR6_DefaultInterruptHandler
 35914   017DBC  6EE6               	movwf	postinc1,c
 35915   017DBE  0E76               	movlw	high _TMR6_DefaultInterruptHandler
 35916   017DC0  6EE6               	movwf	postinc1,c
 35917   017DC2  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 35918   017DC4  6EE6               	movwf	postinc1,c
 35919   017DC6  ECE7  F0BE         	call	_TMR6_SetInterruptHandler	;wreg free
 35920                           
 35921                           ;mcc_generated_files/tmr6.c: 99:  T6CON = 0xFF;
 35922   017DCA  6894               	setf	148,c	;volatile
 35923                           
 35924                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35925   017DCC  0012               	return		;funcret
 35926   017DCE                     __end_of_TMR6_Initialize:
 35927                           	callstack 0
 35928                           
 35929 ;; *************** function _TMR6_SetInterruptHandler *****************
 35930 ;; Defined at:
 35931 ;;		line 191 in file "mcc_generated_files/tmr6.c"
 35932 ;; Parameters:    Size  Location     Type
 35933 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 35934 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 35935 ;; Auto vars:     Size  Location     Type
 35936 ;;		None
 35937 ;; Return value:  Size  Location     Type
 35938 ;;                  1  [STACK] void 
 35939 ;; Registers used:
 35940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 35941 ;; Tracked objects:
 35942 ;;		On entry : 3F/39
 35943 ;;		On exit  : 0/0
 35944 ;;		Unchanged: 0/0
 35945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35950 ;;Total ram usage:        0 bytes
 35951 ;; Hardware stack levels used: 1
 35952 ;; Hardware stack levels required when called: 3
 35953 ;; This function calls:
 35954 ;;		Nothing
 35955 ;; This function is called by:
 35956 ;;		_TMR6_Initialize
 35957 ;; This function uses a reentrant model
 35958 ;;
 35959                           
 35960                           	psect	text60
 35961   017DCE                     __ptext60:
 35962                           	callstack 0
 35963   017DCE                     _TMR6_SetInterruptHandler:
 35964                           	callstack 25
 35965                           
 35966                           ;mcc_generated_files/tmr6.c: 191: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 192: {;mcc_generated_files/tmr6.c: 193:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
 35967                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 35968                           
 35969                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35970                           ;incstack = 0
 35971   017DCE  50E1               	movf	fsr1l,w,c
 35972   017DD0  0FFD               	addlw	-3
 35973   017DD2  6ED9               	movwf	fsr2l,c
 35974   017DD4  50E2               	movf	fsr1h,w,c
 35975   017DD6  6EDA               	movwf	fsr2h,c
 35976   017DD8  0EFF               	movlw	255
 35977   017DDA  22DA               	addwfc	fsr2h,f,c
 35978   017DDC  006F FF78  F0A1    	movff	postinc2,_TMR6_InterruptHandler
 35979   017DE2  006F FF78  F0A2    	movff	postinc2,_TMR6_InterruptHandler+1
 35980   017DE8  006F FF74  F0A3    	movff	postdec2,_TMR6_InterruptHandler+2
 35981                           
 35982                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 35983   017DEE  52E5               	movf	postdec1,f,c
 35984   017DF0  52E5               	movf	postdec1,f,c
 35985   017DF2  52E5               	movf	postdec1,f,c
 35986   017DF4  0012               	return		;funcret
 35987   017DF6                     __end_of_TMR6_SetInterruptHandler:
 35988                           	callstack 0
 35989                           
 35990 ;; *************** function _TMR5_Initialize *****************
 35991 ;; Defined at:
 35992 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 35993 ;; Parameters:    Size  Location     Type
 35994 ;;		None
 35995 ;; Auto vars:     Size  Location     Type
 35996 ;;		None
 35997 ;; Return value:  Size  Location     Type
 35998 ;;                  1  [STACK] void 
 35999 ;; Registers used:
 36000 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 36001 ;; Tracked objects:
 36002 ;;		On entry : 3F/3C
 36003 ;;		On exit  : 0/0
 36004 ;;		Unchanged: 0/0
 36005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36010 ;;Total ram usage:        0 bytes
 36011 ;; Hardware stack levels used: 1
 36012 ;; Hardware stack levels required when called: 4
 36013 ;; This function calls:
 36014 ;;		_TMR5_SetInterruptHandler
 36015 ;; This function is called by:
 36016 ;;		_SYSTEM_Initialize
 36017 ;; This function uses a reentrant model
 36018 ;;
 36019                           
 36020                           	psect	text61
 36021   0176FC                     __ptext61:
 36022                           	callstack 0
 36023   0176FC                     _TMR5_Initialize:
 36024                           	callstack 25
 36025                           
 36026                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 36027                           
 36028                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36029                           ;incstack = 0
 36030   0176FC  6A9B               	clrf	155,c	;volatile
 36031                           
 36032                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 36033   0176FE  6A9C               	clrf	156,c	;volatile
 36034                           
 36035                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 36036   017700  0E01               	movlw	1
 36037   017702  6E9D               	movwf	157,c	;volatile
 36038                           
 36039                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 36040   017704  0E63               	movlw	99
 36041   017706  6E99               	movwf	153,c	;volatile
 36042                           
 36043                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 36044   017708  0EC0               	movlw	192
 36045   01770A  6E98               	movwf	152,c	;volatile
 36046                           
 36047                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 36048   01770C  5098               	movf	152,w,c	;volatile
 36049   01770E  006F FE64  F023    	movff	16281,btemp	;volatile
 36050   017714  6A24               	clrf	(btemp+1)^0,c
 36051   017716  C023  F024         	movff	btemp,btemp+1
 36052   01771A  6A23               	clrf	btemp^0,c
 36053   01771C  1023               	iorwf	btemp^0,w,c
 36054   01771E  6E07               	movwf	_timer5ReloadVal^0,c	;volatile
 36055   017720  5024               	movf	(btemp+1)^0,w,c
 36056   017722  6E08               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 36057                           
 36058                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 36059   017724  0139               	movlb	57	; () banked
 36060   017726  9DA8               	bcf	168,6,b	;volatile
 36061                           
 36062                           ; BSR set to: 57
 36063                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 36064   017728  8D98               	bsf	152,6,b	;volatile
 36065                           
 36066                           ; BSR set to: 57
 36067                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 36068   01772A  0E74               	movlw	low _TMR5_DefaultInterruptHandler
 36069   01772C  6EE6               	movwf	postinc1,c
 36070   01772E  0E81               	movlw	high _TMR5_DefaultInterruptHandler
 36071   017730  6EE6               	movwf	postinc1,c
 36072   017732  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 36073   017734  6EE6               	movwf	postinc1,c
 36074   017736  ECFB  F0BE         	call	_TMR5_SetInterruptHandler	;wreg free
 36075                           
 36076                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 36077   01773A  0E31               	movlw	49
 36078   01773C  6E9A               	movwf	154,c	;volatile
 36079                           
 36080                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 36081   01773E  0012               	return		;funcret
 36082   017740                     __end_of_TMR5_Initialize:
 36083                           	callstack 0
 36084                           
 36085 ;; *************** function _TMR5_SetInterruptHandler *****************
 36086 ;; Defined at:
 36087 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 36088 ;; Parameters:    Size  Location     Type
 36089 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 36090 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 36091 ;; Auto vars:     Size  Location     Type
 36092 ;;		None
 36093 ;; Return value:  Size  Location     Type
 36094 ;;                  1  [STACK] void 
 36095 ;; Registers used:
 36096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 36097 ;; Tracked objects:
 36098 ;;		On entry : 3F/39
 36099 ;;		On exit  : 0/0
 36100 ;;		Unchanged: 0/0
 36101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36106 ;;Total ram usage:        0 bytes
 36107 ;; Hardware stack levels used: 1
 36108 ;; Hardware stack levels required when called: 3
 36109 ;; This function calls:
 36110 ;;		Nothing
 36111 ;; This function is called by:
 36112 ;;		_TMR5_Initialize
 36113 ;; This function uses a reentrant model
 36114 ;;
 36115                           
 36116                           	psect	text62
 36117   017DF6                     __ptext62:
 36118                           	callstack 0
 36119   017DF6                     _TMR5_SetInterruptHandler:
 36120                           	callstack 25
 36121                           
 36122                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 36123                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 36124                           
 36125                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36126                           ;incstack = 0
 36127   017DF6  50E1               	movf	fsr1l,w,c
 36128   017DF8  0FFD               	addlw	-3
 36129   017DFA  6ED9               	movwf	fsr2l,c
 36130   017DFC  50E2               	movf	fsr1h,w,c
 36131   017DFE  6EDA               	movwf	fsr2h,c
 36132   017E00  0EFF               	movlw	255
 36133   017E02  22DA               	addwfc	fsr2h,f,c
 36134   017E04  006F FF78  F09E    	movff	postinc2,_TMR5_InterruptHandler
 36135   017E0A  006F FF78  F09F    	movff	postinc2,_TMR5_InterruptHandler+1
 36136   017E10  006F FF74  F0A0    	movff	postdec2,_TMR5_InterruptHandler+2
 36137                           
 36138                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 36139   017E16  52E5               	movf	postdec1,f,c
 36140   017E18  52E5               	movf	postdec1,f,c
 36141   017E1A  52E5               	movf	postdec1,f,c
 36142   017E1C  0012               	return		;funcret
 36143   017E1E                     __end_of_TMR5_SetInterruptHandler:
 36144                           	callstack 0
 36145                           
 36146 ;; *************** function _TMR2_Initialize *****************
 36147 ;; Defined at:
 36148 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 36149 ;; Parameters:    Size  Location     Type
 36150 ;;		None
 36151 ;; Auto vars:     Size  Location     Type
 36152 ;;		None
 36153 ;; Return value:  Size  Location     Type
 36154 ;;                  1  [STACK] void 
 36155 ;; Registers used:
 36156 ;;		wreg, status,2
 36157 ;; Tracked objects:
 36158 ;;		On entry : 3F/3F
 36159 ;;		On exit  : 3F/39
 36160 ;;		Unchanged: 0/0
 36161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36166 ;;Total ram usage:        0 bytes
 36167 ;; Hardware stack levels used: 1
 36168 ;; Hardware stack levels required when called: 3
 36169 ;; This function calls:
 36170 ;;		Nothing
 36171 ;; This function is called by:
 36172 ;;		_SYSTEM_Initialize
 36173 ;; This function uses a reentrant model
 36174 ;;
 36175                           
 36176                           	psect	text63
 36177   018140                     __ptext63:
 36178                           	callstack 0
 36179   018140                     _TMR2_Initialize:
 36180                           	callstack 26
 36181                           
 36182                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 36183                           
 36184                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36185                           ;incstack = 0
 36186   018140  0E01               	movlw	1
 36187   018142  6EAE               	movwf	174,c	;volatile
 36188                           
 36189                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 36190   018144  6AAD               	clrf	173,c	;volatile
 36191                           
 36192                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x11;
 36193   018146  0E11               	movlw	17
 36194   018148  6EAF               	movwf	175,c	;volatile
 36195                           
 36196                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 36197   01814A  0E63               	movlw	99
 36198   01814C  6EAB               	movwf	171,c	;volatile
 36199                           
 36200                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 36201   01814E  6AAA               	clrf	170,c	;volatile
 36202                           
 36203                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 36204   018150  0139               	movlb	57	; () banked
 36205   018152  95A4               	bcf	164,2,b	;volatile
 36206                           
 36207                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 36208   018154  0EC0               	movlw	192
 36209   018156  6EAC               	movwf	172,c	;volatile
 36210                           
 36211                           ; BSR set to: 57
 36212                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 36213   018158  0012               	return		;funcret
 36214   01815A                     __end_of_TMR2_Initialize:
 36215                           	callstack 0
 36216                           
 36217 ;; *************** function _SPI1_Initialize *****************
 36218 ;; Defined at:
 36219 ;;		line 64 in file "mcc_generated_files/spi1.c"
 36220 ;; Parameters:    Size  Location     Type
 36221 ;;		None
 36222 ;; Auto vars:     Size  Location     Type
 36223 ;;		None
 36224 ;; Return value:  Size  Location     Type
 36225 ;;                  1  [STACK] void 
 36226 ;; Registers used:
 36227 ;;		wreg, status,2
 36228 ;; Tracked objects:
 36229 ;;		On entry : 3F/39
 36230 ;;		On exit  : 3F/3D
 36231 ;;		Unchanged: 0/0
 36232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36237 ;;Total ram usage:        0 bytes
 36238 ;; Hardware stack levels used: 1
 36239 ;; Hardware stack levels required when called: 3
 36240 ;; This function calls:
 36241 ;;		Nothing
 36242 ;; This function is called by:
 36243 ;;		_SYSTEM_Initialize
 36244 ;; This function uses a reentrant model
 36245 ;;
 36246                           
 36247                           	psect	text64
 36248   0181A6                     __ptext64:
 36249                           	callstack 0
 36250   0181A6                     _SPI1_Initialize:
 36251                           	callstack 26
 36252                           
 36253                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 36254                           
 36255                           ; BSR set to: 57
 36256                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36257                           ;incstack = 0
 36258   0181A6  0E40               	movlw	64
 36259   0181A8  013D               	movlb	61	; () banked
 36260   0181AA  6F15               	movwf	21,b	;volatile
 36261                           
 36262                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 36263   0181AC  0E03               	movlw	3
 36264   0181AE  6F16               	movwf	22,b	;volatile
 36265                           
 36266                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 36267   0181B0  0E4F               	movlw	79
 36268   0181B2  6F19               	movwf	25,b	;volatile
 36269                           
 36270                           ; BSR set to: 61
 36271                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 36272   0181B4  6B1C               	clrf	28,b	;volatile
 36273                           
 36274                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 36275   0181B6  0E83               	movlw	131
 36276   0181B8  6F14               	movwf	20,b	;volatile
 36277                           
 36278                           ; BSR set to: 61
 36279                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 36280   0181BA  0012               	return		;funcret
 36281   0181BC                     __end_of_SPI1_Initialize:
 36282                           	callstack 0
 36283                           
 36284 ;; *************** function _PWM8_Initialize *****************
 36285 ;; Defined at:
 36286 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 36287 ;; Parameters:    Size  Location     Type
 36288 ;;		None
 36289 ;; Auto vars:     Size  Location     Type
 36290 ;;		None
 36291 ;; Return value:  Size  Location     Type
 36292 ;;                  1  [STACK] void 
 36293 ;; Registers used:
 36294 ;;		wreg, status,2
 36295 ;; Tracked objects:
 36296 ;;		On entry : 3F/3F
 36297 ;;		On exit  : 3F/3F
 36298 ;;		Unchanged: 0/0
 36299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36304 ;;Total ram usage:        0 bytes
 36305 ;; Hardware stack levels used: 1
 36306 ;; Hardware stack levels required when called: 3
 36307 ;; This function calls:
 36308 ;;		Nothing
 36309 ;; This function is called by:
 36310 ;;		_SYSTEM_Initialize
 36311 ;; This function uses a reentrant model
 36312 ;;
 36313                           
 36314                           	psect	text65
 36315   0181BC                     __ptext65:
 36316                           	callstack 0
 36317   0181BC                     _PWM8_Initialize:
 36318                           	callstack 26
 36319                           
 36320                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 36321                           
 36322                           ; BSR set to: 61
 36323                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36324                           ;incstack = 0
 36325   0181BC  0E80               	movlw	128
 36326   0181BE  6E62               	movwf	98,c	;volatile
 36327                           
 36328                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 36329   0181C0  6A61               	clrf	97,c	;volatile
 36330                           
 36331                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 36332   0181C2  0E40               	movlw	64
 36333   0181C4  6E60               	movwf	96,c	;volatile
 36334                           
 36335                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 36336   0181C6  013F               	movlb	63	; () banked
 36337   0181C8  515F               	movf	95,w,b	;volatile
 36338   0181CA  0B3F               	andlw	-193
 36339   0181CC  0940               	iorlw	64
 36340   0181CE  6F5F               	movwf	95,b	;volatile
 36341                           
 36342                           ; BSR set to: 63
 36343                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 36344   0181D0  0012               	return		;funcret
 36345   0181D2                     __end_of_PWM8_Initialize:
 36346                           	callstack 0
 36347                           
 36348 ;; *************** function _PMD_Initialize *****************
 36349 ;; Defined at:
 36350 ;;		line 91 in file "mcc_generated_files/mcc.c"
 36351 ;; Parameters:    Size  Location     Type
 36352 ;;		None
 36353 ;; Auto vars:     Size  Location     Type
 36354 ;;		None
 36355 ;; Return value:  Size  Location     Type
 36356 ;;                  1  [STACK] void 
 36357 ;; Registers used:
 36358 ;;		None
 36359 ;; Tracked objects:
 36360 ;;		On entry : 3F/39
 36361 ;;		On exit  : 3F/39
 36362 ;;		Unchanged: 0/0
 36363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36368 ;;Total ram usage:        0 bytes
 36369 ;; Hardware stack levels used: 1
 36370 ;; Hardware stack levels required when called: 3
 36371 ;; This function calls:
 36372 ;;		Nothing
 36373 ;; This function is called by:
 36374 ;;		_SYSTEM_Initialize
 36375 ;; This function uses a reentrant model
 36376 ;;
 36377                           
 36378                           	psect	text66
 36379   0181E8                     __ptext66:
 36380                           	callstack 0
 36381   0181E8                     _PMD_Initialize:
 36382                           	callstack 26
 36383                           
 36384                           ;mcc_generated_files/mcc.c: 94:     PMD0 = 0x00;
 36385                           
 36386                           ; BSR set to: 63
 36387                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36388                           ;incstack = 0
 36389   0181E8  0139               	movlb	57	; () banked
 36390   0181EA  6BC0               	clrf	192,b	;volatile
 36391                           
 36392                           ;mcc_generated_files/mcc.c: 96:     PMD1 = 0x00;
 36393   0181EC  6BC1               	clrf	193,b	;volatile
 36394                           
 36395                           ;mcc_generated_files/mcc.c: 98:     PMD2 = 0x00;
 36396   0181EE  6BC2               	clrf	194,b	;volatile
 36397                           
 36398                           ;mcc_generated_files/mcc.c: 100:     PMD3 = 0x00;
 36399   0181F0  6BC3               	clrf	195,b	;volatile
 36400                           
 36401                           ;mcc_generated_files/mcc.c: 102:     PMD4 = 0x00;
 36402   0181F2  6BC4               	clrf	196,b	;volatile
 36403                           
 36404                           ;mcc_generated_files/mcc.c: 104:     PMD5 = 0x00;
 36405   0181F4  6BC5               	clrf	197,b	;volatile
 36406                           
 36407                           ;mcc_generated_files/mcc.c: 106:     PMD6 = 0x00;
 36408   0181F6  6BC6               	clrf	198,b	;volatile
 36409                           
 36410                           ;mcc_generated_files/mcc.c: 108:     PMD7 = 0x00;
 36411   0181F8  6BC7               	clrf	199,b	;volatile
 36412                           
 36413                           ; BSR set to: 57
 36414                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 36415   0181FA  0012               	return		;funcret
 36416   0181FC                     __end_of_PMD_Initialize:
 36417                           	callstack 0
 36418                           
 36419 ;; *************** function _PIN_MANAGER_Initialize *****************
 36420 ;; Defined at:
 36421 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 36422 ;; Parameters:    Size  Location     Type
 36423 ;;		None
 36424 ;; Auto vars:     Size  Location     Type
 36425 ;;		None
 36426 ;; Return value:  Size  Location     Type
 36427 ;;                  1  [STACK] void 
 36428 ;; Registers used:
 36429 ;;		wreg, status,2
 36430 ;; Tracked objects:
 36431 ;;		On entry : 3F/39
 36432 ;;		On exit  : 3F/3A
 36433 ;;		Unchanged: 0/0
 36434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36439 ;;Total ram usage:        0 bytes
 36440 ;; Hardware stack levels used: 1
 36441 ;; Hardware stack levels required when called: 3
 36442 ;; This function calls:
 36443 ;;		Nothing
 36444 ;; This function is called by:
 36445 ;;		_SYSTEM_Initialize
 36446 ;; This function uses a reentrant model
 36447 ;;
 36448                           
 36449                           	psect	text67
 36450   016C08                     __ptext67:
 36451                           	callstack 0
 36452   016C08                     _PIN_MANAGER_Initialize:
 36453                           	callstack 26
 36454                           
 36455                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 36456                           
 36457                           ; BSR set to: 57
 36458                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36459                           ;incstack = 0
 36460   016C08  0E07               	movlw	7
 36461   016C0A  6EBE               	movwf	190,c	;volatile
 36462                           
 36463                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 36464   016C0C  6ABD               	clrf	189,c	;volatile
 36465                           
 36466                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 36467   016C0E  6ABA               	clrf	186,c	;volatile
 36468                           
 36469                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 36470   016C10  6ABF               	clrf	191,c	;volatile
 36471                           
 36472                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 36473   016C12  6ABB               	clrf	187,c	;volatile
 36474                           
 36475                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x06;
 36476   016C14  0E06               	movlw	6
 36477   016C16  6EBC               	movwf	188,c	;volatile
 36478                           
 36479                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 36480   016C18  6AC6               	clrf	198,c	;volatile
 36481                           
 36482                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 36483   016C1A  0E0F               	movlw	15
 36484   016C1C  6EC7               	movwf	199,c	;volatile
 36485                           
 36486                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0x8F;
 36487   016C1E  0E8F               	movlw	143
 36488   016C20  6EC2               	movwf	194,c	;volatile
 36489                           
 36490                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0x8F;
 36491   016C22  0E8F               	movlw	143
 36492   016C24  6EC3               	movwf	195,c	;volatile
 36493                           
 36494                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x91;
 36495   016C26  0E91               	movlw	145
 36496   016C28  6EC4               	movwf	196,c	;volatile
 36497                           
 36498                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 36499   016C2A  0E0C               	movlw	12
 36500   016C2C  6EC5               	movwf	197,c	;volatile
 36501                           
 36502                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 36503   016C2E  013A               	movlb	58	; () banked
 36504   016C30  6B70               	clrf	112,b	;volatile
 36505                           
 36506                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x01;
 36507   016C32  0E01               	movlw	1
 36508   016C34  6F60               	movwf	96,b	;volatile
 36509                           
 36510                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x08;
 36511   016C36  0E08               	movlw	8
 36512   016C38  6F50               	movwf	80,b	;volatile
 36513                           
 36514                           ; BSR set to: 58
 36515                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 36516   016C3A  6B80               	clrf	128,b	;volatile
 36517                           
 36518                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x0F;
 36519   016C3C  0E0F               	movlw	15
 36520   016C3E  6F90               	movwf	144,b	;volatile
 36521                           
 36522                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0x8F;
 36523   016C40  0E8F               	movlw	143
 36524   016C42  6F40               	movwf	64,b	;volatile
 36525                           
 36526                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0xFC;
 36527   016C44  0EFC               	movlw	252
 36528   016C46  6F71               	movwf	113,b	;volatile
 36529                           
 36530                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0xF0;
 36531   016C48  0EF0               	movlw	240
 36532   016C4A  6F91               	movwf	145,b	;volatile
 36533                           
 36534                           ; BSR set to: 58
 36535                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 36536   016C4C  6B81               	clrf	129,b	;volatile
 36537                           
 36538                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 36539   016C4E  0E87               	movlw	135
 36540   016C50  6F51               	movwf	81,b	;volatile
 36541                           
 36542                           ; BSR set to: 58
 36543                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 36544   016C52  6B41               	clrf	65,b	;volatile
 36545                           
 36546                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x90;
 36547   016C54  0E90               	movlw	144
 36548   016C56  6F61               	movwf	97,b	;volatile
 36549                           
 36550                           ; BSR set to: 58
 36551                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 36552   016C58  6B82               	clrf	130,b	;volatile
 36553                           
 36554                           ; BSR set to: 58
 36555                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 36556   016C5A  6B92               	clrf	146,b	;volatile
 36557                           
 36558                           ; BSR set to: 58
 36559                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 36560   016C5C  6B42               	clrf	66,b	;volatile
 36561                           
 36562                           ; BSR set to: 58
 36563                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 36564   016C5E  6B52               	clrf	82,b	;volatile
 36565                           
 36566                           ; BSR set to: 58
 36567                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 36568   016C60  6B62               	clrf	98,b	;volatile
 36569                           
 36570                           ; BSR set to: 58
 36571                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 36572   016C62  6B72               	clrf	114,b	;volatile
 36573                           
 36574                           ; BSR set to: 58
 36575                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 36576   016C64  6943               	setf	67,b	;volatile
 36577                           
 36578                           ; BSR set to: 58
 36579                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 36580   016C66  6953               	setf	83,b	;volatile
 36581                           
 36582                           ; BSR set to: 58
 36583                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 36584   016C68  6963               	setf	99,b	;volatile
 36585                           
 36586                           ; BSR set to: 58
 36587                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 36588   016C6A  6973               	setf	115,b	;volatile
 36589                           
 36590                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 36591   016C6C  0E07               	movlw	7
 36592   016C6E  6F83               	movwf	131,b	;volatile
 36593                           
 36594                           ; BSR set to: 58
 36595                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 36596   016C70  6993               	setf	147,b	;volatile
 36597                           
 36598                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 36599   016C72  0E0F               	movlw	15
 36600   016C74  6FE8               	movwf	232,b	;volatile
 36601                           
 36602                           ;mcc_generated_files/pin_manager.c: 127:     RB6PPS = 0x16;
 36603   016C76  0E16               	movlw	22
 36604   016C78  6F0E               	movwf	14,b	;volatile
 36605                           
 36606                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x1E;
 36607   016C7A  0E1E               	movlw	30
 36608   016C7C  6F13               	movwf	19,b	;volatile
 36609                           
 36610                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x08;
 36611   016C7E  0E08               	movlw	8
 36612   016C80  6FC0               	movwf	192,b	;volatile
 36613                           
 36614                           ;mcc_generated_files/pin_manager.c: 130:     INT2PPS = 0x0A;
 36615   016C82  0E0A               	movlw	10
 36616   016C84  6FC2               	movwf	194,b	;volatile
 36617                           
 36618                           ;mcc_generated_files/pin_manager.c: 131:     INT1PPS = 0x09;
 36619   016C86  0E09               	movlw	9
 36620   016C88  6FC1               	movwf	193,b	;volatile
 36621                           
 36622                           ;mcc_generated_files/pin_manager.c: 132:     U1RXPPS = 0x17;
 36623   016C8A  0E17               	movlw	23
 36624   016C8C  6FE5               	movwf	229,b	;volatile
 36625                           
 36626                           ;mcc_generated_files/pin_manager.c: 133:     SPI1SCKPPS = 0x13;
 36627   016C8E  0E13               	movlw	19
 36628   016C90  6FDE               	movwf	222,b	;volatile
 36629                           
 36630                           ;mcc_generated_files/pin_manager.c: 134:     RA4PPS = 0x01;
 36631   016C92  0E01               	movlw	1
 36632   016C94  6F04               	movwf	4,b	;volatile
 36633                           
 36634                           ;mcc_generated_files/pin_manager.c: 135:     RA5PPS = 0x26;
 36635   016C96  0E26               	movlw	38
 36636   016C98  6F05               	movwf	5,b	;volatile
 36637                           
 36638                           ;mcc_generated_files/pin_manager.c: 136:     RA6PPS = 0x28;
 36639   016C9A  0E28               	movlw	40
 36640   016C9C  6F06               	movwf	6,b	;volatile
 36641                           
 36642                           ;mcc_generated_files/pin_manager.c: 137:     RD1PPS = 0x10;
 36643   016C9E  0E10               	movlw	16
 36644   016CA0  6F19               	movwf	25,b	;volatile
 36645                           
 36646                           ;mcc_generated_files/pin_manager.c: 138:     RC5PPS = 0x1F;
 36647   016CA2  0E1F               	movlw	31
 36648   016CA4  6F15               	movwf	21,b	;volatile
 36649                           
 36650                           ;mcc_generated_files/pin_manager.c: 139:     RC6PPS = 0x13;
 36651   016CA6  0E13               	movlw	19
 36652   016CA8  6F16               	movwf	22,b	;volatile
 36653                           
 36654                           ;mcc_generated_files/pin_manager.c: 140:     SPI1SDIPPS = 0x14;
 36655   016CAA  0E14               	movlw	20
 36656   016CAC  6FDF               	movwf	223,b	;volatile
 36657                           
 36658                           ; BSR set to: 58
 36659                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 36660   016CAE  0012               	return		;funcret
 36661   016CB0                     __end_of_PIN_MANAGER_Initialize:
 36662                           	callstack 0
 36663                           
 36664 ;; *************** function _OSCILLATOR_Initialize *****************
 36665 ;; Defined at:
 36666 ;;		line 73 in file "mcc_generated_files/mcc.c"
 36667 ;; Parameters:    Size  Location     Type
 36668 ;;		None
 36669 ;; Auto vars:     Size  Location     Type
 36670 ;;		None
 36671 ;; Return value:  Size  Location     Type
 36672 ;;                  1  [STACK] void 
 36673 ;; Registers used:
 36674 ;;		wreg, status,2
 36675 ;; Tracked objects:
 36676 ;;		On entry : 3F/3A
 36677 ;;		On exit  : 3F/39
 36678 ;;		Unchanged: 0/0
 36679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36684 ;;Total ram usage:        0 bytes
 36685 ;; Hardware stack levels used: 1
 36686 ;; Hardware stack levels required when called: 3
 36687 ;; This function calls:
 36688 ;;		Nothing
 36689 ;; This function is called by:
 36690 ;;		_SYSTEM_Initialize
 36691 ;; This function uses a reentrant model
 36692 ;;
 36693                           
 36694                           	psect	text68
 36695   0181D2                     __ptext68:
 36696                           	callstack 0
 36697   0181D2                     _OSCILLATOR_Initialize:
 36698                           	callstack 26
 36699                           
 36700                           ;mcc_generated_files/mcc.c: 76:     OSCCON1 = 0x20;
 36701                           
 36702                           ; BSR set to: 58
 36703                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36704                           ;incstack = 0
 36705   0181D2  0E20               	movlw	32
 36706   0181D4  0139               	movlb	57	; () banked
 36707   0181D6  6FD9               	movwf	217,b	;volatile
 36708                           
 36709                           ; BSR set to: 57
 36710                           ;mcc_generated_files/mcc.c: 78:     OSCCON3 = 0x00;
 36711   0181D8  6BDB               	clrf	219,b	;volatile
 36712                           
 36713                           ; BSR set to: 57
 36714                           ;mcc_generated_files/mcc.c: 80:     OSCEN = 0x00;
 36715   0181DA  6BDD               	clrf	221,b	;volatile
 36716                           
 36717                           ;mcc_generated_files/mcc.c: 82:     OSCFRQ = 0x02;
 36718   0181DC  0E02               	movlw	2
 36719   0181DE  6FDF               	movwf	223,b	;volatile
 36720                           
 36721                           ; BSR set to: 57
 36722                           ;mcc_generated_files/mcc.c: 84:     OSCTUNE = 0x00;
 36723   0181E0  6BDE               	clrf	222,b	;volatile
 36724   0181E2                     l200:
 36725                           
 36726                           ; BSR set to: 57
 36727                           ;mcc_generated_files/mcc.c: 86:     while(PLLR == 0)
 36728   0181E2  B1DC               	btfsc	220,0,b	;volatile
 36729   0181E4  0012               	return	
 36730   0181E6  D7FD               	goto	l200
 36731   0181E8                     __end_of_OSCILLATOR_Initialize:
 36732                           	callstack 0
 36733                           
 36734 ;; *************** function _NCO1_Initialize *****************
 36735 ;; Defined at:
 36736 ;;		line 58 in file "mcc_generated_files/nco1.c"
 36737 ;; Parameters:    Size  Location     Type
 36738 ;;		None
 36739 ;; Auto vars:     Size  Location     Type
 36740 ;;		None
 36741 ;; Return value:  Size  Location     Type
 36742 ;;                  1  [STACK] void 
 36743 ;; Registers used:
 36744 ;;		wreg, status,2
 36745 ;; Tracked objects:
 36746 ;;		On entry : 0/39
 36747 ;;		On exit  : 3F/3F
 36748 ;;		Unchanged: 0/0
 36749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36754 ;;Total ram usage:        0 bytes
 36755 ;; Hardware stack levels used: 1
 36756 ;; Hardware stack levels required when called: 3
 36757 ;; This function calls:
 36758 ;;		Nothing
 36759 ;; This function is called by:
 36760 ;;		_SYSTEM_Initialize
 36761 ;; This function uses a reentrant model
 36762 ;;
 36763                           
 36764                           	psect	text69
 36765   0180EC                     __ptext69:
 36766                           	callstack 0
 36767   0180EC                     _NCO1_Initialize:
 36768                           	callstack 26
 36769                           
 36770                           ;mcc_generated_files/nco1.c: 62:     NCO1CON = 0x00;
 36771                           
 36772                           ; BSR set to: 57
 36773                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36774                           ;incstack = 0
 36775   0180EC  013F               	movlb	63	; () banked
 36776   0180EE  6B3E               	clrf	62,b	;volatile
 36777                           
 36778                           ;mcc_generated_files/nco1.c: 64:     NCO1CLK = 0x00;
 36779   0180F0  6B3F               	clrf	63,b	;volatile
 36780                           
 36781                           ;mcc_generated_files/nco1.c: 66:     NCO1ACCU = 0x00;
 36782   0180F2  6B3A               	clrf	58,b	;volatile
 36783                           
 36784                           ;mcc_generated_files/nco1.c: 68:     NCO1ACCH = 0x00;
 36785   0180F4  6B39               	clrf	57,b	;volatile
 36786                           
 36787                           ;mcc_generated_files/nco1.c: 70:     NCO1ACCL = 0x00;
 36788   0180F6  6B38               	clrf	56,b	;volatile
 36789                           
 36790                           ; BSR set to: 63
 36791                           ;mcc_generated_files/nco1.c: 72:     NCO1INCU = 0x06;
 36792   0180F8  0E06               	movlw	6
 36793   0180FA  6F3D               	movwf	61,b	;volatile
 36794                           
 36795                           ;mcc_generated_files/nco1.c: 74:     NCO1INCH = 0xC7;
 36796   0180FC  0EC7               	movlw	199
 36797   0180FE  6F3C               	movwf	60,b	;volatile
 36798                           
 36799                           ;mcc_generated_files/nco1.c: 76:     NCO1INCL = 0xAE;
 36800   018100  0EAE               	movlw	174
 36801   018102  6F3B               	movwf	59,b	;volatile
 36802                           
 36803                           ; BSR set to: 63
 36804                           ;mcc_generated_files/nco1.c: 79:     NCO1CONbits.EN = 1;
 36805   018104  8F3E               	bsf	62,7,b	;volatile
 36806                           
 36807                           ; BSR set to: 63
 36808                           ; _NCO1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 36809   018106  0012               	return		;funcret
 36810   018108                     __end_of_NCO1_Initialize:
 36811                           	callstack 0
 36812                           
 36813 ;; *************** function _INTERRUPT_Initialize *****************
 36814 ;; Defined at:
 36815 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 36816 ;; Parameters:    Size  Location     Type
 36817 ;;		None
 36818 ;; Auto vars:     Size  Location     Type
 36819 ;;  state           1  [STACK] _Bool 
 36820 ;; Return value:  Size  Location     Type
 36821 ;;                  1  [STACK] void 
 36822 ;; Registers used:
 36823 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 36824 ;; Tracked objects:
 36825 ;;		On entry : 0/0
 36826 ;;		On exit  : 3F/39
 36827 ;;		Unchanged: 0/0
 36828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36833 ;;Total ram usage:        0 bytes
 36834 ;; Hardware stack levels used: 1
 36835 ;; Hardware stack levels required when called: 3
 36836 ;; This function calls:
 36837 ;;		Nothing
 36838 ;; This function is called by:
 36839 ;;		_SYSTEM_Initialize
 36840 ;; This function uses a reentrant model
 36841 ;;
 36842                           
 36843                           	psect	text70
 36844   0171E4                     __ptext70:
 36845                           	callstack 0
 36846   0171E4                     _INTERRUPT_Initialize:
 36847                           	callstack 0
 36848                           
 36849                           ; BSR set to: 63
 36850                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36851   0171E4  52E6               	movf	postinc1,f,c
 36852                           
 36853                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 36854                           
 36855                           ;incstack = 0
 36856   0171E6  8AD2               	bsf	210,5,c	;volatile
 36857                           
 36858                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 36859   0171E8  AED2               	btfss	16338,7,c	;volatile
 36860   0171EA  D003               	goto	u5870
 36861   0171EC  6A2E               	clrf	(btemp+11)^0,c
 36862   0171EE  2A2E               	incf	(btemp+11)^0,f,c
 36863   0171F0  D001               	goto	u5888
 36864   0171F2                     u5870:
 36865   0171F2  6A2E               	clrf	(btemp+11)^0,c
 36866   0171F4                     u5888:
 36867                           
 36868                           ;stkvar	_state @ sp[(-1)+0]
 36869   0171F4  0EFF               	movlw	-1
 36870   0171F6  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 36871                           
 36872                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 36873   0171FC  9ED2               	bcf	16338,7,c	;volatile
 36874                           
 36875                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 36876   0171FE  0E55               	movlw	85
 36877   017200  6ED4               	movwf	212,c	;volatile
 36878                           
 36879                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 36880   017202  0EAA               	movlw	170
 36881   017204  6ED4               	movwf	212,c	;volatile
 36882                           
 36883                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 36884   017206  90D4               	bcf	212,0,c	;volatile
 36885                           
 36886                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 36887   017208  0138               	movlb	56	; () banked
 36888   01720A  6B9F               	clrf	159,b	;volatile
 36889                           
 36890                           ; BSR set to: 56
 36891                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 36892   01720C  6B9E               	clrf	158,b	;volatile
 36893                           
 36894                           ; BSR set to: 56
 36895                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 36896   01720E  0E08               	movlw	8
 36897   017210  6F9D               	movwf	157,b	;volatile
 36898                           
 36899                           ; BSR set to: 56
 36900                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 36901   017212  0E55               	movlw	85
 36902   017214  6ED4               	movwf	212,c	;volatile
 36903                           
 36904                           ; BSR set to: 56
 36905                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 36906   017216  0EAA               	movlw	170
 36907   017218  6ED4               	movwf	212,c	;volatile
 36908                           
 36909                           ; BSR set to: 56
 36910                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 36911   01721A  80D4               	bsf	212,0,c	;volatile
 36912                           
 36913                           ; BSR set to: 56
 36914                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 36915                           ;stkvar	_state @ sp[(-1)+0]
 36916   01721C  0EFF               	movlw	-1
 36917   01721E  B0E3               	btfsc	plusw1,0,c
 36918   017220  D002               	bra	u5895
 36919   017222  9ED2               	bcf	16338,7,c	;volatile
 36920   017224  D001               	bra	u5896
 36921   017226                     u5895:
 36922   017226  8ED2               	bsf	16338,7,c	;volatile
 36923   017228                     u5896:
 36924                           
 36925                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 36926   017228  0139               	movlb	57	; () banked
 36927   01722A  8782               	bsf	130,3,b	;volatile
 36928                           
 36929                           ; BSR set to: 57
 36930                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 36931   01722C  8382               	bsf	130,1,b	;volatile
 36932                           
 36933                           ; BSR set to: 57
 36934                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 36935   01722E  8182               	bsf	130,0,b	;volatile
 36936                           
 36937                           ; BSR set to: 57
 36938                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 36939   017230  8582               	bsf	130,2,b	;volatile
 36940                           
 36941                           ; BSR set to: 57
 36942                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 36943   017232  8786               	bsf	134,3,b	;volatile
 36944                           
 36945                           ; BSR set to: 57
 36946                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 36947   017234  8586               	bsf	134,2,b	;volatile
 36948                           
 36949                           ; BSR set to: 57
 36950                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 36951   017236  8983               	bsf	131,4,b	;volatile
 36952                           
 36953                           ; BSR set to: 57
 36954                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 36955   017238  8783               	bsf	131,3,b	;volatile
 36956                           
 36957                           ; BSR set to: 57
 36958                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 36959   01723A  8181               	bsf	129,0,b	;volatile
 36960                           
 36961                           ; BSR set to: 57
 36962                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 36963   01723C  8185               	bsf	133,0,b	;volatile
 36964                           
 36965                           ; BSR set to: 57
 36966                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR7bits.INT2IP = 1;
 36967   01723E  8B87               	bsf	135,5,b	;volatile
 36968                           
 36969                           ; BSR set to: 57
 36970                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR9bits.TMR6IP = 1;
 36971   017240  8189               	bsf	137,0,b	;volatile
 36972                           
 36973                           ; BSR set to: 57
 36974                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR8bits.TMR5IP = 1;
 36975   017242  8D88               	bsf	136,6,b	;volatile
 36976                           
 36977                           ; BSR set to: 57
 36978                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADIP = 1;
 36979   017244  8581               	bsf	129,2,b	;volatile
 36980                           
 36981                           ; BSR set to: 57
 36982                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 36983   017246  52E5               	movf	postdec1,f,c
 36984   017248  0012               	return		;funcret
 36985   01724A                     __end_of_INTERRUPT_Initialize:
 36986                           	callstack 0
 36987                           
 36988 ;; *************** function _EXT_INT_Initialize *****************
 36989 ;; Defined at:
 36990 ;;		line 119 in file "mcc_generated_files/ext_int.c"
 36991 ;; Parameters:    Size  Location     Type
 36992 ;;		None
 36993 ;; Auto vars:     Size  Location     Type
 36994 ;;		None
 36995 ;; Return value:  Size  Location     Type
 36996 ;;                  1  [STACK] void 
 36997 ;; Registers used:
 36998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 36999 ;; Tracked objects:
 37000 ;;		On entry : 3F/39
 37001 ;;		On exit  : 3F/39
 37002 ;;		Unchanged: 0/0
 37003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37008 ;;Total ram usage:        0 bytes
 37009 ;; Hardware stack levels used: 1
 37010 ;; Hardware stack levels required when called: 4
 37011 ;; This function calls:
 37012 ;;		_INT0_SetInterruptHandler
 37013 ;;		_INT1_SetInterruptHandler
 37014 ;;		_INT2_SetInterruptHandler
 37015 ;; This function is called by:
 37016 ;;		_SYSTEM_Initialize
 37017 ;; This function uses a reentrant model
 37018 ;;
 37019                           
 37020                           	psect	text71
 37021   0175DA                     __ptext71:
 37022                           	callstack 0
 37023   0175DA                     _EXT_INT_Initialize:
 37024                           	callstack 25
 37025                           
 37026                           ;mcc_generated_files/ext_int.c: 124:  (PIR1bits.INT0IF = 0);
 37027                           
 37028                           ; BSR set to: 57
 37029                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37030                           ;incstack = 0
 37031   0175DA  0139               	movlb	57	; () banked
 37032   0175DC  91A1               	bcf	161,0,b	;volatile
 37033                           
 37034                           ;mcc_generated_files/ext_int.c: 125:  (INTCON0bits.INT0EDG = 0);
 37035   0175DE  90D2               	bcf	210,0,c	;volatile
 37036                           
 37037                           ; BSR set to: 57
 37038                           ;mcc_generated_files/ext_int.c: 127:  INT0_SetInterruptHandler(INT0_DefaultInterruptHand
      +                          ler);
 37039   0175E0  0EAC               	movlw	low _INT0_DefaultInterruptHandler
 37040   0175E2  6EE6               	movwf	postinc1,c
 37041   0175E4  0E82               	movlw	high _INT0_DefaultInterruptHandler
 37042   0175E6  6EE6               	movwf	postinc1,c
 37043   0175E8  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 37044   0175EA  6EE6               	movwf	postinc1,c
 37045   0175EC  EC37  F0BF         	call	_INT0_SetInterruptHandler	;wreg free
 37046                           
 37047                           ;mcc_generated_files/ext_int.c: 128:  (PIE1bits.INT0IE = 1);
 37048   0175F0  0139               	movlb	57	; () banked
 37049   0175F2  8191               	bsf	145,0,b	;volatile
 37050                           
 37051                           ; BSR set to: 57
 37052                           ;mcc_generated_files/ext_int.c: 133:  (PIR5bits.INT1IF = 0);
 37053   0175F4  91A5               	bcf	165,0,b	;volatile
 37054                           
 37055                           ; BSR set to: 57
 37056                           ;mcc_generated_files/ext_int.c: 134:  (INTCON0bits.INT1EDG = 0);
 37057   0175F6  92D2               	bcf	210,1,c	;volatile
 37058                           
 37059                           ;mcc_generated_files/ext_int.c: 136:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 37060   0175F8  0EAE               	movlw	low _INT1_DefaultInterruptHandler
 37061   0175FA  6EE6               	movwf	postinc1,c
 37062   0175FC  0E82               	movlw	high _INT1_DefaultInterruptHandler
 37063   0175FE  6EE6               	movwf	postinc1,c
 37064   017600  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 37065   017602  6EE6               	movwf	postinc1,c
 37066   017604  EC23  F0BF         	call	_INT1_SetInterruptHandler	;wreg free
 37067                           
 37068                           ;mcc_generated_files/ext_int.c: 137:  (PIE5bits.INT1IE = 1);
 37069   017608  0139               	movlb	57	; () banked
 37070   01760A  8195               	bsf	149,0,b	;volatile
 37071                           
 37072                           ; BSR set to: 57
 37073                           ;mcc_generated_files/ext_int.c: 142:  (PIR7bits.INT2IF = 0);
 37074   01760C  9BA7               	bcf	167,5,b	;volatile
 37075                           
 37076                           ; BSR set to: 57
 37077                           ;mcc_generated_files/ext_int.c: 143:  (INTCON0bits.INT2EDG = 0);
 37078   01760E  94D2               	bcf	210,2,c	;volatile
 37079                           
 37080                           ;mcc_generated_files/ext_int.c: 145:  INT2_SetInterruptHandler(INT2_DefaultInterruptHand
      +                          ler);
 37081   017610  0EB0               	movlw	low _INT2_DefaultInterruptHandler
 37082   017612  6EE6               	movwf	postinc1,c
 37083   017614  0E82               	movlw	high _INT2_DefaultInterruptHandler
 37084   017616  6EE6               	movwf	postinc1,c
 37085   017618  0E01               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 37086   01761A  6EE6               	movwf	postinc1,c
 37087   01761C  EC0F  F0BF         	call	_INT2_SetInterruptHandler	;wreg free
 37088                           
 37089                           ;mcc_generated_files/ext_int.c: 146:  (PIE7bits.INT2IE = 1);
 37090   017620  0139               	movlb	57	; () banked
 37091   017622  8B97               	bsf	151,5,b	;volatile
 37092                           
 37093                           ; BSR set to: 57
 37094                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 37095   017624  0012               	return		;funcret
 37096   017626                     __end_of_EXT_INT_Initialize:
 37097                           	callstack 0
 37098                           
 37099 ;; *************** function _INT2_SetInterruptHandler *****************
 37100 ;; Defined at:
 37101 ;;		line 108 in file "mcc_generated_files/ext_int.c"
 37102 ;; Parameters:    Size  Location     Type
 37103 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 37104 ;;		 -> INT2_DefaultInterruptHandler(1), 
 37105 ;; Auto vars:     Size  Location     Type
 37106 ;;		None
 37107 ;; Return value:  Size  Location     Type
 37108 ;;                  1  [STACK] void 
 37109 ;; Registers used:
 37110 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 37111 ;; Tracked objects:
 37112 ;;		On entry : 3F/39
 37113 ;;		On exit  : 0/0
 37114 ;;		Unchanged: 0/0
 37115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37120 ;;Total ram usage:        0 bytes
 37121 ;; Hardware stack levels used: 1
 37122 ;; Hardware stack levels required when called: 3
 37123 ;; This function calls:
 37124 ;;		Nothing
 37125 ;; This function is called by:
 37126 ;;		_EXT_INT_Initialize
 37127 ;; This function uses a reentrant model
 37128 ;;
 37129                           
 37130                           	psect	text72
 37131   017E1E                     __ptext72:
 37132                           	callstack 0
 37133   017E1E                     _INT2_SetInterruptHandler:
 37134                           	callstack 25
 37135                           
 37136                           ;mcc_generated_files/ext_int.c: 108: void INT2_SetInterruptHandler(void (* InterruptHand
      +                          ler)(void));mcc_generated_files/ext_int.c: 109: {;mcc_generated_files/ext_int.c: 110:  I
      +                          NT2_InterruptHandler = InterruptHandler;
 37137                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 37138                           
 37139                           ; BSR set to: 57
 37140                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37141                           ;incstack = 0
 37142   017E1E  50E1               	movf	fsr1l,w,c
 37143   017E20  0FFD               	addlw	-3
 37144   017E22  6ED9               	movwf	fsr2l,c
 37145   017E24  50E2               	movf	fsr1h,w,c
 37146   017E26  6EDA               	movwf	fsr2h,c
 37147   017E28  0EFF               	movlw	255
 37148   017E2A  22DA               	addwfc	fsr2h,f,c
 37149   017E2C  006F FF78  F0B3    	movff	postinc2,_INT2_InterruptHandler
 37150   017E32  006F FF78  F0B4    	movff	postinc2,_INT2_InterruptHandler+1
 37151   017E38  006F FF74  F0B5    	movff	postdec2,_INT2_InterruptHandler+2
 37152                           
 37153                           ; _INT2_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 37154   017E3E  52E5               	movf	postdec1,f,c
 37155   017E40  52E5               	movf	postdec1,f,c
 37156   017E42  52E5               	movf	postdec1,f,c
 37157   017E44  0012               	return		;funcret
 37158   017E46                     __end_of_INT2_SetInterruptHandler:
 37159                           	callstack 0
 37160                           
 37161 ;; *************** function _INT1_SetInterruptHandler *****************
 37162 ;; Defined at:
 37163 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 37164 ;; Parameters:    Size  Location     Type
 37165 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 37166 ;;		 -> INT1_DefaultInterruptHandler(1), 
 37167 ;; Auto vars:     Size  Location     Type
 37168 ;;		None
 37169 ;; Return value:  Size  Location     Type
 37170 ;;                  1  [STACK] void 
 37171 ;; Registers used:
 37172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 37173 ;; Tracked objects:
 37174 ;;		On entry : 3F/39
 37175 ;;		On exit  : 0/0
 37176 ;;		Unchanged: 0/0
 37177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37182 ;;Total ram usage:        0 bytes
 37183 ;; Hardware stack levels used: 1
 37184 ;; Hardware stack levels required when called: 3
 37185 ;; This function calls:
 37186 ;;		Nothing
 37187 ;; This function is called by:
 37188 ;;		_EXT_INT_Initialize
 37189 ;; This function uses a reentrant model
 37190 ;;
 37191                           
 37192                           	psect	text73
 37193   017E46                     __ptext73:
 37194                           	callstack 0
 37195   017E46                     _INT1_SetInterruptHandler:
 37196                           	callstack 25
 37197                           
 37198                           ;mcc_generated_files/ext_int.c: 81: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 82: {;mcc_generated_files/ext_int.c: 83:  INT1
      +                          _InterruptHandler = InterruptHandler;
 37199                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 37200                           
 37201                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37202                           ;incstack = 0
 37203   017E46  50E1               	movf	fsr1l,w,c
 37204   017E48  0FFD               	addlw	-3
 37205   017E4A  6ED9               	movwf	fsr2l,c
 37206   017E4C  50E2               	movf	fsr1h,w,c
 37207   017E4E  6EDA               	movwf	fsr2h,c
 37208   017E50  0EFF               	movlw	255
 37209   017E52  22DA               	addwfc	fsr2h,f,c
 37210   017E54  006F FF78  F0B6    	movff	postinc2,_INT1_InterruptHandler
 37211   017E5A  006F FF78  F0B7    	movff	postinc2,_INT1_InterruptHandler+1
 37212   017E60  006F FF74  F0B8    	movff	postdec2,_INT1_InterruptHandler+2
 37213                           
 37214                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 37215   017E66  52E5               	movf	postdec1,f,c
 37216   017E68  52E5               	movf	postdec1,f,c
 37217   017E6A  52E5               	movf	postdec1,f,c
 37218   017E6C  0012               	return		;funcret
 37219   017E6E                     __end_of_INT1_SetInterruptHandler:
 37220                           	callstack 0
 37221                           
 37222 ;; *************** function _INT0_SetInterruptHandler *****************
 37223 ;; Defined at:
 37224 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 37225 ;; Parameters:    Size  Location     Type
 37226 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 37227 ;;		 -> INT0_DefaultInterruptHandler(1), 
 37228 ;; Auto vars:     Size  Location     Type
 37229 ;;		None
 37230 ;; Return value:  Size  Location     Type
 37231 ;;                  1  [STACK] void 
 37232 ;; Registers used:
 37233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 37234 ;; Tracked objects:
 37235 ;;		On entry : 3F/39
 37236 ;;		On exit  : 0/0
 37237 ;;		Unchanged: 0/0
 37238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37243 ;;Total ram usage:        0 bytes
 37244 ;; Hardware stack levels used: 1
 37245 ;; Hardware stack levels required when called: 3
 37246 ;; This function calls:
 37247 ;;		Nothing
 37248 ;; This function is called by:
 37249 ;;		_EXT_INT_Initialize
 37250 ;; This function uses a reentrant model
 37251 ;;
 37252                           
 37253                           	psect	text74
 37254   017E6E                     __ptext74:
 37255                           	callstack 0
 37256   017E6E                     _INT0_SetInterruptHandler:
 37257                           	callstack 25
 37258                           
 37259                           ;mcc_generated_files/ext_int.c: 54: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 55: {;mcc_generated_files/ext_int.c: 56:  INT0
      +                          _InterruptHandler = InterruptHandler;
 37260                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 37261                           
 37262                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37263                           ;incstack = 0
 37264   017E6E  50E1               	movf	fsr1l,w,c
 37265   017E70  0FFD               	addlw	-3
 37266   017E72  6ED9               	movwf	fsr2l,c
 37267   017E74  50E2               	movf	fsr1h,w,c
 37268   017E76  6EDA               	movwf	fsr2h,c
 37269   017E78  0EFF               	movlw	255
 37270   017E7A  22DA               	addwfc	fsr2h,f,c
 37271   017E7C  006F FF78  F0B9    	movff	postinc2,_INT0_InterruptHandler
 37272   017E82  006F FF78  F0BA    	movff	postinc2,_INT0_InterruptHandler+1
 37273   017E88  006F FF74  F0BB    	movff	postdec2,_INT0_InterruptHandler+2
 37274                           
 37275                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 37276   017E8E  52E5               	movf	postdec1,f,c
 37277   017E90  52E5               	movf	postdec1,f,c
 37278   017E92  52E5               	movf	postdec1,f,c
 37279   017E94  0012               	return		;funcret
 37280   017E96                     __end_of_INT0_SetInterruptHandler:
 37281                           	callstack 0
 37282                           
 37283 ;; *************** function _DSM_Initialize *****************
 37284 ;; Defined at:
 37285 ;;		line 58 in file "mcc_generated_files/dsm.c"
 37286 ;; Parameters:    Size  Location     Type
 37287 ;;		None
 37288 ;; Auto vars:     Size  Location     Type
 37289 ;;		None
 37290 ;; Return value:  Size  Location     Type
 37291 ;;                  1  [STACK] void 
 37292 ;; Registers used:
 37293 ;;		wreg, status,2
 37294 ;; Tracked objects:
 37295 ;;		On entry : 0/3C
 37296 ;;		On exit  : 3F/3C
 37297 ;;		Unchanged: 0/0
 37298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37303 ;;Total ram usage:        0 bytes
 37304 ;; Hardware stack levels used: 1
 37305 ;; Hardware stack levels required when called: 3
 37306 ;; This function calls:
 37307 ;;		Nothing
 37308 ;; This function is called by:
 37309 ;;		_SYSTEM_Initialize
 37310 ;; This function uses a reentrant model
 37311 ;;
 37312                           
 37313                           	psect	text75
 37314   018108                     __ptext75:
 37315                           	callstack 0
 37316   018108                     _DSM_Initialize:
 37317                           	callstack 26
 37318                           
 37319                           ;mcc_generated_files/dsm.c: 63:     MD1CON0bits.MD1OPOL = 0;
 37320                           
 37321                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37322                           ;incstack = 0
 37323   018108  013C               	movlb	60	; () banked
 37324   01810A  99FA               	bcf	250,4,b	;volatile
 37325                           
 37326                           ;mcc_generated_files/dsm.c: 66:     MD1CON1bits.MD1CLSYNC = 1;
 37327   01810C  81FB               	bsf	251,0,b	;volatile
 37328                           
 37329                           ;mcc_generated_files/dsm.c: 69:     MD1CON1bits.MD1CLPOL = 0;
 37330   01810E  93FB               	bcf	251,1,b	;volatile
 37331                           
 37332                           ;mcc_generated_files/dsm.c: 72:     MD1CON1bits.MD1CHSYNC = 1;
 37333   018110  89FB               	bsf	251,4,b	;volatile
 37334                           
 37335                           ;mcc_generated_files/dsm.c: 75:     MD1CON1bits.MD1CHPOL = 0;
 37336   018112  9BFB               	bcf	251,5,b	;volatile
 37337                           
 37338                           ; BSR set to: 60
 37339                           ;mcc_generated_files/dsm.c: 78:     MD1SRC = 0x13;
 37340   018114  0E13               	movlw	19
 37341   018116  6FFC               	movwf	252,b	;volatile
 37342                           
 37343                           ;mcc_generated_files/dsm.c: 81:     MD1CARH = 0x0E;
 37344   018118  0E0E               	movlw	14
 37345   01811A  6FFE               	movwf	254,b	;volatile
 37346                           
 37347                           ;mcc_generated_files/dsm.c: 84:     MD1CARL = 0x04;
 37348   01811C  0E04               	movlw	4
 37349   01811E  6FFD               	movwf	253,b	;volatile
 37350                           
 37351                           ; BSR set to: 60
 37352                           ;mcc_generated_files/dsm.c: 87:     MD1CON0bits.MD1EN = 1;
 37353   018120  8FFA               	bsf	250,7,b	;volatile
 37354                           
 37355                           ; BSR set to: 60
 37356                           ; _DSM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 37357   018122  0012               	return		;funcret
 37358   018124                     __end_of_DSM_Initialize:
 37359                           	callstack 0
 37360                           
 37361 ;; *************** function _DMA2_Initialize *****************
 37362 ;; Defined at:
 37363 ;;		line 61 in file "mcc_generated_files/dma2.c"
 37364 ;; Parameters:    Size  Location     Type
 37365 ;;		None
 37366 ;; Auto vars:     Size  Location     Type
 37367 ;;		None
 37368 ;; Return value:  Size  Location     Type
 37369 ;;                  1  [STACK] void 
 37370 ;; Registers used:
 37371 ;;		wreg, status,2
 37372 ;; Tracked objects:
 37373 ;;		On entry : 3F/3D
 37374 ;;		On exit  : 3F/3B
 37375 ;;		Unchanged: 0/0
 37376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37381 ;;Total ram usage:        0 bytes
 37382 ;; Hardware stack levels used: 1
 37383 ;; Hardware stack levels required when called: 3
 37384 ;; This function calls:
 37385 ;;		Nothing
 37386 ;; This function is called by:
 37387 ;;		_SYSTEM_Initialize
 37388 ;; This function uses a reentrant model
 37389 ;;
 37390                           
 37391                           	psect	text76
 37392   017434                     __ptext76:
 37393                           	callstack 0
 37394   017434                     _DMA2_Initialize:
 37395                           	callstack 26
 37396                           
 37397                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 37398                           
 37399                           ; BSR set to: 60
 37400                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37401                           ;incstack = 0
 37402   017434  0E00               	movlw	0
 37403   017436  013B               	movlb	59	; () banked
 37404   017438  6FD9               	movwf	217,b	;volatile
 37405   01743A  0E10               	movlw	16
 37406   01743C  6FDA               	movwf	218,b	;volatile
 37407   01743E  0E00               	movlw	0
 37408   017440  6FDB               	movwf	219,b	;volatile
 37409                           
 37410                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 37411   017442  0E3F               	movlw	63
 37412   017444  6FD1               	movwf	209,b	;volatile
 37413   017446  0EBB               	movlw	187
 37414   017448  6FD0               	movwf	208,b	;volatile
 37415                           
 37416                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 37417   01744A  0E03               	movlw	3
 37418   01744C  6FDD               	movwf	221,b	;volatile
 37419                           
 37420                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 37421   01744E  0E00               	movlw	0
 37422   017450  6FD8               	movwf	216,b	;volatile
 37423   017452  0E01               	movlw	1
 37424   017454  6FD7               	movwf	215,b	;volatile
 37425                           
 37426                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 37427   017456  0E00               	movlw	0
 37428   017458  6FCF               	movwf	207,b	;volatile
 37429   01745A  0E01               	movlw	1
 37430   01745C  6FCE               	movwf	206,b	;volatile
 37431                           
 37432                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 37433   01745E  0E46               	movlw	70
 37434   017460  6FDF               	movwf	223,b	;volatile
 37435                           
 37436                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 37437   017462  0E3D               	movlw	61
 37438   017464  6FDE               	movwf	222,b	;volatile
 37439                           
 37440                           ; BSR set to: 59
 37441                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 37442   017466  0139               	movlb	57	; () banked
 37443   017468  97A5               	bcf	165,3,b	;volatile
 37444                           
 37445                           ; BSR set to: 57
 37446                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 37447   01746A  95A5               	bcf	165,2,b	;volatile
 37448                           
 37449                           ; BSR set to: 57
 37450                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 37451   01746C  9BA5               	bcf	165,5,b	;volatile
 37452                           
 37453                           ; BSR set to: 57
 37454                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 37455   01746E  99A5               	bcf	165,4,b	;volatile
 37456                           
 37457                           ; BSR set to: 57
 37458                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 37459   017470  9795               	bcf	149,3,b	;volatile
 37460                           
 37461                           ; BSR set to: 57
 37462                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 37463   017472  9595               	bcf	149,2,b	;volatile
 37464                           
 37465                           ; BSR set to: 57
 37466                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 37467   017474  9B95               	bcf	149,5,b	;volatile
 37468                           
 37469                           ; BSR set to: 57
 37470                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 37471   017476  9995               	bcf	149,4,b	;volatile
 37472   017478  9ED2               	bcf	16338,7,c	;# 
 37473   01747A  0139               	banksel	14831	;# 
 37474   01747C  0E55               	movlw	85	;# 
 37475   01747E  6FEF               	movwf	14831,b	;# 
 37476   017480  0EAA               	movlw	170	;# 
 37477   017482  6FEF               	movwf	14831,b	;# 
 37478   017484  81EF               	bsf	14831,0,b	;# 
 37479   017486  8ED2               	bsf	16338,7,c	;# 
 37480                           
 37481                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 37482   017488  013B               	movlb	59	; () banked
 37483   01748A  6BDC               	clrf	220,b	;volatile
 37484                           
 37485                           ; BSR set to: 59
 37486                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 37487   01748C  0012               	return		;funcret
 37488   01748E                     __end_of_DMA2_Initialize:
 37489                           	callstack 0
 37490                           
 37491 ;; *************** function _DMA1_Initialize *****************
 37492 ;; Defined at:
 37493 ;;		line 86 in file "mcc_generated_files/dma1.c"
 37494 ;; Parameters:    Size  Location     Type
 37495 ;;		None
 37496 ;; Auto vars:     Size  Location     Type
 37497 ;;		None
 37498 ;; Return value:  Size  Location     Type
 37499 ;;                  1  [STACK] void 
 37500 ;; Registers used:
 37501 ;;		wreg, status,2
 37502 ;; Tracked objects:
 37503 ;;		On entry : 3F/3B
 37504 ;;		On exit  : 3F/3B
 37505 ;;		Unchanged: 0/0
 37506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37511 ;;Total ram usage:        0 bytes
 37512 ;; Hardware stack levels used: 1
 37513 ;; Hardware stack levels required when called: 3
 37514 ;; This function calls:
 37515 ;;		Nothing
 37516 ;; This function is called by:
 37517 ;;		_SYSTEM_Initialize
 37518 ;; This function uses a reentrant model
 37519 ;;
 37520                           
 37521                           	psect	text77
 37522   017046                     __ptext77:
 37523                           	callstack 0
 37524   017046                     _DMA1_Initialize:
 37525                           	callstack 26
 37526                           
 37527                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 37528                           
 37529                           ; BSR set to: 59
 37530                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37531                           ;incstack = 0
 37532   017046  0E00               	movlw	0
 37533   017048  013B               	movlb	59	; () banked
 37534   01704A  6FF9               	movwf	249,b	;volatile
 37535   01704C  0E10               	movlw	16
 37536   01704E  6FFA               	movwf	250,b	;volatile
 37537   017050  0E00               	movlw	0
 37538   017052  6FFB               	movwf	251,b	;volatile
 37539                           
 37540                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 37541   017054  0E3D               	movlw	61
 37542   017056  6FF1               	movwf	241,b	;volatile
 37543   017058  0E11               	movlw	17
 37544   01705A  6FF0               	movwf	240,b	;volatile
 37545                           
 37546                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 37547   01705C  0E03               	movlw	3
 37548   01705E  6FFD               	movwf	253,b	;volatile
 37549                           
 37550                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 37551   017060  0E00               	movlw	0
 37552   017062  6FF8               	movwf	248,b	;volatile
 37553   017064  0E01               	movlw	1
 37554   017066  6FF7               	movwf	247,b	;volatile
 37555                           
 37556                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 37557   017068  0E00               	movlw	0
 37558   01706A  6FEF               	movwf	239,b	;volatile
 37559   01706C  0E01               	movlw	1
 37560   01706E  6FEE               	movwf	238,b	;volatile
 37561                           
 37562                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 37563   017070  0E15               	movlw	21
 37564   017072  6FFF               	movwf	255,b	;volatile
 37565                           
 37566                           ; BSR set to: 59
 37567                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 37568   017074  6BFE               	clrf	254,b	;volatile
 37569                           
 37570                           ; BSR set to: 59
 37571                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 37572   017076  0139               	movlb	57	; () banked
 37573   017078  93A2               	bcf	162,1,b	;volatile
 37574                           
 37575                           ; BSR set to: 57
 37576                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 37577   01707A  91A2               	bcf	162,0,b	;volatile
 37578                           
 37579                           ; BSR set to: 57
 37580                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 37581   01707C  97A2               	bcf	162,3,b	;volatile
 37582                           
 37583                           ; BSR set to: 57
 37584                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 37585   01707E  95A2               	bcf	162,2,b	;volatile
 37586                           
 37587                           ; BSR set to: 57
 37588                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 37589   017080  8392               	bsf	146,1,b	;volatile
 37590                           
 37591                           ; BSR set to: 57
 37592                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 37593   017082  8192               	bsf	146,0,b	;volatile
 37594                           
 37595                           ; BSR set to: 57
 37596                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 37597   017084  8792               	bsf	146,3,b	;volatile
 37598                           
 37599                           ; BSR set to: 57
 37600                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 37601   017086  8592               	bsf	146,2,b	;volatile
 37602                           
 37603                           ; BSR set to: 57
 37604                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 37605   017088  6BF1               	clrf	241,b	;volatile
 37606                           
 37607                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 37608   01708A  0E01               	movlw	1
 37609   01708C  6FF2               	movwf	242,b	;volatile
 37610                           
 37611                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 37612   01708E  0E04               	movlw	4
 37613   017090  6FF3               	movwf	243,b	;volatile
 37614                           
 37615                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 37616   017092  0E02               	movlw	2
 37617   017094  6FF4               	movwf	244,b	;volatile
 37618                           
 37619                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 37620   017096  0E03               	movlw	3
 37621   017098  6FF7               	movwf	247,b	;volatile
 37622   01709A  9ED2               	bcf	16338,7,c	;# 
 37623   01709C  0139               	banksel	14831	;# 
 37624   01709E  0E55               	movlw	85	;# 
 37625   0170A0  6FEF               	movwf	14831,b	;# 
 37626   0170A2  0EAA               	movlw	170	;# 
 37627   0170A4  6FEF               	movwf	14831,b	;# 
 37628   0170A6  81EF               	bsf	14831,0,b	;# 
 37629   0170A8  8ED2               	bsf	16338,7,c	;# 
 37630                           
 37631                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 37632   0170AA  013B               	movlb	59	; () banked
 37633   0170AC  6BFC               	clrf	252,b	;volatile
 37634                           
 37635                           ; BSR set to: 59
 37636                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 37637   0170AE  0012               	return		;funcret
 37638   0170B0                     __end_of_DMA1_Initialize:
 37639                           	callstack 0
 37640                           
 37641 ;; *************** function _CLKREF_Initialize *****************
 37642 ;; Defined at:
 37643 ;;		line 58 in file "mcc_generated_files/clkref.c"
 37644 ;; Parameters:    Size  Location     Type
 37645 ;;		None
 37646 ;; Auto vars:     Size  Location     Type
 37647 ;;		None
 37648 ;; Return value:  Size  Location     Type
 37649 ;;                  1  [STACK] void 
 37650 ;; Registers used:
 37651 ;;		wreg, status,2
 37652 ;; Tracked objects:
 37653 ;;		On entry : 3F/3B
 37654 ;;		On exit  : 3F/3C
 37655 ;;		Unchanged: 0/0
 37656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37661 ;;Total ram usage:        0 bytes
 37662 ;; Hardware stack levels used: 1
 37663 ;; Hardware stack levels required when called: 3
 37664 ;; This function calls:
 37665 ;;		Nothing
 37666 ;; This function is called by:
 37667 ;;		_SYSTEM_Initialize
 37668 ;; This function uses a reentrant model
 37669 ;;
 37670                           
 37671                           	psect	text78
 37672   01823C                     __ptext78:
 37673                           	callstack 0
 37674   01823C                     _CLKREF_Initialize:
 37675                           	callstack 26
 37676                           
 37677                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 37678                           
 37679                           ; BSR set to: 59
 37680                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37681                           ;incstack = 0
 37682   01823C  013C               	movlb	60	; () banked
 37683   01823E  6BE6               	clrf	230,b	;volatile
 37684                           
 37685                           ; BSR set to: 60
 37686                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 37687   018240  0E94               	movlw	148
 37688   018242  6FE5               	movwf	229,b	;volatile
 37689                           
 37690                           ; BSR set to: 60
 37691                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 37692   018244  0012               	return		;funcret
 37693   018246                     __end_of_CLKREF_Initialize:
 37694                           	callstack 0
 37695                           
 37696 ;; *************** function _CLC1_Initialize *****************
 37697 ;; Defined at:
 37698 ;;		line 58 in file "mcc_generated_files/clc1.c"
 37699 ;; Parameters:    Size  Location     Type
 37700 ;;		None
 37701 ;; Auto vars:     Size  Location     Type
 37702 ;;		None
 37703 ;; Return value:  Size  Location     Type
 37704 ;;                  1  [STACK] void 
 37705 ;; Registers used:
 37706 ;;		wreg, status,2
 37707 ;; Tracked objects:
 37708 ;;		On entry : 0/39
 37709 ;;		On exit  : 3F/3C
 37710 ;;		Unchanged: 0/0
 37711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37716 ;;Total ram usage:        0 bytes
 37717 ;; Hardware stack levels used: 1
 37718 ;; Hardware stack levels required when called: 3
 37719 ;; This function calls:
 37720 ;;		Nothing
 37721 ;; This function is called by:
 37722 ;;		_SYSTEM_Initialize
 37723 ;; This function uses a reentrant model
 37724 ;;
 37725                           
 37726                           	psect	text79
 37727   018032                     __ptext79:
 37728                           	callstack 0
 37729   018032                     _CLC1_Initialize:
 37730                           	callstack 26
 37731                           
 37732                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x00;
 37733                           
 37734                           ; BSR set to: 60
 37735                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37736                           ;incstack = 0
 37737   018032  013C               	movlb	60	; () banked
 37738   018034  6B75               	clrf	117,b	;volatile
 37739                           
 37740                           ; BSR set to: 60
 37741                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x04;
 37742   018036  0E04               	movlw	4
 37743   018038  6F76               	movwf	118,b	;volatile
 37744                           
 37745                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x04;
 37746   01803A  0E04               	movlw	4
 37747   01803C  6F77               	movwf	119,b	;volatile
 37748                           
 37749                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x04;
 37750   01803E  0E04               	movlw	4
 37751   018040  6F78               	movwf	120,b	;volatile
 37752                           
 37753                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x04;
 37754   018042  0E04               	movlw	4
 37755   018044  6F79               	movwf	121,b	;volatile
 37756                           
 37757                           ; BSR set to: 60
 37758                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x00;
 37759   018046  6B7A               	clrf	122,b	;volatile
 37760                           
 37761                           ; BSR set to: 60
 37762                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
 37763   018048  6B7B               	clrf	123,b	;volatile
 37764                           
 37765                           ; BSR set to: 60
 37766                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
 37767   01804A  6B7C               	clrf	124,b	;volatile
 37768                           
 37769                           ; BSR set to: 60
 37770                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
 37771   01804C  6B7D               	clrf	125,b	;volatile
 37772                           
 37773                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x81;
 37774   01804E  0E81               	movlw	129
 37775   018050  6F74               	movwf	116,b	;volatile
 37776                           
 37777                           ; BSR set to: 60
 37778                           ; _CLC1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 37779   018052  0012               	return		;funcret
 37780   018054                     __end_of_CLC1_Initialize:
 37781                           	callstack 0
 37782                           
 37783 ;; *************** function _ADCC_Initialize *****************
 37784 ;; Defined at:
 37785 ;;		line 64 in file "mcc_generated_files/adcc.c"
 37786 ;; Parameters:    Size  Location     Type
 37787 ;;		None
 37788 ;; Auto vars:     Size  Location     Type
 37789 ;;		None
 37790 ;; Return value:  Size  Location     Type
 37791 ;;                  1  [STACK] void 
 37792 ;; Registers used:
 37793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 37794 ;; Tracked objects:
 37795 ;;		On entry : 3F/39
 37796 ;;		On exit  : 0/0
 37797 ;;		Unchanged: 0/0
 37798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37803 ;;Total ram usage:        0 bytes
 37804 ;; Hardware stack levels used: 1
 37805 ;; Hardware stack levels required when called: 4
 37806 ;; This function calls:
 37807 ;;		_ADCC_SetADIInterruptHandler
 37808 ;; This function is called by:
 37809 ;;		_SYSTEM_Initialize
 37810 ;; This function uses a reentrant model
 37811 ;;
 37812                           
 37813                           	psect	text80
 37814   017626                     __ptext80:
 37815                           	callstack 0
 37816   017626                     _ADCC_Initialize:
 37817                           	callstack 25
 37818                           
 37819                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 37820                           
 37821                           ; BSR set to: 60
 37822                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37823                           ;incstack = 0
 37824   017626  013E               	movlb	62	; () banked
 37825   017628  6BDE               	clrf	222,b	;volatile
 37826                           
 37827                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 37828   01762A  6BDF               	clrf	223,b	;volatile
 37829                           
 37830                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 37831   01762C  6BE0               	clrf	224,b	;volatile
 37832                           
 37833                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 37834   01762E  6BE1               	clrf	225,b	;volatile
 37835                           
 37836                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 37837   017630  6BE4               	clrf	228,b	;volatile
 37838                           
 37839                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 37840   017632  6BE5               	clrf	229,b	;volatile
 37841                           
 37842                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 37843   017634  6BEA               	clrf	234,b	;volatile
 37844                           
 37845                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 37846   017636  6BEC               	clrf	236,b	;volatile
 37847                           
 37848                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 37849   017638  6BF1               	clrf	241,b	;volatile
 37850                           
 37851                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 37852   01763A  6BF3               	clrf	243,b	;volatile
 37853                           
 37854                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 37855   01763C  6BF4               	clrf	244,b	;volatile
 37856                           
 37857                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 37858   01763E  6BF5               	clrf	245,b	;volatile
 37859                           
 37860                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 37861   017640  6BF6               	clrf	246,b	;volatile
 37862                           
 37863                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 37864   017642  6BF7               	clrf	247,b	;volatile
 37865                           
 37866                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 37867   017644  6BF9               	clrf	249,b	;volatile
 37868                           
 37869                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 37870   017646  6BFA               	clrf	250,b	;volatile
 37871                           
 37872                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 37873   017648  6BFB               	clrf	251,b	;volatile
 37874                           
 37875                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 37876   01764A  6BFC               	clrf	252,b	;volatile
 37877                           
 37878                           ; BSR set to: 62
 37879                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 37880   01764C  0E02               	movlw	2
 37881   01764E  6FFD               	movwf	253,b	;volatile
 37882                           
 37883                           ; BSR set to: 62
 37884                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 37885   017650  6BFE               	clrf	254,b	;volatile
 37886                           
 37887                           ; BSR set to: 62
 37888                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 37889   017652  6BFF               	clrf	255,b	;volatile
 37890                           
 37891                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 37892   017654  0E94               	movlw	148
 37893   017656  6FF8               	movwf	248,b	;volatile
 37894                           
 37895                           ; BSR set to: 62
 37896                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 37897   017658  0139               	movlb	57	; () banked
 37898   01765A  95A1               	bcf	161,2,b	;volatile
 37899                           
 37900                           ; BSR set to: 57
 37901                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 37902   01765C  8591               	bsf	145,2,b	;volatile
 37903                           
 37904                           ; BSR set to: 57
 37905                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 37906   01765E  0EB2               	movlw	low _ADCC_DefaultInterruptHandler
 37907   017660  6EE6               	movwf	postinc1,c
 37908   017662  0E82               	movlw	high _ADCC_DefaultInterruptHandler
 37909   017664  6EE6               	movwf	postinc1,c
 37910   017666  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 37911   017668  6EE6               	movwf	postinc1,c
 37912   01766A  EC4B  F0BF         	call	_ADCC_SetADIInterruptHandler	;wreg free
 37913                           
 37914                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 37915   01766E  0012               	return		;funcret
 37916   017670                     __end_of_ADCC_Initialize:
 37917                           	callstack 0
 37918                           
 37919 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 37920 ;; Defined at:
 37921 ;;		line 316 in file "mcc_generated_files/adcc.c"
 37922 ;; Parameters:    Size  Location     Type
 37923 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 37924 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 37925 ;; Auto vars:     Size  Location     Type
 37926 ;;		None
 37927 ;; Return value:  Size  Location     Type
 37928 ;;                  1  [STACK] void 
 37929 ;; Registers used:
 37930 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 37931 ;; Tracked objects:
 37932 ;;		On entry : 3F/39
 37933 ;;		On exit  : 0/0
 37934 ;;		Unchanged: 0/0
 37935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37940 ;;Total ram usage:        0 bytes
 37941 ;; Hardware stack levels used: 1
 37942 ;; Hardware stack levels required when called: 3
 37943 ;; This function calls:
 37944 ;;		Nothing
 37945 ;; This function is called by:
 37946 ;;		_ADCC_Initialize
 37947 ;; This function uses a reentrant model
 37948 ;;
 37949                           
 37950                           	psect	text81
 37951   017E96                     __ptext81:
 37952                           	callstack 0
 37953   017E96                     _ADCC_SetADIInterruptHandler:
 37954                           	callstack 25
 37955                           
 37956                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 37957                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 37958                           
 37959                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37960                           ;incstack = 0
 37961   017E96  50E1               	movf	fsr1l,w,c
 37962   017E98  0FFD               	addlw	-3
 37963   017E9A  6ED9               	movwf	fsr2l,c
 37964   017E9C  50E2               	movf	fsr1h,w,c
 37965   017E9E  6EDA               	movwf	fsr2h,c
 37966   017EA0  0EFF               	movlw	255
 37967   017EA2  22DA               	addwfc	fsr2h,f,c
 37968   017EA4  006F FF78  F0A4    	movff	postinc2,_ADCC_ADI_InterruptHandler
 37969   017EAA  006F FF78  F0A5    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 37970   017EB0  006F FF74  F0A6    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 37971                           
 37972                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 37973   017EB6  52E5               	movf	postdec1,f,c
 37974   017EB8  52E5               	movf	postdec1,f,c
 37975   017EBA  52E5               	movf	postdec1,f,c
 37976   017EBC  0012               	return		;funcret
 37977   017EBE                     __end_of_ADCC_SetADIInterruptHandler:
 37978                           	callstack 0
 37979                           
 37980 ;; *************** function _MyeaDogM_WriteStringAtPos *****************
 37981 ;; Defined at:
 37982 ;;		line 181 in file "mconfig.c"
 37983 ;; Parameters:    Size  Location     Type
 37984 ;;  r               1  [STACK] const unsigned char 
 37985 ;;  c               1  [STACK] const unsigned char 
 37986 ;;  strPtr          2  [STACK] PTR unsigned char 
 37987 ;;		 -> D$lcd(512), D@mconfig$F5154(514), V(387), 
 37988 ;; Auto vars:     Size  Location     Type
 37989 ;;		None
 37990 ;; Return value:  Size  Location     Type
 37991 ;;                  1  [STACK] void 
 37992 ;; Registers used:
 37993 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 37994 ;; Tracked objects:
 37995 ;;		On entry : 3F/1
 37996 ;;		On exit  : 0/0
 37997 ;;		Unchanged: 0/0
 37998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38003 ;;Total ram usage:        0 bytes
 38004 ;; Hardware stack levels used: 1
 38005 ;; Hardware stack levels required when called: 15
 38006 ;; This function calls:
 38007 ;;		_TimerDone
 38008 ;;		_eaDogM_WriteStringAtPos
 38009 ;;		_get_vterm_ptr
 38010 ;;		_sprintf
 38011 ;;		_update_lcd
 38012 ;;		_wait_lcd_done
 38013 ;; This function is called by:
 38014 ;;		_main
 38015 ;; This function uses a reentrant model
 38016 ;;
 38017                           
 38018                           	psect	text82
 38019   016202                     __ptext82:
 38020                           	callstack 0
 38021   016202                     _MyeaDogM_WriteStringAtPos:
 38022                           	callstack 15
 38023                           
 38024                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38025                           ;incstack = 0
 38026                           ;mconfig.c: 181: void MyeaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *
      +                          strPtr);mconfig.c: 182: {;mconfig.c: 184:  do { LATBbits.LATB5 = ~LATBbits.LATB5; } whil
      +                          e(0);
 38027   016202  AABB               	btfss	187,5,c	;volatile
 38028   016204  D002               	goto	u9600
 38029   016206  0E01               	movlw	1
 38030   016208  D001               	goto	u9606
 38031   01620A                     u9600:
 38032   01620A  0E00               	movlw	0
 38033   01620C                     u9606:
 38034   01620C  0AFF               	xorlw	255
 38035   01620E  6E2E               	movwf	(btemp+11)^0,c
 38036   016210  3A2E               	swapf	(btemp+11)^0,f,c
 38037   016212  462E               	rlncf	(btemp+11)^0,f,c
 38038   016214  50BB               	movf	187,w,c	;volatile
 38039   016216  182E               	xorwf	(btemp+11)^0,w,c
 38040   016218  0BDF               	andlw	-33
 38041   01621A  182E               	xorwf	(btemp+11)^0,w,c
 38042   01621C  6EBB               	movwf	187,c	;volatile
 38043                           
 38044                           ;mconfig.c: 185:  wait_lcd_done();
 38045   01621E  EC92  F0C0         	call	_wait_lcd_done	;wreg free
 38046                           
 38047                           ; BSR set to: 0
 38048                           ;mconfig.c: 186:  if (V.response.info == DIS_STR) {
 38049   016222  EE23  F191         	lfsr	2,_V+375	;volatile
 38050   016226  50DF               	movf	indf2,w,c
 38051   016228  A4D8               	btfss	status,2,c
 38052   01622A  D010               	goto	l13200
 38053                           
 38054                           ; BSR set to: 0
 38055                           ;mconfig.c: 187:   eaDogM_WriteStringAtPos(r, c, strPtr);
 38056                           ;stkvar	_strPtr @ sp[(0)+-4]
 38057   01622C  0EFC               	movlw	-4
 38058   01622E  006F FF8F FFE6     	movff	plusw1,postinc1
 38059   016234  006F FF8F FFE6     	movff	plusw1,postinc1
 38060                           
 38061                           ;stkvar	_c @ sp[(-2)+-2]
 38062   01623A  0EFC               	movlw	-4
 38063   01623C  50E3               	movf	plusw1,w,c
 38064   01623E  6EE6               	movwf	postinc1,c
 38065                           
 38066                           ;stkvar	_r @ sp[(-3)+-1]
 38067   016240  0EFC               	movlw	-4
 38068   016242  50E3               	movf	plusw1,w,c
 38069   016244  6EE6               	movwf	postinc1,c
 38070   016246  EC92  F0BD         	call	_eaDogM_WriteStringAtPos	;wreg free
 38071                           
 38072                           ;mconfig.c: 188:  } else {
 38073   01624A  D059               	goto	l13216
 38074   01624C                     l13200:
 38075                           
 38076                           ; BSR set to: 0
 38077                           ;mconfig.c: 189:   if (V.response.info == DIS_HELP) {
 38078   01624C  0063  F647  FFE8   	movff	_V+375,wreg	;volatile
 38079   016252  0A06               	xorlw	6
 38080   016254  A4D8               	btfss	status,2,c
 38081   016256  D01D               	goto	l13204
 38082                           
 38083                           ; BSR set to: 0
 38084                           ;mconfig.c: 190:    sprintf(get_vterm_ptr(2, 1), "%s", V.info);
 38085   016258  0E01               	movlw	low (_V+231)
 38086   01625A  6EE6               	movwf	postinc1,c
 38087   01625C  0E0D               	movlw	high (_V+231)
 38088   01625E  6EE6               	movwf	postinc1,c
 38089   016260  0EFC               	movlw	low STR_26
 38090   016262  6EE6               	movwf	postinc1,c
 38091   016264  0EFF               	movlw	high STR_26
 38092   016266  6EE6               	movwf	postinc1,c
 38093   016268  0E01               	movlw	1
 38094   01626A  6EE6               	movwf	postinc1,c
 38095   01626C  0E02               	movlw	2
 38096   01626E  6EE6               	movwf	postinc1,c
 38097   016270  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 38098   016274  0060  F08F  FFE6   	movff	btemp,postinc1
 38099   01627A  0060  F093  FFE6   	movff	btemp+1,postinc1
 38100   016280  0E06               	movlw	6
 38101   016282  6EE6               	movwf	postinc1,c
 38102   016284  EC0A  F0B3         	call	_sprintf	;wreg free
 38103                           
 38104                           ;mconfig.c: 191:    update_lcd(1);
 38105   016288  0E01               	movlw	1
 38106   01628A  6EE6               	movwf	postinc1,c
 38107   01628C  EC82  F0B3         	call	_update_lcd	;wreg free
 38108                           
 38109                           ;mconfig.c: 192:   } else {
 38110   016290  D026               	goto	l13210
 38111   016292                     l13204:
 38112                           
 38113                           ; BSR set to: 0
 38114                           ;mconfig.c: 193:    if ((V.response.info != DIS_STR)) {
 38115   016292  EE23  F191         	lfsr	2,_V+375	;volatile
 38116   016296  50DF               	movf	indf2,w,c
 38117   016298  B4D8               	btfsc	status,2,c
 38118   01629A  D005               	goto	l13208
 38119                           
 38120                           ; BSR set to: 0
 38121                           ;mconfig.c: 194:     update_lcd(2);
 38122   01629C  0E02               	movlw	2
 38123   01629E  6EE6               	movwf	postinc1,c
 38124   0162A0  EC82  F0B3         	call	_update_lcd	;wreg free
 38125                           
 38126                           ;mconfig.c: 195:    } else {
 38127   0162A4  D01C               	goto	l13210
 38128   0162A6                     l13208:
 38129                           
 38130                           ; BSR set to: 0
 38131                           ;mconfig.c: 196:     sprintf(get_vterm_ptr(2, 0), "%s", V.info);
 38132   0162A6  0E01               	movlw	low (_V+231)
 38133   0162A8  6EE6               	movwf	postinc1,c
 38134   0162AA  0E0D               	movlw	high (_V+231)
 38135   0162AC  6EE6               	movwf	postinc1,c
 38136   0162AE  0EFC               	movlw	low STR_26
 38137   0162B0  6EE6               	movwf	postinc1,c
 38138   0162B2  0EFF               	movlw	high STR_26
 38139   0162B4  6EE6               	movwf	postinc1,c
 38140   0162B6  0E00               	movlw	0
 38141   0162B8  6EE6               	movwf	postinc1,c
 38142   0162BA  0E02               	movlw	2
 38143   0162BC  6EE6               	movwf	postinc1,c
 38144   0162BE  EC3E  F0BD         	call	_get_vterm_ptr	;wreg free
 38145   0162C2  0060  F08F  FFE6   	movff	btemp,postinc1
 38146   0162C8  0060  F093  FFE6   	movff	btemp+1,postinc1
 38147   0162CE  0E06               	movlw	6
 38148   0162D0  6EE6               	movwf	postinc1,c
 38149   0162D2  EC0A  F0B3         	call	_sprintf	;wreg free
 38150                           
 38151                           ;mconfig.c: 197:     update_lcd(0);
 38152   0162D6  0E00               	movlw	0
 38153   0162D8  6EE6               	movwf	postinc1,c
 38154   0162DA  EC82  F0B3         	call	_update_lcd	;wreg free
 38155   0162DE                     l13210:
 38156                           
 38157                           ;mconfig.c: 201:   if ((V.response.info != DIS_STR) && TimerDone(TMR_INFO))
 38158   0162DE  EE23  F191         	lfsr	2,_V+375	;volatile
 38159   0162E2  50DF               	movf	indf2,w,c
 38160   0162E4  B4D8               	btfsc	status,2,c
 38161   0162E6  D00B               	goto	l13216
 38162   0162E8  0E07               	movlw	7
 38163   0162EA  6EE6               	movwf	postinc1,c
 38164   0162EC  ECAD  F0BF         	call	_TimerDone	;wreg free
 38165   0162F0  5023               	movf	btemp^0,w,c
 38166   0162F2  B4D8               	btfsc	status,2,c
 38167   0162F4  D004               	goto	l13216
 38168                           
 38169                           ;mconfig.c: 202:    V.response.info = DIS_STR;
 38170   0162F6  0E00               	movlw	0
 38171   0162F8  006F FFA0  FD91    	movff	wreg,_V+375	;volatile
 38172   0162FE                     l13216:
 38173                           
 38174                           ;mconfig.c: 208:  if (D.last_info == DIS_HELP && V.response.info != DIS_HELP) {
 38175   0162FE  0062  F407  FFE8   	movff	_D@mconfig$F5154+513,wreg
 38176   016304  0A06               	xorlw	6
 38177                           
 38178                           ;mconfig.c: 212:  D.last_info = V.response.info;
 38179                           
 38180                           ;mconfig.c: 210:  }
 38181   016306  0063  F644  F901   	movff	_V+375,_D@mconfig$F5154+513	;volatile
 38182                           
 38183                           ; _MyeaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 4, argsize = 4, vargsize = 0
 38184   01630C  52E5               	movf	postdec1,f,c
 38185   01630E  52E5               	movf	postdec1,f,c
 38186   016310  52E5               	movf	postdec1,f,c
 38187   016312  52E5               	movf	postdec1,f,c
 38188   016314  0012               	return		;funcret
 38189   016316                     __end_of_MyeaDogM_WriteStringAtPos:
 38190                           	callstack 0
 38191                           
 38192 ;; *************** function _update_lcd *****************
 38193 ;; Defined at:
 38194 ;;		line 82 in file "mconfig.c"
 38195 ;; Parameters:    Size  Location     Type
 38196 ;;  vterm           1  [STACK] unsigned char 
 38197 ;; Auto vars:     Size  Location     Type
 38198 ;;		None
 38199 ;; Return value:  Size  Location     Type
 38200 ;;                  1  [STACK] unsigned char 
 38201 ;; Registers used:
 38202 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 38203 ;; Tracked objects:
 38204 ;;		On entry : 0/1
 38205 ;;		On exit  : 0/0
 38206 ;;		Unchanged: 0/0
 38207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38212 ;;Total ram usage:        0 bytes
 38213 ;; Hardware stack levels used: 1
 38214 ;; Hardware stack levels required when called: 14
 38215 ;; This function calls:
 38216 ;;		_eaDogM_WriteStringAtPos
 38217 ;;		_wait_lcd_done
 38218 ;; This function is called by:
 38219 ;;		_main
 38220 ;;		_check_help
 38221 ;;		_MyeaDogM_WriteStringAtPos
 38222 ;; This function uses a reentrant model
 38223 ;;
 38224                           
 38225                           	psect	text83
 38226   016704                     __ptext83:
 38227                           	callstack 0
 38228   016704                     _update_lcd:
 38229                           	callstack 16
 38230                           
 38231                           ;mconfig.c: 82: uint8_t update_lcd(uint8_t vterm);mconfig.c: 83: {;mconfig.c: 84:  vterm
      +                           = vterm & 0x03;
 38232                           ;stkvar	_vterm @ sp[(0)+-1]
 38233                           
 38234                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38235                           ;incstack = 0
 38236   016704  0EFF               	movlw	-1
 38237   016706  006F FF8C  F023    	movff	plusw1,btemp
 38238   01670C  0E03               	movlw	3
 38239   01670E  1623               	andwf	btemp^0,f,c
 38240   016710  0EFF               	movlw	-1
 38241   016712  0060  F08F  FFE3   	movff	btemp,plusw1
 38242                           
 38243                           ;mconfig.c: 86:  if (D.vterm >= 1 && vterm == 0)
 38244   016718  EE22  F100         	lfsr	2,_D@mconfig$F5154+512
 38245   01671C  A0DF               	btfss	indf2,0,c
 38246   01671E  D004               	goto	l12422
 38247                           
 38248                           ;stkvar	_vterm @ sp[(0)+-1]
 38249   016720  0EFF               	movlw	-1
 38250   016722  50E3               	movf	plusw1,w,c
 38251   016724  B4D8               	btfsc	status,2,c
 38252   016726  D063               	goto	l2384
 38253   016728                     l12422:
 38254                           
 38255                           ;mconfig.c: 89:  D.lcd[vterm][0][16] = 0;
 38256                           ;stkvar	_vterm @ sp[(0)+-1]
 38257   016728  0EFF               	movlw	-1
 38258   01672A  50E3               	movf	plusw1,w,c
 38259   01672C  0D80               	mullw	128
 38260   01672E  0E10               	movlw	low (_D@mconfig$F5154+16)
 38261   016730  24F3               	addwf	243,w,c
 38262   016732  6ED9               	movwf	fsr2l,c
 38263   016734  0E07               	movlw	high (_D@mconfig$F5154+16)
 38264   016736  20F4               	addwfc	prodh,w,c
 38265   016738  6EDA               	movwf	fsr2h,c
 38266   01673A  6ADF               	clrf	indf2,c
 38267                           
 38268                           ;mconfig.c: 90:  D.lcd[vterm][1][16] = 0;
 38269                           ;stkvar	_vterm @ sp[(0)+-1]
 38270   01673C  0EFF               	movlw	-1
 38271   01673E  50E3               	movf	plusw1,w,c
 38272   016740  0D80               	mullw	128
 38273   016742  0E30               	movlw	low (_D@mconfig$F5154+48)
 38274   016744  24F3               	addwf	243,w,c
 38275   016746  6ED9               	movwf	fsr2l,c
 38276   016748  0E07               	movlw	high (_D@mconfig$F5154+48)
 38277   01674A  20F4               	addwfc	prodh,w,c
 38278   01674C  6EDA               	movwf	fsr2h,c
 38279   01674E  6ADF               	clrf	indf2,c
 38280                           
 38281                           ;mconfig.c: 91:  D.lcd[vterm][2][16] = 0;
 38282                           ;stkvar	_vterm @ sp[(0)+-1]
 38283   016750  0EFF               	movlw	-1
 38284   016752  50E3               	movf	plusw1,w,c
 38285   016754  0D80               	mullw	128
 38286   016756  0E50               	movlw	low (_D@mconfig$F5154+80)
 38287   016758  24F3               	addwf	243,w,c
 38288   01675A  6ED9               	movwf	fsr2l,c
 38289   01675C  0E07               	movlw	high (_D@mconfig$F5154+80)
 38290   01675E  20F4               	addwfc	prodh,w,c
 38291   016760  6EDA               	movwf	fsr2h,c
 38292   016762  6ADF               	clrf	indf2,c
 38293                           
 38294                           ;mconfig.c: 92:  wait_lcd_done();
 38295   016764  EC92  F0C0         	call	_wait_lcd_done	;wreg free
 38296                           
 38297                           ; BSR set to: 0
 38298                           ;mconfig.c: 93:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 38299                           ;stkvar	_vterm @ sp[(0)+-1]
 38300   016768  0EFF               	movlw	-1
 38301   01676A  50E3               	movf	plusw1,w,c
 38302   01676C  0D80               	mullw	128
 38303   01676E  0E00               	movlw	low _D@mconfig$F5154
 38304   016770  24F3               	addwf	243,w,c
 38305   016772  6E2D               	movwf	(btemp+10)^0,c
 38306   016774  0E07               	movlw	high _D@mconfig$F5154
 38307   016776  20F4               	addwfc	prodh,w,c
 38308   016778  6E2E               	movwf	(btemp+11)^0,c
 38309   01677A  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 38310   016780  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 38311   016786  0E00               	movlw	0
 38312   016788  6EE6               	movwf	postinc1,c
 38313   01678A  0E00               	movlw	0
 38314   01678C  6EE6               	movwf	postinc1,c
 38315   01678E  EC92  F0BD         	call	_eaDogM_WriteStringAtPos	;wreg free
 38316                           
 38317                           ; BSR set to: 59
 38318                           ;mconfig.c: 94:  wait_lcd_done();
 38319   016792  EC92  F0C0         	call	_wait_lcd_done	;wreg free
 38320                           
 38321                           ; BSR set to: 0
 38322                           ;mconfig.c: 95:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 38323                           ;stkvar	_vterm @ sp[(0)+-1]
 38324   016796  0EFF               	movlw	-1
 38325   016798  50E3               	movf	plusw1,w,c
 38326   01679A  0D80               	mullw	128
 38327   01679C  0E20               	movlw	low (_D@mconfig$F5154+32)
 38328   01679E  24F3               	addwf	243,w,c
 38329   0167A0  6E2D               	movwf	(btemp+10)^0,c
 38330   0167A2  0E07               	movlw	high (_D@mconfig$F5154+32)
 38331   0167A4  20F4               	addwfc	prodh,w,c
 38332   0167A6  6E2E               	movwf	(btemp+11)^0,c
 38333   0167A8  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 38334   0167AE  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 38335   0167B4  0E00               	movlw	0
 38336   0167B6  6EE6               	movwf	postinc1,c
 38337   0167B8  0E01               	movlw	1
 38338   0167BA  6EE6               	movwf	postinc1,c
 38339   0167BC  EC92  F0BD         	call	_eaDogM_WriteStringAtPos	;wreg free
 38340                           
 38341                           ; BSR set to: 59
 38342                           ;mconfig.c: 96:  wait_lcd_done();
 38343   0167C0  EC92  F0C0         	call	_wait_lcd_done	;wreg free
 38344                           
 38345                           ; BSR set to: 0
 38346                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 38347                           ;stkvar	_vterm @ sp[(0)+-1]
 38348   0167C4  0EFF               	movlw	-1
 38349   0167C6  50E3               	movf	plusw1,w,c
 38350   0167C8  0D80               	mullw	128
 38351   0167CA  0E40               	movlw	low (_D@mconfig$F5154+64)
 38352   0167CC  24F3               	addwf	243,w,c
 38353   0167CE  6E2D               	movwf	(btemp+10)^0,c
 38354   0167D0  0E07               	movlw	high (_D@mconfig$F5154+64)
 38355   0167D2  20F4               	addwfc	prodh,w,c
 38356   0167D4  6E2E               	movwf	(btemp+11)^0,c
 38357   0167D6  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 38358   0167DC  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 38359   0167E2  0E00               	movlw	0
 38360   0167E4  6EE6               	movwf	postinc1,c
 38361   0167E6  0E02               	movlw	2
 38362   0167E8  6EE6               	movwf	postinc1,c
 38363   0167EA  EC92  F0BD         	call	_eaDogM_WriteStringAtPos	;wreg free
 38364   0167EE                     l2384:
 38365                           
 38366                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 38367   0167EE  52E5               	movf	postdec1,f,c
 38368   0167F0  0012               	return		;funcret
 38369   0167F2                     __end_of_update_lcd:
 38370                           	callstack 0
 38371                           
 38372 ;; *************** function _eaDogM_WriteStringAtPos *****************
 38373 ;; Defined at:
 38374 ;;		line 249 in file "eadog.c"
 38375 ;; Parameters:    Size  Location     Type
 38376 ;;  r               1  [STACK] const unsigned char 
 38377 ;;  c               1  [STACK] const unsigned char 
 38378 ;;  strPtr          2  [STACK] PTR unsigned char 
 38379 ;;		 -> D$lcd(512), D@mconfig$F5154(514), V(387), 
 38380 ;; Auto vars:     Size  Location     Type
 38381 ;;		None
 38382 ;; Return value:  Size  Location     Type
 38383 ;;                  1  [STACK] void 
 38384 ;; Registers used:
 38385 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 38386 ;; Tracked objects:
 38387 ;;		On entry : 3F/0
 38388 ;;		On exit  : 3F/3B
 38389 ;;		Unchanged: 0/0
 38390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38395 ;;Total ram usage:        0 bytes
 38396 ;; Hardware stack levels used: 1
 38397 ;; Hardware stack levels required when called: 13
 38398 ;; This function calls:
 38399 ;;		_eaDogM_WriteString
 38400 ;;		_send_lcd_cmd_dma
 38401 ;; This function is called by:
 38402 ;;		_update_lcd
 38403 ;;		_vterm_dump
 38404 ;;		_MyeaDogM_WriteStringAtPos
 38405 ;; This function uses a reentrant model
 38406 ;;
 38407                           
 38408                           	psect	text84
 38409   017B24                     __ptext84:
 38410                           	callstack 0
 38411   017B24                     _eaDogM_WriteStringAtPos:
 38412                           	callstack 16
 38413                           
 38414                           ;eadog.c: 249: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 250: {;eadog.c: 251:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
 38415                           ;stkvar	_c @ sp[(0)+-2]
 38416                           
 38417                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38418                           ;incstack = 0
 38419   017B24  0EFE               	movlw	-2
 38420   017B26  006F FF8C  F02E    	movff	plusw1,btemp+11
 38421                           
 38422                           ;stkvar	_r @ sp[(0)+-1]
 38423   017B2C  0EFF               	movlw	-1
 38424   017B2E  50E3               	movf	plusw1,w,c
 38425   017B30  0D10               	mullw	16
 38426   017B32  50F3               	movf	243,w,c
 38427   017B34  242E               	addwf	(btemp+11)^0,w,c
 38428   017B36  0F80               	addlw	128
 38429   017B38  6EE6               	movwf	postinc1,c
 38430   017B3A  EC74  F0BA         	call	_send_lcd_cmd_dma	;wreg free
 38431                           
 38432                           ;eadog.c: 252:  eaDogM_WriteString(strPtr);
 38433                           ;stkvar	_strPtr @ sp[(0)+-4]
 38434   017B3E  0EFC               	movlw	-4
 38435   017B40  006F FF8F FFE6     	movff	plusw1,postinc1
 38436   017B46  006F FF8F FFE6     	movff	plusw1,postinc1
 38437   017B4C  ECAC  F0B6         	call	_eaDogM_WriteString	;wreg free
 38438                           
 38439                           ; BSR set to: 59
 38440                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 38441   017B50  52E5               	movf	postdec1,f,c
 38442   017B52  52E5               	movf	postdec1,f,c
 38443   017B54  52E5               	movf	postdec1,f,c
 38444   017B56  52E5               	movf	postdec1,f,c
 38445   017B58  0012               	return		;funcret
 38446   017B5A                     __end_of_eaDogM_WriteStringAtPos:
 38447                           	callstack 0
 38448                           
 38449 ;; *************** function _send_lcd_cmd_dma *****************
 38450 ;; Defined at:
 38451 ;;		line 202 in file "eadog.c"
 38452 ;; Parameters:    Size  Location     Type
 38453 ;;  strPtr          1  [STACK] unsigned char 
 38454 ;; Auto vars:     Size  Location     Type
 38455 ;;		None
 38456 ;; Return value:  Size  Location     Type
 38457 ;;                  1  [STACK] void 
 38458 ;; Registers used:
 38459 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 38460 ;; Tracked objects:
 38461 ;;		On entry : 0/3D
 38462 ;;		On exit  : 3F/0
 38463 ;;		Unchanged: 0/0
 38464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38469 ;;Total ram usage:        0 bytes
 38470 ;; Hardware stack levels used: 1
 38471 ;; Hardware stack levels required when called: 12
 38472 ;; This function calls:
 38473 ;;		_printf
 38474 ;;		_ringBufS_flush
 38475 ;;		_start_lcd
 38476 ;;		_wait_lcd_done
 38477 ;;		_wait_lcd_set
 38478 ;; This function is called by:
 38479 ;;		_eaDogM_WriteCommand
 38480 ;;		_eaDogM_WriteStringAtPos
 38481 ;; This function uses a reentrant model
 38482 ;;
 38483                           
 38484                           	psect	text85
 38485   0174E8                     __ptext85:
 38486                           	callstack 0
 38487   0174E8                     _send_lcd_cmd_dma:
 38488                           	callstack 16
 38489                           
 38490                           ; BSR set to: 59
 38491                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38492                           ;incstack = 0
 38493                           ;eadog.c: 202: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 203: {;eadog.c: 204:  do {
      +                           LATEbits.LATE2 = 1; } while(0);
 38494   0174E8  84BE               	bsf	190,2,c	;volatile
 38495                           
 38496                           ;eadog.c: 205:  wait_lcd_set();
 38497   0174EA  EC49  F0C1         	call	_wait_lcd_set	;wreg free
 38498                           
 38499                           ; BSR set to: 0
 38500                           ;eadog.c: 207:  ringBufS_flush(spi_link.tx1a, 0);
 38501   0174EE  0E00               	movlw	0
 38502   0174F0  6EE6               	movwf	postinc1,c
 38503   0174F2  0060  F237  FFE6   	movff	_spi_link+6,postinc1
 38504   0174F8  0060  F23B  FFE6   	movff	_spi_link+7,postinc1
 38505   0174FE  EC9B  F0B7         	call	_ringBufS_flush	;wreg free
 38506   017502  92BC               	bcf	188,1,c	;volatile
 38507   017504  94BC               	bcf	188,2,c	;volatile
 38508                           
 38509                           ;eadog.c: 210:  DMA1CON0bits.EN = 0;
 38510   017506  013B               	movlb	59	; () banked
 38511   017508  9FFC               	bcf	252,7,b	;volatile
 38512                           
 38513                           ; BSR set to: 59
 38514                           ;eadog.c: 211:  DMA1SSZ = 1;
 38515   01750A  0E00               	movlw	0
 38516   01750C  6FF8               	movwf	248,b	;volatile
 38517   01750E  0E01               	movlw	1
 38518   017510  6FF7               	movwf	247,b	;volatile
 38519                           
 38520                           ; BSR set to: 59
 38521                           ;eadog.c: 212:  DMA1CON0bits.EN = 1;
 38522   017512  8FFC               	bsf	252,7,b	;volatile
 38523                           
 38524                           ; BSR set to: 59
 38525                           ;eadog.c: 213:  printf("%c", strPtr);
 38526                           ;stkvar	_strPtr @ sp[(0)+-1]
 38527   017514  0EFF               	movlw	-1
 38528   017516  50E3               	movf	plusw1,w,c
 38529   017518  6EE6               	movwf	postinc1,c
 38530   01751A  0E00               	movlw	0
 38531   01751C  6EE6               	movwf	postinc1,c
 38532   01751E  0EF9               	movlw	low STR_27
 38533   017520  6EE6               	movwf	postinc1,c
 38534   017522  0EFF               	movlw	high STR_27
 38535   017524  6EE6               	movwf	postinc1,c
 38536   017526  0E04               	movlw	4
 38537   017528  6EE6               	movwf	postinc1,c
 38538   01752A  EC8B  F0B9         	call	_printf	;wreg free
 38539                           
 38540                           ; BSR set to: 1
 38541                           ;eadog.c: 214:  start_lcd();
 38542   01752E  EC4C  F0C1         	call	_start_lcd	;wreg free
 38543                           
 38544                           ; BSR set to: 59
 38545                           ;eadog.c: 215:  wait_lcd_done();
 38546   017532  EC92  F0C0         	call	_wait_lcd_done	;wreg free
 38547                           
 38548                           ; BSR set to: 0
 38549   017536  82BC               	bsf	188,1,c	;volatile
 38550                           
 38551                           ; BSR set to: 0
 38552                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 38553   017538  52E5               	movf	postdec1,f,c
 38554   01753A  0012               	return		;funcret
 38555   01753C                     __end_of_send_lcd_cmd_dma:
 38556                           	callstack 0
 38557                           
 38558 ;; *************** function _wait_lcd_done *****************
 38559 ;; Defined at:
 38560 ;;		line 141 in file "eadog.c"
 38561 ;; Parameters:    Size  Location     Type
 38562 ;;		None
 38563 ;; Auto vars:     Size  Location     Type
 38564 ;;		None
 38565 ;; Return value:  Size  Location     Type
 38566 ;;                  1  [STACK] void 
 38567 ;; Registers used:
 38568 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 38569 ;; Tracked objects:
 38570 ;;		On entry : 0/1
 38571 ;;		On exit  : 3F/0
 38572 ;;		Unchanged: 0/0
 38573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38578 ;;Total ram usage:        0 bytes
 38579 ;; Hardware stack levels used: 1
 38580 ;; Hardware stack levels required when called: 4
 38581 ;; This function calls:
 38582 ;;		_wdtdelay
 38583 ;; This function is called by:
 38584 ;;		_send_lcd_cmd_dma
 38585 ;;		_update_lcd
 38586 ;;		_vterm_dump
 38587 ;;		_MyeaDogM_WriteStringAtPos
 38588 ;; This function uses a reentrant model
 38589 ;;
 38590                           
 38591                           	psect	text86
 38592   018124                     __ptext86:
 38593                           	callstack 0
 38594   018124                     _wait_lcd_done:
 38595                           	callstack 25
 38596                           
 38597                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
 38598                           
 38599                           ; BSR set to: 0
 38600                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38601                           ;incstack = 0
 38602   018124  0100               	movlb	0	; () banked
 38603   018126  B787               	btfsc	_spi_link& (0+255),3,b	;volatile
 38604   018128  D7FD               	goto	__ptext86
 38605                           
 38606                           ; BSR set to: 0
 38607                           ;eadog.c: 144:  wdtdelay(50);
 38608   01812A  0E32               	movlw	50
 38609   01812C  6EE6               	movwf	postinc1,c
 38610   01812E  0E00               	movlw	0
 38611   018130  6EE6               	movwf	postinc1,c
 38612   018132  0E00               	movlw	0
 38613   018134  6EE6               	movwf	postinc1,c
 38614   018136  0E00               	movlw	0
 38615   018138  6EE6               	movwf	postinc1,c
 38616   01813A  EC47  F0BA         	call	_wdtdelay	;wreg free
 38617                           
 38618                           ; BSR set to: 0
 38619                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 38620   01813E  0012               	return		;funcret
 38621   018140                     __end_of_wait_lcd_done:
 38622                           	callstack 0
 38623                           
 38624 ;; *************** function _wdtdelay *****************
 38625 ;; Defined at:
 38626 ;;		line 22 in file "eadog.c"
 38627 ;; Parameters:    Size  Location     Type
 38628 ;;  delay           4  [STACK] const unsigned long 
 38629 ;; Auto vars:     Size  Location     Type
 38630 ;;		None
 38631 ;; Return value:  Size  Location     Type
 38632 ;;                  1  [STACK] void 
 38633 ;; Registers used:
 38634 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 38635 ;; Tracked objects:
 38636 ;;		On entry : 0/0
 38637 ;;		On exit  : 3F/0
 38638 ;;		Unchanged: 0/0
 38639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38644 ;;Total ram usage:        0 bytes
 38645 ;; Hardware stack levels used: 1
 38646 ;; Hardware stack levels required when called: 3
 38647 ;; This function calls:
 38648 ;;		Nothing
 38649 ;; This function is called by:
 38650 ;;		_init_display
 38651 ;;		_send_lcd_cmd
 38652 ;;		_send_lcd_cmd_long
 38653 ;;		_wait_lcd_done
 38654 ;; This function uses a reentrant model
 38655 ;;
 38656                           
 38657                           	psect	text87
 38658   01748E                     __ptext87:
 38659                           	callstack 0
 38660   01748E                     _wdtdelay:
 38661                           	callstack 25
 38662                           
 38663                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
 38664                           
 38665                           ; BSR set to: 0
 38666                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38667                           ;incstack = 0
 38668   01748E  0100               	movlb	0	; () banked
 38669   017490  6B9A               	clrf	wdtdelay@dcount& (0+255),b
 38670   017492  6B9B               	clrf	(wdtdelay@dcount+1)& (0+255),b
 38671   017494  6B9C               	clrf	(wdtdelay@dcount+2)& (0+255),b
 38672   017496  6B9D               	clrf	(wdtdelay@dcount+3)& (0+255),b
 38673   017498                     l1548:
 38674                           
 38675                           ; BSR set to: 0
 38676                           ;eadog.c: 27:   __nop();
 38677   017498  0000               	nop	
 38678   01749A  0004               	clrwdt		;# 
 38679                           
 38680                           ;eadog.c: 29:  };
 38681   01749C  0E01               	movlw	1
 38682   01749E  0100               	movlb	0	; () banked
 38683   0174A0  279A               	addwf	wdtdelay@dcount& (0+255),f,b
 38684   0174A2  0E00               	movlw	0
 38685   0174A4  239B               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 38686   0174A6  239C               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 38687   0174A8  239D               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 38688                           
 38689                           ; BSR set to: 0
 38690                           ;stkvar	_delay @ sp[(0)+-4]
 38691   0174AA  0EFC               	movlw	-4
 38692   0174AC  006F FF8C  F023    	movff	plusw1,btemp
 38693   0174B2  519A               	movf	wdtdelay@dcount& (0+255),w,b
 38694   0174B4  5C23               	subwf	btemp^0,w,c
 38695   0174B6  0EFD               	movlw	-3
 38696   0174B8  006F FF8C  F023    	movff	plusw1,btemp
 38697   0174BE  519B               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 38698   0174C0  5823               	subwfb	btemp^0,w,c
 38699   0174C2  0EFE               	movlw	-2
 38700   0174C4  006F FF8C  F023    	movff	plusw1,btemp
 38701   0174CA  519C               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 38702   0174CC  5823               	subwfb	btemp^0,w,c
 38703   0174CE  0EFF               	movlw	-1
 38704   0174D0  006F FF8C  F023    	movff	plusw1,btemp
 38705   0174D6  519D               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 38706   0174D8  5823               	subwfb	btemp^0,w,c
 38707   0174DA  B0D8               	btfsc	status,0,c
 38708   0174DC  D7DD               	goto	l1548
 38709                           
 38710                           ; BSR set to: 0
 38711                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 38712   0174DE  52E5               	movf	postdec1,f,c
 38713   0174E0  52E5               	movf	postdec1,f,c
 38714   0174E2  52E5               	movf	postdec1,f,c
 38715   0174E4  52E5               	movf	postdec1,f,c
 38716   0174E6  0012               	return		;funcret
 38717   0174E8                     __end_of_wdtdelay:
 38718                           	callstack 0
 38719                           
 38720 ;; *************** function _eaDogM_WriteString *****************
 38721 ;; Defined at:
 38722 ;;		line 184 in file "eadog.c"
 38723 ;; Parameters:    Size  Location     Type
 38724 ;;  strPtr          2  [STACK] PTR unsigned char 
 38725 ;;		 -> D$lcd(512), D@mconfig$F5154(514), V(387), 
 38726 ;; Auto vars:     Size  Location     Type
 38727 ;;		None
 38728 ;; Return value:  Size  Location     Type
 38729 ;;                  1  [STACK] void 
 38730 ;; Registers used:
 38731 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 38732 ;; Tracked objects:
 38733 ;;		On entry : 3F/0
 38734 ;;		On exit  : 3F/3B
 38735 ;;		Unchanged: 0/0
 38736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38741 ;;Total ram usage:        0 bytes
 38742 ;; Hardware stack levels used: 1
 38743 ;; Hardware stack levels required when called: 12
 38744 ;; This function calls:
 38745 ;;		_printf
 38746 ;;		_ringBufS_flush
 38747 ;;		_start_lcd
 38748 ;;		_strlen
 38749 ;;		_wait_lcd_set
 38750 ;; This function is called by:
 38751 ;;		_eaDogM_WriteStringAtPos
 38752 ;; This function uses a reentrant model
 38753 ;;
 38754                           
 38755                           	psect	text88
 38756   016D58                     __ptext88:
 38757                           	callstack 0
 38758   016D58                     _eaDogM_WriteString:
 38759                           	callstack 16
 38760                           
 38761                           ; BSR set to: 0
 38762                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38763                           ;incstack = 0
 38764                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 186:  do {
      +                           LATEbits.LATE2 = 1; } while(0);
 38765   016D58  84BE               	bsf	190,2,c	;volatile
 38766                           
 38767                           ;eadog.c: 187:  wait_lcd_set();
 38768   016D5A  EC49  F0C1         	call	_wait_lcd_set	;wreg free
 38769                           
 38770                           ; BSR set to: 0
 38771                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
 38772   016D5E  0E00               	movlw	0
 38773   016D60  6EE6               	movwf	postinc1,c
 38774   016D62  0060  F237  FFE6   	movff	_spi_link+6,postinc1
 38775   016D68  0060  F23B  FFE6   	movff	_spi_link+7,postinc1
 38776   016D6E  EC9B  F0B7         	call	_ringBufS_flush	;wreg free
 38777   016D72  94BC               	bcf	188,2,c	;volatile
 38778                           
 38779                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 38780                           ;stkvar	_strPtr @ sp[(0)+-2]
 38781   016D74  0EFE               	movlw	-2
 38782   016D76  006F FF8F FFE6     	movff	plusw1,postinc1
 38783   016D7C  006F FF8F FFE6     	movff	plusw1,postinc1
 38784   016D82  ECE1  F0B7         	call	_strlen	;wreg free
 38785   016D86  5024               	movf	(btemp+1)^0,w,c
 38786   016D88  E104               	bnz	u8940
 38787   016D8A  0E41               	movlw	65
 38788   016D8C  5C23               	subwf	btemp^0,w,c
 38789   016D8E  A0D8               	btfss	status,0,c
 38790   016D90  D00F               	goto	l12174
 38791   016D92                     u8940:
 38792                           
 38793                           ;stkvar	_strPtr @ sp[(0)+-2]
 38794   016D92  0EFE               	movlw	-2
 38795   016D94  006F FF8C  F02D    	movff	plusw1,btemp+10
 38796   016D9A  0EFF               	movlw	-1
 38797   016D9C  006F FF8C  F02E    	movff	plusw1,btemp+11
 38798   016DA2  0E40               	movlw	64
 38799   016DA4  242D               	addwf	(btemp+10)^0,w,c
 38800   016DA6  6ED9               	movwf	fsr2l,c
 38801   016DA8  0E00               	movlw	0
 38802   016DAA  202E               	addwfc	(btemp+11)^0,w,c
 38803   016DAC  6EDA               	movwf	fsr2h,c
 38804   016DAE  6ADF               	clrf	indf2,c
 38805   016DB0                     l12174:
 38806                           
 38807                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
 38808   016DB0  013B               	movlb	59	; () banked
 38809   016DB2  9FFC               	bcf	252,7,b	;volatile
 38810                           
 38811                           ; BSR set to: 59
 38812                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
 38813                           ;stkvar	_strPtr @ sp[(0)+-2]
 38814   016DB4  0EFE               	movlw	-2
 38815   016DB6  006F FF8F FFE6     	movff	plusw1,postinc1
 38816   016DBC  006F FF8F FFE6     	movff	plusw1,postinc1
 38817   016DC2  ECE1  F0B7         	call	_strlen	;wreg free
 38818   016DC6  0060  F08F  FBF7   	movff	btemp,15351	;volatile
 38819   016DCC  0060  F093  FBF8   	movff	btemp+1,15352	;volatile
 38820                           
 38821                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
 38822   016DD2  013B               	movlb	59	; () banked
 38823   016DD4  8FFC               	bsf	252,7,b	;volatile
 38824                           
 38825                           ; BSR set to: 59
 38826                           ;eadog.c: 195:  printf("%s", strPtr);
 38827                           ;stkvar	_strPtr @ sp[(0)+-2]
 38828   016DD6  0EFE               	movlw	-2
 38829   016DD8  006F FF8F FFE6     	movff	plusw1,postinc1
 38830   016DDE  006F FF8F FFE6     	movff	plusw1,postinc1
 38831   016DE4  0EFC               	movlw	low STR_26
 38832   016DE6  6EE6               	movwf	postinc1,c
 38833   016DE8  0EFF               	movlw	high STR_26
 38834   016DEA  6EE6               	movwf	postinc1,c
 38835   016DEC  0E04               	movlw	4
 38836   016DEE  6EE6               	movwf	postinc1,c
 38837   016DF0  EC8B  F0B9         	call	_printf	;wreg free
 38838                           
 38839                           ; BSR set to: 1
 38840                           ;eadog.c: 196:  start_lcd();
 38841   016DF4  EC4C  F0C1         	call	_start_lcd	;wreg free
 38842                           
 38843                           ; BSR set to: 59
 38844                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 38845   016DF8  52E5               	movf	postdec1,f,c
 38846   016DFA  52E5               	movf	postdec1,f,c
 38847   016DFC  0012               	return		;funcret
 38848   016DFE                     __end_of_eaDogM_WriteString:
 38849                           	callstack 0
 38850                           
 38851 ;; *************** function _wait_lcd_set *****************
 38852 ;; Defined at:
 38853 ;;		line 131 in file "eadog.c"
 38854 ;; Parameters:    Size  Location     Type
 38855 ;;		None
 38856 ;; Auto vars:     Size  Location     Type
 38857 ;;		None
 38858 ;; Return value:  Size  Location     Type
 38859 ;;                  1  [STACK] void 
 38860 ;; Registers used:
 38861 ;;		None
 38862 ;; Tracked objects:
 38863 ;;		On entry : 0/3D
 38864 ;;		On exit  : 3F/0
 38865 ;;		Unchanged: 0/0
 38866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38871 ;;Total ram usage:        0 bytes
 38872 ;; Hardware stack levels used: 1
 38873 ;; Hardware stack levels required when called: 3
 38874 ;; This function calls:
 38875 ;;		Nothing
 38876 ;; This function is called by:
 38877 ;;		_eaDogM_WriteString
 38878 ;;		_send_lcd_cmd_dma
 38879 ;; This function uses a reentrant model
 38880 ;;
 38881                           
 38882                           	psect	text89
 38883   018292                     __ptext89:
 38884                           	callstack 0
 38885   018292                     _wait_lcd_set:
 38886                           	callstack 24
 38887                           
 38888                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
 38889                           
 38890                           ; BSR set to: 59
 38891                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38892                           ;incstack = 0
 38893   018292  0100               	movlb	0	; () banked
 38894   018294  8787               	bsf	_spi_link& (0+255),3,b	;volatile
 38895                           
 38896                           ; BSR set to: 0
 38897                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 38898   018296  0012               	return		;funcret
 38899   018298                     __end_of_wait_lcd_set:
 38900                           	callstack 0
 38901                           
 38902 ;; *************** function _start_lcd *****************
 38903 ;; Defined at:
 38904 ;;		line 126 in file "eadog.c"
 38905 ;; Parameters:    Size  Location     Type
 38906 ;;		None
 38907 ;; Auto vars:     Size  Location     Type
 38908 ;;		None
 38909 ;; Return value:  Size  Location     Type
 38910 ;;                  1  [STACK] void 
 38911 ;; Registers used:
 38912 ;;		None
 38913 ;; Tracked objects:
 38914 ;;		On entry : 3F/1
 38915 ;;		On exit  : 3F/3B
 38916 ;;		Unchanged: 0/0
 38917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38922 ;;Total ram usage:        0 bytes
 38923 ;; Hardware stack levels used: 1
 38924 ;; Hardware stack levels required when called: 3
 38925 ;; This function calls:
 38926 ;;		Nothing
 38927 ;; This function is called by:
 38928 ;;		_eaDogM_WriteString
 38929 ;;		_send_lcd_cmd_dma
 38930 ;; This function uses a reentrant model
 38931 ;;
 38932                           
 38933                           	psect	text90
 38934   018298                     __ptext90:
 38935                           	callstack 0
 38936   018298                     _start_lcd:
 38937                           	callstack 24
 38938                           
 38939                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
 38940                           
 38941                           ; BSR set to: 0
 38942                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38943                           ;incstack = 0
 38944   018298  013B               	movlb	59	; () banked
 38945   01829A  8DFC               	bsf	252,6,b	;volatile
 38946                           
 38947                           ; BSR set to: 59
 38948                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 38949   01829C  0012               	return		;funcret
 38950   01829E                     __end_of_start_lcd:
 38951                           	callstack 0
 38952                           
 38953 ;; *************** function _ringBufS_flush *****************
 38954 ;; Defined at:
 38955 ;;		line 76 in file "ringbufs.c"
 38956 ;; Parameters:    Size  Location     Type
 38957 ;;  _this           2  [STACK] PTR struct ringBufS_t
 38958 ;;		 -> ring_buf1(67), 
 38959 ;;  clearBuffer     1  [STACK] const char 
 38960 ;; Auto vars:     Size  Location     Type
 38961 ;;		None
 38962 ;; Return value:  Size  Location     Type
 38963 ;;                  1  [STACK] void 
 38964 ;; Registers used:
 38965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 38966 ;; Tracked objects:
 38967 ;;		On entry : 3F/0
 38968 ;;		On exit  : 0/0
 38969 ;;		Unchanged: 0/0
 38970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38975 ;;Total ram usage:        0 bytes
 38976 ;; Hardware stack levels used: 1
 38977 ;; Hardware stack levels required when called: 4
 38978 ;; This function calls:
 38979 ;;		_memset
 38980 ;; This function is called by:
 38981 ;;		_eaDogM_WriteString
 38982 ;;		_send_lcd_cmd_dma
 38983 ;; This function uses a reentrant model
 38984 ;;
 38985                           
 38986                           	psect	text91
 38987   016F36                     __ptext91:
 38988                           	callstack 0
 38989   016F36                     _ringBufS_flush:
 38990                           	callstack 23
 38991                           
 38992                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 38993                           ;stkvar	__this @ sp[(0)+-2]
 38994                           
 38995                           ; BSR set to: 59
 38996                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38997                           ;incstack = 0
 38998   016F36  0EFE               	movlw	-2
 38999   016F38  006F FF8C  F02D    	movff	plusw1,btemp+10
 39000   016F3E  0EFF               	movlw	-1
 39001   016F40  006F FF8C  F02E    	movff	plusw1,btemp+11
 39002   016F46  0E42               	movlw	66
 39003   016F48  242D               	addwf	(btemp+10)^0,w,c
 39004   016F4A  6ED9               	movwf	fsr2l,c
 39005   016F4C  0E00               	movlw	0
 39006   016F4E  202E               	addwfc	(btemp+11)^0,w,c
 39007   016F50  6EDA               	movwf	fsr2h,c
 39008   016F52  6ADF               	clrf	indf2,c
 39009                           
 39010                           ;ringbufs.c: 79:  _this->head = 0;
 39011                           ;stkvar	__this @ sp[(0)+-2]
 39012   016F54  0EFE               	movlw	-2
 39013   016F56  006F FF8C  F02D    	movff	plusw1,btemp+10
 39014   016F5C  0EFF               	movlw	-1
 39015   016F5E  006F FF8C  F02E    	movff	plusw1,btemp+11
 39016   016F64  0E40               	movlw	64
 39017   016F66  242D               	addwf	(btemp+10)^0,w,c
 39018   016F68  6ED9               	movwf	fsr2l,c
 39019   016F6A  0E00               	movlw	0
 39020   016F6C  202E               	addwfc	(btemp+11)^0,w,c
 39021   016F6E  6EDA               	movwf	fsr2h,c
 39022   016F70  6ADF               	clrf	indf2,c
 39023                           
 39024                           ;ringbufs.c: 80:  _this->tail = 0;
 39025                           ;stkvar	__this @ sp[(0)+-2]
 39026   016F72  0EFE               	movlw	-2
 39027   016F74  006F FF8C  F02D    	movff	plusw1,btemp+10
 39028   016F7A  0EFF               	movlw	-1
 39029   016F7C  006F FF8C  F02E    	movff	plusw1,btemp+11
 39030   016F82  0E41               	movlw	65
 39031   016F84  242D               	addwf	(btemp+10)^0,w,c
 39032   016F86  6ED9               	movwf	fsr2l,c
 39033   016F88  0E00               	movlw	0
 39034   016F8A  202E               	addwfc	(btemp+11)^0,w,c
 39035   016F8C  6EDA               	movwf	fsr2h,c
 39036   016F8E  6ADF               	clrf	indf2,c
 39037                           
 39038                           ;ringbufs.c: 81:  if (clearBuffer) {
 39039                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 39040   016F90  0EFD               	movlw	-3
 39041   016F92  50E3               	movf	plusw1,w,c
 39042   016F94  B4D8               	btfsc	status,2,c
 39043   016F96  D011               	goto	l1694
 39044                           
 39045                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 39046   016F98  0E40               	movlw	64
 39047   016F9A  6EE6               	movwf	postinc1,c
 39048   016F9C  0E00               	movlw	0
 39049   016F9E  6EE6               	movwf	postinc1,c
 39050   016FA0  0E00               	movlw	0
 39051   016FA2  6EE6               	movwf	postinc1,c
 39052   016FA4  0E00               	movlw	0
 39053   016FA6  6EE6               	movwf	postinc1,c
 39054                           
 39055                           ;stkvar	__this @ sp[(-4)+-2]
 39056   016FA8  0EFA               	movlw	-6
 39057   016FAA  006F FF8F FFE6     	movff	plusw1,postinc1
 39058   016FB0  006F FF8F FFE6     	movff	plusw1,postinc1
 39059   016FB6  ECFF  F0B6         	call	_memset	;wreg free
 39060   016FBA                     l1694:
 39061                           
 39062                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 39063   016FBA  52E5               	movf	postdec1,f,c
 39064   016FBC  52E5               	movf	postdec1,f,c
 39065   016FBE  52E5               	movf	postdec1,f,c
 39066   016FC0  0012               	return		;funcret
 39067   016FC2                     __end_of_ringBufS_flush:
 39068                           	callstack 0
 39069                           
 39070 ;; *************** function _memset *****************
 39071 ;; Defined at:
 39072 ;;		line 3 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/memset.c"
 39073 ;; Parameters:    Size  Location     Type
 39074 ;;  dest            2  [STACK] PTR void 
 39075 ;;		 -> ring_buf2(67), ring_buf1(67), 
 39076 ;;  c               2  [STACK] int 
 39077 ;;  n               2  [STACK] unsigned int 
 39078 ;; Auto vars:     Size  Location     Type
 39079 ;;  p               2  [STACK] PTR unsigned char 
 39080 ;;		 -> ring_buf2(67), ring_buf1(67), 
 39081 ;; Return value:  Size  Location     Type
 39082 ;;                  2  [STACK] PTR void 
 39083 ;; Registers used:
 39084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 39085 ;; Tracked objects:
 39086 ;;		On entry : 0/0
 39087 ;;		On exit  : 0/0
 39088 ;;		Unchanged: 0/0
 39089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39094 ;;Total ram usage:        0 bytes
 39095 ;; Hardware stack levels used: 1
 39096 ;; Hardware stack levels required when called: 3
 39097 ;; This function calls:
 39098 ;;		Nothing
 39099 ;; This function is called by:
 39100 ;;		_ringBufS_init
 39101 ;;		_ringBufS_flush
 39102 ;; This function uses a reentrant model
 39103 ;;
 39104                           
 39105                           	psect	text92
 39106   016DFE                     __ptext92:
 39107                           	callstack 0
 39108   016DFE                     _memset:
 39109                           	callstack 0
 39110                           
 39111                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39112   016DFE  52E6               	movf	postinc1,f,c
 39113   016E00  52E6               	movf	postinc1,f,c
 39114                           
 39115                           ;stkvar	_dest @ sp[(-2)+-2]
 39116                           
 39117                           ;incstack = 0
 39118   016E02  0EFC               	movlw	-4
 39119   016E04  006F FF8C  F02D    	movff	plusw1,btemp+10
 39120   016E0A  0EFD               	movlw	-3
 39121   016E0C  006F FF8C  F02E    	movff	plusw1,btemp+11
 39122                           
 39123                           ;stkvar	_p @ sp[(-2)+0]
 39124   016E12  0EFF               	movlw	-1
 39125   016E14  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 39126   016E1A  0EFE               	movlw	-2
 39127   016E1C  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 39128   016E22  D01D               	goto	l12108
 39129   016E24                     l12104:
 39130                           
 39131                           ;stkvar	_c @ sp[(-2)+-4]
 39132                           ;stkvar	_p @ sp[(-2)+0]
 39133   016E24  0EFE               	movlw	-2
 39134   016E26  006F FF8F FFD9     	movff	plusw1,fsr2l
 39135   016E2C  0EFF               	movlw	-1
 39136   016E2E  006F FF8F FFDA     	movff	plusw1,fsr2h
 39137   016E34  0EFA               	movlw	-6
 39138   016E36  006F FF8F FFDF     	movff	plusw1,indf2
 39139                           
 39140                           ;stkvar	_p @ sp[(-2)+0]
 39141   016E3C  0EFE               	movlw	-2
 39142   016E3E  50E3               	movf	plusw1,w,c
 39143   016E40  0F01               	addlw	1
 39144   016E42  6E23               	movwf	btemp^0,c
 39145   016E44  0EFE               	movlw	-2
 39146   016E46  0060  F08F  FFE3   	movff	btemp,plusw1
 39147   016E4C  6A23               	clrf	btemp^0,c
 39148   016E4E  0EFF               	movlw	-1
 39149   016E50  50E3               	movf	plusw1,w,c
 39150   016E52  2023               	addwfc	btemp^0,w,c
 39151   016E54  6E23               	movwf	btemp^0,c
 39152   016E56  0EFF               	movlw	-1
 39153   016E58  0060  F08F  FFE3   	movff	btemp,plusw1
 39154   016E5E                     l12108:
 39155                           
 39156                           ;stkvar	_n @ sp[(-2)+-6]
 39157   016E5E  0EF8               	movlw	-8
 39158   016E60  006F FF8C  F023    	movff	plusw1,btemp
 39159   016E66  0E01               	movlw	1
 39160   016E68  5E23               	subwf	btemp^0,f,c
 39161   016E6A  0EF8               	movlw	-8
 39162   016E6C  0060  F08F  FFE3   	movff	btemp,plusw1
 39163   016E72  0EF9               	movlw	-7
 39164   016E74  006F FF8C  F023    	movff	plusw1,btemp
 39165   016E7A  0E00               	movlw	0
 39166   016E7C  5A23               	subwfb	btemp^0,f,c
 39167   016E7E  0EF9               	movlw	-7
 39168   016E80  0060  F08F  FFE3   	movff	btemp,plusw1
 39169   016E86  0EF8               	movlw	-8
 39170   016E88  28E3               	incf	plusw1,w,c
 39171   016E8A  E1CC               	bnz	l12104
 39172   016E8C  0EF9               	movlw	-7
 39173   016E8E  28E3               	incf	plusw1,w,c
 39174   016E90  A4D8               	btfss	status,2,c
 39175   016E92  D7C8               	goto	l12104
 39176                           
 39177                           ; _memset: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 39178   016E94  0EF8               	movlw	248
 39179   016E96  26E1               	addwf	fsr1l,f,c
 39180   016E98  0EFF               	movlw	255
 39181   016E9A  22E2               	addwfc	fsr1h,f,c
 39182   016E9C  0012               	return		;funcret
 39183   016E9E                     __end_of_memset:
 39184                           	callstack 0
 39185                           
 39186 ;; *************** function _printf *****************
 39187 ;; Defined at:
 39188 ;;		line 5 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/printf.c"
 39189 ;; Parameters:    Size  Location     Type
 39190 ;;  fmt             2  [STACK] PTR const unsigned char 
 39191 ;;		 -> STR_28(3), STR_27(3), STR_26(3), 
 39192 ;; Auto vars:     Size  Location     Type
 39193 ;;  ap              2  [STACK] PTR void [1]
 39194 ;;		 -> ?_printf(2), ?_sprintf(2), 
 39195 ;;  ret             2    0        int 
 39196 ;; Return value:  Size  Location     Type
 39197 ;;                  2  [STACK] int 
 39198 ;; Registers used:
 39199 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 39200 ;; Tracked objects:
 39201 ;;		On entry : 3F/3B
 39202 ;;		On exit  : 3F/1
 39203 ;;		Unchanged: 0/0
 39204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39209 ;;Total ram usage:        0 bytes
 39210 ;; Hardware stack levels used: 1
 39211 ;; Hardware stack levels required when called: 11
 39212 ;; This function calls:
 39213 ;;		_vfprintf
 39214 ;; This function is called by:
 39215 ;;		_eaDogM_WriteString
 39216 ;;		_send_lcd_cmd_dma
 39217 ;; This function uses a reentrant model
 39218 ;;
 39219                           
 39220                           	psect	text93
 39221   017316                     __ptext93:
 39222                           	callstack 0
 39223   017316                     _printf:
 39224                           	callstack 0
 39225                           
 39226                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39227   017316  52E6               	movf	postinc1,f,c
 39228   017318  52E6               	movf	postinc1,f,c
 39229                           
 39230                           ;stkvar	?_printf @ sp[(-2)+-3]
 39231                           
 39232                           ;incstack = 0
 39233   01731A  0EFB               	movlw	251
 39234   01731C  24E1               	addwf	fsr1l,w,c
 39235   01731E  6E2D               	movwf	(btemp+10)^0,c
 39236   017320  0EFF               	movlw	255
 39237   017322  20E2               	addwfc	fsr1h,w,c
 39238   017324  6E2E               	movwf	(btemp+11)^0,c
 39239                           
 39240                           ;stkvar	_ap @ sp[(-2)+0]
 39241   017326  0EFF               	movlw	-1
 39242   017328  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 39243   01732E  0EFE               	movlw	-2
 39244   017330  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 39245                           
 39246                           ;stkvar	_ap @ sp[(-2)+0]
 39247   017336  0EFE               	movlw	254
 39248   017338  24E1               	addwf	fsr1l,w,c
 39249   01733A  6E23               	movwf	btemp^0,c
 39250   01733C  0EFF               	movlw	255
 39251   01733E  20E2               	addwfc	fsr1h,w,c
 39252   017340  6E24               	movwf	(btemp+1)^0,c
 39253   017342  0060  F08F  FFE6   	movff	btemp,postinc1
 39254   017348  0060  F093  FFE6   	movff	btemp+1,postinc1
 39255                           
 39256                           ;stkvar	_fmt @ sp[(-4)+-3]
 39257   01734E  0EF9               	movlw	-7
 39258   017350  006F FF8F FFE6     	movff	plusw1,postinc1
 39259   017356  006F FF8F FFE6     	movff	plusw1,postinc1
 39260   01735C  0E00               	movlw	0
 39261   01735E  6EE6               	movwf	postinc1,c
 39262   017360  0E00               	movlw	0
 39263   017362  6EE6               	movwf	postinc1,c
 39264   017364  EC58  F0B6         	call	_vfprintf	;wreg free
 39265                           
 39266                           ; BSR set to: 1
 39267                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 39268   017368  52E5               	movf	postdec1,f,c
 39269   01736A  52E5               	movf	postdec1,f,c
 39270   01736C  52E5               	movf	postdec1,f,c
 39271   01736E  50E7               	movf	indf1,w,c
 39272   017370  5EE1               	subwf	fsr1l,f,c
 39273   017372  0E00               	movlw	0
 39274   017374  5AE2               	subwfb	fsr1h,f,c
 39275   017376  0012               	return		;funcret
 39276   017378                     __end_of_printf:
 39277                           	callstack 0
 39278                           
 39279 ;; *************** function _sprintf *****************
 39280 ;; Defined at:
 39281 ;;		line 9 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/nf_sprintf.c"
 39282 ;; Parameters:    Size  Location     Type
 39283 ;;  s               2  [STACK] PTR unsigned char 
 39284 ;;		 -> D$lcd(512), D@mconfig$F5154(514), V(387), 
 39285 ;;  fmt             2  [STACK] PTR const unsigned char 
 39286 ;;		 -> STR_68(3), STR_67(3), STR_66(19), STR_65(19), 
 39287 ;;		 -> STR_64(19), STR_63(19), STR_62(25), STR_61(26), 
 39288 ;;		 -> STR_60(21), STR_59(22), STR_58(21), STR_57(24), 
 39289 ;;		 -> STR_56(19), STR_55(19), STR_54(20), STR_53(18), 
 39290 ;;		 -> STR_52(20), STR_51(18), STR_50(20), STR_49(18), 
 39291 ;;		 -> STR_48(20), STR_47(22), STR_46(24), STR_45(15), 
 39292 ;;		 -> STR_44(15), STR_43(15), STR_42(10), STR_41(10), 
 39293 ;;		 -> STR_40(19), STR_39(19), STR_36(21), STR_35(26), 
 39294 ;;		 -> STR_34(26), STR_33(20), msg99(56), msg2(86), 
 39295 ;;		 -> msg1(88), msg0(89), STR_25(29), STR_24(26), 
 39296 ;;		 -> STR_23(21), STR_22(4), STR_21(19), STR_20(26), 
 39297 ;;		 -> STR_19(21), STR_18(20), STR_17(21), STR_16(21), 
 39298 ;;		 -> STR_15(18), STR_14(24), STR_13(24), STR_12(21), 
 39299 ;;		 -> STR_11(21), STR_10(21), STR_9(16), STR_8(17), 
 39300 ;;		 -> STR_6(15), STR_5(17), STR_4(15), STR_2(15), 
 39301 ;;		 -> STR_1(17), 
 39302 ;; Auto vars:     Size  Location     Type
 39303 ;;  f              11  [STACK] struct _IO_FILE
 39304 ;;  ap              2  [STACK] PTR void [1]
 39305 ;;		 -> ?_printf(2), ?_sprintf(2), 
 39306 ;;  ret             2    0        int 
 39307 ;; Return value:  Size  Location     Type
 39308 ;;                  2  [STACK] int 
 39309 ;; Registers used:
 39310 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 39311 ;; Tracked objects:
 39312 ;;		On entry : 0/0
 39313 ;;		On exit  : 3F/1
 39314 ;;		Unchanged: 0/0
 39315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39320 ;;Total ram usage:        0 bytes
 39321 ;; Hardware stack levels used: 1
 39322 ;; Hardware stack levels required when called: 11
 39323 ;; This function calls:
 39324 ;;		_vfprintf
 39325 ;; This function is called by:
 39326 ;;		_main
 39327 ;;		_terminal_format
 39328 ;;		_s10f1_opcmd
 39329 ;;		_ee_logger
 39330 ;;		_check_help
 39331 ;;		_vterm_dump
 39332 ;;		_vterm_sequence
 39333 ;;		_MyeaDogM_WriteStringAtPos
 39334 ;; This function uses a reentrant model
 39335 ;;
 39336                           
 39337                           	psect	text94
 39338   016614                     __ptext94:
 39339                           	callstack 0
 39340   016614                     _sprintf:
 39341                           	callstack 0
 39342                           
 39343                           ; BSR set to: 1
 39344                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 18, argsize = 4 v
      +                          argsize = 0, retsize = 0 argfudge = 0
 39345   016614  0E0D               	movlw	13
 39346   016616  26E1               	addwf	fsr1l,f,c
 39347   016618  0E00               	movlw	0
 39348   01661A  22E2               	addwfc	fsr1h,f,c
 39349                           
 39350                           ;stkvar	?_sprintf @ sp[(-13)+-3]
 39351                           
 39352                           ;incstack = 0
 39353   01661C  0EEE               	movlw	238
 39354   01661E  24E1               	addwf	fsr1l,w,c
 39355   016620  6E2D               	movwf	(btemp+10)^0,c
 39356   016622  0EFF               	movlw	255
 39357   016624  20E2               	addwfc	fsr1h,w,c
 39358   016626  6E2E               	movwf	(btemp+11)^0,c
 39359                           
 39360                           ;stkvar	_ap @ sp[(-13)+11]
 39361   016628  0EFF               	movlw	-1
 39362   01662A  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 39363   016630  0EFE               	movlw	-2
 39364   016632  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 39365                           
 39366                           ;stkvar	_s @ sp[(-13)+-3]
 39367   016638  0EF0               	movlw	-16
 39368   01663A  006F FF8C  F02D    	movff	plusw1,btemp+10
 39369   016640  0EF1               	movlw	-15
 39370   016642  006F FF8C  F02E    	movff	plusw1,btemp+11
 39371                           
 39372                           ;stkvar	_f @ sp[(-13)+0]
 39373   016648  0EF4               	movlw	-12
 39374   01664A  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 39375   016650  0EF3               	movlw	-13
 39376   016652  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 39377                           
 39378                           ;stkvar	_f @ sp[(-13)+0]
 39379   016658  0EF5               	movlw	245
 39380   01665A  24E1               	addwf	fsr1l,w,c
 39381   01665C  6ED9               	movwf	fsr2l,c
 39382   01665E  0EFF               	movlw	255
 39383   016660  20E2               	addwfc	fsr1h,w,c
 39384   016662  6EDA               	movwf	fsr2h,c
 39385   016664  6ADE               	clrf	postinc2,c
 39386   016666  6ADD               	clrf	postdec2,c
 39387                           
 39388                           ;stkvar	_f @ sp[(-13)+0]
 39389   016668  0EFC               	movlw	252
 39390   01666A  24E1               	addwf	fsr1l,w,c
 39391   01666C  6ED9               	movwf	fsr2l,c
 39392   01666E  0EFF               	movlw	255
 39393   016670  20E2               	addwfc	fsr1h,w,c
 39394   016672  6EDA               	movwf	fsr2h,c
 39395   016674  6ADE               	clrf	postinc2,c
 39396   016676  6ADD               	clrf	postdec2,c
 39397                           
 39398                           ;stkvar	_ap @ sp[(-13)+11]
 39399   016678  0EFE               	movlw	254
 39400   01667A  24E1               	addwf	fsr1l,w,c
 39401   01667C  6E23               	movwf	btemp^0,c
 39402   01667E  0EFF               	movlw	255
 39403   016680  20E2               	addwfc	fsr1h,w,c
 39404   016682  6E24               	movwf	(btemp+1)^0,c
 39405   016684  0060  F08F  FFE6   	movff	btemp,postinc1
 39406   01668A  0060  F093  FFE6   	movff	btemp+1,postinc1
 39407                           
 39408                           ;stkvar	_fmt @ sp[(-15)+-5]
 39409   016690  0EEC               	movlw	-20
 39410   016692  006F FF8F FFE6     	movff	plusw1,postinc1
 39411   016698  006F FF8F FFE6     	movff	plusw1,postinc1
 39412                           
 39413                           ;stkvar	_f @ sp[(-17)+0]
 39414   01669E  0EEF               	movlw	239
 39415   0166A0  24E1               	addwf	fsr1l,w,c
 39416   0166A2  6E23               	movwf	btemp^0,c
 39417   0166A4  0EFF               	movlw	255
 39418   0166A6  20E2               	addwfc	fsr1h,w,c
 39419   0166A8  6E24               	movwf	(btemp+1)^0,c
 39420   0166AA  0060  F08F  FFE6   	movff	btemp,postinc1
 39421   0166B0  0060  F093  FFE6   	movff	btemp+1,postinc1
 39422   0166B6  EC58  F0B6         	call	_vfprintf	;wreg free
 39423                           
 39424                           ; BSR set to: 1
 39425                           ;stkvar	_f @ sp[(-13)+0]
 39426   0166BA  0EF5               	movlw	245
 39427   0166BC  24E1               	addwf	fsr1l,w,c
 39428   0166BE  6ED9               	movwf	fsr2l,c
 39429   0166C0  0EFF               	movlw	255
 39430   0166C2  20E2               	addwfc	fsr1h,w,c
 39431   0166C4  6EDA               	movwf	fsr2h,c
 39432   0166C6  006F FF78  F02D    	movff	postinc2,btemp+10
 39433   0166CC  006F FF74  F02E    	movff	postdec2,btemp+11
 39434                           
 39435                           ;stkvar	_s @ sp[(-13)+-3]
 39436   0166D2  0EF0               	movlw	-16
 39437   0166D4  006F FF8C  F02B    	movff	plusw1,btemp+8
 39438   0166DA  0EF1               	movlw	-15
 39439   0166DC  006F FF8C  F02C    	movff	plusw1,btemp+9
 39440   0166E2  502D               	movf	(btemp+10)^0,w,c
 39441   0166E4  242B               	addwf	(btemp+8)^0,w,c
 39442   0166E6  6ED9               	movwf	fsr2l,c
 39443   0166E8  502E               	movf	(btemp+11)^0,w,c
 39444   0166EA  202C               	addwfc	(btemp+9)^0,w,c
 39445   0166EC  6EDA               	movwf	fsr2h,c
 39446   0166EE  6ADF               	clrf	indf2,c
 39447                           
 39448                           ; BSR set to: 1
 39449                           ; _sprintf: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 18, arg
      +                          size = 4, vargsize = 0
 39450   0166F0  0EF3               	movlw	243
 39451   0166F2  26E1               	addwf	fsr1l,f,c
 39452   0166F4  0EFF               	movlw	255
 39453   0166F6  22E2               	addwfc	fsr1h,f,c
 39454   0166F8  52E5               	movf	postdec1,f,c
 39455   0166FA  50E7               	movf	indf1,w,c
 39456   0166FC  5EE1               	subwf	fsr1l,f,c
 39457   0166FE  0E00               	movlw	0
 39458   016700  5AE2               	subwfb	fsr1h,f,c
 39459   016702  0012               	return		;funcret
 39460   016704                     __end_of_sprintf:
 39461                           	callstack 0
 39462                           
 39463 ;; *************** function _vfprintf *****************
 39464 ;; Defined at:
 39465 ;;		line 1817 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
 39466 ;; Parameters:    Size  Location     Type
 39467 ;;  fp              2  [STACK] PTR struct _IO_FILE
 39468 ;;		 -> f(11), NULL(0), 
 39469 ;;  fmt             2  [STACK] PTR const unsigned char 
 39470 ;;		 -> STR_68(3), STR_67(3), STR_66(19), STR_65(19), 
 39471 ;;		 -> STR_64(19), STR_63(19), STR_62(25), STR_61(26), 
 39472 ;;		 -> STR_60(21), STR_59(22), STR_58(21), STR_57(24), 
 39473 ;;		 -> STR_56(19), STR_55(19), STR_54(20), STR_53(18), 
 39474 ;;		 -> STR_52(20), STR_51(18), STR_50(20), STR_49(18), 
 39475 ;;		 -> STR_48(20), STR_47(22), STR_46(24), STR_45(15), 
 39476 ;;		 -> STR_44(15), STR_43(15), STR_42(10), STR_41(10), 
 39477 ;;		 -> STR_40(19), STR_39(19), STR_36(21), STR_35(26), 
 39478 ;;		 -> STR_34(26), STR_33(20), msg99(56), msg2(86), 
 39479 ;;		 -> msg1(88), msg0(89), STR_28(3), STR_27(3), 
 39480 ;;		 -> STR_26(3), STR_25(29), STR_24(26), STR_23(21), 
 39481 ;;		 -> STR_22(4), STR_21(19), STR_20(26), STR_19(21), 
 39482 ;;		 -> STR_18(20), STR_17(21), STR_16(21), STR_15(18), 
 39483 ;;		 -> STR_14(24), STR_13(24), STR_12(21), STR_11(21), 
 39484 ;;		 -> STR_10(21), STR_9(16), STR_8(17), STR_6(15), 
 39485 ;;		 -> STR_5(17), STR_4(15), STR_2(15), STR_1(17), 
 39486 ;;  ap              2  [STACK] PTR PTR void 
 39487 ;;		 -> ap(2), ap(2), 
 39488 ;; Auto vars:     Size  Location     Type
 39489 ;;  cfmt            2  [STACK] PTR unsigned char 
 39490 ;;		 -> STR_68(3), STR_67(3), STR_66(19), STR_65(19), 
 39491 ;;		 -> STR_64(19), STR_63(19), STR_62(25), STR_61(26), 
 39492 ;;		 -> STR_60(21), STR_59(22), STR_58(21), STR_57(24), 
 39493 ;;		 -> STR_56(19), STR_55(19), STR_54(20), STR_53(18), 
 39494 ;;		 -> STR_52(20), STR_51(18), STR_50(20), STR_49(18), 
 39495 ;;		 -> STR_48(20), STR_47(22), STR_46(24), STR_45(15), 
 39496 ;;		 -> STR_44(15), STR_43(15), STR_42(10), STR_41(10), 
 39497 ;;		 -> STR_40(19), STR_39(19), STR_36(21), STR_35(26), 
 39498 ;;		 -> STR_34(26), STR_33(20), msg99(56), msg2(86), 
 39499 ;;		 -> msg1(88), msg0(89), STR_28(3), STR_27(3), 
 39500 ;;		 -> STR_26(3), STR_25(29), STR_24(26), STR_23(21), 
 39501 ;;		 -> STR_22(4), STR_21(19), STR_20(26), STR_19(21), 
 39502 ;;		 -> STR_18(20), STR_17(21), STR_16(21), STR_15(18), 
 39503 ;;		 -> STR_14(24), STR_13(24), STR_12(21), STR_11(21), 
 39504 ;;		 -> STR_10(21), STR_9(16), STR_8(17), STR_6(15), 
 39505 ;;		 -> STR_5(17), STR_4(15), STR_2(15), STR_1(17), 
 39506 ;; Return value:  Size  Location     Type
 39507 ;;                  2  [STACK] int 
 39508 ;; Registers used:
 39509 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 39510 ;; Tracked objects:
 39511 ;;		On entry : 0/3B
 39512 ;;		On exit  : 3F/1
 39513 ;;		Unchanged: 0/0
 39514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39519 ;;Total ram usage:        0 bytes
 39520 ;; Hardware stack levels used: 1
 39521 ;; Hardware stack levels required when called: 10
 39522 ;; This function calls:
 39523 ;;		_vfpfcnvrt
 39524 ;; This function is called by:
 39525 ;;		_sprintf
 39526 ;;		_printf
 39527 ;; This function uses a reentrant model
 39528 ;;
 39529                           
 39530                           	psect	text95
 39531   016CB0                     __ptext95:
 39532                           	callstack 0
 39533   016CB0                     _vfprintf:
 39534                           	callstack 0
 39535                           
 39536                           ; BSR set to: 1
 39537                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39538   016CB0  52E6               	movf	postinc1,f,c
 39539   016CB2  52E6               	movf	postinc1,f,c
 39540                           
 39541                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1817: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1
      +                          818: {;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1820:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1822:     cfmt = (char *)fmt;
 39542                           ;stkvar	_fmt @ sp[(-2)+-4]
 39543                           
 39544                           ;incstack = 0
 39545   016CB4  0EFA               	movlw	-6
 39546   016CB6  006F FF8C  F02D    	movff	plusw1,btemp+10
 39547   016CBC  0EFB               	movlw	-5
 39548   016CBE  006F FF8C  F02E    	movff	plusw1,btemp+11
 39549                           
 39550                           ;stkvar	_cfmt @ sp[(-2)+0]
 39551   016CC4  0EFF               	movlw	-1
 39552   016CC6  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 39553   016CCC  0EFE               	movlw	-2
 39554   016CCE  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 39555                           
 39556                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1824:     nout = 0;
 39557   016CD4  0101               	movlb	1	; () banked
 39558   016CD6  6BBF               	clrf	_nout& (0+255),b
 39559   016CD8  6BC0               	clrf	(_nout+1)& (0+255),b
 39560                           
 39561                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1826:     while (*cfmt) {
 39562   016CDA  D021               	goto	l12116
 39563   016CDC                     l12114:
 39564                           
 39565                           ; BSR set to: 1
 39566                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1828:         nout +=
 39567                           ;stkvar	_ap @ sp[(-2)+-6]
 39568   016CDC  0EF8               	movlw	-8
 39569   016CDE  006F FF8F FFE6     	movff	plusw1,postinc1
 39570   016CE4  006F FF8F FFE6     	movff	plusw1,postinc1
 39571                           
 39572                           ;stkvar	_cfmt @ sp[(-4)+0]
 39573   016CEA  0EFC               	movlw	252
 39574   016CEC  24E1               	addwf	fsr1l,w,c
 39575   016CEE  6E23               	movwf	btemp^0,c
 39576   016CF0  0EFF               	movlw	255
 39577   016CF2  20E2               	addwfc	fsr1h,w,c
 39578   016CF4  6E24               	movwf	(btemp+1)^0,c
 39579   016CF6  0060  F08F  FFE6   	movff	btemp,postinc1
 39580   016CFC  0060  F093  FFE6   	movff	btemp+1,postinc1
 39581                           
 39582                           ;stkvar	_fp @ sp[(-6)+-2]
 39583   016D02  0EF8               	movlw	-8
 39584   016D04  006F FF8F FFE6     	movff	plusw1,postinc1
 39585   016D0A  006F FF8F FFE6     	movff	plusw1,postinc1
 39586   016D10  EC00  F080         	call	_vfpfcnvrt	;wreg free
 39587   016D14  5023               	movf	btemp^0,w,c
 39588   016D16  0101               	movlb	1	; () banked
 39589   016D18  27BF               	addwf	_nout& (0+255),f,b
 39590   016D1A  5024               	movf	(btemp+1)^0,w,c
 39591   016D1C  23C0               	addwfc	(_nout+1)& (0+255),f,b
 39592   016D1E                     l12116:
 39593                           
 39594                           ; BSR set to: 1
 39595                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1826:     while (*cfmt) {
 39596                           ;stkvar	_cfmt @ sp[(-2)+0]
 39597   016D1E  50E1               	movf	fsr1l,w,c
 39598   016D20  0FFE               	addlw	-2
 39599   016D22  6ED9               	movwf	fsr2l,c
 39600   016D24  50E2               	movf	fsr1h,w,c
 39601   016D26  6EDA               	movwf	fsr2h,c
 39602   016D28  0EFF               	movlw	255
 39603   016D2A  22DA               	addwfc	fsr2h,f,c
 39604   016D2C  006F FF7B FFF6     	movff	postinc2,tblptrl
 39605   016D32  006F FF77 FFF7     	movff	postdec2,tblptrh
 39606   016D38                     	if	0	;tblptru may be non-zero
 39607   016D38                     	endif
 39608   016D38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 39609   016D38  0E00               	movlw	low (__mediumconst shr (0+16))
 39610   016D3A  6EF8               	movwf	tblptru,c
 39611   016D3C                     	endif
 39612   016D3C  0008               	tblrd		*
 39613   016D3E  50F5               	movf	tablat,w,c
 39614   016D40  0900               	iorlw	0
 39615   016D42  A4D8               	btfss	status,2,c
 39616   016D44  D7CB               	goto	l12114
 39617                           
 39618                           ; BSR set to: 1
 39619                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1835:  return 0;
 39620   016D46  0E00               	movlw	0
 39621   016D48  6E23               	movwf	btemp^0,c
 39622   016D4A  0E00               	movlw	0
 39623   016D4C  6E24               	movwf	(btemp+1)^0,c
 39624                           
 39625                           ; BSR set to: 1
 39626                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 39627   016D4E  0EF8               	movlw	248
 39628   016D50  26E1               	addwf	fsr1l,f,c
 39629   016D52  0EFF               	movlw	255
 39630   016D54  22E2               	addwfc	fsr1h,f,c
 39631   016D56  0012               	return		;funcret
 39632   016D58                     __end_of_vfprintf:
 39633                           	callstack 0
 39634                           
 39635 ;; *************** function _vfpfcnvrt *****************
 39636 ;; Defined at:
 39637 ;;		line 1177 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
 39638 ;; Parameters:    Size  Location     Type
 39639 ;;  fp              2  [STACK] PTR struct _IO_FILE
 39640 ;;		 -> f(11), NULL(0), 
 39641 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 39642 ;;		 -> cfmt(2), 
 39643 ;;  ap              2  [STACK] PTR PTR void 
 39644 ;;		 -> ap(2), ap(2), 
 39645 ;; Auto vars:     Size  Location     Type
 39646 ;;  convarg         4  [STACK] struct .
 39647 ;;  cp              2  [STACK] PTR unsigned char 
 39648 ;;		 -> STR_68(3), STR_67(3), STR_66(19), STR_65(19), 
 39649 ;;		 -> STR_64(19), STR_63(19), STR_62(25), STR_61(26), 
 39650 ;;		 -> STR_60(21), STR_59(22), STR_58(21), STR_57(24), 
 39651 ;;		 -> STR_56(19), STR_55(19), STR_54(20), STR_53(18), 
 39652 ;;		 -> STR_52(20), STR_51(18), STR_50(20), STR_49(18), 
 39653 ;;		 -> STR_48(20), STR_47(22), STR_46(24), STR_45(15), 
 39654 ;;		 -> STR_44(15), STR_43(15), STR_42(10), STR_41(10), 
 39655 ;;		 -> STR_40(19), STR_39(19), STR_36(21), STR_35(26), 
 39656 ;;		 -> STR_34(26), STR_33(20), msg99(56), msg2(86), 
 39657 ;;		 -> msg1(88), msg0(89), STR_28(3), STR_27(3), 
 39658 ;;		 -> STR_26(3), STR_25(29), STR_24(26), STR_23(21), 
 39659 ;;		 -> STR_22(4), STR_21(19), STR_20(26), STR_19(21), 
 39660 ;;		 -> STR_18(20), STR_17(21), STR_16(21), STR_15(18), 
 39661 ;;		 -> STR_14(24), STR_13(24), STR_12(21), STR_11(21), 
 39662 ;;		 -> STR_10(21), STR_9(16), STR_8(17), STR_6(15), 
 39663 ;;		 -> STR_5(17), STR_4(15), STR_2(15), STR_1(17), 
 39664 ;;  c               1  [STACK] unsigned char 
 39665 ;;  done            1  [STACK] _Bool 
 39666 ;; Return value:  Size  Location     Type
 39667 ;;                  2  [STACK] int 
 39668 ;; Registers used:
 39669 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 39670 ;; Tracked objects:
 39671 ;;		On entry : 0/1
 39672 ;;		On exit  : 0/0
 39673 ;;		Unchanged: 0/0
 39674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39679 ;;Total ram usage:        0 bytes
 39680 ;; Hardware stack levels used: 1
 39681 ;; Hardware stack levels required when called: 9
 39682 ;; This function calls:
 39683 ;;		_ctoa
 39684 ;;		_dtoa
 39685 ;;		_fputc
 39686 ;;		_otoa
 39687 ;;		_read_prec_or_width
 39688 ;;		_stoa
 39689 ;;		_utoa
 39690 ;;		_xtoa
 39691 ;; This function is called by:
 39692 ;;		_vfprintf
 39693 ;; This function uses a reentrant model
 39694 ;;
 39695                           
 39696                           	psect	text96
 39697   010000                     __ptext96:
 39698                           	callstack 0
 39699   010000                     _vfpfcnvrt:
 39700                           	callstack 0
 39701                           
 39702                           ; BSR set to: 1
 39703                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39704   010000  0E08               	movlw	8
 39705   010002  26E1               	addwf	fsr1l,f,c
 39706   010004  0E00               	movlw	0
 39707   010006  22E2               	addwfc	fsr1h,f,c
 39708                           
 39709                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1177: vfpfcnvrt(FILE *fp, cha
      +                          r *fmt[], va_list ap);/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1178: {;
      +                          /opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1179:     char c, *cp;;/opt/mi
      +                          crochip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1180:     _Bool done;;/opt/microchip/
      +                          xc8/v2.50/pic/sources/c99/common/doprnt.c: 1188:  } convarg;;/opt/microchip/xc8/v2.50/pi
      +                          c/sources/c99/common/doprnt.c: 1201:     if ((*fmt)[0] == '%') {
 39710                           ;stkvar	_fmt @ sp[(-8)+-4]
 39711                           
 39712                           ;incstack = 0
 39713   010008  0EF4               	movlw	-12
 39714   01000A  006F FF8F FFD9     	movff	plusw1,fsr2l
 39715   010010  0EF5               	movlw	-11
 39716   010012  006F FF8F FFDA     	movff	plusw1,fsr2h
 39717   010018  006F FF7B FFF6     	movff	postinc2,tblptrl
 39718   01001E  006F FF77 FFF7     	movff	postdec2,tblptrh
 39719   010024                     	if	0	;tblptru may be non-zero
 39720   010024                     	endif
 39721   010024                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 39722   010024  0E00               	movlw	low (__mediumconst shr (0+16))
 39723   010026  6EF8               	movwf	tblptru,c
 39724   010028                     	endif
 39725   010028  0008               	tblrd		*
 39726   01002A  50F5               	movf	tablat,w,c
 39727   01002C  0A25               	xorlw	37
 39728   01002E  A4D8               	btfss	status,2,c
 39729   010030  EF7A  F087         	goto	l12094
 39730                           
 39731                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1202:         ++*fmt;
 39732                           ;stkvar	_fmt @ sp[(-8)+-4]
 39733   010034  0EF4               	movlw	-12
 39734   010036  006F FF8F FFD9     	movff	plusw1,fsr2l
 39735   01003C  0EF5               	movlw	-11
 39736   01003E  006F FF8F FFDA     	movff	plusw1,fsr2h
 39737   010044  2ADE               	incf	postinc2,f,c
 39738   010046  0E00               	movlw	0
 39739   010048  22DD               	addwfc	postdec2,f,c
 39740                           
 39741                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1204:         flags = width =
      +                           0;
 39742   01004A  0E00               	movlw	0
 39743   01004C  0101               	movlb	1	; () banked
 39744   01004E  6FC2               	movwf	(_width+1)& (0+255),b
 39745   010050  0E00               	movlw	0
 39746   010052  6FC1               	movwf	_width& (0+255),b
 39747   010054  C1C1  F1C5         	movff	_width,_flags
 39748                           
 39749                           ; BSR set to: 1
 39750                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1205:         prec = -1;
 39751   010058  69C3               	setf	_prec& (0+255),b
 39752   01005A  69C4               	setf	(_prec+1)& (0+255),b
 39753                           
 39754                           ; BSR set to: 1
 39755                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1209:         done = 0;
 39756                           ;stkvar	_done @ sp[(-8)+7]
 39757   01005C  0EFF               	movlw	-1
 39758   01005E  6AE3               	clrf	plusw1,c
 39759                           
 39760                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1210:         while (!done) {
 39761   010060  D040               	goto	l11902
 39762   010062                     l11876:
 39763                           
 39764                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1214:                     fla
      +                          gs |= (1 << 0);
 39765   010062  0101               	movlb	1	; () banked
 39766   010064  81C5               	bsf	_flags& (0+255),0,b
 39767   010066                     l11878:
 39768                           
 39769                           ; BSR set to: 1
 39770                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1215:                     ++*
      +                          fmt;
 39771                           ;stkvar	_fmt @ sp[(-8)+-4]
 39772   010066  0EF4               	movlw	-12
 39773   010068  006F FF8F FFD9     	movff	plusw1,fsr2l
 39774   01006E  0EF5               	movlw	-11
 39775   010070  006F FF8F FFDA     	movff	plusw1,fsr2h
 39776   010076  2ADE               	incf	postinc2,f,c
 39777   010078  0E00               	movlw	0
 39778   01007A  22DD               	addwfc	postdec2,f,c
 39779                           
 39780                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1216:                     bre
      +                          ak;
 39781   01007C  D032               	goto	l11902
 39782   01007E                     l11880:
 39783                           
 39784                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1220:                     fla
      +                          gs |= (1 << 1);
 39785   01007E  0101               	movlb	1	; () banked
 39786   010080  83C5               	bsf	_flags& (0+255),1,b
 39787   010082  D7F1               	goto	l11878
 39788   010084                     l11884:
 39789                           
 39790                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1226:                     fla
      +                          gs |= (1 << 2);
 39791   010084  0101               	movlb	1	; () banked
 39792   010086  85C5               	bsf	_flags& (0+255),2,b
 39793   010088  D7EE               	goto	l11878
 39794   01008A                     l11888:
 39795                           
 39796                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1232:                     fla
      +                          gs |= (1 << 3);
 39797   01008A  0101               	movlb	1	; () banked
 39798   01008C  87C5               	bsf	_flags& (0+255),3,b
 39799   01008E  D7EB               	goto	l11878
 39800   010090                     l11892:
 39801                           
 39802                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1238:                     fla
      +                          gs |= (1 << 4);
 39803   010090  0101               	movlb	1	; () banked
 39804   010092  89C5               	bsf	_flags& (0+255),4,b
 39805   010094  D7E8               	goto	l11878
 39806   010096                     l11896:
 39807                           
 39808                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1243:                     don
      +                          e = 1;
 39809                           ;stkvar	_done @ sp[(-8)+7]
 39810   010096  0EFF               	movlw	-1
 39811   010098  6AE3               	clrf	plusw1,c
 39812   01009A  2AE3               	incf	plusw1,f,c
 39813                           
 39814                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1244:                     bre
      +                          ak;
 39815   01009C  D022               	goto	l11902
 39816   01009E                     l11900:
 39817                           
 39818                           ;stkvar	_fmt @ sp[(-8)+-4]
 39819   01009E  0EF4               	movlw	-12
 39820   0100A0  006F FF8F FFD9     	movff	plusw1,fsr2l
 39821   0100A6  0EF5               	movlw	-11
 39822   0100A8  006F FF8F FFDA     	movff	plusw1,fsr2h
 39823   0100AE  006F FF7B FFF6     	movff	postinc2,tblptrl
 39824   0100B4  006F FF77 FFF7     	movff	postdec2,tblptrh
 39825   0100BA                     	if	0	;tblptru may be non-zero
 39826   0100BA                     	endif
 39827   0100BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 39828   0100BA  0E00               	movlw	low (__mediumconst shr (0+16))
 39829   0100BC  6EF8               	movwf	tblptru,c
 39830   0100BE                     	endif
 39831   0100BE  0008               	tblrd		*
 39832   0100C0  50F5               	movf	tablat,w,c
 39833                           
 39834                           ; Switch size 1, requested type "simple"
 39835                           ; Number of cases is 5, Range of values is 32 to 48
 39836                           ; switch strategies available:
 39837                           ; Name         Instructions Cycles
 39838                           ; simple_byte           16     9 (average)
 39839                           ;	Chosen strategy is simple_byte
 39840   0100C2  0A20               	xorlw	32	; case 32
 39841   0100C4  B4D8               	btfsc	status,2,c
 39842   0100C6  D7E1               	goto	l11888
 39843   0100C8  0A03               	xorlw	3	; case 35
 39844   0100CA  B4D8               	btfsc	status,2,c
 39845   0100CC  D7E1               	goto	l11892
 39846   0100CE  0A08               	xorlw	8	; case 43
 39847   0100D0  B4D8               	btfsc	status,2,c
 39848   0100D2  D7D8               	goto	l11884
 39849   0100D4  0A06               	xorlw	6	; case 45
 39850   0100D6  B4D8               	btfsc	status,2,c
 39851   0100D8  D7C4               	goto	l11876
 39852   0100DA  0A1D               	xorlw	29	; case 48
 39853   0100DC  B4D8               	btfsc	status,2,c
 39854   0100DE  D7CF               	goto	l11880
 39855   0100E0  D7DA               	goto	l11896
 39856   0100E2                     l11902:
 39857                           
 39858                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1210:         while (!done) {
 39859                           ;stkvar	_done @ sp[(-8)+7]
 39860   0100E2  0EFF               	movlw	-1
 39861   0100E4  50E3               	movf	plusw1,w,c
 39862   0100E6  B4D8               	btfsc	status,2,c
 39863   0100E8  D7DA               	goto	l11900
 39864                           
 39865                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1248:         if (flags & (1 
      +                          << 0)) {
 39866   0100EA  0101               	movlb	1	; () banked
 39867   0100EC  B1C5               	btfsc	_flags& (0+255),0,b
 39868                           
 39869                           ; BSR set to: 1
 39870                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1249:             flags &= ~(
      +                          1 << 1);
 39871   0100EE  93C5               	bcf	_flags& (0+255),1,b
 39872                           
 39873                           ; BSR set to: 1
 39874                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1256:   width = read_prec_or_
      +                          width(fmt, ap);
 39875                           ;stkvar	_ap @ sp[(-8)+-6]
 39876   0100F0  0EF2               	movlw	-14
 39877   0100F2  006F FF8F FFE6     	movff	plusw1,postinc1
 39878   0100F8  006F FF8F FFE6     	movff	plusw1,postinc1
 39879                           
 39880                           ;stkvar	_fmt @ sp[(-10)+-4]
 39881   0100FE  0EF2               	movlw	-14
 39882   010100  006F FF8F FFE6     	movff	plusw1,postinc1
 39883   010106  006F FF8F FFE6     	movff	plusw1,postinc1
 39884   01010C  EC81  F0AD         	call	_read_prec_or_width	;wreg free
 39885   010110  C023  F1C1         	movff	btemp,_width
 39886   010114  C024  F1C2         	movff	btemp+1,_width+1
 39887                           
 39888                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1257:   if (width < 0) {
 39889   010118  0101               	movlb	1	; () banked
 39890   01011A  AFC2               	btfss	(_width+1)& (0+255),7,b
 39891   01011C  D005               	goto	l11912
 39892                           
 39893                           ; BSR set to: 1
 39894                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1258:    flags |= (1 << 0);
 39895   01011E  81C5               	bsf	_flags& (0+255),0,b
 39896                           
 39897                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1259:    width = -width;
 39898   010120  6DC1               	negf	_width& (0+255),b
 39899   010122  1FC2               	comf	(_width+1)& (0+255),f,b
 39900   010124  B0D8               	btfsc	status,0,c
 39901   010126  2BC2               	incf	(_width+1)& (0+255),f,b
 39902   010128                     l11912:
 39903                           
 39904                           ; BSR set to: 1
 39905                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1265:         if ((*fmt)[0] =
      +                          = '.') {
 39906                           ;stkvar	_fmt @ sp[(-8)+-4]
 39907   010128  0EF4               	movlw	-12
 39908   01012A  006F FF8F FFD9     	movff	plusw1,fsr2l
 39909   010130  0EF5               	movlw	-11
 39910   010132  006F FF8F FFDA     	movff	plusw1,fsr2h
 39911   010138  006F FF7B FFF6     	movff	postinc2,tblptrl
 39912   01013E  006F FF77 FFF7     	movff	postdec2,tblptrh
 39913   010144                     	if	0	;tblptru may be non-zero
 39914   010144                     	endif
 39915   010144                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 39916   010144  0E00               	movlw	low (__mediumconst shr (0+16))
 39917   010146  6EF8               	movwf	tblptru,c
 39918   010148                     	endif
 39919   010148  0008               	tblrd		*
 39920   01014A  50F5               	movf	tablat,w,c
 39921   01014C  0A2E               	xorlw	46
 39922   01014E  A4D8               	btfss	status,2,c
 39923   010150  D01F               	goto	l11918
 39924                           
 39925                           ; BSR set to: 1
 39926                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1266:             ++*fmt;
 39927                           ;stkvar	_fmt @ sp[(-8)+-4]
 39928   010152  0EF4               	movlw	-12
 39929   010154  006F FF8F FFD9     	movff	plusw1,fsr2l
 39930   01015A  0EF5               	movlw	-11
 39931   01015C  006F FF8F FFDA     	movff	plusw1,fsr2h
 39932   010162  2ADE               	incf	postinc2,f,c
 39933   010164  0E00               	movlw	0
 39934   010166  22DD               	addwfc	postdec2,f,c
 39935                           
 39936                           ; BSR set to: 1
 39937                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1267:    prec = read_prec_or_
      +                          width(fmt, ap);
 39938                           ;stkvar	_ap @ sp[(-8)+-6]
 39939   010168  0EF2               	movlw	-14
 39940   01016A  006F FF8F FFE6     	movff	plusw1,postinc1
 39941   010170  006F FF8F FFE6     	movff	plusw1,postinc1
 39942                           
 39943                           ;stkvar	_fmt @ sp[(-10)+-4]
 39944   010176  0EF2               	movlw	-14
 39945   010178  006F FF8F FFE6     	movff	plusw1,postinc1
 39946   01017E  006F FF8F FFE6     	movff	plusw1,postinc1
 39947   010184  EC81  F0AD         	call	_read_prec_or_width	;wreg free
 39948   010188  C023  F1C3         	movff	btemp,_prec
 39949   01018C  C024  F1C4         	movff	btemp+1,_prec+1
 39950   010190                     l11918:
 39951                           
 39952                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1273:         if ((*fmt)[0] =
      +                          = 'c') {
 39953                           ;stkvar	_fmt @ sp[(-8)+-4]
 39954   010190  0EF4               	movlw	-12
 39955   010192  006F FF8F FFD9     	movff	plusw1,fsr2l
 39956   010198  0EF5               	movlw	-11
 39957   01019A  006F FF8F FFDA     	movff	plusw1,fsr2h
 39958   0101A0  006F FF7B FFF6     	movff	postinc2,tblptrl
 39959   0101A6  006F FF77 FFF7     	movff	postdec2,tblptrh
 39960   0101AC                     	if	0	;tblptru may be non-zero
 39961   0101AC                     	endif
 39962   0101AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 39963   0101AC  0E00               	movlw	low (__mediumconst shr (0+16))
 39964   0101AE  6EF8               	movwf	tblptru,c
 39965   0101B0                     	endif
 39966   0101B0  0008               	tblrd		*
 39967   0101B2  50F5               	movf	tablat,w,c
 39968   0101B4  0A63               	xorlw	99
 39969   0101B6  A4D8               	btfss	status,2,c
 39970   0101B8  D037               	goto	l11928
 39971                           
 39972                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1274:             ++*fmt;
 39973                           ;stkvar	_fmt @ sp[(-8)+-4]
 39974   0101BA  0EF4               	movlw	-12
 39975   0101BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 39976   0101C2  0EF5               	movlw	-11
 39977   0101C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 39978   0101CA  2ADE               	incf	postinc2,f,c
 39979   0101CC  0E00               	movlw	0
 39980   0101CE  22DD               	addwfc	postdec2,f,c
 39981                           
 39982                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1275:             c = (unsign
      +                          ed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 39983                           ;stkvar	_ap @ sp[(-8)+-6]
 39984   0101D0  0EF2               	movlw	-14
 39985   0101D2  006F FF8F FFD9     	movff	plusw1,fsr2l
 39986   0101D8  0EF3               	movlw	-13
 39987   0101DA  006F FF8F FFDA     	movff	plusw1,fsr2h
 39988   0101E0  0E02               	movlw	2
 39989   0101E2  5EDE               	subwf	postinc2,f,c
 39990   0101E4  0E00               	movlw	0
 39991   0101E6  5ADD               	subwfb	postdec2,f,c
 39992   0101E8  006F FF78  F02D    	movff	postinc2,btemp+10
 39993   0101EE  006F FF74  F02E    	movff	postdec2,btemp+11
 39994   0101F4  0060  F0B7  FFD9   	movff	btemp+10,fsr2l
 39995   0101FA  0060  F0BB  FFDA   	movff	btemp+11,fsr2h
 39996   010200  50DF               	movf	indf2,w,c
 39997   010202  6E2E               	movwf	(btemp+11)^0,c
 39998                           
 39999                           ;stkvar	_c @ sp[(-8)+6]
 40000   010204  0EFE               	movlw	-2
 40001   010206  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 40002                           
 40003                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1284:             return (int
      +                          ) ctoa(fp, c);
 40004                           ;stkvar	_c @ sp[(-8)+6]
 40005   01020C  0EFE               	movlw	-2
 40006   01020E  50E3               	movf	plusw1,w,c
 40007   010210  6EE6               	movwf	postinc1,c
 40008                           
 40009                           ;stkvar	_fp @ sp[(-9)+-2]
 40010   010212  0EF5               	movlw	-11
 40011   010214  006F FF8F FFE6     	movff	plusw1,postinc1
 40012   01021A  006F FF8F FFE6     	movff	plusw1,postinc1
 40013   010220  ECE2  F0AF         	call	_ctoa	;wreg free
 40014   010224  EFA4  F087         	goto	l3298
 40015   010228                     l11928:
 40016                           
 40017                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1291:   cp = *fmt;
 40018                           ;stkvar	_fmt @ sp[(-8)+-4]
 40019   010228  0EF4               	movlw	-12
 40020   01022A  006F FF8F FFD9     	movff	plusw1,fsr2l
 40021   010230  0EF5               	movlw	-11
 40022   010232  006F FF8F FFDA     	movff	plusw1,fsr2h
 40023   010238  006F FF78  F02D    	movff	postinc2,btemp+10
 40024   01023E  006F FF74  F02E    	movff	postdec2,btemp+11
 40025                           
 40026                           ;stkvar	_cp @ sp[(-8)+4]
 40027   010244  0EFD               	movlw	-3
 40028   010246  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 40029   01024C  0EFC               	movlw	-4
 40030   01024E  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 40031                           
 40032                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1293:   c = *cp;
 40033                           ;stkvar	_cp @ sp[(-8)+4]
 40034   010254  50E1               	movf	fsr1l,w,c
 40035   010256  0FFC               	addlw	-4
 40036   010258  6ED9               	movwf	fsr2l,c
 40037   01025A  50E2               	movf	fsr1h,w,c
 40038   01025C  6EDA               	movwf	fsr2h,c
 40039   01025E  0EFF               	movlw	255
 40040   010260  22DA               	addwfc	fsr2h,f,c
 40041   010262  006F FF7B FFF6     	movff	postinc2,tblptrl
 40042   010268  006F FF77 FFF7     	movff	postdec2,tblptrh
 40043   01026E                     	if	0	;tblptru may be non-zero
 40044   01026E                     	endif
 40045   01026E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40046   01026E  0E00               	movlw	low (__mediumconst shr (0+16))
 40047   010270  6EF8               	movwf	tblptru,c
 40048   010272                     	endif
 40049                           
 40050                           ;stkvar	_c @ sp[(-8)+6]
 40051   010272  0008               	tblrd		*
 40052   010274  0EFE               	movlw	-2
 40053   010276  006F FFD7 FFE3     	movff	tablat,plusw1
 40054                           
 40055                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1294:   switch(c) {
 40056   01027C  D045               	goto	l11950
 40057   01027E                     l11932:
 40058                           
 40059                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1298:     cp++;
 40060                           ;stkvar	_cp @ sp[(-8)+4]
 40061   01027E  0EFC               	movlw	-4
 40062   010280  50E3               	movf	plusw1,w,c
 40063   010282  0F01               	addlw	1
 40064   010284  6E23               	movwf	btemp^0,c
 40065   010286  0EFC               	movlw	-4
 40066   010288  0060  F08F  FFE3   	movff	btemp,plusw1
 40067   01028E  6A23               	clrf	btemp^0,c
 40068   010290  0EFD               	movlw	-3
 40069   010292  50E3               	movf	plusw1,w,c
 40070   010294  2023               	addwfc	btemp^0,w,c
 40071   010296  6E23               	movwf	btemp^0,c
 40072   010298  0EFD               	movlw	-3
 40073   01029A  0060  F08F  FFE3   	movff	btemp,plusw1
 40074                           
 40075                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1300:     if (*cp == 'h') {
 40076                           ;stkvar	_cp @ sp[(-8)+4]
 40077   0102A0  50E1               	movf	fsr1l,w,c
 40078   0102A2  0FFC               	addlw	-4
 40079   0102A4  6ED9               	movwf	fsr2l,c
 40080   0102A6  50E2               	movf	fsr1h,w,c
 40081   0102A8  6EDA               	movwf	fsr2h,c
 40082   0102AA  0EFF               	movlw	255
 40083   0102AC  22DA               	addwfc	fsr2h,f,c
 40084   0102AE  006F FF7B FFF6     	movff	postinc2,tblptrl
 40085   0102B4  006F FF77 FFF7     	movff	postdec2,tblptrh
 40086   0102BA                     	if	0	;tblptru may be non-zero
 40087   0102BA                     	endif
 40088   0102BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40089   0102BA  0E00               	movlw	low (__mediumconst shr (0+16))
 40090   0102BC  6EF8               	movwf	tblptru,c
 40091   0102BE                     	endif
 40092   0102BE  0008               	tblrd		*
 40093   0102C0  50F5               	movf	tablat,w,c
 40094   0102C2  0A68               	xorlw	104
 40095   0102C4  A4D8               	btfss	status,2,c
 40096   0102C6  D044               	goto	l11952
 40097                           
 40098                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1301:      c = 'H';
 40099                           ;stkvar	_c @ sp[(-8)+6]
 40100   0102C8  0EFE               	movlw	-2
 40101   0102CA  6AE3               	clrf	plusw1,c
 40102   0102CC  86E3               	bsf	plusw1,3,c
 40103   0102CE  8CE3               	bsf	plusw1,6,c	;indir
 40104   0102D0                     l11938:
 40105                           
 40106                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1302:      cp++;
 40107                           ;stkvar	_cp @ sp[(-8)+4]
 40108   0102D0  0EFC               	movlw	-4
 40109   0102D2  50E3               	movf	plusw1,w,c
 40110   0102D4  0F01               	addlw	1
 40111   0102D6  6E23               	movwf	btemp^0,c
 40112   0102D8  0EFC               	movlw	-4
 40113   0102DA  0060  F08F  FFE3   	movff	btemp,plusw1
 40114   0102E0  6A23               	clrf	btemp^0,c
 40115   0102E2  0EFD               	movlw	-3
 40116   0102E4  50E3               	movf	plusw1,w,c
 40117   0102E6  2023               	addwfc	btemp^0,w,c
 40118   0102E8  6E23               	movwf	btemp^0,c
 40119   0102EA  0EFD               	movlw	-3
 40120   0102EC  0060  F08F  FFE3   	movff	btemp,plusw1
 40121   0102F2  D02E               	goto	l11952
 40122   0102F4                     l3309:
 40123                           
 40124                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1350:     c = 'i';
 40125   0102F4  0E69               	movlw	105
 40126   0102F6  6E2E               	movwf	(btemp+11)^0,c
 40127                           
 40128                           ;stkvar	_c @ sp[(-8)+6]
 40129   0102F8  0EFE               	movlw	-2
 40130   0102FA  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 40131                           
 40132                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1351:     break;
 40133   010300  D027               	goto	l11952
 40134   010302                     l11946:
 40135                           
 40136                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1353:     c = 0;
 40137                           ;stkvar	_c @ sp[(-8)+6]
 40138   010302  0EFE               	movlw	-2
 40139   010304  6AE3               	clrf	plusw1,c
 40140                           
 40141                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1354:     break;
 40142   010306  D024               	goto	l11952
 40143   010308                     l11950:
 40144                           
 40145                           ;stkvar	_c @ sp[(-8)+6]
 40146   010308  0EFE               	movlw	-2
 40147   01030A  50E3               	movf	plusw1,w,c
 40148                           
 40149                           ; Switch size 1, requested type "simple"
 40150                           ; Number of cases is 11, Range of values is 88 to 122
 40151                           ; switch strategies available:
 40152                           ; Name         Instructions Cycles
 40153                           ; simple_byte           34    18 (average)
 40154                           ;	Chosen strategy is simple_byte
 40155   01030C  0A58               	xorlw	88	; case 88
 40156   01030E  B4D8               	btfsc	status,2,c
 40157   010310  D7F1               	goto	l3309
 40158   010312  0A3C               	xorlw	60	; case 100
 40159   010314  B4D8               	btfsc	status,2,c
 40160   010316  D7EE               	goto	l3309
 40161   010318  0A0C               	xorlw	12	; case 104
 40162   01031A  B4D8               	btfsc	status,2,c
 40163   01031C  D7B0               	goto	l11932
 40164   01031E  0A01               	xorlw	1	; case 105
 40165   010320  B4D8               	btfsc	status,2,c
 40166   010322  D7E8               	goto	l3309
 40167   010324  0A05               	xorlw	5	; case 108
 40168   010326  B4D8               	btfsc	status,2,c
 40169   010328  D7D3               	goto	l11938
 40170   01032A  0A02               	xorlw	2	; case 110
 40171   01032C  B4D8               	btfsc	status,2,c
 40172   01032E  D7E2               	goto	l3309
 40173   010330  0A01               	xorlw	1	; case 111
 40174   010332  B4D8               	btfsc	status,2,c
 40175   010334  D7DF               	goto	l3309
 40176   010336  0A1B               	xorlw	27	; case 116
 40177   010338  B4D8               	btfsc	status,2,c
 40178   01033A  D7CA               	goto	l11938
 40179   01033C  0A01               	xorlw	1	; case 117
 40180   01033E  B4D8               	btfsc	status,2,c
 40181   010340  D7D9               	goto	l3309
 40182   010342  0A0D               	xorlw	13	; case 120
 40183   010344  B4D8               	btfsc	status,2,c
 40184   010346  D7D6               	goto	l3309
 40185   010348  0A02               	xorlw	2	; case 122
 40186   01034A  B4D8               	btfsc	status,2,c
 40187   01034C  D7C1               	goto	l11938
 40188   01034E  D7D9               	goto	l11946
 40189   010350                     l11952:
 40190                           
 40191                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1361:   if (*cp == 'd' || *cp
      +                           == 'i') {
 40192                           ;stkvar	_cp @ sp[(-8)+4]
 40193   010350  50E1               	movf	fsr1l,w,c
 40194   010352  0FFC               	addlw	-4
 40195   010354  6ED9               	movwf	fsr2l,c
 40196   010356  50E2               	movf	fsr1h,w,c
 40197   010358  6EDA               	movwf	fsr2h,c
 40198   01035A  0EFF               	movlw	255
 40199   01035C  22DA               	addwfc	fsr2h,f,c
 40200   01035E  006F FF7B FFF6     	movff	postinc2,tblptrl
 40201   010364  006F FF77 FFF7     	movff	postdec2,tblptrh
 40202   01036A                     	if	0	;tblptru may be non-zero
 40203   01036A                     	endif
 40204   01036A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40205   01036A  0E00               	movlw	low (__mediumconst shr (0+16))
 40206   01036C  6EF8               	movwf	tblptru,c
 40207   01036E                     	endif
 40208   01036E  0008               	tblrd		*
 40209   010370  50F5               	movf	tablat,w,c
 40210   010372  0A64               	xorlw	100
 40211   010374  B4D8               	btfsc	status,2,c
 40212   010376  D0D2               	goto	l11970
 40213                           
 40214                           ;stkvar	_cp @ sp[(-8)+4]
 40215   010378  50E1               	movf	fsr1l,w,c
 40216   01037A  0FFC               	addlw	-4
 40217   01037C  6ED9               	movwf	fsr2l,c
 40218   01037E  50E2               	movf	fsr1h,w,c
 40219   010380  6EDA               	movwf	fsr2h,c
 40220   010382  0EFF               	movlw	255
 40221   010384  22DA               	addwfc	fsr2h,f,c
 40222   010386  006F FF7B FFF6     	movff	postinc2,tblptrl
 40223   01038C  006F FF77 FFF7     	movff	postdec2,tblptrh
 40224   010392                     	if	0	;tblptru may be non-zero
 40225   010392                     	endif
 40226   010392                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40227   010392  0E00               	movlw	low (__mediumconst shr (0+16))
 40228   010394  6EF8               	movwf	tblptru,c
 40229   010396                     	endif
 40230   010396  0008               	tblrd		*
 40231   010398  50F5               	movf	tablat,w,c
 40232   01039A  0A69               	xorlw	105
 40233   01039C  B4D8               	btfsc	status,2,c
 40234   01039E  D0BE               	goto	l11970
 40235   0103A0  D101               	goto	l11978
 40236   0103A2                     l11960:
 40237                           
 40238                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1374:      convarg.sint = (vf
      +                          pf_sint_t)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 40239                           ;stkvar	_ap @ sp[(-8)+-6]
 40240   0103A2  0EF2               	movlw	-14
 40241   0103A4  006F FF8F FFD9     	movff	plusw1,fsr2l
 40242   0103AA  0EF3               	movlw	-13
 40243   0103AC  006F FF8F FFDA     	movff	plusw1,fsr2h
 40244   0103B2  0E02               	movlw	2
 40245   0103B4  5EDE               	subwf	postinc2,f,c
 40246   0103B6  0E00               	movlw	0
 40247   0103B8  5ADD               	subwfb	postdec2,f,c
 40248   0103BA  006F FF78  F02D    	movff	postinc2,btemp+10
 40249   0103C0  006F FF74  F02E    	movff	postdec2,btemp+11
 40250   0103C6  0060  F0B7  FFD9   	movff	btemp+10,fsr2l
 40251   0103CC  0060  F0BB  FFDA   	movff	btemp+11,fsr2h
 40252   0103D2  50DF               	movf	indf2,w,c
 40253   0103D4  6E2B               	movwf	(btemp+8)^0,c
 40254   0103D6  0E00               	movlw	0
 40255   0103D8  BE2B               	btfsc	(btemp+8)^0,7,c
 40256   0103DA  0EFF               	movlw	255
 40257   0103DC  6E2C               	movwf	(btemp+9)^0,c
 40258   0103DE  6E2D               	movwf	(btemp+10)^0,c
 40259   0103E0  6E2E               	movwf	(btemp+11)^0,c
 40260   0103E2  D024               	goto	L30
 40261   0103E4                     l11962:
 40262                           
 40263                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1379:      convarg.sint = (vf
      +                          pf_sint_t)(*(long *)__va_arg(*(long **)ap, (long)0));
 40264                           ;stkvar	_ap @ sp[(-8)+-6]
 40265   0103E4  0EF2               	movlw	-14
 40266   0103E6  006F FF8F FFD9     	movff	plusw1,fsr2l
 40267   0103EC  0EF3               	movlw	-13
 40268   0103EE  006F FF8F FFDA     	movff	plusw1,fsr2h
 40269   0103F4  0E04               	movlw	4
 40270   0103F6  5EDE               	subwf	postinc2,f,c
 40271   0103F8  0E00               	movlw	0
 40272   0103FA  5ADD               	subwfb	postdec2,f,c
 40273   0103FC  006F FF78  F02D    	movff	postinc2,btemp+10
 40274   010402  006F FF74  F02E    	movff	postdec2,btemp+11
 40275   010408  0060  F0B7  FFD9   	movff	btemp+10,fsr2l
 40276   01040E  0060  F0BB  FFDA   	movff	btemp+11,fsr2h
 40277   010414  006F FF78  F02B    	movff	postinc2,btemp+8
 40278   01041A  006F FF78  F02C    	movff	postinc2,btemp+9
 40279   010420  006F FF78  F02D    	movff	postinc2,btemp+10
 40280   010426  006F FF78  F02E    	movff	postinc2,btemp+11
 40281   01042C                     L30:
 40282                           
 40283                           ;stkvar	_convarg @ sp[(-8)+0]
 40284   01042C  0EF8               	movlw	-8
 40285   01042E  0060  F0AF  FFE3   	movff	btemp+8,plusw1
 40286   010434  0EF9               	movlw	-7
 40287   010436  0060  F0B3  FFE3   	movff	btemp+9,plusw1
 40288   01043C  0EFA               	movlw	-6
 40289   01043E  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 40290   010444  0EFB               	movlw	-5
 40291   010446  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 40292                           
 40293                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1380:      break;
 40294   01044C  D07B               	goto	l11972
 40295   01044E                     l11964:
 40296                           
 40297                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1389:      convarg.sint = (vf
      +                          pf_sint_t)(*(ptrdiff_t *)__va_arg(*(ptrdiff_t **)ap, (ptrdiff_t)0));
 40298                           ;stkvar	_ap @ sp[(-8)+-6]
 40299   01044E  0EF2               	movlw	-14
 40300   010450  006F FF8F FFD9     	movff	plusw1,fsr2l
 40301   010456  0EF3               	movlw	-13
 40302   010458  006F FF8F FFDA     	movff	plusw1,fsr2h
 40303   01045E  0E02               	movlw	2
 40304   010460  5EDE               	subwf	postinc2,f,c
 40305   010462  0E00               	movlw	0
 40306   010464  5ADD               	subwfb	postdec2,f,c
 40307   010466  006F FF78  F02D    	movff	postinc2,btemp+10
 40308   01046C  006F FF74  F02E    	movff	postdec2,btemp+11
 40309   010472  0060  F0B7  FFD9   	movff	btemp+10,fsr2l
 40310   010478  0060  F0BB  FFDA   	movff	btemp+11,fsr2h
 40311   01047E  006F FF78  F02D    	movff	postinc2,btemp+10
 40312   010484  006F FF74  F02E    	movff	postdec2,btemp+11
 40313                           
 40314                           ;stkvar	_convarg @ sp[(-8)+0]
 40315   01048A  0EF8               	movlw	-8
 40316   01048C  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 40317   010492  0EF9               	movlw	-7
 40318   010494  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 40319   01049A  6A23               	clrf	btemp^0,c
 40320   01049C  BEE3               	btfsc	plusw1,7,c
 40321   01049E  6823               	setf	btemp^0,c
 40322   0104A0  0EFA               	movlw	-6
 40323   0104A2  0060  F08F  FFE3   	movff	btemp,plusw1
 40324   0104A8  0EFB               	movlw	-5
 40325   0104AA  0060  F08F  FFE3   	movff	btemp,plusw1
 40326                           
 40327                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1390:      break;
 40328   0104B0  D049               	goto	l11972
 40329   0104B2                     l11966:
 40330                           
 40331                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1399:      convarg.sint = (vf
      +                          pf_sint_t)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 40332                           ;stkvar	_ap @ sp[(-8)+-6]
 40333   0104B2  0EF2               	movlw	-14
 40334   0104B4  006F FF8F FFD9     	movff	plusw1,fsr2l
 40335   0104BA  0EF3               	movlw	-13
 40336   0104BC  006F FF8F FFDA     	movff	plusw1,fsr2h
 40337   0104C2  0E02               	movlw	2
 40338   0104C4  5EDE               	subwf	postinc2,f,c
 40339   0104C6  0E00               	movlw	0
 40340   0104C8  5ADD               	subwfb	postdec2,f,c
 40341   0104CA  006F FF78  F02D    	movff	postinc2,btemp+10
 40342   0104D0  006F FF74  F02E    	movff	postdec2,btemp+11
 40343   0104D6  0060  F0B7  FFD9   	movff	btemp+10,fsr2l
 40344   0104DC  0060  F0BB  FFDA   	movff	btemp+11,fsr2h
 40345   0104E2  006F FF78  F02D    	movff	postinc2,btemp+10
 40346   0104E8  006F FF74  F02E    	movff	postdec2,btemp+11
 40347   0104EE  502D               	movf	(btemp+10)^0,w,c
 40348   0104F0  6E27               	movwf	(btemp+4)^0,c
 40349   0104F2  502E               	movf	(btemp+11)^0,w,c
 40350   0104F4  6E28               	movwf	(btemp+5)^0,c
 40351   0104F6  6A29               	clrf	(btemp+6)^0,c
 40352   0104F8  6A2A               	clrf	(btemp+7)^0,c
 40353                           
 40354                           ;stkvar	_convarg @ sp[(-8)+0]
 40355   0104FA  0EF8               	movlw	-8
 40356   0104FC  0060  F09F  FFE3   	movff	btemp+4,plusw1
 40357   010502  0EF9               	movlw	-7
 40358   010504  0060  F0A3  FFE3   	movff	btemp+5,plusw1
 40359   01050A  0EFA               	movlw	-6
 40360   01050C  0060  F0A7  FFE3   	movff	btemp+6,plusw1
 40361   010512  0EFB               	movlw	-5
 40362   010514  0060  F0AB  FFE3   	movff	btemp+7,plusw1
 40363                           
 40364                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1400:      break;
 40365   01051A  D014               	goto	l11972
 40366   01051C                     l11970:
 40367                           
 40368                           ;stkvar	_c @ sp[(-8)+6]
 40369   01051C  0EFE               	movlw	-2
 40370   01051E  50E3               	movf	plusw1,w,c
 40371                           
 40372                           ; Switch size 1, requested type "simple"
 40373                           ; Number of cases is 6, Range of values is 72 to 122
 40374                           ; switch strategies available:
 40375                           ; Name         Instructions Cycles
 40376                           ; simple_byte           19    10 (average)
 40377                           ;	Chosen strategy is simple_byte
 40378   010520  0A48               	xorlw	72	; case 72
 40379   010522  B4D8               	btfsc	status,2,c
 40380   010524  D73E               	goto	l11960
 40381   010526  0A20               	xorlw	32	; case 104
 40382   010528  B4D8               	btfsc	status,2,c
 40383   01052A  D791               	goto	l11964
 40384   01052C  0A01               	xorlw	1	; case 105
 40385   01052E  B4D8               	btfsc	status,2,c
 40386   010530  D78E               	goto	l11964
 40387   010532  0A05               	xorlw	5	; case 108
 40388   010534  B4D8               	btfsc	status,2,c
 40389   010536  D756               	goto	l11962
 40390   010538  0A18               	xorlw	24	; case 116
 40391   01053A  B4D8               	btfsc	status,2,c
 40392   01053C  D788               	goto	l11964
 40393   01053E  0A0E               	xorlw	14	; case 122
 40394   010540  B4D8               	btfsc	status,2,c
 40395   010542  D7B7               	goto	l11966
 40396   010544                     l11972:
 40397                           
 40398                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1406:    *fmt = cp+1;
 40399                           ;stkvar	_cp @ sp[(-8)+4]
 40400   010544  0EFC               	movlw	-4
 40401   010546  50E3               	movf	plusw1,w,c
 40402   010548  0F01               	addlw	1
 40403   01054A  6E2D               	movwf	(btemp+10)^0,c
 40404   01054C  0EFD               	movlw	-3
 40405   01054E  006F FF8C  F02E    	movff	plusw1,btemp+11
 40406   010554  0E00               	movlw	0
 40407   010556  222E               	addwfc	(btemp+11)^0,f,c
 40408                           
 40409                           ;stkvar	_fmt @ sp[(-8)+-4]
 40410   010558  0EF4               	movlw	-12
 40411   01055A  006F FF8F FFD9     	movff	plusw1,fsr2l
 40412   010560  0EF5               	movlw	-11
 40413   010562  006F FF8F FFDA     	movff	plusw1,fsr2h
 40414   010568  0060  F0B7  FFDE   	movff	btemp+10,postinc2
 40415   01056E  0060  F0BB  FFDD   	movff	btemp+11,postdec2
 40416                           
 40417                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1432:    return (int) dtoa(fp
      +                          , convarg.sint);
 40418                           ;stkvar	_convarg @ sp[(-8)+0]
 40419   010574  0EF8               	movlw	-8
 40420   010576  006F FF8F FFE6     	movff	plusw1,postinc1
 40421   01057C  006F FF8F FFE6     	movff	plusw1,postinc1
 40422   010582  006F FF8F FFE6     	movff	plusw1,postinc1
 40423   010588  006F FF8F FFE6     	movff	plusw1,postinc1
 40424                           
 40425                           ;stkvar	_fp @ sp[(-12)+-2]
 40426   01058E  0EF2               	movlw	-14
 40427   010590  006F FF8F FFE6     	movff	plusw1,postinc1
 40428   010596  006F FF8F FFE6     	movff	plusw1,postinc1
 40429   01059C  ECAE  F09F         	call	_dtoa	;wreg free
 40430   0105A0  EFA4  F087         	goto	l3298
 40431   0105A4                     l11978:
 40432                           
 40433                           ;stkvar	_cp @ sp[(-8)+4]
 40434   0105A4  50E1               	movf	fsr1l,w,c
 40435   0105A6  0FFC               	addlw	-4
 40436   0105A8  6ED9               	movwf	fsr2l,c
 40437   0105AA  50E2               	movf	fsr1h,w,c
 40438   0105AC  6EDA               	movwf	fsr2h,c
 40439   0105AE  0EFF               	movlw	255
 40440   0105B0  22DA               	addwfc	fsr2h,f,c
 40441   0105B2  006F FF7B FFF6     	movff	postinc2,tblptrl
 40442   0105B8  006F FF77 FFF7     	movff	postdec2,tblptrh
 40443   0105BE                     	if	0	;tblptru may be non-zero
 40444   0105BE                     	endif
 40445   0105BE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40446   0105BE  0E00               	movlw	low (__mediumconst shr (0+16))
 40447   0105C0  6EF8               	movwf	tblptru,c
 40448   0105C2                     	endif
 40449   0105C2  0008               	tblrd		*
 40450   0105C4  50F5               	movf	tablat,w,c
 40451   0105C6  0A78               	xorlw	120
 40452   0105C8  B4D8               	btfsc	status,2,c
 40453   0105CA  D0F7               	goto	l12000
 40454                           
 40455                           ;stkvar	_cp @ sp[(-8)+4]
 40456   0105CC  50E1               	movf	fsr1l,w,c
 40457   0105CE  0FFC               	addlw	-4
 40458   0105D0  6ED9               	movwf	fsr2l,c
 40459   0105D2  50E2               	movf	fsr1h,w,c
 40460   0105D4  6EDA               	movwf	fsr2h,c
 40461   0105D6  0EFF               	movlw	255
 40462   0105D8  22DA               	addwfc	fsr2h,f,c
 40463   0105DA  006F FF7B FFF6     	movff	postinc2,tblptrl
 40464   0105E0  006F FF77 FFF7     	movff	postdec2,tblptrh
 40465   0105E6                     	if	0	;tblptru may be non-zero
 40466   0105E6                     	endif
 40467   0105E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40468   0105E6  0E00               	movlw	low (__mediumconst shr (0+16))
 40469   0105E8  6EF8               	movwf	tblptru,c
 40470   0105EA                     	endif
 40471   0105EA  0008               	tblrd		*
 40472   0105EC  50F5               	movf	tablat,w,c
 40473   0105EE  0A58               	xorlw	88
 40474   0105F0  B4D8               	btfsc	status,2,c
 40475   0105F2  D0E3               	goto	l12000
 40476                           
 40477                           ;stkvar	_cp @ sp[(-8)+4]
 40478   0105F4  50E1               	movf	fsr1l,w,c
 40479   0105F6  0FFC               	addlw	-4
 40480   0105F8  6ED9               	movwf	fsr2l,c
 40481   0105FA  50E2               	movf	fsr1h,w,c
 40482   0105FC  6EDA               	movwf	fsr2h,c
 40483   0105FE  0EFF               	movlw	255
 40484   010600  22DA               	addwfc	fsr2h,f,c
 40485   010602  006F FF7B FFF6     	movff	postinc2,tblptrl
 40486   010608  006F FF77 FFF7     	movff	postdec2,tblptrh
 40487   01060E                     	if	0	;tblptru may be non-zero
 40488   01060E                     	endif
 40489   01060E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40490   01060E  0E00               	movlw	low (__mediumconst shr (0+16))
 40491   010610  6EF8               	movwf	tblptru,c
 40492   010612                     	endif
 40493   010612  0008               	tblrd		*
 40494   010614  50F5               	movf	tablat,w,c
 40495   010616  0A6F               	xorlw	111
 40496   010618  B4D8               	btfsc	status,2,c
 40497   01061A  D0CF               	goto	l12000
 40498                           
 40499                           ;stkvar	_cp @ sp[(-8)+4]
 40500   01061C  50E1               	movf	fsr1l,w,c
 40501   01061E  0FFC               	addlw	-4
 40502   010620  6ED9               	movwf	fsr2l,c
 40503   010622  50E2               	movf	fsr1h,w,c
 40504   010624  6EDA               	movwf	fsr2h,c
 40505   010626  0EFF               	movlw	255
 40506   010628  22DA               	addwfc	fsr2h,f,c
 40507   01062A  006F FF7B FFF6     	movff	postinc2,tblptrl
 40508   010630  006F FF77 FFF7     	movff	postdec2,tblptrh
 40509   010636                     	if	0	;tblptru may be non-zero
 40510   010636                     	endif
 40511   010636                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40512   010636  0E00               	movlw	low (__mediumconst shr (0+16))
 40513   010638  6EF8               	movwf	tblptru,c
 40514   01063A                     	endif
 40515   01063A  0008               	tblrd		*
 40516   01063C  50F5               	movf	tablat,w,c
 40517   01063E  0A75               	xorlw	117
 40518   010640  B4D8               	btfsc	status,2,c
 40519   010642  D0BB               	goto	l12000
 40520   010644  D15B               	goto	l12020
 40521   010646                     l11990:
 40522                           
 40523                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1465:      convarg.uint = (vf
      +                          pf_uint_t)(unsigned char)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)
      +                          0));
 40524                           ;stkvar	_ap @ sp[(-8)+-6]
 40525   010646  0EF2               	movlw	-14
 40526   010648  006F FF8F FFD9     	movff	plusw1,fsr2l
 40527   01064E  0EF3               	movlw	-13
 40528   010650  006F FF8F FFDA     	movff	plusw1,fsr2h
 40529   010656  0E02               	movlw	2
 40530   010658  5EDE               	subwf	postinc2,f,c
 40531   01065A  0E00               	movlw	0
 40532   01065C  5ADD               	subwfb	postdec2,f,c
 40533   01065E  006F FF78  F02D    	movff	postinc2,btemp+10
 40534   010664  006F FF74  F02E    	movff	postdec2,btemp+11
 40535   01066A  0060  F0B7  FFD9   	movff	btemp+10,fsr2l
 40536   010670  0060  F0BB  FFDA   	movff	btemp+11,fsr2h
 40537   010676  50DF               	movf	indf2,w,c
 40538   010678  6E2E               	movwf	(btemp+11)^0,c
 40539   01067A  C02E  F027         	movff	btemp+11,btemp+4
 40540   01067E  6A28               	clrf	(btemp+5)^0,c
 40541   010680  D089               	goto	L32
 40542   010682                     l11992:
 40543                           
 40544                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1470:      convarg.uint = (vf
      +                          pf_uint_t)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 40545                           ;stkvar	_ap @ sp[(-8)+-6]
 40546   010682  0EF2               	movlw	-14
 40547   010684  006F FF8F FFD9     	movff	plusw1,fsr2l
 40548   01068A  0EF3               	movlw	-13
 40549   01068C  006F FF8F FFDA     	movff	plusw1,fsr2h
 40550   010692  0E04               	movlw	4
 40551   010694  5EDE               	subwf	postinc2,f,c
 40552   010696  0E00               	movlw	0
 40553   010698  5ADD               	subwfb	postdec2,f,c
 40554   01069A  006F FF78  F02D    	movff	postinc2,btemp+10
 40555   0106A0  006F FF74  F02E    	movff	postdec2,btemp+11
 40556   0106A6  0060  F0B7  FFD9   	movff	btemp+10,fsr2l
 40557   0106AC  0060  F0BB  FFDA   	movff	btemp+11,fsr2h
 40558   0106B2  006F FF78  F02B    	movff	postinc2,btemp+8
 40559   0106B8  006F FF78  F02C    	movff	postinc2,btemp+9
 40560   0106BE  006F FF78  F02D    	movff	postinc2,btemp+10
 40561   0106C4  006F FF78  F02E    	movff	postinc2,btemp+11
 40562                           
 40563                           ;stkvar	_convarg @ sp[(-8)+0]
 40564   0106CA  0EF8               	movlw	-8
 40565   0106CC  0060  F0AF  FFE3   	movff	btemp+8,plusw1
 40566   0106D2  0EF9               	movlw	-7
 40567   0106D4  0060  F0B3  FFE3   	movff	btemp+9,plusw1
 40568   0106DA  0EFA               	movlw	-6
 40569   0106DC  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 40570   0106E2  0EFB               	movlw	-5
 40571   0106E4  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 40572                           
 40573                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1471:      break;
 40574   0106EA  D07B               	goto	l12002
 40575   0106EC                     l11994:
 40576                           
 40577                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1480:      convarg.uint = (vf
      +                          pf_uint_t)(*(ptrdiff_t *)__va_arg(*(ptrdiff_t **)ap, (ptrdiff_t)0));
 40578                           ;stkvar	_ap @ sp[(-8)+-6]
 40579   0106EC  0EF2               	movlw	-14
 40580   0106EE  006F FF8F FFD9     	movff	plusw1,fsr2l
 40581   0106F4  0EF3               	movlw	-13
 40582   0106F6  006F FF8F FFDA     	movff	plusw1,fsr2h
 40583   0106FC  0E02               	movlw	2
 40584   0106FE  5EDE               	subwf	postinc2,f,c
 40585   010700  0E00               	movlw	0
 40586   010702  5ADD               	subwfb	postdec2,f,c
 40587   010704  006F FF78  F02D    	movff	postinc2,btemp+10
 40588   01070A  006F FF74  F02E    	movff	postdec2,btemp+11
 40589   010710  0060  F0B7  FFD9   	movff	btemp+10,fsr2l
 40590   010716  0060  F0BB  FFDA   	movff	btemp+11,fsr2h
 40591   01071C  006F FF78  F02D    	movff	postinc2,btemp+10
 40592   010722  006F FF74  F02E    	movff	postdec2,btemp+11
 40593                           
 40594                           ;stkvar	_convarg @ sp[(-8)+0]
 40595   010728  0EF8               	movlw	-8
 40596   01072A  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 40597   010730  0EF9               	movlw	-7
 40598   010732  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 40599   010738  6A23               	clrf	btemp^0,c
 40600   01073A  BEE3               	btfsc	plusw1,7,c
 40601   01073C  6823               	setf	btemp^0,c
 40602   01073E  0EFA               	movlw	-6
 40603   010740  0060  F08F  FFE3   	movff	btemp,plusw1
 40604   010746  0EFB               	movlw	-5
 40605   010748  0060  F08F  FFE3   	movff	btemp,plusw1
 40606                           
 40607                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1481:      break;
 40608   01074E  D049               	goto	l12002
 40609   010750                     l11996:
 40610                           
 40611                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1490:      convarg.uint = (vf
      +                          pf_uint_t)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 40612                           ;stkvar	_ap @ sp[(-8)+-6]
 40613   010750  0EF2               	movlw	-14
 40614   010752  006F FF8F FFD9     	movff	plusw1,fsr2l
 40615   010758  0EF3               	movlw	-13
 40616   01075A  006F FF8F FFDA     	movff	plusw1,fsr2h
 40617   010760  0E02               	movlw	2
 40618   010762  5EDE               	subwf	postinc2,f,c
 40619   010764  0E00               	movlw	0
 40620   010766  5ADD               	subwfb	postdec2,f,c
 40621   010768  006F FF78  F02D    	movff	postinc2,btemp+10
 40622   01076E  006F FF74  F02E    	movff	postdec2,btemp+11
 40623   010774  0060  F0B7  FFD9   	movff	btemp+10,fsr2l
 40624   01077A  0060  F0BB  FFDA   	movff	btemp+11,fsr2h
 40625   010780  006F FF78  F02D    	movff	postinc2,btemp+10
 40626   010786  006F FF74  F02E    	movff	postdec2,btemp+11
 40627   01078C  502D               	movf	(btemp+10)^0,w,c
 40628   01078E  6E27               	movwf	(btemp+4)^0,c
 40629   010790  502E               	movf	(btemp+11)^0,w,c
 40630   010792  6E28               	movwf	(btemp+5)^0,c
 40631   010794                     L32:
 40632   010794  6A29               	clrf	(btemp+6)^0,c
 40633   010796  6A2A               	clrf	(btemp+7)^0,c
 40634                           
 40635                           ;stkvar	_convarg @ sp[(-8)+0]
 40636   010798  0EF8               	movlw	-8
 40637   01079A  0060  F09F  FFE3   	movff	btemp+4,plusw1
 40638   0107A0  0EF9               	movlw	-7
 40639   0107A2  0060  F0A3  FFE3   	movff	btemp+5,plusw1
 40640   0107A8  0EFA               	movlw	-6
 40641   0107AA  0060  F0A7  FFE3   	movff	btemp+6,plusw1
 40642   0107B0  0EFB               	movlw	-5
 40643   0107B2  0060  F0AB  FFE3   	movff	btemp+7,plusw1
 40644                           
 40645                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1491:      break;
 40646   0107B8  D014               	goto	l12002
 40647   0107BA                     l12000:
 40648                           
 40649                           ;stkvar	_c @ sp[(-8)+6]
 40650   0107BA  0EFE               	movlw	-2
 40651   0107BC  50E3               	movf	plusw1,w,c
 40652                           
 40653                           ; Switch size 1, requested type "simple"
 40654                           ; Number of cases is 6, Range of values is 72 to 122
 40655                           ; switch strategies available:
 40656                           ; Name         Instructions Cycles
 40657                           ; simple_byte           19    10 (average)
 40658                           ;	Chosen strategy is simple_byte
 40659   0107BE  0A48               	xorlw	72	; case 72
 40660   0107C0  B4D8               	btfsc	status,2,c
 40661   0107C2  D741               	goto	l11990
 40662   0107C4  0A20               	xorlw	32	; case 104
 40663   0107C6  B4D8               	btfsc	status,2,c
 40664   0107C8  D7C3               	goto	l11996
 40665   0107CA  0A01               	xorlw	1	; case 105
 40666   0107CC  B4D8               	btfsc	status,2,c
 40667   0107CE  D7C0               	goto	l11996
 40668   0107D0  0A05               	xorlw	5	; case 108
 40669   0107D2  B4D8               	btfsc	status,2,c
 40670   0107D4  D756               	goto	l11992
 40671   0107D6  0A18               	xorlw	24	; case 116
 40672   0107D8  B4D8               	btfsc	status,2,c
 40673   0107DA  D788               	goto	l11994
 40674   0107DC  0A0E               	xorlw	14	; case 122
 40675   0107DE  B4D8               	btfsc	status,2,c
 40676   0107E0  D7B7               	goto	l11996
 40677   0107E2                     l12002:
 40678                           
 40679                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1497:    *fmt = cp+1;
 40680                           ;stkvar	_cp @ sp[(-8)+4]
 40681   0107E2  0EFC               	movlw	-4
 40682   0107E4  50E3               	movf	plusw1,w,c
 40683   0107E6  0F01               	addlw	1
 40684   0107E8  6E2D               	movwf	(btemp+10)^0,c
 40685   0107EA  0EFD               	movlw	-3
 40686   0107EC  006F FF8C  F02E    	movff	plusw1,btemp+11
 40687   0107F2  0E00               	movlw	0
 40688   0107F4  222E               	addwfc	(btemp+11)^0,f,c
 40689                           
 40690                           ;stkvar	_fmt @ sp[(-8)+-4]
 40691   0107F6  0EF4               	movlw	-12
 40692   0107F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 40693   0107FE  0EF5               	movlw	-11
 40694   010800  006F FF8F FFDA     	movff	plusw1,fsr2h
 40695   010806  0060  F0B7  FFDE   	movff	btemp+10,postinc2
 40696   01080C  0060  F0BB  FFDD   	movff	btemp+11,postdec2
 40697                           
 40698                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1498:    switch (*cp) {
 40699   010812  D057               	goto	l12018
 40700   010814                     l12004:
 40701                           
 40702                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1519:      return (int) otoa(
      +                          fp, convarg.uint);
 40703                           ;stkvar	_convarg @ sp[(-8)+0]
 40704   010814  0EF8               	movlw	-8
 40705   010816  006F FF8F FFE6     	movff	plusw1,postinc1
 40706   01081C  006F FF8F FFE6     	movff	plusw1,postinc1
 40707   010822  006F FF8F FFE6     	movff	plusw1,postinc1
 40708   010828  006F FF8F FFE6     	movff	plusw1,postinc1
 40709                           
 40710                           ;stkvar	_fp @ sp[(-12)+-2]
 40711   01082E  0EF2               	movlw	-14
 40712   010830  006F FF8F FFE6     	movff	plusw1,postinc1
 40713   010836  006F FF8F FFE6     	movff	plusw1,postinc1
 40714   01083C  EC08  F0A7         	call	_otoa	;wreg free
 40715   010840  D383               	goto	l3298
 40716   010842                     l12008:
 40717                           
 40718                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1542:      return (int) utoa(
      +                          fp, convarg.uint);
 40719                           ;stkvar	_convarg @ sp[(-8)+0]
 40720   010842  0EF8               	movlw	-8
 40721   010844  006F FF8F FFE6     	movff	plusw1,postinc1
 40722   01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 40723   010850  006F FF8F FFE6     	movff	plusw1,postinc1
 40724   010856  006F FF8F FFE6     	movff	plusw1,postinc1
 40725                           
 40726                           ;stkvar	_fp @ sp[(-12)+-2]
 40727   01085C  0EF2               	movlw	-14
 40728   01085E  006F FF8F FFE6     	movff	plusw1,postinc1
 40729   010864  006F FF8F FFE6     	movff	plusw1,postinc1
 40730   01086A  EC10  F0A8         	call	_utoa	;wreg free
 40731   01086E  D36C               	goto	l3298
 40732   010870                     l12012:
 40733                           
 40734                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1586:      return (int) xtoa(
      +                          fp,convarg.uint,*cp);
 40735                           ;stkvar	_cp @ sp[(-8)+4]
 40736   010870  50E1               	movf	fsr1l,w,c
 40737   010872  0FFC               	addlw	-4
 40738   010874  6ED9               	movwf	fsr2l,c
 40739   010876  50E2               	movf	fsr1h,w,c
 40740   010878  6EDA               	movwf	fsr2h,c
 40741   01087A  0EFF               	movlw	255
 40742   01087C  22DA               	addwfc	fsr2h,f,c
 40743   01087E  006F FF7B FFF6     	movff	postinc2,tblptrl
 40744   010884  006F FF77 FFF7     	movff	postdec2,tblptrh
 40745   01088A                     	if	0	;tblptru may be non-zero
 40746   01088A                     	endif
 40747   01088A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40748   01088A  0E00               	movlw	low (__mediumconst shr (0+16))
 40749   01088C  6EF8               	movwf	tblptru,c
 40750   01088E                     	endif
 40751   01088E  0008               	tblrd		*
 40752   010890  50F5               	movf	tablat,w,c
 40753   010892  6EE6               	movwf	postinc1,c
 40754                           
 40755                           ;stkvar	_convarg @ sp[(-9)+0]
 40756   010894  0EF7               	movlw	-9
 40757   010896  006F FF8F FFE6     	movff	plusw1,postinc1
 40758   01089C  006F FF8F FFE6     	movff	plusw1,postinc1
 40759   0108A2  006F FF8F FFE6     	movff	plusw1,postinc1
 40760   0108A8  006F FF8F FFE6     	movff	plusw1,postinc1
 40761                           
 40762                           ;stkvar	_fp @ sp[(-13)+-2]
 40763   0108AE  0EF1               	movlw	-15
 40764   0108B0  006F FF8F FFE6     	movff	plusw1,postinc1
 40765   0108B6  006F FF8F FFE6     	movff	plusw1,postinc1
 40766   0108BC  ECB6  F09C         	call	_xtoa	;wreg free
 40767   0108C0  D343               	goto	l3298
 40768   0108C2                     l12018:
 40769                           
 40770                           ;stkvar	_cp @ sp[(-8)+4]
 40771   0108C2  50E1               	movf	fsr1l,w,c
 40772   0108C4  0FFC               	addlw	-4
 40773   0108C6  6ED9               	movwf	fsr2l,c
 40774   0108C8  50E2               	movf	fsr1h,w,c
 40775   0108CA  6EDA               	movwf	fsr2h,c
 40776   0108CC  0EFF               	movlw	255
 40777   0108CE  22DA               	addwfc	fsr2h,f,c
 40778   0108D0  006F FF7B FFF6     	movff	postinc2,tblptrl
 40779   0108D6  006F FF77 FFF7     	movff	postdec2,tblptrh
 40780   0108DC                     	if	0	;tblptru may be non-zero
 40781   0108DC                     	endif
 40782   0108DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40783   0108DC  0E00               	movlw	low (__mediumconst shr (0+16))
 40784   0108DE  6EF8               	movwf	tblptru,c
 40785   0108E0                     	endif
 40786   0108E0  0008               	tblrd		*
 40787   0108E2  50F5               	movf	tablat,w,c
 40788                           
 40789                           ; Switch size 1, requested type "simple"
 40790                           ; Number of cases is 4, Range of values is 88 to 120
 40791                           ; switch strategies available:
 40792                           ; Name         Instructions Cycles
 40793                           ; simple_byte           13     7 (average)
 40794                           ;	Chosen strategy is simple_byte
 40795   0108E4  0A58               	xorlw	88	; case 88
 40796   0108E6  B4D8               	btfsc	status,2,c
 40797   0108E8  D7C3               	goto	l12012
 40798   0108EA  0A37               	xorlw	55	; case 111
 40799   0108EC  B4D8               	btfsc	status,2,c
 40800   0108EE  D792               	goto	l12004
 40801   0108F0  0A1A               	xorlw	26	; case 117
 40802   0108F2  B4D8               	btfsc	status,2,c
 40803   0108F4  D7A6               	goto	l12008
 40804   0108F6  0A0D               	xorlw	13	; case 120
 40805   0108F8  B4D8               	btfsc	status,2,c
 40806   0108FA  D7BA               	goto	l12012
 40807   0108FC                     l12020:
 40808                           
 40809                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1595:   if (*cp == 'n') {
 40810                           ;stkvar	_cp @ sp[(-8)+4]
 40811   0108FC  50E1               	movf	fsr1l,w,c
 40812   0108FE  0FFC               	addlw	-4
 40813   010900  6ED9               	movwf	fsr2l,c
 40814   010902  50E2               	movf	fsr1h,w,c
 40815   010904  6EDA               	movwf	fsr2h,c
 40816   010906  0EFF               	movlw	255
 40817   010908  22DA               	addwfc	fsr2h,f,c
 40818   01090A  006F FF7B FFF6     	movff	postinc2,tblptrl
 40819   010910  006F FF77 FFF7     	movff	postdec2,tblptrh
 40820   010916                     	if	0	;tblptru may be non-zero
 40821   010916                     	endif
 40822   010916                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40823   010916  0E00               	movlw	low (__mediumconst shr (0+16))
 40824   010918  6EF8               	movwf	tblptru,c
 40825   01091A                     	endif
 40826   01091A  0008               	tblrd		*
 40827   01091C  50F5               	movf	tablat,w,c
 40828   01091E  0A6E               	xorlw	110
 40829   010920  B4D8               	btfsc	status,2,c
 40830   010922  D16A               	goto	l12038
 40831   010924  D197               	goto	l12046
 40832   010926                     l12024:
 40833                           
 40834                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1599:      *(*(int* *)__va_ar
      +                          g(*(int* **)ap, (int*)0)) = (int) nout;
 40835                           ;stkvar	_ap @ sp[(-8)+-6]
 40836   010926  0EF2               	movlw	-14
 40837   010928  006F FF8F FFD9     	movff	plusw1,fsr2l
 40838   01092E  0EF3               	movlw	-13
 40839   010930  006F FF8F FFDA     	movff	plusw1,fsr2h
 40840   010936  0E02               	movlw	2
 40841   010938  5EDE               	subwf	postinc2,f,c
 40842   01093A  0E00               	movlw	0
 40843   01093C  5ADD               	subwfb	postdec2,f,c
 40844   01093E  006F FF78  F02D    	movff	postinc2,btemp+10
 40845   010944  006F FF74  F02E    	movff	postdec2,btemp+11
 40846   01094A  0060  F0B7  FFD9   	movff	btemp+10,fsr2l
 40847   010950  0060  F0BB  FFDA   	movff	btemp+11,fsr2h
 40848   010956  006F FF78  F02D    	movff	postinc2,btemp+10
 40849   01095C  006F FF74  F02E    	movff	postdec2,btemp+11
 40850   010962  0060  F0B7  FFF6   	movff	btemp+10,tblptrl
 40851   010968  0060  F0BB  FFF7   	movff	btemp+11,tblptrh
 40852   01096E  0E00               	movlw	low (__mediumconst shr (0+16))
 40853   010970  6EF8               	movwf	tblptru,c
 40854   010972  0E1F               	movlw	(high __ramtop+-1)
 40855   010974  64F7               	cpfsgt	tblptrh,c
 40856   010976  D009               	bra	u8787
 40857   010978  0060  F6FF  FFF5   	movff	_nout,tablat
 40858   01097E  000D               	tblwt		*+
 40859   010980  0060  F703  FFF5   	movff	_nout+1,tablat
 40860   010986  000C               	tblwt		*
 40861   010988  D001               	bra	u8780
 40862   01098A                     u8787:
 40863   01098A  D129               	goto	u8837
 40864   01098C                     u8780:
 40865                           
 40866                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1600:      break;
 40867   01098C  D149               	goto	l12040
 40868   01098E                     l12026:
 40869                           
 40870                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1603:      *(*(short* *)__va_
      +                          arg(*(short* **)ap, (short*)0)) = (short) nout;
 40871                           ;stkvar	_ap @ sp[(-8)+-6]
 40872   01098E  0EF2               	movlw	-14
 40873   010990  006F FF8F FFD9     	movff	plusw1,fsr2l
 40874   010996  0EF3               	movlw	-13
 40875   010998  006F FF8F FFDA     	movff	plusw1,fsr2h
 40876   01099E  0E02               	movlw	2
 40877   0109A0  5EDE               	subwf	postinc2,f,c
 40878   0109A2  0E00               	movlw	0
 40879   0109A4  5ADD               	subwfb	postdec2,f,c
 40880   0109A6  006F FF78  F02D    	movff	postinc2,btemp+10
 40881   0109AC  006F FF74  F02E    	movff	postdec2,btemp+11
 40882   0109B2  0060  F0B7  FFD9   	movff	btemp+10,fsr2l
 40883   0109B8  0060  F0BB  FFDA   	movff	btemp+11,fsr2h
 40884   0109BE  006F FF78  F02D    	movff	postinc2,btemp+10
 40885   0109C4  006F FF74  F02E    	movff	postdec2,btemp+11
 40886   0109CA  0060  F0B7  FFF6   	movff	btemp+10,tblptrl
 40887   0109D0  0060  F0BB  FFF7   	movff	btemp+11,tblptrh
 40888   0109D6  0E00               	movlw	low (__mediumconst shr (0+16))
 40889   0109D8  6EF8               	movwf	tblptru,c
 40890   0109DA  0E1F               	movlw	(high __ramtop+-1)
 40891   0109DC  64F7               	cpfsgt	tblptrh,c
 40892   0109DE  D009               	bra	u8797
 40893   0109E0  0060  F6FF  FFF5   	movff	_nout,tablat
 40894   0109E6  000D               	tblwt		*+
 40895   0109E8  0060  F703  FFF5   	movff	_nout+1,tablat
 40896   0109EE  000C               	tblwt		*
 40897   0109F0  D001               	bra	u8790
 40898   0109F2                     u8797:
 40899   0109F2  D0F5               	goto	u8837
 40900   0109F4                     u8790:
 40901                           
 40902                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1604:      break;
 40903   0109F4  D115               	goto	l12040
 40904   0109F6                     l12028:
 40905                           
 40906                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1608:      *(*(signed char* *
      +                          )__va_arg(*(signed char* **)ap, (signed char*)0)) = (signed char) nout;
 40907                           ;stkvar	_ap @ sp[(-8)+-6]
 40908   0109F6  0EF2               	movlw	-14
 40909   0109F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 40910   0109FE  0EF3               	movlw	-13
 40911   010A00  006F FF8F FFDA     	movff	plusw1,fsr2h
 40912   010A06  0E02               	movlw	2
 40913   010A08  5EDE               	subwf	postinc2,f,c
 40914   010A0A  0E00               	movlw	0
 40915   010A0C  5ADD               	subwfb	postdec2,f,c
 40916   010A0E  006F FF78  F02D    	movff	postinc2,btemp+10
 40917   010A14  006F FF74  F02E    	movff	postdec2,btemp+11
 40918   010A1A  0060  F0B7  FFD9   	movff	btemp+10,fsr2l
 40919   010A20  0060  F0BB  FFDA   	movff	btemp+11,fsr2h
 40920   010A26  006F FF78  F02D    	movff	postinc2,btemp+10
 40921   010A2C  006F FF74  F02E    	movff	postdec2,btemp+11
 40922   010A32  0060  F0B7  FFF6   	movff	btemp+10,tblptrl
 40923   010A38  0060  F0BB  FFF7   	movff	btemp+11,tblptrh
 40924   010A3E  0E00               	movlw	low (__mediumconst shr (0+16))
 40925   010A40  6EF8               	movwf	tblptru,c
 40926   010A42  0E1F               	movlw	(high __ramtop+-1)
 40927   010A44  64F7               	cpfsgt	tblptrh,c
 40928   010A46  D005               	bra	u8807
 40929   010A48  0060  F6FF  FFF5   	movff	_nout,tablat
 40930   010A4E  000C               	tblwt		*
 40931   010A50  D009               	bra	u8800
 40932   010A52                     u8807:
 40933   010A52  006F FFDB FFE9     	movff	tblptrl,fsr0l
 40934   010A58  006F FFDF FFEA     	movff	tblptrh,fsr0h
 40935   010A5E  0060  F6FF  FFEF   	movff	_nout,indf0
 40936   010A64                     u8800:
 40937                           
 40938                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1609:      break;
 40939   010A64  D0DD               	goto	l12040
 40940   010A66                     l12030:
 40941                           
 40942                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1613:      *(*(long* *)__va_a
      +                          rg(*(long* **)ap, (long*)0)) = (long) nout;
 40943   010A66  C1BF  F02B         	movff	_nout,btemp+8
 40944   010A6A  C1C0  F02C         	movff	_nout+1,btemp+9
 40945   010A6E  0E00               	movlw	0
 40946   010A70  BE2C               	btfsc	(btemp+9)^0,7,c
 40947   010A72  0EFF               	movlw	255
 40948   010A74  6E2D               	movwf	(btemp+10)^0,c
 40949   010A76  6E2E               	movwf	(btemp+11)^0,c
 40950                           
 40951                           ;stkvar	_ap @ sp[(-8)+-6]
 40952   010A78  0EF2               	movlw	-14
 40953   010A7A  006F FF8F FFD9     	movff	plusw1,fsr2l
 40954   010A80  0EF3               	movlw	-13
 40955   010A82  006F FF8F FFDA     	movff	plusw1,fsr2h
 40956   010A88  0E02               	movlw	2
 40957   010A8A  5EDE               	subwf	postinc2,f,c
 40958   010A8C  0E00               	movlw	0
 40959   010A8E  5ADD               	subwfb	postdec2,f,c
 40960   010A90  006F FF78  F029    	movff	postinc2,btemp+6
 40961   010A96  006F FF74  F02A    	movff	postdec2,btemp+7
 40962   010A9C  0060  F0A7  FFD9   	movff	btemp+6,fsr2l
 40963   010AA2  0060  F0AB  FFDA   	movff	btemp+7,fsr2h
 40964   010AA8  006F FF78  F029    	movff	postinc2,btemp+6
 40965   010AAE  006F FF74  F02A    	movff	postdec2,btemp+7
 40966   010AB4  0060  F0A7  FFF6   	movff	btemp+6,tblptrl
 40967   010ABA  0060  F0AB  FFF7   	movff	btemp+7,tblptrh
 40968   010AC0  0E00               	movlw	low (__mediumconst shr (0+16))
 40969   010AC2  6EF8               	movwf	tblptru,c
 40970   010AC4  0E1F               	movlw	(high __ramtop+-1)
 40971   010AC6  64F7               	cpfsgt	tblptrh,c
 40972   010AC8  D011               	bra	u8817
 40973   010ACA  0060  F0AF  FFF5   	movff	btemp+8,tablat
 40974   010AD0  000D               	tblwt		*+
 40975   010AD2  0060  F0B3  FFF5   	movff	btemp+9,tablat
 40976   010AD8  000D               	tblwt		*+
 40977   010ADA  0060  F0B7  FFF5   	movff	btemp+10,tablat
 40978   010AE0  000D               	tblwt		*+
 40979   010AE2  0060  F0BB  FFF5   	movff	btemp+11,tablat
 40980   010AE8  000C               	tblwt		*
 40981   010AEA  D012               	bra	u8810
 40982   010AEC                     u8817:
 40983   010AEC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 40984   010AF2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 40985   010AF8  0060  F0AF  FFEE   	movff	btemp+8,postinc0
 40986   010AFE  0060  F0B3  FFEE   	movff	btemp+9,postinc0
 40987   010B04  0060  F0B7  FFEE   	movff	btemp+10,postinc0
 40988   010B0A  0060  F0BB  FFEF   	movff	btemp+11,indf0
 40989   010B10                     u8810:
 40990                           
 40991                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1614:      break;
 40992   010B10  D087               	goto	l12040
 40993   010B12                     l12032:
 40994                           
 40995                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1623:      *(*(ptrdiff_t* *)_
      +                          _va_arg(*(ptrdiff_t* **)ap, (ptrdiff_t*)0)) = (ptrdiff_t) nout;
 40996                           ;stkvar	_ap @ sp[(-8)+-6]
 40997   010B12  0EF2               	movlw	-14
 40998   010B14  006F FF8F FFD9     	movff	plusw1,fsr2l
 40999   010B1A  0EF3               	movlw	-13
 41000   010B1C  006F FF8F FFDA     	movff	plusw1,fsr2h
 41001   010B22  0E02               	movlw	2
 41002   010B24  5EDE               	subwf	postinc2,f,c
 41003   010B26  0E00               	movlw	0
 41004   010B28  5ADD               	subwfb	postdec2,f,c
 41005   010B2A  006F FF78  F02D    	movff	postinc2,btemp+10
 41006   010B30  006F FF74  F02E    	movff	postdec2,btemp+11
 41007   010B36  0060  F0B7  FFD9   	movff	btemp+10,fsr2l
 41008   010B3C  0060  F0BB  FFDA   	movff	btemp+11,fsr2h
 41009   010B42  006F FF78  F02D    	movff	postinc2,btemp+10
 41010   010B48  006F FF74  F02E    	movff	postdec2,btemp+11
 41011   010B4E  0060  F0B7  FFF6   	movff	btemp+10,tblptrl
 41012   010B54  0060  F0BB  FFF7   	movff	btemp+11,tblptrh
 41013   010B5A  0E00               	movlw	low (__mediumconst shr (0+16))
 41014   010B5C  6EF8               	movwf	tblptru,c
 41015   010B5E  0E1F               	movlw	(high __ramtop+-1)
 41016   010B60  64F7               	cpfsgt	tblptrh,c
 41017   010B62  D009               	bra	u8827
 41018   010B64  0060  F6FF  FFF5   	movff	_nout,tablat
 41019   010B6A  000D               	tblwt		*+
 41020   010B6C  0060  F703  FFF5   	movff	_nout+1,tablat
 41021   010B72  000C               	tblwt		*
 41022   010B74  D001               	bra	u8820
 41023   010B76                     u8827:
 41024   010B76  D033               	goto	u8837
 41025   010B78                     u8820:
 41026                           
 41027                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1624:      break;
 41028   010B78  D053               	goto	l12040
 41029   010B7A                     l12034:
 41030                           
 41031                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1633:      *(*(size_t* *)__va
      +                          _arg(*(size_t* **)ap, (size_t*)0)) = (size_t) nout;
 41032                           ;stkvar	_ap @ sp[(-8)+-6]
 41033   010B7A  0EF2               	movlw	-14
 41034   010B7C  006F FF8F FFD9     	movff	plusw1,fsr2l
 41035   010B82  0EF3               	movlw	-13
 41036   010B84  006F FF8F FFDA     	movff	plusw1,fsr2h
 41037   010B8A  0E02               	movlw	2
 41038   010B8C  5EDE               	subwf	postinc2,f,c
 41039   010B8E  0E00               	movlw	0
 41040   010B90  5ADD               	subwfb	postdec2,f,c
 41041   010B92  006F FF78  F02D    	movff	postinc2,btemp+10
 41042   010B98  006F FF74  F02E    	movff	postdec2,btemp+11
 41043   010B9E  0060  F0B7  FFD9   	movff	btemp+10,fsr2l
 41044   010BA4  0060  F0BB  FFDA   	movff	btemp+11,fsr2h
 41045   010BAA  006F FF78  F02D    	movff	postinc2,btemp+10
 41046   010BB0  006F FF74  F02E    	movff	postdec2,btemp+11
 41047   010BB6  0060  F0B7  FFF6   	movff	btemp+10,tblptrl
 41048   010BBC  0060  F0BB  FFF7   	movff	btemp+11,tblptrh
 41049   010BC2  0E00               	movlw	low (__mediumconst shr (0+16))
 41050   010BC4  6EF8               	movwf	tblptru,c
 41051   010BC6  0E1F               	movlw	(high __ramtop+-1)
 41052   010BC8  64F7               	cpfsgt	tblptrh,c
 41053   010BCA  D009               	bra	u8837
 41054   010BCC  0060  F6FF  FFF5   	movff	_nout,tablat
 41055   010BD2  000D               	tblwt		*+
 41056   010BD4  0060  F703  FFF5   	movff	_nout+1,tablat
 41057   010BDA  000C               	tblwt		*
 41058   010BDC  D00C               	bra	u8830
 41059   010BDE                     u8837:
 41060   010BDE  006F FFDB FFE9     	movff	tblptrl,fsr0l
 41061   010BE4  006F FFDF FFEA     	movff	tblptrh,fsr0h
 41062   010BEA  0060  F6FF  FFEE   	movff	_nout,postinc0
 41063   010BF0  0060  F703  FFEF   	movff	_nout+1,indf0
 41064   010BF6                     u8830:
 41065                           
 41066                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1634:      break;
 41067   010BF6  D014               	goto	l12040
 41068   010BF8                     l12038:
 41069                           
 41070                           ;stkvar	_c @ sp[(-8)+6]
 41071   010BF8  0EFE               	movlw	-2
 41072   010BFA  50E3               	movf	plusw1,w,c
 41073                           
 41074                           ; Switch size 1, requested type "simple"
 41075                           ; Number of cases is 6, Range of values is 72 to 122
 41076                           ; switch strategies available:
 41077                           ; Name         Instructions Cycles
 41078                           ; simple_byte           19    10 (average)
 41079                           ;	Chosen strategy is simple_byte
 41080   010BFC  0A48               	xorlw	72	; case 72
 41081   010BFE  B4D8               	btfsc	status,2,c
 41082   010C00  D6FA               	goto	l12028
 41083   010C02  0A20               	xorlw	32	; case 104
 41084   010C04  B4D8               	btfsc	status,2,c
 41085   010C06  D6C3               	goto	l12026
 41086   010C08  0A01               	xorlw	1	; case 105
 41087   010C0A  B4D8               	btfsc	status,2,c
 41088   010C0C  D68C               	goto	l12024
 41089   010C0E  0A05               	xorlw	5	; case 108
 41090   010C10  B4D8               	btfsc	status,2,c
 41091   010C12  D729               	goto	l12030
 41092   010C14  0A18               	xorlw	24	; case 116
 41093   010C16  B4D8               	btfsc	status,2,c
 41094   010C18  D77C               	goto	l12032
 41095   010C1A  0A0E               	xorlw	14	; case 122
 41096   010C1C  B4D8               	btfsc	status,2,c
 41097   010C1E  D7AD               	goto	l12034
 41098   010C20                     l12040:
 41099                           
 41100                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1640:    *fmt = cp+1;
 41101                           ;stkvar	_cp @ sp[(-8)+4]
 41102   010C20  0EFC               	movlw	-4
 41103   010C22  50E3               	movf	plusw1,w,c
 41104   010C24  0F01               	addlw	1
 41105   010C26  6E2D               	movwf	(btemp+10)^0,c
 41106   010C28  0EFD               	movlw	-3
 41107   010C2A  006F FF8C  F02E    	movff	plusw1,btemp+11
 41108   010C30  0E00               	movlw	0
 41109   010C32  222E               	addwfc	(btemp+11)^0,f,c
 41110                           
 41111                           ;stkvar	_fmt @ sp[(-8)+-4]
 41112   010C34  0EF4               	movlw	-12
 41113   010C36  006F FF8F FFD9     	movff	plusw1,fsr2l
 41114   010C3C  0EF5               	movlw	-11
 41115   010C3E  006F FF8F FFDA     	movff	plusw1,fsr2h
 41116   010C44  0060  F0B7  FFDE   	movff	btemp+10,postinc2
 41117   010C4A  0060  F0BB  FFDD   	movff	btemp+11,postdec2
 41118   010C50                     l12042:
 41119                           
 41120                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1641:    return (int) 0;
 41121   010C50  0E00               	movlw	0
 41122   010C52  D140               	goto	L33
 41123   010C54                     l12046:
 41124                           
 41125                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1648:         if ((*fmt)[0] =
      +                          = 'p') {
 41126                           ;stkvar	_fmt @ sp[(-8)+-4]
 41127   010C54  0EF4               	movlw	-12
 41128   010C56  006F FF8F FFD9     	movff	plusw1,fsr2l
 41129   010C5C  0EF5               	movlw	-11
 41130   010C5E  006F FF8F FFDA     	movff	plusw1,fsr2h
 41131   010C64  006F FF7B FFF6     	movff	postinc2,tblptrl
 41132   010C6A  006F FF77 FFF7     	movff	postdec2,tblptrh
 41133   010C70                     	if	0	;tblptru may be non-zero
 41134   010C70                     	endif
 41135   010C70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 41136   010C70  0E00               	movlw	low (__mediumconst shr (0+16))
 41137   010C72  6EF8               	movwf	tblptru,c
 41138   010C74                     	endif
 41139   010C74  0008               	tblrd		*
 41140   010C76  50F5               	movf	tablat,w,c
 41141   010C78  0A70               	xorlw	112
 41142   010C7A  A4D8               	btfss	status,2,c
 41143   010C7C  D047               	goto	l12054
 41144                           
 41145                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1649:             ++*fmt;
 41146                           ;stkvar	_fmt @ sp[(-8)+-4]
 41147   010C7E  0EF4               	movlw	-12
 41148   010C80  006F FF8F FFD9     	movff	plusw1,fsr2l
 41149   010C86  0EF5               	movlw	-11
 41150   010C88  006F FF8F FFDA     	movff	plusw1,fsr2h
 41151   010C8E  2ADE               	incf	postinc2,f,c
 41152   010C90  0E00               	movlw	0
 41153   010C92  22DD               	addwfc	postdec2,f,c
 41154                           
 41155                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1650:             return (int
      +                          ) xtoa(fp,(vfpf_uint_t)(uintptr_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)),'x');
 41156   010C94  0E78               	movlw	120
 41157   010C96  6EE6               	movwf	postinc1,c
 41158                           
 41159                           ;stkvar	_ap @ sp[(-9)+-6]
 41160   010C98  0EF1               	movlw	-15
 41161   010C9A  006F FF8F FFD9     	movff	plusw1,fsr2l
 41162   010CA0  0EF2               	movlw	-14
 41163   010CA2  006F FF8F FFDA     	movff	plusw1,fsr2h
 41164   010CA8  0E02               	movlw	2
 41165   010CAA  5EDE               	subwf	postinc2,f,c
 41166   010CAC  0E00               	movlw	0
 41167   010CAE  5ADD               	subwfb	postdec2,f,c
 41168   010CB0  006F FF78  F02D    	movff	postinc2,btemp+10
 41169   010CB6  006F FF74  F02E    	movff	postdec2,btemp+11
 41170   010CBC  0060  F0B7  FFD9   	movff	btemp+10,fsr2l
 41171   010CC2  0060  F0BB  FFDA   	movff	btemp+11,fsr2h
 41172   010CC8  006F FF78  F02D    	movff	postinc2,btemp+10
 41173   010CCE  006F FF74  F02E    	movff	postdec2,btemp+11
 41174   010CD4  502D               	movf	(btemp+10)^0,w,c
 41175   010CD6  6E27               	movwf	(btemp+4)^0,c
 41176   010CD8  502E               	movf	(btemp+11)^0,w,c
 41177   010CDA  6E28               	movwf	(btemp+5)^0,c
 41178   010CDC  6A29               	clrf	(btemp+6)^0,c
 41179   010CDE  6A2A               	clrf	(btemp+7)^0,c
 41180   010CE0  0060  F09F  FFE6   	movff	btemp+4,postinc1
 41181   010CE6  0060  F0A3  FFE6   	movff	btemp+5,postinc1
 41182   010CEC  0060  F0A7  FFE6   	movff	btemp+6,postinc1
 41183   010CF2  0060  F0AB  FFE6   	movff	btemp+7,postinc1
 41184                           
 41185                           ;stkvar	_fp @ sp[(-13)+-2]
 41186   010CF8  0EF1               	movlw	-15
 41187   010CFA  006F FF8F FFE6     	movff	plusw1,postinc1
 41188   010D00  006F FF8F FFE6     	movff	plusw1,postinc1
 41189   010D06  ECB6  F09C         	call	_xtoa	;wreg free
 41190   010D0A  D11E               	goto	l3298
 41191   010D0C                     l12054:
 41192                           
 41193                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1656:   done = 0;
 41194                           ;stkvar	_done @ sp[(-8)+7]
 41195   010D0C  0EFF               	movlw	-1
 41196   010D0E  6AE3               	clrf	plusw1,c
 41197                           
 41198                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1657:   if ((*fmt)[0] == 's')
      +                           {
 41199                           ;stkvar	_fmt @ sp[(-8)+-4]
 41200   010D10  0EF4               	movlw	-12
 41201   010D12  006F FF8F FFD9     	movff	plusw1,fsr2l
 41202   010D18  0EF5               	movlw	-11
 41203   010D1A  006F FF8F FFDA     	movff	plusw1,fsr2h
 41204   010D20  006F FF7B FFF6     	movff	postinc2,tblptrl
 41205   010D26  006F FF77 FFF7     	movff	postdec2,tblptrh
 41206   010D2C                     	if	0	;tblptru may be non-zero
 41207   010D2C                     	endif
 41208   010D2C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 41209   010D2C  0E00               	movlw	low (__mediumconst shr (0+16))
 41210   010D2E  6EF8               	movwf	tblptru,c
 41211   010D30                     	endif
 41212   010D30  0008               	tblrd		*
 41213   010D32  50F5               	movf	tablat,w,c
 41214   010D34  0A73               	xorlw	115
 41215   010D36  A4D8               	btfss	status,2,c
 41216   010D38  D00F               	goto	l12062
 41217                           
 41218                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1658:    ++*fmt;
 41219                           ;stkvar	_fmt @ sp[(-8)+-4]
 41220   010D3A  0EF4               	movlw	-12
 41221   010D3C  006F FF8F FFD9     	movff	plusw1,fsr2l
 41222   010D42  0EF5               	movlw	-11
 41223   010D44  006F FF8F FFDA     	movff	plusw1,fsr2h
 41224   010D4A  2ADE               	incf	postinc2,f,c
 41225   010D4C  0E00               	movlw	0
 41226   010D4E  22DD               	addwfc	postdec2,f,c
 41227                           
 41228                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1659:    done = 1;
 41229                           ;stkvar	_done @ sp[(-8)+7]
 41230   010D50  0EFF               	movlw	-1
 41231   010D52  6AE3               	clrf	plusw1,c
 41232   010D54  2AE3               	incf	plusw1,f,c
 41233                           
 41234                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1660:   }
 41235   010D56  D05E               	goto	l12072
 41236   010D58                     l12062:
 41237                           
 41238                           ;stkvar	_fmt @ sp[(-8)+-4]
 41239   010D58  0EF4               	movlw	-12
 41240   010D5A  006F FF8F FFD9     	movff	plusw1,fsr2l
 41241   010D60  0EF5               	movlw	-11
 41242   010D62  006F FF8F FFDA     	movff	plusw1,fsr2h
 41243   010D68  006F FF7B FFF6     	movff	postinc2,tblptrl
 41244   010D6E  006F FF77 FFF7     	movff	postdec2,tblptrh
 41245   010D74                     	if	0	;tblptru may be non-zero
 41246   010D74                     	endif
 41247   010D74                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 41248   010D74  0E00               	movlw	low (__mediumconst shr (0+16))
 41249   010D76  6EF8               	movwf	tblptru,c
 41250   010D78                     	endif
 41251   010D78  0008               	tblrd		*
 41252   010D7A  50F5               	movf	tablat,w,c
 41253   010D7C  0A6C               	xorlw	108
 41254   010D7E  A4D8               	btfss	status,2,c
 41255   010D80  D049               	goto	l12072
 41256                           
 41257                           ;stkvar	_fmt @ sp[(-8)+-4]
 41258   010D82  0EF4               	movlw	-12
 41259   010D84  006F FF8F FFD9     	movff	plusw1,fsr2l
 41260   010D8A  0EF5               	movlw	-11
 41261   010D8C  006F FF8F FFDA     	movff	plusw1,fsr2h
 41262   010D92  006F FF78  F02D    	movff	postinc2,btemp+10
 41263   010D98  006F FF74  F02E    	movff	postdec2,btemp+11
 41264   010D9E  0E01               	movlw	1
 41265   010DA0  262D               	addwf	(btemp+10)^0,f,c
 41266   010DA2  0E00               	movlw	0
 41267   010DA4  222E               	addwfc	(btemp+11)^0,f,c
 41268   010DA6  0060  F0B7  FFF6   	movff	btemp+10,tblptrl
 41269   010DAC  0060  F0BB  FFF7   	movff	btemp+11,tblptrh
 41270   010DB2                     	if	0	;tblptru may be non-zero
 41271   010DB2                     	endif
 41272   010DB2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 41273   010DB2  0E00               	movlw	low (__mediumconst shr (0+16))
 41274   010DB4  6EF8               	movwf	tblptru,c
 41275   010DB6                     	endif
 41276   010DB6  0008               	tblrd		*
 41277   010DB8  50F5               	movf	tablat,w,c
 41278   010DBA  0A6C               	xorlw	108
 41279   010DBC  A4D8               	btfss	status,2,c
 41280   010DBE  D02A               	goto	l12072
 41281                           
 41282                           ;stkvar	_fmt @ sp[(-8)+-4]
 41283   010DC0  0EF4               	movlw	-12
 41284   010DC2  006F FF8F FFD9     	movff	plusw1,fsr2l
 41285   010DC8  0EF5               	movlw	-11
 41286   010DCA  006F FF8F FFDA     	movff	plusw1,fsr2h
 41287   010DD0  006F FF78  F02D    	movff	postinc2,btemp+10
 41288   010DD6  006F FF74  F02E    	movff	postdec2,btemp+11
 41289   010DDC  0E02               	movlw	2
 41290   010DDE  262D               	addwf	(btemp+10)^0,f,c
 41291   010DE0  0E00               	movlw	0
 41292   010DE2  222E               	addwfc	(btemp+11)^0,f,c
 41293   010DE4  0060  F0B7  FFF6   	movff	btemp+10,tblptrl
 41294   010DEA  0060  F0BB  FFF7   	movff	btemp+11,tblptrh
 41295   010DF0                     	if	0	;tblptru may be non-zero
 41296   010DF0                     	endif
 41297   010DF0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 41298   010DF0  0E00               	movlw	low (__mediumconst shr (0+16))
 41299   010DF2  6EF8               	movwf	tblptru,c
 41300   010DF4                     	endif
 41301   010DF4  0008               	tblrd		*
 41302   010DF6  50F5               	movf	tablat,w,c
 41303   010DF8  0A73               	xorlw	115
 41304   010DFA  A4D8               	btfss	status,2,c
 41305   010DFC  D00B               	goto	l12072
 41306                           
 41307                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1662:    *fmt += 3;
 41308                           ;stkvar	_fmt @ sp[(-8)+-4]
 41309   010DFE  0EF4               	movlw	-12
 41310   010E00  006F FF8F FFD9     	movff	plusw1,fsr2l
 41311   010E06  0EF5               	movlw	-11
 41312   010E08  006F FF8F FFDA     	movff	plusw1,fsr2h
 41313   010E0E  0E03               	movlw	3
 41314   010E10  26DE               	addwf	postinc2,f,c
 41315   010E12  D79C               	goto	L34
 41316   010E14                     l12072:
 41317                           
 41318                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1665:   if (done) {
 41319                           ;stkvar	_done @ sp[(-8)+7]
 41320   010E14  0EFF               	movlw	-1
 41321   010E16  50E3               	movf	plusw1,w,c
 41322   010E18  B4D8               	btfsc	status,2,c
 41323   010E1A  D02E               	goto	l12078
 41324                           
 41325                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1682:    return (int) stoa(fp
      +                          , (*(char * *)__va_arg(*(char * **)ap, (char *)0)));
 41326                           ;stkvar	_ap @ sp[(-8)+-6]
 41327   010E1C  0EF2               	movlw	-14
 41328   010E1E  006F FF8F FFD9     	movff	plusw1,fsr2l
 41329   010E24  0EF3               	movlw	-13
 41330   010E26  006F FF8F FFDA     	movff	plusw1,fsr2h
 41331   010E2C  0E02               	movlw	2
 41332   010E2E  5EDE               	subwf	postinc2,f,c
 41333   010E30  0E00               	movlw	0
 41334   010E32  5ADD               	subwfb	postdec2,f,c
 41335   010E34  006F FF78  F02D    	movff	postinc2,btemp+10
 41336   010E3A  006F FF74  F02E    	movff	postdec2,btemp+11
 41337   010E40  0060  F0B7  FFD9   	movff	btemp+10,fsr2l
 41338   010E46  0060  F0BB  FFDA   	movff	btemp+11,fsr2h
 41339   010E4C  006F FF78  F02D    	movff	postinc2,btemp+10
 41340   010E52  006F FF74  F02E    	movff	postdec2,btemp+11
 41341   010E58  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 41342   010E5E  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 41343                           
 41344                           ;stkvar	_fp @ sp[(-10)+-2]
 41345   010E64  0EF4               	movlw	-12
 41346   010E66  006F FF8F FFE6     	movff	plusw1,postinc1
 41347   010E6C  006F FF8F FFE6     	movff	plusw1,postinc1
 41348   010E72  EC15  F0A1         	call	_stoa	;wreg free
 41349   010E76  D068               	goto	l3298
 41350   010E78                     l12078:
 41351                           
 41352                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1798:         if ((*fmt)[0] =
      +                          = '%') {
 41353                           ;stkvar	_fmt @ sp[(-8)+-4]
 41354   010E78  0EF4               	movlw	-12
 41355   010E7A  006F FF8F FFD9     	movff	plusw1,fsr2l
 41356   010E80  0EF5               	movlw	-11
 41357   010E82  006F FF8F FFDA     	movff	plusw1,fsr2h
 41358   010E88  006F FF7B FFF6     	movff	postinc2,tblptrl
 41359   010E8E  006F FF77 FFF7     	movff	postdec2,tblptrh
 41360   010E94                     	if	0	;tblptru may be non-zero
 41361   010E94                     	endif
 41362   010E94                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 41363   010E94  0E00               	movlw	low (__mediumconst shr (0+16))
 41364   010E96  6EF8               	movwf	tblptru,c
 41365   010E98                     	endif
 41366   010E98  0008               	tblrd		*
 41367   010E9A  50F5               	movf	tablat,w,c
 41368   010E9C  0A25               	xorlw	37
 41369   010E9E  A4D8               	btfss	status,2,c
 41370   010EA0  D01D               	goto	l12088
 41371                           
 41372                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1799:             ++*fmt;
 41373                           ;stkvar	_fmt @ sp[(-8)+-4]
 41374   010EA2  0EF4               	movlw	-12
 41375   010EA4  006F FF8F FFD9     	movff	plusw1,fsr2l
 41376   010EAA  0EF5               	movlw	-11
 41377   010EAC  006F FF8F FFDA     	movff	plusw1,fsr2h
 41378   010EB2  2ADE               	incf	postinc2,f,c
 41379   010EB4  0E00               	movlw	0
 41380   010EB6  22DD               	addwfc	postdec2,f,c
 41381                           
 41382                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1800:             fputc((int)
      +                          '%', fp);
 41383                           ;stkvar	_fp @ sp[(-8)+-2]
 41384   010EB8  0EF6               	movlw	-10
 41385   010EBA  006F FF8F FFE6     	movff	plusw1,postinc1
 41386   010EC0  006F FF8F FFE6     	movff	plusw1,postinc1
 41387   010EC6  0E25               	movlw	37
 41388   010EC8  6EE6               	movwf	postinc1,c
 41389   010ECA  0E00               	movlw	0
 41390   010ECC  6EE6               	movwf	postinc1,c
 41391   010ECE  ECBF  F0AE         	call	_fputc	;wreg free
 41392   010ED2                     l12084:
 41393                           
 41394                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1801:             return (int
      +                          ) 1;
 41395   010ED2  0E01               	movlw	1
 41396   010ED4                     L33:
 41397   010ED4  6E23               	movwf	btemp^0,c
 41398   010ED6  0E00               	movlw	0
 41399   010ED8  6E24               	movwf	(btemp+1)^0,c
 41400   010EDA  D036               	goto	l3298
 41401   010EDC                     l12088:
 41402                           
 41403                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1806:         ++*fmt;
 41404                           ;stkvar	_fmt @ sp[(-8)+-4]
 41405   010EDC  0EF4               	movlw	-12
 41406   010EDE  006F FF8F FFD9     	movff	plusw1,fsr2l
 41407   010EE4  0EF5               	movlw	-11
 41408   010EE6  006F FF8F FFDA     	movff	plusw1,fsr2h
 41409   010EEC  2ADE               	incf	postinc2,f,c
 41410   010EEE  0E00               	movlw	0
 41411   010EF0  22DD               	addwfc	postdec2,f,c
 41412   010EF2  D6AE               	goto	l12042
 41413   010EF4                     l12094:
 41414                           
 41415                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1811:     fputc((int)(*fmt)[0
      +                          ], fp);
 41416                           ;stkvar	_fp @ sp[(-8)+-2]
 41417   010EF4  0EF6               	movlw	-10
 41418   010EF6  006F FF8F FFE6     	movff	plusw1,postinc1
 41419   010EFC  006F FF8F FFE6     	movff	plusw1,postinc1
 41420                           
 41421                           ;stkvar	_fmt @ sp[(-10)+-4]
 41422   010F02  0EF2               	movlw	-14
 41423   010F04  006F FF8F FFD9     	movff	plusw1,fsr2l
 41424   010F0A  0EF3               	movlw	-13
 41425   010F0C  006F FF8F FFDA     	movff	plusw1,fsr2h
 41426   010F12  006F FF7B FFF6     	movff	postinc2,tblptrl
 41427   010F18  006F FF77 FFF7     	movff	postdec2,tblptrh
 41428   010F1E                     	if	0	;tblptru may be non-zero
 41429   010F1E                     	endif
 41430   010F1E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 41431   010F1E  0E00               	movlw	low (__mediumconst shr (0+16))
 41432   010F20  6EF8               	movwf	tblptru,c
 41433   010F22                     	endif
 41434   010F22  0008               	tblrd		*
 41435   010F24  50F5               	movf	tablat,w,c
 41436   010F26  6EE6               	movwf	postinc1,c
 41437   010F28  0E00               	movlw	0
 41438   010F2A  6EE6               	movwf	postinc1,c
 41439   010F2C  ECBF  F0AE         	call	_fputc	;wreg free
 41440                           
 41441                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1812:     ++*fmt;
 41442                           ;stkvar	_fmt @ sp[(-8)+-4]
 41443   010F30  0EF4               	movlw	-12
 41444   010F32  006F FF8F FFD9     	movff	plusw1,fsr2l
 41445   010F38  0EF5               	movlw	-11
 41446   010F3A  006F FF8F FFDA     	movff	plusw1,fsr2h
 41447   010F40  2ADE               	incf	postinc2,f,c
 41448   010F42  0E00               	movlw	0
 41449   010F44  22DD               	addwfc	postdec2,f,c
 41450   010F46  D7C5               	goto	l12084
 41451   010F48                     l3298:
 41452                           
 41453                           ; _vfpfcnvrt: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 41454   010F48  0EF2               	movlw	242
 41455   010F4A  26E1               	addwf	fsr1l,f,c
 41456   010F4C  0EFF               	movlw	255
 41457   010F4E  22E2               	addwfc	fsr1h,f,c
 41458   010F50  0012               	return		;funcret
 41459   010F52                     __end_of_vfpfcnvrt:
 41460                           	callstack 0
 41461                           
 41462 ;; *************** function _xtoa *****************
 41463 ;; Defined at:
 41464 ;;		line 1052 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
 41465 ;; Parameters:    Size  Location     Type
 41466 ;;  fp              2  [STACK] PTR struct _IO_FILE
 41467 ;;		 -> f(11), NULL(0), 
 41468 ;;  d               4  [STACK] unsigned long 
 41469 ;;  x               1  [STACK] unsigned char 
 41470 ;; Auto vars:     Size  Location     Type
 41471 ;;  i               2  [STACK] int 
 41472 ;;  w               2  [STACK] int 
 41473 ;;  p               2  [STACK] int 
 41474 ;;  c               1  [STACK] unsigned char 
 41475 ;;  d_nonzero       1  [STACK] _Bool 
 41476 ;;  a               1  [STACK] unsigned char 
 41477 ;; Return value:  Size  Location     Type
 41478 ;;                  2  [STACK] int 
 41479 ;; Registers used:
 41480 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
 41481 ;; Tracked objects:
 41482 ;;		On entry : 0/1
 41483 ;;		On exit  : 0/0
 41484 ;;		Unchanged: 0/0
 41485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41490 ;;Total ram usage:        0 bytes
 41491 ;; Hardware stack levels used: 1
 41492 ;; Hardware stack levels required when called: 8
 41493 ;; This function calls:
 41494 ;;		_pad
 41495 ;; This function is called by:
 41496 ;;		_vfpfcnvrt
 41497 ;; This function uses a reentrant model
 41498 ;;
 41499                           
 41500                           	psect	text97
 41501   01396C                     __ptext97:
 41502                           	callstack 0
 41503   01396C                     _xtoa:
 41504                           	callstack 0
 41505                           
 41506                           ; autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 41507   01396C  0E0B               	movlw	11
 41508   01396E  26E1               	addwf	fsr1l,f,c
 41509   013970  0E00               	movlw	0
 41510   013972  22E2               	addwfc	fsr1h,f,c
 41511                           
 41512                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1076:     if (!(prec < 0)) {
 41513                           
 41514                           ;incstack = 0
 41515   013974  0101               	movlb	1	; () banked
 41516   013976  AFC4               	btfss	(_prec+1)& (0+255),7,b
 41517                           
 41518                           ; BSR set to: 1
 41519                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1077:         flags &= ~(1 <<
      +                           1);
 41520   013978  93C5               	bcf	_flags& (0+255),1,b
 41521                           
 41522                           ; BSR set to: 1
 41523                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1080:     p = (0 <= prec) ? p
      +                          rec : 1;
 41524   01397A  AFC4               	btfss	(_prec+1)& (0+255),7,b
 41525   01397C  D00D               	goto	l11804
 41526                           
 41527                           ; BSR set to: 1
 41528   01397E  0E01               	movlw	1
 41529   013980  6E2D               	movwf	(btemp+10)^0,c
 41530   013982  0E00               	movlw	0
 41531   013984  6E2E               	movwf	(btemp+11)^0,c
 41532                           
 41533                           ;stkvar	_p @ sp[(-11)+6]
 41534   013986  0EFB               	movlw	-5
 41535   013988  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 41536   01398E  0EFC               	movlw	-4
 41537   013990  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 41538   013996  D008               	goto	l3255
 41539   013998                     l11804:
 41540                           
 41541                           ; BSR set to: 1
 41542                           ;stkvar	_p @ sp[(-11)+6]
 41543   013998  0EFB               	movlw	-5
 41544   01399A  0060  F70F  FFE3   	movff	_prec,plusw1
 41545   0139A0  0EFC               	movlw	-4
 41546   0139A2  0060  F713  FFE3   	movff	_prec+1,plusw1
 41547   0139A8                     l3255:
 41548                           
 41549                           ; BSR set to: 1
 41550                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1082:     w = width;
 41551                           ;stkvar	_w @ sp[(-11)+4]
 41552   0139A8  0EF9               	movlw	-7
 41553   0139AA  0060  F707  FFE3   	movff	_width,plusw1
 41554   0139B0  0EFA               	movlw	-6
 41555   0139B2  0060  F70B  FFE3   	movff	_width+1,plusw1
 41556                           
 41557                           ; BSR set to: 1
 41558                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1084:  d_nonzero = d != 0;
 41559                           ;stkvar	_d @ sp[(-11)+-6]
 41560   0139B8  0EEF               	movlw	-17
 41561   0139BA  50E3               	movf	plusw1,w,c
 41562   0139BC  E10A               	bnz	u8491
 41563   0139BE  0EF0               	movlw	-16
 41564   0139C0  50E3               	movf	plusw1,w,c
 41565   0139C2  E107               	bnz	u8491
 41566   0139C4  0EF1               	movlw	-15
 41567   0139C6  50E3               	movf	plusw1,w,c
 41568   0139C8  E104               	bnz	u8491
 41569   0139CA  0EF2               	movlw	-14
 41570   0139CC  50E3               	movf	plusw1,w,c
 41571   0139CE  B4D8               	btfsc	status,2,c
 41572   0139D0  D003               	goto	u8490
 41573   0139D2                     u8491:
 41574   0139D2  6A2E               	clrf	(btemp+11)^0,c
 41575   0139D4  2A2E               	incf	(btemp+11)^0,f,c
 41576   0139D6  D001               	goto	u8508
 41577   0139D8                     u8490:
 41578   0139D8  6A2E               	clrf	(btemp+11)^0,c
 41579   0139DA                     u8508:
 41580                           
 41581                           ;stkvar	_d_nonzero @ sp[(-11)+9]
 41582   0139DA  0EFE               	movlw	-2
 41583   0139DC  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 41584                           
 41585                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1085:     if ((flags & (1 << 
      +                          4)) && d_nonzero) {
 41586   0139E2  0101               	movlb	1	; () banked
 41587   0139E4  A9C5               	btfss	_flags& (0+255),4,b
 41588   0139E6  D00F               	goto	l11814
 41589                           
 41590                           ; BSR set to: 1
 41591                           ;stkvar	_d_nonzero @ sp[(-11)+9]
 41592   0139E8  0EFE               	movlw	-2
 41593   0139EA  50E3               	movf	plusw1,w,c
 41594   0139EC  B4D8               	btfsc	status,2,c
 41595   0139EE  D00B               	goto	l11814
 41596                           
 41597                           ; BSR set to: 1
 41598                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1086:         w -= 2;
 41599                           ;stkvar	_w @ sp[(-11)+4]
 41600   0139F0  50E1               	movf	fsr1l,w,c
 41601   0139F2  0FF9               	addlw	-7
 41602   0139F4  6ED9               	movwf	fsr2l,c
 41603   0139F6  50E2               	movf	fsr1h,w,c
 41604   0139F8  6EDA               	movwf	fsr2h,c
 41605   0139FA  0EFF               	movlw	255
 41606   0139FC  22DA               	addwfc	fsr2h,f,c
 41607   0139FE  0EFE               	movlw	254
 41608   013A00  26DE               	addwf	postinc2,f,c
 41609   013A02  0EFF               	movlw	255
 41610   013A04  22DD               	addwfc	postdec2,f,c
 41611   013A06                     l11814:
 41612                           
 41613                           ; BSR set to: 1
 41614                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1091:  a = x == 'x' ? 'a' : '
      +                          A';
 41615                           ;stkvar	_x @ sp[(-11)+-7]
 41616   013A06  0EEE               	movlw	-18
 41617   013A08  006F FF8C  F023    	movff	plusw1,btemp
 41618   013A0E  0E78               	movlw	120
 41619   013A10  1823               	xorwf	btemp^0,w,c
 41620   013A12  B4D8               	btfsc	status,2,c
 41621   013A14  D002               	goto	l11818
 41622                           
 41623                           ; BSR set to: 1
 41624   013A16  0E41               	movlw	65
 41625   013A18  D001               	goto	L35
 41626   013A1A                     l11818:
 41627                           
 41628                           ; BSR set to: 1
 41629   013A1A  0E61               	movlw	97
 41630   013A1C                     L35:
 41631   013A1C  6E2D               	movwf	(btemp+10)^0,c
 41632   013A1E  0E00               	movlw	0
 41633   013A20  6E2E               	movwf	(btemp+11)^0,c
 41634                           
 41635                           ;stkvar	_xtoa$5786 @ sp[(-11)+0]
 41636   013A22  0EF5               	movlw	-11
 41637   013A24  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 41638   013A2A  0EF6               	movlw	-10
 41639   013A2C  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 41640                           
 41641                           ; BSR set to: 1
 41642                           ;stkvar	_xtoa$5786 @ sp[(-11)+0]
 41643                           ;stkvar	_a @ sp[(-11)+10]
 41644   013A32  0EF5               	movlw	-11
 41645   013A34  006F FF8C  F023    	movff	plusw1,btemp
 41646   013A3A  0EFF               	movlw	-1
 41647   013A3C  0060  F08F  FFE3   	movff	btemp,plusw1
 41648                           
 41649                           ; BSR set to: 1
 41650                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1095:     i = sizeof(dbuf) - 
      +                          1;
 41651   013A42  0E1F               	movlw	31
 41652   013A44  6E2D               	movwf	(btemp+10)^0,c
 41653   013A46  0E00               	movlw	0
 41654   013A48  6E2E               	movwf	(btemp+11)^0,c
 41655                           
 41656                           ;stkvar	_i @ sp[(-11)+2]
 41657   013A4A  0EF7               	movlw	-9
 41658   013A4C  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 41659   013A52  0EF8               	movlw	-8
 41660   013A54  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 41661                           
 41662                           ; BSR set to: 1
 41663                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1096:     dbuf[i] = '\0';
 41664   013A5A  6BE5               	clrf	(_dbuf+31)& (0+255),b
 41665                           
 41666                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1097:     while (!(i < 2) && 
      +                          (d != 0
 41667   013A5C  D070               	goto	l11842
 41668   013A5E                     l11826:
 41669                           
 41670                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1106:     )) {;/opt/microchip
      +                          /xc8/v2.50/pic/sources/c99/common/doprnt.c: 1107:         --i;
 41671                           ;stkvar	_i @ sp[(-11)+2]
 41672   013A5E  50E1               	movf	fsr1l,w,c
 41673   013A60  0FF7               	addlw	-9
 41674   013A62  6ED9               	movwf	fsr2l,c
 41675   013A64  50E2               	movf	fsr1h,w,c
 41676   013A66  6EDA               	movwf	fsr2h,c
 41677   013A68  0EFF               	movlw	255
 41678   013A6A  22DA               	addwfc	fsr2h,f,c
 41679   013A6C  06DE               	decf	postinc2,f,c
 41680   013A6E  0E00               	movlw	0
 41681   013A70  5ADD               	subwfb	postdec2,f,c
 41682                           
 41683                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1108:         c = d & 0x0f;
 41684                           ;stkvar	_d @ sp[(-11)+-6]
 41685   013A72  0EEF               	movlw	-17
 41686   013A74  006F FF8C  F02E    	movff	plusw1,btemp+11
 41687   013A7A  0E0F               	movlw	15
 41688   013A7C  162E               	andwf	(btemp+11)^0,f,c
 41689                           
 41690                           ;stkvar	_c @ sp[(-11)+8]
 41691   013A7E  0EFD               	movlw	-3
 41692   013A80  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 41693                           
 41694                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1109:   if (c < 10) {
 41695                           ;stkvar	_c @ sp[(-11)+8]
 41696   013A86  0EFD               	movlw	-3
 41697   013A88  006F FF8C  F023    	movff	plusw1,btemp
 41698   013A8E  0E0A               	movlw	10
 41699   013A90  6023               	cpfslt	btemp^0,c
 41700   013A92  D00B               	goto	l11834
 41701                           
 41702                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1110:    c += '0';
 41703                           ;stkvar	_c @ sp[(-11)+8]
 41704   013A94  0EFD               	movlw	-3
 41705   013A96  006F FF8C  F023    	movff	plusw1,btemp
 41706   013A9C  0E30               	movlw	48
 41707   013A9E  2623               	addwf	btemp^0,f,c
 41708   013AA0  0EFD               	movlw	-3
 41709   013AA2  0060  F08F  FFE3   	movff	btemp,plusw1
 41710                           
 41711                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1111:   }
 41712   013AA8  D00F               	goto	l3264
 41713   013AAA                     l11834:
 41714                           
 41715                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1114:    c += a - 10;
 41716   013AAA  0EF6               	movlw	246
 41717   013AAC  6E2E               	movwf	(btemp+11)^0,c
 41718                           
 41719                           ;stkvar	_a @ sp[(-11)+10]
 41720   013AAE  0EFF               	movlw	-1
 41721   013AB0  50E3               	movf	plusw1,w,c
 41722   013AB2  242E               	addwf	(btemp+11)^0,w,c
 41723   013AB4  6E2D               	movwf	(btemp+10)^0,c
 41724                           
 41725                           ;stkvar	_c @ sp[(-11)+8]
 41726   013AB6  50E1               	movf	fsr1l,w,c
 41727   013AB8  0FFD               	addlw	-3
 41728   013ABA  6ED9               	movwf	fsr2l,c
 41729   013ABC  50E2               	movf	fsr1h,w,c
 41730   013ABE  6EDA               	movwf	fsr2h,c
 41731   013AC0  0EFF               	movlw	255
 41732   013AC2  22DA               	addwfc	fsr2h,f,c
 41733   013AC4  502D               	movf	(btemp+10)^0,w,c
 41734   013AC6  26DF               	addwf	indf2,f,c
 41735   013AC8                     l3264:
 41736                           
 41737                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1121:   dbuf[i] = c;
 41738                           ;stkvar	_c @ sp[(-11)+8]
 41739                           ;stkvar	_i @ sp[(-11)+2]
 41740   013AC8  0EF7               	movlw	-9
 41741   013ACA  006F FF8C  F02D    	movff	plusw1,btemp+10
 41742   013AD0  0EF8               	movlw	-8
 41743   013AD2  006F FF8C  F02E    	movff	plusw1,btemp+11
 41744   013AD8  0EC6               	movlw	low _dbuf
 41745   013ADA  242D               	addwf	(btemp+10)^0,w,c
 41746   013ADC  6ED9               	movwf	fsr2l,c
 41747   013ADE  0E01               	movlw	high _dbuf
 41748   013AE0  202E               	addwfc	(btemp+11)^0,w,c
 41749   013AE2  6EDA               	movwf	fsr2h,c
 41750   013AE4  0EFD               	movlw	-3
 41751   013AE6  006F FF8F FFDF     	movff	plusw1,indf2
 41752                           
 41753                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1123:         --p;
 41754                           ;stkvar	_p @ sp[(-11)+6]
 41755   013AEC  50E1               	movf	fsr1l,w,c
 41756   013AEE  0FFB               	addlw	-5
 41757   013AF0  6ED9               	movwf	fsr2l,c
 41758   013AF2  50E2               	movf	fsr1h,w,c
 41759   013AF4  6EDA               	movwf	fsr2h,c
 41760   013AF6  0EFF               	movlw	255
 41761   013AF8  22DA               	addwfc	fsr2h,f,c
 41762   013AFA  06DE               	decf	postinc2,f,c
 41763   013AFC  0E00               	movlw	0
 41764   013AFE  5ADD               	subwfb	postdec2,f,c
 41765                           
 41766                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1127:         --w;
 41767                           ;stkvar	_w @ sp[(-11)+4]
 41768   013B00  50E1               	movf	fsr1l,w,c
 41769   013B02  0FF9               	addlw	-7
 41770   013B04  6ED9               	movwf	fsr2l,c
 41771   013B06  50E2               	movf	fsr1h,w,c
 41772   013B08  6EDA               	movwf	fsr2h,c
 41773   013B0A  0EFF               	movlw	255
 41774   013B0C  22DA               	addwfc	fsr2h,f,c
 41775   013B0E  06DE               	decf	postinc2,f,c
 41776   013B10  0E00               	movlw	0
 41777   013B12  5ADD               	subwfb	postdec2,f,c
 41778                           
 41779                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1128:         d = d >> 4;
 41780   013B14  0E04               	movlw	4
 41781   013B16  6E2E               	movwf	(btemp+11)^0,c
 41782                           
 41783                           ;stkvar	_d @ sp[(-11)+-6]
 41784   013B18  50E1               	movf	fsr1l,w,c
 41785   013B1A  0FEF               	addlw	-17
 41786   013B1C  6ED9               	movwf	fsr2l,c
 41787   013B1E  50E2               	movf	fsr1h,w,c
 41788   013B20  6EDA               	movwf	fsr2h,c
 41789   013B22  0EFF               	movlw	255
 41790   013B24  22DA               	addwfc	fsr2h,f,c
 41791   013B26  282E               	incf	(btemp+11)^0,w,c
 41792   013B28  52DE               	movf	postinc2,f,c
 41793   013B2A  D007               	goto	u8550
 41794   013B2C                     u8555:
 41795   013B2C  52DE               	movf	postinc2,f,c
 41796   013B2E  52DE               	movf	postinc2,f,c
 41797   013B30  90D8               	bcf	status,0,c
 41798   013B32  32DD               	rrcf	postdec2,f,c
 41799   013B34  32DD               	rrcf	postdec2,f,c
 41800   013B36  32DD               	rrcf	postdec2,f,c
 41801   013B38  32DE               	rrcf	postinc2,f,c
 41802   013B3A                     u8550:
 41803   013B3A  2EE8               	decfsz	wreg,f,c
 41804   013B3C  D7F7               	goto	u8555
 41805   013B3E                     l11842:
 41806                           
 41807                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1097:     while (!(i < 2) && 
      +                          (d != 0
 41808                           ;stkvar	_i @ sp[(-11)+2]
 41809   013B3E  0EF8               	movlw	-8
 41810   013B40  BEE3               	btfsc	plusw1,7,c
 41811   013B42  D02F               	goto	u8600
 41812   013B44  0EF8               	movlw	-8
 41813   013B46  50E3               	movf	plusw1,w,c
 41814   013B48  E108               	bnz	u8560
 41815   013B4A  0EF7               	movlw	-9
 41816   013B4C  006F FF8C  F023    	movff	plusw1,btemp
 41817   013B52  0E02               	movlw	2
 41818   013B54  5E23               	subwf	btemp^0,f,c
 41819   013B56  A0D8               	btfss	status,0,c
 41820   013B58  D024               	goto	u8600
 41821   013B5A                     u8560:
 41822                           
 41823                           ;stkvar	_d @ sp[(-11)+-6]
 41824   013B5A  0EEF               	movlw	-17
 41825   013B5C  50E3               	movf	plusw1,w,c
 41826   013B5E  E109               	bnz	u8571
 41827   013B60  0EF0               	movlw	-16
 41828   013B62  50E3               	movf	plusw1,w,c
 41829   013B64  E106               	bnz	u8571
 41830   013B66  0EF1               	movlw	-15
 41831   013B68  50E3               	movf	plusw1,w,c
 41832   013B6A  E103               	bnz	u8571
 41833   013B6C  0EF2               	movlw	-14
 41834   013B6E  50E3               	movf	plusw1,w,c
 41835   013B70  A4D8               	btfss	status,2,c
 41836   013B72                     u8571:
 41837   013B72  D775               	goto	l11826
 41838                           
 41839                           ;stkvar	_p @ sp[(-11)+6]
 41840   013B74  0EFC               	movlw	-4
 41841   013B76  BEE3               	btfsc	plusw1,7,c
 41842   013B78  D007               	goto	u8580
 41843   013B7A  0EFC               	movlw	-4
 41844   013B7C  50E3               	movf	plusw1,w,c
 41845   013B7E  E103               	bnz	u8581
 41846   013B80  0EFB               	movlw	-5
 41847   013B82  04E3               	decf	plusw1,w,c
 41848   013B84  B0D8               	btfsc	status,0,c
 41849   013B86                     u8581:
 41850   013B86  D76B               	goto	l11826
 41851   013B88                     u8580:
 41852                           
 41853                           ;stkvar	_w @ sp[(-11)+4]
 41854   013B88  0EFA               	movlw	-6
 41855   013B8A  BEE3               	btfsc	plusw1,7,c
 41856   013B8C  D00A               	goto	u8600
 41857   013B8E  0EFA               	movlw	-6
 41858   013B90  50E3               	movf	plusw1,w,c
 41859   013B92  E104               	bnz	u8590
 41860   013B94  0EF9               	movlw	-7
 41861   013B96  04E3               	decf	plusw1,w,c
 41862   013B98  A0D8               	btfss	status,0,c
 41863   013B9A  D003               	goto	u8600
 41864   013B9C                     u8590:
 41865   013B9C  0101               	movlb	1	; () banked
 41866   013B9E  B3C5               	btfsc	_flags& (0+255),1,b
 41867   013BA0  D75E               	goto	l11826
 41868   013BA2                     u8600:
 41869                           
 41870                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1133:     if ((flags & (1 << 
      +                          4)) && d_nonzero
 41871   013BA2  0101               	movlb	1	; () banked
 41872   013BA4  A9C5               	btfss	_flags& (0+255),4,b
 41873   013BA6  D03E               	goto	l11862
 41874                           
 41875                           ; BSR set to: 1
 41876                           ;stkvar	_d_nonzero @ sp[(-11)+9]
 41877   013BA8  0EFE               	movlw	-2
 41878   013BAA  50E3               	movf	plusw1,w,c
 41879   013BAC  B4D8               	btfsc	status,2,c
 41880   013BAE  D03A               	goto	l11862
 41881                           
 41882                           ; BSR set to: 1
 41883   013BB0  51C3               	movf	_prec& (0+255),w,b
 41884   013BB2  11C4               	iorwf	(_prec+1)& (0+255),w,b
 41885   013BB4  B4D8               	btfsc	status,2,c
 41886   013BB6  D036               	goto	l11862
 41887                           
 41888                           ; BSR set to: 1
 41889                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1137:     ) {;/opt/microchip/
      +                          xc8/v2.50/pic/sources/c99/common/doprnt.c: 1138:         --i;
 41890                           ;stkvar	_i @ sp[(-11)+2]
 41891   013BB8  50E1               	movf	fsr1l,w,c
 41892   013BBA  0FF7               	addlw	-9
 41893   013BBC  6ED9               	movwf	fsr2l,c
 41894   013BBE  50E2               	movf	fsr1h,w,c
 41895   013BC0  6EDA               	movwf	fsr2h,c
 41896   013BC2  0EFF               	movlw	255
 41897   013BC4  22DA               	addwfc	fsr2h,f,c
 41898   013BC6  06DE               	decf	postinc2,f,c
 41899   013BC8  0E00               	movlw	0
 41900   013BCA  5ADD               	subwfb	postdec2,f,c
 41901                           
 41902                           ; BSR set to: 1
 41903                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1140:         dbuf[i] = x;
 41904                           ;stkvar	_x @ sp[(-11)+-7]
 41905                           ;stkvar	_i @ sp[(-11)+2]
 41906   013BCC  0EF7               	movlw	-9
 41907   013BCE  006F FF8C  F02D    	movff	plusw1,btemp+10
 41908   013BD4  0EF8               	movlw	-8
 41909   013BD6  006F FF8C  F02E    	movff	plusw1,btemp+11
 41910   013BDC  0EC6               	movlw	low _dbuf
 41911   013BDE  242D               	addwf	(btemp+10)^0,w,c
 41912   013BE0  6ED9               	movwf	fsr2l,c
 41913   013BE2  0E01               	movlw	high _dbuf
 41914   013BE4  202E               	addwfc	(btemp+11)^0,w,c
 41915   013BE6  6EDA               	movwf	fsr2h,c
 41916   013BE8  0EEE               	movlw	-18
 41917   013BEA  006F FF8F FFDF     	movff	plusw1,indf2
 41918                           
 41919                           ; BSR set to: 1
 41920                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1146:         --i;
 41921                           ;stkvar	_i @ sp[(-11)+2]
 41922   013BF0  50E1               	movf	fsr1l,w,c
 41923   013BF2  0FF7               	addlw	-9
 41924   013BF4  6ED9               	movwf	fsr2l,c
 41925   013BF6  50E2               	movf	fsr1h,w,c
 41926   013BF8  6EDA               	movwf	fsr2h,c
 41927   013BFA  0EFF               	movlw	255
 41928   013BFC  22DA               	addwfc	fsr2h,f,c
 41929   013BFE  06DE               	decf	postinc2,f,c
 41930   013C00  0E00               	movlw	0
 41931   013C02  5ADD               	subwfb	postdec2,f,c
 41932                           
 41933                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1147:         dbuf[i] = '0';
 41934                           ;stkvar	_i @ sp[(-11)+2]
 41935   013C04  0EF7               	movlw	-9
 41936   013C06  006F FF8C  F02D    	movff	plusw1,btemp+10
 41937   013C0C  0EF8               	movlw	-8
 41938   013C0E  006F FF8C  F02E    	movff	plusw1,btemp+11
 41939   013C14  0EC6               	movlw	low _dbuf
 41940   013C16  242D               	addwf	(btemp+10)^0,w,c
 41941   013C18  6ED9               	movwf	fsr2l,c
 41942   013C1A  0E01               	movlw	high _dbuf
 41943   013C1C  202E               	addwfc	(btemp+11)^0,w,c
 41944   013C1E  6EDA               	movwf	fsr2h,c
 41945   013C20  0E30               	movlw	48
 41946   013C22  6EDF               	movwf	indf2,c
 41947   013C24                     l11862:
 41948                           
 41949                           ; BSR set to: 1
 41950                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1152:     return (int) pad(fp
      +                          , &dbuf[i], w);
 41951                           ;stkvar	_w @ sp[(-11)+4]
 41952   013C24  0EF9               	movlw	-7
 41953   013C26  006F FF8F FFE6     	movff	plusw1,postinc1
 41954   013C2C  006F FF8F FFE6     	movff	plusw1,postinc1
 41955                           
 41956                           ;stkvar	_i @ sp[(-13)+2]
 41957   013C32  0EC6               	movlw	low _dbuf
 41958   013C34  6E2D               	movwf	(btemp+10)^0,c
 41959   013C36  0E01               	movlw	high _dbuf
 41960   013C38  6E2E               	movwf	(btemp+11)^0,c
 41961   013C3A  0EF5               	movlw	-11
 41962   013C3C  50E3               	movf	plusw1,w,c
 41963   013C3E  262D               	addwf	(btemp+10)^0,f,c
 41964   013C40  0EF6               	movlw	-10
 41965   013C42  50E3               	movf	plusw1,w,c
 41966   013C44  222E               	addwfc	(btemp+11)^0,f,c
 41967   013C46  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 41968   013C4C  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 41969                           
 41970                           ;stkvar	_fp @ sp[(-15)+-2]
 41971   013C52  0EEF               	movlw	-17
 41972   013C54  006F FF8F FFE6     	movff	plusw1,postinc1
 41973   013C5A  006F FF8F FFE6     	movff	plusw1,postinc1
 41974   013C60  EC91  F0B2         	call	_pad	;wreg free
 41975                           
 41976                           ; _xtoa: autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize
      +                           = 7, vargsize = 0
 41977   013C64  0EEE               	movlw	238
 41978   013C66  26E1               	addwf	fsr1l,f,c
 41979   013C68  0EFF               	movlw	255
 41980   013C6A  22E2               	addwfc	fsr1h,f,c
 41981   013C6C  0012               	return		;funcret
 41982   013C6E                     __end_of_xtoa:
 41983                           	callstack 0
 41984                           
 41985 ;; *************** function _utoa *****************
 41986 ;; Defined at:
 41987 ;;		line 1001 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
 41988 ;; Parameters:    Size  Location     Type
 41989 ;;  fp              2  [STACK] PTR struct _IO_FILE
 41990 ;;		 -> f(11), NULL(0), 
 41991 ;;  d               4  [STACK] unsigned long 
 41992 ;; Auto vars:     Size  Location     Type
 41993 ;;  i               2  [STACK] int 
 41994 ;;  w               2  [STACK] int 
 41995 ;;  p               2  [STACK] int 
 41996 ;; Return value:  Size  Location     Type
 41997 ;;                  2  [STACK] int 
 41998 ;; Registers used:
 41999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl
 42000 ;; Tracked objects:
 42001 ;;		On entry : 0/1
 42002 ;;		On exit  : 0/0
 42003 ;;		Unchanged: 0/0
 42004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 42005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42009 ;;Total ram usage:        0 bytes
 42010 ;; Hardware stack levels used: 1
 42011 ;; Hardware stack levels required when called: 8
 42012 ;; This function calls:
 42013 ;;		___lldiv
 42014 ;;		___llmod
 42015 ;;		_pad
 42016 ;; This function is called by:
 42017 ;;		_vfpfcnvrt
 42018 ;; This function uses a reentrant model
 42019 ;;
 42020                           
 42021                           	psect	text98
 42022   015020                     __ptext98:
 42023                           	callstack 0
 42024   015020                     _utoa:
 42025                           	callstack 0
 42026                           
 42027                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 42028   015020  0E06               	movlw	6
 42029   015022  26E1               	addwf	fsr1l,f,c
 42030   015024  0E00               	movlw	0
 42031   015026  22E2               	addwfc	fsr1h,f,c
 42032                           
 42033                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1001: static int utoa(FILE *f
      +                          p, vfpf_uint_t d);/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1002: {;/opt
      +                          /microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1003:     int i, w;;/opt/microchip
      +                          /xc8/v2.50/pic/sources/c99/common/doprnt.c: 1005:  int p;;/opt/microchip/xc8/v2.50/pic/s
      +                          ources/c99/common/doprnt.c: 1013:     if (!(prec < 0)) {
 42034                           
 42035                           ;incstack = 0
 42036   015028  0101               	movlb	1	; () banked
 42037   01502A  AFC4               	btfss	(_prec+1)& (0+255),7,b
 42038                           
 42039                           ; BSR set to: 1
 42040                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1014:         flags &= ~(1 <<
      +                           1);
 42041   01502C  93C5               	bcf	_flags& (0+255),1,b
 42042                           
 42043                           ; BSR set to: 1
 42044                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1017:     p = (0 <= prec) ? p
      +                          rec : 1;
 42045   01502E  AFC4               	btfss	(_prec+1)& (0+255),7,b
 42046   015030  D00D               	goto	l11764
 42047                           
 42048                           ; BSR set to: 1
 42049   015032  0E01               	movlw	1
 42050   015034  6E2D               	movwf	(btemp+10)^0,c
 42051   015036  0E00               	movlw	0
 42052   015038  6E2E               	movwf	(btemp+11)^0,c
 42053                           
 42054                           ;stkvar	_p @ sp[(-6)+4]
 42055   01503A  0EFE               	movlw	-2
 42056   01503C  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 42057   015042  0EFF               	movlw	-1
 42058   015044  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 42059   01504A  D008               	goto	l3240
 42060   01504C                     l11764:
 42061                           
 42062                           ; BSR set to: 1
 42063                           ;stkvar	_p @ sp[(-6)+4]
 42064   01504C  0EFE               	movlw	-2
 42065   01504E  0060  F70F  FFE3   	movff	_prec,plusw1
 42066   015054  0EFF               	movlw	-1
 42067   015056  0060  F713  FFE3   	movff	_prec+1,plusw1
 42068   01505C                     l3240:
 42069                           
 42070                           ; BSR set to: 1
 42071                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1019:     w = width;
 42072                           ;stkvar	_w @ sp[(-6)+2]
 42073   01505C  0EFC               	movlw	-4
 42074   01505E  0060  F707  FFE3   	movff	_width,plusw1
 42075   015064  0EFD               	movlw	-3
 42076   015066  0060  F70B  FFE3   	movff	_width+1,plusw1
 42077                           
 42078                           ; BSR set to: 1
 42079                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1022:     i = sizeof(dbuf) - 
      +                          1;
 42080   01506C  0E1F               	movlw	31
 42081   01506E  6E2D               	movwf	(btemp+10)^0,c
 42082   015070  0E00               	movlw	0
 42083   015072  6E2E               	movwf	(btemp+11)^0,c
 42084                           
 42085                           ;stkvar	_i @ sp[(-6)+0]
 42086   015074  0EFA               	movlw	-6
 42087   015076  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 42088   01507C  0EFB               	movlw	-5
 42089   01507E  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 42090                           
 42091                           ; BSR set to: 1
 42092                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1023:     dbuf[i] = '\0';
 42093   015084  6BE5               	clrf	(_dbuf+31)& (0+255),b
 42094                           
 42095                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1024:     while (i && (d != 0
 42096   015086  D071               	goto	l11780
 42097   015088                     l11770:
 42098                           
 42099                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1033:     )) {;/opt/microchip
      +                          /xc8/v2.50/pic/sources/c99/common/doprnt.c: 1034:         --i;
 42100                           ;stkvar	_i @ sp[(-6)+0]
 42101   015088  50E1               	movf	fsr1l,w,c
 42102   01508A  0FFA               	addlw	-6
 42103   01508C  6ED9               	movwf	fsr2l,c
 42104   01508E  50E2               	movf	fsr1h,w,c
 42105   015090  6EDA               	movwf	fsr2h,c
 42106   015092  0EFF               	movlw	255
 42107   015094  22DA               	addwfc	fsr2h,f,c
 42108   015096  06DE               	decf	postinc2,f,c
 42109   015098  0E00               	movlw	0
 42110   01509A  5ADD               	subwfb	postdec2,f,c
 42111                           
 42112                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1035:         dbuf[i] = '0' +
      +                           (d % 10);
 42113   01509C  0E0A               	movlw	10
 42114   01509E  6EE6               	movwf	postinc1,c
 42115   0150A0  0E00               	movlw	0
 42116   0150A2  6EE6               	movwf	postinc1,c
 42117   0150A4  0E00               	movlw	0
 42118   0150A6  6EE6               	movwf	postinc1,c
 42119   0150A8  0E00               	movlw	0
 42120   0150AA  6EE6               	movwf	postinc1,c
 42121                           
 42122                           ;stkvar	_d @ sp[(-10)+-6]
 42123   0150AC  0EF0               	movlw	-16
 42124   0150AE  006F FF8F FFE6     	movff	plusw1,postinc1
 42125   0150B4  006F FF8F FFE6     	movff	plusw1,postinc1
 42126   0150BA  006F FF8F FFE6     	movff	plusw1,postinc1
 42127   0150C0  006F FF8F FFE6     	movff	plusw1,postinc1
 42128   0150C6  ECDF  F0B4         	call	___llmod	;wreg free
 42129   0150CA  C023  F02E         	movff	btemp,btemp+11
 42130   0150CE  0E30               	movlw	48
 42131   0150D0  262E               	addwf	(btemp+11)^0,f,c
 42132                           
 42133                           ;stkvar	_i @ sp[(-6)+0]
 42134   0150D2  0EFA               	movlw	-6
 42135   0150D4  006F FF8C  F02B    	movff	plusw1,btemp+8
 42136   0150DA  0EFB               	movlw	-5
 42137   0150DC  006F FF8C  F02C    	movff	plusw1,btemp+9
 42138   0150E2  0EC6               	movlw	low _dbuf
 42139   0150E4  242B               	addwf	(btemp+8)^0,w,c
 42140   0150E6  6ED9               	movwf	fsr2l,c
 42141   0150E8  0E01               	movlw	high _dbuf
 42142   0150EA  202C               	addwfc	(btemp+9)^0,w,c
 42143   0150EC  6EDA               	movwf	fsr2h,c
 42144   0150EE  0060  F0BB  FFDF   	movff	btemp+11,indf2
 42145                           
 42146                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1037:         --p;
 42147                           ;stkvar	_p @ sp[(-6)+4]
 42148   0150F4  50E1               	movf	fsr1l,w,c
 42149   0150F6  0FFE               	addlw	-2
 42150   0150F8  6ED9               	movwf	fsr2l,c
 42151   0150FA  50E2               	movf	fsr1h,w,c
 42152   0150FC  6EDA               	movwf	fsr2h,c
 42153   0150FE  0EFF               	movlw	255
 42154   015100  22DA               	addwfc	fsr2h,f,c
 42155   015102  06DE               	decf	postinc2,f,c
 42156   015104  0E00               	movlw	0
 42157   015106  5ADD               	subwfb	postdec2,f,c
 42158                           
 42159                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1041:         --w;
 42160                           ;stkvar	_w @ sp[(-6)+2]
 42161   015108  50E1               	movf	fsr1l,w,c
 42162   01510A  0FFC               	addlw	-4
 42163   01510C  6ED9               	movwf	fsr2l,c
 42164   01510E  50E2               	movf	fsr1h,w,c
 42165   015110  6EDA               	movwf	fsr2h,c
 42166   015112  0EFF               	movlw	255
 42167   015114  22DA               	addwfc	fsr2h,f,c
 42168   015116  06DE               	decf	postinc2,f,c
 42169   015118  0E00               	movlw	0
 42170   01511A  5ADD               	subwfb	postdec2,f,c
 42171                           
 42172                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1042:         d = d / 10;
 42173   01511C  0E0A               	movlw	10
 42174   01511E  6EE6               	movwf	postinc1,c
 42175   015120  0E00               	movlw	0
 42176   015122  6EE6               	movwf	postinc1,c
 42177   015124  0E00               	movlw	0
 42178   015126  6EE6               	movwf	postinc1,c
 42179   015128  0E00               	movlw	0
 42180   01512A  6EE6               	movwf	postinc1,c
 42181                           
 42182                           ;stkvar	_d @ sp[(-10)+-6]
 42183   01512C  0EF0               	movlw	-16
 42184   01512E  006F FF8F FFE6     	movff	plusw1,postinc1
 42185   015134  006F FF8F FFE6     	movff	plusw1,postinc1
 42186   01513A  006F FF8F FFE6     	movff	plusw1,postinc1
 42187   015140  006F FF8F FFE6     	movff	plusw1,postinc1
 42188   015146  EC8B  F0B1         	call	___lldiv	;wreg free
 42189                           
 42190                           ;stkvar	_d @ sp[(-6)+-6]
 42191   01514A  0EF4               	movlw	-12
 42192   01514C  0060  F08F  FFE3   	movff	btemp,plusw1
 42193   015152  0EF5               	movlw	-11
 42194   015154  0060  F093  FFE3   	movff	btemp+1,plusw1
 42195   01515A  0EF6               	movlw	-10
 42196   01515C  0060  F097  FFE3   	movff	btemp+2,plusw1
 42197   015162  0EF7               	movlw	-9
 42198   015164  0060  F09B  FFE3   	movff	btemp+3,plusw1
 42199   01516A                     l11780:
 42200                           
 42201                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1024:     while (i && (d != 0
 42202                           ;stkvar	_i @ sp[(-6)+0]
 42203   01516A  0EFA               	movlw	-6
 42204   01516C  006F FF8C  F023    	movff	plusw1,btemp
 42205   015172  0EFB               	movlw	-5
 42206   015174  50E3               	movf	plusw1,w,c
 42207   015176  1023               	iorwf	btemp^0,w,c
 42208   015178  B4D8               	btfsc	status,2,c
 42209   01517A  D024               	goto	u8460
 42210                           
 42211                           ;stkvar	_d @ sp[(-6)+-6]
 42212   01517C  0EF4               	movlw	-12
 42213   01517E  50E3               	movf	plusw1,w,c
 42214   015180  E183               	bnz	l11770
 42215   015182  0EF5               	movlw	-11
 42216   015184  50E3               	movf	plusw1,w,c
 42217   015186  E180               	bnz	l11770
 42218   015188  0EF6               	movlw	-10
 42219   01518A  50E3               	movf	plusw1,w,c
 42220   01518C  E103               	bnz	u8431
 42221   01518E  0EF7               	movlw	-9
 42222   015190  50E3               	movf	plusw1,w,c
 42223   015192  A4D8               	btfss	status,2,c
 42224   015194                     u8431:
 42225   015194  D779               	goto	l11770
 42226                           
 42227                           ;stkvar	_p @ sp[(-6)+4]
 42228   015196  0EFF               	movlw	-1
 42229   015198  BEE3               	btfsc	plusw1,7,c
 42230   01519A  D007               	goto	u8440
 42231   01519C  0EFF               	movlw	-1
 42232   01519E  50E3               	movf	plusw1,w,c
 42233   0151A0  E103               	bnz	u8441
 42234   0151A2  0EFE               	movlw	-2
 42235   0151A4  04E3               	decf	plusw1,w,c
 42236   0151A6  B0D8               	btfsc	status,0,c
 42237   0151A8                     u8441:
 42238   0151A8  D76F               	goto	l11770
 42239   0151AA                     u8440:
 42240                           
 42241                           ;stkvar	_w @ sp[(-6)+2]
 42242   0151AA  0EFD               	movlw	-3
 42243   0151AC  BEE3               	btfsc	plusw1,7,c
 42244   0151AE  D00A               	goto	u8460
 42245   0151B0  0EFD               	movlw	-3
 42246   0151B2  50E3               	movf	plusw1,w,c
 42247   0151B4  E104               	bnz	u8450
 42248   0151B6  0EFC               	movlw	-4
 42249   0151B8  04E3               	decf	plusw1,w,c
 42250   0151BA  A0D8               	btfss	status,0,c
 42251   0151BC  D003               	goto	u8460
 42252   0151BE                     u8450:
 42253   0151BE  0101               	movlb	1	; () banked
 42254   0151C0  B3C5               	btfsc	_flags& (0+255),1,b
 42255   0151C2  D762               	goto	l11770
 42256   0151C4                     u8460:
 42257                           
 42258                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1046:     return (int) pad(fp
      +                          , &dbuf[i], w);
 42259                           ;stkvar	_w @ sp[(-6)+2]
 42260   0151C4  0EFC               	movlw	-4
 42261   0151C6  006F FF8F FFE6     	movff	plusw1,postinc1
 42262   0151CC  006F FF8F FFE6     	movff	plusw1,postinc1
 42263                           
 42264                           ;stkvar	_i @ sp[(-8)+0]
 42265   0151D2  0EC6               	movlw	low _dbuf
 42266   0151D4  6E2D               	movwf	(btemp+10)^0,c
 42267   0151D6  0E01               	movlw	high _dbuf
 42268   0151D8  6E2E               	movwf	(btemp+11)^0,c
 42269   0151DA  0EF8               	movlw	-8
 42270   0151DC  50E3               	movf	plusw1,w,c
 42271   0151DE  262D               	addwf	(btemp+10)^0,f,c
 42272   0151E0  0EF9               	movlw	-7
 42273   0151E2  50E3               	movf	plusw1,w,c
 42274   0151E4  222E               	addwfc	(btemp+11)^0,f,c
 42275   0151E6  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 42276   0151EC  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 42277                           
 42278                           ;stkvar	_fp @ sp[(-10)+-2]
 42279   0151F2  0EF4               	movlw	-12
 42280   0151F4  006F FF8F FFE6     	movff	plusw1,postinc1
 42281   0151FA  006F FF8F FFE6     	movff	plusw1,postinc1
 42282   015200  EC91  F0B2         	call	_pad	;wreg free
 42283                           
 42284                           ; _utoa: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize 
      +                          = 6, vargsize = 0
 42285   015204  0EF4               	movlw	244
 42286   015206  26E1               	addwf	fsr1l,f,c
 42287   015208  0EFF               	movlw	255
 42288   01520A  22E2               	addwfc	fsr1h,f,c
 42289   01520C  0012               	return		;funcret
 42290   01520E                     __end_of_utoa:
 42291                           	callstack 0
 42292                           
 42293 ;; *************** function ___llmod *****************
 42294 ;; Defined at:
 42295 ;;		line 7 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/llmod.c"
 42296 ;; Parameters:    Size  Location     Type
 42297 ;;  dividend        4  [STACK] unsigned long 
 42298 ;;  divisor         4  [STACK] unsigned long 
 42299 ;; Auto vars:     Size  Location     Type
 42300 ;;  counter         1  [STACK] unsigned char 
 42301 ;; Return value:  Size  Location     Type
 42302 ;;                  4  [STACK] unsigned long 
 42303 ;; Registers used:
 42304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 42305 ;; Tracked objects:
 42306 ;;		On entry : 0/1
 42307 ;;		On exit  : 0/0
 42308 ;;		Unchanged: 0/0
 42309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 42310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42314 ;;Total ram usage:        0 bytes
 42315 ;; Hardware stack levels used: 1
 42316 ;; Hardware stack levels required when called: 3
 42317 ;; This function calls:
 42318 ;;		Nothing
 42319 ;; This function is called by:
 42320 ;;		_utoa
 42321 ;; This function uses a reentrant model
 42322 ;;
 42323                           
 42324                           	psect	text99
 42325   0169BE                     __ptext99:
 42326                           	callstack 0
 42327   0169BE                     ___llmod:
 42328                           	callstack 0
 42329                           
 42330                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 42331   0169BE  52E6               	movf	postinc1,f,c
 42332                           
 42333                           ;stkvar	_divisor @ sp[(-1)+-8]
 42334                           
 42335                           ;incstack = 0
 42336   0169C0  0EF7               	movlw	-9
 42337   0169C2  50E3               	movf	plusw1,w,c
 42338   0169C4  E10A               	bnz	u4260
 42339   0169C6  0EF8               	movlw	-8
 42340   0169C8  50E3               	movf	plusw1,w,c
 42341   0169CA  E107               	bnz	u4260
 42342   0169CC  0EF9               	movlw	-7
 42343   0169CE  50E3               	movf	plusw1,w,c
 42344   0169D0  E104               	bnz	u4260
 42345   0169D2  0EFA               	movlw	-6
 42346   0169D4  50E3               	movf	plusw1,w,c
 42347   0169D6  B4D8               	btfsc	status,2,c
 42348   0169D8  D04D               	goto	u4290
 42349   0169DA                     u4260:
 42350                           
 42351                           ;stkvar	_counter @ sp[(-1)+0]
 42352   0169DA  0EFF               	movlw	-1
 42353   0169DC  6AE3               	clrf	plusw1,c
 42354   0169DE  D00A               	goto	L36
 42355   0169E0                     l7580:
 42356                           
 42357                           ;stkvar	_divisor @ sp[(-1)+-8]
 42358   0169E0  90D8               	bcf	status,0,c
 42359   0169E2  0EF7               	movlw	-9
 42360   0169E4  36E3               	rlcf	plusw1,f,c
 42361   0169E6  0EF8               	movlw	-8
 42362   0169E8  36E3               	rlcf	plusw1,f,c
 42363   0169EA  0EF9               	movlw	-7
 42364   0169EC  36E3               	rlcf	plusw1,f,c
 42365   0169EE  0EFA               	movlw	-6
 42366   0169F0  36E3               	rlcf	plusw1,f,c
 42367                           
 42368                           ;stkvar	_counter @ sp[(-1)+0]
 42369   0169F2  0EFF               	movlw	-1
 42370   0169F4                     L36:
 42371   0169F4  2AE3               	incf	plusw1,f,c
 42372                           
 42373                           ;stkvar	_divisor @ sp[(-1)+-8]
 42374   0169F6  0EFA               	movlw	-6
 42375   0169F8  AEE3               	btfss	plusw1,7,c
 42376   0169FA  D7F2               	goto	l7580
 42377   0169FC                     u4270:
 42378                           
 42379                           ;stkvar	_divisor @ sp[(-1)+-8]
 42380                           ;stkvar	_dividend @ sp[(-1)+-4]
 42381   0169FC  50E1               	movf	fsr1l,w,c
 42382   0169FE  0FFB               	addlw	-5
 42383   016A00  6ED9               	movwf	fsr2l,c
 42384   016A02  50E2               	movf	fsr1h,w,c
 42385   016A04  6EDA               	movwf	fsr2h,c
 42386   016A06  0EFF               	movlw	255
 42387   016A08  22DA               	addwfc	fsr2h,f,c
 42388   016A0A  0EF7               	movlw	-9
 42389   016A0C  50E3               	movf	plusw1,w,c
 42390   016A0E  5CDE               	subwf	postinc2,w,c
 42391   016A10  0EF8               	movlw	-8
 42392   016A12  50E3               	movf	plusw1,w,c
 42393   016A14  58DE               	subwfb	postinc2,w,c
 42394   016A16  0EF9               	movlw	-7
 42395   016A18  50E3               	movf	plusw1,w,c
 42396   016A1A  58DE               	subwfb	postinc2,w,c
 42397   016A1C  0EFA               	movlw	-6
 42398   016A1E  50E3               	movf	plusw1,w,c
 42399   016A20  58DE               	subwfb	postinc2,w,c
 42400   016A22  A0D8               	btfss	status,0,c
 42401   016A24  D013               	goto	l7588
 42402                           
 42403                           ;stkvar	_divisor @ sp[(-1)+-8]
 42404                           ;stkvar	_dividend @ sp[(-1)+-4]
 42405   016A26  50E1               	movf	fsr1l,w,c
 42406   016A28  0FFB               	addlw	-5
 42407   016A2A  6ED9               	movwf	fsr2l,c
 42408   016A2C  50E2               	movf	fsr1h,w,c
 42409   016A2E  6EDA               	movwf	fsr2h,c
 42410   016A30  0EFF               	movlw	255
 42411   016A32  22DA               	addwfc	fsr2h,f,c
 42412   016A34  0EF7               	movlw	-9
 42413   016A36  50E3               	movf	plusw1,w,c
 42414   016A38  5EDE               	subwf	postinc2,f,c
 42415   016A3A  0EF8               	movlw	-8
 42416   016A3C  50E3               	movf	plusw1,w,c
 42417   016A3E  5ADE               	subwfb	postinc2,f,c
 42418   016A40  0EF9               	movlw	-7
 42419   016A42  50E3               	movf	plusw1,w,c
 42420   016A44  5ADE               	subwfb	postinc2,f,c
 42421   016A46  0EFA               	movlw	-6
 42422   016A48  50E3               	movf	plusw1,w,c
 42423   016A4A  5ADE               	subwfb	postinc2,f,c
 42424   016A4C                     l7588:
 42425                           
 42426                           ;stkvar	_divisor @ sp[(-1)+-8]
 42427   016A4C  90D8               	bcf	status,0,c
 42428   016A4E  0EFA               	movlw	-6
 42429   016A50  32E3               	rrcf	plusw1,f,c
 42430   016A52  0EF9               	movlw	-7
 42431   016A54  32E3               	rrcf	plusw1,f,c
 42432   016A56  0EF8               	movlw	-8
 42433   016A58  32E3               	rrcf	plusw1,f,c
 42434   016A5A  0EF7               	movlw	-9
 42435   016A5C  32E3               	rrcf	plusw1,f,c
 42436                           
 42437                           ;stkvar	_counter @ sp[(-1)+0]
 42438   016A5E  0EFF               	movlw	-1
 42439   016A60  50E3               	movf	plusw1,w,c
 42440   016A62  6E23               	movwf	btemp^0,c
 42441   016A64  0E01               	movlw	1
 42442   016A66  5E23               	subwf	btemp^0,f,c
 42443   016A68  0EFF               	movlw	-1
 42444   016A6A  0060  F08F  FFE3   	movff	btemp,plusw1
 42445   016A70  A4D8               	btfss	status,2,c
 42446   016A72  D7C4               	goto	u4270
 42447   016A74                     u4290:
 42448                           
 42449                           ;stkvar	_dividend @ sp[(-1)+-4]
 42450   016A74  0EFB               	movlw	-5
 42451   016A76  006F FF8C  F023    	movff	plusw1,btemp
 42452   016A7C  0EFC               	movlw	-4
 42453   016A7E  006F FF8C  F024    	movff	plusw1,btemp+1
 42454   016A84  0EFD               	movlw	-3
 42455   016A86  006F FF8C  F025    	movff	plusw1,btemp+2
 42456   016A8C  0EFE               	movlw	-2
 42457   016A8E  006F FF8C  F026    	movff	plusw1,btemp+3
 42458                           
 42459                           ; ___llmod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 42460   016A94  0EF7               	movlw	247
 42461   016A96  26E1               	addwf	fsr1l,f,c
 42462   016A98  0EFF               	movlw	255
 42463   016A9A  22E2               	addwfc	fsr1h,f,c
 42464   016A9C  0012               	return		;funcret
 42465   016A9E                     __end_of___llmod:
 42466                           	callstack 0
 42467                           
 42468 ;; *************** function ___lldiv *****************
 42469 ;; Defined at:
 42470 ;;		line 7 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/__lldiv.c"
 42471 ;; Parameters:    Size  Location     Type
 42472 ;;  dividend        4  [STACK] unsigned long 
 42473 ;;  divisor         4  [STACK] unsigned long 
 42474 ;; Auto vars:     Size  Location     Type
 42475 ;;  quotient        4  [STACK] unsigned long 
 42476 ;;  counter         1  [STACK] unsigned char 
 42477 ;; Return value:  Size  Location     Type
 42478 ;;                  4  [STACK] unsigned long 
 42479 ;; Registers used:
 42480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 42481 ;; Tracked objects:
 42482 ;;		On entry : 0/1
 42483 ;;		On exit  : 0/0
 42484 ;;		Unchanged: 0/0
 42485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 42486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42490 ;;Total ram usage:        0 bytes
 42491 ;; Hardware stack levels used: 1
 42492 ;; Hardware stack levels required when called: 3
 42493 ;; This function calls:
 42494 ;;		Nothing
 42495 ;; This function is called by:
 42496 ;;		_utoa
 42497 ;; This function uses a reentrant model
 42498 ;;
 42499                           
 42500                           	psect	text100
 42501   016316                     __ptext100:
 42502                           	callstack 0
 42503   016316                     ___lldiv:
 42504                           	callstack 0
 42505                           
 42506                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 42507   016316  0E05               	movlw	5
 42508   016318  26E1               	addwf	fsr1l,f,c
 42509   01631A  0E00               	movlw	0
 42510   01631C  22E2               	addwfc	fsr1h,f,c
 42511                           
 42512                           ;stkvar	_quotient @ sp[(-5)+0]
 42513                           
 42514                           ;incstack = 0
 42515   01631E  0EFB               	movlw	-5
 42516   016320  6AE3               	clrf	plusw1,c
 42517   016322  0EFC               	movlw	-4
 42518   016324  6AE3               	clrf	plusw1,c
 42519   016326  0EFD               	movlw	-3
 42520   016328  6AE3               	clrf	plusw1,c
 42521   01632A  0EFE               	movlw	-2
 42522   01632C  6AE3               	clrf	plusw1,c
 42523                           
 42524                           ;stkvar	_divisor @ sp[(-5)+-8]
 42525   01632E  0EF3               	movlw	-13
 42526   016330  50E3               	movf	plusw1,w,c
 42527   016332  E10A               	bnz	u4020
 42528   016334  0EF4               	movlw	-12
 42529   016336  50E3               	movf	plusw1,w,c
 42530   016338  E107               	bnz	u4020
 42531   01633A  0EF5               	movlw	-11
 42532   01633C  50E3               	movf	plusw1,w,c
 42533   01633E  E104               	bnz	u4020
 42534   016340  0EF6               	movlw	-10
 42535   016342  50E3               	movf	plusw1,w,c
 42536   016344  B4D8               	btfsc	status,2,c
 42537   016346  D058               	goto	u4050
 42538   016348                     u4020:
 42539                           
 42540                           ;stkvar	_counter @ sp[(-5)+4]
 42541   016348  0EFF               	movlw	-1
 42542   01634A  6AE3               	clrf	plusw1,c
 42543   01634C  D00A               	goto	L37
 42544   01634E                     l7476:
 42545                           
 42546                           ;stkvar	_divisor @ sp[(-5)+-8]
 42547   01634E  90D8               	bcf	status,0,c
 42548   016350  0EF3               	movlw	-13
 42549   016352  36E3               	rlcf	plusw1,f,c
 42550   016354  0EF4               	movlw	-12
 42551   016356  36E3               	rlcf	plusw1,f,c
 42552   016358  0EF5               	movlw	-11
 42553   01635A  36E3               	rlcf	plusw1,f,c
 42554   01635C  0EF6               	movlw	-10
 42555   01635E  36E3               	rlcf	plusw1,f,c
 42556                           
 42557                           ;stkvar	_counter @ sp[(-5)+4]
 42558   016360  0EFF               	movlw	-1
 42559   016362                     L37:
 42560   016362  2AE3               	incf	plusw1,f,c
 42561                           
 42562                           ;stkvar	_divisor @ sp[(-5)+-8]
 42563   016364  0EF6               	movlw	-10
 42564   016366  AEE3               	btfss	plusw1,7,c
 42565   016368  D7F2               	goto	l7476
 42566   01636A                     u4030:
 42567                           
 42568                           ;stkvar	_quotient @ sp[(-5)+0]
 42569   01636A  90D8               	bcf	status,0,c
 42570   01636C  0EFB               	movlw	-5
 42571   01636E  36E3               	rlcf	plusw1,f,c
 42572   016370  0EFC               	movlw	-4
 42573   016372  36E3               	rlcf	plusw1,f,c
 42574   016374  0EFD               	movlw	-3
 42575   016376  36E3               	rlcf	plusw1,f,c
 42576   016378  0EFE               	movlw	-2
 42577   01637A  36E3               	rlcf	plusw1,f,c
 42578                           
 42579                           ;stkvar	_divisor @ sp[(-5)+-8]
 42580                           ;stkvar	_dividend @ sp[(-5)+-4]
 42581   01637C  50E1               	movf	fsr1l,w,c
 42582   01637E  0FF7               	addlw	-9
 42583   016380  6ED9               	movwf	fsr2l,c
 42584   016382  50E2               	movf	fsr1h,w,c
 42585   016384  6EDA               	movwf	fsr2h,c
 42586   016386  0EFF               	movlw	255
 42587   016388  22DA               	addwfc	fsr2h,f,c
 42588   01638A  0EF3               	movlw	-13
 42589   01638C  50E3               	movf	plusw1,w,c
 42590   01638E  5CDE               	subwf	postinc2,w,c
 42591   016390  0EF4               	movlw	-12
 42592   016392  50E3               	movf	plusw1,w,c
 42593   016394  58DE               	subwfb	postinc2,w,c
 42594   016396  0EF5               	movlw	-11
 42595   016398  50E3               	movf	plusw1,w,c
 42596   01639A  58DE               	subwfb	postinc2,w,c
 42597   01639C  0EF6               	movlw	-10
 42598   01639E  50E3               	movf	plusw1,w,c
 42599   0163A0  58DE               	subwfb	postinc2,w,c
 42600   0163A2  A0D8               	btfss	status,0,c
 42601   0163A4  D015               	goto	l7488
 42602                           
 42603                           ;stkvar	_divisor @ sp[(-5)+-8]
 42604                           ;stkvar	_dividend @ sp[(-5)+-4]
 42605   0163A6  50E1               	movf	fsr1l,w,c
 42606   0163A8  0FF7               	addlw	-9
 42607   0163AA  6ED9               	movwf	fsr2l,c
 42608   0163AC  50E2               	movf	fsr1h,w,c
 42609   0163AE  6EDA               	movwf	fsr2h,c
 42610   0163B0  0EFF               	movlw	255
 42611   0163B2  22DA               	addwfc	fsr2h,f,c
 42612   0163B4  0EF3               	movlw	-13
 42613   0163B6  50E3               	movf	plusw1,w,c
 42614   0163B8  5EDE               	subwf	postinc2,f,c
 42615   0163BA  0EF4               	movlw	-12
 42616   0163BC  50E3               	movf	plusw1,w,c
 42617   0163BE  5ADE               	subwfb	postinc2,f,c
 42618   0163C0  0EF5               	movlw	-11
 42619   0163C2  50E3               	movf	plusw1,w,c
 42620   0163C4  5ADE               	subwfb	postinc2,f,c
 42621   0163C6  0EF6               	movlw	-10
 42622   0163C8  50E3               	movf	plusw1,w,c
 42623   0163CA  5ADE               	subwfb	postinc2,f,c
 42624                           
 42625                           ;stkvar	_quotient @ sp[(-5)+0]
 42626   0163CC  0EFB               	movlw	-5
 42627   0163CE  80E3               	bsf	plusw1,0,c
 42628   0163D0                     l7488:
 42629                           
 42630                           ;stkvar	_divisor @ sp[(-5)+-8]
 42631   0163D0  90D8               	bcf	status,0,c
 42632   0163D2  0EF6               	movlw	-10
 42633   0163D4  32E3               	rrcf	plusw1,f,c
 42634   0163D6  0EF5               	movlw	-11
 42635   0163D8  32E3               	rrcf	plusw1,f,c
 42636   0163DA  0EF4               	movlw	-12
 42637   0163DC  32E3               	rrcf	plusw1,f,c
 42638   0163DE  0EF3               	movlw	-13
 42639   0163E0  32E3               	rrcf	plusw1,f,c
 42640                           
 42641                           ;stkvar	_counter @ sp[(-5)+4]
 42642   0163E2  0EFF               	movlw	-1
 42643   0163E4  50E3               	movf	plusw1,w,c
 42644   0163E6  6E23               	movwf	btemp^0,c
 42645   0163E8  0E01               	movlw	1
 42646   0163EA  5E23               	subwf	btemp^0,f,c
 42647   0163EC  0EFF               	movlw	-1
 42648   0163EE  0060  F08F  FFE3   	movff	btemp,plusw1
 42649   0163F4  A4D8               	btfss	status,2,c
 42650   0163F6  D7B9               	goto	u4030
 42651   0163F8                     u4050:
 42652                           
 42653                           ;stkvar	_quotient @ sp[(-5)+0]
 42654   0163F8  0EFB               	movlw	-5
 42655   0163FA  006F FF8C  F023    	movff	plusw1,btemp
 42656   016400  0EFC               	movlw	-4
 42657   016402  006F FF8C  F024    	movff	plusw1,btemp+1
 42658   016408  0EFD               	movlw	-3
 42659   01640A  006F FF8C  F025    	movff	plusw1,btemp+2
 42660   016410  0EFE               	movlw	-2
 42661   016412  006F FF8C  F026    	movff	plusw1,btemp+3
 42662                           
 42663                           ; ___lldiv: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 42664   016418  0EF3               	movlw	243
 42665   01641A  26E1               	addwf	fsr1l,f,c
 42666   01641C  0EFF               	movlw	255
 42667   01641E  22E2               	addwfc	fsr1h,f,c
 42668   016420  0012               	return		;funcret
 42669   016422                     __end_of___lldiv:
 42670                           	callstack 0
 42671                           
 42672 ;; *************** function _stoa *****************
 42673 ;; Defined at:
 42674 ;;		line 942 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
 42675 ;; Parameters:    Size  Location     Type
 42676 ;;  fp              2  [STACK] PTR struct _IO_FILE
 42677 ;;		 -> f(11), NULL(0), 
 42678 ;;  s               2  [STACK] PTR unsigned char 
 42679 ;;		 -> ?_printf(2), ?_sprintf(2), STR_38(9), STR_37(12), 
 42680 ;;		 -> D$lcd(512), D@mconfig$F5154(514), STR_32(6), STR_31(6), 
 42681 ;;		 -> STR_30(6), STR_29(6), STR_7(6), STR_3(6), 
 42682 ;;		 -> T(256), V(387), 
 42683 ;; Auto vars:     Size  Location     Type
 42684 ;;  l               2  [STACK] int 
 42685 ;;  cp              2  [STACK] PTR unsigned char 
 42686 ;;		 -> ?_printf(2), STR_69(7), ?_sprintf(2), STR_38(9), 
 42687 ;;		 -> STR_37(12), D$lcd(512), D@mconfig$F5154(514), STR_32(6), 
 42688 ;;		 -> STR_31(6), STR_30(6), STR_29(6), STR_7(6), 
 42689 ;;		 -> STR_3(6), T(256), V(387), 
 42690 ;;  w               2  [STACK] int 
 42691 ;;  p               2  [STACK] int 
 42692 ;; Return value:  Size  Location     Type
 42693 ;;                  2  [STACK] int 
 42694 ;; Registers used:
 42695 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 42696 ;; Tracked objects:
 42697 ;;		On entry : 0/1
 42698 ;;		On exit  : 0/0
 42699 ;;		Unchanged: 0/0
 42700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 42701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42705 ;;Total ram usage:        0 bytes
 42706 ;; Hardware stack levels used: 1
 42707 ;; Hardware stack levels required when called: 6
 42708 ;; This function calls:
 42709 ;;		_fputc
 42710 ;; This function is called by:
 42711 ;;		_vfpfcnvrt
 42712 ;; This function uses a reentrant model
 42713 ;;
 42714                           
 42715                           	psect	text101
 42716   01422A                     __ptext101:
 42717                           	callstack 0
 42718   01422A                     _stoa:
 42719                           	callstack 0
 42720                           
 42721                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 42722   01422A  0E08               	movlw	8
 42723   01422C  26E1               	addwf	fsr1l,f,c
 42724   01422E  0E00               	movlw	0
 42725   014230  22E2               	addwfc	fsr1h,f,c
 42726                           
 42727                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 942: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 943: {;/opt/microch
      +                          ip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 944:     char *cp;;/opt/microchip/xc8/v2.5
      +                          0/pic/sources/c99/common/doprnt.c: 945:     int l, p;;/opt/microchip/xc8/v2.50/pic/sourc
      +                          es/c99/common/doprnt.c: 947:  int w;;/opt/microchip/xc8/v2.50/pic/sources/c99/common/dop
      +                          rnt.c: 951:     cp = s;
 42728                           ;stkvar	_s @ sp[(-8)+-4]
 42729                           
 42730                           ;incstack = 0
 42731   014232  0EF4               	movlw	-12
 42732   014234  006F FF8C  F02D    	movff	plusw1,btemp+10
 42733   01423A  0EF5               	movlw	-11
 42734   01423C  006F FF8C  F02E    	movff	plusw1,btemp+11
 42735                           
 42736                           ;stkvar	_cp @ sp[(-8)+2]
 42737   014242  0EFB               	movlw	-5
 42738   014244  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 42739   01424A  0EFA               	movlw	-6
 42740   01424C  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 42741                           
 42742                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 952:     if (!cp) {
 42743                           ;stkvar	_cp @ sp[(-8)+2]
 42744   014252  0EFA               	movlw	-6
 42745   014254  006F FF8C  F023    	movff	plusw1,btemp
 42746   01425A  0EFB               	movlw	-5
 42747   01425C  50E3               	movf	plusw1,w,c
 42748   01425E  1023               	iorwf	btemp^0,w,c
 42749   014260  A4D8               	btfss	status,2,c
 42750   014262  D00C               	goto	l11712
 42751                           
 42752                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 953:         cp = "(null)";
 42753                           ;stkvar	_cp @ sp[(-8)+2]
 42754   014264  0EFF               	movlw	high STR_69
 42755   014266  6E23               	movwf	btemp^0,c
 42756   014268  0EFB               	movlw	-5
 42757   01426A  0060  F08F  FFE3   	movff	btemp,plusw1
 42758   014270  0EE8               	movlw	low STR_69
 42759   014272  6E23               	movwf	btemp^0,c
 42760   014274  0EFA               	movlw	-6
 42761   014276  0060  F08F  FFE3   	movff	btemp,plusw1
 42762   01427C                     l11712:
 42763                           
 42764                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 957:  for (l = 0; cp[l] != '\
      +                          0'; l++) {
 42765                           ;stkvar	_l @ sp[(-8)+0]
 42766   01427C  0EF8               	movlw	-8
 42767   01427E  6AE3               	clrf	plusw1,c
 42768   014280  0EF9               	movlw	-7
 42769   014282  6AE3               	clrf	plusw1,c
 42770   014284  D011               	goto	l11716
 42771   014286                     l11714:
 42772                           
 42773                           ;stkvar	_l @ sp[(-8)+0]
 42774   014286  0EF8               	movlw	-8
 42775   014288  50E3               	movf	plusw1,w,c
 42776   01428A  0F01               	addlw	1
 42777   01428C  6E23               	movwf	btemp^0,c
 42778   01428E  0EF8               	movlw	-8
 42779   014290  0060  F08F  FFE3   	movff	btemp,plusw1
 42780   014296  6A23               	clrf	btemp^0,c
 42781   014298  0EF9               	movlw	-7
 42782   01429A  50E3               	movf	plusw1,w,c
 42783   01429C  2023               	addwfc	btemp^0,w,c
 42784   01429E  6E23               	movwf	btemp^0,c
 42785   0142A0  0EF9               	movlw	-7
 42786   0142A2  0060  F08F  FFE3   	movff	btemp,plusw1
 42787   0142A8                     l11716:
 42788                           
 42789                           ;stkvar	_l @ sp[(-8)+0]
 42790                           ;stkvar	_cp @ sp[(-8)+2]
 42791   0142A8  0EFA               	movlw	-6
 42792   0142AA  006F FF8C  F02D    	movff	plusw1,btemp+10
 42793   0142B0  0EFB               	movlw	-5
 42794   0142B2  006F FF8C  F02E    	movff	plusw1,btemp+11
 42795   0142B8  0EF8               	movlw	-8
 42796   0142BA  50E3               	movf	plusw1,w,c
 42797   0142BC  262D               	addwf	(btemp+10)^0,f,c
 42798   0142BE  0EF9               	movlw	-7
 42799   0142C0  50E3               	movf	plusw1,w,c
 42800   0142C2  222E               	addwfc	(btemp+11)^0,f,c
 42801   0142C4  0060  F0B7  FFF6   	movff	btemp+10,tblptrl
 42802   0142CA  0060  F0BB  FFF7   	movff	btemp+11,tblptrh
 42803   0142D0  0E00               	movlw	low (__mediumconst shr (0+16))
 42804   0142D2  6EF8               	movwf	tblptru,c
 42805   0142D4  0E1F               	movlw	(high __ramtop+-1)
 42806   0142D6  64F7               	cpfsgt	tblptrh,c
 42807   0142D8  D003               	bra	u8307
 42808   0142DA  0008               	tblrd		*
 42809   0142DC  50F5               	movf	tablat,w,c
 42810   0142DE  D007               	bra	u8300
 42811   0142E0                     u8307:
 42812   0142E0  006F FFDB FFE9     	movff	tblptrl,fsr0l
 42813   0142E6  006F FFDF FFEA     	movff	tblptrh,fsr0h
 42814   0142EC  50EF               	movf	indf0,w,c
 42815   0142EE                     u8300:
 42816   0142EE  0900               	iorlw	0
 42817   0142F0  A4D8               	btfss	status,2,c
 42818   0142F2  D7C9               	goto	l11714
 42819                           
 42820                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 961:  if (!(prec < 0) && (pre
      +                          c < l)) {
 42821   0142F4  0101               	movlb	1	; () banked
 42822   0142F6  BFC4               	btfsc	(_prec+1)& (0+255),7,b
 42823   0142F8  D014               	goto	l11724
 42824                           
 42825                           ; BSR set to: 1
 42826                           ;stkvar	_l @ sp[(-8)+0]
 42827   0142FA  0EF8               	movlw	-8
 42828   0142FC  50E3               	movf	plusw1,w,c
 42829   0142FE  5DC3               	subwf	_prec& (0+255),w,b
 42830   014300  51C4               	movf	(_prec+1)& (0+255),w,b
 42831   014302  0A80               	xorlw	128
 42832   014304  6E23               	movwf	btemp^0,c
 42833   014306  0EF9               	movlw	-7
 42834   014308  50E3               	movf	plusw1,w,c
 42835   01430A  0A80               	xorlw	128
 42836   01430C  5823               	subwfb	btemp^0,w,c
 42837   01430E  B0D8               	btfsc	status,0,c
 42838   014310  D008               	goto	l11724
 42839                           
 42840                           ; BSR set to: 1
 42841                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 962:   l = prec;
 42842                           ;stkvar	_l @ sp[(-8)+0]
 42843   014312  0EF8               	movlw	-8
 42844   014314  0060  F70F  FFE3   	movff	_prec,plusw1
 42845   01431A  0EF9               	movlw	-7
 42846   01431C  0060  F713  FFE3   	movff	_prec+1,plusw1
 42847   014322                     l11724:
 42848                           
 42849                           ; BSR set to: 1
 42850                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 965:     p = l;
 42851                           ;stkvar	_l @ sp[(-8)+0]
 42852                           ;stkvar	_p @ sp[(-8)+6]
 42853   014322  0EF8               	movlw	-8
 42854   014324  006F FF8C  F023    	movff	plusw1,btemp
 42855   01432A  0EFE               	movlw	-2
 42856   01432C  0060  F08F  FFE3   	movff	btemp,plusw1
 42857   014332  0EF9               	movlw	-7
 42858   014334  006F FF8C  F023    	movff	plusw1,btemp
 42859   01433A  0EFF               	movlw	-1
 42860   01433C  0060  F08F  FFE3   	movff	btemp,plusw1
 42861                           
 42862                           ; BSR set to: 1
 42863                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 969:     w = width;
 42864                           ;stkvar	_w @ sp[(-8)+4]
 42865   014342  0EFC               	movlw	-4
 42866   014344  0060  F707  FFE3   	movff	_width,plusw1
 42867   01434A  0EFD               	movlw	-3
 42868   01434C  0060  F70B  FFE3   	movff	_width+1,plusw1
 42869                           
 42870                           ; BSR set to: 1
 42871                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 970:     if (!(flags & (1 << 
      +                          0))) {
 42872   014352  A1C5               	btfss	_flags& (0+255),0,b
 42873   014354  D01F               	goto	l11736
 42874   014356  D066               	goto	l11742
 42875   014358                     l11732:
 42876                           
 42877                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 972:             fputc(' ', f
      +                          p);
 42878                           ;stkvar	_fp @ sp[(-8)+-2]
 42879   014358  0EF6               	movlw	-10
 42880   01435A  006F FF8F FFE6     	movff	plusw1,postinc1
 42881   014360  006F FF8F FFE6     	movff	plusw1,postinc1
 42882   014366  0E20               	movlw	32
 42883   014368  6EE6               	movwf	postinc1,c
 42884   01436A  0E00               	movlw	0
 42885   01436C  6EE6               	movwf	postinc1,c
 42886   01436E  ECBF  F0AE         	call	_fputc	;wreg free
 42887                           
 42888                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 973:             ++l;
 42889                           ;stkvar	_l @ sp[(-8)+0]
 42890   014372  0EF8               	movlw	-8
 42891   014374  50E3               	movf	plusw1,w,c
 42892   014376  0F01               	addlw	1
 42893   014378  6E23               	movwf	btemp^0,c
 42894   01437A  0EF8               	movlw	-8
 42895   01437C  0060  F08F  FFE3   	movff	btemp,plusw1
 42896   014382  6A23               	clrf	btemp^0,c
 42897   014384  0EF9               	movlw	-7
 42898   014386  50E3               	movf	plusw1,w,c
 42899   014388  2023               	addwfc	btemp^0,w,c
 42900   01438A  6E23               	movwf	btemp^0,c
 42901   01438C  0EF9               	movlw	-7
 42902   01438E  0060  F08F  FFE3   	movff	btemp,plusw1
 42903   014394                     l11736:
 42904                           
 42905                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 971:         while (l < w) {
 42906                           ;stkvar	_w @ sp[(-8)+4]
 42907                           ;stkvar	_l @ sp[(-8)+0]
 42908   014394  50E1               	movf	fsr1l,w,c
 42909   014396  0FF8               	addlw	-8
 42910   014398  6ED9               	movwf	fsr2l,c
 42911   01439A  50E2               	movf	fsr1h,w,c
 42912   01439C  6EDA               	movwf	fsr2h,c
 42913   01439E  0EFF               	movlw	255
 42914   0143A0  22DA               	addwfc	fsr2h,f,c
 42915   0143A2  0EFC               	movlw	-4
 42916   0143A4  50E3               	movf	plusw1,w,c
 42917   0143A6  5CDE               	subwf	postinc2,w,c
 42918   0143A8  50DE               	movf	postinc2,w,c
 42919   0143AA  0A80               	xorlw	128
 42920   0143AC  6E23               	movwf	btemp^0,c
 42921   0143AE  0EFD               	movlw	-3
 42922   0143B0  50E3               	movf	plusw1,w,c
 42923   0143B2  0A80               	xorlw	128
 42924   0143B4  5823               	subwfb	btemp^0,w,c
 42925   0143B6  B0D8               	btfsc	status,0,c
 42926   0143B8  D035               	goto	l11742
 42927   0143BA  D7CE               	goto	l11732
 42928   0143BC                     l11738:
 42929                           
 42930                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 980:         fputc(*cp, fp);
 42931                           ;stkvar	_fp @ sp[(-8)+-2]
 42932   0143BC  0EF6               	movlw	-10
 42933   0143BE  006F FF8F FFE6     	movff	plusw1,postinc1
 42934   0143C4  006F FF8F FFE6     	movff	plusw1,postinc1
 42935                           
 42936                           ;stkvar	_cp @ sp[(-10)+2]
 42937   0143CA  0EF8               	movlw	-8
 42938   0143CC  006F FF8F FFF6     	movff	plusw1,tblptrl
 42939   0143D2  0EF9               	movlw	-7
 42940   0143D4  006F FF8F FFF7     	movff	plusw1,tblptrh
 42941   0143DA  0E00               	movlw	low (__mediumconst shr (0+16))
 42942   0143DC  6EF8               	movwf	tblptru,c
 42943   0143DE  0E1F               	movlw	(high __ramtop+-1)
 42944   0143E0  64F7               	cpfsgt	tblptrh,c
 42945   0143E2  D003               	bra	u8367
 42946   0143E4  0008               	tblrd		*
 42947   0143E6  50F5               	movf	tablat,w,c
 42948   0143E8  D007               	bra	u8360
 42949   0143EA                     u8367:
 42950   0143EA  006F FFDB FFE9     	movff	tblptrl,fsr0l
 42951   0143F0  006F FFDF FFEA     	movff	tblptrh,fsr0h
 42952   0143F6  50EF               	movf	indf0,w,c
 42953   0143F8                     u8360:
 42954   0143F8  6EE6               	movwf	postinc1,c
 42955   0143FA  0E00               	movlw	0
 42956   0143FC  6EE6               	movwf	postinc1,c
 42957   0143FE  ECBF  F0AE         	call	_fputc	;wreg free
 42958                           
 42959                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 981:         ++cp;
 42960                           ;stkvar	_cp @ sp[(-8)+2]
 42961   014402  0EFA               	movlw	-6
 42962   014404  50E3               	movf	plusw1,w,c
 42963   014406  0F01               	addlw	1
 42964   014408  6E23               	movwf	btemp^0,c
 42965   01440A  0EFA               	movlw	-6
 42966   01440C  0060  F08F  FFE3   	movff	btemp,plusw1
 42967   014412  6A23               	clrf	btemp^0,c
 42968   014414  0EFB               	movlw	-5
 42969   014416  50E3               	movf	plusw1,w,c
 42970   014418  2023               	addwfc	btemp^0,w,c
 42971   01441A  6E23               	movwf	btemp^0,c
 42972   01441C  0EFB               	movlw	-5
 42973   01441E  0060  F08F  FFE3   	movff	btemp,plusw1
 42974   014424                     l11742:
 42975                           
 42976                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 979:     while (p--) {
 42977                           ;stkvar	_p @ sp[(-8)+6]
 42978   014424  50E1               	movf	fsr1l,w,c
 42979   014426  0FFE               	addlw	-2
 42980   014428  6ED9               	movwf	fsr2l,c
 42981   01442A  50E2               	movf	fsr1h,w,c
 42982   01442C  6EDA               	movwf	fsr2h,c
 42983   01442E  0EFF               	movlw	255
 42984   014430  22DA               	addwfc	fsr2h,f,c
 42985   014432  06DE               	decf	postinc2,f,c
 42986   014434  0E00               	movlw	0
 42987   014436  5ADD               	subwfb	postdec2,f,c
 42988   014438  28DE               	incf	postinc2,w,c
 42989   01443A  E1C0               	bnz	l11738
 42990   01443C  28DE               	incf	postinc2,w,c
 42991   01443E  A4D8               	btfss	status,2,c
 42992   014440  D7BD               	goto	l11738
 42993                           
 42994                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 986:     if (flags & (1 << 0)
      +                          ) {
 42995   014442  0101               	movlb	1	; () banked
 42996   014444  B1C5               	btfsc	_flags& (0+255),0,b
 42997   014446  D01F               	goto	l11750
 42998   014448  D031               	goto	u8390
 42999   01444A                     l11746:
 43000                           
 43001                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 988:             fputc(' ', f
      +                          p);
 43002                           ;stkvar	_fp @ sp[(-8)+-2]
 43003   01444A  0EF6               	movlw	-10
 43004   01444C  006F FF8F FFE6     	movff	plusw1,postinc1
 43005   014452  006F FF8F FFE6     	movff	plusw1,postinc1
 43006   014458  0E20               	movlw	32
 43007   01445A  6EE6               	movwf	postinc1,c
 43008   01445C  0E00               	movlw	0
 43009   01445E  6EE6               	movwf	postinc1,c
 43010   014460  ECBF  F0AE         	call	_fputc	;wreg free
 43011                           
 43012                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 989:             ++l;
 43013                           ;stkvar	_l @ sp[(-8)+0]
 43014   014464  0EF8               	movlw	-8
 43015   014466  50E3               	movf	plusw1,w,c
 43016   014468  0F01               	addlw	1
 43017   01446A  6E23               	movwf	btemp^0,c
 43018   01446C  0EF8               	movlw	-8
 43019   01446E  0060  F08F  FFE3   	movff	btemp,plusw1
 43020   014474  6A23               	clrf	btemp^0,c
 43021   014476  0EF9               	movlw	-7
 43022   014478  50E3               	movf	plusw1,w,c
 43023   01447A  2023               	addwfc	btemp^0,w,c
 43024   01447C  6E23               	movwf	btemp^0,c
 43025   01447E  0EF9               	movlw	-7
 43026   014480  0060  F08F  FFE3   	movff	btemp,plusw1
 43027   014486                     l11750:
 43028                           
 43029                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 987:         while (l < w) {
 43030                           ;stkvar	_w @ sp[(-8)+4]
 43031                           ;stkvar	_l @ sp[(-8)+0]
 43032   014486  50E1               	movf	fsr1l,w,c
 43033   014488  0FF8               	addlw	-8
 43034   01448A  6ED9               	movwf	fsr2l,c
 43035   01448C  50E2               	movf	fsr1h,w,c
 43036   01448E  6EDA               	movwf	fsr2h,c
 43037   014490  0EFF               	movlw	255
 43038   014492  22DA               	addwfc	fsr2h,f,c
 43039   014494  0EFC               	movlw	-4
 43040   014496  50E3               	movf	plusw1,w,c
 43041   014498  5CDE               	subwf	postinc2,w,c
 43042   01449A  50DE               	movf	postinc2,w,c
 43043   01449C  0A80               	xorlw	128
 43044   01449E  6E23               	movwf	btemp^0,c
 43045   0144A0  0EFD               	movlw	-3
 43046   0144A2  50E3               	movf	plusw1,w,c
 43047   0144A4  0A80               	xorlw	128
 43048   0144A6  5823               	subwfb	btemp^0,w,c
 43049   0144A8  A0D8               	btfss	status,0,c
 43050   0144AA  D7CF               	goto	l11746
 43051   0144AC                     u8390:
 43052                           
 43053                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 995:     return l;
 43054                           ;stkvar	_l @ sp[(-8)+0]
 43055   0144AC  0EF8               	movlw	-8
 43056   0144AE  006F FF8C  F023    	movff	plusw1,btemp
 43057   0144B4  0EF9               	movlw	-7
 43058   0144B6  006F FF8C  F024    	movff	plusw1,btemp+1
 43059                           
 43060                           ; _stoa: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize 
      +                          = 4, vargsize = 0
 43061   0144BC  0EF4               	movlw	244
 43062   0144BE  26E1               	addwf	fsr1l,f,c
 43063   0144C0  0EFF               	movlw	255
 43064   0144C2  22E2               	addwfc	fsr1h,f,c
 43065   0144C4  0012               	return		;funcret
 43066   0144C6                     __end_of_stoa:
 43067                           	callstack 0
 43068                           
 43069 ;; *************** function _read_prec_or_width *****************
 43070 ;; Defined at:
 43071 ;;		line 1158 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
 43072 ;; Parameters:    Size  Location     Type
 43073 ;;  fmt             2  [STACK] PTR PTR const unsigned c
 43074 ;;		 -> cfmt(2), 
 43075 ;;  ap              2  [STACK] PTR PTR void [1]
 43076 ;;		 -> ap(2), ap(2), 
 43077 ;; Auto vars:     Size  Location     Type
 43078 ;;  c               1  [STACK] unsigned char 
 43079 ;;  n               2  [STACK] int 
 43080 ;; Return value:  Size  Location     Type
 43081 ;;                  2  [STACK] int 
 43082 ;; Registers used:
 43083 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 43084 ;; Tracked objects:
 43085 ;;		On entry : 3F/1
 43086 ;;		On exit  : 0/0
 43087 ;;		Unchanged: 0/0
 43088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43093 ;;Total ram usage:        0 bytes
 43094 ;; Hardware stack levels used: 1
 43095 ;; Hardware stack levels required when called: 3
 43096 ;; This function calls:
 43097 ;;		Nothing
 43098 ;; This function is called by:
 43099 ;;		_vfpfcnvrt
 43100 ;; This function uses a reentrant model
 43101 ;;
 43102                           
 43103                           	psect	text102
 43104   015B02                     __ptext102:
 43105                           	callstack 0
 43106   015B02                     _read_prec_or_width:
 43107                           	callstack 0
 43108                           
 43109                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43110   015B02  52E6               	movf	postinc1,f,c
 43111   015B04  52E6               	movf	postinc1,f,c
 43112   015B06  52E6               	movf	postinc1,f,c
 43113                           
 43114                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1159:     int n = 0;
 43115                           ;stkvar	_n @ sp[(-3)+1]
 43116                           
 43117                           ;incstack = 0
 43118   015B08  0EFE               	movlw	-2
 43119   015B0A  6AE3               	clrf	plusw1,c
 43120   015B0C  0EFF               	movlw	-1
 43121   015B0E  6AE3               	clrf	plusw1,c
 43122                           
 43123                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1160:     if ((*fmt)[0] == '*
      +                          ') {
 43124                           ;stkvar	_fmt @ sp[(-3)+-2]
 43125   015B10  0EFB               	movlw	-5
 43126   015B12  006F FF8F FFD9     	movff	plusw1,fsr2l
 43127   015B18  0EFC               	movlw	-4
 43128   015B1A  006F FF8F FFDA     	movff	plusw1,fsr2h
 43129   015B20  006F FF7B FFF6     	movff	postinc2,tblptrl
 43130   015B26  006F FF77 FFF7     	movff	postdec2,tblptrh
 43131   015B2C                     	if	0	;tblptru may be non-zero
 43132   015B2C                     	endif
 43133   015B2C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 43134   015B2C  0E00               	movlw	low (__mediumconst shr (0+16))
 43135   015B2E  6EF8               	movwf	tblptru,c
 43136   015B30                     	endif
 43137   015B30  0008               	tblrd		*
 43138   015B32  50F5               	movf	tablat,w,c
 43139   015B34  0A2A               	xorlw	42
 43140   015B36  A4D8               	btfss	status,2,c
 43141   015B38  D05D               	goto	l7940
 43142                           
 43143                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1161:         ++*fmt;
 43144                           ;stkvar	_fmt @ sp[(-3)+-2]
 43145   015B3A  0EFB               	movlw	-5
 43146   015B3C  006F FF8F FFD9     	movff	plusw1,fsr2l
 43147   015B42  0EFC               	movlw	-4
 43148   015B44  006F FF8F FFDA     	movff	plusw1,fsr2h
 43149   015B4A  2ADE               	incf	postinc2,f,c
 43150   015B4C  0E00               	movlw	0
 43151   015B4E  22DD               	addwfc	postdec2,f,c
 43152                           
 43153                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1162:         n = (*(int *)__
      +                          va_arg(*(int **)*ap, (int)0));
 43154                           ;stkvar	_ap @ sp[(-3)+-4]
 43155   015B50  0EF9               	movlw	-7
 43156   015B52  006F FF8F FFD9     	movff	plusw1,fsr2l
 43157   015B58  0EFA               	movlw	-6
 43158   015B5A  006F FF8F FFDA     	movff	plusw1,fsr2h
 43159   015B60  0E02               	movlw	2
 43160   015B62  5EDE               	subwf	postinc2,f,c
 43161   015B64  0E00               	movlw	0
 43162   015B66  5ADD               	subwfb	postdec2,f,c
 43163   015B68  006F FF78  F02D    	movff	postinc2,btemp+10
 43164   015B6E  006F FF74  F02E    	movff	postdec2,btemp+11
 43165   015B74  0060  F0B7  FFD9   	movff	btemp+10,fsr2l
 43166   015B7A  0060  F0BB  FFDA   	movff	btemp+11,fsr2h
 43167   015B80  006F FF78  F02D    	movff	postinc2,btemp+10
 43168   015B86  006F FF74  F02E    	movff	postdec2,btemp+11
 43169                           
 43170                           ;stkvar	_n @ sp[(-3)+1]
 43171   015B8C  0EFE               	movlw	-2
 43172   015B8E  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 43173   015B94  0EFF               	movlw	-1
 43174   015B96  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 43175                           
 43176                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1163:     } else {
 43177   015B9C  D04C               	goto	u5010
 43178   015B9E                     l7936:
 43179                           
 43180                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1166:             n = n * 10 
      +                          + c;
 43181                           ;stkvar	_n @ sp[(-3)+1]
 43182   015B9E  0EFE               	movlw	-2
 43183   015BA0  006F FF8C  F02D    	movff	plusw1,btemp+10
 43184   015BA6  0EFF               	movlw	-1
 43185   015BA8  006F FF8C  F02E    	movff	plusw1,btemp+11
 43186   015BAE  0E0A               	movlw	10
 43187   015BB0  022D               	mulwf	(btemp+10)^0,c
 43188   015BB2  006F FFCC  F02B    	movff	prodl,btemp+8
 43189   015BB8  006F FFD0  F02C    	movff	prodh,btemp+9
 43190   015BBE  022E               	mulwf	(btemp+11)^0,c
 43191   015BC0  50F3               	movf	prodl,w,c
 43192   015BC2  262C               	addwf	(btemp+9)^0,f,c
 43193                           
 43194                           ;stkvar	_c @ sp[(-3)+0]
 43195   015BC4  0EFD               	movlw	-3
 43196   015BC6  50E3               	movf	plusw1,w,c
 43197   015BC8  262B               	addwf	(btemp+8)^0,f,c
 43198   015BCA  0E00               	movlw	0
 43199   015BCC  222C               	addwfc	(btemp+9)^0,f,c
 43200                           
 43201                           ;stkvar	_n @ sp[(-3)+1]
 43202   015BCE  0EFE               	movlw	-2
 43203   015BD0  0060  F0AF  FFE3   	movff	btemp+8,plusw1
 43204   015BD6  0EFF               	movlw	-1
 43205   015BD8  0060  F0B3  FFE3   	movff	btemp+9,plusw1
 43206                           
 43207                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1167:             ++*fmt;
 43208                           ;stkvar	_fmt @ sp[(-3)+-2]
 43209   015BDE  0EFB               	movlw	-5
 43210   015BE0  006F FF8F FFD9     	movff	plusw1,fsr2l
 43211   015BE6  0EFC               	movlw	-4
 43212   015BE8  006F FF8F FFDA     	movff	plusw1,fsr2h
 43213   015BEE  2ADE               	incf	postinc2,f,c
 43214   015BF0  0E00               	movlw	0
 43215   015BF2  22DD               	addwfc	postdec2,f,c
 43216   015BF4                     l7940:
 43217                           
 43218                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1165:         while ((c = ((u
      +                          nsigned)(*fmt)[0]) - '0') < 10) {
 43219                           ;stkvar	_fmt @ sp[(-3)+-2]
 43220   015BF4  0EFB               	movlw	-5
 43221   015BF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 43222   015BFC  0EFC               	movlw	-4
 43223   015BFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 43224   015C04  006F FF7B FFF6     	movff	postinc2,tblptrl
 43225   015C0A  006F FF77 FFF7     	movff	postdec2,tblptrh
 43226   015C10                     	if	0	;tblptru may be non-zero
 43227   015C10                     	endif
 43228   015C10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 43229   015C10  0E00               	movlw	low (__mediumconst shr (0+16))
 43230   015C12  6EF8               	movwf	tblptru,c
 43231   015C14                     	endif
 43232   015C14  0008               	tblrd		*
 43233   015C16  006F FFD4  F02E    	movff	tablat,btemp+11
 43234   015C1C  0ED0               	movlw	208
 43235   015C1E  262E               	addwf	(btemp+11)^0,f,c
 43236                           
 43237                           ;stkvar	_c @ sp[(-3)+0]
 43238   015C20  0EFD               	movlw	-3
 43239   015C22  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 43240   015C28  0EFD               	movlw	-3
 43241   015C2A  006F FF8C  F023    	movff	plusw1,btemp
 43242   015C30  0E09               	movlw	9
 43243   015C32  6423               	cpfsgt	btemp^0,c
 43244   015C34  D7B4               	goto	l7936
 43245   015C36                     u5010:
 43246                           
 43247                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1170:     return n;
 43248                           ;stkvar	_n @ sp[(-3)+1]
 43249   015C36  0EFE               	movlw	-2
 43250   015C38  006F FF8C  F023    	movff	plusw1,btemp
 43251   015C3E  0EFF               	movlw	-1
 43252   015C40  006F FF8C  F024    	movff	plusw1,btemp+1
 43253                           
 43254                           ; _read_prec_or_width: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 4, argsize = 4, vargsize = 0
 43255   015C46  0EF9               	movlw	249
 43256   015C48  26E1               	addwf	fsr1l,f,c
 43257   015C4A  0EFF               	movlw	255
 43258   015C4C  22E2               	addwfc	fsr1h,f,c
 43259   015C4E  0012               	return		;funcret
 43260   015C50                     __end_of_read_prec_or_width:
 43261                           	callstack 0
 43262                           
 43263 ;; *************** function _otoa *****************
 43264 ;; Defined at:
 43265 ;;		line 872 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
 43266 ;; Parameters:    Size  Location     Type
 43267 ;;  fp              2  [STACK] PTR struct _IO_FILE
 43268 ;;		 -> f(11), NULL(0), 
 43269 ;;  d               4  [STACK] unsigned long 
 43270 ;; Auto vars:     Size  Location     Type
 43271 ;;  i               2  [STACK] int 
 43272 ;;  w               2  [STACK] int 
 43273 ;;  p               2  [STACK] int 
 43274 ;;  t               1  [STACK] unsigned char 
 43275 ;; Return value:  Size  Location     Type
 43276 ;;                  2  [STACK] int 
 43277 ;; Registers used:
 43278 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
 43279 ;; Tracked objects:
 43280 ;;		On entry : 0/1
 43281 ;;		On exit  : 0/0
 43282 ;;		Unchanged: 0/0
 43283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43288 ;;Total ram usage:        0 bytes
 43289 ;; Hardware stack levels used: 1
 43290 ;; Hardware stack levels required when called: 8
 43291 ;; This function calls:
 43292 ;;		_pad
 43293 ;; This function is called by:
 43294 ;;		_vfpfcnvrt
 43295 ;; This function uses a reentrant model
 43296 ;;
 43297                           
 43298                           	psect	text103
 43299   014E10                     __ptext103:
 43300                           	callstack 0
 43301   014E10                     _otoa:
 43302                           	callstack 0
 43303                           
 43304                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43305   014E10  0E07               	movlw	7
 43306   014E12  26E1               	addwf	fsr1l,f,c
 43307   014E14  0E00               	movlw	0
 43308   014E16  22E2               	addwfc	fsr1h,f,c
 43309                           
 43310                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 872: static int otoa(FILE *fp
      +                          , vfpf_uint_t d);/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 873: {;/opt/m
      +                          icrochip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 875:  char t;;/opt/microchip/xc8/v2.
      +                          50/pic/sources/c99/common/doprnt.c: 877:     int i, w;;/opt/microchip/xc8/v2.50/pic/sour
      +                          ces/c99/common/doprnt.c: 879:  int p;;/opt/microchip/xc8/v2.50/pic/sources/c99/common/do
      +                          prnt.c: 887:     if (!(prec < 0)) {
 43311                           
 43312                           ;incstack = 0
 43313   014E18  0101               	movlb	1	; () banked
 43314   014E1A  AFC4               	btfss	(_prec+1)& (0+255),7,b
 43315                           
 43316                           ; BSR set to: 1
 43317                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 888:         flags &= ~(1 << 
      +                          1);
 43318   014E1C  93C5               	bcf	_flags& (0+255),1,b
 43319                           
 43320                           ; BSR set to: 1
 43321                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 891:     p = (0 <= prec) ? pr
      +                          ec : 1;
 43322   014E1E  AFC4               	btfss	(_prec+1)& (0+255),7,b
 43323   014E20  D00D               	goto	l11662
 43324                           
 43325                           ; BSR set to: 1
 43326   014E22  0E01               	movlw	1
 43327   014E24  6E2D               	movwf	(btemp+10)^0,c
 43328   014E26  0E00               	movlw	0
 43329   014E28  6E2E               	movwf	(btemp+11)^0,c
 43330                           
 43331                           ;stkvar	_p @ sp[(-7)+4]
 43332   014E2A  0EFD               	movlw	-3
 43333   014E2C  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 43334   014E32  0EFE               	movlw	-2
 43335   014E34  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 43336   014E3A  D008               	goto	l3202
 43337   014E3C                     l11662:
 43338                           
 43339                           ; BSR set to: 1
 43340                           ;stkvar	_p @ sp[(-7)+4]
 43341   014E3C  0EFD               	movlw	-3
 43342   014E3E  0060  F70F  FFE3   	movff	_prec,plusw1
 43343   014E44  0EFE               	movlw	-2
 43344   014E46  0060  F713  FFE3   	movff	_prec+1,plusw1
 43345   014E4C                     l3202:
 43346                           
 43347                           ; BSR set to: 1
 43348                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 893:     w = width;
 43349                           ;stkvar	_w @ sp[(-7)+2]
 43350   014E4C  0EFB               	movlw	-5
 43351   014E4E  0060  F707  FFE3   	movff	_width,plusw1
 43352   014E54  0EFC               	movlw	-4
 43353   014E56  0060  F70B  FFE3   	movff	_width+1,plusw1
 43354                           
 43355                           ; BSR set to: 1
 43356                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 896:     i = sizeof(dbuf) - 1
      +                          ;
 43357   014E5C  0E1F               	movlw	31
 43358   014E5E  6E2D               	movwf	(btemp+10)^0,c
 43359   014E60  0E00               	movlw	0
 43360   014E62  6E2E               	movwf	(btemp+11)^0,c
 43361                           
 43362                           ;stkvar	_i @ sp[(-7)+0]
 43363   014E64  0EF9               	movlw	-7
 43364   014E66  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 43365   014E6C  0EFA               	movlw	-6
 43366   014E6E  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 43367                           
 43368                           ; BSR set to: 1
 43369                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 897:     dbuf[i] = '\0';
 43370   014E74  6BE5               	clrf	(_dbuf+31)& (0+255),b
 43371                           
 43372                           ; BSR set to: 1
 43373                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 899:     t = 0;
 43374                           ;stkvar	_t @ sp[(-7)+6]
 43375   014E76  0EFF               	movlw	-1
 43376   014E78  6AE3               	clrf	plusw1,c
 43377                           
 43378                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 901:     while (!(i < 1) && (
      +                          d != 0
 43379   014E7A  D04F               	goto	l11682
 43380   014E7C                     l11670:
 43381                           
 43382                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 910:     )) {;/opt/microchip/
      +                          xc8/v2.50/pic/sources/c99/common/doprnt.c: 911:         --i;
 43383                           ;stkvar	_i @ sp[(-7)+0]
 43384   014E7C  50E1               	movf	fsr1l,w,c
 43385   014E7E  0FF9               	addlw	-7
 43386   014E80  6ED9               	movwf	fsr2l,c
 43387   014E82  50E2               	movf	fsr1h,w,c
 43388   014E84  6EDA               	movwf	fsr2h,c
 43389   014E86  0EFF               	movlw	255
 43390   014E88  22DA               	addwfc	fsr2h,f,c
 43391   014E8A  06DE               	decf	postinc2,f,c
 43392   014E8C  0E00               	movlw	0
 43393   014E8E  5ADD               	subwfb	postdec2,f,c
 43394                           
 43395                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 913:         t = d & 07;
 43396                           ;stkvar	_d @ sp[(-7)+-6]
 43397   014E90  0EF3               	movlw	-13
 43398   014E92  006F FF8C  F02E    	movff	plusw1,btemp+11
 43399   014E98  0E07               	movlw	7
 43400   014E9A  162E               	andwf	(btemp+11)^0,f,c
 43401                           
 43402                           ;stkvar	_t @ sp[(-7)+6]
 43403   014E9C  0EFF               	movlw	-1
 43404   014E9E  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 43405                           
 43406                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 914:         dbuf[i] = (char)
      +                          ((int)'0' + t);
 43407                           ;stkvar	_i @ sp[(-7)+0]
 43408   014EA4  0EF9               	movlw	-7
 43409   014EA6  006F FF8C  F02D    	movff	plusw1,btemp+10
 43410   014EAC  0EFA               	movlw	-6
 43411   014EAE  006F FF8C  F02E    	movff	plusw1,btemp+11
 43412   014EB4  0EC6               	movlw	low _dbuf
 43413   014EB6  242D               	addwf	(btemp+10)^0,w,c
 43414   014EB8  6ED9               	movwf	fsr2l,c
 43415   014EBA  0E01               	movlw	high _dbuf
 43416   014EBC  202E               	addwfc	(btemp+11)^0,w,c
 43417   014EBE  6EDA               	movwf	fsr2h,c
 43418                           
 43419                           ;stkvar	_t @ sp[(-7)+6]
 43420   014EC0  0EFF               	movlw	-1
 43421   014EC2  50E3               	movf	plusw1,w,c
 43422   014EC4  0F30               	addlw	48
 43423   014EC6  6EDF               	movwf	indf2,c
 43424                           
 43425                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 919:         --p;
 43426                           ;stkvar	_p @ sp[(-7)+4]
 43427   014EC8  50E1               	movf	fsr1l,w,c
 43428   014ECA  0FFD               	addlw	-3
 43429   014ECC  6ED9               	movwf	fsr2l,c
 43430   014ECE  50E2               	movf	fsr1h,w,c
 43431   014ED0  6EDA               	movwf	fsr2h,c
 43432   014ED2  0EFF               	movlw	255
 43433   014ED4  22DA               	addwfc	fsr2h,f,c
 43434   014ED6  06DE               	decf	postinc2,f,c
 43435   014ED8  0E00               	movlw	0
 43436   014EDA  5ADD               	subwfb	postdec2,f,c
 43437                           
 43438                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 923:         --w;
 43439                           ;stkvar	_w @ sp[(-7)+2]
 43440   014EDC  50E1               	movf	fsr1l,w,c
 43441   014EDE  0FFB               	addlw	-5
 43442   014EE0  6ED9               	movwf	fsr2l,c
 43443   014EE2  50E2               	movf	fsr1h,w,c
 43444   014EE4  6EDA               	movwf	fsr2h,c
 43445   014EE6  0EFF               	movlw	255
 43446   014EE8  22DA               	addwfc	fsr2h,f,c
 43447   014EEA  06DE               	decf	postinc2,f,c
 43448   014EEC  0E00               	movlw	0
 43449   014EEE  5ADD               	subwfb	postdec2,f,c
 43450                           
 43451                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 924:         d = d >> 3;
 43452   014EF0  0E03               	movlw	3
 43453   014EF2  6E2E               	movwf	(btemp+11)^0,c
 43454                           
 43455                           ;stkvar	_d @ sp[(-7)+-6]
 43456   014EF4  50E1               	movf	fsr1l,w,c
 43457   014EF6  0FF3               	addlw	-13
 43458   014EF8  6ED9               	movwf	fsr2l,c
 43459   014EFA  50E2               	movf	fsr1h,w,c
 43460   014EFC  6EDA               	movwf	fsr2h,c
 43461   014EFE  0EFF               	movlw	255
 43462   014F00  22DA               	addwfc	fsr2h,f,c
 43463   014F02  282E               	incf	(btemp+11)^0,w,c
 43464   014F04  52DE               	movf	postinc2,f,c
 43465   014F06  D007               	goto	u8200
 43466   014F08                     u8205:
 43467   014F08  52DE               	movf	postinc2,f,c
 43468   014F0A  52DE               	movf	postinc2,f,c
 43469   014F0C  90D8               	bcf	status,0,c
 43470   014F0E  32DD               	rrcf	postdec2,f,c
 43471   014F10  32DD               	rrcf	postdec2,f,c
 43472   014F12  32DD               	rrcf	postdec2,f,c
 43473   014F14  32DE               	rrcf	postinc2,f,c
 43474   014F16                     u8200:
 43475   014F16  2EE8               	decfsz	wreg,f,c
 43476   014F18  D7F7               	goto	u8205
 43477   014F1A                     l11682:
 43478                           
 43479                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 901:     while (!(i < 1) && (
      +                          d != 0
 43480                           ;stkvar	_i @ sp[(-7)+0]
 43481   014F1A  0EFA               	movlw	-6
 43482   014F1C  BEE3               	btfsc	plusw1,7,c
 43483   014F1E  D02B               	goto	u8250
 43484   014F20  0EFA               	movlw	-6
 43485   014F22  50E3               	movf	plusw1,w,c
 43486   014F24  E104               	bnz	u8210
 43487   014F26  0EF9               	movlw	-7
 43488   014F28  04E3               	decf	plusw1,w,c
 43489   014F2A  A0D8               	btfss	status,0,c
 43490   014F2C  D024               	goto	u8250
 43491   014F2E                     u8210:
 43492                           
 43493                           ;stkvar	_d @ sp[(-7)+-6]
 43494   014F2E  0EF3               	movlw	-13
 43495   014F30  50E3               	movf	plusw1,w,c
 43496   014F32  E1A4               	bnz	l11670
 43497   014F34  0EF4               	movlw	-12
 43498   014F36  50E3               	movf	plusw1,w,c
 43499   014F38  E1A1               	bnz	l11670
 43500   014F3A  0EF5               	movlw	-11
 43501   014F3C  50E3               	movf	plusw1,w,c
 43502   014F3E  E19E               	bnz	l11670
 43503   014F40  0EF6               	movlw	-10
 43504   014F42  50E3               	movf	plusw1,w,c
 43505   014F44  A4D8               	btfss	status,2,c
 43506   014F46  D79A               	goto	l11670
 43507                           
 43508                           ;stkvar	_p @ sp[(-7)+4]
 43509   014F48  0EFE               	movlw	-2
 43510   014F4A  BEE3               	btfsc	plusw1,7,c
 43511   014F4C  D007               	goto	u8230
 43512   014F4E  0EFE               	movlw	-2
 43513   014F50  50E3               	movf	plusw1,w,c
 43514   014F52  E194               	bnz	l11670
 43515   014F54  0EFD               	movlw	-3
 43516   014F56  04E3               	decf	plusw1,w,c
 43517   014F58  B0D8               	btfsc	status,0,c
 43518   014F5A  D790               	goto	l11670
 43519   014F5C                     u8230:
 43520                           
 43521                           ;stkvar	_w @ sp[(-7)+2]
 43522   014F5C  0EFC               	movlw	-4
 43523   014F5E  BEE3               	btfsc	plusw1,7,c
 43524   014F60  D00A               	goto	u8250
 43525   014F62  0EFC               	movlw	-4
 43526   014F64  50E3               	movf	plusw1,w,c
 43527   014F66  E104               	bnz	u8240
 43528   014F68  0EFB               	movlw	-5
 43529   014F6A  04E3               	decf	plusw1,w,c
 43530   014F6C  A0D8               	btfss	status,0,c
 43531   014F6E  D003               	goto	u8250
 43532   014F70                     u8240:
 43533   014F70  0101               	movlb	1	; () banked
 43534   014F72  B3C5               	btfsc	_flags& (0+255),1,b
 43535   014F74  D783               	goto	l11670
 43536   014F76                     u8250:
 43537                           
 43538                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 929:     if ((t || prec == 0)
      +                           && (flags & (1 << 4))) {
 43539                           ;stkvar	_t @ sp[(-7)+6]
 43540   014F76  0EFF               	movlw	-1
 43541   014F78  50E3               	movf	plusw1,w,c
 43542   014F7A  A4D8               	btfss	status,2,c
 43543   014F7C  D005               	goto	u8270
 43544   014F7E  0101               	movlb	1	; () banked
 43545   014F80  51C3               	movf	_prec& (0+255),w,b
 43546   014F82  11C4               	iorwf	(_prec+1)& (0+255),w,b
 43547   014F84  A4D8               	btfss	status,2,c
 43548   014F86  D027               	goto	l11702
 43549   014F88                     u8270:
 43550   014F88  0101               	movlb	1	; () banked
 43551   014F8A  A9C5               	btfss	_flags& (0+255),4,b
 43552   014F8C  D024               	goto	l11702
 43553                           
 43554                           ; BSR set to: 1
 43555                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 930:         --i;
 43556                           ;stkvar	_i @ sp[(-7)+0]
 43557   014F8E  50E1               	movf	fsr1l,w,c
 43558   014F90  0FF9               	addlw	-7
 43559   014F92  6ED9               	movwf	fsr2l,c
 43560   014F94  50E2               	movf	fsr1h,w,c
 43561   014F96  6EDA               	movwf	fsr2h,c
 43562   014F98  0EFF               	movlw	255
 43563   014F9A  22DA               	addwfc	fsr2h,f,c
 43564   014F9C  06DE               	decf	postinc2,f,c
 43565   014F9E  0E00               	movlw	0
 43566   014FA0  5ADD               	subwfb	postdec2,f,c
 43567                           
 43568                           ; BSR set to: 1
 43569                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 931:         dbuf[i] = '0';
 43570                           ;stkvar	_i @ sp[(-7)+0]
 43571   014FA2  0EF9               	movlw	-7
 43572   014FA4  006F FF8C  F02D    	movff	plusw1,btemp+10
 43573   014FAA  0EFA               	movlw	-6
 43574   014FAC  006F FF8C  F02E    	movff	plusw1,btemp+11
 43575   014FB2  0EC6               	movlw	low _dbuf
 43576   014FB4  242D               	addwf	(btemp+10)^0,w,c
 43577   014FB6  6ED9               	movwf	fsr2l,c
 43578   014FB8  0E01               	movlw	high _dbuf
 43579   014FBA  202E               	addwfc	(btemp+11)^0,w,c
 43580   014FBC  6EDA               	movwf	fsr2h,c
 43581   014FBE  0E30               	movlw	48
 43582   014FC0  6EDF               	movwf	indf2,c
 43583                           
 43584                           ; BSR set to: 1
 43585                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 932:         --w;
 43586                           ;stkvar	_w @ sp[(-7)+2]
 43587   014FC2  50E1               	movf	fsr1l,w,c
 43588   014FC4  0FFB               	addlw	-5
 43589   014FC6  6ED9               	movwf	fsr2l,c
 43590   014FC8  50E2               	movf	fsr1h,w,c
 43591   014FCA  6EDA               	movwf	fsr2h,c
 43592   014FCC  0EFF               	movlw	255
 43593   014FCE  22DA               	addwfc	fsr2h,f,c
 43594   014FD0  06DE               	decf	postinc2,f,c
 43595   014FD2  0E00               	movlw	0
 43596   014FD4  5ADD               	subwfb	postdec2,f,c
 43597   014FD6                     l11702:
 43598                           
 43599                           ; BSR set to: 1
 43600                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 937:     return (int) pad(fp,
      +                           &dbuf[i], w);
 43601                           ;stkvar	_w @ sp[(-7)+2]
 43602   014FD6  0EFB               	movlw	-5
 43603   014FD8  006F FF8F FFE6     	movff	plusw1,postinc1
 43604   014FDE  006F FF8F FFE6     	movff	plusw1,postinc1
 43605                           
 43606                           ;stkvar	_i @ sp[(-9)+0]
 43607   014FE4  0EC6               	movlw	low _dbuf
 43608   014FE6  6E2D               	movwf	(btemp+10)^0,c
 43609   014FE8  0E01               	movlw	high _dbuf
 43610   014FEA  6E2E               	movwf	(btemp+11)^0,c
 43611   014FEC  0EF7               	movlw	-9
 43612   014FEE  50E3               	movf	plusw1,w,c
 43613   014FF0  262D               	addwf	(btemp+10)^0,f,c
 43614   014FF2  0EF8               	movlw	-8
 43615   014FF4  50E3               	movf	plusw1,w,c
 43616   014FF6  222E               	addwfc	(btemp+11)^0,f,c
 43617   014FF8  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 43618   014FFE  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 43619                           
 43620                           ;stkvar	_fp @ sp[(-11)+-2]
 43621   015004  0EF3               	movlw	-13
 43622   015006  006F FF8F FFE6     	movff	plusw1,postinc1
 43623   01500C  006F FF8F FFE6     	movff	plusw1,postinc1
 43624   015012  EC91  F0B2         	call	_pad	;wreg free
 43625                           
 43626                           ; _otoa: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize 
      +                          = 6, vargsize = 0
 43627   015016  0EF3               	movlw	243
 43628   015018  26E1               	addwf	fsr1l,f,c
 43629   01501A  0EFF               	movlw	255
 43630   01501C  22E2               	addwfc	fsr1h,f,c
 43631   01501E  0012               	return		;funcret
 43632   015020                     __end_of_otoa:
 43633                           	callstack 0
 43634                           
 43635 ;; *************** function _dtoa *****************
 43636 ;; Defined at:
 43637 ;;		line 513 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
 43638 ;; Parameters:    Size  Location     Type
 43639 ;;  fp              2  [STACK] PTR struct _IO_FILE
 43640 ;;		 -> f(11), NULL(0), 
 43641 ;;  d               4  [STACK] long 
 43642 ;; Auto vars:     Size  Location     Type
 43643 ;;  i               2  [STACK] int 
 43644 ;;  w               2  [STACK] int 
 43645 ;;  p               2  [STACK] int 
 43646 ;;  s               1  [STACK] unsigned char 
 43647 ;; Return value:  Size  Location     Type
 43648 ;;                  2  [STACK] int 
 43649 ;; Registers used:
 43650 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl
 43651 ;; Tracked objects:
 43652 ;;		On entry : 0/1
 43653 ;;		On exit  : 0/0
 43654 ;;		Unchanged: 0/0
 43655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43660 ;;Total ram usage:        0 bytes
 43661 ;; Hardware stack levels used: 1
 43662 ;; Hardware stack levels required when called: 8
 43663 ;; This function calls:
 43664 ;;		___aldiv
 43665 ;;		___almod
 43666 ;;		_abs
 43667 ;;		_pad
 43668 ;; This function is called by:
 43669 ;;		_vfpfcnvrt
 43670 ;; This function uses a reentrant model
 43671 ;;
 43672                           
 43673                           	psect	text104
 43674   013F5C                     __ptext104:
 43675                           	callstack 0
 43676   013F5C                     _dtoa:
 43677                           	callstack 0
 43678                           
 43679                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43680   013F5C  0E09               	movlw	9
 43681   013F5E  26E1               	addwf	fsr1l,f,c
 43682   013F60  0E00               	movlw	0
 43683   013F62  22E2               	addwfc	fsr1h,f,c
 43684                           
 43685                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 513: static int dtoa(FILE *fp
      +                          , vfpf_sint_t d);/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 514: {;/opt/m
      +                          icrochip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 515:  char s;;/opt/microchip/xc8/v2.
      +                          50/pic/sources/c99/common/doprnt.c: 516:     int i, w;;/opt/microchip/xc8/v2.50/pic/sour
      +                          ces/c99/common/doprnt.c: 518:  int p;;/opt/microchip/xc8/v2.50/pic/sources/c99/common/do
      +                          prnt.c: 524:     s = d < 0 ? 1 : 0;
 43686                           ;stkvar	_d @ sp[(-9)+-6]
 43687                           
 43688                           ;incstack = 0
 43689   013F64  0EF4               	movlw	-12
 43690   013F66  AEE3               	btfss	plusw1,7,c
 43691   013F68  D003               	goto	u8040
 43692   013F6A  6A2E               	clrf	(btemp+11)^0,c
 43693   013F6C  2A2E               	incf	(btemp+11)^0,f,c
 43694   013F6E  D001               	goto	u8058
 43695   013F70                     u8040:
 43696   013F70  6A2E               	clrf	(btemp+11)^0,c
 43697   013F72                     u8058:
 43698                           
 43699                           ;stkvar	_s @ sp[(-9)+8]
 43700   013F72  0EFF               	movlw	-1
 43701   013F74  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 43702                           
 43703                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 529:     if (!(prec < 0)) {
 43704   013F7A  0101               	movlb	1	; () banked
 43705   013F7C  AFC4               	btfss	(_prec+1)& (0+255),7,b
 43706                           
 43707                           ; BSR set to: 1
 43708                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 530:         flags &= ~(1 << 
      +                          1);
 43709   013F7E  93C5               	bcf	_flags& (0+255),1,b
 43710                           
 43711                           ; BSR set to: 1
 43712                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 533:     p = (0 <= prec) ? pr
      +                          ec : 1;
 43713   013F80  AFC4               	btfss	(_prec+1)& (0+255),7,b
 43714   013F82  D00D               	goto	l11600
 43715                           
 43716                           ; BSR set to: 1
 43717   013F84  0E01               	movlw	1
 43718   013F86  6E2D               	movwf	(btemp+10)^0,c
 43719   013F88  0E00               	movlw	0
 43720   013F8A  6E2E               	movwf	(btemp+11)^0,c
 43721                           
 43722                           ;stkvar	_p @ sp[(-9)+6]
 43723   013F8C  0EFD               	movlw	-3
 43724   013F8E  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 43725   013F94  0EFE               	movlw	-2
 43726   013F96  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 43727   013F9C  D008               	goto	l3177
 43728   013F9E                     l11600:
 43729                           
 43730                           ; BSR set to: 1
 43731                           ;stkvar	_p @ sp[(-9)+6]
 43732   013F9E  0EFD               	movlw	-3
 43733   013FA0  0060  F70F  FFE3   	movff	_prec,plusw1
 43734   013FA6  0EFE               	movlw	-2
 43735   013FA8  0060  F713  FFE3   	movff	_prec+1,plusw1
 43736   013FAE                     l3177:
 43737                           
 43738                           ; BSR set to: 1
 43739                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 535:     w = width;
 43740                           ;stkvar	_w @ sp[(-9)+4]
 43741   013FAE  0EFB               	movlw	-5
 43742   013FB0  0060  F707  FFE3   	movff	_width,plusw1
 43743   013FB6  0EFC               	movlw	-4
 43744   013FB8  0060  F70B  FFE3   	movff	_width+1,plusw1
 43745                           
 43746                           ; BSR set to: 1
 43747                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 536:     if (s
 43748                           ;stkvar	_s @ sp[(-9)+8]
 43749   013FBE  0EFF               	movlw	-1
 43750   013FC0  50E3               	movf	plusw1,w,c
 43751   013FC2  A4D8               	btfss	status,2,c
 43752   013FC4  D002               	goto	u8090
 43753                           
 43754                           ; BSR set to: 1
 43755   013FC6  A5C5               	btfss	_flags& (0+255),2,b
 43756   013FC8  D025               	goto	l3178
 43757   013FCA                     u8090:
 43758                           
 43759                           ; BSR set to: 1
 43760                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 540:     ) {;/opt/microchip/x
      +                          c8/v2.50/pic/sources/c99/common/doprnt.c: 541:         --w;
 43761                           ;stkvar	_w @ sp[(-9)+4]
 43762   013FCA  50E1               	movf	fsr1l,w,c
 43763   013FCC  0FFB               	addlw	-5
 43764   013FCE  6ED9               	movwf	fsr2l,c
 43765   013FD0  50E2               	movf	fsr1h,w,c
 43766   013FD2  6EDA               	movwf	fsr2h,c
 43767   013FD4  0EFF               	movlw	255
 43768   013FD6  22DA               	addwfc	fsr2h,f,c
 43769   013FD8  06DE               	decf	postinc2,f,c
 43770   013FDA  0E00               	movlw	0
 43771   013FDC  5ADD               	subwfb	postdec2,f,c
 43772                           
 43773                           ; BSR set to: 1
 43774                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 542:   s = s ? '-' : '+';
 43775                           ;stkvar	_s @ sp[(-9)+8]
 43776   013FDE  0EFF               	movlw	-1
 43777   013FE0  50E3               	movf	plusw1,w,c
 43778   013FE2  A4D8               	btfss	status,2,c
 43779   013FE4  D002               	goto	l11612
 43780                           
 43781                           ; BSR set to: 1
 43782   013FE6  0E2B               	movlw	43
 43783   013FE8  D001               	goto	L38
 43784   013FEA                     l11612:
 43785                           
 43786                           ; BSR set to: 1
 43787   013FEA  0E2D               	movlw	45
 43788   013FEC                     L38:
 43789   013FEC  6E2D               	movwf	(btemp+10)^0,c
 43790   013FEE  0E00               	movlw	0
 43791   013FF0  6E2E               	movwf	(btemp+11)^0,c
 43792                           
 43793                           ;stkvar	_dtoa$5753 @ sp[(-9)+0]
 43794   013FF2  0EF7               	movlw	-9
 43795   013FF4  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 43796   013FFA  0EF8               	movlw	-8
 43797   013FFC  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 43798                           
 43799                           ; BSR set to: 1
 43800                           ;stkvar	_dtoa$5753 @ sp[(-9)+0]
 43801                           ;stkvar	_s @ sp[(-9)+8]
 43802   014002  0EF7               	movlw	-9
 43803   014004  006F FF8C  F023    	movff	plusw1,btemp
 43804   01400A  0EFF               	movlw	-1
 43805   01400C  0060  F08F  FFE3   	movff	btemp,plusw1
 43806                           
 43807                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 543:     }
 43808   014012  D00F               	goto	l11620
 43809   014014                     l3178:
 43810                           
 43811                           ; BSR set to: 1
 43812   014014  A7C5               	btfss	_flags& (0+255),3,b
 43813   014016  D00D               	goto	l11620
 43814                           
 43815                           ; BSR set to: 1
 43816                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 546:         --w;
 43817                           ;stkvar	_w @ sp[(-9)+4]
 43818   014018  50E1               	movf	fsr1l,w,c
 43819   01401A  0FFB               	addlw	-5
 43820   01401C  6ED9               	movwf	fsr2l,c
 43821   01401E  50E2               	movf	fsr1h,w,c
 43822   014020  6EDA               	movwf	fsr2h,c
 43823   014022  0EFF               	movlw	255
 43824   014024  22DA               	addwfc	fsr2h,f,c
 43825   014026  06DE               	decf	postinc2,f,c
 43826   014028  0E00               	movlw	0
 43827   01402A  5ADD               	subwfb	postdec2,f,c
 43828                           
 43829                           ; BSR set to: 1
 43830                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 547:   s = ' ';
 43831                           ;stkvar	_s @ sp[(-9)+8]
 43832   01402C  0EFF               	movlw	-1
 43833   01402E  6AE3               	clrf	plusw1,c
 43834   014030  8AE3               	bsf	plusw1,5,c
 43835   014032                     l11620:
 43836                           
 43837                           ; BSR set to: 1
 43838                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 552:     i = sizeof(dbuf) - 1
      +                          ;
 43839   014032  0E1F               	movlw	31
 43840   014034  6E2D               	movwf	(btemp+10)^0,c
 43841   014036  0E00               	movlw	0
 43842   014038  6E2E               	movwf	(btemp+11)^0,c
 43843                           
 43844                           ;stkvar	_i @ sp[(-9)+2]
 43845   01403A  0EF9               	movlw	-7
 43846   01403C  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 43847   014042  0EFA               	movlw	-6
 43848   014044  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 43849                           
 43850                           ; BSR set to: 1
 43851                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 553:     dbuf[i] = '\0';
 43852   01404A  6BE5               	clrf	(_dbuf+31)& (0+255),b
 43853                           
 43854                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 554:     while (!(i < 1) && (
      +                          d != 0
 43855   01404C  D07B               	goto	l11634
 43856   01404E                     l11624:
 43857                           
 43858                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 563:     )) {;/opt/microchip/
      +                          xc8/v2.50/pic/sources/c99/common/doprnt.c: 564:         --i;
 43859                           ;stkvar	_i @ sp[(-9)+2]
 43860   01404E  50E1               	movf	fsr1l,w,c
 43861   014050  0FF9               	addlw	-7
 43862   014052  6ED9               	movwf	fsr2l,c
 43863   014054  50E2               	movf	fsr1h,w,c
 43864   014056  6EDA               	movwf	fsr2h,c
 43865   014058  0EFF               	movlw	255
 43866   01405A  22DA               	addwfc	fsr2h,f,c
 43867   01405C  06DE               	decf	postinc2,f,c
 43868   01405E  0E00               	movlw	0
 43869   014060  5ADD               	subwfb	postdec2,f,c
 43870                           
 43871                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 565:         dbuf[i] = (char)
      +                          ((int)'0' + abs(d % 10));
 43872   014062  0E0A               	movlw	10
 43873   014064  6EE6               	movwf	postinc1,c
 43874   014066  0E00               	movlw	0
 43875   014068  6EE6               	movwf	postinc1,c
 43876   01406A  0E00               	movlw	0
 43877   01406C  6EE6               	movwf	postinc1,c
 43878   01406E  0E00               	movlw	0
 43879   014070  6EE6               	movwf	postinc1,c
 43880                           
 43881                           ;stkvar	_d @ sp[(-13)+-6]
 43882   014072  0EED               	movlw	-19
 43883   014074  006F FF8F FFE6     	movff	plusw1,postinc1
 43884   01407A  006F FF8F FFE6     	movff	plusw1,postinc1
 43885   014080  006F FF8F FFE6     	movff	plusw1,postinc1
 43886   014086  006F FF8F FFE6     	movff	plusw1,postinc1
 43887   01408C  EC6E  F0AB         	call	___almod	;wreg free
 43888   014090  C023  F02D         	movff	btemp,btemp+10
 43889   014094  C024  F02E         	movff	btemp+1,btemp+11
 43890   014098  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 43891   01409E  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 43892   0140A4  EC5B  F0BD         	call	_abs	;wreg free
 43893   0140A8  0E30               	movlw	48
 43894   0140AA  2623               	addwf	btemp^0,f,c
 43895                           
 43896                           ;stkvar	_i @ sp[(-9)+2]
 43897   0140AC  0EF9               	movlw	-7
 43898   0140AE  006F FF8C  F02D    	movff	plusw1,btemp+10
 43899   0140B4  0EFA               	movlw	-6
 43900   0140B6  006F FF8C  F02E    	movff	plusw1,btemp+11
 43901   0140BC  0EC6               	movlw	low _dbuf
 43902   0140BE  242D               	addwf	(btemp+10)^0,w,c
 43903   0140C0  6ED9               	movwf	fsr2l,c
 43904   0140C2  0E01               	movlw	high _dbuf
 43905   0140C4  202E               	addwfc	(btemp+11)^0,w,c
 43906   0140C6  6EDA               	movwf	fsr2h,c
 43907   0140C8  0060  F08F  FFDF   	movff	btemp,indf2
 43908                           
 43909                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 567:         --p;
 43910                           ;stkvar	_p @ sp[(-9)+6]
 43911   0140CE  50E1               	movf	fsr1l,w,c
 43912   0140D0  0FFD               	addlw	-3
 43913   0140D2  6ED9               	movwf	fsr2l,c
 43914   0140D4  50E2               	movf	fsr1h,w,c
 43915   0140D6  6EDA               	movwf	fsr2h,c
 43916   0140D8  0EFF               	movlw	255
 43917   0140DA  22DA               	addwfc	fsr2h,f,c
 43918   0140DC  06DE               	decf	postinc2,f,c
 43919   0140DE  0E00               	movlw	0
 43920   0140E0  5ADD               	subwfb	postdec2,f,c
 43921                           
 43922                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 571:         --w;
 43923                           ;stkvar	_w @ sp[(-9)+4]
 43924   0140E2  50E1               	movf	fsr1l,w,c
 43925   0140E4  0FFB               	addlw	-5
 43926   0140E6  6ED9               	movwf	fsr2l,c
 43927   0140E8  50E2               	movf	fsr1h,w,c
 43928   0140EA  6EDA               	movwf	fsr2h,c
 43929   0140EC  0EFF               	movlw	255
 43930   0140EE  22DA               	addwfc	fsr2h,f,c
 43931   0140F0  06DE               	decf	postinc2,f,c
 43932   0140F2  0E00               	movlw	0
 43933   0140F4  5ADD               	subwfb	postdec2,f,c
 43934                           
 43935                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 572:         d = d / 10;
 43936   0140F6  0E0A               	movlw	10
 43937   0140F8  6EE6               	movwf	postinc1,c
 43938   0140FA  0E00               	movlw	0
 43939   0140FC  6EE6               	movwf	postinc1,c
 43940   0140FE  0E00               	movlw	0
 43941   014100  6EE6               	movwf	postinc1,c
 43942   014102  0E00               	movlw	0
 43943   014104  6EE6               	movwf	postinc1,c
 43944                           
 43945                           ;stkvar	_d @ sp[(-13)+-6]
 43946   014106  0EED               	movlw	-19
 43947   014108  006F FF8F FFE6     	movff	plusw1,postinc1
 43948   01410E  006F FF8F FFE6     	movff	plusw1,postinc1
 43949   014114  006F FF8F FFE6     	movff	plusw1,postinc1
 43950   01411A  006F FF8F FFE6     	movff	plusw1,postinc1
 43951   014120  ECE1  F0A9         	call	___aldiv	;wreg free
 43952                           
 43953                           ;stkvar	_d @ sp[(-9)+-6]
 43954   014124  0EF1               	movlw	-15
 43955   014126  0060  F08F  FFE3   	movff	btemp,plusw1
 43956   01412C  0EF2               	movlw	-14
 43957   01412E  0060  F093  FFE3   	movff	btemp+1,plusw1
 43958   014134  0EF3               	movlw	-13
 43959   014136  0060  F097  FFE3   	movff	btemp+2,plusw1
 43960   01413C  0EF4               	movlw	-12
 43961   01413E  0060  F09B  FFE3   	movff	btemp+3,plusw1
 43962   014144                     l11634:
 43963                           
 43964                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 554:     while (!(i < 1) && (
      +                          d != 0
 43965                           ;stkvar	_i @ sp[(-9)+2]
 43966   014144  0EFA               	movlw	-6
 43967   014146  BEE3               	btfsc	plusw1,7,c
 43968   014148  D02B               	goto	u8160
 43969   01414A  0EFA               	movlw	-6
 43970   01414C  50E3               	movf	plusw1,w,c
 43971   01414E  E104               	bnz	u8120
 43972   014150  0EF9               	movlw	-7
 43973   014152  04E3               	decf	plusw1,w,c
 43974   014154  A0D8               	btfss	status,0,c
 43975   014156  D024               	goto	u8160
 43976   014158                     u8120:
 43977                           
 43978                           ;stkvar	_d @ sp[(-9)+-6]
 43979   014158  0EF1               	movlw	-15
 43980   01415A  50E3               	movf	plusw1,w,c
 43981   01415C  E109               	bnz	u8131
 43982   01415E  0EF2               	movlw	-14
 43983   014160  50E3               	movf	plusw1,w,c
 43984   014162  E106               	bnz	u8131
 43985   014164  0EF3               	movlw	-13
 43986   014166  50E3               	movf	plusw1,w,c
 43987   014168  E103               	bnz	u8131
 43988   01416A  0EF4               	movlw	-12
 43989   01416C  50E3               	movf	plusw1,w,c
 43990   01416E  A4D8               	btfss	status,2,c
 43991   014170                     u8131:
 43992   014170  D76E               	goto	l11624
 43993                           
 43994                           ;stkvar	_p @ sp[(-9)+6]
 43995   014172  0EFE               	movlw	-2
 43996   014174  BEE3               	btfsc	plusw1,7,c
 43997   014176  D007               	goto	u8140
 43998   014178  0EFE               	movlw	-2
 43999   01417A  50E3               	movf	plusw1,w,c
 44000   01417C  E103               	bnz	u8141
 44001   01417E  0EFD               	movlw	-3
 44002   014180  04E3               	decf	plusw1,w,c
 44003   014182  B0D8               	btfsc	status,0,c
 44004   014184                     u8141:
 44005   014184  D764               	goto	l11624
 44006   014186                     u8140:
 44007                           
 44008                           ;stkvar	_w @ sp[(-9)+4]
 44009   014186  0EFC               	movlw	-4
 44010   014188  BEE3               	btfsc	plusw1,7,c
 44011   01418A  D00A               	goto	u8160
 44012   01418C  0EFC               	movlw	-4
 44013   01418E  50E3               	movf	plusw1,w,c
 44014   014190  E104               	bnz	u8150
 44015   014192  0EFB               	movlw	-5
 44016   014194  04E3               	decf	plusw1,w,c
 44017   014196  A0D8               	btfss	status,0,c
 44018   014198  D003               	goto	u8160
 44019   01419A                     u8150:
 44020   01419A  0101               	movlb	1	; () banked
 44021   01419C  B3C5               	btfsc	_flags& (0+255),1,b
 44022   01419E  D757               	goto	l11624
 44023   0141A0                     u8160:
 44024                           
 44025                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 576:     if (s != 0) {
 44026                           ;stkvar	_s @ sp[(-9)+8]
 44027   0141A0  0EFF               	movlw	-1
 44028   0141A2  50E3               	movf	plusw1,w,c
 44029   0141A4  B4D8               	btfsc	status,2,c
 44030   0141A6  D01C               	goto	l11650
 44031                           
 44032                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 577:         --i;
 44033                           ;stkvar	_i @ sp[(-9)+2]
 44034   0141A8  50E1               	movf	fsr1l,w,c
 44035   0141AA  0FF9               	addlw	-7
 44036   0141AC  6ED9               	movwf	fsr2l,c
 44037   0141AE  50E2               	movf	fsr1h,w,c
 44038   0141B0  6EDA               	movwf	fsr2h,c
 44039   0141B2  0EFF               	movlw	255
 44040   0141B4  22DA               	addwfc	fsr2h,f,c
 44041   0141B6  06DE               	decf	postinc2,f,c
 44042   0141B8  0E00               	movlw	0
 44043   0141BA  5ADD               	subwfb	postdec2,f,c
 44044                           
 44045                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 578:         dbuf[i] = s;
 44046                           ;stkvar	_s @ sp[(-9)+8]
 44047                           ;stkvar	_i @ sp[(-9)+2]
 44048   0141BC  0EF9               	movlw	-7
 44049   0141BE  006F FF8C  F02D    	movff	plusw1,btemp+10
 44050   0141C4  0EFA               	movlw	-6
 44051   0141C6  006F FF8C  F02E    	movff	plusw1,btemp+11
 44052   0141CC  0EC6               	movlw	low _dbuf
 44053   0141CE  242D               	addwf	(btemp+10)^0,w,c
 44054   0141D0  6ED9               	movwf	fsr2l,c
 44055   0141D2  0E01               	movlw	high _dbuf
 44056   0141D4  202E               	addwfc	(btemp+11)^0,w,c
 44057   0141D6  6EDA               	movwf	fsr2h,c
 44058   0141D8  0EFF               	movlw	-1
 44059   0141DA  006F FF8F FFDF     	movff	plusw1,indf2
 44060   0141E0                     l11650:
 44061                           
 44062                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 582:     return (int) pad(fp,
      +                           &dbuf[i], w);
 44063                           ;stkvar	_w @ sp[(-9)+4]
 44064   0141E0  0EFB               	movlw	-5
 44065   0141E2  006F FF8F FFE6     	movff	plusw1,postinc1
 44066   0141E8  006F FF8F FFE6     	movff	plusw1,postinc1
 44067                           
 44068                           ;stkvar	_i @ sp[(-11)+2]
 44069   0141EE  0EC6               	movlw	low _dbuf
 44070   0141F0  6E2D               	movwf	(btemp+10)^0,c
 44071   0141F2  0E01               	movlw	high _dbuf
 44072   0141F4  6E2E               	movwf	(btemp+11)^0,c
 44073   0141F6  0EF7               	movlw	-9
 44074   0141F8  50E3               	movf	plusw1,w,c
 44075   0141FA  262D               	addwf	(btemp+10)^0,f,c
 44076   0141FC  0EF8               	movlw	-8
 44077   0141FE  50E3               	movf	plusw1,w,c
 44078   014200  222E               	addwfc	(btemp+11)^0,f,c
 44079   014202  0060  F0B7  FFE6   	movff	btemp+10,postinc1
 44080   014208  0060  F0BB  FFE6   	movff	btemp+11,postinc1
 44081                           
 44082                           ;stkvar	_fp @ sp[(-13)+-2]
 44083   01420E  0EF1               	movlw	-15
 44084   014210  006F FF8F FFE6     	movff	plusw1,postinc1
 44085   014216  006F FF8F FFE6     	movff	plusw1,postinc1
 44086   01421C  EC91  F0B2         	call	_pad	;wreg free
 44087                           
 44088                           ; _dtoa: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize 
      +                          = 6, vargsize = 0
 44089   014220  0EF1               	movlw	241
 44090   014222  26E1               	addwf	fsr1l,f,c
 44091   014224  0EFF               	movlw	255
 44092   014226  22E2               	addwfc	fsr1h,f,c
 44093   014228  0012               	return		;funcret
 44094   01422A                     __end_of_dtoa:
 44095                           	callstack 0
 44096                           
 44097 ;; *************** function _pad *****************
 44098 ;; Defined at:
 44099 ;;		line 193 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
 44100 ;; Parameters:    Size  Location     Type
 44101 ;;  fp              2  [STACK] PTR struct _IO_FILE
 44102 ;;		 -> f(11), NULL(0), 
 44103 ;;  buf             2  [STACK] PTR unsigned char 
 44104 ;;		 -> dbuf(32), 
 44105 ;;  p               2  [STACK] int 
 44106 ;; Auto vars:     Size  Location     Type
 44107 ;;  i               2  [STACK] int 
 44108 ;; Return value:  Size  Location     Type
 44109 ;;                  2  [STACK] int 
 44110 ;; Registers used:
 44111 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
 44112 ;; Tracked objects:
 44113 ;;		On entry : 0/1
 44114 ;;		On exit  : 0/0
 44115 ;;		Unchanged: 0/0
 44116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44121 ;;Total ram usage:        0 bytes
 44122 ;; Hardware stack levels used: 1
 44123 ;; Hardware stack levels required when called: 7
 44124 ;; This function calls:
 44125 ;;		_fputc
 44126 ;;		_fputs
 44127 ;;		_strlen
 44128 ;; This function is called by:
 44129 ;;		_dtoa
 44130 ;;		_otoa
 44131 ;;		_utoa
 44132 ;;		_xtoa
 44133 ;; This function uses a reentrant model
 44134 ;;
 44135                           
 44136                           	psect	text105
 44137   016522                     __ptext105:
 44138                           	callstack 0
 44139   016522                     _pad:
 44140                           	callstack 0
 44141                           
 44142                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44143   016522  52E6               	movf	postinc1,f,c
 44144   016524  52E6               	movf	postinc1,f,c
 44145                           
 44146                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 193: static int pad(FILE *fp,
      +                           char *buf, int p);/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 194: {;/opt
      +                          /microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 195:     int i;;/opt/microchip/xc8
      +                          /v2.50/pic/sources/c99/common/doprnt.c: 199:     if (flags & (1 << 0)) {
 44147                           
 44148                           ;incstack = 0
 44149   016526  0101               	movlb	1	; () banked
 44150   016528  A1C5               	btfss	_flags& (0+255),0,b
 44151   01652A  D010               	goto	l11546
 44152                           
 44153                           ; BSR set to: 1
 44154                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 200:         fputs((const cha
      +                          r *)buf, fp);
 44155                           ;stkvar	_fp @ sp[(-2)+-2]
 44156   01652C  0EFC               	movlw	-4
 44157   01652E  006F FF8F FFE6     	movff	plusw1,postinc1
 44158   016534  006F FF8F FFE6     	movff	plusw1,postinc1
 44159                           
 44160                           ;stkvar	_buf @ sp[(-4)+-4]
 44161   01653A  0EF8               	movlw	-8
 44162   01653C  006F FF8F FFE6     	movff	plusw1,postinc1
 44163   016542  006F FF8F FFE6     	movff	plusw1,postinc1
 44164   016548  EC4F  F0B7         	call	_fputs	;wreg free
 44165   01654C                     l11546:
 44166                           
 44167                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 205:  if (p < 0) {
 44168                           ;stkvar	_p @ sp[(-2)+-6]
 44169   01654C  0EF9               	movlw	-7
 44170   01654E  AEE3               	btfss	plusw1,7,c
 44171   016550  D004               	goto	l3149
 44172                           
 44173                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 206:   p = 0;
 44174                           ;stkvar	_p @ sp[(-2)+-6]
 44175   016552  0EF8               	movlw	-8
 44176   016554  6AE3               	clrf	plusw1,c
 44177   016556  0EF9               	movlw	-7
 44178   016558  6AE3               	clrf	plusw1,c
 44179   01655A                     l3149:
 44180                           
 44181                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 208:     i = 0;
 44182                           ;stkvar	_i @ sp[(-2)+0]
 44183   01655A  0EFE               	movlw	-2
 44184   01655C  6AE3               	clrf	plusw1,c
 44185   01655E  0EFF               	movlw	-1
 44186   016560  6AE3               	clrf	plusw1,c
 44187                           
 44188                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 209:     while (i < p) {
 44189   016562  D01E               	goto	l11554
 44190   016564                     l11550:
 44191                           
 44192                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 210:         fputc(' ', fp);
 44193                           ;stkvar	_fp @ sp[(-2)+-2]
 44194   016564  0EFC               	movlw	-4
 44195   016566  006F FF8F FFE6     	movff	plusw1,postinc1
 44196   01656C  006F FF8F FFE6     	movff	plusw1,postinc1
 44197   016572  0E20               	movlw	32
 44198   016574  6EE6               	movwf	postinc1,c
 44199   016576  0E00               	movlw	0
 44200   016578  6EE6               	movwf	postinc1,c
 44201   01657A  ECBF  F0AE         	call	_fputc	;wreg free
 44202                           
 44203                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 211:         ++i;
 44204                           ;stkvar	_i @ sp[(-2)+0]
 44205   01657E  0EFE               	movlw	-2
 44206   016580  50E3               	movf	plusw1,w,c
 44207   016582  0F01               	addlw	1
 44208   016584  6E23               	movwf	btemp^0,c
 44209   016586  0EFE               	movlw	-2
 44210   016588  0060  F08F  FFE3   	movff	btemp,plusw1
 44211   01658E  6A23               	clrf	btemp^0,c
 44212   016590  0EFF               	movlw	-1
 44213   016592  50E3               	movf	plusw1,w,c
 44214   016594  2023               	addwfc	btemp^0,w,c
 44215   016596  6E23               	movwf	btemp^0,c
 44216   016598  0EFF               	movlw	-1
 44217   01659A  0060  F08F  FFE3   	movff	btemp,plusw1
 44218   0165A0                     l11554:
 44219                           
 44220                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 209:     while (i < p) {
 44221                           ;stkvar	_p @ sp[(-2)+-6]
 44222                           ;stkvar	_i @ sp[(-2)+0]
 44223   0165A0  50E1               	movf	fsr1l,w,c
 44224   0165A2  0FFE               	addlw	-2
 44225   0165A4  6ED9               	movwf	fsr2l,c
 44226   0165A6  50E2               	movf	fsr1h,w,c
 44227   0165A8  6EDA               	movwf	fsr2h,c
 44228   0165AA  0EFF               	movlw	255
 44229   0165AC  22DA               	addwfc	fsr2h,f,c
 44230   0165AE  0EF8               	movlw	-8
 44231   0165B0  50E3               	movf	plusw1,w,c
 44232   0165B2  5CDE               	subwf	postinc2,w,c
 44233   0165B4  50DE               	movf	postinc2,w,c
 44234   0165B6  0A80               	xorlw	128
 44235   0165B8  6E23               	movwf	btemp^0,c
 44236   0165BA  0EF9               	movlw	-7
 44237   0165BC  50E3               	movf	plusw1,w,c
 44238   0165BE  0A80               	xorlw	128
 44239   0165C0  5823               	subwfb	btemp^0,w,c
 44240   0165C2  A0D8               	btfss	status,0,c
 44241   0165C4  D7CF               	goto	l11550
 44242                           
 44243                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 216:     if (!(flags & (1 << 
      +                          0))) {
 44244   0165C6  0101               	movlb	1	; () banked
 44245   0165C8  B1C5               	btfsc	_flags& (0+255),0,b
 44246   0165CA  D010               	goto	l11558
 44247                           
 44248                           ; BSR set to: 1
 44249                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 218:         fputs((const cha
      +                          r *)buf, fp);
 44250                           ;stkvar	_fp @ sp[(-2)+-2]
 44251   0165CC  0EFC               	movlw	-4
 44252   0165CE  006F FF8F FFE6     	movff	plusw1,postinc1
 44253   0165D4  006F FF8F FFE6     	movff	plusw1,postinc1
 44254                           
 44255                           ;stkvar	_buf @ sp[(-4)+-4]
 44256   0165DA  0EF8               	movlw	-8
 44257   0165DC  006F FF8F FFE6     	movff	plusw1,postinc1
 44258   0165E2  006F FF8F FFE6     	movff	plusw1,postinc1
 44259   0165E8  EC4F  F0B7         	call	_fputs	;wreg free
 44260   0165EC                     l11558:
 44261                           
 44262                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 224:     return (int)(strlen(
      +                          buf) + (size_t)p);
 44263                           ;stkvar	_p @ sp[(-2)+-6]
 44264                           ;stkvar	_buf @ sp[(-2)+-4]
 44265   0165EC  0EFA               	movlw	-6
 44266   0165EE  006F FF8F FFE6     	movff	plusw1,postinc1
 44267   0165F4  006F FF8F FFE6     	movff	plusw1,postinc1
 44268   0165FA  ECE1  F0B7         	call	_strlen	;wreg free
 44269   0165FE  0EF8               	movlw	-8
 44270   016600  50E3               	movf	plusw1,w,c
 44271   016602  2623               	addwf	btemp^0,f,c
 44272   016604  0EF9               	movlw	-7
 44273   016606  50E3               	movf	plusw1,w,c
 44274   016608  2224               	addwfc	(btemp+1)^0,f,c
 44275                           
 44276                           ; _pad: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 44277   01660A  0EF8               	movlw	248
 44278   01660C  26E1               	addwf	fsr1l,f,c
 44279   01660E  0EFF               	movlw	255
 44280   016610  22E2               	addwfc	fsr1h,f,c
 44281   016612  0012               	return		;funcret
 44282   016614                     __end_of_pad:
 44283                           	callstack 0
 44284                           
 44285 ;; *************** function _strlen *****************
 44286 ;; Defined at:
 44287 ;;		line 5 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/strlen.c"
 44288 ;; Parameters:    Size  Location     Type
 44289 ;;  s               2  [STACK] PTR const unsigned char 
 44290 ;;		 -> dbuf(32), D$lcd(512), D@mconfig$F5154(514), V$terminal(160), 
 44291 ;;		 -> V(387), 
 44292 ;; Auto vars:     Size  Location     Type
 44293 ;;  a               2  [STACK] PTR const unsigned char 
 44294 ;;		 -> dbuf(32), D$lcd(512), D@mconfig$F5154(514), V$terminal(160), 
 44295 ;;		 -> V(387), 
 44296 ;; Return value:  Size  Location     Type
 44297 ;;                  2  [STACK] unsigned int 
 44298 ;; Registers used:
 44299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 44300 ;; Tracked objects:
 44301 ;;		On entry : 0/1
 44302 ;;		On exit  : 0/0
 44303 ;;		Unchanged: 0/0
 44304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44309 ;;Total ram usage:        0 bytes
 44310 ;; Hardware stack levels used: 1
 44311 ;; Hardware stack levels required when called: 3
 44312 ;; This function calls:
 44313 ;;		Nothing
 44314 ;; This function is called by:
 44315 ;;		_eaDogM_WriteString
 44316 ;;		_format_display_text
 44317 ;;		_pad
 44318 ;; This function uses a reentrant model
 44319 ;;
 44320                           
 44321                           	psect	text106
 44322   016FC2                     __ptext106:
 44323                           	callstack 0
 44324   016FC2                     _strlen:
 44325                           	callstack 0
 44326                           
 44327                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44328   016FC2  52E6               	movf	postinc1,f,c
 44329   016FC4  52E6               	movf	postinc1,f,c
 44330                           
 44331                           ;stkvar	_s @ sp[(-2)+-2]
 44332                           
 44333                           ;incstack = 0
 44334   016FC6  0EFC               	movlw	-4
 44335   016FC8  006F FF8C  F02D    	movff	plusw1,btemp+10
 44336   016FCE  0EFD               	movlw	-3
 44337   016FD0  006F FF8C  F02E    	movff	plusw1,btemp+11
 44338                           
 44339                           ;stkvar	_a @ sp[(-2)+0]
 44340   016FD6  0EFF               	movlw	-1
 44341   016FD8  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 44342   016FDE  0EFE               	movlw	-2
 44343   016FE0  0060  F0B7  FFE3   	movff	btemp+10,plusw1
 44344   016FE6  D011               	goto	l7456
 44345   016FE8                     l7454:
 44346                           
 44347                           ;stkvar	_s @ sp[(-2)+-2]
 44348   016FE8  0EFC               	movlw	-4
 44349   016FEA  50E3               	movf	plusw1,w,c
 44350   016FEC  0F01               	addlw	1
 44351   016FEE  6E23               	movwf	btemp^0,c
 44352   016FF0  0EFC               	movlw	-4
 44353   016FF2  0060  F08F  FFE3   	movff	btemp,plusw1
 44354   016FF8  6A23               	clrf	btemp^0,c
 44355   016FFA  0EFD               	movlw	-3
 44356   016FFC  50E3               	movf	plusw1,w,c
 44357   016FFE  2023               	addwfc	btemp^0,w,c
 44358   017000  6E23               	movwf	btemp^0,c
 44359   017002  0EFD               	movlw	-3
 44360   017004  0060  F08F  FFE3   	movff	btemp,plusw1
 44361   01700A                     l7456:
 44362                           
 44363                           ;stkvar	_s @ sp[(-2)+-2]
 44364   01700A  0EFC               	movlw	-4
 44365   01700C  006F FF8F FFD9     	movff	plusw1,fsr2l
 44366   017012  0EFD               	movlw	-3
 44367   017014  006F FF8F FFDA     	movff	plusw1,fsr2h
 44368   01701A  50DF               	movf	indf2,w,c
 44369   01701C  A4D8               	btfss	status,2,c
 44370   01701E  D7E4               	goto	l7454
 44371                           
 44372                           ;stkvar	_a @ sp[(-2)+0]
 44373                           ;stkvar	_s @ sp[(-2)+-2]
 44374   017020  0EFC               	movlw	-4
 44375   017022  006F FF8C  F023    	movff	plusw1,btemp
 44376   017028  0EFD               	movlw	-3
 44377   01702A  006F FF8C  F024    	movff	plusw1,btemp+1
 44378   017030  0EFE               	movlw	-2
 44379   017032  50E3               	movf	plusw1,w,c
 44380   017034  5E23               	subwf	btemp^0,f,c
 44381   017036  0EFF               	movlw	-1
 44382   017038  50E3               	movf	plusw1,w,c
 44383   01703A  5A24               	subwfb	(btemp+1)^0,f,c
 44384                           
 44385                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 44386   01703C  52E5               	movf	postdec1,f,c
 44387   01703E  52E5               	movf	postdec1,f,c
 44388   017040  52E5               	movf	postdec1,f,c
 44389   017042  52E5               	movf	postdec1,f,c
 44390   017044  0012               	return		;funcret
 44391   017046                     __end_of_strlen:
 44392                           	callstack 0
 44393                           
 44394 ;; *************** function _fputs *****************
 44395 ;; Defined at:
 44396 ;;		line 8 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/nf_fputs.c"
 44397 ;; Parameters:    Size  Location     Type
 44398 ;;  s               2  [STACK] PTR const unsigned char 
 44399 ;;		 -> dbuf(32), 
 44400 ;;  fp              2  [STACK] PTR struct _IO_FILE
 44401 ;;		 -> f(11), NULL(0), 
 44402 ;; Auto vars:     Size  Location     Type
 44403 ;;  i               2  [STACK] int 
 44404 ;;  c               1  [STACK] unsigned char 
 44405 ;; Return value:  Size  Location     Type
 44406 ;;                  2  [STACK] int 
 44407 ;; Registers used:
 44408 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 44409 ;; Tracked objects:
 44410 ;;		On entry : 3F/1
 44411 ;;		On exit  : 0/0
 44412 ;;		Unchanged: 0/0
 44413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44418 ;;Total ram usage:        0 bytes
 44419 ;; Hardware stack levels used: 1
 44420 ;; Hardware stack levels required when called: 6
 44421 ;; This function calls:
 44422 ;;		_fputc
 44423 ;; This function is called by:
 44424 ;;		_pad
 44425 ;; This function uses a reentrant model
 44426 ;;
 44427                           
 44428                           	psect	text107
 44429   016E9E                     __ptext107:
 44430                           	callstack 0
 44431   016E9E                     _fputs:
 44432                           	callstack 0
 44433                           
 44434                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44435   016E9E  52E6               	movf	postinc1,f,c
 44436   016EA0  52E6               	movf	postinc1,f,c
 44437   016EA2  52E6               	movf	postinc1,f,c
 44438                           
 44439                           ;stkvar	_i @ sp[(-3)+0]
 44440                           
 44441                           ;incstack = 0
 44442   016EA4  0EFD               	movlw	-3
 44443   016EA6  6AE3               	clrf	plusw1,c
 44444   016EA8  0EFE               	movlw	-2
 44445   016EAA  6AE3               	clrf	plusw1,c
 44446   016EAC  D01F               	goto	l11540
 44447   016EAE                     l11536:
 44448                           
 44449                           ;stkvar	_fp @ sp[(-3)+-4]
 44450   016EAE  0EF9               	movlw	-7
 44451   016EB0  006F FF8F FFE6     	movff	plusw1,postinc1
 44452   016EB6  006F FF8F FFE6     	movff	plusw1,postinc1
 44453                           
 44454                           ;stkvar	_c @ sp[(-5)+2]
 44455   016EBC  0EFD               	movlw	-3
 44456   016EBE  50E3               	movf	plusw1,w,c
 44457   016EC0  6EE6               	movwf	postinc1,c
 44458   016EC2  0E00               	movlw	0
 44459   016EC4  6EE6               	movwf	postinc1,c
 44460   016EC6  ECBF  F0AE         	call	_fputc	;wreg free
 44461                           
 44462                           ;stkvar	_i @ sp[(-3)+0]
 44463   016ECA  0EFD               	movlw	-3
 44464   016ECC  50E3               	movf	plusw1,w,c
 44465   016ECE  0F01               	addlw	1
 44466   016ED0  6E23               	movwf	btemp^0,c
 44467   016ED2  0EFD               	movlw	-3
 44468   016ED4  0060  F08F  FFE3   	movff	btemp,plusw1
 44469   016EDA  6A23               	clrf	btemp^0,c
 44470   016EDC  0EFE               	movlw	-2
 44471   016EDE  50E3               	movf	plusw1,w,c
 44472   016EE0  2023               	addwfc	btemp^0,w,c
 44473   016EE2  6E23               	movwf	btemp^0,c
 44474   016EE4  0EFE               	movlw	-2
 44475   016EE6  0060  F08F  FFE3   	movff	btemp,plusw1
 44476   016EEC                     l11540:
 44477                           
 44478                           ;stkvar	_i @ sp[(-3)+0]
 44479   016EEC  0EFD               	movlw	-3
 44480   016EEE  006F FF8C  F02D    	movff	plusw1,btemp+10
 44481   016EF4  0EFE               	movlw	-2
 44482   016EF6  006F FF8C  F02E    	movff	plusw1,btemp+11
 44483                           
 44484                           ;stkvar	_s @ sp[(-3)+-2]
 44485   016EFC  0EFB               	movlw	-5
 44486   016EFE  006F FF8C  F02B    	movff	plusw1,btemp+8
 44487   016F04  0EFC               	movlw	-4
 44488   016F06  006F FF8C  F02C    	movff	plusw1,btemp+9
 44489   016F0C  502D               	movf	(btemp+10)^0,w,c
 44490   016F0E  242B               	addwf	(btemp+8)^0,w,c
 44491   016F10  6ED9               	movwf	fsr2l,c
 44492   016F12  502E               	movf	(btemp+11)^0,w,c
 44493   016F14  202C               	addwfc	(btemp+9)^0,w,c
 44494   016F16  6EDA               	movwf	fsr2h,c
 44495   016F18  50DF               	movf	indf2,w,c
 44496   016F1A  6E2E               	movwf	(btemp+11)^0,c
 44497                           
 44498                           ;stkvar	_c @ sp[(-3)+2]
 44499   016F1C  0EFF               	movlw	-1
 44500   016F1E  0060  F0BB  FFE3   	movff	btemp+11,plusw1
 44501   016F24  0EFF               	movlw	-1
 44502   016F26  50E3               	movf	plusw1,w,c
 44503   016F28  A4D8               	btfss	status,2,c
 44504   016F2A  D7C1               	goto	l11536
 44505                           
 44506                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 44507   016F2C  0EF9               	movlw	249
 44508   016F2E  26E1               	addwf	fsr1l,f,c
 44509   016F30  0EFF               	movlw	255
 44510   016F32  22E2               	addwfc	fsr1h,f,c
 44511   016F34  0012               	return		;funcret
 44512   016F36                     __end_of_fputs:
 44513                           	callstack 0
 44514                           
 44515 ;; *************** function _abs *****************
 44516 ;; Defined at:
 44517 ;;		line 1 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/abs.c"
 44518 ;; Parameters:    Size  Location     Type
 44519 ;;  a               2  [STACK] int 
 44520 ;; Auto vars:     Size  Location     Type
 44521 ;;		None
 44522 ;; Return value:  Size  Location     Type
 44523 ;;                  2  [STACK] int 
 44524 ;; Registers used:
 44525 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 44526 ;; Tracked objects:
 44527 ;;		On entry : 0/1
 44528 ;;		On exit  : 0/0
 44529 ;;		Unchanged: 0/0
 44530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44535 ;;Total ram usage:        0 bytes
 44536 ;; Hardware stack levels used: 1
 44537 ;; Hardware stack levels required when called: 3
 44538 ;; This function calls:
 44539 ;;		Nothing
 44540 ;; This function is called by:
 44541 ;;		_dtoa
 44542 ;; This function uses a reentrant model
 44543 ;;
 44544                           
 44545                           	psect	text108
 44546   017AB6                     __ptext108:
 44547                           	callstack 0
 44548   017AB6                     _abs:
 44549                           	callstack 20
 44550                           
 44551                           ;stkvar	_a @ sp[(0)+-2]
 44552                           
 44553                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44554                           ;incstack = 0
 44555   017AB6  0EFF               	movlw	-1
 44556   017AB8  BEE3               	btfsc	plusw1,7,c
 44557   017ABA  D009               	goto	l7620
 44558                           
 44559                           ;stkvar	_a @ sp[(0)+-2]
 44560   017ABC  0EFE               	movlw	-2
 44561   017ABE  006F FF8C  F023    	movff	plusw1,btemp
 44562   017AC4  0EFF               	movlw	-1
 44563   017AC6  006F FF8C  F024    	movff	plusw1,btemp+1
 44564   017ACC  D00D               	goto	l3369
 44565   017ACE                     l7620:
 44566                           
 44567                           ;stkvar	_a @ sp[(0)+-2]
 44568   017ACE  0EFE               	movlw	-2
 44569   017AD0  006F FF8C  F023    	movff	plusw1,btemp
 44570   017AD6  1E23               	comf	btemp^0,f,c
 44571   017AD8  0EFF               	movlw	-1
 44572   017ADA  006F FF8C  F024    	movff	plusw1,btemp+1
 44573   017AE0  1E24               	comf	(btemp+1)^0,f,c
 44574   017AE2  2A23               	incf	btemp^0,f,c
 44575   017AE4  B4D8               	btfsc	status,2,c
 44576   017AE6  2A24               	incf	(btemp+1)^0,f,c
 44577   017AE8                     l3369:
 44578                           
 44579                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 44580   017AE8  52E5               	movf	postdec1,f,c
 44581   017AEA  52E5               	movf	postdec1,f,c
 44582   017AEC  0012               	return		;funcret
 44583   017AEE                     __end_of_abs:
 44584                           	callstack 0
 44585                           
 44586 ;; *************** function ___almod *****************
 44587 ;; Defined at:
 44588 ;;		line 7 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/almod.c"
 44589 ;; Parameters:    Size  Location     Type
 44590 ;;  dividend        4  [STACK] long 
 44591 ;;  divisor         4  [STACK] long 
 44592 ;; Auto vars:     Size  Location     Type
 44593 ;;  sign            1  [STACK] unsigned char 
 44594 ;;  counter         1  [STACK] unsigned char 
 44595 ;; Return value:  Size  Location     Type
 44596 ;;                  4  [STACK] long 
 44597 ;; Registers used:
 44598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 44599 ;; Tracked objects:
 44600 ;;		On entry : 0/1
 44601 ;;		On exit  : 0/0
 44602 ;;		Unchanged: 0/0
 44603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44608 ;;Total ram usage:        0 bytes
 44609 ;; Hardware stack levels used: 1
 44610 ;; Hardware stack levels required when called: 3
 44611 ;; This function calls:
 44612 ;;		Nothing
 44613 ;; This function is called by:
 44614 ;;		_dtoa
 44615 ;; This function uses a reentrant model
 44616 ;;
 44617                           
 44618                           	psect	text109
 44619   0156DC                     __ptext109:
 44620                           	callstack 0
 44621   0156DC                     ___almod:
 44622                           	callstack 0
 44623                           
 44624                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44625   0156DC  52E6               	movf	postinc1,f,c
 44626   0156DE  52E6               	movf	postinc1,f,c
 44627                           
 44628                           ;stkvar	_sign @ sp[(-2)+0]
 44629                           
 44630                           ;incstack = 0
 44631   0156E0  0EFE               	movlw	-2
 44632   0156E2  6AE3               	clrf	plusw1,c
 44633                           
 44634                           ;stkvar	_dividend @ sp[(-2)+-4]
 44635   0156E4  0EFD               	movlw	-3
 44636   0156E6  AEE3               	btfss	plusw1,7,c
 44637   0156E8  D014               	goto	l7548
 44638                           
 44639                           ;stkvar	_dividend @ sp[(-2)+-4]
 44640                           ;stkvar	_dividend @ sp[(-2)+-4]
 44641   0156EA  0EFA               	movlw	-6
 44642   0156EC  6CE3               	negf	plusw1,c
 44643   0156EE  0EFB               	movlw	-5
 44644   0156F0  1EE3               	comf	plusw1,f,c
 44645   0156F2  0EFC               	movlw	-4
 44646   0156F4  1EE3               	comf	plusw1,f,c
 44647   0156F6  0EFD               	movlw	-3
 44648   0156F8  1EE3               	comf	plusw1,f,c
 44649   0156FA  E308               	bnc	u4170
 44650   0156FC  0EFB               	movlw	-5
 44651   0156FE  2AE3               	incf	plusw1,f,c
 44652   015700  E305               	bnc	u4170
 44653   015702  0EFC               	movlw	-4
 44654   015704  2AE3               	incf	plusw1,f,c
 44655   015706  E302               	bnc	u4170
 44656   015708  0EFD               	movlw	-3
 44657   01570A  2AE3               	incf	plusw1,f,c
 44658   01570C                     u4170:
 44659                           
 44660                           ;stkvar	_sign @ sp[(-2)+0]
 44661   01570C  0EFE               	movlw	-2
 44662   01570E  6AE3               	clrf	plusw1,c
 44663   015710  2AE3               	incf	plusw1,f,c
 44664   015712                     l7548:
 44665                           
 44666                           ;stkvar	_divisor @ sp[(-2)+-8]
 44667   015712  0EF9               	movlw	-7
 44668   015714  AEE3               	btfss	plusw1,7,c
 44669   015716  D011               	goto	u4190
 44670                           
 44671                           ;stkvar	_divisor @ sp[(-2)+-8]
 44672                           ;stkvar	_divisor @ sp[(-2)+-8]
 44673   015718  0EF6               	movlw	-10
 44674   01571A  6CE3               	negf	plusw1,c
 44675   01571C  0EF7               	movlw	-9
 44676   01571E  1EE3               	comf	plusw1,f,c
 44677   015720  0EF8               	movlw	-8
 44678   015722  1EE3               	comf	plusw1,f,c
 44679   015724  0EF9               	movlw	-7
 44680   015726  1EE3               	comf	plusw1,f,c
 44681   015728  E308               	bnc	u4190
 44682   01572A  0EF7               	movlw	-9
 44683   01572C  2AE3               	incf	plusw1,f,c
 44684   01572E  E305               	bnc	u4190
 44685   015730  0EF8               	movlw	-8
 44686   015732  2AE3               	incf	plusw1,f,c
 44687   015734  E302               	bnc	u4190
 44688   015736  0EF9               	movlw	-7
 44689   015738  2AE3               	incf	plusw1,f,c
 44690   01573A                     u4190:
 44691                           
 44692                           ;stkvar	_divisor @ sp[(-2)+-8]
 44693   01573A  0EF6               	movlw	-10
 44694   01573C  50E3               	movf	plusw1,w,c
 44695   01573E  E10A               	bnz	u4200
 44696   015740  0EF7               	movlw	-9
 44697   015742  50E3               	movf	plusw1,w,c
 44698   015744  E107               	bnz	u4200
 44699   015746  0EF8               	movlw	-8
 44700   015748  50E3               	movf	plusw1,w,c
 44701   01574A  E104               	bnz	u4200
 44702   01574C  0EF9               	movlw	-7
 44703   01574E  50E3               	movf	plusw1,w,c
 44704   015750  B4D8               	btfsc	status,2,c
 44705   015752  D04D               	goto	u4230
 44706   015754                     u4200:
 44707                           
 44708                           ;stkvar	_counter @ sp[(-2)+1]
 44709   015754  0EFF               	movlw	-1
 44710   015756  6AE3               	clrf	plusw1,c
 44711   015758  D00A               	goto	L39
 44712   01575A                     l7556:
 44713                           
 44714                           ;stkvar	_divisor @ sp[(-2)+-8]
 44715   01575A  90D8               	bcf	status,0,c
 44716   01575C  0EF6               	movlw	-10
 44717   01575E  36E3               	rlcf	plusw1,f,c
 44718   015760  0EF7               	movlw	-9
 44719   015762  36E3               	rlcf	plusw1,f,c
 44720   015764  0EF8               	movlw	-8
 44721   015766  36E3               	rlcf	plusw1,f,c
 44722   015768  0EF9               	movlw	-7
 44723   01576A  36E3               	rlcf	plusw1,f,c
 44724                           
 44725                           ;stkvar	_counter @ sp[(-2)+1]
 44726   01576C  0EFF               	movlw	-1
 44727   01576E                     L39:
 44728   01576E  2AE3               	incf	plusw1,f,c
 44729                           
 44730                           ;stkvar	_divisor @ sp[(-2)+-8]
 44731   015770  0EF9               	movlw	-7
 44732   015772  AEE3               	btfss	plusw1,7,c
 44733   015774  D7F2               	goto	l7556
 44734   015776                     u4210:
 44735                           
 44736                           ;stkvar	_divisor @ sp[(-2)+-8]
 44737                           ;stkvar	_dividend @ sp[(-2)+-4]
 44738   015776  50E1               	movf	fsr1l,w,c
 44739   015778  0FFA               	addlw	-6
 44740   01577A  6ED9               	movwf	fsr2l,c
 44741   01577C  50E2               	movf	fsr1h,w,c
 44742   01577E  6EDA               	movwf	fsr2h,c
 44743   015780  0EFF               	movlw	255
 44744   015782  22DA               	addwfc	fsr2h,f,c
 44745   015784  0EF6               	movlw	-10
 44746   015786  50E3               	movf	plusw1,w,c
 44747   015788  5CDE               	subwf	postinc2,w,c
 44748   01578A  0EF7               	movlw	-9
 44749   01578C  50E3               	movf	plusw1,w,c
 44750   01578E  58DE               	subwfb	postinc2,w,c
 44751   015790  0EF8               	movlw	-8
 44752   015792  50E3               	movf	plusw1,w,c
 44753   015794  58DE               	subwfb	postinc2,w,c
 44754   015796  0EF9               	movlw	-7
 44755   015798  50E3               	movf	plusw1,w,c
 44756   01579A  58DE               	subwfb	postinc2,w,c
 44757   01579C  A0D8               	btfss	status,0,c
 44758   01579E  D013               	goto	l7564
 44759                           
 44760                           ;stkvar	_divisor @ sp[(-2)+-8]
 44761                           ;stkvar	_dividend @ sp[(-2)+-4]
 44762   0157A0  50E1               	movf	fsr1l,w,c
 44763   0157A2  0FFA               	addlw	-6
 44764   0157A4  6ED9               	movwf	fsr2l,c
 44765   0157A6  50E2               	movf	fsr1h,w,c
 44766   0157A8  6EDA               	movwf	fsr2h,c
 44767   0157AA  0EFF               	movlw	255
 44768   0157AC  22DA               	addwfc	fsr2h,f,c
 44769   0157AE  0EF6               	movlw	-10
 44770   0157B0  50E3               	movf	plusw1,w,c
 44771   0157B2  5EDE               	subwf	postinc2,f,c
 44772   0157B4  0EF7               	movlw	-9
 44773   0157B6  50E3               	movf	plusw1,w,c
 44774   0157B8  5ADE               	subwfb	postinc2,f,c
 44775   0157BA  0EF8               	movlw	-8
 44776   0157BC  50E3               	movf	plusw1,w,c
 44777   0157BE  5ADE               	subwfb	postinc2,f,c
 44778   0157C0  0EF9               	movlw	-7
 44779   0157C2  50E3               	movf	plusw1,w,c
 44780   0157C4  5ADE               	subwfb	postinc2,f,c
 44781   0157C6                     l7564:
 44782                           
 44783                           ;stkvar	_divisor @ sp[(-2)+-8]
 44784   0157C6  90D8               	bcf	status,0,c
 44785   0157C8  0EF9               	movlw	-7
 44786   0157CA  32E3               	rrcf	plusw1,f,c
 44787   0157CC  0EF8               	movlw	-8
 44788   0157CE  32E3               	rrcf	plusw1,f,c
 44789   0157D0  0EF7               	movlw	-9
 44790   0157D2  32E3               	rrcf	plusw1,f,c
 44791   0157D4  0EF6               	movlw	-10
 44792   0157D6  32E3               	rrcf	plusw1,f,c
 44793                           
 44794                           ;stkvar	_counter @ sp[(-2)+1]
 44795   0157D8  0EFF               	movlw	-1
 44796   0157DA  50E3               	movf	plusw1,w,c
 44797   0157DC  6E23               	movwf	btemp^0,c
 44798   0157DE  0E01               	movlw	1
 44799   0157E0  5E23               	subwf	btemp^0,f,c
 44800   0157E2  0EFF               	movlw	-1
 44801   0157E4  0060  F08F  FFE3   	movff	btemp,plusw1
 44802   0157EA  A4D8               	btfss	status,2,c
 44803   0157EC  D7C4               	goto	u4210
 44804   0157EE                     u4230:
 44805                           
 44806                           ;stkvar	_sign @ sp[(-2)+0]
 44807   0157EE  0EFE               	movlw	-2
 44808   0157F0  50E3               	movf	plusw1,w,c
 44809   0157F2  B4D8               	btfsc	status,2,c
 44810   0157F4  D011               	goto	u4250
 44811                           
 44812                           ;stkvar	_dividend @ sp[(-2)+-4]
 44813                           ;stkvar	_dividend @ sp[(-2)+-4]
 44814   0157F6  0EFA               	movlw	-6
 44815   0157F8  6CE3               	negf	plusw1,c
 44816   0157FA  0EFB               	movlw	-5
 44817   0157FC  1EE3               	comf	plusw1,f,c
 44818   0157FE  0EFC               	movlw	-4
 44819   015800  1EE3               	comf	plusw1,f,c
 44820   015802  0EFD               	movlw	-3
 44821   015804  1EE3               	comf	plusw1,f,c
 44822   015806  E308               	bnc	u4250
 44823   015808  0EFB               	movlw	-5
 44824   01580A  2AE3               	incf	plusw1,f,c
 44825   01580C  E305               	bnc	u4250
 44826   01580E  0EFC               	movlw	-4
 44827   015810  2AE3               	incf	plusw1,f,c
 44828   015812  E302               	bnc	u4250
 44829   015814  0EFD               	movlw	-3
 44830   015816  2AE3               	incf	plusw1,f,c
 44831   015818                     u4250:
 44832                           
 44833                           ;stkvar	_dividend @ sp[(-2)+-4]
 44834   015818  0EFA               	movlw	-6
 44835   01581A  006F FF8C  F023    	movff	plusw1,btemp
 44836   015820  0EFB               	movlw	-5
 44837   015822  006F FF8C  F024    	movff	plusw1,btemp+1
 44838   015828  0EFC               	movlw	-4
 44839   01582A  006F FF8C  F025    	movff	plusw1,btemp+2
 44840   015830  0EFD               	movlw	-3
 44841   015832  006F FF8C  F026    	movff	plusw1,btemp+3
 44842                           
 44843                           ; ___almod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 44844   015838  0EF6               	movlw	246
 44845   01583A  26E1               	addwf	fsr1l,f,c
 44846   01583C  0EFF               	movlw	255
 44847   01583E  22E2               	addwfc	fsr1h,f,c
 44848   015840  0012               	return		;funcret
 44849   015842                     __end_of___almod:
 44850                           	callstack 0
 44851                           
 44852 ;; *************** function ___aldiv *****************
 44853 ;; Defined at:
 44854 ;;		line 7 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/aldiv.c"
 44855 ;; Parameters:    Size  Location     Type
 44856 ;;  dividend        4  [STACK] long 
 44857 ;;  divisor         4  [STACK] long 
 44858 ;; Auto vars:     Size  Location     Type
 44859 ;;  quotient        4  [STACK] long 
 44860 ;;  sign            1  [STACK] unsigned char 
 44861 ;;  counter         1  [STACK] unsigned char 
 44862 ;; Return value:  Size  Location     Type
 44863 ;;                  4  [STACK] long 
 44864 ;; Registers used:
 44865 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 44866 ;; Tracked objects:
 44867 ;;		On entry : 0/1
 44868 ;;		On exit  : 0/0
 44869 ;;		Unchanged: 0/0
 44870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44875 ;;Total ram usage:        0 bytes
 44876 ;; Hardware stack levels used: 1
 44877 ;; Hardware stack levels required when called: 3
 44878 ;; This function calls:
 44879 ;;		Nothing
 44880 ;; This function is called by:
 44881 ;;		_dtoa
 44882 ;; This function uses a reentrant model
 44883 ;;
 44884                           
 44885                           	psect	text110
 44886   0153C2                     __ptext110:
 44887                           	callstack 0
 44888   0153C2                     ___aldiv:
 44889                           	callstack 0
 44890                           
 44891                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44892   0153C2  0E06               	movlw	6
 44893   0153C4  26E1               	addwf	fsr1l,f,c
 44894   0153C6  0E00               	movlw	0
 44895   0153C8  22E2               	addwfc	fsr1h,f,c
 44896                           
 44897                           ;stkvar	_sign @ sp[(-6)+4]
 44898                           
 44899                           ;incstack = 0
 44900   0153CA  0EFE               	movlw	-2
 44901   0153CC  6AE3               	clrf	plusw1,c
 44902                           
 44903                           ;stkvar	_divisor @ sp[(-6)+-8]
 44904   0153CE  0EF5               	movlw	-11
 44905   0153D0  AEE3               	btfss	plusw1,7,c
 44906   0153D2  D014               	goto	l7504
 44907                           
 44908                           ;stkvar	_divisor @ sp[(-6)+-8]
 44909                           ;stkvar	_divisor @ sp[(-6)+-8]
 44910   0153D4  0EF2               	movlw	-14
 44911   0153D6  6CE3               	negf	plusw1,c
 44912   0153D8  0EF3               	movlw	-13
 44913   0153DA  1EE3               	comf	plusw1,f,c
 44914   0153DC  0EF4               	movlw	-12
 44915   0153DE  1EE3               	comf	plusw1,f,c
 44916   0153E0  0EF5               	movlw	-11
 44917   0153E2  1EE3               	comf	plusw1,f,c
 44918   0153E4  E308               	bnc	u4070
 44919   0153E6  0EF3               	movlw	-13
 44920   0153E8  2AE3               	incf	plusw1,f,c
 44921   0153EA  E305               	bnc	u4070
 44922   0153EC  0EF4               	movlw	-12
 44923   0153EE  2AE3               	incf	plusw1,f,c
 44924   0153F0  E302               	bnc	u4070
 44925   0153F2  0EF5               	movlw	-11
 44926   0153F4  2AE3               	incf	plusw1,f,c
 44927   0153F6                     u4070:
 44928                           
 44929                           ;stkvar	_sign @ sp[(-6)+4]
 44930   0153F6  0EFE               	movlw	-2
 44931   0153F8  6AE3               	clrf	plusw1,c
 44932   0153FA  2AE3               	incf	plusw1,f,c
 44933   0153FC                     l7504:
 44934                           
 44935                           ;stkvar	_dividend @ sp[(-6)+-4]
 44936   0153FC  0EF9               	movlw	-7
 44937   0153FE  AEE3               	btfss	plusw1,7,c
 44938   015400  D013               	goto	l7510
 44939                           
 44940                           ;stkvar	_dividend @ sp[(-6)+-4]
 44941                           ;stkvar	_dividend @ sp[(-6)+-4]
 44942   015402  0EF6               	movlw	-10
 44943   015404  6CE3               	negf	plusw1,c
 44944   015406  0EF7               	movlw	-9
 44945   015408  1EE3               	comf	plusw1,f,c
 44946   01540A  0EF8               	movlw	-8
 44947   01540C  1EE3               	comf	plusw1,f,c
 44948   01540E  0EF9               	movlw	-7
 44949   015410  1EE3               	comf	plusw1,f,c
 44950   015412  E308               	bnc	u4090
 44951   015414  0EF7               	movlw	-9
 44952   015416  2AE3               	incf	plusw1,f,c
 44953   015418  E305               	bnc	u4090
 44954   01541A  0EF8               	movlw	-8
 44955   01541C  2AE3               	incf	plusw1,f,c
 44956   01541E  E302               	bnc	u4090
 44957   015420  0EF9               	movlw	-7
 44958   015422  2AE3               	incf	plusw1,f,c
 44959   015424                     u4090:
 44960                           
 44961                           ;stkvar	_sign @ sp[(-6)+4]
 44962   015424  0EFE               	movlw	-2
 44963   015426  70E3               	btg	plusw1,0,c
 44964   015428                     l7510:
 44965                           
 44966                           ;stkvar	_quotient @ sp[(-6)+0]
 44967   015428  0EFA               	movlw	-6
 44968   01542A  6AE3               	clrf	plusw1,c
 44969   01542C  0EFB               	movlw	-5
 44970   01542E  6AE3               	clrf	plusw1,c
 44971   015430  0EFC               	movlw	-4
 44972   015432  6AE3               	clrf	plusw1,c
 44973   015434  0EFD               	movlw	-3
 44974   015436  6AE3               	clrf	plusw1,c
 44975                           
 44976                           ;stkvar	_divisor @ sp[(-6)+-8]
 44977   015438  0EF2               	movlw	-14
 44978   01543A  50E3               	movf	plusw1,w,c
 44979   01543C  E10A               	bnz	u4100
 44980   01543E  0EF3               	movlw	-13
 44981   015440  50E3               	movf	plusw1,w,c
 44982   015442  E107               	bnz	u4100
 44983   015444  0EF4               	movlw	-12
 44984   015446  50E3               	movf	plusw1,w,c
 44985   015448  E104               	bnz	u4100
 44986   01544A  0EF5               	movlw	-11
 44987   01544C  50E3               	movf	plusw1,w,c
 44988   01544E  B4D8               	btfsc	status,2,c
 44989   015450  D058               	goto	u4130
 44990   015452                     u4100:
 44991                           
 44992                           ;stkvar	_counter @ sp[(-6)+5]
 44993   015452  0EFF               	movlw	-1
 44994   015454  6AE3               	clrf	plusw1,c
 44995   015456  D00A               	goto	L40
 44996   015458                     l7516:
 44997                           
 44998                           ;stkvar	_divisor @ sp[(-6)+-8]
 44999   015458  90D8               	bcf	status,0,c
 45000   01545A  0EF2               	movlw	-14
 45001   01545C  36E3               	rlcf	plusw1,f,c
 45002   01545E  0EF3               	movlw	-13
 45003   015460  36E3               	rlcf	plusw1,f,c
 45004   015462  0EF4               	movlw	-12
 45005   015464  36E3               	rlcf	plusw1,f,c
 45006   015466  0EF5               	movlw	-11
 45007   015468  36E3               	rlcf	plusw1,f,c
 45008                           
 45009                           ;stkvar	_counter @ sp[(-6)+5]
 45010   01546A  0EFF               	movlw	-1
 45011   01546C                     L40:
 45012   01546C  2AE3               	incf	plusw1,f,c
 45013                           
 45014                           ;stkvar	_divisor @ sp[(-6)+-8]
 45015   01546E  0EF5               	movlw	-11
 45016   015470  AEE3               	btfss	plusw1,7,c
 45017   015472  D7F2               	goto	l7516
 45018   015474                     u4110:
 45019                           
 45020                           ;stkvar	_quotient @ sp[(-6)+0]
 45021   015474  90D8               	bcf	status,0,c
 45022   015476  0EFA               	movlw	-6
 45023   015478  36E3               	rlcf	plusw1,f,c
 45024   01547A  0EFB               	movlw	-5
 45025   01547C  36E3               	rlcf	plusw1,f,c
 45026   01547E  0EFC               	movlw	-4
 45027   015480  36E3               	rlcf	plusw1,f,c
 45028   015482  0EFD               	movlw	-3
 45029   015484  36E3               	rlcf	plusw1,f,c
 45030                           
 45031                           ;stkvar	_divisor @ sp[(-6)+-8]
 45032                           ;stkvar	_dividend @ sp[(-6)+-4]
 45033   015486  50E1               	movf	fsr1l,w,c
 45034   015488  0FF6               	addlw	-10
 45035   01548A  6ED9               	movwf	fsr2l,c
 45036   01548C  50E2               	movf	fsr1h,w,c
 45037   01548E  6EDA               	movwf	fsr2h,c
 45038   015490  0EFF               	movlw	255
 45039   015492  22DA               	addwfc	fsr2h,f,c
 45040   015494  0EF2               	movlw	-14
 45041   015496  50E3               	movf	plusw1,w,c
 45042   015498  5CDE               	subwf	postinc2,w,c
 45043   01549A  0EF3               	movlw	-13
 45044   01549C  50E3               	movf	plusw1,w,c
 45045   01549E  58DE               	subwfb	postinc2,w,c
 45046   0154A0  0EF4               	movlw	-12
 45047   0154A2  50E3               	movf	plusw1,w,c
 45048   0154A4  58DE               	subwfb	postinc2,w,c
 45049   0154A6  0EF5               	movlw	-11
 45050   0154A8  50E3               	movf	plusw1,w,c
 45051   0154AA  58DE               	subwfb	postinc2,w,c
 45052   0154AC  A0D8               	btfss	status,0,c
 45053   0154AE  D015               	goto	l7528
 45054                           
 45055                           ;stkvar	_divisor @ sp[(-6)+-8]
 45056                           ;stkvar	_dividend @ sp[(-6)+-4]
 45057   0154B0  50E1               	movf	fsr1l,w,c
 45058   0154B2  0FF6               	addlw	-10
 45059   0154B4  6ED9               	movwf	fsr2l,c
 45060   0154B6  50E2               	movf	fsr1h,w,c
 45061   0154B8  6EDA               	movwf	fsr2h,c
 45062   0154BA  0EFF               	movlw	255
 45063   0154BC  22DA               	addwfc	fsr2h,f,c
 45064   0154BE  0EF2               	movlw	-14
 45065   0154C0  50E3               	movf	plusw1,w,c
 45066   0154C2  5EDE               	subwf	postinc2,f,c
 45067   0154C4  0EF3               	movlw	-13
 45068   0154C6  50E3               	movf	plusw1,w,c
 45069   0154C8  5ADE               	subwfb	postinc2,f,c
 45070   0154CA  0EF4               	movlw	-12
 45071   0154CC  50E3               	movf	plusw1,w,c
 45072   0154CE  5ADE               	subwfb	postinc2,f,c
 45073   0154D0  0EF5               	movlw	-11
 45074   0154D2  50E3               	movf	plusw1,w,c
 45075   0154D4  5ADE               	subwfb	postinc2,f,c
 45076                           
 45077                           ;stkvar	_quotient @ sp[(-6)+0]
 45078   0154D6  0EFA               	movlw	-6
 45079   0154D8  80E3               	bsf	plusw1,0,c
 45080   0154DA                     l7528:
 45081                           
 45082                           ;stkvar	_divisor @ sp[(-6)+-8]
 45083   0154DA  90D8               	bcf	status,0,c
 45084   0154DC  0EF5               	movlw	-11
 45085   0154DE  32E3               	rrcf	plusw1,f,c
 45086   0154E0  0EF4               	movlw	-12
 45087   0154E2  32E3               	rrcf	plusw1,f,c
 45088   0154E4  0EF3               	movlw	-13
 45089   0154E6  32E3               	rrcf	plusw1,f,c
 45090   0154E8  0EF2               	movlw	-14
 45091   0154EA  32E3               	rrcf	plusw1,f,c
 45092                           
 45093                           ;stkvar	_counter @ sp[(-6)+5]
 45094   0154EC  0EFF               	movlw	-1
 45095   0154EE  50E3               	movf	plusw1,w,c
 45096   0154F0  6E23               	movwf	btemp^0,c
 45097   0154F2  0E01               	movlw	1
 45098   0154F4  5E23               	subwf	btemp^0,f,c
 45099   0154F6  0EFF               	movlw	-1
 45100   0154F8  0060  F08F  FFE3   	movff	btemp,plusw1
 45101   0154FE  A4D8               	btfss	status,2,c
 45102   015500  D7B9               	goto	u4110
 45103   015502                     u4130:
 45104                           
 45105                           ;stkvar	_sign @ sp[(-6)+4]
 45106   015502  0EFE               	movlw	-2
 45107   015504  50E3               	movf	plusw1,w,c
 45108   015506  B4D8               	btfsc	status,2,c
 45109   015508  D011               	goto	u4150
 45110                           
 45111                           ;stkvar	_quotient @ sp[(-6)+0]
 45112                           ;stkvar	_quotient @ sp[(-6)+0]
 45113   01550A  0EFA               	movlw	-6
 45114   01550C  6CE3               	negf	plusw1,c
 45115   01550E  0EFB               	movlw	-5
 45116   015510  1EE3               	comf	plusw1,f,c
 45117   015512  0EFC               	movlw	-4
 45118   015514  1EE3               	comf	plusw1,f,c
 45119   015516  0EFD               	movlw	-3
 45120   015518  1EE3               	comf	plusw1,f,c
 45121   01551A  E308               	bnc	u4150
 45122   01551C  0EFB               	movlw	-5
 45123   01551E  2AE3               	incf	plusw1,f,c
 45124   015520  E305               	bnc	u4150
 45125   015522  0EFC               	movlw	-4
 45126   015524  2AE3               	incf	plusw1,f,c
 45127   015526  E302               	bnc	u4150
 45128   015528  0EFD               	movlw	-3
 45129   01552A  2AE3               	incf	plusw1,f,c
 45130   01552C                     u4150:
 45131                           
 45132                           ;stkvar	_quotient @ sp[(-6)+0]
 45133   01552C  0EFA               	movlw	-6
 45134   01552E  006F FF8C  F023    	movff	plusw1,btemp
 45135   015534  0EFB               	movlw	-5
 45136   015536  006F FF8C  F024    	movff	plusw1,btemp+1
 45137   01553C  0EFC               	movlw	-4
 45138   01553E  006F FF8C  F025    	movff	plusw1,btemp+2
 45139   015544  0EFD               	movlw	-3
 45140   015546  006F FF8C  F026    	movff	plusw1,btemp+3
 45141                           
 45142                           ; ___aldiv: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 45143   01554C  0EF2               	movlw	242
 45144   01554E  26E1               	addwf	fsr1l,f,c
 45145   015550  0EFF               	movlw	255
 45146   015552  22E2               	addwfc	fsr1h,f,c
 45147   015554  0012               	return		;funcret
 45148   015556                     __end_of___aldiv:
 45149                           	callstack 0
 45150                           
 45151 ;; *************** function _ctoa *****************
 45152 ;; Defined at:
 45153 ;;		line 476 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
 45154 ;; Parameters:    Size  Location     Type
 45155 ;;  fp              2  [STACK] PTR struct _IO_FILE
 45156 ;;		 -> f(11), NULL(0), 
 45157 ;;  c               1  [STACK] unsigned char 
 45158 ;; Auto vars:     Size  Location     Type
 45159 ;;  w               2  [STACK] int 
 45160 ;;  l               2  [STACK] int 
 45161 ;; Return value:  Size  Location     Type
 45162 ;;                  2  [STACK] int 
 45163 ;; Registers used:
 45164 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
 45165 ;; Tracked objects:
 45166 ;;		On entry : 0/1
 45167 ;;		On exit  : 0/0
 45168 ;;		Unchanged: 0/0
 45169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45174 ;;Total ram usage:        0 bytes
 45175 ;; Hardware stack levels used: 1
 45176 ;; Hardware stack levels required when called: 6
 45177 ;; This function calls:
 45178 ;;		_fputc
 45179 ;; This function is called by:
 45180 ;;		_vfpfcnvrt
 45181 ;; This function uses a reentrant model
 45182 ;;
 45183                           
 45184                           	psect	text111
 45185   015FC4                     __ptext111:
 45186                           	callstack 0
 45187   015FC4                     _ctoa:
 45188                           	callstack 0
 45189                           
 45190                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45191   015FC4  52E6               	movf	postinc1,f,c
 45192   015FC6  52E6               	movf	postinc1,f,c
 45193   015FC8  52E6               	movf	postinc1,f,c
 45194   015FCA  52E6               	movf	postinc1,f,c
 45195                           
 45196                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 476: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 477: {;/opt/microchi
      +                          p/xc8/v2.50/pic/sources/c99/common/doprnt.c: 478:     int l,w;;/opt/microchip/xc8/v2.50/
      +                          pic/sources/c99/common/doprnt.c: 481:     w = width ? width - 1 : width;
 45197                           
 45198                           ;incstack = 0
 45199   015FCC  0101               	movlb	1	; () banked
 45200   015FCE  51C1               	movf	_width& (0+255),w,b
 45201   015FD0  11C2               	iorwf	(_width+1)& (0+255),w,b
 45202   015FD2  A4D8               	btfss	status,2,c
 45203   015FD4  D009               	goto	l11566
 45204                           
 45205                           ; BSR set to: 1
 45206                           ;stkvar	_w @ sp[(-4)+0]
 45207   015FD6  0EFC               	movlw	-4
 45208   015FD8  0060  F707  FFE3   	movff	_width,plusw1
 45209   015FDE  0EFD               	movlw	-3
 45210   015FE0  0060  F70B  FFE3   	movff	_width+1,plusw1
 45211   015FE6  D012               	goto	l11568
 45212   015FE8                     l11566:
 45213                           
 45214                           ; BSR set to: 1
 45215   015FE8  C1C1  F02D         	movff	_width,btemp+10
 45216   015FEC  C1C2  F02E         	movff	_width+1,btemp+11
 45217   015FF0  0EFF               	movlw	255
 45218   015FF2  242D               	addwf	(btemp+10)^0,w,c
 45219   015FF4  6E2B               	movwf	(btemp+8)^0,c
 45220   015FF6  0EFF               	movlw	255
 45221   015FF8  202E               	addwfc	(btemp+11)^0,w,c
 45222   015FFA  6E2C               	movwf	(btemp+9)^0,c
 45223                           
 45224                           ;stkvar	_w @ sp[(-4)+0]
 45225   015FFC  0EFC               	movlw	-4
 45226   015FFE  0060  F0AF  FFE3   	movff	btemp+8,plusw1
 45227   016004  0EFD               	movlw	-3
 45228   016006  0060  F0B3  FFE3   	movff	btemp+9,plusw1
 45229   01600C                     l11568:
 45230                           
 45231                           ; BSR set to: 1
 45232                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 485:     if (flags & (1 << 0)
      +                          ) {
 45233   01600C  A1C5               	btfss	_flags& (0+255),0,b
 45234   01600E  D00E               	goto	l11572
 45235                           
 45236                           ; BSR set to: 1
 45237                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 486:         fputc(c, fp);
 45238                           ;stkvar	_fp @ sp[(-4)+-2]
 45239   016010  0EFA               	movlw	-6
 45240   016012  006F FF8F FFE6     	movff	plusw1,postinc1
 45241   016018  006F FF8F FFE6     	movff	plusw1,postinc1
 45242                           
 45243                           ;stkvar	_c @ sp[(-6)+-3]
 45244   01601E  0EF7               	movlw	-9
 45245   016020  50E3               	movf	plusw1,w,c
 45246   016022  6EE6               	movwf	postinc1,c
 45247   016024  0E00               	movlw	0
 45248   016026  6EE6               	movwf	postinc1,c
 45249   016028  ECBF  F0AE         	call	_fputc	;wreg free
 45250   01602C                     l11572:
 45251                           
 45252                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 491:     w = (w < 0) ? 0 : w;
 45253                           ;stkvar	_w @ sp[(-4)+0]
 45254   01602C  0EFD               	movlw	-3
 45255   01602E  AEE3               	btfss	plusw1,7,c
 45256   016030  D004               	goto	l3165
 45257                           
 45258                           ;stkvar	_w @ sp[(-4)+0]
 45259   016032  0EFC               	movlw	-4
 45260   016034  6AE3               	clrf	plusw1,c
 45261   016036  0EFD               	movlw	-3
 45262   016038  6AE3               	clrf	plusw1,c
 45263   01603A                     l3165:
 45264                           
 45265                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 492:     l = 0;
 45266                           ;stkvar	_l @ sp[(-4)+2]
 45267   01603A  0EFE               	movlw	-2
 45268   01603C  6AE3               	clrf	plusw1,c
 45269   01603E  0EFF               	movlw	-1
 45270   016040  6AE3               	clrf	plusw1,c
 45271                           
 45272                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 493:     while (l < w) {
 45273   016042  D01E               	goto	l11582
 45274   016044                     l11578:
 45275                           
 45276                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 494:         fputc(' ', fp);
 45277                           ;stkvar	_fp @ sp[(-4)+-2]
 45278   016044  0EFA               	movlw	-6
 45279   016046  006F FF8F FFE6     	movff	plusw1,postinc1
 45280   01604C  006F FF8F FFE6     	movff	plusw1,postinc1
 45281   016052  0E20               	movlw	32
 45282   016054  6EE6               	movwf	postinc1,c
 45283   016056  0E00               	movlw	0
 45284   016058  6EE6               	movwf	postinc1,c
 45285   01605A  ECBF  F0AE         	call	_fputc	;wreg free
 45286                           
 45287                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 495:         ++l;
 45288                           ;stkvar	_l @ sp[(-4)+2]
 45289   01605E  0EFE               	movlw	-2
 45290   016060  50E3               	movf	plusw1,w,c
 45291   016062  0F01               	addlw	1
 45292   016064  6E23               	movwf	btemp^0,c
 45293   016066  0EFE               	movlw	-2
 45294   016068  0060  F08F  FFE3   	movff	btemp,plusw1
 45295   01606E  6A23               	clrf	btemp^0,c
 45296   016070  0EFF               	movlw	-1
 45297   016072  50E3               	movf	plusw1,w,c
 45298   016074  2023               	addwfc	btemp^0,w,c
 45299   016076  6E23               	movwf	btemp^0,c
 45300   016078  0EFF               	movlw	-1
 45301   01607A  0060  F08F  FFE3   	movff	btemp,plusw1
 45302   016080                     l11582:
 45303                           
 45304                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 493:     while (l < w) {
 45305                           ;stkvar	_w @ sp[(-4)+0]
 45306                           ;stkvar	_l @ sp[(-4)+2]
 45307   016080  50E1               	movf	fsr1l,w,c
 45308   016082  0FFE               	addlw	-2
 45309   016084  6ED9               	movwf	fsr2l,c
 45310   016086  50E2               	movf	fsr1h,w,c
 45311   016088  6EDA               	movwf	fsr2h,c
 45312   01608A  0EFF               	movlw	255
 45313   01608C  22DA               	addwfc	fsr2h,f,c
 45314   01608E  0EFC               	movlw	-4
 45315   016090  50E3               	movf	plusw1,w,c
 45316   016092  5CDE               	subwf	postinc2,w,c
 45317   016094  50DE               	movf	postinc2,w,c
 45318   016096  0A80               	xorlw	128
 45319   016098  6E23               	movwf	btemp^0,c
 45320   01609A  0EFD               	movlw	-3
 45321   01609C  50E3               	movf	plusw1,w,c
 45322   01609E  0A80               	xorlw	128
 45323   0160A0  5823               	subwfb	btemp^0,w,c
 45324   0160A2  A0D8               	btfss	status,0,c
 45325   0160A4  D7CF               	goto	l11578
 45326                           
 45327                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 499:     if (!(flags & (1 << 
      +                          0))) {
 45328   0160A6  0101               	movlb	1	; () banked
 45329   0160A8  B1C5               	btfsc	_flags& (0+255),0,b
 45330   0160AA  D00E               	goto	l11586
 45331                           
 45332                           ; BSR set to: 1
 45333                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 501:         fputc(c, fp);
 45334                           ;stkvar	_fp @ sp[(-4)+-2]
 45335   0160AC  0EFA               	movlw	-6
 45336   0160AE  006F FF8F FFE6     	movff	plusw1,postinc1
 45337   0160B4  006F FF8F FFE6     	movff	plusw1,postinc1
 45338                           
 45339                           ;stkvar	_c @ sp[(-6)+-3]
 45340   0160BA  0EF7               	movlw	-9
 45341   0160BC  50E3               	movf	plusw1,w,c
 45342   0160BE  6EE6               	movwf	postinc1,c
 45343   0160C0  0E00               	movlw	0
 45344   0160C2  6EE6               	movwf	postinc1,c
 45345   0160C4  ECBF  F0AE         	call	_fputc	;wreg free
 45346   0160C8                     l11586:
 45347                           
 45348                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 507:     return l+1;
 45349                           ;stkvar	_l @ sp[(-4)+2]
 45350   0160C8  0EFE               	movlw	-2
 45351   0160CA  50E3               	movf	plusw1,w,c
 45352   0160CC  0F01               	addlw	1
 45353   0160CE  6E23               	movwf	btemp^0,c
 45354   0160D0  0EFF               	movlw	-1
 45355   0160D2  006F FF8C  F024    	movff	plusw1,btemp+1
 45356   0160D8  0E00               	movlw	0
 45357   0160DA  2224               	addwfc	(btemp+1)^0,f,c
 45358                           
 45359                           ; _ctoa: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 45360   0160DC  0EF9               	movlw	249
 45361   0160DE  26E1               	addwf	fsr1l,f,c
 45362   0160E0  0EFF               	movlw	255
 45363   0160E2  22E2               	addwfc	fsr1h,f,c
 45364   0160E4  0012               	return		;funcret
 45365   0160E6                     __end_of_ctoa:
 45366                           	callstack 0
 45367                           
 45368 ;; *************** function _fputc *****************
 45369 ;; Defined at:
 45370 ;;		line 8 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/nf_fputc.c"
 45371 ;; Parameters:    Size  Location     Type
 45372 ;;  c               2  [STACK] int 
 45373 ;;  fp              2  [STACK] PTR struct _IO_FILE
 45374 ;;		 -> f(11), NULL(0), 
 45375 ;; Auto vars:     Size  Location     Type
 45376 ;;		None
 45377 ;; Return value:  Size  Location     Type
 45378 ;;                  2  [STACK] int 
 45379 ;; Registers used:
 45380 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 45381 ;; Tracked objects:
 45382 ;;		On entry : 0/1
 45383 ;;		On exit  : 0/0
 45384 ;;		Unchanged: 0/0
 45385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45390 ;;Total ram usage:        0 bytes
 45391 ;; Hardware stack levels used: 1
 45392 ;; Hardware stack levels required when called: 5
 45393 ;; This function calls:
 45394 ;;		_putch
 45395 ;; This function is called by:
 45396 ;;		_pad
 45397 ;;		_ctoa
 45398 ;;		_stoa
 45399 ;;		_vfpfcnvrt
 45400 ;;		_fputs
 45401 ;; This function uses a reentrant model
 45402 ;;
 45403                           
 45404                           	psect	text112
 45405   015D7E                     __ptext112:
 45406                           	callstack 0
 45407   015D7E                     _fputc:
 45408                           	callstack 16
 45409                           
 45410                           ;stkvar	_fp @ sp[(0)+-4]
 45411                           
 45412                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45413                           ;incstack = 0
 45414   015D7E  0EFC               	movlw	-4
 45415   015D80  006F FF8C  F023    	movff	plusw1,btemp
 45416   015D86  0EFD               	movlw	-3
 45417   015D88  50E3               	movf	plusw1,w,c
 45418   015D8A  1023               	iorwf	btemp^0,w,c
 45419   015D8C  B4D8               	btfsc	status,2,c
 45420   015D8E  D009               	goto	u7910
 45421                           
 45422                           ;stkvar	_fp @ sp[(0)+-4]
 45423   015D90  0EFC               	movlw	-4
 45424   015D92  006F FF8C  F023    	movff	plusw1,btemp
 45425   015D98  0EFD               	movlw	-3
 45426   015D9A  50E3               	movf	plusw1,w,c
 45427   015D9C  1023               	iorwf	btemp^0,w,c
 45428   015D9E  A4D8               	btfss	status,2,c
 45429   015DA0  D006               	goto	l11524
 45430   015DA2                     u7910:
 45431                           
 45432                           ;stkvar	_c @ sp[(0)+-2]
 45433   015DA2  0EFE               	movlw	-2
 45434   015DA4  50E3               	movf	plusw1,w,c
 45435   015DA6  6EE6               	movwf	postinc1,c
 45436   015DA8  ECAD  F0C0         	call	_putch	;wreg free
 45437   015DAC  D075               	goto	l3381
 45438   015DAE                     l11524:
 45439                           
 45440                           ;stkvar	_fp @ sp[(0)+-4]
 45441   015DAE  0EFC               	movlw	-4
 45442   015DB0  006F FF8C  F02D    	movff	plusw1,btemp+10
 45443   015DB6  0EFD               	movlw	-3
 45444   015DB8  006F FF8C  F02E    	movff	plusw1,btemp+11
 45445   015DBE  0E09               	movlw	9
 45446   015DC0  242D               	addwf	(btemp+10)^0,w,c
 45447   015DC2  6ED9               	movwf	fsr2l,c
 45448   015DC4  0E00               	movlw	0
 45449   015DC6  202E               	addwfc	(btemp+11)^0,w,c
 45450   015DC8  6EDA               	movwf	fsr2h,c
 45451   015DCA  50DE               	movf	postinc2,w,c
 45452   015DCC  10DE               	iorwf	postinc2,w,c
 45453   015DCE  B4D8               	btfsc	status,2,c
 45454   015DD0  D026               	goto	u7930
 45455                           
 45456                           ;stkvar	_fp @ sp[(0)+-4]
 45457   015DD2  0EFC               	movlw	-4
 45458   015DD4  006F FF8C  F02D    	movff	plusw1,btemp+10
 45459   015DDA  0EFD               	movlw	-3
 45460   015DDC  006F FF8C  F02E    	movff	plusw1,btemp+11
 45461   015DE2  0E09               	movlw	9
 45462   015DE4  242D               	addwf	(btemp+10)^0,w,c
 45463   015DE6  6ED9               	movwf	fsr2l,c
 45464   015DE8  0E00               	movlw	0
 45465   015DEA  202E               	addwfc	(btemp+11)^0,w,c
 45466   015DEC  6EDA               	movwf	fsr2h,c
 45467                           
 45468                           ;stkvar	_fp @ sp[(0)+-4]
 45469   015DEE  0EFC               	movlw	-4
 45470   015DF0  006F FF8C  F02D    	movff	plusw1,btemp+10
 45471   015DF6  0EFD               	movlw	-3
 45472   015DF8  006F FF8C  F02E    	movff	plusw1,btemp+11
 45473   015DFE  0E02               	movlw	2
 45474   015E00  242D               	addwf	(btemp+10)^0,w,c
 45475   015E02  6EE9               	movwf	fsr0l,c
 45476   015E04  0E00               	movlw	0
 45477   015E06  202E               	addwfc	(btemp+11)^0,w,c
 45478   015E08  6EEA               	movwf	fsr0h,c
 45479   015E0A  50DE               	movf	postinc2,w,c
 45480   015E0C  5CEE               	subwf	postinc0,w,c
 45481   015E0E  50EE               	movf	postinc0,w,c
 45482   015E10  0A80               	xorlw	128
 45483   015E12  6E23               	movwf	btemp^0,c
 45484   015E14  50DE               	movf	postinc2,w,c
 45485   015E16  0A80               	xorlw	128
 45486   015E18  5823               	subwfb	btemp^0,w,c
 45487   015E1A  B0D8               	btfsc	status,0,c
 45488   015E1C  D03D               	goto	l3381
 45489   015E1E                     u7930:
 45490                           
 45491                           ;stkvar	_c @ sp[(0)+-2]
 45492                           ;stkvar	_fp @ sp[(0)+-4]
 45493   015E1E  0EFC               	movlw	-4
 45494   015E20  006F FF8C  F02D    	movff	plusw1,btemp+10
 45495   015E26  0EFD               	movlw	-3
 45496   015E28  006F FF8C  F02E    	movff	plusw1,btemp+11
 45497   015E2E  0E02               	movlw	2
 45498   015E30  242D               	addwf	(btemp+10)^0,w,c
 45499   015E32  6ED9               	movwf	fsr2l,c
 45500   015E34  0E00               	movlw	0
 45501   015E36  202E               	addwfc	(btemp+11)^0,w,c
 45502   015E38  6EDA               	movwf	fsr2h,c
 45503   015E3A  006F FF78  F02D    	movff	postinc2,btemp+10
 45504   015E40  006F FF74  F02E    	movff	postdec2,btemp+11
 45505                           
 45506                           ;stkvar	_fp @ sp[(0)+-4]
 45507   015E46  0EFC               	movlw	-4
 45508   015E48  006F FF8F FFD9     	movff	plusw1,fsr2l
 45509   015E4E  0EFD               	movlw	-3
 45510   015E50  006F FF8F FFDA     	movff	plusw1,fsr2h
 45511   015E56  006F FF78  F02B    	movff	postinc2,btemp+8
 45512   015E5C  006F FF74  F02C    	movff	postdec2,btemp+9
 45513   015E62  502D               	movf	(btemp+10)^0,w,c
 45514   015E64  242B               	addwf	(btemp+8)^0,w,c
 45515   015E66  6ED9               	movwf	fsr2l,c
 45516   015E68  502E               	movf	(btemp+11)^0,w,c
 45517   015E6A  202C               	addwfc	(btemp+9)^0,w,c
 45518   015E6C  6EDA               	movwf	fsr2h,c
 45519   015E6E  0EFE               	movlw	-2
 45520   015E70  006F FF8F FFDF     	movff	plusw1,indf2
 45521                           
 45522                           ;stkvar	_fp @ sp[(0)+-4]
 45523   015E76  0EFC               	movlw	-4
 45524   015E78  006F FF8C  F02D    	movff	plusw1,btemp+10
 45525   015E7E  0EFD               	movlw	-3
 45526   015E80  006F FF8C  F02E    	movff	plusw1,btemp+11
 45527   015E86  0E02               	movlw	2
 45528   015E88  242D               	addwf	(btemp+10)^0,w,c
 45529   015E8A  6ED9               	movwf	fsr2l,c
 45530   015E8C  0E00               	movlw	0
 45531   015E8E  202E               	addwfc	(btemp+11)^0,w,c
 45532   015E90  6EDA               	movwf	fsr2h,c
 45533   015E92  2ADE               	incf	postinc2,f,c
 45534   015E94  0E00               	movlw	0
 45535   015E96  22DD               	addwfc	postdec2,f,c
 45536   015E98                     l3381:
 45537                           
 45538                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 45539   015E98  52E5               	movf	postdec1,f,c
 45540   015E9A  52E5               	movf	postdec1,f,c
 45541   015E9C  52E5               	movf	postdec1,f,c
 45542   015E9E  52E5               	movf	postdec1,f,c
 45543   015EA0  0012               	return		;funcret
 45544   015EA2                     __end_of_fputc:
 45545                           	callstack 0
 45546                           
 45547 ;; *************** function _putch *****************
 45548 ;; Defined at:
 45549 ;;		line 155 in file "eadog.c"
 45550 ;; Parameters:    Size  Location     Type
 45551 ;;  c               1  [STACK] unsigned char 
 45552 ;; Auto vars:     Size  Location     Type
 45553 ;;		None
 45554 ;; Return value:  Size  Location     Type
 45555 ;;                  1  [STACK] void 
 45556 ;; Registers used:
 45557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 45558 ;; Tracked objects:
 45559 ;;		On entry : 0/1
 45560 ;;		On exit  : 0/0
 45561 ;;		Unchanged: 0/0
 45562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45567 ;;Total ram usage:        0 bytes
 45568 ;; Hardware stack levels used: 1
 45569 ;; Hardware stack levels required when called: 4
 45570 ;; This function calls:
 45571 ;;		_ringBufS_put_dma
 45572 ;; This function is called by:
 45573 ;;		_fputc
 45574 ;; This function uses a reentrant model
 45575 ;;
 45576                           
 45577                           	psect	text113
 45578   01815A                     __ptext113:
 45579                           	callstack 0
 45580   01815A                     _putch:
 45581                           	callstack 16
 45582                           
 45583                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 45584                           ;stkvar	_c @ sp[(0)+-1]
 45585                           
 45586                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45587                           ;incstack = 0
 45588   01815A  0EFF               	movlw	-1
 45589   01815C  50E3               	movf	plusw1,w,c
 45590   01815E  6EE6               	movwf	postinc1,c
 45591   018160  0060  F237  FFE6   	movff	_spi_link+6,postinc1
 45592   018166  0060  F23B  FFE6   	movff	_spi_link+7,postinc1
 45593   01816C  ECAF  F0B5         	call	_ringBufS_put_dma	;wreg free
 45594                           
 45595                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 45596   018170  52E5               	movf	postdec1,f,c
 45597   018172  0012               	return		;funcret
 45598   018174                     __end_of_putch:
 45599                           	callstack 0
 45600                           
 45601 ;; *************** function _ringBufS_put_dma *****************
 45602 ;; Defined at:
 45603 ;;		line 67 in file "ringbufs.c"
 45604 ;; Parameters:    Size  Location     Type
 45605 ;;  _this           2  [STACK] PTR struct ringBufS_t
 45606 ;;		 -> ring_buf1(67), 
 45607 ;;  c               1  [STACK] const unsigned char 
 45608 ;; Auto vars:     Size  Location     Type
 45609 ;;		None
 45610 ;; Return value:  Size  Location     Type
 45611 ;;                  1  [STACK] void 
 45612 ;; Registers used:
 45613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 45614 ;; Tracked objects:
 45615 ;;		On entry : 0/1
 45616 ;;		On exit  : 0/0
 45617 ;;		Unchanged: 0/0
 45618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45623 ;;Total ram usage:        0 bytes
 45624 ;; Hardware stack levels used: 1
 45625 ;; Hardware stack levels required when called: 3
 45626 ;; This function calls:
 45627 ;;		Nothing
 45628 ;; This function is called by:
 45629 ;;		_putch
 45630 ;; This function uses a reentrant model
 45631 ;;
 45632                           
 45633                           	psect	text114
 45634   016B5E                     __ptext114:
 45635                           	callstack 0
 45636   016B5E                     _ringBufS_put_dma:
 45637                           	callstack 16
 45638                           
 45639                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 45640                           ;stkvar	__this @ sp[(0)+-2]
 45641                           
 45642                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45643                           ;incstack = 0
 45644   016B5E  0EFE               	movlw	-2
 45645   016B60  006F FF8C  F02D    	movff	plusw1,btemp+10
 45646   016B66  0EFF               	movlw	-1
 45647   016B68  006F FF8C  F02E    	movff	plusw1,btemp+11
 45648   016B6E  0E42               	movlw	66
 45649   016B70  242D               	addwf	(btemp+10)^0,w,c
 45650   016B72  6ED9               	movwf	fsr2l,c
 45651   016B74  0E00               	movlw	0
 45652   016B76  202E               	addwfc	(btemp+11)^0,w,c
 45653   016B78  6EDA               	movwf	fsr2h,c
 45654   016B7A  0E40               	movlw	64
 45655   016B7C  60DF               	cpfslt	indf2,c
 45656   016B7E  D040               	goto	l1690
 45657                           
 45658                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 45659                           ;stkvar	_c @ sp[(0)+-3]
 45660                           ;stkvar	__this @ sp[(0)+-2]
 45661   016B80  0EFE               	movlw	-2
 45662   016B82  006F FF8C  F02D    	movff	plusw1,btemp+10
 45663   016B88  0EFF               	movlw	-1
 45664   016B8A  006F FF8C  F02E    	movff	plusw1,btemp+11
 45665   016B90  0E40               	movlw	64
 45666   016B92  242D               	addwf	(btemp+10)^0,w,c
 45667   016B94  6ED9               	movwf	fsr2l,c
 45668   016B96  0E00               	movlw	0
 45669   016B98  202E               	addwfc	(btemp+11)^0,w,c
 45670   016B9A  6EDA               	movwf	fsr2h,c
 45671   016B9C  50DF               	movf	indf2,w,c
 45672   016B9E  6E2E               	movwf	(btemp+11)^0,c
 45673                           
 45674                           ;stkvar	__this @ sp[(0)+-2]
 45675   016BA0  0EFE               	movlw	-2
 45676   016BA2  006F FF8C  F02B    	movff	plusw1,btemp+8
 45677   016BA8  0EFF               	movlw	-1
 45678   016BAA  006F FF8C  F02C    	movff	plusw1,btemp+9
 45679   016BB0  502E               	movf	(btemp+11)^0,w,c
 45680   016BB2  242B               	addwf	(btemp+8)^0,w,c
 45681   016BB4  6ED9               	movwf	fsr2l,c
 45682   016BB6  0E00               	movlw	0
 45683   016BB8  202C               	addwfc	(btemp+9)^0,w,c
 45684   016BBA  6EDA               	movwf	fsr2h,c
 45685   016BBC  0EFD               	movlw	-3
 45686   016BBE  006F FF8F FFDF     	movff	plusw1,indf2
 45687                           
 45688                           ;ringbufs.c: 71:   ++_this->head;
 45689                           ;stkvar	__this @ sp[(0)+-2]
 45690   016BC4  0EFE               	movlw	-2
 45691   016BC6  006F FF8C  F02D    	movff	plusw1,btemp+10
 45692   016BCC  0EFF               	movlw	-1
 45693   016BCE  006F FF8C  F02E    	movff	plusw1,btemp+11
 45694   016BD4  0E40               	movlw	64
 45695   016BD6  242D               	addwf	(btemp+10)^0,w,c
 45696   016BD8  6ED9               	movwf	fsr2l,c
 45697   016BDA  0E00               	movlw	0
 45698   016BDC  202E               	addwfc	(btemp+11)^0,w,c
 45699   016BDE  6EDA               	movwf	fsr2h,c
 45700   016BE0  2ADF               	incf	indf2,f,c
 45701                           
 45702                           ;ringbufs.c: 72:   ++_this->count;
 45703                           ;stkvar	__this @ sp[(0)+-2]
 45704   016BE2  0EFE               	movlw	-2
 45705   016BE4  006F FF8C  F02D    	movff	plusw1,btemp+10
 45706   016BEA  0EFF               	movlw	-1
 45707   016BEC  006F FF8C  F02E    	movff	plusw1,btemp+11
 45708   016BF2  0E42               	movlw	66
 45709   016BF4  242D               	addwf	(btemp+10)^0,w,c
 45710   016BF6  6ED9               	movwf	fsr2l,c
 45711   016BF8  0E00               	movlw	0
 45712   016BFA  202E               	addwfc	(btemp+11)^0,w,c
 45713   016BFC  6EDA               	movwf	fsr2h,c
 45714   016BFE  2ADF               	incf	indf2,f,c
 45715   016C00                     l1690:
 45716                           
 45717                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 45718   016C00  52E5               	movf	postdec1,f,c
 45719   016C02  52E5               	movf	postdec1,f,c
 45720   016C04  52E5               	movf	postdec1,f,c
 45721   016C06  0012               	return		;funcret
 45722   016C08                     __end_of_ringBufS_put_dma:
 45723                           	callstack 0
 45724                           
 45725 ;; *************** function _get_vterm_ptr *****************
 45726 ;; Defined at:
 45727 ;;		line 113 in file "mconfig.c"
 45728 ;; Parameters:    Size  Location     Type
 45729 ;;  line            1  [STACK] unsigned char 
 45730 ;;  vterm           1  [STACK] unsigned char 
 45731 ;; Auto vars:     Size  Location     Type
 45732 ;;		None
 45733 ;; Return value:  Size  Location     Type
 45734 ;;                  2  [STACK] PTR unsigned char 
 45735 ;; Registers used:
 45736 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 45737 ;; Tracked objects:
 45738 ;;		On entry : 0/0
 45739 ;;		On exit  : 0/0
 45740 ;;		Unchanged: 0/0
 45741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45746 ;;Total ram usage:        0 bytes
 45747 ;; Hardware stack levels used: 1
 45748 ;; Hardware stack levels required when called: 3
 45749 ;; This function calls:
 45750 ;;		Nothing
 45751 ;; This function is called by:
 45752 ;;		_main
 45753 ;;		_check_help
 45754 ;;		_vterm_dump
 45755 ;;		_vterm_sequence
 45756 ;;		_MyeaDogM_WriteStringAtPos
 45757 ;; This function uses a reentrant model
 45758 ;;
 45759                           
 45760                           	psect	text115
 45761   017A7C                     __ptext115:
 45762                           	callstack 0
 45763   017A7C                     _get_vterm_ptr:
 45764                           	callstack 24
 45765                           
 45766                           ;mconfig.c: 113: char * get_vterm_ptr(uint8_t line, uint8_t vterm);mconfig.c: 114: {;mco
      +                          nfig.c: 115:  return D.lcd[vterm & 0x03][line & 0x03];
 45767                           ;stkvar	_line @ sp[(0)+-1]
 45768                           
 45769                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45770                           ;incstack = 0
 45771   017A7C  0EFF               	movlw	-1
 45772   017A7E  50E3               	movf	plusw1,w,c
 45773   017A80  0B03               	andlw	3
 45774   017A82  0D20               	mullw	32
 45775   017A84  006F FFCC  F02D    	movff	prodl,btemp+10
 45776   017A8A  006F FFD0  F02E    	movff	prodh,btemp+11
 45777                           
 45778                           ;stkvar	_vterm @ sp[(0)+-2]
 45779   017A90  0EFE               	movlw	-2
 45780   017A92  50E3               	movf	plusw1,w,c
 45781   017A94  0B03               	andlw	3
 45782   017A96  0D80               	mullw	128
 45783   017A98  0E00               	movlw	low _D@mconfig$F5154
 45784   017A9A  24F3               	addwf	243,w,c
 45785   017A9C  6E2B               	movwf	(btemp+8)^0,c
 45786   017A9E  0E07               	movlw	high _D@mconfig$F5154
 45787   017AA0  20F4               	addwfc	prodh,w,c
 45788   017AA2  6E2C               	movwf	(btemp+9)^0,c
 45789   017AA4  502D               	movf	(btemp+10)^0,w,c
 45790   017AA6  242B               	addwf	(btemp+8)^0,w,c
 45791   017AA8  6E23               	movwf	btemp^0,c
 45792   017AAA  502E               	movf	(btemp+11)^0,w,c
 45793   017AAC  202C               	addwfc	(btemp+9)^0,w,c
 45794   017AAE  6E24               	movwf	(btemp+1)^0,c
 45795                           
 45796                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 45797   017AB0  52E5               	movf	postdec1,f,c
 45798   017AB2  52E5               	movf	postdec1,f,c
 45799   017AB4  0012               	return		;funcret
 45800   017AB6                     __end_of_get_vterm_ptr:
 45801                           	callstack 0
 45802                           
 45803 ;; *************** function _TimerDone *****************
 45804 ;; Defined at:
 45805 ;;		line 20 in file "timers.c"
 45806 ;; Parameters:    Size  Location     Type
 45807 ;;  timer           1  [STACK] const unsigned char 
 45808 ;; Auto vars:     Size  Location     Type
 45809 ;;		None
 45810 ;; Return value:  Size  Location     Type
 45811 ;;                  1  [STACK] _Bool 
 45812 ;; Registers used:
 45813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 45814 ;; Tracked objects:
 45815 ;;		On entry : 0/3C
 45816 ;;		On exit  : 0/0
 45817 ;;		Unchanged: 0/0
 45818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45823 ;;Total ram usage:        0 bytes
 45824 ;; Hardware stack levels used: 1
 45825 ;; Hardware stack levels required when called: 3
 45826 ;; This function calls:
 45827 ;;		Nothing
 45828 ;; This function is called by:
 45829 ;;		_main
 45830 ;;		_m_protocol
 45831 ;;		_r_protocol
 45832 ;;		_t_protocol
 45833 ;;		_secs_II_message
 45834 ;;		_secs_gem_state
 45835 ;;		_WaitMs
 45836 ;;		_help_button
 45837 ;;		_check_help
 45838 ;;		_MyeaDogM_WriteStringAtPos
 45839 ;;		_set_display_info
 45840 ;; This function uses a reentrant model
 45841 ;;
 45842                           
 45843                           	psect	text116
 45844   017F5A                     __ptext116:
 45845                           	callstack 0
 45846   017F5A                     _TimerDone:
 45847                           	callstack 24
 45848                           
 45849                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45850                           ;incstack = 0
 45851   017F5A  0004               	clrwdt		;# 
 45852                           
 45853                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 45854                           ;stkvar	_timer @ sp[(0)+-1]
 45855   017F5C  0EFF               	movlw	-1
 45856   017F5E  50E3               	movf	plusw1,w,c
 45857   017F60  0D02               	mullw	2
 45858   017F62  50F3               	movf	243,w,c
 45859   017F64  0F60               	addlw	low _tickCount
 45860   017F66  6ED9               	movwf	fsr2l,c
 45861   017F68  6ADA               	clrf	fsr2h,c
 45862   017F6A  50DE               	movf	postinc2,w,c
 45863   017F6C  10DE               	iorwf	postinc2,w,c
 45864   017F6E  A4D8               	btfss	status,2,c
 45865   017F70  D002               	goto	l8280
 45866                           
 45867                           ;timers.c: 24:   return 1;
 45868   017F72  0E01               	movlw	1
 45869   017F74  D001               	goto	L41
 45870   017F76                     l8280:
 45871                           
 45872                           ;timers.c: 26:  return 0;
 45873   017F76  0E00               	movlw	0
 45874   017F78                     L41:
 45875   017F78  6E23               	movwf	btemp^0,c
 45876                           
 45877                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 45878   017F7A  52E5               	movf	postdec1,f,c
 45879   017F7C  0012               	return		;funcret
 45880   017F7E                     __end_of_TimerDone:
 45881                           	callstack 0
 45882                           
 45883 ;; *************** function _INT0_ISR *****************
 45884 ;; Defined at:
 45885 ;;		line 38 in file "mcc_generated_files/ext_int.c"
 45886 ;; Parameters:    Size  Location     Type
 45887 ;;		None
 45888 ;; Auto vars:     Size  Location     Type
 45889 ;;		None
 45890 ;; Return value:  Size  Location     Type
 45891 ;;                  1    wreg      void 
 45892 ;; Registers used:
 45893 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl
 45894 ;; Tracked objects:
 45895 ;;		On entry : 0/0
 45896 ;;		On exit  : 0/0
 45897 ;;		Unchanged: 0/0
 45898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45901 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45902 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45903 ;;Total ram usage:        2 bytes
 45904 ;; Hardware stack levels used: 1
 45905 ;; Hardware stack levels required when called: 2
 45906 ;; This function calls:
 45907 ;;		_INT0_CallBack
 45908 ;; This function is called by:
 45909 ;;		Interrupt level 2
 45910 ;; This function uses a non-reentrant model
 45911 ;;
 45912                           
 45913                           	psect	text117
 45914   017EC0                     __ptext117:
 45915                           	callstack 0
 45916   017EC0                     _INT0_ISR:
 45917                           	callstack 15
 45918                           
 45919                           ;incstack = 0
 45920   017EC0  006F FFE8  F043    	movff	pclath,??_INT0_ISR
 45921   017EC6  006F FFEC  F044    	movff	pclatu,??_INT0_ISR+1
 45922   017ECC  EE15  F3EB         	lfsr	1,___inthi_sp
 45923                           
 45924                           ;mcc_generated_files/ext_int.c: 40:  (PIR1bits.INT0IF = 0);
 45925   017ED0  0139               	movlb	57	; () banked
 45926   017ED2  91A1               	bcf	161,0,b	;volatile
 45927                           
 45928                           ; BSR set to: 57
 45929                           ;mcc_generated_files/ext_int.c: 43:  INT0_CallBack();
 45930   017ED4  ECBF  F0BF         	call	_INT0_CallBack	;wreg free
 45931   017ED8  0060  F113  FFFB   	movff	??_INT0_ISR+1,pclatu
 45932   017EDE  0060  F10F  FFFA   	movff	??_INT0_ISR,pclath
 45933   017EE4  0011               	retfie		f
 45934   017EE6                     __end_of_INT0_ISR:
 45935                           	callstack 0
 45936                           
 45937 ;; *************** function _INT0_CallBack *****************
 45938 ;; Defined at:
 45939 ;;		line 46 in file "mcc_generated_files/ext_int.c"
 45940 ;; Parameters:    Size  Location     Type
 45941 ;;		None
 45942 ;; Auto vars:     Size  Location     Type
 45943 ;;		None
 45944 ;; Return value:  Size  Location     Type
 45945 ;;                  1  [STACK] void 
 45946 ;; Registers used:
 45947 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl
 45948 ;; Tracked objects:
 45949 ;;		On entry : 3F/39
 45950 ;;		On exit  : 0/0
 45951 ;;		Unchanged: 0/0
 45952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45957 ;;Total ram usage:        0 bytes
 45958 ;; Hardware stack levels used: 1
 45959 ;; Hardware stack levels required when called: 1
 45960 ;; This function calls:
 45961 ;;		NULL
 45962 ;;		_INT0_DefaultInterruptHandler
 45963 ;; This function is called by:
 45964 ;;		_INT0_ISR
 45965 ;; This function uses a reentrant model
 45966 ;;
 45967                           
 45968                           	psect	text118
 45969   017F7E                     __ptext118:
 45970                           	callstack 0
 45971   017F7E                     _INT0_CallBack:
 45972                           	callstack 15
 45973                           
 45974                           ;mcc_generated_files/ext_int.c: 49:  if (INT0_InterruptHandler) {
 45975                           
 45976                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45977                           ;incstack = 0
 45978   017F7E  0100               	movlb	0	; () banked
 45979   017F80  51B9               	movf	_INT0_InterruptHandler& (0+255),w,b
 45980   017F82  11BA               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 45981   017F84  11BB               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 45982   017F86  B4D8               	btfsc	status,2,c
 45983   017F88  0012               	return	
 45984                           
 45985                           ; BSR set to: 0
 45986                           ;mcc_generated_files/ext_int.c: 50:   INT0_InterruptHandler();
 45987   017F8A  D801               	call	u636_48
 45988   017F8C  0012               	return	
 45989   017F8E                     u636_48:
 45990   017F8E  0005               	push	
 45991   017F90  6EFA               	movwf	pclath,c
 45992   017F92  51B9               	movf	_INT0_InterruptHandler& (0+255),w,b
 45993   017F94  6EFD               	movwf	tosl,c
 45994   017F96  51BA               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 45995   017F98  6EFE               	movwf	tosh,c
 45996   017F9A  51BB               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 45997   017F9C  6EFF               	movwf	tosu,c
 45998   017F9E  50FA               	movf	pclath,w,c
 45999   017FA0  0012               	return		;indir
 46000   017FA2                     __end_of_INT0_CallBack:
 46001                           	callstack 0
 46002                           
 46003 ;; *************** function _INT0_DefaultInterruptHandler *****************
 46004 ;; Defined at:
 46005 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 46006 ;; Parameters:    Size  Location     Type
 46007 ;;		None
 46008 ;; Auto vars:     Size  Location     Type
 46009 ;;		None
 46010 ;; Return value:  Size  Location     Type
 46011 ;;                  1  [STACK] void 
 46012 ;; Registers used:
 46013 ;;		None
 46014 ;; Tracked objects:
 46015 ;;		On entry : 3F/0
 46016 ;;		On exit  : 0/0
 46017 ;;		Unchanged: 0/0
 46018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46023 ;;Total ram usage:        0 bytes
 46024 ;; Hardware stack levels used: 1
 46025 ;; This function calls:
 46026 ;;		Nothing
 46027 ;; This function is called by:
 46028 ;;		_EXT_INT_Initialize
 46029 ;;		_INT0_CallBack
 46030 ;; This function uses a reentrant model
 46031 ;;
 46032                           
 46033                           	psect	text119
 46034   0182AC                     __ptext119:
 46035                           	callstack 0
 46036   0182AC                     _INT0_DefaultInterruptHandler:
 46037                           	callstack 15
 46038                           
 46039                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 46040                           
 46041                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46042                           ;incstack = 0
 46043   0182AC  0012               	return		;funcret
 46044   0182AE                     __end_of_INT0_DefaultInterruptHandler:
 46045                           	callstack 0
 46046                           
 46047 ;; *************** function _INT1_ISR *****************
 46048 ;; Defined at:
 46049 ;;		line 65 in file "mcc_generated_files/ext_int.c"
 46050 ;; Parameters:    Size  Location     Type
 46051 ;;		None
 46052 ;; Auto vars:     Size  Location     Type
 46053 ;;		None
 46054 ;; Return value:  Size  Location     Type
 46055 ;;                  1    wreg      void 
 46056 ;; Registers used:
 46057 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl
 46058 ;; Tracked objects:
 46059 ;;		On entry : 0/0
 46060 ;;		On exit  : 0/0
 46061 ;;		Unchanged: 0/0
 46062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46065 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46066 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46067 ;;Total ram usage:        2 bytes
 46068 ;; Hardware stack levels used: 1
 46069 ;; Hardware stack levels required when called: 2
 46070 ;; This function calls:
 46071 ;;		_INT1_CallBack
 46072 ;; This function is called by:
 46073 ;;		Interrupt level 2
 46074 ;; This function uses a non-reentrant model
 46075 ;;
 46076                           
 46077                           	psect	text120
 46078   017EE8                     __ptext120:
 46079                           	callstack 0
 46080   017EE8                     _INT1_ISR:
 46081                           	callstack 15
 46082                           
 46083                           ;incstack = 0
 46084   017EE8  006F FFE8  F045    	movff	pclath,??_INT1_ISR
 46085   017EEE  006F FFEC  F046    	movff	pclatu,??_INT1_ISR+1
 46086   017EF4  EE15  F3EB         	lfsr	1,___inthi_sp
 46087                           
 46088                           ;mcc_generated_files/ext_int.c: 67:  (PIR5bits.INT1IF = 0);
 46089   017EF8  0139               	movlb	57	; () banked
 46090   017EFA  91A5               	bcf	165,0,b	;volatile
 46091                           
 46092                           ; BSR set to: 57
 46093                           ;mcc_generated_files/ext_int.c: 70:  INT1_CallBack();
 46094   017EFC  ECD1  F0BF         	call	_INT1_CallBack	;wreg free
 46095   017F00  0060  F11B  FFFB   	movff	??_INT1_ISR+1,pclatu
 46096   017F06  0060  F117  FFFA   	movff	??_INT1_ISR,pclath
 46097   017F0C  0011               	retfie		f
 46098   017F0E                     __end_of_INT1_ISR:
 46099                           	callstack 0
 46100                           
 46101 ;; *************** function _INT1_CallBack *****************
 46102 ;; Defined at:
 46103 ;;		line 73 in file "mcc_generated_files/ext_int.c"
 46104 ;; Parameters:    Size  Location     Type
 46105 ;;		None
 46106 ;; Auto vars:     Size  Location     Type
 46107 ;;		None
 46108 ;; Return value:  Size  Location     Type
 46109 ;;                  1  [STACK] void 
 46110 ;; Registers used:
 46111 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl
 46112 ;; Tracked objects:
 46113 ;;		On entry : 3F/39
 46114 ;;		On exit  : 0/0
 46115 ;;		Unchanged: 0/0
 46116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46121 ;;Total ram usage:        0 bytes
 46122 ;; Hardware stack levels used: 1
 46123 ;; Hardware stack levels required when called: 1
 46124 ;; This function calls:
 46125 ;;		NULL
 46126 ;;		_INT1_DefaultInterruptHandler
 46127 ;; This function is called by:
 46128 ;;		_INT1_ISR
 46129 ;; This function uses a reentrant model
 46130 ;;
 46131                           
 46132                           	psect	text121
 46133   017FA2                     __ptext121:
 46134                           	callstack 0
 46135   017FA2                     _INT1_CallBack:
 46136                           	callstack 15
 46137                           
 46138                           ;mcc_generated_files/ext_int.c: 76:  if (INT1_InterruptHandler) {
 46139                           
 46140                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46141                           ;incstack = 0
 46142   017FA2  0100               	movlb	0	; () banked
 46143   017FA4  51B6               	movf	_INT1_InterruptHandler& (0+255),w,b
 46144   017FA6  11B7               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 46145   017FA8  11B8               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 46146   017FAA  B4D8               	btfsc	status,2,c
 46147   017FAC  0012               	return	
 46148                           
 46149                           ; BSR set to: 0
 46150                           ;mcc_generated_files/ext_int.c: 77:   INT1_InterruptHandler();
 46151   017FAE  D801               	call	u638_48
 46152   017FB0  0012               	return	
 46153   017FB2                     u638_48:
 46154   017FB2  0005               	push	
 46155   017FB4  6EFA               	movwf	pclath,c
 46156   017FB6  51B6               	movf	_INT1_InterruptHandler& (0+255),w,b
 46157   017FB8  6EFD               	movwf	tosl,c
 46158   017FBA  51B7               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 46159   017FBC  6EFE               	movwf	tosh,c
 46160   017FBE  51B8               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 46161   017FC0  6EFF               	movwf	tosu,c
 46162   017FC2  50FA               	movf	pclath,w,c
 46163   017FC4  0012               	return		;indir
 46164   017FC6                     __end_of_INT1_CallBack:
 46165                           	callstack 0
 46166                           
 46167 ;; *************** function _INT1_DefaultInterruptHandler *****************
 46168 ;; Defined at:
 46169 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 46170 ;; Parameters:    Size  Location     Type
 46171 ;;		None
 46172 ;; Auto vars:     Size  Location     Type
 46173 ;;		None
 46174 ;; Return value:  Size  Location     Type
 46175 ;;                  1  [STACK] void 
 46176 ;; Registers used:
 46177 ;;		None
 46178 ;; Tracked objects:
 46179 ;;		On entry : 3F/0
 46180 ;;		On exit  : 0/0
 46181 ;;		Unchanged: 0/0
 46182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46187 ;;Total ram usage:        0 bytes
 46188 ;; Hardware stack levels used: 1
 46189 ;; This function calls:
 46190 ;;		Nothing
 46191 ;; This function is called by:
 46192 ;;		_EXT_INT_Initialize
 46193 ;;		_INT1_CallBack
 46194 ;; This function uses a reentrant model
 46195 ;;
 46196                           
 46197                           	psect	text122
 46198   0182AE                     __ptext122:
 46199                           	callstack 0
 46200   0182AE                     _INT1_DefaultInterruptHandler:
 46201                           	callstack 15
 46202                           
 46203                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 46204                           
 46205                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46206                           ;incstack = 0
 46207   0182AE  0012               	return		;funcret
 46208   0182B0                     __end_of_INT1_DefaultInterruptHandler:
 46209                           	callstack 0
 46210                           
 46211 ;; *************** function _INT2_ISR *****************
 46212 ;; Defined at:
 46213 ;;		line 92 in file "mcc_generated_files/ext_int.c"
 46214 ;; Parameters:    Size  Location     Type
 46215 ;;		None
 46216 ;; Auto vars:     Size  Location     Type
 46217 ;;		None
 46218 ;; Return value:  Size  Location     Type
 46219 ;;                  1    wreg      void 
 46220 ;; Registers used:
 46221 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl
 46222 ;; Tracked objects:
 46223 ;;		On entry : 0/0
 46224 ;;		On exit  : 0/0
 46225 ;;		Unchanged: 0/0
 46226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46229 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46230 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46231 ;;Total ram usage:        2 bytes
 46232 ;; Hardware stack levels used: 1
 46233 ;; Hardware stack levels required when called: 2
 46234 ;; This function calls:
 46235 ;;		_INT2_CallBack
 46236 ;; This function is called by:
 46237 ;;		Interrupt level 2
 46238 ;; This function uses a non-reentrant model
 46239 ;;
 46240                           
 46241                           	psect	text123
 46242   017F10                     __ptext123:
 46243                           	callstack 0
 46244   017F10                     _INT2_ISR:
 46245                           	callstack 15
 46246                           
 46247                           ;incstack = 0
 46248   017F10  006F FFE8  F047    	movff	pclath,??_INT2_ISR
 46249   017F16  006F FFEC  F048    	movff	pclatu,??_INT2_ISR+1
 46250   017F1C  EE15  F3EB         	lfsr	1,___inthi_sp
 46251                           
 46252                           ;mcc_generated_files/ext_int.c: 94:  (PIR7bits.INT2IF = 0);
 46253   017F20  0139               	movlb	57	; () banked
 46254   017F22  9BA7               	bcf	167,5,b	;volatile
 46255                           
 46256                           ; BSR set to: 57
 46257                           ;mcc_generated_files/ext_int.c: 97:  INT2_CallBack();
 46258   017F24  ECE3  F0BF         	call	_INT2_CallBack	;wreg free
 46259   017F28  0060  F123  FFFB   	movff	??_INT2_ISR+1,pclatu
 46260   017F2E  0060  F11F  FFFA   	movff	??_INT2_ISR,pclath
 46261   017F34  0011               	retfie		f
 46262   017F36                     __end_of_INT2_ISR:
 46263                           	callstack 0
 46264                           
 46265 ;; *************** function _INT2_CallBack *****************
 46266 ;; Defined at:
 46267 ;;		line 100 in file "mcc_generated_files/ext_int.c"
 46268 ;; Parameters:    Size  Location     Type
 46269 ;;		None
 46270 ;; Auto vars:     Size  Location     Type
 46271 ;;		None
 46272 ;; Return value:  Size  Location     Type
 46273 ;;                  1  [STACK] void 
 46274 ;; Registers used:
 46275 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl
 46276 ;; Tracked objects:
 46277 ;;		On entry : 3F/39
 46278 ;;		On exit  : 0/0
 46279 ;;		Unchanged: 0/0
 46280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46285 ;;Total ram usage:        0 bytes
 46286 ;; Hardware stack levels used: 1
 46287 ;; Hardware stack levels required when called: 1
 46288 ;; This function calls:
 46289 ;;		NULL
 46290 ;;		_INT2_DefaultInterruptHandler
 46291 ;; This function is called by:
 46292 ;;		_INT2_ISR
 46293 ;; This function uses a reentrant model
 46294 ;;
 46295                           
 46296                           	psect	text124
 46297   017FC6                     __ptext124:
 46298                           	callstack 0
 46299   017FC6                     _INT2_CallBack:
 46300                           	callstack 15
 46301                           
 46302                           ;mcc_generated_files/ext_int.c: 103:  if (INT2_InterruptHandler) {
 46303                           
 46304                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46305                           ;incstack = 0
 46306   017FC6  0100               	movlb	0	; () banked
 46307   017FC8  51B3               	movf	_INT2_InterruptHandler& (0+255),w,b
 46308   017FCA  11B4               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
 46309   017FCC  11B5               	iorwf	(_INT2_InterruptHandler+2)& (0+255),w,b
 46310   017FCE  B4D8               	btfsc	status,2,c
 46311   017FD0  0012               	return	
 46312                           
 46313                           ; BSR set to: 0
 46314                           ;mcc_generated_files/ext_int.c: 104:   INT2_InterruptHandler();
 46315   017FD2  D801               	call	u640_48
 46316   017FD4  0012               	return	
 46317   017FD6                     u640_48:
 46318   017FD6  0005               	push	
 46319   017FD8  6EFA               	movwf	pclath,c
 46320   017FDA  51B3               	movf	_INT2_InterruptHandler& (0+255),w,b
 46321   017FDC  6EFD               	movwf	tosl,c
 46322   017FDE  51B4               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
 46323   017FE0  6EFE               	movwf	tosh,c
 46324   017FE2  51B5               	movf	(_INT2_InterruptHandler+2)& (0+255),w,b
 46325   017FE4  6EFF               	movwf	tosu,c
 46326   017FE6  50FA               	movf	pclath,w,c
 46327   017FE8  0012               	return		;indir
 46328   017FEA                     __end_of_INT2_CallBack:
 46329                           	callstack 0
 46330                           
 46331 ;; *************** function _INT2_DefaultInterruptHandler *****************
 46332 ;; Defined at:
 46333 ;;		line 113 in file "mcc_generated_files/ext_int.c"
 46334 ;; Parameters:    Size  Location     Type
 46335 ;;		None
 46336 ;; Auto vars:     Size  Location     Type
 46337 ;;		None
 46338 ;; Return value:  Size  Location     Type
 46339 ;;                  1  [STACK] void 
 46340 ;; Registers used:
 46341 ;;		None
 46342 ;; Tracked objects:
 46343 ;;		On entry : 3F/0
 46344 ;;		On exit  : 0/0
 46345 ;;		Unchanged: 0/0
 46346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46351 ;;Total ram usage:        0 bytes
 46352 ;; Hardware stack levels used: 1
 46353 ;; This function calls:
 46354 ;;		Nothing
 46355 ;; This function is called by:
 46356 ;;		_EXT_INT_Initialize
 46357 ;;		_INT2_CallBack
 46358 ;; This function uses a reentrant model
 46359 ;;
 46360                           
 46361                           	psect	text125
 46362   0182B0                     __ptext125:
 46363                           	callstack 0
 46364   0182B0                     _INT2_DefaultInterruptHandler:
 46365                           	callstack 15
 46366                           
 46367                           ; _INT2_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 46368                           
 46369                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46370                           ;incstack = 0
 46371   0182B0  0012               	return		;funcret
 46372   0182B2                     __end_of_INT2_DefaultInterruptHandler:
 46373                           	callstack 0
 46374                           
 46375 ;; *************** function _Default_ISR *****************
 46376 ;; Defined at:
 46377 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 46378 ;; Parameters:    Size  Location     Type
 46379 ;;		None
 46380 ;; Auto vars:     Size  Location     Type
 46381 ;;		None
 46382 ;; Return value:  Size  Location     Type
 46383 ;;                  1    wreg      void 
 46384 ;; Registers used:
 46385 ;;		None
 46386 ;; Tracked objects:
 46387 ;;		On entry : 0/0
 46388 ;;		On exit  : 0/0
 46389 ;;		Unchanged: 0/0
 46390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46395 ;;Total ram usage:        0 bytes
 46396 ;; Hardware stack levels used: 1
 46397 ;; This function calls:
 46398 ;;		Nothing
 46399 ;; This function is called by:
 46400 ;;		Interrupt level 2
 46401 ;; This function uses a non-reentrant model
 46402 ;;
 46403                           
 46404                           	psect	text126
 46405   0182A0                     __ptext126:
 46406                           	callstack 0
 46407   0182A0                     _Default_ISR:
 46408                           	callstack 17
 46409                           
 46410                           ;incstack = 0
 46411   0182A0  EE15  F3EB         	lfsr	1,___inthi_sp
 46412   0182A4  0011               	retfie		f
 46413   0182A6                     __end_of_Default_ISR:
 46414                           	callstack 0
 46415                           
 46416 ;; *************** function _ADCC_ISR *****************
 46417 ;; Defined at:
 46418 ;;		line 307 in file "mcc_generated_files/adcc.c"
 46419 ;; Parameters:    Size  Location     Type
 46420 ;;		None
 46421 ;; Auto vars:     Size  Location     Type
 46422 ;;		None
 46423 ;; Return value:  Size  Location     Type
 46424 ;;                  1    wreg      void 
 46425 ;; Registers used:
 46426 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl
 46427 ;; Tracked objects:
 46428 ;;		On entry : 0/0
 46429 ;;		On exit  : 0/0
 46430 ;;		Unchanged: 0/0
 46431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46434 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46435 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46436 ;;Total ram usage:        2 bytes
 46437 ;; Hardware stack levels used: 1
 46438 ;; Hardware stack levels required when called: 1
 46439 ;; This function calls:
 46440 ;;		NULL
 46441 ;;		_ADCC_DefaultInterruptHandler
 46442 ;; This function is called by:
 46443 ;;		Interrupt level 2
 46444 ;; This function uses a non-reentrant model
 46445 ;;
 46446                           
 46447                           	psect	text127
 46448   017670                     __ptext127:
 46449                           	callstack 0
 46450   017670                     _ADCC_ISR:
 46451                           	callstack 16
 46452                           
 46453                           ;incstack = 0
 46454   017670  006F FFE8  F049    	movff	pclath,??_ADCC_ISR
 46455   017676  006F FFEC  F04A    	movff	pclatu,??_ADCC_ISR+1
 46456   01767C  EE15  F3EB         	lfsr	1,___inthi_sp
 46457                           
 46458                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 46459   017680  0139               	movlb	57	; () banked
 46460   017682  95A1               	bcf	161,2,b	;volatile
 46461                           
 46462                           ; BSR set to: 57
 46463                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 46464   017684  0100               	movlb	0	; () banked
 46465   017686  51A4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 46466   017688  11A5               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 46467   01768A  11A6               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 46468   01768C  B4D8               	btfsc	status,2,c
 46469   01768E  D00C               	goto	i2u741_49
 46470                           
 46471                           ; BSR set to: 0
 46472                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 46473   017690  D801               	call	i2u741_48
 46474   017692  D00A               	goto	i2u741_49
 46475   017694                     i2u741_48:
 46476   017694  0005               	push	
 46477   017696  6EFA               	movwf	pclath,c
 46478   017698  51A4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 46479   01769A  6EFD               	movwf	tosl,c
 46480   01769C  51A5               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 46481   01769E  6EFE               	movwf	tosh,c
 46482   0176A0  51A6               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 46483   0176A2  6EFF               	movwf	tosu,c
 46484   0176A4  50FA               	movf	pclath,w,c
 46485   0176A6  0012               	return		;indir
 46486   0176A8                     i2u741_49:
 46487   0176A8  0060  F12B  FFFB   	movff	??_ADCC_ISR+1,pclatu
 46488   0176AE  0060  F127  FFFA   	movff	??_ADCC_ISR,pclath
 46489   0176B4  0011               	retfie		f
 46490   0176B6                     __end_of_ADCC_ISR:
 46491                           	callstack 0
 46492                           
 46493 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 46494 ;; Defined at:
 46495 ;;		line 320 in file "mcc_generated_files/adcc.c"
 46496 ;; Parameters:    Size  Location     Type
 46497 ;;		None
 46498 ;; Auto vars:     Size  Location     Type
 46499 ;;		None
 46500 ;; Return value:  Size  Location     Type
 46501 ;;                  1  [STACK] void 
 46502 ;; Registers used:
 46503 ;;		None
 46504 ;; Tracked objects:
 46505 ;;		On entry : 3F/0
 46506 ;;		On exit  : 0/0
 46507 ;;		Unchanged: 0/0
 46508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46513 ;;Total ram usage:        0 bytes
 46514 ;; Hardware stack levels used: 1
 46515 ;; This function calls:
 46516 ;;		Nothing
 46517 ;; This function is called by:
 46518 ;;		_ADCC_Initialize
 46519 ;;		_ADCC_ISR
 46520 ;; This function uses a reentrant model
 46521 ;;
 46522                           
 46523                           	psect	text128
 46524   0182B2                     __ptext128:
 46525                           	callstack 0
 46526   0182B2                     _ADCC_DefaultInterruptHandler:
 46527                           	callstack 16
 46528                           
 46529                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 46530                           
 46531                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46532                           ;incstack = 0
 46533   0182B2  0012               	return		;funcret
 46534   0182B4                     __end_of_ADCC_DefaultInterruptHandler:
 46535                           	callstack 0
 46536                           
 46537 ;; *************** function _UART1_tx_vect_isr *****************
 46538 ;; Defined at:
 46539 ;;		line 200 in file "mcc_generated_files/uart1.c"
 46540 ;; Parameters:    Size  Location     Type
 46541 ;;		None
 46542 ;; Auto vars:     Size  Location     Type
 46543 ;;		None
 46544 ;; Return value:  Size  Location     Type
 46545 ;;                  1    wreg      void 
 46546 ;; Registers used:
 46547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl
 46548 ;; Tracked objects:
 46549 ;;		On entry : 0/0
 46550 ;;		On exit  : 0/0
 46551 ;;		Unchanged: 0/0
 46552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46555 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46556 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46557 ;;Total ram usage:        2 bytes
 46558 ;; Hardware stack levels used: 1
 46559 ;; Hardware stack levels required when called: 1
 46560 ;; This function calls:
 46561 ;;		NULL
 46562 ;;		_UART1_Transmit_ISR
 46563 ;; This function is called by:
 46564 ;;		Interrupt level 2
 46565 ;; This function uses a non-reentrant model
 46566 ;;
 46567                           
 46568                           	psect	text129
 46569   017784                     __ptext129:
 46570                           	callstack 0
 46571   017784                     _UART1_tx_vect_isr:
 46572                           	callstack 16
 46573                           
 46574                           ;incstack = 0
 46575   017784  006F FFE8  F04B    	movff	pclath,??_UART1_tx_vect_isr
 46576   01778A  006F FFEC  F04C    	movff	pclatu,??_UART1_tx_vect_isr+1
 46577   017790  EE15  F3EB         	lfsr	1,___inthi_sp
 46578                           
 46579                           ;mcc_generated_files/uart1.c: 202:  if (UART1_TxInterruptHandler) {
 46580   017794  0100               	movlb	0	; () banked
 46581   017796  51A7               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 46582   017798  11A8               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 46583   01779A  11A9               	iorwf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 46584   01779C  B4D8               	btfsc	status,2,c
 46585   01779E  D00C               	goto	i2u743_49
 46586                           
 46587                           ; BSR set to: 0
 46588                           ;mcc_generated_files/uart1.c: 203:   UART1_TxInterruptHandler();
 46589   0177A0  D801               	call	i2u743_48
 46590   0177A2  D00A               	goto	i2u743_49
 46591   0177A4                     i2u743_48:
 46592   0177A4  0005               	push	
 46593   0177A6  6EFA               	movwf	pclath,c
 46594   0177A8  51A7               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 46595   0177AA  6EFD               	movwf	tosl,c
 46596   0177AC  51A8               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 46597   0177AE  6EFE               	movwf	tosh,c
 46598   0177B0  51A9               	movf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 46599   0177B2  6EFF               	movwf	tosu,c
 46600   0177B4  50FA               	movf	pclath,w,c
 46601   0177B6  0012               	return		;indir
 46602   0177B8                     i2u743_49:
 46603   0177B8  0060  F133  FFFB   	movff	??_UART1_tx_vect_isr+1,pclatu
 46604   0177BE  0060  F12F  FFFA   	movff	??_UART1_tx_vect_isr,pclath
 46605   0177C4  0011               	retfie		f
 46606   0177C6                     __end_of_UART1_tx_vect_isr:
 46607                           	callstack 0
 46608                           
 46609 ;; *************** function _UART1_Transmit_ISR *****************
 46610 ;; Defined at:
 46611 ;;		line 214 in file "mcc_generated_files/uart1.c"
 46612 ;; Parameters:    Size  Location     Type
 46613 ;;		None
 46614 ;; Auto vars:     Size  Location     Type
 46615 ;;		None
 46616 ;; Return value:  Size  Location     Type
 46617 ;;                  1  [STACK] void 
 46618 ;; Registers used:
 46619 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 46620 ;; Tracked objects:
 46621 ;;		On entry : 3F/0
 46622 ;;		On exit  : 3B/39
 46623 ;;		Unchanged: 0/0
 46624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46629 ;;Total ram usage:        0 bytes
 46630 ;; Hardware stack levels used: 1
 46631 ;; This function calls:
 46632 ;;		Nothing
 46633 ;; This function is called by:
 46634 ;;		_UART1_Initialize
 46635 ;;		_UART1_tx_vect_isr
 46636 ;; This function uses a reentrant model
 46637 ;;
 46638                           
 46639                           	psect	text130
 46640   017BBE                     __ptext130:
 46641                           	callstack 0
 46642   017BBE                     _UART1_Transmit_ISR:
 46643                           	callstack 16
 46644                           
 46645                           ;mcc_generated_files/uart1.c: 217:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 46646                           
 46647                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46648                           ;incstack = 0
 46649   017BBE  0E40               	movlw	64
 46650   017BC0  6019               	cpfslt	_uart1TxBufferRemaining^0,c
 46651   017BC2  D010               	goto	l609
 46652                           
 46653                           ;mcc_generated_files/uart1.c: 218:   U1TXB = uart1TxBuffer[uart1TxTail++];
 46654   017BC4  0E40               	movlw	low _uart1TxBuffer
 46655   017BC6  241A               	addwf	_uart1TxTail^0,w,c	;volatile
 46656   017BC8  6ED9               	movwf	fsr2l,c
 46657   017BCA  6ADA               	clrf	fsr2h,c
 46658   017BCC  0E02               	movlw	high _uart1TxBuffer
 46659   017BCE  22DA               	addwfc	fsr2h,f,c
 46660   017BD0  50DF               	movf	indf2,w,c
 46661   017BD2  013D               	movlb	61	; () banked
 46662   017BD4  6FEA               	movwf	234,b	;volatile
 46663                           
 46664                           ; BSR set to: 61
 46665   017BD6  2A1A               	incf	_uart1TxTail^0,f,c	;volatile
 46666                           
 46667                           ; BSR set to: 61
 46668                           ;mcc_generated_files/uart1.c: 219:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 46669   017BD8  0E3F               	movlw	63
 46670   017BDA  641A               	cpfsgt	_uart1TxTail^0,c
 46671   017BDC  D001               	goto	l10010
 46672                           
 46673                           ; BSR set to: 61
 46674                           ;mcc_generated_files/uart1.c: 220:    uart1TxTail = 0;
 46675   017BDE  6A1A               	clrf	_uart1TxTail^0,c	;volatile
 46676   017BE0                     l10010:
 46677                           
 46678                           ; BSR set to: 61
 46679                           ;mcc_generated_files/uart1.c: 222:   uart1TxBufferRemaining++;
 46680   017BE0  2A19               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 46681                           
 46682                           ;mcc_generated_files/uart1.c: 223:  } else {
 46683   017BE2  0012               	return	
 46684   017BE4                     l609:
 46685                           
 46686                           ;mcc_generated_files/uart1.c: 224:   PIE3bits.U1TXIE = 0;
 46687   017BE4  0139               	movlb	57	; () banked
 46688   017BE6  9993               	bcf	147,4,b	;volatile
 46689                           
 46690                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 46691   017BE8  0012               	return		;funcret
 46692   017BEA                     __end_of_UART1_Transmit_ISR:
 46693                           	callstack 0
 46694                           
 46695 ;; *************** function _UART1_rx_vect_isr *****************
 46696 ;; Defined at:
 46697 ;;		line 207 in file "mcc_generated_files/uart1.c"
 46698 ;; Parameters:    Size  Location     Type
 46699 ;;		None
 46700 ;; Auto vars:     Size  Location     Type
 46701 ;;		None
 46702 ;; Return value:  Size  Location     Type
 46703 ;;                  1    wreg      void 
 46704 ;; Registers used:
 46705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl
 46706 ;; Tracked objects:
 46707 ;;		On entry : 0/0
 46708 ;;		On exit  : 0/0
 46709 ;;		Unchanged: 0/0
 46710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46713 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46714 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46715 ;;Total ram usage:        2 bytes
 46716 ;; Hardware stack levels used: 1
 46717 ;; Hardware stack levels required when called: 1
 46718 ;; This function calls:
 46719 ;;		NULL
 46720 ;;		_UART1_Receive_ISR
 46721 ;; This function is called by:
 46722 ;;		Interrupt level 2
 46723 ;; This function uses a non-reentrant model
 46724 ;;
 46725                           
 46726                           	psect	text131
 46727   0177C8                     __ptext131:
 46728                           	callstack 0
 46729   0177C8                     _UART1_rx_vect_isr:
 46730                           	callstack 16
 46731                           
 46732                           ;incstack = 0
 46733   0177C8  006F FFE8  F04D    	movff	pclath,??_UART1_rx_vect_isr
 46734   0177CE  006F FFEC  F04E    	movff	pclatu,??_UART1_rx_vect_isr+1
 46735   0177D4  EE15  F3EB         	lfsr	1,___inthi_sp
 46736                           
 46737                           ;mcc_generated_files/uart1.c: 209:  if (UART1_RxInterruptHandler) {
 46738   0177D8  0100               	movlb	0	; () banked
 46739   0177DA  51AA               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 46740   0177DC  11AB               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 46741   0177DE  11AC               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 46742   0177E0  B4D8               	btfsc	status,2,c
 46743   0177E2  D00C               	goto	i2u745_49
 46744                           
 46745                           ; BSR set to: 0
 46746                           ;mcc_generated_files/uart1.c: 210:   UART1_RxInterruptHandler();
 46747   0177E4  D801               	call	i2u745_48
 46748   0177E6  D00A               	goto	i2u745_49
 46749   0177E8                     i2u745_48:
 46750   0177E8  0005               	push	
 46751   0177EA  6EFA               	movwf	pclath,c
 46752   0177EC  51AA               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 46753   0177EE  6EFD               	movwf	tosl,c
 46754   0177F0  51AB               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 46755   0177F2  6EFE               	movwf	tosh,c
 46756   0177F4  51AC               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 46757   0177F6  6EFF               	movwf	tosu,c
 46758   0177F8  50FA               	movf	pclath,w,c
 46759   0177FA  0012               	return		;indir
 46760   0177FC                     i2u745_49:
 46761   0177FC  0060  F13B  FFFB   	movff	??_UART1_rx_vect_isr+1,pclatu
 46762   017802  0060  F137  FFFA   	movff	??_UART1_rx_vect_isr,pclath
 46763   017808  0011               	retfie		f
 46764   01780A                     __end_of_UART1_rx_vect_isr:
 46765                           	callstack 0
 46766                           
 46767 ;; *************** function _UART1_Receive_ISR *****************
 46768 ;; Defined at:
 46769 ;;		line 230 in file "mcc_generated_files/uart1.c"
 46770 ;; Parameters:    Size  Location     Type
 46771 ;;		None
 46772 ;; Auto vars:     Size  Location     Type
 46773 ;;		None
 46774 ;; Return value:  Size  Location     Type
 46775 ;;                  1  [STACK] void 
 46776 ;; Registers used:
 46777 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 46778 ;; Tracked objects:
 46779 ;;		On entry : 3F/0
 46780 ;;		On exit  : 0/0
 46781 ;;		Unchanged: 0/0
 46782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46787 ;;Total ram usage:        0 bytes
 46788 ;; Hardware stack levels used: 1
 46789 ;; This function calls:
 46790 ;;		Nothing
 46791 ;; This function is called by:
 46792 ;;		_UART1_Initialize
 46793 ;;		_UART1_rx_vect_isr
 46794 ;; This function uses a reentrant model
 46795 ;;
 46796                           
 46797                           	psect	text132
 46798   0180B0                     __ptext132:
 46799                           	callstack 0
 46800   0180B0                     _UART1_Receive_ISR:
 46801                           	callstack 16
 46802                           
 46803                           ;mcc_generated_files/uart1.c: 233:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 46804                           
 46805                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46806                           ;incstack = 0
 46807   0180B0  0E00               	movlw	low _uart1RxBuffer
 46808   0180B2  2418               	addwf	_uart1RxHead^0,w,c	;volatile
 46809   0180B4  6ED9               	movwf	fsr2l,c
 46810   0180B6  6ADA               	clrf	fsr2h,c
 46811   0180B8  0E04               	movlw	high _uart1RxBuffer
 46812   0180BA  22DA               	addwfc	fsr2h,f,c
 46813   0180BC  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 46814   0180C2  2A18               	incf	_uart1RxHead^0,f,c	;volatile
 46815                           
 46816                           ;mcc_generated_files/uart1.c: 234:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 46817   0180C4  2818               	incf	_uart1RxHead^0,w,c
 46818   0180C6  B4D8               	btfsc	status,2,c
 46819                           
 46820                           ;mcc_generated_files/uart1.c: 235:   uart1RxHead = 0;
 46821   0180C8  6A18               	clrf	_uart1RxHead^0,c	;volatile
 46822                           
 46823                           ;mcc_generated_files/uart1.c: 237:  uart1RxCount++;
 46824   0180CA  2A16               	incf	_uart1RxCount^0,f,c	;volatile
 46825                           
 46826                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 46827   0180CC  0012               	return		;funcret
 46828   0180CE                     __end_of_UART1_Receive_ISR:
 46829                           	callstack 0
 46830                           
 46831 ;; *************** function _UART2_tx_vect_isr *****************
 46832 ;; Defined at:
 46833 ;;		line 195 in file "mcc_generated_files/uart2.c"
 46834 ;; Parameters:    Size  Location     Type
 46835 ;;		None
 46836 ;; Auto vars:     Size  Location     Type
 46837 ;;		None
 46838 ;; Return value:  Size  Location     Type
 46839 ;;                  1    wreg      void 
 46840 ;; Registers used:
 46841 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl
 46842 ;; Tracked objects:
 46843 ;;		On entry : 0/0
 46844 ;;		On exit  : 0/0
 46845 ;;		Unchanged: 0/0
 46846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46849 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46850 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46851 ;;Total ram usage:        2 bytes
 46852 ;; Hardware stack levels used: 1
 46853 ;; Hardware stack levels required when called: 1
 46854 ;; This function calls:
 46855 ;;		NULL
 46856 ;;		_UART2_Transmit_ISR
 46857 ;; This function is called by:
 46858 ;;		Interrupt level 2
 46859 ;; This function uses a non-reentrant model
 46860 ;;
 46861                           
 46862                           	psect	text133
 46863   01780C                     __ptext133:
 46864                           	callstack 0
 46865   01780C                     _UART2_tx_vect_isr:
 46866                           	callstack 16
 46867                           
 46868                           ;incstack = 0
 46869   01780C  006F FFE8  F0F5    	movff	pclath,??_UART2_tx_vect_isr
 46870   017812  006F FFEC  F0F6    	movff	pclatu,??_UART2_tx_vect_isr+1
 46871   017818  EE15  F3EB         	lfsr	1,___inthi_sp
 46872                           
 46873                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 46874   01781C  0100               	movlb	0	; () banked
 46875   01781E  51AD               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 46876   017820  11AE               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 46877   017822  11AF               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 46878   017824  B4D8               	btfsc	status,2,c
 46879   017826  D00C               	goto	i2u1028_49
 46880                           
 46881                           ; BSR set to: 0
 46882                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 46883   017828  D801               	call	i2u1028_48
 46884   01782A  D00A               	goto	i2u1028_49
 46885   01782C                     i2u1028_48:
 46886   01782C  0005               	push	
 46887   01782E  6EFA               	movwf	pclath,c
 46888   017830  51AD               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 46889   017832  6EFD               	movwf	tosl,c
 46890   017834  51AE               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 46891   017836  6EFE               	movwf	tosh,c
 46892   017838  51AF               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 46893   01783A  6EFF               	movwf	tosu,c
 46894   01783C  50FA               	movf	pclath,w,c
 46895   01783E  0012               	return		;indir
 46896   017840                     i2u1028_49:
 46897   017840  0060  F3DB  FFFB   	movff	??_UART2_tx_vect_isr+1,pclatu
 46898   017846  0060  F3D7  FFFA   	movff	??_UART2_tx_vect_isr,pclath
 46899   01784C  0011               	retfie		f
 46900   01784E                     __end_of_UART2_tx_vect_isr:
 46901                           	callstack 0
 46902                           
 46903 ;; *************** function _UART2_Transmit_ISR *****************
 46904 ;; Defined at:
 46905 ;;		line 213 in file "mcc_generated_files/uart2.c"
 46906 ;; Parameters:    Size  Location     Type
 46907 ;;		None
 46908 ;; Auto vars:     Size  Location     Type
 46909 ;;		None
 46910 ;; Return value:  Size  Location     Type
 46911 ;;                  1  [STACK] void 
 46912 ;; Registers used:
 46913 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 46914 ;; Tracked objects:
 46915 ;;		On entry : 3F/0
 46916 ;;		On exit  : 3B/39
 46917 ;;		Unchanged: 0/0
 46918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46923 ;;Total ram usage:        0 bytes
 46924 ;; Hardware stack levels used: 1
 46925 ;; This function calls:
 46926 ;;		Nothing
 46927 ;; This function is called by:
 46928 ;;		_UART2_Initialize
 46929 ;;		_UART2_tx_vect_isr
 46930 ;; This function uses a reentrant model
 46931 ;;
 46932                           
 46933                           	psect	text134
 46934   017BEA                     __ptext134:
 46935                           	callstack 0
 46936   017BEA                     _UART2_Transmit_ISR:
 46937                           	callstack 16
 46938                           
 46939                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 46940                           
 46941                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46942                           ;incstack = 0
 46943   017BEA  0E40               	movlw	64
 46944   017BEC  6013               	cpfslt	_uart2TxBufferRemaining^0,c
 46945   017BEE  D010               	goto	l729
 46946                           
 46947                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 46948   017BF0  0E00               	movlw	low _uart2TxBuffer
 46949   017BF2  2414               	addwf	_uart2TxTail^0,w,c	;volatile
 46950   017BF4  6ED9               	movwf	fsr2l,c
 46951   017BF6  6ADA               	clrf	fsr2h,c
 46952   017BF8  0E02               	movlw	high _uart2TxBuffer
 46953   017BFA  22DA               	addwfc	fsr2h,f,c
 46954   017BFC  50DF               	movf	indf2,w,c
 46955   017BFE  013D               	movlb	61	; () banked
 46956   017C00  6FD2               	movwf	210,b	;volatile
 46957                           
 46958                           ; BSR set to: 61
 46959   017C02  2A14               	incf	_uart2TxTail^0,f,c	;volatile
 46960                           
 46961                           ; BSR set to: 61
 46962                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 46963   017C04  0E3F               	movlw	63
 46964   017C06  6414               	cpfsgt	_uart2TxTail^0,c
 46965   017C08  D001               	goto	l10032
 46966                           
 46967                           ; BSR set to: 61
 46968                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 46969   017C0A  6A14               	clrf	_uart2TxTail^0,c	;volatile
 46970   017C0C                     l10032:
 46971                           
 46972                           ; BSR set to: 61
 46973                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 46974   017C0C  2A13               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 46975                           
 46976                           ;mcc_generated_files/uart2.c: 224:     }
 46977   017C0E  0012               	return	
 46978   017C10                     l729:
 46979                           
 46980                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 46981   017C10  0139               	movlb	57	; () banked
 46982   017C12  9796               	bcf	150,3,b	;volatile
 46983                           
 46984                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 46985   017C14  0012               	return		;funcret
 46986   017C16                     __end_of_UART2_Transmit_ISR:
 46987                           	callstack 0
 46988                           
 46989 ;; *************** function _UART2_rx_vect_isr *****************
 46990 ;; Defined at:
 46991 ;;		line 203 in file "mcc_generated_files/uart2.c"
 46992 ;; Parameters:    Size  Location     Type
 46993 ;;		None
 46994 ;; Auto vars:     Size  Location     Type
 46995 ;;		None
 46996 ;; Return value:  Size  Location     Type
 46997 ;;                  1    wreg      void 
 46998 ;; Registers used:
 46999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl
 47000 ;; Tracked objects:
 47001 ;;		On entry : 0/0
 47002 ;;		On exit  : 0/0
 47003 ;;		Unchanged: 0/0
 47004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47007 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47008 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47009 ;;Total ram usage:        2 bytes
 47010 ;; Hardware stack levels used: 1
 47011 ;; Hardware stack levels required when called: 1
 47012 ;; This function calls:
 47013 ;;		NULL
 47014 ;;		_UART2_Receive_ISR
 47015 ;; This function is called by:
 47016 ;;		Interrupt level 2
 47017 ;; This function uses a non-reentrant model
 47018 ;;
 47019                           
 47020                           	psect	text135
 47021   017850                     __ptext135:
 47022                           	callstack 0
 47023   017850                     _UART2_rx_vect_isr:
 47024                           	callstack 16
 47025                           
 47026                           ;incstack = 0
 47027   017850  006F FFE8  F0F7    	movff	pclath,??_UART2_rx_vect_isr
 47028   017856  006F FFEC  F0F8    	movff	pclatu,??_UART2_rx_vect_isr+1
 47029   01785C  EE15  F3EB         	lfsr	1,___inthi_sp
 47030                           
 47031                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 47032   017860  0100               	movlb	0	; () banked
 47033   017862  51B0               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 47034   017864  11B1               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 47035   017866  11B2               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 47036   017868  B4D8               	btfsc	status,2,c
 47037   01786A  D00C               	goto	i2u1030_49
 47038                           
 47039                           ; BSR set to: 0
 47040                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 47041   01786C  D801               	call	i2u1030_48
 47042   01786E  D00A               	goto	i2u1030_49
 47043   017870                     i2u1030_48:
 47044   017870  0005               	push	
 47045   017872  6EFA               	movwf	pclath,c
 47046   017874  51B0               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 47047   017876  6EFD               	movwf	tosl,c
 47048   017878  51B1               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 47049   01787A  6EFE               	movwf	tosh,c
 47050   01787C  51B2               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 47051   01787E  6EFF               	movwf	tosu,c
 47052   017880  50FA               	movf	pclath,w,c
 47053   017882  0012               	return		;indir
 47054   017884                     i2u1030_49:
 47055   017884  0060  F3E3  FFFB   	movff	??_UART2_rx_vect_isr+1,pclatu
 47056   01788A  0060  F3DF  FFFA   	movff	??_UART2_rx_vect_isr,pclath
 47057   017890  0011               	retfie		f
 47058   017892                     __end_of_UART2_rx_vect_isr:
 47059                           	callstack 0
 47060                           
 47061 ;; *************** function _UART2_Receive_ISR *****************
 47062 ;; Defined at:
 47063 ;;		line 233 in file "mcc_generated_files/uart2.c"
 47064 ;; Parameters:    Size  Location     Type
 47065 ;;		None
 47066 ;; Auto vars:     Size  Location     Type
 47067 ;;		None
 47068 ;; Return value:  Size  Location     Type
 47069 ;;                  1  [STACK] void 
 47070 ;; Registers used:
 47071 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 47072 ;; Tracked objects:
 47073 ;;		On entry : 3F/0
 47074 ;;		On exit  : 0/0
 47075 ;;		Unchanged: 0/0
 47076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47081 ;;Total ram usage:        0 bytes
 47082 ;; Hardware stack levels used: 1
 47083 ;; This function calls:
 47084 ;;		Nothing
 47085 ;; This function is called by:
 47086 ;;		_UART2_Initialize
 47087 ;;		_UART2_rx_vect_isr
 47088 ;; This function uses a reentrant model
 47089 ;;
 47090                           
 47091                           	psect	text136
 47092   0180CE                     __ptext136:
 47093                           	callstack 0
 47094   0180CE                     _UART2_Receive_ISR:
 47095                           	callstack 16
 47096                           
 47097                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 47098                           
 47099                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47100                           ;incstack = 0
 47101   0180CE  0E00               	movlw	low _uart2RxBuffer
 47102   0180D0  2412               	addwf	_uart2RxHead^0,w,c	;volatile
 47103   0180D2  6ED9               	movwf	fsr2l,c
 47104   0180D4  6ADA               	clrf	fsr2h,c
 47105   0180D6  0E05               	movlw	high _uart2RxBuffer
 47106   0180D8  22DA               	addwfc	fsr2h,f,c
 47107   0180DA  006F F743 FFDF     	movff	15824,indf2	;volatile
 47108   0180E0  2A12               	incf	_uart2RxHead^0,f,c	;volatile
 47109                           
 47110                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 47111   0180E2  2812               	incf	_uart2RxHead^0,w,c
 47112   0180E4  B4D8               	btfsc	status,2,c
 47113                           
 47114                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 47115   0180E6  6A12               	clrf	_uart2RxHead^0,c	;volatile
 47116                           
 47117                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 47118   0180E8  2A10               	incf	_uart2RxCount^0,f,c	;volatile
 47119                           
 47120                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 47121   0180EA  0012               	return		;funcret
 47122   0180EC                     __end_of_UART2_Receive_ISR:
 47123                           	callstack 0
 47124                           
 47125 ;; *************** function _TMR6_ISR *****************
 47126 ;; Defined at:
 47127 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 47128 ;; Parameters:    Size  Location     Type
 47129 ;;		None
 47130 ;; Auto vars:     Size  Location     Type
 47131 ;;		None
 47132 ;; Return value:  Size  Location     Type
 47133 ;;                  1    wreg      void 
 47134 ;; Registers used:
 47135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, tosl, prodl, prodh
 47136 ;; Tracked objects:
 47137 ;;		On entry : 0/0
 47138 ;;		On exit  : 0/0
 47139 ;;		Unchanged: 0/0
 47140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47143 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47144 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47145 ;;Total ram usage:        3 bytes
 47146 ;; Hardware stack levels used: 1
 47147 ;; Hardware stack levels required when called: 2
 47148 ;; This function calls:
 47149 ;;		_TMR6_CallBack
 47150 ;; This function is called by:
 47151 ;;		Interrupt level 2
 47152 ;; This function uses a non-reentrant model
 47153 ;;
 47154                           
 47155                           	psect	text137
 47156   017B90                     __ptext137:
 47157                           	callstack 0
 47158   017B90                     _TMR6_ISR:
 47159                           	callstack 15
 47160                           
 47161                           ;incstack = 0
 47162   017B90  006F FFE8  F0F9    	movff	pclath,??_TMR6_ISR
 47163   017B96  006F FFEC  F0FA    	movff	pclatu,??_TMR6_ISR+1
 47164   017B9C  C023  F0FB         	movff	btemp,??_TMR6_ISR+2
 47165   017BA0  EE15  F3EB         	lfsr	1,___inthi_sp
 47166                           
 47167                           ;mcc_generated_files/tmr6.c: 175:  PIR9bits.TMR6IF = 0;
 47168   017BA4  0139               	movlb	57	; () banked
 47169   017BA6  91A9               	bcf	169,0,b	;volatile
 47170                           
 47171                           ; BSR set to: 57
 47172                           ;mcc_generated_files/tmr6.c: 179:  TMR6_CallBack();
 47173   017BA8  ECF5  F0BF         	call	_TMR6_CallBack	;wreg free
 47174   017BAC  C0FB  F023         	movff	??_TMR6_ISR+2,btemp
 47175   017BB0  0060  F3EB  FFFB   	movff	??_TMR6_ISR+1,pclatu
 47176   017BB6  0060  F3E7  FFFA   	movff	??_TMR6_ISR,pclath
 47177   017BBC  0011               	retfie		f
 47178   017BBE                     __end_of_TMR6_ISR:
 47179                           	callstack 0
 47180                           
 47181 ;; *************** function _TMR6_CallBack *****************
 47182 ;; Defined at:
 47183 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 47184 ;; Parameters:    Size  Location     Type
 47185 ;;		None
 47186 ;; Auto vars:     Size  Location     Type
 47187 ;;		None
 47188 ;; Return value:  Size  Location     Type
 47189 ;;                  1  [STACK] void 
 47190 ;; Registers used:
 47191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, tosl, prodl, prodh
 47192 ;; Tracked objects:
 47193 ;;		On entry : 3F/39
 47194 ;;		On exit  : 0/0
 47195 ;;		Unchanged: 0/0
 47196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47201 ;;Total ram usage:        0 bytes
 47202 ;; Hardware stack levels used: 1
 47203 ;; Hardware stack levels required when called: 1
 47204 ;; This function calls:
 47205 ;;		NULL
 47206 ;;		_TMR6_DefaultInterruptHandler
 47207 ;; This function is called by:
 47208 ;;		_TMR6_ISR
 47209 ;; This function uses a reentrant model
 47210 ;;
 47211                           
 47212                           	psect	text138
 47213   017FEA                     __ptext138:
 47214                           	callstack 0
 47215   017FEA                     _TMR6_CallBack:
 47216                           	callstack 15
 47217                           
 47218                           ;mcc_generated_files/tmr6.c: 186:  if (TMR6_InterruptHandler) {
 47219                           
 47220                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47221                           ;incstack = 0
 47222   017FEA  0100               	movlb	0	; () banked
 47223   017FEC  51A1               	movf	_TMR6_InterruptHandler& (0+255),w,b
 47224   017FEE  11A2               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 47225   017FF0  11A3               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 47226   017FF2  B4D8               	btfsc	status,2,c
 47227   017FF4  0012               	return	
 47228                           
 47229                           ; BSR set to: 0
 47230                           ;mcc_generated_files/tmr6.c: 187:   TMR6_InterruptHandler();
 47231   017FF6  D801               	call	u648_48
 47232   017FF8  0012               	return	
 47233   017FFA                     u648_48:
 47234   017FFA  0005               	push	
 47235   017FFC  6EFA               	movwf	pclath,c
 47236   017FFE  51A1               	movf	_TMR6_InterruptHandler& (0+255),w,b
 47237   018000  6EFD               	movwf	tosl,c
 47238   018002  51A2               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 47239   018004  6EFE               	movwf	tosh,c
 47240   018006  51A3               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 47241   018008  6EFF               	movwf	tosu,c
 47242   01800A  50FA               	movf	pclath,w,c
 47243   01800C  0012               	return		;indir
 47244   01800E                     __end_of_TMR6_CallBack:
 47245                           	callstack 0
 47246                           
 47247 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 47248 ;; Defined at:
 47249 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 47250 ;; Parameters:    Size  Location     Type
 47251 ;;		None
 47252 ;; Auto vars:     Size  Location     Type
 47253 ;;  i               1  [STACK] unsigned char 
 47254 ;; Return value:  Size  Location     Type
 47255 ;;                  1  [STACK] void 
 47256 ;; Registers used:
 47257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 47258 ;; Tracked objects:
 47259 ;;		On entry : 3F/0
 47260 ;;		On exit  : 0/0
 47261 ;;		Unchanged: 0/0
 47262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47267 ;;Total ram usage:        0 bytes
 47268 ;; Hardware stack levels used: 1
 47269 ;; This function calls:
 47270 ;;		Nothing
 47271 ;; This function is called by:
 47272 ;;		_TMR6_Initialize
 47273 ;;		_TMR6_CallBack
 47274 ;; This function uses a reentrant model
 47275 ;;
 47276                           
 47277                           	psect	text139
 47278   0176B6                     __ptext139:
 47279                           	callstack 0
 47280   0176B6                     _TMR6_DefaultInterruptHandler:
 47281                           	callstack 0
 47282                           
 47283                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47284   0176B6  52E6               	movf	postinc1,f,c
 47285                           
 47286                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 47287                           ;stkvar	_i @ sp[(-1)+0]
 47288                           
 47289                           ;incstack = 0
 47290   0176B8  0EFF               	movlw	-1
 47291   0176BA  6AE3               	clrf	plusw1,c
 47292   0176BC                     l9268:
 47293                           
 47294                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 47295                           ;stkvar	_i @ sp[(-1)+0]
 47296   0176BC  0EFF               	movlw	-1
 47297   0176BE  50E3               	movf	plusw1,w,c
 47298   0176C0  0D02               	mullw	2
 47299   0176C2  50F3               	movf	243,w,c
 47300   0176C4  0F60               	addlw	low _tickCount
 47301   0176C6  6ED9               	movwf	fsr2l,c
 47302   0176C8  6ADA               	clrf	fsr2h,c
 47303   0176CA  50DE               	movf	postinc2,w,c
 47304   0176CC  10DE               	iorwf	postinc2,w,c
 47305   0176CE  B4D8               	btfsc	status,2,c
 47306   0176D0  D00A               	goto	l9272
 47307                           
 47308                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 47309                           ;stkvar	_i @ sp[(-1)+0]
 47310   0176D2  0EFF               	movlw	-1
 47311   0176D4  50E3               	movf	plusw1,w,c
 47312   0176D6  0D02               	mullw	2
 47313   0176D8  50F3               	movf	243,w,c
 47314   0176DA  0F60               	addlw	low _tickCount
 47315   0176DC  6ED9               	movwf	fsr2l,c
 47316   0176DE  6ADA               	clrf	fsr2h,c
 47317   0176E0  06DE               	decf	postinc2,f,c
 47318   0176E2  0E00               	movlw	0
 47319   0176E4  5ADD               	subwfb	postdec2,f,c
 47320   0176E6                     l9272:
 47321                           
 47322                           ;mcc_generated_files/tmr6.c: 207:  }
 47323                           ;stkvar	_i @ sp[(-1)+0]
 47324   0176E6  0EFF               	movlw	-1
 47325   0176E8  2AE3               	incf	plusw1,f,c
 47326                           
 47327                           ;stkvar	_i @ sp[(-1)+0]
 47328   0176EA  0EFF               	movlw	-1
 47329   0176EC  006F FF8C  F023    	movff	plusw1,btemp
 47330   0176F2  0E0C               	movlw	12
 47331   0176F4  6423               	cpfsgt	btemp^0,c
 47332   0176F6  D7E2               	goto	l9268
 47333                           
 47334                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 47335   0176F8  52E5               	movf	postdec1,f,c
 47336   0176FA  0012               	return		;funcret
 47337   0176FC                     __end_of_TMR6_DefaultInterruptHandler:
 47338                           	callstack 0
 47339                           
 47340 ;; *************** function _DMA1_DMASCNT_ISR *****************
 47341 ;; Defined at:
 47342 ;;		line 126 in file "mcc_generated_files/dma1.c"
 47343 ;; Parameters:    Size  Location     Type
 47344 ;;		None
 47345 ;; Auto vars:     Size  Location     Type
 47346 ;;		None
 47347 ;; Return value:  Size  Location     Type
 47348 ;;                  1    wreg      void 
 47349 ;; Registers used:
 47350 ;;		None
 47351 ;; Tracked objects:
 47352 ;;		On entry : 0/0
 47353 ;;		On exit  : 3F/0
 47354 ;;		Unchanged: 0/0
 47355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47360 ;;Total ram usage:        0 bytes
 47361 ;; Hardware stack levels used: 1
 47362 ;; This function calls:
 47363 ;;		Nothing
 47364 ;; This function is called by:
 47365 ;;		Interrupt level 2
 47366 ;; This function uses a non-reentrant model
 47367 ;;
 47368                           
 47369                           	psect	text140
 47370   018210                     __ptext140:
 47371                           	callstack 0
 47372   018210                     _DMA1_DMASCNT_ISR:
 47373                           	callstack 17
 47374                           
 47375                           ;incstack = 0
 47376   018210  EE15  F3EB         	lfsr	1,___inthi_sp
 47377                           
 47378                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 47379   018214  0139               	movlb	57	; () banked
 47380   018216  91A2               	bcf	162,0,b	;volatile
 47381                           
 47382                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 47383   018218  0100               	movlb	0	; () banked
 47384   01821A  9787               	bcf	_spi_link& (0+255),3,b	;volatile
 47385                           
 47386                           ; BSR set to: 0
 47387                           
 47388                           ;mcc_generated_files/dma1.c: 131:  do { LATEbits.LATE2 = 0; } while(0);
 47389   01821C  94BE               	bcf	190,2,c	;volatile
 47390                           
 47391                           ; BSR set to: 0
 47392   01821E  0011               	retfie		f
 47393   018220                     __end_of_DMA1_DMASCNT_ISR:
 47394                           	callstack 0
 47395                           
 47396 ;; *************** function _DMA1_DMADCNT_ISR *****************
 47397 ;; Defined at:
 47398 ;;		line 134 in file "mcc_generated_files/dma1.c"
 47399 ;; Parameters:    Size  Location     Type
 47400 ;;		None
 47401 ;; Auto vars:     Size  Location     Type
 47402 ;;		None
 47403 ;; Return value:  Size  Location     Type
 47404 ;;                  1    wreg      void 
 47405 ;; Registers used:
 47406 ;;		None
 47407 ;; Tracked objects:
 47408 ;;		On entry : 0/0
 47409 ;;		On exit  : 3F/39
 47410 ;;		Unchanged: 0/0
 47411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47416 ;;Total ram usage:        0 bytes
 47417 ;; Hardware stack levels used: 1
 47418 ;; This function calls:
 47419 ;;		Nothing
 47420 ;; This function is called by:
 47421 ;;		Interrupt level 2
 47422 ;; This function uses a non-reentrant model
 47423 ;;
 47424                           
 47425                           	psect	text141
 47426   018248                     __ptext141:
 47427                           	callstack 0
 47428   018248                     _DMA1_DMADCNT_ISR:
 47429                           	callstack 17
 47430                           
 47431                           ; BSR set to: 0
 47432                           ;incstack = 0
 47433   018248  EE15  F3EB         	lfsr	1,___inthi_sp
 47434                           
 47435                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 47436   01824C  0139               	movlb	57	; () banked
 47437   01824E  93A2               	bcf	162,1,b	;volatile
 47438                           
 47439                           ; BSR set to: 57
 47440   018250  0011               	retfie		f
 47441   018252                     __end_of_DMA1_DMADCNT_ISR:
 47442                           	callstack 0
 47443                           
 47444 ;; *************** function _DMA1_DMAA_ISR *****************
 47445 ;; Defined at:
 47446 ;;		line 144 in file "mcc_generated_files/dma1.c"
 47447 ;; Parameters:    Size  Location     Type
 47448 ;;		None
 47449 ;; Auto vars:     Size  Location     Type
 47450 ;;		None
 47451 ;; Return value:  Size  Location     Type
 47452 ;;                  1    wreg      void 
 47453 ;; Registers used:
 47454 ;;		None
 47455 ;; Tracked objects:
 47456 ;;		On entry : 0/0
 47457 ;;		On exit  : 3F/39
 47458 ;;		Unchanged: 0/0
 47459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47464 ;;Total ram usage:        0 bytes
 47465 ;; Hardware stack levels used: 1
 47466 ;; This function calls:
 47467 ;;		Nothing
 47468 ;; This function is called by:
 47469 ;;		Interrupt level 2
 47470 ;; This function uses a non-reentrant model
 47471 ;;
 47472                           
 47473                           	psect	text142
 47474   018254                     __ptext142:
 47475                           	callstack 0
 47476   018254                     _DMA1_DMAA_ISR:
 47477                           	callstack 17
 47478                           
 47479                           ; BSR set to: 57
 47480                           ;incstack = 0
 47481   018254  EE15  F3EB         	lfsr	1,___inthi_sp
 47482                           
 47483                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 47484   018258  0139               	movlb	57	; () banked
 47485   01825A  97A2               	bcf	162,3,b	;volatile
 47486                           
 47487                           ; BSR set to: 57
 47488   01825C  0011               	retfie		f
 47489   01825E                     __end_of_DMA1_DMAA_ISR:
 47490                           	callstack 0
 47491                           
 47492 ;; *************** function _DMA1_DMAOR_ISR *****************
 47493 ;; Defined at:
 47494 ;;		line 155 in file "mcc_generated_files/dma1.c"
 47495 ;; Parameters:    Size  Location     Type
 47496 ;;		None
 47497 ;; Auto vars:     Size  Location     Type
 47498 ;;		None
 47499 ;; Return value:  Size  Location     Type
 47500 ;;                  1    wreg      void 
 47501 ;; Registers used:
 47502 ;;		None
 47503 ;; Tracked objects:
 47504 ;;		On entry : 0/0
 47505 ;;		On exit  : 3F/39
 47506 ;;		Unchanged: 0/0
 47507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47512 ;;Total ram usage:        0 bytes
 47513 ;; Hardware stack levels used: 1
 47514 ;; This function calls:
 47515 ;;		Nothing
 47516 ;; This function is called by:
 47517 ;;		Interrupt level 2
 47518 ;; This function uses a non-reentrant model
 47519 ;;
 47520                           
 47521                           	psect	text143
 47522   018260                     __ptext143:
 47523                           	callstack 0
 47524   018260                     _DMA1_DMAOR_ISR:
 47525                           	callstack 17
 47526                           
 47527                           ; BSR set to: 57
 47528                           ;incstack = 0
 47529   018260  EE15  F3EB         	lfsr	1,___inthi_sp
 47530                           
 47531                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 47532   018264  0139               	movlb	57	; () banked
 47533   018266  95A2               	bcf	162,2,b	;volatile
 47534                           
 47535                           ; BSR set to: 57
 47536   018268  0011               	retfie		f
 47537   01826A                     __end_of_DMA1_DMAOR_ISR:
 47538                           	callstack 0
 47539                           
 47540 ;; *************** function _TMR5_ISR *****************
 47541 ;; Defined at:
 47542 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 47543 ;; Parameters:    Size  Location     Type
 47544 ;;		None
 47545 ;; Auto vars:     Size  Location     Type
 47546 ;;		None
 47547 ;; Return value:  Size  Location     Type
 47548 ;;                  1    wreg      void 
 47549 ;; Registers used:
 47550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp+11, tosl
 47551 ;; Tracked objects:
 47552 ;;		On entry : 0/0
 47553 ;;		On exit  : 0/0
 47554 ;;		Unchanged: 0/0
 47555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47558 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47559 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47560 ;;Total ram usage:        5 bytes
 47561 ;; Hardware stack levels used: 1
 47562 ;; Hardware stack levels required when called: 2
 47563 ;; This function calls:
 47564 ;;		_TMR5_CallBack
 47565 ;;		_TMR5_WriteTimer
 47566 ;; This function is called by:
 47567 ;;		Interrupt level 2
 47568 ;; This function uses a non-reentrant model
 47569 ;;
 47570                           
 47571                           	psect	text144
 47572   01724C                     __ptext144:
 47573                           	callstack 0
 47574   01724C                     _TMR5_ISR:
 47575                           	callstack 15
 47576                           
 47577                           ; BSR set to: 57
 47578                           ;incstack = 0
 47579   01724C  006F FFE8  F1E8    	movff	pclath,??_TMR5_ISR+2
 47580   017252  006F FFEC  F1E9    	movff	pclatu,??_TMR5_ISR+3
 47581   017258  C02E  F1EA         	movff	btemp+11,??_TMR5_ISR+4
 47582   01725C  EE15  F3EB         	lfsr	1,___inthi_sp
 47583                           
 47584                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 47585   017260  0139               	movlb	57	; () banked
 47586   017262  9DA8               	bcf	168,6,b	;volatile
 47587                           
 47588                           ; BSR set to: 57
 47589                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 47590   017264  0060  F01F  FFE6   	movff	_timer5ReloadVal,postinc1
 47591   01726A  0060  F023  FFE6   	movff	_timer5ReloadVal+1,postinc1
 47592   017270  EC69  F0BC         	call	_TMR5_WriteTimer	;wreg free
 47593                           
 47594                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 47595   017274  EE23  F19B         	lfsr	2,_V+385	;volatile
 47596   017278  50DF               	movf	indf2,w,c
 47597   01727A  0101               	movlb	1	; () banked
 47598   01727C  6FE6               	movwf	??_TMR5_ISR& (0+255),b
 47599   01727E  6BE7               	clrf	(??_TMR5_ISR+1)& (0+255),b
 47600   017280  0E05               	movlw	5
 47601   017282  27E6               	addwf	??_TMR5_ISR& (0+255),f,b
 47602   017284  0E00               	movlw	0
 47603   017286  23E7               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 47604   017288  4A05               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 47605   01728A  2A06               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 47606   01728C  51E6               	movf	??_TMR5_ISR& (0+255),w,b
 47607   01728E  5C05               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 47608   017290  51E7               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 47609   017292  5806               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 47610   017294  A0D8               	btfss	status,0,c
 47611   017296  D004               	goto	i2l1157
 47612                           
 47613                           ; BSR set to: 1
 47614                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 47615   017298  EC07  F0C0         	call	_TMR5_CallBack	;wreg free
 47616                           
 47617                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 47618   01729C  6A05               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 47619   01729E  6A06               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 47620   0172A0                     i2l1157:
 47621   0172A0  C1EA  F02E         	movff	??_TMR5_ISR+4,btemp+11
 47622   0172A4  0060  F7A7  FFFB   	movff	??_TMR5_ISR+3,pclatu
 47623   0172AA  0060  F7A3  FFFA   	movff	??_TMR5_ISR+2,pclath
 47624   0172B0  0011               	retfie		f
 47625   0172B2                     __end_of_TMR5_ISR:
 47626                           	callstack 0
 47627                           
 47628 ;; *************** function _TMR5_WriteTimer *****************
 47629 ;; Defined at:
 47630 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 47631 ;; Parameters:    Size  Location     Type
 47632 ;;  timerVal        2  [STACK] unsigned short 
 47633 ;; Auto vars:     Size  Location     Type
 47634 ;;		None
 47635 ;; Return value:  Size  Location     Type
 47636 ;;                  1  [STACK] void 
 47637 ;; Registers used:
 47638 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 47639 ;; Tracked objects:
 47640 ;;		On entry : 3F/39
 47641 ;;		On exit  : 0/0
 47642 ;;		Unchanged: 0/0
 47643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47648 ;;Total ram usage:        0 bytes
 47649 ;; Hardware stack levels used: 1
 47650 ;; This function calls:
 47651 ;;		Nothing
 47652 ;; This function is called by:
 47653 ;;		_TMR5_ISR
 47654 ;; This function uses a reentrant model
 47655 ;;
 47656                           
 47657                           	psect	text145
 47658   0178D2                     __ptext145:
 47659                           	callstack 0
 47660   0178D2                     _TMR5_WriteTimer:
 47661                           	callstack 16
 47662                           
 47663                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 47664                           
 47665                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47666                           ;incstack = 0
 47667   0178D2  A49A               	btfss	154,2,c	;volatile
 47668   0178D4  D00F               	goto	l10058
 47669                           
 47670                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 47671   0178D6  909A               	bcf	154,0,c	;volatile
 47672                           
 47673                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 47674                           ;stkvar	_timerVal @ sp[(0)+-2]
 47675   0178D8  0EFF               	movlw	255
 47676   0178DA  24E1               	addwf	fsr1l,w,c
 47677   0178DC  6ED9               	movwf	fsr2l,c
 47678   0178DE  0EFF               	movlw	255
 47679   0178E0  20E2               	addwfc	fsr1h,w,c
 47680   0178E2  6EDA               	movwf	fsr2h,c
 47681   0178E4  50DF               	movf	indf2,w,c
 47682   0178E6  6E99               	movwf	153,c	;volatile
 47683                           
 47684                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 47685                           ;stkvar	_timerVal @ sp[(0)+-2]
 47686   0178E8  0EFE               	movlw	-2
 47687   0178EA  006F FF8F FF98     	movff	plusw1,16280	;volatile
 47688                           
 47689                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 47690   0178F0  809A               	bsf	154,0,c	;volatile
 47691                           
 47692                           ;mcc_generated_files/tmr5.c: 142:  } else {
 47693   0178F2  D00C               	goto	l1140
 47694   0178F4                     l10058:
 47695                           
 47696                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 47697                           ;stkvar	_timerVal @ sp[(0)+-2]
 47698   0178F4  0EFF               	movlw	255
 47699   0178F6  24E1               	addwf	fsr1l,w,c
 47700   0178F8  6ED9               	movwf	fsr2l,c
 47701   0178FA  0EFF               	movlw	255
 47702   0178FC  20E2               	addwfc	fsr1h,w,c
 47703   0178FE  6EDA               	movwf	fsr2h,c
 47704   017900  50DF               	movf	indf2,w,c
 47705   017902  6E99               	movwf	153,c	;volatile
 47706                           
 47707                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 47708                           ;stkvar	_timerVal @ sp[(0)+-2]
 47709   017904  0EFE               	movlw	-2
 47710   017906  006F FF8F FF98     	movff	plusw1,16280	;volatile
 47711   01790C                     l1140:
 47712                           
 47713                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 47714   01790C  52E5               	movf	postdec1,f,c
 47715   01790E  52E5               	movf	postdec1,f,c
 47716   017910  0012               	return		;funcret
 47717   017912                     __end_of_TMR5_WriteTimer:
 47718                           	callstack 0
 47719                           
 47720 ;; *************** function _TMR5_CallBack *****************
 47721 ;; Defined at:
 47722 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 47723 ;; Parameters:    Size  Location     Type
 47724 ;;		None
 47725 ;; Auto vars:     Size  Location     Type
 47726 ;;		None
 47727 ;; Return value:  Size  Location     Type
 47728 ;;                  1  [STACK] void 
 47729 ;; Registers used:
 47730 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, btemp+11, tosl
 47731 ;; Tracked objects:
 47732 ;;		On entry : 3F/1
 47733 ;;		On exit  : 0/0
 47734 ;;		Unchanged: 0/0
 47735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47740 ;;Total ram usage:        0 bytes
 47741 ;; Hardware stack levels used: 1
 47742 ;; Hardware stack levels required when called: 1
 47743 ;; This function calls:
 47744 ;;		NULL
 47745 ;;		_TMR5_DefaultInterruptHandler
 47746 ;; This function is called by:
 47747 ;;		_TMR5_ISR
 47748 ;; This function uses a reentrant model
 47749 ;;
 47750                           
 47751                           	psect	text146
 47752   01800E                     __ptext146:
 47753                           	callstack 0
 47754   01800E                     _TMR5_CallBack:
 47755                           	callstack 15
 47756                           
 47757                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 47758                           
 47759                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47760                           ;incstack = 0
 47761   01800E  0100               	movlb	0	; () banked
 47762   018010  519E               	movf	_TMR5_InterruptHandler& (0+255),w,b
 47763   018012  119F               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 47764   018014  11A0               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 47765   018016  B4D8               	btfsc	status,2,c
 47766   018018  0012               	return	
 47767                           
 47768                           ; BSR set to: 0
 47769                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 47770   01801A  D801               	call	u651_48
 47771   01801C  0012               	return	
 47772   01801E                     u651_48:
 47773   01801E  0005               	push	
 47774   018020  6EFA               	movwf	pclath,c
 47775   018022  519E               	movf	_TMR5_InterruptHandler& (0+255),w,b
 47776   018024  6EFD               	movwf	tosl,c
 47777   018026  519F               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 47778   018028  6EFE               	movwf	tosh,c
 47779   01802A  51A0               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 47780   01802C  6EFF               	movwf	tosu,c
 47781   01802E  50FA               	movf	pclath,w,c
 47782   018030  0012               	return		;indir
 47783   018032                     __end_of_TMR5_CallBack:
 47784                           	callstack 0
 47785                           
 47786 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 47787 ;; Defined at:
 47788 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 47789 ;; Parameters:    Size  Location     Type
 47790 ;;		None
 47791 ;; Auto vars:     Size  Location     Type
 47792 ;;		None
 47793 ;; Return value:  Size  Location     Type
 47794 ;;                  1  [STACK] void 
 47795 ;; Registers used:
 47796 ;;		wreg, status,2, status,0, btemp+11
 47797 ;; Tracked objects:
 47798 ;;		On entry : 3F/0
 47799 ;;		On exit  : 0/0
 47800 ;;		Unchanged: 0/0
 47801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47806 ;;Total ram usage:        0 bytes
 47807 ;; Hardware stack levels used: 1
 47808 ;; This function calls:
 47809 ;;		Nothing
 47810 ;; This function is called by:
 47811 ;;		_TMR5_Initialize
 47812 ;;		_TMR5_CallBack
 47813 ;; This function uses a reentrant model
 47814 ;;
 47815                           
 47816                           	psect	text147
 47817   018174                     __ptext147:
 47818                           	callstack 0
 47819   018174                     _TMR5_DefaultInterruptHandler:
 47820                           	callstack 15
 47821                           
 47822                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 47823                           
 47824                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47825                           ;incstack = 0
 47826   018174  A0BE               	btfss	190,0,c	;volatile
 47827   018176  D002               	goto	u597_40
 47828   018178  0E01               	movlw	1
 47829   01817A  D001               	goto	u597_46
 47830   01817C                     u597_40:
 47831   01817C  0E00               	movlw	0
 47832   01817E                     u597_46:
 47833   01817E  0AFF               	xorlw	255
 47834   018180  6E2E               	movwf	(btemp+11)^0,c
 47835   018182  50BE               	movf	190,w,c	;volatile
 47836   018184  182E               	xorwf	(btemp+11)^0,w,c
 47837   018186  0BFE               	andlw	-2
 47838   018188  182E               	xorwf	(btemp+11)^0,w,c
 47839   01818A  6EBE               	movwf	190,c	;volatile
 47840                           
 47841                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 47842   01818C  0012               	return		;funcret
 47843   01818E                     __end_of_TMR5_DefaultInterruptHandler:
 47844                           	callstack 0
 47845                           
 47846                           ;
 47847                           ; H/W Interrupt Vector Table @ 0x8
 47848                           ;
 47849                           
 47850                           	psect	ivt0x8
 47851   000008                     __pivt0x8:
 47852                           	callstack 0
 47853   000008                     ivt0x8_base:
 47854                           	callstack 0
 47855                           
 47856                           ; Vector 0 : SWINT
 47857   000008  60A8               	dw	_Default_ISR shr (0+2)
 47858                           
 47859                           ; Vector 1 : HLVD
 47860   00000A  60A8               	dw	_Default_ISR shr (0+2)
 47861                           
 47862                           ; Vector 2 : OSF
 47863   00000C  60A8               	dw	_Default_ISR shr (0+2)
 47864                           
 47865                           ; Vector 3 : CSW
 47866   00000E  60A8               	dw	_Default_ISR shr (0+2)
 47867                           
 47868                           ; Vector 4 : NVM
 47869   000010  60A8               	dw	_Default_ISR shr (0+2)
 47870                           
 47871                           ; Vector 5 : SCAN
 47872   000012  60A8               	dw	_Default_ISR shr (0+2)
 47873                           
 47874                           ; Vector 6 : CRC
 47875   000014  60A8               	dw	_Default_ISR shr (0+2)
 47876                           
 47877                           ; Vector 7 : IOC
 47878   000016  60A8               	dw	_Default_ISR shr (0+2)
 47879                           
 47880                           ; Vector 8 : INT0
 47881   000018  5FB0               	dw	_INT0_ISR shr (0+2)
 47882                           
 47883                           ; Vector 9 : ZCD
 47884   00001A  60A8               	dw	_Default_ISR shr (0+2)
 47885                           
 47886                           ; Vector 10 : AD
 47887   00001C  5D9C               	dw	_ADCC_ISR shr (0+2)
 47888                           
 47889                           ; Vector 11 : ADT
 47890   00001E  60A8               	dw	_Default_ISR shr (0+2)
 47891                           
 47892                           ; Vector 12 : CMP1
 47893   000020  60A8               	dw	_Default_ISR shr (0+2)
 47894                           
 47895                           ; Vector 13 : SMT1
 47896   000022  60A8               	dw	_Default_ISR shr (0+2)
 47897                           
 47898                           ; Vector 14 : SMT1PRA
 47899   000024  60A8               	dw	_Default_ISR shr (0+2)
 47900                           
 47901                           ; Vector 15 : SMT1PRW
 47902   000026  60A8               	dw	_Default_ISR shr (0+2)
 47903                           
 47904                           ; Vector 16 : DMA1SCNT
 47905   000028  6084               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 47906                           
 47907                           ; Vector 17 : DMA1DCNT
 47908   00002A  6092               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 47909                           
 47910                           ; Vector 18 : DMA1OR
 47911   00002C  6098               	dw	_DMA1_DMAOR_ISR shr (0+2)
 47912                           
 47913                           ; Vector 19 : DMA1A
 47914   00002E  6095               	dw	_DMA1_DMAA_ISR shr (0+2)
 47915                           
 47916                           ; Vector 20 : SPI1RX
 47917   000030  60A8               	dw	_Default_ISR shr (0+2)
 47918                           
 47919                           ; Vector 21 : SPI1TX
 47920   000032  60A8               	dw	_Default_ISR shr (0+2)
 47921                           
 47922                           ; Vector 22 : SPI1
 47923   000034  60A8               	dw	_Default_ISR shr (0+2)
 47924                           
 47925                           ; Vector 23 : I2C1RX
 47926   000036  60A8               	dw	_Default_ISR shr (0+2)
 47927                           
 47928                           ; Vector 24 : I2C1TX
 47929   000038  60A8               	dw	_Default_ISR shr (0+2)
 47930                           
 47931                           ; Vector 25 : I2C1
 47932   00003A  60A8               	dw	_Default_ISR shr (0+2)
 47933                           
 47934                           ; Vector 26 : I2C1E
 47935   00003C  60A8               	dw	_Default_ISR shr (0+2)
 47936                           
 47937                           ; Vector 27 : U1RX
 47938   00003E  5DF2               	dw	_UART1_rx_vect_isr shr (0+2)
 47939                           
 47940                           ; Vector 28 : U1TX
 47941   000040  5DE1               	dw	_UART1_tx_vect_isr shr (0+2)
 47942                           
 47943                           ; Vector 29 : U1E
 47944   000042  60A8               	dw	_Default_ISR shr (0+2)
 47945                           
 47946                           ; Vector 30 : U1
 47947   000044  60A8               	dw	_Default_ISR shr (0+2)
 47948                           
 47949                           ; Vector 31 : TMR0
 47950   000046  60A8               	dw	_Default_ISR shr (0+2)
 47951                           
 47952                           ; Vector 32 : TMR1
 47953   000048  60A8               	dw	_Default_ISR shr (0+2)
 47954                           
 47955                           ; Vector 33 : TMR1G
 47956   00004A  60A8               	dw	_Default_ISR shr (0+2)
 47957                           
 47958                           ; Vector 34 : TMR2
 47959   00004C  60A8               	dw	_Default_ISR shr (0+2)
 47960                           
 47961                           ; Vector 35 : CCP1
 47962   00004E  60A8               	dw	_Default_ISR shr (0+2)
 47963                           
 47964                           ; Vector 36 : Undefined
 47965   000050  002B               	dw	ivt0x8_undefint shr (0+2)
 47966                           
 47967                           ; Vector 37 : NCO1
 47968   000052  60A8               	dw	_Default_ISR shr (0+2)
 47969                           
 47970                           ; Vector 38 : CWG1
 47971   000054  60A8               	dw	_Default_ISR shr (0+2)
 47972                           
 47973                           ; Vector 39 : CLC1
 47974   000056  60A8               	dw	_Default_ISR shr (0+2)
 47975                           
 47976                           ; Vector 40 : INT1
 47977   000058  5FBA               	dw	_INT1_ISR shr (0+2)
 47978                           
 47979                           ; Vector 41 : CMP2
 47980   00005A  60A8               	dw	_Default_ISR shr (0+2)
 47981                           
 47982                           ; Vector 42 : DMA2SCNT
 47983   00005C  60A8               	dw	_Default_ISR shr (0+2)
 47984                           
 47985                           ; Vector 43 : DMA2DCNT
 47986   00005E  60A8               	dw	_Default_ISR shr (0+2)
 47987                           
 47988                           ; Vector 44 : DMA2OR
 47989   000060  60A8               	dw	_Default_ISR shr (0+2)
 47990                           
 47991                           ; Vector 45 : DMA2A
 47992   000062  60A8               	dw	_Default_ISR shr (0+2)
 47993                           
 47994                           ; Vector 46 : I2C2RX
 47995   000064  60A8               	dw	_Default_ISR shr (0+2)
 47996                           
 47997                           ; Vector 47 : I2C2TX
 47998   000066  60A8               	dw	_Default_ISR shr (0+2)
 47999                           
 48000                           ; Vector 48 : I2C2
 48001   000068  60A8               	dw	_Default_ISR shr (0+2)
 48002                           
 48003                           ; Vector 49 : I2C2E
 48004   00006A  60A8               	dw	_Default_ISR shr (0+2)
 48005                           
 48006                           ; Vector 50 : U2RX
 48007   00006C  5E14               	dw	_UART2_rx_vect_isr shr (0+2)
 48008                           
 48009                           ; Vector 51 : U2TX
 48010   00006E  5E03               	dw	_UART2_tx_vect_isr shr (0+2)
 48011                           
 48012                           ; Vector 52 : U2E
 48013   000070  60A8               	dw	_Default_ISR shr (0+2)
 48014                           
 48015                           ; Vector 53 : U2
 48016   000072  60A8               	dw	_Default_ISR shr (0+2)
 48017                           
 48018                           ; Vector 54 : TMR3
 48019   000074  60A8               	dw	_Default_ISR shr (0+2)
 48020                           
 48021                           ; Vector 55 : TMR3G
 48022   000076  60A8               	dw	_Default_ISR shr (0+2)
 48023                           
 48024                           ; Vector 56 : TMR4
 48025   000078  60A8               	dw	_Default_ISR shr (0+2)
 48026                           
 48027                           ; Vector 57 : CCP2
 48028   00007A  60A8               	dw	_Default_ISR shr (0+2)
 48029                           
 48030                           ; Vector 58 : Undefined
 48031   00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 48032                           
 48033                           ; Vector 59 : CWG2
 48034   00007E  60A8               	dw	_Default_ISR shr (0+2)
 48035                           
 48036                           ; Vector 60 : CLC2
 48037   000080  60A8               	dw	_Default_ISR shr (0+2)
 48038                           
 48039                           ; Vector 61 : INT2
 48040   000082  5FC4               	dw	_INT2_ISR shr (0+2)
 48041                           
 48042                           ; Vector 62 : Undefined
 48043   000084  002B               	dw	ivt0x8_undefint shr (0+2)
 48044                           
 48045                           ; Vector 63 : Undefined
 48046   000086  002B               	dw	ivt0x8_undefint shr (0+2)
 48047                           
 48048                           ; Vector 64 : Undefined
 48049   000088  002B               	dw	ivt0x8_undefint shr (0+2)
 48050                           
 48051                           ; Vector 65 : Undefined
 48052   00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 48053                           
 48054                           ; Vector 66 : Undefined
 48055   00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 48056                           
 48057                           ; Vector 67 : Undefined
 48058   00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 48059                           
 48060                           ; Vector 68 : Undefined
 48061   000090  002B               	dw	ivt0x8_undefint shr (0+2)
 48062                           
 48063                           ; Vector 69 : Undefined
 48064   000092  002B               	dw	ivt0x8_undefint shr (0+2)
 48065                           
 48066                           ; Vector 70 : TMR5
 48067   000094  5C93               	dw	_TMR5_ISR shr (0+2)
 48068                           
 48069                           ; Vector 71 : TMR5G
 48070   000096  60A8               	dw	_Default_ISR shr (0+2)
 48071                           
 48072                           ; Vector 72 : TMR6
 48073   000098  5EE4               	dw	_TMR6_ISR shr (0+2)
 48074                           
 48075                           ; Vector 73 : CCP3
 48076   00009A  60A8               	dw	_Default_ISR shr (0+2)
 48077                           
 48078                           ; Vector 74 : CWG3
 48079   00009C  60A8               	dw	_Default_ISR shr (0+2)
 48080                           
 48081                           ; Vector 75 : CLC3
 48082   00009E  60A8               	dw	_Default_ISR shr (0+2)
 48083                           
 48084                           ; Vector 76 : Undefined
 48085   0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 48086                           
 48087                           ; Vector 77 : Undefined
 48088   0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 48089                           
 48090                           ; Vector 78 : Undefined
 48091   0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 48092                           
 48093                           ; Vector 79 : Undefined
 48094   0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 48095                           
 48096                           ; Vector 80 : CCP4
 48097   0000A8  60A8               	dw	_Default_ISR shr (0+2)
 48098                           
 48099                           ; Vector 81 : CLC4
 48100   0000AA  60A8               	dw	_Default_ISR shr (0+2)
 48101   0000AC                     ivt0x8_undefint:
 48102                           	callstack 0
 48103   0000AC  00FF               	reset	
 48104                           
 48105                           	psect	rparam
 48106   000001                     ___rparam_used  equ	1
 48107   000000                     ___param_bank   equ	0
 48108   000000                     __Lparam        equ	__Lrparam
 48109   000000                     __Hparam        equ	__Hrparam
 48110                           
 48111                           	psect	temp
 48112   000023                     btemp:
 48113                           	callstack 0
 48114   000023                     	ds	32
 48115   000023                     wtemp0          set	btemp
 48116   000025                     wtemp1          set	btemp+2
 48117   000027                     wtemp2          set	btemp+4
 48118   000029                     wtemp3          set	btemp+6
 48119   00002B                     wtemp4          set	btemp+8
 48120   00002D                     wtemp5          set	btemp+10
 48121   000024                     wtemp8          set	btemp+1
 48122   000023                     ttemp0          set	btemp
 48123   000026                     ttemp1          set	btemp+3
 48124   000029                     ttemp2          set	btemp+6
 48125   00002C                     ttemp3          set	btemp+9
 48126   000024                     ttemp5          set	btemp+1
 48127   000027                     ttemp6          set	btemp+4
 48128   00002B                     ttemp7          set	btemp+8
 48129   000023                     ltemp0          set	btemp
 48130   000027                     ltemp1          set	btemp+4
 48131   00002B                     ltemp2          set	btemp+8
 48132   000023                     lltemp0         set	btemp
 48133   00002B                     lltemp1         set	btemp+8
 48134   000033                     lltemp2         set	btemp+16
 48135   00003B                     lltemp3         set	btemp+24
 48136                           
 48137                           	psect	idloc
 48138                           
 48139                           ;Config register IDLOC0 @ 0x200000
 48140                           ;	unspecified, using default values
 48141   200000                     	org	2097152
 48142   200000  FFFF               	dw	65535
 48143                           
 48144                           ;Config register IDLOC1 @ 0x200002
 48145                           ;	unspecified, using default values
 48146   200002                     	org	2097154
 48147   200002  FFFF               	dw	65535
 48148                           
 48149                           ;Config register IDLOC2 @ 0x200004
 48150                           ;	unspecified, using default values
 48151   200004                     	org	2097156
 48152   200004  FFFF               	dw	65535
 48153                           
 48154                           ;Config register IDLOC3 @ 0x200006
 48155                           ;	unspecified, using default values
 48156   200006                     	org	2097158
 48157   200006  FFFF               	dw	65535
 48158                           
 48159                           ;Config register IDLOC4 @ 0x200008
 48160                           ;	unspecified, using default values
 48161   200008                     	org	2097160
 48162   200008  FFFF               	dw	65535
 48163                           
 48164                           ;Config register IDLOC5 @ 0x20000A
 48165                           ;	unspecified, using default values
 48166   20000A                     	org	2097162
 48167   20000A  FFFF               	dw	65535
 48168                           
 48169                           ;Config register IDLOC6 @ 0x20000C
 48170                           ;	unspecified, using default values
 48171   20000C                     	org	2097164
 48172   20000C  FFFF               	dw	65535
 48173                           
 48174                           ;Config register IDLOC7 @ 0x20000E
 48175                           ;	unspecified, using default values
 48176   20000E                     	org	2097166
 48177   20000E  FFFF               	dw	65535
 48178                           
 48179                           	psect	config
 48180                           
 48181                           ;Config register CONFIG1L @ 0x300000
 48182                           ;	External Oscillator Selection
 48183                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz; PFM set to high power
 48184                           ;	Reset Oscillator Selection
 48185                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 48186   300000                     	org	3145728
 48187   300000  AF                 	db	175
 48188                           
 48189                           ;Config register CONFIG1H @ 0x300001
 48190                           ;	Clock out Enable bit
 48191                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 48192                           ;	PRLOCKED One-Way Set Enable bit
 48193                           ;	PR1WAY = OFF, PRLOCK bit can be set and cleared repeatedly
 48194                           ;	Clock Switch Enable bit
 48195                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 48196                           ;	Fail-Safe Clock Monitor Enable bit
 48197                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 48198   300001                     	org	3145729
 48199   300001  FD                 	db	253
 48200                           
 48201                           ;Config register CONFIG2L @ 0x300002
 48202                           ;	MCLR Enable bit
 48203                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 48204                           ;	Power-up timer selection bits
 48205                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 48206                           ;	Multi-vector enable bit
 48207                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 48208                           ;	IVTLOCK bit One-way set enable bit
 48209                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 48210                           ;	Low Power BOR Enable bit
 48211                           ;	LPBOREN = OFF, ULPBOR disabled
 48212                           ;	Brown-out Reset Enable bits
 48213                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 48214   300002                     	org	3145730
 48215   300002  FF                 	db	255
 48216                           
 48217                           ;Config register CONFIG2H @ 0x300003
 48218                           ;	Brown-out Reset Voltage Selection bits
 48219                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 48220                           ;	ZCD Disable bit
 48221                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 48222                           ;	PPSLOCK bit One-Way Set Enable bit
 48223                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 48224                           ;	Stack Full/Underflow Reset Enable bit
 48225                           ;	STVREN = ON, Stack full/underflow will cause Reset
 48226                           ;	Debugger Enable bit
 48227                           ;	DEBUG = OFF, Background debugger disabled
 48228                           ;	Extended Instruction Set Enable bit
 48229                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 48230   300003                     	org	3145731
 48231   300003  FF                 	db	255
 48232                           
 48233                           ;Config register CONFIG3L @ 0x300004
 48234                           ;	WDT Period selection bits
 48235                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 48236                           ;	WDT operating mode
 48237                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 48238   300004                     	org	3145732
 48239   300004  9F                 	db	159
 48240                           
 48241                           ;Config register CONFIG3H @ 0x300005
 48242                           ;	WDT Window Select bits
 48243                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 48244                           ;	WDT input clock selector
 48245                           ;	WDTCCS = SC, Software Control
 48246   300005                     	org	3145733
 48247   300005  FF                 	db	255
 48248                           
 48249                           ;Config register CONFIG4L @ 0x300006
 48250                           ;	Boot Block Size selection bits
 48251                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 48252                           ;	Boot Block enable bit
 48253                           ;	BBEN = OFF, Boot block disabled
 48254                           ;	Storage Area Flash enable bit
 48255                           ;	SAFEN = OFF, SAF disabled
 48256                           ;	Application Block write protection bit
 48257                           ;	WRTAPP = OFF, Application Block not write protected
 48258   300006                     	org	3145734
 48259   300006  FF                 	db	255
 48260                           
 48261                           ;Config register CONFIG4H @ 0x300007
 48262                           ;	Boot Block Write Protection bit
 48263                           ;	WRTB = OFF, Boot Block not write-protected
 48264                           ;	Configuration Register Write Protection bit
 48265                           ;	WRTC = OFF, Configuration registers not write-protected
 48266                           ;	Data EEPROM Write Protection bit
 48267                           ;	WRTD = OFF, Data EEPROM not write-protected
 48268                           ;	SAF Write protection bit
 48269                           ;	WRTSAF = OFF, SAF not Write Protected
 48270                           ;	Low Voltage Programming Enable bit
 48271                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 48272   300007                     	org	3145735
 48273   300007  FF                 	db	255
 48274                           
 48275                           ;Config register CONFIG5L @ 0x300008
 48276                           ;	PFM and Data EEPROM Code Protection bit
 48277                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 48278   300008                     	org	3145736
 48279   300008  FF                 	db	255
 48280                           
 48281                           ;Config register CONFIG5H @ 0x300009
 48282                           ;	unspecified, using default values
 48283   300009                     	org	3145737
 48284   300009  FF                 	db	255
 48285                           tosu	equ	0x3FFF
 48286                           tosh	equ	0x3FFE
 48287                           tosl	equ	0x3FFD
 48288                           stkptr	equ	0x3FFC
 48289                           pclatu	equ	0x3FFB
 48290                           pclath	equ	0x3FFA
 48291                           pcl	equ	0x3FF9
 48292                           tblptru	equ	0x3FF8
 48293                           tblptrh	equ	0x3FF7
 48294                           tblptrl	equ	0x3FF6
 48295                           tablat	equ	0x3FF5
 48296                           prodh	equ	0x3FF4
 48297                           prodl	equ	0x3FF3
 48298                           indf0	equ	0x3FEF
 48299                           postinc0	equ	0x3FEE
 48300                           postdec0	equ	0x3FED
 48301                           preinc0	equ	0x3FEC
 48302                           plusw0	equ	0x3FEB
 48303                           fsr0h	equ	0x3FEA
 48304                           fsr0l	equ	0x3FE9
 48305                           wreg	equ	0x3FE8
 48306                           indf1	equ	0x3FE7
 48307                           postinc1	equ	0x3FE6
 48308                           postdec1	equ	0x3FE5
 48309                           preinc1	equ	0x3FE4
 48310                           plusw1	equ	0x3FE3
 48311                           fsr1h	equ	0x3FE2
 48312                           fsr1l	equ	0x3FE1
 48313                           bsr	equ	0x3FE0
 48314                           indf2	equ	0x3FDF
 48315                           postinc2	equ	0x3FDE
 48316                           postdec2	equ	0x3FDD
 48317                           preinc2	equ	0x3FDC
 48318                           plusw2	equ	0x3FDB
 48319                           fsr2h	equ	0x3FDA
 48320                           fsr2l	equ	0x3FD9
 48321                           status	equ	0x3FD8

Data Sizes:
    Strings     839
    Constant    391
    Data        1520
    BSS         2247
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     12      51
    BANK0           160      7     156
    BANK1           256      5     235
    BANK2           256      0     254
    BANK3           256      0      67
    BANK4           256      0     255
    BANK5           256      0     255
    BANK6           256      0     256
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    a	PTR const unsigned char  size(2) Largest target is 514
		 -> D$lcd(BIGRAM[512]), D@mconfig$F5154(BIGRAM[514]), dbuf(BANK1[32]), V(BIGRAM[387]), 
		 -> V$terminal(BIGRAM[160]), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), NULL(), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    ap	PTR PTR void [1] size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    block	PTR struct response_type size(1) Largest target is 9
		 -> secs_II_message@block(COMRAM[7]), 

    buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_37(CODE[12]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_38(CODE[9]), 

    byte_block	PTR unsigned char  size(2) Largest target is 312
		 -> D$message(BIGRAM[156]), H10(BANK1[91]), H12(BANK2[30]), H13(BANK1[64]), 
		 -> H14(BANK0[17]), H153(BIGRAM[312]), H17(BANK1[20]), H26(BANK2[29]), 
		 -> H33(BANK0[36]), S$message(BIGRAM[36]), 

    byte_block	PTR unsigned char  size(2) Largest target is 312
		 -> D$message(BIGRAM[156]), H10(BANK1[91]), H12(BANK2[30]), H13(BANK1[64]), 
		 -> H14(BANK0[17]), H153(BIGRAM[312]), H17(BANK1[20]), H26(BANK2[29]), 
		 -> H33(BANK0[36]), S$message(BIGRAM[36]), 

    cfmt	PTR unsigned char  size(2) Largest target is 89
		 -> msg0(CODE[89]), msg1(CODE[88]), msg2(CODE[86]), msg99(CODE[56]), 
		 -> STR_1(CODE[17]), STR_10(CODE[21]), STR_11(CODE[21]), STR_12(CODE[21]), 
		 -> STR_13(CODE[24]), STR_14(CODE[24]), STR_15(CODE[18]), STR_16(CODE[21]), 
		 -> STR_17(CODE[21]), STR_18(CODE[20]), STR_19(CODE[21]), STR_2(CODE[15]), 
		 -> STR_20(CODE[26]), STR_21(CODE[19]), STR_22(CODE[4]), STR_23(CODE[21]), 
		 -> STR_24(CODE[26]), STR_25(CODE[29]), STR_26(CODE[3]), STR_27(CODE[3]), 
		 -> STR_28(CODE[3]), STR_33(CODE[20]), STR_34(CODE[26]), STR_35(CODE[26]), 
		 -> STR_36(CODE[21]), STR_39(CODE[19]), STR_4(CODE[15]), STR_40(CODE[19]), 
		 -> STR_41(CODE[10]), STR_42(CODE[10]), STR_43(CODE[15]), STR_44(CODE[15]), 
		 -> STR_45(CODE[15]), STR_46(CODE[24]), STR_47(CODE[22]), STR_48(CODE[20]), 
		 -> STR_49(CODE[18]), STR_5(CODE[17]), STR_50(CODE[20]), STR_51(CODE[18]), 
		 -> STR_52(CODE[20]), STR_53(CODE[18]), STR_54(CODE[20]), STR_55(CODE[19]), 
		 -> STR_56(CODE[19]), STR_57(CODE[24]), STR_58(CODE[21]), STR_59(CODE[22]), 
		 -> STR_6(CODE[15]), STR_60(CODE[21]), STR_61(CODE[26]), STR_62(CODE[25]), 
		 -> STR_63(CODE[19]), STR_64(CODE[19]), STR_65(CODE[19]), STR_66(CODE[19]), 
		 -> STR_67(CODE[3]), STR_68(CODE[3]), STR_8(CODE[17]), STR_9(CODE[16]), 

    cp	PTR unsigned char  size(2) Largest target is 89
		 -> msg0(CODE[89]), msg1(CODE[88]), msg2(CODE[86]), msg99(CODE[56]), 
		 -> STR_1(CODE[17]), STR_10(CODE[21]), STR_11(CODE[21]), STR_12(CODE[21]), 
		 -> STR_13(CODE[24]), STR_14(CODE[24]), STR_15(CODE[18]), STR_16(CODE[21]), 
		 -> STR_17(CODE[21]), STR_18(CODE[20]), STR_19(CODE[21]), STR_2(CODE[15]), 
		 -> STR_20(CODE[26]), STR_21(CODE[19]), STR_22(CODE[4]), STR_23(CODE[21]), 
		 -> STR_24(CODE[26]), STR_25(CODE[29]), STR_26(CODE[3]), STR_27(CODE[3]), 
		 -> STR_28(CODE[3]), STR_33(CODE[20]), STR_34(CODE[26]), STR_35(CODE[26]), 
		 -> STR_36(CODE[21]), STR_39(CODE[19]), STR_4(CODE[15]), STR_40(CODE[19]), 
		 -> STR_41(CODE[10]), STR_42(CODE[10]), STR_43(CODE[15]), STR_44(CODE[15]), 
		 -> STR_45(CODE[15]), STR_46(CODE[24]), STR_47(CODE[22]), STR_48(CODE[20]), 
		 -> STR_49(CODE[18]), STR_5(CODE[17]), STR_50(CODE[20]), STR_51(CODE[18]), 
		 -> STR_52(CODE[20]), STR_53(CODE[18]), STR_54(CODE[20]), STR_55(CODE[19]), 
		 -> STR_56(CODE[19]), STR_57(CODE[24]), STR_58(CODE[21]), STR_59(CODE[22]), 
		 -> STR_6(CODE[15]), STR_60(CODE[21]), STR_61(CODE[26]), STR_62(CODE[25]), 
		 -> STR_63(CODE[19]), STR_64(CODE[19]), STR_65(CODE[19]), STR_66(CODE[19]), 
		 -> STR_67(CODE[3]), STR_68(CODE[3]), STR_8(CODE[17]), STR_9(CODE[16]), 

    cp	PTR unsigned char  size(2) Largest target is 514
		 -> D$lcd(BIGRAM[512]), D@mconfig$F5154(BIGRAM[514]), ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 
		 -> STR_29(CODE[6]), STR_3(CODE[6]), STR_30(CODE[6]), STR_31(CODE[6]), 
		 -> STR_32(CODE[6]), STR_37(CODE[12]), STR_38(CODE[9]), STR_69(CODE[7]), 
		 -> STR_7(CODE[6]), T(BANK6[256]), V(BIGRAM[387]), 

    D$block$header	PTR unsigned char  size(2) Largest target is 156
		 -> D$message(BIGRAM[156]), H10(BANK1[91]), H12(BANK2[30]), H13(BANK1[64]), 
		 -> H14(BANK0[17]), H17(BANK1[20]), H26(BANK2[29]), S$message(BIGRAM[36]), 

    D$block$reply	PTR unsigned char  size(2) Largest target is 312
		 -> H10(BANK1[91]), H12(BANK2[30]), H153(BIGRAM[312]), H33(BANK0[36]), 

    D$message$data$header	PTR unsigned char  size(2) Largest target is 336
		 -> D(BIGRAM[332]), D$message(BIGRAM[156]), D$message$checksum(BIGRAM[2]), H10(BANK1[91]), 
		 -> H12(BANK2[30]), H13(BANK1[64]), H14(BANK0[17]), H17(BANK1[20]), 
		 -> H26(BANK2[29]), S$message(BIGRAM[36]), 

    D$message$data$reply	PTR unsigned char  size(2) Largest target is 312
		 -> H10(BANK1[91]), H12(BANK2[30]), H153(BIGRAM[312]), H33(BANK0[36]), 

    data	PTR const unsigned char  size(2) Largest target is 387
		 -> V(BIGRAM[387]), V$terminal(BIGRAM[160]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), ring_buf2(BANK3[67]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 514
		 -> D$lcd(BIGRAM[512]), D@mconfig$F5154(BIGRAM[514]), V(BIGRAM[387]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    F17672$header	PTR unsigned char  size(2) Largest target is 156
		 -> D$message(BIGRAM[156]), H10(BANK1[91]), H12(BANK2[30]), H13(BANK1[64]), 
		 -> H14(BANK0[17]), H17(BANK1[20]), H26(BANK2[29]), S$message(BIGRAM[36]), 

    F17672$reply	PTR unsigned char  size(2) Largest target is 312
		 -> H10(BANK1[91]), H12(BANK2[30]), H153(BIGRAM[312]), H33(BANK0[36]), 

    F17702$header	PTR unsigned char  size(2) Largest target is 156
		 -> D$message(BIGRAM[156]), H10(BANK1[91]), H12(BANK2[30]), H13(BANK1[64]), 
		 -> H14(BANK0[17]), H17(BANK1[20]), H26(BANK2[29]), S$message(BIGRAM[36]), 

    F17702$reply	PTR unsigned char  size(2) Largest target is 312
		 -> H10(BANK1[91]), H12(BANK2[30]), H153(BIGRAM[312]), H33(BANK0[36]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_26(CODE[3]), STR_27(CODE[3]), STR_28(CODE[3]), 

    fmt	PTR const unsigned char  size(2) Largest target is 89
		 -> msg0(CODE[89]), msg1(CODE[88]), msg2(CODE[86]), msg99(CODE[56]), 
		 -> STR_1(CODE[17]), STR_10(CODE[21]), STR_11(CODE[21]), STR_12(CODE[21]), 
		 -> STR_13(CODE[24]), STR_14(CODE[24]), STR_15(CODE[18]), STR_16(CODE[21]), 
		 -> STR_17(CODE[21]), STR_18(CODE[20]), STR_19(CODE[21]), STR_2(CODE[15]), 
		 -> STR_20(CODE[26]), STR_21(CODE[19]), STR_22(CODE[4]), STR_23(CODE[21]), 
		 -> STR_24(CODE[26]), STR_25(CODE[29]), STR_33(CODE[20]), STR_34(CODE[26]), 
		 -> STR_35(CODE[26]), STR_36(CODE[21]), STR_39(CODE[19]), STR_4(CODE[15]), 
		 -> STR_40(CODE[19]), STR_41(CODE[10]), STR_42(CODE[10]), STR_43(CODE[15]), 
		 -> STR_44(CODE[15]), STR_45(CODE[15]), STR_46(CODE[24]), STR_47(CODE[22]), 
		 -> STR_48(CODE[20]), STR_49(CODE[18]), STR_5(CODE[17]), STR_50(CODE[20]), 
		 -> STR_51(CODE[18]), STR_52(CODE[20]), STR_53(CODE[18]), STR_54(CODE[20]), 
		 -> STR_55(CODE[19]), STR_56(CODE[19]), STR_57(CODE[24]), STR_58(CODE[21]), 
		 -> STR_59(CODE[22]), STR_6(CODE[15]), STR_60(CODE[21]), STR_61(CODE[26]), 
		 -> STR_62(CODE[25]), STR_63(CODE[19]), STR_64(CODE[19]), STR_65(CODE[19]), 
		 -> STR_66(CODE[19]), STR_67(CODE[3]), STR_68(CODE[3]), STR_8(CODE[17]), 
		 -> STR_9(CODE[16]), 

    fmt	PTR const unsigned char  size(2) Largest target is 89
		 -> msg0(CODE[89]), msg1(CODE[88]), msg2(CODE[86]), msg99(CODE[56]), 
		 -> STR_1(CODE[17]), STR_10(CODE[21]), STR_11(CODE[21]), STR_12(CODE[21]), 
		 -> STR_13(CODE[24]), STR_14(CODE[24]), STR_15(CODE[18]), STR_16(CODE[21]), 
		 -> STR_17(CODE[21]), STR_18(CODE[20]), STR_19(CODE[21]), STR_2(CODE[15]), 
		 -> STR_20(CODE[26]), STR_21(CODE[19]), STR_22(CODE[4]), STR_23(CODE[21]), 
		 -> STR_24(CODE[26]), STR_25(CODE[29]), STR_26(CODE[3]), STR_27(CODE[3]), 
		 -> STR_28(CODE[3]), STR_33(CODE[20]), STR_34(CODE[26]), STR_35(CODE[26]), 
		 -> STR_36(CODE[21]), STR_39(CODE[19]), STR_4(CODE[15]), STR_40(CODE[19]), 
		 -> STR_41(CODE[10]), STR_42(CODE[10]), STR_43(CODE[15]), STR_44(CODE[15]), 
		 -> STR_45(CODE[15]), STR_46(CODE[24]), STR_47(CODE[22]), STR_48(CODE[20]), 
		 -> STR_49(CODE[18]), STR_5(CODE[17]), STR_50(CODE[20]), STR_51(CODE[18]), 
		 -> STR_52(CODE[20]), STR_53(CODE[18]), STR_54(CODE[20]), STR_55(CODE[19]), 
		 -> STR_56(CODE[19]), STR_57(CODE[24]), STR_58(CODE[21]), STR_59(CODE[22]), 
		 -> STR_6(CODE[15]), STR_60(CODE[21]), STR_61(CODE[26]), STR_62(CODE[25]), 
		 -> STR_63(CODE[19]), STR_64(CODE[19]), STR_65(CODE[19]), STR_66(CODE[19]), 
		 -> STR_67(CODE[3]), STR_68(CODE[3]), STR_8(CODE[17]), STR_9(CODE[16]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> f(STACK[11]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> f(STACK[11]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> f(STACK[11]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> f(STACK[11]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> f(STACK[11]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> f(STACK[11]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> f(STACK[11]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> f(STACK[11]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> f(STACK[11]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> f(STACK[11]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> f(STACK[11]), NULL(NULL[0]), 

    fp$.$buffer	PTR unsigned char  size(2) Largest target is 514
		 -> D@mconfig$F5154(BIGRAM[514]), V(BIGRAM[387]), 

    fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), NULL(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    k	PTR unsigned char  size(2) Largest target is 312
		 -> D$message(BIGRAM[156]), H10(BANK1[91]), H12(BANK2[30]), H13(BANK1[64]), 
		 -> H14(BANK0[17]), H153(BIGRAM[312]), H17(BANK1[20]), H26(BANK2[29]), 
		 -> H33(BANK0[36]), S$message(BIGRAM[36]), 

    m_link	PTR enum E17017 size(2) Largest target is 387
		 -> V(BIGRAM[387]), 

    m_protocol@b_block	PTR unsigned char  size(2) Largest target is 257
		 -> H254(BIGRAM[257]), 

    msg_data	PTR unsigned char  size(2) Largest target is 257
		 -> H254(BIGRAM[257]), 

    msg_data	PTR unsigned char  size(2) Largest target is 257
		 -> H254(BIGRAM[257]), 

    p	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), ring_buf2(BANK3[67]), 

    r_link	PTR enum E17017 size(2) Largest target is 387
		 -> V(BIGRAM[387]), 

    r_protocol@b_block	PTR unsigned char  size(2) Largest target is 257
		 -> H254(BIGRAM[257]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 514
		 -> D$lcd(BIGRAM[512]), D@mconfig$F5154(BIGRAM[514]), 

    s	PTR const unsigned char  size(2) Largest target is 514
		 -> D$lcd(BIGRAM[512]), D@mconfig$F5154(BIGRAM[514]), dbuf(BANK1[32]), V(BIGRAM[387]), 
		 -> V$terminal(BIGRAM[160]), 

    s	PTR unsigned char  size(2) Largest target is 514
		 -> D$lcd(BIGRAM[512]), D@mconfig$F5154(BIGRAM[514]), V(BIGRAM[387]), 

    s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    s	PTR unsigned char  size(2) Largest target is 514
		 -> D$lcd(BIGRAM[512]), D@mconfig$F5154(BIGRAM[514]), ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 
		 -> STR_29(CODE[6]), STR_3(CODE[6]), STR_30(CODE[6]), STR_31(CODE[6]), 
		 -> STR_32(CODE[6]), STR_37(CODE[12]), STR_38(CODE[9]), STR_7(CODE[6]), 
		 -> T(BANK6[256]), V(BIGRAM[387]), 

    S$block$header	PTR unsigned char  size(2) Largest target is 156
		 -> D$message(BIGRAM[156]), H10(BANK1[91]), H12(BANK2[30]), H13(BANK1[64]), 
		 -> H14(BANK0[17]), H17(BANK1[20]), H26(BANK2[29]), S$message(BIGRAM[36]), 

    S$block$reply	PTR unsigned char  size(2) Largest target is 312
		 -> H10(BANK1[91]), H12(BANK2[30]), H153(BIGRAM[312]), H33(BANK0[36]), 

    S$message$data$header	PTR unsigned char  size(2) Largest target is 480
		 -> D$message(BIGRAM[156]), H10(BANK1[91]), H12(BANK2[30]), H13(BANK1[64]), 
		 -> H14(BANK0[17]), H17(BANK1[20]), H26(BANK2[29]), S(BIGRAM[460]), 
		 -> S$message(BIGRAM[36]), S$message$checksum(BIGRAM[2]), 

    S$message$data$reply	PTR unsigned char  size(2) Largest target is 312
		 -> H10(BANK1[91]), H12(BANK2[30]), H153(BIGRAM[312]), H33(BANK0[36]), 

    S1867spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    S1867spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    S3224response_type$header	PTR unsigned char  size(2) Largest target is 156
		 -> D$message(BIGRAM[156]), H10(BANK1[91]), H12(BANK2[30]), H13(BANK1[64]), 
		 -> H14(BANK0[17]), H17(BANK1[20]), H26(BANK2[29]), S$message(BIGRAM[36]), 

    S3224response_type$reply	PTR unsigned char  size(2) Largest target is 312
		 -> H10(BANK1[91]), H12(BANK2[30]), H153(BIGRAM[312]), H33(BANK0[36]), 

    S5667$buffer	PTR unsigned char  size(2) Largest target is 514
		 -> D@mconfig$F5154(BIGRAM[514]), V(BIGRAM[387]), 

    S5667$source	PTR const unsigned char  size(2) Largest target is 0

    ?_secs_II_message$header	PTR unsigned char  size(2) Largest target is 156
		 -> D$message(BIGRAM[156]), H10(BANK1[91]), H12(BANK2[30]), H13(BANK1[64]), 
		 -> H14(BANK0[17]), H17(BANK1[20]), H26(BANK2[29]), S$message(BIGRAM[36]), 

    ?_secs_II_message$reply	PTR unsigned char  size(2) Largest target is 312
		 -> H10(BANK1[91]), H12(BANK2[30]), H153(BIGRAM[312]), H33(BANK0[36]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 514
		 -> D$lcd(BIGRAM[512]), D@mconfig$F5154(BIGRAM[514]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), ring_buf2(BANK3[67]), 

    spi_link$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    spi_link$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 514
		 -> D$lcd(BIGRAM[512]), D@mconfig$F5154(BIGRAM[514]), V(BIGRAM[387]), 

    strPtr	PTR unsigned char  size(2) Largest target is 514
		 -> D$lcd(BIGRAM[512]), D@mconfig$F5154(BIGRAM[514]), V(BIGRAM[387]), 

    strPtr	PTR unsigned char  size(2) Largest target is 514
		 -> D$lcd(BIGRAM[512]), D@mconfig$F5154(BIGRAM[514]), V(BIGRAM[387]), 

    t_link	PTR enum E17017 size(2) Largest target is 387
		 -> V(BIGRAM[387]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), ring_buf2(BANK3[67]), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), NULL(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), NULL(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), NULL(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), NULL(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), NULL(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), NULL(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  360182
          _MyeaDogM_WriteStringAtPos
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                         _check_help
                _eaDogM_WriteCommand
                      _get_vterm_ptr
                         _hb_message
                       _init_display
                         _m_protocol
                      _mode_lamp_dim
                         _r_protocol
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                         _t_protocol
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _t_protocol                                           3     1      2   50201
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                   _UART1_put_buffer
                    _secs_II_message
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_send                                           10     5      5     913
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART1_put_buffer
                        _UART2_Write
                  _UART2_is_tx_ready
                   _UART2_put_buffer
                     _block_checksum
 ---------------------------------------------------------------------------------
 (3) _block_checksum                                       8     4      4     158
 ---------------------------------------------------------------------------------
 (3) _UART2_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART2_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART2_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _UART1_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _secs_II_message                                     13     6      7   48661
                   _DATAEE_WriteByte
                         _StartTimer
                          _TimerDone
                       _display_info
                _format_display_text
                       _gem_messages
                          _parse_sid
                        _s10f1_opcmd
                        _s6f11_opcmd
                  _sequence_messages
                   _set_display_info
              _set_temp_display_help
                    _terminal_format
                     _vterm_sequence
 ---------------------------------------------------------------------------------
 (3) _vterm_sequence                                       0     0      0   15770
                      _get_vterm_ptr
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _s6f11_opcmd                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _s10f1_opcmd                                          0     0      0   15726
                           _parse_ll
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _parse_ll                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _parse_sid                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _gem_messages                                         2     0      2     132
                         _StartTimer
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _r_protocol                                           3     1      2   34014
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                             _WaitMs
                       _run_checksum
            _secs_II_monitor_message
                     _secs_gem_state
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _m_protocol                                           3     1      2   34412
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                  _UART1_is_rx_ready
                         _UART2_Read
                  _UART2_is_rx_ready
                             _WaitMs
                       _run_checksum
            _secs_II_monitor_message
                     _secs_gem_state
 ---------------------------------------------------------------------------------
 (2) _secs_gem_state                                       2     0      2   16385
                         _StartTimer
                          _TimerDone
                _format_display_text
                  _sequence_messages
                   _set_display_info
                    _terminal_format
 ---------------------------------------------------------------------------------
 (3) _terminal_format                                      1     0      1   15757
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sequence_messages                                    1     0      1      66
                         _StartTimer
 ---------------------------------------------------------------------------------
 (3) _format_display_text                                 10     8      2     328
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _secs_II_monitor_message                              6     2      4   16734
                          _ee_logger
 ---------------------------------------------------------------------------------
 (3) _ee_logger                                            8     2      6   16080
                   _DATAEE_WriteByte
                         _StartTimer
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3      90
 ---------------------------------------------------------------------------------
 (2) _run_checksum                                         2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _UART2_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART2_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0     388
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2     168
                             _memset
 ---------------------------------------------------------------------------------
 (1) _hb_message                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   15899
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _check_help                                           1     0      1   96233
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   47870
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (3) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                    _CLC1_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                     _DSM_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      66
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DSM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      22
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (1) _MyeaDogM_WriteStringAtPos                            4     0      4   80129
                          _TimerDone
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                         _update_lcd
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   32232
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   31968
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   15868
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   16007
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3     292
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                               8     2      6     137
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   15501
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             33    15     18   15726
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   15294
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           14     8      6   14980
                               _ctoa
                               _dtoa
                              _fputc
                               _otoa
                 _read_prec_or_width
                               _stoa
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                18    11      7    2325
                                _pad
 ---------------------------------------------------------------------------------
 (7) _utoa                                                12     6      6    2303
                            ___lldiv
                            ___llmod
                                _pad
 ---------------------------------------------------------------------------------
 (8) ___llmod                                              9     1      8     159
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             13     5      8     162
 ---------------------------------------------------------------------------------
 (7) _stoa                                                12     8      4    1060
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _read_prec_or_width                                   7     3      4     180
 ---------------------------------------------------------------------------------
 (7) _otoa                                                13     7      6    2056
                                _pad
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                15     9      6    2885
                            ___aldiv
                            ___almod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                  8     2      6    1617
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___almod                                             10     2      8     296
 ---------------------------------------------------------------------------------
 (8) ___aldiv                                             14     6      8     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3     828
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (4) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (4) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT0_ISR                                            2     2      0       0
                                              0 COMRAM     2     2      0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT0_CallBack                                       0     0      0       0
                                NULL *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            2     2      0       0
                                              2 COMRAM     2     2      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0       0
                                NULL *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT2_ISR                                            2     2      0       0
                                              4 COMRAM     2     2      0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT2_CallBack                                       0     0      0       0
                                NULL *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _ADCC_ISR                                            2     2      0       0
                                              6 COMRAM     2     2      0
                                NULL *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (15) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _UART1_tx_vect_isr                                   2     2      0       0
                                              8 COMRAM     2     2      0
                                NULL *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (15) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _UART1_rx_vect_isr                                   2     2      0       0
                                             10 COMRAM     2     2      0
                                NULL *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (15) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _UART2_tx_vect_isr                                   2     2      0       0
                                              0 BANK0      2     2      0
                                NULL *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (15) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _UART2_rx_vect_isr                                   2     2      0       0
                                              2 BANK0      2     2      0
                                NULL *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (15) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR6_ISR                                            3     3      0      90
                                              4 BANK0      3     3      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR6_CallBack                                       0     0      0      90
                                NULL *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            5     5      0      90
                                              0 BANK1      5     5      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                                NULL *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MyeaDogM_WriteStringAtPos
     _TimerDone
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _ctoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _dtoa
                 ___aldiv
                 ___almod
                 _abs
                 _pad
                   _fputc
                   _fputs
                     _fputc
                   _strlen
               _fputc
               _otoa
                 _pad
               _read_prec_or_width
               _stoa
                 _fputc
               _utoa
                 ___lldiv
                 ___llmod
                 _pad
               _xtoa
                 _pad
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
         _ringBufS_flush
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _get_vterm_ptr
     _sprintf
       _vfprintf
     _update_lcd
       _eaDogM_WriteStringAtPos
       _wait_lcd_done
     _wait_lcd_done
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLC1_Initialize
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _DSM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
     _update_lcd
     _vterm_dump
       _WaitMs
       _eaDogM_WriteStringAtPos
       _get_vterm_ptr
       _sprintf
       _wait_lcd_done
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
   _get_vterm_ptr
   _hb_message
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _m_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_is_rx_ready
     _UART2_Read
     _UART2_is_rx_ready
     _WaitMs
     _run_checksum
     _secs_II_monitor_message
       _ee_logger
         _DATAEE_WriteByte
         _StartTimer
         _sprintf
     _secs_gem_state
       _StartTimer
       _TimerDone
       _format_display_text
         _strlen
       _sequence_messages
         _StartTimer
       _set_display_info
       _terminal_format
         _sprintf
   _mode_lamp_dim
   _r_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _WaitMs
     _run_checksum
     _secs_II_monitor_message
     _secs_gem_state
   _set_display_info
   _set_vterm
   _sprintf
   _srand
   _t_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_put_buffer
     _secs_II_message
       _DATAEE_WriteByte
       _StartTimer
       _TimerDone
       _display_info
       _format_display_text
       _gem_messages
         _StartTimer
       _parse_sid
       _s10f1_opcmd
         _parse_ll
         _sprintf
       _s6f11_opcmd
       _sequence_messages
       _set_display_info
       _set_temp_display_help
       _terminal_format
       _vterm_sequence
         _get_vterm_ptr
         _sprintf
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _UART2_Write
       _UART2_is_tx_ready
       _UART2_put_buffer
       _block_checksum
   _update_lcd

 _INT0_ISR (ROOT)
   _INT0_CallBack
     NULL(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     NULL(Fake) *
     _INT1_DefaultInterruptHandler *

 _INT2_ISR (ROOT)
   _INT2_CallBack
     NULL(Fake) *
     _INT2_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   NULL(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   NULL(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   NULL(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   NULL(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   NULL(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     NULL(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     NULL(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0    2262     27.6%
BITBIGSFRlh       1448      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0     256    100.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0     255     99.6%
BITBANK4           256      0       0      0.0%
BANK4              256      0     255     99.6%
BITBANK3           256      0       0      0.0%
BANK3              256      0      67     26.2%
BITBANK2           256      0       0      0.0%
BANK2              256      0     254     99.2%
BITBANK1           256      0       0      0.0%
BANK1              256      5     235     91.8%
BITBIGSFRlllllh    227      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      7     156     97.5%
BITBIGSFRllllll    157      0       0      0.0%
BITBIGSFRh          80      0       0      0.0%
BITCOMRAM           63      0       0      0.0%
COMRAM              63     12      51     81.0%
BITBIGSFRlllh       61      0       0      0.0%
BITBIGSFRllh        36      0       0      0.0%
BITBIGSFRllllh      31      0       0      0.0%
STACK                0      0     122      0.0%
DATA                 0      0    3913      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Dec 17 09:54:28 2024

                   _SPI1_Exchange8bit 8074              __end_of_set_display_info 8074  
                                   _D 0ACE                                     _S 0902  
                                   _T 0600                                     _V 0C1A  
    __end_of_TMR5_SetInterruptHandler 7E1E             __end_of_UART2_is_rx_ready 828C  
           __end_of_UART2_is_tx_ready 8280                                   _H10 0100  
                                 _H12 02C3                                   _H13 015B  
                                 _H14 00E4                                   _H17 019B  
                                 _H33 00C0                                   _H26 02E1  
                                 l200 81E2                                   l711 7928  
                                 l609 7BE4                                   l729 7C10  
                                 l589 78A8                                   l863 8082  
                                 _GIE 1FE97                                   _abs 7AB6  
                                 _pad 6522                                   fsr0 3FE9  
                                 fsr2 3FD9                       _TMR2_Initialize 8140  
                                 prod 3FF3                                   tosl 3FFD  
                                 wreg 3FE8                         _INT0_CallBack 7F7E  
                        _run_checksum 7F36                    _UART1_Transmit_ISR 7BBE  
                 __end_of_s10f1_opcmd 4BEC                         _INT1_CallBack 7FA2  
                                _H153 0D9D                                  _H254 0ED5  
                                l1140 790C                                  l2005 49A2  
                                l2022 7124                                  l1080 70FC  
                                l2200 5FBA                                  l1402 1420  
                                l2108 56D6                                  l2124 2290  
                                l1404 14A4                                  l2046 719C  
                                l1406 14AE                                  l2039 718A  
                                l2233 61F8                                  l1433 1A02  
                                l3202 4E4C                                  l1426 18D4  
                                l1419 175A                                  l2180 209C  
                                l2253 5284                                  l1429 1910  
                                l2182 20B8                                  l1446 1A6C  
                                l2183 20D4                                  l3240 505C  
                                l2184 20F0                                  l2433 8070  
                                l1465 1A98                                  l1393 12C4  
                                l2186 2130                                  l1386 116A  
                                l1378 0F96                                  l1395 135C  
                                l1548 7498                                  l2380 4E0C  
                                l3165 603A                                  l3149 655A  
                                l3309 02F4                                  l1821 2352  
                                l3255 39A8                                  l3264 3AC8  
                                l2384 67EE                                  l2296 7B06  
                                l2376 4CA2                                  l3177 3FAE  
                                l1690 6C00                                  l3178 4014  
                                l3381 5E98                                  l1694 6FBA  
                                l1942 37E6                                  l1928 363A  
                                l3369 7AE8                                  l3298 0F48  
                                l1963 4738                                  l1991 3C78  
                                l1887 2E6A                                  l1985 757A  
                                l1994 3EA0                                  l1996 3F58  
                                _HC33 FB31                                  l7510 5428  
                                l7504 53FC                                  l8410 7948  
                                l7516 5458                                  l7620 7ACE  
                                l8332 7134                                  l8412 794A  
                                l7454 6FE8                                  l8280 7F76  
                                l7528 54DA                                  l7456 700A  
                                l8600 71A6                                  l8336 7172  
                                l8328 712C                                  l9218 798E  
                                l9242 7952                                  l8370 78CA  
                                l7564 57C6                                  l7556 575A  
                                l7548 5712                                  l7476 634E  
                                l7580 69E0                                  l8446 7B10  
                                l9326 7F42                                  l8542 3F36  
                                l8550 3F40                                  l9272 76E6  
                                l7488 63D0                                  l8368 78C8  
                                l8800 56AE                                  l8464 6906  
                                l8802 56C0                                  l9268 76BC  
                                l7940 5BF4                                  l7588 6A4C  
                                l8580 58A8                                  l8590 5974  
                                l7936 5B9E                                  l8586 5940  
                                l8588 5960                                  l9900 46F8  
                                l9902 4720                                  l8784 561A  
                                l8776 5566                                  l9922 79E6  
                                l9908 4726                                  l9926 79FE  
                                l9870 4622                                  l9862 456C  
                                STR_1 FF7B                                  STR_2 FFBA  
                                STR_3 FFEF                                  l9882 4676  
                                l9874 463C                                  STR_4 FFAB  
                                STR_5 FF6A                                  l9892 46BE  
                                l9884 469E                                  STR_6 FFBA  
                                STR_7 FFEF                                  STR_8 FF59  
                                STR_9 FF8C                                  l9888 46A4  
                                _LATA 3FBA                                  _LATB 3FBB  
                                _LATC 3FBC                                  _LATD 3FBD  
                                _LATE 3FBE                                  _LATF 3FBF  
                                u4100 5452                                  u4020 6348  
                                u4110 5474                                  u4030 636A  
                                u4200 5754                                  u4130 5502  
                                u4210 5776                                  u5010 5C36  
                                u4050 63F8                                  _T2PR 3FAB  
                                u4150 552C                                  u4070 53F6  
                                u4230 57EE                                  u4090 5424  
                                u4250 5818                                  u4170 570C  
                                u4260 69DA                                  u4190 573A  
                                u4270 69FC                                  u4290 6A74  
                                _T6PR 3F93                                  u5340 70BC  
                                _PMD0 39C0                                  _PMD1 39C1  
                                _PMD2 39C2                                  _PMD3 39C3  
                                _PMD4 39C4                                  u5601 3EB2  
                                _PMD5 39C5                                  u5530 69A4  
                                u6250 454C                                  _PMD6 39C6  
                                _PMD7 39C7                                  u5348 70BE  
                                u5540 3C92                                  u5365 710C  
                                u5366 710E                                  u5630 599A  
                                u5550 3CB0                                  u8120 4158  
                                u8040 3F70                                  u8200 4F16  
                                u5560 3CCE                                  u8210 4F2E  
                                u5570 3CEC                                  u9010 4A70  
                                u8131 4170                                  u8140 4186  
                                u8300 42EE                                  u5580 3D0A  
                                u8141 4184                                  u8205 4F08  
                                u8150 419A                                  u8230 4F5C  
                                u5590 3D28                                  u9110 4BCE  
                                u9030 4AB4                                  u5495 7770  
                                u5831 55BC                                  u8160 41A0  
                                u8240 4F70                                  u5841 5670  
                                u8090 3FCA                                  u8058 3F72  
                                u8250 4F76                                  u9050 4B0A  
                                u8307 42E0                                  u8270 4F88  
                                u5870 71F2                                  u9230 531A  
                                u9070 4B60                                  u8431 5194  
                                u8360 43F8                                  u8440 51AA  
                                u8600 3BA2                                  u9320 1EBA  
                                u8441 51A8                                  u8450 51BE  
                                u9090 4B96                                  u9330 1EDC  
                                u8460 51C4                                  u8508 39DA  
                                u7910 5DA2                                  u8390 44AC  
                                u8550 3B3A                                  u9350 1F52  
                                u9270 1BD6                                  u8367 43EA  
                                u5895 7226                                  u8560 3B5A  
                                u8800 0A64                                  u9600 620A  
                                u5896 7228                                  u5888 71F4  
                                u9360 1F74                                  u7930 5E1E  
                                u8490 39D8                                  u8810 0B10  
                                u8571 3B72                                  u8555 3B2C  
                                u8491 39D2                                  u8580 3B88  
                                u8820 0B78                                  u9380 21DE  
                                u9276 1BD8                                  u8581 3B86  
                                u8590 3B9C                                  u8830 0BF6  
                                u9606 620C                                  u8807 0A52  
                                u8817 0AEC                                  _PLLR 1CEE0  
                                u8827 0B76                                  u9731 3752  
                                u8780 098C                                  u8940 6D92  
                                u8837 0BDE                                  u9565 314C  
                                u8790 09F4                                  u9566 314E  
                                u9398 21E0                                  u9575 315C  
                                u9576 315E                                  u9585 316C  
                                u9586 316E                                  u8970 49FE  
                                u8787 098A                                  u8797 09F2  
                                u8990 4A1C                                  _WPUA 3A41  
                                _WPUB 3A51                                  _WPUC 3A61  
                                _WPUD 3A71                                  _WPUE 3A81  
                                _WPUF 3A91                         _INT2_CallBack 7FC6  
                    __end_of_ADCC_ISR 76B6                                  _dbuf 01C6  
                                _ctoa 5FC4                                  _main 0F52  
                                _dtoa 3F5C                                  _msg0 FB79  
                                _msg1 FBD2                                  _msg2 FC2A  
                                _seed 00BC                                  _prec 01C3  
                                _otoa 4E10                                  _nout 01BF  
                                fsr0h 3FEA                                  fsr1h 3FE2  
                                indf0 3FEF                                  fsr2h 3FDA  
                                fsr0l 3FE9                                  indf1 3FE7  
                                indf2 3FDF                                  fsr1l 3FE1  
                                fsr2l 3FD9                                  _stoa 422A  
                                btemp 0023                                  _utoa 5020  
                                _xtoa 396C                                  prodh 3FF4  
                                prodl 3FF3                                  start 00AE  
                     _timer5ReloadVal 0007             __end_of_SPI1_Exchange8bit 8092  
                   _UART1_rx_vect_isr 77C8                          ___param_bank 0000  
                  ?_UART1_rx_vect_isr 0043                      __end_of_INT0_ISR 7EE6  
                    __end_of_INT1_ISR 7F0E                      __end_of_INT2_ISR 7F36  
            __end_of_ringBufS_put_dma 6C08         __end_of_OSCILLATOR_Initialize 81E8  
                               l10010 7BE0                                 l10032 7C0C  
                               l12000 07BA                                 l10058 78F4  
                               l12002 07E2                                 l12012 0870  
                               l12004 0814                                 l12020 08FC  
                               l12030 0A66                                 l12032 0B12  
                               l12040 0C20                                 l12024 0926  
                               l12008 0842                                 l12104 6E24  
                               l12042 0C50                                 l12034 0B7A  
                               l12026 098E                                 l12018 08C2  
                               l12114 6CDC                                 l12028 09F6  
                               l12116 6D1E                                 l12108 6E5E  
                               l12300 4B48                                 l12220 49E6  
                               l12062 0D58                                 l12054 0D0C  
                               l12038 0BF8                                 l12046 0C54  
                               l13110 3048                                 l13102 2FEA  
                               l12310 4B7E                                 l11600 3F9E  
                               l12072 0E14                                 l13200 624C  
                               l12240 4A32                                 l13210 62DE  
                               l13122 30C0                                 l13106 3018  
                               l13034 2E06                                 l12322 4BB6  
                               l12242 4A52                                 l12234 4A22  
                               l11524 5DAE                                 l11540 6EEC  
                               l11620 4032                                 l11612 3FEA  
                               l12084 0ED2                                 l13204 6292  
                               l13124 30C4                                 l12252 4A76  
                               l12236 4A2A                                 l12228 4A04  
                               l11550 6564                                 l11702 4FD6  
                               l12078 0E78                                 l12094 0EF4  
                               l12174 6DB0                                 l12422 6728  
                               l12190 47D2                                 l12510 5280  
                               l13070 2F02                                 l12318 4BB0  
                               l12270 4ABA                                 l12246 4A58  
                               l11536 6EAE                                 l11624 404E  
                               l11712 427C                                 l12088 0EDC  
                               l13208 62A6                                 l13216 62FE  
                               l12192 4860                                 l12520 529C  
                               l13072 2F16                                 l13056 2EA4  
                               l12272 4AC2                                 l12264 4A9C  
                               l11554 65A0                                 l11546 654C  
                               l11650 41E0                                 l11634 4144  
                               l11714 4286                                 l12450 6148  
                               l12194 48EE                                 l12514 5288  
                               l12506 5278                                 l13170 31F6  
                               l13162 31CA                                 l13138 3104  
                               l13090 2F88                                 l12290 4B18  
                               l12282 4AF2                                 l12258 4A80  
                               l12370 2A26                                 l13330 38F2  
                               l13322 38DC                                 l13306 3870  
                               l13226 364E                                 l11572 602C  
                               l11732 4358                                 l11724 4322  
                               l11716 42A8                                 l11804 3998  
                               l11900 009E                                 l12460 6164  
                               l12444 6112                                 l12188 4744  
                               l12524 52B0                                 l12516 5296  
                               l12508 527C                                 l13500 26B0  
                               l13412 245A                                 l13068 2EEC  
                               l12276 4ACC                                 l12380 2C1C  
                               l12372 2A84                                 l12620 1C40  
                               l13324 38E0                                 l13316 38B2  
                               l13260 3732                                 l13244 36BC  
                               l13228 3660                                 PRLOCK 39EF  
                               l11582 6080                                 l11566 5FE8  
                               l11558 65EC                                 l11670 4E7C  
                               l11662 4E3C                                 l11750 4486  
                               l11742 4424                                 l11814 3A06  
                               l11902 00E2                                 l12470 61CC  
                               l12198 497C                                 l12550 531E  
                               l12526 52C4                                 l13422 2480  
                               l13174 3202                                 l13086 2F6A  
                               l13182 3214                                 l12294 4B22  
                               l12278 4AEC                                 l12382 2C96  
                               l12374 2AE2                                 l12630 1C72  
                               l13326 38E8                                 l13318 38BC  
                               l13254 3706                                 l13334 3906  
                               l11568 600C                                 l11736 4394  
                               l11912 0128                                 l12448 611A  
                               l12560 532A                                 l12552 5322  
                               l13512 2732                                 l13504 26D4  
                               l13360 22F8                                 l13168 31F2  
                               l13184 325E                                 l12296 4B42  
                               l12288 4B10                                 l12384 2D18  
                               l12376 2B40                                 l12368 2994  
                               l12632 1C84                                 l13264 375E  
                               l13336 3950                                 l11586 60C8  
                               l11578 6044                                 l11682 4F1A  
                               l11746 444A                                 l11738 43BC  
                               l11770 5088                                 l11834 3AAA  
                               l11826 3A5E                                 l11842 3B3E  
                               l11818 3A1A                                 l12458 6152  
                               l12482 61E2                                 l12570 5356  
                               l12546 5312                                 l13522 279E  
                               l13450 2548                                 l13442 24F6  
                               l13346 229E                                 l13098 2FC6  
                               l12378 2BA2                                 l12714 1E1A  
                               l12626 1C5A                                 l12618 1C38  
                               l13290 382E                                 l13274 37B4  
                               l11780 516A                                 l11764 504C  
                               l11932 027E                                 l12396 5EAE  
                               l12468 61BA                                 l12556 5326  
                               l12492 5236                                 l13524 27A2  
                               l13508 2702                                 l12388 2DBA  
                               l12900 2238                                 l12804 1FF6  
                               l12740 1E5E                                 l12716 1E2C  
                               l12652 1CFC                                 l11862 3C24  
                               l11950 0308                                 l11918 0190  
                               l13606 4C72                                 l12478 61D6  
                               l12582 5382                                 l12574 5366  
                               l12486 5210                                 l12590 5396  
                               l13454 2578                                 l13446 251A  
                               l13438 24D8                                 l12822 201A  
                               l12806 200E                                 l12750 1EEC  
                               l12742 1E98                                 l12646 1CD6  
                               l13286 380C                                 l11960 03A2  
                               l11952 0350                                 l11928 0228  
                               l11880 007E                                 l12568 5332  
                               l12592 53AE                                 l13464 25E4  
                               l13480 263A                                 l13384 239E  
                               l12920 225A                                 l12824 204A  
                               l12760 1F30                                 l12736 1E52  
                               l12672 1D6A                                 l13296 383A  
                               l11962 03E4                                 l11970 051C  
                               l11946 0302                                 l11938 02D0  
                               l13618 4D8E                                 l13570 28CE  
                               l13562 28B6                                 l13538 27E0  
                               l13466 25E8                                 l12842 20B0  
                               l12826 2052                                 l12658 1D20  
                               l13722 11F0                                 l11964 044E  
                               l11972 0544                                 l11892 0090  
                               l11884 0084                                 l11876 0062  
                               l13572 28D6                                 l13564 28BA  
                               l13900 1B72                                 l13724 1242  
                               l11990 0646                                 l11966 04B2  
                               l11878 0066                                 l13566 28C2  
                               l13558 2896                                 l13398 23FC  
                               l12782 1FCA                                 l12774 1FA2  
                               l12766 1F7A                                 l12758 1F10  
                               l12694 1DF4                                 l12686 1DB0  
                               l13750 1364                                 l13670 0F80  
                               l11992 0682                                 l11896 0096  
                               l11888 008A                                 l13568 28C6  
                               l13496 2692                                 l13576 28EA  
                               l12688 1DCE                                 l12936 2266  
                               l13912 1BAC                                 l13840 1750  
                               l13824 16B4                                 l13672 0F88  
                               l11994 06EC                                 l11978 05A4  
                               l13578 2934                                 l13762 1398  
                               l13754 136C                                 l13738 1302  
                               l11996 0750                                 l12868 210C  
                               l13676 0FCC                                 l12894 21D0  
                               l13870 1988                                 l13846 17C0  
                               l13774 146A                                 l13758 1388  
                               l12888 215A                                 l13864 191A  
                               l13856 18C4                                 l13848 183A  
                               l13784 1534                                 l12898 21F4  
                               l13882 1A74                                 l13866 194A  
                               l13786 156A                                 l13874 1A0C  
                               l13796 15E6                                 l13876 1A38  
                               l13894 1AD4                                 l13886 1AA0  
                               l13798 1636                       __end_of___aldiv 5556  
                               _ADCAP 3EF5                                 _ADACT 3EFE  
                     __end_of___almod 5842                                 _ADCLK 3EFF  
                               _ADPCH 3EF1                                 _ADREF 3EFD  
                               STR_10 FE60                                 STR_11 FE21  
                               STR_12 FE0C                                 STR_20 FD23  
                               STR_21 FEFE                                 STR_13 FD9E  
                               STR_30 FFEF                                 STR_22 FFF5  
                               STR_14 FD86                                 STR_31 FFEF  
                               STR_15 FF47                                 STR_23 FE36  
                               STR_40 FED8                                 STR_24 FD23  
                               STR_32 FFEF                                 STR_16 FE4B  
                               STR_17 FE60                                 STR_41 FFD5  
                               STR_33 FE9D                                 STR_25 FCB8  
                               STR_42 FFD5                                 STR_26 FFFC  
                               STR_18 FEB1                                 STR_50 FE75  
                               STR_34 FD09                                 STR_19 FE4B  
                               STR_27 FFF9                                 STR_43 FF9C  
                               STR_51 FF23                                 STR_35 FCEF  
                               STR_52 FE75                                 STR_60 FDE2  
                               STR_44 FF9C                                 STR_36 FDF7  
                               STR_45 FF9C                                 STR_29 FFEF  
                               STR_37 FFC9                                 STR_53 FF11  
                               STR_61 FCD5                                 STR_54 FE75  
                               STR_38 FFDF                                 STR_46 FD56  
                               STR_62 FD3D                                 STR_55 FED8  
                               STR_39 FED8                                 STR_63 FEC5  
                               STR_47 FDCC                                 STR_64 FEC5  
                               STR_56 FEEB                                 STR_48 FE89  
                               _ADRPT 3EEC                                 STR_65 FEC5  
                               STR_49 FF35                                 STR_57 FD6E  
                               STR_66 FEC5                                 STR_58 FDE2  
                               STR_67 FFFC                                 STR_59 FDB6  
                               STR_68 FFFC                                 STR_69 FFE8  
                     __end_of___lldiv 6422                                 u10145 2820  
                               u10250 4DF4                                 u10146 2822  
                               u10155 2830                                 u10156 2832  
                               u10165 2840                                 u10166 2842  
                               u10268 4DF6                       __end_of___llmod 6A9E  
                               _U1P1H 3DED                                 _U1P2H 3DEF  
                               _U1P1L 3DEC                                 _U1P3H 3DF1  
                               _T2CON 3FAC                                 _U1P2L 3DEE  
                               _U1P3L 3DF0                                 _U2P1L 3DD4  
                               _U2P2L 3DD6                                 _U2P3L 3DD8  
                               _T5CLK 3F9D                                 _T2HLT 3FAD  
                               _T5CON 3F9A                                 _T6CON 3F94  
                               _T6HLT 3F95                                 _T2TMR 3FAA  
                               _U1UIR 3DF8                                 _T2RST 3FAF  
                               _U1RXB 3DE8                                 _U2UIR 3DE0  
                               _U1TXB 3DEA                                 _U2RXB 3DD0  
                               _U2TXB 3DD2                                 _T6TMR 3F92  
                               _T6RST 3F97                   ??_UART1_rx_vect_isr 004D  
                               _ISRPR 39F1                                 _OSCEN 39DD  
             secs_gem_state@equipment 0009                                 _TMR5H 3F99  
                               _TMR5L 3F98                                 _TRISA 3FC2  
                               _TRISB 3FC3                                 _TRISC 3FC4  
                               _TRISD 3FC5                                 _TRISE 3FC6  
                               _TRISF 3FC7                           _Default_ISR 82A0  
                   _UART1_tx_vect_isr 7784                      __end_of_TMR5_ISR 72B2  
                        _DMA1CON0bits 3BFC                      __end_of_TMR6_ISR 7BBE  
                        _DMA1CON1bits 3BFD                    r_protocol@rxData_l 000D  
                               _flags 01C5                                 _msg99 FC80  
                               _fputc 5D7E                                 _fputs 6E9E  
                  ?_UART1_tx_vect_isr 0043                                 _srand 7C66  
                               _width 01C1                                 _putch 815A  
            _INT1_SetInterruptHandler 7E46                                 pclath 3FFA  
                               pclatu 3FFB                                 tablat 3FF5  
                               ltemp0 0023                                 ltemp1 0027  
                               ltemp2 002B                                 plusw0 3FEB  
                               plusw1 3FE3                                 plusw2 3FDB  
                               ttemp0 0023                                 ttemp1 0026  
                               ttemp2 0029                                 ttemp3 002C  
                               ttemp5 0024                                 ttemp6 0027  
                               ttemp7 002B                        _secs_gem_state 520E  
                               status 3FD8   __end_of_UART1_SetRxInterruptHandler 7DA6  
         _UART1_SetRxInterruptHandler 7D7E                                 wtemp0 0023  
                               wtemp1 0025                                 wtemp2 0027  
                               wtemp3 0029                                 wtemp4 002B  
                               wtemp5 002D                                 wtemp8 0024  
                     __end_of_sprintf 6704                   ??_UART1_tx_vect_isr 004B  
           __end_of_UART1_rx_vect_isr 780A                          __end_of_HC33 FB79  
                     _TMR5_Initialize 76FC                 __end_of_ringBufS_init 7D06  
                     __initialization 59A4                     _UART2_rx_vect_isr 7850  
                        __end_of_ctoa 60E6                          __end_of_main 1BBE  
                        __end_of_dtoa 422A                          __end_of_msg0 FBD2  
                        __end_of_msg1 FC2A                          __end_of_msg2 FC80  
                        __end_of_otoa 5020                          __end_of_stoa 44C6  
                        __end_of_utoa 520E                          __end_of_xtoa 3C6E  
                  ?_UART2_rx_vect_isr 0043               __end_of_TMR2_Initialize 815A  
    secs_II_monitor_message@store1_13 0050      secs_II_monitor_message@store6_11 004F  
            _TMR5_SetInterruptHandler 7DF6                         __activetblptr 0003  
                         _s10f1_opcmd 49A6                   ??_UART2_rx_vect_isr 00F7  
           __end_of_UART1_tx_vect_isr 77C6                                INTCON0 3FD2  
          __end_of_read_prec_or_width 5C50                       _TMR6_Initialize 7DA6  
                     _PWM8_Initialize 81BC                      _UART1_Initialize 72B2  
                   _UART2_tx_vect_isr 780C                    _UART2_Transmit_ISR 7BEA  
                              _ADACCU 3EEA                                _ADACQH 3EF4  
                              _ADACQL 3EF3                                _ADCON0 3EF8  
                              _ADCON1 3EF9                                _ADCON2 3EFA  
                              _ADCON3 3EFB                                _ADLTHH 3EDF  
                __end_of_gem_messages 56DC                                _ADLTHL 3EDE  
                              _ADPREH 3EF7                                _ADPREL 3EF6  
                              _DMA1PR 39F3                                _DMA2PR 39F4  
                              _ADSTAT 3EFC                                _ADUTHH 3EE1  
                              _ADUTHL 3EE0                    _PWM8_LoadDutyValue 7740  
                              _ANSELA 3A40                                _ANSELB 3A50  
                              _ANSELC 3A60                                _ANSELD 3A70  
                              _ANSELE 3A80                                _ANSELF 3A90  
                  ?_UART2_tx_vect_isr 0043                                _MD1SRC 3CFC  
              __end_of_secs_gem_state 53C2                                _U1CON0 3DF2  
                              _U1CON1 3DF3                                _U1CON2 3DF4  
                              _U1BRGH 3DF6                                _U1FIFO 3DF7  
                              _U2CON0 3DDA                                _U2CON1 3DDB  
                              _U1BRGL 3DF5                                _U2CON2 3DDC  
                              _U2BRGH 3DDE                                _U2FIFO 3DDF  
                              _U2BRGL 3DDD                                _T5GATE 3F9C  
                              _T5GCON 3F9B                                _MAINPR 39F2  
                              _RA4PPS 3A04                                _RA5PPS 3A05  
                              _RA6PPS 3A06                                _RC3PPS 3A13  
                              _RD1PPS 3A19                                _RB6PPS 3A0E  
                              _RC5PPS 3A15                                _ODCONA 3A42  
                              _ODCONB 3A52                                _ODCONC 3A62  
                              _RC6PPS 3A16                                _ODCOND 3A72  
                              _ODCONE 3A82                                _ODCONF 3A92  
                              i2l1157 72A0                      _mode_lamp_bright 822E  
                              _SCANPR 39F7                                _IVTADH 389E  
                              _IVTADL 389D                                _IVTADU 389F  
                              u640_48 7FD6                                u651_48 801E  
                              _OSCFRQ 39DF                                u636_48 7F8E  
                              u638_48 7FB2                                u648_48 7FFA  
                              _NVMDAT 39E3                                u597_40 817C  
                              u597_46 817E             _MyeaDogM_WriteStringAtPos 6202  
            __end_of_send_lcd_cmd_dma 753C                   ??_UART2_tx_vect_isr 00F5  
           __end_of_UART2_rx_vect_isr 7892                   __end_of_s6f11_opcmd 73D6  
                   _CLKREF_Initialize 823C                      _UART2_Initialize 73D6  
                              _WaitMs 7AEE                          _CCPTMRS1bits 3F5F  
                      _ringBufS_flush 6F36                                _memset 6DFE  
                              clear_0 5A80                                clear_1 5A94  
                              clear_2 5AA8                                clear_3 5ABA  
                              clear_4 5AC6                                clear_5 5AD2  
                              clear_6 5ADE                                clear_7 5AEA  
                              isa$std 0001                                _printf 7316  
                  _eaDogM_WriteString 6D58                      __end_of_parse_ll 717E  
                           ?_ADCC_ISR 0043                                _strlen 6FC2  
                        __pdataBIGRAM 0C1A                       _ADCC_Initialize 7626  
                      _PMD_Initialize 81E8  __end_of_INT2_DefaultInterruptHandler 82B2  
        _INT2_DefaultInterruptHandler 82B0                          __pdataCOMRAM 004F  
           __end_of_UART2_tx_vect_isr 784E                                lltemp0 0023  
                              lltemp1 002B                                lltemp2 0033  
                              lltemp3 003B                          __mediumconst FB30  
             _secs_II_monitor_message 60E6                                tblptrh 3FF7  
                              tblptrl 3FF6                                tblptru 3FF8  
                    __end_of_wdtdelay 74E8                      __end_of_vfprintf 6D58  
                          _StartTimer 7A04                       _CLC1_Initialize 8032  
             __end_of_TMR5_Initialize 7740                     _SYSTEM_Initialize 758C  
                          __accesstop 0060               __end_of__initialization 5AFC  
                           ?_INT0_ISR 0043                             ?_INT1_ISR 0043  
                           ?_INT2_ISR 0043                  __end_of_display_help 827A  
                __end_of_display_info 8272             __end_of_CLKREF_Initialize 8246  
                       ___rparam_used 0001                       _TMR5_WriteTimer 78D2  
               _set_temp_display_help 81FC                __end_of_ringBufS_flush 6FC2  
                      __pcstackCOMRAM 0043                            ___inthi_sp 17EB  
                        __pidataBANK0 7B5A                          __pidataBANK1 6A9E  
                        __pidataBANK2 7A40                          __pidataBANK6 6422  
                           ?_TMR5_ISR 0043                             ?_TMR6_ISR 0043  
                       __end_of_msg99 FCB8                      _DATAEE_WriteByte 70B0  
                      ivt0x8_undefint 00AC                         __end_of_fputc 5EA2  
                       __end_of_fputs 6F36       secs_II_monitor_message@store1_1 0051  
                       __end_of_srand 7C8E                 __end_of_TMR5_CallBack 8032  
                       __end_of_putch 8174               __end_of_PWM8_Initialize 81D2  
             __end_of_TMR6_Initialize 7DCE                __end_of_PMD_Initialize 81FC  
                          ??_ADCC_ISR 0049                 __end_of_TMR6_CallBack 800E  
                       _DMA1_DMAA_ISR 8254      __end_of_INT2_SetInterruptHandler 7E46  
            _UART2_RxInterruptHandler 00B0             __end_of_SYSTEM_Initialize 75DA  
                      _DSM_Initialize 8108           __end_of_format_display_text 59A4  
                          __pbssBANK0 0060                            __pbssBANK1 01BF  
                          __pbssBANK2 0200                            __pbssBANK3 0300  
                          __pbssBANK4 0400                            __pbssBANK5 0500  
                          _check_help 4BEC                           _s6f11_opcmd 7378  
               _INT0_InterruptHandler 00B9                            ??_INT0_ISR 0043  
                          ??_INT1_ISR 0045                            ??_INT2_ISR 0047  
                   __end_of_TimerDone 7F7E                      _DMA1_DMADCNT_ISR 8248  
                             IVTBASEH 3FD6                               IVTBASEL 3FD5  
                             IVTBASEU 3FD7                            _hb_message 753C  
               __end_of_wait_lcd_done 8140      __end_of_TMR6_SetInterruptHandler 7DF6  
             __end_of_ADCC_Initialize 7670                            ??_TMR5_ISR 01E6  
                          ??_TMR6_ISR 00F9                               _CLC1CON 3C74  
                             _CLC1POL 3C75                               _DMA1DSA 3BF0  
                             _DMA2DSA 3BD0                               _DMA1DSZ 3BEE  
                             _DMA2DSZ 3BCE                               _DMA1SSA 3BF9  
                             _DMA2SSA 3BD9                               _DMA1SSZ 3BF7  
                             _DMA2SSZ 3BD7                               _ADSTPTH 3EE5  
                             _ADSTPTL 3EE4                               _MD1CARH 3CFE  
                             _MD1CARL 3CFD                     _UART1_Receive_ISR 80B0  
                             _CLKRCLK 3CE6                               _CLKRCON 3CE5  
                             _NCO1CLK 3F3F                        ?_DMA1_DMAA_ISR 0043  
                    _DMA1_DMASCNT_ISR 8210                               _NCO1CON 3F3E  
                             _U1ERRIE 3DFA                               _U1ERRIR 3DF9  
             __end_of_CLC1_Initialize 8054                               _U2ERRIE 3DE2  
                             _U2ERRIR 3DE1                               _INT0PPS 3AC0  
                             _INT1PPS 3AC1                               _INT2PPS 3AC2  
                        ?_Default_ISR 0043                               _U1RXPPS 3AE5  
                             _U2RXPPS 3AE8                               _OSCCON1 39D9  
                             _OSCCON3 39DB                               _IVTLOCK 3FD4  
                             _SPI1CLK 3D1C                           r_protocol@d 0052  
                             _SPI1RXB 3D10                               _NVMADRH 39E1  
                             _NVMADRL 39E0                               _SPI1TXB 3D11  
                             _OSCTUNE 39DE                               _NVMCON2 39E6  
                             _PWM8DCH 3F61                               _PWM8DCL 3F60  
                             _PWM8CON 3F62                __end_of_DSM_Initialize 8124  
                             _SLRCONA 3A43                               _SLRCONB 3A53  
                             _SLRCONC 3A63                               _SLRCOND 3A73  
                             _SLRCONE 3A83                               _SLRCONF 3A93  
             __end_of_TMR5_WriteTimer 7912                     __end_of_ee_logger 5FC4  
                  __end_of_UART1_Read 79C8                    __end_of_UART2_Read 798C  
                             __Hparam 0000                         _mode_lamp_dim 818E  
                             __Lparam 0000              __end_of_UART1_Initialize 7316  
                             ___aldiv 53C2                               ___almod 56DC  
                          _m_protocol 229A                               ___lldiv 6316  
                             ___llmod 69BE                          _gem_messages 5556  
           __end_of_UART1_Receive_ISR 80CE                  __end_of_init_display 68DC  
                             __pcinit 59A4              __end_of_mode_lamp_bright 823C  
                 _eaDogM_WriteCommand 8220                               __ramtop 2000  
                             __ptext0 0F52                               __ptext1 3636  
                             __ptext2 44C6                               __ptext3 68DC  
                             __ptext4 7C16                               __ptext5 827A  
                             __ptext6 7912                               __ptext7 7C3E  
                             __ptext8 8280                               __ptext9 1BBE  
                   _UART2_Receive_ISR 80CE                 _OSCILLATOR_Initialize 81D2  
                             _r_block 007A                               us931999 1C64  
                             _mode_sw 000F                             _T5CONbits 3F9A  
            __end_of_UART2_Initialize 7434                    m_protocol@rxData_l 000E  
                   __end_of_parse_sid 71E4                               _sprintf 6614  
                end_of_initialization 5AFC                     __end_of_secs_send 4742  
            _INT2_SetInterruptHandler 7E1E                            _r_protocol 2E02  
 __end_of_UART1_SetTxInterruptHandler 7D7E           _UART1_SetTxInterruptHandler 7D56  
     __end_of_secs_II_monitor_message 6202   __end_of_UART2_SetRxInterruptHandler 7D56  
         _UART2_SetRxInterruptHandler 7D2E                             i2u1030_48 7870  
                           i2u1030_49 7884                    _read_prec_or_width 5B02  
                           i2u1028_48 782C                             i2u1028_49 7840  
                   __end_of_set_vterm 80B0                            _t_protocol 3636  
                   __end_of_vfpfcnvrt 0F52                             _SPI1TCNTL 3D12  
                             postdec1 3FE5                               postdec2 3FDD  
                             postinc0 3FEE                               postinc1 3FE6  
                             postinc2 3FDE                     __end_of_start_lcd 829E  
           __end_of_UART2_Receive_ISR 80EC                        wdtdelay@dcount 009A  
                     ??_DMA1_DMAA_ISR 004F                        _block_checksum 68DC  
               _INT1_InterruptHandler 00B6                             _PORTBbits 3FCB  
            _TMR6_SetInterruptHandler 7DCE                          _display_help 8272  
               _TMR5_InterruptHandler 009E                          _display_info 826A  
 __end_of_ADCC_SetADIInterruptHandler 7EBE           _ADCC_SetADIInterruptHandler 7E96  
                          _update_lcd 6704              __end_of_DATAEE_WriteByte 7118  
                     _DMA1_Initialize 7046                       _SPI1_Initialize 81A6  
               __end_of_get_vterm_ptr 7AB6                       _terminal_format 4742  
                    _UART1_put_buffer 7C3E                     r_protocol@b_block 0001  
                   _sequence_messages 3C6E                        __end_of_WaitMs 7B24  
        __end_of_INTERRUPT_Initialize 724A                __end_of_block_checksum 69BE  
                          _vterm_dump 5C50  __end_of_INT0_DefaultInterruptHandler 82AE  
        _INT0_DefaultInterruptHandler 82AC                       _DMA2_Initialize 7434  
                       __pidataBIGRAM 327A                         __pidataCOMRAM 82A6  
                      __end_of_memset 6E9E                        __end_of_printf 7378  
            __end_of_DMA1_DMADCNT_ISR 8252                      _UART2_put_buffer 7C16  
               __end_of_INT0_CallBack 7FA2                        __end_of_strlen 7046  
                 start_initialization 59A4  __end_of_TMR5_DefaultInterruptHandler 818E  
        _TMR5_DefaultInterruptHandler 8174                           __end_of_abs 7AEE  
               __end_of_INT1_CallBack 7FC6                           __end_of_pad 6614  
                __end_of_send_lcd_cmd 7CDE                            ivt0x8_base 0008  
               __end_of_INT2_CallBack 7FEA                  secs_II_message@block 001C  
                       _uart1RxBuffer 0400                         _uart2RxBuffer 0500  
                       _uart1TxBuffer 0240              __end_of_DMA1_DMASCNT_ISR 8220  
                       _uart2TxBuffer 0200                        _DMA1_DMAOR_ISR 8260  
           __end_of_sequence_messages 3F5C                             _TimerDone 7F5A  
                       _ringBufS_init 7CDE                           _MD1CON0bits 3CFA  
                         _MD1CON1bits 3CFB                           __pdataBANK0 00C0  
                         __pdataBANK1 0100                           __pdataBANK2 02C3  
                         __pdataBANK6 0600            __end_of_EXT_INT_Initialize 7626  
                     run_checksum@sum 0003                   __end_of_help_button 7A04  
     __end_of_eaDogM_WriteStringAtPos 7B5A                           __pbssBIGRAM 0700  
             __end_of_DMA1_Initialize 70B0                           __pbssCOMRAM 0001  
    __end_of_INT0_SetInterruptHandler 7E96                         __pcstackBANK0 00F5  
                       __pcstackBANK1 01E6               __end_of_SPI1_Initialize 81BC  
            _UART1_RxInterruptHandler 00AA              _UART2_TxInterruptHandler 00AD  
             __end_of_terminal_format 49A6                          _init_display 67F2  
              __end_of_DMA1_DMAOR_ISR 826A                 _INT2_InterruptHandler 00B3  
               _TMR6_InterruptHandler 00A1                             _ee_logger 5EA2  
             __end_of_DMA2_Initialize 748E                _PIN_MANAGER_Initialize 6C08  
                __end_of_wait_lcd_set 8298                         __pmediumconst FB30  
                           __ptext100 6316                             __ptext101 422A  
                           __ptext110 53C2                             __ptext102 5B02  
                           __ptext111 5FC4                             __ptext103 4E10  
                           __ptext120 7EE8                             __ptext112 5D7E  
                           __ptext104 3F5C                             __ptext121 7FA2  
                           __ptext113 815A                             __ptext105 6522  
                           __ptext130 7BBE                             __ptext122 82AE  
                           __ptext114 6B5E                             __ptext106 6FC2  
                           __ptext131 77C8                             __ptext123 7F10  
                           __ptext115 7A7C                             __ptext107 6E9E  
                           __ptext140 8210                             __ptext132 80B0  
                           __ptext124 7FC6                             __ptext116 7F5A  
                           __ptext108 7AB6                             __ptext141 8248  
                           __ptext133 780C                             __ptext125 82B0  
                           __ptext117 7EC0                             __ptext109 56DC  
                           __ptext142 8254                             __ptext134 7BEA  
                           __ptext126 82A0                             __ptext118 7F7E  
                           __ptext143 8260                             __ptext135 7850  
                           __ptext127 7670                             __ptext119 82AC  
                           __ptext144 724C                             __ptext136 80CE  
                           __ptext128 82B2                             __ptext145 78D2  
                           __ptext137 7B90                             __ptext129 7784  
                           __ptext146 800E                             __ptext138 7FEA  
                           __ptext147 8174                             __ptext139 76B6  
                  __end_of_StartTimer 7A40                              _ADCC_ISR 7670  
                            _CLC1GLS0 3C7A                              _CLC1GLS1 3C7B  
                            _CLC1GLS2 3C7C                              _CLC1GLS3 3C7D  
                            _CLC1SEL0 3C76                              _CLC1SEL1 3C77  
                            _CLC1SEL2 3C78                              _CLC1SEL3 3C79  
                            _DMA1CON0 3BFC                              _DMA1CON1 3BFD  
                            _DMA1AIRQ 3BFE                              _DMA2CON0 3BDC  
                            _DMA2CON1 3BDD                              _DMA2AIRQ 3BDE  
                            _DMA1SIRQ 3BFF                              _DMA2SIRQ 3BDF  
                         _NCO1CONbits 3F3E                        _vterm_sequence 2950  
                            _T2CLKCON 3FAE                              _NCO1ACCH 3F39  
                            _NCO1ACCL 3F38                              _NCO1ACCU 3F3A  
                _INTERRUPT_Initialize 71E4                              _T6CLKCON 3F96  
                            _NCO1INCH 3F3C                              _NCO1INCL 3F3B  
                            _NCO1INCU 3F3D                             _parse_sid 717E  
                     ?_DMA1_DMAOR_ISR 0043                              _INT0_ISR 7EC0  
                            _INT1_ISR 7EE8                              _INT2_ISR 7F10  
                            _LATBbits 3FBB                              _LATCbits 3FBC  
                            _LATDbits 3FBD                              _LATEbits 3FBE  
                            _LATFbits 3FBF                             _secs_send 44C6  
                            _IPR1bits 3981                              _IPR2bits 3982  
                            _PIE1bits 3991                              _IPR3bits 3983  
                            _PIE2bits 3992                              _IPR5bits 3985  
                            _PIE3bits 3993                             _tickCount 0060  
                            _IPR6bits 3986                              _PIE5bits 3995  
                            _IPR7bits 3987                              _IPR8bits 3988  
                            _PIE6bits 3996                              _PIE7bits 3997  
                            _IPR9bits 3989                              _PIE8bits 3998  
                            _PIE9bits 3999                             _ring_buf1 0280  
                           _ring_buf2 0300                              _PIR1bits 39A1  
                            _PIR2bits 39A2                              _SPI1BAUD 3D19  
                            _PIR4bits 39A4                              _SPI1CON0 3D14  
                            _SPI1CON1 3D15                              _SPI1CON2 3D16  
                            _PIR5bits 39A5                              _PIR7bits 39A7  
                            i2u741_48 7694                              i2u741_49 76A8  
                            _PIR8bits 39A8                              i2u743_48 77A4  
                            i2u743_49 77B8                              _PIR9bits 39A9  
                            i2u745_48 77E8                              i2u745_49 77FC  
                           _set_vterm 8092                           _help_button 79C8  
          __end_of_UART1_Transmit_ISR 7BEA                              _TMR5_ISR 724C  
                            _TMR6_ISR 7B90                             _port_data 01AF  
                           _vfpfcnvrt 0000                          _SPI1INTFbits 3D1A  
                       _TMR5_CallBack 800E                    __end_of_check_help 4E10  
                           _start_lcd 8298                         _TMR6_CallBack 7FEA  
            __end_of_UART1_put_buffer 7C66                __end_of_vterm_sequence 2E02  
                 __end_of_UART1_Write 78D2                   __end_of_UART2_Write 7950  
                    _set_display_info 8054                    __end_of_hb_message 758C  
                         _INTCON0bits 3FD2                             copy_data0 59B8  
                           copy_data1 59DE                             copy_data2 5A04  
                           copy_data3 5A26                             copy_data4 5A48  
                           copy_data5 5A6A              _INT0_SetInterruptHandler 7E6E  
              _uart1TxBufferRemaining 0019   __end_of_UART2_SetTxInterruptHandler 7D2E  
         _UART2_SetTxInterruptHandler 7D06                          _uart1RxCount 0016  
            __end_of_UART2_put_buffer 7C3E                          _uart2RxCount 0010  
                            __Hrparam 0000                  __end_of_run_checksum 7F5A  
                            __Lrparam 0000                         _wait_lcd_done 8124  
                        _send_lcd_cmd 7CB6                       _NCO1_Initialize 80EC  
               __end_of_DMA1_DMAA_ISR 825E                     ?_DMA1_DMADCNT_ISR 0043  
         __end_of_eaDogM_WriteCommand 822E                              __pivt0x8 0008  
                  ??_DMA1_DMADCNT_ISR 004F                              __ptext10 2950  
                            __ptext11 7378                              __ptext20 520E  
                            __ptext12 49A6                              __ptext21 4742  
                            __ptext13 7118                              __ptext30 828C  
                            __ptext22 3C6E                              __ptext14 717E  
                            __ptext31 798C                              __ptext23 5842  
                            __ptext15 5556                              __ptext40 5C50  
                            __ptext32 67F2                              __ptext24 60E6  
                            __ptext16 7C66                              __ptext41 7AEE  
                            __ptext33 7C8E                              __ptext25 5EA2  
                            __ptext17 2E02                              __ptext50 826A  
                            __ptext42 8092                              __ptext34 7CB6  
                            __ptext26 70B0                              __ptext18 7892  
                            __ptext51 8272                              __ptext43 81FC  
                            __ptext35 8074                              __ptext27 7F36  
                            __ptext19 229A                              __ptext60 7DCE  
                            __ptext52 758C                              __ptext44 8054  
                            __ptext36 7CDE                              __ptext28 8286  
                            __ptext61 76FC                              __ptext53 73D6  
                            __ptext45 818E                              __ptext37 753C  
                            __ptext29 7950                              __ptext70 71E4  
                            __ptext62 7DF6                              __ptext54 7D06  
                            __ptext46 822E                              __ptext38 8220  
                            __ptext71 75DA                              __ptext63 8140  
                            __ptext55 7D2E                              __ptext47 7740  
                            __ptext39 4BEC                              __ptext80 7626  
                            __ptext72 7E1E                              __ptext64 81A6  
                            __ptext56 72B2                              __ptext48 79C8  
                            __ptext81 7E96                              __ptext73 7E46  
                            __ptext65 81BC                              __ptext57 7D56  
                            __ptext49 7A04                              __ptext90 8298  
                            __ptext82 6202                              __ptext74 7E6E  
                            __ptext66 81E8                              __ptext58 7D7E  
                            __ptext91 6F36                              __ptext83 6704  
                            __ptext75 8108                              __ptext67 6C08  
                            __ptext59 7DA6                              __ptext92 6DFE  
                            __ptext84 7B24                              __ptext76 7434  
                            __ptext68 81D2                              __ptext93 7316  
                            __ptext85 74E8                              __ptext77 7046  
                            __ptext69 80EC                              __ptext94 6614  
                            __ptext86 8124                              __ptext78 823C  
                            __ptext95 6CB0                              __ptext87 748E  
                            __ptext79 8032                              __ptext96 0000  
                            __ptext88 6D58                              __ptext97 396C  
                            __ptext89 8292                              __ptext98 5020  
                            __ptext99 69BE                       _secs_II_message 1BBE  
                    _ringBufS_put_dma 6B5E                    __end_of_m_protocol 2950  
                            _parse_ll 7118                     ?_DMA1_DMASCNT_ISR 0043  
                         _IVTLOCKbits 3FD4             _ADCC_ADI_InterruptHandler 00A4  
                  ??_DMA1_DMASCNT_ISR 004F                              isa$xinst 0000  
                            _spi_link 0087                              _wdtdelay 748E  
          __end_of_UART2_Transmit_ISR 7C16                              _vfprintf 6CB0  
                 secs_gem_state@block 000A                     _UART1_is_rx_ready 828C  
          __end_of_PWM8_LoadDutyValue 7782                           _UART1_Write 7892  
__end_of_INT1_DefaultInterruptHandler 82B0          _INT1_DefaultInterruptHandler 82AE  
                         _UART2_Write 7912                     _UART1_is_tx_ready 8280  
                     r_protocol@retry 0053                     t_protocol@requeue 000B  
   __end_of_MyeaDogM_WriteStringAtPos 6316                         ??_Default_ISR 0049  
                  __end_of_r_protocol 327A                           _uart1RxHead 0018  
                         _uart1TxHead 001B                           _uart2RxHead 0012  
                         _uart1RxTail 0017                           _NVMCON1bits 39E5  
                 _format_display_text 5842                           _uart2TxHead 0015  
                         _uart1TxTail 001A                           _uart2RxTail 0011  
                         _uart2TxTail 0014                       _D@mconfig$F5154 0700  
                        _wait_lcd_set 8292                    _EXT_INT_Initialize 75DA  
__end_of_TMR6_DefaultInterruptHandler 76FC          _TMR6_DefaultInterruptHandler 76B6  
                  __end_of_t_protocol 396C  __end_of_ADCC_DefaultInterruptHandler 82B4  
        _ADCC_DefaultInterruptHandler 82B2                              intlevel2 0000  
                   _send_lcd_cmd_long 7C8E         __end_of_set_temp_display_help 820E  
          __end_of_eaDogM_WriteString 6DFE                 __end_of_mode_lamp_dim 81A6  
             __end_of_NCO1_Initialize 8108                            _SPI1SCKPPS 3ADE  
                          _SPI1SDIPPS 3ADF             __end_of_UART1_is_rx_ready 8292  
                          _UART1_Read 798C                            _UART2_Read 7950  
                  __end_of_update_lcd 67F2             __end_of_UART1_is_tx_ready 8286  
                   _UART2_is_rx_ready 8286                _uart2TxBufferRemaining 0013  
                   _UART2_is_tx_ready 827A                      _send_lcd_cmd_dma 74E8  
               TMR5_ISR@CountCallBack 0005               __end_of_secs_II_message 229A  
    __end_of_INT1_SetInterruptHandler 7E6E                       t_protocol@block 0093  
                    ??_DMA1_DMAOR_ISR 004F              _UART1_TxInterruptHandler 00A7  
                     t_protocol@retry 000C             __end_of_send_lcd_cmd_long 7CB6  
                 __end_of_Default_ISR 82A6        __end_of_PIN_MANAGER_Initialize 6CB0  
                  __end_of_vterm_dump 5D7E               _eaDogM_WriteStringAtPos 7B24  
                       _get_vterm_ptr 7A7C  
